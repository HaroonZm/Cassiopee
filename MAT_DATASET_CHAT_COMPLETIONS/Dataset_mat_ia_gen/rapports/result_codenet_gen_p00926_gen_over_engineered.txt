================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class MallVisitPlanner:
    class Shop:
        def __init__(self, position: int):
            self.position = position
            self.constraints_before = set()
            self.constraints_after = set()

    class Constraint:
        def __init__(self, before_shop: int, after_shop: int):
            self.before_shop = before_shop
            self.after_shop = after_shop

    class DependencyGraph:
        def __init__(self, n):
            self.n = n
            self.adj = [[] for _ in range(n+2)]  # 1-based indexing, node 0 unused, node n+1 is exit
            self.in_degree = [0]*(n+2)

        def add_edge(self, u, v):
            self.adj[u].append(v)
            self.in_degree[v] += 1

        # Find strongly connected components to detect cycles
        def strongly_connected_components(self):
            index = 0
            stack = []
            on_stack = [False]*(self.n+2)
            indices = [-1]*(self.n+2)
            lowlink = [-1]*(self.n+2)
            sccs = []

            def strongconnect(v):
                nonlocal index
                indices[v] = index
                lowlink[v] = index
                index += 1
                stack.append(v)
                on_stack[v] = True
                for w in self.adj[v]:
                    if indices[w] == -1:
                        strongconnect(w)
                        lowlink[v] = min(lowlink[v], lowlink[w])
                    elif on_stack[w]:
                        lowlink[v] = min(lowlink[v], indices[w])
                if lowlink[v] == indices[v]:
                    scc = []
                    while True:
                        w = stack.pop()
                        on_stack[w] = False
                        scc.append(w)
                        if w == v:
                            break
                    sccs.append(scc)

            for v in range(1, self.n+1):
                if indices[v] == -1:
                    strongconnect(v)
            return sccs

    class MinimalWalkCalculator:
        def __init__(self, n, constraints):
            self.n = n
            self.constraints = constraints
            self.graph = MallVisitPlanner.DependencyGraph(n)

            # Build graph edges from constraints
            for c, d in constraints:
                # According to problem, must visit shop c after shop d
                # means c after d => edge d->c
                self.graph.add_edge(d, c)

        def find_minimal_length(self):
            # If no constraints, minimal length is entrance(0) to exit(N+1)
            # which is N+1 walking units
            if not self.constraints:
                return self.n + 1

            # We want to find a visiting order that respects d->c edges
            # and find minimal walking distance from entrance(0) → shops → exit(N+1).

            # The problem reduces to: given partial order constraints (d->c),
            # find a visiting sequence covering all shops and respecting constraints
            # minimizing walking distance from 0 to visit all shops in order and exit at n+1

            # Key insight: In absence of constraints, visit shops in order 1..n (distance n+1).
            # With constraints, she might have to return backward to fulfill them.

            # The minimal walking length is equivalent to the sum of:
            # distance from entrance(0) to first visited shop,
            # plus sum of distances between successive shops,
            # plus distance from last visited shop to exit(n+1).

            # Given positions shop k is at k units, and exit at n+1,
            # the cost equals to the length of the minimal path covering shops in order that respects constraints.

            # Let's analyze constraints:
            # If there is a chain d1->c1, c1->c2, etc,
            # user must visit them in that order, which might force backtracking.

            # Approach:
            # The shortest path that respects constraints is the minimal length interval [L,R] covering all shops
            # such that all shops with constraints are visited inside [L,R],
            # and order respects the constraints.

            # However, for arbitrary constraints, minimal length could be computed with DP over intervals after topological sort.

            # To handle this sophisticatedly, I'll build a partial order graph and find longest paths DAG to determine minimal walking.

            # Step 1: Detect cycles, which are impossible per problem statement.
            sccs = self.graph.strongly_connected_components()
            for scc in sccs:
                if len(scc) > 1:
                    raise RuntimeError("Cycles detected in constraints - no valid visiting order")

            # Step 2: Topological sort
            from collections import deque
            q = deque()
            in_degree = self.graph.in_degree[:]
            for i in range(1, self.n+1):
                if in_degree[i] == 0:
                    q.append(i)
            topo = []
            while q:
                u = q.popleft()
                topo.append(u)
                for w in self.graph.adj[u]:
                    in_degree[w] -= 1
                    if in_degree[w] == 0:
                        q.append(w)

            if len(topo) < self.n:
                raise RuntimeError("Impossible to find topological order")

            # Step 3: On this topological order, compute "minimum and maximum possible positions" of shops in visiting order
            # Key observation from problem statement: If c must be visited after d, and c > d:
            # she must pass shop d before reaching c, but must return back to d after c, increments walking distance.
            # The minimal cost is travel from entrance(0) to max visited position in order, plus traverse shops in order respecting constraints,
            # plus return from max position to exit(n+1).

            # The problem essentially requires summing (max position - min position + 1) plus the distance entrance to min and max to exit.

            # Let's find intervals induced by constraints and merge them.

            # Initialize intervals as singletons:
            intervals = [[i, i] for i in range(self.n+2)]  # 0..n+1, 0=entrance, n+1=exit

            # We'll union intervals for shops connected by constraints to identify continuous segments required.

            parent = list(range(self.n+2))
            def find(x):
                while parent[x] != x:
                    parent[x] = parent[parent[x]]
                    x = parent[x]
                return x
            def union(a,b):
                ra, rb = find(a), find(b)
                if ra != rb:
                    # merge intervals
                    intervals[ra][0] = min(intervals[ra][0], intervals[rb][0])
                    intervals[ra][1] = max(intervals[ra][1], intervals[rb][1])
                    parent[rb] = ra

            # For each constraint edge d->c, union their intervals
            for d, c in self.constraints:
                union(d,c)

            # Find min and max shop position over all intervals involving constrained shops
            constrained_roots = set(find(c) for c, _ in self.constraints) | set(find(d) for _, d in self.constraints)

            # The minimal path must span the minimal minPos and maximal maxPos of these intervals plus entrance and exit.

            # If no constraints, intervals is empty => minimal length = n+1

            if not constrained_roots:
                return self.n + 1

            min_pos = self.n+1
            max_pos = 0
            for r in constrained_roots:
                min_pos = min(min_pos, intervals[r][0])
                max_pos = max(max_pos, intervals[r][1])

            # Minimal length travel:
            # start at 0,
            # walk to min_pos,
            # cover segment min_pos to max_pos and back if needed,
            # then exit at n+1

            # The cost is (min_pos - 0) + (max_pos - min_pos)*2 + (n+1 - max_pos)
            # The (max_pos - min_pos)*2 because she may have to go back and forth within that interval if constraints force visiting order backwards

            # However, checking samples for edge cases:
            # Sometimes it's better to just walk straight 0->n+1 if constraints empty.

            # Return calculated value:
            return (min_pos - 0) + 2 * (max_pos - min_pos) + (self.n + 1 - max_pos)

    def __init__(self, n, m, constraints):
        self.n = n
        self.m = m
        self.constraints = constraints
        self.calculator = MallVisitPlanner.MinimalWalkCalculator(n, constraints)

    def solve(self):
        return self.calculator.find_minimal_length()


def main():
    import sys
    input = sys.stdin.readline
    n, m = map(int, input().split())
    constraints = [tuple(map(int, input().split())) for _ in range(m)]
    planner = MallVisitPlanner(n, m, constraints)
    print(planner.solve())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Mall' (ID: 34192)
  → Token d'amorce (pas de prédiction)

Token 2: 'Visit' (ID: 30514)
  → Token d'amorce (pas de prédiction)

Token 3: 'Planner' (ID: 120933)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4571318030357361
    2. '(' → logprob: -1.5821318626403809
    3. '{' → logprob: -1.8321318626403809
    4. ' {' → logprob: -7.332131862640381
    5. '.' → logprob: -7.832131862640381
    6. '```' → logprob: -9.457131385803223
    7. '(:' → logprob: -9.582131385803223
    8. '({' → logprob: -10.957131385803223
    9. ' :' → logprob: -11.332131385803223
    10. '():' → logprob: -11.582131385803223

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.443695068359375
    2. '(' → logprob: -1.693695068359375
    3. '{' → logprob: -1.818695068359375
    4. '.' → logprob: -4.568695068359375
    5. ' {' → logprob: -6.443695068359375
    6. '(:' → logprob: -9.568695068359375
    7. '```' → logprob: -9.943695068359375
    8. '[' → logprob: -10.193695068359375
    9. ' ' → logprob: -10.318695068359375
    10. '({' → logprob: -10.943695068359375

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7051496505737305
    2. '(' → logprob: -1.2051496505737305
    3. '   ' → logprob: -1.9551496505737305
    4. '.' → logprob: -3.5801496505737305
    5. '```' → logprob: -3.7051496505737305
    6. '(
' → logprob: -5.9551496505737305
    7. ''' → logprob: -6.0801496505737305
    8. '\' → logprob: -6.8301496505737305
    9. '()' → logprob: -6.9551496505737305
    10. ' ' → logprob: -7.0801496505737305

Token 6: ' class' (ID: 744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36243122816085815
    2. '    ' → logprob: -1.612431287765503
    3. '   ' → logprob: -2.862431287765503
    4. ' 
' → logprob: -4.237431049346924
    5. '    
' → logprob: -4.487431049346924
    6. ' def' → logprob: -4.862431049346924
    7. '     
' → logprob: -5.737431049346924
    8. '```' → logprob: -6.112431049346924
    9. '       ' → logprob: -6.737431049346924
    10. '  ' → logprob: -7.112431049346924

Token 7: ' Shop' (ID: 15818)
  Prédit: ' Visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Visit' → logprob: -1.0011389255523682
    2. '   ' → logprob: -1.5011389255523682
    3. ' ' → logprob: -2.001138925552368
    4. ' Visitor' → logprob: -2.751138925552368
    5. '    ' → logprob: -3.126138925552368
    6. 'Visit' → logprob: -3.626138925552368
    7. ' Planner' → logprob: -3.626138925552368
    8. 'Visitor' → logprob: -3.626138925552368
    9. ':' → logprob: -4.001138687133789
    10. '  ' → logprob: -4.251138687133789

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15273070335388184
    2. '(' → logprob: -2.027730703353882
    3. 's' → logprob: -5.527730941772461
    4. ' :' → logprob: -6.902730941772461
    5. '[' → logprob: -7.027730941772461
    6. '.' → logprob: -7.652730941772461
    7. '   ' → logprob: -7.652730941772461
    8. 'S' → logprob: -7.652730941772461
    9. ' (' → logprob: -7.902730941772461
    10. '```' → logprob: -8.527730941772461

Token 9: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13697880506515503
    2. ':' → logprob: -2.3869788646698
    3. '   ' → logprob: -4.261978626251221
    4. '       ' → logprob: -4.636978626251221
    5. '<|end|>' → logprob: -5.636978626251221
    6. '    ' → logprob: -6.261978626251221
    7. '(object' → logprob: -6.386978626251221
    8. '\' → logprob: -7.261978626251221
    9. ' (' → logprob: -7.511978626251221
    10. ')' → logprob: -7.511978626251221

Token 10: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2822047472000122
    2. '       ' → logprob: -2.0322046279907227
    3. '(' → logprob: -3.6572046279907227
    4. 'pass' → logprob: -4.282204627990723
    5. 'def' (adapté à ' def') → logprob: -4.532204627990723
    6. '               ' → logprob: -4.782204627990723
    7. ' (' → logprob: -4.907204627990723
    8. '```' → logprob: -4.907204627990723
    9. ' pass' → logprob: -5.032204627990723
    10. '   ' → logprob: -5.157204627990723

Token 11: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0004870378761552274
    2. '__' → logprob: -8.000487327575684
    3. ' ' → logprob: -10.000487327575684
    4. ' init' → logprob: -10.000487327575684
    5. '_init' → logprob: -10.500487327575684
    6. ' _' → logprob: -11.125487327575684
    7. '_' → logprob: -11.625487327575684
    8. 'init' → logprob: -12.875487327575684
    9. ' ' → logprob: -13.000487327575684
    10. ' visit' → logprob: -13.625487327575684

Token 12: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4378848391061183e-05
    2. 'ini' → logprob: -11.875014305114746
    3. ' init' → logprob: -12.500014305114746
    4. '_init' → logprob: -12.875014305114746
    5. 'in' → logprob: -15.000014305114746
    6. '	init' → logprob: -15.125014305114746
    7. 'int' → logprob: -15.500014305114746
    8. 'inite' → logprob: -15.625014305114746
    9. 'inti' → logprob: -17.125015258789062
    10. 'i' → logprob: -17.125015258789062

Token 13: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.027514595538377762
    2. '__' → logprob: -3.652514696121216
    3. '__(
' → logprob: -7.027514457702637
    4. '(' → logprob: -8.652514457702637
    5. '(self' → logprob: -9.777514457702637
    6. '__('' → logprob: -10.277514457702637
    7. '__((' → logprob: -10.652514457702637
    8. '_' → logprob: -11.527514457702637
    9. '__(*' → logprob: -11.652514457702637
    10. '_(' → logprob: -11.902514457702637

Token 14: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020597830414772034
    2. ' self' → logprob: -3.8955979347229004
    3. 'name' → logprob: -10.145597457885742
    4. ')' → logprob: -11.645597457885742
    5. '       ' → logprob: -12.895597457885742
    6. '(self' → logprob: -13.270597457885742
    7. ' name' → logprob: -13.395597457885742
    8. '           ' → logprob: -15.270597457885742
    9. ' )' → logprob: -15.270597457885742
    10. 'shop' → logprob: -15.270597457885742

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12082627415657043
    2. 'self' → logprob: -2.370826244354248
    3. '(self' → logprob: -4.745826244354248
    4. ' ,' → logprob: -4.870826244354248
    5. ' self' → logprob: -6.370826244354248
    6. ',self' → logprob: -6.495826244354248
    7. ')' → logprob: -7.745826244354248
    8. '_self' → logprob: -8.870826721191406
    9. '(' → logprob: -9.870826721191406
    10. 's' → logprob: -10.495826721191406

Token 16: ' position' (ID: 4010)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.7997829914093018
    2. ' self' → logprob: -1.2997829914093018
    3. 'self' → logprob: -1.9247829914093018
    4. 'name' → logprob: -2.0497829914093018
    5. ' shop' → logprob: -5.799782752990723
    6. 'shop' → logprob: -8.799782752990723
    7. '       ' → logprob: -10.549782752990723
    8. ' store' → logprob: -11.174782752990723
    9. ' ' → logprob: -11.424782752990723
    10. ' visit' → logprob: -11.549782752990723

Token 17: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08064529299736023
    2. '):' → logprob: -2.5806453227996826
    3. '=' → logprob: -7.0806450843811035
    4. ')' → logprob: -7.4556450843811035
    5. ':' → logprob: -8.955645561218262
    6. ' ,' → logprob: -9.330645561218262
    7. '):
' → logprob: -9.830645561218262
    8. '<|end|>' → logprob: -11.830645561218262
    9. '<|end|>' → logprob: -12.205645561218262
    10. ' ):' → logprob: -12.205645561218262

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25441184639930725
    2. 'int' → logprob: -1.5044118165969849
    3. '(int' → logprob: -6.754411697387695
    4. '[int' → logprob: -8.254411697387695
    5. ':int' → logprob: -8.379411697387695
    6. ' (' → logprob: -8.504411697387695
    7. ' ' → logprob: -8.879411697387695
    8. '=int' → logprob: -9.129411697387695
    9. ')' → logprob: -9.879411697387695
    10. ',int' → logprob: -10.004411697387695

Token 19: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034743573516607285
    2. '):' → logprob: -3.409743547439575
    3. ')' → logprob: -7.034743785858154
    4. ' ,' → logprob: -9.034743309020996
    5. '):
' → logprob: -10.409743309020996
    6. '       ' → logprob: -10.909743309020996
    7. '),' → logprob: -11.534743309020996
    8. '<|end|>' → logprob: -11.659743309020996
    9. ',int' → logprob: -11.909743309020996
    10. '```' → logprob: -12.409743309020996

Token 20: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9490144848823547
    2. ',' → logprob: -1.44901442527771
    3. '           ' → logprob: -1.57401442527771
    4. ')' → logprob: -2.32401442527771
    5. ' ,' → logprob: -3.57401442527771
    6. '       ' → logprob: -4.449014663696289
    7. ' ):' → logprob: -4.949014663696289
    8. 'position' → logprob: -5.199014663696289
    9. 'self' → logprob: -5.324014663696289
    10. '<|end|>' → logprob: -5.449014663696289

Token 21: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3591870069503784
    2. 'self' (adapté à ' self') → logprob: -1.3591870069503784
    3. '           ' → logprob: -3.609187126159668
    4. '               ' → logprob: -4.109187126159668
    5. ' ' → logprob: -7.984187126159668
    6. 'position' → logprob: -8.359187126159668
    7. ' position' → logprob: -8.359187126159668
    8. '            ' → logprob: -8.734187126159668
    9. ' super' → logprob: -9.109187126159668
    10. '   ' → logprob: -9.234187126159668

Token 22: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.22601188719272614
    2. '.' → logprob: -1.601011872291565
    3. 'position' → logprob: -7.601011753082275
    4. '.pos' → logprob: -11.351012229919434
    5. '._' → logprob: -11.476012229919434
    6. '.positions' → logprob: -11.476012229919434
    7. ' .' → logprob: -11.726012229919434
    8. '.name' → logprob: -12.101012229919434
    9. '.location' → logprob: -12.226012229919434
    10. '.current' → logprob: -12.476012229919434

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07918752729892731
    2. '=' → logprob: -2.5791876316070557
    3. '<|end|>' → logprob: -8.829187393188477
    4. ')' → logprob: -9.454187393188477
    5. ' ' → logprob: -10.204187393188477
    6. '<|end|>' → logprob: -10.829187393188477
    7. ':' → logprob: -12.704187393188477
    8. '_' → logprob: -12.954187393188477
    9. ' =
' → logprob: -13.579187393188477
    10. '.' → logprob: -13.704187393188477

Token 24: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.07889694720506668
    2. 'position' → logprob: -2.578896999359131
    3. '	position' → logprob: -12.578896522521973
    4. '0' → logprob: -13.453896522521973
    5. '(position' → logprob: -13.953896522521973
    6. '[position' → logprob: -14.203896522521973
    7. ' ' → logprob: -15.203896522521973
    8. '.position' → logprob: -15.828896522521973
    9. ' ' → logprob: -15.953896522521973
    10. '1' → logprob: -17.20389747619629

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5267568826675415
    2. '<|end|>' → logprob: -1.1517568826675415
    3. '       ' → logprob: -3.526756763458252
    4. '    
' → logprob: -4.276756763458252
    5. '\n' → logprob: -4.401756763458252
    6. '```' → logprob: -4.526756763458252
    7. '<|end|>' → logprob: -4.901756763458252
    8. '   ' → logprob: -5.401756763458252
    9. '\' → logprob: -5.651756763458252
    10. 'newline' → logprob: -5.901756763458252

Token 27: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '.constraints' (ID: 62986)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0779188722372055
    2. '.' → logprob: -4.077919006347656
    3. '.items' → logprob: -4.702919006347656
    4. '.is' → logprob: -4.827919006347656
    5. '._' → logprob: -5.077919006347656
    6. '.visit' → logprob: -5.077919006347656
    7. ' .' → logprob: -5.452919006347656
    8. '.custom' → logprob: -5.827919006347656
    9. '.products' → logprob: -6.202919006347656
    10. '.next' → logprob: -6.452919006347656

Token 29: '_before' (ID: 56638)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006831637118011713
    2. '=' → logprob: -5.006831645965576
    3. '=[]' → logprob: -9.631831169128418
    4. 's' → logprob: -11.881831169128418
    5. ' ' → logprob: -12.006831169128418
    6. '_' → logprob: -12.131831169128418
    7. '_constraints' → logprob: -12.256831169128418
    8. ':' → logprob: -12.381831169128418
    9. '.' → logprob: -12.756831169128418
    10. '.append' → logprob: -12.881831169128418

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011147680692374706
    2. '=' → logprob: -4.511147499084473
    3. '=[]' → logprob: -9.761147499084473
    4. ':' → logprob: -10.886147499084473
    5. '_' → logprob: -12.136147499084473
    6. ' ' → logprob: -13.261147499084473
    7. ',' → logprob: -13.386147499084473
    8. '<|end|>' → logprob: -13.386147499084473
    9. '_positions' → logprob: -13.636147499084473
    10. ')' → logprob: -14.011147499084473

Token 31: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.13705459237098694
    2. ' set' → logprob: -2.387054681777954
    3. '[]' → logprob: -3.637054681777954
    4. 'set' → logprob: -4.637054443359375
    5. ' ' → logprob: -8.887054443359375
    6. '[' → logprob: -12.262054443359375
    7. '[]}' → logprob: -12.262054443359375
    8. ' None' → logprob: -12.887054443359375
    9. ' {}' → logprob: -13.262054443359375
    10. '  ' → logprob: -13.512054443359375

Token 32: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009893381036818027
    2. '(' → logprob: -4.634893417358398
    3. '()
' → logprob: -10.134893417358398
    4. '(),' → logprob: -10.634893417358398
    5. '().' → logprob: -11.009893417358398
    6. '()]' → logprob: -11.884893417358398
    7. '();' → logprob: -12.134893417358398
    8. '()\' → logprob: -12.259893417358398
    9. '()

' → logprob: -12.509893417358398
    10. '({' → logprob: -12.509893417358398

Token 33: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1746489703655243
    2. '           ' → logprob: -2.0496490001678467
    3. 'self' (adapté à ' self') → logprob: -3.7996490001678467
    4. 'def' → logprob: -5.799648761749268
    5. '   ' → logprob: -6.174648761749268
    6. '
' → logprob: -6.799648761749268
    7. '        
' → logprob: -7.049648761749268
    8. '            
' → logprob: -7.924648761749268
    9. '    
' → logprob: -7.924648761749268
    10. ' self' → logprob: -8.049649238586426

Token 35: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.0034526491072028875
    2. '.' → logprob: -5.878452777862549
    3. '.constraint' → logprob: -8.25345230102539
    4. '_constraints' → logprob: -8.75345230102539
    5. 'constraints' → logprob: -9.25345230102539
    6. ' .' → logprob: -9.62845230102539
    7. '.con' → logprob: -10.75345230102539
    8. 'Constraints' → logprob: -11.87845230102539
    9. '.cons' → logprob: -12.00345230102539
    10. '.vis' → logprob: -12.75345230102539

Token 36: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.00572057394310832
    2. '_before' → logprob: -5.255720615386963
    3. '_' → logprob: -8.630720138549805
    4. '_af' → logprob: -8.630720138549805
    5. '_a' → logprob: -9.630720138549805
    6. '_between' → logprob: -11.505720138549805
    7. '_prior' → logprob: -11.630720138549805
    8. ' =' → logprob: -12.380720138549805
    9. '_follow' → logprob: -12.505720138549805
    10. '_next' → logprob: -12.505720138549805

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004085047636181116
    2. '=' → logprob: -5.504085063934326
    3. ' ' → logprob: -12.379084587097168
    4. '<|end|>' → logprob: -14.004084587097168
    5. '   ' → logprob: -14.629084587097168
    6. '=set' → logprob: -15.004084587097168
    7. ':' → logprob: -15.629084587097168
    8. '  ' → logprob: -15.754084587097168
    9. ' =
' → logprob: -16.004085540771484
    10. '    ' → logprob: -16.254085540771484

Token 38: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.1797770857810974
    2. 'set' → logprob: -1.8047771453857422
    3. ' ' → logprob: -11.304777145385742
    4. '	set' → logprob: -11.929777145385742
    5. '   ' → logprob: -12.929777145385742
    6. '(set' → logprob: -13.054777145385742
    7. '{' → logprob: -13.054777145385742
    8. '{}' → logprob: -13.179777145385742
    9. ' ' → logprob: -13.804777145385742
    10. '=set' → logprob: -13.929777145385742

Token 39: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.120656132698059
    2. '       ' → logprob: -1.245656132698059
    3. '<|end|>' → logprob: -1.495656132698059
    4. '   ' → logprob: -2.2456560134887695
    5. '    
' → logprob: -4.2456560134887695
    6. '        
' → logprob: -4.3706560134887695
    7. '<|end|>' → logprob: -4.8706560134887695
    8. 'def' → logprob: -5.3706560134887695
    9. '```' → logprob: -5.3706560134887695
    10. 'newline' → logprob: -6.1206560134887695

Token 41: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9764490127563477
    2. '
' → logprob: -1.2264490127563477
    3. '       ' → logprob: -1.8514490127563477
    4. 'def' → logprob: -2.9764490127563477
    5. '    
' → logprob: -3.3514490127563477
    6. '<|end|>' → logprob: -3.3514490127563477
    7. '        
' → logprob: -4.101449012756348
    8. '    ' → logprob: -4.226449012756348
    9. ' def' → logprob: -5.351449012756348
    10. '```' → logprob: -5.601449012756348

Token 42: ' Constraint' (ID: 86056)
  Prédit: ' Shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Shop' → logprob: -0.4304542541503906
    2. ' Customer' → logprob: -2.1804542541503906
    3. ' Path' → logprob: -3.4304542541503906
    4. ' Visitor' → logprob: -3.4304542541503906
    5. ' Shopper' → logprob: -3.4304542541503906
    6. ' Visit' → logprob: -3.5554542541503906
    7. ' Mall' → logprob: -3.6804542541503906
    8. ' Person' → logprob: -3.8054542541503906
    9. ' Constraint' → logprob: -4.180454254150391
    10. ' Node' → logprob: -4.930454254150391

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023917861108202487
    2. ':
' → logprob: -9.250239372253418
    3. '(' → logprob: -9.875239372253418
    4. '):' → logprob: -10.625239372253418
    5. '<|end|>' → logprob: -10.625239372253418
    6. '(object' → logprob: -11.000239372253418
    7. ' :' → logprob: -11.375239372253418
    8. '():' → logprob: -12.750239372253418
    9. '>:' → logprob: -12.875239372253418
    10. ':**' → logprob: -13.625239372253418

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0977996289730072
    2. '(' → logprob: -2.84779953956604
    3. '   ' → logprob: -4.722799777984619
    4. ':' → logprob: -4.972799777984619
    5. '<|end|>' → logprob: -4.972799777984619
    6. ':
' → logprob: -5.347799777984619
    7. ' (' → logprob: -5.847799777984619
    8. '(n' → logprob: -7.222799777984619
    9. '(object' → logprob: -7.347799777984619
    10. 'def' → logprob: -7.347799777984619

Token 45: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5771685242652893
    2. ' def' → logprob: -0.8271685242652893
    3. '       ' → logprob: -6.8271684646606445
    4. '   ' → logprob: -9.702168464660645
    5. '	def' → logprob: -10.452168464660645
    6. ' ' → logprob: -10.577168464660645
    7. '    ' → logprob: -12.202168464660645
    8. '        ' → logprob: -12.452168464660645
    9. '           ' → logprob: -12.827168464660645
    10. ':def' → logprob: -12.952168464660645

Token 46: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00019209683523513377
    2. '__' → logprob: -8.625191688537598
    3. 'init' → logprob: -12.375191688537598
    4. ' init' → logprob: -12.375191688537598
    5. '_init' → logprob: -12.875191688537598
    6. ' def' → logprob: -13.625191688537598
    7. ' ' → logprob: -15.500191688537598
    8. 'def' → logprob: -16.125192642211914
    9. '```' → logprob: -17.250192642211914
    10. ' ___' → logprob: -18.125192642211914

Token 47: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.006499243434518576
    2. 'it' → logprob: -5.131499290466309
    3. 'nit' → logprob: -7.881499290466309
    4. 'def' → logprob: -8.756499290466309
    5. 'i' → logprob: -11.131499290466309
    6. '```' → logprob: -11.506499290466309
    7. '   ' → logprob: -13.006499290466309
    8. '_init' → logprob: -13.381499290466309
    9. 'int' → logprob: -13.381499290466309
    10. '__' → logprob: -14.381499290466309

Token 48: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.055191200226545334
    2. '(self' → logprob: -3.4301912784576416
    3. '(' → logprob: -4.4301910400390625
    4. ' (' → logprob: -5.1801910400390625
    5. '__' → logprob: -5.9301910400390625
    6. '__(
' → logprob: -7.6801910400390625
    7. '_(' → logprob: -8.180191040039062
    8. 'self' → logprob: -9.055191040039062
    9. '__((' → logprob: -9.305191040039062
    10. '<|end|>' → logprob: -9.680191040039062

Token 49: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005935432855039835
    2. ' self' → logprob: -5.1309356689453125
    3. '(self' → logprob: -12.255935668945312
    4. ')' → logprob: -14.130935668945312
    5. 'position' → logprob: -14.505935668945312
    6. ',' → logprob: -15.130935668945312
    7. '       ' → logprob: -15.755935668945312
    8. '	self' → logprob: -15.755935668945312
    9. ' ' → logprob: -16.880935668945312
    10. '0' → logprob: -17.255935668945312

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035393708385527134
    2. ' ,' → logprob: -5.753539562225342
    3. 'self' → logprob: -8.253539085388184
    4. 'position' → logprob: -9.878539085388184
    5. '<|end|>' → logprob: -11.003539085388184
    6. ' self' → logprob: -12.003539085388184
    7. '_,' → logprob: -12.378539085388184
    8. '_position' → logprob: -12.628539085388184
    9. '‌,' → logprob: -12.878539085388184
    10. ',self' → logprob: -12.878539085388184

Token 51: ' before' (ID: 2254)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5447131991386414
    2. 'self' → logprob: -1.5447132587432861
    3. ' before' → logprob: -2.419713258743286
    4. ' shop' → logprob: -2.669713258743286
    5. 'shop' → logprob: -4.544713020324707
    6. ' from' → logprob: -4.919713020324707
    7. 'before' → logprob: -5.044713020324707
    8. ' source' → logprob: -5.169713020324707
    9. ' first' → logprob: -5.919713020324707
    10. 'from' → logprob: -6.169713020324707

Token 52: '_shop' (ID: 89558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2900788486003876
    2. '_shop' → logprob: -2.29007887840271
    3. '_' → logprob: -2.54007887840271
    4. '_position' → logprob: -3.16507887840271
    5. ' ,' → logprob: -4.915078639984131
    6. ':' → logprob: -5.040078639984131
    7. '):' → logprob: -5.290078639984131
    8. ')' → logprob: -5.915078639984131
    9. '_,' → logprob: -6.165078639984131
    10. '_pos' → logprob: -6.665078639984131

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20107673108577728
    2. ',' → logprob: -1.9510767459869385
    3. '_id' → logprob: -3.3260767459869385
    4. ' ,' → logprob: -6.451076507568359
    5. '):' → logprob: -6.701076507568359
    6. '_position' → logprob: -7.951076507568359
    7. ':int' → logprob: -8.07607650756836
    8. ' :' → logprob: -8.70107650756836
    9. ')' → logprob: -9.07607650756836
    10. '_index' → logprob: -9.20107650756836

Token 54: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4238934814929962
    2. 'int' → logprob: -1.1738934516906738
    3. ')' → logprob: -4.173893451690674
    4. ' '' → logprob: -5.298893451690674
    5. ' ' → logprob: -5.423893451690674
    6. '<|end|>' → logprob: -5.423893451690674
    7. 'Mall' → logprob: -6.173893451690674
    8. ' Mall' → logprob: -6.548893451690674
    9. ' )' → logprob: -7.423893451690674
    10. '<|end|>' → logprob: -7.548893451690674

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00206687580794096
    2. '):' → logprob: -6.5020670890808105
    3. ' ,' → logprob: -7.5020670890808105
    4. '):
' → logprob: -12.127066612243652
    5. ' ):' → logprob: -13.752066612243652
    6. ')' → logprob: -14.002066612243652
    7. ':' → logprob: -14.002066612243652
    8. ',
' → logprob: -14.002066612243652
    9. '<|end|>' → logprob: -14.252066612243652
    10. '‌,' → logprob: -14.252066612243652

Token 56: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.020578444004058838
    2. 'after' → logprob: -3.895578384399414
    3. ' ' → logprob: -11.270578384399414
    4. ' ' → logprob: -11.645578384399414
    5. '<|end|>' → logprob: -12.770578384399414
    6. ' )' → logprob: -13.270578384399414
    7. ' 
' → logprob: -13.520578384399414
    8. ')' → logprob: -13.520578384399414
    9. '_after' → logprob: -14.020578384399414
    10. ' to' → logprob: -14.020578384399414

Token 57: '_shop' (ID: 89558)
  Prédit: '_shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -0.011231731623411179
    2. '_' → logprob: -5.261231899261475
    3. '_sh' → logprob: -5.511231899261475
    4. '_s' → logprob: -6.386231899261475
    5. ')_' → logprob: -9.636231422424316
    6. ' _' → logprob: -9.761231422424316
    7. '_ship' → logprob: -11.011231422424316
    8. ')' → logprob: -11.136231422424316
    9. '```' → logprob: -11.511231422424316
    10. '_space' → logprob: -11.636231422424316

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0049189734272658825
    2. '):' → logprob: -5.504919052124023
    3. ')' → logprob: -7.629919052124023
    4. ':int' → logprob: -8.754919052124023
    5. ' :' → logprob: -8.879919052124023
    6. '):
' → logprob: -10.754919052124023
    7. ' ):' → logprob: -11.129919052124023
    8. ',' → logprob: -11.379919052124023
    9. '=' → logprob: -13.504919052124023
    10. '<|end|>' → logprob: -13.629919052124023

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16033561527729034
    2. 'int' → logprob: -1.910335659980774
    3. ')' → logprob: -10.535335540771484
    4. ':int' → logprob: -10.660335540771484
    5. ' ' → logprob: -10.910335540771484
    6. '[int' → logprob: -11.785335540771484
    7. '	int' → logprob: -11.910335540771484
    8. '=int' → logprob: -11.910335540771484
    9. ' ' → logprob: -12.285335540771484
    10. ']int' → logprob: -12.410335540771484

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000614028365816921
    2. '):
' → logprob: -7.500614166259766
    3. ' ):' → logprob: -10.875614166259766
    4. ':' → logprob: -11.000614166259766
    5. ')' → logprob: -11.625614166259766
    6. '       ' → logprob: -11.875614166259766
    7. '   ' → logprob: -12.250614166259766
    8. ',' → logprob: -13.000614166259766
    9. '):
' → logprob: -14.250614166259766
    10. '           ' → logprob: -14.750614166259766

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004173729568719864
    2. 'self' → logprob: -6.379173755645752
    3. '               ' → logprob: -6.629173755645752
    4. '       ' → logprob: -7.629173755645752
    5. ' self' → logprob: -8.129173278808594
    6. '<|end|>' → logprob: -8.879173278808594
    7. ')' → logprob: -9.754173278808594
    8. '```' → logprob: -10.129173278808594
    9. '   ' → logprob: -10.754173278808594
    10. ',' → logprob: -10.879173278808594

Token 62: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5779258608818054
    2. ' self' → logprob: -0.8279258608818054
    3. '           ' → logprob: -6.702925682067871
    4. '       ' → logprob: -7.952925682067871
    5. 'super' → logprob: -8.577925682067871
    6. ' super' → logprob: -8.827925682067871
    7. '   ' → logprob: -10.702925682067871
    8. ' ' → logprob: -11.077925682067871
    9. '	self' → logprob: -11.327925682067871
    10. '               ' → logprob: -11.827925682067871

Token 63: '.before' (ID: 88422)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.019098076969385147
    2. '.before' → logprob: -4.144098281860352
    3. ' .' → logprob: -5.894098281860352
    4. 'before' → logprob: -8.769098281860352
    5. '_before' → logprob: -10.394098281860352
    6. ' before' → logprob: -11.144098281860352
    7. '<|end|>' → logprob: -11.144098281860352
    8. ' ' → logprob: -11.644098281860352
    9. 'Before' → logprob: -11.769098281860352
    10. '.user' → logprob: -11.769098281860352

Token 64: '_shop' (ID: 89558)
  Prédit: '_shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -0.004064152017235756
    2. '_sh' → logprob: -6.004064083099365
    3. '_s' → logprob: -7.129064083099365
    4. '_' → logprob: -7.254064083099365
    5. ' _' → logprob: -11.004064559936523
    6. '_store' → logprob: -12.129064559936523
    7. '_ship' → logprob: -12.129064559936523
    8. '_school' → logprob: -12.379064559936523
    9. '<|end|>' → logprob: -12.504064559936523
    10. '```' → logprob: -12.754064559936523

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494231730699539
    2. '=' → logprob: -2.9299423694610596
    3. '<|end|>' → logprob: -10.05494213104248
    4. ' ' → logprob: -11.30494213104248
    5. ')' → logprob: -14.05494213104248
    6. ' =
' → logprob: -14.30494213104248
    7. '    ' → logprob: -14.67994213104248
    8. '   ' → logprob: -14.67994213104248
    9. ' is' → logprob: -14.92994213104248
    10. '<|end|>' → logprob: -15.17994213104248

Token 66: ' before' (ID: 2254)
  Prédit: ' before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.004129453562200069
    2. 'before' → logprob: -5.504129409790039
    3. ' after' → logprob: -10.379129409790039
    4. ' ' → logprob: -11.004129409790039
    5. ' ' → logprob: -13.004129409790039
    6. 'after' → logprob: -14.754129409790039
    7. '	before' → logprob: -14.879129409790039
    8. '_before' → logprob: -16.12912940979004
    9. ' antes' → logprob: -16.37912940979004
    10. '(before' → logprob: -17.12912940979004

Token 67: '_shop' (ID: 89558)
  Prédit: '_shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -4.008129963040119e-06
    2. '_sh' → logprob: -12.750003814697266
    3. '_' → logprob: -14.625003814697266
    4. '_s' → logprob: -15.375003814697266
    5. 'shop' → logprob: -16.000003814697266
    6. '_store' → logprob: -16.500003814697266
    7. '_school' → logprob: -17.375003814697266
    8. 'Shop' → logprob: -17.500003814697266
    9. '_visit' → logprob: -17.500003814697266
    10. ' _' → logprob: -17.750003814697266

Token 68: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01677408628165722
    2. '       ' → logprob: -4.5167741775512695
    3. 'self' → logprob: -5.8917741775512695
    4. '<|end|>' → logprob: -6.7667741775512695
    5. '   ' → logprob: -7.7667741775512695
    6. '               ' → logprob: -8.26677417755127
    7. ' self' → logprob: -8.51677417755127
    8. ' after' → logprob: -8.89177417755127
    9. '
' → logprob: -9.01677417755127
    10. '            ' → logprob: -9.26677417755127

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07296793907880783
    2. 'self' → logprob: -2.697968006134033
    3. ' self' → logprob: -6.072968006134033
    4. '       ' → logprob: -8.072967529296875
    5. '
' → logprob: -8.572967529296875
    6. '   ' → logprob: -9.447967529296875
    7. '<|end|>' → logprob: -10.072967529296875
    8. '               ' → logprob: -10.447967529296875
    9. ' after' → logprob: -11.447967529296875
    10. '.' → logprob: -11.822967529296875

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.056469861418008804
    2. ' self' → logprob: -2.9314699172973633
    3. '           ' → logprob: -6.931469917297363
    4. 'after' → logprob: -7.806469917297363
    5. ' after' → logprob: -8.806469917297363
    6. '               ' → logprob: -11.056469917297363
    7. '   ' → logprob: -11.306469917297363
    8. ' ' → logprob: -11.681469917297363
    9. '            ' → logprob: -12.306469917297363
    10. '       ' → logprob: -12.931469917297363

Token 71: '.after' (ID: 75970)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.396757089532912e-05
    2. '.position' → logprob: -10.6250638961792
    3. '.after' → logprob: -11.1250638961792
    4. ' .' → logprob: -11.3750638961792
    5. '.
' → logprob: -11.5000638961792
    6. '<|end|>' → logprob: -14.2500638961792
    7. 'after' → logprob: -15.1250638961792
    8. '.

' → logprob: -15.1250638961792
    9. 'position' → logprob: -15.3750638961792
    10. '.period' → logprob: -15.3750638961792

Token 72: '_shop' (ID: 89558)
  Prédit: '_shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shop' → logprob: -0.00016277639952022582
    2. '_' → logprob: -9.250163078308105
    3. '_sh' → logprob: -9.875163078308105
    4. '_s' → logprob: -12.000163078308105
    5. ' _' → logprob: -12.375163078308105
    6. '_school' → logprob: -13.625163078308105
    7. '_ship' → logprob: -13.750163078308105
    8. '```' → logprob: -14.250163078308105
    9. 'shop' → logprob: -15.500163078308105
    10. '_chat' → logprob: -15.750163078308105

Token 73: ' =' (ID: 314)
  Prédit: '_shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_shop' → logprob: -2.9160102712921798e-05
    2. '_sh' → logprob: -11.250029563903809
    3. '_' → logprob: -12.125029563903809
    4. '_s' → logprob: -12.625029563903809
    5. 'shop' → logprob: -12.750029563903809
    6. '_school' → logprob: -13.250029563903809
    7. '_store' → logprob: -13.875029563903809
    8. 'Shop' → logprob: -14.750029563903809
    9. ' _' → logprob: -15.000029563903809
    10. '```' → logprob: -15.375029563903809

Token 74: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.4740891754627228
    2. 'after' → logprob: -0.9740891456604004
    3. ' ' → logprob: -12.099089622497559
    4. '(after' → logprob: -12.974089622497559
    5. 'shop' → logprob: -13.599089622497559
    6. 'before' → logprob: -13.974089622497559
    7. ' before' → logprob: -14.724089622497559
    8. '   ' → logprob: -14.849089622497559
    9. ' shop' → logprob: -15.099089622497559
    10. '_after' → logprob: -15.474089622497559

Token 75: '_shop' (ID: 89558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5922319889068604
    2. '_shop' → logprob: -0.8422319889068604
    3. '_s' → logprob: -4.967231750488281
    4. '_sh' → logprob: -5.592231750488281
    5. '_
' → logprob: -6.592231750488281
    6. 's' → logprob: -6.717231750488281
    7. '_

' → logprob: -7.342231750488281
    8. ' _' → logprob: -7.592231750488281
    9. 'r' → logprob: -8.217231750488281
    10. 'Shop' → logprob: -8.592231750488281

Token 76: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06275931000709534
    2. '<|end|>' → logprob: -3.0627593994140625
    3. ' 
' → logprob: -5.1877593994140625
    4. '   ' → logprob: -6.1877593994140625
    5. '    
' → logprob: -6.3127593994140625
    6. '

' → logprob: -7.0627593994140625
    7. '<|end|>' → logprob: -7.0627593994140625
    8. '       ' → logprob: -7.3127593994140625
    9. '\n' → logprob: -7.4377593994140625
    10. '\' → logprob: -7.9377593994140625

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25549814105033875
    2. '
' → logprob: -2.005498170852661
    3. '    
' → logprob: -2.505498170852661
    4. ' 
' → logprob: -5.880497932434082
    5. '        
' → logprob: -6.380497932434082
    6. '       ' → logprob: -6.380497932434082
    7. '<|end|>' → logprob: -7.380497932434082
    8. 'def' → logprob: -7.505497932434082
    9. '    
    
' → logprob: -8.380497932434082
    10. '     
' → logprob: -8.505497932434082

Token 78: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19944217801094055
    2. 'def' → logprob: -1.8244421482086182
    3. ' def' → logprob: -4.949442386627197
    4. '    
' → logprob: -5.824442386627197
    5. '
' → logprob: -5.949442386627197
    6. '       ' → logprob: -6.074442386627197
    7. '    ' → logprob: -6.074442386627197
    8. ' ' → logprob: -7.324442386627197
    9. ' 
' → logprob: -7.824442386627197
    10. 'd' → logprob: -8.074441909790039

Token 79: ' Dependency' (ID: 73162)
  Prédit: ' Shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Shop' → logprob: -1.272398829460144
    2. ' Node' → logprob: -2.1473989486694336
    3. ' Path' → logprob: -2.2723989486694336
    4. ' Graph' → logprob: -2.3973989486694336
    5. ' Shopper' → logprob: -2.3973989486694336
    6. ' Planner' → logprob: -2.5223989486694336
    7. ' Visitor' → logprob: -2.8973989486694336
    8. '_' → logprob: -3.5223989486694336
    9. ' Visit' → logprob: -3.6473989486694336
    10. ' Route' → logprob: -4.147398948669434

Token 80: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.20294594764709473
    2. ':' → logprob: -1.7029459476470947
    3. ':
' → logprob: -7.577945709228516
    4. 'Manager' → logprob: -7.952945709228516
    5. ' graph' → logprob: -9.327945709228516
    6. 'G' → logprob: -9.327945709228516
    7. 'graph' → logprob: -9.702945709228516
    8. 'Resolver' → logprob: -10.077945709228516
    9. 'Analyzer' → logprob: -10.077945709228516
    10. ' Graph' → logprob: -10.202945709228516

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002737330214586109
    2. ':
' → logprob: -8.875273704528809
    3. '(' → logprob: -9.250273704528809
    4. '<|end|>' → logprob: -11.500273704528809
    5. '>:' → logprob: -12.125273704528809
    6. '):' → logprob: -12.250273704528809
    7. '(object' → logprob: -12.375273704528809
    8. ' :' → logprob: -12.375273704528809
    9. '():' → logprob: -12.875273704528809
    10. ':**' → logprob: -13.750273704528809

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17618073523044586
    2. ':' → logprob: -2.426180839538574
    3. ':
' → logprob: -3.301180839538574
    4. '(' → logprob: -4.301180839538574
    5. '   ' → logprob: -4.676180839538574
    6. '(n' → logprob: -5.301180839538574
    7. '<|end|>' → logprob: -6.301180839538574
    8. '
' → logprob: -6.801180839538574
    9. '    
' → logprob: -6.926180839538574
    10. '    ' → logprob: -7.051180839538574

Token 83: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1579369604587555
    2. 'def' (adapté à ' def') → logprob: -2.7829370498657227
    3. '        ' → logprob: -3.1579370498657227
    4. '    ' → logprob: -4.032937049865723
    5. ' ' → logprob: -4.657937049865723
    6. '       ' → logprob: -4.657937049865723
    7. '   ' → logprob: -6.407937049865723
    8. '        
' → logprob: -6.782937049865723
    9. ' 
' → logprob: -7.782937049865723
    10. '    
' → logprob: -8.282937049865723

Token 84: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00206223432905972
    2. ' ' → logprob: -6.8770623207092285
    3. ' ' → logprob: -7.6270623207092285
    4. ' init' → logprob: -8.37706184387207
    5. 'init' → logprob: -9.25206184387207
    6. '_init' → logprob: -9.50206184387207
    7. ' ‌' → logprob: -10.37706184387207
    8. ' def' → logprob: -10.62706184387207
    9. ' _' → logprob: -10.75206184387207
    10. '  ' → logprob: -11.25206184387207

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00433979881927371
    2. 'Init' → logprob: -6.504339694976807
    3. ' init' → logprob: -7.254339694976807
    4. '   ' → logprob: -7.504339694976807
    5. 'it' → logprob: -7.879339694976807
    6. 'def' → logprob: -8.379340171813965
    7. 'I' → logprob: -8.504340171813965
    8. 'In' → logprob: -9.254340171813965
    9. ' __' → logprob: -9.379340171813965
    10. ' def' → logprob: -9.379340171813965

Token 86: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04101350158452988
    2. '(self' → logprob: -3.291013479232788
    3. ' (' → logprob: -6.166013717651367
    4. '<|end|>' → logprob: -8.166013717651367
    5. ')(' → logprob: -8.416013717651367
    6. '__(' → logprob: -8.666013717651367
    7. ' ' → logprob: -9.541013717651367
    8. '_(' → logprob: -10.416013717651367
    9. '(s' → logprob: -10.791013717651367
    10. '(
' → logprob: -11.041013717651367

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007126657757908106
    2. ' self' → logprob: -5.007126808166504
    3. ')' → logprob: -7.882126808166504
    4. '):
' → logprob: -11.257126808166504
    5. '	self' → logprob: -11.632126808166504
    6. ' )' → logprob: -12.507126808166504
    7. '_self' → logprob: -12.882126808166504
    8. ' ' → logprob: -13.757126808166504
    9. '(self' → logprob: -13.882126808166504
    10. '):

' → logprob: -14.257126808166504

Token 88: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7580004334449768
    2. ' ):' → logprob: -0.7580004334449768
    3. ',' → logprob: -2.883000373840332
    4. ' ,' → logprob: -5.883000373840332
    5. ' )' → logprob: -6.383000373840332
    6. ')' → logprob: -6.508000373840332
    7. ' ' → logprob: -7.758000373840332
    8. '):
' → logprob: -8.758000373840332
    9. 'self' → logprob: -9.133000373840332
    10. ' ):
' → logprob: -10.383000373840332

Token 89: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11109554022550583
    2. 'self' → logprob: -2.611095428466797
    3. ' shops' → logprob: -3.986095428466797
    4. ' )' → logprob: -5.361095428466797
    5. ')' → logprob: -6.361095428466797
    6. ' ):
' → logprob: -6.611095428466797
    7. ' visits' → logprob: -6.986095428466797
    8. '):
' → logprob: -7.111095428466797
    9. ' ):' → logprob: -7.236095428466797
    10. 'shops' → logprob: -7.361095428466797

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03988983482122421
    2. ')' → logprob: -4.164889812469482
    3. '_' → logprob: -4.539889812469482
    4. ' ):' → logprob: -5.164889812469482
    5. '_sh' → logprob: -5.289889812469482
    6. '):
' → logprob: -7.164889812469482
    7. ':' → logprob: -7.289889812469482
    8. ',' → logprob: -8.28989028930664
    9. '_s' → logprob: -8.78989028930664
    10. ' )' → logprob: -8.78989028930664

Token 91: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6410440802574158
    2. '):' → logprob: -0.7660440802574158
    3. '):
' → logprob: -5.6410441398620605
    4. '       ' → logprob: -6.0160441398620605
    5. ',' → logprob: -6.7660441398620605
    6. ' :' → logprob: -7.3910441398620605
    7. ')' → logprob: -8.391043663024902
    8. '   ' → logprob: -8.891043663024902
    9. '():' → logprob: -9.641043663024902
    10. ':
' → logprob: -9.891043663024902

Token 92: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17997057735919952
    2. 'self' (adapté à ' self') → logprob: -1.804970622062683
    3. ' []' → logprob: -9.179970741271973
    4. '[]' → logprob: -10.179970741271973
    5. ' ' → logprob: -11.304970741271973
    6. ' ' → logprob: -11.304970741271973
    7. '	self' → logprob: -11.679970741271973
    8. ' [' → logprob: -11.804970741271973
    9. '[self' → logprob: -11.929970741271973
    10. 'n' → logprob: -12.179970741271973

Token 93: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10164595395326614
    2. ' .' → logprob: -2.6016459465026855
    3. '.n' → logprob: -4.7266459465026855
    4. '._' → logprob: -5.3516459465026855
    5. ' =' → logprob: -6.7266459465026855
    6. '.graph' → logprob: -7.1016459465026855
    7. '.s' → logprob: -7.2266459465026855
    8. ' ' → logprob: -7.2266459465026855
    9. '.nodes' → logprob: -7.3516459465026855
    10. '.positions' → logprob: -7.7266459465026855

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016185808926820755
    2. '=' → logprob: -4.141185760498047
    3. ' ' → logprob: -8.891185760498047
    4. '<|end|>' → logprob: -12.141185760498047
    5. '  ' → logprob: -12.516185760498047
    6. ' =
' → logprob: -12.641185760498047
    7. ',' → logprob: -14.016185760498047
    8. ')' → logprob: -15.016185760498047
    9. ' =)' → logprob: -15.641185760498047
    10. '=int' → logprob: -16.516185760498047

Token 95: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.001948152668774128
    2. 'n' → logprob: -6.251948356628418
    3. ' ' → logprob: -10.876948356628418
    4. '	n' → logprob: -14.251948356628418
    5. ' ' → logprob: -16.8769474029541
    6. ' н' → logprob: -17.1269474029541
    7. '<|end|>' → logprob: -17.6269474029541
    8. ' 
' → logprob: -18.3769474029541
    9. ')n' → logprob: -19.1269474029541
    10. ' ‌' → logprob: -19.2519474029541

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06878217309713364
    2. '<|end|>' → logprob: -3.193782091140747
    3. '       ' → logprob: -5.193782329559326
    4. '        ' → logprob: -5.318782329559326
    5. ',' → logprob: -5.568782329559326
    6. '        
' → logprob: -5.818782329559326
    7. '  
' → logprob: -6.193782329559326
    8. '           ' → logprob: -6.318782329559326
    9. '               ' → logprob: -7.068782329559326
    10. '<|end|>' → logprob: -7.068782329559326

Token 97: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4162583351135254
    2. '       ' → logprob: -1.9162583351135254
    3. '<|end|>' → logprob: -1.9162583351135254
    4. '        ' → logprob: -4.166258335113525
    5. '        
' → logprob: -4.291258335113525
    6. ',' → logprob: -5.541258335113525
    7. '           ' → logprob: -5.916258335113525
    8. '<|end|>' → logprob: -6.041258335113525
    9. '  
' → logprob: -6.291258335113525
    10. ' 
' → logprob: -6.916258335113525

Token 98: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.28274938464164734
    2. ' self' → logprob: -1.4077494144439697
    3. '           ' → logprob: -7.782749176025391
    4. ' 
' → logprob: -7.907749176025391
    5. '       ' → logprob: -8.15774917602539
    6. '        ' → logprob: -8.53274917602539
    7. '
' → logprob: -8.90774917602539
    8. ' ' → logprob: -10.40774917602539
    9. 's' → logprob: -10.53274917602539
    10. '	self' → logprob: -10.90774917602539

Token 99: '.ad' (ID: 19775)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2186773121356964
    2. ' ' → logprob: -3.093677282333374
    3. ' adjacency' → logprob: -3.468677282333374
    4. ' =' → logprob: -4.093677520751953
    5. '_edges' → logprob: -4.218677520751953
    6. ' graph' → logprob: -4.343677520751953
    7. '_graph' → logprob: -4.593677520751953
    8. '_' → logprob: -4.593677520751953
    9. '_positions' → logprob: -4.968677520751953
    10. '_nodes' → logprob: -5.093677520751953

Token 100: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003362966235727072
    2. 'jac' → logprob: -8.000336647033691
    3. 'js' → logprob: -14.375336647033691
    4. 'ja' → logprob: -15.750336647033691
    5. ' j' → logprob: -17.125335693359375
    6. 'jc' → logprob: -17.125335693359375
    7. '
' → logprob: -17.125335693359375
    8. '	j' → logprob: -18.750335693359375
    9. 'jec' → logprob: -19.000335693359375
    10. '```' → logprob: -19.000335693359375

Token 101: ' =' (ID: 314)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.03920333832502365
    2. '_list' → logprob: -3.414203405380249
    3. '=' → logprob: -6.03920316696167
    4. 'acent' → logprob: -6.53920316696167
    5. 'ac' → logprob: -7.16420316696167
    6. '[' → logprob: -7.91420316696167
    7. ' =' → logprob: -8.164203643798828
    8. 'list' → logprob: -9.039203643798828
    9. 'List' → logprob: -9.664203643798828
    10. '_' → logprob: -10.039203643798828

Token 102: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.1443030685186386
    2. ' [' → logprob: -2.3943030834198
    3. '[' → logprob: -3.1443030834198
    4. ' defaultdict' → logprob: -10.644303321838379
    5. ' ' → logprob: -11.769303321838379
    6. ' {' → logprob: -11.894303321838379
    7. '[:]' → logprob: -14.519303321838379
    8. '[]' → logprob: -14.519303321838379
    9. ' ' → logprob: -14.644303321838379
    10. ' []' → logprob: -14.769303321838379

Token 103: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37823396921157837
    2. ']' → logprob: -1.3782339096069336
    3. 'for' → logprob: -3.0032339096069336
    4. ')' → logprob: -5.378233909606934
    5. '<|end|>' → logprob: -5.503233909606934
    6. ' ]' → logprob: -5.628233909606934
    7. ']()' → logprob: -8.128233909606934
    8. ' ' → logprob: -8.628233909606934
    9. ',' → logprob: -9.003233909606934
    10. '][]' → logprob: -9.503233909606934

Token 104: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43067359924316406
    2. ' _' → logprob: -1.055673599243164
    3. '_' → logprob: -6.430673599243164
    4. '<|end|>' → logprob: -8.430673599243164
    5. ' ‌' → logprob: -9.680673599243164
    6. ' i' → logprob: -10.430673599243164
    7. ' range' → logprob: -11.055673599243164
    8. '<|end|>' → logprob: -11.305673599243164
    9. '  ' → logprob: -12.055673599243164
    10. ' ' → logprob: -12.305673599243164

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012116369791328907
    2. 'in' → logprob: -4.512116432189941
    3. ' ' → logprob: -7.012116432189941
    4. 'range' → logprob: -9.762116432189941
    5. 'n' → logprob: -10.137116432189941
    6. 'i' → logprob: -10.762116432189941
    7. ' i' → logprob: -10.762116432189941
    8. ' _' → logprob: -11.137116432189941
    9. '  ' → logprob: -12.762116432189941
    10. ' range' → logprob: -13.262116432189941

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043901324272156
    2. ' range' → logprob: -3.288043975830078
    3. ' ' → logprob: -13.788043975830078
    4. '   ' → logprob: -14.163043975830078
    5. '	range' → logprob: -15.663043975830078
    6. '  ' → logprob: -15.788043975830078
    7. '(range' → logprob: -16.413043975830078
    8. 'rang' → logprob: -16.788043975830078
    9. '    ' → logprob: -17.038043975830078
    10. 'r' → logprob: -17.413043975830078

Token 107: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009794929064810276
    2. '(' → logprob: -4.75979471206665
    3. '(self' → logprob: -6.75979471206665
    4. ' (' → logprob: -11.009795188903809
    5. '(
' → logprob: -13.509795188903809
    6. '](' → logprob: -14.634795188903809
    7. ')n' → logprob: -14.759795188903809
    8. ')(' → logprob: -15.259795188903809
    9. ']' → logprob: -15.634795188903809
    10. 'n' → logprob: -16.134794235229492

Token 108: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022773505770601332
    2. ')]
' → logprob: -8.875227928161621
    3. ')' → logprob: -9.750227928161621
    4. ' )' → logprob: -11.125227928161621
    5. ']' → logprob: -11.625227928161621
    6. ' ' → logprob: -13.375227928161621
    7. '       ' → logprob: -14.125227928161621
    8. ' ]' → logprob: -14.250227928161621
    9. '   ' → logprob: -14.625227928161621
    10. ')]

' → logprob: -14.625227928161621

Token 109: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005574395763687789
    2. ' ' → logprob: -7.5005574226379395
    3. ')' → logprob: -13.125557899475098
    4. '2' → logprob: -13.625557899475098
    5. '   ' → logprob: -14.625557899475098
    6. ' )' → logprob: -15.125557899475098
    7. ')]' → logprob: -15.750557899475098
    8. '    ' → logprob: -16.50055694580078
    9. '0' → logprob: -16.87555694580078
    10. '```' → logprob: -17.25055694580078

Token 110: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017884672852233052
    2. ')' → logprob: -6.50178861618042
    3. ' )' → logprob: -9.001788139343262
    4. ']' → logprob: -9.501788139343262
    5. '])' → logprob: -10.251788139343262
    6. ')]
' → logprob: -10.376788139343262
    7. ')])' → logprob: -11.501788139343262
    8. ' ]' → logprob: -13.001788139343262
    9. ')
' → logprob: -13.376788139343262
    10. ' ' → logprob: -13.626788139343262

Token 111: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05328516289591789
    2. '<|end|>' → logprob: -3.0532851219177246
    3. '       ' → logprob: -5.928285121917725
    4. ' 
' → logprob: -7.428285121917725
    5. ' ' → logprob: -7.803285121917725
    6. '
' → logprob: -7.928285121917725
    7. 'def' → logprob: -8.928285598754883
    8. '   ' → logprob: -9.053285598754883
    9. '        
' → logprob: -9.428285598754883
    10. '  
' → logprob: -9.428285598754883

Token 113: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8292092084884644
    2. '<|end|>' → logprob: -0.9542092084884644
    3. ' #' → logprob: -3.829209327697754
    4. ' indices' → logprob: -3.829209327697754
    5. ' extra' → logprob: -4.079209327697754
    6. ' self' → logprob: -4.079209327697754
    7. ' index' → logprob: -4.329209327697754
    8. ' The' → logprob: -4.704209327697754
    9. ' indexing' → logprob: -5.079209327697754
    10. ' Index' → logprob: -5.704209327697754

Token 114: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1921466588974
    2. 'n' → logprob: -2.1921467781066895
    3. '1' → logprob: -2.6921467781066895
    4. 'range' → logprob: -2.6921467781066895
    5. ' extra' → logprob: -2.8171467781066895
    6. ' ' → logprob: -2.8171467781066895
    7. 'index' → logprob: -3.0671467781066895
    8. ' range' → logprob: -3.3171467781066895
    9. ' to' → logprob: -3.5671467781066895
    10. ' n' → logprob: -3.8171467781066895

Token 115: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08942107111215591
    2. '-index' → logprob: -2.964421033859253
    3. '-' → logprob: -4.589421272277832
    4. ' -' → logprob: -4.714421272277832
    5. 'based' → logprob: -5.089421272277832
    6. ' based' → logprob: -5.214421272277832
    7. '<|end|>' → logprob: -6.589421272277832
    8. '_based' → logprob: -7.964421272277832
    9. '-Based' → logprob: -8.339421272277832
    10. '-base' → logprob: -8.464421272277832

Token 116: ' indexing' (ID: 105989)
  Prédit: ' indexing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.7193416953086853
    2. '<|end|>' → logprob: -0.9693416953086853
    3. ' index' → logprob: -2.21934175491333
    4. 'index' → logprob: -4.34434175491333
    5. ' indices' → logprob: -4.96934175491333
    6. '
' → logprob: -6.84434175491333
    7. 'indices' → logprob: -7.09434175491333
    8. ' indexed' → logprob: -7.21934175491333
    9. ' indexes' → logprob: -7.59434175491333
    10. ' and' → logprob: -7.96934175491333

Token 117: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' node' (ID: 4596)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.3600032329559326
    2. ' ' → logprob: -1.4850032329559326
    3. 'self' → logprob: -2.4850032329559326
    4. ' with' → logprob: -2.4850032329559326
    5. ' including' → logprob: -2.6100032329559326
    6. ' and' → logprob: -2.9850032329559326
    7. '<|end|>' → logprob: -2.9850032329559326
    8. ' 
' → logprob: -3.1100032329559326
    9. ' defaultdict' → logprob: -3.7350032329559326
    10. ' plus' → logprob: -3.8600032329559326

Token 119: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4360552430152893
    2. ' ' → logprob: -1.6860551834106445
    3. '0' → logprob: -2.0610551834106445
    4. ' s' → logprob: -5.5610551834106445
    5. ' in' → logprob: -5.6860551834106445
    6. '<|end|>' → logprob: -5.8110551834106445
    7. ' to' → logprob: -6.0610551834106445
    8. ' for' → logprob: -6.0610551834106445
    9. ' is' → logprob: -6.1860551834106445
    10. ':' → logprob: -6.1860551834106445

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034533318132162094
    2. ' ' → logprob: -4.284533500671387
    3. 's' → logprob: -4.784533500671387
    4. ' and' → logprob: -6.034533500671387
    5. 'and' → logprob: -6.659533500671387
    6. ' is' → logprob: -6.909533500671387
    7. 'n' → logprob: -6.909533500671387
    8. ' indexing' → logprob: -6.909533500671387
    9. 'indices' → logprob: -7.159533500671387
    10. 'index' → logprob: -7.284533500671387

Token 121: ' unused' (ID: 38192)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5035044550895691
    2. ' is' → logprob: -1.0035045146942139
    3. ' to' → logprob: -4.378504276275635
    4. 'and' → logprob: -5.128504276275635
    5. ' as' → logprob: -5.503504276275635
    6. ' ' → logprob: -6.628504276275635
    7. ':' → logprob: -6.753504276275635
    8. ' for' → logprob: -6.878504276275635
    9. '<|end|>' → logprob: -7.128504276275635
    10. 'is' → logprob: -7.753504276275635

Token 122: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' node' (ID: 4596)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8148157596588135
    2. ' node' → logprob: -1.3148157596588135
    3. ' and' → logprob: -1.6898157596588135
    4. 'n' → logprob: -2.4398157596588135
    5. 'node' → logprob: -5.564815521240234
    6. ' ' → logprob: -5.814815521240234
    7. ' extra' → logprob: -5.939815521240234
    8. ' nodes' → logprob: -6.314815521240234
    9. ' plus' → logprob: -6.439815521240234
    10. 'and' → logprob: -6.564815521240234

Token 124: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008384553715586662
    2. ' ' → logprob: -5.383384704589844
    3. 'n' → logprob: -5.883384704589844
    4. 's' → logprob: -7.508384704589844
    5. '0' → logprob: -9.133384704589844
    6. '1' → logprob: -9.758384704589844
    7. ' 
' → logprob: -9.883384704589844
    8. '	n' → logprob: -9.883384704589844
    9. ' (' → logprob: -10.508384704589844
    10. ' =' → logprob: -10.633384704589844

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007114782347343862
    2. ' +' → logprob: -7.250711441040039
    3. '+
' → logprob: -14.250711441040039
    4. '<|end|>' → logprob: -15.250711441040039
    5. '1' → logprob: -15.750711441040039
    6. '
' → logprob: -16.75071144104004
    7. '＋' → logprob: -16.87571144104004
    8. '-' → logprob: -16.87571144104004
    9. 's' → logprob: -16.87571144104004
    10. ' +
' → logprob: -17.00071144104004

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021903318702243268
    2. ' ' → logprob: -9.000219345092773
    3. '2' → logprob: -10.375219345092773
    4. '+' → logprob: -10.875219345092773
    5. 'n' → logprob: -11.875219345092773
    6. 's' → logprob: -11.875219345092773
    7. '   ' → logprob: -12.000219345092773
    8. '  ' → logprob: -12.625219345092773
    9. '
' → logprob: -12.750219345092773
    10. '3' → logprob: -13.312719345092773

Token 127: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5310683846473694
    2. ' as' → logprob: -1.0310683250427246
    3. ' for' → logprob: -3.2810683250427246
    4. ' used' → logprob: -5.156068325042725
    5. '<|end|>' → logprob: -5.156068325042725
    6. 'as' → logprob: -5.906068325042725
    7. 'is' → logprob: -6.406068325042725
    8. ' represents' → logprob: -7.031068325042725
    9. 'for' → logprob: -8.031068801879883
    10. '<|end|>' → logprob: -9.156068801879883

Token 128: ' exit' (ID: 10654)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07873356342315674
    2. ' the' → logprob: -2.953733444213867
    3. 'a' → logprob: -4.703733444213867
    4. ' an' → logprob: -5.578733444213867
    5. ' start' → logprob: -5.703733444213867
    6. ' virtual' → logprob: -6.328733444213867
    7. ' source' → logprob: -6.578733444213867
    8. ' terminal' → logprob: -6.953733444213867
    9. ' sink' → logprob: -7.453733444213867
    10. ' destination' → logprob: -7.703733444213867

Token 129: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05608570575714111
    2. '<|end|>' → logprob: -2.9310855865478516
    3. '       ' → logprob: -7.181085586547852
    4. '  
' → logprob: -9.306085586547852
    5. '<|end|>' → logprob: -9.306085586547852
    6. ' 
' → logprob: -9.431085586547852
    7. '        
' → logprob: -10.181085586547852
    8. '
' → logprob: -10.181085586547852
    9. '

' → logprob: -10.806085586547852
    10. '    
' → logprob: -11.056085586547852

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5828623175621033
    2. ' self' → logprob: -0.8328623175621033
    3. '           ' → logprob: -5.832862377166748
    4. '       ' → logprob: -6.207862377166748
    5. '        ' → logprob: -7.957862377166748
    6. 'def' → logprob: -8.33286190032959
    7. '   ' → logprob: -8.45786190032959
    8. ' ' → logprob: -8.83286190032959
    9. '<|end|>' → logprob: -8.83286190032959
    10. '	self' → logprob: -8.95786190032959

Token 132: '.in' (ID: 2250)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.4839630424976349
    2. '.ind' → logprob: -1.7339630126953125
    3. 'ind' → logprob: -2.1089630126953125
    4. '_in' → logprob: -3.2339630126953125
    5. '.in' → logprob: -4.3589630126953125
    6. 'visited' → logprob: -5.3589630126953125
    7. '.' → logprob: -5.6089630126953125
    8. ' inde' → logprob: -5.6089630126953125
    9. '_visit' → logprob: -6.1089630126953125
    10. ' in' → logprob: -6.3589630126953125

Token 133: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.015210502780973911
    2. 'd' → logprob: -4.6402106285095215
    3. '_deg' → logprob: -5.6402106285095215
    4. '_de' → logprob: -7.2652106285095215
    5. '_' → logprob: -7.3902106285095215
    6. 'degree' → logprob: -7.7652106285095215
    7. 'deg' → logprob: -9.640210151672363
    8. 'de' → logprob: -10.140210151672363
    9. '-degree' → logprob: -11.890210151672363
    10. 'degrees' → logprob: -11.890210151672363

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019580135121941566
    2. '=' → logprob: -6.251957893371582
    3. ' ' → logprob: -10.876957893371582
    4. '[' → logprob: -12.376957893371582
    5. ' =[' → logprob: -12.626957893371582
    6. 's' → logprob: -13.501957893371582
    7. '<|end|>' → logprob: -13.751957893371582
    8. ' =
' → logprob: -15.626957893371582
    9. ')' → logprob: -16.5019588470459
    10. '  ' → logprob: -16.5019588470459

Token 135: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07889033854007721
    2. '[' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.328890800476074
    4. '[n' → logprob: -16.328889846801758
    5. '[int' → logprob: -16.703889846801758
    6. '	' → logprob: -17.328889846801758
    7. ' ' → logprob: -17.828889846801758
    8. '   ' → logprob: -17.953889846801758
    9. '[self' → logprob: -18.203889846801758
    10. '0' → logprob: -18.328889846801758

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234952084720135
    2. ' ' → logprob: -5.255234718322754
    3. '   ' → logprob: -15.505234718322754
    4. ' 
' → logprob: -15.880234718322754
    5. '  ' → logprob: -16.13023567199707
    6. '           ' → logprob: -16.25523567199707
    7. ')' → logprob: -16.25523567199707
    8. '
' → logprob: -16.44273567199707
    9. '    ' → logprob: -17.00523567199707
    10. '               ' → logprob: -17.38023567199707

Token 137: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02087724767625332
    2. ' for' → logprob: -4.145877361297607
    3. ' ]' → logprob: -5.645877361297607
    4. ']*(' → logprob: -6.895877361297607
    5. ']*' → logprob: -9.14587688446045
    6. 'for' → logprob: -9.39587688446045
    7. ' ' → logprob: -10.27087688446045
    8. ')' → logprob: -11.02087688446045
    9. ',' → logprob: -11.14587688446045
    10. ']+' → logprob: -11.52087688446045

Token 138: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003449984942562878
    2. ' n' → logprob: -8.000345230102539
    3. 'self' → logprob: -12.250345230102539
    4. '   ' → logprob: -12.750345230102539
    5. '	n' → logprob: -13.500345230102539
    6. '(n' → logprob: -15.375345230102539
    7. '
' → logprob: -15.625345230102539
    8. ')n' → logprob: -16.62534523010254
    9. '    ' → logprob: -17.00034523010254
    10. '    
' → logprob: -17.87534523010254

Token 139: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00048405781853944063
    2. ' +' → logprob: -7.750483989715576
    3. '+
' → logprob: -9.875484466552734
    4. '+

' → logprob: -14.250484466552734
    5. ' +
' → logprob: -14.875484466552734
    6. '<|end|>' → logprob: -15.125484466552734
    7. '+)' → logprob: -15.250484466552734
    8. ')' → logprob: -16.500484466552734
    9. ' plus' → logprob: -16.750484466552734
    10. 'plus' → logprob: -17.000484466552734

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003460712905507535
    2. '1' → logprob: -8.000346183776855
    3. '
' → logprob: -13.000346183776855
    4. '3' → logprob: -13.125346183776855
    5. ' ' → logprob: -13.125346183776855
    6. ')' → logprob: -13.375346183776855
    7. '+' → logprob: -13.625346183776855
    8. '   ' → logprob: -14.250346183776855
    9. '```' → logprob: -15.250346183776855
    10. '    ' → logprob: -16.50034523010254

Token 141: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011816580081358552
    2. ' )' → logprob: -6.751181602478027
    3. ')
' → logprob: -11.501181602478027
    4. ')

' → logprob: -14.626181602478027
    5. '<|end|>' → logprob: -15.251181602478027
    6. ' )
' → logprob: -16.001182556152344
    7. '))' → logprob: -16.251182556152344
    8. ')#' → logprob: -16.376182556152344
    9. '),' → logprob: -16.376182556152344
    10. ']' → logprob: -16.876182556152344

Token 142: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018020229414105415
    2. '<|end|>' → logprob: -4.143020153045654
    3. '

' → logprob: -6.768020153045654
    4. ' 
' → logprob: -8.518020629882812
    5. '
        
' → logprob: -8.768020629882812
    6. '    
' → logprob: -9.018020629882812
    7. '        
' → logprob: -9.143020629882812
    8. '       ' → logprob: -9.768020629882812
    9. 'def' → logprob: -10.143020629882812
    10. '<|end|>' → logprob: -10.143020629882812

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0917431116104126
    2. '
' → logprob: -3.091742992401123
    3. '   ' → logprob: -3.341742992401123
    4. ' def' → logprob: -5.216742992401123
    5. '       ' → logprob: -6.966742992401123
    6. '    
' → logprob: -8.216743469238281
    7. '        
' → logprob: -8.966743469238281
    8. ' 
' → logprob: -10.216743469238281
    9. '	def' → logprob: -10.341743469238281
    10. '

' → logprob: -11.966743469238281

Token 144: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.759734732331708e-05
    2. 'add' → logprob: -11.375017166137695
    3. '_add' → logprob: -12.625017166137695
    4. '	add' → logprob: -13.625017166137695
    5. ' ' → logprob: -14.500017166137695
    6. ' dfs' → logprob: -15.000017166137695
    7. ' remove' → logprob: -15.375017166137695
    8. ' addedge' → logprob: -15.625017166137695
    9. ' ad' → logprob: -16.125017166137695
    10. ' bfs' → logprob: -16.500017166137695

Token 145: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0032736104913055897
    2. '_' → logprob: -5.7532734870910645
    3. '_constraint' → logprob: -9.628273963928223
    4. '_node' → logprob: -11.128273963928223
    5. '_dependency' → logprob: -11.628273963928223
    6. '_vertex' → logprob: -13.628273963928223
    7. '_edges' → logprob: -14.003273963928223
    8. '_connection' → logprob: -14.128273963928223
    9. '_neighbor' → logprob: -14.128273963928223
    10. ' _' → logprob: -15.003273963928223

Token 146: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4745435416698456
    2. '(self' → logprob: -0.974543571472168
    3. ' (' → logprob: -8.724543571472168
    4. '(
' → logprob: -9.099543571472168
    5. '<|end|>' → logprob: -9.099543571472168
    6. '(s' → logprob: -9.599543571472168
    7. '(sel' → logprob: -12.599543571472168
    8. '(

' → logprob: -13.599543571472168
    9. '<|end|>' → logprob: -13.849543571472168
    10. '(Self' → logprob: -13.974543571472168

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0646618902683258
    2. ' ,' → logprob: -2.939661979675293
    3. ')' → logprob: -4.939661979675293
    4. ',u' → logprob: -6.814661979675293
    5. 'self' → logprob: -7.814661979675293
    6. ' )' → logprob: -8.064661979675293
    7. 'u' → logprob: -8.439661979675293
    8. 'from' → logprob: -9.564661979675293
    9. ' u' → logprob: -9.689661979675293
    10. '<|end|>' → logprob: -10.189661979675293

Token 148: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.018326109275221825
    2. 'u' → logprob: -4.393326282501221
    3. ' from' → logprob: -5.768326282501221
    4. ' self' → logprob: -6.393326282501221
    5. 'from' → logprob: -7.518326282501221
    6. ')' → logprob: -8.643325805664062
    7. 'self' → logprob: -8.893325805664062
    8. ' before' → logprob: -9.268325805664062
    9. ' )' → logprob: -10.768325805664062
    10. ' a' → logprob: -12.143325805664062

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.759734732331708e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',u' → logprob: -14.375017166137695
    4. '‌,' → logprob: -15.875017166137695
    5. ',
' → logprob: -16.500017166137695
    6. ',v' → logprob: -16.875017166137695
    7. ',

' → logprob: -18.125017166137695
    8. ',user' → logprob: -18.750017166137695
    9. '_,' → logprob: -18.875017166137695
    10. '<|end|>' → logprob: -19.125017166137695

Token 150: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1602286994457245
    2. 'v' → logprob: -1.9102287292480469
    3. ' ' → logprob: -12.910228729248047
    4. '	v' → logprob: -13.535228729248047
    5. ')v' → logprob: -15.285228729248047
    6. '<|end|>' → logprob: -15.785228729248047
    7. ')' → logprob: -16.035228729248047
    8. ' 
' → logprob: -16.660228729248047
    9. '
' → logprob: -17.160228729248047
    10. 'vq' → logprob: -17.160228729248047

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006282356102019548
    2. '):
' → logprob: -5.131282329559326
    3. ')' → logprob: -8.006282806396484
    4. ' ):' → logprob: -11.506282806396484
    5. ':' → logprob: -12.131282806396484
    6. '):
' → logprob: -12.881282806396484
    7. '):

' → logprob: -13.256282806396484
    8. ')：' → logprob: -16.131282806396484
    9. ',' → logprob: -16.631282806396484
    10. '   ' → logprob: -16.881282806396484

Token 152: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9296008944511414
    2. '<|end|>' → logprob: -1.4296009540557861
    3. ')' → logprob: -2.304600954055786
    4. '):
' → logprob: -2.679600954055786
    5. '):' → logprob: -2.929600954055786
    6. '
' → logprob: -3.429600954055786
    7. '       ' → logprob: -3.429600954055786
    8. ':
' → logprob: -3.429600954055786
    9. '           ' → logprob: -4.179600715637207
    10. '<|end|>' → logprob: -4.929600715637207

Token 153: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4513448178768158
    2. ' 
' → logprob: -1.4513448476791382
    3. ' self' → logprob: -2.4513447284698486
    4. 'self' (adapté à ' self') → logprob: -3.4513447284698486
    5. '           ' → logprob: -5.201344966888428
    6. '  
' → logprob: -6.451344966888428
    7. '               ' → logprob: -6.701344966888428
    8. '       ' → logprob: -7.201344966888428
    9. ' ' → logprob: -7.201344966888428
    10. '            ' → logprob: -8.20134449005127

Token 154: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0011892797192558646
    2. '.' → logprob: -6.751189231872559
    3. '.add' → logprob: -13.126189231872559
    4. '.user' → logprob: -13.126189231872559
    5. 'adj' → logprob: -13.376189231872559
    6. '.edges' → logprob: -13.626189231872559
    7. ' .' → logprob: -13.626189231872559
    8. ').' → logprob: -14.001189231872559
    9. '.ai' → logprob: -14.376189231872559
    10. '.s' → logprob: -14.376189231872559

Token 155: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.668304245569743e-05
    2. 'd' → logprob: -10.250046730041504
    3. '[' → logprob: -12.250046730041504
    4. 'jac' → logprob: -12.625046730041504
    5. '[j' → logprob: -13.625046730041504
    6. '
' → logprob: -14.250046730041504
    7. 'dj' → logprob: -15.375046730041504
    8. ' j' → logprob: -15.500046730041504
    9. '[
' → logprob: -16.250045776367188
    10. '[self' → logprob: -16.250045776367188

Token 156: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.1689596148207784e-05
    2. '[' → logprob: -9.875051498413086
    3. ' [' → logprob: -16.500051498413086
    4. '[v' → logprob: -17.125051498413086
    5. 'u' → logprob: -17.250051498413086
    6. '[user' → logprob: -17.625051498413086
    7. '[
' → logprob: -18.500051498413086
    8. '	u' → logprob: -19.375051498413086
    9. '[self' → logprob: -19.625051498413086
    10. '```' → logprob: -20.000051498413086

Token 157: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -9.376848902320489e-05
    2. ']' → logprob: -9.375093460083008
    3. ' ].' → logprob: -12.000093460083008
    4. '.append' → logprob: -14.000093460083008
    5. '   ' → logprob: -14.000093460083008
    6. '.' → logprob: -14.250093460083008
    7. '       ' → logprob: -15.875093460083008
    8. ').' → logprob: -16.375093460083008
    9. '           ' → logprob: -17.000093460083008
    10. '[' → logprob: -17.125093460083008

Token 158: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.8889261304575484e-06
    2. ' append' → logprob: -12.750003814697266
    3. '.append' → logprob: -14.375003814697266
    4. 'appen' → logprob: -15.625003814697266
    5. 'push' → logprob: -16.250003814697266
    6. '_append' → logprob: -17.000003814697266
    7. '	append' → logprob: -17.625003814697266
    8. 'app' → logprob: -18.125003814697266
    9. 'add' → logprob: -19.000003814697266
    10. '```' → logprob: -19.000003814697266

Token 159: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.201456218957901
    2. '(' → logprob: -1.7014561891555786
    3. '(
' → logprob: -10.326456069946289
    4. ' (' → logprob: -12.326456069946289
    5. 'v' → logprob: -12.451456069946289
    6. '(

' → logprob: -13.701456069946289
    7. ' v' → logprob: -14.826456069946289
    8. ')' → logprob: -16.45145606994629
    9. '('' → logprob: -16.70145606994629
    10. '((' → logprob: -16.82645606994629

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16032719612121582
    2. ')
' → logprob: -1.9103271961212158
    3. '           ' → logprob: -9.910326957702637
    4. ' )
' → logprob: -10.535326957702637
    5. ' )' → logprob: -10.910326957702637
    6. ')
' → logprob: -12.660326957702637
    7. '       ' → logprob: -13.035326957702637
    8. '               ' → logprob: -13.535326957702637
    9. '<|end|>' → logprob: -15.035326957702637
    10. ')

' → logprob: -15.160326957702637

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05575825273990631
    2. '
' → logprob: -2.930758237838745
    3. '<|end|>' → logprob: -7.805758476257324
    4. 'self' → logprob: -8.805758476257324
    5. '       ' → logprob: -9.180758476257324
    6. '               ' → logprob: -9.805758476257324
    7. ' 
' → logprob: -10.680758476257324
    8. '  
' → logprob: -10.805758476257324
    9. '    
' → logprob: -11.055758476257324
    10. '   ' → logprob: -11.055758476257324

Token 162: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931493282318115
    2. 'self' (adapté à ' self') → logprob: -0.6931493282318115
    3. '           ' → logprob: -14.06814956665039
    4. '
' → logprob: -14.69314956665039
    5. ' 
' → logprob: -15.06814956665039
    6. ' ' → logprob: -15.44314956665039
    7. '	self' → logprob: -15.94314956665039
    8. '            ' → logprob: -16.69314956665039
    9. '[self' → logprob: -16.94314956665039
    10. 's' → logprob: -17.19314956665039

Token 163: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -4.1080467781284824e-05
    2. '.' → logprob: -10.500041007995605
    3. ' .' → logprob: -12.000041007995605
    4. 'in' → logprob: -12.125041007995605
    5. '[in' → logprob: -14.500041007995605
    6. 'In' → logprob: -15.250041007995605
    7. '].' → logprob: -15.375041007995605
    8. '
' → logprob: -15.750041007995605
    9. '_in' → logprob: -15.875041007995605
    10. ' in' → logprob: -16.000041961669922

Token 164: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.05077558383345604
    2. '_' → logprob: -3.1757755279541016
    3. '_depth' → logprob: -5.925775527954102
    4. '_d' → logprob: -6.925775527954102
    5. '_space' → logprob: -6.925775527954102
    6. ' _' → logprob: -7.800775527954102
    7. '_de' → logprob: -8.050775527954102
    8. '_f' → logprob: -8.300775527954102
    9. '_factor' → logprob: -8.675775527954102
    10. '_token' → logprob: -8.925775527954102

Token 165: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. 'v' → logprob: -17.5
    4. ' [' → logprob: -17.625
    5. '```' → logprob: -19.125
    6. ' v' → logprob: -19.25
    7. '[u' → logprob: -20.0
    8. '	v' → logprob: -20.25
    9. '[
' → logprob: -21.5
    10. '(v' → logprob: -21.75

Token 166: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2881505787372589
    2. '+=' → logprob: -1.6631505489349365
    3. ')' → logprob: -3.1631505489349365
    4. '+' → logprob: -4.413150787353516
    5. ']+=' → logprob: -5.413150787353516
    6. ' )' → logprob: -6.913150787353516
    7. ' +' → logprob: -7.788150787353516
    8. ']' → logprob: -8.288150787353516
    9. ')+' → logprob: -8.913150787353516
    10. '<|end|>' → logprob: -9.288150787353516

Token 167: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08990025520324707
    2. '+=' → logprob: -2.464900255203247
    3. '+' → logprob: -7.089900016784668
    4. '<|end|>' → logprob: -9.839900016784668
    5. ']+=' → logprob: -10.339900016784668
    6. ' +' → logprob: -10.464900016784668
    7. ' ' → logprob: -12.214900016784668
    8. '[' → logprob: -13.339900016784668
    9. ')' → logprob: -13.464900016784668
    10. '+='' → logprob: -13.589900016784668

Token 168: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -18.514163970947266
    4. '
' → logprob: -19.639163970947266
    5. '```' → logprob: -19.889163970947266
    6. '   ' → logprob: -20.014163970947266
    7. '１' → logprob: -21.389163970947266
    8. '۱' → logprob: -21.451663970947266
    9. '0' → logprob: -21.576663970947266
    10. '  ' → logprob: -21.639163970947266

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -22.125
    4. '   ' → logprob: -23.0
    5. '１' → logprob: -23.625
    6. '۱' → logprob: -23.875
    7. '
' → logprob: -24.0
    8. '0' → logprob: -24.125
    9. '`' → logprob: -24.75
    10. '

' → logprob: -25.0

Token 170: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49395203590393066
    2. '<|end|>' → logprob: -0.9939520359039307
    3. ' 
' → logprob: -4.368951797485352
    4. '\n' → logprob: -6.368951797485352
    5. '<|end|>' → logprob: -6.618951797485352
    6. '   ' → logprob: -7.243951797485352
    7. '  
' → logprob: -7.368951797485352
    8. '```' → logprob: -7.493951797485352
    9. '    
' → logprob: -7.743951797485352
    10. '

' → logprob: -7.868951797485352

Token 171: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04795398190617561
    2. '<|end|>' → logprob: -3.1729540824890137
    3. '

' → logprob: -6.172954082489014
    4. '   ' → logprob: -6.672954082489014
    5. '<|end|>' → logprob: -8.047953605651855
    6. '       ' → logprob: -8.047953605651855
    7. '\n' → logprob: -8.172953605651855
    8. '    
' → logprob: -8.547953605651855
    9. '```' → logprob: -9.172953605651855
    10. ' 
' → logprob: -9.297953605651855

Token 172: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0064759100787341595
    2. '   ' → logprob: -5.381475925445557
    3. '       ' → logprob: -7.131475925445557
    4. ' def' → logprob: -7.256475925445557
    5. '
' → logprob: -8.131475448608398
    6. '        
' → logprob: -10.631475448608398
    7. '	def' → logprob: -11.256475448608398
    8. '    
' → logprob: -11.381475448608398
    9. ' ' → logprob: -12.631475448608398
    10. '    ' → logprob: -14.381475448608398

Token 173: ' Find' (ID: 9764)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5524558424949646
    2. 'def' → logprob: -1.5524559020996094
    3. ' def' → logprob: -1.6774559020996094
    4. ' d' → logprob: -3.8024559020996094
    5. ' ' → logprob: -6.052455902099609
    6. '   ' → logprob: -7.177455902099609
    7. ' 
' → logprob: -9.42745590209961
    8. 'de' → logprob: -9.67745590209961
    9. '    ' → logprob: -10.05245590209961
    10. '  ' → logprob: -10.30245590209961

Token 174: ' strongly' (ID: 27203)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4229376316070557
    2. ' a' → logprob: -1.4229376316070557
    3. '_top' → logprob: -1.4229376316070557
    4. ' top' → logprob: -2.0479376316070557
    5. ' the' → logprob: -2.9229376316070557
    6. ' all' → logprob: -2.9229376316070557
    7. '_order' → logprob: -4.922937393188477
    8. ' ' → logprob: -5.047937393188477
    9. ' order' → logprob: -5.297937393188477
    10. ' topo' → logprob: -5.922937393188477

Token 175: ' connected' (ID: 12079)
  Prédit: '_connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.3665660321712494
    2. 'ly' → logprob: -1.9915660619735718
    3. ' connected' → logprob: -2.3665659427642822
    4. 'connected' → logprob: -2.7415659427642822
    5. 'connect' → logprob: -5.241566181182861
    6. '_' → logprob: -5.366566181182861
    7. '_connect' → logprob: -6.741566181182861
    8. '<|end|>' → logprob: -7.741566181182861
    9. '_components' → logprob: -8.741565704345703
    10. 'Connected' → logprob: -9.741565704345703

Token 176: ' components' (ID: 10674)
  Prédit: '_components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.18410371243953705
    2. ' components' → logprob: -1.9341037273406982
    3. 'components' → logprob: -3.8091037273406982
    4. '_component' → logprob: -6.684103488922119
    5. '_' → logprob: -9.309103965759277
    6. 'component' → logprob: -10.059103965759277
    7. ' component' → logprob: -10.559103965759277
    8. '-components' → logprob: -11.809103965759277
    9. 'Components' → logprob: -12.559103965759277
    10. '.components' → logprob: -13.184103965759277

Token 177: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18735946714878082
    2. '(' → logprob: -2.062359571456909
    3. '(self' → logprob: -3.812359571456909
    4. 'def' → logprob: -5.06235933303833
    5. '(
' → logprob: -5.31235933303833
    6. '   ' → logprob: -5.56235933303833
    7. '
' → logprob: -6.81235933303833
    8. '_
' → logprob: -6.93735933303833
    9. 's' → logprob: -7.56235933303833
    10. ' (' → logprob: -7.56235933303833

Token 178: ' detect' (ID: 11839)
  Prédit: ' detect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detect' → logprob: -0.04014615714550018
    2. ' check' → logprob: -3.6651461124420166
    3. 'detect' → logprob: -4.415146350860596
    4. ' identify' → logprob: -7.165146350860596
    5. ' def' → logprob: -8.165145874023438
    6. ' find' → logprob: -8.915145874023438
    7. ' determine' → logprob: -9.415145874023438
    8. 'det' → logprob: -9.665145874023438
    9. ' ensure' → logprob: -10.040145874023438
    10. 'def' → logprob: -10.165145874023438

Token 179: ' cycles' (ID: 41478)
  Prédit: ' cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycles' → logprob: -0.001765978173352778
    2. 'cycles' → logprob: -6.751766204833984
    3. ' cycle' → logprob: -8.126766204833984
    4. '_cycles' → logprob: -9.001766204833984
    5. ' ' → logprob: -10.251766204833984
    6. ' any' → logprob: -10.751766204833984
    7. ' cyc' → logprob: -11.001766204833984
    8. ' cyclic' → logprob: -11.251766204833984
    9. ' ciclos' → logprob: -11.376766204833984
    10. 's' → logprob: -11.626766204833984

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0007771117961965501
    2. '       ' → logprob: -7.500777244567871
    3. '<|end|>' → logprob: -9.500777244567871
    4. '   ' → logprob: -10.125777244567871
    5. '<|end|>' → logprob: -10.375777244567871
    6. '        
' → logprob: -10.875777244567871
    7. '    
' → logprob: -11.125777244567871
    8. '  
' → logprob: -11.375777244567871
    9. '
' → logprob: -11.375777244567871
    10. 'def' → logprob: -11.375777244567871

Token 181: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009614654816687107
    2. '   ' → logprob: -5.25961446762085
    3. '<|end|>' → logprob: -5.75961446762085
    4. '       ' → logprob: -7.25961446762085
    5. '<|end|>' → logprob: -8.884614944458008
    6. 'def' → logprob: -9.384614944458008
    7. '    
' → logprob: -9.509614944458008
    8. '  
' → logprob: -10.134614944458008
    9. ' 
' → logprob: -10.259614944458008
    10. ' def' → logprob: -10.884614944458008

Token 182: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.049227274954319
    2. '   ' → logprob: -3.799227237701416
    3. 'def' (adapté à ' def') → logprob: -4.299227237701416
    4. ' d' → logprob: -4.924227237701416
    5. 'd' → logprob: -6.424227237701416
    6. ' 
' → logprob: -6.424227237701416
    7. '    ' → logprob: -7.549227237701416
    8. '
' → logprob: -7.924227237701416
    9. ' ' → logprob: -8.549227714538574
    10. '       ' → logprob: -8.549227714538574

Token 183: ' strongly' (ID: 27203)
  Prédit: ' tar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tar' → logprob: -0.08451514691114426
    2. ' tarj' → logprob: -2.70951509475708
    3. ' strongly' → logprob: -4.83451509475708
    4. '_tar' → logprob: -6.08451509475708
    5. 'tar' → logprob: -6.20951509475708
    6. ' _' → logprob: -6.70951509475708
    7. 'Tar' → logprob: -8.084515571594238
    8. ' find' → logprob: -8.334515571594238
    9. ' kos' → logprob: -9.209515571594238
    10. ' s' → logprob: -9.459515571594238

Token 184: '_connected' (ID: 112270)
  Prédit: '_connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.00943612027913332
    2. '_connect' → logprob: -4.884436130523682
    3. 'connected' → logprob: -6.884436130523682
    4. 'connect' → logprob: -8.009435653686523
    5. '_' → logprob: -9.134435653686523
    6. '_c' → logprob: -9.384435653686523
    7. '_conn' → logprob: -9.509435653686523
    8. '_con' → logprob: -10.009435653686523
    9. '_connections' → logprob: -10.384435653686523
    10. 'ly' → logprob: -10.634435653686523

Token 185: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.0003196154139004648
    2. 'components' → logprob: -8.125319480895996
    3. '_component' → logprob: -11.375319480895996
    4. '_' → logprob: -12.375319480895996
    5. '_comp' → logprob: -12.750319480895996
    6. ' components' → logprob: -13.250319480895996
    7. '(self' → logprob: -13.500319480895996
    8. 'Components' → logprob: -13.875319480895996
    9. '_com' → logprob: -15.625319480895996
    10. ' компон' → logprob: -16.000320434570312

Token 186: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016006793593987823
    2. ' (' → logprob: -6.876600742340088
    3. '(' → logprob: -7.501600742340088
    4. '(
' → logprob: -12.37660026550293
    5. '<|end|>' → logprob: -12.62660026550293
    6. '   ' → logprob: -12.75160026550293
    7. 'self' → logprob: -13.62660026550293
    8. '       ' → logprob: -14.00160026550293
    9. '(s' → logprob: -14.00160026550293
    10. ' ' → logprob: -14.62660026550293

Token 187: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07673638314008713
    2. '):' → logprob: -2.7017364501953125
    3. 'self' → logprob: -6.0767364501953125
    4. ' ,' → logprob: -6.0767364501953125
    5. '):
' → logprob: -7.2017364501953125
    6. ')' → logprob: -7.5767364501953125
    7. '(self' → logprob: -7.7017364501953125
    8. ' ):' → logprob: -8.201736450195312
    9. ')(' → logprob: -10.076736450195312
    10. '   ' → logprob: -10.951736450195312

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.670425295829773
    2. '(self' → logprob: -0.920425295829773
    3. '   ' → logprob: -3.6704254150390625
    4. '           ' → logprob: -3.9204254150390625
    5. '<|end|>' → logprob: -3.9204254150390625
    6. '
' → logprob: -5.2954254150390625
    7. '(' → logprob: -5.4204254150390625
    8. '(
' → logprob: -5.9204254150390625
    9. '<|end|>' → logprob: -6.2954254150390625
    10. 'self' → logprob: -6.2954254150390625

Token 189: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9240361452102661
    2. ' self' → logprob: -1.4240361452102661
    3. 'self' → logprob: -1.9240361452102661
    4. '        ' → logprob: -2.5490360260009766
    5. 'def' → logprob: -3.4240360260009766
    6. ' ' → logprob: -3.7990360260009766
    7. '   ' → logprob: -4.049036026000977
    8. '           ' → logprob: -4.174036026000977
    9. '    ' → logprob: -4.174036026000977
    10. ' def' → logprob: -4.549036026000977

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06554563343524933
    2. '=' → logprob: -2.8155455589294434
    3. '_map' → logprob: -6.190545558929443
    4. '_counter' → logprob: -7.565545558929443
    5. '_stack' → logprob: -8.065546035766602
    6. 's' → logprob: -8.565546035766602
    7. '   ' → logprob: -8.690546035766602
    8. 'es' → logprob: -8.815546035766602
    9. ':' → logprob: -10.565546035766602
    10. ',' → logprob: -10.690546035766602

Token 191: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18084736168384552
    2. '0' → logprob: -1.805847406387329
    3. '[' → logprob: -7.43084716796875
    4. ' [' → logprob: -8.43084716796875
    5. '{}' → logprob: -8.80584716796875
    6. ' {}' → logprob: -9.68084716796875
    7. '-' → logprob: -9.93084716796875
    8. '  ' → logprob: -11.80584716796875
    9. '   ' → logprob: -12.05584716796875
    10. '[-' → logprob: -12.18084716796875

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004444124177098274
    2. '[' → logprob: -5.504444122314453
    3. '{}' → logprob: -8.254444122314453
    4. ' ' → logprob: -9.629444122314453
    5. '1' → logprob: -10.504444122314453
    6. '{}
' → logprob: -12.254444122314453
    7. '[-' → logprob: -12.879444122314453
    8. '[]' → logprob: -13.629444122314453
    9. ' [' → logprob: -14.129444122314453
    10. '[self' → logprob: -14.254444122314453

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2564775049686432
    2. '<|end|>' → logprob: -1.5064774751663208
    3. '<|end|>' → logprob: -5.506477355957031
    4. ',' → logprob: -8.756477355957031
    5. ' ' → logprob: -9.506477355957031
    6. ' 
' → logprob: -9.631477355957031
    7. 'def' → logprob: -10.631477355957031
    8. '  
' → logprob: -10.756477355957031
    9. '
' → logprob: -10.881477355957031
    10. '#' → logprob: -11.006477355957031

Token 194: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.02031225711107254
    2. 'stack' (adapté à ' stack') → logprob: -4.645312309265137
    3. ' indices' → logprob: -4.770312309265137
    4. ' indexes' → logprob: -6.770312309265137
    5. ' index' → logprob: -7.395312309265137
    6. '	stack' → logprob: -9.270312309265137
    7. 'indices' → logprob: -9.395312309265137
    8. 'index' → logprob: -10.395312309265137
    9. ' ' → logprob: -10.895312309265137
    10. ' stacks' → logprob: -11.145312309265137

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033769141882658005
    2. '=' → logprob: -3.408769130706787
    3. ',' → logprob: -9.158769607543945
    4. '=[]' → logprob: -11.033769607543945
    5. ' ' → logprob: -13.908769607543945
    6. '.' → logprob: -15.033769607543945
    7. '=[]
' → logprob: -15.783769607543945
    8. '	' → logprob: -15.908769607543945
    9. ' =
' → logprob: -16.158769607543945
    10. ' ,' → logprob: -16.408769607543945

Token 197: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.38835814595222473
    2. '[]' → logprob: -1.1383581161499023
    3. ' []
' → logprob: -6.638358116149902
    4. '[]
' → logprob: -8.888358116149902
    5. '[' → logprob: -10.638358116149902
    6. '   ' → logprob: -12.263358116149902
    7. ' ' → logprob: -12.763358116149902
    8. ' [' → logprob: -13.263358116149902
    9. '  ' → logprob: -13.388358116149902
    10. '[]}' → logprob: -13.888358116149902

Token 198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1345801204442978
    2. 'index' → logprob: -2.509580135345459
    3. '<|end|>' → logprob: -4.009580135345459
    4. 'indices' → logprob: -4.634580135345459
    5. ' index' → logprob: -5.259580135345459
    6. ',' → logprob: -5.884580135345459
    7. ' indices' → logprob: -6.509580135345459
    8. 'visited' → logprob: -6.759580135345459
    9. '
' → logprob: -6.759580135345459
    10. '<|end|>' → logprob: -7.009580135345459

Token 199: ' on' (ID: 402)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.34545138478279114
    2. ' indices' → logprob: -1.3454513549804688
    3. 'indexes' → logprob: -4.595451354980469
    4. 'on' (adapté à ' on') → logprob: -4.595451354980469
    5. ' on' → logprob: -5.345451354980469
    6. 'index' → logprob: -5.720451354980469
    7. ' indexes' → logprob: -6.095451354980469
    8. '           ' → logprob: -7.845451354980469
    9. 'stack' → logprob: -8.470451354980469
    10. 'low' → logprob: -8.470451354980469

Token 200: '_stack' (ID: 35650)
  Prédit: 'Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -0.6932342648506165
    2. '_stack' → logprob: -0.6932342648506165
    3. 'stack' → logprob: -9.44323444366455
    4. ' stack' → logprob: -12.06823444366455
    5. 'S' → logprob: -13.94323444366455
    6. ' Stack' → logprob: -14.81823444366455
    7. '	stack' → logprob: -15.06823444366455
    8. '_STACK' → logprob: -15.56823444366455
    9. '_' → logprob: -15.94323444366455
    10. '-stack' → logprob: -16.943233489990234

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.50192928314209
    4. '[' → logprob: -16.376928329467773
    5. '	' → logprob: -16.501928329467773
    6. '   ' → logprob: -17.376928329467773
    7. '=set' → logprob: -17.751928329467773
    8. '  ' → logprob: -18.376928329467773
    9. '=[]' → logprob: -18.626928329467773
    10. ',' → logprob: -18.876928329467773

Token 202: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014186662621796131
    2. ' [' → logprob: -4.264186859130859
    3. '[self' → logprob: -12.01418685913086
    4. '[int' → logprob: -12.51418685913086
    5. '[class' → logprob: -12.63918685913086
    6. '[n' → logprob: -12.88918685913086
    7. '[len' → logprob: -13.26418685913086
    8. '   ' → logprob: -13.76418685913086
    9. '[node' → logprob: -14.26418685913086
    10. '[type' → logprob: -14.51418685913086

Token 203: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -18.00020408630371
    4. '=False' → logprob: -20.50020408630371
    5. '   ' → logprob: -20.62520408630371
    6. '0' → logprob: -21.50020408630371
    7. '
' → logprob: -23.25020408630371
    8. '.False' → logprob: -23.25020408630371
    9. '[' → logprob: -23.87520408630371
    10. ']' → logprob: -24.37520408630371

Token 204: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022710377350449562
    2. ']*(' → logprob: -4.27271032333374
    3. ']*' → logprob: -4.77271032333374
    4. ' for' → logprob: -10.147710800170898
    5. ' ]' → logprob: -11.647710800170898
    6. 'for' → logprob: -12.647710800170898
    7. ']+' → logprob: -13.647710800170898
    8. '](' → logprob: -14.522710800170898
    9. ' ' → logprob: -16.0227108001709
    10. ',' → logprob: -17.0227108001709

Token 205: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.991464786347933e-05
    2. 'len' → logprob: -9.750060081481934
    3. ' self' → logprob: -14.000060081481934
    4. '(self' → logprob: -14.750060081481934
    5. '
' → logprob: -15.250060081481934
    6. '   ' → logprob: -16.875059127807617
    7. '           ' → logprob: -17.000059127807617
    8. ')' → logprob: -18.375059127807617
    9. '       ' → logprob: -18.750059127807617
    10. '[self' → logprob: -18.750059127807617

Token 206: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00018768629524856806
    2. 'n' → logprob: -9.125187873840332
    3. '.' → logprob: -9.500187873840332
    4. ' .' → logprob: -13.250187873840332
    5. '.
' → logprob: -14.625187873840332
    6. '
' → logprob: -14.875187873840332
    7. '	n' → logprob: -15.000187873840332
    8. '   ' → logprob: -15.000187873840332
    9. '       ' → logprob: -15.625187873840332
    10. '```' → logprob: -15.750187873840332

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.11996734328568e-05
    2. ' +' → logprob: -10.125041007995605
    3. '+
' → logprob: -13.875041007995605
    4. '
' → logprob: -16.750041961669922
    5. '()+' → logprob: -17.000041961669922
    6. '   ' → logprob: -17.375041961669922
    7. '＋' → logprob: -18.250041961669922
    8. '+

' → logprob: -18.625041961669922
    9. ')+' → logprob: -18.625041961669922
    10. '+n' → logprob: -18.875041961669922

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.625014305114746
    3. '   ' → logprob: -13.250014305114746
    4. '1' → logprob: -13.375014305114746
    5. '
' → logprob: -13.875014305114746
    6. '+' → logprob: -15.375014305114746
    7. '           ' → logprob: -15.375014305114746
    8. '       ' → logprob: -15.687514305114746
    9. '```' → logprob: -16.56251335144043
    10. '

' → logprob: -17.31251335144043

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02978774718940258
    2. ')
' → logprob: -3.52978777885437
    3. ')
' → logprob: -11.40478801727295
    4. ')

' → logprob: -11.77978801727295
    5. '<|end|>' → logprob: -12.02978801727295
    6. '           ' → logprob: -12.52978801727295
    7. ' )' → logprob: -12.52978801727295
    8. '       ' → logprob: -13.77978801727295
    9. ' )
' → logprob: -14.02978801727295
    10. ')#' → logprob: -14.40478801727295

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0586695559322834
    2. '
' → logprob: -2.9336695671081543
    3. ',' → logprob: -6.308669567108154
    4. '            
' → logprob: -7.058669567108154
    5. 'index' → logprob: -8.058669090270996
    6. '       ' → logprob: -8.683669090270996
    7. ',
' → logprob: -8.683669090270996
    8. '   ' → logprob: -9.308669090270996
    9. '```' → logprob: -9.683669090270996
    10. '    
' → logprob: -9.933669090270996

Token 211: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' (adapté à ' indices') → logprob: -0.057681605219841
    2. ' indices' → logprob: -3.5576815605163574
    3. 'indexes' → logprob: -3.8076815605163574
    4. 'index' → logprob: -5.557681560516357
    5. ' indexes' → logprob: -6.557681560516357
    6. 'def' → logprob: -9.932682037353516
    7. 'low' → logprob: -11.557682037353516
    8. ' index' → logprob: -12.557682037353516
    9. '   ' → logprob: -12.932682037353516
    10. 'stack' → logprob: -13.182682037353516

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016050558537244797
    2. '=' → logprob: -4.141050338745117
    3. ' ' → logprob: -12.016050338745117
    4. '[' → logprob: -12.391050338745117
    5. ',' → logprob: -12.516050338745117
    6. '<|end|>' → logprob: -14.141050338745117
    7. '  ' → logprob: -14.766050338745117
    8. '   ' → logprob: -15.266050338745117
    9. ')' → logprob: -15.516050338745117
    10. ' =[' → logprob: -15.641050338745117

Token 213: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.006741065997630358
    2. '[' → logprob: -5.006741046905518
    3. ' [-' → logprob: -10.756741523742676
    4. '   ' → logprob: -12.881741523742676
    5. '[n' → logprob: -13.881741523742676
    6. '[self' → logprob: -14.506741523742676
    7. ' [' → logprob: -15.131741523742676
    8. '=[' → logprob: -16.75674057006836
    9. '[N' → logprob: -17.00674057006836
    10. ' ' → logprob: -17.38174057006836

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.125
    3. '   ' → logprob: -17.125
    4. '
' → logprob: -18.625
    5. ' ' → logprob: -19.375
    6. 'None' → logprob: -19.5
    7. '

' → logprob: -19.875
    8. '2' → logprob: -19.9375
    9. ' -' → logprob: -20.1875
    10. '```' → logprob: -20.3125

Token 215: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.47872763872146606
    2. ']' → logprob: -0.9787276387214661
    3. ']*' → logprob: -6.1037278175354
    4. ' for' → logprob: -6.8537278175354
    5. '<|end|>' → logprob: -7.8537278175354
    6. 'for' → logprob: -8.103727340698242
    7. '<|end|>' → logprob: -8.353727340698242
    8. ']+' → logprob: -8.853727340698242
    9. ' ]' → logprob: -9.103727340698242
    10. '](' → logprob: -9.603727340698242

Token 216: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.440506407059729e-05
    2. '(self' → logprob: -10.37503433227539
    3. 'len' → logprob: -13.75003433227539
    4. '
' → logprob: -13.87503433227539
    5. ' self' → logprob: -13.87503433227539
    6. '           ' → logprob: -16.25003433227539
    7. '[self' → logprob: -16.62503433227539
    8. '       ' → logprob: -18.62503433227539
    9. '```' → logprob: -18.62503433227539
    10. '   ' → logprob: -18.75003433227539

Token 217: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.06169234588742256
    2. 'self' → logprob: -3.311692237854004
    3. 'n' → logprob: -3.936692237854004
    4. '(n' → logprob: -5.811692237854004
    5. '(self' → logprob: -7.561692237854004
    6. '
' → logprob: -8.186692237854004
    7. '```' → logprob: -11.061692237854004
    8. '(' → logprob: -11.561692237854004
    9. '_n' → logprob: -11.686692237854004
    10. 'class' → logprob: -11.936692237854004

Token 218: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.200166469876422e-06
    2. ' +' → logprob: -12.500004768371582
    3. '+
' → logprob: -14.125004768371582
    4. '2' → logprob: -15.000004768371582
    5. '
' → logprob: -16.1250057220459
    6. '```' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.9375057220459
    8. '[' → logprob: -17.0625057220459
    9. '-' → logprob: -17.6875057220459
    10. '()+' → logprob: -18.2500057220459

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -10.875040054321289
    3. ' ' → logprob: -11.375040054321289
    4. '   ' → logprob: -13.125040054321289
    5. '
' → logprob: -13.500040054321289
    6. '1' → logprob: -13.500040054321289
    7. '(n' → logprob: -13.750040054321289
    8. '```' → logprob: -14.437540054321289
    9. '12' → logprob: -14.750040054321289
    10. '-' → logprob: -15.250040054321289

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015431294741574675
    2. ')
' → logprob: -8.875154495239258
    3. '           ' → logprob: -11.500154495239258
    4. ' )' → logprob: -12.875154495239258
    5. '<|end|>' → logprob: -14.250154495239258
    6. '       ' → logprob: -14.750154495239258
    7. ']' → logprob: -16.000154495239258
    8. '),' → logprob: -16.250154495239258
    9. ')

' → logprob: -16.500154495239258
    10. ')#' → logprob: -16.875154495239258

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09243958443403244
    2. '<|end|>' → logprob: -2.717439651489258
    3. ',' → logprob: -4.592439651489258
    4. '       ' → logprob: -5.592439651489258
    5. 'def' → logprob: -6.092439651489258
    6. ')' → logprob: -6.342439651489258
    7. '   ' → logprob: -7.092439651489258
    8. ' def' → logprob: -7.092439651489258
    9. '<|end|>' → logprob: -7.092439651489258
    10. '            
' → logprob: -8.217439651489258

Token 222: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.00021474185632541776
    2. ' low' → logprob: -8.500214576721191
    3. 'Low' → logprob: -11.750214576721191
    4. 'def' → logprob: -13.250214576721191
    5. '_low' → logprob: -13.875214576721191
    6. '   ' → logprob: -14.750214576721191
    7. '
' → logprob: -15.750214576721191
    8. '.low' → logprob: -16.500215530395508
    9. 'LOW' → logprob: -17.250215530395508
    10. '-low' → logprob: -17.500215530395508

Token 223: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.021054338663816452
    2. 'links' → logprob: -4.646054267883301
    3. '_link' → logprob: -5.146054267883301
    4. 'Link' → logprob: -5.521054267883301
    5. '[-' → logprob: -8.1460542678833
    6. '=' → logprob: -8.1460542678833
    7. 'index' → logprob: -8.8960542678833
    8. '-link' → logprob: -9.1460542678833
    9. '[' → logprob: -9.2710542678833
    10. '_links' → logprob: -9.2710542678833

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270311027765274
    2. '=' → logprob: -2.127031087875366
    3. '   ' → logprob: -9.627031326293945
    4. ' ' → logprob: -10.502031326293945
    5. '           ' → logprob: -13.127031326293945
    6. '       ' → logprob: -13.627031326293945
    7. '=[' → logprob: -13.752031326293945
    8. '  ' → logprob: -13.752031326293945
    9. '[' → logprob: -14.252031326293945
    10. '```' → logprob: -14.252031326293945

Token 225: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.31996166706085205
    2. '[' → logprob: -1.319961667060852
    3. ' [' → logprob: -5.6949615478515625
    4. ' [-' → logprob: -5.8199615478515625
    5. '[self' → logprob: -8.069961547851562
    6. '   ' → logprob: -11.069961547851562
    7. '[index' → logprob: -11.444961547851562
    8. '[ind' → logprob: -12.819961547851562
    9. '[i' → logprob: -13.819961547851562
    10. '           ' → logprob: -14.069961547851562

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.875001907348633
    3. 'int' → logprob: -15.000001907348633
    4. '2' → logprob: -16.000001907348633
    5. '
' → logprob: -16.250001907348633
    6. 'float' → logprob: -16.250001907348633
    7. '0' → logprob: -16.750001907348633
    8. '```' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '<|end|>' → logprob: -17.750001907348633

Token 227: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.00011570196511456743
    2. ']' → logprob: -9.125115394592285
    3. '*(' → logprob: -13.000115394592285
    4. '](' → logprob: -13.250115394592285
    5. ']*' → logprob: -13.250115394592285
    6. ' ]' → logprob: -15.375115394592285
    7. '   ' → logprob: -15.625115394592285
    8. ')*(' → logprob: -16.0001163482666
    9. '[' → logprob: -16.5001163482666
    10. ']
' → logprob: -16.5001163482666

Token 228: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9888433093437925e-05
    2. '(self' → logprob: -10.250040054321289
    3. ' self' → logprob: -12.750040054321289
    4. '[self' → logprob: -14.125040054321289
    5. '
' → logprob: -15.125040054321289
    6. '           ' → logprob: -15.250040054321289
    7. '	self' → logprob: -16.37504005432129
    8. '                   ' → logprob: -16.50004005432129
    9. '=self' → logprob: -16.62504005432129
    10. '*self' → logprob: -17.37504005432129

Token 229: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0001382241171086207
    2. 'self' → logprob: -9.125138282775879
    3. 'n' → logprob: -10.875138282775879
    4. '
' → logprob: -12.000138282775879
    5. '```' → logprob: -13.625138282775879
    6. '(n' → logprob: -14.125138282775879
    7. ' .' → logprob: -15.250138282775879
    8. '<n' → logprob: -15.500138282775879
    9. '+' → logprob: -15.625138282775879
    10. '	n' → logprob: -15.625138282775879

Token 230: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.054500666621607e-06
    2. '+self' → logprob: -14.12500286102295
    3. ' +' → logprob: -14.37500286102295
    4. '2' → logprob: -14.87500286102295
    5. '[' → logprob: -15.25000286102295
    6. '+n' → logprob: -15.37500286102295
    7. '+
' → logprob: -15.62500286102295
    8. 'n' → logprob: -15.87500286102295
    9. '
' → logprob: -16.125003814697266
    10. ')+' → logprob: -16.937503814697266

Token 231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.500009536743164
    3. '
' → logprob: -13.125009536743164
    4. '(n' → logprob: -13.875009536743164
    5. '(' → logprob: -14.000009536743164
    6. ')' → logprob: -15.500009536743164
    7. '   ' → logprob: -15.500009536743164
    8. '```' → logprob: -15.750009536743164
    9. '1' → logprob: -15.875009536743164
    10. 'self' → logprob: -16.000009536743164

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010850081220269203
    2. ')
' → logprob: -4.760849952697754
    3. '           ' → logprob: -6.135849952697754
    4. '       ' → logprob: -10.510849952697754
    5. '
' → logprob: -11.010849952697754
    6. ' )' → logprob: -11.885849952697754
    7. '   ' → logprob: -12.135849952697754
    8. ')

' → logprob: -13.135849952697754
    9. ')
' → logprob: -13.510849952697754
    10. '<|end|>' → logprob: -13.760849952697754

Token 233: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048451658338308334
    2. '           ' → logprob: -4.1734514236450195
    3. '       ' → logprob: -4.2984514236450195
    4. '   ' → logprob: -5.2984514236450195
    5. '<|end|>' → logprob: -5.2984514236450195
    6. ' def' → logprob: -6.2984514236450195
    7. 'def' → logprob: -6.4234514236450195
    8. ' 
' → logprob: -6.4234514236450195
    9. '
' → logprob: -7.0484514236450195
    10. ' ' → logprob: -7.4234514236450195

Token 234: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.040281280875205994
    2. '
' → logprob: -3.665281295776367
    3. '           ' → logprob: -4.540281295776367
    4. ' def' → logprob: -6.290281295776367
    5. '       ' → logprob: -7.165281295776367
    6. '            
' → logprob: -8.040281295776367
    7. '   ' → logprob: -9.415281295776367
    8. '    
' → logprob: -9.790281295776367
    9. '	def' → logprob: -10.415281295776367
    10. 'result' → logprob: -10.540281295776367

Token 235: 'cc' (ID: 710)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5843743681907654
    2. '   ' → logprob: -1.4593744277954102
    3. '       ' → logprob: -1.9593744277954102
    4. 'def' → logprob: -2.95937442779541
    5. '           ' → logprob: -5.08437442779541
    6. '    ' → logprob: -5.95937442779541
    7. '
' → logprob: -6.45937442779541
    8. 'y' → logprob: -6.58437442779541
    9. ' def' → logprob: -6.70937442779541
    10. '        ' → logprob: -7.45937442779541

Token 236: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17869430780410767
    2. '_stack' → logprob: -1.928694248199463
    3. '_count' → logprob: -4.178694248199463
    4. '_sizes' → logprob: -6.553694248199463
    5. '_id' → logprob: -7.428694248199463
    6. '_ids' → logprob: -7.678694248199463
    7. '_counter' → logprob: -8.678694725036621
    8. '_counts' → logprob: -9.428694725036621
    9. '_list' → logprob: -9.803694725036621
    10. '_map' → logprob: -9.928694725036621

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029820965602993965
    2. '=' → logprob: -3.5298209190368652
    3. '=[]' → logprob: -10.654821395874023
    4. ' ' → logprob: -10.904821395874023
    5. ',' → logprob: -11.654821395874023
    6. '   ' → logprob: -11.779821395874023
    7. ':' → logprob: -12.654821395874023
    8. ' =
' → logprob: -12.904821395874023
    9. 'def' → logprob: -13.154821395874023
    10. ')' → logprob: -14.029821395874023

Token 238: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005568959750235081
    2. ' []' → logprob: -5.255568981170654
    3. '[]
' → logprob: -8.505568504333496
    4. '[]

' → logprob: -9.005568504333496
    5. ' []

' → logprob: -12.255568504333496
    6. '   ' → logprob: -12.755568504333496
    7. ' []
' → logprob: -13.505568504333496
    8. '[' → logprob: -14.130568504333496
    9. '=[]' → logprob: -16.380569458007812
    10. '[]}' → logprob: -16.880569458007812

Token 239: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7404093146324158
    2. '           ' → logprob: -0.9904093146324158
    3. '       ' → logprob: -2.6154093742370605
    4. '   ' → logprob: -2.9904093742370605
    5. '<|end|>' → logprob: -4.2404093742370605
    6. 'def' → logprob: -5.3654093742370605
    7. ' ' → logprob: -6.3654093742370605
    8. ' def' → logprob: -6.7404093742370605
    9. '<|end|>' → logprob: -6.9904093742370605
    10. ' 
' → logprob: -7.2404093742370605

Token 240: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029060600325465202
    2. ' def' → logprob: -4.029060363769531
    3. '
' → logprob: -5.279060363769531
    4. '           ' → logprob: -5.654060363769531
    5. '       ' → logprob: -6.404060363769531
    6. '   ' → logprob: -7.529060363769531
    7. '            
' → logprob: -10.529060363769531
    8. '    
' → logprob: -11.279060363769531
    9. '	def' → logprob: -11.779060363769531
    10. '    ' → logprob: -13.154060363769531

Token 241: ' strong' (ID: 5532)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: -0.043045323342084885
    2. 'tar' → logprob: -4.043045520782471
    3. ' tar' → logprob: -4.293045520782471
    4. ' strong' → logprob: -4.543045520782471
    5. 'Tar' → logprob: -9.043045043945312
    6. ' tarj' → logprob: -9.418045043945312
    7. '_tar' → logprob: -9.918045043945312
    8. 'Strong' → logprob: -10.918045043945312
    9. 'dfs' → logprob: -11.543045043945312
    10. ' dfs' → logprob: -12.793045043945312

Token 242: 'connect' (ID: 9291)
  Prédit: 'connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.40356913208961487
    2. '_connect' → logprob: -1.1535691022872925
    3. '_' → logprob: -4.903569221496582
    4. '_continue' → logprob: -5.903569221496582
    5. 'ly' → logprob: -6.028569221496582
    6. '   ' → logprob: -6.778569221496582
    7. '_connected' → logprob: -6.778569221496582
    8. '_component' → logprob: -8.528569221496582
    9. ' ' → logprob: -9.153569221496582
    10. '           ' → logprob: -9.278569221496582

Token 243: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.21051940321922302
    2. '(node' → logprob: -1.7105194330215454
    3. '(u' → logprob: -4.960519313812256
    4. '(self' → logprob: -6.210519313812256
    5. '(' → logprob: -10.710519790649414
    6. '(vertex' → logprob: -11.085519790649414
    7. ' (' → logprob: -13.210519790649414
    8. '   ' → logprob: -13.210519790649414
    9. '           ' → logprob: -14.085519790649414
    10. 'self' → logprob: -14.210519790649414

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054941751062870026
    2. '):
' → logprob: -2.9299416542053223
    3. ')' → logprob: -10.30494213104248
    4. '):
' → logprob: -10.92994213104248
    5. '):

' → logprob: -12.92994213104248
    6. ':' → logprob: -13.05494213104248
    7. ' ):' → logprob: -13.55494213104248
    8. ',' → logprob: -14.30494213104248
    9. '   ' → logprob: -14.92994213104248
    10. 'self' → logprob: -15.05494213104248

Token 245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02003397047519684
    2. '
' → logprob: -4.145033836364746
    3. '   ' → logprob: -6.770033836364746
    4. '    
' → logprob: -7.145033836364746
    5. '\n' → logprob: -7.645033836364746
    6. '           ' → logprob: -7.645033836364746
    7. '<|end|>' → logprob: -8.145033836364746
    8. '                   ' → logprob: -8.520033836364746
    9. '                
' → logprob: -8.895033836364746
    10. '       ' → logprob: -9.270033836364746

Token 246: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.06510977447032928
    2. ' non' → logprob: -2.8151097297668457
    3. 'indices' → logprob: -5.940109729766846
    4. '   ' → logprob: -8.190110206604004
    5. '           ' → logprob: -9.190110206604004
    6. ' indices' → logprob: -9.815110206604004
    7. '               ' → logprob: -10.190110206604004
    8. '       ' → logprob: -11.440110206604004
    9. '                   ' → logprob: -11.940110206604004
    10. '_non' → logprob: -12.190110206604004

Token 247: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.00025669054593890905
    2. '           ' → logprob: -9.375256538391113
    3. ' local' → logprob: -10.250256538391113
    4. '_local' → logprob: -10.625256538391113
    5. '_' → logprob: -10.875256538391113
    6. 'def' → logprob: -11.250256538391113
    7. '               ' → logprob: -11.250256538391113
    8. '       ' → logprob: -11.375256538391113
    9. '   ' → logprob: -11.375256538391113
    10. 'locals' → logprob: -11.875256538391113

Token 248: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0001584850688232109
    2. ' index' → logprob: -8.750158309936523
    3. ' ' → logprob: -17.875158309936523
    4. 'v' → logprob: -20.250158309936523
    5. '	index' → logprob: -20.375158309936523
    6. '   ' → logprob: -20.750158309936523
    7. '=index' → logprob: -21.000158309936523
    8. '(index' → logprob: -21.500158309936523
    9. '
' → logprob: -21.750158309936523
    10. '_index' → logprob: -22.125158309936523

Token 249: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21857623755931854
    2. '               ' → logprob: -1.843576192855835
    3. '           ' → logprob: -4.218576431274414
    4. '                   ' → logprob: -5.343576431274414
    5. ',' → logprob: -5.593576431274414
    6. '<|end|>' → logprob: -5.718576431274414
    7. ')' → logprob: -6.468576431274414
    8. '   ' → logprob: -6.593576431274414
    9. ':
' → logprob: -6.968576431274414
    10. '       ' → logprob: -6.968576431274414

Token 250: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5489732623100281
    2. '               ' → logprob: -0.9239732623100281
    3. '    
' → logprob: -5.173973083496094
    4. '\n' → logprob: -5.423973083496094
    5. ' 
' → logprob: -5.423973083496094
    6. '                
' → logprob: -5.548973083496094
    7. '<|end|>' → logprob: -6.048973083496094
    8. '  
' → logprob: -6.423973083496094
    9. '                   ' → logprob: -6.798973083496094
    10. '                ' → logprob: -8.048973083496094

Token 251: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' (adapté à ' indices') → logprob: -0.003192566568031907
    2. ' indices' → logprob: -5.75319242477417
    3. 'index' → logprob: -11.878192901611328
    4. 'indexes' → logprob: -12.128192901611328
    5. '               ' → logprob: -13.753192901611328
    6. '   ' → logprob: -14.253192901611328
    7. '                   ' → logprob: -14.753192901611328
    8. '           ' → logprob: -15.628192901611328
    9. 'indent' → logprob: -17.003192901611328
    10. '
' → logprob: -17.253192901611328

Token 252: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.00000286102295
    3. 'v' → logprob: -14.50000286102295
    4. '	v' → logprob: -18.000001907348633
    5. ' [' → logprob: -18.125001907348633
    6. ' v' → logprob: -18.500001907348633
    7. '[
' → logprob: -18.500001907348633
    8. '[u' → logprob: -18.875001907348633
    9. '=v' → logprob: -19.000001907348633
    10. '<v' → logprob: -19.750001907348633

Token 253: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5807592868804932
    2. '=' → logprob: -0.8307592868804932
    3. ']' → logprob: -5.580759048461914
    4. ')' → logprob: -7.830759048461914
    5. ' +=' → logprob: -8.080759048461914
    6. '+=' → logprob: -8.705759048461914
    7. ']=' → logprob: -9.205759048461914
    8. ' ]' → logprob: -10.205759048461914
    9. ' ' → logprob: -11.330759048461914
    10. ']+=' → logprob: -11.830759048461914

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692978978157043
    2. '=' → logprob: -2.126929759979248
    3. '=v' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.876930236816406
    5. ' =
' → logprob: -15.376930236816406
    6. ',' → logprob: -15.501930236816406
    7. '=index' → logprob: -15.876930236816406
    8. '=
' → logprob: -16.876930236816406
    9. '[' → logprob: -17.251930236816406
    10. ')' → logprob: -17.626930236816406

Token 255: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.07888978719711304
    2. ' index' → logprob: -2.578889846801758
    3. '=index' → logprob: -17.953889846801758
    4. '0' → logprob: -18.453889846801758
    5. '   ' → logprob: -18.453889846801758
    6. ' ' → logprob: -18.578889846801758
    7. '	index' → logprob: -18.953889846801758
    8. '#index' → logprob: -19.578889846801758
    9. '               ' → logprob: -19.828889846801758
    10. '(index' → logprob: -19.953889846801758

Token 256: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13854026794433594
    2. '               ' → logprob: -2.263540267944336
    3. '<|end|>' → logprob: -4.138540267944336
    4. '                   ' → logprob: -5.513540267944336
    5. '           ' → logprob: -5.638540267944336
    6. '<|end|>' → logprob: -7.388540267944336
    7. '
' → logprob: -8.888540267944336
    8. '       ' → logprob: -8.888540267944336
    9. ')' → logprob: -9.013540267944336
    10. '```' → logprob: -9.263540267944336

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5383694767951965
    2. '
' → logprob: -1.2883694171905518
    3. '           ' → logprob: -2.2883694171905518
    4. '                   ' → logprob: -3.5383694171905518
    5. 'index' → logprob: -4.913369655609131
    6. '       ' → logprob: -7.288369655609131
    7. '+' → logprob: -8.163369178771973
    8. '\n' → logprob: -8.163369178771973
    9. '   ' → logprob: -8.288369178771973
    10. 'newline' → logprob: -8.663369178771973

Token 258: ' low' (ID: 4465)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.12698490917682648
    2. ' index' → logprob: -2.1269848346710205
    3. 'low' (adapté à ' low') → logprob: -10.376984596252441
    4. ' low' → logprob: -10.751984596252441
    5. ' 
' → logprob: -13.376984596252441
    6. ' ' → logprob: -14.251984596252441
    7. '_index' → logprob: -14.876984596252441
    8. '	index' → logprob: -14.876984596252441
    9. 'space' → logprob: -15.251984596252441
    10. '
' → logprob: -15.751984596252441

Token 259: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.00010092071170220152
    2. 'index' → logprob: -9.375101089477539
    3. '=' → logprob: -12.500101089477539
    4. '               ' → logprob: -12.625101089477539
    5. '_link' → logprob: -13.375101089477539
    6. 'Link' → logprob: -13.500101089477539
    7. '           ' → logprob: -13.875101089477539
    8. '                   ' → logprob: -14.125101089477539
    9. 'ink' → logprob: -14.500101089477539
    10. '-' → logprob: -14.500101089477539

Token 260: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1008713702030946e-06
    2. 'v' → logprob: -14.250001907348633
    3. '[' → logprob: -14.625001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '=v' → logprob: -15.375001907348633
    6. '   ' → logprob: -16.125001907348633
    7. ' =' → logprob: -16.250001907348633
    8. '
' → logprob: -16.500001907348633
    9. '	v' → logprob: -16.625001907348633
    10. '=' → logprob: -16.875001907348633

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13306927680969238
    2. '[v' → logprob: -2.3830692768096924
    3. ' ]' → logprob: -4.258069038391113
    4. '-' → logprob: -5.258069038391113
    5. ' -' → logprob: -5.383069038391113
    6. '=' → logprob: -5.758069038391113
    7. ']=' → logprob: -6.258069038391113
    8. ' =' → logprob: -6.633069038391113
    9. '[' → logprob: -7.258069038391113
    10. ' ' → logprob: -8.133069038391113

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31378087401390076
    2. '=' → logprob: -1.3137809038162231
    3. '[v' → logprob: -8.063780784606934
    4. '=v' → logprob: -9.188780784606934
    5. '=index' → logprob: -9.688780784606934
    6. '[index' → logprob: -11.063780784606934
    7. '[' → logprob: -12.063780784606934
    8. ' ' → logprob: -12.188780784606934
    9. '   ' → logprob: -12.938780784606934
    10. 'v' → logprob: -13.188780784606934

Token 263: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.07889056205749512
    2. ' index' → logprob: -2.578890562057495
    3. '	index' → logprob: -14.953890800476074
    4. ' ' → logprob: -15.328890800476074
    5. '   ' → logprob: -15.328890800476074
    6. '[index' → logprob: -17.203889846801758
    7. '(index' → logprob: -17.328889846801758
    8. 'v' → logprob: -17.578889846801758
    9. '=index' → logprob: -17.578889846801758
    10. '
' → logprob: -18.203889846801758

Token 264: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.632210373878479
    2. '
' → logprob: -1.007210373878479
    3. '<|end|>' → logprob: -2.8822102546691895
    4. '           ' → logprob: -3.5072102546691895
    5. '<|end|>' → logprob: -5.1322102546691895
    6. '                   ' → logprob: -5.3822102546691895
    7. '       ' → logprob: -5.7572102546691895
    8. '   ' → logprob: -6.8822102546691895
    9. ')' → logprob: -7.7572102546691895
    10. '
' → logprob: -8.257210731506348

Token 265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48314520716667175
    2. '
' → logprob: -1.8581452369689941
    3. '           ' → logprob: -2.233145236968994
    4. '                   ' → logprob: -2.358145236968994
    5. '<|end|>' → logprob: -4.858145236968994
    6. '       ' → logprob: -5.108145236968994
    7. '   ' → logprob: -5.608145236968994
    8. 'index' → logprob: -5.608145236968994
    9. '<|end|>' → logprob: -7.233145236968994
    10. '+' → logprob: -7.983145236968994

Token 266: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.048592593520879745
    2. ' index' → logprob: -3.0485925674438477
    3. '\n' → logprob: -13.423592567443848
    4. '   ' → logprob: -13.673592567443848
    5. '	index' → logprob: -13.923592567443848
    6. '
' → logprob: -14.298592567443848
    7. '_index' → logprob: -14.923592567443848
    8. '           ' → logprob: -16.048593521118164
    9. 'indices' → logprob: -16.173593521118164
    10. ' 
' → logprob: -16.423593521118164

Token 267: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14299747347831726
    2. '+=' → logprob: -2.1429975032806396
    3. '+' → logprob: -4.1429972648620605
    4. ' +' → logprob: -11.017997741699219
    5. '   ' → logprob: -11.142997741699219
    6. ' ' → logprob: -11.142997741699219
    7. '=' → logprob: -12.142997741699219
    8. '
' → logprob: -12.267997741699219
    9. '[' → logprob: -13.017997741699219
    10. ']+=' → logprob: -13.267997741699219

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '
' → logprob: -18.75002670288086
    4. '   ' → logprob: -19.50002670288086
    5. '```' → logprob: -19.87502670288086
    6. '  ' → logprob: -21.37502670288086
    7. '۱' → logprob: -21.75002670288086
    8. '１' → logprob: -21.87502670288086
    9. ' ' → logprob: -22.12502670288086
    10. '' → logprob: -22.56252670288086

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -20.625
    4. '   ' → logprob: -22.625
    5. '```' → logprob: -22.625
    6. '１' → logprob: -22.875
    7. '۱' → logprob: -23.375
    8. '

' → logprob: -24.4375
    9. ' ' → logprob: -24.625
    10. '১' → logprob: -25.1875

Token 270: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032615289092063904
    2. '
' → logprob: -3.6576151847839355
    3. '           ' → logprob: -5.9076151847839355
    4. ' stack' → logprob: -6.7826151847839355
    5. '       ' → logprob: -7.1576151847839355
    6. '	stack' → logprob: -7.7826151847839355
    7. '<|end|>' → logprob: -8.157615661621094
    8. 'stack' → logprob: -8.157615661621094
    9. '   ' → logprob: -8.407615661621094
    10. '                   ' → logprob: -8.907615661621094

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42197903990745544
    2. 'stack' → logprob: -2.0469789505004883
    3. ' stack' → logprob: -2.2969789505004883
    4. '	stack' → logprob: -2.9219789505004883
    5. '
' → logprob: -3.1719789505004883
    6. '           ' → logprob: -5.046978950500488
    7. '<|end|>' → logprob: -5.171978950500488
    8. '       ' → logprob: -5.796978950500488
    9. '   ' → logprob: -7.171978950500488
    10. '                   ' → logprob: -7.296978950500488

Token 272: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0067156096920371056
    2. ' stack' → logprob: -5.006715774536133
    3. '	stack' → logprob: -15.381715774536133
    4. '   ' → logprob: -18.006715774536133
    5. '_stack' → logprob: -18.131715774536133
    6. '.stack' → logprob: -19.131715774536133
    7. 'Stack' → logprob: -19.756715774536133
    8. '(stack' → logprob: -20.506715774536133
    9. '
' → logprob: -20.631715774536133
    10. '           ' → logprob: -20.881715774536133

Token 273: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012368128227535635
    2. '.' → logprob: -9.000123977661133
    3. '.push' → logprob: -16.750123977661133
    4. 'append' → logprob: -16.750123977661133
    5. ' .' → logprob: -16.875123977661133
    6. '.app' → logprob: -17.000123977661133
    7. '.extend' → logprob: -17.250123977661133
    8. '_append' → logprob: -20.375123977661133
    9. '.insert' → logprob: -21.500123977661133
    10. '.ap' → logprob: -21.500123977661133

Token 274: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.6240566083070007e-06
    2. 'v' → logprob: -13.750001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(
' → logprob: -17.125001907348633
    5. '	v' → logprob: -18.375001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '[v' → logprob: -20.375001907348633
    8. ' (' → logprob: -20.500001907348633
    9. '((' → logprob: -20.625001907348633
    10. ',v' → logprob: -21.250001907348633

Token 275: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.003912645857781172
    2. ')' → logprob: -5.628912448883057
    3. '               ' → logprob: -8.253912925720215
    4. ')
' → logprob: -10.503912925720215
    5. '
' → logprob: -11.503912925720215
    6. ' )
' → logprob: -12.003912925720215
    7. '           ' → logprob: -12.128912925720215
    8. '                   ' → logprob: -13.878912925720215
    9. '   ' → logprob: -14.253912925720215
    10. '       ' → logprob: -14.503912925720215

Token 276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08258050680160522
    2. '
' → logprob: -2.58258056640625
    3. 'on' → logprob: -6.20758056640625
    4. '                   ' → logprob: -7.70758056640625
    5. '                
' → logprob: -8.33258056640625
    6. '           ' → logprob: -8.45758056640625
    7. ' on' → logprob: -8.45758056640625
    8. 'v' → logprob: -9.20758056640625
    9. '                ' → logprob: -9.33258056640625
    10. '       ' → logprob: -9.58258056640625

Token 277: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' (adapté à ' on') → logprob: -0.10040517896413803
    2. ' on' → logprob: -2.350405216217041
    3. '               ' → logprob: -8.600404739379883
    4. '                   ' → logprob: -11.725404739379883
    5. '	on' → logprob: -13.100404739379883
    6. '
' → logprob: -13.225404739379883
    7. '   ' → logprob: -13.475404739379883
    8. '           ' → logprob: -14.475404739379883
    9. ' ' → logprob: -15.850404739379883
    10. '                ' → logprob: -16.100404739379883

Token 278: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -5.264322317088954e-05
    2. '_' → logprob: -9.875052452087402
    3. ' _' → logprob: -14.250052452087402
    4. '_s' → logprob: -15.125052452087402
    5. '_
' → logprob: -15.750052452087402
    6. 'stack' → logprob: -17.25005340576172
    7. '
' → logprob: -18.00005340576172
    8. '_STACK' → logprob: -18.25005340576172
    9. '_socket' → logprob: -18.75005340576172
    10. '_space' → logprob: -19.00005340576172

Token 279: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.250004768371582
    3. ' [' → logprob: -17.1250057220459
    4. 'True' → logprob: -17.2500057220459
    5. '[u' → logprob: -17.2500057220459
    6. 'v' → logprob: -17.7500057220459
    7. '[
' → logprob: -19.1250057220459
    8. '```' → logprob: -19.2500057220459
    9. '[V' → logprob: -19.2500057220459
    10. '
' → logprob: -19.3750057220459

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.833878508885391e-05
    2. ']=' → logprob: -10.750038146972656
    3. ' ]' → logprob: -11.875038146972656
    4. '[' → logprob: -12.375038146972656
    5. '[v' → logprob: -12.500038146972656
    6. ']
' → logprob: -14.000038146972656
    7. '=' → logprob: -14.625038146972656
    8. '[
' → logprob: -15.000038146972656
    9. ')' → logprob: -16.500038146972656
    10. 'v' → logprob: -17.375038146972656

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16771920025348663
    2. ' =' → logprob: -1.9177192449569702
    3. '[v' → logprob: -5.54271936416626
    4. ']' → logprob: -6.29271936416626
    5. '[' → logprob: -6.41771936416626
    6. '=True' → logprob: -10.292718887329102
    7. '   ' → logprob: -11.417718887329102
    8. 'v' → logprob: -12.292718887329102
    9. 'True' → logprob: -12.292718887329102
    10. ']=' → logprob: -12.417718887329102

Token 282: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '(True' → logprob: -18.288042068481445
    4. ' ' → logprob: -19.663042068481445
    5. '=True' → logprob: -21.288042068481445
    6. '   ' → logprob: -21.538042068481445
    7. 'Tr' → logprob: -21.663042068481445
    8. '1' → logprob: -22.163042068481445
    9. '  ' → logprob: -22.788042068481445
    10. ' Tru' → logprob: -22.913042068481445

Token 283: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025657737627625465
    2. '               ' → logprob: -4.400657653808594
    3. '<|end|>' → logprob: -4.525657653808594
    4. '\n' → logprob: -7.025657653808594
    5. '  
' → logprob: -7.900657653808594
    6. ' 
' → logprob: -8.400657653808594
    7. '    
' → logprob: -8.525657653808594
    8. '           ' → logprob: -8.775657653808594
    9. '                
' → logprob: -9.650657653808594
    10. '
' → logprob: -9.650657653808594

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21431979537010193
    2. '
' → logprob: -1.7143198251724243
    3. '<|end|>' → logprob: -4.839319705963135
    4. '    
' → logprob: -6.714319705963135
    5. '  
' → logprob: -7.339319705963135
    6. '           ' → logprob: -7.339319705963135
    7. '   ' → logprob: -7.464319705963135
    8. '                
' → logprob: -7.464319705963135
    9. ' 
' → logprob: -7.589319705963135
    10. '       ' → logprob: -8.089320182800293

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6205651164054871
    2. ' for' → logprob: -0.8705651164054871
    3. '               ' → logprob: -4.120564937591553
    4. '           ' → logprob: -4.245564937591553
    5. '
' → logprob: -4.870564937591553
    6. '   ' → logprob: -5.620564937591553
    7. '       ' → logprob: -6.495564937591553
    8. ' ' → logprob: -8.870565414428711
    9. '                   ' → logprob: -9.620565414428711
    10. '    
' → logprob: -10.620565414428711

Token 286: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0002631238894537091
    2. ' w' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.250263214111328
    4. ' ' → logprob: -14.750263214111328
    5. '	w' → logprob: -15.250263214111328
    6. '```' → logprob: -15.500263214111328
    7. '  ' → logprob: -16.125263214111328
    8. ' ' → logprob: -16.375263214111328
    9. '`' → logprob: -16.500263214111328
    10. '
' → logprob: -16.875263214111328

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02335181273519993
    2. 'in' → logprob: -3.7733519077301025
    3. ' ' → logprob: -9.273351669311523
    4. '	in' → logprob: -12.023351669311523
    5. '<|end|>' → logprob: -13.273351669311523
    6. ',' → logprob: -13.648351669311523
    7. ')' → logprob: -14.273351669311523
    8. '_in' → logprob: -14.648351669311523
    9. 'n' → logprob: -14.898351669311523
    10. '<|end|>' → logprob: -15.273351669311523

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011047935113310814
    2. ' self' → logprob: -4.511047840118408
    3. '(self' → logprob: -16.76104736328125
    4. '	self' → logprob: -17.26104736328125
    5. 'range' → logprob: -17.51104736328125
    6. ' ' → logprob: -17.63604736328125
    7. '   ' → logprob: -17.76104736328125
    8. '[self' → logprob: -18.13604736328125
    9. ' range' → logprob: -19.51104736328125
    10. '
' → logprob: -20.01104736328125

Token 289: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -3.9054008084349334e-05
    2. 'adj' → logprob: -10.250039100646973
    3. ' .' → logprob: -13.000039100646973
    4. '.' → logprob: -13.750039100646973
    5. ' adj' → logprob: -17.250038146972656
    6. '
' → logprob: -17.375038146972656
    7. 'Adj' → logprob: -17.750038146972656
    8. '   ' → logprob: -17.750038146972656
    9. '_adj' → logprob: -17.875038146972656
    10. '].' → logprob: -18.000038146972656

Token 290: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. 'jac' → logprob: -16.125
    3. 'd' → logprob: -16.25
    4. '[j' → logprob: -16.375
    5. '
' → logprob: -17.0
    6. ' j' → logprob: -18.25
    7. 'dj' → logprob: -18.25
    8. '

' → logprob: -18.875
    9. '[' → logprob: -19.25
    10. 'js' → logprob: -19.375

Token 291: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.250001907348633
    3. 'v' → logprob: -15.125001907348633
    4. '[w' → logprob: -16.250001907348633
    5. ' [' → logprob: -18.125001907348633
    6. '(v' → logprob: -18.625001907348633
    7. '[u' → logprob: -18.875001907348633
    8. '[
' → logprob: -19.125001907348633
    9. '[s' → logprob: -20.250001907348633
    10. '
' → logprob: -20.250001907348633

Token 292: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0493064820766449
    2. ']:
' → logprob: -3.0493063926696777
    3. ':' → logprob: -7.674306392669678
    4. ']' → logprob: -8.549306869506836
    5. ']:
' → logprob: -10.299306869506836
    6. ']:

' → logprob: -11.424306869506836
    7. ':
' → logprob: -12.174306869506836
    8. '):' → logprob: -12.424306869506836
    9. ']:


' → logprob: -13.549306869506836
    10. '           ' → logprob: -13.799306869506836

Token 293: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011470163241028786
    2. '
' → logprob: -4.636470317840576
    3. '               ' → logprob: -6.886470317840576
    4. '                       ' → logprob: -8.136469841003418
    5. '                    
' → logprob: -8.511469841003418
    6. '           ' → logprob: -9.886469841003418
    7. '    
' → logprob: -10.886469841003418
    8. '       ' → logprob: -10.886469841003418
    9. '                    ' → logprob: -11.136469841003418
    10. '   ' → logprob: -11.136469841003418

Token 294: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5897536277770996
    2. 'if' (adapté à ' if') → logprob: -0.8397536277770996
    3. '                   ' → logprob: -4.5897536277771
    4. '                       ' → logprob: -5.7147536277771
    5. '               ' → logprob: -9.089754104614258
    6. '	if' → logprob: -9.464754104614258
    7. '   ' → logprob: -10.839754104614258
    8. '           ' → logprob: -11.464754104614258
    9. '	               ' → logprob: -11.589754104614258
    10. '       ' → logprob: -11.964754104614258

Token 295: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.08895386755466461
    2. ' indices' → logprob: -2.463953971862793
    3. '(indices' → logprob: -12.338953971862793
    4. 'indexes' → logprob: -12.338953971862793
    5. '   ' → logprob: -12.838953971862793
    6. '"indices' → logprob: -14.588953971862793
    7. 'index' → logprob: -14.713953971862793
    8. 'ind' → logprob: -14.713953971862793
    9. ' ' → logprob: -14.963953971862793
    10. ' indexes' → logprob: -14.963953971862793

Token 296: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -8.77627644513268e-06
    2. 'w' → logprob: -11.750008583068848
    3. '[v' → logprob: -14.625008583068848
    4. '[' → logprob: -15.125008583068848
    5. '[u' → logprob: -16.750009536743164
    6. '<w' → logprob: -17.000009536743164
    7. '[
' → logprob: -17.500009536743164
    8. ' [' → logprob: -17.625009536743164
    9. '	w' → logprob: -18.125009536743164
    10. '   ' → logprob: -19.125009536743164

Token 297: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06471485644578934
    2. '==' → logprob: -3.0647149085998535
    3. '==-' → logprob: -4.1897149085998535
    4. ']==' → logprob: -7.5647149085998535
    5. ']' → logprob: -8.814714431762695
    6. ')' → logprob: -9.439714431762695
    7. '[' → logprob: -10.314714431762695
    8. '<' → logprob: -10.689714431762695
    9. ')==' → logprob: -11.064714431762695
    10. ' ' → logprob: -11.189714431762695

Token 298: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18594186007976532
    2. '==' → logprob: -1.9359418153762817
    3. '==-' → logprob: -3.6859419345855713
    4. '<' → logprob: -8.185941696166992
    5. ' <' → logprob: -11.685941696166992
    6. '==
' → logprob: -11.685941696166992
    7. ']==' → logprob: -12.060941696166992
    8. '=' → logprob: -12.435941696166992
    9. ' ' → logprob: -12.435941696166992
    10. ')==' → logprob: -12.810941696166992

Token 299: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001234428636962548
    2. ' -' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.375123977661133
    4. '	' → logprob: -19.875123977661133
    5. '                   ' → logprob: -20.000123977661133
    6. ' ' → logprob: -20.125123977661133
    7. '                       ' → logprob: -20.250123977661133
    8. '-
' → logprob: -20.500123977661133
    9. '−' → logprob: -20.875123977661133
    10. '                           ' → logprob: -21.125123977661133

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '
' → logprob: -15.75000286102295
    4. '```' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.812501907348633
    6. '

' → logprob: -17.687501907348633
    7. '                   ' → logprob: -18.312501907348633
    8. '<|end|>' → logprob: -18.500001907348633
    9. '১' → logprob: -18.625001907348633
    10. '۱' → logprob: -18.625001907348633

Token 301: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.764223575592041
    2. ':
' → logprob: -1.264223575592041
    3. ':' → logprob: -1.389223575592041
    4. '                   ' → logprob: -6.764223575592041
    5. '):
' → logprob: -7.889223575592041
    6. '                        ' → logprob: -8.764223098754883
    7. '<|end|>' → logprob: -9.014223098754883
    8. ' :
' → logprob: -9.014223098754883
    9. ',' → logprob: -9.139223098754883
    10. '       ' → logprob: -9.514223098754883

Token 302: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00026288547087460756
    2. '                   ' → logprob: -9.375263214111328
    3. ':' → logprob: -9.750263214111328
    4. ':
' → logprob: -9.875263214111328
    5. '                        ' → logprob: -11.250263214111328
    6. '                        
' → logprob: -11.500263214111328
    7. '                           ' → logprob: -11.875263214111328
    8. '               ' → logprob: -12.125263214111328
    9. '                    ' → logprob: -12.375263214111328
    10. '                     ' → logprob: -12.500263214111328

Token 303: ' strong' (ID: 5532)
  Prédit: ' strong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strong' → logprob: -0.24064908921718597
    2. 'strong' (adapté à ' strong') → logprob: -2.2406489849090576
    3. '                           ' → logprob: -2.4906489849090576
    4. '                       ' → logprob: -3.7406489849090576
    5. '                               ' → logprob: -7.865649223327637
    6. '                   ' → logprob: -7.865649223327637
    7. '                        ' → logprob: -10.615649223327637
    8. '                            ' → logprob: -10.740649223327637
    9. '               ' → logprob: -10.865649223327637
    10. '   ' → logprob: -11.115649223327637

Token 304: 'connect' (ID: 9291)
  Prédit: 'connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -3.128163257315464e-07
    2. ' connect' → logprob: -16.875
    3. 'conn' → logprob: -17.125
    4. 'convert' → logprob: -18.125
    5. '_connect' → logprob: -18.25
    6. 'c' → logprob: -18.375
    7. '(connect' → logprob: -18.625
    8. 'call' → logprob: -18.625
    9. '	connect' → logprob: -18.75
    10. 'con' → logprob: -18.875

Token 305: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0031830633524805307
    2. '(' → logprob: -5.753182888031006
    3. '(
' → logprob: -12.378183364868164
    4. '(v' → logprob: -13.878183364868164
    5. '(

' → logprob: -15.878183364868164
    6. ' (' → logprob: -16.253183364868164
    7. '(W' → logprob: -18.878183364868164
    8. '((' → logprob: -18.878183364868164
    9. ')' → logprob: -19.378183364868164
    10. '()' → logprob: -19.503183364868164

Token 306: ')
' (ID: 446)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.4752866327762604
    2. ')' → logprob: -0.975286602973938
    3. ')(' → logprob: -7.475286483764648
    4. ')
' → logprob: -8.100286483764648
    5. '(v' → logprob: -8.600286483764648
    6. 'w' → logprob: -9.225286483764648
    7. '(' → logprob: -10.475286483764648
    8. ' )' → logprob: -11.475286483764648
    9. ')v' → logprob: -12.100286483764648
    10. ',' → logprob: -13.475286483764648

Token 307: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009255149052478373
    2. '               ' → logprob: -8.125925064086914
    3. '                       ' → logprob: -8.625925064086914
    4. ' else' → logprob: -8.625925064086914
    5. '
' → logprob: -9.125925064086914
    6. '           ' → logprob: -9.500925064086914
    7. 'else' → logprob: -11.000925064086914
    8. '       ' → logprob: -11.125925064086914
    9. '```' → logprob: -11.125925064086914
    10. '   ' → logprob: -11.750925064086914

Token 308: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.006901144050061703
    2. ' low' → logprob: -5.006901264190674
    3. '                       ' → logprob: -9.131900787353516
    4. 'if' → logprob: -9.631900787353516
    5. '                   ' → logprob: -11.881900787353516
    6. ' if' → logprob: -13.381900787353516
    7. '                           ' → logprob: -13.631900787353516
    8. '.low' → logprob: -14.256900787353516
    9. '
' → logprob: -14.506900787353516
    10. '   ' → logprob: -14.881900787353516

Token 309: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -5.512236498361744e-07
    2. 'ink' → logprob: -15.125000953674316
    3. 'links' → logprob: -16.75
    4. 'Link' → logprob: -17.125
    5. '_link' → logprob: -17.25
    6. ' link' → logprob: -17.625
    7. '<link' → logprob: -17.625
    8. 'lock' → logprob: -17.875
    9. 'linky' → logprob: -17.875
    10. '(link' → logprob: -18.125

Token 310: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.204720582696609e-05
    2. 'v' → logprob: -9.875052452087402
    3. '[w' → logprob: -15.375052452087402
    4. '[' → logprob: -15.750052452087402
    5. '	v' → logprob: -16.125051498413086
    6. '=v' → logprob: -16.875051498413086
    7. '<v' → logprob: -17.125051498413086
    8. '[u' → logprob: -18.000051498413086
    9. ')v' → logprob: -18.375051498413086
    10. '```' → logprob: -18.375051498413086

Token 311: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5736973285675049
    2. '=' → logprob: -0.9486973285675049
    3. '[v' → logprob: -3.198697328567505
    4. '[' → logprob: -5.698697090148926
    5. '[w' → logprob: -6.073697090148926
    6. ']' → logprob: -7.198697090148926
    7. '[min' → logprob: -7.323697090148926
    8. ')' → logprob: -7.823697090148926
    9. 'v' → logprob: -7.948697090148926
    10. 'w' → logprob: -8.073697090148926

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04865095764398575
    2. ' =' → logprob: -3.0486509799957275
    3. '=min' → logprob: -9.923650741577148
    4. '[min' → logprob: -11.423650741577148
    5. '[v' → logprob: -13.798650741577148
    6. 'min' → logprob: -13.923650741577148
    7. 'v' → logprob: -14.173650741577148
    8. '[' → logprob: -14.673650741577148
    9. ']=' → logprob: -15.423650741577148
    10. '=
' → logprob: -16.04865074157715

Token 313: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804149478673935
    2. ' min' → logprob: -3.288041591644287
    3. '	min' → logprob: -17.038042068481445
    4. 'max' → logprob: -17.913042068481445
    5. '(min' → logprob: -21.163042068481445
    6. ' ' → logprob: -22.913042068481445
    7. '[min' → logprob: -22.913042068481445
    8. ' max' → logprob: -23.163042068481445
    9. ',min' → logprob: -23.413042068481445
    10. '=min' → logprob: -23.413042068481445

Token 314: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.50012493133545
    4. '(lower' → logprob: -15.50012493133545
    5. '(lo' → logprob: -17.875125885009766
    6. 'low' → logprob: -18.875125885009766
    7. ' (' → logprob: -19.500125885009766
    8. '(

' → logprob: -19.625125885009766
    9. '(high' → logprob: -20.500125885009766
    10. '(l' → logprob: -20.750125885009766

Token 315: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -3.786196975852363e-05
    2. 'lock' → logprob: -10.500038146972656
    3. '<link' → logprob: -13.125038146972656
    4. 'ink' → logprob: -13.500038146972656
    5. 'token' → logprob: -13.750038146972656
    6. '(link' → logprob: -13.875038146972656
    7. 'key' → logprob: -14.250038146972656
    8. '[' → logprob: -14.250038146972656
    9. '               ' → logprob: -14.375038146972656
    10. '_link' → logprob: -14.500038146972656

Token 316: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.572941179503687e-05
    2. 'v' → logprob: -10.000045776367188
    3. '[' → logprob: -15.125045776367188
    4. ' v' → logprob: -18.625045776367188
    5. '[
' → logprob: -19.000045776367188
    6. '[w' → logprob: -19.250045776367188
    7. '	v' → logprob: -19.500045776367188
    8. '<v' → logprob: -20.000045776367188
    9. '(v' → logprob: -20.125045776367188
    10. '[u' → logprob: -20.125045776367188

Token 317: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2633596658706665
    2. '[w' → logprob: -1.5133596658706665
    3. '],' → logprob: -4.763359546661377
    4. ' ,' → logprob: -6.513359546661377
    5. ',w' → logprob: -6.888359546661377
    6. '[v' → logprob: -9.138360023498535
    7. 'w' → logprob: -9.388360023498535
    8. '[' → logprob: -9.763360023498535
    9. ',
' → logprob: -10.388360023498535
    10. '[
' → logprob: -11.263360023498535

Token 318: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.014163747429847717
    2. ' low' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.639163970947266
    4. '(low' → logprob: -16.639163970947266
    5. '    ' → logprob: -18.264163970947266
    6. '  ' → logprob: -18.264163970947266
    7. ' ' → logprob: -18.389163970947266
    8. '.low' → logprob: -18.889163970947266
    9. '
' → logprob: -19.514163970947266
    10. '低' → logprob: -20.014163970947266

Token 319: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -2.45848218582978e-06
    2. 'lock' → logprob: -13.37500286102295
    3. 'w' → logprob: -15.00000286102295
    4. '<link' → logprob: -16.250001907348633
    5. '[' → logprob: -16.625001907348633
    6. '_link' → logprob: -16.750001907348633
    7. 'key' → logprob: -16.750001907348633
    8. 'ink' → logprob: -17.125001907348633
    9. ' link' → logprob: -17.125001907348633
    10. '	link' → logprob: -17.250001907348633

Token 320: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.002476724097505212
    2. 'w' → logprob: -6.002476692199707
    3. '[' → logprob: -14.877476692199707
    4. '	w' → logprob: -15.377476692199707
    5. '<w' → logprob: -15.502476692199707
    6. '[
' → logprob: -16.127477645874023
    7. '
' → logprob: -16.877477645874023
    8. '```' → logprob: -17.127477645874023
    9. ' w' → logprob: -17.502477645874023
    10. '(w' → logprob: -17.502477645874023

Token 321: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018182137981057167
    2. ')
' → logprob: -4.018182277679443
    3. '                   ' → logprob: -10.893181800842285
    4. ' )' → logprob: -11.768181800842285
    5. ')
' → logprob: -12.893181800842285
    6. ' )
' → logprob: -13.643181800842285
    7. '               ' → logprob: -14.143181800842285
    8. '                       ' → logprob: -14.268181800842285
    9. ')

' → logprob: -15.518181800842285
    10. '           ' → logprob: -15.893181800842285

Token 322: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002774246677290648
    2. ' else' → logprob: -9.125277519226074
    3. '               ' → logprob: -9.375277519226074
    4. 'else' → logprob: -10.625277519226074
    5. '				' → logprob: -11.625277519226074
    6. '                    ' → logprob: -12.000277519226074
    7. '           ' → logprob: -12.000277519226074
    8. '		           ' → logprob: -12.375277519226074
    9. '<|end|>' → logprob: -12.375277519226074
    10. '	               ' → logprob: -12.375277519226074

Token 323: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06876281648874283
    2. 'else' → logprob: -2.94376277923584
    3. '                   ' → logprob: -5.06876277923584
    4. ' elif' → logprob: -5.19376277923584
    5. '               ' → logprob: -6.44376277923584
    6. 'elif' (adapté à ' elif') → logprob: -8.06876277923584
    7. '   ' → logprob: -11.69376277923584
    8. ' ' → logprob: -11.94376277923584
    9. ' ' → logprob: -12.19376277923584
    10. '           ' → logprob: -12.31876277923584

Token 324: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3868718445301056
    2. 'on' → logprob: -1.1368718147277832
    3. '	on' → logprob: -14.386872291564941
    4. '                   ' → logprob: -16.511871337890625
    5. '(on' → logprob: -17.011871337890625
    6. '               ' → logprob: -17.136871337890625
    7. '           ' → logprob: -17.386871337890625
    8. ' ' → logprob: -17.386871337890625
    9. '   ' → logprob: -17.761871337890625
    10. ''on' → logprob: -17.761871337890625

Token 325: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.1517960956552997e-05
    2. '_' → logprob: -11.500011444091797
    3. ' _' → logprob: -14.625011444091797
    4. '_space' → logprob: -15.250011444091797
    5. 'w' → logprob: -15.875011444091797
    6. 'stack' → logprob: -16.250011444091797
    7. '_STACK' → logprob: -16.875011444091797
    8. '_s' → logprob: -17.000011444091797
    9. '_socket' → logprob: -17.000011444091797
    10. '
' → logprob: -17.625011444091797

Token 326: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -1.3856492842023727e-06
    2. '[v' → logprob: -13.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'w' → logprob: -16.750001907348633
    5. ' [' → logprob: -17.875001907348633
    6. '[u' → logprob: -18.250001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '[j' → logprob: -20.875001907348633
    9. '<w' → logprob: -21.000001907348633
    10. '[q' → logprob: -21.125001907348633

Token 327: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.16627617180347443
    2. ']:' → logprob: -1.916276216506958
    3. '[v' → logprob: -6.041275978088379
    4. ']' → logprob: -6.416275978088379
    5. ':
' → logprob: -7.416275978088379
    6. '[' → logprob: -7.791275978088379
    7. '[w' → logprob: -7.791275978088379
    8. ':' → logprob: -8.166275978088379
    9. '):
' → logprob: -9.416275978088379
    10. '                   ' → logprob: -9.916275978088379

Token 328: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0011412883177399635
    2. '                   ' → logprob: -7.12614107131958
    3. ':
' → logprob: -8.751141548156738
    4. ',' → logprob: -10.126141548156738
    5. '                           ' → logprob: -10.501141548156738
    6. '               ' → logprob: -10.876141548156738
    7. '                        ' → logprob: -11.001141548156738
    8. '                      ' → logprob: -11.376141548156738
    9. ':' → logprob: -11.501141548156738
    10. '                    ' → logprob: -11.626141548156738

Token 329: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.4740842282772064
    2. ' low' → logprob: -0.9740842580795288
    3. '                           ' → logprob: -12.59908390045166
    4. '                       ' → logprob: -12.72408390045166
    5. '(low' → logprob: -15.47408390045166
    6. '                   ' → logprob: -15.72408390045166
    7. '.low' → logprob: -15.84908390045166
    8. '   ' → logprob: -15.84908390045166
    9. ' ' → logprob: -16.599084854125977
    10. '                               ' → logprob: -16.599084854125977

Token 330: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -7.465036105713807e-06
    2. 'lock' → logprob: -11.875007629394531
    3. 'linked' → logprob: -15.625007629394531
    4. '<link' → logprob: -16.62500762939453
    5. 'click' → logprob: -16.75000762939453
    6. '(link' → logprob: -17.00000762939453
    7. 'links' → logprob: -17.87500762939453
    8. 'stack' → logprob: -18.25000762939453
    9. 'low' → logprob: -18.25000762939453
    10. ' link' → logprob: -18.87500762939453

Token 331: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.875
    3. '[' → logprob: -17.0
    4. ' [' → logprob: -18.25
    5. '(v' → logprob: -20.5
    6. '	v' → logprob: -20.75
    7. '[
' → logprob: -21.25
    8. ' v' → logprob: -21.5
    9. '<v' → logprob: -21.625
    10. '[u' → logprob: -21.75

Token 332: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4890642464160919
    2. ']' → logprob: -1.1140642166137695
    3. ' =' → logprob: -3.1140642166137695
    4. '=' → logprob: -4.4890642166137695
    5. ' ]' → logprob: -6.7390642166137695
    6. ')' → logprob: -6.9890642166137695
    7. ']=' → logprob: -7.6140642166137695
    8. '=v' → logprob: -9.36406421661377
    9. '[' → logprob: -9.48906421661377
    10. ' ' → logprob: -10.36406421661377

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269315630197525
    2. ' =' → logprob: -2.126931667327881
    3. ')' → logprob: -12.876931190490723
    4. '[v' → logprob: -14.751931190490723
    5. '[' → logprob: -15.501931190490723
    6. ']' → logprob: -16.37693214416504
    7. '=v' → logprob: -16.62693214416504
    8. ' ' → logprob: -17.00193214416504
    9. ')=' → logprob: -17.00193214416504
    10. '=
' → logprob: -17.12693214416504

Token 334: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3868711292743683
    2. ' min' → logprob: -1.136871099472046
    3. '	min' → logprob: -17.136871337890625
    4. '(min' → logprob: -17.761871337890625
    5. '[min' → logprob: -18.136871337890625
    6. '_min' → logprob: -20.886871337890625
    7. '=min' → logprob: -20.886871337890625
    8. '.min' → logprob: -21.011871337890625
    9. 'max' → logprob: -21.261871337890625
    10. ',min' → logprob: -21.761871337890625

Token 335: '(low' (ID: 119835)
  Prédit: '(low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. '(lower' → logprob: -15.125036239624023
    4. ' (' → logprob: -16.750036239624023
    5. '(
' → logprob: -17.000036239624023
    6. '(left' → logprob: -17.500036239624023
    7. '(lo' → logprob: -19.375036239624023
    8. '(high' → logprob: -19.750036239624023
    9. 'low' → logprob: -20.250036239624023
    10. '(

' → logprob: -21.250036239624023

Token 336: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -0.006081306841224432
    2. '_link' → logprob: -5.2560811042785645
    3. 'low' → logprob: -7.2560811042785645
    4. '(link' → logprob: -9.381081581115723
    5. '(v' → logprob: -11.006081581115723
    6. 'lock' → logprob: -11.256081581115723
    7. '(low' → logprob: -11.631081581115723
    8. '_low' → logprob: -12.506081581115723
    9. '<link' → logprob: -12.631081581115723
    10. '(' → logprob: -13.131081581115723

Token 337: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.3663626305060461e-05
    2. '[' → logprob: -11.37501335144043
    3. '(v' → logprob: -13.87501335144043
    4. '[w' → logprob: -14.37501335144043
    5. 'v' → logprob: -15.25001335144043
    6. '[
' → logprob: -15.50001335144043
    7. ' [' → logprob: -16.25001335144043
    8. '<v' → logprob: -17.62501335144043
    9. '```' → logprob: -18.25001335144043
    10. '[u' → logprob: -18.50001335144043

Token 338: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.012783089652657509
    2. '[v' → logprob: -4.387783050537109
    3. ' ],' → logprob: -9.63778305053711
    4. ',' → logprob: -9.63778305053711
    5. '[w' → logprob: -10.01278305053711
    6. '][' → logprob: -10.01278305053711
    7. ',v' → logprob: -11.26278305053711
    8. ']' → logprob: -11.38778305053711
    9. '],[' → logprob: -11.51278305053711
    10. 'v' → logprob: -11.88778305053711

Token 339: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.12856201827526093
    2. 'low' → logprob: -2.1285619735717773
    3. ' indices' → logprob: -6.628561973571777
    4. ' low' → logprob: -8.128561973571777
    5. 'index' → logprob: -11.878561973571777
    6. '   ' → logprob: -12.503561973571777
    7. 'indexes' → logprob: -12.753561973571777
    8. ' ' → logprob: -13.753561973571777
    9. '(indices' → logprob: -14.628561973571777
    10. '  ' → logprob: -15.878561973571777

Token 340: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -2.4868770196917467e-05
    2. 'w' → logprob: -10.625024795532227
    3. '[' → logprob: -14.875024795532227
    4. '	w' → logprob: -17.000024795532227
    5. '[v' → logprob: -17.000024795532227
    6. ' w' → logprob: -17.625024795532227
    7. '<w' → logprob: -17.875024795532227
    8. '(w' → logprob: -18.125024795532227
    9. '=w' → logprob: -18.625024795532227
    10. ')' → logprob: -19.250024795532227

Token 341: '])
' (ID: 5169)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.12839366495609283
    2. '])' → logprob: -2.1283936500549316
    3. 'w' → logprob: -6.628393650054932
    4. '[v' → logprob: -9.00339412689209
    5. ' ])' → logprob: -11.37839412689209
    6. ' w' → logprob: -12.62839412689209
    7. '[' → logprob: -13.75339412689209
    8. '])
' → logprob: -13.75339412689209
    9. '	w' → logprob: -14.25339412689209
    10. '   ' → logprob: -15.00339412689209

Token 342: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3467438220977783
    2. '               ' → logprob: -1.5967438220977783
    3. '<|end|>' → logprob: -2.8467438220977783
    4. '           ' → logprob: -4.596743583679199
    5. '
' → logprob: -4.596743583679199
    6. '                   ' → logprob: -6.096743583679199
    7. '       ' → logprob: -6.221743583679199
    8. ' 
' → logprob: -6.971743583679199
    9. '  
' → logprob: -7.346743583679199
    10. ' )' → logprob: -7.596743583679199

Token 343: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5476391315460205
    2. '
' → logprob: -0.9226391315460205
    3. '<|end|>' → logprob: -4.672638893127441
    4. '           ' → logprob: -5.672638893127441
    5. '    
' → logprob: -6.172638893127441
    6. ')' → logprob: -6.297638893127441
    7. '                
' → logprob: -6.547638893127441
    8. '       ' → logprob: -6.547638893127441
    9. ' 
' → logprob: -7.047638893127441
    10. '  
' → logprob: -7.297638893127441

Token 344: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.4740923047065735
    2. ' low' → logprob: -0.9740923047065735
    3. '(low' → logprob: -11.099092483520508
    4. 'Low' → logprob: -15.724092483520508
    5. ' ' → logprob: -18.349092483520508
    6. '   ' → logprob: -18.474092483520508
    7. ' ' → logprob: -19.099092483520508
    8. '
' → logprob: -19.099092483520508
    9. '_low' → logprob: -19.349092483520508
    10. 'l' → logprob: -19.599092483520508

Token 345: 'link' (ID: 3942)
  Prédit: 'link'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'link' → logprob: -1.9361264946837764e-07
    2. 'lock' → logprob: -16.0
    3. '<link' → logprob: -17.75
    4. '                   ' → logprob: -17.75
    5. '_link' → logprob: -17.75
    6. 'linked' → logprob: -18.25
    7. 'links' → logprob: -18.375
    8. '               ' → logprob: -18.75
    9. '	link' → logprob: -18.875
    10. 'linky' → logprob: -19.125

Token 346: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. 'v' → logprob: -14.250000953674316
    3. '[' → logprob: -16.0
    4. '	v' → logprob: -17.375
    5. ' [' → logprob: -18.125
    6. '<v' → logprob: -18.875
    7. ' v' → logprob: -19.125
    8. '[
' → logprob: -19.125
    9. '   ' → logprob: -19.5
    10. '
' → logprob: -19.625

Token 347: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00531013123691082
    2. ']' → logprob: -5.25531005859375
    3. ']==' → logprob: -9.50531005859375
    4. '==' → logprob: -14.00531005859375
    5. 'v' → logprob: -14.50531005859375
    6. '][' → logprob: -15.88031005859375
    7. ' ]' → logprob: -16.00531005859375
    8. '   ' → logprob: -16.38031005859375
    9. ' ==' → logprob: -16.88031005859375
    10. '[' → logprob: -17.38031005859375

Token 348: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.633526623249054
    2. '[v' → logprob: -0.883526623249054
    3. '==' → logprob: -2.883526563644409
    4. '[' → logprob: -11.633526802062988
    5. 'v' → logprob: -12.383526802062988
    6. '   ' → logprob: -13.258526802062988
    7. '[u' → logprob: -13.508526802062988
    8. ']==' → logprob: -13.633526802062988
    9. ' ' → logprob: -13.883526802062988
    10. '==
' → logprob: -13.883526802062988

Token 349: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0031998122576624155
    2. ' indices' → logprob: -5.753199577331543
    3. 'index' → logprob: -11.003199577331543
    4. 'indexes' → logprob: -12.753199577331543
    5. 'low' → logprob: -13.128199577331543
    6. ' ' → logprob: -15.378199577331543
    7. '(indices' → logprob: -15.753199577331543
    8. '   ' → logprob: -16.50320053100586
    9. ' indexes' → logprob: -17.25320053100586
    10. ' index' → logprob: -18.12820053100586

Token 350: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. 'v' → logprob: -14.250000953674316
    3. '[' → logprob: -18.5
    4. '	v' → logprob: -20.0
    5. ' v' → logprob: -20.625
    6. '<v' → logprob: -22.625
    7. ' [' → logprob: -22.75
    8. '[u' → logprob: -22.875
    9. '[
' → logprob: -23.125
    10. '(v' → logprob: -23.25

Token 351: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008698954246938229
    2. ']:
' → logprob: -5.0086989402771
    3. ']' → logprob: -6.7586989402771
    4. '[v' → logprob: -7.5086989402771
    5. ':' → logprob: -8.383699417114258
    6. '):' → logprob: -11.633699417114258
    7. 'v' → logprob: -11.883699417114258
    8. ']:
' → logprob: -12.008699417114258
    9. '}:' → logprob: -12.133699417114258
    10. '           ' → logprob: -12.758699417114258

Token 352: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017101556062698364
    2. '               ' → logprob: -4.642101764678955
    3. ':' → logprob: -6.392101764678955
    4. ':
' → logprob: -6.392101764678955
    5. '\n' → logprob: -6.892101764678955
    6. '
' → logprob: -7.892101764678955
    7. '                       ' → logprob: -7.892101764678955
    8. '           ' → logprob: -8.017101287841797
    9. '                    
' → logprob: -8.017101287841797
    10. '    
' → logprob: -8.267101287841797

Token 353: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3673940896987915
    2. 's' (adapté à ' s') → logprob: -1.4923940896987915
    3. '                   ' → logprob: -3.242393970489502
    4. 'component' → logprob: -3.492393970489502
    5. ' component' → logprob: -4.492393970489502
    6. ' SCC' → logprob: -7.242393970489502
    7. '                    
' → logprob: -8.36739444732666
    8. '               ' → logprob: -8.86739444732666
    9. 'S' → logprob: -8.99239444732666
    10. '   ' → logprob: -9.74239444732666

Token 354: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.008525683544576168
    2. 'c' → logprob: -5.133525848388672
    3. 'component' → logprob: -6.258525848388672
    4. '           ' → logprob: -8.008525848388672
    5. '               ' → logprob: -9.258525848388672
    6. '       ' → logprob: -10.133525848388672
    7. 'ccb' → logprob: -10.258525848388672
    8. 'cci' → logprob: -11.008525848388672
    9. 'CC' → logprob: -11.258525848388672
    10. '   ' → logprob: -11.258525848388672

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024801772087812424
    2. 's' → logprob: -6.5024800300598145
    3. '=' → logprob: -7.7524800300598145
    4. '=[]
' → logprob: -8.252480506896973
    5. '=[]' → logprob: -8.877480506896973
    6. '   ' → logprob: -9.252480506896973
    7. '_nodes' → logprob: -11.127480506896973
    8. '  ' → logprob: -11.377480506896973
    9. '_component' → logprob: -12.252480506896973
    10. '=[' → logprob: -12.252480506896973

Token 356: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0010811600368469954
    2. '[]
' → logprob: -7.0010809898376465
    3. ' []' → logprob: -8.751081466674805
    4. 'set' → logprob: -11.626081466674805
    5. '   ' → logprob: -13.501081466674805
    6. '[]>' → logprob: -15.251081466674805
    7. '[' → logprob: -15.251081466674805
    8. ' []
' → logprob: -15.376081466674805
    9. '[]

' → logprob: -15.626081466674805
    10. '[])' → logprob: -17.126081466674805

Token 357: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008102800697088242
    2. '
' → logprob: -6.633102893829346
    3. '                       ' → logprob: -6.633102893829346
    4. '               ' → logprob: -6.883102893829346
    5. '                    
' → logprob: -7.133102893829346
    6. '	               ' → logprob: -7.633102893829346
    7. '<|end|>' → logprob: -7.758102893829346
    8. '           ' → logprob: -7.883102893829346
    9. '		           ' → logprob: -7.883102893829346
    10. '                    ' → logprob: -8.258102416992188

Token 358: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0012998805614188313
    2. ' while' → logprob: -7.001299858093262
    3. '                   ' → logprob: -8.501299858093262
    4. 'v' → logprob: -9.126299858093262
    5. 'w' → logprob: -9.626299858093262
    6. '	while' → logprob: -12.376299858093262
    7. '                       ' → logprob: -12.751299858093262
    8. 'for' → logprob: -13.876299858093262
    9. 'node' → logprob: -14.626299858093262
    10. '               ' → logprob: -15.001299858093262

Token 359: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10499873012304306
    2. 'stack' → logprob: -2.354998826980591
    3. ' True' → logprob: -5.354998588562012
    4. ' stack' → logprob: -9.979998588562012
    5. '(True' → logprob: -11.979998588562012
    6. '   ' → logprob: -12.854998588562012
    7. '	stack' → logprob: -15.229998588562012
    8. '(stack' → logprob: -15.229998588562012
    9. 'len' → logprob: -15.604998588562012
    10. '       ' → logprob: -16.104999542236328

Token 360: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7675805687904358
    2. ':
' → logprob: -0.8925805687904358
    3. '                       ' → logprob: -2.142580509185791
    4. ' and' → logprob: -5.767580509185791
    5. '                   ' → logprob: -6.267580509185791
    6. '                           ' → logprob: -6.767580509185791
    7. 'v' → logprob: -7.142580509185791
    8. 'and' → logprob: -7.267580509185791
    9. '                      ' → logprob: -8.51758098602295
    10. '):
' → logprob: -9.01758098602295

Token 361: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.13305465877056122
    2. 'v' → logprob: -2.383054733276367
    3. '                   ' → logprob: -4.008054733276367
    4. '	                   ' → logprob: -4.883054733276367
    5. '   ' → logprob: -6.383054733276367
    6. 'w' → logprob: -7.008054733276367
    7. ' w' → logprob: -7.508054733276367
    8. 't' → logprob: -7.508054733276367
    9. '		               ' → logprob: -7.633054733276367
    10. '                           ' → logprob: -8.508054733276367

Token 362: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.049083929508924484
    2. ' w' → logprob: -3.049083948135376
    3. 'node' → logprob: -8.674083709716797
    4. 'x' → logprob: -8.799083709716797
    5. 'u' → logprob: -9.174083709716797
    6. ' node' → logprob: -10.174083709716797
    7. ' u' → logprob: -11.174083709716797
    8. '   ' → logprob: -12.174083709716797
    9. '	w' → logprob: -12.174083709716797
    10. 'v' → logprob: -12.924083709716797

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687533140182495
    2. '=' → logprob: -1.1368753910064697
    3. ' =
' → logprob: -12.76187515258789
    4. '=
' → logprob: -13.76187515258789
    5. ' =
' → logprob: -16.76187515258789
    6. '＝' → logprob: -17.13687515258789
    7. '=index' → logprob: -17.88687515258789
    8. ' ' → logprob: -17.88687515258789
    9. '=

' → logprob: -18.01187515258789
    10. '=user' → logprob: -18.13687515258789

Token 364: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07888989895582199
    2. ' stack' → logprob: -2.578889846801758
    3. '	stack' → logprob: -15.953889846801758
    4. '(stack' → logprob: -18.078889846801758
    5. '.stack' → logprob: -20.453889846801758
    6. ' ' → logprob: -20.453889846801758
    7. '   ' → logprob: -20.703889846801758
    8. '_stack' → logprob: -21.703889846801758
    9. 'Stack' → logprob: -21.953889846801758
    10. 'st' → logprob: -21.953889846801758

Token 365: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.320199877838604e-07
    2. 'pop' → logprob: -15.5
    3. '.' → logprob: -16.125
    4. '[-' → logprob: -17.875
    5. '	pop' → logprob: -18.375
    6. '.p' → logprob: -19.125
    7. ' pop' → logprob: -19.625
    8. ' .' → logprob: -20.875
    9. '   ' → logprob: -21.0
    10. '_pop' → logprob: -21.375

Token 366: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003849133790936321
    2. '()
' → logprob: -7.87538480758667
    3. '(' → logprob: -13.000385284423828
    4. '()

' → logprob: -13.625385284423828
    5. '()\' → logprob: -14.625385284423828
    6. '();' → logprob: -15.250385284423828
    7. '()
' → logprob: -15.375385284423828
    8. '()]' → logprob: -16.625385284423828
    9. ' ()' → logprob: -17.000385284423828
    10. '())' → logprob: -17.000385284423828

Token 367: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006364276050589979
    2. '                        
' → logprob: -8.000636100769043
    3. '<|end|>' → logprob: -9.625636100769043
    4. '                        ' → logprob: -9.750636100769043
    5. '                           ' → logprob: -10.375636100769043
    6. '                   ' → logprob: -10.625636100769043
    7. '               ' → logprob: -11.000636100769043
    8. '					' → logprob: -11.125636100769043
    9. '
' → logprob: -11.375636100769043
    10. '```' → logprob: -11.375636100769043

Token 368: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23318727314472198
    2. ' s' → logprob: -1.7331873178482056
    3. '                       ' → logprob: -3.483187198638916
    4. '                           ' → logprob: -7.733187198638916
    5. '                        ' → logprob: -9.983187675476074
    6. '                   ' → logprob: -10.733187675476074
    7. ' ' → logprob: -11.108187675476074
    8. ' ' → logprob: -11.233187675476074
    9. '                               ' → logprob: -11.858187675476074
    10. '               ' → logprob: -12.358187675476074

Token 369: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -7.862962229410186e-05
    2. '_' → logprob: -9.500078201293945
    3. ' _' → logprob: -13.875078201293945
    4. 'w' → logprob: -14.000078201293945
    5. '_w' → logprob: -14.125078201293945
    6. '_STACK' → logprob: -14.750078201293945
    7. '_
' → logprob: -14.875078201293945
    8. '_s' → logprob: -16.125078201293945
    9. ')_' → logprob: -16.875078201293945
    10. '
' → logprob: -16.875078201293945

Token 370: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. 'w' → logprob: -16.0
    4. '[
' → logprob: -19.5
    5. '[v' → logprob: -20.0
    6. ' [' → logprob: -20.625
    7. '	w' → logprob: -21.125
    8. '```' → logprob: -21.125
    9. '[u' → logprob: -21.25
    10. '
' → logprob: -21.25

Token 371: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002695608709473163
    2. ']=' → logprob: -8.375269889831543
    3. ' ]' → logprob: -10.250269889831543
    4. '=' → logprob: -12.750269889831543
    5. ']
' → logprob: -14.625269889831543
    6. '           ' → logprob: -16.250268936157227
    7. '   ' → logprob: -16.375268936157227
    8. '[' → logprob: -16.750268936157227
    9. ' =' → logprob: -16.875268936157227
    10. '       ' → logprob: -17.125268936157227

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693451344966888
    2. ' =' → logprob: -2.12693452835083
    3. ']' → logprob: -12.876934051513672
    4. '=True' → logprob: -13.501934051513672
    5. ']=' → logprob: -13.626934051513672
    6. '=False' → logprob: -14.001934051513672
    7. '[' → logprob: -15.251934051513672
    8. '=
' → logprob: -16.501934051513672
    9. ')' → logprob: -16.751934051513672
    10. '＝' → logprob: -16.876934051513672

Token 373: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. '(False' → logprob: -22.000017166137695
    4. '=False' → logprob: -24.000017166137695
    5. 'false' → logprob: -24.875017166137695
    6. 'F' → logprob: -25.750017166137695
    7. '_false' → logprob: -25.875017166137695
    8. '.False' → logprob: -25.875017166137695
    9. '   ' → logprob: -26.375017166137695
    10. 'True' → logprob: -26.625017166137695

Token 374: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003408263437449932
    2. '<|end|>' → logprob: -9.500340461730957
    3. '                        
' → logprob: -9.875340461730957
    4. ',' → logprob: -10.000340461730957
    5. 's' → logprob: -10.250340461730957
    6. '                           ' → logprob: -10.375340461730957
    7. '                   ' → logprob: -10.750340461730957
    8. '                        ' → logprob: -11.000340461730957
    9. '               ' → logprob: -11.000340461730957
    10. '           ' → logprob: -11.500340461730957

Token 375: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -7.588793960167095e-05
    2. '                        
' → logprob: -10.625076293945312
    3. '                        ' → logprob: -11.250076293945312
    4. '                   ' → logprob: -11.875076293945312
    5. '                           ' → logprob: -12.125076293945312
    6. 's' → logprob: -12.250076293945312
    7. '					' → logprob: -12.375076293945312
    8. ' ' → logprob: -12.750076293945312
    9. '<|end|>' → logprob: -12.875076293945312
    10. '               ' → logprob: -13.000076293945312

Token 376: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.09811676293611526
    2. ' s' → logprob: -2.598116874694824
    3. '                       ' → logprob: -3.973116874694824
    4. '                           ' → logprob: -8.723116874694824
    5. '                   ' → logprob: -10.098116874694824
    6. '               ' → logprob: -11.973116874694824
    7. '   ' → logprob: -12.348116874694824
    8. ' ' → logprob: -12.348116874694824
    9. '	s' → logprob: -12.973116874694824
    10. '           ' → logprob: -13.223116874694824

Token 377: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -5.407366916188039e-05
    2. 'c' → logprob: -11.500054359436035
    3. 'ccc' → logprob: -11.500054359436035
    4. '	cc' → logprob: -11.500054359436035
    5. '.append' → logprob: -12.000054359436035
    6. 'ccb' → logprob: -12.500054359436035
    7. 'cci' → logprob: -12.750054359436035
    8. 'CC' → logprob: -12.875054359436035
    9. '_cc' → logprob: -13.625054359436035
    10. 'sc' → logprob: -13.625054359436035

Token 378: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015035520773380995
    2. '.' → logprob: -6.5015034675598145
    3. '.app' → logprob: -14.376503944396973
    4. 'append' → logprob: -14.876503944396973
    5. '.add' → logprob: -16.001502990722656
    6. ' .' → logprob: -16.501502990722656
    7. '.Append' → logprob: -17.001502990722656
    8. '.=' → logprob: -17.251502990722656
    9. '.ap' → logprob: -17.376502990722656
    10. '_append' → logprob: -17.876502990722656

Token 379: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.250005722045898
    3. 'w' → logprob: -14.625005722045898
    4. '(
' → logprob: -19.5000057220459
    5. '	w' → logprob: -20.6250057220459
    6. ' (' → logprob: -21.1250057220459
    7. '(v' → logprob: -21.7500057220459
    8. ' w' → logprob: -22.5000057220459
    9. '<w' → logprob: -22.7500057220459
    10. '(u' → logprob: -23.0000057220459

Token 380: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1223607063293457
    2. '                       ' → logprob: -2.7473607063293457
    3. ')
' → logprob: -2.9973607063293457
    4. '<|end|>' → logprob: -7.122360706329346
    5. 'if' → logprob: -9.872360229492188
    6. '           ' → logprob: -10.247360229492188
    7. '               ' → logprob: -10.372360229492188
    8. '                           ' → logprob: -10.497360229492188
    9. '                   ' → logprob: -10.497360229492188
    10. ')#' → logprob: -10.997360229492188

Token 381: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00015622020873706788
    2. '               ' → logprob: -10.00015640258789
    3. '                   ' → logprob: -10.12515640258789
    4. '           ' → logprob: -10.87515640258789
    5. '					' → logprob: -11.00015640258789
    6. '       ' → logprob: -11.75015640258789
    7. '                        ' → logprob: -12.12515640258789
    8. '                           ' → logprob: -12.12515640258789
    9. '<|end|>' → logprob: -12.87515640258789
    10. '```' → logprob: -13.12515640258789

Token 382: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0031594187021255493
    2. 'if' (adapté à ' if') → logprob: -6.378159523010254
    3. '                   ' → logprob: -7.128159523010254
    4. ' if' → logprob: -7.753159523010254
    5. '               ' → logprob: -9.378159523010254
    6. '					' → logprob: -10.128159523010254
    7. '   ' → logprob: -10.378159523010254
    8. '	                   ' → logprob: -11.003159523010254
    9. '           ' → logprob: -11.253159523010254
    10. '       ' → logprob: -11.628159523010254

Token 383: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20141363143920898
    2. ' w' → logprob: -1.701413631439209
    3. '	w' → logprob: -14.951414108276367
    4. '
' → logprob: -17.451414108276367
    5. '<w' → logprob: -18.076414108276367
    6. '    ' → logprob: -18.451414108276367
    7. ' ' → logprob: -18.826414108276367
    8. '   ' → logprob: -18.826414108276367
    9. '(w' → logprob: -19.326414108276367
    10. 'v' → logprob: -19.701414108276367

Token 384: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38691458106040955
    2. ' ==' → logprob: -1.136914610862732
    3. '==
' → logprob: -10.511914253234863
    4. '=' → logprob: -11.261914253234863
    5. ']==' → logprob: -13.886914253234863
    6. ')==' → logprob: -14.386914253234863
    7. '<|end|>' → logprob: -14.886914253234863
    8. '===' → logprob: -15.011914253234863
    9. ' =' → logprob: -15.011914253234863
    10. ' ==
' → logprob: -15.636914253234863

Token 385: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.15310683415737e-05
    2. ' v' → logprob: -10.750021934509277
    3. '	v' → logprob: -18.50002098083496
    4. ')v' → logprob: -21.25002098083496
    5. '   ' → logprob: -22.87502098083496
    6. '
' → logprob: -23.37502098083496
    7. '[v' → logprob: -23.62502098083496
    8. '_v' → logprob: -23.87502098083496
    9. ':v' → logprob: -24.50002098083496
    10. '<v' → logprob: -24.75002098083496

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2593340277671814
    2. ':
' → logprob: -1.5093340873718262
    3. '           ' → logprob: -5.134334087371826
    4. '                           ' → logprob: -7.009334087371826
    5. 'break' → logprob: -8.634333610534668
    6. ' break' → logprob: -9.134333610534668
    7. '):
' → logprob: -9.884333610534668
    8. '               ' → logprob: -10.009333610534668
    9. '                       ' → logprob: -10.134333610534668
    10. ',' → logprob: -10.384333610534668

Token 387: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.001216186792589724
    2. ' break' → logprob: -7.751216411590576
    3. '           ' → logprob: -8.376215934753418
    4. '               ' → logprob: -8.751215934753418
    5. '                               ' → logprob: -8.876215934753418
    6. '                   ' → logprob: -9.876215934753418
    7. 'break' → logprob: -9.876215934753418
    8. '                       ' → logprob: -10.126215934753418
    9. '   ' → logprob: -10.126215934753418
    10. '						' → logprob: -11.001215934753418

Token 388: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4340659976005554
    2. '                               ' → logprob: -1.1840660572052002
    3. ' break' → logprob: -3.1840660572052
    4. '                           ' → logprob: -5.809065818786621
    5. '	break' → logprob: -6.809065818786621
    6. '                                   ' → logprob: -8.559065818786621
    7. '               ' → logprob: -8.559065818786621
    8. '                   ' → logprob: -9.309065818786621
    9. '                       ' → logprob: -10.559065818786621
    10. '							' → logprob: -11.059065818786621

Token 389: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03980552405118942
    2. '           ' → logprob: -3.7898054122924805
    3. '               ' → logprob: -4.5398054122924805
    4. '       ' → logprob: -6.4148054122924805
    5. '<|end|>' → logprob: -7.1648054122924805
    6. '                       ' → logprob: -7.4148054122924805
    7. '
' → logprob: -8.28980541229248
    8. '    
' → logprob: -8.28980541229248
    9. ' return' → logprob: -8.41480541229248
    10. '   ' → logprob: -8.41480541229248

Token 391: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48949360847473145
    2. 's' (adapté à ' s') → logprob: -1.6144936084747314
    3. '                   ' → logprob: -1.8644936084747314
    4. '               ' → logprob: -3.6144936084747314
    5. '   ' → logprob: -5.989493370056152
    6. ' s' → logprob: -6.739493370056152
    7. '       ' → logprob: -6.739493370056152
    8. '                       ' → logprob: -7.364493370056152
    9. '                           ' → logprob: -8.239493370056152
    10. '          ' → logprob: -9.864493370056152

Token 392: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.007185949478298426
    2. '           ' → logprob: -5.632185935974121
    3. '.append' → logprob: -7.007185935974121
    4. '                   ' → logprob: -7.632185935974121
    5. 'c' → logprob: -7.757185935974121
    6. '       ' → logprob: -7.757185935974121
    7. '.cc' → logprob: -8.132185935974121
    8. 'CC' → logprob: -8.382185935974121
    9. 'cs' → logprob: -8.507185935974121
    10. '               ' → logprob: -8.632185935974121

Token 393: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0181912649422884
    2. '.append' → logprob: -4.018191337585449
    3. '.' → logprob: -10.14319133758545
    4. ' s' → logprob: -14.14319133758545
    5. 'append' → logprob: -14.26819133758545
    6. '.s' → logprob: -16.268190383911133
    7. 'Append' → logprob: -16.393190383911133
    8. '.reverse' → logprob: -16.393190383911133
    9. '.insert' → logprob: -16.768190383911133
    10. '.extend' → logprob: -16.768190383911133

Token 394: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.841743303695694e-05
    2. '.' → logprob: -9.25009822845459
    3. '.app' → logprob: -13.50009822845459
    4. '.ap' → logprob: -14.25009822845459
    5. '.extend' → logprob: -16.125099182128906
    6. '.Append' → logprob: -16.875099182128906
    7. '.add' → logprob: -17.250099182128906
    8. '.push' → logprob: -17.875099182128906
    9. 'append' → logprob: -18.000099182128906
    10. '.insert' → logprob: -19.625099182128906

Token 395: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. 's' → logprob: -15.50001335144043
    4. '(
' → logprob: -16.75001335144043
    5. ' (' → logprob: -20.50001335144043
    6. '(

' → logprob: -21.75001335144043
    7. '(list' → logprob: -22.12501335144043
    8. '((' → logprob: -22.12501335144043
    9. '(S' → logprob: -22.37501335144043
    10. '(ss' → logprob: -22.87501335144043

Token 396: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.013729139231145382
    2. 'c' → logprob: -4.388729095458984
    3. ')' → logprob: -6.888729095458984
    4. ']' → logprob: -10.013729095458984
    5. 'cl' → logprob: -10.388729095458984
    6. 'sc' → logprob: -10.763729095458984
    7. 'с' → logprob: -11.013729095458984
    8. '}' → logprob: -11.138729095458984
    9. 'rc' → logprob: -11.388729095458984
    10. '])' → logprob: -11.638729095458984

Token 397: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014942926645744592
    2. ')
' → logprob: -9.000149726867676
    3. '           ' → logprob: -11.125149726867676
    4. '               ' → logprob: -11.750149726867676
    5. ')return' → logprob: -14.125149726867676
    6. '       ' → logprob: -14.250149726867676
    7. ' )' → logprob: -14.625149726867676
    8. '                   ' → logprob: -14.875149726867676
    9. '())' → logprob: -15.125149726867676
    10. '
' → logprob: -15.625149726867676

Token 398: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11968565732240677
    2. '           ' → logprob: -2.494685649871826
    3. ')' → logprob: -4.369685649871826
    4. 'return' → logprob: -4.744685649871826
    5. '   ' → logprob: -5.244685649871826
    6. ' return' → logprob: -6.494685649871826
    7. '<|end|>' → logprob: -7.494685649871826
    8. '
' → logprob: -8.119686126708984
    9. '    
' → logprob: -8.744686126708984
    10. '    ' → logprob: -8.744686126708984

Token 399: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.34943023324012756
    2. ' for' → logprob: -1.3494302034378052
    3. '           ' → logprob: -3.3494303226470947
    4. '       ' → logprob: -8.099430084228516
    5. '
' → logprob: -9.599430084228516
    6. 'def' → logprob: -10.849430084228516
    7. 'return' → logprob: -11.474430084228516
    8. '	for' → logprob: -12.099430084228516
    9. '   ' → logprob: -12.724430084228516
    10. '            
' → logprob: -12.849430084228516

Token 400: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00672448705881834
    2. ' v' → logprob: -5.0067243576049805
    3. 'i' → logprob: -11.63172435760498
    4. 'u' → logprob: -16.131725311279297
    5. ' i' → logprob: -16.381725311279297
    6. 'node' → logprob: -18.256725311279297
    7. '	v' → logprob: -18.256725311279297
    8. '   ' → logprob: -19.006725311279297
    9. 'vertex' → logprob: -19.006725311279297
    10. '```' → logprob: -19.256725311279297

Token 401: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021893989760428667
    2. 'in' → logprob: -6.127189636230469
    3. ' ' → logprob: -12.627189636230469
    4. ' 
' → logprob: -14.377189636230469
    5. '	in' → logprob: -16.62718963623047
    6. ',' → logprob: -16.87718963623047
    7. ' i' → logprob: -17.00218963623047
    8. 'import' → logprob: -17.25218963623047
    9. 'range' → logprob: -17.25218963623047
    10. ' ' → logprob: -17.25218963623047

Token 402: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -20.875431060791016
    4. '	range' → logprob: -23.250431060791016
    5. '   ' → logprob: -24.000431060791016
    6. 'Range' → logprob: -24.750431060791016
    7. '
' → logprob: -24.875431060791016
    8. ' ' → logprob: -24.875431060791016
    9. 'list' → logprob: -26.000431060791016
    10. '.range' → logprob: -26.000431060791016

Token 403: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003469057264737785
    2. '(self' → logprob: -8.000347137451172
    3. '1' → logprob: -11.625347137451172
    4. '(
' → logprob: -13.000347137451172
    5. 'self' → logprob: -15.500347137451172
    6. ' (' → logprob: -17.625347137451172
    7. '   ' → logprob: -19.250347137451172
    8. '(

' → logprob: -20.125347137451172
    9. '(len' → logprob: -20.125347137451172
    10. ' self' → logprob: -20.625347137451172

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2027251124382019
    2. 'self' → logprob: -1.7027251720428467
    3. '0' → logprob: -6.702724933624268
    4. ' self' → logprob: -9.952725410461426
    5. '(self' → logprob: -10.452725410461426
    6. 'len' → logprob: -12.577725410461426
    7. ' ' → logprob: -13.702725410461426
    8. '   ' → logprob: -14.202725410461426
    9. '
' → logprob: -14.452725410461426
    10. '(' → logprob: -14.827725410461426

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ' ,' → logprob: -11.250020980834961
    3. ',self' → logprob: -12.250020980834961
    4. ',
' → logprob: -12.875020980834961
    5. ',n' → logprob: -15.375020980834961
    6. ',len' → logprob: -15.750020980834961
    7. 'self' → logprob: -16.87502098083496
    8. ',v' → logprob: -17.87502098083496
    9. '1' → logprob: -18.00002098083496
    10. ',num' → logprob: -18.37502098083496

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. '           ' → logprob: -14.750000953674316
    3. ' self' → logprob: -15.125000953674316
    4. '
' → logprob: -17.125
    5. '       ' → logprob: -18.875
    6. 'len' → logprob: -19.0
    7. '(self' → logprob: -19.25
    8. '   ' → logprob: -19.75
    9. '               ' → logprob: -19.75
    10. '                   ' → logprob: -21.0

Token 407: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0019301822176203132
    2. 'n' → logprob: -6.251930236816406
    3. '.' → logprob: -13.501930236816406
    4. ' .' → logprob: -16.626930236816406
    5. 'self' → logprob: -17.001930236816406
    6. '.
' → logprob: -17.001930236816406
    7. '+n' → logprob: -17.501930236816406
    8. '	n' → logprob: -18.126930236816406
    9. '(n' → logprob: -18.251930236816406
    10. '   ' → logprob: -18.376930236816406

Token 408: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00026169343618676066
    2. ' +' → logprob: -8.250261306762695
    3. '()+' → logprob: -15.625261306762695
    4. '+
' → logprob: -16.250261306762695
    5. ')+' → logprob: -16.500261306762695
    6. '
' → logprob: -18.250261306762695
    7. '＋' → logprob: -18.625261306762695
    8. '):
' → logprob: -19.750261306762695
    9. '1' → logprob: -20.000261306762695
    10. '   ' → logprob: -20.125261306762695

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05489491671323776
    2. '2' → logprob: -2.9298949241638184
    3. ' ' → logprob: -11.30489444732666
    4. '
' → logprob: -15.55489444732666
    5. '   ' → logprob: -16.304895401000977
    6. '```' → logprob: -18.179895401000977
    7. ')' → logprob: -19.054895401000977
    8. '3' → logprob: -19.117395401000977
    9. '+' → logprob: -19.117395401000977
    10. '

' → logprob: -19.429895401000977

Token 410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10041262954473495
    2. '):
' → logprob: -2.350412607192993
    3. ':' → logprob: -8.600412368774414
    4. ')' → logprob: -11.850412368774414
    5. ' ):' → logprob: -12.350412368774414
    6. '):
' → logprob: -12.975412368774414
    7. '+' → logprob: -13.475412368774414
    8. ':
' → logprob: -13.475412368774414
    9. '           ' → logprob: -13.475412368774414
    10. ',' → logprob: -13.600412368774414

Token 411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005031421314924955
    2. ' strong' → logprob: -5.755031585693359
    3. '
' → logprob: -6.630031585693359
    4. 'strong' → logprob: -8.38003158569336
    5. '           ' → logprob: -8.50503158569336
    6. '                
' → logprob: -10.00503158569336
    7. '                   ' → logprob: -11.50503158569336
    8. '   ' → logprob: -11.50503158569336
    9. '              ' → logprob: -12.00503158569336
    10. '                ' → logprob: -12.38003158569336

Token 412: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16965626180171967
    2. ' if' → logprob: -1.9196562767028809
    3. '               ' → logprob: -4.669656276702881
    4. '           ' → logprob: -12.544655799865723
    5. '                   ' → logprob: -12.544655799865723
    6. '   ' → logprob: -12.669655799865723
    7. '	if' → logprob: -14.044655799865723
    8. 'self' → logprob: -15.294655799865723
    9. '	           ' → logprob: -15.419655799865723
    10. ' ' → logprob: -15.669655799865723

Token 413: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.023247458040714264
    2. ' indices' → logprob: -3.773247480392456
    3. '(indices' → logprob: -13.273247718811035
    4. 'indexes' → logprob: -15.648247718811035
    5. '"indices' → logprob: -17.14824676513672
    6. '   ' → logprob: -17.52324676513672
    7. '.indices' → logprob: -18.39824676513672
    8. ' indexes' → logprob: -19.52324676513672
    9. 'ind' → logprob: -19.52324676513672
    10. 'Indices' → logprob: -19.64824676513672

Token 414: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.625
    3. '[w' → logprob: -19.75
    4. '[' → logprob: -19.875
    5. ' [' → logprob: -21.125
    6. '[
' → logprob: -21.125
    7. '[u' → logprob: -22.0
    8. '
' → logprob: -22.75
    9. '	v' → logprob: -22.75
    10. '[V' → logprob: -23.0

Token 415: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7715476751327515
    2. ']' → logprob: -1.2715476751327515
    3. '==' → logprob: -1.5215476751327515
    4. ']==' → logprob: -3.396547794342041
    5. '==-' → logprob: -5.271547794342041
    6. '[' → logprob: -8.521547317504883
    7. ' ]' → logprob: -9.771547317504883
    8. '==
' → logprob: -11.021547317504883
    9. ')' → logprob: -11.396547317504883
    10. ' ' → logprob: -11.521547317504883

Token 416: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24630269408226013
    2. '==-' → logprob: -1.9963027238845825
    3. ' ==' → logprob: -2.496302604675293
    4. '==
' → logprob: -9.496302604675293
    5. ']==' → logprob: -11.746302604675293
    6. '=' → logprob: -12.996302604675293
    7. ')==' → logprob: -13.246302604675293
    8. ' ' → logprob: -14.496302604675293
    9. '===' → logprob: -14.621302604675293
    10. '()==' → logprob: -15.996302604675293

Token 417: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.7697225252486533e-06
    2. ' -' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '  ' → logprob: -23.750003814697266
    5. '	' → logprob: -24.000003814697266
    6. ' ' → logprob: -24.125003814697266
    7. '           ' → logprob: -24.250003814697266
    8. '−' → logprob: -24.250003814697266
    9. '```' → logprob: -24.500003814697266
    10. '-
' → logprob: -24.750003814697266

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '-' → logprob: -12.375005722045898
    3. '```' → logprob: -14.687505722045898
    4. '<|end|>' → logprob: -15.625005722045898
    5. ' ' → logprob: -16.0625057220459
    6. '2' → logprob: -16.7500057220459
    7. ' -' → logprob: -16.9375057220459
    8. 'def' → logprob: -17.0000057220459
    9. '१' → logprob: -17.3750057220459
    10. '
' → logprob: -17.5000057220459

Token 419: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.030118508264422417
    2. ':' → logprob: -4.155118465423584
    3. '                   ' → logprob: -4.280118465423584
    4. '               ' → logprob: -9.905118942260742
    5. '):
' → logprob: -10.405118942260742
    6. '                       ' → logprob: -10.780118942260742
    7. ' :
' → logprob: -10.780118942260742
    8. ',' → logprob: -12.155118942260742
    9. ':
' → logprob: -12.280118942260742
    10. '():
' → logprob: -12.655118942260742

Token 420: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017536457628011703
    2. ':' → logprob: -4.642536640167236
    3. ':
' → logprob: -5.017536640167236
    4. '                       ' → logprob: -7.892536640167236
    5. '               ' → logprob: -8.017536163330078
    6. ' :' → logprob: -8.517536163330078
    7. '):
' → logprob: -10.017536163330078
    8. ' :
' → logprob: -10.017536163330078
    9. '                    
' → logprob: -10.392536163330078
    10. ',' → logprob: -10.642536163330078

Token 421: ' strong' (ID: 5532)
  Prédit: 'strong'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' (adapté à ' strong') → logprob: -0.25301191210746765
    2. ' strong' → logprob: -1.50301194190979
    3. '                   ' → logprob: -6.878011703491211
    4. '                       ' → logprob: -10.378011703491211
    5. '               ' → logprob: -11.128011703491211
    6. '                    ' → logprob: -13.003011703491211
    7. '
' → logprob: -13.628011703491211
    8. 'self' → logprob: -14.003011703491211
    9. '                ' → logprob: -14.878011703491211
    10. '           ' → logprob: -15.003011703491211

Token 422: 'connect' (ID: 9291)
  Prédit: 'connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -1.0280383548888494e-06
    2. '_connect' → logprob: -14.750000953674316
    3. 'conn' → logprob: -15.375000953674316
    4. 'c' → logprob: -16.375001907348633
    5. ' connect' → logprob: -16.625001907348633
    6. 'con' → logprob: -16.875001907348633
    7. 'convert' → logprob: -17.375001907348633
    8. 'construct' → logprob: -17.875001907348633
    9. '	connect' → logprob: -18.125001907348633
    10. '
' → logprob: -18.250001907348633

Token 423: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -9.662937372922897e-05
    2. '(' → logprob: -9.250096321105957
    3. '(w' → logprob: -15.000096321105957
    4. ' (' → logprob: -15.625096321105957
    5. '(
' → logprob: -17.125097274780273
    6. '(V' → logprob: -17.750097274780273
    7. '((' → logprob: -19.625097274780273
    8. ')' → logprob: -20.500097274780273
    9. '()' → logprob: -20.500097274780273
    10. '(

' → logprob: -20.500097274780273

Token 424: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. ')
' → logprob: -10.62502670288086
    3. ' )' → logprob: -13.87502670288086
    4. ')v' → logprob: -15.12502670288086
    5. '<|end|>' → logprob: -15.75002670288086
    6. '())' → logprob: -15.87502670288086
    7. ')`' → logprob: -16.25002670288086
    8. ')
' → logprob: -16.50002670288086
    9. ')

' → logprob: -16.62502670288086
    10. ')#' → logprob: -16.62502670288086

Token 425: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41328001022338867
    2. 'return' (adapté à ' return') → logprob: -1.4132800102233887
    3. ' return' → logprob: -2.4132800102233887
    4. '       ' → logprob: -5.288280010223389
    5. '	return' → logprob: -8.163280487060547
    6. '
' → logprob: -8.788280487060547
    7. '   ' → logprob: -9.788280487060547
    8. '               ' → logprob: -10.788280487060547
    9. '	       ' → logprob: -11.288280487060547
    10. '<|end|>' → logprob: -11.538280487060547

Token 427: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00024965754710137844
    2. '[]' → logprob: -8.500249862670898
    3. ' s' → logprob: -10.250249862670898
    4. '[s' → logprob: -11.500249862670898
    5. ' []' → logprob: -14.375249862670898
    6. '(s' → logprob: -16.1252498626709
    7. '[' → logprob: -17.0002498626709
    8. '	s' → logprob: -18.2502498626709
    9. '[]}' → logprob: -18.2502498626709
    10. '[:]' → logprob: -18.2502498626709

Token 428: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -5.438573680294212e-06
    2. 'c' → logprob: -12.250005722045898
    3. 's' → logprob: -14.375005722045898
    4. 'ccd' → logprob: -17.2500057220459
    5. 'ccc' → logprob: -17.6250057220459
    6. 'с' → logprob: -17.8750057220459
    7. 'cci' → logprob: -18.0000057220459
    8. 'ccb' → logprob: -18.6250057220459
    9. '	cc' → logprob: -18.7500057220459
    10. '_cc' → logprob: -19.7500057220459

Token 429: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. 'с' → logprob: -18.75
    3. '_s' → logprob: -19.0
    4. '[s' → logprob: -19.0
    5. '[' → logprob: -19.125
    6. 'ss' → logprob: -19.625
    7. ''s' → logprob: -19.75
    8. 'sc' → logprob: -20.25
    9. '[]' → logprob: -20.375
    10. '[
' → logprob: -20.5

Token 430: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: ' class' (ID: 744)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4150998890399933
    2. '   ' → logprob: -1.540099859237671
    3. '<|end|>' → logprob: -2.915099859237671
    4. '
' → logprob: -3.165099859237671
    5. 'def' → logprob: -4.91510009765625
    6. ' ' → logprob: -4.91510009765625
    7. '    ' → logprob: -5.66510009765625
    8. '        
' → logprob: -6.04010009765625
    9. '        ' → logprob: -6.41510009765625
    10. ')' → logprob: -6.66510009765625

Token 433: ' Minimal' (ID: 99472)
  Prédit: 'Shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Shop' → logprob: -0.893160343170166
    2. 'Planner' → logprob: -2.143160343170166
    3. ' Shop' → logprob: -2.268160343170166
    4. ' Planner' → logprob: -2.393160343170166
    5. 'Top' → logprob: -2.518160343170166
    6. ' Shopper' → logprob: -3.393160343170166
    7. 'Visitor' → logprob: -3.893160343170166
    8. 'Plan' → logprob: -4.018160343170166
    9. 'Path' → logprob: -4.018160343170166
    10. 'Visit' → logprob: -4.268160343170166

Token 434: 'Walk' (ID: 37063)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.7846405506134033
    2. 'Visit' → logprob: -1.2846405506134033
    3. 'Step' → logprob: -2.0346405506134033
    4. 'Route' → logprob: -3.9096405506134033
    5. 'Tour' → logprob: -3.9096405506134033
    6. 'Distance' → logprob: -4.159640312194824
    7. 'Sp' → logprob: -4.159640312194824
    8. 'Planner' → logprob: -4.284640312194824
    9. 'Visitor' → logprob: -5.034640312194824
    10. 'Plan' → logprob: -5.159640312194824

Token 435: 'Calculator' (ID: 50159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09417127072811127
    2. 'Planner' → logprob: -2.4691712856292725
    3. ':
' → logprob: -5.469171047210693
    4. '(' → logprob: -8.219171524047852
    5. 'Plan' → logprob: -8.219171524047852
    6. 'Planning' → logprob: -8.969171524047852
    7. 'Builder' → logprob: -9.094171524047852
    8. 'Optimizer' → logprob: -9.469171524047852
    9. 'Step' → logprob: -10.469171524047852
    10. 'Calculator' → logprob: -11.469171524047852

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005243833642452955
    2. ':
' → logprob: -5.25524377822876
    3. ':def' → logprob: -12.380244255065918
    4. '(' → logprob: -12.630244255065918
    5. ':

' → logprob: -14.380244255065918
    6. '(M' → logprob: -14.630244255065918
    7. '():' → logprob: -14.630244255065918
    8. '(object' → logprob: -15.505244255065918
    9. '):' → logprob: -15.755244255065918
    10. 'def' → logprob: -15.880244255065918

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007517361082136631
    2. 'def' → logprob: -8.000751495361328
    3. '   ' → logprob: -8.875751495361328
    4. '<|end|>' → logprob: -9.625751495361328
    5. ' def' → logprob: -9.875751495361328
    6. ':' → logprob: -10.000751495361328
    7. ':
' → logprob: -10.000751495361328
    8. '
' → logprob: -10.750751495361328
    9. '	def' → logprob: -11.500751495361328
    10. '<|end|>' → logprob: -11.875751495361328

Token 438: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.029978763312101364
    2. 'def' (adapté à ' def') → logprob: -3.5299787521362305
    3. '   ' → logprob: -8.65497875213623
    4. '       ' → logprob: -10.02997875213623
    5. '	def' → logprob: -11.77997875213623
    6. ' class' → logprob: -13.77997875213623
    7. '    ' → logprob: -14.40497875213623
    8. 'class' → logprob: -14.52997875213623
    9. ' ' → logprob: -15.65497875213623
    10. '           ' → logprob: -16.904979705810547

Token 439: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.036032192409038544
    2. ' def' → logprob: -3.536032199859619
    3. '__' → logprob: -5.286032199859619
    4. 'def' → logprob: -6.786032199859619
    5. '_' → logprob: -10.161031723022461
    6. ' _' → logprob: -10.661031723022461
    7. '_init' → logprob: -12.161031723022461
    8. 'init' → logprob: -13.786031723022461
    9. ' init' → logprob: -14.536031723022461
    10. ' find' → logprob: -14.786031723022461

Token 440: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0683535037969705e-05
    2. 'def' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250011444091797
    4. 'i' → logprob: -16.500011444091797
    5. 'in' → logprob: -16.500011444091797
    6. 'int' → logprob: -16.625011444091797
    7. ' init' → logprob: -16.750011444091797
    8. 'ini' → logprob: -16.875011444091797
    9. '```' → logprob: -17.250011444091797
    10. '_init' → logprob: -17.500011444091797

Token 441: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009280181839130819
    2. '__' → logprob: -7.000927925109863
    3. '__(
' → logprob: -11.250927925109863
    4. '(self' → logprob: -13.125927925109863
    5. '__((' → logprob: -14.125927925109863
    6. '(' → logprob: -15.375927925109863
    7. '__('' → logprob: -15.625927925109863
    8. '_(' → logprob: -16.25092887878418
    9. '___' → logprob: -16.50092887878418
    10. '__[' → logprob: -16.50092887878418

Token 442: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.77022064034827e-05
    2. ' self' → logprob: -9.250097274780273
    3. '       ' → logprob: -14.375097274780273
    4. '(self' → logprob: -14.875097274780273
    5. ',' → logprob: -15.500097274780273
    6. ')' → logprob: -15.500097274780273
    7. '           ' → logprob: -16.500097274780273
    8. '
' → logprob: -17.250097274780273
    9. '   ' → logprob: -17.250097274780273
    10. '):
' → logprob: -17.500097274780273

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001231657573953271
    2. 'self' → logprob: -6.751231670379639
    3. ' ,' → logprob: -10.25123119354248
    4. '(self' → logprob: -11.50123119354248
    5. ',self' → logprob: -11.62623119354248
    6. ' self' → logprob: -12.25123119354248
    7. ',
' → logprob: -13.62623119354248
    8. ')' → logprob: -15.00123119354248
    9. '       ' → logprob: -15.12623119354248
    10. ' (' → logprob: -16.001232147216797

Token 444: ' n' (ID: 297)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.4333316087722778
    2. 'shops' → logprob: -1.5583316087722778
    3. 'n' → logprob: -1.8083316087722778
    4. ' n' → logprob: -2.8083314895629883
    5. ' positions' → logprob: -2.8083314895629883
    6. ' mall' → logprob: -3.0583314895629883
    7. 'self' → logprob: -3.1833314895629883
    8. 'mall' → logprob: -3.3083314895629883
    9. 'graph' → logprob: -3.5583314895629883
    10. ' shops' → logprob: -3.6833314895629883

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7004186511039734
    2. '):' → logprob: -0.7004186511039734
    3. '):
' → logprob: -4.950418472290039
    4. ' ):' → logprob: -9.825418472290039
    5. ')' → logprob: -10.450418472290039
    6. '       ' → logprob: -10.575418472290039
    7. ':' → logprob: -10.825418472290039
    8. '   ' → logprob: -11.075418472290039
    9. ' ,' → logprob: -11.950418472290039
    10. '):
' → logprob: -12.825418472290039

Token 446: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.6363012790679932
    2. ' constraints' → logprob: -1.7613012790679932
    3. 'positions' → logprob: -1.8863012790679932
    4. 'edges' → logprob: -3.011301279067993
    5. 'shops' → logprob: -3.386301279067993
    6. ' positions' → logprob: -4.261301040649414
    7. ' edges' → logprob: -4.511301040649414
    8. 'dependencies' → logprob: -4.886301040649414
    9. ' shops' → logprob: -5.386301040649414
    10. 'shop' → logprob: -5.511301040649414

Token 447: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03859860450029373
    2. ',' → logprob: -3.4135985374450684
    3. ':' → logprob: -5.913598537445068
    4. '):
' → logprob: -6.163598537445068
    5. ' ):' → logprob: -10.288599014282227
    6. ')' → logprob: -10.538599014282227
    7. '=[]' → logprob: -10.663599014282227
    8. '=' → logprob: -10.913599014282227
    9. '=None' → logprob: -12.038599014282227
    10. '):
' → logprob: -12.038599014282227

Token 448: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14593233168125153
    2. ',' → logprob: -2.89593243598938
    3. '       ' → logprob: -3.02093243598938
    4. '           ' → logprob: -3.89593243598938
    5. '):' → logprob: -5.770932197570801
    6. '<|end|>' → logprob: -6.020932197570801
    7. ':
' → logprob: -6.145932197570801
    8. '):
' → logprob: -6.895932197570801
    9. '(self' → logprob: -7.895932197570801
    10. '():' → logprob: -8.0209321975708

Token 449: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5762147903442383
    2. 'self' (adapté à ' self') → logprob: -0.8262147903442383
    3. '       ' → logprob: -8.701214790344238
    4. '           ' → logprob: -9.326214790344238
    5. '   ' → logprob: -11.201214790344238
    6. ' ' → logprob: -12.951214790344238
    7. '	self' → logprob: -13.951214790344238
    8. ' super' → logprob: -14.201214790344238
    9. '               ' → logprob: -14.451214790344238
    10. 'import' → logprob: -14.701214790344238

Token 450: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.131936177611351
    2. ' .' → logprob: -2.3819360733032227
    3. '.' → logprob: -3.5069360733032227
    4. ' =' → logprob: -6.881936073303223
    5. 'n' → logprob: -9.506936073303223
    6. '=' → logprob: -9.881936073303223
    7. ' n' → logprob: -10.881936073303223
    8. '=n' → logprob: -11.381936073303223
    9. '   ' → logprob: -12.006936073303223
    10. ' ' → logprob: -12.006936073303223

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1428566426038742
    2. '=' → logprob: -2.0178565979003906
    3. ',' → logprob: -8.76785659790039
    4. '<|end|>' → logprob: -12.14285659790039
    5. ' =
' → logprob: -12.26785659790039
    6. ' ,' → logprob: -12.39285659790039
    7. ')' → logprob: -12.89285659790039
    8. '   ' → logprob: -13.39285659790039
    9. '<|end|>' → logprob: -13.64285659790039
    10. ' ' → logprob: -13.64285659790039

Token 452: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31326448917388916
    2. ' n' → logprob: -1.3132644891738892
    3. '	n' → logprob: -13.063264846801758
    4. '
' → logprob: -14.813264846801758
    5. '_n' → logprob: -15.813264846801758
    6. '    ' → logprob: -16.938264846801758
    7. '   ' → logprob: -17.313264846801758
    8. ',n' → logprob: -17.688264846801758
    9. ' 
' → logprob: -17.813264846801758
    10. ' ' → logprob: -17.938264846801758

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14064672589302063
    2. '
' → logprob: -2.1406466960906982
    3. '<|end|>' → logprob: -4.890646934509277
    4. ',' → logprob: -6.140646934509277
    5. '       ' → logprob: -6.515646934509277
    6. 'self' → logprob: -7.015646934509277
    7. ',
' → logprob: -7.890646934509277
    8. '            
' → logprob: -8.515646934509277
    9. '    
' → logprob: -8.765646934509277
    10. ' 
' → logprob: -8.765646934509277

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016826363280415535
    2. '       ' → logprob: -4.266826152801514
    3. 'self' → logprob: -6.141826152801514
    4. '
' → logprob: -8.516826629638672
    5. '<|end|>' → logprob: -9.141826629638672
    6. ' self' → logprob: -9.266826629638672
    7. '   ' → logprob: -10.141826629638672
    8. '        
' → logprob: -10.766826629638672
    9. ',' → logprob: -11.516826629638672
    10. '               ' → logprob: -11.766826629638672

Token 455: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00025311444187536836
    2. ' self' → logprob: -8.750252723693848
    3. '           ' → logprob: -9.375252723693848
    4. '       ' → logprob: -12.500252723693848
    5. 'from' → logprob: -12.750252723693848
    6. 'constraints' → logprob: -13.375252723693848
    7. 'def' → logprob: -14.625252723693848
    8. '   ' → logprob: -14.750252723693848
    9. '
' → logprob: -15.375252723693848
    10. '	self' → logprob: -15.750252723693848

Token 456: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.0005925900186412036
    2. ' .' → logprob: -8.500592231750488
    3. 'constraints' → logprob: -8.750592231750488
    4. '.constraint' → logprob: -9.250592231750488
    5. '.' → logprob: -10.000592231750488
    6. '.dependencies' → logprob: -10.375592231750488
    7. '.const' → logprob: -10.750592231750488
    8. '.positions' → logprob: -11.125592231750488
    9. '.graph' → logprob: -12.000592231750488
    10. '.cons' → logprob: -12.250592231750488

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326261162757874
    2. '=' → logprob: -0.7576261162757874
    3. ')' → logprob: -11.0076265335083
    4. '=[]' → logprob: -13.2576265335083
    5. '   ' → logprob: -13.6326265335083
    6. ',' → logprob: -13.6326265335083
    7. '[' → logprob: -13.6326265335083
    8. '.' → logprob: -14.1326265335083
    9. '.append' → logprob: -14.5076265335083
    10. ' ' → logprob: -14.6326265335083

Token 458: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.014173968695104122
    2. ' constraints' → logprob: -4.264173984527588
    3. 'constraint' → logprob: -11.88917350769043
    4. 'const' → logprob: -12.63917350769043
    5. ' ' → logprob: -16.63917350769043
    6. '[]' → logprob: -16.88917350769043
    7. '.constraints' → logprob: -17.26417350769043
    8. 'cons' → logprob: -17.51417350769043
    9. ' const' → logprob: -17.76417350769043
    10. ' constraint' → logprob: -18.13917350769043

Token 459: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06264285743236542
    2. '<|end|>' → logprob: -3.062642812728882
    3. '       ' → logprob: -4.562643051147461
    4. '           ' → logprob: -6.187643051147461
    5. '<|end|>' → logprob: -7.562643051147461
    6. '        
' → logprob: -8.312643051147461
    7. '    
' → logprob: -8.312643051147461
    8. '   ' → logprob: -9.312643051147461
    9. ' 
' → logprob: -9.437643051147461
    10. 'def' → logprob: -9.812643051147461

Token 460: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25575822591781616
    2. '       ' → logprob: -1.630758285522461
    3. '           ' → logprob: -4.130758285522461
    4. '<|end|>' → logprob: -5.255758285522461
    5. '        
' → logprob: -5.505758285522461
    6. '    
' → logprob: -5.755758285522461
    7. '   ' → logprob: -7.755758285522461
    8. ' 
' → logprob: -8.255758285522461
    9. '        ' → logprob: -9.255758285522461
    10. '  
' → logprob: -9.380758285522461

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06610427796840668
    2. '           ' → logprob: -3.0661041736602783
    3. ' self' → logprob: -4.316104412078857
    4. 'def' → logprob: -6.191104412078857
    5. '       ' → logprob: -6.441104412078857
    6. '   ' → logprob: -9.0661039352417
    7. '
' → logprob: -9.1911039352417
    8. 'from' → logprob: -9.5661039352417
    9. 'import' → logprob: -10.0661039352417
    10. '	self' → logprob: -11.9411039352417

Token 462: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.5332834124565125
    2. ' graph' → logprob: -1.2832834720611572
    3. 'graph' → logprob: -2.7832834720611572
    4. ' .' → logprob: -3.6582834720611572
    5. 'dependency' → logprob: -5.033283233642578
    6. ' dependency' → logprob: -5.158283233642578
    7. '.' → logprob: -5.283283233642578
    8. 'distance' → logprob: -5.283283233642578
    9. ' def' → logprob: -5.783283233642578
    10. '._' → logprob: -6.408283233642578

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894111216068268
    2. '=' → logprob: -2.4639410972595215
    3. ' ' → logprob: -13.83894157409668
    4. 's' → logprob: -15.08894157409668
    5. ' =
' → logprob: -15.58894157409668
    6. '=
' → logprob: -17.27644157409668
    7. '    ' → logprob: -17.77644157409668
    8. '<|end|>' → logprob: -17.83894157409668
    9. '   ' → logprob: -17.90144157409668
    10. '＝' → logprob: -17.96394157409668

Token 464: ' Mall' (ID: 34192)
  Prédit: 'Mall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mall' → logprob: -0.00015788905147928745
    2. 'self' → logprob: -9.500158309936523
    3. 'Dependency' → logprob: -10.375158309936523
    4. '[M' → logprob: -11.000158309936523
    5. ' Mall' → logprob: -11.250158309936523
    6. '[]' → logprob: -11.875158309936523
    7. '\M' → logprob: -13.000158309936523
    8. 'dependency' → logprob: -13.125158309936523
    9. 'M' → logprob: -13.250158309936523
    10. '[]
' → logprob: -13.625158309936523

Token 465: 'Visit' (ID: 30514)
  Prédit: 'Visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Visit' → logprob: -1.9361264946837764e-07
    2. ' Visit' → logprob: -16.5
    3. '_visit' → logprob: -17.75
    4. 'Visits' → logprob: -18.125
    5. 'Visited' → logprob: -18.375
    6. '.Visit' → logprob: -18.625
    7. 'Visitor' → logprob: -18.75
    8. 'Dependency' → logprob: -18.75
    9. 'Walk' → logprob: -19.0
    10. '   ' → logprob: -19.0

Token 466: 'Planner' (ID: 120933)
  Prédit: 'Planner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -2.45848218582978e-06
    2. 'planner' → logprob: -13.00000286102295
    3. ' Planner' → logprob: -16.125001907348633
    4. 'Graph' → logprob: -17.250001907348633
    5. 'Calculator' → logprob: -17.625001907348633
    6. ' planner' → logprob: -17.875001907348633
    7. 'Plan' → logprob: -18.125001907348633
    8. 'Dependency' → logprob: -18.750001907348633
    9. 'Planning' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.000001907348633

Token 467: '.Dependency' (ID: 114556)
  Prédit: '.Dependency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Dependency' → logprob: -0.00027694785967469215
    2. '.' → logprob: -8.625276565551758
    3. '.Dep' → logprob: -9.500276565551758
    4. ' .' → logprob: -11.625276565551758
    5. '.Constraint' → logprob: -11.625276565551758
    6. '.D' → logprob: -13.625276565551758
    7. 'Dependency' → logprob: -13.625276565551758
    8. '.De' → logprob: -13.750276565551758
    9. '   ' → logprob: -14.375276565551758
    10. ' Dependency' → logprob: -15.750276565551758

Token 468: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -5.512236498361744e-07
    2. 'Graphs' → logprob: -14.875000953674316
    3. 'graph' → logprob: -16.25
    4. 'raph' → logprob: -18.0
    5. '_graph' → logprob: -18.375
    6. ' Graph' → logprob: -20.0
    7. ' graph' → logprob: -20.5
    8. 'Gra' → logprob: -21.0
    9. '_GRAPH' → logprob: -21.375
    10. '
' → logprob: -21.5

Token 469: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007217261008918285
    2. '(self' → logprob: -7.2507219314575195
    3. '(' → logprob: -11.50072193145752
    4. '(
' → logprob: -13.50072193145752
    5. ' (' → logprob: -15.25072193145752
    6. 'n' → logprob: -16.625720977783203
    7. 'self' → logprob: -18.000720977783203
    8. '```' → logprob: -18.000720977783203
    9. '
' → logprob: -18.250720977783203
    10. '((' → logprob: -18.875720977783203

Token 470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003289096348453313
    2. '+' → logprob: -8.62532901763916
    3. ')
' → logprob: -9.00032901763916
    4. ' +' → logprob: -11.12532901763916
    5. ' )' → logprob: -12.00032901763916
    6. '           ' → logprob: -13.25032901763916
    7. '       ' → logprob: -13.25032901763916
    8. '))' → logprob: -15.12532901763916
    9. ')
' → logprob: -15.75032901763916
    10. '<|end|>' → logprob: -15.75032901763916

Token 471: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28858426213264465
    2. '           ' → logprob: -1.6635842323303223
    3. '<|end|>' → logprob: -3.4135842323303223
    4. '
' → logprob: -4.038584232330322
    5. 'def' → logprob: -5.538584232330322
    6. '   ' → logprob: -5.663584232330322
    7. '<|end|>' → logprob: -7.163584232330322
    8. '        
' → logprob: -7.288584232330322
    9. 'for' → logprob: -7.663584232330322
    10. ' for' → logprob: -8.03858470916748

Token 472: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020353375002741814
    2. '#' (adapté à ' #') → logprob: -4.145353317260742
    3. ' for' → logprob: -5.645353317260742
    4. '           ' → logprob: -7.895353317260742
    5. 'self' → logprob: -8.395353317260742
    6. ' #' → logprob: -9.645353317260742
    7. 'positions' → logprob: -10.020353317260742
    8. '       ' → logprob: -10.270353317260742
    9. 'prev' → logprob: -11.520353317260742
    10. 'position' → logprob: -12.270353317260742

Token 473: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013530949363484979
    2. ' for' → logprob: -6.6263532638549805
    3. '#' → logprob: -10.87635326385498
    4. '           ' → logprob: -12.00135326385498
    5. 'self' → logprob: -13.50135326385498
    6. 'prev' → logprob: -15.37635326385498
    7. '       ' → logprob: -15.50135326385498
    8. 'pos' → logprob: -16.251352310180664
    9. 'positions' → logprob: -16.751352310180664
    10. 'position' → logprob: -16.751352310180664

Token 474: ' graph' (ID: 7465)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2193736881017685
    2. ' the' → logprob: -2.3443737030029297
    3. 'for' → logprob: -2.7193737030029297
    4. ' graph' → logprob: -4.21937370300293
    5. ' edges' → logprob: -4.59437370300293
    6. ' constraints' → logprob: -5.34437370300293
    7. 'the' → logprob: -6.46937370300293
    8. 'graph' → logprob: -7.09437370300293
    9. '           ' → logprob: -7.21937370300293
    10. 'edges' → logprob: -7.59437370300293

Token 475: ' edges' (ID: 22569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.360688179731369
    2. ' for' → logprob: -1.2356882095336914
    3. 'for' → logprob: -4.985688209533691
    4. '<|end|>' → logprob: -5.860688209533691
    5. '<|end|>' → logprob: -6.485688209533691
    6. '       ' → logprob: -8.235688209533691
    7. '
' → logprob: -8.735688209533691
    8. ' with' → logprob: -8.985688209533691
    9. ',' → logprob: -9.610688209533691
    10. ':' → logprob: -9.735688209533691

Token 476: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06609289348125458
    2. ' for' → logprob: -2.8160929679870605
    3. 'for' → logprob: -6.0660929679870605
    4. '<|end|>' → logprob: -6.9410929679870605
    5. '       ' → logprob: -7.5660929679870605
    6. '<|end|>' → logprob: -9.316092491149902
    7. '   ' → logprob: -9.816092491149902
    8. ',' → logprob: -10.316092491149902
    9. '
' → logprob: -10.566092491149902
    10. '	       ' → logprob: -11.066092491149902

Token 477: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.12075391411781311
    2. ' constraints' → logprob: -2.2457540035247803
    3. 'self' → logprob: -5.120753765106201
    4. ' self' → logprob: -6.995753765106201
    5. 'constraint' → logprob: -7.620753765106201
    6. '[' → logprob: -8.74575424194336
    7. ' [' → logprob: -10.12075424194336
    8. ' constraint' → logprob: -10.24575424194336
    9. ')' → logprob: -10.24575424194336
    10. '[
' → logprob: -10.49575424194336

Token 478: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6961816549301147
    2. ' for' → logprob: -0.8211816549301147
    3. 'for' → logprob: -3.0711817741394043
    4. '<|end|>' → logprob: -5.196181774139404
    5. '       ' → logprob: -5.446181774139404
    6. '
' → logprob: -6.071181774139404
    7. '<|end|>' → logprob: -6.821181774139404
    8. '    
' → logprob: -7.696181774139404
    9. '        
' → logprob: -7.821181774139404
    10. '   ' → logprob: -8.321181297302246

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03428199514746666
    2. ' for' → logprob: -3.9092819690704346
    3. '       ' → logprob: -4.909282207489014
    4. '
' → logprob: -5.784282207489014
    5. 'for' → logprob: -5.909282207489014
    6. '    
' → logprob: -9.034281730651855
    7. '        
' → logprob: -9.409281730651855
    8. '<|end|>' → logprob: -9.659281730651855
    9. '```' → logprob: -10.284281730651855
    10. '   ' → logprob: -10.284281730651855

Token 480: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7179873585700989
    2. 'for' (adapté à ' for') → logprob: -0.7179873585700989
    3. '           ' → logprob: -3.717987298965454
    4. '       ' → logprob: -8.342987060546875
    5. '   ' → logprob: -11.592987060546875
    6. '	for' → logprob: -14.092987060546875
    7. '
' → logprob: -14.217987060546875
    8. '    ' → logprob: -14.592987060546875
    9. '               ' → logprob: -14.717987060546875
    10. ' ' → logprob: -15.092987060546875

Token 481: ' c' (ID: 274)
  Prédit: 'constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraint' → logprob: -0.2666102647781372
    2. 'c' → logprob: -1.7666102647781372
    3. ' constraint' → logprob: -2.8916101455688477
    4. ' c' → logprob: -5.641610145568848
    5. 'con' → logprob: -5.766610145568848
    6. 'cons' → logprob: -7.766610145568848
    7. 'const' → logprob: -7.766610145568848
    8. '   ' → logprob: -9.891610145568848
    9. ' constr' → logprob: -11.266610145568848
    10. ' cons' → logprob: -11.391610145568848

Token 482: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059853242710232735
    2. ' ' → logprob: -5.380985260009766
    3. 'in' → logprob: -6.755985260009766
    4. ' i' → logprob: -9.380985260009766
    5. '  ' → logprob: -9.630985260009766
    6. '   ' → logprob: -11.505985260009766
    7. 'i' → logprob: -12.255985260009766
    8. '	in' → logprob: -12.380985260009766
    9. ' constraint' → logprob: -12.380985260009766
    10. 'on' → logprob: -12.505985260009766

Token 483: ' d' (ID: 272)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03186213597655296
    2. 'on' → logprob: -3.7818620204925537
    3. 'in' → logprob: -4.906862258911133
    4. 'constraint' → logprob: -7.406862258911133
    5. ' constraint' → logprob: -8.531862258911133
    6. ' ' → logprob: -9.156862258911133
    7. ' on' → logprob: -9.531862258911133
    8. 'ons' → logprob: -9.531862258911133
    9. 'onstr' → logprob: -9.781862258911133
    10. 's' → logprob: -11.656862258911133

Token 484: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34953927993774414
    2. ' in' → logprob: -1.2245392799377441
    3. ',' → logprob: -7.099539279937744
    4. 'before' → logprob: -9.099538803100586
    5. '_before' → logprob: -10.599538803100586
    6. ' ' → logprob: -10.724538803100586
    7. '   ' → logprob: -10.724538803100586
    8. '_in' → logprob: -10.974538803100586
    9. 'efore' → logprob: -11.474538803100586
    10. '
' → logprob: -11.849538803100586

Token 485: ' constraints' (ID: 31060)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061393853276968
    2. ' self' → logprob: -3.0613937377929688
    3. 'constraints' → logprob: -4.436393737792969
    4. ' constraints' → logprob: -7.061393737792969
    5. '[self' → logprob: -10.936393737792969
    6. '(self' → logprob: -12.811393737792969
    7. '[' → logprob: -13.061393737792969
    8. '   ' → logprob: -13.686393737792969
    9. 'constraint' → logprob: -13.686393737792969
    10. '.constraints' → logprob: -14.311393737792969

Token 486: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01613243669271469
    2. ':
' → logprob: -4.141132354736328
    3. '):' → logprob: -10.266132354736328
    4. '           ' → logprob: -10.391132354736328
    5. ',' → logprob: -11.516132354736328
    6. ')' → logprob: -12.141132354736328
    7. '):
' → logprob: -12.266132354736328
    8. '               ' → logprob: -12.516132354736328
    9. ':
' → logprob: -12.766132354736328
    10. '.' → logprob: -13.141132354736328

Token 487: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039655670523643494
    2. ':
' → logprob: -4.039655685424805
    3. ':' → logprob: -4.414655685424805
    4. ',' → logprob: -5.164655685424805
    5. '           ' → logprob: -6.164655685424805
    6. ' self' → logprob: -7.414655685424805
    7. 'self' → logprob: -8.164655685424805
    8. '):
' → logprob: -8.664655685424805
    9. ' :
' → logprob: -10.414655685424805
    10. '                
' → logprob: -10.539655685424805

Token 488: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35385799407958984
    2. ' self' → logprob: -1.2288579940795898
    3. '               ' → logprob: -5.47885799407959
    4. ' if' → logprob: -7.22885799407959
    5. 'if' → logprob: -8.35385799407959
    6. '                   ' → logprob: -9.10385799407959
    7. '           ' → logprob: -9.47885799407959
    8. '[self' → logprob: -10.60385799407959
    9. ',self' → logprob: -11.85385799407959
    10. '	self' → logprob: -12.10385799407959

Token 489: ' According' (ID: 16344)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.027135981246829033
    2. ' self' → logprob: -3.7771360874176025
    3. 'if' → logprob: -5.777135848999023
    4. ' if' → logprob: -7.652135848999023
    5. '           ' → logprob: -8.527135848999023
    6. '               ' → logprob: -9.277135848999023
    7. '                   ' → logprob: -12.402135848999023
    8. '#' → logprob: -13.027135848999023
    9. '   ' → logprob: -13.027135848999023
    10. ' ' → logprob: -13.777135848999023

Token 490: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03338366746902466
    2. 'to' → logprob: -3.53338360786438
    3. ' self' → logprob: -6.658383846282959
    4. '_to' → logprob: -7.158383846282959
    5. 'self' → logprob: -7.283383846282959
    6. ' ' → logprob: -8.1583833694458
    7. '            ' → logprob: -8.5333833694458
    8. ' if' → logprob: -9.7833833694458
    9. '    ' → logprob: -9.7833833694458
    10. ',' → logprob: -9.7833833694458

Token 491: ' problem' (ID: 4792)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2790246307849884
    2. ' self' → logprob: -1.779024600982666
    3. 'c' → logprob: -3.029024600982666
    4. ' c' → logprob: -4.279024600982666
    5. 'd' → logprob: -4.904024600982666
    6. ' d' → logprob: -5.654024600982666
    7. 'lambda' → logprob: -7.654024600982666
    8. ' lambda' → logprob: -8.279025077819824
    9. '#' → logprob: -8.779025077819824
    10. '
' → logprob: -8.904025077819824

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7076346278190613
    2. '               ' → logprob: -1.457634687423706
    3. ' constraints' → logprob: -2.332634687423706
    4. '                   ' → logprob: -2.582634687423706
    5. ':' → logprob: -3.457634687423706
    6. 'constraints' → logprob: -4.082634449005127
    7. '_constraints' → logprob: -4.957634449005127
    8. '.' → logprob: -5.082634449005127
    9. '.constraints' → logprob: -5.082634449005127
    10. ' ,' → logprob: -5.207634449005127

Token 493: ' must' (ID: 2804)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10670976340770721
    2. ' self' → logprob: -2.3567097187042236
    3. 'if' → logprob: -5.981709957122803
    4. ' if' → logprob: -6.231709957122803
    5. 'u' → logprob: -6.731709957122803
    6. ' u' → logprob: -7.731709957122803
    7. '#' → logprob: -8.981709480285645
    8. '               ' → logprob: -9.106709480285645
    9. '           ' → logprob: -9.981709480285645
    10. ' #' → logprob: -10.856709480285645

Token 494: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -1.3259917497634888
    2. 'self' → logprob: -1.4509917497634888
    3. '_visit' → logprob: -1.9509917497634888
    4. ' visit' → logprob: -2.325991630554199
    5. ' be' → logprob: -2.950991630554199
    6. ' self' → logprob: -3.075991630554199
    7. ' add' → logprob: -3.325991630554199
    8. 'add' → logprob: -3.700991630554199
    9. 'continue' → logprob: -4.325991630554199
    10. ' =' → logprob: -4.575991630554199

Token 495: ' shop' (ID: 9100)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5770174264907837
    2. 'c' → logprob: -0.8270174264907837
    3. 'd' → logprob: -7.202017307281494
    4. ' d' → logprob: -8.452017784118652
    5. '(c' → logprob: -10.952017784118652
    6. '               ' → logprob: -11.077017784118652
    7. ' a' → logprob: -11.452017784118652
    8. ',' → logprob: -11.952017784118652
    9. ' the' → logprob: -11.952017784118652
    10. 'a' → logprob: -12.077017784118652

Token 496: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2561110556125641
    2. 'c' → logprob: -1.6311110258102417
    3. '_before' → logprob: -4.381111145019531
    4. '_' → logprob: -4.881111145019531
    5. '_c' → logprob: -6.256111145019531
    6. '               ' → logprob: -6.381111145019531
    7. ' d' → logprob: -6.506111145019531
    8. '[c' → logprob: -6.881111145019531
    9. ' before' → logprob: -7.006111145019531
    10. ' _' → logprob: -7.506111145019531

Token 497: ' after' (ID: 1934)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0051885843276978
    2. ',' → logprob: -1.6301885843276978
    3. ' ,' → logprob: -1.6301885843276978
    4. ' before' → logprob: -1.8801885843276978
    5. '                ' → logprob: -4.005188465118408
    6. ' and' → logprob: -4.005188465118408
    7. ' -' → logprob: -4.130188465118408
    8. '           ' → logprob: -4.880188465118408
    9. 'before' → logprob: -5.380188465118408
    10. '                   ' → logprob: -5.380188465118408

Token 498: ' shop' (ID: 9100)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3269149661064148
    2. 'd' → logprob: -1.5769150257110596
    3. ' c' → logprob: -2.9519150257110596
    4. 'c' → logprob: -4.3269147872924805
    5. ',' → logprob: -6.2019147872924805
    6. ' (' → logprob: -6.9519147872924805
    7. ' b' → logprob: -6.9519147872924805
    8. 'b' → logprob: -7.4519147872924805
    9. ' ' → logprob: -8.07691478729248
    10. ' before' → logprob: -8.07691478729248

Token 499: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2877156734466553
    2. ',' → logprob: -1.7877156734466553
    3. ' ,' → logprob: -1.7877156734466553
    4. ' before' → logprob: -2.4127156734466553
    5. '_before' → logprob: -2.7877156734466553
    6. 'd' → logprob: -3.1627156734466553
    7. ' and' → logprob: -3.1627156734466553
    8. ' _' → logprob: -3.4127156734466553
    9. '_' → logprob: -3.7877156734466553
    10. ' c' → logprob: -3.7877156734466553

Token 500: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18163368105888367
    2. ',' → logprob: -2.681633710861206
    3. '           ' → logprob: -2.806633710861206
    4. ')' → logprob: -4.556633472442627
    5. '<|end|>' → logprob: -4.556633472442627
    6. ':' → logprob: -5.931633472442627
    7. '                   ' → logprob: -5.931633472442627
    8. '<|end|>' → logprob: -6.056633472442627
    9. ' and' → logprob: -6.306633472442627
    10. '.' → logprob: -7.431633472442627

Token 501: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006630351301282644
    2. 'self' → logprob: -6.0066304206848145
    3. '           ' → logprob: -6.3816304206848145
    4. ',' → logprob: -6.8816304206848145
    5. ' self' → logprob: -6.8816304206848145
    6. ' and' → logprob: -8.881629943847656
    7. '                   ' → logprob: -10.506629943847656
    8. ')' → logprob: -10.881629943847656
    9. ':' → logprob: -10.881629943847656
    10. '                
' → logprob: -11.006629943847656

Token 502: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7013041377067566
    2. 'self' → logprob: -0.7013041377067566
    3. '           ' → logprob: -4.951303958892822
    4. '               ' → logprob: -6.951303958892822
    5. ',' → logprob: -11.32630443572998
    6. ' if' → logprob: -11.32630443572998
    7. ',self' → logprob: -11.82630443572998
    8. '	self' → logprob: -11.95130443572998
    9. '=self' → logprob: -11.95130443572998
    10. '[self' → logprob: -11.95130443572998

Token 503: ' means' (ID: 4748)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3614663779735565
    2. ' self' → logprob: -1.236466407775879
    3. '               ' → logprob: -4.611466407775879
    4. '           ' → logprob: -5.861466407775879
    5. ' if' → logprob: -10.236466407775879
    6. 'if' → logprob: -10.861466407775879
    7. ',' → logprob: -10.986466407775879
    8. '                   ' → logprob: -11.861466407775879
    9. '[self' → logprob: -11.861466407775879
    10. ' ' → logprob: -12.236466407775879

Token 504: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04893070459365845
    2. ' self' → logprob: -3.0489306449890137
    3. '               ' → logprob: -8.048931121826172
    4. 'd' → logprob: -11.548931121826172
    5. '           ' → logprob: -12.173931121826172
    6. '(self' → logprob: -12.798931121826172
    7. '                   ' → logprob: -12.923931121826172
    8. '	self' → logprob: -14.048931121826172
    9. '[self' → logprob: -14.298931121826172
    10. '=self' → logprob: -14.423931121826172

Token 505: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7555752396583557
    2. '=' → logprob: -2.130575180053711
    3. ' >' → logprob: -2.505575180053711
    4. ' after' → logprob: -2.505575180053711
    5. ' must' → logprob: -2.630575180053711
    6. '>' → logprob: -3.130575180053711
    7. ' is' → logprob: -4.255575180053711
    8. 'after' → logprob: -4.255575180053711
    9. ',' → logprob: -4.380575180053711
    10. 'must' → logprob: -4.630575180053711

Token 506: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3546781837940216
    2. 'd' → logprob: -1.2296781539916992
    3. '_d' → logprob: -5.354678153991699
    4. '_' → logprob: -7.104678153991699
    5. ',' → logprob: -8.7296781539917
    6. ' _' → logprob: -9.3546781539917
    7. ',d' → logprob: -9.4796781539917
    8. '(d' → logprob: -9.7296781539917
    9. '   ' → logprob: -9.9796781539917
    10. ' ' → logprob: -10.3546781539917

Token 507: ' =>' (ID: 871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15409623086452484
    2. ',' → logprob: -2.9040961265563965
    3. '           ' → logprob: -3.6540961265563965
    4. ':' → logprob: -3.9040961265563965
    5. '
' → logprob: -4.6540961265563965
    6. ' =' → logprob: -4.7790961265563965
    7. ':
' → logprob: -4.9040961265563965
    8. ' and' → logprob: -5.5290961265563965
    9. 'self' → logprob: -6.0290961265563965
    10. '                   ' → logprob: -6.5290961265563965

Token 508: ' edge' (ID: 11165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3140326738357544
    2. ' self' → logprob: -1.3140326738357544
    3. '               ' → logprob: -7.814032554626465
    4. 'd' → logprob: -8.314032554626465
    5. '           ' → logprob: -9.939032554626465
    6. '                   ' → logprob: -10.439032554626465
    7. ' d' → logprob: -10.564032554626465
    8. '(self' → logprob: -12.189032554626465
    9. '   ' → logprob: -13.314032554626465
    10. '[self' → logprob: -13.314032554626465

Token 509: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02310989797115326
    2. ' d' → logprob: -4.1481099128723145
    3. '=' → logprob: -5.5231099128723145
    4. ' =' → logprob: -6.7731099128723145
    5. '(d' → logprob: -7.2731099128723145
    6. '[d' → logprob: -8.148109436035156
    7. '               ' → logprob: -8.523109436035156
    8. '=d' → logprob: -8.898109436035156
    9. 'from' → logprob: -9.148109436035156
    10. '           ' → logprob: -9.148109436035156

Token 510: '->' (ID: 609)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.022673562169075012
    2. '->' → logprob: -3.8976736068725586
    3. ' ' → logprob: -7.147673606872559
    4. ',' → logprob: -7.522673606872559
    5. ' to' → logprob: -8.022673606872559
    6. ' -->' → logprob: -9.022673606872559
    7. ' ->
' → logprob: -9.272673606872559
    8. ')->' → logprob: -9.522673606872559
    9. ' ,' → logprob: -9.897673606872559
    10. ')' → logprob: -10.397673606872559

Token 511: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04862552136182785
    2. ' c' → logprob: -3.0486254692077637
    3. 'd' → logprob: -10.548625946044922
    4. ' d' → logprob: -11.923625946044922
    5. '	c' → logprob: -13.048625946044922
    6. ' ' → logprob: -13.548625946044922
    7. ')c' → logprob: -14.923625946044922
    8. 's' → logprob: -15.798625946044922
    9. ' 
' → logprob: -16.048625946044922
    10. '(c' → logprob: -16.048625946044922

Token 512: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009343295358121395
    2. '<|end|>' → logprob: -5.509343147277832
    3. '           ' → logprob: -6.384343147277832
    4. ')' → logprob: -6.884343147277832
    5. ',' → logprob: -7.009343147277832
    6. '<|end|>' → logprob: -7.259343147277832
    7. '
' → logprob: -7.634343147277832
    8. '.' → logprob: -9.509343147277832
    9. '                
' → logprob: -9.759343147277832
    10. 'self' → logprob: -10.634343147277832

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014565435703843832
    2. 'self' → logprob: -7.7514567375183105
    3. ' self' → logprob: -7.8764567375183105
    4. ',' → logprob: -8.126456260681152
    5. '           ' → logprob: -8.376456260681152
    6. '
' → logprob: -11.126456260681152
    7. '                
' → logprob: -11.126456260681152
    8. '                   ' → logprob: -11.376456260681152
    9. ')' → logprob: -11.501456260681152
    10. '(self' → logprob: -11.626456260681152

Token 514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16390419006347656
    2. ' self' → logprob: -1.9139041900634766
    3. '               ' → logprob: -5.663904190063477
    4. 'd' → logprob: -9.413904190063477
    5. '                   ' → logprob: -10.163904190063477
    6. '           ' → logprob: -11.163904190063477
    7. '(self' → logprob: -11.288904190063477
    8. '   ' → logprob: -11.413904190063477
    9. '[self' → logprob: -12.038904190063477
    10. 'elf' → logprob: -12.288904190063477

Token 515: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0006417844560928643
    2. '.' → logprob: -8.000641822814941
    3. 'graph' → logprob: -8.125641822814941
    4. '	graph' → logprob: -12.250641822814941
    5. ' .' → logprob: -13.375641822814941
    6. ' graph' → logprob: -13.875641822814941
    7. '
' → logprob: -15.000641822814941
    8. '(graph' → logprob: -15.125641822814941
    9. '.graphics' → logprob: -15.500641822814941
    10. '.add' → logprob: -15.500641822814941

Token 516: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00014764121442567557
    2. '.' → logprob: -8.875147819519043
    3. ' .' → logprob: -12.250147819519043
    4. '           ' → logprob: -14.000147819519043
    5. 'add' → logprob: -14.125147819519043
    6. '.ad' → logprob: -14.750147819519043
    7. '   ' → logprob: -15.500147819519043
    8. ').' → logprob: -15.500147819519043
    9. '.append' → logprob: -16.375146865844727
    10. '].' → logprob: -16.500146865844727

Token 517: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.625000953674316
    3. 'edge' → logprob: -15.125000953674316
    4. '_ed' → logprob: -16.500001907348633
    5. '_EDGE' → logprob: -16.625001907348633
    6. '_edges' → logprob: -17.375001907348633
    7. '_e' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.750001907348633
    9. 'dge' → logprob: -18.250001907348633
    10. '(edge' → logprob: -18.250001907348633

Token 518: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.231182826217264e-05
    2. '(' → logprob: -9.625072479248047
    3. 'd' → logprob: -12.500072479248047
    4. '(
' → logprob: -13.500072479248047
    5. ' (' → logprob: -14.375072479248047
    6. '(c' → logprob: -15.625072479248047
    7. '((' → logprob: -16.000072479248047
    8. '[d' → logprob: -16.000072479248047
    9. ' d' → logprob: -16.500072479248047
    10. '(int' → logprob: -17.625072479248047

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022669474128633738
    2. ',c' → logprob: -6.752266883850098
    3. ' ,' → logprob: -6.877266883850098
    4. ',
' → logprob: -10.377266883850098
    5. ',d' → logprob: -11.002266883850098
    6. '               ' → logprob: -12.502266883850098
    7. ')' → logprob: -13.377266883850098
    8. ',v' → logprob: -13.502266883850098
    9. '           ' → logprob: -13.627266883850098
    10. '',' → logprob: -13.752266883850098

Token 520: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020710527896881
    2. ' c' → logprob: -2.3502070903778076
    3. ')c' → logprob: -15.350207328796387
    4. '	c' → logprob: -15.600207328796387
    5. '$c' → logprob: -18.22520637512207
    6. '_c' → logprob: -18.72520637512207
    7. '.c' → logprob: -18.85020637512207
    8. ')' → logprob: -19.35020637512207
    9. '(c' → logprob: -19.47520637512207
    10. ' ' → logprob: -19.47520637512207

Token 521: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024524700711481273
    2. ')
' → logprob: -8.375245094299316
    3. ' )' → logprob: -11.750245094299316
    4. '           ' → logprob: -12.500245094299316
    5. '               ' → logprob: -13.375245094299316
    6. '<|end|>' → logprob: -14.375245094299316
    7. ')#' → logprob: -15.875245094299316
    8. '       ' → logprob: -15.875245094299316
    9. ')

' → logprob: -16.000246047973633
    10. '
' → logprob: -16.500246047973633

Token 522: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29308268427848816
    2. 'def' (adapté à ' def') → logprob: -1.6680827140808105
    3. '       ' → logprob: -3.4180827140808105
    4. '           ' → logprob: -3.9180827140808105
    5. ' def' → logprob: -5.2930827140808105
    6. 'self' → logprob: -5.7930827140808105
    7. '<|end|>' → logprob: -6.5430827140808105
    8. '        
' → logprob: -6.9180827140808105
    9. '

' → logprob: -7.2930827140808105
    10. ' self' → logprob: -7.6680827140808105

Token 524: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8598493933677673
    2. ' compute' → logprob: -1.984849452972412
    3. ' calculate' → logprob: -1.984849452972412
    4. 'top' → logprob: -2.609849452972412
    5. ' minimal' → logprob: -2.859849452972412
    6. ' top' → logprob: -2.859849452972412
    7. 'calculate' → logprob: -2.984849452972412
    8. ' can' → logprob: -4.109849452972412
    9. 'compute' → logprob: -4.359849452972412
    10. 'find' → logprob: -4.359849452972412

Token 525: '_min' (ID: 15950)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.3458906412124634
    2. '_min' → logprob: -2.345890522003174
    3. '_path' → logprob: -2.595890522003174
    4. '_top' → logprob: -2.845890522003174
    5. '_cycle' → logprob: -2.970890522003174
    6. '_' → logprob: -4.845890522003174
    7. '_short' → logprob: -6.595890522003174
    8. '_long' → logprob: -6.720890522003174
    9. '_next' → logprob: -7.470890522003174
    10. '_sequence' → logprob: -8.220890998840332

Token 526: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.060509394854307175
    2. '_walk' → logprob: -3.185509443283081
    3. 'imum' → logprob: -5.185509204864502
    4. '_path' → logprob: -5.185509204864502
    5. '_' → logprob: -6.435509204864502
    6. '_distance' → logprob: -6.560509204864502
    7. '_steps' → logprob: -6.560509204864502
    8. '_w' → logprob: -7.435509204864502
    9. '_cost' → logprob: -7.935509204864502
    10. '_length' → logprob: -8.18550968170166

Token 527: '_length' (ID: 11514)
  Prédit: '_walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.02378576248884201
    2. '_distance' → logprob: -4.523785591125488
    3. '_path' → logprob: -4.773785591125488
    4. '_w' → logprob: -6.648785591125488
    5. '_visit' → logprob: -7.398785591125488
    6. '_cost' → logprob: -7.648785591125488
    7. '_length' → logprob: -7.773785591125488
    8. '_steps' → logprob: -7.898785591125488
    9. '_sequence' → logprob: -8.148785591125488
    10. '_order' → logprob: -8.523785591125488

Token 528: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004693326540291309
    2. '(' → logprob: -5.379693508148193
    3. 'self' → logprob: -9.879693031311035
    4. '_path' → logprob: -11.254693031311035
    5. '(
' → logprob: -13.379693031311035
    6. '_(' → logprob: -13.504693031311035
    7. '_' → logprob: -13.754693031311035
    8. 's' → logprob: -14.379693031311035
    9. '(s' → logprob: -14.379693031311035
    10. ' (' → logprob: -14.629693031311035

Token 529: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02451189234852791
    2. ',' → logprob: -4.274511814117432
    3. '):
' → logprob: -4.774511814117432
    4. 'self' → logprob: -6.649511814117432
    5. '):
' → logprob: -8.64951229095459
    6. ')' → logprob: -8.77451229095459
    7. ' ):' → logprob: -9.52451229095459
    8. '():' → logprob: -9.89951229095459
    9. ':' → logprob: -10.77451229095459
    10. '_' → logprob: -10.89951229095459

Token 530: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13470348715782166
    2. '           ' → logprob: -2.2597033977508545
    3. '
' → logprob: -4.759703636169434
    4. '        
' → logprob: -4.759703636169434
    5. '#' → logprob: -6.759703636169434
    6. '        ' → logprob: -7.134703636169434
    7. '<|end|>' → logprob: -8.009703636169434
    8. ',' → logprob: -8.509703636169434
    9. ' 
' → logprob: -8.634703636169434
    10. '    
' → logprob: -8.634703636169434

Token 531: ' #' (ID: 1069)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8578998446464539
    2. 'from' → logprob: -0.9828998446464539
    3. '       ' → logprob: -2.7328999042510986
    4. '           ' → logprob: -3.4828999042510986
    5. 'distance' → logprob: -3.4828999042510986
    6. 'dist' → logprob: -3.8578999042510986
    7. ' distance' → logprob: -4.3578996658325195
    8. ' dist' → logprob: -4.6078996658325195
    9. ' import' → logprob: -4.9828996658325195
    10. 'import' → logprob: -4.9828996658325195

Token 532: ' If' (ID: 1843)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22764825820922852
    2. 'dist' → logprob: -2.1026482582092285
    3. ' from' → logprob: -3.2276482582092285
    4. '       ' → logprob: -4.9776482582092285
    5. 'distance' → logprob: -5.1026482582092285
    6. '#' → logprob: -5.1026482582092285
    7. ' dist' → logprob: -5.2276482582092285
    8. 'import' → logprob: -5.3526482582092285
    9. 'visited' → logprob: -5.6026482582092285
    10. 'order' → logprob: -5.8526482582092285

Token 533: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4560294449329376
    2. ' self' → logprob: -1.4560294151306152
    3. ' any' → logprob: -3.0810294151306152
    4. 'not' → logprob: -3.2060294151306152
    5. 'self' → logprob: -3.5810294151306152
    6. ' len' → logprob: -4.831029415130615
    7. 'len' → logprob: -4.831029415130615
    8. 'any' → logprob: -6.456029415130615
    9. ' the' → logprob: -8.081029891967773
    10. ' ' → logprob: -8.206029891967773

Token 534: ' constraints' (ID: 31060)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44554775953292847
    2. ' self' → logprob: -1.0705478191375732
    3. ' constraints' → logprob: -4.320547580718994
    4. 'constraints' → logprob: -5.820547580718994
    5. ' not' → logprob: -9.445548057556152
    6. '_constraints' → logprob: -9.445548057556152
    7. '   ' → logprob: -10.070548057556152
    8. '(self' → logprob: -10.195548057556152
    9. 's' → logprob: -10.570548057556152
    10. '       ' → logprob: -10.820548057556152

Token 535: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007819905877113342
    2. ':
' → logprob: -6.132820129394531
    3. ' ==' → logprob: -6.257820129394531
    4. '==' → logprob: -6.632820129394531
    5. ',' → logprob: -7.007820129394531
    6. ':return' → logprob: -7.507820129394531
    7. ' and' → logprob: -8.257820129394531
    8. ' or' → logprob: -8.257820129394531
    9. ' :' → logprob: -9.382820129394531
    10. '           ' → logprob: -9.507820129394531

Token 536: ' minimal' (ID: 19957)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25329315662384033
    2. 'return' → logprob: -1.5032931566238403
    3. ' if' → logprob: -7.253293037414551
    4. '           ' → logprob: -7.628293037414551
    5. '               ' → logprob: -9.12829303741455
    6. 'if' → logprob: -10.00329303741455
    7. '   ' → logprob: -12.50329303741455
    8. '#' → logprob: -12.87829303741455
    9. '
' → logprob: -13.37829303741455
    10. ' min' → logprob: -13.75329303741455

Token 537: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.07725746184587479
    2. '_' → logprob: -3.2022573947906494
    3. ' length' → logprob: -3.8272573947906494
    4. '_distance' → logprob: -5.4522576332092285
    5. 'length' → logprob: -6.2022576332092285
    6. ' =' → logprob: -6.3272576332092285
    7. ' _' → logprob: -6.4522576332092285
    8. '_walk' → logprob: -7.0772576332092285
    9. '_path' → logprob: -8.07725715637207
    10. '_visit' → logprob: -8.20225715637207

Token 538: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18566884100437164
    2. '=' → logprob: -1.8106688261032104
    3. ' is' → logprob: -5.3106689453125
    4. ' return' → logprob: -8.0606689453125
    5. '           ' → logprob: -8.5606689453125
    6. 'return' → logprob: -9.1856689453125
    7. '               ' → logprob: -9.4356689453125
    8. ' ' → logprob: -9.9356689453125
    9. ':' → logprob: -9.9356689453125
    10. ' ==' → logprob: -10.4356689453125

Token 539: ' entrance' (ID: 27326)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004708630498498678
    2. '1' → logprob: -6.129708766937256
    3. ' self' → logprob: -6.129708766937256
    4. '0' → logprob: -8.629708290100098
    5. '2' → logprob: -9.129708290100098
    6. '(self' → logprob: -10.504708290100098
    7. '           ' → logprob: -11.129708290100098
    8. ' ' → logprob: -11.879708290100098
    9. 'n' → logprob: -13.629708290100098
    10. '3' → logprob: -14.004708290100098

Token 540: '(' (ID: 7)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1163584515452385
    2. ' ' → logprob: -2.491358518600464
    3. '+' → logprob: -4.741358280181885
    4. 'position' → logprob: -5.366358280181885
    5. ' (' → logprob: -6.116358280181885
    6. '_position' → logprob: -6.366358280181885
    7. '    ' → logprob: -7.241358280181885
    8. '   ' → logprob: -7.366358280181885
    9. '           ' → logprob: -7.366358280181885
    10. '1' → logprob: -7.491358280181885

Token 541: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09235785156488419
    2. ' +' → logprob: -3.092357873916626
    3. ' ' → logprob: -3.467357873916626
    4. '+' → logprob: -5.092357635498047
    5. ')' → logprob: -6.092357635498047
    6. '0' → logprob: -6.592357635498047
    7. ')+' → logprob: -7.342357635498047
    8. ' plus' → logprob: -7.967357635498047
    9. 'self' → logprob: -8.592357635498047
    10. 'n' → logprob: -8.717357635498047

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10521937161684036
    2. ' +' → logprob: -3.1052193641662598
    3. ' )' → logprob: -3.2302193641662598
    4. ')+' → logprob: -4.35521936416626
    5. '+' → logprob: -6.10521936416626
    6. ' to' → logprob: -9.230219841003418
    7. ' ' → logprob: -9.355219841003418
    8. ' plus' → logprob: -9.605219841003418
    9. 'position' → logprob: -9.980219841003418
    10. ',' → logprob: -10.605219841003418

Token 543: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04640553891658783
    2. '+' → logprob: -3.171405553817749
    3. ' ' → logprob: -7.04640531539917
    4. '<|end|>' → logprob: -7.17140531539917
    5. ' plus' → logprob: -7.92140531539917
    6. ' if' → logprob: -8.296405792236328
    7. ')' → logprob: -8.421405792236328
    8. ',' → logprob: -8.546405792236328
    9. ' to' → logprob: -8.796405792236328
    10. ' and' → logprob: -9.046405792236328

Token 544: ' exit' (ID: 10654)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22817134857177734
    2. ' self' → logprob: -1.7281713485717773
    3. '1' → logprob: -4.478171348571777
    4. 'n' → logprob: -4.603171348571777
    5. ' n' → logprob: -5.978171348571777
    6. ' exit' → logprob: -6.978171348571777
    7. 'exit' → logprob: -6.978171348571777
    8. ' ' → logprob: -7.978171348571777
    9. '(self' → logprob: -9.603171348571777
    10. '0' → logprob: -9.978171348571777

Token 545: '(N' (ID: 10564)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.32668212056159973
    2. '(' → logprob: -1.8266820907592773
    3. ' +' → logprob: -2.5766820907592773
    4. '+' → logprob: -4.326682090759277
    5. '0' → logprob: -4.576682090759277
    6. '(n' → logprob: -5.576682090759277
    7. ' plus' → logprob: -5.826682090759277
    8. ' n' → logprob: -6.451682090759277
    9. ' ' → logprob: -6.576682090759277
    10. '()+' → logprob: -6.701682090759277

Token 546: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002119330922141671
    2. ' +' → logprob: -6.252119541168213
    3. ')' → logprob: -9.252119064331055
    4. ')+' → logprob: -9.377119064331055
    5. '1' → logprob: -12.377119064331055
    6. '()+' → logprob: -13.627119064331055
    7. '+)' → logprob: -13.627119064331055
    8. '+
' → logprob: -14.002119064331055
    9. '   ' → logprob: -14.377119064331055
    10. '),' → logprob: -14.877119064331055

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '2' → logprob: -12.62501049041748
    3. '+' → logprob: -12.87501049041748
    4. ' ' → logprob: -13.25001049041748
    5. '
' → logprob: -13.50001049041748
    6. '   ' → logprob: -14.75001049041748
    7. ')' → logprob: -14.87501049041748
    8. '

' → logprob: -15.87501049041748
    9. '0' → logprob: -16.812509536743164
    10. '```' → logprob: -16.875009536743164

Token 548: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15676818788051605
    2. ')+' → logprob: -2.0317680835723877
    3. '+' → logprob: -4.531768321990967
    4. ' +' → logprob: -6.531768321990967
    5. ' )' → logprob: -6.781768321990967
    6. ')
' → logprob: -8.781767845153809
    7. ')+(' → logprob: -8.781767845153809
    8. ')-' → logprob: -9.906767845153809
    9. '),' → logprob: -9.906767845153809
    10. '
' → logprob: -10.156767845153809

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026424305513501167
    2. '<|end|>' → logprob: -5.401424407958984
    3. '
' → logprob: -5.526424407958984
    4. ' return' → logprob: -5.651424407958984
    5. ',' → logprob: -5.651424407958984
    6. ':' → logprob: -6.276424407958984
    7. 'return' → logprob: -7.151424407958984
    8. '       ' → logprob: -7.151424407958984
    9. ' +' → logprob: -7.276424407958984
    10. ' ' → logprob: -7.401424407958984

Token 550: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6936408281326294
    2. ' return' → logprob: -1.5686408281326294
    3. ' if' → logprob: -1.9436408281326294
    4. 'return' → logprob: -2.44364070892334
    5. 'n' → logprob: -4.69364070892334
    6. '       ' → logprob: -4.81864070892334
    7. '
' → logprob: -4.81864070892334
    8. ' 
' → logprob: -4.94364070892334
    9. 'length' → logprob: -4.94364070892334
    10. ' length' → logprob: -5.19364070892334

Token 551: ' which' (ID: 1118)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0068984031677246
    2. 'distance' → logprob: -1.6318984031677246
    3. ' length' → logprob: -2.2568984031677246
    4. ' distance' → logprob: -2.5068984031677246
    5. '           ' → logprob: -2.8818984031677246
    6. ' return' → logprob: -3.0068984031677246
    7. 'length' → logprob: -3.1318984031677246
    8. 'if' → logprob: -4.006898403167725
    9. '
' → logprob: -4.631898403167725
    10. 'import' → logprob: -4.631898403167725

Token 552: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2395864874124527
    2. ' =' → logprob: -2.364586591720581
    3. 'is' → logprob: -2.864586591720581
    4. '=' → logprob: -2.989586591720581
    5. ' equals' → logprob: -5.239586353302002
    6. ' should' → logprob: -6.864586353302002
    7. 'should' → logprob: -6.864586353302002
    8. ' would' → logprob: -7.114586353302002
    9. '
' → logprob: -7.239586353302002
    10. 'equals' → logprob: -7.614586353302002

Token 553: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002934675430878997
    2. ' self' → logprob: -5.877934455871582
    3. '0' → logprob: -9.252934455871582
    4. '(self' → logprob: -11.002934455871582
    5. '1' → logprob: -11.377934455871582
    6. ' ' → logprob: -13.502934455871582
    7. '   ' → logprob: -14.127934455871582
    8. '
' → logprob: -14.377934455871582
    9. '=self' → logprob: -14.377934455871582
    10. '           ' → logprob: -14.502934455871582

Token 554: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17993663251399994
    2. ' +' → logprob: -1.8049366474151611
    3. '
' → logprob: -9.679936408996582
    4. '   ' → logprob: -10.304936408996582
    5. '+
' → logprob: -11.179936408996582
    6. '       ' → logprob: -11.429936408996582
    7. '```' → logprob: -11.679936408996582
    8. '           ' → logprob: -12.179936408996582
    9. '

' → logprob: -12.367436408996582
    10. ' +
' → logprob: -12.429936408996582

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010495070368051529
    2. '2' → logprob: -5.260495185852051
    3. ' ' → logprob: -5.260495185852051
    4. '+' → logprob: -10.26049518585205
    5. ' +' → logprob: -12.13549518585205
    6. '   ' → logprob: -12.26049518585205
    7. '  ' → logprob: -12.38549518585205
    8. '
' → logprob: -13.76049518585205
    9. '       ' → logprob: -14.01049518585205
    10. '<|end|>' → logprob: -14.26049518585205

Token 556: ' walking' (ID: 15015)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01168616022914648
    2. '<|end|>' → logprob: -4.886686325073242
    3. ' +' → logprob: -6.386686325073242
    4. '+' → logprob: -6.761686325073242
    5. '
' → logprob: -8.136686325073242
    6. '<|end|>' → logprob: -8.386686325073242
    7. ' if' → logprob: -8.511686325073242
    8. '

' → logprob: -9.136686325073242
    9. ' return' → logprob: -9.761686325073242
    10. 'return' → logprob: -10.136686325073242

Token 557: ' units' (ID: 13306)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4523642957210541
    2. '_distance' → logprob: -1.7023643255233765
    3. '_steps' → logprob: -2.952364206314087
    4. '
' → logprob: -3.077364206314087
    5. '_length' → logprob: -3.452364206314087
    6. 'length' → logprob: -4.327364444732666
    7. ' distance' → logprob: -4.327364444732666
    8. 'steps' → logprob: -4.577364444732666
    9. '_' → logprob: -5.827364444732666
    10. '+' → logprob: -6.077364444732666

Token 558: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6076341867446899
    2. '           ' → logprob: -0.8576341867446899
    3. '       ' → logprob: -4.1076340675354
    4. ' if' → logprob: -5.3576340675354
    5. '+' → logprob: -5.9826340675354
    6. ' +' → logprob: -6.2326340675354
    7. '<|end|>' → logprob: -6.6076340675354
    8. ',' → logprob: -7.1076340675354
    9. 'if' → logprob: -7.2326340675354
    10. '<|end|>' → logprob: -7.8576340675354

Token 559: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09053919464349747
    2. '
' → logprob: -2.8405392169952393
    3. '       ' → logprob: -4.34053897857666
    4. ' if' → logprob: -4.71553897857666
    5. 'return' → logprob: -6.09053897857666
    6. ' return' → logprob: -6.96553897857666
    7. '            
' → logprob: -6.96553897857666
    8. '        
' → logprob: -7.46553897857666
    9. 'if' → logprob: -7.71553897857666
    10. ',' → logprob: -7.71553897857666

Token 560: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0861768126487732
    2. ' if' → logprob: -3.336176872253418
    3. 'return' → logprob: -3.336176872253418
    4. '           ' → logprob: -4.586176872253418
    5. ' return' → logprob: -7.211176872253418
    6. '       ' → logprob: -8.086176872253418
    7. '   ' → logprob: -9.711176872253418
    8. '```' → logprob: -10.211176872253418
    9. '
' → logprob: -10.461176872253418
    10. 'length' → logprob: -11.086176872253418

Token 561: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22162944078445435
    2. 'not' → logprob: -2.3466293811798096
    3. ' self' → logprob: -2.5966293811798096
    4. 'self' → logprob: -3.5966293811798096
    5. ' len' → logprob: -7.221629619598389
    6. 'len' → logprob: -7.846629619598389
    7. ' ' → logprob: -11.22162914276123
    8. '   ' → logprob: -11.97162914276123
    9. '	not' → logprob: -12.34662914276123
    10. ' ' → logprob: -12.47162914276123

Token 562: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1637164789135568e-05
    2. ' self' → logprob: -11.375011444091797
    3. '(self' → logprob: -16.625011444091797
    4. '           ' → logprob: -17.375011444091797
    5. '       ' → logprob: -18.375011444091797
    6. '
' → logprob: -18.500011444091797
    7. '   ' → logprob: -18.625011444091797
    8. '	self' → logprob: -19.375011444091797
    9. '[self' → logprob: -19.750011444091797
    10. '=self' → logprob: -20.875011444091797

Token 563: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.0005816269549541175
    2. '.' → logprob: -8.375581741333008
    3. 'constraints' → logprob: -8.375581741333008
    4. '.constraint' → logprob: -9.875581741333008
    5. '.con' → logprob: -10.125581741333008
    6. ' .' → logprob: -11.625581741333008
    7. '.n' → logprob: -12.125581741333008
    8. '.const' → logprob: -12.375581741333008
    9. '.graph' → logprob: -12.875581741333008
    10. '.conditions' → logprob: -13.250581741333008

Token 564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031848405487835407
    2. ':
' → logprob: -5.753184795379639
    3. '):' → logprob: -12.378185272216797
    4. ' :' → logprob: -13.628185272216797
    5. ':return' → logprob: -13.628185272216797
    6. ':
' → logprob: -15.628185272216797
    7. '):
' → logprob: -15.878185272216797
    8. ' or' → logprob: -16.878185272216797
    9. ' :
' → logprob: -17.878185272216797
    10. ':

' → logprob: -18.003185272216797

Token 565: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4134305417537689
    2. ':
' → logprob: -1.6634305715560913
    3. '           ' → logprob: -2.6634304523468018
    4. ':' → logprob: -2.6634304523468018
    5. 'return' → logprob: -5.288430690765381
    6. ':return' → logprob: -5.913430690765381
    7. ' return' → logprob: -6.788430690765381
    8. '
' → logprob: -8.288430213928223
    9. ',' → logprob: -8.788430213928223
    10. '):
' → logprob: -9.163430213928223

Token 566: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26666340231895447
    2. ' return' → logprob: -1.5166634321212769
    3. '               ' → logprob: -4.266663551330566
    4. '                   ' → logprob: -8.016663551330566
    5. '           ' → logprob: -8.891663551330566
    6. '
' → logprob: -9.641663551330566
    7. '   ' → logprob: -10.641663551330566
    8. ' 
' → logprob: -10.766663551330566
    9. '	return' → logprob: -11.516663551330566
    10. '       ' → logprob: -12.891663551330566

Token 567: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759434103965759
    2. 'self' → logprob: -0.8259434103965759
    3. '(self' → logprob: -13.325942993164062
    4. '           ' → logprob: -14.575942993164062
    5. '   ' → logprob: -15.075942993164062
    6. '0' → logprob: -15.325942993164062
    7. '	self' → logprob: -15.325942993164062
    8. '
' → logprob: -15.450942993164062
    9. 'len' → logprob: -15.575942993164062
    10. '[self' → logprob: -15.825942993164062

Token 568: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -7.302704761968926e-05
    2. '.' → logprob: -9.875073432922363
    3. 'n' → logprob: -10.875073432922363
    4. ' .' → logprob: -13.125073432922363
    5. '
' → logprob: -15.125073432922363
    6. 'self' → logprob: -15.250073432922363
    7. '+.' → logprob: -17.500072479248047
    8. '.m' → logprob: -18.000072479248047
    9. 'class' → logprob: -18.375072479248047
    10. ').' → logprob: -18.375072479248047

Token 569: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0548897311091423
    2. ' +' → logprob: -2.929889678955078
    3. ' plus' → logprob: -13.179889678955078
    4. '+
' → logprob: -13.554889678955078
    5. 'plus' → logprob: -13.554889678955078
    6. '
' → logprob: -14.304889678955078
    7. '()+' → logprob: -14.554889678955078
    8. '＋' → logprob: -14.929889678955078
    9. '1' → logprob: -15.054889678955078
    10. '   ' → logprob: -15.554889678955078

Token 570: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -15.000009536743164
    4. '+' → logprob: -18.875009536743164
    5. '7' → logprob: -19.250009536743164
    6. '   ' → logprob: -19.500009536743164
    7. '
' → logprob: -20.125009536743164
    8. '۱' → logprob: -20.500009536743164
    9. '```' → logprob: -20.625009536743164
    10. '11' → logprob: -20.750009536743164

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '2' → logprob: -16.125
    4. '
' → logprob: -17.5
    5. '+' → logprob: -18.25
    6. '```' → logprob: -19.625
    7. '   ' → logprob: -19.8125
    8. '۱' → logprob: -19.875
    9. '１' → logprob: -20.0625
    10. '

' → logprob: -20.125

Token 572: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007049955893307924
    2. '           ' → logprob: -6.007050037384033
    3. '<|end|>' → logprob: -6.007050037384033
    4. '
' → logprob: -7.257050037384033
    5. '            
' → logprob: -7.507050037384033
    6. '

' → logprob: -8.257049560546875
    7. '\n' → logprob: -9.132049560546875
    8. '       ' → logprob: -9.382049560546875
    9. '        
' → logprob: -9.757049560546875
    10. '    
' → logprob: -10.132049560546875

Token 573: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.066672183573246
    2. '        
' → logprob: -3.9416720867156982
    3. '           ' → logprob: -3.9416720867156982
    4. '       ' → logprob: -4.566672325134277
    5. '            
' → logprob: -5.191672325134277
    6. '    
' → logprob: -5.316672325134277
    7. '<|end|>' → logprob: -5.816672325134277
    8. '#' → logprob: -7.691672325134277
    9. 'return' → logprob: -8.816672325134277
    10. '  
' → logprob: -9.066672325134277

Token 574: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0179574489593506
    2. '#' (adapté à ' #') → logprob: -1.1429574489593506
    3. 'dist' → logprob: -1.8929574489593506
    4. 'visited' → logprob: -2.6429574489593506
    5. 'queue' → logprob: -3.1429574489593506
    6. 'distance' → logprob: -3.6429574489593506
    7. 'dp' → logprob: -4.64295768737793
    8. 'order' → logprob: -5.01795768737793
    9. 'import' → logprob: -5.51795768737793
    10. 'length' → logprob: -6.51795768737793

Token 575: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9398019313812256
    2. '#' → logprob: -1.1898019313812256
    3. 'dist' → logprob: -1.9398019313812256
    4. 'visited' → logprob: -2.6898019313812256
    5. 'distance' → logprob: -3.4398019313812256
    6. 'queue' → logprob: -3.5648019313812256
    7. 'order' → logprob: -4.189802169799805
    8. 'import' → logprob: -5.189802169799805
    9. 'dp' → logprob: -5.564802169799805
    10. 'top' → logprob: -5.814802169799805

Token 576: ' want' (ID: 1682)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.177071452140808
    2. '       ' → logprob: -1.427071452140808
    3. ' need' → logprob: -2.0520715713500977
    4. '   ' → logprob: -2.8020715713500977
    5. ' #' → logprob: -2.8020715713500977
    6. '#' → logprob: -3.0520715713500977
    7. ' continue' → logprob: -3.4270715713500977
    8. '.' → logprob: -4.052071571350098
    9. 'def' → logprob: -4.552071571350098
    10. 're' → logprob: -4.927071571350098

Token 577: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.029832525178790092
    2. 'to' → logprob: -3.529832601547241
    3. ' a' → logprob: -10.77983283996582
    4. 'def' → logprob: -11.15483283996582
    5. '       ' → logprob: -11.40483283996582
    6. '   ' → logprob: -12.40483283996582
    7. '           ' → logprob: -12.40483283996582
    8. 'top' → logprob: -12.77983283996582
    9. '    ' → logprob: -12.90483283996582
    10. 'a' → logprob: -12.90483283996582

Token 578: ' find' (ID: 1646)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.7722523808479309
    2. 'find' → logprob: -1.6472523212432861
    3. 'perform' → logprob: -2.522252321243286
    4. 'det' → logprob: -2.647252321243286
    5. 'return' → logprob: -3.272252321243286
    6. 'check' → logprob: -3.272252321243286
    7. 'top' → logprob: -3.522252321243286
    8. 'order' → logprob: -4.147252559661865
    9. ' detect' → logprob: -4.272252559661865
    10. ' find' → logprob: -4.397252559661865

Token 579: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09413035959005356
    2. 'the' → logprob: -3.219130277633667
    3. ' a' → logprob: -3.719130277633667
    4. ' minimal' → logprob: -4.219130516052246
    5. ' shortest' → logprob: -5.344130516052246
    6. ' if' → logprob: -6.469130516052246
    7. ' all' → logprob: -6.594130516052246
    8. 'a' → logprob: -7.094130516052246
    9. ' longest' → logprob: -7.094130516052246
    10. 'minimal' → logprob: -7.844130516052246

Token 580: ' visiting' (ID: 18798)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.859184741973877
    2. ' top' → logprob: -0.984184741973877
    3. ' valid' → logprob: -1.859184741973877
    4. 'valid' → logprob: -3.734184741973877
    5. ' path' → logprob: -4.359184741973877
    6. ' feasible' → logprob: -5.984184741973877
    7. 'path' → logprob: -6.109184741973877
    8. ' order' → logprob: -6.859184741973877
    9. ' topo' → logprob: -6.984184741973877
    10. 'order' → logprob: -6.984184741973877

Token 581: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.13688379526138306
    2. ' order' → logprob: -2.1368837356567383
    3. 'sequence' → logprob: -5.011883735656738
    4. ' sequence' → logprob: -5.761883735656738
    5. 'ordering' → logprob: -9.886883735656738
    6. '_order' → logprob: -10.261883735656738
    7. '	order' → logprob: -12.511883735656738
    8. ' ordering' → logprob: -12.511883735656738
    9. 'path' → logprob: -13.136883735656738
    10. '
' → logprob: -13.261883735656738

Token 582: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.03475094214081764
    2. 'that' → logprob: -3.5347509384155273
    3. '<|end|>' → logprob: -6.284750938415527
    4. ' such' → logprob: -6.909750938415527
    5. '           ' → logprob: -7.909750938415527
    6. ' with' → logprob: -8.034750938415527
    7. ' consistent' → logprob: -8.284750938415527
    8. '<|end|>' → logprob: -8.409750938415527
    9. ' of' → logprob: -9.159750938415527
    10. ',' → logprob: -9.284750938415527

Token 583: ' respects' (ID: 80154)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6439784169197083
    2. ' respects' → logprob: -1.3939783573150635
    3. 'res' → logprob: -2.0189783573150635
    4. ' satisfies' → logprob: -2.5189783573150635
    5. ' visits' → logprob: -5.518978595733643
    6. 'includes' → logprob: -6.268978595733643
    7. ' includes' → logprob: -6.643978595733643
    8. 'vis' → logprob: -6.643978595733643
    9. 'respect' → logprob: -6.768978595733643
    10. ' obey' → logprob: -7.018978595733643

Token 584: ' d' (ID: 272)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.33879363536834717
    2. ' all' → logprob: -1.3387936353683472
    3. 'the' → logprob: -3.8387937545776367
    4. ' the' → logprob: -5.963793754577637
    5. 'self' → logprob: -7.338793754577637
    6. 'constraints' → logprob: -7.963793754577637
    7. ' constraints' → logprob: -9.588793754577637
    8. ' self' → logprob: -10.588793754577637
    9. '           ' → logprob: -10.963793754577637
    10. 'these' → logprob: -12.588793754577637

Token 585: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5673432350158691
    2. ' ->' → logprob: -1.1923432350158691
    3. ',' → logprob: -2.817343235015869
    4. ' constraints' → logprob: -4.067343235015869
    5. ' <=' → logprob: -4.317343235015869
    6. ' before' → logprob: -4.567343235015869
    7. ' to' → logprob: -4.817343235015869
    8. ' <' → logprob: -5.442343235015869
    9. 'epend' → logprob: -6.317343235015869
    10. 'irected' → logprob: -6.567343235015869

Token 586: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02328682132065296
    2. ' c' → logprob: -3.773286819458008
    3. ' ' → logprob: -11.398286819458008
    4. '           ' → logprob: -11.648286819458008
    5. '
' → logprob: -11.898286819458008
    6. '   ' → logprob: -12.773286819458008
    7. '               ' → logprob: -13.273286819458008
    8. ',' → logprob: -13.773286819458008
    9. '  ' → logprob: -14.148286819458008
    10. '       ' → logprob: -14.148286819458008

Token 587: ' edges' (ID: 22569)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.035813331604004
    2. 'and' → logprob: -1.160813331604004
    3. ' edges' → logprob: -1.785813331604004
    4. ',' → logprob: -2.660813331604004
    5. 'edges' → logprob: -3.410813331604004
    6. '           ' → logprob: -3.910813331604004
    7. ' constraints' → logprob: -4.910813331604004
    8. ' for' → logprob: -5.035813331604004
    9. ' with' → logprob: -5.285813331604004
    10. '       ' → logprob: -5.410813331604004

Token 588: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0412601232528687
    2. ' and' → logprob: -1.1662601232528687
    3. ',' → logprob: -1.5412601232528687
    4. '
' → logprob: -2.916260242462158
    5. 'and' → logprob: -3.416260242462158
    6. '<|end|>' → logprob: -4.791260242462158
    7. '.' → logprob: -5.166260242462158
    8. ' that' → logprob: -5.416260242462158
    9. ' to' → logprob: -5.666260242462158
    10. ' with' → logprob: -5.791260242462158

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28403347730636597
    2. ' and' → logprob: -2.1590335369110107
    3. ',' → logprob: -2.9090335369110107
    4. '
' → logprob: -3.0340335369110107
    5. '<|end|>' → logprob: -4.159033298492432
    6. '            
' → logprob: -5.534033298492432
    7. '.' → logprob: -6.034033298492432
    8. 'and' → logprob: -6.534033298492432
    9. '<|end|>' → logprob: -6.659033298492432
    10. '       ' → logprob: -7.034033298492432

Token 590: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6386829018592834
    2. '#' (adapté à ' #') → logprob: -1.1386828422546387
    3. 'from' → logprob: -3.0136828422546387
    4. 'distance' → logprob: -3.2636828422546387
    5. '
' → logprob: -4.513682842254639
    6. ' from' → logprob: -4.763682842254639
    7. 'import' → logprob: -4.763682842254639
    8. ' and' → logprob: -5.138682842254639
    9. ' distances' → logprob: -5.388682842254639
    10. 'and' → logprob: -5.513682842254639

Token 591: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9162671566009521
    2. '#' → logprob: -1.0412671566009521
    3. 'dist' → logprob: -2.666267156600952
    4. 'visited' → logprob: -2.916267156600952
    5. 'distance' → logprob: -3.041267156600952
    6. 'order' → logprob: -3.541267156600952
    7. 'import' → logprob: -4.041267395019531
    8. '           ' → logprob: -5.416267395019531
    9. 'queue' → logprob: -5.541267395019531
    10. 'length' → logprob: -6.041267395019531

Token 592: ' find' (ID: 1646)
  Prédit: ' includes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' includes' → logprob: -1.3420543670654297
    2. ' also' → logprob: -1.9670543670654297
    3. ' covers' → logprob: -2.5920543670654297
    4. '
' → logprob: -2.5920543670654297
    5. 'includes' → logprob: -2.9670543670654297
    6. ' ensures' → logprob: -2.9670543670654297
    7. 'also' → logprob: -3.0920543670654297
    8. '#' → logprob: -3.3420543670654297
    9. ' can' → logprob: -3.7170543670654297
    10. ' that' → logprob: -3.7170543670654297

Token 593: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.16832666099071503
    2. ' minimal' → logprob: -2.2933266162872314
    3. 'the' → logprob: -3.7933266162872314
    4. ' a' → logprob: -4.2933268547058105
    5. ' shortest' → logprob: -4.2933268547058105
    6. 'minimal' → logprob: -5.9183268547058105
    7. '
' → logprob: -8.168326377868652
    8. 'a' → logprob: -8.168326377868652
    9. ' minimum' → logprob: -8.293326377868652
    10. 'minimum' → logprob: -9.418326377868652

Token 594: ' walking' (ID: 15015)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.857367217540741
    2. ' length' → logprob: -1.6073672771453857
    3. '_path' → logprob: -2.3573672771453857
    4. 'distance' → logprob: -2.8573672771453857
    5. '_distance' → logprob: -2.9823672771453857
    6. ' path' → logprob: -2.9823672771453857
    7. 'length' → logprob: -3.1073672771453857
    8. ' distance' → logprob: -3.2323672771453857
    9. '_walk' → logprob: -4.357367038726807
    10. 'path' → logprob: -4.732367038726807

Token 595: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.060998138040304184
    2. ' distance' → logprob: -3.3109982013702393
    3. 'length' → logprob: -4.31099796295166
    4. '_distance' → logprob: -5.06099796295166
    5. ' length' → logprob: -6.31099796295166
    6. '_length' → logprob: -7.43599796295166
    7. '
' → logprob: -8.31099796295166
    8. 'path' → logprob: -9.93599796295166
    9. '_' → logprob: -9.93599796295166
    10. '   ' → logprob: -10.31099796295166

Token 596: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5272413492202759
    2. '
' → logprob: -1.5272413492202759
    3. ' from' → logprob: -3.1522412300109863
    4. 'from' → logprob: -3.1522412300109863
    5. ',' → logprob: -3.5272412300109863
    6. '            
' → logprob: -3.9022412300109863
    7. 'distance' → logprob: -4.402241230010986
    8. 'import' → logprob: -5.027241230010986
    9. '.' → logprob: -5.152241230010986
    10. '#' → logprob: -5.277241230010986

Token 597: ' entrance' (ID: 27326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10028549283742905
    2. ' ' → logprob: -2.850285530090332
    3. 'entr' → logprob: -3.850285530090332
    4. ' entrance' → logprob: -4.475285530090332
    5. 'shop' → logprob: -6.225285530090332
    6. ' shop' → logprob: -7.100285530090332
    7. '1' → logprob: -7.475285530090332
    8. ' start' → logprob: -7.850285530090332
    9. 'start' → logprob: -8.100285530090332
    10. ' the' → logprob: -8.225285530090332

Token 598: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6783943176269531
    2. ' (' → logprob: -1.1783943176269531
    3. ' to' → logprob: -1.9283943176269531
    4. '0' → logprob: -4.053394317626953
    5. '           ' → logprob: -4.678394317626953
    6. 'to' → logprob: -4.678394317626953
    7. '=' → logprob: -6.803394317626953
    8. ' through' → logprob: -6.928394317626953
    9. ' ' → logprob: -8.428394317626953
    10. '()' → logprob: -8.553394317626953

Token 599: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02188730612397194
    2. ' ' → logprob: -4.771887302398682
    3. ')' → logprob: -5.271887302398682
    4. ' to' → logprob: -6.021887302398682
    5. '(' → logprob: -6.271887302398682
    6. ' (' → logprob: -6.771887302398682
    7. '=' → logprob: -6.771887302398682
    8. 'to' → logprob: -7.271887302398682
    9. ',' → logprob: -8.27188777923584
    10. ' =' → logprob: -8.39688777923584

Token 600: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024810459464788437
    2. ' )' → logprob: -3.774810552597046
    3. ' to' → logprob: -6.524810314178467
    4. 'to' → logprob: -9.774810791015625
    5. ')
' → logprob: -11.399810791015625
    6. ')+' → logprob: -11.899810791015625
    7. '
' → logprob: -12.524810791015625
    8. ' ' → logprob: -12.524810791015625
    9. '+' → logprob: -12.774810791015625
    10. ' )
' → logprob: -12.899810791015625

Token 601: ' →' (ID: 15155)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11093806475400925
    2. 'to' → logprob: -2.36093807220459
    3. ' through' → logprob: -5.11093807220459
    4. '           ' → logprob: -6.23593807220459
    5. ')' → logprob: -6.48593807220459
    6. 'through' → logprob: -7.36093807220459
    7. ' ' → logprob: -9.23593807220459
    8. '(' → logprob: -9.36093807220459
    9. ',' → logprob: -9.61093807220459
    10. ' (' → logprob: -9.86093807220459

Token 602: ' shops' (ID: 22509)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6624639630317688
    2. 'shops' → logprob: -1.912463903427124
    3. 'exit' → logprob: -2.287463903427124
    4. ' exit' → logprob: -2.662463903427124
    5. ' ' → logprob: -3.287463903427124
    6. 'all' → logprob: -3.412463903427124
    7. ' all' → logprob: -3.537463903427124
    8. 'shop' → logprob: -3.912463903427124
    9. ' shops' → logprob: -4.037464141845703
    10. '0' → logprob: -5.287464141845703

Token 603: ' →' (ID: 15155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3796368837356567
    2. ' +' → logprob: -1.8796368837356567
    3. ' →' → logprob: -2.004636764526367
    4. '+' → logprob: -2.754636764526367
    5. ' ...' → logprob: -2.879636764526367
    6. '...' → logprob: -3.129636764526367
    7. ' and' → logprob: -3.379636764526367
    8. '0' → logprob: -3.504636764526367
    9. ' (' → logprob: -3.629636764526367
    10. '[' → logprob: -3.629636764526367

Token 604: ' exit' (ID: 10654)
  Prédit: ' exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.5789473652839661
    2. 'exit' → logprob: -0.8289473652839661
    3. 'mall' → logprob: -6.8289475440979
    4. ' mall' → logprob: -7.4539475440979
    5. ' ' → logprob: -8.328947067260742
    6. '_exit' → logprob: -8.703947067260742
    7. '(exit' → logprob: -8.953947067260742
    8. 'self' → logprob: -9.078947067260742
    9. ' (' → logprob: -9.203947067260742
    10. ' Mall' → logprob: -9.578947067260742

Token 605: '(N' (ID: 10564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5863770246505737
    2. '<|end|>' → logprob: -0.9613770246505737
    3. '<|end|>' → logprob: -3.5863771438598633
    4. '           ' → logprob: -3.8363771438598633
    5. '

' → logprob: -5.711377143859863
    6. '.' → logprob: -6.086377143859863
    7. ',' → logprob: -6.461377143859863
    8. '            
' → logprob: -7.086377143859863
    9. '       ' → logprob: -7.836377143859863
    10. ' to' → logprob: -7.961377143859863

Token 606: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3902033970225602e-05
    2. ' +' → logprob: -11.500014305114746
    3. ')+' → logprob: -13.125014305114746
    4. '
' → logprob: -14.625014305114746
    5. '()+' → logprob: -14.875014305114746
    6. ')' → logprob: -15.250014305114746
    7. '+
' → logprob: -15.375014305114746
    8. '1' → logprob: -15.500014305114746
    9. '```' → logprob: -16.12501335144043
    10. '＋' → logprob: -17.25001335144043

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001387009397149086
    2. '2' → logprob: -9.125138282775879
    3. '+' → logprob: -10.875138282775879
    4. ')' → logprob: -11.750138282775879
    5. ' ' → logprob: -13.000138282775879
    6. '
' → logprob: -15.250138282775879
    7. '   ' → logprob: -16.250139236450195
    8. ')+' → logprob: -16.625139236450195
    9. '```' → logprob: -17.125139236450195
    10. ' +' → logprob: -17.500139236450195

Token 608: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004897973965853453
    2. ' )' → logprob: -5.6298980712890625
    3. ')
' → logprob: -7.3798980712890625
    4. '           ' → logprob: -7.8798980712890625
    5. ').' → logprob: -8.754898071289062
    6. '),' → logprob: -10.379898071289062
    7. '
' → logprob: -10.879898071289062
    8. ')

' → logprob: -11.129898071289062
    9. '.' → logprob: -11.879898071289062
    10. ' )
' → logprob: -11.879898071289062

Token 609: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09244838356971741
    2. '       ' → logprob: -3.7174484729766846
    3. '            
' → logprob: -3.8424484729766846
    4. '
' → logprob: -4.2174482345581055
    5. ' 
' → logprob: -4.3424482345581055
    6. '    
' → logprob: -5.9674482345581055
    7. '<|end|>' → logprob: -6.2174482345581055
    8. '        
' → logprob: -6.3424482345581055
    9. ' ' → logprob: -6.3424482345581055
    10. '  
' → logprob: -6.5924482345581055

Token 610: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5008869171142578
    2. 'distance' → logprob: -1.6258869171142578
    3. 'from' → logprob: -2.500886917114258
    4. 'import' → logprob: -3.250886917114258
    5. '           ' → logprob: -3.250886917114258
    6. 'dist' → logprob: -5.000886917114258
    7. ' #' → logprob: -5.375886917114258
    8. 'dp' → logprob: -5.625886917114258
    9. 'visited' → logprob: -5.625886917114258
    10. 'graph' → logprob: -5.750886917114258

Token 611: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5193201303482056
    2. 'dist' → logprob: -1.7693201303482056
    3. 'from' → logprob: -2.269320011138916
    4. 'visited' → logprob: -3.269320011138916
    5. 'dp' → logprob: -4.019320011138916
    6. '       ' → logprob: -4.144320011138916
    7. 'distance' → logprob: -4.394320011138916
    8. 'import' → logprob: -4.644320011138916
    9. 'queue' → logprob: -4.644320011138916
    10. 'self' → logprob: -4.769320011138916

Token 612: ' problem' (ID: 4792)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7104721069335938
    2. ' graph' → logprob: -1.2104721069335938
    3. '#' → logprob: -1.8354721069335938
    4. 'def' → logprob: -4.585472106933594
    5. ' code' → logprob: -4.585472106933594
    6. 'code' → logprob: -5.085472106933594
    7. 'from' → logprob: -5.210472106933594
    8. '
' → logprob: -5.835472106933594
    9. ' def' → logprob: -6.210472106933594
    10. 'n' → logprob: -6.210472106933594

Token 613: ' reduces' (ID: 38566)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6589115858078003
    2. 'is' → logprob: -1.9089115858078003
    3. 'context' → logprob: -2.40891170501709
    4. '#' → logprob: -2.78391170501709
    5. 'with' → logprob: -3.65891170501709
    6. 'requires' → logprob: -4.03391170501709
    7. 'description' → logprob: -4.15891170501709
    8. ' requires' → logprob: -4.53391170501709
    9. ':' → logprob: -4.53391170501709
    10. 'statement' → logprob: -4.65891170501709

Token 614: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18057233095169067
    2. 'to' → logprob: -1.805572271347046
    3. '           ' → logprob: -7.305572509765625
    4. '            ' → logprob: -9.930572509765625
    5. '               ' → logprob: -10.805572509765625
    6. '	to' → logprob: -10.930572509765625
    7. '   ' → logprob: -11.680572509765625
    8. ',' → logprob: -11.680572509765625
    9. '_to' → logprob: -11.805572509765625
    10. '            
' → logprob: -11.930572509765625

Token 615: ':' (ID: 25)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.8229556083679199
    2. 'finding' → logprob: -0.9479556083679199
    3. 'perform' → logprob: -1.94795560836792
    4. 'checking' → logprob: -4.82295560836792
    5. ' top' → logprob: -4.94795560836792
    6. 'a' → logprob: -5.07295560836792
    7. ' finding' → logprob: -5.57295560836792
    8. ' performing' → logprob: -6.82295560836792
    9. 'building' → logprob: -6.82295560836792
    10. 'detect' → logprob: -7.44795560836792

Token 616: ' given' (ID: 4335)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5802179574966431
    2. ' #' → logprob: -1.830217957496643
    3. ' top' → logprob: -2.7052178382873535
    4. 'Perform' → logprob: -3.0802178382873535
    5. 'from' → logprob: -3.2052178382873535
    6. ' from' → logprob: -3.7052178382873535
    7. 'top' → logprob: -3.7052178382873535
    8. 'import' → logprob: -3.8302178382873535
    9. '           ' → logprob: -4.9552178382873535
    10. 'Build' → logprob: -5.2052178382873535

Token 617: ' partial' (ID: 13664)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2695308029651642
    2. 'a' → logprob: -2.144530773162842
    3. ' the' → logprob: -2.769530773162842
    4. 'constraints' → logprob: -4.144530773162842
    5. 'top' → logprob: -4.519530773162842
    6. ' a' → logprob: -4.644530773162842
    7. ' constraints' → logprob: -5.144530773162842
    8. 'all' → logprob: -6.144530773162842
    9. 'dependencies' → logprob: -6.269530773162842
    10. 'nodes' → logprob: -6.269530773162842

Token 618: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.09407740831375122
    2. ' orders' → logprob: -3.4690773487091064
    3. ' ordering' → logprob: -3.5940773487091064
    4. 'order' → logprob: -4.2190775871276855
    5. '_order' → logprob: -4.5940775871276855
    6. 'orders' → logprob: -5.4690775871276855
    7. '_orders' → logprob: -6.9690775871276855
    8. 'ordering' → logprob: -7.7190775871276855
    9. '_' → logprob: -8.344077110290527
    10. '
' → logprob: -8.469077110290527

Token 619: ' constraints' (ID: 31060)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15224064886569977
    2. ' constraints' → logprob: -3.027240753173828
    3. ' of' → logprob: -3.152240753173828
    4. ' defined' → logprob: -4.902240753173828
    5. 'of' → logprob: -5.152240753173828
    6. 'constraints' → logprob: -5.277240753173828
    7. ' (' → logprob: -5.402240753173828
    8. 'ings' → logprob: -5.527240753173828
    9. ' induced' → logprob: -5.652240753173828
    10. ' on' → logprob: -5.777240753173828

Token 620: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003686174750328064
    2. ',
' → logprob: -6.62868595123291
    3. '           ' → logprob: -7.00368595123291
    4. '#' → logprob: -7.25368595123291
    5. 'from' → logprob: -8.62868595123291
    6. 'and' → logprob: -9.12868595123291
    7. ' on' → logprob: -9.37868595123291
    8. ' and' → logprob: -9.87868595123291
    9. ' of' → logprob: -10.00368595123291
    10. ' (' → logprob: -10.37868595123291

Token 621: 'd' (ID: 67)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9161007404327393
    2. '#' → logprob: -2.4161007404327393
    3. 'the' → logprob: -2.4161007404327393
    4. 'a' → logprob: -2.5411007404327393
    5. ')' → logprob: -2.6661007404327393
    6. ',' → logprob: -2.6661007404327393
    7. 'top' → logprob: -3.1661007404327393
    8. 'self' → logprob: -3.2911007404327393
    9. '           ' → logprob: -4.29110050201416
    10. 'and' → logprob: -4.29110050201416

Token 622: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5717483162879944
    2. '->' → logprob: -1.4467482566833496
    3. ' ->' → logprob: -2.8217482566833496
    4. ')->' → logprob: -2.8217482566833496
    5. ')' → logprob: -3.3217482566833496
    6. ' ,' → logprob: -4.07174825668335
    7. '→' → logprob: -4.57174825668335
    8. '),' → logprob: -5.57174825668335
    9. ',
' → logprob: -5.69674825668335
    10. '
' → logprob: -6.19674825668335

Token 623: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038136161863803864
    2. ' c' → logprob: -3.2881362438201904
    3. ' ' → logprob: -10.16313648223877
    4. ')' → logprob: -10.53813648223877
    5. '
' → logprob: -11.66313648223877
    6. '),' → logprob: -11.78813648223877
    7. '   ' → logprob: -12.91313648223877
    8. ')c' → logprob: -12.91313648223877
    9. '  ' → logprob: -13.53813648223877
    10. '

' → logprob: -14.10063648223877

Token 624: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.013868935406208038
    2. ')' → logprob: -5.513868808746338
    3. ' edges' → logprob: -5.638868808746338
    4. '),
' → logprob: -6.013868808746338
    5. 'edges' → logprob: -6.013868808746338
    6. ',' → logprob: -7.388868808746338
    7. ' ),' → logprob: -8.013869285583496
    8. ')
' → logprob: -9.763869285583496
    9. '),

' → logprob: -10.013869285583496
    10. 'and' → logprob: -10.138869285583496

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3174944221973419
    2. '#' → logprob: -1.4424943923950195
    3. ' #' → logprob: -3.6924943923950195
    4. ' build' → logprob: -5.6924943923950195
    5. ' continue' → logprob: -6.3174943923950195
    6. '       ' → logprob: -7.3174943923950195
    7. ' return' → logprob: -7.4424943923950195
    8. 'continue' → logprob: -7.4424943923950195
    9. 'build' → logprob: -7.5674943923950195
    10. ' find' → logprob: -8.19249439239502

Token 626: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3125726282596588
    2. '           ' → logprob: -1.8125725984573364
    3. ' build' → logprob: -3.562572717666626
    4. ' #' → logprob: -3.812572717666626
    5. 'build' → logprob: -4.062572479248047
    6. ' find' → logprob: -5.062572479248047
    7. ' compute' → logprob: -5.437572479248047
    8. ' perform' → logprob: -5.812572479248047
    9. 'compute' → logprob: -6.062572479248047
    10. ' add' → logprob: -6.312572479248047

Token 627: ' find' (ID: 1646)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.012151932343840599
    2. 'find' → logprob: -5.762151718139648
    3. 'build' → logprob: -6.512151718139648
    4. 'we' → logprob: -6.637151718139648
    5. '           ' → logprob: -6.762151718139648
    6. 'perform' → logprob: -6.762151718139648
    7. 'top' → logprob: -7.512151718139648
    8. 'try' → logprob: -7.512151718139648
    9. 'add' → logprob: -7.762151718139648
    10. ' #' → logprob: -7.887151718139648

Token 628: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7088484764099121
    2. ' a' → logprob: -0.9588484764099121
    3. 'the' → logprob: -2.708848476409912
    4. 'a' → logprob: -3.333848476409912
    5. ' an' → logprob: -4.458848476409912
    6. ' top' → logprob: -5.833848476409912
    7. ' shortest' → logprob: -6.083848476409912
    8. 'top' → logprob: -6.208848476409912
    9. ' minimal' → logprob: -6.333848476409912
    10. 'an' → logprob: -7.458848476409912

Token 629: ' visiting' (ID: 18798)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.26982635259628296
    2. ' top' → logprob: -1.7698264122009277
    3. ' valid' → logprob: -3.2698264122009277
    4. ' linear' → logprob: -4.644826412200928
    5. 'linear' → logprob: -4.894826412200928
    6. 'valid' → logprob: -4.894826412200928
    7. 'long' → logprob: -7.144826412200928
    8. ' path' → logprob: -7.394826412200928
    9. ' longest' → logprob: -8.01982593536377
    10. ' shortest' → logprob: -8.01982593536377

Token 630: ' sequence' (ID: 16281)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.22279463708400726
    2. ' order' → logprob: -1.7227946519851685
    3. 'sequence' → logprob: -4.347794532775879
    4. ' sequence' → logprob: -4.847794532775879
    5. '
' → logprob: -8.597794532775879
    6. 'ordering' → logprob: -9.722794532775879
    7. 'path' → logprob: -10.472794532775879
    8. '	order' → logprob: -10.847794532775879
    9. 'distance' → logprob: -10.972794532775879
    10. ' path' → logprob: -11.722794532775879

Token 631: ' covering' (ID: 24878)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.07213036715984344
    2. 'that' → logprob: -2.9471304416656494
    3. '           ' → logprob: -4.44713020324707
    4. ' of' → logprob: -6.44713020324707
    5. '<|end|>' → logprob: -7.32213020324707
    6. ' covering' → logprob: -7.94713020324707
    7. ' respecting' → logprob: -7.94713020324707
    8. ' with' → logprob: -7.94713020324707
    9. '#' → logprob: -8.19713020324707
    10. 'def' → logprob: -8.69713020324707

Token 632: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.31335121393203735
    2. ' all' → logprob: -1.3133511543273926
    3. 'the' → logprob: -10.06335163116455
    4. ' the' → logprob: -10.31335163116455
    5. '	all' → logprob: -12.56335163116455
    6. '           ' → logprob: -13.18835163116455
    7. '1' → logprob: -13.43835163116455
    8. '
' → logprob: -13.68835163116455
    9. ' ' → logprob: -14.18835163116455
    10. 'each' → logprob: -14.31335163116455

Token 633: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.25039243698120117
    2. ' shops' → logprob: -1.8753924369812012
    3. ' nodes' → logprob: -3.750392436981201
    4. 'nodes' → logprob: -4.250392436981201
    5. ' required' → logprob: -4.750392436981201
    6. 'required' → logprob: -5.125392436981201
    7. 'tokens' → logprob: -5.375392436981201
    8. 'necessary' → logprob: -6.500392436981201
    9. ' tokens' → logprob: -6.625392436981201
    10. ' the' → logprob: -6.750392436981201

Token 634: ' and' (ID: 326)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8146975040435791
    2. '           ' → logprob: -0.9396975040435791
    3. ',' → logprob: -2.814697504043579
    4. ' with' → logprob: -2.814697504043579
    5. 'that' → logprob: -4.439697265625
    6. ' and' → logprob: -4.814697265625
    7. '<|end|>' → logprob: -5.064697265625
    8. '
' → logprob: -5.689697265625
    9. ' (' → logprob: -5.939697265625
    10. '.' → logprob: -6.064697265625

Token 635: ' respecting' (ID: 136775)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7296125292778015
    2. '0' → logprob: -1.7296125888824463
    3. 'respect' → logprob: -1.9796125888824463
    4. 'ob' → logprob: -2.8546125888824463
    5. 'including' → logprob: -3.7296125888824463
    6. 'edges' → logprob: -3.9796125888824463
    7. 's' → logprob: -3.9796125888824463
    8. ' respecting' → logprob: -4.104612350463867
    9. 'exit' → logprob: -4.729612350463867
    10. 'constraints' → logprob: -4.979612350463867

Token 636: ' constraints' (ID: 31060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5127657055854797
    2. 'the' → logprob: -1.762765645980835
    3. ' constraints' → logprob: -1.887765645980835
    4. 'constraints' → logprob: -3.512765645980835
    5. ' all' → logprob: -3.887765645980835
    6. ' these' → logprob: -4.387765884399414
    7. 'all' → logprob: -4.762765884399414
    8. ' those' → logprob: -6.137765884399414
    9. ' them' → logprob: -6.637765884399414
    10. 'them' → logprob: -7.262765884399414

Token 637: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.791860044002533
    2. '.' → logprob: -1.2918601036071777
    3. '           ' → logprob: -2.0418601036071777
    4. ' that' → logprob: -2.5418601036071777
    5. ' with' → logprob: -3.6668601036071777
    6. '
' → logprob: -4.416860103607178
    7. '<|end|>' → logprob: -4.791860103607178
    8. ',
' → logprob: -5.666860103607178
    9. '            
' → logprob: -6.166860103607178
    10. '<|end|>' → logprob: -6.291860103607178

Token 638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22965186834335327
    2. ',' → logprob: -1.979651927947998
    3. ' that' → logprob: -3.604651927947998
    4. '.' → logprob: -3.979651927947998
    5. ' with' → logprob: -4.604651927947998
    6. '<|end|>' → logprob: -5.604651927947998
    7. ' and' → logprob: -5.729651927947998
    8. '<|end|>' → logprob: -7.354651927947998
    9. ' to' → logprob: -7.854651927947998
    10. 'that' → logprob: -7.979651927947998

Token 639: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5197802186012268
    2. '#' (adapté à ' #') → logprob: -2.394780158996582
    3. ',' → logprob: -2.519780158996582
    4. '
' → logprob: -2.769780158996582
    5. '<|end|>' → logprob: -3.019780158996582
    6. '.' → logprob: -3.394780158996582
    7. ' with' → logprob: -3.644780158996582
    8. ' that' → logprob: -4.269780158996582
    9. ' and' → logprob: -4.269780158996582
    10. '       ' → logprob: -4.894780158996582

Token 640: ' minimizing' (ID: 111215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5189694762229919
    2. '
' → logprob: -1.8939695358276367
    3. '<|end|>' → logprob: -2.1439695358276367
    4. '#' → logprob: -2.8939695358276367
    5. '            
' → logprob: -4.018969535827637
    6. '<|end|>' → logprob: -4.393969535827637
    7. '       ' → logprob: -4.393969535827637
    8. ',' → logprob: -4.893969535827637
    9. '.' → logprob: -5.018969535827637
    10. ' #' → logprob: -5.518969535827637

Token 641: ' walking' (ID: 15015)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.595809280872345
    2. ' total' → logprob: -1.4708092212677002
    3. 'the' → logprob: -2.5958092212677
    4. ' walking' → logprob: -2.5958092212677
    5. ' distance' → logprob: -3.4708092212677
    6. 'distance' → logprob: -3.5958092212677
    7. 'total' → logprob: -4.970809459686279
    8. ' distances' → logprob: -6.595809459686279
    9. 'walking' → logprob: -7.220809459686279
    10. ' overall' → logprob: -7.720809459686279

Token 642: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5766483545303345
    2. 'distance' → logprob: -0.8266483545303345
    3. '_distance' → logprob: -7.326648235321045
    4. ' distances' → logprob: -10.326648712158203
    5. 'dist' → logprob: -12.201648712158203
    6. '_' → logprob: -12.201648712158203
    7. ' length' → logprob: -13.451648712158203
    8. ' ' → logprob: -13.826648712158203
    9. ' ' → logprob: -13.826648712158203
    10. ' space' → logprob: -14.076648712158203

Token 643: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1242107152938843
    2. '<|end|>' → logprob: -1.4992107152938843
    3. '.' → logprob: -1.7492107152938843
    4. '           ' → logprob: -1.9992107152938843
    5. ',' → logprob: -2.874210834503174
    6. '<|end|>' → logprob: -2.999210834503174
    7. '            
' → logprob: -4.499210834503174
    8. '       ' → logprob: -5.249210834503174
    9. '        
' → logprob: -5.374210834503174
    10. '#' → logprob: -5.999210834503174

Token 644: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1133280098438263
    2. 'entr' → logprob: -2.363327980041504
    3. 'position' → logprob: -5.238327980041504
    4. ' entrance' → logprob: -5.988327980041504
    5. 'shop' → logprob: -6.363327980041504
    6. 'start' → logprob: -6.363327980041504
    7. ' ' → logprob: -6.988327980041504
    8. ' position' → logprob: -7.863327980041504
    9. 'the' → logprob: -9.113327980041504
    10. ' start' → logprob: -9.863327980041504

Token 645: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00929923914372921
    2. 'entr' → logprob: -4.759299278259277
    3. 'position' → logprob: -8.259299278259277
    4. ' ' → logprob: -9.009299278259277
    5. 'start' → logprob: -9.134299278259277
    6. 'shop' → logprob: -9.384299278259277
    7. ' entrance' → logprob: -10.134299278259277
    8. '
' → logprob: -11.009299278259277
    9. 'the' → logprob: -11.384299278259277
    10. ' position' → logprob: -12.009299278259277

Token 646: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08750438690185547
    2. ' through' → logprob: -2.5875043869018555
    3. 'to' → logprob: -5.0875043869018555
    4. ' ' → logprob: -6.8375043869018555
    5. 'through' → logprob: -7.4625043869018555
    6. '           ' → logprob: -7.5875043869018555
    7. ',' → logprob: -9.962504386901855
    8. '   ' → logprob: -10.087504386901855
    9. '            ' → logprob: -10.712504386901855
    10. ')' → logprob: -11.087504386901855

Token 647: ' visit' (ID: 4030)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13143470883369446
    2. ' self' → logprob: -2.256434679031372
    3. 'n' → logprob: -4.131434917449951
    4. ' n' → logprob: -6.381434917449951
    5. '1' → logprob: -8.006434440612793
    6. '(self' → logprob: -9.006434440612793
    7. 'N' → logprob: -9.631434440612793
    8. ' N' → logprob: -10.506434440612793
    9. 's' → logprob: -10.631434440612793
    10. '
' → logprob: -10.881434440612793

Token 648: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5997890830039978
    2. 'all' → logprob: -0.8497890830039978
    3. '1' → logprob: -3.8497891426086426
    4. ' ' → logprob: -6.474789142608643
    5. '           ' → logprob: -7.724789142608643
    6. 'shops' → logprob: -9.599788665771484
    7. '
' → logprob: -9.974788665771484
    8. ' shops' → logprob: -10.099788665771484
    9. 'self' → logprob: -10.224788665771484
    10. '   ' → logprob: -11.724788665771484

Token 649: ' shops' (ID: 22509)
  Prédit: ' shops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shops' → logprob: -0.4314378798007965
    2. 'shops' → logprob: -1.0564378499984741
    3. '
' → logprob: -6.681437969207764
    4. ' ' → logprob: -9.306437492370605
    5. 'self' → logprob: -9.306437492370605
    6. 'shop' → logprob: -9.431437492370605
    7. 'n' → logprob: -9.556437492370605
    8. 'tokens' → logprob: -9.556437492370605
    9. ' visited' → logprob: -9.681437492370605
    10. '\t' → logprob: -9.806437492370605

Token 650: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.937019407749176
    2. ' and' → logprob: -1.0620193481445312
    3. ',' → logprob: -1.5620193481445312
    4. 'and' → logprob: -3.3120193481445312
    5. '            ' → logprob: -5.937019348144531
    6. '
' → logprob: -6.312019348144531
    7. ' ' → logprob: -6.437019348144531
    8. ' ,' → logprob: -6.562019348144531
    9. '<|end|>' → logprob: -6.937019348144531
    10. ' then' → logprob: -7.062019348144531

Token 651: ' order' (ID: 2569)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.36508071422576904
    2. 'order' → logprob: -1.740080714225769
    3. 'in' → logprob: -2.7400808334350586
    4. 'an' → logprob: -3.8650808334350586
    5. 'sequence' → logprob: -4.365080833435059
    6. 'a' → logprob: -4.490080833435059
    7. 'ascending' → logprob: -4.865080833435059
    8. 'any' → logprob: -5.740080833435059
    9. 'the' → logprob: -5.990080833435059
    10. ' order' → logprob: -6.115080833435059

Token 652: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09860499948263168
    2. ',' → logprob: -3.348604917526245
    3. '.' → logprob: -3.973604917526245
    4. ' and' → logprob: -4.473605155944824
    5. '<|end|>' → logprob: -4.723605155944824
    6. '
' → logprob: -4.973605155944824
    7. '            
' → logprob: -4.973605155944824
    8. '<|end|>' → logprob: -6.223605155944824
    9. 'and' → logprob: -7.348605155944824
    10. ' to' → logprob: -7.598605155944824

Token 653: ' exit' (ID: 10654)
  Prédit: 'then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'then' → logprob: -0.21249251067638397
    2. 'finally' → logprob: -2.5874924659729004
    3. ' then' → logprob: -2.7124924659729004
    4. 'ending' → logprob: -4.0874924659729
    5. ' finally' → logprob: -4.3374924659729
    6. 'return' → logprob: -4.7124924659729
    7. 'end' → logprob: -5.5874924659729
    8. 'from' → logprob: -5.8374924659729
    9. ' end' → logprob: -6.9624924659729
    10. ' ending' → logprob: -7.2124924659729

Token 654: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05683695897459984
    2. '.' → logprob: -3.9318368434906006
    3. '
' → logprob: -3.9318368434906006
    4. ',' → logprob: -5.43183708190918
    5. '<|end|>' → logprob: -5.43183708190918
    6. '            
' → logprob: -6.43183708190918
    7. '<|end|>' → logprob: -6.55683708190918
    8. 'def' → logprob: -7.43183708190918
    9. '       ' → logprob: -7.68183708190918
    10. '          ' → logprob: -8.18183708190918

Token 655: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009536213474348187
    2. ' self' → logprob: -7.250953674316406
    3. 'n' → logprob: -8.625953674316406
    4. '
' → logprob: -9.750953674316406
    5. '(self' → logprob: -12.375953674316406
    6. 'N' → logprob: -15.000953674316406
    7. '```' → logprob: -15.000953674316406
    8. 'the' → logprob: -15.125953674316406
    9. '0' → logprob: -15.875953674316406
    10. '
' → logprob: -16.250953674316406

Token 656: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031821493059396744
    2. ' +' → logprob: -3.6568214893341064
    3. '
' → logprob: -5.5318217277526855
    4. ',' → logprob: -8.031821250915527
    5. '+
' → logprob: -8.281821250915527
    6. '<|end|>' → logprob: -8.656821250915527
    7. '.' → logprob: -8.906821250915527
    8. '           ' → logprob: -9.406821250915527
    9. 'def' → logprob: -9.531821250915527
    10. '       ' → logprob: -9.656821250915527

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -14.875001907348633
    4. '2' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '+' → logprob: -18.000001907348633
    7. '```' → logprob: -18.375001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '`' → logprob: -19.750001907348633
    10. '...' → logprob: -20.000001907348633

Token 658: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8368385434150696
    2. '
' → logprob: -1.0868384838104248
    3. '<|end|>' → logprob: -1.8368384838104248
    4. '<|end|>' → logprob: -3.961838483810425
    5. ',' → logprob: -4.086838722229004
    6. '            
' → logprob: -4.336838722229004
    7. '.' → logprob: -4.711838722229004
    8. '#' → logprob: -6.336838722229004
    9. '        
' → logprob: -6.336838722229004
    10. '       ' → logprob: -6.461838722229004

Token 659: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30911168456077576
    2. '#' (adapté à ' #') → logprob: -1.4341117143630981
    3. '
' → logprob: -4.684111595153809
    4. 'import' → logprob: -5.059111595153809
    5. 'from' → logprob: -5.809111595153809
    6. '       ' → logprob: -6.059111595153809
    7. 'distance' → logprob: -6.434111595153809
    8. ' #' → logprob: -6.559111595153809
    9. '            
' → logprob: -6.809111595153809
    10. '   ' → logprob: -7.184111595153809

Token 661: ' Key' (ID: 7926)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17011523246765137
    2. 'from' → logprob: -2.7951152324676514
    3. 'dp' → logprob: -3.6701152324676514
    4. 'visited' → logprob: -3.7951152324676514
    5. 'dist' → logprob: -4.2951154708862305
    6. 'top' → logprob: -4.4201154708862305
    7. 'order' → logprob: -5.1701154708862305
    8. '       ' → logprob: -5.1701154708862305
    9. 'import' → logprob: -5.1701154708862305
    10. 'distance' → logprob: -6.1701154708862305

Token 662: ' insight' (ID: 24058)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.9686259627342224
    2. ' insight' → logprob: -1.5936260223388672
    3. ' idea' → logprob: -2.343626022338867
    4. '
' → logprob: -3.093626022338867
    5. 'steps' → logprob: -3.218626022338867
    6. ' challenge' → logprob: -3.593626022338867
    7. ' code' → logprob: -3.968626022338867
    8. ' step' → logprob: -4.093626022338867
    9. 'points' → logprob: -4.093626022338867
    10. ' parts' → logprob: -4.343626022338867

Token 663: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03277808055281639
    2. '#' → logprob: -3.907778024673462
    3. '           ' → logprob: -4.907778263092041
    4. ':
' → logprob: -6.532778263092041
    5. ' is' → logprob: -6.782778263092041
    6. ',' → logprob: -7.782778263092041
    7. '
' → logprob: -8.282777786254883
    8. '            
' → logprob: -8.282777786254883
    9. ' :' → logprob: -8.782777786254883
    10. ' =' → logprob: -8.907777786254883

Token 664: ' In' (ID: 730)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18345755338668823
    2. 'We' → logprob: -2.558457612991333
    3. '           ' → logprob: -4.183457374572754
    4. 'Add' → logprob: -4.683457374572754
    5. ' #' → logprob: -5.058457374572754
    6. '
' → logprob: -5.183457374572754
    7. 'distance' → logprob: -5.308457374572754
    8. 'The' → logprob: -5.433457374572754
    9. 'from' → logprob: -5.558457374572754
    10. 'import' → logprob: -5.933457374572754

Token 665: ' absence' (ID: 31880)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.7012624740600586
    2. ' this' → logprob: -1.9512624740600586
    3. 'the' → logprob: -1.9512624740600586
    4. 'def' → logprob: -2.2012624740600586
    5. 'this' → logprob: -2.8262624740600586
    6. ' a' → logprob: -3.0762624740600586
    7. 'itialize' → logprob: -3.2012624740600586
    8. 'self' → logprob: -3.3262624740600586
    9. '#' → logprob: -3.5762624740600586
    10. 'put' → logprob: -3.7012624740600586

Token 666: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05234910547733307
    2. 'of' → logprob: -3.052349090576172
    3. '           ' → logprob: -5.677349090576172
    4. '   ' → logprob: -8.677349090576172
    5. '       ' → logprob: -10.427349090576172
    6. '
' → logprob: -10.552349090576172
    7. '               ' → logprob: -11.052349090576172
    8. ':' → logprob: -11.302349090576172
    9. ',' → logprob: -11.427349090576172
    10. '#' → logprob: -11.677349090576172

Token 667: ' constraints' (ID: 31060)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.4586632549762726
    2. 'constraints' → logprob: -1.2086632251739502
    3. ' constraints' → logprob: -3.70866322517395
    4. 'additional' → logprob: -4.708663463592529
    5. ' cycles' → logprob: -4.958663463592529
    6. 'top' → logprob: -5.083663463592529
    7. 'contr' → logprob: -5.583663463592529
    8. 'code' → logprob: -5.708663463592529
    9. 'the' → logprob: -5.958663463592529
    10. 'other' → logprob: -5.958663463592529

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005728390067815781
    2. '           ' → logprob: -5.880728244781494
    3. ',
' → logprob: -6.255728244781494
    4. ':' → logprob: -8.380728721618652
    5. '#' → logprob: -8.380728721618652
    6. ' ,' → logprob: -9.505728721618652
    7. ' the' → logprob: -9.880728721618652
    8. 'self' → logprob: -10.005728721618652
    9. 'the' → logprob: -10.005728721618652
    10. '       ' → logprob: -10.255728721618652

Token 669: ' visit' (ID: 4030)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.008208990097046
    2. 'minimal' → logprob: -1.258208990097046
    3. 'return' → logprob: -1.383208990097046
    4. 'the' → logprob: -3.258208990097046
    5. ' return' → logprob: -3.508208990097046
    6. 'distance' → logprob: -5.008209228515625
    7. '#' → logprob: -5.133209228515625
    8. ' the' → logprob: -5.133209228515625
    9. 'min' → logprob: -5.508209228515625
    10. 'minimum' → logprob: -5.883209228515625

Token 670: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.5344703197479248
    2. ' all' → logprob: -1.9094703197479248
    3. ' shops' → logprob: -1.9094703197479248
    4. 'all' → logprob: -2.284470319747925
    5. ' the' → logprob: -5.159470558166504
    6. 'the' → logprob: -5.659470558166504
    7. ' in' → logprob: -6.034470558166504
    8. 'in' → logprob: -6.159470558166504
    9. 'sh' → logprob: -7.909470558166504
    10. ' ' → logprob: -8.284470558166504

Token 671: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09149576723575592
    2. ' in' → logprob: -2.4664957523345947
    3. 'from' → logprob: -6.466495990753174
    4. '0' → logprob: -7.466495990753174
    5. 'sorted' → logprob: -9.466495513916016
    6. 'by' → logprob: -9.841495513916016
    7. '1' → logprob: -10.466495513916016
    8. 'se' → logprob: -10.466495513916016
    9. '```' → logprob: -10.466495513916016
    10. ' ' → logprob: -10.591495513916016

Token 672: ' order' (ID: 2569)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5281341075897217
    2. 'order' → logprob: -1.9031341075897217
    3. 'in' → logprob: -2.1531341075897217
    4. 'sorted' → logprob: -2.1531341075897217
    5. 'ascending' → logprob: -4.153134346008301
    6. 'positions' → logprob: -6.278134346008301
    7. ' position' → logprob: -6.278134346008301
    8. 'pos' → logprob: -6.278134346008301
    9. 'numer' → logprob: -6.528134346008301
    10. 'natural' → logprob: -6.778134346008301

Token 673: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6424149870872498
    2. '.' → logprob: -1.6424150466918945
    3. 'from' → logprob: -2.2674150466918945
    4. '           ' → logprob: -2.7674150466918945
    5. ' from' → logprob: -3.7674150466918945
    6. '
' → logprob: -3.8924150466918945
    7. ',
' → logprob: -4.7674150466918945
    8. '       ' → logprob: -4.8924150466918945
    9. ' and' → logprob: -4.8924150466918945
    10. '   ' → logprob: -5.0174150466918945

Token 674: '1' (ID: 16)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7585132122039795
    2. ' of' → logprob: -2.1335132122039795
    3. ',' → logprob: -2.6335132122039795
    4. ' by' → logprob: -3.2585132122039795
    5. '0' → logprob: -3.3835132122039795
    6. 'of' → logprob: -3.5085132122039795
    7. 'self' → logprob: -3.5085132122039795
    8. ' from' → logprob: -3.8835132122039795
    9. 'sorted' → logprob: -4.008513450622559
    10. '.' → logprob: -4.008513450622559

Token 675: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.44098660349845886
    2. ',' → logprob: -1.8159866333007812
    3. ' through' → logprob: -1.9409866333007812
    4. 'to' → logprob: -3.8159866333007812
    5. '<|end|>' → logprob: -5.065986633300781
    6. '..' → logprob: -5.190986633300781
    7. '...' → logprob: -5.440986633300781
    8. '<|end|>' → logprob: -6.065986633300781
    9. 'through' → logprob: -6.190986633300781
    10. ' ,' → logprob: -6.690986633300781

Token 676: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6501666903495789
    2. 'n' → logprob: -1.9001667499542236
    3. ' self' → logprob: -2.5251667499542236
    4. ',' → logprob: -2.6501667499542236
    5. ' ' → logprob: -2.7751667499542236
    6. '<|end|>' → logprob: -3.0251667499542236
    7. '..' → logprob: -3.5251667499542236
    8. ' n' → logprob: -4.1501665115356445
    9. '...' → logprob: -4.7751665115356445
    10. ' ,' → logprob: -5.6501665115356445

Token 677: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.574650228023529
    2. '
' → logprob: -1.5746502876281738
    3. '<|end|>' → logprob: -1.8246502876281738
    4. '<|end|>' → logprob: -3.699650287628174
    5. ',' → logprob: -3.949650287628174
    6. '            
' → logprob: -4.699650287628174
    7. '.' → logprob: -5.199650287628174
    8. '       ' → logprob: -6.074650287628174
    9. ' and' → logprob: -6.324650287628174
    10. '#' → logprob: -6.824650287628174

Token 678: 'distance' (ID: 40614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1209992989897728
    2. '),' → logprob: -2.745999336242676
    3. ').' → logprob: -3.870999336242676
    4. ')
' → logprob: -3.995999336242676
    5. '           ' → logprob: -5.870999336242676
    6. ')

' → logprob: -6.745999336242676
    7. '#' → logprob: -6.745999336242676
    8. ',' → logprob: -6.870999336242676
    9. ' )' → logprob: -7.245999336242676
    10. ').
' → logprob: -7.495999336242676

Token 679: ' n' (ID: 297)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0643610954284668
    2. ')' → logprob: -1.8143610954284668
    3. '+' → logprob: -2.064361095428467
    4. ' =' → logprob: -2.314361095428467
    5. ' is' → logprob: -2.564361095428467
    6. ' n' → logprob: -2.939361095428467
    7. '),' → logprob: -3.689361095428467
    8. '=n' → logprob: -3.814361095428467
    9. '=' → logprob: -4.439361095428467
    10. ' )' → logprob: -4.814361095428467

Token 680: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28565481305122375
    2. ')' → logprob: -1.9106547832489014
    3. ' +' → logprob: -2.7856547832489014
    4. '),' → logprob: -3.7856547832489014
    5. ').' → logprob: -5.5356550216674805
    6. ')+' → logprob: -5.5356550216674805
    7. ' )' → logprob: -6.1606550216674805
    8. ')
' → logprob: -6.2856550216674805
    9. '
' → logprob: -6.9106550216674805
    10. ' ),' → logprob: -7.2856550216674805

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010080150241265073
    2. ' ' → logprob: -9.250101089477539
    3. '2' → logprob: -13.375101089477539
    4. '
' → logprob: -13.750101089477539
    5. ')' → logprob: -14.125101089477539
    6. '+' → logprob: -15.000101089477539
    7. '0' → logprob: -15.625101089477539
    8. '   ' → logprob: -15.750101089477539
    9. '```' → logprob: -16.25010108947754
    10. '  ' → logprob: -16.93760108947754

Token 682: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002422152552753687
    2. ').' → logprob: -6.877422332763672
    3. '),' → logprob: -7.627422332763672
    4. ' )' → logprob: -7.627422332763672
    5. ')
' → logprob: -8.127422332763672
    6. '           ' → logprob: -10.877422332763672
    7. ')

' → logprob: -11.252422332763672
    8. '):' → logprob: -11.377422332763672
    9. '   ' → logprob: -11.752422332763672
    10. '+' → logprob: -12.002422332763672

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8816956877708435
    2. '<|end|>' → logprob: -1.6316957473754883
    3. '#' → logprob: -2.0066957473754883
    4. '       ' → logprob: -2.8816957473754883
    5. ' #' → logprob: -3.3816957473754883
    6. ' ' → logprob: -3.3816957473754883
    7. '            
' → logprob: -3.6316957473754883
    8. '.' → logprob: -3.7566957473754883
    9. ' 
' → logprob: -4.006695747375488
    10. ' for' → logprob: -5.006695747375488

Token 684: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6151052713394165
    2. '#' (adapté à ' #') → logprob: -1.2401052713394165
    3. '       ' → logprob: -3.365105152130127
    4. '
' → logprob: -3.490105152130127
    5. ' #' → logprob: -3.865105152130127
    6. 'from' → logprob: -4.115105152130127
    7. 'distance' → logprob: -4.240105152130127
    8. 'import' → logprob: -4.865105152130127
    9. '            
' → logprob: -4.865105152130127
    10. ' from' → logprob: -5.115105152130127

Token 685: ' With' (ID: 3813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7612279057502747
    2. '
' → logprob: -1.7612278461456299
    3. '           ' → logprob: -1.8862278461456299
    4. 'from' → logprob: -2.88622784614563
    5. ' #' → logprob: -3.38622784614563
    6. ' from' → logprob: -4.011228084564209
    7. 'top' → logprob: -4.011228084564209
    8. ' top' → logprob: -4.261228084564209
    9. '            
' → logprob: -4.386228084564209
    10. '       ' → logprob: -4.386228084564209

Token 686: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.35411515831947327
    2. ' constraints' → logprob: -1.2291151285171509
    3. 'additional' → logprob: -6.604115009307861
    4. 'the' → logprob: -7.354115009307861
    5. ' additional' → logprob: -7.729115009307861
    6. 'out' → logprob: -8.10411548614502
    7. 'more' → logprob: -8.22911548614502
    8. 'constraint' → logprob: -8.35411548614502
    9. 'con' → logprob: -8.60411548614502
    10. ' the' → logprob: -8.72911548614502

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004766765050590038
    2. ',
' → logprob: -6.379766941070557
    3. '           ' → logprob: -6.879766941070557
    4. ' ,' → logprob: -7.754766941070557
    5. ':' → logprob: -8.004766464233398
    6. '#' → logprob: -8.004766464233398
    7. ' we' → logprob: -8.629766464233398
    8. '<|end|>' → logprob: -8.629766464233398
    9. ' the' → logprob: -9.379766464233398
    10. '       ' → logprob: -9.379766464233398

Token 688: ' she' (ID: 1770)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0228732842952013
    2. '           ' → logprob: -4.772873401641846
    3. 'import' → logprob: -5.397873401641846
    4. 'pass' → logprob: -6.397873401641846
    5. 'return' → logprob: -6.397873401641846
    6. 'top' → logprob: -6.897873401641846
    7. '       ' → logprob: -6.897873401641846
    8. 'from' → logprob: -7.022873401641846
    9. ' #' → logprob: -7.272873401641846
    10. 'we' → logprob: -7.522873401641846

Token 689: ' might' (ID: 3572)
  Prédit: ' wants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wants' → logprob: -1.0950535535812378
    2. ' must' → logprob: -1.2200535535812378
    3. ' needs' → logprob: -2.4700536727905273
    4. ' may' → logprob: -2.8450536727905273
    5. ' might' → logprob: -2.9700536727905273
    6. '   ' → logprob: -3.3450536727905273
    7. 'must' → logprob: -3.8450536727905273
    8. ' will' → logprob: -3.9700536727905273
    9. '#' → logprob: -4.220053672790527
    10. ' should' → logprob: -4.345053672790527

Token 690: ' have' (ID: 679)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.8051178455352783
    2. 'have' → logprob: -0.9301178455352783
    3. ' have' → logprob: -2.5551178455352783
    4. ' need' → logprob: -3.1801178455352783
    5. 'visit' → logprob: -4.180117607116699
    6. 'want' → logprob: -5.180117607116699
    7. ' want' → logprob: -5.930117607116699
    8. 'choose' → logprob: -5.930117607116699
    9. 'not' → logprob: -6.055117607116699
    10. 'skip' → logprob: -6.180117607116699

Token 691: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.201457679271698
    2. ' to' → logprob: -1.7014577388763428
    3. '
' → logprob: -11.701457977294922
    4. 'top' → logprob: -11.826457977294922
    5. 't' → logprob: -11.951457977294922
    6. '	to' → logprob: -12.326457977294922
    7. 'a' → logprob: -12.576457977294922
    8. 'def' → logprob: -13.451457977294922
    9. 'different' → logprob: -13.826457977294922
    10. 'increase' → logprob: -14.201457977294922

Token 692: ' return' (ID: 622)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.9191311597824097
    2. 'det' → logprob: -1.1691311597824097
    3. 'skip' → logprob: -2.294131278991699
    4. 'de' → logprob: -2.794131278991699
    5. 'go' → logprob: -3.169131278991699
    6. 're' → logprob: -4.294131278991699
    7. ' det' → logprob: -4.544131278991699
    8. 'back' → logprob: -4.794131278991699
    9. 'change' → logprob: -4.794131278991699
    10. 'jump' → logprob: -4.919131278991699

Token 693: ' backward' (ID: 58986)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.046353988349437714
    2. ' back' → logprob: -3.546354055404663
    3. 'to' → logprob: -4.796353816986084
    4. ' ' → logprob: -5.671353816986084
    5. '_back' → logprob: -6.421353816986084
    6. '_to' → logprob: -6.796353816986084
    7. 'back' → logprob: -7.546353816986084
    8. '_' → logprob: -8.421354293823242
    9. ' home' → logprob: -8.421354293823242
    10. ' or' → logprob: -8.421354293823242

Token 694: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.676558256149292
    2. '
' → logprob: -1.051558256149292
    3. '<|end|>' → logprob: -3.426558256149292
    4. '.' → logprob: -3.801558256149292
    5. ',' → logprob: -3.801558256149292
    6. '#' → logprob: -4.176558494567871
    7. ' to' → logprob: -4.301558494567871
    8. '       ' → logprob: -4.676558494567871
    9. '<|end|>' → logprob: -5.301558494567871
    10. ' and' → logprob: -5.676558494567871

Token 695: ' fulfill' (ID: 29139)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43933066725730896
    2. 'visit' → logprob: -2.314330577850342
    3. 'some' → logprob: -2.314330577850342
    4. 'comp' → logprob: -3.064330577850342
    5. 'previous' → logprob: -3.564330577850342
    6. 'ful' → logprob: -3.814330577850342
    7. 'shops' → logprob: -4.314330577850342
    8. 'a' → logprob: -4.439330577850342
    9. 'certain' → logprob: -4.564330577850342
    10. 'respect' → logprob: -5.189330577850342

Token 696: ' them' (ID: 1373)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.6635998487472534
    2. ' them' → logprob: -1.9135998487472534
    3. ' constraints' → logprob: -2.288599967956543
    4. ' the' → logprob: -2.413599967956543
    5. 'them' → logprob: -2.538599967956543
    6. 'the' → logprob: -2.913599967956543
    7. ' those' → logprob: -5.538599967956543
    8. ' some' → logprob: -5.663599967956543
    9. 'some' → logprob: -6.038599967956543
    10. 'those' → logprob: -6.413599967956543

Token 697: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 698: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.318546861410141
    2. '<|end|>' → logprob: -1.6935468912124634
    3. '            
' → logprob: -3.568546772003174
    4. '
' → logprob: -3.568546772003174
    5. '<|end|>' → logprob: -4.818546772003174
    6. '       ' → logprob: -5.068546772003174
    7. ' ' → logprob: -5.568546772003174
    8. '        
' → logprob: -5.693546772003174
    9. '            ' → logprob: -6.068546772003174
    10. ' 
' → logprob: -6.193546772003174

Token 699: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28539854288101196
    2. '#' (adapté à ' #') → logprob: -1.7853984832763672
    3. '       ' → logprob: -4.035398483276367
    4. '
' → logprob: -4.035398483276367
    5. 'top' → logprob: -4.410398483276367
    6. 'from' → logprob: -4.535398483276367
    7. '            
' → logprob: -4.910398483276367
    8. 'import' → logprob: -5.160398483276367
    9. 'distance' → logprob: -5.910398483276367
    10. '   ' → logprob: -6.160398483276367

Token 700: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10537880659103394
    2. 'from' → logprob: -2.9803788661956787
    3. '           ' → logprob: -3.9803788661956787
    4. 'import' → logprob: -4.7303786277771
    5. 'top' → logprob: -5.1053786277771
    6. 'distance' → logprob: -5.8553786277771
    7. 'visited' → logprob: -6.2303786277771
    8. 'order' → logprob: -6.3553786277771
    9. 'dist' → logprob: -6.3553786277771
    10. 'dp' → logprob: -6.6053786277771

Token 701: ' minimal' (ID: 19957)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5896375179290771
    2. '#' → logprob: -1.8396375179290771
    3. 'def' → logprob: -1.8396375179290771
    4. '.graph' → logprob: -2.714637517929077
    5. 'dist' → logprob: -4.589637756347656
    6. '       ' → logprob: -4.589637756347656
    7. '   ' → logprob: -4.839637756347656
    8. 'visited' → logprob: -5.089637756347656
    9. ' graph' → logprob: -5.714637756347656
    10. 'distance' → logprob: -5.839637756347656

Token 702: ' walking' (ID: 15015)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7962506413459778
    2. ' length' → logprob: -1.421250581741333
    3. 'distance' → logprob: -1.671250581741333
    4. ' code' → logprob: -3.546250581741333
    5. 'def' → logprob: -3.796250581741333
    6. ' distance' → logprob: -3.921250581741333
    7. 'walk' → logprob: -4.296250820159912
    8. 'code' → logprob: -5.421250820159912
    9. '_walk' → logprob: -5.671250820159912
    10. 'return' → logprob: -5.796250820159912

Token 703: ' length' (ID: 5517)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.591282069683075
    2. '_distance' → logprob: -1.9662821292877197
    3. ' distance' → logprob: -2.4662821292877197
    4. '_' → logprob: -2.7162821292877197
    5. '_length' → logprob: -2.7162821292877197
    6. 'length' → logprob: -2.8412821292877197
    7. ' length' → logprob: -3.9662821292877197
    8. ' sequence' → logprob: -6.216281890869141
    9. ' ' → logprob: -6.341281890869141
    10. 'sequence' → logprob: -6.466281890869141

Token 704: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4820535480976105
    2. ' is' → logprob: -1.982053518295288
    3. '<|end|>' → logprob: -2.232053518295288
    4. '       ' → logprob: -3.357053518295288
    5. '=' → logprob: -3.732053518295288
    6. '<|end|>' → logprob: -4.232053756713867
    7. ' ' → logprob: -4.357053756713867
    8. '   ' → logprob: -4.357053756713867
    9. '           ' → logprob: -4.482053756713867
    10. ':' → logprob: -5.482053756713867

Token 705: ' equivalent' (ID: 23458)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17416122555732727
    2. 'float' → logprob: -1.9241611957550049
    3. ' self' → logprob: -5.424161434173584
    4. '           ' → logprob: -5.549161434173584
    5. 'None' → logprob: -6.174161434173584
    6. 'max' → logprob: -6.424161434173584
    7. ' float' → logprob: -7.424161434173584
    8. '-' → logprob: -7.924161434173584
    9. '   ' → logprob: -8.424160957336426
    10. '       ' → logprob: -8.799160957336426

Token 706: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6932218074798584
    2. 'to' → logprob: -0.6932218074798584
    3. 'def' → logprob: -10.193222045898438
    4. '   ' → logprob: -11.068222045898438
    5. ',' → logprob: -11.943222045898438
    6. ' ' → logprob: -12.443222045898438
    7. ' def' → logprob: -13.193222045898438
    8. '#' → logprob: -13.443222045898438
    9. '	to' → logprob: -13.818222045898438
    10. '    ' → logprob: -13.818222045898438

Token 707: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.672682523727417
    2. 'self' → logprob: -1.047682523727417
    3. 'the' → logprob: -2.422682523727417
    4. 'finding' → logprob: -3.547682523727417
    5. 'min' → logprob: -5.172682762145996
    6. ' self' → logprob: -5.547682762145996
    7. 'calcul' → logprob: -5.922682762145996
    8. ' max' → logprob: -6.047682762145996
    9. ' the' → logprob: -6.172682762145996
    10. 'comput' → logprob: -6.172682762145996

Token 708: ' sum' (ID: 4215)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3239997327327728
    2. 'long' → logprob: -1.9489997625350952
    3. 'minimal' → logprob: -2.3239996433258057
    4. 'minimum' → logprob: -3.9489996433258057
    5. ' length' → logprob: -4.573999881744385
    6. 'max' → logprob: -6.323999881744385
    7. ' minimal' → logprob: -6.448999881744385
    8. 'short' → logprob: -7.323999881744385
    9. 'Longest' → logprob: -7.448999881744385
    10. ' longest' → logprob: -7.448999881744385

Token 709: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6442042589187622
    2. ' +' → logprob: -1.8942042589187622
    3. '(' → logprob: -2.1442041397094727
    4. '+' → logprob: -3.0192041397094727
    5. ' -' → logprob: -3.0192041397094727
    6. '           ' → logprob: -3.5192041397094727
    7. '[' → logprob: -4.644204139709473
    8. '()' → logprob: -4.769204139709473
    9. '   ' → logprob: -4.894204139709473
    10. '-' → logprob: -4.894204139709473

Token 710: ':
' (ID: 734)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5096864700317383
    2. 'abs' → logprob: -1.5096864700317383
    3. 'the' → logprob: -2.2596864700317383
    4. 'absolute' → logprob: -3.8846864700317383
    5. '(abs' → logprob: -3.8846864700317383
    6. '(max' → logprob: -4.509686470031738
    7. 'dist' → logprob: -5.259686470031738
    8. 'maximum' → logprob: -5.384686470031738
    9. 'minimal' → logprob: -6.009686470031738
    10. 'self' → logprob: -6.259686470031738

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0709822177886963
    2. 'self' → logprob: -1.0709822177886963
    3. ' self' → logprob: -1.6959822177886963
    4. '0' → logprob: -3.5709822177886963
    5. ' the' → logprob: -4.070981979370117
    6. '               ' → logprob: -4.570981979370117
    7. ' ' → logprob: -4.570981979370117
    8. '1' → logprob: -4.820981979370117
    9. ''' → logprob: -5.070981979370117
    10. ' max' → logprob: -5.070981979370117

Token 712: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5991885662078857
    2. ' max' → logprob: -1.8491885662078857
    3. 'max' → logprob: -1.9741885662078857
    4. ' self' → logprob: -1.9741885662078857
    5. '(self' → logprob: -6.099188804626465
    6. ' (' → logprob: -6.349188804626465
    7. ' abs' → logprob: -6.349188804626465
    8. 'abs' → logprob: -6.474188804626465
    9. '[self' → logprob: -6.724188804626465
    10. '[
' → logprob: -6.849188804626465

Token 713: ' distance' (ID: 9324)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7755463123321533
    2. 'self' → logprob: -1.7755463123321533
    3. 'max' → logprob: -1.9005463123321533
    4. ' the' → logprob: -2.6505463123321533
    5. ' self' → logprob: -2.6505463123321533
    6. 'the' → logprob: -4.025546073913574
    7. ' n' → logprob: -4.400546073913574
    8. '   ' → logprob: -4.900546073913574
    9. 'n' → logprob: -5.025546073913574
    10. '           ' → logprob: -5.275546073913574

Token 714: ' from' (ID: 591)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -1.5820177793502808
    2. ' =' → logprob: -1.7070177793502808
    3. ' between' → logprob: -1.7070177793502808
    4. '=' → logprob: -2.2070178985595703
    5. 'from' → logprob: -2.2070178985595703
    6. '_between' → logprob: -2.4570178985595703
    7. '(' → logprob: -2.9570178985595703
    8. '(
' → logprob: -4.20701789855957
    9. ' +=' → logprob: -4.33201789855957
    10. '(self' → logprob: -4.95701789855957

Token 715: ' entrance' (ID: 27326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01315210945904255
    2. 'previous' → logprob: -5.388152122497559
    3. 'entr' → logprob: -5.513152122497559
    4. 'position' → logprob: -7.138152122497559
    5. ' ' → logprob: -7.138152122497559
    6. 'the' → logprob: -7.263152122497559
    7. 'prev' → logprob: -7.513152122497559
    8. 'last' → logprob: -7.638152122497559
    9. 'shop' → logprob: -8.638152122497559
    10. 'current' → logprob: -8.763152122497559

Token 716: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8779943585395813
    2. ' (' → logprob: -1.0029942989349365
    3. '0' → logprob: -2.1279942989349365
    4. ' to' → logprob: -3.3779942989349365
    5. 'to' → logprob: -3.6279942989349365
    6. ' +' → logprob: -4.252994537353516
    7. ' ' → logprob: -4.502994537353516
    8. ' =' → logprob: -5.502994537353516
    9. '+' → logprob: -6.002994537353516
    10. '=' → logprob: -6.127994537353516

Token 717: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026242941617965698
    2. ' ' → logprob: -4.401242733001709
    3. '(' → logprob: -4.776242733001709
    4. ' to' → logprob: -6.276242733001709
    5. ')' → logprob: -6.776242733001709
    6. 'to' → logprob: -6.776242733001709
    7. ' (' → logprob: -7.276242733001709
    8. ',' → logprob: -8.651243209838867
    9. '(
' → logprob: -9.901243209838867
    10. ' )' → logprob: -10.401243209838867

Token 718: ')' (ID: 8)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3269381523132324
    2. ')' → logprob: -1.9519381523132324
    3. 'to' → logprob: -2.3269381523132324
    4. ',' → logprob: -3.7019381523132324
    5. ' )' → logprob: -4.701938152313232
    6. ' ' → logprob: -6.451938152313232
    7. ' ,' → logprob: -6.451938152313232
    8. '+' → logprob: -6.826938152313232
    9. ')+' → logprob: -7.826938152313232
    10. ' +' → logprob: -8.57693862915039

Token 719: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2294713407754898
    2. 'to' → logprob: -1.6044713258743286
    3. '+' → logprob: -6.854471206665039
    4. ' ' → logprob: -6.979471206665039
    5. '0' → logprob: -7.229471206665039
    6. ' +' → logprob: -7.354471206665039
    7. '(' → logprob: -8.354471206665039
    8. ' (' → logprob: -8.604471206665039
    9. '<|end|>' → logprob: -8.979471206665039
    10. ',' → logprob: -9.479471206665039

Token 720: ' first' (ID: 1577)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09954052418470383
    2. 'the' → logprob: -3.2245404720306396
    3. 'first' → logprob: -3.4745404720306396
    4. 'min' → logprob: -4.099540710449219
    5. ' the' → logprob: -6.599540710449219
    6. ' first' → logprob: -6.849540710449219
    7. ' ' → logprob: -7.099540710449219
    8. ' min' → logprob: -7.224540710449219
    9. 'shops' → logprob: -7.224540710449219
    10. 'max' → logprob: -7.474540710449219

Token 721: ' visited' (ID: 18416)
  Prédit: ' shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -1.3140270709991455
    2. ' visited' → logprob: -1.5640270709991455
    3. '_' → logprob: -1.6890270709991455
    4. '_shop' → logprob: -2.1890270709991455
    5. ' _' → logprob: -2.6890270709991455
    6. 'shop' → logprob: -3.1890270709991455
    7. 'visited' → logprob: -3.4390270709991455
    8. ' ' → logprob: -3.8140270709991455
    9. '"' → logprob: -4.564026832580566
    10. ' constraint' → logprob: -4.939026832580566

Token 722: ' shop' (ID: 9100)
  Prédit: ' shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.19767388701438904
    2. '_' → logprob: -2.447673797607422
    3. ' _' → logprob: -3.322673797607422
    4. '_shop' → logprob: -3.447673797607422
    5. 'shop' → logprob: -4.447673797607422
    6. ' ' → logprob: -4.947673797607422
    7. '_sh' → logprob: -6.822673797607422
    8. ' space' → logprob: -6.947673797607422
    9. ' 
' → logprob: -7.197673797607422
    10. '  
' → logprob: -7.572673797607422

Token 723: ',
' (ID: 412)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08220186829566956
    2. '+' → logprob: -2.8322019577026367
    3. ' +
' → logprob: -5.207201957702637
    4. ',' → logprob: -5.332201957702637
    5. ' ' → logprob: -6.082201957702637
    6. '
' → logprob: -6.707201957702637
    7. ' 
' → logprob: -7.207201957702637
    8. ' #' → logprob: -7.332201957702637
    9. '+
' → logprob: -7.457201957702637
    10. ' plus' → logprob: -7.582201957702637

Token 724: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020794931799173355
    2. '           ' → logprob: -3.8957948684692383
    3. ' #' → logprob: -8.645794868469238
    4. '   ' → logprob: -10.270794868469238
    5. ''#' → logprob: -10.645794868469238
    6. '       ' → logprob: -12.520794868469238
    7. ''\' → logprob: -12.645794868469238
    8. '               ' → logprob: -13.270794868469238
    9. ' ' → logprob: -13.395794868469238
    10. '"#' → logprob: -13.395794868469238

Token 725: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0025529502891004086
    2. '           ' → logprob: -6.0025529861450195
    3. ' #' → logprob: -9.62755298614502
    4. '   ' → logprob: -11.87755298614502
    5. '       ' → logprob: -13.75255298614502
    6. ' ' → logprob: -14.12755298614502
    7. '0' → logprob: -14.37755298614502
    8. '
' → logprob: -14.50255298614502
    9. '1' → logprob: -14.62755298614502
    10. '+' → logprob: -15.25255298614502

Token 726: ' plus' (ID: 2932)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03202066197991371
    2. '           ' → logprob: -4.032020568847656
    3. 'distance' → logprob: -4.657020568847656
    4. ' #' → logprob: -5.657020568847656
    5. '   ' → logprob: -8.407020568847656
    6. 'sum' → logprob: -8.782020568847656
    7. '       ' → logprob: -9.532020568847656
    8. ' ' → logprob: -9.782020568847656
    9. 'the' → logprob: -10.532020568847656
    10. 'max' → logprob: -10.657020568847656

Token 727: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.45907628536224365
    2. 'the' → logprob: -1.9590762853622437
    3. ' sum' → logprob: -2.084076404571533
    4. 'distance' → logprob: -3.209076404571533
    5. ' the' → logprob: -3.709076404571533
    6. 'self' → logprob: -4.334076404571533
    7. '(sum' → logprob: -4.709076404571533
    8. '#' → logprob: -6.084076404571533
    9. '(n' → logprob: -6.084076404571533
    10. ' distances' → logprob: -6.209076404571533

Token 728: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03519919142127037
    2. 'of' → logprob: -3.4101991653442383
    3. '   ' → logprob: -7.785199165344238
    4. '           ' → logprob: -7.910199165344238
    5. '(' → logprob: -8.910199165344238
    6. ' over' → logprob: -8.910199165344238
    7. '	of' → logprob: -9.535199165344238
    8. '               ' → logprob: -9.910199165344238
    9. '_of' → logprob: -10.035199165344238
    10. ' ' → logprob: -10.035199165344238

Token 729: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8933857679367065
    2. 'abs' → logprob: -1.8933857679367065
    3. '(abs' → logprob: -1.8933857679367065
    4. 'max' → logprob: -2.143385887145996
    5. '(dist' → logprob: -3.143385887145996
    6. 'absolute' → logprob: -3.268385887145996
    7. '(max' → logprob: -3.518385887145996
    8. ' distances' → logprob: -3.768385887145996
    9. 'the' → logprob: -4.268385887145996
    10. 'distance' → logprob: -5.393385887145996

Token 730: ' between' (ID: 2870)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.4765239655971527
    2. ' between' → logprob: -0.9765239953994751
    3. '_between' → logprob: -6.6015238761901855
    4. 'from' → logprob: -7.6015238761901855
    5. '   ' → logprob: -8.476524353027344
    6. '           ' → logprob: -9.601524353027344
    7. '               ' → logprob: -9.851524353027344
    8. '(' → logprob: -9.851524353027344
    9. ' from' → logprob: -10.476524353027344
    10. ' ' → logprob: -10.601524353027344

Token 731: ' successive' (ID: 97595)
  Prédit: ' consecutive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consecutive' → logprob: -0.6115925908088684
    2. 'con' → logprob: -1.2365925312042236
    3. 'visited' → logprob: -2.2365925312042236
    4. ' visited' → logprob: -3.3615925312042236
    5. ' pairs' → logprob: -4.111592769622803
    6. ' adjacent' → logprob: -6.236592769622803
    7. ' visits' → logprob: -6.486592769622803
    8. 'adj' → logprob: -6.611592769622803
    9. 'pairs' → logprob: -6.861592769622803
    10. ' successive' → logprob: -7.486592769622803

Token 732: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.616561770439148
    2. ' shops' → logprob: -1.366561770439148
    3. 'visited' → logprob: -2.4915618896484375
    4. ' visited' → logprob: -2.7415618896484375
    5. ' visits' → logprob: -3.6165618896484375
    6. 'vis' → logprob: -3.9915618896484375
    7. 'sh' → logprob: -5.2415618896484375
    8. '
' → logprob: -6.7415618896484375
    9. ' ' → logprob: -7.1165618896484375
    10. '_sh' → logprob: -7.8665618896484375

Token 733: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5470826625823975
    2. '           ' → logprob: -1.5470826625823975
    3. ',
' → logprob: -1.9220826625823975
    4. '
' → logprob: -3.1720826625823975
    5. ' +' → logprob: -5.172082901000977
    6. '+' → logprob: -5.672082901000977
    7. '<|end|>' → logprob: -5.922082901000977
    8. '            
' → logprob: -6.297082901000977
    9. ' ,' → logprob: -7.047082901000977
    10. '       ' → logprob: -7.672082901000977

Token 734: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06202952563762665
    2. '           ' → logprob: -2.8120296001434326
    3. ' #' → logprob: -9.937029838562012
    4. 'and' → logprob: -12.312029838562012
    5. '   ' → logprob: -12.437029838562012
    6. '       ' → logprob: -12.687029838562012
    7. ' ' → logprob: -14.437029838562012
    8. '          ' → logprob: -14.937029838562012
    9. '               ' → logprob: -15.062029838562012
    10. '            ' → logprob: -15.187029838562012

Token 735: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0005541055579669774
    2. '           ' → logprob: -7.500554084777832
    3. ' #' → logprob: -14.250554084777832
    4. '   ' → logprob: -15.250554084777832
    5. '       ' → logprob: -15.500554084777832
    6. 'and' → logprob: -17.50055503845215
    7. '```' → logprob: -17.50055503845215
    8. '               ' → logprob: -19.00055503845215
    9. ' ' → logprob: -19.12555503845215
    10. '		' → logprob: -19.87555503845215

Token 736: ' plus' (ID: 2932)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0003843173326458782
    2. '           ' → logprob: -7.875384330749512
    3. ' #' → logprob: -12.500384330749512
    4. '   ' → logprob: -15.375384330749512
    5. '       ' → logprob: -15.500384330749512
    6. ' ' → logprob: -17.250383377075195
    7. 'and' → logprob: -18.000383377075195
    8. '```' → logprob: -18.250383377075195
    9. '#index' → logprob: -18.750383377075195
    10. '               ' → logprob: -18.875383377075195

Token 737: ' distance' (ID: 9324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6519163250923157
    2. ' self' → logprob: -1.901916265487671
    3. '1' → logprob: -2.151916265487671
    4. ' (' → logprob: -2.151916265487671
    5. '(self' → logprob: -2.526916265487671
    6. '           ' → logprob: -5.40191650390625
    7. 'distance' → logprob: -5.77691650390625
    8. ' ' → logprob: -6.15191650390625
    9. '(' → logprob: -6.40191650390625
    10. ' distance' → logprob: -6.90191650390625

Token 738: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.316484659910202
    2. 'from' → logprob: -1.3164846897125244
    3. '(' → logprob: -6.066484451293945
    4. ' to' → logprob: -7.691484451293945
    5. 'to' → logprob: -8.441484451293945
    6. ' between' → logprob: -9.691484451293945
    7. ' of' → logprob: -10.191484451293945
    8. ' (' → logprob: -10.441484451293945
    9. '_from' → logprob: -11.316484451293945
    10. '	from' → logprob: -11.316484451293945

Token 739: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.9123566746711731
    2. ' last' → logprob: -1.0373566150665283
    3. 'the' → logprob: -1.9123566150665283
    4. ' the' → logprob: -2.4123566150665283
    5. 'self' → logprob: -5.162356853485107
    6. ' self' → logprob: -7.412356853485107
    7. '   ' → logprob: -8.78735637664795
    8. 'first' → logprob: -9.91235637664795
    9. '       ' → logprob: -10.03735637664795
    10. ' ' → logprob: -10.53735637664795

Token 740: ' visited' (ID: 18416)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8898897171020508
    2. ' visited' → logprob: -1.0148897171020508
    3. 'visited' → logprob: -1.6398897171020508
    4. ' _' → logprob: -4.389889717102051
    5. '   ' → logprob: -5.264889717102051
    6. '
' → logprob: -5.264889717102051
    7. '(' → logprob: -6.139889717102051
    8. ')' → logprob: -6.264889717102051
    9. '_shop' → logprob: -7.014889717102051
    10. '()' → logprob: -7.264889717102051

Token 741: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.6344391107559204
    2. ' shop' → logprob: -1.2594391107559204
    3. '_shop' → logprob: -1.7594391107559204
    4. '(shop' → logprob: -5.884438991546631
    5. '_' → logprob: -6.009438991546631
    6. ' (' → logprob: -6.259438991546631
    7. '(' → logprob: -6.509438991546631
    8. ')' → logprob: -6.884438991546631
    9. ' ' → logprob: -7.134438991546631
    10. '_sh' → logprob: -7.384438991546631

Token 742: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5177955627441406
    2. 'to' → logprob: -1.0177955627441406
    3. '+' → logprob: -3.7677955627441406
    4. ',' → logprob: -4.392795562744141
    5. '_to' → logprob: -5.642795562744141
    6. ',
' → logprob: -6.892795562744141
    7. ' +' → logprob: -7.517795562744141
    8. '(' → logprob: -7.517795562744141
    9. '           ' → logprob: -7.642795562744141
    10. '   ' → logprob: -8.01779556274414

Token 743: ' exit' (ID: 10654)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06081599369645119
    2. ' self' → logprob: -2.9358160495758057
    3. '(self' → logprob: -5.935815811157227
    4. 'n' → logprob: -6.060815811157227
    5. ' (' → logprob: -7.810815811157227
    6. 'exit' → logprob: -8.310815811157227
    7. ' n' → logprob: -8.685815811157227
    8. '(n' → logprob: -10.185815811157227
    9. ' exit' → logprob: -10.310815811157227
    10. 'the' → logprob: -12.185815811157227

Token 744: '(n' (ID: 2406)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7739332318305969
    2. '<|end|>' → logprob: -0.8989332318305969
    3. '           ' → logprob: -2.523933172225952
    4. '<|end|>' → logprob: -3.523933172225952
    5. '

' → logprob: -5.273933410644531
    6. '\n' → logprob: -5.773933410644531
    7. '            
' → logprob: -6.023933410644531
    8. '.' → logprob: -6.148933410644531
    9. ',' → logprob: -6.273933410644531
    10. '\' → logprob: -6.648933410644531

Token 745: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021069261129014194
    2. ')+' → logprob: -8.875210762023926
    3. ' +' → logprob: -9.875210762023926
    4. ')' → logprob: -11.000210762023926
    5. ']+' → logprob: -14.625210762023926
    6. '1' → logprob: -14.625210762023926
    7. '```' → logprob: -14.750210762023926
    8. '+
' → logprob: -15.250210762023926
    9. '
' → logprob: -15.375210762023926
    10. '   ' → logprob: -15.500210762023926

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25220397114753723
    2. '+' → logprob: -1.5022039413452148
    3. ')' → logprob: -8.752203941345215
    4. ' +' → logprob: -9.627203941345215
    5. ')+' → logprob: -10.752203941345215
    6. '
' → logprob: -11.252203941345215
    7. ' ' → logprob: -11.752203941345215
    8. '```' → logprob: -13.252203941345215
    9. '`' → logprob: -13.627203941345215
    10. '   ' → logprob: -14.127203941345215

Token 747: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012240377254784107
    2. ').' → logprob: -4.512240409851074
    3. ')
' → logprob: -7.012240409851074
    4. '),' → logprob: -9.012240409851074
    5. ')

' → logprob: -10.012240409851074
    6. '           ' → logprob: -10.137240409851074
    7. ').
' → logprob: -10.887240409851074
    8. ')`' → logprob: -11.012240409851074
    9. '.' → logprob: -11.637240409851074
    10. ').

' → logprob: -12.012240409851074

Token 748: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5658150315284729
    2. '
' → logprob: -1.1908149719238281
    3. '            
' → logprob: -2.940814971923828
    4. '        
' → logprob: -3.690814971923828
    5. '       ' → logprob: -3.815814971923828
    6. '    
' → logprob: -4.690814971923828
    7. ' 
' → logprob: -5.565814971923828
    8. '\n' → logprob: -5.940814971923828
    9. '```' → logprob: -5.940814971923828
    10. '  
' → logprob: -6.190814971923828

Token 749: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17933697998523712
    2. '           ' → logprob: -2.0543370246887207
    3. '            
' → logprob: -3.4293370246887207
    4. '        
' → logprob: -7.304337024688721
    5. '       ' → logprob: -7.429337024688721
    6. ' 
' → logprob: -7.554337024688721
    7. '    
' → logprob: -7.679337024688721
    8. '

' → logprob: -8.679336547851562
    9. '            ' → logprob: -9.054336547851562
    10. '
            
' → logprob: -9.054336547851562

Token 750: ' Given' (ID: 29844)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2258540242910385
    2. '           ' → logprob: -2.60085391998291
    3. 'from' → logprob: -2.85085391998291
    4. 'visited' → logprob: -3.35085391998291
    5. 'def' → logprob: -4.85085391998291
    6. 'import' → logprob: -4.97585391998291
    7. 'order' → logprob: -5.47585391998291
    8. 'top' → logprob: -5.47585391998291
    9. '   ' → logprob: -5.85085391998291
    10. '       ' → logprob: -6.10085391998291

Token 751: ' positions' (ID: 15897)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6819512248039246
    2. ' that' → logprob: -1.4319512844085693
    3. ' self' → logprob: -2.1819512844085693
    4. 'the' → logprob: -2.6819512844085693
    5. 'self' → logprob: -3.3069512844085693
    6. 'that' → logprob: -3.6819512844085693
    7. '           ' → logprob: -5.93195104598999
    8. ' constraints' → logprob: -6.18195104598999
    9. '#' → logprob: -6.55695104598999
    10. '
' → logprob: -7.18195104598999

Token 752: ' shop' (ID: 9100)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6473287343978882
    2. '<|end|>' → logprob: -1.3973287343978882
    3. '<|end|>' → logprob: -2.5223288536071777
    4. ' =' → logprob: -3.2723288536071777
    5. ',' → logprob: -3.5223288536071777
    6. '=' → logprob: -3.8973288536071777
    7. 's' → logprob: -4.772328853607178
    8. '.' → logprob: -4.772328853607178
    9. '[' → logprob: -5.022328853607178
    10. ':
' → logprob: -5.272328853607178

Token 753: ' k' (ID: 372)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.9901167750358582
    2. 's' → logprob: -1.115116834640503
    3. '_' → logprob: -1.615116834640503
    4. ' =' → logprob: -3.240116834640503
    5. ' _' → logprob: -3.865116834640503
    6. '=' → logprob: -5.240116596221924
    7. ' ' → logprob: -5.365116596221924
    8. '   ' → logprob: -5.615116596221924
    9. '<|end|>' → logprob: -5.615116596221924
    10. '_s' → logprob: -5.740116596221924

Token 754: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7517389059066772
    2. ' =' → logprob: -2.001739025115967
    3. '+' → logprob: -2.251739025115967
    4. '=' → logprob: -2.501739025115967
    5. ':' → logprob: -3.251739025115967
    6. ' +' → logprob: -3.501739025115967
    7. ' is' → logprob: -3.751739025115967
    8. ' ' → logprob: -4.251739025115967
    9. '1' → logprob: -4.376739025115967
    10. ')' → logprob: -4.376739025115967

Token 755: ' at' (ID: 540)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010724367573857307
    2. ' k' → logprob: -4.6357245445251465
    3. ' at' → logprob: -8.010724067687988
    4. '=' → logprob: -9.010724067687988
    5. ' =' → logprob: -9.260724067687988
    6. '=k' → logprob: -9.510724067687988
    7. '
' → logprob: -10.010724067687988
    8. ' just' → logprob: -10.260724067687988
    9. 'shop' → logprob: -10.385724067687988
    10. ' equal' → logprob: -10.885724067687988

Token 756: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.054913993924856186
    2. ' k' → logprob: -2.9299139976501465
    3. 'self' → logprob: -11.554913520812988
    4. '
' → logprob: -11.804913520812988
    5. ' self' → logprob: -11.804913520812988
    6. ' (' → logprob: -13.679913520812988
    7. ' shop' → logprob: -14.179913520812988
    8. 'shop' → logprob: -14.304913520812988
    9. '{k' → logprob: -14.429913520812988
    10. ' ' → logprob: -14.554913520812988

Token 757: ' units' (ID: 13306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10467123985290527
    2. '           ' → logprob: -3.1046712398529053
    3. '       ' → logprob: -4.354671478271484
    4. '        
' → logprob: -4.354671478271484
    5. '            
' → logprob: -5.104671478271484
    6. ',' → logprob: -5.854671478271484
    7. '.' → logprob: -6.229671478271484
    8. 'def' → logprob: -6.229671478271484
    9. '
' → logprob: -6.229671478271484
    10. '<|end|>' → logprob: -6.354671478271484

Token 758: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6955890655517578
    2. '           ' → logprob: -0.9455890655517578
    3. '            
' → logprob: -2.820589065551758
    4. '<|end|>' → logprob: -3.695589065551758
    5. '<|end|>' → logprob: -5.070589065551758
    6. ',' → logprob: -5.195589065551758
    7. 'def' → logprob: -5.570589065551758
    8. '        
' → logprob: -6.070589065551758
    9. '       ' → logprob: -6.070589065551758
    10. '            

' → logprob: -6.820589065551758

Token 759: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039744917303323746
    2. ' the' → logprob: -4.789744853973389
    3. '#' → logprob: -4.914744853973389
    4. '            
' → logprob: -5.164744853973389
    5. ' and' → logprob: -6.039744853973389
    6. ' #' → logprob: -6.539744853973389
    7. '<|end|>' → logprob: -6.539744853973389
    8. '
' → logprob: -6.664744853973389
    9. '<|end|>' → logprob: -6.664744853973389
    10. '       ' → logprob: -6.789744853973389

Token 760: ' exit' (ID: 10654)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.6837869882583618
    2. 'the' → logprob: -2.3087868690490723
    3. 'positions' → logprob: -2.3087868690490723
    4. 'exit' → logprob: -2.5587868690490723
    5. 'entr' → logprob: -2.6837868690490723
    6. 'all' → logprob: -3.3087868690490723
    7. ' the' → logprob: -4.433786869049072
    8. 'shop' → logprob: -4.558786869049072
    9. 'each' → logprob: -4.933786869049072
    10. 'self' → logprob: -4.933786869049072

Token 761: ' at' (ID: 540)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0942327976226807
    2. '(n' → logprob: -1.3442327976226807
    3. ' is' → logprob: -1.5942327976226807
    4. 'is' → logprob: -2.0942327976226807
    5. ' at' → logprob: -3.4692327976226807
    6. '(' → logprob: -4.719232559204102
    7. ' +' → logprob: -4.844232559204102
    8. 'at' → logprob: -5.219232559204102
    9. 'position' → logprob: -5.219232559204102
    10. ' (' → logprob: -5.219232559204102

Token 762: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6329775452613831
    2. 'self' → logprob: -0.7579775452613831
    3. ' self' → logprob: -8.757977485656738
    4. ' n' → logprob: -9.257977485656738
    5. '
' → logprob: -10.257977485656738
    6. '(n' → logprob: -10.507977485656738
    7. '(self' → logprob: -10.632977485656738
    8. '           ' → logprob: -11.632977485656738
    9. '   ' → logprob: -11.757977485656738
    10. '0' → logprob: -12.132977485656738

Token 763: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009199160267598927
    2. ' +' → logprob: -7.000919818878174
    3. '   ' → logprob: -12.375920295715332
    4. '
' → logprob: -13.625920295715332
    5. '```' → logprob: -13.875920295715332
    6. '+
' → logprob: -14.938420295715332
    7. '()+' → logprob: -15.438420295715332
    8. ')+' → logprob: -16.125919342041016
    9. '1' → logprob: -16.250919342041016
    10. '＋' → logprob: -16.375919342041016

Token 764: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. '2' → logprob: -10.875020027160645
    3. '+' → logprob: -13.875020027160645
    4. ' ' → logprob: -14.625020027160645
    5. '
' → logprob: -16.62502098083496
    6. '   ' → logprob: -17.37502098083496
    7. ' +' → logprob: -19.37502098083496
    8. '```' → logprob: -19.50002098083496
    9. '۱' → logprob: -19.50002098083496
    10. '１' → logprob: -20.31252098083496

Token 765: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07854998856782913
    2. '.' → logprob: -3.578550100326538
    3. ',
' → logprob: -4.078549861907959
    4. '
' → logprob: -4.703549861907959
    5. ':' → logprob: -5.078549861907959
    6. '           ' → logprob: -5.078549861907959
    7. '<|end|>' → logprob: -5.703549861907959
    8. '<|end|>' → logprob: -6.578549861907959
    9. ')' → logprob: -7.453549861907959
    10. ' (' → logprob: -7.703549861907959

Token 766: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02033200114965439
    2. '
' → logprob: -4.645331859588623
    3. '            
' → logprob: -4.645331859588623
    4. '       ' → logprob: -7.770331859588623
    5. ',' → logprob: -9.270332336425781
    6. '<|end|>' → logprob: -9.520332336425781
    7. '        
' → logprob: -10.020332336425781
    8. '            ' → logprob: -10.145332336425781
    9. '<|end|>' → logprob: -10.145332336425781
    10. ' and' → logprob: -10.395332336425781

Token 767: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04736965894699097
    2. '       ' → logprob: -3.9223697185516357
    3. '            
' → logprob: -4.172369480133057
    4. '
' → logprob: -5.047369480133057
    5. '#' (adapté à ' #') → logprob: -7.172369480133057
    6. ' and' → logprob: -7.422369480133057
    7. ' the' → logprob: -7.797369480133057
    8. '            ' → logprob: -8.047369956970215
    9. '        
' → logprob: -8.047369956970215
    10. ' we' → logprob: -8.297369956970215

Token 768: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8034082651138306
    2. '           ' → logprob: -0.8034082651138306
    3. '
' → logprob: -3.178408145904541
    4. '       ' → logprob: -4.303408145904541
    5. 'positions' → logprob: -4.428408145904541
    6. 'import' → logprob: -4.553408145904541
    7. 'return' → logprob: -4.678408145904541
    8. 'def' → logprob: -5.678408145904541
    9. 'from' → logprob: -5.803408145904541
    10. '            
' → logprob: -6.303408145904541

Token 769: ' cost' (ID: 3097)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9593201875686646
    2. '#' → logprob: -1.7093201875686646
    3. ' next' → logprob: -3.209320068359375
    4. ' minimal' → logprob: -3.209320068359375
    5. 'positions' → logprob: -3.459320068359375
    6. ' def' → logprob: -3.459320068359375
    7. 'distance' → logprob: -3.709320068359375
    8. 'minimal' → logprob: -3.709320068359375
    9. ' problem' → logprob: -3.959320068359375
    10. '           ' → logprob: -4.209320068359375

Token 770: ' equals' (ID: 29702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7329440116882324
    2. ' is' → logprob: -1.2329440116882324
    3. ' from' → logprob: -2.2329440116882324
    4. 'from' → logprob: -3.2329440116882324
    5. '   ' → logprob: -4.232944011688232
    6. ' to' → logprob: -4.232944011688232
    7. '=' → logprob: -4.482944011688232
    8. ' ' → logprob: -4.607944011688232
    9. ' between' → logprob: -4.982944011688232
    10. ' #' → logprob: -5.732944011688232

Token 771: ' to' (ID: 316)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6338775753974915
    2. ' self' → logprob: -1.7588775157928467
    3. ' (' → logprob: -2.0088775157928467
    4. 'max' → logprob: -3.0088775157928467
    5. ' max' → logprob: -3.1338775157928467
    6. '(self' → logprob: -3.1338775157928467
    7. ' abs' → logprob: -5.133877754211426
    8. '(max' → logprob: -5.258877754211426
    9. 'abs' → logprob: -5.508877754211426
    10. '(' → logprob: -5.633877754211426

Token 772: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8653802275657654
    2. 'self' → logprob: -1.6153802871704102
    3. '(max' → logprob: -1.9903802871704102
    4. 'the' → logprob: -1.9903802871704102
    5. '(self' → logprob: -2.86538028717041
    6. '(n' → logprob: -4.61538028717041
    7. ' (' → logprob: -5.24038028717041
    8. '(' → logprob: -5.36538028717041
    9. ' max' → logprob: -5.61538028717041
    10. '(last' → logprob: -5.74038028717041

Token 773: ' length' (ID: 5517)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.36844319105148315
    2. 'distance' → logprob: -1.993443250656128
    3. 'maximum' → logprob: -2.993443250656128
    4. 'difference' → logprob: -3.368443250656128
    5. 'position' → logprob: -3.743443250656128
    6. 'minimal' → logprob: -4.243443012237549
    7. 'total' → logprob: -4.618443012237549
    8. 'length' → logprob: -4.743443012237549
    9. 'sum' → logprob: -4.993443012237549
    10. 'minimum' → logprob: -5.493443012237549

Token 774: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.32137712836265564
    2. ' +' → logprob: -2.9463770389556885
    3. '+' → logprob: -3.1963770389556885
    4. '           ' → logprob: -3.8213770389556885
    5. ' -' → logprob: -3.9463770389556885
    6. ' =' → logprob: -3.9463770389556885
    7. 'of' → logprob: -3.9463770389556885
    8. 'from' → logprob: -4.196377277374268
    9. '   ' → logprob: -4.571377277374268
    10. ' between' → logprob: -4.571377277374268

Token 775: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2861481308937073
    2. ' the' → logprob: -1.9111480712890625
    3. 'a' → logprob: -2.6611480712890625
    4. ' a' → logprob: -3.7861480712890625
    5. 'self' → logprob: -5.5361480712890625
    6. 'visited' → logprob: -7.2861480712890625
    7. 'path' → logprob: -7.6611480712890625
    8. 'any' → logprob: -7.7861480712890625
    9. ' self' → logprob: -7.7861480712890625
    10. '[' → logprob: -7.9111480712890625

Token 776: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -1.4183704853057861
    2. ' minimal' → logprob: -1.5433704853057861
    3. 'long' → logprob: -1.6683704853057861
    4. 'path' → logprob: -2.043370485305786
    5. ' path' → logprob: -2.168370485305786
    6. ' longest' → logprob: -3.293370485305786
    7. 'short' → logprob: -3.543370485305786
    8. ' shortest' → logprob: -3.918370485305786
    9. 'visited' → logprob: -5.168370246887207
    10. 'minimum' → logprob: -5.918370246887207

Token 777: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.3972129225730896
    2. ' path' → logprob: -1.1472129821777344
    3. 'chain' → logprob: -6.022212982177734
    4. ' Hamilton' → logprob: -6.022212982177734
    5. 'super' → logprob: -6.897212982177734
    6. 'Hamilton' → logprob: -7.147212982177734
    7. ' chain' → logprob: -7.397212982177734
    8. '   ' → logprob: -8.022212982177734
    9. 'possible' → logprob: -8.147212982177734
    10. 'interval' → logprob: -8.272212982177734

Token 778: ' covering' (ID: 24878)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6273807287216187
    2. ' that' → logprob: -2.252380847930908
    3. ' covering' → logprob: -2.502380847930908
    4. '           ' → logprob: -3.252380847930908
    5. ' between' → logprob: -3.252380847930908
    6. '       ' → logprob: -3.752380847930908
    7. '   ' → logprob: -4.127380847930908
    8. '.' → logprob: -4.252380847930908
    9. '        
' → logprob: -4.252380847930908
    10. ' ' → logprob: -4.252380847930908

Token 779: ' shops' (ID: 22509)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.05653486028313637
    2. ' all' → logprob: -3.181534767150879
    3. 'the' → logprob: -4.556534767150879
    4. '0' → logprob: -7.306534767150879
    5. ' the' → logprob: -7.431534767150879
    6. 'shops' → logprob: -7.681534767150879
    7. '1' → logprob: -8.056534767150879
    8. '           ' → logprob: -8.306534767150879
    9. '   ' → logprob: -8.306534767150879
    10. ' ' → logprob: -8.931534767150879

Token 780: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8862398862838745
    2. '           ' → logprob: -1.7612398862838745
    3. ',' → logprob: -2.136240005493164
    4. ' that' → logprob: -2.511240005493164
    5. ' with' → logprob: -3.261240005493164
    6. 'and' → logprob: -3.386240005493164
    7. ' in' → logprob: -3.511240005493164
    8. '
' → logprob: -4.011240005493164
    9. ' visiting' → logprob: -4.011240005493164
    10. '.' → logprob: -4.636240005493164

Token 781: ' order' (ID: 2569)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.8148621320724487
    2. 'order' → logprob: -1.1898621320724487
    3. 'the' → logprob: -2.1898622512817383
    4. 'a' → logprob: -2.6898622512817383
    5. 'an' → logprob: -3.3148622512817383
    6. 'in' → logprob: -4.189862251281738
    7. ' order' → logprob: -5.439862251281738
    8. 'sequence' → logprob: -6.064862251281738
    9. 'given' → logprob: -6.064862251281738
    10. 'all' → logprob: -6.439862251281738

Token 782: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9597839117050171
    2. ',' → logprob: -1.709783911705017
    3. '.' → logprob: -1.709783911705017
    4. ' and' → logprob: -2.3347840309143066
    5. ' that' → logprob: -2.7097840309143066
    6. ' with' → logprob: -3.7097840309143066
    7. 'from' → logprob: -4.834784030914307
    8. 'and' → logprob: -4.834784030914307
    9. ' from' → logprob: -5.209784030914307
    10. ' in' → logprob: -5.459784030914307

Token 783: ' respects' (ID: 80154)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.026959512382745743
    2. 's' → logprob: -4.276959419250488
    3. 'ob' → logprob: -6.026959419250488
    4. 'includes' → logprob: -6.026959419250488
    5. 'covers' → logprob: -6.276959419250488
    6. ' respects' → logprob: -6.526959419250488
    7. 'f' → logprob: -7.276959419250488
    8. '   ' → logprob: -7.401959419250488
    9. 'respect' → logprob: -7.401959419250488
    10. 'vis' → logprob: -7.526959419250488

Token 784: ' constraints' (ID: 31060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.153558611869812
    2. ' constraints' → logprob: -1.278558611869812
    3. 'constraints' → logprob: -1.528558611869812
    4. 'the' → logprob: -1.778558611869812
    5. 'self' → logprob: -4.653558731079102
    6. ' self' → logprob: -5.153558731079102
    7. 'all' → logprob: -6.278558731079102
    8. ' all' → logprob: -6.778558731079102
    9. ' their' → logprob: -7.528558731079102
    10. '
' → logprob: -8.278558731079102

Token 785: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7173407077789307
    2. '.' → logprob: -1.4673407077789307
    3. ',' → logprob: -1.9673407077789307
    4. '
' → logprob: -2.7173407077789307
    5. ' and' → logprob: -3.7173407077789307
    6. '       ' → logprob: -4.342340469360352
    7. '<|end|>' → logprob: -4.467340469360352
    8. '            
' → logprob: -4.717340469360352
    9. '<|end|>' → logprob: -5.592340469360352
    10. ',
' → logprob: -5.967340469360352

Token 786: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6731961369514465
    2. '           ' → logprob: -1.0481960773468018
    3. '            
' → logprob: -3.1731960773468018
    4. '\n' → logprob: -3.5481960773468018
    5. '<|end|>' → logprob: -3.9231960773468018
    6. '       ' → logprob: -4.548196315765381
    7. '        
' → logprob: -4.548196315765381
    8. '    
' → logprob: -4.923196315765381
    9. '<|end|>' → logprob: -5.798196315765381
    10. '

' → logprob: -5.923196315765381

Token 787: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5175126791000366
    2. '
' → logprob: -1.2675126791000366
    3. '            
' → logprob: -2.142512798309326
    4. '        
' → logprob: -6.517512798309326
    5. '       ' → logprob: -7.142512798309326
    6. '    
' → logprob: -7.267512798309326
    7. '            
            
' → logprob: -8.142512321472168
    8. '            ' → logprob: -8.392512321472168
    9. '#' (adapté à ' #') → logprob: -8.392512321472168
    10. ' 
' → logprob: -8.517512321472168

Token 788: ' Let's' (ID: 41021)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2992783486843109
    2. 'from' → logprob: -2.0492782592773438
    3. '           ' → logprob: -2.7992782592773438
    4. 'top' → logprob: -3.1742782592773438
    5. 'import' → logprob: -4.674278259277344
    6. 'order' → logprob: -5.424278259277344
    7. 'visited' → logprob: -5.799278259277344
    8. 'pos' → logprob: -6.424278259277344
    9. 'positions' → logprob: -6.799278259277344
    10. 'def' → logprob: -6.799278259277344

Token 789: ' analyze' (ID: 30532)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17275218665599823
    2. '       ' → logprob: -3.2977521419525146
    3. 'import' → logprob: -3.9227521419525146
    4. 'build' → logprob: -3.9227521419525146
    5. 'continue' → logprob: -4.172752380371094
    6. ' #' → logprob: -4.672752380371094
    7. '#' → logprob: -4.672752380371094
    8. '   ' → logprob: -4.922752380371094
    9. ' import' → logprob: -5.422752380371094
    10. 'def' → logprob: -5.422752380371094

Token 790: ' constraints' (ID: 31060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0967835187911987
    2. '<|end|>' → logprob: -1.9717835187911987
    3. '            ' → logprob: -2.3467836380004883
    4. '
' → logprob: -2.7217836380004883
    5. '<|end|>' → logprob: -2.7217836380004883
    6. '            
' → logprob: -3.2217836380004883
    7. ' 
' → logprob: -3.2217836380004883
    8. '#' → logprob: -3.8467836380004883
    9. ' ' → logprob: -4.096783638000488
    10. '    ' → logprob: -4.096783638000488

Token 791: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0130459070205688
    2. ':' → logprob: -1.1380459070205688
    3. '.' → logprob: -2.3880457878112793
    4. '            
' → logprob: -2.7630457878112793
    5. ' =' → logprob: -4.013045787811279
    6. ',' → logprob: -4.013045787811279
    7. '
' → logprob: -4.388045787811279
    8. ':
' → logprob: -4.513045787811279
    9. ' and' → logprob: -4.638045787811279
    10. ' for' → logprob: -4.638045787811279

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11167120933532715
    2. '            
' → logprob: -2.611671209335327
    3. '            ' → logprob: -4.236671447753906
    4. '
' → logprob: -4.736671447753906
    5. '<|end|>' → logprob: -5.486671447753906
    6. '            
            
' → logprob: -6.986671447753906
    7. '#' → logprob: -7.236671447753906
    8. '<|end|>' → logprob: -7.361671447753906
    9. '            

' → logprob: -7.611671447753906
    10. '    
' → logprob: -7.986671447753906

Token 793: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0667073205113411
    2. '#' (adapté à ' #') → logprob: -3.3167073726654053
    3. '            
' → logprob: -4.191707134246826
    4. ' #' → logprob: -5.191707134246826
    5. '            ' → logprob: -6.066707134246826
    6. ' for' → logprob: -6.691707134246826
    7. '
' → logprob: -7.316707134246826
    8. '       ' → logprob: -7.816707134246826
    9. 'for' → logprob: -8.066707611083984
    10. ' from' → logprob: -8.191707611083984

Token 794: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32267650961875916
    2. '#' → logprob: -1.5726765394210815
    3. 'from' → logprob: -3.572676420211792
    4. ' from' → logprob: -4.947676658630371
    5. '
' → logprob: -5.197676658630371
    6. '            
' → logprob: -5.447676658630371
    7. ' #' → logprob: -5.572676658630371
    8. 'positions' → logprob: -6.072676658630371
    9. 'top' → logprob: -6.447676658630371
    10. 'for' → logprob: -6.447676658630371

Token 795: ' there' (ID: 1354)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.6105115413665771
    2. 'self' → logprob: -1.8605115413665771
    3. ' all' → logprob: -2.110511541366577
    4. 'any' → logprob: -2.360511541366577
    5. 'there' → logprob: -2.485511541366577
    6. ' there' → logprob: -2.735511541366577
    7. ' self' → logprob: -2.735511541366577
    8. 'all' → logprob: -2.985511541366577
    9. 'the' → logprob: -3.485511541366577
    10. ' the' → logprob: -3.610511541366577

Token 796: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4258307218551636
    2. ' are' → logprob: -1.3008307218551636
    3. ''s' → logprob: -3.175830841064453
    4. 'is' → logprob: -4.675830841064453
    5. 'are' → logprob: -4.800830841064453
    6. '#' → logprob: -4.925830841064453
    7. ''' → logprob: -6.050830841064453
    8. ' exists' → logprob: -6.425830841064453
    9. ' has' → logprob: -7.550830841064453
    10. ' #' → logprob: -7.675830841064453

Token 797: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5986415147781372
    2. ' any' → logprob: -1.5986415147781372
    3. ' an' → logprob: -1.5986415147781372
    4. ' at' → logprob: -3.4736413955688477
    5. 'a' → logprob: -4.848641395568848
    6. ' no' → logprob: -5.973641395568848
    7. ' some' → logprob: -6.223641395568848
    8. 'any' → logprob: -6.473641395568848
    9. 'an' → logprob: -7.223641395568848
    10. 'at' → logprob: -8.723641395568848

Token 798: ' chain' (ID: 13464)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.35482609272003174
    2. ' constraint' → logprob: -2.229825973510742
    3. 'cycle' → logprob: -2.979825973510742
    4. 'constraint' → logprob: -3.354825973510742
    5. ' back' → logprob: -3.479825973510742
    6. ' chain' → logprob: -3.854825973510742
    7. ' top' → logprob: -4.354825973510742
    8. ' backward' → logprob: -4.479825973510742
    9. 'back' → logprob: -4.604825973510742
    10. ' reverse' → logprob: -5.604825973510742

Token 799: ' d' (ID: 272)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.29493528604507446
    2. ' from' → logprob: -2.0449352264404297
    3. ' that' → logprob: -3.2949352264404297
    4. 'from' → logprob: -3.7949352264404297
    5. ' ' → logprob: -4.04493522644043
    6. '
' → logprob: -4.79493522644043
    7. '           ' → logprob: -5.41993522644043
    8. '               ' → logprob: -5.41993522644043
    9. ' going' → logprob: -5.41993522644043
    10. 'of' → logprob: -5.79493522644043

Token 800: '1' (ID: 16)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '->' → logprob: -0.23970158398151398
    2. ' ->' → logprob: -1.8647016286849976
    3. ' +' → logprob: -3.364701509475708
    4. '+' → logprob: -4.239701747894287
    5. '→' → logprob: -6.239701747894287
    6. ' ' → logprob: -6.614701747894287
    7. '   ' → logprob: -6.989701747894287
    8. '
' → logprob: -7.114701747894287
    9. ' <' → logprob: -7.239701747894287
    10. '           ' → logprob: -7.239701747894287

Token 801: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.4659285247325897
    2. ' ->' → logprob: -1.090928554534912
    3. ' +' → logprob: -4.965928554534912
    4. '→' → logprob: -5.090928554534912
    5. ',' → logprob: -5.340928554534912
    6. '+' → logprob: -5.340928554534912
    7. ')->' → logprob: -5.465928554534912
    8. '
' → logprob: -5.965928554534912
    9. ' ' → logprob: -6.965928554534912
    10. ')' → logprob: -6.965928554534912

Token 802: 'c' (ID: 66)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09095560759305954
    2. ' d' → logprob: -2.4659554958343506
    3. 'c' → logprob: -6.71595573425293
    4. ' c' → logprob: -8.59095573425293
    5. '->' → logprob: -8.84095573425293
    6. ' ->' → logprob: -8.84095573425293
    7. ' ' → logprob: -9.34095573425293
    8. '
' → logprob: -9.71595573425293
    9. ' 
' → logprob: -9.71595573425293
    10. ',' → logprob: -11.09095573425293

Token 803: '1' (ID: 16)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.14813044667243958
    2. ' ->' → logprob: -2.523130416870117
    3. '1' → logprob: -3.773130416870117
    4. ',' → logprob: -4.523130416870117
    5. ' +' → logprob: -5.148130416870117
    6. ' ' → logprob: -5.648130416870117
    7. '+' → logprob: -5.898130416870117
    8. '-' → logprob: -6.023130416870117
    9. ' and' → logprob: -6.898130416870117
    10. '   ' → logprob: -7.148130416870117

Token 804: ',' (ID: 11)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.07528354972600937
    2. ' ->' → logprob: -3.4502835273742676
    3. ',' → logprob: -3.7002835273742676
    4. '#' → logprob: -5.700283527374268
    5. '           ' → logprob: -6.075283527374268
    6. ' that' → logprob: -6.575283527374268
    7. '→' → logprob: -6.575283527374268
    8. '               ' → logprob: -6.575283527374268
    9. '
' → logprob: -7.325283527374268
    10. ' #' → logprob: -7.450283527374268

Token 805: ' c' (ID: 274)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.580863356590271
    2. 'd' → logprob: -1.455863356590271
    3. '#' → logprob: -3.2058634757995605
    4. ' c' → logprob: -3.3308634757995605
    5. ' then' → logprob: -3.3308634757995605
    6. '           ' → logprob: -3.9558634757995605
    7. ' #' → logprob: -4.5808634757995605
    8. 'c' → logprob: -4.5808634757995605
    9. '               ' → logprob: -4.7058634757995605
    10. '
' → logprob: -4.9558634757995605

Token 806: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018473105505108833
    2. '2' → logprob: -4.268473148345947
    3. '->' → logprob: -5.893473148345947
    4. ' ->' → logprob: -8.268472671508789
    5. ',' → logprob: -8.518472671508789
    6. '=>' → logprob: -8.518472671508789
    7. '
' → logprob: -8.768472671508789
    8. '>' → logprob: -8.893472671508789
    9. '```' → logprob: -9.518472671508789
    10. '...' → logprob: -9.643472671508789

Token 807: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.012353064492344856
    2. ' ->' → logprob: -4.63735294342041
    3. ',' → logprob: -7.51235294342041
    4. '→' → logprob: -7.88735294342041
    5. '->_' → logprob: -8.01235294342041
    6. ')->' → logprob: -8.38735294342041
    7. '...' → logprob: -9.13735294342041
    8. '+' → logprob: -9.13735294342041
    9. '
' → logprob: -9.26235294342041
    10. '"' → logprob: -9.26235294342041

Token 808: 'c' (ID: 66)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.201689213514328
    2. 'c' → logprob: -1.7016892433166504
    3. 's' → logprob: -9.701688766479492
    4. ' d' → logprob: -9.701688766479492
    5. '
' → logprob: -9.701688766479492
    6. ' c' → logprob: -10.451688766479492
    7. '...' → logprob: -10.701688766479492
    8. ' ' → logprob: -12.514188766479492
    9. '```' → logprob: -12.576688766479492
    10. '   ' → logprob: -12.764188766479492

Token 809: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05489491671323776
    2. '1' → logprob: -2.9298949241638184
    3. ',' → logprob: -12.55489444732666
    4. '
' → logprob: -13.42989444732666
    5. 'c' → logprob: -13.42989444732666
    6. '_' → logprob: -13.67989444732666
    7. '...' → logprob: -14.05489444732666
    8. '```' → logprob: -14.05489444732666
    9. 'n' → logprob: -14.55489444732666
    10. ' ' → logprob: -14.55489444732666

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1922021061182022
    2. ',
' → logprob: -2.317202091217041
    3. '               ' → logprob: -3.067202091217041
    4. '           ' → logprob: -4.067202091217041
    5. '->' → logprob: -6.067202091217041
    6. '#' → logprob: -6.067202091217041
    7. ':
' → logprob: -6.442202091217041
    8. ':' → logprob: -6.692202091217041
    9. '                   ' → logprob: -6.692202091217041
    10. ' and' → logprob: -7.317202091217041

Token 811: ' etc' (ID: 5178)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.1978477239608765
    2. 'd' → logprob: -1.5728477239608765
    3. '#' → logprob: -1.9478477239608765
    4. ' d' → logprob: -2.072847843170166
    5. 'c' → logprob: -2.197847843170166
    6. ',' → logprob: -3.072847843170166
    7. ' #' → logprob: -4.072847843170166
    8. '
' → logprob: -4.572847843170166
    9. ' and' → logprob: -4.697847843170166
    10. '           ' → logprob: -5.322847843170166

Token 812: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1680523008108139
    2. '           ' → logprob: -2.5430521965026855
    3. '               ' → logprob: -3.5430521965026855
    4. '#' → logprob: -4.4180521965026855
    5. ',
' → logprob: -4.5430521965026855
    6. ':' → logprob: -5.0430521965026855
    7. ':
' → logprob: -5.4180521965026855
    8. '
' → logprob: -5.4180521965026855
    9. '...' → logprob: -5.6680521965026855
    10. '.' → logprob: -6.0430521965026855

Token 813: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04739978909492493
    2. '               ' → logprob: -3.9223997592926025
    3. '           ' → logprob: -4.047399997711182
    4. ',' → logprob: -5.172399997711182
    5. ' #' → logprob: -6.172399997711182
    6. ' the' → logprob: -7.422399997711182
    7. '                   ' → logprob: -9.047399520874023
    8. ' ' → logprob: -9.672399520874023
    9. ' then' → logprob: -9.672399520874023
    10. 'the' → logprob: -9.922399520874023

Token 814: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5489448308944702
    2. '#' (adapté à ' #') → logprob: -0.9239448308944702
    3. '               ' → logprob: -4.04894495010376
    4. ',' → logprob: -5.54894495010376
    5. ' #' → logprob: -6.04894495010376
    6. ' the' → logprob: -7.79894495010376
    7. ' ' → logprob: -8.923944473266602
    8. '   ' → logprob: -9.048944473266602
    9. '       ' → logprob: -9.048944473266602
    10. '                   ' → logprob: -9.173944473266602

Token 815: ' user' (ID: 1825)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5328753590583801
    2. '           ' → logprob: -1.5328752994537354
    3. ' the' → logprob: -2.6578752994537354
    4. ' #' → logprob: -2.6578752994537354
    5. ' we' → logprob: -3.2828752994537354
    6. '               ' → logprob: -5.9078755378723145
    7. ' then' → logprob: -5.9078755378723145
    8. 'the' → logprob: -5.9078755378723145
    9. ' it' → logprob: -6.0328755378723145
    10. 'we' → logprob: -6.5328755378723145

Token 816: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.3561283349990845
    2. ' may' → logprob: -1.7311283349990845
    3. ' might' → logprob: -1.9811283349990845
    4. ' must' → logprob: -2.356128215789795
    5. '           ' → logprob: -2.981128215789795
    6. '#' → logprob: -3.231128215789795
    7. ' =' → logprob: -3.231128215789795
    8. 's' → logprob: -3.481128215789795
    9. ' has' → logprob: -4.106128215789795
    10. ' #' → logprob: -4.231128215789795

Token 817: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.09102233499288559
    2. ' visit' → logprob: -3.091022253036499
    3. 'follow' → logprob: -4.091022491455078
    4. ' follow' → logprob: -4.091022491455078
    5. 'respect' → logprob: -5.341022491455078
    6. 'walk' → logprob: -7.466022491455078
    7. '
' → logprob: -7.841022491455078
    8. 'go' → logprob: -8.216022491455078
    9. ' respect' → logprob: -8.341022491455078
    10. 'pass' → logprob: -8.591022491455078

Token 818: ' them' (ID: 1373)
  Prédit: ' them'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -1.3402541875839233
    2. 'them' → logprob: -1.4652541875839233
    3. 'c' → logprob: -1.9652541875839233
    4. ' those' → logprob: -2.090254306793213
    5. ' c' → logprob: -2.715254306793213
    6. 'those' → logprob: -3.215254306793213
    7. ' the' → logprob: -3.590254306793213
    8. ' these' → logprob: -3.590254306793213
    9. ' all' → logprob: -3.840254306793213
    10. 'the' → logprob: -4.090254306793213

Token 819: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25429093837738037
    2. ' in' → logprob: -1.5042909383773804
    3. 'following' → logprob: -7.12929105758667
    4. 's' → logprob: -8.129290580749512
    5. 'all' → logprob: -8.629290580749512
    6. 'back' → logprob: -8.879290580749512
    7. 'respect' → logprob: -9.004290580749512
    8. ' following' → logprob: -9.254290580749512
    9. ' cont' → logprob: -9.504290580749512
    10. '<|end|>' → logprob: -9.629290580749512

Token 820: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.6108247637748718
    2. 'order' → logprob: -1.4858248233795166
    3. 'the' → logprob: -1.8608248233795166
    4. 'top' → logprob: -3.4858248233795166
    5. ' that' → logprob: -4.2358245849609375
    6. 'in' → logprob: -4.3608245849609375
    7. ' order' → logprob: -5.4858245849609375
    8. 'an' → logprob: -5.6108245849609375
    9. 'this' → logprob: -5.7358245849609375
    10. 'a' → logprob: -5.9858245849609375

Token 821: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.6256161332130432
    2. 'order' → logprob: -0.8756161332130432
    3. 'chain' → logprob: -3.5006160736083984
    4. ' chain' → logprob: -4.250616073608398
    5. 'sequence' → logprob: -7.375616073608398
    6. 'specific' → logprob: -7.500616073608398
    7. ' sequence' → logprob: -7.625616073608398
    8. '
' → logprob: -7.750616073608398
    9. 'strict' → logprob: -8.000616073608398
    10. ' exact' → logprob: -8.125616073608398

Token 822: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3630332052707672
    2. '.' → logprob: -1.8630331754684448
    3. ',' → logprob: -2.6130332946777344
    4. '<|end|>' → logprob: -3.2380332946777344
    5. '
' → logprob: -4.488033294677734
    6. '<|end|>' → logprob: -4.988033294677734
    7. '            
' → logprob: -5.363033294677734
    8. ' and' → logprob: -5.863033294677734
    9. '#' → logprob: -6.488033294677734
    10. ' to' → logprob: -6.613033294677734

Token 823: ' which' (ID: 1118)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7170471549034119
    2. ' so' → logprob: -1.4670472145080566
    3. '
' → logprob: -2.7170472145080566
    4. '#' → logprob: -3.3420472145080566
    5. ' but' → logprob: -3.5920472145080566
    6. '            
' → logprob: -3.8420472145080566
    7. '               ' → logprob: -3.9670472145080566
    8. ' which' → logprob: -3.9670472145080566
    9. ' and' → logprob: -4.092047214508057
    10. 'and' → logprob: -4.342047214508057

Token 824: ' might' (ID: 3572)
  Prédit: 'may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'may' → logprob: -1.7391382455825806
    2. ' may' → logprob: -1.8641382455825806
    3. 'means' → logprob: -1.9891382455825806
    4. 'forces' → logprob: -2.364138126373291
    5. 'im' → logprob: -2.364138126373291
    6. ' forces' → logprob: -2.864138126373291
    7. ' means' → logprob: -3.614138126373291
    8. ' implies' → logprob: -3.614138126373291
    9. 'in' → logprob: -3.614138126373291
    10. ' might' → logprob: -3.864138126373291

Token 825: ' force' (ID: 9578)
  Prédit: 'force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'force' → logprob: -0.5420655012130737
    2. ' force' → logprob: -1.1670655012130737
    3. 'require' → logprob: -2.7920656204223633
    4. 'increase' → logprob: -4.292065620422363
    5. ' require' → logprob: -4.417065620422363
    6. '
' → logprob: -5.167065620422363
    7. 'cause' → logprob: -6.167065620422363
    8. 'make' → logprob: -6.292065620422363
    9. ' increase' → logprob: -6.667065620422363
    10. ' cause' → logprob: -6.667065620422363

Token 826: ' back' (ID: 1602)
  Prédit: ' revis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' revis' → logprob: -1.3136169910430908
    2. 'back' → logprob: -1.9386169910430908
    3. 'her' → logprob: -2.188616991043091
    4. 'return' → logprob: -2.313616991043091
    5. ' back' → logprob: -2.813616991043091
    6. ' her' → logprob: -3.188616991043091
    7. 'a' → logprob: -3.313616991043091
    8. ' visiting' → logprob: -3.313616991043091
    9. 'vis' → logprob: -3.813616991043091
    10. ' walking' → logprob: -3.813616991043091

Token 827: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.8371486663818359
    2. 'ward' → logprob: -0.9621486663818359
    3. 'wards' → logprob: -2.337148666381836
    4. '_and' → logprob: -2.712148666381836
    5. '           ' → logprob: -5.212148666381836
    6. '_to' → logprob: -5.712148666381836
    7. '       ' → logprob: -5.837148666381836
    8. '_' → logprob: -6.337148666381836
    9. 'and' → logprob: -6.587148666381836
    10. 'steps' → logprob: -6.712148666381836

Token 828: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7561537027359009
    2. '<|end|>' → logprob: -1.0061537027359009
    3. '
' → logprob: -2.2561535835266113
    4. '<|end|>' → logprob: -3.5061535835266113
    5. '.' → logprob: -4.381153583526611
    6. '            
' → logprob: -5.006153583526611
    7. ',' → logprob: -5.631153583526611
    8. ' and' → logprob: -6.631153583526611
    9. '#' → logprob: -7.131153583526611
    10. '       ' → logprob: -7.381153583526611

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41303780674934387
    2. '
' → logprob: -1.4130377769470215
    3. '            
' → logprob: -2.5380377769470215
    4. '<|end|>' → logprob: -5.1630377769470215
    5. '\n' → logprob: -6.6630377769470215
    6. '       ' → logprob: -6.7880377769470215
    7. '#' → logprob: -7.2880377769470215
    8. '    
' → logprob: -7.2880377769470215
    9. '<|end|>' → logprob: -7.2880377769470215
    10. '        
' → logprob: -7.4130377769470215

Token 830: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15546122193336487
    2. '            
' → logprob: -2.530461311340332
    3. '
' → logprob: -3.030461311340332
    4. '#' (adapté à ' #') → logprob: -5.280461311340332
    5. '       ' → logprob: -5.405461311340332
    6. 'from' → logprob: -6.780461311340332
    7. '        
' → logprob: -7.155461311340332
    8. '    
' → logprob: -7.405461311340332
    9. '            ' → logprob: -7.655461311340332
    10. 'import' → logprob: -7.780461311340332

Token 831: ' Approach' (ID: 86383)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3841495215892792
    2. '           ' → logprob: -1.5091495513916016
    3. 'from' → logprob: -2.8841495513916016
    4. 'import' → logprob: -4.134149551391602
    5. 'top' → logprob: -5.259149551391602
    6. '
' → logprob: -5.509149551391602
    7. '   ' → logprob: -5.759149551391602
    8. 'def' → logprob: -6.009149551391602
    9. '       ' → logprob: -6.134149551391602
    10. 'We' → logprob: -6.509149551391602

Token 832: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06959656625986099
    2. ':' → logprob: -3.319596529006958
    3. '       ' → logprob: -4.569596767425537
    4. 'import' → logprob: -5.319596767425537
    5. '
' → logprob: -5.444596767425537
    6. '   ' → logprob: -6.069596767425537
    7. ' is' → logprob: -6.569596767425537
    8. ':
' → logprob: -6.569596767425537
    9. '```' → logprob: -6.569596767425537
    10. '            
' → logprob: -6.694596767425537

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01998431235551834
    2. '
' → logprob: -4.519984245300293
    3. '            
' → logprob: -4.769984245300293
    4. '            ' → logprob: -9.144984245300293
    5. '        
' → logprob: -9.644984245300293
    6. '       ' → logprob: -9.769984245300293
    7. '               ' → logprob: -10.019984245300293
    8. '    
' → logprob: -10.019984245300293
    9. '            

' → logprob: -10.644984245300293
    10. ' 
' → logprob: -11.269984245300293

Token 834: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12163589894771576
    2. ' from' → logprob: -3.371635913848877
    3. 'import' → logprob: -3.746635913848877
    4. 'from' → logprob: -4.496635913848877
    5. ' import' → logprob: -4.496635913848877
    6. '#' (adapté à ' #') → logprob: -4.746635913848877
    7. ' top' → logprob: -4.996635913848877
    8. '       ' → logprob: -5.121635913848877
    9. ' #' → logprob: -5.121635913848877
    10. ' graph' → logprob: -6.496635913848877

Token 835: ' The' (ID: 623)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.044616460800171
    2. '           ' → logprob: -1.419616460800171
    3. 'from' → logprob: -1.919616460800171
    4. ' import' → logprob: -2.419616460800171
    5. ' top' → logprob: -2.669616460800171
    6. 'import' → logprob: -3.294616460800171
    7. 'top' → logprob: -4.16961669921875
    8. ' #' → logprob: -4.54461669921875
    9. '#' → logprob: -4.79461669921875
    10. ' topo' → logprob: -4.91961669921875

Token 836: ' shortest' (ID: 70564)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.21001398563385
    2. 'graph' → logprob: -1.83501398563385
    3. 'def' → logprob: -2.0850138664245605
    4. ' def' → logprob: -2.3350138664245605
    5. '#' → logprob: -2.4600138664245605
    6. 'from' → logprob: -2.8350138664245605
    7. 're' → logprob: -3.3350138664245605
    8. ' #' → logprob: -3.7100138664245605
    9. 'import' → logprob: -4.3350138664245605
    10. ' from' → logprob: -4.3350138664245605

Token 837: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.3730628192424774
    2. 'path' → logprob: -1.6230628490447998
    3. '_path' → logprob: -2.6230628490448
    4. 'possible' → logprob: -4.998062610626221
    5. ' possible' → logprob: -5.123062610626221
    6. ' valid' → logprob: -5.123062610626221
    7. 'def' → logprob: -5.748062610626221
    8. ' top' → logprob: -5.998062610626221
    9. 'top' → logprob: -6.373062610626221
    10. 'valid' → logprob: -6.373062610626221

Token 838: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6272768974304199
    2. '           ' → logprob: -1.25227689743042
    3. 'from' → logprob: -2.62727689743042
    4. ' is' → logprob: -3.62727689743042
    5. ' from' → logprob: -3.62727689743042
    6. '=' → logprob: -4.00227689743042
    7. ':' → logprob: -5.00227689743042
    8. ' to' → logprob: -5.37727689743042
    9. '       ' → logprob: -5.37727689743042
    10. ' starts' → logprob: -6.12727689743042

Token 839: ' respects' (ID: 80154)
  Prédit: ' visits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visits' → logprob: -0.7567812204360962
    2. 'vis' → logprob: -2.1317811012268066
    3. ' covers' → logprob: -2.2567811012268066
    4. 'covers' → logprob: -2.3817811012268066
    5. 'res' → logprob: -2.5067811012268066
    6. ' respects' → logprob: -3.0067811012268066
    7. 'includes' → logprob: -3.5067811012268066
    8. ' includes' → logprob: -3.6317811012268066
    9. '   ' → logprob: -4.506781101226807
    10. '#' → logprob: -5.506781101226807

Token 840: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -1.4096856117248535
    2. ' the' → logprob: -1.7846856117248535
    3. ' top' → logprob: -1.9096856117248535
    4. ' partial' → logprob: -2.0346856117248535
    5. ' all' → logprob: -2.2846856117248535
    6. 'top' → logprob: -2.7846856117248535
    7. 'all' → logprob: -2.7846856117248535
    8. 'the' → logprob: -3.2846856117248535
    9. 'constraints' → logprob: -3.6596856117248535
    10. 'partial' → logprob: -4.1596856117248535

Token 841: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2745269238948822
    2. '           ' → logprob: -2.149526834487915
    3. ' must' → logprob: -2.774526834487915
    4. ' involves' → logprob: -3.649526834487915
    5. ' #' → logprob: -5.649527072906494
    6. ' should' → logprob: -5.774527072906494
    7. ' from' → logprob: -5.774527072906494
    8. '#' → logprob: -5.774527072906494
    9. ',' → logprob: -5.899527072906494
    10. ':' → logprob: -6.024527072906494

Token 842: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7669813632965088
    2. 'to' → logprob: -1.5169813632965088
    3. 'the' → logprob: -2.141981363296509
    4. ' the' → logprob: -2.641981363296509
    5. 'top' → logprob: -3.266981363296509
    6. ' a' → logprob: -3.641981363296509
    7. 'dp' → logprob: -4.01698112487793
    8. ' top' → logprob: -4.64198112487793
    9. 'a' → logprob: -4.76698112487793
    10. '#' → logprob: -5.64198112487793

Token 843: ' minimal' (ID: 19957)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -1.324426531791687
    2. 'minimal' → logprob: -1.699426531791687
    3. ' minimal' → logprob: -1.824426531791687
    4. 'max' → logprob: -1.949426531791687
    5. 'minimum' → logprob: -2.6994266510009766
    6. 'maximum' → logprob: -3.4494266510009766
    7. 'length' → logprob: -3.5744266510009766
    8. 'distance' → logprob: -3.9494266510009766
    9. 'top' → logprob: -4.074426651000977
    10. ' length' → logprob: -4.074426651000977

Token 844: ' length' (ID: 5517)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6000757813453674
    2. ' length' → logprob: -2.3500757217407227
    3. ' distance' → logprob: -2.8500757217407227
    4. 'path' → logprob: -3.1000757217407227
    5. 'distance' → logprob: -3.2250757217407227
    6. 'top' → logprob: -3.6000757217407227
    7. ' top' → logprob: -3.7250757217407227
    8. ' visiting' → logprob: -4.100075721740723
    9. 'def' → logprob: -4.350075721740723
    10. ' linear' → logprob: -4.600075721740723

Token 845: ' interval' (ID: 17116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7132106423377991
    2. ' that' → logprob: -2.3382105827331543
    3. ' path' → logprob: -2.4632105827331543
    4. ' of' → logprob: -2.5882105827331543
    5. 'that' → logprob: -2.8382105827331543
    6. ' to' → logprob: -3.2132105827331543
    7. 'path' → logprob: -3.5882105827331543
    8. 'from' → logprob: -3.8382105827331543
    9. '       ' → logprob: -4.713210582733154
    10. '```' → logprob: -4.838210582733154

Token 846: ' [' (ID: 723)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.2184711694717407
    2. ' covering' → logprob: -1.3434711694717407
    3. ' ' → logprob: -2.718471050262451
    4. ' from' → logprob: -2.843471050262451
    5. '   ' → logprob: -3.218471050262451
    6. '.' → logprob: -3.343471050262451
    7. '_' → logprob: -3.343471050262451
    8. ' between' → logprob: -3.468471050262451
    9. ' containing' → logprob: -3.968471050262451
    10. 'from' → logprob: -3.968471050262451

Token 847: 'L' (ID: 43)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9819889068603516
    2. 'min' → logprob: -1.1069889068603516
    3. '0' → logprob: -1.9819889068603516
    4. '1' → logprob: -2.6069889068603516
    5. 'left' → logprob: -4.106988906860352
    6. 'first' → logprob: -4.106988906860352
    7. 'start' → logprob: -4.356988906860352
    8. 'i' → logprob: -4.856988906860352
    9. 'x' → logprob: -4.981988906860352
    10. 'u' → logprob: -5.731988906860352

Token 848: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033736536279320717
    2. ' ,' → logprob: -6.003373622894287
    3. ',
' → logprob: -7.253373622894287
    4. '
' → logprob: -9.503374099731445
    5. ',R' → logprob: -10.628374099731445
    6. ' ' → logprob: -11.128374099731445
    7. ',L' → logprob: -11.253374099731445
    8. '   ' → logprob: -12.003374099731445
    9. '=' → logprob: -12.753374099731445
    10. '<|end|>' → logprob: -12.753374099731445

Token 849: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13365796208381653
    2. '           ' → logprob: -3.133657932281494
    3. ' that' → logprob: -3.383657932281494
    4. ']
' → logprob: -3.758657932281494
    5. 'that' → logprob: -4.758657932281494
    6. ' covering' → logprob: -5.258657932281494
    7. ' such' → logprob: -5.758657932281494
    8. ' containing' → logprob: -6.383657932281494
    9. '
' → logprob: -6.633657932281494
    10. '               ' → logprob: -7.633657932281494

Token 850: ' covering' (ID: 24878)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1058550477027893
    2. ' that' → logprob: -2.7308549880981445
    3. '            ' → logprob: -4.9808549880981445
    4. ',' → logprob: -5.2308549880981445
    5. ' with' → logprob: -5.2308549880981445
    6. ' to' → logprob: -5.8558549880981445
    7. ' covering' → logprob: -5.9808549880981445
    8. ' where' → logprob: -6.3558549880981445
    9. ':' → logprob: -6.6058549880981445
    10. '       ' → logprob: -6.6058549880981445

Token 851: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.18103249371051788
    2. ' the' → logprob: -2.181032419204712
    3. 'all' → logprob: -3.181032419204712
    4. 'the' → logprob: -4.556032657623291
    5. ' shops' → logprob: -8.431032180786133
    6. ' self' → logprob: -9.056032180786133
    7. 'self' → logprob: -9.806032180786133
    8. '           ' → logprob: -10.306032180786133
    9. 'shops' → logprob: -10.431032180786133
    10. '   ' → logprob: -10.556032180786133

Token 852: ' shops' (ID: 22509)
  Prédit: ' shops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shops' → logprob: -0.16428640484809875
    2. 'shops' → logprob: -2.0392863750457764
    3. ' the' → logprob: -5.1642866134643555
    4. ' required' → logprob: -5.6642866134643555
    5. '   ' → logprob: -6.2892866134643555
    6. ' constraints' → logprob: -6.4142866134643555
    7. ' visited' → logprob: -6.5392866134643555
    8. '_sh' → logprob: -6.9142866134643555
    9. ' relevant' → logprob: -7.0392866134643555
    10. ' selected' → logprob: -7.2892866134643555

Token 853: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15209484100341797
    2. ' that' → logprob: -2.652094841003418
    3. ' containing' → logprob: -3.402094841003418
    4. ' covering' → logprob: -4.402094841003418
    5. ' with' → logprob: -4.652094841003418
    6. ',' → logprob: -5.027094841003418
    7. 'that' → logprob: -6.277094841003418
    8. '            
' → logprob: -7.027094841003418
    9. ' such' → logprob: -7.027094841003418
    10. ' and' → logprob: -7.277094841003418

Token 854: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08753213286399841
    2. ' that' → logprob: -2.9625320434570312
    3. '            ' → logprob: -4.587532043457031
    4. ' with' → logprob: -5.212532043457031
    5. ' such' → logprob: -5.212532043457031
    6. ',' → logprob: -5.837532043457031
    7. ' containing' → logprob: -6.087532043457031
    8. ' and' → logprob: -6.337532043457031
    9. 'that' → logprob: -7.087532043457031
    10. '          ' → logprob: -7.712532043457031

Token 855: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15241047739982605
    2. ' that' → logprob: -3.0274105072021484
    3. '            ' → logprob: -3.1524105072021484
    4. ',' → logprob: -4.277410507202148
    5. ' with' → logprob: -4.902410507202148
    6. '               ' → logprob: -5.277410507202148
    7. ' containing' → logprob: -6.027410507202148
    8. ' and' → logprob: -6.152410507202148
    9. ' covering' → logprob: -6.152410507202148
    10. ' to' → logprob: -6.527410507202148

Token 856: ' such' (ID: 2238)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7159892320632935
    2. ' such' → logprob: -1.4659892320632935
    3. ' that' → logprob: -1.5909892320632935
    4. ' visited' → logprob: -3.215989112854004
    5. ' with' → logprob: -4.840989112854004
    6. ' containing' → logprob: -4.965989112854004
    7. 'that' → logprob: -5.090989112854004
    8. ',' → logprob: -5.715989112854004
    9. ' in' → logprob: -6.465989112854004
    10. 'such' → logprob: -6.465989112854004

Token 857: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3137813210487366
    2. 'that' → logprob: -1.3137812614440918
    3. '_that' → logprob: -8.06378173828125
    4. '           ' → logprob: -9.31378173828125
    5. '	that' → logprob: -10.31378173828125
    6. ' as' → logprob: -10.43878173828125
    7. 'That' → logprob: -11.68878173828125
    8. ' than' → logprob: -12.06378173828125
    9. ' the' → logprob: -12.43878173828125
    10. '   ' → logprob: -12.68878173828125

Token 858: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.49599528312683105
    2. ' all' → logprob: -1.495995283126831
    3. 'for' → logprob: -2.120995283126831
    4. ' for' → logprob: -3.745995283126831
    5. 'the' → logprob: -4.37099552154541
    6. 'there' → logprob: -5.37099552154541
    7. '           ' → logprob: -6.62099552154541
    8. ' the' → logprob: -6.62099552154541
    9. 'every' → logprob: -7.24599552154541
    10. ' there' → logprob: -7.49599552154541

Token 859: ' shops' (ID: 22509)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.5927695035934448
    2. 'constraints' → logprob: -0.8427695035934448
    3. ' edges' → logprob: -5.342769622802734
    4. ' the' → logprob: -5.717769622802734
    5. 'constraint' → logprob: -6.467769622802734
    6. 'edges' → logprob: -6.592769622802734
    7. 'shops' → logprob: -6.717769622802734
    8. 'con' → logprob: -6.842769622802734
    9. ' shops' → logprob: -7.467769622802734
    10. 'the' → logprob: -7.467769622802734

Token 860: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39970991015434265
    2. 'in' → logprob: -1.399709939956665
    3. ' are' → logprob: -3.149709939956665
    4. ' within' → logprob: -5.024709701538086
    5. ' between' → logprob: -5.274709701538086
    6. 'visited' → logprob: -5.524709701538086
    7. 'inside' → logprob: -5.774709701538086
    8. ' inside' → logprob: -5.774709701538086
    9. 'are' → logprob: -5.899709701538086
    10. ' must' → logprob: -6.274709701538086

Token 861: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.6406481862068176
    2. 'constraints' → logprob: -0.7656481862068176
    3. 'constraint' → logprob: -5.765648365020752
    4. 'positions' → logprob: -7.515648365020752
    5. ' positions' → logprob: -7.640648365020752
    6. ' constraint' → logprob: -7.640648365020752
    7. 'in' → logprob: -7.765648365020752
    8. 'incoming' → logprob: -7.765648365020752
    9. 'position' → logprob: -8.265647888183594
    10. '   ' → logprob: -8.515647888183594

Token 862: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.15352465212345123
    2. ' in' → logprob: -2.65352463722229
    3. ' must' → logprob: -4.153524875640869
    4. 'in' → logprob: -4.903524875640869
    5. '           ' → logprob: -5.278524875640869
    6. ' inside' → logprob: -5.403524875640869
    7. 'are' → logprob: -5.528524875640869
    8. ' to' → logprob: -5.528524875640869
    9. '   ' → logprob: -5.778524875640869
    10. ' within' → logprob: -5.778524875640869

Token 863: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.49452391266822815
    2. 'inside' → logprob: -2.2445240020751953
    3. ' visited' → logprob: -2.6195240020751953
    4. 'in' → logprob: -3.3695240020751953
    5. 'included' → logprob: -3.3695240020751953
    6. 'within' → logprob: -3.4945240020751953
    7. ' within' → logprob: -3.6195240020751953
    8. ' inside' → logprob: -3.7445240020751953
    9. ' in' → logprob: -3.7445240020751953
    10. 'between' → logprob: -4.119524002075195

Token 864: ' inside' (ID: 6772)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.806309700012207
    2. ' within' → logprob: -1.556309700012207
    3. ',' → logprob: -2.431309700012207
    4. '<|end|>' → logprob: -2.931309700012207
    5. '_' → logprob: -3.056309700012207
    6. ' between' → logprob: -3.306309700012207
    7. ' ' → logprob: -3.931309700012207
    8. 'in' → logprob: -4.056309700012207
    9. 'within' → logprob: -4.681309700012207
    10. ' _' → logprob: -4.681309700012207

Token 865: ' [' (ID: 723)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5019890666007996
    2. ',' → logprob: -1.8769891262054443
    3. ' and' → logprob: -2.8769891262054443
    4. '           ' → logprob: -2.8769891262054443
    5. ' ,' → logprob: -4.126988887786865
    6. '<|end|>' → logprob: -4.126988887786865
    7. 'the' → logprob: -4.251988887786865
    8. ' ' → logprob: -4.626988887786865
    9. '_' → logprob: -4.751988887786865
    10. ' an' → logprob: -4.876988887786865

Token 866: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.006450793240219355
    2. 'R' → logprob: -5.756450653076172
    3. ' L' → logprob: -5.881450653076172
    4. ',' → logprob: -8.006450653076172
    5. '
' → logprob: -9.256450653076172
    6. ' R' → logprob: -11.131450653076172
    7. ',L' → logprob: -11.631450653076172
    8. '
' → logprob: -12.131450653076172
    9. '   ' → logprob: -12.756450653076172
    10. ' ,' → logprob: -12.756450653076172

Token 867: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13149167597293854
    2. ',R' → logprob: -2.1314916610717773
    3. ' ,' → logprob: -5.506491661071777
    4. ',
' → logprob: -8.256491661071777
    5. ',L' → logprob: -9.631491661071777
    6. '-' → logprob: -10.381491661071777
    7. '+' → logprob: -11.006491661071777
    8. '
' → logprob: -11.131491661071777
    9. ',N' → logprob: -11.256491661071777
    10. ' ' → logprob: -11.381491661071777

Token 868: '],
' (ID: 2274)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006660311948508024
    2. ']
' → logprob: -5.756660461425781
    3. '],' → logprob: -6.256660461425781
    4. '           ' → logprob: -7.256660461425781
    5. '].' → logprob: -7.256660461425781
    6. ',' → logprob: -10.131660461425781
    7. ']

' → logprob: -10.756660461425781
    8. '#' → logprob: -10.881660461425781
    9. ']
' → logprob: -11.256660461425781
    10. '   ' → logprob: -11.631660461425781

Token 869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02352950908243656
    2. '#' → logprob: -4.648529529571533
    3. 'and' → logprob: -5.023529529571533
    4. ' and' → logprob: -5.148529529571533
    5. '       ' → logprob: -8.148529052734375
    6. ' with' → logprob: -8.648529052734375
    7. ' #' → logprob: -8.773529052734375
    8. ' but' → logprob: -8.773529052734375
    9. 'with' → logprob: -9.398529052734375
    10. '               ' → logprob: -9.523529052734375

Token 870: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05001714453101158
    2. '#' (adapté à ' #') → logprob: -3.0500171184539795
    3. 'and' → logprob: -7.050017356872559
    4. ' and' → logprob: -8.050017356872559
    5. ' #' → logprob: -9.175017356872559
    6. '       ' → logprob: -10.300017356872559
    7. '               ' → logprob: -10.800017356872559
    8. '   ' → logprob: -11.300017356872559
    9. '            ' → logprob: -11.300017356872559
    10. ' but' → logprob: -11.925017356872559

Token 871: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3130389153957367
    2. '#' → logprob: -1.438038945198059
    3. ' and' → logprob: -4.1880388259887695
    4. 'and' → logprob: -4.3130388259887695
    5. ' #' → logprob: -6.5630388259887695
    6. '       ' → logprob: -8.31303882598877
    7. ' with' → logprob: -8.43803882598877
    8. '   ' → logprob: -8.81303882598877
    9. '               ' → logprob: -9.18803882598877
    10. 'with' → logprob: -9.31303882598877

Token 872: ' order' (ID: 2569)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7871391773223877
    2. ' all' → logprob: -1.6621391773223877
    3. 'the' → logprob: -2.0371391773223877
    4. '           ' → logprob: -2.7871391773223877
    5. 'all' → logprob: -2.9121391773223877
    6. ' L' → logprob: -4.037138938903809
    7. ' that' → logprob: -4.037138938903809
    8. 'return' → logprob: -4.287138938903809
    9. ' we' → logprob: -4.537138938903809
    10. '#' → logprob: -4.662138938903809

Token 873: ' respects' (ID: 80154)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.4605944752693176
    2. '   ' → logprob: -2.210594415664673
    3. '_' → logprob: -2.960594415664673
    4. 's' → logprob: -3.210594415664673
    5. '           ' → logprob: -3.710594415664673
    6. ' of' → logprob: -3.710594415664673
    7. ' is' → logprob: -4.335594654083252
    8. ' ' → logprob: -4.460594654083252
    9. '
' → logprob: -4.585594654083252
    10. '       ' → logprob: -4.585594654083252

Token 874: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5054693222045898
    2. ' constraints' → logprob: -1.6304693222045898
    3. 'the' → logprob: -2.25546932220459
    4. 'constraints' → logprob: -2.75546932220459
    5. ' L' → logprob: -4.00546932220459
    6. ' all' → logprob: -5.50546932220459
    7. ' those' → logprob: -5.50546932220459
    8. ' these' → logprob: -6.00546932220459
    9. ' their' → logprob: -7.38046932220459
    10. ' them' → logprob: -7.50546932220459

Token 875: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.48249271512031555
    2. 'constraints' → logprob: -0.9824926853179932
    3. 'constraint' → logprob: -6.107492923736572
    4. ' given' → logprob: -6.232492923736572
    5. 'preced' → logprob: -6.607492923736572
    6. ' partial' → logprob: -7.482492923736572
    7. 'partial' → logprob: -7.857492923736572
    8. ' constraint' → logprob: -7.982492923736572
    9. 'dependencies' → logprob: -8.107492446899414
    10. 'dependency' → logprob: -8.732492446899414

Token 876: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3857859671115875
    2. '<|end|>' → logprob: -2.0107860565185547
    3. '
' → logprob: -2.7607860565185547
    4. '<|end|>' → logprob: -3.2607860565185547
    5. '            
' → logprob: -3.5107860565185547
    6. '.' → logprob: -3.8857860565185547
    7. ',' → logprob: -4.510786056518555
    8. '       ' → logprob: -5.135786056518555
    9. '            

' → logprob: -5.760786056518555
    10. ' and' → logprob: -6.385786056518555

Token 877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08055666089057922
    2. '
' → logprob: -3.330556631088257
    3. '            
' → logprob: -3.455556631088257
    4. '       ' → logprob: -5.830556869506836
    5. '```' → logprob: -6.830556869506836
    6. '\' → logprob: -7.080556869506836
    7. '<|end|>' → logprob: -7.205556869506836
    8. '\n' → logprob: -7.205556869506836
    9. '        
' → logprob: -7.580556869506836
    10. '            

' → logprob: -7.830556869506836

Token 878: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3335569500923157
    2. '
' → logprob: -1.333556890487671
    3. '            
' → logprob: -4.45855712890625
    4. '#' (adapté à ' #') → logprob: -5.20855712890625
    5. '       ' → logprob: -6.95855712890625
    6. '        
' → logprob: -7.70855712890625
    7. 'import' → logprob: -7.83355712890625
    8. 'from' → logprob: -7.95855712890625
    9. '

' → logprob: -8.58355712890625
    10. '            

' → logprob: -8.95855712890625

Token 879: ' However' (ID: 5551)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6515660881996155
    2. 'from' → logprob: -1.1515660285949707
    3. '           ' → logprob: -2.2765660285949707
    4. 'import' → logprob: -3.5265660285949707
    5. 'def' → logprob: -5.276566028594971
    6. '       ' → logprob: -5.526566028594971
    7. 'interval' → logprob: -6.151566028594971
    8. '
' → logprob: -6.401566028594971
    9. 'shops' → logprob: -6.401566028594971
    10. '   ' → logprob: -6.401566028594971

Token 880: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12813454866409302
    2. '<|end|>' → logprob: -3.3781344890594482
    3. '            
' → logprob: -4.128134727478027
    4. ',' → logprob: -4.378134727478027
    5. '       ' → logprob: -4.378134727478027
    6. '
' → logprob: -4.378134727478027
    7. '<|end|>' → logprob: -4.753134727478027
    8. ' ' → logprob: -5.128134727478027
    9. '            ' → logprob: -5.878134727478027
    10. '               ' → logprob: -6.253134727478027

Token 881: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25764915347099304
    2. ' return' → logprob: -1.8826491832733154
    3. 'return' → logprob: -3.5076491832733154
    4. '               ' → logprob: -4.382648944854736
    5. ' ' → logprob: -4.507648944854736
    6. '            ' → logprob: -5.382648944854736
    7. '       ' → logprob: -5.507648944854736
    8. '   ' → logprob: -5.882648944854736
    9. '#' → logprob: -6.382648944854736
    10. ' #' → logprob: -6.882648944854736

Token 882: ' arbitrary' (ID: 56424)
  Prédit: ' shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shop' → logprob: -1.10006582736969
    2. 'shop' → logprob: -1.47506582736969
    3. ' line' → logprob: -1.72506582736969
    4. 'self' → logprob: -3.1000657081604004
    5. 'i' → logprob: -3.7250657081604004
    6. ' v' → logprob: -3.7250657081604004
    7. ' self' → logprob: -3.9750657081604004
    8. ' shops' → logprob: -3.9750657081604004
    9. ' i' → logprob: -4.2250657081604
    10. ' the' → logprob: -4.2250657081604

Token 883: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.5012224316596985
    2. 'constraints' → logprob: -1.3762223720550537
    3. 'shops' → logprob: -3.8762223720550537
    4. '#' → logprob: -3.8762223720550537
    5. 'interval' → logprob: -4.376222610473633
    6. 'positions' → logprob: -4.626222610473633
    7. ' graphs' → logprob: -4.876222610473633
    8. 'graphs' → logprob: -4.876222610473633
    9. ' intervals' → logprob: -5.501222610473633
    10. 'shop' → logprob: -5.751222610473633

Token 884: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5497667789459229
    2. ',' → logprob: -1.4247667789459229
    3. ':' → logprob: -2.174766778945923
    4. '       ' → logprob: -3.924766778945923
    5. '#' → logprob: -4.799766540527344
    6. ' return' → logprob: -5.549766540527344
    7. ':
' → logprob: -5.674766540527344
    8. '            
' → logprob: -5.674766540527344
    9. '               ' → logprob: -5.924766540527344
    10. '
' → logprob: -5.924766540527344

Token 885: ' minimal' (ID: 19957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7946829199790955
    2. ' return' → logprob: -1.1696829795837402
    3. 'return' → logprob: -1.6696829795837402
    4. '#' → logprob: -3.2946829795837402
    5. '       ' → logprob: -5.79468297958374
    6. ' #' → logprob: -5.79468297958374
    7. '   ' → logprob: -6.66968297958374
    8. '               ' → logprob: -6.91968297958374
    9. ' the' → logprob: -7.29468297958374
    10. 'import' → logprob: -7.54468297958374

Token 886: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.45128560066223145
    2. '_' → logprob: -2.0762856006622314
    3. ' _' → logprob: -2.3262856006622314
    4. ' length' → logprob: -3.0762856006622314
    5. '_walk' → logprob: -3.7012856006622314
    6. '_distance' → logprob: -3.8262856006622314
    7. ' def' → logprob: -4.201285362243652
    8. 'def' → logprob: -5.451285362243652
    9. 'length' → logprob: -5.826285362243652
    10. '   ' → logprob: -5.951285362243652

Token 887: ' could' (ID: 2023)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6766723990440369
    2. ' def' → logprob: -2.5516724586486816
    3. ' ' → logprob: -3.0516724586486816
    4. 'def' → logprob: -3.1766724586486816
    5. ':' → logprob: -3.3016724586486816
    6. '   ' → logprob: -3.4266724586486816
    7. ' =' → logprob: -3.6766724586486816
    8. '       ' → logprob: -3.8016724586486816
    9. '           ' → logprob: -3.9266724586486816
    10. '
' → logprob: -3.9266724586486816

Token 888: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2934305667877197
    2. 'be' → logprob: -1.9184305667877197
    3. ' not' → logprob: -2.7934305667877197
    4. '#' → logprob: -4.043430328369141
    5. 'not' → logprob: -4.168430328369141
    6. ' exceed' → logprob: -5.918430328369141
    7. '
' → logprob: -6.668430328369141
    8. ' at' → logprob: -6.793430328369141
    9. '```' → logprob: -6.918430328369141
    10. '       ' → logprob: -7.293430328369141

Token 889: ' computed' (ID: 46716)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.027216142043471336
    2. 'n' → logprob: -4.027215957641602
    3. 'very' → logprob: -6.277215957641602
    4. '   ' → logprob: -6.277215957641602
    5. 'inf' → logprob: -6.652215957641602
    6. 'in' → logprob: -6.902215957641602
    7. 'greater' → logprob: -7.777215957641602
    8. ' float' → logprob: -8.027215957641602
    9. 'larg' → logprob: -8.277215957641602
    10. '       ' → logprob: -8.402215957641602

Token 890: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8378349542617798
    2. '       ' → logprob: -1.9628349542617798
    3. ' by' → logprob: -1.9628349542617798
    4. '<|end|>' → logprob: -2.0878348350524902
    5. '.' → logprob: -2.3378348350524902
    6. '           ' → logprob: -2.8378348350524902
    7. ' ' → logprob: -2.8378348350524902
    8. '   ' → logprob: -3.4628348350524902
    9. ',' → logprob: -3.4628348350524902
    10. '        
' → logprob: -3.9628348350524902

Token 891: ' DP' (ID: 51992)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.5629059672355652
    2. 'top' → logprob: -1.31290602684021
    3. 'dynamic' → logprob: -2.43790602684021
    4. ' top' → logprob: -2.81290602684021
    5. ' a' → logprob: -4.937905788421631
    6. 'a' → logprob: -5.312905788421631
    7. 'dp' → logprob: -7.187905788421631
    8. 'DP' → logprob: -8.187906265258789
    9. ' DP' → logprob: -8.187906265258789
    10. 'def' → logprob: -8.562906265258789

Token 892: ' over' (ID: 1072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.139502763748169
    2. '<|end|>' → logprob: -1.139502763748169
    3. '
' → logprob: -1.514502763748169
    4. '       ' → logprob: -3.014502763748169
    5. '<|end|>' → logprob: -3.389502763748169
    6. '            
' → logprob: -4.63950252532959
    7. ' ' → logprob: -5.51450252532959
    8. '...' → logprob: -5.76450252532959
    9. ',' → logprob: -5.76450252532959
    10. '\n' → logprob: -5.76450252532959

Token 893: ' intervals' (ID: 49900)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.839860737323761
    2. ' the' → logprob: -1.4648606777191162
    3. 'the' → logprob: -2.214860677719116
    4. 'positions' → logprob: -3.214860677719116
    5. 'sub' → logprob: -3.464860677719116
    6. 'shops' → logprob: -3.589860677719116
    7. 'top' → logprob: -3.589860677719116
    8. 'visited' → logprob: -4.339860916137695
    9. ' top' → logprob: -4.464860916137695
    10. 'all' → logprob: -4.964860916137695

Token 894: ' after' (ID: 1934)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9153327345848083
    2. '           ' → logprob: -1.2903327941894531
    3. '<|end|>' → logprob: -1.4153327941894531
    4. '            
' → logprob: -3.415332794189453
    5. '<|end|>' → logprob: -3.915332794189453
    6. '\n' → logprob: -4.790332794189453
    7. '

' → logprob: -5.540332794189453
    8. '            

' → logprob: -6.165332794189453
    9. '       ' → logprob: -6.290332794189453
    10. ',' → logprob: -6.540332794189453

Token 895: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.04055273160338402
    2. 'sorting' → logprob: -3.7905526161193848
    3. ' top' → logprob: -5.290552616119385
    4. 'import' → logprob: -5.540552616119385
    5. ' sorting' → logprob: -6.040552616119385
    6. 'adding' → logprob: -6.790552616119385
    7. 'building' → logprob: -6.790552616119385
    8. '           ' → logprob: -6.915552616119385
    9. 'def' → logprob: -7.665552616119385
    10. 'the' → logprob: -8.040553092956543

Token 896: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.05251030623912811
    2. 'o' → logprob: -4.0525102615356445
    3. 'ology' → logprob: -4.0525102615356445
    4. 'logical' → logprob: -5.1775102615356445
    5. '```' → logprob: -5.1775102615356445
    6. 'ologic' → logprob: -6.5525102615356445
    7. '#' → logprob: -6.9275102615356445
    8. '
' → logprob: -7.3025102615356445
    9. '-' → logprob: -7.8025102615356445
    10. 'olog' → logprob: -7.9275102615356445

Token 897: ' sort' (ID: 4506)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.046467334032058716
    2. 'sort' → logprob: -3.6714673042297363
    3. '_' → logprob: -4.671467304229736
    4. ' sort' → logprob: -5.171467304229736
    5. 'sorting' → logprob: -6.296467304229736
    6. ' sorting' → logprob: -6.921467304229736
    7. '<|end|>' → logprob: -7.171467304229736
    8. ')' → logprob: -7.421467304229736
    9. ' ' → logprob: -8.546467781066895
    10. '_search' → logprob: -9.171467781066895

Token 898: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.419381707906723
    2. '           ' → logprob: -1.2943817377090454
    3. '<|end|>' → logprob: -3.669381618499756
    4. '            
' → logprob: -4.169381618499756
    5. '       ' → logprob: -4.669381618499756
    6. '

' → logprob: -5.294381618499756
    7. ' 
' → logprob: -6.044381618499756
    8. '<|end|>' → logprob: -6.544381618499756
    9. '#' → logprob: -6.794381618499756
    10. 'def' → logprob: -6.794381618499756

Token 899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05813644453883171
    2. '       ' → logprob: -3.558136463165283
    3. '            
' → logprob: -4.683136463165283
    4. '<|end|>' → logprob: -4.933136463165283
    5. '\n' → logprob: -5.808136463165283
    6. '
' → logprob: -5.808136463165283
    7. '        
' → logprob: -6.683136463165283
    8. '\' → logprob: -7.183136463165283
    9. '<|end|>' → logprob: -7.558136463165283
    10. '```' → logprob: -7.933136463165283

Token 900: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20898467302322388
    2. '           ' → logprob: -1.833984613418579
    3. '            
' → logprob: -3.708984613418579
    4. '        
' → logprob: -6.833984851837158
    5. '

' → logprob: -7.208984851837158
    6. '       ' → logprob: -7.333984851837158
    7. '    
' → logprob: -7.708984851837158
    8. 'import' → logprob: -7.958984851837158
    9. '\n' → logprob: -8.833984375
    10. '            

' → logprob: -8.958984375

Token 901: ' To' (ID: 2514)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8633978366851807
    2. 'from' → logprob: -1.2383978366851807
    3. '#' → logprob: -1.4883978366851807
    4. 'top' → logprob: -3.9883978366851807
    5. '
' → logprob: -4.113397598266602
    6. 'import' → logprob: -4.488397598266602
    7. '       ' → logprob: -5.363397598266602
    8. 'def' → logprob: -5.738397598266602
    9. 'visited' → logprob: -5.738397598266602
    10. '   ' → logprob: -6.738397598266602

Token 902: ' handle' (ID: 5318)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5181092023849487
    2. 'implement' → logprob: -2.2681093215942383
    3. 'det' → logprob: -2.6431093215942383
    4. 'do' → logprob: -2.7681093215942383
    5. 'be' → logprob: -3.1431093215942383
    6. '           ' → logprob: -3.5181093215942383
    7. 'solve' → logprob: -4.268109321594238
    8. 'def' → logprob: -4.768109321594238
    9. 'return' → logprob: -5.018109321594238
    10. '       ' → logprob: -5.143109321594238

Token 903: ' this' (ID: 495)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.20431840419769287
    2. 'top' → logprob: -2.7043185234069824
    3. 'self' → logprob: -3.0793185234069824
    4. 'the' → logprob: -3.4543185234069824
    5. ' cycles' → logprob: -3.9543185234069824
    6. 'possible' → logprob: -5.079318523406982
    7. 'this' → logprob: -5.329318523406982
    8. 'constraints' → logprob: -6.079318523406982
    9. '           ' → logprob: -6.454318523406982
    10. ' possible' → logprob: -6.954318523406982

Token 904: ' sophisticated' (ID: 36278)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9678310751914978
    2. ',' → logprob: -1.3428311347961426
    3. '   ' → logprob: -2.2178311347961426
    4. 'def' → logprob: -2.3428311347961426
    5. 'import' → logprob: -2.8428311347961426
    6. '           ' → logprob: -3.5928311347961426
    7. '
' → logprob: -3.9678311347961426
    8. ':' → logprob: -4.467831134796143
    9. '#' → logprob: -4.467831134796143
    10. '        
' → logprob: -4.842831134796143

Token 905: 'ly' (ID: 423)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.8981873989105225
    2. ' approach' → logprob: -1.3981873989105225
    3. ' dynamic' → logprob: -2.0231873989105225
    4. ' logic' → logprob: -2.5231873989105225
    5. ' analysis' → logprob: -3.1481873989105225
    6. ' method' → logprob: -4.023187637329102
    7. ' part' → logprob: -4.648187637329102
    8. '
' → logprob: -4.898187637329102
    9. ' ' → logprob: -4.898187637329102
    10. ' task' → logprob: -5.148187637329102

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.557127833366394
    2. '           ' → logprob: -1.557127833366394
    3. '       ' → logprob: -1.807127833366394
    4. ':' → logprob: -3.5571279525756836
    5. '
' → logprob: -4.557127952575684
    6. '   ' → logprob: -6.182127952575684
    7. ':
' → logprob: -6.557127952575684
    8. ' we' → logprob: -6.682127952575684
    9. '            
' → logprob: -6.682127952575684
    10. '<|end|>' → logprob: -6.807127952575684

Token 907: ' I'll' (ID: 17291)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4712461531162262
    2. ' return' → logprob: -1.8462461233139038
    3. 'return' → logprob: -2.0962462425231934
    4. '#' → logprob: -3.0962462425231934
    5. '       ' → logprob: -3.7212462425231934
    6. 'import' → logprob: -4.471246242523193
    7. ' #' → logprob: -5.846246242523193
    8. '   ' → logprob: -6.221246242523193
    9. 'def' → logprob: -6.471246242523193
    10. 'pass' → logprob: -6.596246242523193

Token 908: ' build' (ID: 3024)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6376994848251343
    2. 'continue' → logprob: -1.3876994848251343
    3. ' return' → logprob: -2.387699604034424
    4. ' continue' → logprob: -2.637699604034424
    5. '           ' → logprob: -4.637699604034424
    6. 'implement' → logprob: -4.887699604034424
    7. '   ' → logprob: -5.012699604034424
    8. 'import' → logprob: -5.262699604034424
    9. 'def' → logprob: -5.262699604034424
    10. '       ' → logprob: -5.387699604034424

Token 909: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9328847527503967
    2. 'a' → logprob: -1.307884693145752
    3. ' a' → logprob: -1.307884693145752
    4. ' the' → logprob: -3.057884693145752
    5. '           ' → logprob: -4.807884693145752
    6. 'an' → logprob: -6.307884693145752
    7. ' an' → logprob: -6.557884693145752
    8. 'def' → logprob: -6.807884693145752
    9. '               ' → logprob: -7.057884693145752
    10. 'top' → logprob: -7.057884693145752

Token 910: ' partial' (ID: 13664)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.654591977596283
    2. 'from' → logprob: -1.7795920372009277
    3. ' top' → logprob: -1.9045920372009277
    4. ' from' → logprob: -3.2795920372009277
    5. 'import' → logprob: -3.5295920372009277
    6. 'def' → logprob: -4.404592037200928
    7. '           ' → logprob: -4.404592037200928
    8. ' queue' → logprob: -4.779592037200928
    9. '```' → logprob: -4.779592037200928
    10. '
' → logprob: -4.904592037200928

Token 911: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.06408701092004776
    2. 'order' → logprob: -3.4390869140625
    3. '_order' → logprob: -3.6890869140625
    4. ' ordering' → logprob: -5.6890869140625
    5. '
' → logprob: -7.8140869140625
    6. '_' → logprob: -8.1890869140625
    7. ' _' → logprob: -8.5640869140625
    8. '   ' → logprob: -8.9390869140625
    9. '       ' → logprob: -9.0640869140625
    10. '	order' → logprob: -9.4390869140625

Token 912: ' graph' (ID: 7465)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 913: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 914: ' find' (ID: 1646)
  Prédit: 'perform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perform' → logprob: -0.07351113855838776
    2. ' perform' → logprob: -3.3235111236572266
    3. 'return' → logprob: -4.073511123657227
    4. 'try' → logprob: -5.198511123657227
    5. 'attempt' → logprob: -5.948511123657227
    6. 'run' → logprob: -6.323511123657227
    7. 'import' → logprob: -6.448511123657227
    8. 'compute' → logprob: -6.823511123657227
    9. 'implement' → logprob: -6.948511123657227
    10. '           ' → logprob: -7.073511123657227

Token 915: ' longest' (ID: 37511)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45717647671699524
    2. ' a' → logprob: -1.3321764469146729
    3. 'the' → logprob: -2.707176446914673
    4. ' the' → logprob: -3.582176446914673
    5. 'top' → logprob: -4.957176685333252
    6. ' top' → logprob: -7.457176685333252
    7. 'all' → logprob: -8.332176208496094
    8. ' its' → logprob: -8.707176208496094
    9. ' an' → logprob: -9.707176208496094
    10. '[top' → logprob: -9.707176208496094

Token 916: ' paths' (ID: 23373)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.4518185257911682
    2. '_path' → logprob: -1.5768184661865234
    3. ' paths' → logprob: -2.7018184661865234
    4. 'path' → logprob: -3.2018184661865234
    5. ' distances' → logprob: -4.451818466186523
    6. 'paths' → logprob: -4.701818466186523
    7. 'distance' → logprob: -4.826818466186523
    8. '_paths' → logprob: -5.076818466186523
    9. ' distance' → logprob: -5.326818466186523
    10. 'dist' → logprob: -5.826818466186523

Token 917: ' DAG' (ID: 157361)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7132847309112549
    2. '.' → logprob: -1.7132847309112549
    3. ' in' → logprob: -2.963284730911255
    4. '            ' → logprob: -2.963284730911255
    5. '               ' → logprob: -3.338284730911255
    6. ' from' → logprob: -3.588284730911255
    7. '       ' → logprob: -3.713284730911255
    8. 'from' → logprob: -3.963284730911255
    9. '            
' → logprob: -3.963284730911255
    10. ',' → logprob: -4.213284492492676

Token 918: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6032626628875732
    2. '
' → logprob: -0.9782626628875732
    3. '.' → logprob: -3.8532626628875732
    4. '<|end|>' → logprob: -4.353262901306152
    5. '            
' → logprob: -4.603262901306152
    6. '       ' → logprob: -5.103262901306152
    7. ',' → logprob: -5.228262901306152
    8. '<|end|>' → logprob: -5.728262901306152
    9. ' and' → logprob: -5.978262901306152
    10. '            ' → logprob: -6.103262901306152

Token 919: ' determine' (ID: 11433)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.017342347651720047
    2. 'compute' → logprob: -4.642342567443848
    3. 'get' → logprob: -6.267342567443848
    4. 'detect' → logprob: -6.642342567443848
    5. 'estimate' → logprob: -6.642342567443848
    6. 'calculate' → logprob: -7.392342567443848
    7. ' determine' → logprob: -7.642342567443848
    8. ' compute' → logprob: -7.892342567443848
    9. 'find' → logprob: -8.017342567443848
    10. 'assign' → logprob: -8.517342567443848

Token 920: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.234098881483078
    2. 'the' → logprob: -1.9840989112854004
    3. ' minimal' → logprob: -3.2340989112854004
    4. 'minimal' → logprob: -4.2340989112854
    5. ' maximal' → logprob: -5.7340989112854
    6. 'max' → logprob: -5.9840989112854
    7. ' longest' → logprob: -6.4840989112854
    8. ' return' → logprob: -6.6090989112854
    9. 'return' → logprob: -6.9840989112854
    10. ' distances' → logprob: -7.1090989112854

Token 921: ' walking' (ID: 15015)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.4679144024848938
    2. '_length' → logprob: -2.342914342880249
    3. 'distance' → logprob: -2.592914342880249
    4. 'length' → logprob: -2.592914342880249
    5. ' distance' → logprob: -2.842914342880249
    6. ' walking' → logprob: -3.717914342880249
    7. '_distance' → logprob: -3.717914342880249
    8. '_walk' → logprob: -5.217914581298828
    9. ' distances' → logprob: -5.467914581298828
    10. ' return' → logprob: -5.842914581298828

Token 922: '.

' (ID: 364)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.9965671300888062
    2. ' distance' → logprob: -1.3715671300888062
    3. 'distance' → logprob: -1.4965671300888062
    4. 'length' → logprob: -2.2465672492980957
    5. '_length' → logprob: -3.7465672492980957
    6. '_distance' → logprob: -3.9965672492980957
    7. '
' → logprob: -5.746567249298096
    8. '_' → logprob: -7.246567249298096
    9. ' ' → logprob: -7.496567249298096
    10. ' _' → logprob: -8.621566772460938

Token 923: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48945727944374084
    2. '
' → logprob: -0.9894572496414185
    3. '       ' → logprob: -4.989457130432129
    4. '<|end|>' → logprob: -5.864457130432129
    5. '            
' → logprob: -5.989457130432129
    6. '```' → logprob: -7.614457130432129
    7. '.' → logprob: -7.989457130432129
    8. '#' → logprob: -8.364457130432129
    9. '               ' → logprob: -8.489457130432129
    10. ' 
' → logprob: -8.614457130432129

Token 924: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5873124599456787
    2. '           ' → logprob: -0.8373124599456787
    3. '            
' → logprob: -5.087312698364258
    4. '       ' → logprob: -5.587312698364258
    5. 'import' → logprob: -7.962312698364258
    6. '        
' → logprob: -8.212312698364258
    7. '    
' → logprob: -8.587312698364258
    8. 'from' → logprob: -8.837312698364258
    9. '
' → logprob: -9.462312698364258
    10. '```' → logprob: -9.962312698364258

Token 925: ' Step' (ID: 22291)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08201012760400772
    2. '
' → logprob: -2.83201003074646
    3. '       ' → logprob: -5.082010269165039
    4. 'from' → logprob: -5.207010269165039
    5. '#' → logprob: -5.582010269165039
    6. 'import' → logprob: -7.082010269165039
    7. '            
' → logprob: -7.082010269165039
    8. '```' → logprob: -7.457010269165039
    9. '   ' → logprob: -7.707010269165039
    10. 'top' → logprob: -7.832010269165039

Token 926: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8512173295021057
    2. ' ' → logprob: -1.726217269897461
    3. ' =' → logprob: -2.101217269897461
    4. ':' → logprob: -2.101217269897461
    5. '1' → logprob: -2.976217269897461
    6. '   ' → logprob: -3.476217269897461
    7. '       ' → logprob: -3.976217269897461
    8. '               ' → logprob: -3.976217269897461
    9. '=' → logprob: -5.351217269897461
    10. '            ' → logprob: -5.601217269897461

Token 927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9004254937171936
    2. ':' → logprob: -2.150425434112549
    3. ' ' → logprob: -2.275425434112549
    4. '           ' → logprob: -2.650425434112549
    5. ' =' → logprob: -2.775425434112549
    6. '=' → logprob: -2.775425434112549
    7. ' by' → logprob: -3.025425434112549
    8. 'by' → logprob: -3.150425434112549
    9. '               ' → logprob: -3.650425434112549
    10. '       ' → logprob: -4.025425434112549

Token 928: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14359575510025024
    2. '           ' → logprob: -2.3935956954956055
    3. ' =' → logprob: -3.6435956954956055
    4. ' :' → logprob: -5.2685956954956055
    5. ':
' → logprob: -5.6435956954956055
    6. '=' → logprob: -6.6435956954956055
    7. '       ' → logprob: -7.2685956954956055
    8. ' is' → logprob: -7.3935956954956055
    9. 'import' → logprob: -7.3935956954956055
    10. '#' → logprob: -7.5185956954956055

Token 929: ' Detect' (ID: 60694)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.40512025356292725
    2. 'from' → logprob: -2.030120372772217
    3. 'order' → logprob: -2.905120372772217
    4. ' topo' → logprob: -3.655120372772217
    5. '#' → logprob: -3.780120372772217
    6. 'self' → logprob: -3.905120372772217
    7. 'import' → logprob: -4.155120372772217
    8. 'dist' → logprob: -4.530120372772217
    9. 'tops' → logprob: -5.030120372772217
    10. ' from' → logprob: -5.030120372772217

Token 930: ' cycles' (ID: 41478)
  Prédit: ' cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycles' → logprob: -0.09268202632665634
    2. 'cycles' → logprob: -2.467682123184204
    3. ' cycle' → logprob: -5.842681884765625
    4. '_cycles' → logprob: -7.467681884765625
    5. 'cycle' → logprob: -8.967681884765625
    6. '   ' → logprob: -10.217681884765625
    7. ' any' → logprob: -10.217681884765625
    8. ' possible' → logprob: -11.092681884765625
    9. '_cycle' → logprob: -11.342681884765625
    10. '
' → logprob: -11.967681884765625

Token 931: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4121123254299164
    2. '
' → logprob: -1.1621123552322388
    3. ' if' → logprob: -4.162112236022949
    4. 'if' → logprob: -5.787112236022949
    5. '            
' → logprob: -6.412112236022949
    6. '  
' → logprob: -7.037112236022949
    7. ':' → logprob: -7.162112236022949
    8. '
' → logprob: -7.662112236022949
    9. '       ' → logprob: -7.662112236022949
    10. ',' → logprob: -8.03711223602295

Token 932: ' which' (ID: 1118)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07372742146253586
    2. 'if' → logprob: -3.3237273693084717
    3. '           ' → logprob: -3.5737273693084717
    4. ' return' → logprob: -5.573727607727051
    5. 'return' → logprob: -6.198727607727051
    6. '#' → logprob: -7.948727607727051
    7. '       ' → logprob: -8.94872760772705
    8. '
' → logprob: -9.07372760772705
    9. ' #' → logprob: -9.32372760772705
    10. '            ' → logprob: -9.32372760772705

Token 933: ' are' (ID: 553)
  Prédit: ' would'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' would' → logprob: -0.47916197776794434
    2. ' return' → logprob: -2.9791619777679443
    3. 'would' → logprob: -2.9791619777679443
    4. '#' → logprob: -3.1041619777679443
    5. ' may' → logprob: -3.3541619777679443
    6. ' means' → logprob: -3.8541619777679443
    7. ' #' → logprob: -3.8541619777679443
    8. '   ' → logprob: -3.9791619777679443
    9. ' will' → logprob: -4.104162216186523
    10. ' are' → logprob: -4.104162216186523

Token 934: ' impossible' (ID: 19786)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.261684775352478
    2. ' invalid' → logprob: -1.261684775352478
    3. 'not' → logprob: -1.386684775352478
    4. 'invalid' → logprob: -2.2616848945617676
    5. ' impossible' → logprob: -3.2616848945617676
    6. 'possible' → logprob: -4.886684894561768
    7. ' present' → logprob: -4.886684894561768
    8. 'present' → logprob: -5.886684894561768
    9. 'cycles' → logprob: -5.886684894561768
    10. ' possible' → logprob: -6.261684894561768

Token 935: ' per' (ID: 777)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03421644866466522
    2. '       ' → logprob: -4.034216403961182
    3. ' if' → logprob: -5.034216403961182
    4. 'if' → logprob: -5.534216403961182
    5. ':' → logprob: -6.409216403961182
    6. '
' → logprob: -6.784216403961182
    7. '.' → logprob: -7.034216403961182
    8. ',' → logprob: -7.409216403961182
    9. ' in' → logprob: -8.40921688079834
    10. '               ' → logprob: -8.65921688079834

Token 936: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.11885922402143478
    2. ' problem' → logprob: -2.36885929107666
    3. 'definition' → logprob: -4.99385929107666
    4. 'the' → logprob: -5.86885929107666
    5. 'spec' → logprob: -6.36885929107666
    6. '#' → logprob: -6.74385929107666
    7. ' the' → logprob: -6.99385929107666
    8. 'def' → logprob: -7.36885929107666
    9. 'constraint' → logprob: -7.36885929107666
    10. ' definition' → logprob: -7.36885929107666

Token 937: ' statement' (ID: 9710)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6139466762542725
    2. '           ' → logprob: -1.3639466762542725
    3. '       ' → logprob: -2.7389466762542725
    4. ',' → logprob: -2.7389466762542725
    5. '<|end|>' → logprob: -3.2389466762542725
    6. '<|end|>' → logprob: -4.488946914672852
    7. '
' → logprob: -4.988946914672852
    8. ':' → logprob: -5.613946914672852
    9. ' if' → logprob: -5.863946914672852
    10. ')' → logprob: -6.238946914672852

Token 938: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9363840222358704
    2. '           ' → logprob: -1.3113839626312256
    3. '<|end|>' → logprob: -1.9363839626312256
    4. '.' → logprob: -2.0613839626312256
    5. '<|end|>' → logprob: -3.5613839626312256
    6. ',' → logprob: -4.186384201049805
    7. '            
' → logprob: -5.186384201049805
    8. '       ' → logprob: -5.436384201049805
    9. ')' → logprob: -5.561384201049805
    10. '#' → logprob: -6.061384201049805

Token 939: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3558064103126526
    2. '           ' → logprob: -1.6058063507080078
    3. '            
' → logprob: -2.605806350708008
    4. '\n' → logprob: -4.855806350708008
    5. '    
' → logprob: -5.105806350708008
    6. '        
' → logprob: -5.855806350708008
    7. '       ' → logprob: -6.230806350708008
    8. '  
' → logprob: -7.230806350708008
    9. '\
' → logprob: -7.480806350708008
    10. '```' → logprob: -7.480806350708008

Token 940: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10915983468294144
    2. 's' (adapté à ' s') → logprob: -2.4841599464416504
    3. '       ' → logprob: -4.98415994644165
    4. ' s' → logprob: -5.23415994644165
    5. '
' → logprob: -5.48415994644165
    6. 'if' → logprob: -6.10915994644165
    7. ' if' → logprob: -6.85915994644165
    8. '            
' → logprob: -8.484159469604492
    9. '        
' → logprob: -9.859159469604492
    10. '```' → logprob: -10.359159469604492

Token 941: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0062296404503285885
    2. 'elf' → logprob: -5.256229877471924
    3. ' =' → logprob: -7.631229877471924
    4. 't' → logprob: -8.756229400634766
    5. '_cc' → logprob: -8.756229400634766
    6. '   ' → logprob: -9.756229400634766
    7. 'c' → logprob: -9.881229400634766
    8. 'CC' → logprob: -10.881229400634766
    9. '=' → logprob: -11.631229400634766
    10. '       ' → logprob: -12.006229400634766

Token 942: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12960952520370483
    2. '=' → logprob: -2.2546095848083496
    3. ' =' → logprob: -4.25460958480835
    4. '_' → logprob: -7.00460958480835
    5. ')' → logprob: -7.50460958480835
    6. '   ' → logprob: -8.754609107971191
    7. '.' → logprob: -8.754609107971191
    8. '=[]' → logprob: -8.754609107971191
    9. '[' → logprob: -9.254609107971191
    10. ']' → logprob: -10.004609107971191

Token 943: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4750983715057373
    2. '=' → logprob: -0.9750983715057373
    3. '()' → logprob: -7.850098609924316
    4. '           ' → logprob: -9.100098609924316
    5. '<|end|>' → logprob: -9.100098609924316
    6. ')' → logprob: -9.225098609924316
    7. '(' → logprob: -9.725098609924316
    8. '[' → logprob: -9.725098609924316
    9. ':' → logprob: -10.350098609924316
    10. '=[]' → logprob: -10.725098609924316

Token 944: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011072466149926186
    2. ' self' → logprob: -4.511072635650635
    3. '           ' → logprob: -10.636072158813477
    4. '[self' → logprob: -14.761072158813477
    5. '(self' → logprob: -16.511072158813477
    6. '   ' → logprob: -17.011072158813477
    7. '	self' → logprob: -17.261072158813477
    8. '               ' → logprob: -18.011072158813477
    9. '       ' → logprob: -18.011072158813477
    10. '=self' → logprob: -18.511072158813477

Token 945: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.002061045728623867
    2. 'graph' → logprob: -6.252060890197754
    3. '.' → logprob: -9.002060890197754
    4. '	graph' → logprob: -12.127060890197754
    5. '
' → logprob: -14.127060890197754
    6. ' .' → logprob: -14.877060890197754
    7. '.user' → logprob: -14.877060890197754
    8. '.find' → logprob: -14.877060890197754
    9. '.s' → logprob: -15.002060890197754
    10. '   ' → logprob: -15.502060890197754

Token 946: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.1782583391759545e-05
    2. '.str' → logprob: -11.125031471252441
    3. 'strong' → logprob: -11.875031471252441
    4. ' .' → logprob: -11.875031471252441
    5. '>.' → logprob: -14.250031471252441
    6. '​.' → logprob: -14.500031471252441
    7. '}.' → logprob: -14.625031471252441
    8. '`.' → logprob: -15.500031471252441
    9. ',strong' → logprob: -15.875031471252441
    10. '.s' → logprob: -16.000032424926758

Token 947: 'strong' (ID: 9851)
  Prédit: 'strong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strong' → logprob: 0.0
    2. ' strongly' → logprob: -17.5
    3. 'strength' → logprob: -23.125
    4. '<strong' → logprob: -23.375
    5. 'str' → logprob: -23.75
    6. ' strong' → logprob: -24.625
    7. ',strong' → logprob: -25.25
    8. 'Strong' → logprob: -25.375
    9. 'strict' → logprob: -25.75
    10. 'streng' → logprob: -26.875

Token 948: 'ly' (ID: 423)
  Prédit: '_connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.00035572313936427236
    2. 'connected' → logprob: -8.25035572052002
    3. 'ly' → logprob: -9.62535572052002
    4. '_' → logprob: -11.25035572052002
    5. '_CONNECTED' → logprob: -11.87535572052002
    6. '_connect' → logprob: -12.75035572052002
    7. 'CONNECTED' → logprob: -13.62535572052002
    8. '_cont' → logprob: -14.50035572052002
    9. 's' → logprob: -14.50035572052002
    10. 'Connected' → logprob: -14.87535572052002

Token 949: '_connected' (ID: 112270)
  Prédit: '_connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.003184363478794694
    2. 'connected' → logprob: -5.7531843185424805
    3. '_connect' → logprob: -13.00318431854248
    4. '_' → logprob: -13.12818431854248
    5. '_CONNECTED' → logprob: -14.00318431854248
    6. ' connected' → logprob: -14.87818431854248
    7. '_cont' → logprob: -15.50318431854248
    8. 'CONNECTED' → logprob: -15.62818431854248
    9. '-connected' → logprob: -15.75318431854248
    10. 'Connected' → logprob: -16.128185272216797

Token 950: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.00284029939211905
    2. 'components' → logprob: -5.877840518951416
    3. '_component' → logprob: -11.252840042114258
    4. 's' → logprob: -11.752840042114258
    5. '_' → logprob: -12.502840042114258
    6. '_nodes' → logprob: -12.502840042114258
    7. '_s' → logprob: -13.377840042114258
    8. 'component' → logprob: -14.002840042114258
    9. ' components' → logprob: -14.127840042114258
    10. '_clusters' → logprob: -14.502840042114258

Token 951: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001721934968372807
    2. '()
' → logprob: -8.75017261505127
    3. '(' → logprob: -12.50017261505127
    4. '()[' → logprob: -12.75017261505127
    5. ' ()' → logprob: -13.37517261505127
    6. '()

' → logprob: -13.50017261505127
    7. '()`' → logprob: -13.75017261505127
    8. '()
' → logprob: -14.12517261505127
    9. '()]' → logprob: -14.75017261505127
    10. '();' → logprob: -15.00017261505127

Token 952: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010918483138084412
    2. '
' → logprob: -5.510918617248535
    3. '       ' → logprob: -5.510918617248535
    4. ' for' → logprob: -6.385918617248535
    5. ' if' → logprob: -8.135918617248535
    6. 'for' → logprob: -8.385918617248535
    7. '<|end|>' → logprob: -8.885918617248535
    8. '            
' → logprob: -9.385918617248535
    9. '   ' → logprob: -10.135918617248535
    10. '        
' → logprob: -10.260918617248535

Token 953: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47402969002723694
    2. '       ' → logprob: -1.9740296602249146
    3. ' for' → logprob: -2.349029779434204
    4. 'for' (adapté à ' for') → logprob: -2.724029779434204
    5. '
' → logprob: -2.849029779434204
    6. ' if' → logprob: -4.474029541015625
    7. 'if' → logprob: -5.099029541015625
    8. '   ' → logprob: -6.724029541015625
    9. '        
' → logprob: -8.349029541015625
    10. '    
' → logprob: -9.224029541015625

Token 954: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020609276369214058
    2. ' s' → logprob: -4.270609378814697
    3. 'component' → logprob: -5.270609378814697
    4. 'comp' → logprob: -7.395609378814697
    5. '   ' → logprob: -7.520609378814697
    6. ' component' → logprob: -9.520608901977539
    7. '    
' → logprob: -11.145608901977539
    8. ' comp' → logprob: -11.520608901977539
    9. '
' → logprob: -11.895608901977539
    10. 'c' → logprob: -12.270608901977539

Token 955: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.017237016931176186
    2. 'c' → logprob: -4.142237186431885
    3. ' in' → logprob: -7.017237186431885
    4. 's' → logprob: -8.392236709594727
    5. '_cc' → logprob: -11.017236709594727
    6. 'CC' → logprob: -11.267236709594727
    7. 'с' → logprob: -11.392236709594727
    8. 'ccb' → logprob: -11.642236709594727
    9. '
' → logprob: -12.392236709594727
    10. 'cci' → logprob: -12.767236709594727

Token 956: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31328916549682617
    2. 'in' → logprob: -1.3132891654968262
    3. 's' → logprob: -11.938289642333984
    4. '   ' → logprob: -12.063289642333984
    5. ' ' → logprob: -12.688289642333984
    6. '	in' → logprob: -12.688289642333984
    7. '  ' → logprob: -13.313289642333984
    8. 'i' → logprob: -13.688289642333984
    9. '[in' → logprob: -13.688289642333984
    10. '<|end|>' → logprob: -13.813289642333984

Token 957: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.747814349073451e-05
    2. ' s' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.125017166137695
    4. '[s' → logprob: -15.625017166137695
    5. '           ' → logprob: -15.875017166137695
    6. '[' → logprob: -17.000017166137695
    7. '(s' → logprob: -17.625017166137695
    8. '       ' → logprob: -18.125017166137695
    9. '{s' → logprob: -18.625017166137695
    10. '_s' → logprob: -18.750017166137695

Token 958: 'cc' (ID: 710)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6432074904441833
    2. ' in' → logprob: -1.3932075500488281
    3. 'in' → logprob: -2.393207550048828
    4. 'if' → logprob: -2.893207550048828
    5. 'cc' → logprob: -3.393207550048828
    6. 'for' → logprob: -4.393207550048828
    7. '   ' → logprob: -4.768207550048828
    8. 'f' → logprob: -5.393207550048828
    9. 'sc' → logprob: -5.643207550048828
    10. ' if' → logprob: -5.768207550048828

Token 959: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22367681562900543
    2. ' in' → logprob: -2.348676919937134
    3. 'if' → logprob: -2.848676919937134
    4. 'in' → logprob: -4.223676681518555
    5. ':' → logprob: -4.348676681518555
    6. ' if' → logprob: -4.973676681518555
    7. ':
' → logprob: -5.098676681518555
    8. '           ' → logprob: -5.598676681518555
    9. '       ' → logprob: -6.723676681518555
    10. '[' → logprob: -7.848676681518555

Token 960: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6095502376556396
    2. ':
' → logprob: -1.4845502376556396
    3. '               ' → logprob: -1.7345502376556396
    4. '           ' → logprob: -3.1095502376556396
    5. '<|end|>' → logprob: -6.109550476074219
    6. '[' → logprob: -6.609550476074219
    7. '       ' → logprob: -7.109550476074219
    8. ' if' → logprob: -7.484550476074219
    9. '<|end|>' → logprob: -7.859550476074219
    10. 'if' → logprob: -7.984550476074219

Token 961: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002278245985507965
    2. ':' → logprob: -6.3772783279418945
    3. '<|end|>' → logprob: -8.127278327941895
    4. '           ' → logprob: -9.627278327941895
    5. '	           ' → logprob: -10.002278327941895
    6. '<|end|>' → logprob: -10.377278327941895
    7. '                   ' → logprob: -10.752278327941895
    8. '[' → logprob: -11.002278327941895
    9. '		       ' → logprob: -11.127278327941895
    10. ',' → logprob: -11.252278327941895

Token 962: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08527370542287827
    2. '               ' → logprob: -2.5852737426757812
    3. 'if' (adapté à ' if') → logprob: -5.710273742675781
    4. ' if' → logprob: -6.835273742675781
    5. '                       ' → logprob: -7.210273742675781
    6. '   ' → logprob: -7.460273742675781
    7. '		           ' → logprob: -8.585273742675781
    8. '<|end|>' → logprob: -8.835273742675781
    9. '	               ' → logprob: -9.585273742675781
    10. '           ' → logprob: -9.835273742675781

Token 963: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008617408573627472
    2. ' len' → logprob: -4.758617401123047
    3. '                   ' → logprob: -13.258617401123047
    4. '(len' → logprob: -14.383617401123047
    5. '               ' → logprob: -14.633617401123047
    6. '   ' → logprob: -16.508617401123047
    7. '	len' → logprob: -17.508617401123047
    8. '           ' → logprob: -18.383617401123047
    9. ' ' → logprob: -18.633617401123047
    10. '                       ' → logprob: -19.258617401123047

Token 964: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -11.750009536743164
    3. '(
' → logprob: -14.000009536743164
    4. 's' → logprob: -14.500009536743164
    5. ' (' → logprob: -16.500009536743164
    6. '>' → logprob: -19.000009536743164
    7. '(set' → logprob: -19.500009536743164
    8. '{s' → logprob: -19.625009536743164
    9. '   ' → logprob: -19.875009536743164
    10. ' s' → logprob: -20.625009536743164

Token 965: 'cc' (ID: 710)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0297387838363647
    2. '(s' → logprob: -1.5297387838363647
    3. 'cc' → logprob: -1.5297387838363647
    4. 's' → logprob: -2.4047389030456543
    5. ')' → logprob: -3.0297389030456543
    6. ' >' → logprob: -3.2797389030456543
    7. ')>' → logprob: -4.654738903045654
    8. ' s' → logprob: -5.029738903045654
    9. '(cc' → logprob: -5.404738903045654
    10. 'c' → logprob: -5.654738903045654

Token 966: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048113275319337845
    2. ')>' → logprob: -3.4231133460998535
    3. '>' → logprob: -4.5481133460998535
    4. ' >' → logprob: -5.6731133460998535
    5. ' )' → logprob: -8.798112869262695
    6. '[' → logprob: -8.923112869262695
    7. '                   ' → logprob: -11.548112869262695
    8. '   ' → logprob: -12.298112869262695
    9. '
' → logprob: -12.548112869262695
    10. ']' → logprob: -12.548112869262695

Token 967: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31383392214775085
    2. ' >' → logprob: -1.3138339519500732
    3. ')' → logprob: -8.188834190368652
    4. ')>' → logprob: -8.688834190368652
    5. '[' → logprob: -10.188834190368652
    6. '()>' → logprob: -10.438834190368652
    7. '   ' → logprob: -11.063834190368652
    8. '<|end|>' → logprob: -11.438834190368652
    9. '
' → logprob: -11.938834190368652
    10. '>
' → logprob: -12.813834190368652

Token 968: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.62500286102295
    4. '   ' → logprob: -15.25000286102295
    5. '>' → logprob: -17.375003814697266
    6. '=' → logprob: -17.875003814697266
    7. '
' → logprob: -19.000003814697266
    8. '۱' → logprob: -19.000003814697266
    9. '[' → logprob: -19.250003814697266
    10. '```' → logprob: -19.375003814697266

Token 969: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -15.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '۱' → logprob: -19.750001907348633
    6. '[' → logprob: -20.000001907348633
    7. '0' → logprob: -20.000001907348633
    8. '>' → logprob: -20.375001907348633
    9. '{' → logprob: -20.500001907348633
    10. '```' → logprob: -21.125001907348633

Token 970: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25679972767829895
    2. ':
' → logprob: -1.5067996978759766
    3. ' or' → logprob: -5.756799697875977
    4. '                   ' → logprob: -7.506799697875977
    5. '               ' → logprob: -7.756799697875977
    6. ':return' → logprob: -7.881799697875977
    7. '                       ' → logprob: -9.506799697875977
    8. 'and' → logprob: -9.631799697875977
    9. 'or' → logprob: -9.756799697875977
    10. '           ' → logprob: -9.881799697875977

Token 971: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030587656423449516
    2. ':
' → logprob: -4.405587673187256
    3. ':' → logprob: -4.530587673187256
    4. '                       ' → logprob: -5.530587673187256
    5. '               ' → logprob: -5.905587673187256
    6. ' or' → logprob: -9.030587196350098
    7. ':return' → logprob: -9.030587196350098
    8. '           ' → logprob: -10.030587196350098
    9. '                           ' → logprob: -10.655587196350098
    10. '                    ' → logprob: -10.655587196350098

Token 972: ' raise' (ID: 9338)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8292005658149719
    2. ' raise' → logprob: -1.3292005062103271
    3. 'return' → logprob: -1.5792005062103271
    4. '                   ' → logprob: -2.829200506210327
    5. 'raise' (adapté à ' raise') → logprob: -3.454200506210327
    6. '                       ' → logprob: -6.579200744628906
    7. '
' → logprob: -7.829200744628906
    8. '   ' → logprob: -8.829200744628906
    9. '               ' → logprob: -9.454200744628906
    10. '	raise' → logprob: -10.329200744628906

Token 973: ' Runtime' (ID: 17606)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.11136442422866821
    2. ' Value' → logprob: -2.8613643646240234
    3. 'Exception' → logprob: -3.3613643646240234
    4. ' Exception' → logprob: -4.361364364624023
    5. 'Runtime' → logprob: -7.361364364624023
    6. ' Runtime' → logprob: -9.111364364624023
    7. '(Value' → logprob: -13.861364364624023
    8. 'Assertion' → logprob: -14.611364364624023
    9. '_Value' → logprob: -15.236364364624023
    10. '_value' → logprob: -16.361364364624023

Token 974: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.463036435074173e-05
    2. 'rror' → logprob: -11.750024795532227
    3. 'Warning' → logprob: -12.125024795532227
    4. '
' → logprob: -12.250024795532227
    5. 'E' → logprob: -13.000024795532227
    6. 'error' → logprob: -14.625024795532227
    7. '!' → logprob: -15.000024795532227
    8. 'Exception' → logprob: -15.375024795532227
    9. '```' → logprob: -15.375024795532227
    10. 'ERROR' → logprob: -15.500024795532227

Token 975: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.009783949702978134
    2. '(' → logprob: -4.759783744812012
    3. '('' → logprob: -6.759783744812012
    4. '(
' → logprob: -11.634783744812012
    5. '(f' → logprob: -15.509783744812012
    6. '()' → logprob: -16.384784698486328
    7. '("")' → logprob: -17.509784698486328
    8. '("("' → logprob: -17.509784698486328
    9. '(

' → logprob: -17.759784698486328
    10. '"' → logprob: -17.884784698486328

Token 976: 'Cycles' (ID: 147556)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0320030450820923
    2. 'Cycle' → logprob: -1.1570030450820923
    3. '"C' → logprob: -2.9070029258728027
    4. 'Constraints' → logprob: -3.0320029258728027
    5. 'Constraint' → logprob: -3.4070029258728027
    6. ' Cycle' → logprob: -3.4070029258728027
    7. ''' → logprob: -3.5320029258728027
    8. 'Circular' → logprob: -3.6570029258728027
    9. 'Invalid' → logprob: -3.9070029258728027
    10. 'Graph' → logprob: -4.157002925872803

Token 977: ' detected' (ID: 28357)
  Prédit: ' detected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detected' → logprob: -0.005180154927074909
    2. 'det' → logprob: -6.130180358886719
    3. ' exist' → logprob: -7.005180358886719
    4. ' found' → logprob: -7.255180358886719
    5. ' are' → logprob: -7.380180358886719
    6. ' in' → logprob: -8.005180358886719
    7. ' present' → logprob: -8.630180358886719
    8. ' not' → logprob: -8.630180358886719
    9. '_detect' → logprob: -10.755180358886719
    10. 'Detected' → logprob: -10.880180358886719

Token 978: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051259979605674744
    2. '")' → logprob: -3.051259994506836
    3. ')' → logprob: -6.676259994506836
    4. 'in' → logprob: -7.176259994506836
    5. ')")' → logprob: -8.551259994506836
    6. ',' → logprob: -9.176259994506836
    7. '!")' → logprob: -9.301259994506836
    8. ' ")' → logprob: -9.426259994506836
    9. ' )' → logprob: -9.801259994506836
    10. ':' → logprob: -9.926259994506836

Token 979: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.15686877071857452
    2. 'constraints' → logprob: -2.0318686962127686
    3. ' dependencies' → logprob: -5.156868934631348
    4. ' dependency' → logprob: -6.031868934631348
    5. ' constraint' → logprob: -6.406868934631348
    6. ' the' → logprob: -6.656868934631348
    7. 'constraint' → logprob: -7.031868934631348
    8. 'dependency' → logprob: -7.281868934631348
    9. 'dependencies' → logprob: -7.281868934631348
    10. 'the' → logprob: -7.781868934631348

Token 980: ' -' (ID: 533)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.017729708924889565
    2. ')")' → logprob: -5.017729759216309
    3. '!")' → logprob: -5.392729759216309
    4. ')' → logprob: -5.517729759216309
    5. '           ' → logprob: -6.892729759216309
    6. '.")' → logprob: -7.392729759216309
    7. ',' → logprob: -7.767729759216309
    8. '               ' → logprob: -9.142729759216309
    9. '}")' → logprob: -9.517729759216309
    10. '")
' → logprob: -9.767729759216309

Token 981: ' no' (ID: 860)
  Prédit: ' invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' invalid' → logprob: -0.11336930841207504
    2. 'invalid' → logprob: -3.6133692264556885
    3. ' impossible' → logprob: -3.6133692264556885
    4. ' not' → logprob: -3.7383692264556885
    5. ' cannot' → logprob: -5.113369464874268
    6. ' visit' → logprob: -5.488369464874268
    7. ' visiting' → logprob: -5.613369464874268
    8. '")' → logprob: -5.613369464874268
    9. ' ordering' → logprob: -5.988369464874268
    10. ' no' → logprob: -6.238369464874268

Token 982: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.0036077939439564943
    2. 'valid' → logprob: -6.128607749938965
    3. ' feasible' → logprob: -7.378607749938965
    4. ' possible' → logprob: -7.503607749938965
    5. ' solution' → logprob: -8.503607749938965
    6. '_valid' → logprob: -11.253607749938965
    7. 'possible' → logprob: -11.378607749938965
    8. ' viable' → logprob: -11.753607749938965
    9. '	valid' → logprob: -13.253607749938965
    10. 'solution' → logprob: -13.503607749938965

Token 983: ' visiting' (ID: 18798)
  Prédit: ' visiting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visiting' → logprob: -0.8779819011688232
    2. ' ordering' → logprob: -1.5029819011688232
    3. ' visit' → logprob: -2.1279819011688232
    4. ' order' → logprob: -2.5029819011688232
    5. ' sequence' → logprob: -2.7529819011688232
    6. ' solution' → logprob: -3.0029819011688232
    7. ' visitation' → logprob: -3.5029819011688232
    8. ' path' → logprob: -5.127982139587402
    9. ' top' → logprob: -5.877982139587402
    10. ' schedule' → logprob: -6.377982139587402

Token 984: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.061736512929201126
    2. ' sequence' → logprob: -3.436736583709717
    3. 'order' → logprob: -3.686736583709717
    4. 'sequence' → logprob: -6.061736583709717
    5. ' ordering' → logprob: -8.186736106872559
    6. 'ordering' → logprob: -11.061736106872559
    7. '	order' → logprob: -12.186736106872559
    8. ' ' → logprob: -12.561736106872559
    9. ' schedule' → logprob: -12.811736106872559
    10. '_order' → logprob: -12.936736106872559

Token 985: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014979418367147446
    2. ' possible' → logprob: -5.139979362487793
    3. '.")' → logprob: -5.764979362487793
    4. ')")' → logprob: -6.264979362487793
    5. '")
' → logprob: -6.514979362487793
    6. '}")' → logprob: -7.389979362487793
    7. '!")' → logprob: -7.389979362487793
    8. 'possible' → logprob: -7.639979362487793
    9. ')' → logprob: -8.389979362487793
    10. ' exists' → logprob: -9.139979362487793

Token 986: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03567852824926376
    2. '           ' → logprob: -3.6606786251068115
    3. '<|end|>' → logprob: -5.535678386688232
    4. '       ' → logprob: -6.160678386688232
    5. '            
' → logprob: -6.660678386688232
    6. '    
' → logprob: -7.660678386688232
    7. '        
' → logprob: -7.785678386688232
    8. '  
' → logprob: -8.41067886352539
    9. ' 
' → logprob: -8.91067886352539
    10. ')' → logprob: -9.28567886352539

Token 987: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048363301903009415
    2. '            
' → logprob: -3.923363208770752
    3. '           ' → logprob: -4.423363208770752
    4. '       ' → logprob: -5.423363208770752
    5. '        
' → logprob: -5.548363208770752
    6. '    
' → logprob: -6.423363208770752
    7. 'from' → logprob: -6.673363208770752
    8. 'top' → logprob: -7.048363208770752
    9. '#' (adapté à ' #') → logprob: -7.548363208770752
    10. '```' → logprob: -7.798363208770752

Token 988: ' Step' (ID: 22291)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8240025043487549
    2. 'top' → logprob: -0.9490025043487549
    3. '           ' → logprob: -2.699002504348755
    4. 'order' → logprob: -3.199002504348755
    5. '#' → logprob: -3.574002504348755
    6. 'dist' → logprob: -4.199002265930176
    7. 'pos' → logprob: -4.699002265930176
    8. 'import' → logprob: -5.699002265930176
    9. '       ' → logprob: -6.324002265930176
    10. 'distance' → logprob: -6.449002265930176

Token 989: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36376532912254333
    2. '           ' → logprob: -1.3637653589248657
    3. '1' → logprob: -3.488765239715576
    4. '            ' → logprob: -4.863765239715576
    5. '    ' → logprob: -5.738765239715576
    6. '   ' → logprob: -5.988765239715576
    7. '               ' → logprob: -6.613765239715576
    8. '       ' → logprob: -6.738765239715576
    9. ' #' → logprob: -7.488765239715576
    10. '        ' → logprob: -7.613765239715576

Token 990: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015790171455591917
    2. '2' → logprob: -7.3765788078308105
    3. '           ' → logprob: -8.251579284667969
    4. '0' → logprob: -8.501579284667969
    5. ':' → logprob: -9.126579284667969
    6. 'step' → logprob: -9.126579284667969
    7. '#' → logprob: -9.751579284667969
    8. '   ' → logprob: -9.876579284667969
    9. '
' → logprob: -10.251579284667969
    10. '```' → logprob: -10.876579284667969

Token 991: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02696102298796177
    2. ':' → logprob: -3.776961088180542
    3. '
' → logprob: -6.276960849761963
    4. '       ' → logprob: -6.901960849761963
    5. '   ' → logprob: -8.776961326599121
    6. ',' → logprob: -9.151961326599121
    7. '#' → logprob: -9.401961326599121
    8. '            ' → logprob: -9.401961326599121
    9. ' =' → logprob: -9.651961326599121
    10. ':
' → logprob: -10.026961326599121

Token 992: ' Top' (ID: 8022)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7967525124549866
    2. 'top' → logprob: -1.1717524528503418
    3. 'order' → logprob: -2.671752452850342
    4. 'import' → logprob: -3.296752452850342
    5. 'Perform' → logprob: -3.796752452850342
    6. 'dist' → logprob: -4.046752452850342
    7. ' from' → logprob: -4.046752452850342
    8. '#' → logprob: -4.046752452850342
    9. ' topo' → logprob: -4.296752452850342
    10. 'Calculate' → logprob: -5.296752452850342

Token 993: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.015672992914915085
    2. 'ology' → logprob: -5.6406731605529785
    3. '```' → logprob: -5.6406731605529785
    4. '_' → logprob: -5.7656731605529785
    5. 'o' → logprob: -6.3906731605529785
    6. 'ic' → logprob: -7.1406731605529785
    7. '
' → logprob: -7.2656731605529785
    8. 'olog' → logprob: -7.7656731605529785
    9. '           ' → logprob: -8.01567268371582
    10. 'ologic' → logprob: -8.26567268371582

Token 994: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.26788824796676636
    2. '_sort' → logprob: -1.7678883075714111
    3. ' sort' → logprob: -2.767888307571411
    4. 'Sort' → logprob: -6.517888069152832
    5. '_' → logprob: -10.392888069152832
    6. ' sorting' → logprob: -12.517888069152832
    7. '.sort' → logprob: -12.767888069152832
    8. 'sorting' → logprob: -13.517888069152832
    9. '-sort' → logprob: -13.767888069152832
    10. '
' → logprob: -14.142888069152832

Token 995: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6021128296852112
    2. '           ' → logprob: -0.9771128296852112
    3. 'def' → logprob: -3.3521127700805664
    4. '()
' → logprob: -3.7271127700805664
    5. 'from' → logprob: -5.977112770080566
    6. '()' → logprob: -6.227112770080566
    7. '(self' → logprob: -6.602112770080566
    8. 'self' → logprob: -6.602112770080566
    9. 'result' → logprob: -6.852112770080566
    10. '       ' → logprob: -6.852112770080566

Token 996: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028594769537448883
    2. '
' → logprob: -3.903594732284546
    3. '       ' → logprob: -5.028594970703125
    4. 'def' → logprob: -7.528594970703125
    5. 'from' → logprob: -7.778594970703125
    6. '   ' → logprob: -8.028594970703125
    7. '            
' → logprob: -10.153594970703125
    8. ',' → logprob: -10.653594970703125
    9. '```' → logprob: -10.778594970703125
    10. ' from' → logprob: -10.778594970703125

Token 997: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.9891746640205383
    2. '       ' → logprob: -1.2391746044158936
    3. '           ' → logprob: -1.4891746044158936
    4. 'def' → logprob: -3.2391746044158936
    5. 'queue' → logprob: -3.4891746044158936
    6. '
' → logprob: -4.239174842834473
    7. '   ' → logprob: -4.489174842834473
    8. 'visited' → logprob: -5.364174842834473
    9. 'order' → logprob: -5.489174842834473
    10. ' from' → logprob: -5.614174842834473

Token 998: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0024861192796379328
    2. ' collections' → logprob: -6.002486228942871
    3. 'heap' → logprob: -11.502486228942871
    4. 'queue' → logprob: -15.127486228942871
    5. 'collection' → logprob: -16.877485275268555
    6. 'typing' → logprob: -18.127485275268555
    7. ' heap' → logprob: -18.377485275268555
    8. 'collect' → logprob: -19.127485275268555
    9. 'deque' → logprob: -19.877485275268555
    10. 'copy' → logprob: -19.877485275268555

Token 999: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.004415636416524649
    2. 'def' → logprob: -7.004415512084961
    3. '.' → logprob: -7.379415512084961
    4. '[
' → logprob: -8.004415512084961
    5. '.import' → logprob: -8.129415512084961
    6. 'from' → logprob: -8.379415512084961
    7. 'abc' → logprob: -8.504415512084961
    8. '```' → logprob: -8.504415512084961
    9. 'python' → logprob: -8.754415512084961
    10. 'to' → logprob: -9.004415512084961

Token 1000: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.03805456683039665
    2. ' deque' → logprob: -3.2880544662475586
    3. 'collections' → logprob: -12.038054466247559
    4. 'import' → logprob: -12.163054466247559
    5. '```' → logprob: -14.163054466247559
    6. 'queue' → logprob: -14.288054466247559
    7. 'de' → logprob: -14.413054466247559
    8. ' defaultdict' → logprob: -17.038055419921875
    9. 'Deque' → logprob: -17.413055419921875
    10. '
' → logprob: -17.913055419921875

Token 1001: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0029565428849309683
    2. '           ' → logprob: -6.002956390380859
    3. '            
' → logprob: -8.12795639038086
    4. '
' → logprob: -10.00295639038086
    5. '

' → logprob: -10.00295639038086
    6. '       ' → logprob: -10.00295639038086
    7. '    
' → logprob: -11.50295639038086
    8. '        
' → logprob: -11.50295639038086
    9. 'queue' → logprob: -12.00295639038086
    10. '   ' → logprob: -12.12795639038086

Token 1002: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03932059556245804
    2. '           ' → logprob: -3.289320707321167
    3. '            
' → logprob: -6.914320468902588
    4. '       ' → logprob: -9.789320945739746
    5. '    
' → logprob: -9.914320945739746
    6. '        
' → logprob: -10.289320945739746
    7. '
' → logprob: -10.414320945739746
    8. '

' → logprob: -10.414320945739746
    9. 'top' → logprob: -10.539320945739746
    10. 'queue' → logprob: -10.914320945739746

Token 1003: ' q' (ID: 2335)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13257983326911926
    2. '           ' → logprob: -2.257579803466797
    3. 'queue' → logprob: -4.257579803466797
    4. '            
' → logprob: -6.257579803466797
    5. '       ' → logprob: -6.507579803466797
    6. 'q' (adapté à ' q') → logprob: -7.132579803466797
    7. '   ' → logprob: -8.132579803466797
    8. ' queue' → logprob: -8.382579803466797
    9. 'def' → logprob: -8.632579803466797
    10. '        
' → logprob: -8.757579803466797

Token 1004: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031154990196228
    2. '=' → logprob: -1.9103115797042847
    3. '=[]' → logprob: -9.535311698913574
    4. '=[]
' → logprob: -12.410311698913574
    5. '.' → logprob: -13.160311698913574
    6. 'u' → logprob: -13.535311698913574
    7. ' =
' → logprob: -13.785311698913574
    8. ' ' → logprob: -14.035311698913574
    9. 'ue' → logprob: -14.410311698913574
    10. ',' → logprob: -14.535311698913574

Token 1005: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.12692904472351074
    2. ' deque' → logprob: -2.1269290447235107
    3. 'Deque' → logprob: -14.00192928314209
    4. 'collections' → logprob: -16.376928329467773
    5. 'de' → logprob: -16.876928329467773
    6. '   ' → logprob: -19.001928329467773
    7. ' collections' → logprob: -19.376928329467773
    8. '	de' → logprob: -19.501928329467773
    9. ' ' → logprob: -20.626928329467773
    10. 'dq' → logprob: -21.251928329467773

Token 1006: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.042813390493392944
    2. '()
' → logprob: -3.292813301086426
    3. '([' → logprob: -5.417813301086426
    4. '(' → logprob: -8.917813301086426
    5. '(range' → logprob: -9.667813301086426
    6. '()

' → logprob: -10.042813301086426
    7. '()\' → logprob: -10.917813301086426
    8. '([
' → logprob: -11.042813301086426
    9. '([(' → logprob: -11.042813301086426
    10. '([])
' → logprob: -11.917813301086426

Token 1007: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8328016996383667
    2. '           ' → logprob: -0.9578016996383667
    3. 'for' → logprob: -1.7078016996383667
    4. '            
' → logprob: -9.957801818847656
    5. '
' → logprob: -10.207801818847656
    6. '[' → logprob: -10.457801818847656
    7. '0' → logprob: -11.707801818847656
    8. '       ' → logprob: -11.957801818847656
    9. '	for' → logprob: -12.207801818847656
    10. '```' → logprob: -12.332801818847656

Token 1008: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06237511336803436
    2. ' for' → logprob: -2.812375068664551
    3. 'in' (adapté à ' in') → logprob: -8.06237506866455
    4. '   ' → logprob: -10.56237506866455
    5. 'visited' → logprob: -10.68737506866455
    6. 'dist' → logprob: -11.31237506866455
    7. '       ' → logprob: -11.93737506866455
    8. ' in' → logprob: -11.93737506866455
    9. '           ' → logprob: -12.18737506866455
    10. 'top' → logprob: -12.31237506866455

Token 1009: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.05571991205215454
    2. '_' → logprob: -2.9307198524475098
    3. '_q' → logprob: -7.93071985244751
    4. '_queue' → logprob: -8.930720329284668
    5. 'q' → logprob: -9.430720329284668
    6. ' _' → logprob: -9.555720329284668
    7. '_de' → logprob: -9.930720329284668
    8. '_depth' → logprob: -10.055720329284668
    9. '```' → logprob: -10.805720329284668
    10. ')_' → logprob: -11.180720329284668

Token 1010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03567737713456154
    2. '=' → logprob: -3.410677433013916
    3. '[' → logprob: -7.035677433013916
    4. '[:]' → logprob: -7.660677433013916
    5. ')' → logprob: -8.660676956176758
    6. '<|end|>' → logprob: -8.785676956176758
    7. ' =[' → logprob: -9.160676956176758
    8. '=[' → logprob: -9.410676956176758
    9. ' ' → logprob: -10.785676956176758
    10. '=[]' → logprob: -11.035676956176758

Token 1011: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023261552676558495
    2. ' self' → logprob: -3.773261547088623
    3. '[self' → logprob: -11.148262023925781
    4. '           ' → logprob: -14.398262023925781
    5. '   ' → logprob: -14.648262023925781
    6. '[' → logprob: -15.023262023925781
    7. 'list' → logprob: -15.398262023925781
    8. '(self' → logprob: -16.64826202392578
    9. ' [' → logprob: -16.77326202392578
    10. '	self' → logprob: -17.39826202392578

Token 1012: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.18034233152866364
    2. 'self' → logprob: -2.555342435836792
    3. '[self' → logprob: -3.430342435836792
    4. 'graph' → logprob: -4.055342197418213
    5. '[:]' → logprob: -4.305342197418213
    6. '.copy' → logprob: -4.930342197418213
    7. '[:' → logprob: -5.180342197418213
    8. '[' → logprob: -5.680342197418213
    9. '.' → logprob: -6.055342197418213
    10. ' self' → logprob: -6.930342197418213

Token 1013: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -5.478889215737581e-05
    2. 'in' → logprob: -10.875054359436035
    3. '.copy' → logprob: -10.875054359436035
    4. ' .' → logprob: -11.750054359436035
    5. '[in' → logprob: -13.125054359436035
    6. '.ad' → logprob: -13.500054359436035
    7. '[' → logprob: -14.000054359436035
    8. '.' → logprob: -14.000054359436035
    9. '.q' → logprob: -14.250054359436035
    10. '
' → logprob: -14.250054359436035

Token 1014: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -13.625005722045898
    3. 'degree' → logprob: -13.875005722045898
    4. '_count' → logprob: -13.875005722045898
    5. '   ' → logprob: -14.625005722045898
    6. '_depth' → logprob: -15.125005722045898
    7. 'Degree' → logprob: -15.625005722045898
    8. 'egree' → logprob: -15.750005722045898
    9. '_de' → logprob: -15.750005722045898
    10. '-degree' → logprob: -16.0000057220459

Token 1015: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.5850905179977417
    2. '.copy' → logprob: -0.8350905179977417
    3. '[:' → logprob: -4.710090637207031
    4. '
' → logprob: -10.335090637207031
    5. '[' → logprob: -10.585090637207031
    6. 'copy' → logprob: -10.835090637207031
    7. '.' → logprob: -11.210090637207031
    8. '           ' → logprob: -12.460090637207031
    9. '=' → logprob: -12.835090637207031
    10. '.deepcopy' → logprob: -13.085090637207031

Token 1016: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4255598783493042
    2. ']' → logprob: -1.5505598783493042
    3. ')
' → logprob: -2.1755599975585938
    4. ')' → logprob: -4.175559997558594
    5. '])
' → logprob: -6.175559997558594
    6. '])' → logprob: -6.675559997558594
    7. '
' → logprob: -6.800559997558594
    8. '           ' → logprob: -7.800559997558594
    9. '()
' → logprob: -8.925559997558594
    10. '0' → logprob: -9.175559997558594

Token 1017: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9292327165603638
    2. 'for' → logprob: -1.1792327165603638
    3. '
' → logprob: -1.4292327165603638
    4. '           ' → logprob: -2.929232597351074
    5. '	for' → logprob: -6.679232597351074
    6. ' 
' → logprob: -6.804232597351074
    7. '            
' → logprob: -7.179232597351074
    8. '```' → logprob: -7.929232597351074
    9. '  
' → logprob: -8.054232597351074
    10. '   ' → logprob: -8.304232597351074

Token 1018: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4834243357181549
    2. ' for' → logprob: -0.9834243059158325
    3. '           ' → logprob: -4.733424186706543
    4. '	for' → logprob: -8.983424186706543
    5. '       ' → logprob: -9.108424186706543
    6. '
' → logprob: -9.233424186706543
    7. ' 
' → logprob: -9.608424186706543
    8. '   ' → logprob: -9.858424186706543
    9. '            
' → logprob: -10.608424186706543
    10. '```' → logprob: -11.358424186706543

Token 1019: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8161006569862366
    2. 'v' → logprob: -1.0661005973815918
    3. 'u' → logprob: -2.191100597381592
    4. ' i' → logprob: -3.066100597381592
    5. ' v' → logprob: -3.191100597381592
    6. ' u' → logprob: -4.316100597381592
    7. '   ' → logprob: -8.06610107421875
    8. ' node' → logprob: -8.56610107421875
    9. 'node' → logprob: -9.19110107421875
    10. ' ' → logprob: -12.44110107421875

Token 1020: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043026361614465714
    2. 'in' → logprob: -3.1680264472961426
    3. '1' → logprob: -11.043025970458984
    4. '
' → logprob: -12.668025970458984
    5. 'i' → logprob: -13.668025970458984
    6. 'n' → logprob: -13.668025970458984
    7. '[' → logprob: -14.043025970458984
    8. ' ' → logprob: -14.293025970458984
    9. '0' → logprob: -14.293025970458984
    10. 'import' → logprob: -14.543025970458984

Token 1021: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061969030648469925
    2. ' range' → logprob: -2.811969041824341
    3. '1' → logprob: -14.186968803405762
    4. '(range' → logprob: -15.186968803405762
    5. ' ' → logprob: -15.561968803405762
    6. '   ' → logprob: -16.311969757080078
    7. '	range' → logprob: -16.936969757080078
    8. '(' → logprob: -17.186969757080078
    9. '[' → logprob: -17.561969757080078
    10. '
' → logprob: -18.061969757080078

Token 1022: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011164778843522072
    2. '(' → logprob: -4.636164665222168
    3. '           ' → logprob: -6.636164665222168
    4. ' ' → logprob: -10.136164665222168
    5. '
' → logprob: -10.886164665222168
    6. '               ' → logprob: -11.261164665222168
    7. ',' → logprob: -11.386164665222168
    8. '   ' → logprob: -12.136164665222168
    9. '                   ' → logprob: -12.511164665222168
    10. '0' → logprob: -14.386164665222168

Token 1023: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '
' → logprob: -16.750001907348633
    5. '(' → logprob: -17.500001907348633
    6. ' ' → logprob: -18.375001907348633
    7. ')' → logprob: -19.500001907348633
    8. '       ' → logprob: -19.875001907348633
    9. '2' → logprob: -20.125001907348633
    10. '           ' → logprob: -20.375001907348633

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024846551241353154
    2. ' ,' → logprob: -8.375248908996582
    3. ',
' → logprob: -11.875248908996582
    4. ',len' → logprob: -12.500248908996582
    5. ',n' → logprob: -12.500248908996582
    6. '
' → logprob: -13.250248908996582
    7. ',self' → logprob: -15.000248908996582
    8. '‌,' → logprob: -15.375248908996582
    9. ',i' → logprob: -15.750248908996582
    10. ',int' → logprob: -16.250247955322266

Token 1025: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.542423165636137e-05
    2. '           ' → logprob: -9.875085830688477
    3. ' self' → logprob: -10.375085830688477
    4. '               ' → logprob: -14.000085830688477
    5. 'len' → logprob: -14.500085830688477
    6. '(self' → logprob: -14.875085830688477
    7. '                   ' → logprob: -15.000085830688477
    8. 'n' → logprob: -15.500085830688477
    9. '[self' → logprob: -15.875085830688477
    10. '   ' → logprob: -16.250085830688477

Token 1026: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0006578696193173528
    2. 'n' → logprob: -7.37565803527832
    3. '+' → logprob: -11.00065803527832
    4. '.user' → logprob: -12.50065803527832
    5. '+n' → logprob: -12.50065803527832
    6. '.' → logprob: -13.25065803527832
    7. '.m' → logprob: -14.00065803527832
    8. '   ' → logprob: -14.37565803527832
    9. '.graph' → logprob: -14.50065803527832
    10. '_n' → logprob: -14.75065803527832

Token 1027: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024769625160843134
    2. ' +' → logprob: -6.002477169036865
    3. '+
' → logprob: -14.627476692199707
    4. '
' → logprob: -16.252477645874023
    5. '＋' → logprob: -16.252477645874023
    6. '()+' → logprob: -16.252477645874023
    7. '   ' → logprob: -16.502477645874023
    8. ')+' → logprob: -16.627477645874023
    9. '1' → logprob: -17.002477645874023
    10. '```' → logprob: -17.127477645874023

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000476786372018978
    2. '+' → logprob: -7.875476837158203
    3. ' ' → logprob: -10.500476837158203
    4. '2' → logprob: -10.875476837158203
    5. '   ' → logprob: -10.875476837158203
    6. '
' → logprob: -11.375476837158203
    7. 'n' → logprob: -11.375476837158203
    8. '```' → logprob: -12.500476837158203
    9. ' +' → logprob: -14.125476837158203
    10. ')' → logprob: -14.250476837158203

Token 1029: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0018704519607126713
    2. '):' → logprob: -6.376870632171631
    3. ':
' → logprob: -9.751870155334473
    4. '):
' → logprob: -10.126870155334473
    5. '           ' → logprob: -10.376870155334473
    6. ':' → logprob: -11.501870155334473
    7. '               ' → logprob: -11.626870155334473
    8. '():
' → logprob: -12.001870155334473
    9. '       ' → logprob: -12.251870155334473
    10. '   ' → logprob: -12.751870155334473

Token 1030: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35334309935569763
    2. '       ' → logprob: -1.47834312915802
    3. '           ' → logprob: -2.9783430099487305
    4. '   ' → logprob: -4.4783430099487305
    5. '<|end|>' → logprob: -5.9783430099487305
    6. ':' → logprob: -6.9783430099487305
    7. ' if' → logprob: -6.9783430099487305
    8. '<|end|>' → logprob: -7.3533430099487305
    9. '```' → logprob: -7.6033430099487305
    10. ':
' → logprob: -7.8533430099487305

Token 1031: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11328724771738052
    2. ' if' → logprob: -2.3632872104644775
    3. '               ' → logprob: -4.988287448883057
    4. '           ' → logprob: -5.238287448883057
    5. '   ' → logprob: -7.363287448883057
    6. '       ' → logprob: -8.613286972045898
    7. '	if' → logprob: -11.488286972045898
    8. ' ' → logprob: -11.613286972045898
    9. '                   ' → logprob: -11.863286972045898
    10. '```' → logprob: -12.613286972045898

Token 1032: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.693152129650116
    2. ' in' → logprob: -0.693152129650116
    3. 'q' → logprob: -13.31815242767334
    4. '    ' → logprob: -14.31815242767334
    5. ')' → logprob: -14.69315242767334
    6. ' q' → logprob: -14.81815242767334
    7. '   ' → logprob: -14.81815242767334
    8. ' ' → logprob: -14.94315242767334
    9. '	in' → logprob: -15.19315242767334
    10. '0' → logprob: -16.068151473999023

Token 1033: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -5.037835580878891e-05
    2. 'degree' → logprob: -10.00005054473877
    3. '-degree' → logprob: -13.00005054473877
    4. 'in' → logprob: -13.62505054473877
    5. 'Degree' → logprob: -15.00005054473877
    6. 'q' → logprob: -15.00005054473877
    7. '_de' → logprob: -15.12505054473877
    8. 'egree' → logprob: -15.25005054473877
    9. '```' → logprob: -16.250049591064453
    10. '_deg' → logprob: -16.875049591064453

Token 1034: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. 'i' → logprob: -13.000005722045898
    3. '[' → logprob: -13.125005722045898
    4. '[
' → logprob: -14.125005722045898
    5. '==' → logprob: -15.250005722045898
    6. '```' → logprob: -15.375005722045898
    7. '[v' → logprob: -15.750005722045898
    8. ' [' → logprob: -15.875005722045898
    9. '
' → logprob: -16.1250057220459
    10. '(i' → logprob: -17.1250057220459

Token 1035: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4092037081718445
    2. ' ==' → logprob: -1.2842037677764893
    3. ']==' → logprob: -3.0342037677764893
    4. ']' → logprob: -5.15920352935791
    5. ')' → logprob: -5.78420352935791
    6. ')==' → logprob: -6.28420352935791
    7. '==
' → logprob: -10.15920352935791
    8. '```' → logprob: -10.40920352935791
    9. '']==' → logprob: -10.65920352935791
    10. '0' → logprob: -11.28420352935791

Token 1036: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1434379667043686
    2. ' ==' → logprob: -2.0184378623962402
    3. '0' → logprob: -8.018438339233398
    4. ']==' → logprob: -8.768438339233398
    5. '==
' → logprob: -8.893438339233398
    6. ')==' → logprob: -9.893438339233398
    7. '=' → logprob: -10.143438339233398
    8. ')' → logprob: -11.018438339233398
    9. '===' → logprob: -11.643438339233398
    10. '```' → logprob: -12.143438339233398

Token 1037: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.0
    5. '
' → logprob: -20.875
    6. '=' → logprob: -21.125
    7. '\
' → logprob: -21.625
    8. '[' → logprob: -22.125
    9. '۰' → logprob: -22.25
    10. ' ' → logprob: -22.5

Token 1038: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '
' → logprob: -17.625
    3. ' ' → logprob: -19.0
    4. '۰' → logprob: -20.875
    5. '```' → logprob: -20.875
    6. '00' → logprob: -21.25
    7. '<|end|>' → logprob: -21.375
    8. '   ' → logprob: -21.75
    9. '=' → logprob: -22.25
    10. ')' → logprob: -22.5

Token 1039: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6338011026382446
    2. ':' → logprob: -0.7588011026382446
    3. '):
' → logprob: -7.258800983428955
    4. '                   ' → logprob: -8.383801460266113
    5. '               ' → logprob: -8.758801460266113
    6. '):' → logprob: -9.883801460266113
    7. '                       ' → logprob: -10.758801460266113
    8. '           ' → logprob: -11.008801460266113
    9. '():
' → logprob: -12.383801460266113
    10. ')' → logprob: -12.758801460266113

Token 1040: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11156725883483887
    2. ':
' → logprob: -2.361567258834839
    3. ':' → logprob: -4.861567497253418
    4. '               ' → logprob: -6.361567497253418
    5. '                       ' → logprob: -7.111567497253418
    6. '):
' → logprob: -8.611567497253418
    7. 'q' → logprob: -8.736567497253418
    8. ' q' → logprob: -9.111567497253418
    9. ':q' → logprob: -9.486567497253418
    10. '[q' → logprob: -9.611567497253418

Token 1041: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.03047712706029415
    2. ' q' → logprob: -3.5304770469665527
    3. '                   ' → logprob: -7.405477046966553
    4. '                       ' → logprob: -9.780477523803711
    5. '	q' → logprob: -9.905477523803711
    6. '               ' → logprob: -12.655477523803711
    7. '                    ' → logprob: -12.655477523803711
    8. '   ' → logprob: -13.405477523803711
    9. '```' → logprob: -14.405477523803711
    10. '           ' → logprob: -14.530477523803711

Token 1042: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03444750979542732
    2. '.' → logprob: -3.409447431564331
    3. '.p' → logprob: -7.65944766998291
    4. '.put' → logprob: -8.53444766998291
    5. '.extend' → logprob: -10.28444766998291
    6. ' .' → logprob: -10.40944766998291
    7. '.
' → logprob: -10.53444766998291
    8. 'append' → logprob: -11.28444766998291
    9. '=' → logprob: -12.28444766998291
    10. '.push' → logprob: -12.40944766998291

Token 1043: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0012140447506681085
    2. 'i' → logprob: -6.751214027404785
    3. '(' → logprob: -10.626214027404785
    4. '(
' → logprob: -11.001214027404785
    5. ' i' → logprob: -12.876214027404785
    6. ' (' → logprob: -16.5012149810791
    7. ')i' → logprob: -17.2512149810791
    8. '
' → logprob: -17.3762149810791
    9. '	i' → logprob: -17.8762149810791
    10. '[i' → logprob: -18.5012149810791

Token 1044: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009489760850556195
    2. ')
' → logprob: -7.000948905944824
    3. '):' → logprob: -11.000948905944824
    4. '           ' → logprob: -11.625948905944824
    5. '               ' → logprob: -11.875948905944824
    6. '):
' → logprob: -13.125948905944824
    7. '       ' → logprob: -14.000948905944824
    8. '                   ' → logprob: -14.375948905944824
    9. ')

' → logprob: -15.250948905944824
    10. ':' → logprob: -15.375948905944824

Token 1045: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08245141059160233
    2. '
' → logprob: -2.707451343536377
    3. '       ' → logprob: -4.957451343536377
    4. 'while' → logprob: -6.832451343536377
    5. '    
' → logprob: -7.332451343536377
    6. ')' → logprob: -7.582451343536377
    7. '            
' → logprob: -7.707451343536377
    8. '   ' → logprob: -7.957451343536377
    9. ' while' → logprob: -7.957451343536377
    10. '               ' → logprob: -8.207451820373535

Token 1046: ' topo' (ID: 97979)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6602962613105774
    2. 'while' → logprob: -0.9102962613105774
    3. '       ' → logprob: -2.7852962017059326
    4. ' while' → logprob: -4.785296440124512
    5. '```' → logprob: -5.285296440124512
    6. '   ' → logprob: -5.660296440124512
    7. 'visited' → logprob: -7.285296440124512
    8. '            
' → logprob: -7.660296440124512
    9. '
' → logprob: -7.785296440124512
    10. '               ' → logprob: -9.285296440124512

Token 1047: ' =' (ID: 314)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.14938746392726898
    2. 'logical' → logprob: -2.5243873596191406
    3. '_log' → logprob: -3.1493873596191406
    4. '_sort' → logprob: -4.524387359619141
    5. 'logic' → logprob: -6.524387359619141
    6. '_' → logprob: -6.649387359619141
    7. 'sort' → logprob: -7.024387359619141
    8. '_logic' → logprob: -7.524387359619141
    9. 'q' → logprob: -9.02438735961914
    10. 'logen' → logprob: -9.02438735961914

Token 1048: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1941705346107483
    2. ' []' → logprob: -2.4441704750061035
    3. 'deque' → logprob: -2.4441704750061035
    4. ' deque' → logprob: -6.0691704750061035
    5. '[]
' → logprob: -7.5691704750061035
    6. ' []
' → logprob: -10.944170951843262
    7. '   ' → logprob: -10.944170951843262
    8. ' q' → logprob: -11.944170951843262
    9. 'q' → logprob: -12.069170951843262
    10. '[' → logprob: -13.069170951843262

Token 1049: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030137149151414633
    2. '
' → logprob: -7.253013610839844
    3. '		' → logprob: -7.503013610839844
    4. 'while' → logprob: -7.753013610839844
    5. ' while' → logprob: -8.128013610839844
    6. '	       ' → logprob: -8.253013610839844
    7. '   ' → logprob: -8.753013610839844
    8. '```' → logprob: -9.003013610839844
    9. '       ' → logprob: -9.128013610839844
    10. '	while' → logprob: -9.128013610839844

Token 1050: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09157539159059525
    2. '           ' → logprob: -2.5915753841400146
    3. ' while' → logprob: -4.466575622558594
    4. '       ' → logprob: -7.216575622558594
    5. '	while' → logprob: -8.466575622558594
    6. '   ' → logprob: -8.966575622558594
    7. '```' → logprob: -11.466575622558594
    8. '		' → logprob: -11.591575622558594
    9. '	       ' → logprob: -11.966575622558594
    10. '               ' → logprob: -12.216575622558594

Token 1051: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006779673509299755
    2. ' q' → logprob: -5.006779670715332
    3. 'len' → logprob: -9.881779670715332
    4. '   ' → logprob: -11.381779670715332
    5. ' len' → logprob: -13.881779670715332
    6. '	q' → logprob: -14.756779670715332
    7. '
' → logprob: -15.631779670715332
    8. '       ' → logprob: -16.75678062438965
    9. '(q' → logprob: -16.75678062438965
    10. '           ' → logprob: -16.88178062438965

Token 1052: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30097323656082153
    2. ':' → logprob: -1.6759731769561768
    3. '.p' → logprob: -2.6759731769561768
    4. '.pop' → logprob: -5.925973415374756
    5. '.' → logprob: -7.050973415374756
    6. '.append' → logprob: -8.050972938537598
    7. '):
' → logprob: -10.050972938537598
    8. 'opleft' → logprob: -11.675972938537598
    9. '```' → logprob: -12.175972938537598
    10. '   ' → logprob: -12.550972938537598

Token 1053: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03411978855729103
    2. '   ' → logprob: -4.284119606018066
    3. 'u' → logprob: -4.659119606018066
    4. 'v' → logprob: -5.034119606018066
    5. ' u' → logprob: -6.159119606018066
    6. ' v' → logprob: -6.909119606018066
    7. '```' → logprob: -7.909119606018066
    8. '           ' → logprob: -9.409119606018066
    9. 'node' → logprob: -9.784119606018066
    10. '                   ' → logprob: -10.659119606018066

Token 1054: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.14107437431812286
    2. 'u' (adapté à ' u') → logprob: -2.1410744190216064
    3. ' node' → logprob: -4.391074180603027
    4. 'node' → logprob: -7.266074180603027
    5. '   ' → logprob: -7.641074180603027
    6. ' v' → logprob: -8.016074180603027
    7. 'v' → logprob: -9.266074180603027
    8. ' current' → logprob: -10.391074180603027
    9. ' shop' → logprob: -11.641074180603027
    10. '           ' → logprob: -12.641074180603027

Token 1055: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519724369049072
    2. '=' → logprob: -1.5019724369049072
    3. '.append' → logprob: -11.126972198486328
    4. '.' → logprob: -11.876972198486328
    5. '.p' → logprob: -12.251972198486328
    6. '=q' → logprob: -12.251972198486328
    7. '.pop' → logprob: -12.501972198486328
    8. '=p' → logprob: -12.876972198486328
    9. '   ' → logprob: -12.876972198486328
    10. '.=' → logprob: -14.001972198486328

Token 1056: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0067154900170862675
    2. ' q' → logprob: -5.006715297698975
    3. '	q' → logprob: -16.006715774536133
    4. '_q' → logprob: -19.006715774536133
    5. '[q' → logprob: -20.006715774536133
    6. '.q' → logprob: -20.131715774536133
    7. '=q' → logprob: -20.131715774536133
    8. '*q' → logprob: -20.631715774536133
    9. '`' → logprob: -20.756715774536133
    10. '
' → logprob: -21.256715774536133

Token 1057: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0016314979875460267
    2. '.pop' → logprob: -6.626631259918213
    3. '.' → logprob: -8.126631736755371
    4. '.append' → logprob: -11.751631736755371
    5. ' .' → logprob: -14.251631736755371
    6. '   ' → logprob: -14.376631736755371
    7. ' =' → logprob: -15.751631736755371
    8. '=' → logprob: -15.876631736755371
    9. '.dequeue' → logprob: -16.001630783081055
    10. ').' → logprob: -16.501630783081055

Token 1058: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.011061854660511017
    2. 'op' → logprob: -4.511061668395996
    3. '```' → logprob: -12.261061668395996
    4. 'ople' → logprob: -13.136061668395996
    5. 'p' → logprob: -13.261061668395996
    6. 'append' → logprob: -13.761061668395996
    7. 'pop' → logprob: -14.136061668395996
    8. 'o' → logprob: -14.386061668395996
    9. 'opt' → logprob: -14.386061668395996
    10. 'opl' → logprob: -14.636061668395996

Token 1059: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021060874685645103
    2. ')
' → logprob: -5.021060943603516
    3. '
' → logprob: -5.396060943603516
    4. ')' → logprob: -5.896060943603516
    5. ':
' → logprob: -6.271060943603516
    6. '           ' → logprob: -6.396060943603516
    7. '                   ' → logprob: -6.521060943603516
    8. '                
' → logprob: -8.146060943603516
    9. '):
' → logprob: -8.521060943603516
    10. '                ' → logprob: -8.521060943603516

Token 1060: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005222928593866527
    2. '   ' → logprob: -8.00052261352539
    3. '           ' → logprob: -9.25052261352539
    4. '       ' → logprob: -10.50052261352539
    5. 'for' → logprob: -10.87552261352539
    6. '                   ' → logprob: -11.25052261352539
    7. '```' → logprob: -11.62552261352539
    8. '
' → logprob: -11.87552261352539
    9. 'top' → logprob: -12.12552261352539
    10. '[top' → logprob: -12.87552261352539

Token 1061: ' topo' (ID: 97979)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.00011367550177965313
    2. '           ' → logprob: -9.750113487243652
    3. ' topo' → logprob: -10.500113487243652
    4. '               ' → logprob: -11.000113487243652
    5. '[top' → logprob: -12.000113487243652
    6. '   ' → logprob: -12.750113487243652
    7. '                   ' → logprob: -14.125113487243652
    8. ' top' → logprob: -15.000113487243652
    9. '	top' → logprob: -15.250113487243652
    10. 'to' → logprob: -15.625113487243652

Token 1062: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019337546546012163
    2. '.' → logprob: -6.251933574676514
    3. '.app' → logprob: -12.501934051513672
    4. ' .' → logprob: -14.626934051513672
    5. 'append' → logprob: -15.001934051513672
    6. '.add' → logprob: -15.376934051513672
    7. '.ap' → logprob: -15.501934051513672
    8. '.extend' → logprob: -16.126934051513672
    9. '.
' → logprob: -16.501934051513672
    10. '.Append' → logprob: -16.876934051513672

Token 1063: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.250043869018555
    3. 'u' → logprob: -11.750043869018555
    4. '(
' → logprob: -15.625043869018555
    5. ' u' → logprob: -19.500043869018555
    6. '[u' → logprob: -20.375043869018555
    7. '	u' → logprob: -20.375043869018555
    8. ' (' → logprob: -21.625043869018555
    9. '(user' → logprob: -21.750043869018555
    10. '((' → logprob: -22.000043869018555

Token 1064: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028236585203558207
    2. ')
' → logprob: -5.877823829650879
    3. '               ' → logprob: -11.752823829650879
    4. '
' → logprob: -12.002823829650879
    5. ' )' → logprob: -12.752823829650879
    6. '           ' → logprob: -14.627823829650879
    7. '),' → logprob: -15.002823829650879
    8. '.' → logprob: -16.002822875976562
    9. '[' → logprob: -16.127822875976562
    10. ')

' → logprob: -16.252822875976562

Token 1065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01132909394800663
    2. '           ' → logprob: -4.511329174041748
    3. '
' → logprob: -9.63632869720459
    4. ' for' → logprob: -9.88632869720459
    5. 'for' → logprob: -10.13632869720459
    6. '```' → logprob: -10.38632869720459
    7. '                
' → logprob: -10.76132869720459
    8. '       ' → logprob: -10.76132869720459
    9. '                   ' → logprob: -11.13632869720459
    10. '            
' → logprob: -11.88632869720459

Token 1066: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07247423380613327
    2. '           ' → logprob: -3.072474241256714
    3. '               ' → logprob: -4.322474002838135
    4. ' for' → logprob: -4.572474002838135
    5. '
' → logprob: -13.947474479675293
    6. '   ' → logprob: -14.197474479675293
    7. '                   ' → logprob: -14.197474479675293
    8. '            
' → logprob: -14.447474479675293
    9. '       ' → logprob: -14.822474479675293
    10. '                
' → logprob: -15.447474479675293

Token 1067: ' w' (ID: 286)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03924025222659111
    2. 'w' → logprob: -3.2892403602600098
    3. ' v' → logprob: -6.78924036026001
    4. ' w' → logprob: -9.539239883422852
    5. '	v' → logprob: -16.03923988342285
    6. '`' → logprob: -16.91423988342285
    7. '```' → logprob: -16.91423988342285
    8. 'vv' → logprob: -17.78923988342285
    9. 'vw' → logprob: -17.91423988342285
    10. 'wv' → logprob: -18.03923988342285

Token 1068: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029757557436823845
    2. 'in' → logprob: -3.529757499694824
    3. '	in' → logprob: -12.029757499694824
    4. '               ' → logprob: -15.404757499694824
    5. '   ' → logprob: -15.529757499694824
    6. '                   ' → logprob: -15.654757499694824
    7. ' ' → logprob: -15.779757499694824
    8. ',' → logprob: -16.90475845336914
    9. 'w' → logprob: -17.02975845336914
    10. '_in' → logprob: -17.15475845336914

Token 1069: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815006136894226
    2. ' self' → logprob: -4.0181498527526855
    3. '	self' → logprob: -16.518150329589844
    4. '(self' → logprob: -17.643150329589844
    5. '   ' → logprob: -18.393150329589844
    6. ' ' → logprob: -18.893150329589844
    7. '
' → logprob: -19.268150329589844
    8. 'range' → logprob: -19.643150329589844
    9. ' ' → logprob: -20.018150329589844
    10. 'Mall' → logprob: -20.143150329589844

Token 1070: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.09025702625513077
    2. '.ad' → logprob: -3.090256929397583
    3. '[u' → logprob: -3.215256929397583
    4. '.u' → logprob: -7.840257167816162
    5. 'graph' → logprob: -8.840256690979004
    6. '(u' → logprob: -10.715256690979004
    7. '	graph' → logprob: -11.090256690979004
    8. '.' → logprob: -11.215256690979004
    9. '[' → logprob: -11.340256690979004
    10. '`' → logprob: -11.965256690979004

Token 1071: '.ad' (ID: 19775)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.4736459888808895e-05
    2. '.ad' → logprob: -11.375014305114746
    3. '[' → logprob: -12.875014305114746
    4. 'u' → logprob: -15.500014305114746
    5. '   ' → logprob: -16.125015258789062
    6. '[
' → logprob: -16.125015258789062
    7. '.' → logprob: -16.875015258789062
    8. '```' → logprob: -16.875015258789062
    9. '[self' → logprob: -17.000015258789062
    10. 'adj' → logprob: -17.250015258789062

Token 1072: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00013834332639817148
    2. '[u' → logprob: -9.125138282775879
    3. '[j' → logprob: -10.500138282775879
    4. 'jac' → logprob: -14.000138282775879
    5. 'd' → logprob: -14.875138282775879
    6. 'js' → logprob: -15.375138282775879
    7. 'dj' → logprob: -15.375138282775879
    8. '[' → logprob: -17.000139236450195
    9. ' j' → logprob: -17.125139236450195
    10. '	j' → logprob: -17.750139236450195

Token 1073: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.704273118884885e-07
    2. 'u' → logprob: -15.000000953674316
    3. '[' → logprob: -15.250000953674316
    4. '[
' → logprob: -17.375
    5. '[w' → logprob: -19.0
    6. '   ' → logprob: -19.375
    7. '	u' → logprob: -19.75
    8. '
' → logprob: -20.125
    9. '(u' → logprob: -21.125
    10. '```' → logprob: -21.25

Token 1074: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.023409688845276833
    2. ']:' → logprob: -3.773409605026245
    3. ':
' → logprob: -9.648409843444824
    4. ']:
' → logprob: -10.398409843444824
    5. ':' → logprob: -10.648409843444824
    6. ']' → logprob: -11.398409843444824
    7. '                   ' → logprob: -11.523409843444824
    8. '):
' → logprob: -11.773409843444824
    9. '               ' → logprob: -11.898409843444824
    10. ']:

' → logprob: -12.773409843444824

Token 1075: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001147006405517459
    2. ':' → logprob: -7.5011467933654785
    3. '                       ' → logprob: -8.501147270202637
    4. '               ' → logprob: -8.876147270202637
    5. ':
' → logprob: -8.876147270202637
    6. '           ' → logprob: -10.876147270202637
    7. '                  ' → logprob: -11.126147270202637
    8. '		           ' → logprob: -11.126147270202637
    9. '                    ' → logprob: -11.251147270202637
    10. '   ' → logprob: -11.626147270202637

Token 1076: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41927939653396606
    2. ' in' → logprob: -1.6692793369293213
    3. 'in' (adapté à ' in') → logprob: -1.9192793369293213
    4. '                       ' → logprob: -5.1692795753479
    5. '               ' → logprob: -7.7942795753479
    6. '                    ' → logprob: -8.044279098510742
    7. '   ' → logprob: -8.169279098510742
    8. '                    
' → logprob: -8.544279098510742
    9. '       ' → logprob: -9.044279098510742
    10. '           ' → logprob: -9.169279098510742

Token 1077: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -4.966313281329349e-05
    2. '-degree' → logprob: -10.500049591064453
    3. 'degree' → logprob: -11.750049591064453
    4. 'w' → logprob: -11.875049591064453
    5. '```' → logprob: -13.625049591064453
    6. 'Degree' → logprob: -14.000049591064453
    7. '   ' → logprob: -14.000049591064453
    8. 'q' → logprob: -14.000049591064453
    9. '[w' → logprob: -14.125049591064453
    10. '-' → logprob: -14.750049591064453

Token 1078: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -10.500030517578125
    3. 'w' → logprob: -13.250030517578125
    4. '[v' → logprob: -14.750030517578125
    5. '[
' → logprob: -15.125030517578125
    6. '=w' → logprob: -18.000030517578125
    7. ' [' → logprob: -18.250030517578125
    8. '[u' → logprob: -18.500030517578125
    9. '	w' → logprob: -18.625030517578125
    10. '```' → logprob: -19.125030517578125

Token 1079: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7434822916984558
    2. '-=' → logprob: -1.8684823513031006
    3. '-' → logprob: -1.9934823513031006
    4. '                   ' → logprob: -2.3684823513031006
    5. ']' → logprob: -2.3684823513031006
    6. ']-' → logprob: -3.4934823513031006
    7. '[' → logprob: -5.2434821128845215
    8. '```' → logprob: -5.3684821128845215
    9. '[-' → logprob: -6.1184821128845215
    10. '                    ' → logprob: -6.4934821128845215

Token 1080: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.04013528674840927
    2. ' -=' → logprob: -3.790135383605957
    3. '-' → logprob: -4.165135383605957
    4. '                   ' → logprob: -6.790135383605957
    5. '```' → logprob: -10.665135383605957
    6. '[' → logprob: -10.665135383605957
    7. '[-' → logprob: -11.415135383605957
    8. '                       ' → logprob: -11.665135383605957
    9. '                    ' → logprob: -11.790135383605957
    10. '               ' → logprob: -12.165135383605957

Token 1081: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.750019073486328
    4. '                   ' → logprob: -19.875019073486328
    5. '```' → logprob: -21.125019073486328
    6. '                       ' → logprob: -21.375019073486328
    7. '           ' → logprob: -21.500019073486328
    8. '               ' → logprob: -22.250019073486328
    9. ' ' → logprob: -22.375019073486328
    10. '	' → logprob: -22.500019073486328

Token 1082: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -20.0
    4. '
' → logprob: -20.625
    5. '```' → logprob: -21.125
    6. '۱' → logprob: -22.5
    7. '           ' → logprob: -22.875
    8. '{
' → logprob: -23.25
    9. '       ' → logprob: -23.375
    10. '１' → logprob: -24.3125

Token 1083: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001503313542343676
    2. '
' → logprob: -7.5015034675598145
    3. '<|end|>' → logprob: -8.376502990722656
    4. 'if' → logprob: -9.251502990722656
    5. '				' → logprob: -9.376502990722656
    6. '               ' → logprob: -9.376502990722656
    7. '                    
' → logprob: -9.501502990722656
    8. '```' → logprob: -9.626502990722656
    9. '           ' → logprob: -9.876502990722656
    10. '                       ' → logprob: -10.001502990722656

Token 1084: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003733542689587921
    2. '```' → logprob: -9.250372886657715
    3. '                    
' → logprob: -9.625372886657715
    4. '               ' → logprob: -9.750372886657715
    5. '
' → logprob: -10.375372886657715
    6. '           ' → logprob: -10.625372886657715
    7. '                       ' → logprob: -11.000372886657715
    8. '   ' → logprob: -11.125372886657715
    9. '				' → logprob: -11.250372886657715
    10. '<|end|>' → logprob: -11.375372886657715

Token 1085: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18249796330928802
    2. '                   ' → logprob: -1.8074979782104492
    3. ' if' → logprob: -6.057497978210449
    4. '```' → logprob: -8.55749797821045
    5. '				' → logprob: -9.30749797821045
    6. '                       ' → logprob: -10.43249797821045
    7. '               ' → logprob: -10.80749797821045
    8. '	if' → logprob: -10.80749797821045
    9. '                    ' → logprob: -11.43249797821045
    10. '   ' → logprob: -11.80749797821045

Token 1086: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47407740354537964
    2. ' in' → logprob: -0.9740774035453796
    3. '	in' → logprob: -15.599077224731445
    4. '                   ' → logprob: -16.599077224731445
    5. '[in' → logprob: -16.599077224731445
    6. '0' → logprob: -17.349077224731445
    7. '1' → logprob: -17.974077224731445
    8. '_in' → logprob: -18.099077224731445
    9. ' ' → logprob: -18.224077224731445
    10. '(in' → logprob: -18.349077224731445

Token 1087: '_degree' (ID: 128654)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.32702600955963135
    2. '_degree' → logprob: -1.3270260095596313
    3. '_in' → logprob: -4.327025890350342
    4. ' in' → logprob: -7.952025890350342
    5. 'degree' → logprob: -9.9520263671875
    6. '   ' → logprob: -11.4520263671875
    7. '_de' → logprob: -11.5770263671875
    8. '[in' → logprob: -11.9520263671875
    9. '_depth' → logprob: -12.0770263671875
    10. '	in' → logprob: -12.0770263671875

Token 1088: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -2.816093228830141e-06
    2. 'w' → logprob: -13.25000286102295
    3. '[' → logprob: -15.00000286102295
    4. '
' → logprob: -15.50000286102295
    5. ' [' → logprob: -15.62500286102295
    6. '(w' → logprob: -16.000001907348633
    7. '[
' → logprob: -16.625001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '	w' → logprob: -17.625001907348633
    10. '```' → logprob: -18.125001907348633

Token 1089: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8512710332870483
    2. ']==' → logprob: -1.1012710332870483
    3. ' ==' → logprob: -2.101271152496338
    4. ']' → logprob: -2.351271152496338
    5. '[' → logprob: -4.226271152496338
    6. '[w' → logprob: -5.851271152496338
    7. '[u' → logprob: -5.976271152496338
    8. '[
' → logprob: -6.476271152496338
    9. '[v' → logprob: -7.851271152496338
    10. '[i' → logprob: -8.10127067565918

Token 1090: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11412714421749115
    2. '[w' → logprob: -2.4891271591186523
    3. ' ==' → logprob: -3.7391271591186523
    4. '[' → logprob: -7.489127159118652
    5. '[u' → logprob: -8.739127159118652
    6. '[v' → logprob: -8.864127159118652
    7. 'w' → logprob: -9.614127159118652
    8. ']==' → logprob: -9.614127159118652
    9. '[
' → logprob: -10.114127159118652
    10. '==
' → logprob: -10.239127159118652

Token 1091: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '
' → logprob: -20.250017166137695
    4. '   ' → logprob: -20.250017166137695
    5. '```' → logprob: -21.000017166137695
    6. ' ' → logprob: -22.250017166137695
    7. 'zero' → logprob: -22.375017166137695
    8. '=' → logprob: -22.625017166137695
    9. '۰' → logprob: -22.875017166137695
    10. '00' → logprob: -23.125017166137695

Token 1092: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.500009536743164
    4. 'zero' → logprob: -19.875009536743164
    5. '==' → logprob: -20.000009536743164
    6. '[' → logprob: -20.125009536743164
    7. '    ' → logprob: -20.125009536743164
    8. '1' → logprob: -20.250009536743164
    9. '00' → logprob: -20.250009536743164
    10. '=' → logprob: -20.250009536743164

Token 1093: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16310012340545654
    2. ':
' → logprob: -2.038100242614746
    3. ':' → logprob: -3.913100242614746
    4. '                   ' → logprob: -8.788100242614746
    5. '):
' → logprob: -10.038100242614746
    6. '                      ' → logprob: -11.288100242614746
    7. '                           ' → logprob: -11.913100242614746
    8. '                        ' → logprob: -12.413100242614746
    9. ',' → logprob: -12.538100242614746
    10. '():
' → logprob: -12.663100242614746

Token 1094: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00015586259542033076
    2. ':
' → logprob: -9.750155448913574
    3. ':' → logprob: -10.500155448913574
    4. '                   ' → logprob: -10.625155448913574
    5. ' q' → logprob: -11.500155448913574
    6. '                           ' → logprob: -11.750155448913574
    7. '                      ' → logprob: -11.750155448913574
    8. '                        ' → logprob: -12.750155448913574
    9. '	                   ' → logprob: -13.000155448913574
    10. '					' → logprob: -13.125155448913574

Token 1095: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00020985817536711693
    2. ' q' → logprob: -9.00020980834961
    3. '                           ' → logprob: -9.37520980834961
    4. '                               ' → logprob: -14.62520980834961
    5. '	q' → logprob: -14.87520980834961
    6. '```' → logprob: -15.00020980834961
    7. '                       ' → logprob: -15.12520980834961
    8. '
' → logprob: -16.75020980834961
    9. '                   ' → logprob: -17.50020980834961
    10. '               ' → logprob: -17.62520980834961

Token 1096: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00408801669254899
    2. '.' → logprob: -5.504087924957275
    3. '.put' → logprob: -13.129088401794434
    4. '                       ' → logprob: -13.129088401794434
    5. '.push' → logprob: -13.504088401794434
    6. '.enqueue' → logprob: -13.504088401794434
    7. '                           ' → logprob: -13.879088401794434
    8. '.extend' → logprob: -14.629088401794434
    9. 'append' → logprob: -15.254088401794434
    10. '.q' → logprob: -15.379088401794434

Token 1097: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -11.000019073486328
    3. 'w' → logprob: -13.000019073486328
    4. '(
' → logprob: -14.875019073486328
    5. '	w' → logprob: -20.625019073486328
    6. '()' → logprob: -21.250019073486328
    7. '((' → logprob: -21.375019073486328
    8. '(

' → logprob: -21.375019073486328
    9. ' (' → logprob: -22.000019073486328
    10. ' w' → logprob: -22.375019073486328

Token 1098: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002233245177194476
    2. ')
' → logprob: -8.750223159790039
    3. 'w' → logprob: -9.875223159790039
    4. '(w' → logprob: -12.750223159790039
    5. '[w' → logprob: -12.875223159790039
    6. '                       ' → logprob: -13.500223159790039
    7. '[' → logprob: -13.750223159790039
    8. ' w' → logprob: -14.000223159790039
    9. ' )' → logprob: -14.625223159790039
    10. ',' → logprob: -14.750223159790039

Token 1099: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0210027527064085
    2. '
' → logprob: -4.146002769470215
    3. '       ' → logprob: -5.771002769470215
    4. '```' → logprob: -7.021002769470215
    5. '            
' → logprob: -7.396002769470215
    6. '        
' → logprob: -9.271002769470215
    7. 'return' → logprob: -9.646002769470215
    8. '            ' → logprob: -9.896002769470215
    9. '          ' → logprob: -10.521002769470215
    10. '               ' → logprob: -10.521002769470215

Token 1100: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3139711916446686
    2. '#' → logprob: -2.6889712810516357
    3. 'distance' → logprob: -3.1889712810516357
    4. 'if' (adapté à ' if') → logprob: -3.4389712810516357
    5. 'min' → logprob: -3.8139712810516357
    6. 'return' → logprob: -4.188971042633057
    7. '       ' → logprob: -4.313971042633057
    8. 'max' → logprob: -4.438971042633057
    9. 'length' → logprob: -4.438971042633057
    10. 'positions' → logprob: -4.938971042633057

Token 1101: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6950867176055908
    2. ' len' → logprob: -0.6950867176055908
    3. 'len' → logprob: -6.570086479187012
    4. 'not' → logprob: -8.195086479187012
    5. ' topo' → logprob: -8.570086479187012
    6. ' ' → logprob: -10.195086479187012
    7. ' self' → logprob: -11.695086479187012
    8. ' top' → logprob: -12.070086479187012
    9. ' n' → logprob: -12.195086479187012
    10. ' ' → logprob: -12.320086479187012

Token 1102: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0005617309361696243
    2. '(' → logprob: -7.500561714172363
    3. ' (' → logprob: -12.250561714172363
    4. '(
' → logprob: -12.625561714172363
    5. '(top' → logprob: -14.750561714172363
    6. '(s' → logprob: -16.87556266784668
    7. '(f' → logprob: -17.75056266784668
    8. '(sorted' → logprob: -17.75056266784668
    9. 't' → logprob: -18.00056266784668
    10. '(min' → logprob: -18.12556266784668

Token 1103: 'opo' (ID: 29134)
  Prédit: 'opo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opo' → logprob: -0.11235469579696655
    2. 'o' → logprob: -2.4873547554016113
    3. 'op' → logprob: -3.9873547554016113
    4. '(op' → logprob: -5.737354755401611
    5. '(o' → logprob: -6.987354755401611
    6. '(t' → logprob: -9.237354278564453
    7. '==' → logprob: -9.862354278564453
    8. '
' → logprob: -9.987354278564453
    9. '(
' → logprob: -10.237354278564453
    10. '=' → logprob: -10.237354278564453

Token 1104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04807032644748688
    2. ' !=' → logprob: -3.7980704307556152
    3. '<' → logprob: -4.298070430755615
    4. '!=' → logprob: -4.923070430755615
    5. ')!=' → logprob: -6.548070430755615
    6. ' <' → logprob: -6.798070430755615
    7. ')<' → logprob: -8.173069953918457
    8. '<int' → logprob: -8.673069953918457
    9. '<len' → logprob: -9.423069953918457
    10. '```' → logprob: -9.548069953918457

Token 1105: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5154648423194885
    2. '!=' → logprob: -1.5154647827148438
    3. ' !=' → logprob: -1.7654647827148438
    4. ' <' → logprob: -5.515464782714844
    5. ')' → logprob: -6.140464782714844
    6. '<
' → logprob: -6.765464782714844
    7. '==' → logprob: -6.890464782714844
    8. '[' → logprob: -7.390464782714844
    9. '<len' → logprob: -7.515464782714844
    10. '<int' → logprob: -7.640464782714844

Token 1106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20145456492900848
    2. ' self' → logprob: -1.701454520225525
    3. '           ' → logprob: -10.201454162597656
    4. '
' → logprob: -13.451454162597656
    5. '(self' → logprob: -14.201454162597656
    6. 'n' → logprob: -14.701454162597656
    7. '	self' → logprob: -14.951454162597656
    8. '1' → logprob: -15.326454162597656
    9. '               ' → logprob: -15.701454162597656
    10. '            
' → logprob: -15.701454162597656

Token 1107: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.093505099765025e-05
    2. '.' → logprob: -11.000020980834961
    3. '.user' → logprob: -13.250020980834961
    4. ' .' → logprob: -13.375020980834961
    5. 'n' → logprob: -15.625020980834961
    6. '`.' → logprob: -15.750020980834961
    7. '```' → logprob: -16.00002098083496
    8. '​.' → logprob: -16.12502098083496
    9. '>.' → logprob: -16.37502098083496
    10. '
' → logprob: -16.75002098083496

Token 1108: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4741736352443695
    2. ':' → logprob: -0.9741736650466919
    3. '               ' → logprob: -9.849173545837402
    4. ':return' → logprob: -10.724173545837402
    5. '):
' → logprob: -11.724173545837402
    6. '           ' → logprob: -12.224173545837402
    7. '):' → logprob: -12.474173545837402
    8. ' or' → logprob: -13.474173545837402
    9. '():
' → logprob: -13.474173545837402
    10. ':
' → logprob: -14.099173545837402

Token 1109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001860174525063485
    2. ' raise' → logprob: -9.7501859664917
    3. 'raise' → logprob: -10.0001859664917
    4. '                   ' → logprob: -10.3751859664917
    5. ':
' → logprob: -11.2501859664917
    6. '           ' → logprob: -11.8751859664917
    7. ':' → logprob: -12.1251859664917
    8. '                       ' → logprob: -12.6251859664917
    9. 'return' → logprob: -12.6251859664917
    10. '                ' → logprob: -12.7501859664917

Token 1110: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.15721650421619415
    2. '               ' → logprob: -2.6572165489196777
    3. 'raise' (adapté à ' raise') → logprob: -2.6572165489196777
    4. '           ' → logprob: -6.657216548919678
    5. '                   ' → logprob: -6.782216548919678
    6. '   ' → logprob: -6.782216548919678
    7. '	raise' → logprob: -6.782216548919678
    8. 'return' → logprob: -8.53221607208252
    9. ' return' → logprob: -9.15721607208252
    10. '                ' → logprob: -9.53221607208252

Token 1111: ' Runtime' (ID: 17606)
  Prédit: ' Runtime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Runtime' → logprob: -0.0052362410351634026
    2. 'Runtime' → logprob: -5.2552361488342285
    3. '(Runtime' → logprob: -13.380236625671387
    4. ' Value' → logprob: -14.755236625671387
    5. '_Runtime' → logprob: -14.880236625671387
    6. '	Runtime' → logprob: -16.25523567199707
    7. 'Value' → logprob: -16.38023567199707
    8. '_runtime' → logprob: -17.63023567199707
    9. ' Exception' → logprob: -18.50523567199707
    10. ' runtime' → logprob: -20.00523567199707

Token 1112: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -19.25
    3. 'ERROR' → logprob: -19.625
    4. 'error' → logprob: -19.625
    5. 'Warning' → logprob: -19.625
    6. 'Runtime' → logprob: -20.375
    7. '
' → logprob: -21.125
    8. 'Erro' → logprob: -22.875
    9. '_error' → logprob: -23.25
    10. 'SError' → logprob: -23.375

Token 1113: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13018278777599335
    2. '("' → logprob: -2.1301827430725098
    3. '(
' → logprob: -5.75518274307251
    4. '("("' → logprob: -9.630183219909668
    5. '('' → logprob: -11.380183219909668
    6. ' (' → logprob: -13.630183219909668
    7. '"' → logprob: -13.880183219909668
    8. '(""' → logprob: -14.380183219909668
    9. '(",' → logprob: -14.380183219909668
    10. '("
' → logprob: -14.505183219909668

Token 1114: 'Impossible' (ID: 192245)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4303234815597534
    2. 'Cycle' → logprob: -1.4303234815597534
    3. 'Cycles' → logprob: -1.8053234815597534
    4. 'No' → logprob: -1.9303234815597534
    5. 'Cannot' → logprob: -3.305323600769043
    6. 'Runtime' → logprob: -3.430323600769043
    7. 'Constraints' → logprob: -4.180323600769043
    8. 'Invalid' → logprob: -4.180323600769043
    9. ' Cycle' → logprob: -4.305323600769043
    10. 'Valid' → logprob: -4.430323600769043

Token 1115: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11134736239910126
    2. ')' → logprob: -3.4863474369049072
    3. ' order' → logprob: -3.7363474369049072
    4. ' visiting' → logprob: -3.8613474369049072
    5. ' ordering' → logprob: -4.986347198486328
    6. ':' → logprob: -5.236347198486328
    7. ' constraints' → logprob: -5.736347198486328
    8. '")' → logprob: -6.111347198486328
    9. ' visitation' → logprob: -6.111347198486328
    10. 'To' → logprob: -6.236347198486328

Token 1116: ' find' (ID: 1646)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.3834685683250427
    2. ' complete' → logprob: -1.7584686279296875
    3. 'find' → logprob: -2.5084686279296875
    4. 'finish' → logprob: -4.0084686279296875
    5. 'visit' → logprob: -4.1334686279296875
    6. ' find' → logprob: -4.7584686279296875
    7. 'det' → logprob: -5.0084686279296875
    8. 's' → logprob: -5.1334686279296875
    9. 'construct' → logprob: -6.0084686279296875
    10. 'generate' → logprob: -6.6334686279296875

Token 1117: ' top' (ID: 2344)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.040906161069869995
    2. ' a' → logprob: -3.5409061908721924
    3. 'valid' → logprob: -4.915905952453613
    4. ' visiting' → logprob: -5.665905952453613
    5. 'a' → logprob: -8.415905952453613
    6. ' top' → logprob: -10.790905952453613
    7. '_valid' → logprob: -11.790905952453613
    8. ' consistent' → logprob: -11.790905952453613
    9. ' completing' → logprob: -11.915905952453613
    10. ' correct' → logprob: -12.165905952453613

Token 1118: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.01304657943546772
    2. 'o' → logprob: -4.388046741485596
    3. 'ologic' → logprob: -8.888046264648438
    4. 'ology' → logprob: -9.388046264648438
    5. 'ogical' → logprob: -9.388046264648438
    6. 'ologically' → logprob: -10.013046264648438
    7. 'olog' → logprob: -10.013046264648438
    8. '_order' → logprob: -10.263046264648438
    9. 'ologica' → logprob: -10.638046264648438
    10. 'ologico' → logprob: -11.013046264648438

Token 1119: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.23096036911010742
    2. '_order' → logprob: -2.4809603691101074
    3. ' sort' → logprob: -2.9809603691101074
    4. 'sort' → logprob: -3.7309603691101074
    5. ' ordering' → logprob: -3.7309603691101074
    6. '_sort' → logprob: -4.355960369110107
    7. 'order' → logprob: -4.605960369110107
    8. 'ordering' → logprob: -7.230960369110107
    9. '	order' → logprob: -8.605960845947266
    10. '
' → logprob: -9.855960845947266

Token 1120: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10402794182300568
    2. ')' → logprob: -2.9790279865264893
    3. '")
' → logprob: -3.7290279865264893
    4. '           ' → logprob: -4.47902774810791
    5. ')")
' → logprob: -4.97902774810791
    6. ')")' → logprob: -5.22902774810791
    7. '")

' → logprob: -8.60402774810791
    8. '               ' → logprob: -10.35402774810791
    9. '.")' → logprob: -10.72902774810791
    10. '}")' → logprob: -10.72902774810791

Token 1121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05157215893268585
    2. '       ' → logprob: -3.30157208442688
    3. '            
' → logprob: -5.176572322845459
    4. '
' → logprob: -5.426572322845459
    5. '        
' → logprob: -6.426572322845459
    6. 'return' → logprob: -6.801572322845459
    7. '```' → logprob: -8.3015718460083
    8. '    
' → logprob: -8.6765718460083
    9. '               ' → logprob: -10.1765718460083
    10. '   ' → logprob: -10.5515718460083

Token 1122: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06514441221952438
    2. '       ' → logprob: -3.9401443004608154
    3. 'min' → logprob: -4.5651445388793945
    4. 'max' → logprob: -4.8151445388793945
    5. '
' → logprob: -5.1901445388793945
    6. '```' → logprob: -5.4401445388793945
    7. '            
' → logprob: -5.6901445388793945
    8. 'distance' → logprob: -5.9401445388793945
    9. 'dp' → logprob: -6.3151445388793945
    10. 'positions' → logprob: -6.5651445388793945

Token 1123: ' Step' (ID: 22291)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9444104433059692
    2. 'dp' → logprob: -1.0694104433059692
    3. 'min' → logprob: -2.6944103240966797
    4. 'long' → logprob: -2.8194103240966797
    5. '           ' → logprob: -3.0694103240966797
    6. '#' → logprob: -3.3194103240966797
    7. 'dist' → logprob: -3.4444103240966797
    8. 'distance' → logprob: -4.69441032409668
    9. 'pos' → logprob: -5.31941032409668
    10. 'f' → logprob: -6.19441032409668

Token 1124: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050147999078035355
    2. '1' → logprob: -3.5501480102539062
    3. '   ' → logprob: -5.300148010253906
    4. ':' → logprob: -5.300148010253906
    5. ' ' → logprob: -5.800148010253906
    6. ' =' → logprob: -6.050148010253906
    7. '       ' → logprob: -6.550148010253906
    8. '    ' → logprob: -7.175148010253906
    9. '2' → logprob: -7.425148010253906
    10. ' #' → logprob: -7.800148010253906

Token 1125: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005620515905320644
    2. '2' → logprob: -5.38062047958374
    3. '3' → logprob: -7.50562047958374
    4. '=' → logprob: -8.880620956420898
    5. ':' → logprob: -9.005620956420898
    6. '0' → logprob: -9.255620956420898
    7. '           ' → logprob: -10.005620956420898
    8. '4' → logprob: -11.380620956420898
    9. '5' → logprob: -11.505620956420898
    10. '#' → logprob: -11.755620956420898

Token 1126: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018089534714818
    2. ':' → logprob: -4.143089771270752
    3. 'distance' → logprob: -7.018089771270752
    4. '
' → logprob: -7.768089771270752
    5. '#' → logprob: -8.393089294433594
    6. '       ' → logprob: -8.893089294433594
    7. ' distances' → logprob: -9.393089294433594
    8. 'length' → logprob: -9.768089294433594
    9. '   ' → logprob: -9.893089294433594
    10. ':
' → logprob: -10.643089294433594

Token 1127: ' On' (ID: 2160)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1026623249053955
    2. 'dp' → logprob: -1.2276623249053955
    3. 'long' → logprob: -1.4776623249053955
    4. 'max' → logprob: -2.6026623249053955
    5. 'ear' → logprob: -3.3526623249053955
    6. 'distance' → logprob: -4.602662086486816
    7. 'pos' → logprob: -4.977662086486816
    8. '#' → logprob: -5.352662086486816
    9. 'from' → logprob: -5.352662086486816
    10. 'positions' → logprob: -5.477662086486816

Token 1128: ' this' (ID: 495)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30037063360214233
    2. '   ' → logprob: -2.300370693206787
    3. 'dp' → logprob: -3.175370693206787
    4. '#' → logprob: -3.675370693206787
    5. '       ' → logprob: -3.675370693206787
    6. 'positions' → logprob: -4.175370693206787
    7. ' distances' → logprob: -4.425370693206787
    8. '           ' → logprob: -5.300370693206787
    9. ' positions' → logprob: -5.300370693206787
    10. 'dist' → logprob: -5.425370693206787

Token 1129: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.008946418762207
    2. '#' → logprob: -1.508946418762207
    3. ' line' → logprob: -2.008946418762207
    4. ' topo' → logprob: -2.508946418762207
    5. '   ' → logprob: -2.633946418762207
    6. ' top' → logprob: -3.133946418762207
    7. 'line' → logprob: -3.883946418762207
    8. '
' → logprob: -4.008946418762207
    9. '           ' → logprob: -4.258946418762207
    10. ' #' → logprob: -4.633946418762207

Token 1130: 'ological' (ID: 8339)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3967725932598114
    2. 'ological' → logprob: -1.3967726230621338
    3. 'ology' → logprob: -3.646772623062134
    4. 'o' → logprob: -4.521772384643555
    5. '   ' → logprob: -4.646772384643555
    6. '
' → logprob: -4.646772384643555
    7. '       ' → logprob: -4.896772384643555
    8. '#' → logprob: -6.146772384643555
    9. ' line' → logprob: -6.271772384643555
    10. 'line' → logprob: -6.521772384643555

Token 1131: ' order' (ID: 2569)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.6422128081321716
    2. 'order' → logprob: -0.7672128081321716
    3. ' order' → logprob: -5.642212867736816
    4. '_sort' → logprob: -6.392212867736816
    5. '
' → logprob: -6.767212867736816
    6. '_order' → logprob: -6.892212867736816
    7. ' sort' → logprob: -6.892212867736816
    8. 'ordering' → logprob: -7.267212867736816
    9. 'sorting' → logprob: -8.767212867736816
    10. '   ' → logprob: -9.267212867736816

Token 1132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34786075353622437
    2. '           ' → logprob: -1.7228608131408691
    3. 'dp' → logprob: -3.597860813140869
    4. '
' → logprob: -3.847860813140869
    5. 'dist' → logprob: -4.097860813140869
    6. 'max' → logprob: -4.597860813140869
    7. 'positions' → logprob: -4.847860813140869
    8. 'prev' → logprob: -4.972860813140869
    9. 'pos' → logprob: -4.972860813140869
    10. '#' → logprob: -5.097860813140869

Token 1133: ' compute' (ID: 23864)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5629051327705383
    2. 'dist' → logprob: -2.0629050731658936
    3. 'max' → logprob: -2.3129050731658936
    4. 'min' → logprob: -2.8129050731658936
    5. '           ' → logprob: -3.8129050731658936
    6. '#' → logprob: -3.8129050731658936
    7. 'positions' → logprob: -4.187905311584473
    8. 'pos' → logprob: -4.187905311584473
    9. 'ear' → logprob: -4.562905311584473
    10. '   ' → logprob: -4.687905311584473

Token 1134: ' "' (ID: 392)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1383822113275528
    2. 'dist' → logprob: -2.3883821964263916
    3. 'max' → logprob: -3.7633821964263916
    4. 'long' → logprob: -5.388382434844971
    5. 'distance' → logprob: -5.888382434844971
    6. 'min' → logprob: -6.138382434844971
    7. 'pos' → logprob: -6.638382434844971
    8. '#' → logprob: -6.763382434844971
    9. 'positions' → logprob: -7.013382434844971
    10. '   ' → logprob: -8.138381958007812

Token 1135: 'minimum' (ID: 80931)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3013419806957245
    2. 'min' → logprob: -2.301342010498047
    3. 'max' → logprob: -2.676342010498047
    4. 'dist' → logprob: -3.051342010498047
    5. 'long' → logprob: -3.801342010498047
    6. 'pos' → logprob: -4.926342010498047
    7. 'ear' → logprob: -5.176342010498047
    8. 'positions' → logprob: -5.551342010498047
    9. '#' → logprob: -6.801342010498047
    10. 'distance' → logprob: -6.926342010498047

Token 1136: ' and' (ID: 326)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.9477946758270264
    2. '_length' → logprob: -1.3227946758270264
    3. '_position' → logprob: -1.8227946758270264
    4. '_pos' → logprob: -2.4477946758270264
    5. '_walk' → logprob: -3.6977946758270264
    6. '_' → logprob: -4.0727949142456055
    7. '_positions' → logprob: -4.9477949142456055
    8. '_path' → logprob: -4.9477949142456055
    9. '_dist' → logprob: -5.1977949142456055
    10. '_interval' → logprob: -5.5727949142456055

Token 1137: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.05254457890987396
    2. ' maximum' → logprob: -3.052544593811035
    3. 'max' → logprob: -5.552544593811035
    4. ' maximal' → logprob: -10.052544593811035
    5. '_max' → logprob: -11.677544593811035
    6. 'maxlength' → logprob: -11.802544593811035
    7. ' max' → logprob: -12.802544593811035
    8. '#' → logprob: -13.177544593811035
    9. 'minimum' → logprob: -13.302544593811035
    10. ' maksimum' → logprob: -13.677544593811035

Token 1138: ' possible' (ID: 4149)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.3053895831108093
    2. '_' → logprob: -2.305389642715454
    3. '_positions' → logprob: -2.305389642715454
    4. '_shop' → logprob: -3.680389642715454
    5. '_pos' → logprob: -4.555389404296875
    6. 'position' → logprob: -4.680389404296875
    7. ' positions' → logprob: -5.180389404296875
    8. 'positions' → logprob: -5.555389404296875
    9. ' position' → logprob: -5.930389404296875
    10. '_visit' → logprob: -6.805389404296875

Token 1139: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.8688271045684814
    2. 'positions' → logprob: -0.8688271045684814
    3. 'position' → logprob: -2.1188271045684814
    4. ' position' → logprob: -3.3688271045684814
    5. 'shop' → logprob: -6.618826866149902
    6. '_positions' → logprob: -6.743826866149902
    7. '_position' → logprob: -6.993826866149902
    8. 'visited' → logprob: -7.618826866149902
    9. 'pos' → logprob: -7.743826866149902
    10. ' shop' → logprob: -7.868826866149902

Token 1140: '"' (ID: 1)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5722029209136963
    2. ' for' → logprob: -1.9472029209136963
    3. ' of' → logprob: -2.4472029209136963
    4. 's' → logprob: -2.6972029209136963
    5. 'for' → logprob: -3.4472029209136963
    6. '_of' → logprob: -4.322202682495117
    7. ' =' → logprob: -4.572202682495117
    8. '_in' → logprob: -4.572202682495117
    9. '   ' → logprob: -4.822202682495117
    10. ',' → logprob: -4.947202682495117

Token 1141: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01126957405358553
    2. '
' → logprob: -4.761269569396973
    3. ',' → logprob: -7.511269569396973
    4. ' for' → logprob: -7.761269569396973
    5. '            
' → logprob: -8.011269569396973
    6. '       ' → logprob: -8.136269569396973
    7. 'for' → logprob: -8.261269569396973
    8. ' in' → logprob: -8.511269569396973
    9. '```' → logprob: -9.261269569396973
    10. '   ' → logprob: -9.761269569396973

Token 1142: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.2686464488506317
    2. 'each' → logprob: -2.393646478652954
    3. 'the' → logprob: -2.768646478652954
    4. 'visited' → logprob: -3.518646478652954
    5. ' shops' → logprob: -4.268646240234375
    6. ' each' → logprob: -4.393646240234375
    7. ' the' → logprob: -4.768646240234375
    8. '#' → logprob: -6.018646240234375
    9. 'shop' → logprob: -6.143646240234375
    10. ' visited' → logprob: -6.143646240234375

Token 1143: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08146415650844574
    2. '
' → logprob: -2.7064640522003174
    3. ' in' → logprob: -5.5814642906188965
    4. ',' → logprob: -5.7064642906188965
    5. '            
' → logprob: -6.7064642906188965
    6. ' for' → logprob: -7.2064642906188965
    7. 'in' → logprob: -7.4564642906188965
    8. '       ' → logprob: -7.7064642906188965
    9. 'for' → logprob: -7.7064642906188965
    10. '```' → logprob: -9.206463813781738

Token 1144: ' visiting' (ID: 18798)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1878853738307953
    2. 'top' → logprob: -1.8128854036331177
    3. 'tour' → logprob: -6.687885284423828
    4. '
' → logprob: -6.937885284423828
    5. ' the' → logprob: -7.187885284423828
    6. 'path' → logprob: -7.312885284423828
    7. 'visited' → logprob: -7.687885284423828
    8. 'range' → logprob: -7.687885284423828
    9. 'visit' → logprob: -7.812885284423828
    10. '[top' → logprob: -7.812885284423828

Token 1145: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0168311707675457
    2. 'sequence' → logprob: -4.391831398010254
    3. '
' → logprob: -5.766831398010254
    4. ' order' → logprob: -7.641831398010254
    5. '#' → logprob: -8.516831398010254
    6. '           ' → logprob: -8.766831398010254
    7. '_order' → logprob: -9.266831398010254
    8. '   ' → logprob: -9.266831398010254
    9. ' sequence' → logprob: -9.766831398010254
    10. '       ' → logprob: -10.641831398010254

Token 1146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023032795637845993
    2. '
' → logprob: -3.8980329036712646
    3. 'positions' → logprob: -7.0230326652526855
    4. '       ' → logprob: -7.8980326652526855
    5. ',' → logprob: -8.523033142089844
    6. '#' → logprob: -8.898033142089844
    7. 'position' → logprob: -8.898033142089844
    8. '            
' → logprob: -9.023033142089844
    9. ' positions' → logprob: -9.523033142089844
    10. 'from' → logprob: -9.773033142089844

Token 1147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01150293555110693
    2. '
' → logprob: -4.511502742767334
    3. '            
' → logprob: -7.761502742767334
    4. '       ' → logprob: -12.261503219604492
    5. '```' → logprob: -12.261503219604492
    6. ',' → logprob: -12.386503219604492
    7. '<|end|>' → logprob: -12.636503219604492
    8. '            ' → logprob: -13.136503219604492
    9. '          ' → logprob: -13.511503219604492
    10. '        
' → logprob: -13.636503219604492

Token 1148: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012952796183526516
    2. 'min' → logprob: -5.13795280456543
    3. '       ' → logprob: -6.01295280456543
    4. 'pos' → logprob: -6.88795280456543
    5. 'positions' → logprob: -6.88795280456543
    6. '
' → logprob: -7.01295280456543
    7. 'from' → logprob: -8.01295280456543
    8. 'max' → logprob: -8.13795280456543
    9. 'dp' → logprob: -8.26295280456543
    10. '            
' → logprob: -8.76295280456543

Token 1149: ' Key' (ID: 7926)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11944164335727692
    2. '
' → logprob: -3.1194417476654053
    3. 'min' → logprob: -3.3694417476654053
    4. 'positions' → logprob: -4.744441509246826
    5. '       ' → logprob: -5.119441509246826
    6. 'dp' → logprob: -5.244441509246826
    7. 'max' → logprob: -5.494441509246826
    8. 'pos' → logprob: -5.744441509246826
    9. 'from' → logprob: -6.619441509246826
    10. '            
' → logprob: -7.119441509246826

Token 1150: ' observation' (ID: 37276)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2555850744247437
    2. '_positions' → logprob: -1.2555850744247437
    3. '_pos' → logprob: -2.505585193634033
    4. ' =' → logprob: -2.755585193634033
    5. ':' → logprob: -2.755585193634033
    6. '_points' → logprob: -4.130585193634033
    7. '_position' → logprob: -4.130585193634033
    8. '   ' → logprob: -4.255585193634033
    9. 'positions' → logprob: -4.505585193634033
    10. 'point' → logprob: -4.505585193634033

Token 1151: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09658371657133102
    2. '           ' → logprob: -2.846583604812622
    3. ':
' → logprob: -3.971583604812622
    4. '
' → logprob: -4.346583843231201
    5. ',' → logprob: -7.471583843231201
    6. ' is' → logprob: -7.971583843231201
    7. ' :' → logprob: -8.346583366394043
    8. '#' → logprob: -8.846583366394043
    9. ' for' → logprob: -8.971583366394043
    10. ' =' → logprob: -8.971583366394043

Token 1152: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.358113408088684
    2. 'top' → logprob: -1.358113408088684
    3. 'constraints' → logprob: -1.358113408088684
    4. 'previous' → logprob: -2.3581132888793945
    5. 'problem' → logprob: -2.6081132888793945
    6. 'code' → logprob: -3.7331132888793945
    7. '#' → logprob: -4.6081132888793945
    8. 'pos' → logprob: -5.8581132888793945
    9. 'positions' → logprob: -5.8581132888793945
    10. 'comments' → logprob: -5.8581132888793945

Token 1153: ' statement' (ID: 9710)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7100376486778259
    2. '           ' → logprob: -0.7100376486778259
    3. ':' → logprob: -4.710037708282471
    4. '            
' → logprob: -5.460037708282471
    5. ':
' → logprob: -6.960037708282471
    6. ' is' → logprob: -7.710037708282471
    7. ',' → logprob: -8.335037231445312
    8. '       ' → logprob: -8.460037231445312
    9. '

' → logprob: -8.460037231445312
    10. '#' → logprob: -8.460037231445312

Token 1154: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12625189125537872
    2. '
' → logprob: -2.2512519359588623
    3. ':' → logprob: -5.001251697540283
    4. ' for' → logprob: -6.501251697540283
    5. '            
' → logprob: -6.751251697540283
    6. ':
' → logprob: -7.001251697540283
    7. ',' → logprob: -7.751251697540283
    8. '#' → logprob: -7.876251697540283
    9. 'for' → logprob: -7.876251697540283
    10. ' is' → logprob: -8.001252174377441

Token 1155: ' If' (ID: 1843)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6225335001945496
    2. 'min' → logprob: -2.2475335597991943
    3. ' max' → logprob: -3.1225335597991943
    4. '           ' → logprob: -3.3725335597991943
    5. 'dp' → logprob: -3.3725335597991943
    6. ' positions' → logprob: -3.4975335597991943
    7. 'positions' → logprob: -3.8725335597991943
    8. 'max' → logprob: -4.122533321380615
    9. ' pos' → logprob: -4.122533321380615
    10. ' first' → logprob: -4.247533321380615

Token 1156: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6455763578414917
    2. 'the' → logprob: -2.6455764770507812
    3. 'len' → logprob: -3.1455764770507812
    4. ' self' → logprob: -3.2705764770507812
    5. 'not' → logprob: -3.3955764770507812
    6. 'top' → logprob: -3.5205764770507812
    7. ' not' → logprob: -3.6455764770507812
    8. ' we' → logprob: -3.8955764770507812
    9. 'constraints' → logprob: -3.8955764770507812
    10. 'we' → logprob: -4.020576477050781

Token 1157: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.7435858249664307
    2. '_positions' → logprob: -1.8685858249664307
    3. '_' → logprob: -2.7435858249664307
    4. '_position' → logprob: -2.9935858249664307
    5. ' must' → logprob: -2.9935858249664307
    6. '   ' → logprob: -3.4935858249664307
    7. 'on' → logprob: -3.4935858249664307
    8. 's' → logprob: -3.4935858249664307
    9. '_pos' → logprob: -3.4935858249664307
    10. ' in' → logprob: -3.4935858249664307

Token 1158: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.03655320033431053
    2. 'be' → logprob: -3.411553144454956
    3. ' come' → logprob: -6.911553382873535
    4. ' visit' → logprob: -7.286553382873535
    5. 'visit' → logprob: -7.661553382873535
    6. '_be' → logprob: -8.286553382873535
    7. 'preced' → logprob: -8.911553382873535
    8. ' appear' → logprob: -9.286553382873535
    9. 'come' → logprob: -9.786553382873535
    10. '_visit' → logprob: -10.161553382873535

Token 1159: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.33576804399490356
    2. ' visited' → logprob: -1.4607679843902588
    3. 'before' → logprob: -3.460767984390259
    4. ' before' → logprob: -3.960767984390259
    5. 'after' → logprob: -6.585768222808838
    6. ' after' → logprob: -6.960768222808838
    7. '   ' → logprob: -9.96076774597168
    8. ' ' → logprob: -10.08576774597168
    9. '_before' → logprob: -10.21076774597168
    10. '  ' → logprob: -10.46076774597168

Token 1160: ' after' (ID: 1934)
  Prédit: ' before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.191362202167511
    2. ' after' → logprob: -2.066362142562866
    3. 'before' → logprob: -3.691362142562866
    4. '_before' → logprob: -4.191362380981445
    5. 'after' → logprob: -5.566362380981445
    6. ' at' → logprob: -6.941362380981445
    7. ' earlier' → logprob: -6.941362380981445
    8. '_after' → logprob: -7.066362380981445
    9. ' immediately' → logprob: -9.191362380981445
    10. '	before' → logprob: -9.191362380981445

Token 1161: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5063146352767944
    2. 'b' → logprob: -1.8813146352767944
    3. ' d' → logprob: -1.8813146352767944
    4. ' b' → logprob: -2.381314754486084
    5. 'a' → logprob: -10.631314277648926
    6. 'u' → logprob: -10.881314277648926
    7. ' u' → logprob: -11.631314277648926
    8. ' a' → logprob: -11.881314277648926
    9. ' ' → logprob: -12.256314277648926
    10. '    ' → logprob: -13.006314277648926

Token 1162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020134560763835907
    2. '           ' → logprob: -7.627013683319092
    3. ',
' → logprob: -7.627013683319092
    4. ':' → logprob: -7.752013683319092
    5. ' ,' → logprob: -8.002013206481934
    6. ' and' → logprob: -9.502013206481934
    7. '               ' → logprob: -10.252013206481934
    8. ' (' → logprob: -10.377013206481934
    9. ' then' → logprob: -10.502013206481934
    10. ':
' → logprob: -10.627013206481934

Token 1163: ' and' (ID: 326)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5649245381355286
    2. '               ' → logprob: -1.8149244785308838
    3. '#' → logprob: -2.814924478530884
    4. ' then' → logprob: -2.939924478530884
    5. ' #' → logprob: -2.939924478530884
    6. '           ' → logprob: -3.314924478530884
    7. 'c' → logprob: -4.314924716949463
    8. ' the' → logprob: -4.439924716949463
    9. '                   ' → logprob: -4.439924716949463
    10. ' continue' → logprob: -5.189924716949463

Token 1164: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3810882866382599
    2. 'self' → logprob: -1.8810882568359375
    3. ' d' → logprob: -3.1310882568359375
    4. 'positions' → logprob: -3.6310882568359375
    5. 'c' → logprob: -3.8810882568359375
    6. ' self' → logprob: -4.2560882568359375
    7. ' positions' → logprob: -4.3810882568359375
    8. '#' → logprob: -4.3810882568359375
    9. ' c' → logprob: -5.0060882568359375
    10. 'shop' → logprob: -5.2560882568359375

Token 1165: ' >' (ID: 1424)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.9220138788223267
    2. ' is' → logprob: -1.5470138788223267
    3. ' must' → logprob: -1.5470138788223267
    4. ' has' → logprob: -3.047013759613037
    5. ' position' → logprob: -3.547013759613037
    6. 'position' → logprob: -3.922013759613037
    7. '_position' → logprob: -4.422013759613037
    8. '.' → logprob: -4.797013759613037
    9. ''s' → logprob: -4.922013759613037
    10. 'must' → logprob: -5.047013759613037

Token 1166: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07892569899559021
    2. ' d' → logprob: -2.578925609588623
    3. '
' → logprob: -11.328926086425781
    4. '=' → logprob: -11.453926086425781
    5. '	d' → logprob: -12.078926086425781
    6. ' ' → logprob: -13.578926086425781
    7. '>d' → logprob: -13.703926086425781
    8. '   ' → logprob: -13.828926086425781
    9. '=d' → logprob: -14.453926086425781
    10. ' 
' → logprob: -14.703926086425781

Token 1167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5386021733283997
    2. ',' → logprob: -1.2886021137237549
    3. ':
' → logprob: -2.038602113723755
    4. ' and' → logprob: -5.913602352142334
    5. ',
' → logprob: -6.163602352142334
    6. '+' → logprob: -6.413602352142334
    7. '               ' → logprob: -6.538602352142334
    8. '           ' → logprob: -6.913602352142334
    9. ' or' → logprob: -8.538601875305176
    10. '                       ' → logprob: -8.913601875305176

Token 1168: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14716750383377075
    2. '           ' → logprob: -2.272167444229126
    3. '                   ' → logprob: -3.897167444229126
    4. '                       ' → logprob: -5.647167682647705
    5. ' continue' → logprob: -5.772167682647705
    6. '                           ' → logprob: -6.522167682647705
    7. ' for' → logprob: -6.647167682647705
    8. ',' → logprob: -7.647167682647705
    9. 'continue' → logprob: -7.647167682647705
    10. '   ' → logprob: -8.022167205810547

Token 1169: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6971241235733032
    2. '           ' → logprob: -0.9471241235733032
    3. '                   ' → logprob: -3.0721240043640137
    4. ' continue' → logprob: -3.9471240043640137
    5. ' for' → logprob: -4.447124004364014
    6. '                       ' → logprob: -4.572124004364014
    7. '#' (adapté à ' #') → logprob: -4.947124004364014
    8. ' #' → logprob: -5.572124004364014
    9. 'for' → logprob: -5.697124004364014
    10. 'continue' → logprob: -5.697124004364014

Token 1170: ' she' (ID: 1770)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9824981093406677
    2. '           ' → logprob: -0.9824981093406677
    3. ' for' → logprob: -2.4824981689453125
    4. ' #' → logprob: -2.7324981689453125
    5. 'for' → logprob: -3.3574981689453125
    6. '               ' → logprob: -3.4824981689453125
    7. ' continue' → logprob: -4.2324981689453125
    8. 'continue' → logprob: -5.1074981689453125
    9. ' ' → logprob: -5.7324981689453125
    10. '                   ' → logprob: -5.8574981689453125

Token 1171: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.08658642321825027
    2. ' should' → logprob: -3.5865864753723145
    3. ' has' → logprob: -4.7115864753723145
    4. 'must' → logprob: -5.0865864753723145
    5. ' #' → logprob: -5.3365864753723145
    6. ' ' → logprob: -5.7115864753723145
    7. ' will' → logprob: -5.8365864753723145
    8. ' can' → logprob: -5.8365864753723145
    9. ' cannot' → logprob: -5.9615864753723145
    10. '_' → logprob: -6.0865864753723145

Token 1172: ' pass' (ID: 1853)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visit' → logprob: -0.5188754200935364
    2. 'visit' → logprob: -2.1438753604888916
    3. ' not' → logprob: -2.3938753604888916
    4. ' move' → logprob: -3.3938753604888916
    5. ' return' → logprob: -3.7688753604888916
    6. ' go' → logprob: -4.143875598907471
    7. ' always' → logprob: -4.268875598907471
    8. ' walk' → logprob: -4.268875598907471
    9. ' never' → logprob: -4.643875598907471
    10. ' continue' → logprob: -4.768875598907471

Token 1173: ' shop' (ID: 9100)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.1443040817975998
    2. 'through' → logprob: -3.519304037094116
    3. ' the' → logprob: -3.644304037094116
    4. ' d' → logprob: -3.769304037094116
    5. ' c' → logprob: -4.144304275512695
    6. ' all' → logprob: -4.394304275512695
    7. ' them' → logprob: -5.019304275512695
    8. 'd' → logprob: -5.519304275512695
    9. 'c' → logprob: -5.519304275512695
    10. ' over' → logprob: -6.019304275512695

Token 1174: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7218812704086304
    2. 'd' → logprob: -1.4718812704086304
    3. ' c' → logprob: -1.5968812704086304
    4. 'c' → logprob: -3.09688138961792
    5. '`' → logprob: -4.72188138961792
    6. ' '' → logprob: -4.72188138961792
    7. ''' → logprob: -4.97188138961792
    8. ' ' → logprob: -5.97188138961792
    9. ' 
' → logprob: -6.22188138961792
    10. ' `' → logprob: -6.72188138961792

Token 1175: ' before' (ID: 2254)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17048834264278412
    2. ',' → logprob: -3.0454883575439453
    3. '
' → logprob: -3.1704883575439453
    4. '               ' → logprob: -3.7954883575439453
    5. ' for' → logprob: -4.295488357543945
    6. ' and' → logprob: -4.795488357543945
    7. '                   ' → logprob: -5.795488357543945
    8. '.' → logprob: -6.420488357543945
    9. ' in' → logprob: -6.420488357543945
    10. 'for' → logprob: -6.545488357543945

Token 1176: ' reaching' (ID: 29787)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.5067603588104248
    2. ' visiting' → logprob: -1.6317603588104248
    3. ' and' → logprob: -1.8817603588104248
    4. ',' → logprob: -2.006760358810425
    5. 'c' → logprob: -3.131760358810425
    6. '           ' → logprob: -3.506760358810425
    7. ' c' → logprob: -3.506760358810425
    8. '.' → logprob: -4.006760597229004
    9. 'continu' → logprob: -4.131760597229004
    10. '#' → logprob: -4.256760597229004

Token 1177: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026538770645856857
    2. ' c' → logprob: -3.651538848876953
    3. 'shop' → logprob: -8.901538848876953
    4. ' shop' → logprob: -9.776538848876953
    5. '
' → logprob: -10.901538848876953
    6. 'the' → logprob: -11.276538848876953
    7. ' the' → logprob: -12.401538848876953
    8. '```' → logprob: -13.151538848876953
    9. 'position' → logprob: -13.526538848876953
    10. '	c' → logprob: -14.276538848876953

Token 1178: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11771745979785919
    2. '
' → logprob: -2.2427175045013428
    3. '            
' → logprob: -5.867717266082764
    4. ',' → logprob: -6.992717266082764
    5. '<|end|>' → logprob: -7.617717266082764
    6. ',
' → logprob: -9.617717742919922
    7. '

' → logprob: -9.742717742919922
    8. '       ' → logprob: -9.742717742919922
    9. '.' → logprob: -9.742717742919922
    10. '#' → logprob: -9.992717742919922

Token 1179: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01815919391810894
    2. '            
' → logprob: -5.14315938949585
    3. '               ' → logprob: -5.39315938949585
    4. '#' → logprob: -5.76815938949585
    5. '                   ' → logprob: -6.26815938949585
    6. '            ' → logprob: -7.26815938949585
    7. '
' → logprob: -7.51815938949585
    8. '       ' → logprob: -8.518158912658691
    9. '                       ' → logprob: -8.643158912658691
    10. ' 
' → logprob: -9.143158912658691

Token 1180: ' must' (ID: 2804)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15493667125701904
    2. ' #' → logprob: -3.2799367904663086
    3. ' the' → logprob: -3.4049367904663086
    4. ' if' → logprob: -4.279936790466309
    5. 'the' → logprob: -4.654936790466309
    6. ' she' → logprob: -4.904936790466309
    7. '           ' → logprob: -5.154936790466309
    8. ' c' → logprob: -5.279936790466309
    9. ' since' → logprob: -5.529936790466309
    10. 'she' → logprob: -5.779936790466309

Token 1181: ' return' (ID: 622)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.1805973052978516
    2. 'also' → logprob: -1.1805973052978516
    3. 'visit' → logprob: -2.4305973052978516
    4. ' not' → logprob: -2.5555973052978516
    5. ' also' → logprob: -2.5555973052978516
    6. 'pass' → logprob: -3.1805973052978516
    7. 'allow' → logprob: -4.055597305297852
    8. 'continue' → logprob: -4.805597305297852
    9. ' visit' → logprob: -4.930597305297852
    10. 'never' → logprob: -4.930597305297852

Token 1182: ' back' (ID: 1602)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033836107701063156
    2. '
' → logprob: -3.9088361263275146
    3. ' to' → logprob: -6.0338358879089355
    4. ',' → logprob: -6.0338358879089355
    5. '            
' → logprob: -6.2838358879089355
    6. '               ' → logprob: -6.5338358879089355
    7. '<|end|>' → logprob: -6.6588358879089355
    8. '.' → logprob: -7.2838358879089355
    9. '                   ' → logprob: -8.283836364746094
    10. '       ' → logprob: -8.283836364746094

Token 1183: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053502485156059265
    2. '
' → logprob: -3.0535025596618652
    3. ',' → logprob: -6.803502559661865
    4. '            
' → logprob: -7.428502559661865
    5. '.' → logprob: -7.553502559661865
    6. ' for' → logprob: -7.803502559661865
    7. '<|end|>' → logprob: -7.928502559661865
    8. 'for' → logprob: -8.053502082824707
    9. ' to' → logprob: -8.428502082824707
    10. '#' → logprob: -8.553502082824707

Token 1184: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09483548253774643
    2. 'visit' → logprob: -2.5948355197906494
    3. 'shop' → logprob: -4.96983528137207
    4. 'c' → logprob: -5.84483528137207
    5. 'shops' → logprob: -6.09483528137207
    6. 'the' → logprob: -6.34483528137207
    7. 'some' → logprob: -7.71983528137207
    8. ' d' → logprob: -7.84483528137207
    9. ' visit' → logprob: -8.71983528137207
    10. 'positions' → logprob: -8.96983528137207

Token 1185: ' after' (ID: 1934)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3332118093967438
    2. '           ' → logprob: -1.3332117795944214
    3. '<|end|>' → logprob: -4.833211898803711
    4. '            
' → logprob: -5.708211898803711
    5. '

' → logprob: -6.458211898803711
    6. '.' → logprob: -6.458211898803711
    7. ',' → logprob: -6.458211898803711
    8. '<|end|>' → logprob: -7.208211898803711
    9. '#' → logprob: -7.833211898803711
    10. '
' → logprob: -8.583211898803711

Token 1186: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17531386017799377
    2. '
' → logprob: -2.925313949584961
    3. '.' → logprob: -3.175313949584961
    4. ',' → logprob: -3.925313949584961
    5. '               ' → logprob: -4.425313949584961
    6. '<|end|>' → logprob: -4.425313949584961
    7. '            
' → logprob: -5.800313949584961
    8. ',
' → logprob: -5.800313949584961
    9. '                   ' → logprob: -6.050313949584961
    10. '#' → logprob: -6.050313949584961

Token 1187: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24991194903850555
    2. '
' → logprob: -1.624911904335022
    3. '<|end|>' → logprob: -4.874911785125732
    4. '            
' → logprob: -5.624911785125732
    5. ',' → logprob: -5.624911785125732
    6. '.' → logprob: -5.749911785125732
    7. '#' → logprob: -6.249911785125732
    8. '       ' → logprob: -7.499911785125732
    9. '               ' → logprob: -7.624911785125732
    10. ',
' → logprob: -7.874911785125732

Token 1188: ' increments' (ID: 124105)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18178099393844604
    2. '               ' → logprob: -2.681781053543091
    3. '            
' → logprob: -3.931781053543091
    4. '                   ' → logprob: -3.931781053543091
    5. '            ' → logprob: -4.431780815124512
    6. ' 
' → logprob: -4.681780815124512
    7. '.' → logprob: -4.806780815124512
    8. ' ' → logprob: -5.431780815124512
    9. '<|end|>' → logprob: -5.556780815124512
    10. '                       ' → logprob: -5.681780815124512

Token 1189: ' walking' (ID: 15015)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25457754731178284
    2. '
' → logprob: -1.6295775175094604
    3. '<|end|>' → logprob: -4.37957763671875
    4. '               ' → logprob: -5.62957763671875
    5. '.' → logprob: -6.37957763671875
    6. '       ' → logprob: -6.50457763671875
    7. '<|end|>' → logprob: -6.50457763671875
    8. '            ' → logprob: -6.87957763671875
    9. ',' → logprob: -7.00457763671875
    10. '            
' → logprob: -7.25457763671875

Token 1190: ' distance' (ID: 9324)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05516593158245087
    2. '
' → logprob: -3.555166006088257
    3. '.' → logprob: -4.930165767669678
    4. '<|end|>' → logprob: -5.305165767669678
    5. '               ' → logprob: -5.555165767669678
    6. ',' → logprob: -6.055165767669678
    7. '            
' → logprob: -6.805165767669678
    8. '#' → logprob: -6.930165767669678
    9. '       ' → logprob: -7.055165767669678
    10. '            ' → logprob: -7.680165767669678

Token 1191: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.552631139755249
    2. '
' → logprob: -0.927631139755249
    3. '<|end|>' → logprob: -3.927631139755249
    4. '            
' → logprob: -6.052631378173828
    5. '

' → logprob: -6.177631378173828
    6. '<|end|>' → logprob: -6.427631378173828
    7. '       ' → logprob: -6.927631378173828
    8. ',' → logprob: -7.552631378173828
    9. '.' → logprob: -8.052631378173828
    10. '#' → logprob: -8.427631378173828

Token 1192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008355467580258846
    2. '
' → logprob: -5.258355617523193
    3. '            
' → logprob: -6.383355617523193
    4. '<|end|>' → logprob: -8.008355140686035
    5. '       ' → logprob: -8.258355140686035
    6. '               ' → logprob: -8.758355140686035
    7. '#' → logprob: -9.008355140686035
    8. '            ' → logprob: -9.508355140686035
    9. '          ' → logprob: -10.258355140686035
    10. ' 
' → logprob: -10.258355140686035

Token 1193: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2828022837638855
    2. '
' → logprob: -1.4078023433685303
    3. '            
' → logprob: -7.032802104949951
    4. '       ' → logprob: -8.03280258178711
    5. '#' (adapté à ' #') → logprob: -8.65780258178711
    6. '```' → logprob: -9.03280258178711
    7. '

' → logprob: -10.40780258178711
    8. '        
' → logprob: -10.78280258178711
    9. 'from' → logprob: -11.15780258178711
    10. '               ' → logprob: -11.78280258178711

Token 1194: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07675934582948685
    2. '
' → logprob: -2.7017593383789062
    3. '            
' → logprob: -5.826759338378906
    4. '       ' → logprob: -6.201759338378906
    5. '#' → logprob: -8.076759338378906
    6. 'max' → logprob: -8.451759338378906
    7. '```' → logprob: -8.701759338378906
    8. '        
' → logprob: -8.826759338378906
    9. 'from' → logprob: -8.951759338378906
    10. 'distance' → logprob: -9.076759338378906

Token 1195: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2000043392181396
    2. 'max' → logprob: -1.7000043392181396
    3. 'def' → logprob: -2.4500043392181396
    4. 'distance' → logprob: -2.9500043392181396
    5. ' #' → logprob: -3.4500043392181396
    6. 'dp' → logprob: -3.5750043392181396
    7. '
' → logprob: -3.5750043392181396
    8. ' max' → logprob: -3.7000043392181396
    9. 'dist' → logprob: -3.7000043392181396
    10. ' minimal' → logprob: -3.9500043392181396

Token 1196: ' cost' (ID: 3097)
  Prédit: ' walking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' walking' → logprob: -1.4452844858169556
    2. 'walking' → logprob: -1.4452844858169556
    3. ' length' → logprob: -2.320284366607666
    4. 'distance' → logprob: -2.695284366607666
    5. 'length' → logprob: -2.820284366607666
    6. ' visiting' → logprob: -2.945284366607666
    7. '#' → logprob: -3.695284366607666
    8. 'position' → logprob: -3.695284366607666
    9. 'interval' → logprob: -3.820284366607666
    10. 'possible' → logprob: -3.820284366607666

Token 1197: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9689434170722961
    2. ' =' → logprob: -1.3439433574676514
    3. ' is' → logprob: -2.2189433574676514
    4. '=' → logprob: -2.4689433574676514
    5. '_' → logprob: -2.7189433574676514
    6. '#' → logprob: -4.7189435958862305
    7. ')' → logprob: -4.7189435958862305
    8. '
' → logprob: -4.8439435958862305
    9. '               ' → logprob: -4.8439435958862305
    10. ' ' → logprob: -4.9689435958862305

Token 1198: ' travel' (ID: 6410)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.050913359969854355
    2. 'max' → logprob: -3.6759133338928223
    3. ' self' → logprob: -3.8009133338928223
    4. ' topo' → logprob: -7.675913333892822
    5. 'self' → logprob: -7.800913333892822
    6. ' the' → logprob: -8.17591381072998
    7. ' top' → logprob: -8.30091381072998
    8. 'top' → logprob: -8.80091381072998
    9. ' min' → logprob: -9.05091381072998
    10. '   ' → logprob: -10.17591381072998

Token 1199: ' from' (ID: 591)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5696725845336914
    2. ' =' → logprob: -1.9446725845336914
    3. ' length' → logprob: -1.9446725845336914
    4. '_distance' → logprob: -2.1946725845336914
    5. '_' → logprob: -2.3196725845336914
    6. '           ' → logprob: -2.9446725845336914
    7. ' distance' → logprob: -3.0696725845336914
    8. ' _' → logprob: -3.3196725845336914
    9. 'distance' → logprob: -3.4446725845336914
    10. '   ' → logprob: -3.4446725845336914

Token 1200: ' entrance' (ID: 27326)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13952909409999847
    2. 'min' → logprob: -2.63952898979187
    3. 'entr' → logprob: -3.63952898979187
    4. 'top' → logprob: -3.76452898979187
    5. 'the' → logprob: -5.514529228210449
    6. 'first' → logprob: -7.389529228210449
    7. 'position' → logprob: -7.389529228210449
    8. '1' → logprob: -7.514529228210449
    9. 'start' → logprob: -7.764529228210449
    10. 'shop' → logprob: -7.764529228210449

Token 1201: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24405312538146973
    2. ' to' → logprob: -1.9940531253814697
    3. ' (' → logprob: -3.3690531253814697
    4. 'to' → logprob: -3.7440531253814697
    5. ' +' → logprob: -4.744052886962891
    6. '+' → logprob: -5.244052886962891
    7. '0' → logprob: -5.994052886962891
    8. ' ' → logprob: -6.619052886962891
    9. '           ' → logprob: -6.744052886962891
    10. '   ' → logprob: -7.119052886962891

Token 1202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018098317086696625
    2. '(' → logprob: -4.6430983543396
    3. ')' → logprob: -4.8930983543396
    4. ' (' → logprob: -8.768097877502441
    5. ' ' → logprob: -8.768097877502441
    6. ' to' → logprob: -9.393097877502441
    7. ',' → logprob: -9.393097877502441
    8. '```' → logprob: -9.768097877502441
    9. '`' → logprob: -9.893097877502441
    10. ')
' → logprob: -10.018097877502441

Token 1203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22083838284015656
    2. ')+' → logprob: -2.5958383083343506
    3. ' to' → logprob: -2.7208383083343506
    4. 'to' → logprob: -3.2208383083343506
    5. ' )' → logprob: -4.72083854675293
    6. '+' → logprob: -5.34583854675293
    7. ' +' → logprob: -6.22083854675293
    8. ',' → logprob: -7.09583854675293
    9. ' ' → logprob: -8.09583854675293
    10. '           ' → logprob: -8.59583854675293

Token 1204: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.22914321720600128
    2. ' +' → logprob: -2.4791431427001953
    3. 'to' → logprob: -2.7291431427001953
    4. '+' → logprob: -2.9791431427001953
    5. ' plus' → logprob: -6.479143142700195
    6. ' through' → logprob: -6.729143142700195
    7. ' ' → logprob: -6.729143142700195
    8. '0' → logprob: -8.354143142700195
    9. ',' → logprob: -8.729143142700195
    10. '   ' → logprob: -9.104143142700195

Token 1205: ' max' (ID: 2999)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3489212095737457
    2. '0' → logprob: -2.223921298980713
    3. ' topo' → logprob: -2.598921298980713
    4. '1' → logprob: -3.598921298980713
    5. 'the' → logprob: -4.473921298980713
    6. 'max' → logprob: -4.473921298980713
    7. 'min' → logprob: -4.598921298980713
    8. ' top' → logprob: -4.598921298980713
    9. ' R' → logprob: -5.098921298980713
    10. 'self' → logprob: -5.223921298980713

Token 1206: ' visited' (ID: 18416)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.05477169156074524
    2. '(' → logprob: -3.429771661758423
    3. '(
' → logprob: -4.179771900177002
    4. 't' → logprob: -6.429771900177002
    5. '_position' → logprob: -6.929771900177002
    6. 'position' → logprob: -7.679771900177002
    7. 'visited' → logprob: -7.929771900177002
    8. '(max' → logprob: -8.054771423339844
    9. '```' → logprob: -8.679771423339844
    10. '(top' → logprob: -8.679771423339844

Token 1207: ' position' (ID: 4010)
  Prédit: '_shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_shop' → logprob: -1.4209474325180054
    2. '_' → logprob: -1.9209474325180054
    3. '_position' → logprob: -1.9209474325180054
    4. ')' → logprob: -2.170947551727295
    5. '   ' → logprob: -2.920947551727295
    6. 'shop' → logprob: -3.170947551727295
    7. ' _' → logprob: -3.295947551727295
    8. '_sh' → logprob: -3.420947551727295
    9. ' shop' → logprob: -3.420947551727295
    10. '_pos' → logprob: -4.045947551727295

Token 1208: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04151303693652153
    2. '.' → logprob: -4.666512966156006
    3. '<|end|>' → logprob: -5.041512966156006
    4. ',' → logprob: -5.166512966156006
    5. '
' → logprob: -5.666512966156006
    6. ')' → logprob: -5.791512966156006
    7. '       ' → logprob: -6.166512966156006
    8. '               ' → logprob: -6.416512966156006
    9. '+' → logprob: -7.041512966156006
    10. ' =' → logprob: -7.416512966156006

Token 1209: ' order' (ID: 2569)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.029624931514263153
    2. 'the' → logprob: -3.7796249389648438
    3. ' topo' → logprob: -6.279624938964844
    4. '[top' → logprob: -6.279624938964844
    5. '   ' → logprob: -7.154624938964844
    6. '
' → logprob: -7.279624938964844
    7. 'shop' → logprob: -8.154624938964844
    8. 'range' → logprob: -8.779624938964844
    9. 'shops' → logprob: -8.904624938964844
    10. ' top' → logprob: -9.154624938964844

Token 1210: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31560197472572327
    2. '<|end|>' → logprob: -1.5656019449234009
    3. '
' → logprob: -3.0656020641326904
    4. '.' → logprob: -5.690601825714111
    5. '<|end|>' → logprob: -6.190601825714111
    6. '       ' → logprob: -6.190601825714111
    7. ')' → logprob: -6.440601825714111
    8. ',' → logprob: -6.565601825714111
    9. '            
' → logprob: -6.565601825714111
    10. '            ' → logprob: -7.315601825714111

Token 1211: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023060627281665802
    2. '               ' → logprob: -5.0230607986450195
    3. ' and' → logprob: -5.8980607986450195
    4. '            ' → logprob: -6.0230607986450195
    5. '                   ' → logprob: -6.3980607986450195
    6. '
' → logprob: -6.5230607986450195
    7. ' then' → logprob: -6.6480607986450195
    8. 'return' → logprob: -7.0230607986450195
    9. ' +' → logprob: -7.5230607986450195
    10. ',' → logprob: -7.6480607986450195

Token 1212: ' traverse' (ID: 66957)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7220730185508728
    2. ' max' → logprob: -1.3470730781555176
    3. '(top' → logprob: -2.7220730781555176
    4. '1' → logprob: -3.3470730781555176
    5. 'top' → logprob: -3.5970730781555176
    6. 'min' → logprob: -3.5970730781555176
    7. ' min' → logprob: -3.7220730781555176
    8. ' (' → logprob: -4.097073078155518
    9. '(max' → logprob: -4.597073078155518
    10. '
' → logprob: -4.847073078155518

Token 1213: ' shops' (ID: 22509)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5323282480239868
    2. 'back' → logprob: -1.5323282480239868
    3. ' back' → logprob: -1.5323282480239868
    4. ' all' → logprob: -1.6573282480239868
    5. ' between' → logprob: -3.6573281288146973
    6. 'the' → logprob: -3.7823281288146973
    7. 'between' → logprob: -3.7823281288146973
    8. 'all' → logprob: -3.9073281288146973
    9. 'from' → logprob: -3.9073281288146973
    10. ' from' → logprob: -4.157328128814697

Token 1214: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1923077553510666
    2. '
' → logprob: -2.192307710647583
    3. ',' → logprob: -3.942307710647583
    4. '<|end|>' → logprob: -4.317307949066162
    5. '.' → logprob: -5.192307949066162
    6. '       ' → logprob: -5.442307949066162
    7. ')' → logprob: -5.817307949066162
    8. '[' → logprob: -6.442307949066162
    9. '<|end|>' → logprob: -6.692307949066162
    10. '            
' → logprob: -6.692307949066162

Token 1215: ' order' (ID: 2569)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -1.117610216140747
    2. 'order' → logprob: -1.367610216140747
    3. 'the' → logprob: -2.242610216140747
    4. 'range' → logprob: -2.367610216140747
    5. 'top' → logprob: -2.742610216140747
    6. '```' → logprob: -3.492610216140747
    7. ' order' → logprob: -3.992610216140747
    8. 'in' → logprob: -4.117609977722168
    9. 'sequence' → logprob: -4.242609977722168
    10. ' range' → logprob: -4.242609977722168

Token 1216: ' respecting' (ID: 136775)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4549041986465454
    2. '
' → logprob: -1.0799041986465454
    3. '<|end|>' → logprob: -4.454904079437256
    4. '       ' → logprob: -5.079904079437256
    5. '            
' → logprob: -6.329904079437256
    6. ',' → logprob: -6.329904079437256
    7. '<|end|>' → logprob: -7.079904079437256
    8. 'return' → logprob: -7.704904079437256
    9. '[' → logprob: -8.079904556274414
    10. '\
' → logprob: -8.204904556274414

Token 1217: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.32343146204948425
    2. ' constraints' → logprob: -1.3234314918518066
    3. 'the' → logprob: -5.448431491851807
    4. ' the' → logprob: -5.573431491851807
    5. '
' → logprob: -6.698431491851807
    6. '```' → logprob: -9.073431015014648
    7. '`' → logprob: -9.323431015014648
    8. ' 
' → logprob: -9.698431015014648
    9. 'constraint' → logprob: -9.698431015014648
    10. '"' → logprob: -10.198431015014648

Token 1218: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4782673716545105
    2. '           ' → logprob: -1.1032674312591553
    3. '<|end|>' → logprob: -3.3532674312591553
    4. '<|end|>' → logprob: -5.478267192840576
    5. '            
' → logprob: -5.603267192840576
    6. ',' → logprob: -6.228267192840576
    7. '

' → logprob: -6.853267192840576
    8. '.' → logprob: -7.728267192840576
    9. '```' → logprob: -8.103267669677734
    10. '\
' → logprob: -8.478267669677734

Token 1219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006555025465786457
    2. '#' → logprob: -5.256555080413818
    3. '               ' → logprob: -8.25655460357666
    4. '            ' → logprob: -8.63155460357666
    5. 'and' → logprob: -8.75655460357666
    6. ' and' → logprob: -8.88155460357666
    7. '```' → logprob: -9.00655460357666
    8. '          ' → logprob: -9.63155460357666
    9. '       ' → logprob: -9.63155460357666
    10. ',' → logprob: -10.25655460357666

Token 1220: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01502497959882021
    2. '#' (adapté à ' #') → logprob: -4.6400251388549805
    3. 'and' → logprob: -5.6400251388549805
    4. ' and' → logprob: -7.5150251388549805
    5. '```' → logprob: -8.26502513885498
    6. '               ' → logprob: -8.64002513885498
    7. '       ' → logprob: -9.14002513885498
    8. '   ' → logprob: -9.39002513885498
    9. '                   ' → logprob: -9.39002513885498
    10. 'but' → logprob: -9.51502513885498

Token 1221: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1768578737974167
    2. '#' → logprob: -1.926857829093933
    3. 'and' → logprob: -5.176857948303223
    4. ' and' → logprob: -5.551857948303223
    5. '```' → logprob: -6.051857948303223
    6. ' #' → logprob: -7.051857948303223
    7. ',' → logprob: -7.176857948303223
    8. '
' → logprob: -7.676857948303223
    9. '       ' → logprob: -7.926857948303223
    10. '.' → logprob: -8.301857948303223

Token 1222: ' return' (ID: 622)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5796151161193848
    2. 'distance' → logprob: -1.5796151161193848
    3. ' exit' → logprob: -2.7046151161193848
    4. ' the' → logprob: -3.3296151161193848
    5. ' return' → logprob: -3.3296151161193848
    6. ' self' → logprob: -3.7046151161193848
    7. 'self' → logprob: -4.329615116119385
    8. ' abs' → logprob: -4.829615116119385
    9. ' (' → logprob: -4.954615116119385
    10. 'the' → logprob: -4.954615116119385

Token 1223: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6827639937400818
    2. '_to' → logprob: -2.3077640533447266
    3. '       ' → logprob: -3.3077640533447266
    4. '_' → logprob: -3.3077640533447266
    5. 'To' → logprob: -3.4327640533447266
    6. '```' → logprob: -3.8077640533447266
    7. '[
' → logprob: -3.8077640533447266
    8. '[' → logprob: -3.9327640533447266
    9. '_length' → logprob: -4.057764053344727
    10. '               ' → logprob: -4.057764053344727

Token 1224: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.33532077074050903
    2. 'top' → logprob: -1.5853207111358643
    3. ' max' → logprob: -2.8353207111358643
    4. ' topo' → logprob: -4.585320949554443
    5. '0' → logprob: -5.835320949554443
    6. 'the' → logprob: -5.960320949554443
    7. ' top' → logprob: -6.210320949554443
    8. 'self' → logprob: -7.585320949554443
    9. ' ' → logprob: -7.710320949554443
    10. 'last' → logprob: -7.835320949554443

Token 1225: ' position' (ID: 4010)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5416274070739746
    2. ' visited' → logprob: -2.0416274070739746
    3. 'position' → logprob: -2.2916274070739746
    4. '_' → logprob: -2.2916274070739746
    5. ' position' → logprob: -3.9166274070739746
    6. ')' → logprob: -4.041627407073975
    7. '
' → logprob: -4.541627407073975
    8. '_position' → logprob: -4.666627407073975
    9. '(' → logprob: -5.041627407073975
    10. '   ' → logprob: -5.291627407073975

Token 1226: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6338464021682739
    2. '
' → logprob: -1.008846402168274
    3. ' +' → logprob: -3.5088462829589844
    4. '+' → logprob: -3.8838462829589844
    5. '.' → logprob: -4.508846282958984
    6. '<|end|>' → logprob: -4.633846282958984
    7. ' to' → logprob: -5.258846282958984
    8. ',' → logprob: -5.383846282958984
    9. '       ' → logprob: -5.508846282958984
    10. '[' → logprob: -5.883846282958984

Token 1227: ' exit' (ID: 10654)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10210953652858734
    2. 'exit' → logprob: -2.977109432220459
    3. 'self' → logprob: -3.477109432220459
    4. ' exit' → logprob: -5.102109432220459
    5. ' ' → logprob: -5.227109432220459
    6. 'n' → logprob: -6.602109432220459
    7. ' self' → logprob: -6.852109432220459
    8. '(' → logprob: -8.102109909057617
    9. ' (' → logprob: -8.602109909057617
    10. ' n' → logprob: -8.727109909057617

Token 1228: '(n' (ID: 2406)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6413186192512512
    2. '
' → logprob: -0.7663186192512512
    3. '.' → logprob: -6.2663187980651855
    4. '            
' → logprob: -6.3913187980651855
    5. '<|end|>' → logprob: -7.1413187980651855
    6. ',' → logprob: -7.2663187980651855
    7. '\n' → logprob: -7.6413187980651855
    8. ',
' → logprob: -7.8913187980651855
    9. '```' → logprob: -7.8913187980651855
    10. '
' → logprob: -8.266318321228027

Token 1229: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.2855416066013277e-05
    2. ' +' → logprob: -10.875032424926758
    3. ')+' → logprob: -12.000032424926758
    4. ')' → logprob: -12.625032424926758
    5. '+
' → logprob: -13.250032424926758
    6. '1' → logprob: -13.625032424926758
    7. '+)' → logprob: -15.125032424926758
    8. '```' → logprob: -15.500032424926758
    9. '   ' → logprob: -16.375032424926758
    10. '#' → logprob: -16.625032424926758

Token 1230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007048065308481455
    2. '+' → logprob: -7.500704765319824
    3. ')' → logprob: -8.875704765319824
    4. ')+' → logprob: -11.875704765319824
    5. '
' → logprob: -12.875704765319824
    6. ' ' → logprob: -14.250704765319824
    7. 'n' → logprob: -14.750704765319824
    8. '```' → logprob: -14.875704765319824
    9. ' +' → logprob: -15.375704765319824
    10. '<|end|>' → logprob: -15.875704765319824

Token 1231: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03872775286436081
    2. ').' → logprob: -3.7887277603149414
    3. ')"' → logprob: -4.288727760314941
    4. ')."' → logprob: -6.913727760314941
    5. ')")' → logprob: -8.663727760314941
    6. ')
' → logprob: -8.913727760314941
    7. ')`' → logprob: -9.288727760314941
    8. '),' → logprob: -10.038727760314941
    9. ')”' → logprob: -10.413727760314941
    10. ')**' → logprob: -10.663727760314941

Token 1232: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44691866636276245
    2. '           ' → logprob: -1.0719187259674072
    3. '            
' → logprob: -4.071918487548828
    4. '

' → logprob: -8.446918487548828
    5. '        
' → logprob: -9.071918487548828
    6. '\n' → logprob: -9.196918487548828
    7. '```' → logprob: -9.196918487548828
    8. '       ' → logprob: -9.446918487548828
    9. '            

' → logprob: -9.696918487548828
    10. '
            
' → logprob: -9.946918487548828

Token 1233: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07291785627603531
    2. '           ' → logprob: -2.697917938232422
    3. '            
' → logprob: -6.197917938232422
    4. '

' → logprob: -7.572917938232422
    5. '\n' → logprob: -9.572917938232422
    6. '        
' → logprob: -9.822917938232422
    7. '            

' → logprob: -9.947917938232422
    8. '
            
' → logprob: -10.072917938232422
    9. '       ' → logprob: -10.197917938232422
    10. '\
' → logprob: -10.697917938232422

Token 1234: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3213874101638794
    2. 'pos' → logprob: -2.82138729095459
    3. 'positions' → logprob: -2.82138729095459
    4. 'max' → logprob: -3.07138729095459
    5. 'min' → logprob: -3.44638729095459
    6. '#' → logprob: -3.82138729095459
    7. 'dist' → logprob: -3.82138729095459
    8. 'dp' → logprob: -4.44638729095459
    9. 'distance' → logprob: -5.19638729095459
    10. 'position' → logprob: -5.32138729095459

Token 1235: ' problem' (ID: 4792)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9352078437805176
    2. '           ' → logprob: -1.5602078437805176
    3. '#' → logprob: -1.6852078437805176
    4. 'positions' → logprob: -3.3102078437805176
    5. '   ' → logprob: -3.4352078437805176
    6. '       ' → logprob: -3.8102078437805176
    7. 'distance' → logprob: -4.310207843780518
    8. 'min' → logprob: -4.435207843780518
    9. 'def' → logprob: -4.560207843780518
    10. 'pos' → logprob: -4.685207843780518

Token 1236: ' essentially' (ID: 29212)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2800062894821167
    2. '           ' → logprob: -1.5300062894821167
    3. ' is' → logprob: -2.2800064086914062
    4. '   ' → logprob: -2.5300064086914062
    5. '            
' → logprob: -2.7800064086914062
    6. ' continues' → logprob: -3.0300064086914062
    7. '       ' → logprob: -3.6550064086914062
    8. '    
' → logprob: -3.7800064086914062
    9. ' 
' → logprob: -3.7800064086914062
    10. '       
' → logprob: -4.155006408691406

Token 1237: ' requires' (ID: 10860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3264071941375732
    2. 'is' → logprob: -1.7014071941375732
    3. '   ' → logprob: -1.9514071941375732
    4. '
' → logprob: -2.0764071941375732
    5. '#' → logprob: -2.7014071941375732
    6. ' is' → logprob: -2.8264071941375732
    7. '       ' → logprob: -2.9514071941375732
    8. 'can' → logprob: -3.7014071941375732
    9. '            
' → logprob: -4.701407432556152
    10. 'requires' → logprob: -4.701407432556152

Token 1238: ' summ' (ID: 16552)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.226645588874817
    2. 'calcul' → logprob: -2.1016454696655273
    3. '       ' → logprob: -2.3516454696655273
    4. ' computing' → logprob: -2.4766454696655273
    5. ' determining' → logprob: -2.4766454696655273
    6. 'comput' → logprob: -2.6016454696655273
    7. ' calculating' → logprob: -2.7266454696655273
    8. 'determ' → logprob: -3.1016454696655273
    9. 'return' → logprob: -3.3516454696655273
    10. 'tracking' → logprob: -4.226645469665527

Token 1239: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.1390074491500854
    2. '   ' → logprob: -1.6390074491500854
    3. '       ' → logprob: -1.7640074491500854
    4. '           ' → logprob: -2.764007568359375
    5. 'u' → logprob: -3.139007568359375
    6. 'a' → logprob: -3.889007568359375
    7. 'ary' → logprob: -4.014007568359375
    8. '```' → logprob: -4.014007568359375
    9. '               ' → logprob: -4.264007568359375
    10. 'def' → logprob: -4.264007568359375

Token 1240: ' (' (ID: 350)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.907966673374176
    2. ' distances' → logprob: -1.1579666137695312
    3. 'the' → logprob: -1.6579666137695312
    4. ' up' → logprob: -3.2829666137695312
    5. 'dist' → logprob: -4.157966613769531
    6. 'up' → logprob: -4.407966613769531
    7. 'positions' → logprob: -4.657966613769531
    8. '   ' → logprob: -6.032966613769531
    9. '           ' → logprob: -6.032966613769531
    10. '
' → logprob: -6.657966613769531

Token 1241: 'max' (ID: 3228)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3510868549346924
    2. 'the' → logprob: -1.3510868549346924
    3. 'max' → logprob: -1.7260868549346924
    4. ' distances' → logprob: -2.6010868549346924
    5. ' max' → logprob: -3.1010868549346924
    6. 'dist' → logprob: -3.4760868549346924
    7. 'abs' → logprob: -3.8510868549346924
    8. ' abs' → logprob: -4.101086616516113
    9. 'positions' → logprob: -4.101086616516113
    10. '
' → logprob: -4.601086616516113

Token 1242: ' position' (ID: 4010)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.9990944266319275
    2. '_' → logprob: -1.6240944862365723
    3. '(t' → logprob: -1.8740944862365723
    4. '(
' → logprob: -1.9990944862365723
    5. '_pos' → logprob: -2.6240944862365723
    6. '(' → logprob: -3.2490944862365723
    7. 'pos' → logprob: -5.124094486236572
    8. 'Position' → logprob: -5.499094486236572
    9. '_distance' → logprob: -5.624094486236572
    10. 'position' → logprob: -5.624094486236572

Token 1243: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.29259639978408813
    2. '+' → logprob: -1.5425963401794434
    3. ' -' → logprob: -3.4175963401794434
    4. '-' → logprob: -6.042596340179443
    5. ')' → logprob: -7.167596340179443
    6. ')+' → logprob: -7.292596340179443
    7. ',' → logprob: -7.417596340179443
    8. 's' → logprob: -8.292596817016602
    9. 'visited' → logprob: -8.417596817016602
    10. '[' → logprob: -8.542596817016602

Token 1244: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07895555347204208
    2. ' min' → logprob: -2.57895565032959
    3. '0' → logprob: -9.82895565032959
    4. '(min' → logprob: -12.45395565032959
    5. '
' → logprob: -13.32895565032959
    6. 'minimal' → logprob: -13.32895565032959
    7. ' ' → logprob: -13.95395565032959
    8. ' minimal' → logprob: -14.20395565032959
    9. 'top' → logprob: -14.20395565032959
    10. '1' → logprob: -14.57895565032959

Token 1245: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8093980550765991
    2. '_position' → logprob: -0.8093980550765991
    3. ' _' → logprob: -2.8093981742858887
    4. ' position' → logprob: -4.184398174285889
    5. 'position' → logprob: -4.559398174285889
    6. '   ' → logprob: -5.559398174285889
    7. '_pos' → logprob: -5.684398174285889
    8. '(_' → logprob: -6.434398174285889
    9. '(
' → logprob: -6.559398174285889
    10. '
' → logprob: -6.684398174285889

Token 1246: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09780256450176239
    2. ' +' → logprob: -2.9728026390075684
    3. ')+' → logprob: -3.4728026390075684
    4. '+' → logprob: -4.597802639007568
    5. ')
' → logprob: -7.847802639007568
    6. ' )' → logprob: -8.97280216217041
    7. '           ' → logprob: -8.97280216217041
    8. '
' → logprob: -9.59780216217041
    9. '   ' → logprob: -10.84780216217041
    10. ' in' → logprob: -11.09780216217041

Token 1247: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002588146599009633
    2. ' ' → logprob: -6.002588272094727
    3. '
' → logprob: -9.877588272094727
    4. ')' → logprob: -10.002588272094727
    5. '```' → logprob: -12.502588272094727
    6. '   ' → logprob: -12.627588272094727
    7. '+' → logprob: -14.252588272094727
    8. ')
' → logprob: -14.440088272094727
    9. '#' → logprob: -14.502588272094727
    10. '0' → logprob: -14.690088272094727

Token 1248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007659103139303625
    2. ' ' → logprob: -7.500765800476074
    3. '
' → logprob: -9.125765800476074
    4. ')' → logprob: -10.000765800476074
    5. 'n' → logprob: -10.250765800476074
    6. ' n' → logprob: -12.125765800476074
    7. '0' → logprob: -12.750765800476074
    8. 'max' → logprob: -13.125765800476074
    9. 'self' → logprob: -13.250765800476074
    10. ' (' → logprob: -13.750765800476074

Token 1249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009109427221119404
    2. ')
' → logprob: -5.6341094970703125
    3. '+' → logprob: -6.8841094970703125
    4. ' +' → logprob: -7.0091094970703125
    5. ')+' → logprob: -7.2591094970703125
    6. '
' → logprob: -7.3841094970703125
    7. '   ' → logprob: -7.7591094970703125
    8. ' )' → logprob: -7.7591094970703125
    9. '           ' → logprob: -8.009109497070312
    10. ').' → logprob: -8.634109497070312

Token 1250: ' plus' (ID: 2932)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4979189336299896
    2. '           ' → logprob: -0.997918963432312
    3. '<|end|>' → logprob: -4.122919082641602
    4. '       ' → logprob: -5.872919082641602
    5. ',' → logprob: -6.497919082641602
    6. ',
' → logprob: -7.872919082641602
    7. ')' → logprob: -7.997919082641602
    8. '<|end|>' → logprob: -8.122919082641602
    9. '            
' → logprob: -8.247919082641602
    10. '.' → logprob: -8.497919082641602

Token 1251: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.539768934249878
    2. 'self' → logprob: -1.789768934249878
    3. 'max' → logprob: -1.789768934249878
    4. ' self' → logprob: -2.289768934249878
    5. ' max' → logprob: -2.414768934249878
    6. '(self' → logprob: -2.789768934249878
    7. 'abs' → logprob: -3.039768934249878
    8. '0' → logprob: -3.039768934249878
    9. '
' → logprob: -3.539768934249878
    10. ' abs' → logprob: -3.664768934249878

Token 1252: ' distance' (ID: 9324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5255603194236755
    2. 'distance' → logprob: -2.1505603790283203
    3. ' max' → logprob: -2.7755603790283203
    4. 'max' → logprob: -2.9005603790283203
    5. ' return' → logprob: -3.5255603790283203
    6. ' distance' → logprob: -3.6505603790283203
    7. '1' → logprob: -4.15056037902832
    8. 'return' → logprob: -4.27556037902832
    9. '#' → logprob: -4.40056037902832
    10. '```' → logprob: -4.77556037902832

Token 1253: ' entrance' (ID: 27326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2127707451581955
    2. ' from' → logprob: -2.712770700454712
    3. 'between' → logprob: -2.712770700454712
    4. '   ' → logprob: -4.087770938873291
    5. ' between' → logprob: -4.087770938873291
    6. 'to' → logprob: -4.462770938873291
    7. ' to' → logprob: -5.337770938873291
    8. '=' → logprob: -5.712770938873291
    9. '           ' → logprob: -6.212770938873291
    10. ' =' → logprob: -7.087770938873291

Token 1254: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011223121546208858
    2. 'to' → logprob: -5.136223316192627
    3. ' (' → logprob: -6.386223316192627
    4. 'from' → logprob: -6.636223316192627
    5. ' to' → logprob: -7.261223316192627
    6. '+' → logprob: -7.886223316192627
    7. ' -' → logprob: -8.511222839355469
    8. '(
' → logprob: -8.761222839355469
    9. '-' → logprob: -8.761222839355469
    10. ' +' → logprob: -8.886222839355469

Token 1255: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5872929096221924
    2. ' min' → logprob: -0.8372929096221924
    3. 'max' → logprob: -5.087292671203613
    4. ' max' → logprob: -6.212292671203613
    5. 'top' → logprob: -6.337292671203613
    6. '0' → logprob: -7.837292671203613
    7. '
' → logprob: -8.337292671203613
    8. ' top' → logprob: -8.837292671203613
    9. ' exit' → logprob: -9.087292671203613
    10. '1' → logprob: -9.712292671203613

Token 1256: ' and' (ID: 326)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.6857966184616089
    2. '(' → logprob: -1.8107966184616089
    3. 'position' → logprob: -1.8107966184616089
    4. ' position' → logprob: -2.5607967376708984
    5. '(
' → logprob: -3.6857967376708984
    6. '(position' → logprob: -3.8107967376708984
    7. ' (' → logprob: -4.185796737670898
    8. '_' → logprob: -4.685796737670898
    9. '           ' → logprob: -5.310796737670898
    10. '   ' → logprob: -5.685796737670898

Token 1257: ' max' (ID: 2999)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.3255612254142761
    2. ' max' → logprob: -2.200561285018921
    3. 'max' → logprob: -2.325561285018921
    4. 'exit' → logprob: -2.700561285018921
    5. '"' → logprob: -7.450561046600342
    6. '```' → logprob: -7.575561046600342
    7. ' min' → logprob: -8.2005615234375
    8. ''' → logprob: -8.4505615234375
    9. '
' → logprob: -9.0755615234375
    10. 'min' → logprob: -9.0755615234375

Token 1258: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31869205832481384
    2. '           ' → logprob: -1.4436920881271362
    3. ',' → logprob: -4.568692207336426
    4. '<|end|>' → logprob: -4.943692207336426
    5. ' =' → logprob: -5.943692207336426
    6. '       ' → logprob: -6.318692207336426
    7. '

' → logprob: -6.318692207336426
    8. '.' → logprob: -6.443692207336426
    9. ' and' → logprob: -6.693692207336426
    10. ' +' → logprob: -6.693692207336426

Token 1259: ' exit' (ID: 10654)
  Prédit: ' exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.6662310361862183
    2. 'exit' → logprob: -0.7912310361862183
    3. ' n' → logprob: -4.291231155395508
    4. 'n' → logprob: -4.291231155395508
    5. '(exit' → logprob: -5.541231155395508
    6. '_exit' → logprob: -8.041231155395508
    7. ' entrance' → logprob: -8.291231155395508
    8. '(n' → logprob: -8.416231155395508
    9. '```' → logprob: -8.666231155395508
    10. ' ' → logprob: -8.916231155395508

Token 1260: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4012385606765747
    2. '           ' → logprob: -1.1512385606765747
    3. '

' → logprob: -4.901238441467285
    4. '            
' → logprob: -6.026238441467285
    5. ',' → logprob: -6.651238441467285
    6. '<|end|>' → logprob: -7.401238441467285
    7. '       ' → logprob: -7.526238441467285
    8. ',
' → logprob: -7.526238441467285
    9. '\n' → logprob: -8.401238441467285
    10. '            

' → logprob: -8.651238441467285

Token 1261: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.698691725730896
    2. '           ' → logprob: -0.698691725730896
    3. '            
' → logprob: -5.4486918449401855
    4. '       ' → logprob: -7.6986918449401855
    5. '        
' → logprob: -8.448691368103027
    6. '`
' → logprob: -9.448691368103027
    7. '

' → logprob: -9.448691368103027
    8. '```' → logprob: -9.823691368103027
    9. '\
' → logprob: -9.823691368103027
    10. '\n' → logprob: -10.198691368103027

Token 1262: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1285872757434845
    2. '           ' → logprob: -2.128587245941162
    3. '

' → logprob: -7.128587245941162
    4. '            
' → logprob: -7.503587245941162
    5. '       ' → logprob: -9.00358772277832
    6. '        
' → logprob: -9.75358772277832
    7. '\n' → logprob: -10.12858772277832
    8. '            

' → logprob: -11.37858772277832
    9. '
' → logprob: -11.75358772277832
    10. '    
' → logprob: -12.00358772277832

Token 1263: ' Let's' (ID: 41021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4414483904838562
    2. 'min' → logprob: -1.191448450088501
    3. '
' → logprob: -3.941448450088501
    4. 'max' → logprob: -4.316448211669922
    5. '       ' → logprob: -5.191448211669922
    6. '#' → logprob: -5.816448211669922
    7. ' min' → logprob: -5.941448211669922
    8. 'import' → logprob: -6.066448211669922
    9. 'pos' → logprob: -6.691448211669922
    10. '   ' → logprob: -6.941448211669922

Token 1264: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6908792853355408
    2. '           ' → logprob: -1.6908793449401855
    3. '       ' → logprob: -2.1908793449401855
    4. 'import' → logprob: -3.0658793449401855
    5. '   ' → logprob: -3.3158793449401855
    6. '
' → logprob: -3.6908793449401855
    7. 'continue' → logprob: -3.6908793449401855
    8. '_min' → logprob: -4.3158793449401855
    9. 'max' → logprob: -4.5658793449401855
    10. 'calculate' → logprob: -4.8158793449401855

Token 1265: ' intervals' (ID: 49900)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1235547661781311
    2. 'min' → logprob: -2.2485547065734863
    3. ' minimal' → logprob: -5.123554706573486
    4. ' the' → logprob: -6.373554706573486
    5. '   ' → logprob: -7.248554706573486
    6. 'minimal' → logprob: -7.998554706573486
    7. ' positions' → logprob: -8.248555183410645
    8. ' max' → logprob: -8.623555183410645
    9. ' left' → logprob: -8.873555183410645
    10. 'positions' → logprob: -9.248555183410645

Token 1266: ' induced' (ID: 57797)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32406774163246155
    2. '           ' → logprob: -2.1990678310394287
    3. '_min' → logprob: -2.4490678310394287
    4. 'min' → logprob: -3.1990678310394287
    5. '=' → logprob: -5.07406759262085
    6. '_start' → logprob: -5.19906759262085
    7. '_left' → logprob: -5.32406759262085
    8. '       ' → logprob: -5.94906759262085
    9. '   ' → logprob: -5.94906759262085
    10. ' min' → logprob: -6.19906759262085

Token 1267: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.4433121681213379
    2. ' by' → logprob: -1.068312168121338
    3. '           ' → logprob: -4.443312168121338
    4. '=' → logprob: -7.068312168121338
    5. '   ' → logprob: -7.443312168121338
    6. ' =' → logprob: -7.818312168121338
    7. '               ' → logprob: -8.31831169128418
    8. 'from' → logprob: -8.81831169128418
    9. '       ' → logprob: -8.94331169128418
    10. '_by' → logprob: -9.06831169128418

Token 1268: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.19441327452659607
    2. ' constraints' → logprob: -2.194413185119629
    3. 'the' → logprob: -3.069413185119629
    4. ' the' → logprob: -4.944413185119629
    5. 'each' → logprob: -5.569413185119629
    6. 'constraint' → logprob: -5.819413185119629
    7. ' edges' → logprob: -6.944413185119629
    8. ' each' → logprob: -6.944413185119629
    9. 'edges' → logprob: -7.319413185119629
    10. '
' → logprob: -7.319413185119629

Token 1269: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04988130182027817
    2. '
' → logprob: -3.6748812198638916
    3. 'min' → logprob: -4.924881458282471
    4. ',' → logprob: -5.799881458282471
    5. 'positions' → logprob: -5.924881458282471
    6. '       ' → logprob: -6.924881458282471
    7. '()
' → logprob: -7.049881458282471
    8. '   ' → logprob: -7.174881458282471
    9. 'interval' → logprob: -7.174881458282471
    10. ':
' → logprob: -7.424881458282471

Token 1270: ' merge' (ID: 20345)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -1.448959469795227
    2. ' their' → logprob: -1.948959469795227
    3. ' constraints' → logprob: -2.0739593505859375
    4. 'calculate' → logprob: -2.6989593505859375
    5. 'compute' → logprob: -2.8239593505859375
    6. 'prop' → logprob: -2.9489593505859375
    7. 'their' → logprob: -3.0739593505859375
    8. '       ' → logprob: -3.4489593505859375
    9. ' compute' → logprob: -3.5739593505859375
    10. ' propagate' → logprob: -3.6989593505859375

Token 1271: ' them' (ID: 1373)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05026828125119209
    2. '_' → logprob: -4.425268173217773
    3. '       ' → logprob: -4.675268173217773
    4. '            ' → logprob: -5.675268173217773
    5. '               ' → logprob: -5.800268173217773
    6. '   ' → logprob: -6.175268173217773
    7. '
' → logprob: -6.175268173217773
    8. ' for' → logprob: -6.300268173217773
    9. ' _' → logprob: -6.425268173217773
    10. '()
' → logprob: -6.675268173217773

Token 1272: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07619968801736832
    2. '
' → logprob: -2.701199769973755
    3. '()
' → logprob: -6.576199531555176
    4. '.
' → logprob: -6.951199531555176
    5. 'interval' → logprob: -7.326199531555176
    6. '       ' → logprob: -7.701199531555176
    7. '            
' → logprob: -7.826199531555176
    8. '[]
' → logprob: -7.951199531555176
    9. ',' → logprob: -8.076199531555176
    10. '#' → logprob: -8.451199531555176

Token 1273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07402557879686356
    2. '
' → logprob: -2.6990256309509277
    3. '            
' → logprob: -5.949025630950928
    4. '       ' → logprob: -6.949025630950928
    5. '        
' → logprob: -8.94902515411377
    6. '```' → logprob: -8.94902515411377
    7. '    
' → logprob: -10.07402515411377
    8. '

' → logprob: -10.19902515411377
    9. '\n' → logprob: -10.57402515411377
    10. '            ' → logprob: -10.69902515411377

Token 1274: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15932604670524597
    2. '
' → logprob: -2.4093260765075684
    3. '       ' → logprob: -4.034326076507568
    4. '#' (adapté à ' #') → logprob: -4.284326076507568
    5. 'interval' → logprob: -4.284326076507568
    6. 'visited' → logprob: -5.784326076507568
    7. '            
' → logprob: -6.284326076507568
    8. 'positions' → logprob: -6.659326076507568
    9. 'import' → logprob: -7.034326076507568
    10. 'from' → logprob: -7.159326076507568

Token 1275: ' Initialize' (ID: 19496)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2823841869831085
    2. 'interval' → logprob: -2.157384157180786
    3. 'visited' → logprob: -2.782384157180786
    4. '       ' → logprob: -3.657384157180786
    5. '#' → logprob: -4.032384395599365
    6. 'positions' → logprob: -5.032384395599365
    7. 'from' → logprob: -5.907384395599365
    8. 'def' → logprob: -6.032384395599365
    9. '   ' → logprob: -6.282384395599365
    10. 'import' → logprob: -6.532384395599365

Token 1276: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1683785319328308
    2. ' intervals' → logprob: -2.2933785915374756
    3. 'min' → logprob: -3.9183785915374756
    4. 'self' → logprob: -5.1683783531188965
    5. 'shop' → logprob: -5.1683783531188965
    6. ' min' → logprob: -5.1683783531188965
    7. '   ' → logprob: -5.7933783531188965
    8. 'positions' → logprob: -6.0433783531188965
    9. ' shop' → logprob: -6.1683783531188965
    10. 'parent' → logprob: -6.7933783531188965

Token 1277: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15915220975875854
    2. '           ' → logprob: -2.5341522693634033
    3. 'interval' → logprob: -3.2841522693634033
    4. '=' → logprob: -4.284152030944824
    5. ' intervals' → logprob: -5.284152030944824
    6. 'min' → logprob: -5.784152030944824
    7. 'positions' → logprob: -6.409152030944824
    8. 'visited' → logprob: -6.534152030944824
    9. ':' → logprob: -7.159152030944824
    10. '   ' → logprob: -7.534152030944824

Token 1278: ' single' (ID: 4590)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.13281889259815216
    2. '{' → logprob: -3.1328189373016357
    3. '[(' → logprob: -3.1328189373016357
    4. '[{' → logprob: -3.3828189373016357
    5. '[' → logprob: -6.507818698883057
    6. '[i' → logprob: -7.132818698883057
    7. ' [[' → logprob: -7.632818698883057
    8. 'interval' → logprob: -8.632819175720215
    9. '{i' → logprob: -8.882819175720215
    10. '[
' → logprob: -10.882819175720215

Token 1279: 'tons' (ID: 45023)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2512993812561035
    2. ' shops' → logprob: -1.2512993812561035
    3. 'shops' → logprob: -2.1262993812561035
    4. '=' → logprob: -3.5012993812561035
    5. 's' → logprob: -3.5012993812561035
    6. '_sh' → logprob: -3.5012993812561035
    7. ' =' → logprob: -3.5012993812561035
    8. ' intervals' → logprob: -3.5012993812561035
    9. '[i' → logprob: -4.0012993812561035
    10. '[]' → logprob: -4.0012993812561035

Token 1280: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8930129408836365
    2. '           ' → logprob: -1.3930130004882812
    3. 'interval' → logprob: -2.0180130004882812
    4. ' intervals' → logprob: -2.3930130004882812
    5. 'self' → logprob: -3.3930130004882812
    6. 'positions' → logprob: -4.143013000488281
    7. '=' → logprob: -4.518013000488281
    8. ',' → logprob: -4.643013000488281
    9. '
' → logprob: -5.143013000488281
    10. '       ' → logprob: -5.268013000488281

Token 1281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09704825282096863
    2. 'self' → logprob: -2.847048282623291
    3. 'interval' → logprob: -3.472048282623291
    4. '
' → logprob: -6.722048282623291
    5. ' intervals' → logprob: -7.097048282623291
    6. ' self' → logprob: -7.847048282623291
    7. '       ' → logprob: -7.847048282623291
    8. 'positions' → logprob: -7.972048282623291
    9. '            
' → logprob: -8.972047805786133
    10. '   ' → logprob: -9.722047805786133

Token 1282: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.0168689489364624
    2. 'interval' → logprob: -1.2668689489364624
    3. 'self' → logprob: -1.7668689489364624
    4. '           ' → logprob: -2.266869068145752
    5. ' self' → logprob: -2.641869068145752
    6. '       ' → logprob: -5.766869068145752
    7. 'positions' → logprob: -5.766869068145752
    8. ' positions' → logprob: -6.891869068145752
    9. 'inter' → logprob: -7.016869068145752
    10. '   ' → logprob: -7.266869068145752

Token 1283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407910227775574
    2. '=' → logprob: -0.9740791320800781
    3. '=[' → logprob: -14.099079132080078
    4. '   ' → logprob: -14.599079132080078
    5. '[' → logprob: -15.974079132080078
    6. '
' → logprob: -16.099079132080078
    7. '=
' → logprob: -16.224079132080078
    8. '	' → logprob: -16.474079132080078
    9. ':' → logprob: -16.849079132080078
    10. ' =
' → logprob: -16.974079132080078

Token 1284: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6059501767158508
    2. '{' → logprob: -1.105950117111206
    3. '[{' → logprob: -2.355950117111206
    4. '[(' → logprob: -3.605950117111206
    5. ' {' → logprob: -6.980950355529785
    6. ' [[' → logprob: -7.980950355529785
    7. '[' → logprob: -8.230950355529785
    8. ' [(' → logprob: -10.730950355529785
    9. '{i' → logprob: -11.730950355529785
    10. ' [{' → logprob: -12.605950355529785

Token 1285: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004803624760825187
    2. 'k' → logprob: -8.375480651855469
    3. '(i' → logprob: -9.250480651855469
    4. 'shop' → logprob: -10.375480651855469
    5. '0' → logprob: -10.500480651855469
    6. 'top' → logprob: -10.625480651855469
    7. 'float' → logprob: -10.875480651855469
    8. ' i' → logprob: -11.250480651855469
    9. '(' → logprob: -11.625480651855469
    10. '   ' → logprob: -12.125480651855469

Token 1286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04174105077981949
    2. ',i' → logprob: -3.291741132736206
    3. '-' → logprob: -6.041740894317627
    4. ' -' → logprob: -7.416740894317627
    5. ' ,' → logprob: -7.791740894317627
    6. '   ' → logprob: -9.541741371154785
    7. ',
' → logprob: -9.916741371154785
    8. 'i' → logprob: -10.041741371154785
    9. ']' → logprob: -10.166741371154785
    10. '[i' → logprob: -10.291741371154785

Token 1287: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.505351095460355e-05
    2. ' i' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.25007438659668
    4. '	i' → logprob: -17.87507438659668
    5. '           ' → logprob: -18.87507438659668
    6. ' ' → logprob: -19.75007438659668
    7. '     ' → logprob: -20.12507438659668
    8. '       ' → logprob: -20.12507438659668
    9. '
' → logprob: -20.12507438659668
    10. '  ' → logprob: -20.25007438659668

Token 1288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001769616355886683
    2. ' ]' → logprob: -9.125177383422852
    3. ',' → logprob: -10.625177383422852
    4. ']
' → logprob: -11.500177383422852
    5. '[i' → logprob: -11.750177383422852
    6. '   ' → logprob: -11.875177383422852
    7. ']]' → logprob: -12.125177383422852
    8. ',i' → logprob: -12.500177383422852
    9. '+' → logprob: -13.125177383422852
    10. 'i' → logprob: -13.250177383422852

Token 1289: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04197265952825546
    2. 'for' → logprob: -3.2919726371765137
    3. ',' → logprob: -6.416972637176514
    4. ']' → logprob: -6.541972637176514
    5. '           ' → logprob: -7.416972637176514
    6. '   ' → logprob: -10.041973114013672
    7. '       ' → logprob: -10.291973114013672
    8. '          ' → logprob: -10.541973114013672
    9. '            ' → logprob: -10.916973114013672
    10. ' ' → logprob: -11.041973114013672

Token 1290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014165391214191914
    2. ' i' → logprob: -4.26416540145874
    3. '	i' → logprob: -14.764164924621582
    4. ' ' → logprob: -14.889164924621582
    5. '_i' → logprob: -14.889164924621582
    6. ' _' → logprob: -15.014164924621582
    7. '_' → logprob: -15.264164924621582
    8. '
' → logprob: -16.8891658782959
    9. '  ' → logprob: -17.7641658782959
    10. ',' → logprob: -18.0141658782959

Token 1291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20258991420269012
    2. 'in' → logprob: -1.7025898694992065
    3. 'i' → logprob: -6.827589988708496
    4. ' i' → logprob: -9.327589988708496
    5. 'range' → logprob: -13.827589988708496
    6. '
' → logprob: -13.952589988708496
    7. ' ' → logprob: -14.327589988708496
    8. 'n' → logprob: -16.20258903503418
    9. ' 
' → logprob: -16.20258903503418
    10. ' range' → logprob: -16.57758903503418

Token 1292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0620281845331192
    2. ' range' → logprob: -2.812028169631958
    3. 'i' → logprob: -9.812027931213379
    4. '(range' → logprob: -12.812027931213379
    5. 'in' → logprob: -14.062027931213379
    6. '
' → logprob: -14.062027931213379
    7. ' i' → logprob: -14.187027931213379
    8. ' ' → logprob: -15.312027931213379
    9. '   ' → logprob: -15.937027931213379
    10. '	range' → logprob: -16.062028884887695

Token 1293: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006665993016213179
    2. '(self' → logprob: -5.13166618347168
    3. '1' → logprob: -7.63166618347168
    4. '(len' → logprob: -8.75666618347168
    5. 'self' → logprob: -9.63166618347168
    6. '(
' → logprob: -10.75666618347168
    7. ' (' → logprob: -13.00666618347168
    8. '(n' → logprob: -13.00666618347168
    9. 'len' → logprob: -13.50666618347168
    10. '(M' → logprob: -14.50666618347168

Token 1294: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.9687325358390808
    2. '1' → logprob: -1.0937325954437256
    3. '(' → logprob: -1.4687325954437256
    4. '.' → logprob: -3.3437325954437256
    5. 'n' → logprob: -4.8437323570251465
    6. '[' → logprob: -5.3437323570251465
    7. '(n' → logprob: -6.0937323570251465
    8. '           ' → logprob: -6.4687323570251465
    9. ',' → logprob: -6.8437323570251465
    10. '       ' → logprob: -8.093732833862305

Token 1295: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.89375239610672
    2. ')]' → logprob: -1.0187523365020752
    3. ',' → logprob: -1.8937523365020752
    4. ' +' → logprob: -3.643752336502075
    5. ')' → logprob: -4.268752574920654
    6. ')]
' → logprob: -4.893752574920654
    7. '           ' → logprob: -5.018752574920654
    8. ')][' → logprob: -5.518752574920654
    9. ' ,' → logprob: -5.768752574920654
    10. '       ' → logprob: -5.893752574920654

Token 1296: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5829082727432251
    2. 'self' → logprob: -0.8329082727432251
    3. '(' → logprob: -5.7079081535339355
    4. '(self' → logprob: -6.0829081535339355
    5. ')' → logprob: -7.8329081535339355
    6. '0' → logprob: -8.207908630371094
    7. '+' → logprob: -8.832908630371094
    8. ' self' → logprob: -8.832908630371094
    9. ' ' → logprob: -9.707908630371094
    10. ')]' → logprob: -9.957908630371094

Token 1297: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039015832589939237
    2. ']' → logprob: -8.62539005279541
    3. ')]
' → logprob: -8.62539005279541
    4. ',' → logprob: -12.00039005279541
    5. ')],' → logprob: -12.37539005279541
    6. ']]' → logprob: -12.62539005279541
    7. '           ' → logprob: -12.87539005279541
    8. ')' → logprob: -13.12539005279541
    9. '])]' → logprob: -13.12539005279541
    10. '}]' → logprob: -13.50039005279541

Token 1298: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028895577415823936
    2. '           ' → logprob: -3.653895616531372
    3. '
' → logprob: -7.653895378112793
    4. '            
' → logprob: -7.778895378112793
    5. '[' → logprob: -8.028895378112793
    6. ']' → logprob: -8.403895378112793
    7. ',' → logprob: -8.778895378112793
    8. ',
' → logprob: -8.778895378112793
    9. '       ' → logprob: -8.903895378112793
    10. '.' → logprob: -8.903895378112793

Token 1299: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02433181181550026
    2. '           ' → logprob: -4.024332046508789
    3. '[' → logprob: -6.649332046508789
    4. ',
' → logprob: -6.899332046508789
    5. ',' → logprob: -7.524332046508789
    6. ']' → logprob: -7.649332046508789
    7. '            
' → logprob: -7.649332046508789
    8. '.' → logprob: -8.024332046508789
    9. ')' → logprob: -8.274332046508789
    10. '       ' → logprob: -8.399332046508789

Token 1300: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12510964274406433
    2. '[' → logprob: -2.5001096725463867
    3. '\n' → logprob: -4.750109672546387
    4. ' ' → logprob: -5.500109672546387
    5. '<|end|>' → logprob: -5.625109672546387
    6. '[i' → logprob: -5.875109672546387
    7. ']' → logprob: -5.875109672546387
    8. '[
' → logprob: -6.000109672546387
    9. ' 
' → logprob: -6.125109672546387
    10. '
' → logprob: -6.250109672546387

Token 1301: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5744792222976685
    2. '0' → logprob: -1.1994792222976685
    3. '
' → logprob: -2.824479103088379
    4. ' ' → logprob: -3.949479103088379
    5. '<|end|>' → logprob: -4.199479103088379
    6. '[i' → logprob: -4.574479103088379
    7. '[
' → logprob: -4.949479103088379
    8. '1' → logprob: -4.949479103088379
    9. 'None' → logprob: -5.699479103088379
    10. ' [' → logprob: -5.949479103088379

Token 1302: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13087409734725952
    2. '<|end|>' → logprob: -3.2558741569519043
    3. ',' → logprob: -3.6308741569519043
    4. '[' → logprob: -3.8808741569519043
    5. '
' → logprob: -4.755874156951904
    6. ')' → logprob: -4.755874156951904
    7. '][' → logprob: -5.255874156951904
    8. '<|end|>' → logprob: -5.505874156951904
    9. ' ]' → logprob: -6.130874156951904
    10. '...' → logprob: -6.755874156951904

Token 1303: 'n' (ID: 77)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014316628687083721
    2. ' self' → logprob: -4.389316558837891
    3. '
' → logprob: -6.764316558837891
    4. 'n' → logprob: -8.26431655883789
    5. ' ' → logprob: -9.38931655883789
    6. 'i' → logprob: -9.51431655883789
    7. '0' → logprob: -10.01431655883789
    8. '   ' → logprob: -10.38931655883789
    9. '[self' → logprob: -10.51431655883789
    10. '```' → logprob: -11.01431655883789

Token 1304: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02938569337129593
    2. '
' → logprob: -4.029385566711426
    3. '+
' → logprob: -5.029385566711426
    4. ' +' → logprob: -6.529385566711426
    5. '[' → logprob: -7.154385566711426
    6. ',' → logprob: -7.654385566711426
    7. ']' → logprob: -7.779385566711426
    8. '[
' → logprob: -7.779385566711426
    9. '<|end|>' → logprob: -8.029385566711426
    10. ',
' → logprob: -9.029385566711426

Token 1305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019008127972483635
    2. '2' → logprob: -4.019008159637451
    3. '+' → logprob: -7.144008159637451
    4. '
' → logprob: -10.894007682800293
    5. '0' → logprob: -11.269007682800293
    6. ' ' → logprob: -11.394007682800293
    7. ')' → logprob: -11.894007682800293
    8. '```' → logprob: -12.519007682800293
    9. '+
' → logprob: -12.894007682800293
    10. '   ' → logprob: -13.019007682800293

Token 1306: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009140253067016602
    2. '           ' → logprob: -5.7591400146484375
    3. ']' → logprob: -6.6341400146484375
    4. ',
' → logprob: -7.0091400146484375
    5. '[' → logprob: -7.2591400146484375
    6. '
' → logprob: -7.2591400146484375
    7. ',' → logprob: -7.6341400146484375
    8. '<|end|>' → logprob: -7.8841400146484375
    9. '            
' → logprob: -8.259140014648438
    10. ']
' → logprob: -8.759140014648438

Token 1307: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11528294533491135
    2. ' 
' → logprob: -3.1152830123901367
    3. ']' → logprob: -4.115283012390137
    4. '<|end|>' → logprob: -4.490283012390137
    5. ' ' → logprob: -4.865283012390137
    6. '  
' → logprob: -4.990283012390137
    7. '[' → logprob: -5.615283012390137
    8. '0' → logprob: -6.240283012390137
    9. '[i' → logprob: -6.365283012390137
    10. ')' → logprob: -6.740283012390137

Token 1308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8779466152191162
    2. ']' → logprob: -0.8779466152191162
    3. '
' → logprob: -2.877946615219116
    4. '#' → logprob: -3.377946615219116
    5. '[' → logprob: -3.502946615219116
    6. 'None' → logprob: -3.877946615219116
    7. ')' → logprob: -5.252946853637695
    8. ']
' → logprob: -5.752946853637695
    9. '   ' → logprob: -6.002946853637695
    10. 'i' → logprob: -6.252946853637695

Token 1309: '=' (ID: 28)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09659962356090546
    2. '
' → logprob: -3.596599578857422
    3. ',' → logprob: -3.721599578857422
    4. '][' → logprob: -4.346599578857422
    5. '<|end|>' → logprob: -5.096599578857422
    6. ' ]' → logprob: -5.596599578857422
    7. '[' → logprob: -5.596599578857422
    8. ',
' → logprob: -6.096599578857422
    9. ']
' → logprob: -6.596599578857422
    10. ':' → logprob: -6.721599578857422

Token 1310: 'entr' (ID: 12792)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0188684593886137
    2. 'i' → logprob: -4.143868446350098
    3. '[' → logprob: -7.018868446350098
    4. '<|end|>' → logprob: -7.393868446350098
    5. ' ' → logprob: -7.643868446350098
    6. '<|end|>' → logprob: -8.643868446350098
    7. ' i' → logprob: -8.768868446350098
    8. 'exit' → logprob: -9.018868446350098
    9. 'entr' → logprob: -9.893868446350098
    10. '
' → logprob: -10.143868446350098

Token 1311: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.20634819567203522
    2. 'rance' → logprob: -1.706348180770874
    3. 'r' → logprob: -5.956348419189453
    4. 'range' → logprob: -7.331348419189453
    5. '
' → logprob: -7.456348419189453
    6. '   ' → logprob: -8.456348419189453
    7. ' ' → logprob: -8.706348419189453
    8. 'race' → logprob: -8.831348419189453
    9. '[' → logprob: -9.206348419189453
    10. '[
' → logprob: -9.706348419189453

Token 1312: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0664764642715454
    2. '
' → logprob: -1.0664764642715454
    3. ',' → logprob: -2.066476345062256
    4. ',
' → logprob: -2.566476345062256
    5. ']
' → logprob: -2.816476345062256
    6. '[' → logprob: -4.316476345062256
    7. '           ' → logprob: -4.441476345062256
    8. ')' → logprob: -5.566476345062256
    9. '<|end|>' → logprob: -5.816476345062256
    10. '][' → logprob: -6.066476345062256

Token 1313: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1920776665210724
    2. 'n' → logprob: -2.94207763671875
    3. ' ' → logprob: -3.06707763671875
    4. '1' → logprob: -3.19207763671875
    5. ' i' → logprob: -4.19207763671875
    6. '0' → logprob: -4.56707763671875
    7. 'i' → logprob: -5.69207763671875
    8. ',' → logprob: -6.06707763671875
    9. ' None' → logprob: -7.81707763671875
    10. ' self' → logprob: -8.44207763671875

Token 1314: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016239990945905447
    2. '-' → logprob: -7.00162410736084
    3. ' +' → logprob: -7.87662410736084
    4. '+
' → logprob: -8.50162410736084
    5. '
' → logprob: -10.00162410736084
    6. '<|end|>' → logprob: -10.75162410736084
    7. '1' → logprob: -11.50162410736084
    8. '[' → logprob: -11.62662410736084
    9. '<|end|>' → logprob: -12.12662410736084
    10. ',' → logprob: -12.37662410736084

Token 1315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029290912207216024
    2. '2' → logprob: -5.877929210662842
    3. '
' → logprob: -10.127928733825684
    4. '+' → logprob: -10.502928733825684
    5. ' ' → logprob: -11.127928733825684
    6. 'n' → logprob: -11.502928733825684
    7. '   ' → logprob: -11.877928733825684
    8. '<|end|>' → logprob: -12.002928733825684
    9. '<|end|>' → logprob: -12.252928733825684
    10. '```' → logprob: -12.377928733825684

Token 1316: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3760228455066681
    2. ']' → logprob: -1.2510228157043457
    3. '<|end|>' → logprob: -4.251022815704346
    4. '][' → logprob: -5.501022815704346
    5. ',
' → logprob: -6.126022815704346
    6. ' ,' → logprob: -6.876022815704346
    7. '],' → logprob: -7.126022815704346
    8. '
' → logprob: -7.251022815704346
    9. '<|end|>' → logprob: -7.626022815704346
    10. '][]' → logprob: -7.751022815704346

Token 1317: 'exit' (ID: 30264)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5926693081855774
    2. 'exit' → logprob: -0.8426693081855774
    3. 'self' → logprob: -4.592669486999512
    4. ' exit' → logprob: -5.967669486999512
    5. ' n' → logprob: -7.092669486999512
    6. '0' → logprob: -7.717669486999512
    7. '_exit' → logprob: -7.842669486999512
    8. '   ' → logprob: -7.842669486999512
    9. '(n' → logprob: -8.217669486999512
    10. '<|end|>' → logprob: -8.217669486999512

Token 1318: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020030006766319275
    2. '           ' → logprob: -4.0200300216674805
    3. '
' → logprob: -7.8950300216674805
    4. '            
' → logprob: -8.02003002166748
    5. '

' → logprob: -8.52003002166748
    6. ',' → logprob: -8.52003002166748
    7. ',
' → logprob: -8.77003002166748
    8. '       ' → logprob: -8.89503002166748
    9. '[' → logprob: -9.52003002166748
    10. ']' → logprob: -9.64503002166748

Token 1319: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2880992889404297
    2. '           ' → logprob: -1.4130992889404297
    3. '       ' → logprob: -5.78809928894043
    4. '<|end|>' → logprob: -6.16309928894043
    5. '   ' → logprob: -7.53809928894043
    6. '            
' → logprob: -8.03809928894043
    7. '```' → logprob: -8.41309928894043
    8. '    
' → logprob: -9.16309928894043
    9. '[' → logprob: -9.41309928894043
    10. '<|end|>' → logprob: -9.78809928894043

Token 1320: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4032536745071411
    2. '
' → logprob: -1.7782536745071411
    3. 'for' → logprob: -2.4032535552978516
    4. ' for' → logprob: -2.9032535552978516
    5. '       ' → logprob: -4.278253555297852
    6. '            
' → logprob: -6.278253555297852
    7. '   ' → logprob: -7.028253555297852
    8. '    
' → logprob: -8.278253555297852
    9. '        
' → logprob: -8.528253555297852
    10. ' 
' → logprob: -9.028253555297852

Token 1321: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03096061758697033
    2. ' for' → logprob: -3.9059605598449707
    3. '           ' → logprob: -4.655960559844971
    4. '       ' → logprob: -7.905960559844971
    5. '#' → logprob: -8.405961036682129
    6. 'from' → logprob: -8.780961036682129
    7. '   ' → logprob: -10.030961036682129
    8. '
' → logprob: -10.905961036682129
    9. 'import' → logprob: -11.280961036682129
    10. 'def' → logprob: -11.905961036682129

Token 1322: ' union' (ID: 22208)
  Prédit: 'prop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prop' → logprob: -0.5755969882011414
    2. 'process' → logprob: -1.7005970478057861
    3. 'merge' → logprob: -1.9505970478057861
    4. 'update' → logprob: -2.825597047805786
    5. 'expand' → logprob: -4.075596809387207
    6. 'def' → logprob: -4.825596809387207
    7. ' process' → logprob: -5.450596809387207
    8. 'continue' → logprob: -5.825596809387207
    9. ' propagate' → logprob: -5.950596809387207
    10. '       ' → logprob: -5.950596809387207

Token 1323: ' intervals' (ID: 49900)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.47731515765190125
    2. '-find' → logprob: -1.2273151874542236
    3. ' intervals' → logprob: -3.1023151874542236
    4. ' find' → logprob: -3.7273151874542236
    5. '_find' → logprob: -4.4773149490356445
    6. '           ' → logprob: -6.7273149490356445
    7. ' the' → logprob: -7.1023149490356445
    8. 'Find' → logprob: -7.1023149490356445
    9. 'interval' → logprob: -7.3523149490356445
    10. '-F' → logprob: -8.102314949035645

Token 1324: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4157451391220093
    2. '[
' → logprob: -2.665745258331299
    3. '[i' → logprob: -3.040745258331299
    4. '[self' → logprob: -3.290745258331299
    5. '           ' → logprob: -3.540745258331299
    6. 'for' → logprob: -3.915745258331299
    7. ' =' → logprob: -4.165745258331299
    8. ' for' → logprob: -4.165745258331299
    9. '   ' → logprob: -4.290745258331299
    10. ',' → logprob: -4.290745258331299

Token 1325: ' shops' (ID: 22509)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5053032636642456
    2. 'c' → logprob: -1.8803032636642456
    3. 'u' → logprob: -2.255303382873535
    4. 'self' → logprob: -3.755303382873535
    5. 'constraints' → logprob: -3.755303382873535
    6. 'i' → logprob: -4.255303382873535
    7. 'all' → logprob: -4.380303382873535
    8. ' each' → logprob: -4.505303382873535
    9. 'constraint' → logprob: -4.630303382873535
    10. 'shop' → logprob: -4.880303382873535

Token 1326: ' connected' (ID: 12079)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9097789525985718
    2. '[' → logprob: -1.9097789525985718
    3. '[u' → logprob: -1.9097789525985718
    4. ' with' → logprob: -2.5347790718078613
    5. 'with' → logprob: -3.1597790718078613
    6. ',' → logprob: -3.5347790718078613
    7. '[
' → logprob: -3.6597790718078613
    8. '
' → logprob: -3.6597790718078613
    9. ' that' → logprob: -3.7847790718078613
    10. ' in' → logprob: -3.9097790718078613

Token 1327: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.4501262605190277
    2. ' by' → logprob: -1.07512629032135
    3. '           ' → logprob: -4.4501261711120605
    4. 'in' → logprob: -6.9501261711120605
    5. '   ' → logprob: -6.9501261711120605
    6. ' via' → logprob: -7.0751261711120605
    7. '               ' → logprob: -7.0751261711120605
    8. '[i' → logprob: -7.3251261711120605
    9. ',' → logprob: -7.5751261711120605
    10. '       ' → logprob: -7.5751261711120605

Token 1328: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.5103276371955872
    2. ' constraints' → logprob: -1.3853275775909424
    3. ' edges' → logprob: -2.6353275775909424
    4. 'edges' → logprob: -2.8853275775909424
    5. ' the' → logprob: -5.6353278160095215
    6. 'self' → logprob: -5.7603278160095215
    7. ' an' → logprob: -5.8853278160095215
    8. 'constraint' → logprob: -6.1353278160095215
    9. 'the' → logprob: -6.3853278160095215
    10. 'add' → logprob: -6.7603278160095215

Token 1329: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07437156140804291
    2. '
' → logprob: -3.324371576309204
    3. ',' → logprob: -4.199371337890625
    4. '               ' → logprob: -5.074371337890625
    5. ' with' → logprob: -5.699371337890625
    6. '            
' → logprob: -6.324371337890625
    7. '       ' → logprob: -6.574371337890625
    8. '.' → logprob: -6.699371337890625
    9. '                   ' → logprob: -6.949371337890625
    10. '   ' → logprob: -7.324371337890625

Token 1330: ' identify' (ID: 11410)
  Prédit: ' merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' merge' → logprob: -1.959593653678894
    2. ' unify' → logprob: -1.959593653678894
    3. ' include' → logprob: -2.0845937728881836
    4. 'min' → logprob: -2.3345937728881836
    5. 'include' → logprob: -2.4595937728881836
    6. 'merge' → logprob: -2.5845937728881836
    7. ' cover' → logprob: -2.7095937728881836
    8. 'union' → logprob: -2.8345937728881836
    9. ' union' → logprob: -3.3345937728881836
    10. 'cover' → logprob: -3.5845937728881836

Token 1331: ' continuous' (ID: 27979)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1241933107376099
    2. ' intervals' → logprob: -2.3741931915283203
    3. ' ranges' → logprob: -2.3741931915283203
    4. 'ranges' → logprob: -2.6241931915283203
    5. 'interval' → logprob: -2.7491931915283203
    6. ' their' → logprob: -2.9991931915283203
    7. ' which' → logprob: -3.2491931915283203
    8. 'the' → logprob: -3.7491931915283203
    9. ' constraints' → logprob: -3.8741931915283203
    10. ' minimal' → logprob: -3.9991931915283203

Token 1332: ' segments' (ID: 33749)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.3114197254180908
    2. 'ranges' → logprob: -1.3114197254180908
    3. ' ranges' → logprob: -1.5614197254180908
    4. ' segments' → logprob: -2.436419725418091
    5. 'interval' → logprob: -2.936419725418091
    6. 'segments' → logprob: -3.311419725418091
    7. ' constraints' → logprob: -4.436419486999512
    8. '
' → logprob: -4.936419486999512
    9. ' coverage' → logprob: -4.936419486999512
    10. ' visitation' → logprob: -5.186419486999512

Token 1333: ' required' (ID: 3759)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14082454144954681
    2. '
' → logprob: -2.515824556350708
    3. ',' → logprob: -4.140824317932129
    4. ' with' → logprob: -5.015824317932129
    5. ' for' → logprob: -5.515824317932129
    6. '               ' → logprob: -5.515824317932129
    7. '       ' → logprob: -5.515824317932129
    8. '.' → logprob: -5.640824317932129
    9. ' and' → logprob: -6.015824317932129
    10. '            
' → logprob: -6.515824317932129

Token 1334: '.

' (ID: 364)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0824086666107178
    2. '           ' → logprob: -1.0824086666107178
    3. ' by' → logprob: -1.8324086666107178
    4. ' for' → logprob: -3.3324086666107178
    5. '.' → logprob: -3.4574086666107178
    6. 'by' → logprob: -3.5824086666107178
    7. ',' → logprob: -3.9574086666107178
    8. 'for' → logprob: -4.207408905029297
    9. 'to' → logprob: -4.457408905029297
    10. '       ' → logprob: -5.207408905029297

Token 1335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028113538399338722
    2. '
' → logprob: -3.653113603591919
    3. '            
' → logprob: -7.40311336517334
    4. ' for' → logprob: -7.90311336517334
    5. '       ' → logprob: -8.65311336517334
    6. 'for' → logprob: -8.77811336517334
    7. ' 
' → logprob: -9.15311336517334
    8. '               ' → logprob: -9.15311336517334
    9. '    
' → logprob: -9.40311336517334
    10. '   ' → logprob: -9.77811336517334

Token 1336: ' parent' (ID: 5980)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11584419757127762
    2. 'from' → logprob: -2.490844249725342
    3. '       ' → logprob: -4.490844249725342
    4. ' from' → logprob: -5.740844249725342
    5. '
' → logprob: -5.740844249725342
    6. 'import' → logprob: -6.365844249725342
    7. '```' → logprob: -6.490844249725342
    8. 'def' → logprob: -6.740844249725342
    9. '   ' → logprob: -6.865844249725342
    10. 'union' → logprob: -7.240844249725342

Token 1337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16054408252239227
    2. ' =' → logprob: -1.9105440378189087
    3. '[' → logprob: -8.785544395446777
    4. '=[' → logprob: -9.910544395446777
    5. '_' → logprob: -10.535544395446777
    6. '   ' → logprob: -10.785544395446777
    7. '=[]' → logprob: -11.160544395446777
    8. '=
' → logprob: -11.285544395446777
    9. 's' → logprob: -11.410544395446777
    10. '```' → logprob: -11.785544395446777

Token 1338: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.4054493308067322
    2. '[' → logprob: -1.905449390411377
    3. '[i' → logprob: -2.655449390411377
    4. ' [' → logprob: -2.655449390411377
    5. 'list' → logprob: -3.655449390411377
    6. '[-' → logprob: -4.405449390411377
    7. ' list' → logprob: -5.405449390411377
    8. '[parent' → logprob: -6.655449390411377
    9. '[List' → logprob: -10.030448913574219
    10. ' [-' → logprob: -10.280448913574219

Token 1339: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0015028368216007948
    2. 'range' → logprob: -6.501502990722656
    3. ' range' → logprob: -15.126502990722656
    4. '	range' → logprob: -15.876502990722656
    5. '=' → logprob: -16.876502990722656
    6. '(i' → logprob: -17.751502990722656
    7. '   ' → logprob: -18.501502990722656
    8. '(
' → logprob: -18.751502990722656
    9. '(' → logprob: -18.751502990722656
    10. '[' → logprob: -19.626502990722656

Token 1340: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0057484181597828865
    2. '(self' → logprob: -5.255748271942139
    3. ' self' → logprob: -7.755748271942139
    4. '[self' → logprob: -10.130748748779297
    5. 'len' → logprob: -11.630748748779297
    6. '
' → logprob: -11.880748748779297
    7. '=self' → logprob: -11.880748748779297
    8. '           ' → logprob: -11.880748748779297
    9. '	self' → logprob: -12.005748748779297
    10. ',self' → logprob: -13.005748748779297

Token 1341: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0005539863486774266
    2. 'n' → logprob: -7.625554084777832
    3. 'self' → logprob: -11.000554084777832
    4. '   ' → logprob: -11.125554084777832
    5. '(n' → logprob: -11.750554084777832
    6. '[n' → logprob: -12.250554084777832
    7. ' .' → logprob: -12.250554084777832
    8. '	n' → logprob: -12.625554084777832
    9. '<n' → logprob: -12.625554084777832
    10. '_n' → logprob: -13.500554084777832

Token 1342: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.3199920178740285e-05
    2. ' +' → logprob: -10.750022888183594
    3. '+
' → logprob: -14.000022888183594
    4. '
' → logprob: -15.000022888183594
    5. '[' → logprob: -15.625022888183594
    6. ')+' → logprob: -16.125022888183594
    7. '   ' → logprob: -16.500022888183594
    8. '2' → logprob: -16.625022888183594
    9. '-' → logprob: -17.000022888183594
    10. '1' → logprob: -17.250022888183594

Token 1343: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7666431665420532
    2. '2' → logprob: -1.0166431665420532
    3. '+' → logprob: -1.7666431665420532
    4. '   ' → logprob: -7.141643047332764
    5. '(n' → logprob: -7.266643047332764
    6. '           ' → logprob: -7.891643047332764
    7. '       ' → logprob: -8.766643524169922
    8. ' n' → logprob: -8.891643524169922
    9. '+n' → logprob: -8.891643524169922
    10. '
' → logprob: -9.016643524169922

Token 1344: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014296668581664562
    2. '))
' → logprob: -4.264296531677246
    3. ')' → logprob: -9.639296531677246
    4. '           ' → logprob: -10.889296531677246
    5. '       ' → logprob: -10.889296531677246
    6. ' ))' → logprob: -11.264296531677246
    7. '))

' → logprob: -12.139296531677246
    8. '));' → logprob: -12.889296531677246
    9. ')))' → logprob: -12.889296531677246
    10. ' ))
' → logprob: -13.514296531677246

Token 1345: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22583509981632233
    2. 'def' → logprob: -1.8508350849151611
    3. '           ' → logprob: -3.850835084915161
    4. '       ' → logprob: -4.85083532333374
    5. ' def' → logprob: -5.22583532333374
    6. '   ' → logprob: -5.22583532333374
    7. '    
' → logprob: -6.60083532333374
    8. '            
' → logprob: -6.60083532333374
    9. '```' → logprob: -6.85083532333374
    10. ' 
' → logprob: -7.22583532333374

Token 1346: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38798901438713074
    2. 'def' (adapté à ' def') → logprob: -1.1379890441894531
    3. '       ' → logprob: -7.137989044189453
    4. '           ' → logprob: -9.262989044189453
    5. ' def' → logprob: -9.637989044189453
    6. '   ' → logprob: -9.762989044189453
    7. '        
' → logprob: -10.512989044189453
    8. '            
' → logprob: -10.512989044189453
    9. '
' → logprob: -10.887989044189453
    10. '    
' → logprob: -10.887989044189453

Token 1347: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.018408620730042458
    2. ' find' → logprob: -4.01840877532959
    3. '_find' → logprob: -8.26840877532959
    4. 'union' → logprob: -13.89340877532959
    5. '	find' → logprob: -14.89340877532959
    6. '=find' → logprob: -15.14340877532959
    7. '
' → logprob: -15.26840877532959
    8. ' ' → logprob: -16.393407821655273
    9. ' union' → logprob: -16.518407821655273
    10. '   ' → logprob: -16.768407821655273

Token 1348: '(x' (ID: 4061)
  Prédit: '(parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.5458936095237732
    2. '(x' → logprob: -1.420893669128418
    3. '(u' → logprob: -2.420893669128418
    4. 'parent' → logprob: -2.545893669128418
    5. '(i' → logprob: -4.670893669128418
    6. '_parent' → logprob: -6.670893669128418
    7. '(a' → logprob: -8.045893669128418
    8. '(p' → logprob: -8.045893669128418
    9. '(' → logprob: -8.420893669128418
    10. '(paren' → logprob: -9.295893669128418

Token 1349: '):
' (ID: 1883)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6006869673728943
    2. '):
' → logprob: -1.225687026977539
    3. '):' → logprob: -1.850687026977539
    4. '   ' → logprob: -7.725687026977539
    5. ')' → logprob: -9.100687026977539
    6. '):
' → logprob: -9.475687026977539
    7. ':' → logprob: -9.600687026977539
    8. '       ' → logprob: -9.975687026977539
    9. ':
' → logprob: -11.225687026977539
    10. ' ' → logprob: -11.225687026977539

Token 1350: '               ' (ID: 506)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28540903329849243
    2. '(x' → logprob: -2.4104089736938477
    3. 'x' → logprob: -2.6604089736938477
    4. '   ' → logprob: -2.9104089736938477
    5. '       ' → logprob: -4.035408973693848
    6. '           ' → logprob: -4.410408973693848
    7. '               ' → logprob: -6.785408973693848
    8. ' ' → logprob: -7.660408973693848
    9. '    ' → logprob: -7.785408973693848
    10. '
' → logprob: -7.910408973693848

Token 1351: ' while' (ID: 2049)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0905818939208984
    2. 'parent' → logprob: -1.0905818939208984
    3. ' x' → logprob: -1.8405818939208984
    4. 'return' → logprob: -2.5905818939208984
    5. '   ' → logprob: -3.5905818939208984
    6. ' parent' → logprob: -3.5905818939208984
    7. ' return' → logprob: -4.590581893920898
    8. '               ' → logprob: -4.965581893920898
    9. 'self' → logprob: -5.840581893920898
    10. '_parent' → logprob: -5.965581893920898

Token 1352: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.171750009059906
    2. 'x' → logprob: -1.9217500686645508
    3. ' parent' → logprob: -4.671750068664551
    4. ' x' → logprob: -6.171750068664551
    5. '   ' → logprob: -12.42175006866455
    6. '(parent' → logprob: -12.42175006866455
    7. '	parent' → logprob: -12.54675006866455
    8. ' ' → logprob: -13.67175006866455
    9. '_parent' → logprob: -14.04675006866455
    10. '    ' → logprob: -14.67175006866455

Token 1353: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.75001335144043
    3. '[
' → logprob: -12.50001335144043
    4. 'x' → logprob: -13.87501335144043
    5. ' [' → logprob: -15.37501335144043
    6. '[parent' → logprob: -15.37501335144043
    7. '
' → logprob: -16.75001335144043
    8. '(x' → logprob: -17.00001335144043
    9. '[t' → logprob: -17.00001335144043
    10. '[u' → logprob: -17.00001335144043

Token 1354: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5558076500892639
    2. ' !=' → logprob: -0.9308076500892639
    3. '[x' → logprob: -3.805807590484619
    4. ']!=' → logprob: -5.430807590484619
    5. ']' → logprob: -5.680807590484619
    6. '[' → logprob: -6.430807590484619
    7. '[i' → logprob: -9.055808067321777
    8. ')!=' → logprob: -9.430808067321777
    9. 'x' → logprob: -10.055808067321777
    10. '	' → logprob: -10.180808067321777

Token 1355: ' !=' (ID: 1666)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.16234518587589264
    2. '!=' → logprob: -1.9123451709747314
    3. ' !=' → logprob: -6.2873454093933105
    4. '[' → logprob: -9.037344932556152
    5. '[
' → logprob: -9.537344932556152
    6. '[int' → logprob: -10.912344932556152
    7. '
' → logprob: -11.662344932556152
    8. '```' → logprob: -12.037344932556152
    9. '[i' → logprob: -12.162344932556152
    10. '!==' → logprob: -12.412344932556152

Token 1356: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.65707261255011e-06
    2. ' x' → logprob: -11.750008583068848
    3. 'parent' → logprob: -14.375008583068848
    4. '
' → logprob: -16.250009536743164
    5. '	x' → logprob: -17.750009536743164
    6. '   ' → logprob: -19.125009536743164
    7. ' ' → logprob: -19.875009536743164
    8. '<|end|>' → logprob: -20.250009536743164
    9. '[parent' → logprob: -20.750009536743164
    10. '    
' → logprob: -21.125009536743164

Token 1357: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11349158734083176
    2. ':' → logprob: -2.2384915351867676
    3. '):
' → logprob: -7.863491535186768
    4. ')' → logprob: -9.863492012023926
    5. '=' → logprob: -10.113492012023926
    6. '   ' → logprob: -10.238492012023926
    7. ':return' → logprob: -10.363492012023926
    8. '[' → logprob: -11.113492012023926
    9. ' :
' → logprob: -11.113492012023926
    10. ' and' → logprob: -11.238492012023926

Token 1358: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19276215136051178
    2. ' x' → logprob: -2.6927621364593506
    3. ':
' → logprob: -3.3177621364593506
    4. '               ' → logprob: -3.5677621364593506
    5. '   ' → logprob: -4.31776237487793
    6. '                       ' → logprob: -4.94276237487793
    7. ':' → logprob: -5.19276237487793
    8. '           ' → logprob: -5.56776237487793
    9. 'x' → logprob: -5.69276237487793
    10. ' ' → logprob: -6.19276237487793

Token 1359: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0025479584001004696
    2. ' x' → logprob: -6.002547740936279
    3. 'parent' (adapté à ' parent') → logprob: -9.627548217773438
    4. '                   ' → logprob: -12.252548217773438
    5. ' parent' → logprob: -13.877548217773438
    6. '   ' → logprob: -14.627548217773438
    7. '	x' → logprob: -15.877548217773438
    8. '
' → logprob: -17.627548217773438
    9. '                    ' → logprob: -17.752548217773438
    10. '=' → logprob: -17.752548217773438

Token 1360: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.008672484196722507
    2. 'x' → logprob: -4.758672714233398
    3. '[
' → logprob: -11.258672714233398
    4. '=' → logprob: -11.383672714233398
    5. '[' → logprob: -11.633672714233398
    6. '
' → logprob: -11.758672714233398
    7. '```' → logprob: -12.383672714233398
    8. ' x' → logprob: -12.508672714233398
    9. '   ' → logprob: -12.883672714233398
    10. ' =' → logprob: -13.258672714233398

Token 1361: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023762464988976717
    2. ' =' → logprob: -6.127376079559326
    3. '=
' → logprob: -9.127376556396484
    4. ']' → logprob: -9.502376556396484
    5. ']=' → logprob: -12.127376556396484
    6. '=x' → logprob: -14.002376556396484
    7. '   ' → logprob: -15.252376556396484
    8. ')' → logprob: -15.502376556396484
    9. ' =
' → logprob: -15.877376556396484
    10. '[' → logprob: -16.127376556396484

Token 1362: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=
' → logprob: -15.764163970947266
    4. '=int' → logprob: -16.514163970947266
    5. '=x' → logprob: -18.264163970947266
    6. '.=' → logprob: -19.014163970947266
    7. '＝' → logprob: -19.139163970947266
    8. '=i' → logprob: -19.264163970947266
    9. '=f' → logprob: -19.514163970947266
    10. ']=' → logprob: -19.639163970947266

Token 1363: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.001170225441455841
    2. ' parent' → logprob: -6.7511701583862305
    3. '	parent' → logprob: -17.251171112060547
    4. 'find' → logprob: -18.501171112060547
    5. '(parent' → logprob: -18.876171112060547
    6. '[parent' → logprob: -20.751171112060547
    7. '   ' → logprob: -20.876171112060547
    8. '
' → logprob: -20.876171112060547
    9. '_parent' → logprob: -21.126171112060547
    10. '    ' → logprob: -21.626171112060547

Token 1364: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -3.5716304410016164e-05
    2. 'parent' → logprob: -10.500035285949707
    3. '[' → logprob: -12.375035285949707
    4. '[x' → logprob: -12.750035285949707
    5. '[
' → logprob: -14.000035285949707
    6. '	parent' → logprob: -17.250036239624023
    7. '[player' → logprob: -17.375036239624023
    8. '
' → logprob: -17.375036239624023
    9. '(parent' → logprob: -17.750036239624023
    10. '_parent' → logprob: -18.250036239624023

Token 1365: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019305398454889655
    2. '[x' → logprob: -6.2519307136535645
    3. '{x' → logprob: -13.876930236816406
    4. ' x' → logprob: -15.501930236816406
    5. '[
' → logprob: -15.501930236816406
    6. '
' → logprob: -15.876930236816406
    7. ']' → logprob: -15.876930236816406
    8. '	x' → logprob: -16.626930236816406
    9. '[parent' → logprob: -16.876930236816406
    10. '$x' → logprob: -17.001930236816406

Token 1366: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4857884645462036
    2. ']]
' → logprob: -0.9857884645462036
    3. ']' → logprob: -4.735788345336914
    4. '[x' → logprob: -6.110788345336914
    5. ']]' → logprob: -7.485788345336914
    6. 'x' → logprob: -9.610788345336914
    7. ' ]]
' → logprob: -12.235788345336914
    8. ' ]
' → logprob: -12.610788345336914
    9. ']
' → logprob: -12.735788345336914
    10. '   ' → logprob: -13.360788345336914

Token 1367: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03560962155461311
    2. '               ' → logprob: -3.535609722137451
    3. '                       ' → logprob: -6.035609722137451
    4. '           ' → logprob: -7.035609722137451
    5. '       ' → logprob: -7.785609722137451
    6. ' x' → logprob: -7.910609722137451
    7. 'return' → logprob: -8.160609245300293
    8. '[x' → logprob: -8.410609245300293
    9. '(x' → logprob: -8.535609245300293
    10. 'x' → logprob: -8.535609245300293

Token 1368: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0015068859793245792
    2. ' x' → logprob: -6.501506805419922
    3. '                   ' → logprob: -13.251506805419922
    4. 'return' → logprob: -13.376506805419922
    5. 'parent' → logprob: -14.001506805419922
    6. '   ' → logprob: -15.751506805419922
    7. '	x' → logprob: -16.626506805419922
    8. '                    ' → logprob: -16.876506805419922
    9. '    ' → logprob: -17.376506805419922
    10. ' return' → logprob: -17.876506805419922

Token 1369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019376773852854967
    2. ' =' → logprob: -6.2519378662109375
    3. '=
' → logprob: -11.626937866210938
    4. ' =
' → logprob: -15.626937866210938
    5. '=

' → logprob: -17.376937866210938
    6. '   ' → logprob: -18.501937866210938
    7. ' ' → logprob: -18.626937866210938
    8. '=int' → logprob: -19.001937866210938
    9. '.=' → logprob: -19.126937866210938
    10. '=}' → logprob: -19.251937866210938

Token 1370: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -3.547789674485102e-05
    2. ' parent' → logprob: -10.250035285949707
    3. '[parent' → logprob: -18.125036239624023
    4. '	parent' → logprob: -19.000036239624023
    5. '(parent' → logprob: -19.250036239624023
    6. '   ' → logprob: -20.250036239624023
    7. '.parent' → logprob: -20.375036239624023
    8. ',parent' → logprob: -22.250036239624023
    9. '
' → logprob: -22.625036239624023
    10. '_parent' → logprob: -22.750036239624023

Token 1371: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.05696004256606102
    2. '[parent' → logprob: -3.181960105895996
    3. 'parent' → logprob: -4.431960105895996
    4. 'x' → logprob: -6.306960105895996
    5. '[
' → logprob: -9.306960105895996
    6. '[' → logprob: -10.306960105895996
    7. '```' → logprob: -11.556960105895996
    8. ' parent' → logprob: -12.806960105895996
    9. '.parent' → logprob: -12.931960105895996
    10. '{x' → logprob: -13.181960105895996

Token 1372: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001736943726427853
    2. ']
' → logprob: -6.376737117767334
    3. ' ]' → logprob: -10.501736640930176
    4. ']+' → logprob: -13.001736640930176
    5. 'x' → logprob: -13.126736640930176
    6. '[' → logprob: -14.626736640930176
    7. '[
' → logprob: -14.876736640930176
    8. '   ' → logprob: -14.876736640930176
    9. '];' → logprob: -15.251736640930176
    10. '[x' → logprob: -15.626736640930176

Token 1373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5028715133666992
    2. '                   ' → logprob: -1.0028715133666992
    3. 'return' → logprob: -5.002871513366699
    4. '           ' → logprob: -5.002871513366699
    5. ' return' → logprob: -5.377871513366699
    6. '                       ' → logprob: -6.252871513366699
    7. '
' → logprob: -6.252871513366699
    8. '       ' → logprob: -6.877871513366699
    9. ':
' → logprob: -7.002871513366699
    10. '   ' → logprob: -7.002871513366699

Token 1374: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5946677923202515
    2. ' return' → logprob: -1.5946677923202515
    3. '               ' → logprob: -2.344667911529541
    4. '\n' → logprob: -3.344667911529541
    5. ' 
' → logprob: -3.594667911529541
    6. '           ' → logprob: -3.844667911529541
    7. '       ' → logprob: -4.594667911529541
    8. '                   ' → logprob: -4.844667911529541
    9. ' x' → logprob: -4.969667911529541
    10. '   ' → logprob: -4.969667911529541

Token 1375: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0033883836586028337
    2. 'parent' → logprob: -5.753388404846191
    3. ' x' → logprob: -8.503388404846191
    4. ' parent' → logprob: -11.753388404846191
    5. '(parent' → logprob: -17.753387451171875
    6. '[parent' → logprob: -18.003387451171875
    7. '_parent' → logprob: -19.753387451171875
    8. '	parent' → logprob: -20.628387451171875
    9. '(x' → logprob: -21.003387451171875
    10. '.parent' → logprob: -21.128387451171875

Token 1376: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6309650540351868
    2. '\n' → logprob: -1.255964994430542
    3. '           ' → logprob: -2.130964994430542
    4. '       ' → logprob: -3.755964994430542
    5. '<|end|>' → logprob: -4.755965232849121
    6. '   ' → logprob: -5.255965232849121
    7. '    
' → logprob: -5.505965232849121
    8. '               ' → logprob: -5.505965232849121
    9. ' 
' → logprob: -5.630965232849121
    10. ' ' → logprob: -6.255965232849121

Token 1377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5808770060539246
    2. '       ' → logprob: -1.9558770656585693
    3. '    
' → logprob: -2.5808770656585693
    4. 'def' → logprob: -2.8308770656585693
    5. '
' → logprob: -3.2058770656585693
    6. '            
' → logprob: -3.7058770656585693
    7. '\n' → logprob: -3.8308770656585693
    8. '```' → logprob: -3.9558770656585693
    9. '   ' → logprob: -4.08087682723999
    10. '        
' → logprob: -4.58087682723999

Token 1378: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20610086619853973
    2. '
' → logprob: -2.2061009407043457
    3. '       ' → logprob: -3.3311009407043457
    4. '           ' → logprob: -3.5811009407043457
    5. '   ' → logprob: -5.581100940704346
    6. ' def' → logprob: -5.706100940704346
    7. '    
' → logprob: -6.706100940704346
    8. '```' → logprob: -6.706100940704346
    9. '            
' → logprob: -7.081100940704346
    10. '	def' → logprob: -7.081100940704346

Token 1379: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.0009143244242295623
    2. ' union' → logprob: -7.000914096832275
    3. '_union' → logprob: -13.750914573669434
    4. 'def' → logprob: -13.875914573669434
    5. '	union' → logprob: -15.500914573669434
    6. '.union' → logprob: -15.625914573669434
    7. 'merge' → logprob: -16.000913619995117
    8. '
' → logprob: -16.125913619995117
    9. 'un' → logprob: -16.375913619995117
    10. 'parent' → logprob: -17.000913619995117

Token 1380: '(a' (ID: 6271)
  Prédit: '(parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.2279263138771057
    2. '(x' → logprob: -2.477926254272461
    3. '(a' → logprob: -2.727926254272461
    4. '(' → logprob: -2.977926254272461
    5. ' (' → logprob: -6.227926254272461
    6. '(u' → logprob: -7.102926254272461
    7. '(
' → logprob: -7.727926254272461
    8. '(left' → logprob: -8.977926254272461
    9. '(find' → logprob: -9.977926254272461
    10. '<|end|>' → logprob: -10.227926254272461

Token 1381: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0092075876891613
    2. ',b' → logprob: -4.759207725524902
    3. ',a' → logprob: -7.759207725524902
    4. ' ,' → logprob: -8.884207725524902
    5. ',
' → logprob: -10.884207725524902
    6. 'a' → logprob: -12.259207725524902
    7. 'b' → logprob: -13.134207725524902
    8. '(a' → logprob: -14.134207725524902
    9. ',int' → logprob: -15.009207725524902
    10. '   ' → logprob: -16.009206771850586

Token 1382: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10030242055654526
    2. '):' → logprob: -2.3503024578094482
    3. ')' → logprob: -10.100302696228027
    4. '):
' → logprob: -10.225302696228027
    5. ':' → logprob: -11.975302696228027
    6. ':
' → logprob: -12.725302696228027
    7. '   ' → logprob: -13.100302696228027
    8. '):

' → logprob: -13.100302696228027
    9. '       ' → logprob: -13.600302696228027
    10. ',' → logprob: -13.975302696228027

Token 1383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1400841772556305
    2. ' 
' → logprob: -3.3900842666625977
    3. '(parent' → logprob: -3.3900842666625977
    4. ' parent' → logprob: -3.5150842666625977
    5. '    
' → logprob: -5.265084266662598
    6. '   ' → logprob: -5.515084266662598
    7. '
' → logprob: -5.515084266662598
    8. '       ' → logprob: -5.765084266662598
    9. '(
' → logprob: -5.890084266662598
    10. '           ' → logprob: -6.265084266662598

Token 1384: ' ra' (ID: 4409)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2374460697174072
    2. ' parent' → logprob: -1.2374460697174072
    3. ' a' → logprob: -1.7374460697174072
    4. 'parent' → logprob: -1.8624460697174072
    5. '               ' → logprob: -3.2374460697174072
    6. 'x' → logprob: -4.237445831298828
    7. ' x' → logprob: -4.862445831298828
    8. ' if' → logprob: -5.112445831298828
    9. ' root' → logprob: -5.237445831298828
    10. 'if' → logprob: -5.362445831298828

Token 1385: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6373674869537354
    2. ' =' → logprob: -0.7623674869537354
    3. '=find' → logprob: -6.137367248535156
    4. '=
' → logprob: -6.387367248535156
    5. 'w' → logprob: -8.637367248535156
    6. ',' → logprob: -9.262367248535156
    7. '
' → logprob: -9.637367248535156
    8. '=int' → logprob: -9.637367248535156
    9. ' =
' → logprob: -9.887367248535156
    10. 'eturn' → logprob: -10.012367248535156

Token 1386: ' rb' (ID: 39441)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.39132460951805115
    2. 'rb' → logprob: -1.1413246393203735
    3. ' rb' → logprob: -5.641324520111084
    4. ' b' → logprob: -7.266324520111084
    5. '
' → logprob: -8.766324996948242
    6. 'ra' → logprob: -11.391324996948242
    7. '(rb' → logprob: -11.891324996948242
    8. '_rb' → logprob: -12.266324996948242
    9. ' 
' → logprob: -12.516324996948242
    10. '    
' → logprob: -12.766324996948242

Token 1387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00425623869523406
    2. ' =' → logprob: -5.504256248474121
    3. '=
' → logprob: -8.754256248474121
    4. '=find' → logprob: -11.629256248474121
    5. '[' → logprob: -13.129256248474121
    6. '=b' → logprob: -13.254256248474121
    7. '=get' → logprob: -13.379256248474121
    8. ')' → logprob: -13.879256248474121
    9. '=a' → logprob: -14.004256248474121
    10. '=int' → logprob: -14.504256248474121

Token 1388: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0028105827514082193
    2. ' find' → logprob: -5.877810478210449
    3. 'a' → logprob: -12.87781047821045
    4. '(find' → logprob: -13.00281047821045
    5. '
' → logprob: -15.00281047821045
    6. '=find' → logprob: -15.12781047821045
    7. '	find' → logprob: -15.87781047821045
    8. '[' → logprob: -16.127811431884766
    9. 'b' → logprob: -17.502811431884766
    10. '.find' → logprob: -17.502811431884766

Token 1389: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00031019834568724036
    2. 'a' → logprob: -8.125309944152832
    3. '(b' → logprob: -12.000309944152832
    4. '(' → logprob: -12.250309944152832
    5. 'b' → logprob: -13.750309944152832
    6. '(rb' → logprob: -14.125309944152832
    7. ')' → logprob: -14.625309944152832
    8. ')a' → logprob: -15.000309944152832
    9. '(
' → logprob: -15.125309944152832
    10. '[a' → logprob: -16.00031089782715

Token 1390: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0029324181377887726
    2. ')
' → logprob: -6.127932548522949
    3. ')' → logprob: -7.377932548522949
    4. ' ),' → logprob: -9.87793254852295
    5. '),
' → logprob: -10.00293254852295
    6. ',' → logprob: -12.12793254852295
    7. ')b' → logprob: -12.25293254852295
    8. 'b' → logprob: -12.87793254852295
    9. '),(' → logprob: -12.87793254852295
    10. '
' → logprob: -12.87793254852295

Token 1391: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00861669983714819
    2. ' find' → logprob: -4.758616924285889
    3. 'b' → logprob: -13.75861644744873
    4. 'rb' → logprob: -13.75861644744873
    5. '  ' → logprob: -17.883617401123047
    6. '(find' → logprob: -17.883617401123047
    7. '   ' → logprob: -18.008617401123047
    8. '
' → logprob: -18.008617401123047
    9. 'fb' → logprob: -18.508617401123047
    10. ' ' → logprob: -18.758617401123047

Token 1392: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018425937741994858
    2. '(b' → logprob: -4.018425941467285
    3. 'rb' → logprob: -8.893425941467285
    4. '(rb' → logprob: -8.893425941467285
    5. ' b' → logprob: -14.018425941467285
    6. 'find' → logprob: -15.518425941467285
    7. '	b' → logprob: -16.26842498779297
    8. ')b' → logprob: -16.76842498779297
    9. '[b' → logprob: -16.89342498779297
    10. 'a' → logprob: -17.14342498779297

Token 1393: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12701597809791565
    2. ')' → logprob: -2.127016067504883
    3. '               ' → logprob: -10.252016067504883
    4. ')
' → logprob: -10.502016067504883
    5. '):
' → logprob: -11.002016067504883
    6. '           ' → logprob: -13.252016067504883
    7. '       ' → logprob: -14.127016067504883
    8. ')

' → logprob: -14.252016067504883
    9. ')`
' → logprob: -14.377016067504883
    10. '):' → logprob: -14.752016067504883

Token 1394: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1395: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.585691511631012
    2. 'if' (adapté à ' if') → logprob: -0.835691511631012
    3. '               ' → logprob: -4.710691452026367
    4. '                   ' → logprob: -7.585691452026367
    5. '           ' → logprob: -9.960691452026367
    6. '=' → logprob: -10.085691452026367
    7. ' =' → logprob: -10.835691452026367
    8. '                ' → logprob: -10.960691452026367
    9. '
' → logprob: -11.335691452026367
    10. '                
' → logprob: -11.710691452026367

Token 1396: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.10021713376045227
    2. ' ra' → logprob: -2.35021710395813
    3. '_ra' → logprob: -11.85021686553955
    4. '   ' → logprob: -13.85021686553955
    5. '
' → logprob: -14.10021686553955
    6. 'raid' → logprob: -15.22521686553955
    7. '                   ' → logprob: -15.35021686553955
    8. 'Ra' → logprob: -15.72521686553955
    9. '.ra' → logprob: -15.85021686553955
    10. ' ' → logprob: -16.225217819213867

Token 1397: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6333212852478027
    2. '!=' → logprob: -0.7583212852478027
    3. '==' → logprob: -8.383321762084961
    4. '=' → logprob: -9.008321762084961
    5. '<|end|>' → logprob: -9.508321762084961
    6. ')!=' → logprob: -9.633321762084961
    7. ']!=' → logprob: -10.008321762084961
    8. ' ==' → logprob: -10.133321762084961
    9. '()!=' → logprob: -10.633321762084961
    10. ')' → logprob: -10.883321762084961

Token 1398: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.002482315758243203
    2. ' rb' → logprob: -6.0024824142456055
    3. '(rb' → logprob: -12.252482414245605
    4. '
' → logprob: -13.502482414245605
    5. '_rb' → logprob: -14.627482414245605
    6. '.rb' → logprob: -17.12748146057129
    7. '
' → logprob: -18.50248146057129
    8. 'Rb' → logprob: -19.25248146057129
    9. ' 
' → logprob: -19.50248146057129
    10. '    ' → logprob: -19.87748146057129

Token 1399: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6225323677062988
    2. '=' → logprob: -0.9975323677062988
    3. ':' → logprob: -2.497532367706299
    4. ' =' → logprob: -5.372532367706299
    5. '):
' → logprob: -5.622532367706299
    6. '=
' → logprob: -6.497532367706299
    7. ')' → logprob: -6.872532367706299
    8. '               ' → logprob: -7.872532367706299
    9. '                   ' → logprob: -8.37253189086914
    10. '[' → logprob: -8.62253189086914

Token 1400: '                   ' (ID: 699)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3516330420970917
    2. '                   ' → logprob: -1.976633071899414
    3. ' =' → logprob: -2.226633071899414
    4. ':
' → logprob: -3.726633071899414
    5. '               ' → logprob: -4.726633071899414
    6. '=
' → logprob: -4.976633071899414
    7. '):
' → logprob: -5.851633071899414
    8. ':' → logprob: -5.976633071899414
    9. '                       ' → logprob: -5.976633071899414
    10. '           ' → logprob: -7.601633071899414

Token 1401: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.02747979946434498
    2. ' parent' → logprob: -3.902479887008667
    3. 'if' → logprob: -5.152479648590088
    4. ' if' → logprob: -7.402479648590088
    5. '                   ' → logprob: -7.902479648590088
    6. '[parent' → logprob: -9.527480125427246
    7. ',parent' → logprob: -11.027480125427246
    8. '_parent' → logprob: -11.527480125427246
    9. '
' → logprob: -11.652480125427246
    10. '                    
' → logprob: -12.027480125427246

Token 1402: ' merge' (ID: 20345)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.026287639513611794
    2. 'if' → logprob: -3.77628755569458
    3. ' parent' → logprob: -6.77628755569458
    4. '                   ' → logprob: -6.77628755569458
    5. 'left' → logprob: -8.151288032531738
    6. 'interval' → logprob: -8.151288032531738
    7. ' if' → logprob: -9.151288032531738
    8. 'l' → logprob: -10.776288032531738
    9. '#' → logprob: -11.026288032531738
    10. 'new' → logprob: -11.776288032531738

Token 1403: ' intervals' (ID: 49900)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00541909271851182
    2. 'if' → logprob: -5.2554192543029785
    3. '                   ' → logprob: -9.50541877746582
    4. ' parent' → logprob: -9.75541877746582
    5. '[parent' → logprob: -10.38041877746582
    6. '
' → logprob: -11.88041877746582
    7. 'interval' → logprob: -12.25541877746582
    8. ' if' → logprob: -12.75541877746582
    9. 'union' → logprob: -13.25541877746582
    10. '_parent' → logprob: -13.75541877746582

Token 1404: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.4395897388458252
    2. '
' → logprob: -1.8145897388458252
    3. 'parent' → logprob: -1.9395897388458252
    4. '[' → logprob: -1.9395897388458252
    5. '[parent' → logprob: -2.814589738845825
    6. ':
' → logprob: -2.939589738845825
    7. '[a' → logprob: -3.189589738845825
    8. ' =' → logprob: -3.564589738845825
    9. ')
' → logprob: -3.939589738845825
    10. ',' → logprob: -4.189589500427246

Token 1405: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029895232990384102
    2. ' =' → logprob: -4.529895305633545
    3. '                       ' → logprob: -5.154895305633545
    4. '[' → logprob: -5.529895305633545
    5. ',' → logprob: -5.904895305633545
    6. ':
' → logprob: -6.904895305633545
    7. '[parent' → logprob: -7.029895305633545
    8. '               ' → logprob: -7.404895305633545
    9. '[
' → logprob: -7.404895305633545
    10. '                    ' → logprob: -7.779895305633545

Token 1406: ' intervals' (ID: 49900)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0822981595993042
    2. 'interval' → logprob: -2.8322982788085938
    3. 'if' → logprob: -4.957298278808594
    4. '                   ' → logprob: -4.957298278808594
    5. 'left' → logprob: -6.457298278808594
    6. ' parent' → logprob: -6.707298278808594
    7. 'new' → logprob: -7.082298278808594
    8. 'min' → logprob: -7.582298278808594
    9. '                       ' → logprob: -7.582298278808594
    10. ' intervals' → logprob: -7.707298278808594

Token 1407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '][' → logprob: -13.125003814697266
    3. '[
' → logprob: -14.000003814697266
    4. ' [' → logprob: -14.625003814697266
    5. ')[' → logprob: -15.625003814697266
    6. '\[' → logprob: -15.625003814697266
    7. '```' → logprob: -16.500003814697266
    8. '[parent' → logprob: -16.500003814697266
    9. '[assembly' → logprob: -16.875003814697266
    10. 'ra' → logprob: -17.000003814697266

Token 1408: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.030487069860100746
    2. 'rb' → logprob: -3.530487060546875
    3. 'find' → logprob: -7.530487060546875
    4. '
' → logprob: -9.155487060546875
    5. '[' → logprob: -10.155487060546875
    6. 'union' → logprob: -10.405487060546875
    7. 'a' → logprob: -12.405487060546875
    8. 'min' → logprob: -12.655487060546875
    9. '[
' → logprob: -13.030487060546875
    10. 'max' → logprob: -13.530487060546875

Token 1409: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04489988833665848
    2. ']=' → logprob: -3.7948999404907227
    3. ']' → logprob: -4.169899940490723
    4. '                   ' → logprob: -5.669899940490723
    5. '[' → logprob: -6.669899940490723
    6. '=' → logprob: -7.669899940490723
    7. '][:' → logprob: -9.044899940490723
    8. '                       ' → logprob: -9.294899940490723
    9. ']+=' → logprob: -9.419899940490723
    10. ' ][' → logprob: -9.919899940490723

Token 1410: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20334571599960327
    2. '0' → logprob: -1.703345775604248
    3. '
' → logprob: -6.578345775604248
    4. ' ' → logprob: -7.953345775604248
    5. ':' → logprob: -10.07834529876709
    6. '    
' → logprob: -10.45334529876709
    7. '   ' → logprob: -10.51584529876709
    8. ' :' → logprob: -11.64084529876709
    9. '[' → logprob: -11.82834529876709
    10. ' 
' → logprob: -11.89084529876709

Token 1411: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21942250430583954
    2. ']=' → logprob: -1.969422459602356
    3. ' =' → logprob: -3.2194225788116455
    4. ']' → logprob: -4.219422340393066
    5. '=min' → logprob: -6.719422340393066
    6. ' ]' → logprob: -8.094422340393066
    7. '<|end|>' → logprob: -8.219422340393066
    8. ']+=' → logprob: -8.344422340393066
    9. '=
' → logprob: -8.344422340393066
    10. '|=
' → logprob: -9.344422340393066

Token 1412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000591874762903899
    2. ' =' → logprob: -7.75059175491333
    3. '=min' → logprob: -8.750592231750488
    4. '=
' → logprob: -13.000592231750488
    5. ']=' → logprob: -14.750592231750488
    6. '.=' → logprob: -17.125591278076172
    7. 'min' → logprob: -17.125591278076172
    8. ')=' → logprob: -17.500591278076172
    9. '=max' → logprob: -17.750591278076172
    10. '=

' → logprob: -17.875591278076172

Token 1413: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.935296834039036e-06
    2. ' min' → logprob: -12.75000286102295
    3. 'max' → logprob: -17.250003814697266
    4. '	min' → logprob: -18.125003814697266
    5. '(min' → logprob: -20.125003814697266
    6. '
' → logprob: -20.250003814697266
    7. '=min' → logprob: -20.625003814697266
    8. 'minimum' → logprob: -20.875003814697266
    9. '_min' → logprob: -21.125003814697266
    10. 'mini' → logprob: -21.500003814697266

Token 1414: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.06198034808039665
    2. 'interval' → logprob: -2.8119802474975586
    3. '(
' → logprob: -11.436980247497559
    4. '(' → logprob: -13.311980247497559
    5. ' intervals' → logprob: -15.561980247497559
    6. '(in' → logprob: -18.436981201171875
    7. ' (' → logprob: -18.811981201171875
    8. '(int' → logprob: -18.936981201171875
    9. '(

' → logprob: -19.686981201171875
    10. '(
' → logprob: -19.936981201171875

Token 1415: 's' (ID: 82)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.32245105504989624
    2. '(interval' → logprob: -1.322451114654541
    3. '[' → logprob: -4.822451114654541
    4. ' intervals' → logprob: -7.447451114654541
    5. '[
' → logprob: -8.447450637817383
    6. '(
' → logprob: -8.572450637817383
    7. '(' → logprob: -9.822450637817383
    8. 's' → logprob: -10.572450637817383
    9. '[a' → logprob: -11.697450637817383
    10. 'a' → logprob: -11.947450637817383

Token 1416: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[
' → logprob: -14.375000953674316
    3. 'ra' → logprob: -14.500000953674316
    4. 'a' → logprob: -17.500001907348633
    5. '[a' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 'interval' → logprob: -18.125001907348633
    8. '
' → logprob: -18.625001907348633
    9. ' [' → logprob: -18.750001907348633
    10. '```' → logprob: -18.750001907348633

Token 1417: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -5.085517113911919e-05
    2. 'rb' → logprob: -10.50005054473877
    3. 'a' → logprob: -11.37505054473877
    4. '[' → logprob: -12.25005054473877
    5. 'rai' → logprob: -14.00005054473877
    6. '
' → logprob: -14.25005054473877
    7. 'raq' → logprob: -14.25005054473877
    8. ' ra' → logprob: -14.50005054473877
    9. 'raa' → logprob: -14.50005054473877
    10. 'ri' → logprob: -15.00005054473877

Token 1418: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04889426380395889
    2. '[' → logprob: -3.048894166946411
    3. ' ][' → logprob: -9.048893928527832
    4. '   ' → logprob: -9.673893928527832
    5. 'a' → logprob: -9.923893928527832
    6. '
' → logprob: -11.048893928527832
    7. ')[' → logprob: -11.423893928527832
    8. ']' → logprob: -11.673893928527832
    9. '0' → logprob: -12.673893928527832
    10. ' [' → logprob: -12.798893928527832

Token 1419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010402000043541193
    2. '[' → logprob: -10.375103950500488
    3. '1' → logprob: -10.625103950500488
    4. 'a' → logprob: -10.875103950500488
    5. 'ra' → logprob: -10.875103950500488
    6. '
' → logprob: -12.750103950500488
    7. '   ' → logprob: -13.125103950500488
    8. '][' → logprob: -13.625103950500488
    9. ' ' → logprob: -14.000103950500488
    10. '(' → logprob: -14.875103950500488

Token 1420: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007606726721860468
    2. ' ,' → logprob: -7.250760555267334
    3. ',
' → logprob: -10.625761032104492
    4. '],' → logprob: -11.875761032104492
    5. '           ' → logprob: -13.000761032104492
    6. '   ' → logprob: -13.000761032104492
    7. ',int' → logprob: -13.000761032104492
    8. '),' → logprob: -13.125761032104492
    9. '                           ' → logprob: -13.250761032104492
    10. '       ' → logprob: -13.250761032104492

Token 1421: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -6.813969957875088e-05
    2. ' intervals' → logprob: -9.625067710876465
    3. '                           ' → logprob: -14.375067710876465
    4. '
' → logprob: -14.500067710876465
    5. '                   ' → logprob: -15.125067710876465
    6. '               ' → logprob: -15.250067710876465
    7. '           ' → logprob: -15.500067710876465
    8. '(interval' → logprob: -16.75006866455078
    9. '   ' → logprob: -16.87506866455078
    10. '                       ' → logprob: -17.12506866455078

Token 1422: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013893934374209493
    2. '
' → logprob: -10.125139236450195
    3. '[b' → logprob: -10.250139236450195
    4. '[r' → logprob: -10.875139236450195
    5. '[a' → logprob: -11.000139236450195
    6. 'a' → logprob: -12.250139236450195
    7. '[
' → logprob: -12.500139236450195
    8. 'rb' → logprob: -12.875139236450195
    9. '[[' → logprob: -12.875139236450195
    10. '[parent' → logprob: -13.000139236450195

Token 1423: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -6.511406809295295e-06
    2. '
' → logprob: -12.750006675720215
    3. ' rb' → logprob: -13.375006675720215
    4. '(rb' → logprob: -14.125006675720215
    5. 'b' → logprob: -14.625006675720215
    6. '.rb' → logprob: -15.000006675720215
    7. 'a' → logprob: -15.500006675720215
    8. '
' → logprob: -16.5000057220459
    9. '[' → logprob: -16.7500057220459
    10. '_rb' → logprob: -16.7500057220459

Token 1424: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016375737031921744
    2. '[' → logprob: -6.5016374588012695
    3. ']' → logprob: -9.87663745880127
    4. ' ][' → logprob: -10.00163745880127
    5. '   ' → logprob: -11.50163745880127
    6. '0' → logprob: -12.25163745880127
    7. 'a' → logprob: -12.37663745880127
    8. '
' → logprob: -12.37663745880127
    9. ']
' → logprob: -12.75163745880127
    10. '       ' → logprob: -13.25163745880127

Token 1425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. '[' → logprob: -11.125024795532227
    3. '1' → logprob: -12.250024795532227
    4. '
' → logprob: -12.750024795532227
    5. '   ' → logprob: -14.375024795532227
    6. ' ' → logprob: -14.625024795532227
    7. '```' → logprob: -15.000024795532227
    8. '<|end|>' → logprob: -15.375024795532227
    9. '۰' → logprob: -15.875024795532227
    10. ']' → logprob: -16.312524795532227

Token 1426: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5795745253562927
    2. ')' → logprob: -0.8295745253562927
    3. '])' → logprob: -6.5795745849609375
    4. '])
' → logprob: -6.8295745849609375
    5. '                   ' → logprob: -7.2045745849609375
    6. ' )
' → logprob: -9.079574584960938
    7. '),' → logprob: -9.704574584960938
    8. ' )' → logprob: -9.829574584960938
    9. '               ' → logprob: -10.329574584960938
    10. ']' → logprob: -10.454574584960938

Token 1427: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03531553968787193
    2. '<|end|>' → logprob: -4.16031551361084
    3. '               ' → logprob: -4.78531551361084
    4. '           ' → logprob: -5.91031551361084
    5. '                    
' → logprob: -6.16031551361084
    6. ')' → logprob: -6.41031551361084
    7. '```' → logprob: -7.53531551361084
    8. '       ' → logprob: -7.66031551361084
    9. '[' → logprob: -7.66031551361084
    10. '<|end|>' → logprob: -8.03531551361084

Token 1428: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3870731294155121
    2. ' intervals' → logprob: -1.1370731592178345
    3. '(interval' → logprob: -9.762073516845703
    4. ' interval' → logprob: -10.762073516845703
    5. '           ' → logprob: -10.887073516845703
    6. '                   ' → logprob: -11.012073516845703
    7. '
' → logprob: -11.387073516845703
    8. ' 
' → logprob: -11.387073516845703
    9. '               ' → logprob: -11.512073516845703
    10. ' ' → logprob: -11.637073516845703

Token 1429: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -17.125
    3. ')[' → logprob: -17.875
    4. ' [' → logprob: -18.0
    5. '][' → logprob: -18.125
    6. '
' → logprob: -18.75
    7. '```' → logprob: -19.5
    8. '               ' → logprob: -19.875
    9. '                   ' → logprob: -19.875
    10. '       ' → logprob: -20.0

Token 1430: 'ra' (ID: 614)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.023269938305020332
    2. 'ra' → logprob: -3.7732698917388916
    3. '[' → logprob: -10.898269653320312
    4. ' rb' → logprob: -12.898269653320312
    5. 'rc' → logprob: -13.773269653320312
    6. '(rb' → logprob: -13.898269653320312
    7. '
' → logprob: -14.398269653320312
    8. '_rb' → logprob: -15.398269653320312
    9. '
' → logprob: -16.023269653320312
    10. '   ' → logprob: -16.398269653320312

Token 1431: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015562419139314443
    2. '[' → logprob: -8.875155448913574
    3. ']' → logprob: -12.000155448913574
    4. '
' → logprob: -13.000155448913574
    5. ' ][' → logprob: -13.125155448913574
    6. '       ' → logprob: -13.375155448913574
    7. '   ' → logprob: -13.625155448913574
    8. '           ' → logprob: -13.875155448913574
    9. ']
' → logprob: -14.625155448913574
    10. ']][' → logprob: -15.375155448913574

Token 1432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019746100588236004
    2. '
' → logprob: -9.125197410583496
    3. '[' → logprob: -9.375197410583496
    4. '```' → logprob: -13.750197410583496
    5. '0' → logprob: -14.375197410583496
    6. '   ' → logprob: -14.625197410583496
    7. ' ' → logprob: -14.875197410583496
    8. '
' → logprob: -15.437697410583496
    9. '    
' → logprob: -16.000198364257812
    10. '' → logprob: -16.312698364257812

Token 1433: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10796021670103073
    2. ']=' → logprob: -2.7329602241516113
    3. '=' → logprob: -3.9829602241516113
    4. '[' → logprob: -4.982960224151611
    5. ',' → logprob: -5.732960224151611
    6. '],' → logprob: -6.107960224151611
    7. ')' → logprob: -6.357960224151611
    8. '][' → logprob: -6.357960224151611
    9. ' =' → logprob: -7.232960224151611
    10. '<|end|>' → logprob: -7.232960224151611

Token 1434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022492945194244
    2. ' =' → logprob: -1.9102249145507812
    3. '=
' → logprob: -14.785224914550781
    4. '=min' → logprob: -14.910224914550781
    5. '.=' → logprob: -17.78522491455078
    6. '   ' → logprob: -18.03522491455078
    7. ' =
' → logprob: -18.03522491455078
    8. '    ' → logprob: -18.28522491455078
    9. '=max' → logprob: -18.41022491455078
    10. ')' → logprob: -18.41022491455078

Token 1435: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0008882334805093706
    2. 'min' → logprob: -7.500888347625732
    3. ' max' → logprob: -8.000887870788574
    4. ' min' → logprob: -16.50088882446289
    5. '(max' → logprob: -21.25088882446289
    6. '	max' → logprob: -21.50088882446289
    7. '   ' → logprob: -22.87588882446289
    8. '[max' → logprob: -23.37588882446289
    9. '
' → logprob: -23.87588882446289
    10. '_max' → logprob: -24.25088882446289

Token 1436: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -4.620622712536715e-05
    2. 'interval' → logprob: -10.000045776367188
    3. '(
' → logprob: -14.250045776367188
    4. '(' → logprob: -16.500045776367188
    5. ' (' → logprob: -19.500045776367188
    6. '```' → logprob: -20.375045776367188
    7. ' intervals' → logprob: -21.000045776367188
    8. '(iter' → logprob: -21.250045776367188
    9. '[' → logprob: -21.250045776367188
    10. '
' → logprob: -21.375045776367188

Token 1437: 's' (ID: 82)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38967859745025635
    2. '(interval' → logprob: -1.1396785974502563
    3. 'interval' → logprob: -6.014678478240967
    4. '[
' → logprob: -8.014678955078125
    5. '(
' → logprob: -11.014678955078125
    6. ' intervals' → logprob: -13.014678955078125
    7. '[in' → logprob: -13.139678955078125
    8. '(' → logprob: -13.514678955078125
    9. 's' → logprob: -13.514678955078125
    10. '([' → logprob: -14.264678955078125

Token 1438: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8802491215174086e-05
    2. 'interval' → logprob: -11.375028610229492
    3. '[
' → logprob: -11.875028610229492
    4. '(interval' → logprob: -12.250028610229492
    5. '[in' → logprob: -14.000028610229492
    6. '(' → logprob: -14.375028610229492
    7. '(rb' → logprob: -14.500028610229492
    8. '```' → logprob: -14.625028610229492
    9. '[[' → logprob: -14.750028610229492
    10. '
' → logprob: -14.875028610229492

Token 1439: 'ra' (ID: 614)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.5470420122146606
    2. 'ra' → logprob: -1.1720420122146606
    3. '[' → logprob: -2.672041893005371
    4. '1' → logprob: -3.172041893005371
    5. '(rb' → logprob: -9.797041893005371
    6. '   ' → logprob: -10.047041893005371
    7. '0' → logprob: -10.047041893005371
    8. 'interval' → logprob: -10.422041893005371
    9. 'rc' → logprob: -10.422041893005371
    10. '[r' → logprob: -10.547041893005371

Token 1440: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007127894787117839
    2. '][' → logprob: -7.250712871551514
    3. '[
' → logprob: -14.375712394714355
    4. '1' → logprob: -14.750712394714355
    5. '```' → logprob: -15.250712394714355
    6. 's' → logprob: -15.625712394714355
    7. ')[' → logprob: -15.625712394714355
    8. '       ' → logprob: -15.875712394714355
    9. 'def' → logprob: -15.875712394714355
    10. '
' → logprob: -16.000713348388672

Token 1441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009797880426049232
    2. '[' → logprob: -4.634798049926758
    3. '0' → logprob: -10.634798049926758
    4. '
' → logprob: -12.384798049926758
    5. 'rb' → logprob: -12.884798049926758
    6. '   ' → logprob: -13.134798049926758
    7. ' ' → logprob: -13.259798049926758
    8. 'ra' → logprob: -13.634798049926758
    9. '][' → logprob: -14.009798049926758
    10. '```' → logprob: -14.509798049926758

Token 1442: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13504087924957275
    2. '[' → logprob: -2.135040760040283
    3. '],' → logprob: -4.885040760040283
    4. '][' → logprob: -8.635041236877441
    5. ' ,' → logprob: -9.010041236877441
    6. ',[' → logprob: -9.635041236877441
    7. '),' → logprob: -10.635041236877441
    8. '                   ' → logprob: -10.760041236877441
    9. '               ' → logprob: -11.385041236877441
    10. '       ' → logprob: -11.385041236877441

Token 1443: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.029765060171484947
    2. ' intervals' → logprob: -3.5297651290893555
    3. '(interval' → logprob: -11.279765129089355
    4. ' interval' → logprob: -13.404765129089355
    5. '
' → logprob: -16.02976417541504
    6. '   ' → logprob: -16.77976417541504
    7. '           ' → logprob: -17.27976417541504
    8. 'int' → logprob: -17.65476417541504
    9. '       ' → logprob: -17.65476417541504
    10. '```' → logprob: -17.90476417541504

Token 1444: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. 'rb' → logprob: -11.000018119812012
    3. '(rb' → logprob: -15.250018119812012
    4. '```' → logprob: -15.500018119812012
    5. '
' → logprob: -15.625018119812012
    6. '   ' → logprob: -15.750018119812012
    7. '][' → logprob: -16.375017166137695
    8. '[
' → logprob: -16.500017166137695
    9. '1' → logprob: -17.000017166137695
    10. '_rb' → logprob: -18.000017166137695

Token 1445: 'rb' (ID: 21588)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.053563620895147324
    2. 'rb' → logprob: -3.3035635948181152
    3. '[' → logprob: -4.178563594818115
    4. '(rb' → logprob: -10.553564071655273
    5. ' rb' → logprob: -11.428564071655273
    6. '
' → logprob: -11.553564071655273
    7. '0' → logprob: -11.678564071655273
    8. '```' → logprob: -12.428564071655273
    9. '   ' → logprob: -12.678564071655273
    10. 'ra' → logprob: -12.803564071655273

Token 1446: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4290202856063843
    2. '][' → logprob: -1.0540202856063843
    3. '1' → logprob: -8.929019927978516
    4. ']' → logprob: -9.554019927978516
    5. ')[' → logprob: -10.304019927978516
    6. '   ' → logprob: -11.429019927978516
    7. ']
' → logprob: -11.554019927978516
    8. '       ' → logprob: -11.679019927978516
    9. ')][' → logprob: -12.179019927978516
    10. '[
' → logprob: -12.304019927978516

Token 1447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012320445966906846
    2. '0' → logprob: -9.125123023986816
    3. '[' → logprob: -11.500123023986816
    4. 'b' → logprob: -13.875123023986816
    5. '
' → logprob: -14.000123023986816
    6. '```' → logprob: -14.125123023986816
    7. '   ' → logprob: -14.750123023986816
    8. ']' → logprob: -14.875123023986816
    9. ' ' → logprob: -15.250123023986816
    10. '<|end|>' → logprob: -16.437623977661133

Token 1448: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018555138260126114
    2. ')
' → logprob: -4.268555164337158
    3. '])' → logprob: -5.643555164337158
    4. '                   ' → logprob: -7.393555164337158
    5. '])
' → logprob: -9.8935546875
    6. '               ' → logprob: -10.0185546875
    7. '           ' → logprob: -10.6435546875
    8. ')]' → logprob: -10.6435546875
    9. ']' → logprob: -10.7685546875
    10. ' )' → logprob: -11.2685546875

Token 1449: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0539848767220974
    2. '
' → logprob: -3.1789848804473877
    3. '\n' → logprob: -5.678984642028809
    4. '<|end|>' → logprob: -5.803984642028809
    5. '           ' → logprob: -6.803984642028809
    6. '               ' → logprob: -7.553984642028809
    7. '                    
' → logprob: -7.678984642028809
    8. ' 
' → logprob: -7.928984642028809
    9. ')' → logprob: -8.053984642028809
    10. '       ' → logprob: -8.178984642028809

Token 1450: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0052597299218177795
    2. '                   ' → logprob: -5.2552595138549805
    3. ' parent' → logprob: -10.63025951385498
    4. '[parent' → logprob: -14.75525951385498
    5. '               ' → logprob: -15.13025951385498
    6. '           ' → logprob: -15.50525951385498
    7. '                    ' → logprob: -15.63025951385498
    8. '   ' → logprob: -15.88025951385498
    9. '	parent' → logprob: -16.005260467529297
    10. '                       ' → logprob: -16.130260467529297

Token 1451: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062191300094127655
    2. '[parent' → logprob: -2.8121912479400635
    3. '[p' → logprob: -9.437191009521484
    4. '[b' → logprob: -9.812191009521484
    5. '[
' → logprob: -9.937191009521484
    6. 'parent' → logprob: -11.187191009521484
    7. '[root' → logprob: -12.062191009521484
    8. '=' → logprob: -12.187191009521484
    9. '[a' → logprob: -12.687191009521484
    10. '(rb' → logprob: -13.062191009521484

Token 1452: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0004480692732613534
    2. 'ra' → logprob: -7.750448226928711
    3. '
' → logprob: -11.625448226928711
    4. ' rb' → logprob: -12.500448226928711
    5. 'parent' → logprob: -13.125448226928711
    6. '(rb' → logprob: -13.625448226928711
    7. '[' → logprob: -14.875448226928711
    8. '   ' → logprob: -15.125448226928711
    9. '_rb' → logprob: -15.375448226928711
    10. 'pb' → logprob: -15.750448226928711

Token 1453: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22751981019973755
    2. ' =' → logprob: -1.9775197505950928
    3. ']=' → logprob: -3.1025197505950928
    4. ']' → logprob: -3.9775197505950928
    5. '=
' → logprob: -6.852519989013672
    6. ' ]' → logprob: -8.602519989013672
    7. ' =
' → logprob: -10.227519989013672
    8. '[' → logprob: -10.352519989013672
    9. ')' → logprob: -10.602519989013672
    10. '
' → logprob: -11.102519989013672

Token 1454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008682763203978539
    2. ' =' → logprob: -4.758682727813721
    3. '=
' → logprob: -9.633683204650879
    4. '=True' → logprob: -14.633683204650879
    5. ']=' → logprob: -14.633683204650879
    6. ' =
' → logprob: -15.133683204650879
    7. '＝' → logprob: -15.133683204650879
    8. '[' → logprob: -15.258683204650879
    9. ')=' → logprob: -15.508683204650879
    10. '=None' → logprob: -15.508683204650879

Token 1455: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -2.1008713702030946e-06
    2. ' ra' → logprob: -13.125001907348633
    3. '
' → logprob: -17.125001907348633
    4. '_ra' → logprob: -17.625001907348633
    5. 'raid' → logprob: -18.625001907348633
    6. 'rai' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.375001907348633
    8. 'RA' → logprob: -19.375001907348633
    9. '-ra' → logprob: -19.750001907348633
    10. 'Ra' → logprob: -19.875001907348633

Token 1456: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6712074279785156
    2. '
' → logprob: -0.9212074279785156
    3. '       ' → logprob: -2.9212074279785156
    4. '  
' → logprob: -5.171207427978516
    5. '    
' → logprob: -5.171207427978516
    6. ' 
' → logprob: -5.296207427978516
    7. '            
' → logprob: -5.421207427978516
    8. '                   ' → logprob: -5.421207427978516
    9. '        
' → logprob: -5.796207427978516
    10. '\n' → logprob: -6.046207427978516

Token 1458: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23074959218502045
    2. 'for' → logprob: -1.6057496070861816
    3. '
' → logprob: -6.105749607086182
    4. ' for' → logprob: -6.480749607086182
    5. '       ' → logprob: -6.605749607086182
    6. '   ' → logprob: -9.480749130249023
    7. '```' → logprob: -9.980749130249023
    8. '            
' → logprob: -10.105749130249023
    9. '#' (adapté à ' #') → logprob: -10.605749130249023
    10. '	for' → logprob: -12.355749130249023

Token 1459: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5403323769569397
    2. '           ' → logprob: -0.9153323769569397
    3. ' for' → logprob: -4.165332317352295
    4. '       ' → logprob: -7.040332317352295
    5. '#' → logprob: -8.040332794189453
    6. '
' → logprob: -8.665332794189453
    7. '   ' → logprob: -9.040332794189453
    8. '            
' → logprob: -10.915332794189453
    9. '	for' → logprob: -11.540332794189453
    10. '               ' → logprob: -12.415332794189453

Token 1460: ' each' (ID: 2454)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5344104766845703
    2. 'c' → logprob: -1.5344104766845703
    3. ' u' → logprob: -2.1594104766845703
    4. 'u' → logprob: -3.1594104766845703
    5. ' (' → logprob: -4.15941047668457
    6. '(u' → logprob: -4.65941047668457
    7. '(c' → logprob: -5.90941047668457
    8. ' _,' → logprob: -6.03441047668457
    9. ' i' → logprob: -6.15941047668457
    10. 'i' → logprob: -6.65941047668457

Token 1461: ' constraint' (ID: 44762)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7358213067054749
    2. ' c' → logprob: -0.8608213067054749
    3. ' u' → logprob: -3.48582124710083
    4. 'u' → logprob: -4.23582124710083
    5. ' constraint' → logprob: -4.23582124710083
    6. 'constraint' → logprob: -4.48582124710083
    7. ' (' → logprob: -4.86082124710083
    8. '(u' → logprob: -4.86082124710083
    9. ' edge' → logprob: -5.23582124710083
    10. '(c' → logprob: -5.98582124710083

Token 1462: ' edge' (ID: 11165)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3058720827102661
    2. ',' → logprob: -1.5558720827102661
    3. ' in' → logprob: -1.6808720827102661
    4. ' for' → logprob: -2.8058719635009766
    5. 'c' → logprob: -2.9308719635009766
    6. ':
' → logprob: -2.9308719635009766
    7. 'in' → logprob: -3.1808719635009766
    8. 'd' → logprob: -3.3058719635009766
    9. '               ' → logprob: -3.8058719635009766
    10. ':' → logprob: -4.430871963500977

Token 1463: ' d' (ID: 272)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.888849675655365
    2. ',' → logprob: -1.2638497352600098
    3. '(u' → logprob: -2.5138497352600098
    4. ' in' → logprob: -2.8888497352600098
    5. '               ' → logprob: -3.2638497352600098
    6. ' (' → logprob: -3.2638497352600098
    7. ' u' → logprob: -3.8888497352600098
    8. ',u' → logprob: -4.01384973526001
    9. ':' → logprob: -4.38884973526001
    10. '           ' → logprob: -5.26384973526001

Token 1464: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03323850780725479
    2. ' ,' → logprob: -3.783238410949707
    3. ',
' → logprob: -5.283238410949707
    4. ',u' → logprob: -5.908238410949707
    5. ' in' → logprob: -7.408238410949707
    6. 'u' → logprob: -7.783238410949707
    7. '<|end|>' → logprob: -8.658238410949707
    8. '
' → logprob: -8.908238410949707
    9. '->' → logprob: -8.908238410949707
    10. ' ->' → logprob: -9.533238410949707

Token 1465: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018661346985027194
    2. ' c' → logprob: -8.625186920166016
    3. '
' → logprob: -13.625186920166016
    4. ']' → logprob: -13.875186920166016
    5. ')c' → logprob: -14.000186920166016
    6. 'd' → logprob: -14.250186920166016
    7. 'constraint' → logprob: -14.500186920166016
    8. ')' → logprob: -14.500186920166016
    9. 'u' → logprob: -15.125186920166016
    10. '	c' → logprob: -15.125186920166016

Token 1466: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16890574991703033
    2. '               ' → logprob: -2.793905735015869
    3. ',' → logprob: -3.043905735015869
    4. ':' → logprob: -3.418905735015869
    5. '           ' → logprob: -4.543905735015869
    6. '
' → logprob: -7.168905735015869
    7. '):
' → logprob: -7.418905735015869
    8. ',
' → logprob: -7.543905735015869
    9. '   ' → logprob: -8.168906211853027
    10. '                   ' → logprob: -8.293906211853027

Token 1467: ' union' (ID: 22208)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.263021856546402
    2. '               ' → logprob: -1.8880218267440796
    3. ' union' → logprob: -3.013021945953369
    4. 'union' → logprob: -3.763021945953369
    5. '                   ' → logprob: -5.388021945953369
    6. '   ' → logprob: -6.763021945953369
    7. '
' → logprob: -7.513021945953369
    8. '            ' → logprob: -8.138021469116211
    9. '            
' → logprob: -8.763021469116211
    10. '       ' → logprob: -9.013021469116211

Token 1468: ' their' (ID: 1043)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.15764598548412323
    2. 'd' → logprob: -2.0326459407806396
    3. '(d' → logprob: -4.532646179199219
    4. '(' → logprob: -5.907646179199219
    5. ' (' → logprob: -6.782646179199219
    6. '(
' → logprob: -8.657646179199219
    7. ' ' → logprob: -10.532646179199219
    8. ' (
' → logprob: -10.907646179199219
    9. ')' → logprob: -11.782646179199219
    10. ',' → logprob: -12.032646179199219

Token 1469: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0828981027007103
    2. 'nodes' → logprob: -3.9578981399536133
    3. 'sets' → logprob: -4.207898139953613
    4. ' intervals' → logprob: -4.832898139953613
    5. 'components' → logprob: -4.957898139953613
    6. 'positions' → logprob: -5.082898139953613
    7. 'find' → logprob: -5.582898139953613
    8. ' sets' → logprob: -5.582898139953613
    9. 'ra' → logprob: -6.082898139953613
    10. '
' → logprob: -6.332898139953613

Token 1470: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34960484504699707
    2. '
' → logprob: -1.474604845046997
    3. ',' → logprob: -3.974604845046997
    4. ':
' → logprob: -4.599604606628418
    5. '(
' → logprob: -4.974604606628418
    6. ',
' → logprob: -5.099604606628418
    7. '               ' → logprob: -5.224604606628418
    8. '\n' → logprob: -5.724604606628418
    9. ':' → logprob: -5.849604606628418
    10. '(' → logprob: -6.099604606628418

Token 1471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01733589731156826
    2. '               ' → logprob: -4.767335891723633
    3. '                   ' → logprob: -6.642335891723633
    4. '            
' → logprob: -6.767335891723633
    5. ',' → logprob: -7.142335891723633
    6. '                           ' → logprob: -7.392335891723633
    7. '
' → logprob: -7.642335891723633
    8. '(
' → logprob: -7.642335891723633
    9. '            ' → logprob: -8.017335891723633
    10. ':
' → logprob: -8.017335891723633

Token 1472: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6536092758178711
    2. '           ' → logprob: -1.653609275817871
    3. '               ' → logprob: -1.778609275817871
    4. 'for' (adapté à ' for') → logprob: -2.903609275817871
    5. ' for' → logprob: -3.278609275817871
    6. '  
' → logprob: -4.653609275817871
    7. ' 
' → logprob: -5.278609275817871
    8. 'd' → logprob: -6.028609275817871
    9. '                   ' → logprob: -6.278609275817871
    10. '\n' → logprob: -6.653609275817871

Token 1473: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09069512039422989
    2. ' d' → logprob: -2.7156951427459717
    3. '(d' → logprob: -4.465694904327393
    4. 'c' → logprob: -5.340694904327393
    5. ' (' → logprob: -6.590694904327393
    6. ' c' → logprob: -7.465694904327393
    7. '(c' → logprob: -7.590694904327393
    8. '
' → logprob: -7.715694904327393
    9. '(u' → logprob: -7.965694904327393
    10. '   ' → logprob: -8.71569538116455

Token 1474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.111473947763443
    2. ',d' → logprob: -2.36147403717041
    3. ' ,' → logprob: -4.86147403717041
    4. ',v' → logprob: -7.11147403717041
    5. ',c' → logprob: -7.11147403717041
    6. ',u' → logprob: -7.98647403717041
    7. ',w' → logprob: -8.36147403717041
    8. ',
' → logprob: -8.36147403717041
    9. ',n' → logprob: -8.61147403717041
    10. ' in' → logprob: -8.86147403717041

Token 1475: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.615255839889869e-05
    2. ' c' → logprob: -9.250096321105957
    3. ')c' → logprob: -18.12509536743164
    4. '
' → logprob: -18.62509536743164
    5. '	c' → logprob: -18.87509536743164
    6. '   ' → logprob: -20.37509536743164
    7. '_c' → logprob: -20.37509536743164
    8. '[c' → logprob: -20.87509536743164
    9. '$c' → logprob: -20.87509536743164
    10. ',c' → logprob: -21.37509536743164

Token 1476: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055082790553569794
    2. 'in' → logprob: -2.9300827980041504
    3. ':
' → logprob: -9.305082321166992
    4. ')' → logprob: -10.805082321166992
    5. '	in' → logprob: -10.930082321166992
    6. '):
' → logprob: -11.305082321166992
    7. ':' → logprob: -11.555082321166992
    8. '<|end|>' → logprob: -11.805082321166992
    9. '           ' → logprob: -12.180082321166992
    10. ' ' → logprob: -12.305082321166992

Token 1477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005561320576816797
    2. ' self' → logprob: -7.500555992126465
    3. '(self' → logprob: -13.000555992126465
    4. '[self' → logprob: -14.750555992126465
    5. 'constraints' → logprob: -15.125555992126465
    6. '
' → logprob: -17.25055694580078
    7. ' ' → logprob: -17.75055694580078
    8. '           ' → logprob: -18.00055694580078
    9. '[' → logprob: -18.25055694580078
    10. '	self' → logprob: -18.50055694580078

Token 1478: '.constraints' (ID: 62986)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.14071394503116608
    2. '.constraints' → logprob: -2.765713930130005
    3. 'graph' → logprob: -2.890713930130005
    4. 'constraints' → logprob: -4.390714168548584
    5. '.constraint' → logprob: -9.015713691711426
    6. '	graph' → logprob: -9.390713691711426
    7. '
' → logprob: -9.640713691711426
    8. '(graph' → logprob: -11.015713691711426
    9. 'Constraints' → logprob: -11.265713691711426
    10. 'constraint' → logprob: -11.390713691711426

Token 1479: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20556998252868652
    2. ':' → logprob: -1.7055699825286865
    3. '):
' → logprob: -5.830570220947266
    4. '               ' → logprob: -7.330570220947266
    5. '           ' → logprob: -9.205570220947266
    6. '):' → logprob: -9.330570220947266
    7. '():
' → logprob: -9.580570220947266
    8. ' :
' → logprob: -9.830570220947266
    9. ',' → logprob: -9.955570220947266
    10. ']:
' → logprob: -10.330570220947266

Token 1480: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010069658746942878
    2. '           ' → logprob: -7.626007080078125
    3. '   ' → logprob: -9.001007080078125
    4. '                   ' → logprob: -9.376007080078125
    5. '                
' → logprob: -9.376007080078125
    6. '
' → logprob: -10.376007080078125
    7. '    
' → logprob: -10.501007080078125
    8. '       ' → logprob: -10.626007080078125
    9. ' 
' → logprob: -11.001007080078125
    10. 'union' → logprob: -11.126007080078125

Token 1481: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.11543791741132736
    2. 'union' (adapté à ' union') → logprob: -2.2404379844665527
    3. '               ' → logprob: -5.990437984466553
    4. '
' → logprob: -9.990437507629395
    5. '           ' → logprob: -10.740437507629395
    6. '.union' → logprob: -11.490437507629395
    7. '                   ' → logprob: -11.990437507629395
    8. '   ' → logprob: -12.115437507629395
    9. '	union' → logprob: -12.740437507629395
    10. '_union' → logprob: -12.865437507629395

Token 1482: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.625003814697266
    3. 'd' → logprob: -15.000003814697266
    4. ' (' → logprob: -15.375003814697266
    5. '(
' → logprob: -15.500003814697266
    6. ' d' → logprob: -16.250003814697266
    7. '(c' → logprob: -17.625003814697266
    8. '	d' → logprob: -18.875003814697266
    9. ',d' → logprob: -20.000003814697266
    10. '(de' → logprob: -20.375003814697266

Token 1483: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008121130056679249
    2. ',c' → logprob: -4.883121013641357
    3. ',
' → logprob: -8.008121490478516
    4. ' ,' → logprob: -8.883121490478516
    5. ',d' → logprob: -10.758121490478516
    6. ')' → logprob: -12.258121490478516
    7. '           ' → logprob: -12.883121490478516
    8. '
' → logprob: -12.883121490478516
    9. '),' → logprob: -13.008121490478516
    10. '               ' → logprob: -13.383121490478516

Token 1484: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001605115394340828
    2. ')
' → logprob: -8.750160217285156
    3. '           ' → logprob: -13.500160217285156
    4. '               ' → logprob: -15.250160217285156
    5. ' )' → logprob: -16.750160217285156
    6. '),' → logprob: -16.875160217285156
    7. ')

' → logprob: -16.875160217285156
    8. ')return' → logprob: -17.000160217285156
    9. ')#' → logprob: -17.000160217285156
    10. ')
' → logprob: -17.625160217285156

Token 1485: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13745521008968353
    2. '<|end|>' → logprob: -2.2624552249908447
    3. '\n' → logprob: -4.637454986572266
    4. '           ' → logprob: -5.512454986572266
    5. ' 
' → logprob: -5.887454986572266
    6. ')' → logprob: -6.262454986572266
    7. '  
' → logprob: -6.762454986572266
    8. '<|end|>' → logprob: -6.887454986572266
    9. ' ' → logprob: -7.137454986572266
    10. '    
' → logprob: -7.637454986572266

Token 1486: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3340647220611572
    2. 'min' → logprob: -1.9590647220611572
    3. 'max' → logprob: -2.0840647220611572
    4. '#' (adapté à ' #') → logprob: -2.2090647220611572
    5. 'total' → logprob: -2.3340647220611572
    6. 'answer' → logprob: -2.7090647220611572
    7. '
' → logprob: -2.8340647220611572
    8. 'return' → logprob: -3.2090647220611572
    9. 'length' → logprob: -3.7090647220611572
    10. '           ' → logprob: -3.9590647220611572

Token 1487: ' Find' (ID: 9764)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.41889554262161255
    2. 'max' → logprob: -1.6688954830169678
    3. '#' → logprob: -2.2938954830169678
    4. 'res' → logprob: -4.168895721435547
    5. 'result' → logprob: -4.418895721435547
    6. 'answer' → logprob: -4.918895721435547
    7. 'ans' → logprob: -5.168895721435547
    8. 'minimal' → logprob: -6.168895721435547
    9. 'components' → logprob: -6.293895721435547
    10. 'return' → logprob: -7.043895721435547

Token 1488: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9935643672943115
    2. 'max' → logprob: -1.3685643672943115
    3. ' min' → logprob: -2.3685643672943115
    4. ' minimal' → logprob: -2.4935643672943115
    5. 'res' → logprob: -3.2435643672943115
    6. 'minimal' → logprob: -3.2435643672943115
    7. ' max' → logprob: -3.6185643672943115
    8. 'overall' → logprob: -3.7435643672943115
    9. ' overall' → logprob: -4.243564605712891
    10. 'ans' → logprob: -4.618564605712891

Token 1489: ' and' (ID: 326)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.16089671850204468
    2. '_interval' → logprob: -3.1608967781066895
    3. '_l' → logprob: -3.2858967781066895
    4. '_left' → logprob: -3.5358967781066895
    5. '_start' → logprob: -3.7858967781066895
    6. 'L' → logprob: -5.4108967781066895
    7. 'pos' → logprob: -5.9108967781066895
    8. '_' → logprob: -6.2858967781066895
    9. '_position' → logprob: -6.5358967781066895
    10. '_range' → logprob: -6.6608967781066895

Token 1490: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018190443515777588
    2. ' max' → logprob: -4.018190383911133
    3. '_max' → logprob: -10.143190383911133
    4. '
' → logprob: -14.393190383911133
    5. '[max' → logprob: -15.518190383911133
    6. '_' → logprob: -15.643190383911133
    7. ',max' → logprob: -16.643190383911133
    8. ' maximal' → logprob: -17.518190383911133
    9. '(max' → logprob: -17.518190383911133
    10. '```' → logprob: -17.518190383911133

Token 1491: ' shop' (ID: 9100)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.22900384664535522
    2. 'pos' → logprob: -1.72900390625
    3. '_interval' → logprob: -4.47900390625
    4. '_' → logprob: -5.22900390625
    5. '_l' → logprob: -5.85400390625
    6. '_position' → logprob: -6.35400390625
    7. '_idx' → logprob: -6.60400390625
    8. '_positions' → logprob: -7.10400390625
    9. '_index' → logprob: -7.47900390625
    10. 'L' → logprob: -8.10400390625

Token 1492: ' position' (ID: 4010)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.16762888431549072
    2. 'pos' → logprob: -2.667628765106201
    3. '_position' → logprob: -4.042628765106201
    4. '_' → logprob: -4.042628765106201
    5. '_interval' → logprob: -4.292628765106201
    6. '_idx' → logprob: -4.417628765106201
    7. '_index' → logprob: -4.667628765106201
    8. ',' → logprob: -5.792628765106201
    9. '_positions' → logprob: -5.917628765106201
    10. ' =' → logprob: -5.917628765106201

Token 1493: ' over' (ID: 1072)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21927987039089203
    2. ',' → logprob: -2.7192797660827637
    3. 'pos' → logprob: -2.9692797660827637
    4. '=' → logprob: -3.9692797660827637
    5. 'interval' → logprob: -4.594279766082764
    6. '_pos' → logprob: -4.844279766082764
    7. 's' → logprob: -5.344279766082764
    8. 'idx' → logprob: -5.469279766082764
    9. 'overall' → logprob: -5.469279766082764
    10. '_interval' → logprob: -5.719279766082764

Token 1494: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.40099674463272095
    2. 'all' → logprob: -1.4009966850280762
    3. ' the' → logprob: -3.400996685028076
    4. 'the' → logprob: -4.525996685028076
    5. ' intervals' → logprob: -4.650996685028076
    6. 'parent' → logprob: -4.775996685028076
    7. ' parent' → logprob: -4.900996685028076
    8. 'interval' → logprob: -5.025996685028076
    9. ' range' → logprob: -6.650996685028076
    10. 'range' → logprob: -6.775996685028076

Token 1495: ' intervals' (ID: 49900)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -1.0031487941741943
    2. 'interval' → logprob: -1.8781487941741943
    3. ' shops' → logprob: -2.1281487941741943
    4. ' intervals' → logprob: -2.3781487941741943
    5. 'visited' → logprob: -2.5031487941741943
    6. 'i' → logprob: -3.3781487941741943
    7. ' i' → logprob: -3.6281487941741943
    8. ' visited' → logprob: -4.003149032592773
    9. 'positions' → logprob: -4.753149032592773
    10. 'parents' → logprob: -4.753149032592773

Token 1496: ' involving' (ID: 26065)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.35101816058158875
    2. ',' → logprob: -2.726018190383911
    3. 'overall' → logprob: -2.726018190383911
    4. '           ' → logprob: -3.101018190383911
    5. '
' → logprob: -3.476018190383911
    6. 'visited' → logprob: -4.601017951965332
    7. ',min' → logprob: -4.726017951965332
    8. 'all' → logprob: -4.726017951965332
    9. 'max' → logprob: -4.726017951965332
    10. ' min' → logprob: -4.976017951965332

Token 1497: ' constrained' (ID: 107530)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3166995346546173
    2. ' range' → logprob: -1.816699504852295
    3. 'shops' → logprob: -3.691699504852295
    4. 'top' → logprob: -4.066699504852295
    5. ' shops' → logprob: -4.191699504852295
    6. 'the' → logprob: -4.691699504852295
    7. '
' → logprob: -4.816699504852295
    8. 'all' → logprob: -4.941699504852295
    9. 'visited' → logprob: -5.191699504852295
    10. ' the' → logprob: -5.441699504852295

Token 1498: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.10321088880300522
    2. ' shops' → logprob: -2.478210926055908
    3. 'nodes' → logprob: -5.353210926055908
    4. ' nodes' → logprob: -5.478210926055908
    5. '_sh' → logprob: -5.603210926055908
    6. 'positions' → logprob: -7.603210926055908
    7. 's' → logprob: -8.60321044921875
    8. '_' → logprob: -8.72821044921875
    9. '   ' → logprob: -8.85321044921875
    10. '_nodes' → logprob: -9.10321044921875

Token 1499: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2188732922077179
    2. 'min' → logprob: -2.4688732624053955
    3. ',' → logprob: -3.5938732624053955
    4. '
' → logprob: -3.7188732624053955
    5. 'positions' → logprob: -3.9688732624053955
    6. '<|end|>' → logprob: -4.093873500823975
    7. '            
' → logprob: -6.093873500823975
    8. 'pos' → logprob: -6.343873500823975
    9. '[min' → logprob: -6.593873500823975
    10. 'shops' → logprob: -6.593873500823975

Token 1500: '           ' (ID: 352)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9329030513763428
    2. '           ' → logprob: -1.1829030513763428
    3. '
' → logprob: -1.8079030513763428
    4. 'max' → logprob: -2.9329030513763428
    5. '```' → logprob: -3.9329030513763428
    6. 'all' → logprob: -4.182903289794922
    7. ' min' → logprob: -4.432903289794922
    8. 'positions' → logprob: -4.807903289794922
    9. ',' → logprob: -5.182903289794922
    10. 'visited' → logprob: -5.682903289794922

Token 1501: ' constrained' (ID: 107530)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15615662932395935
    2. ' min' → logprob: -2.031156539916992
    3. '           ' → logprob: -5.531156539916992
    4. 'all' → logprob: -5.531156539916992
    5. ' L' → logprob: -6.656156539916992
    6. ' constrained' → logprob: -6.906156539916992
    7. 'L' → logprob: -7.156156539916992
    8. 'max' → logprob: -7.656156539916992
    9. 'l' → logprob: -8.156156539916992
    10. '
' → logprob: -8.406156539916992

Token 1502: '_ro' (ID: 65472)
  Prédit: '_sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.7220319509506226
    2. '_positions' → logprob: -0.8470319509506226
    3. '_set' → logprob: -3.472032070159912
    4. '_' → logprob: -3.597032070159912
    5. ' =' → logprob: -3.847032070159912
    6. '_indices' → logprob: -6.472032070159912
    7. '=' → logprob: -6.972032070159912
    8. '_inter' → logprob: -7.597032070159912
    9. '_ranges' → logprob: -7.597032070159912
    10. 's' → logprob: -7.722032070159912

Token 1503: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0016163812251761556
    2. 'ot' → logprob: -6.501616477966309
    3. 'ofs' → logprob: -9.751616477966309
    4. '[' → logprob: -10.876616477966309
    5. '#' → logprob: -12.501616477966309
    6. '=' → logprob: -12.501616477966309
    7. '```' → logprob: -12.626616477966309
    8. '
' → logprob: -12.626616477966309
    9. 'uts' → logprob: -12.876616477966309
    10. 'ost' → logprob: -12.876616477966309

Token 1504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289284348487854
    2. ' =' → logprob: -1.0539283752441406
    3. '=set' → logprob: -8.92892837524414
    4. 's' → logprob: -10.05392837524414
    5. '=[]' → logprob: -10.92892837524414
    6. '=
' → logprob: -12.05392837524414
    7. '=[' → logprob: -12.42892837524414
    8. ' =
' → logprob: -12.42892837524414
    9. ',' → logprob: -12.42892837524414
    10. '=[]
' → logprob: -12.80392837524414

Token 1505: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5766512751579285
    2. 'set' → logprob: -0.8266512751579285
    3. ' set' → logprob: -7.701651096343994
    4. ' {' → logprob: -8.326651573181152
    5. '{
' → logprob: -11.826651573181152
    6. '{s' → logprob: -12.451651573181152
    7. '{i' → logprob: -13.701651573181152
    8. '{x' → logprob: -13.701651573181152
    9. '=set' → logprob: -13.951651573181152
    10. '{k' → logprob: -14.326651573181152

Token 1506: '(find' (ID: 60187)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.9048672914505005
    2. '()' → logprob: -1.2798672914505005
    3. '(find' → logprob: -1.9048672914505005
    4. '(
' → logprob: -2.404867172241211
    5. '()
' → logprob: -2.779867172241211
    6. '(' → logprob: -4.904867172241211
    7. '([
' → logprob: -5.654867172241211
    8. '(parent' → logprob: -5.904867172241211
    9. '({' → logprob: -7.404867172241211
    10. '(i' → logprob: -7.654867172241211

Token 1507: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.9664456248283386
    2. '(x' → logprob: -1.3414456844329834
    3. '(i' → logprob: -1.3414456844329834
    4. '(d' → logprob: -2.5914456844329834
    5. '(shop' → logprob: -4.216445446014404
    6. '(' → logprob: -6.216445446014404
    7. '(r' → logprob: -6.591445446014404
    8. '(k' → logprob: -7.091445446014404
    9. '(find' → logprob: -7.091445446014404
    10. '(pos' → logprob: -7.716445446014404

Token 1508: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004938666243106127
    2. '(c' → logprob: -6.37993860244751
    3. 'for' → logprob: -7.00493860244751
    4. '(shop' → logprob: -8.129939079284668
    5. 'c' → logprob: -8.254939079284668
    6. '(i' → logprob: -8.379939079284668
    7. '(' → logprob: -8.379939079284668
    8. '(s' → logprob: -8.379939079284668
    9. ')
' → logprob: -8.504939079284668
    10. '[' → logprob: -8.629939079284668

Token 1509: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4797416031360626
    2. ' for' → logprob: -0.9797415733337402
    3. ')' → logprob: -5.85474157333374
    4. '()' → logprob: -6.72974157333374
    5. 'or' → logprob: -7.72974157333374
    6. '(' → logprob: -8.104742050170898
    7. 's' → logprob: -8.229742050170898
    8. '(i' → logprob: -9.104742050170898
    9. '(s' → logprob: -9.354742050170898
    10. '(parent' → logprob: -9.354742050170898

Token 1510: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0741865262389183
    2. '_,' → logprob: -3.0741865634918213
    3. 'd' → logprob: -3.8241865634918213
    4. '(_,' → logprob: -6.699186325073242
    5. ' c' → logprob: -7.199186325073242
    6. ' _,' → logprob: -7.449186325073242
    7. '(c' → logprob: -8.074186325073242
    8. '
' → logprob: -8.949186325073242
    9. ',' → logprob: -9.699186325073242
    10. '_' → logprob: -9.824186325073242

Token 1511: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17906463146209717
    2. ',' → logprob: -2.4290647506713867
    3. 'in' → logprob: -2.8040647506713867
    4. ',d' → logprob: -4.804064750671387
    5. ',c' → logprob: -5.554064750671387
    6. ',_' → logprob: -6.554064750671387
    7. 'd' → logprob: -7.054064750671387
    8. 'c' → logprob: -7.804064750671387
    9. ' ,' → logprob: -9.179064750671387
    10. '_,' → logprob: -9.304064750671387

Token 1512: ' _' (ID: 1175)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.221884101862088e-05
    2. ' d' → logprob: -9.375092506408691
    3. '
' → logprob: -12.375092506408691
    4. '_' → logprob: -12.875092506408691
    5. '_d' → logprob: -14.875092506408691
    6. ' ' → logprob: -16.625091552734375
    7. '   ' → logprob: -18.000091552734375
    8. '<|end|>' → logprob: -18.125091552734375
    9. '  ' → logprob: -18.875091552734375
    10. '	d' → logprob: -19.125091552734375

Token 1513: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0549110546708107
    2. ' in' → logprob: -2.9299111366271973
    3. '
' → logprob: -11.054910659790039
    4. 'c' → logprob: -12.179910659790039
    5. ' ' → logprob: -12.304910659790039
    6. ' 
' → logprob: -14.804910659790039
    7. 'd' → logprob: -14.929910659790039
    8. ',' → logprob: -15.179910659790039
    9. 'i' → logprob: -15.429910659790039
    10. 'and' → logprob: -15.679910659790039

Token 1514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000215457082958892
    2. ' self' → logprob: -8.500215530395508
    3. '
' → logprob: -11.625215530395508
    4. '[self' → logprob: -13.750215530395508
    5. '[
' → logprob: -14.250215530395508
    6. ')' → logprob: -15.125215530395508
    7. '[' → logprob: -15.125215530395508
    8. '<|end|>' → logprob: -15.875215530395508
    9. '	self' → logprob: -16.000215530395508
    10. '(self' → logprob: -16.000215530395508

Token 1515: '.constraints' (ID: 62986)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.055674806237220764
    2. '.constraints' → logprob: -2.9306747913360596
    3. '_constraints' → logprob: -7.930675029754639
    4. 'self' → logprob: -8.18067455291748
    5. '
' → logprob: -9.68067455291748
    6. ')' → logprob: -10.18067455291748
    7. 'user' → logprob: -11.55567455291748
    8. 'con' → logprob: -11.80567455291748
    9. ' constraints' → logprob: -11.93067455291748
    10. '[
' → logprob: -12.43067455291748

Token 1516: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41450631618499756
    2. ')
' → logprob: -1.2895063161849976
    3. '           ' → logprob: -3.164506435394287
    4. '.union' → logprob: -4.289506435394287
    5. ' )' → logprob: -6.039506435394287
    6. ' )
' → logprob: -6.289506435394287
    7. ').' → logprob: -6.914506435394287
    8. '               ' → logprob: -7.039506435394287
    9. ' |' → logprob: -7.789506435394287
    10. '|' → logprob: -8.414505958557129

Token 1517: ' |' (ID: 1022)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25821343064308167
    2. '
' → logprob: -1.5082134008407593
    3. '            
' → logprob: -6.508213520050049
    4. ' constrained' → logprob: -6.508213520050049
    5. 'con' → logprob: -7.258213520050049
    6. '               ' → logprob: -8.00821304321289
    7. '       ' → logprob: -8.00821304321289
    8. ' for' → logprob: -8.13321304321289
    9. ')
' → logprob: -8.50821304321289
    10. 'for' → logprob: -8.63321304321289

Token 1518: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03981423377990723
    2. ' set' → logprob: -3.2898142337799072
    3. 'find' → logprob: -6.414813995361328
    4. ' find' → logprob: -9.039813995361328
    5. '{' → logprob: -12.289813995361328
    6. '           ' → logprob: -12.914813995361328
    7. '(set' → logprob: -13.164813995361328
    8. '   ' → logprob: -13.414813995361328
    9. '       ' → logprob: -13.789813995361328
    10. ' ' → logprob: -14.414813995361328

Token 1519: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -5.200166469876422e-06
    2. 'find' → logprob: -12.375004768371582
    3. '(f' → logprob: -14.625004768371582
    4. '([' → logprob: -15.625004768371582
    5. '(' → logprob: -16.0000057220459
    6. '((' → logprob: -16.5000057220459
    7. '(
' → logprob: -16.7500057220459
    8. '(fin' → logprob: -18.2500057220459
    9. '=find' → logprob: -18.3750057220459
    10. ' find' → logprob: -18.7500057220459

Token 1520: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0010729423956945539
    2. '(_' → logprob: -8.001072883605957
    3. '(_,' → logprob: -8.126072883605957
    4. '(' → logprob: -8.626072883605957
    5. 'd' → logprob: -8.876072883605957
    6. '(
' → logprob: -9.751072883605957
    7. '(_)' → logprob: -10.626072883605957
    8. '([' → logprob: -11.126072883605957
    9. '((' → logprob: -11.876072883605957
    10. '_' → logprob: -13.001072883605957

Token 1521: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8637421727180481
    2. '(d' → logprob: -0.9887421727180481
    3. ')' → logprob: -1.8637421131134033
    4. ' for' → logprob: -3.1137421131134033
    5. ',d' → logprob: -6.488742351531982
    6. ',' → logprob: -6.613742351531982
    7. '(' → logprob: -6.613742351531982
    8. ')d' → logprob: -7.238742351531982
    9. '(c' → logprob: -7.988742351531982
    10. '
' → logprob: -8.113741874694824

Token 1522: ' for' (ID: 395)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2694176137447357
    2. 'for' → logprob: -1.644417643547058
    3. '(' → logprob: -3.8944175243377686
    4. ' for' → logprob: -4.769417762756348
    5. ')' → logprob: -5.144417762756348
    6. '(for' → logprob: -5.644417762756348
    7. '(
' → logprob: -6.144417762756348
    8. '(c' → logprob: -7.144417762756348
    9. ',' → logprob: -7.644417762756348
    10. '({' → logprob: -8.394417762756348

Token 1523: ' _,' (ID: 18042)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0035793958231806755
    2. 'c' → logprob: -5.753579616546631
    3. ' d' → logprob: -7.878579616546631
    4. ',d' → logprob: -12.128579139709473
    5. ' c' → logprob: -12.628579139709473
    6. ',' → logprob: -13.003579139709473
    7. ')d' → logprob: -13.128579139709473
    8. '(d' → logprob: -13.253579139709473
    9. '	d' → logprob: -13.378579139709473
    10. '
' → logprob: -13.628579139709473

Token 1524: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004820988047868013
    2. 'c' → logprob: -5.629820823669434
    3. ' d' → logprob: -6.879820823669434
    4. '0' → logprob: -10.254820823669434
    5. '_d' → logprob: -10.254820823669434
    6. '(d' → logprob: -11.004820823669434
    7. '[' → logprob: -11.004820823669434
    8. 'user' → logprob: -11.379820823669434
    9. '<|end|>' → logprob: -11.379820823669434
    10. '<|end|>' → logprob: -11.379820823669434

Token 1525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7283333539962769
    2. ')' → logprob: -1.3533333539962769
    3. 'in' → logprob: -1.3533333539962769
    4. '<|end|>' → logprob: -8.853333473205566
    5. ' ' → logprob: -10.103333473205566
    6. ')c' → logprob: -10.478333473205566
    7. '):
' → logprob: -10.853333473205566
    8. '_in' → logprob: -10.853333473205566
    9. '()' → logprob: -11.103333473205566
    10. ' )' → logprob: -11.228333473205566

Token 1526: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05495844781398773
    2. ' self' → logprob: -2.9299583435058594
    3. '[
' → logprob: -11.17995834350586
    4. '[self' → logprob: -11.17995834350586
    5. 'range' → logprob: -11.67995834350586
    6. '(self' → logprob: -11.80495834350586
    7. '<|end|>' → logprob: -11.92995834350586
    8. '
' → logprob: -12.05495834350586
    9. ' range' → logprob: -12.67995834350586
    10. '	self' → logprob: -12.67995834350586

Token 1527: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.021512966603040695
    2. 'constraints' → logprob: -3.896512985229492
    3. '_constraints' → logprob: -7.021512985229492
    4. ' constraints' → logprob: -10.521512985229492
    5. 'Constraints' → logprob: -10.771512985229492
    6. '.user' → logprob: -11.646512985229492
    7. 'user' → logprob: -11.771512985229492
    8. '.' → logprob: -12.021512985229492
    9. ')' → logprob: -12.771512985229492
    10. '[' → logprob: -13.896512985229492

Token 1528: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020542622078210115
    2. ')
' → logprob: -6.377054214477539
    3. '           ' → logprob: -8.877054214477539
    4. ' )' → logprob: -9.252054214477539
    5. '())' → logprob: -10.002054214477539
    6. '               ' → logprob: -10.752054214477539
    7. '       ' → logprob: -11.752054214477539
    8. ')}' → logprob: -12.377054214477539
    9. '{' → logprob: -12.627054214477539
    10. '))' → logprob: -12.752054214477539

Token 1529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038390252739191055
    2. '
' → logprob: -7.378839015960693
    3. '<|end|>' → logprob: -7.378839015960693
    4. '       ' → logprob: -7.878839015960693
    5. '            
' → logprob: -8.003839492797852
    6. ')' → logprob: -8.128839492797852
    7. ')
' → logprob: -8.253839492797852
    8. '<|end|>' → logprob: -8.628839492797852
    9. ' for' → logprob: -8.753839492797852
    10. ',' → logprob: -8.878839492797852

Token 1530: ' #' (ID: 1069)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.4253983795642853
    2. '           ' → logprob: -1.925398349761963
    3. ' =' → logprob: -2.050398349761963
    4. '#' (adapté à ' #') → logprob: -4.425398349761963
    5. '
' → logprob: -4.425398349761963
    6. ' constrained' → logprob: -4.425398349761963
    7. ' for' → logprob: -5.300398349761963
    8. '       ' → logprob: -5.425398349761963
    9. 'for' → logprob: -5.425398349761963
    10. '=' → logprob: -5.550398349761963

Token 1531: ' The' (ID: 623)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.6373801827430725
    2. ' constrained' → logprob: -1.6373801231384277
    3. 'min' → logprob: -2.0123801231384277
    4. ' =' → logprob: -3.0123801231384277
    5. ' min' → logprob: -3.8873801231384277
    6. '#' → logprob: -4.012380123138428
    7. 'interval' → logprob: -5.012380123138428
    8. '=' → logprob: -5.262380123138428
    9. 'all' → logprob: -5.512380123138428
    10. 'if' → logprob: -5.512380123138428

Token 1532: ' minimal' (ID: 19957)
  Prédit: ' constrained'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constrained' → logprob: -0.8494355082511902
    2. 'min' → logprob: -1.349435567855835
    3. ' min' → logprob: -2.974435567855835
    4. 'con' → logprob: -3.099435567855835
    5. ' minimal' → logprob: -3.099435567855835
    6. '#' → logprob: -3.349435567855835
    7. 'root' → logprob: -3.849435567855835
    8. 'minimal' → logprob: -4.099435329437256
    9. 'interval' → logprob: -4.599435329437256
    10. 'roots' → logprob: -4.849435329437256

Token 1533: ' path' (ID: 3104)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.9166274666786194
    2. '_' → logprob: -1.7916274070739746
    3. ' length' → logprob: -2.1666274070739746
    4. ' _' → logprob: -2.2916274070739746
    5. ' visiting' → logprob: -2.5416274070739746
    6. ' =' → logprob: -3.6666274070739746
    7. 'length' → logprob: -4.166627407073975
    8. '_walk' → logprob: -4.166627407073975
    9. ' interval' → logprob: -4.291627407073975
    10. '_interval' → logprob: -4.291627407073975

Token 1534: ' must' (ID: 2804)
  Prédit: ' covers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covers' → logprob: -1.2110810279846191
    2. ' =' → logprob: -1.5860810279846191
    3. '=' → logprob: -1.7110810279846191
    4. 'length' → logprob: -1.8360810279846191
    5. 'covers' → logprob: -2.336081027984619
    6. '_length' → logprob: -4.086081027984619
    7. ' length' → logprob: -4.586081027984619
    8. 'cover' → logprob: -5.086081027984619
    9. ' is' → logprob: -5.086081027984619
    10. 'is' → logprob: -5.586081027984619

Token 1535: ' span' (ID: 19861)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.11090509593486786
    2. 'include' → logprob: -2.610905170440674
    3. 'visit' → logprob: -4.235905170440674
    4. ' cover' → logprob: -4.610905170440674
    5. 'span' → logprob: -6.110905170440674
    6. 'pass' → logprob: -6.485905170440674
    7. ' include' → logprob: -7.235905170440674
    8. '_cover' → logprob: -7.235905170440674
    9. '=' → logprob: -7.485905170440674
    10. ' at' → logprob: -8.485904693603516

Token 1536: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2990392446517944
    2. 'find' → logprob: -1.7990392446517944
    3. ' the' → logprob: -2.049039363861084
    4. ' intervals' → logprob: -2.174039363861084
    5. ' find' → logprob: -2.424039363861084
    6. 'interval' → logprob: -2.799039363861084
    7. 'min' → logprob: -3.424039363861084
    8. 'union' → logprob: -3.549039363861084
    9. ' constrained' → logprob: -3.924039363861084
    10. '[min' → logprob: -4.049039363861084

Token 1537: ' minimal' (ID: 19957)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -1.1350611448287964
    2. ' minimal' → logprob: -1.7600611448287964
    3. ' union' → logprob: -2.135061264038086
    4. 'minimal' → logprob: -2.635061264038086
    5. 'interval' → logprob: -2.760061264038086
    6. ' constrained' → logprob: -3.385061264038086
    7. 'min' → logprob: -3.510061264038086
    8. 'max' → logprob: -3.635061264038086
    9. 'ent' → logprob: -3.760061264038086
    10. 'minimum' → logprob: -4.010061264038086

Token 1538: ' min' (ID: 1349)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17558693885803223
    2. 'and' → logprob: -3.3005869388580322
    3. '[' → logprob: -3.6755869388580322
    4. ' root' → logprob: -3.9255869388580322
    5. ' interval' → logprob: -4.175586700439453
    6. 'interval' → logprob: -4.300586700439453
    7. 'min' → logprob: -4.800586700439453
    8. 'root' → logprob: -4.925586700439453
    9. ' min' → logprob: -5.175586700439453
    10. ' [' → logprob: -5.425586700439453

Token 1539: 'Pos' (ID: 3501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3019956350326538
    2. '_position' → logprob: -1.6769956350326538
    3. '_pos' → logprob: -2.8019957542419434
    4. '_
' → logprob: -6.051995754241943
    5. '_interval' → logprob: -6.176995754241943
    6. '_bound' → logprob: -6.801995754241943
    7. '(
' → logprob: -7.051995754241943
    8. 'pos' → logprob: -7.051995754241943
    9. 'imum' → logprob: -7.176995754241943
    10. 'position' → logprob: -7.176995754241943

Token 1540: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.30423349142074585
    2. ',' → logprob: -1.6792335510253906
    3. 'and' → logprob: -3.3042335510253906
    4. '_' → logprob: -4.804233551025391
    5. ' ,' → logprob: -5.179233551025391
    6. ',
' → logprob: -5.179233551025391
    7. ' constrained' → logprob: -5.679233551025391
    8. '(
' → logprob: -5.929233551025391
    9. ' among' → logprob: -6.179233551025391
    10. ' _' → logprob: -6.429233551025391

Token 1541: ' maximal' (ID: 65414)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10061820596456528
    2. ' maximal' → logprob: -2.3506181240081787
    3. ' max' → logprob: -8.225618362426758
    4. 'maximum' → logprob: -9.475618362426758
    5. 'minimal' → logprob: -10.975618362426758
    6. ' maximum' → logprob: -11.100618362426758
    7. 'the' → logprob: -11.350618362426758
    8. '
' → logprob: -11.725618362426758
    9. '_max' → logprob: -11.975618362426758
    10. ' maximale' → logprob: -13.100618362426758

Token 1542: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.049876872450113297
    2. ' max' → logprob: -3.0498769283294678
    3. '_max' → logprob: -7.424876689910889
    4. 'Pos' → logprob: -8.174877166748047
    5. 'Max' → logprob: -9.174877166748047
    6. '
' → logprob: -9.424877166748047
    7. '_pos' → logprob: -9.424877166748047
    8. '(max' → logprob: -9.424877166748047
    9. ' maximal' → logprob: -10.924877166748047
    10. '```' → logprob: -10.924877166748047

Token 1543: 'Pos' (ID: 3501)
  Prédit: 'Pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pos' → logprob: -0.16146430373191833
    2. ']' → logprob: -3.286464214324951
    3. '```' → logprob: -3.411464214324951
    4. '_pos' → logprob: -3.786464214324951
    5. 'pos' → logprob: -4.411464214324951
    6. '[' → logprob: -4.786464214324951
    7. 'positions' → logprob: -4.786464214324951
    8. 'interval' → logprob: -5.411464214324951
    9. 'position' → logprob: -5.661464214324951
    10. ')' → logprob: -5.661464214324951

Token 1544: ' of' (ID: 328)
  Prédit: ' among'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' among' → logprob: -0.5798196792602539
    2. ' of' → logprob: -1.954819679260254
    3. ' over' → logprob: -1.954819679260254
    4. 'among' → logprob: -3.204819679260254
    5. ' in' → logprob: -3.329819679260254
    6. ' =' → logprob: -3.954819679260254
    7. 'of' → logprob: -4.329819679260254
    8. ',' → logprob: -4.454819679260254
    9. 'over' → logprob: -4.954819679260254
    10. ' across' → logprob: -5.204819679260254

Token 1545: ' these' (ID: 1879)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.012715890072286129
    2. 'interval' → logprob: -4.762715816497803
    3. ' constrained' → logprob: -5.762715816497803
    4. ' intervals' → logprob: -7.137715816497803
    5. 'the' → logprob: -9.762716293334961
    6. 'list' → logprob: -10.512716293334961
    7. 'constraints' → logprob: -10.887716293334961
    8. 'all' → logprob: -10.887716293334961
    9. 'restricted' → logprob: -11.887716293334961
    10. '(con' → logprob: -12.387716293334961

Token 1546: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4303058981895447
    2. ' intervals' → logprob: -1.4303059577941895
    3. ' constrained' → logprob: -2.9303059577941895
    4. '_ro' → logprob: -3.1803059577941895
    5. 'con' → logprob: -5.3053059577941895
    6. '_con' → logprob: -5.4303059577941895
    7. 'roots' → logprob: -6.4303059577941895
    8. ' interval' → logprob: -6.8053059577941895
    9. ' roots' → logprob: -7.1803059577941895
    10. '_inter' → logprob: -7.4303059577941895

Token 1547: ' plus' (ID: 2932)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15806876122951508
    2. '=' → logprob: -2.0330686569213867
    3. '           ' → logprob: -4.658068656921387
    4. '
' → logprob: -6.658068656921387
    5. ',' → logprob: -6.908068656921387
    6. ' =
' → logprob: -7.408068656921387
    7. '.' → logprob: -7.408068656921387
    8. '=
' → logprob: -7.658068656921387
    9. 'min' → logprob: -7.658068656921387
    10. 's' → logprob: -8.783068656921387

Token 1548: ' entrance' (ID: 27326)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0736120343208313
    2. ' ' → logprob: -2.6986119747161865
    3. '
' → logprob: -6.573612213134766
    4. '2' → logprob: -6.948612213134766
    5. ' the' → logprob: -7.948612213134766
    6. ' (' → logprob: -8.198612213134766
    7. ' exit' → logprob: -9.198612213134766
    8. '(' → logprob: -9.448612213134766
    9. 'the' → logprob: -9.448612213134766
    10. '0' → logprob: -9.698612213134766

Token 1549: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7270081043243408
    2. ' and' → logprob: -0.9770081043243408
    3. '(' → logprob: -3.602008104324341
    4. 'and' → logprob: -3.727008104324341
    5. '           ' → logprob: -3.852008104324341
    6. ')' → logprob: -4.227007865905762
    7. '|' → logprob: -4.477007865905762
    8. ',
' → logprob: -4.852007865905762
    9. '
' → logprob: -5.227007865905762
    10. '[' → logprob: -5.727007865905762

Token 1550: ' exit' (ID: 10654)
  Prédit: ' exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.38752931356430054
    2. 'exit' → logprob: -1.1375293731689453
    3. '1' → logprob: -8.637529373168945
    4. 'max' → logprob: -9.262529373168945
    5. ' n' → logprob: -9.387529373168945
    6. '(exit' → logprob: -9.512529373168945
    7. 'n' → logprob: -9.637529373168945
    8. ' max' → logprob: -9.762529373168945
    9. '_exit' → logprob: -10.262529373168945
    10. '```' → logprob: -10.637529373168945

Token 1551: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3619343042373657
    2. '           ' → logprob: -1.4869343042373657
    3. ' =' → logprob: -3.986934185028076
    4. '.' → logprob: -3.986934185028076
    5. '.
' → logprob: -4.111934185028076
    6. '            
' → logprob: -5.361934185028076
    7. ',' → logprob: -5.486934185028076
    8. ':
' → logprob: -5.986934185028076
    9. '       ' → logprob: -6.111934185028076
    10. '=' → logprob: -6.236934185028076

Token 1552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.171394944190979
    2. '
' → logprob: -2.1713948249816895
    3. '       ' → logprob: -4.5463948249816895
    4. '            
' → logprob: -5.2963948249816895
    5. '```' → logprob: -5.2963948249816895
    6. '   ' → logprob: -5.4213948249816895
    7. ' 
' → logprob: -6.0463948249816895
    8. '\' → logprob: -6.2963948249816895
    9. '    
' → logprob: -6.5463948249816895
    10. '  
' → logprob: -6.5463948249816895

Token 1553: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13357983529567719
    2. ' min' → logprob: -2.508579730987549
    3. 'all' → logprob: -4.008579730987549
    4. '           ' → logprob: -4.633579730987549
    5. '
' → logprob: -4.883579730987549
    6. '#' (adapté à ' #') → logprob: -6.758579730987549
    7. 'l' → logprob: -7.008579730987549
    8. 'root' → logprob: -7.133579730987549
    9. 'interval' → logprob: -7.258579730987549
    10. ' minimal' → logprob: -7.508579730987549

Token 1554: ' If' (ID: 1843)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.024422435089945793
    2. 'if' → logprob: -4.149422645568848
    3. '           ' → logprob: -6.149422645568848
    4. '#' → logprob: -6.399422645568848
    5. ' min' → logprob: -6.774422645568848
    6. '
' → logprob: -6.774422645568848
    7. '   ' → logprob: -7.774422645568848
    8. 'all' → logprob: -7.899422645568848
    9. 'return' → logprob: -8.149422645568848
    10. ' if' → logprob: -8.649422645568848

Token 1555: ' no' (ID: 860)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8647169470787048
    2. ' len' → logprob: -1.3647170066833496
    3. ' not' → logprob: -1.6147170066833496
    4. ' constrained' → logprob: -2.9897170066833496
    5. 'not' → logprob: -3.2397170066833496
    6. 'con' → logprob: -3.6147170066833496
    7. ' intervals' → logprob: -5.61471700668335
    8. '(len' → logprob: -7.11471700668335
    9. '   ' → logprob: -7.23971700668335
    10. ' ' → logprob: -7.36471700668335

Token 1556: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.16954448819160461
    2. 'constraints' → logprob: -2.0445444583892822
    3. ' constrained' → logprob: -4.794544696807861
    4. ' ' → logprob: -5.669544696807861
    5. ' more' → logprob: -5.794544696807861
    6. '_constraints' → logprob: -5.794544696807861
    7. '
' → logprob: -6.169544696807861
    8. 'n' → logprob: -6.169544696807861
    9. 't' → logprob: -7.294544696807861
    10. 'c' → logprob: -7.794544696807861

Token 1557: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04882637411355972
    2. ':
' → logprob: -3.1738264560699463
    3. ':return' → logprob: -5.673826217651367
    4. ',' → logprob: -7.173826217651367
    5. '==' → logprob: -7.423826217651367
    6. ' ==' → logprob: -8.173826217651367
    7. '[' → logprob: -9.048826217651367
    8. 'return' → logprob: -9.173826217651367
    9. '.' → logprob: -9.298826217651367
    10. '           ' → logprob: -9.548826217651367

Token 1558: ' intervals' (ID: 49900)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1483469009399414
    2. '               ' → logprob: -2.5233469009399414
    3. 'return' → logprob: -3.1483469009399414
    4. '           ' → logprob: -4.273346900939941
    5. '
' → logprob: -8.023346900939941
    6. ' 
' → logprob: -8.398346900939941
    7. '   ' → logprob: -9.648346900939941
    8. '            ' → logprob: -10.398346900939941
    9. ' ' → logprob: -10.648346900939941
    10. ' #' → logprob: -11.023346900939941

Token 1559: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5352393984794617
    2. ' =' → logprob: -1.4102394580841064
    3. '[' → logprob: -2.4102394580841064
    4. '==' → logprob: -3.9102394580841064
    5. ' are' → logprob: -4.160239219665527
    6. ':' → logprob: -4.285239219665527
    7. 'are' → logprob: -5.035239219665527
    8. ' remain' → logprob: -5.660239219665527
    9. ' ==' → logprob: -5.660239219665527
    10. ':
' → logprob: -5.785239219665527

Token 1560: ' empty' (ID: 8213)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23545780777931213
    2. ' [' → logprob: -2.1104578971862793
    3. '[[' → logprob: -3.3604578971862793
    4. '[
' → logprob: -3.7354578971862793
    5. ' [[' → logprob: -5.610457897186279
    6. '```' → logprob: -5.735457897186279
    7. '[i' → logprob: -6.110457897186279
    8. 'initialized' → logprob: -6.235457897186279
    9. '[self' → logprob: -6.360457897186279
    10. 'already' → logprob: -6.610457897186279

Token 1561: ' =>' (ID: 871)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6926233768463135
    2. ',' → logprob: -1.5676233768463135
    3. ':' → logprob: -1.5676233768463135
    4. ':
' → logprob: -3.6926233768463135
    5. '[]' → logprob: -4.192623138427734
    6. '           ' → logprob: -4.567623138427734
    7. ',
' → logprob: -5.067623138427734
    8. '[' → logprob: -5.192623138427734
    9. '.
' → logprob: -5.692623138427734
    10. '
' → logprob: -5.692623138427734

Token 1562: ' minimal' (ID: 19957)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20369498431682587
    2. 'return' → logprob: -1.8286949396133423
    3. '           ' → logprob: -4.203694820404053
    4. '
' → logprob: -5.828694820404053
    5. '               ' → logprob: -5.828694820404053
    6. ' self' → logprob: -7.703694820404053
    7. '0' → logprob: -7.953694820404053
    8. 'self' → logprob: -8.078695297241211
    9. '```' → logprob: -8.203695297241211
    10. '1' → logprob: -8.453695297241211

Token 1563: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5189478993415833
    2. ' length' → logprob: -1.0189478397369385
    3. ' return' → logprob: -4.018948078155518
    4. 'return' → logprob: -4.393948078155518
    5. '```' → logprob: -5.143948078155518
    6. ' n' → logprob: -6.518948078155518
    7. '_length' → logprob: -6.643948078155518
    8. 'n' → logprob: -6.768948078155518
    9. '
' → logprob: -7.518948078155518
    10. '+' → logprob: -8.01894760131836

Token 1564: ' =' (ID: 314)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9052897095680237
    2. ':' → logprob: -1.530289649963379
    3. '               ' → logprob: -2.155289649963379
    4. '           ' → logprob: -2.280289649963379
    5. '.' → logprob: -2.655289649963379
    6. '.
' → logprob: -4.155289649963379
    7. 'return' → logprob: -4.280289649963379
    8. '
' → logprob: -4.280289649963379
    9. ':return' → logprob: -4.780289649963379
    10. ' return' → logprob: -4.905289649963379

Token 1565: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3135555386543274
    2. 'self' → logprob: -1.3135554790496826
    3. '
' → logprob: -8.188555717468262
    4. '(self' → logprob: -11.938555717468262
    5. '           ' → logprob: -12.563555717468262
    6. '```' → logprob: -13.563555717468262
    7. 'n' → logprob: -13.688555717468262
    8. '0' → logprob: -14.438555717468262
    9. ' 
' → logprob: -14.563555717468262
    10. '1' → logprob: -14.938555717468262

Token 1566: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7439081072807312
    2. '
' → logprob: -1.493908166885376
    3. ' +' → logprob: -1.868908166885376
    4. '<|end|>' → logprob: -2.368908166885376
    5. '+
' → logprob: -3.993908166885376
    6. '

' → logprob: -5.118907928466797
    7. ' +
' → logprob: -5.368907928466797
    8. ')' → logprob: -5.743907928466797
    9. '<|end|>' → logprob: -5.743907928466797
    10. '           ' → logprob: -5.868907928466797

Token 1567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '
' → logprob: -15.875031471252441
    4. '```' → logprob: -15.875031471252441
    5. '   ' → logprob: -16.250032424926758
    6. '...' → logprob: -17.125032424926758
    7. '<|end|>' → logprob: -17.875032424926758
    8. '2' → logprob: -17.875032424926758
    9. '+' → logprob: -18.500032424926758
    10. '           ' → logprob: -18.750032424926758

Token 1568: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13071992993354797
    2. '           ' → logprob: -2.1307199001312256
    3. '

' → logprob: -6.880720138549805
    4. '<|end|>' → logprob: -6.880720138549805
    5. '            
' → logprob: -7.755720138549805
    6. '       ' → logprob: -8.380720138549805
    7. '.' → logprob: -8.755720138549805
    8. '
' → logprob: -9.005720138549805
    9. 'return' → logprob: -9.005720138549805
    10. ',
' → logprob: -9.005720138549805

Token 1569: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3146786093711853
    2. '           ' → logprob: -1.43967866897583
    3. 'return' → logprob: -3.81467866897583
    4. '            
' → logprob: -5.18967866897583
    5. '       ' → logprob: -6.18967866897583
    6. ' return' → logprob: -7.68967866897583
    7. 'if' → logprob: -7.81467866897583
    8. '  
' → logprob: -7.93967866897583
    9. ' 
' → logprob: -8.064678192138672
    10. '    
' → logprob: -8.439678192138672

Token 1570: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05826791375875473
    2. '           ' → logprob: -3.433267831802368
    3. 'min' → logprob: -4.058268070220947
    4. '       ' → logprob: -5.308268070220947
    5. 'minimal' → logprob: -7.683268070220947
    6. ' if' → logprob: -7.808268070220947
    7. '
' → logprob: -8.433267593383789
    8. 'all' → logprob: -8.683267593383789
    9. 'return' → logprob: -8.683267593383789
    10. 'con' → logprob: -8.683267593383789

Token 1571: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.030100805684924126
    2. 'not' → logprob: -3.5301008224487305
    3. ' len' → logprob: -8.28010082244873
    4. ' self' → logprob: -9.53010082244873
    5. 'len' → logprob: -11.53010082244873
    6. 'self' → logprob: -12.28010082244873
    7. '           ' → logprob: -12.40510082244873
    8. '   ' → logprob: -13.15510082244873
    9. ' ' → logprob: -13.90510082244873
    10. ' ' → logprob: -13.90510082244873

Token 1572: ' constrained' (ID: 107530)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142453908920288
    2. ' self' → logprob: -1.7014245986938477
    3. '
' → logprob: -11.826424598693848
    4. ' ' → logprob: -13.826424598693848
    5. ' ' → logprob: -14.326424598693848
    6. '(self' → logprob: -14.451424598693848
    7. '	self' → logprob: -15.076424598693848
    8. ' any' → logprob: -15.326424598693848
    9. '[self' → logprob: -15.576424598693848
    10. ' constraints' → logprob: -15.826424598693848

Token 1573: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.00012475410767365247
    2. '_constraints' → logprob: -9.25012493133545
    3. '_' → logprob: -10.75012493133545
    4. 's' → logprob: -12.50012493133545
    5. '_root' → logprob: -14.62512493133545
    6. '_positions' → logprob: -14.75012493133545
    7. '_rot' → logprob: -15.12512493133545
    8. '_inter' → logprob: -15.12512493133545
    9. ':' → logprob: -15.37512493133545
    10. '_ros' → logprob: -15.50012493133545

Token 1574: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.005654775071889162
    2. 'ot' → logprob: -5.505654811859131
    3. 'ts' → logprob: -7.380654811859131
    4. '_' → logprob: -8.880654335021973
    5. 'o' → logprob: -9.130654335021973
    6. '[' → logprob: -9.130654335021973
    7. '```' → logprob: -9.255654335021973
    8. 'ints' → logprob: -10.005654335021973
    9. 'uts' → logprob: -10.255654335021973
    10. '
' → logprob: -10.380654335021973

Token 1575: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08998817950487137
    2. ':
' → logprob: -2.4649882316589355
    3. '==' → logprob: -6.9649882316589355
    4. ' ==' → logprob: -9.964987754821777
    5. '{' → logprob: -11.464987754821777
    6. ':return' → logprob: -11.464987754821777
    7. '.' → logprob: -12.089987754821777
    8. ')' → logprob: -12.339987754821777
    9. '[' → logprob: -12.589987754821777
    10. '=' → logprob: -12.589987754821777

Token 1576: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37574657797813416
    2. ':
' → logprob: -1.2507466077804565
    3. ':' → logprob: -3.875746488571167
    4. '           ' → logprob: -6.250746726989746
    5. ':return' → logprob: -6.250746726989746
    6. 'return' → logprob: -6.750746726989746
    7. ' return' → logprob: -7.625746726989746
    8. '   ' → logprob: -9.250746726989746
    9. '	           ' → logprob: -9.625746726989746
    10. '[' → logprob: -9.625746726989746

Token 1577: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3558625280857086
    2. '               ' → logprob: -1.9808624982833862
    3. ' return' → logprob: -2.230862617492676
    4. '           ' → logprob: -3.105862617492676
    5. '
' → logprob: -5.230862617492676
    6. ' 
' → logprob: -6.730862617492676
    7. '                   ' → logprob: -7.105862617492676
    8. '   ' → logprob: -7.480862617492676
    9. ':
' → logprob: -7.480862617492676
    10. '       ' → logprob: -8.105862617492676

Token 1578: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20141783356666565
    2. 'self' → logprob: -1.7014178037643433
    3. '           ' → logprob: -13.326417922973633
    4. ' 
' → logprob: -14.451417922973633
    5. 'n' → logprob: -15.076417922973633
    6. '(self' → logprob: -15.201417922973633
    7. '               ' → logprob: -15.201417922973633
    8. ' ' → logprob: -15.451417922973633
    9. '                   ' → logprob: -15.576417922973633
    10. ' ' → logprob: -15.576417922973633

Token 1579: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0002787359117064625
    2. '.' → logprob: -8.25027847290039
    3. 'n' → logprob: -11.12527847290039
    4. '.
' → logprob: -13.62527847290039
    5. ' .' → logprob: -13.75027847290039
    6. '```' → logprob: -15.62527847290039
    7. '
' → logprob: -16.75027847290039
    8. '‌.' → logprob: -17.37527847290039
    9. '	n' → logprob: -17.87527847290039
    10. '   ' → logprob: -17.87527847290039

Token 1580: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06205529719591141
    2. '+' → logprob: -2.8120553493499756
    3. ' ' → logprob: -10.187055587768555
    4. ' +
' → logprob: -11.187055587768555
    5. ')' → logprob: -11.937055587768555
    6. '
' → logprob: -12.312055587768555
    7. '+
' → logprob: -12.312055587768555
    8. '<|end|>' → logprob: -12.687055587768555
    9. '[' → logprob: -13.312055587768555
    10. ' plus' → logprob: -13.312055587768555

Token 1581: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -16.0000057220459
    4. '0' → logprob: -16.7500057220459
    5. '```' → logprob: -17.5000057220459
    6. '<|end|>' → logprob: -18.2500057220459
    7. '+' → logprob: -19.2500057220459
    8. '[' → logprob: -19.3750057220459
    9. '(' → logprob: -20.1250057220459
    10. '<|end|>' → logprob: -20.5000057220459

Token 1582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -16.75
    4. '
' → logprob: -17.375
    5. '0' → logprob: -18.75
    6. '[' → logprob: -20.375
    7. '<|end|>' → logprob: -20.375
    8. '`' → logprob: -20.625
    9. '۱' → logprob: -21.125
    10. '+' → logprob: -21.375

Token 1583: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4537506401538849
    2. '           ' → logprob: -1.0787506103515625
    3. '<|end|>' → logprob: -5.2037506103515625
    4. '            
' → logprob: -5.3287506103515625
    5. '       ' → logprob: -6.2037506103515625
    6. '

' → logprob: -6.4537506103515625
    7. ' 
' → logprob: -6.5787506103515625
    8. '+' → logprob: -6.8287506103515625
    9. '[' → logprob: -7.0787506103515625
    10. '+
' → logprob: -7.2037506103515625

Token 1584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11605991423130035
    2. '
' → logprob: -2.6160600185394287
    3. '            
' → logprob: -3.9910600185394287
    4. '       ' → logprob: -5.11605978012085
    5. '        
' → logprob: -6.24105978012085
    6. 'return' → logprob: -6.24105978012085
    7. ' 
' → logprob: -6.36605978012085
    8. '  
' → logprob: -7.11605978012085
    9. '    
' → logprob: -7.61605978012085
    10. '

' → logprob: -7.61605978012085

Token 1585: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.2277355194091797
    2. '           ' → logprob: -1.7277355194091797
    3. ' min' → logprob: -4.72773551940918
    4. '
' → logprob: -5.35273551940918
    5. 'all' → logprob: -5.85273551940918
    6. 'mins' → logprob: -6.10273551940918
    7. 'root' → logprob: -6.22773551940918
    8. '#' → logprob: -6.35273551940918
    9. 'roots' → logprob: -6.97773551940918
    10. '   ' → logprob: -7.10273551940918

Token 1586: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0048347534611821175
    2. '_' → logprob: -5.7548346519470215
    3. 'Pos' → logprob: -7.0048346519470215
    4. '_position' → logprob: -8.25483512878418
    5. 'pos' → logprob: -8.50483512878418
    6. '_val' → logprob: -9.37983512878418
    7. '_left' → logprob: -9.75483512878418
    8. '_interval' → logprob: -10.12983512878418
    9. '(' → logprob: -10.75483512878418
    10. '_idx' → logprob: -11.25483512878418

Token 1587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16999144852161407
    2. '=' → logprob: -1.9199914932250977
    3. ',' → logprob: -4.669991493225098
    4. '_' → logprob: -8.669991493225098
    5. '<|end|>' → logprob: -10.169991493225098
    6. '_idx' → logprob: -10.669991493225098
    7. '=min' → logprob: -10.794991493225098
    8. ')' → logprob: -10.794991493225098
    9. '_=' → logprob: -11.169991493225098
    10. '   ' → logprob: -11.794991493225098

Token 1588: ' self' (ID: 1051)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2870897948741913
    2. 'self' → logprob: -1.9120898246765137
    3. ' min' → logprob: -2.6620898246765137
    4. 'float' → logprob: -3.9120898246765137
    5. ' self' → logprob: -5.162089824676514
    6. '10' → logprob: -5.787089824676514
    7. ' float' → logprob: -6.787089824676514
    8. '0' → logprob: -7.162089824676514
    9. '1' → logprob: -7.787089824676514
    10. 'interval' → logprob: -7.912089824676514

Token 1589: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.04046744853258133
    2. 'min' → logprob: -3.7904675006866455
    3. 'n' → logprob: -4.165467262268066
    4. 'inf' → logprob: -7.540467262268066
    5. '.min' → logprob: -8.290467262268066
    6. 'in' → logprob: -8.665467262268066
    7. '[n' → logprob: -9.415467262268066
    8. '
' → logprob: -9.540467262268066
    9. 'float' → logprob: -9.665467262268066
    10. '.inf' → logprob: -10.040467262268066

Token 1590: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18131612241268158
    2. ' +' → logprob: -1.8063161373138428
    3. '<|end|>' → logprob: -8.056316375732422
    4. '-' → logprob: -8.181316375732422
    5. '+
' → logprob: -8.431316375732422
    6. ')' → logprob: -8.681316375732422
    7. ' -' → logprob: -8.681316375732422
    8. '_' → logprob: -8.806316375732422
    9. ' +
' → logprob: -10.056316375732422
    10. '[' → logprob: -10.181316375732422

Token 1591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001086043776012957
    2. ' ' → logprob: -7.501086235046387
    3. '0' → logprob: -8.001086235046387
    4. '2' → logprob: -8.876086235046387
    5. '
' → logprob: -11.126086235046387
    6. '   ' → logprob: -11.501086235046387
    7. '           ' → logprob: -11.751086235046387
    8. '       ' → logprob: -12.126086235046387
    9. '  ' → logprob: -12.251086235046387
    10. '    ' → logprob: -13.251086235046387

Token 1592: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1593: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1594: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.1717415750026703
    2. ' max' → logprob: -1.9217416048049927
    3. 'for' → logprob: -5.171741485595703
    4. '=' → logprob: -6.171741485595703
    5. ' for' → logprob: -6.171741485595703
    6. ' =' → logprob: -7.921741485595703
    7. '=max' → logprob: -8.296741485595703
    8. ' 
' → logprob: -8.546741485595703
    9. '<|end|>' → logprob: -8.546741485595703
    10. ' ' → logprob: -9.171741485595703

Token 1595: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -8.137130498653278e-05
    2. 'pos' → logprob: -10.500081062316895
    3. 'Pos' → logprob: -11.125081062316895
    4. '_' → logprob: -11.250081062316895
    5. '(' → logprob: -11.625081062316895
    6. '_position' → logprob: -12.375081062316895
    7. '=' → logprob: -12.500081062316895
    8. '(
' → logprob: -12.875081062316895
    9. ')' → logprob: -13.625081062316895
    10. '```' → logprob: -13.625081062316895

Token 1596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251943439245224
    2. ' =' → logprob: -1.5019434690475464
    3. '<|end|>' → logprob: -11.501943588256836
    4. '=max' → logprob: -13.001943588256836
    5. ')' → logprob: -14.501943588256836
    6. '_' → logprob: -15.376943588256836
    7. '_=' → logprob: -15.751943588256836
    8. '<|end|>' → logprob: -15.876943588256836
    9. '=None' → logprob: -16.126943588256836
    10. ',' → logprob: -16.126943588256836

Token 1597: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.548084020614624
    2. 'self' → logprob: -0.923084020614624
    3. ' self' → logprob: -3.798084020614624
    4. ' ' → logprob: -6.423084259033203
    5. 'max' → logprob: -8.673084259033203
    6. '-' → logprob: -9.173084259033203
    7. ' -' → logprob: -9.548084259033203
    8. 'parent' → logprob: -10.048084259033203
    9. '[self' → logprob: -10.173084259033203
    10. '-self' → logprob: -10.298084259033203

Token 1598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0054653361439704895
    2. 'self' → logprob: -5.255465507507324
    3. '-' → logprob: -8.630465507507324
    4. '-self' → logprob: -10.130465507507324
    5. ' ' → logprob: -12.380465507507324
    6. 'max' → logprob: -13.005465507507324
    7. '1' → logprob: -13.130465507507324
    8. ' self' → logprob: -13.130465507507324
    9. ' -' → logprob: -14.255465507507324
    10. '-(' → logprob: -15.130465507507324

Token 1599: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0591683387756348
    2. 'for' → logprob: -1.3091683387756348
    3. ' for' → logprob: -1.4341683387756348
    4. '           ' → logprob: -2.0591683387756348
    5. '<|end|>' → logprob: -4.809168338775635
    6. ' 
' → logprob: -5.934168338775635
    7. ')' → logprob: -6.809168338775635
    8. ')
' → logprob: -7.184168338775635
    9. '               ' → logprob: -7.309168338775635
    10. '       ' → logprob: -7.309168338775635

Token 1600: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5623825788497925
    2. ' for' → logprob: -1.0623825788497925
    3. '
' → logprob: -2.812382698059082
    4. '<|end|>' → logprob: -4.187382698059082
    5. '           ' → logprob: -5.312382698059082
    6. ' 
' → logprob: -6.562382698059082
    7. ')' → logprob: -6.937382698059082
    8. ' ' → logprob: -7.937382698059082
    9. ')
' → logprob: -8.562382698059082
    10. '<|end|>' → logprob: -8.687382698059082

Token 1601: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03569060564041138
    2. ' for' → logprob: -3.5356905460357666
    3. '           ' → logprob: -5.160690784454346
    4. '
' → logprob: -8.660690307617188
    5. '       ' → logprob: -11.660690307617188
    6. '   ' → logprob: -14.035690307617188
    7. '	for' → logprob: -14.160690307617188
    8. '               ' → logprob: -14.910690307617188
    9. '            
' → logprob: -15.035690307617188
    10. 'For' → logprob: -15.910690307617188

Token 1602: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10020893067121506
    2. 'root' → logprob: -2.3502089977264404
    3. ' r' → logprob: -13.35020923614502
    4. ' root' → logprob: -15.47520923614502
    5. 'rt' → logprob: -15.47520923614502
    6. 'cr' → logprob: -16.100208282470703
    7. 'x' → logprob: -16.725208282470703
    8. 'node' → logprob: -17.600208282470703
    9. 'rr' → logprob: -17.725208282470703
    10. '
' → logprob: -19.100208282470703

Token 1603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198393553495407
    2. 'in' → logprob: -2.811983823776245
    3. 'r' → logprob: -11.436984062194824
    4. '
' → logprob: -12.686984062194824
    5. ' ' → logprob: -14.436984062194824
    6. 'n' → logprob: -15.186984062194824
    7. 'root' → logprob: -15.436984062194824
    8. 'd' → logprob: -15.561984062194824
    9. '_in' → logprob: -15.561984062194824
    10. '	in' → logprob: -15.686984062194824

Token 1604: ' constrained' (ID: 107530)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.688212614681106e-05
    2. ' constrained' → logprob: -11.000017166137695
    3. 'restricted' → logprob: -16.375017166137695
    4. '   ' → logprob: -17.625017166137695
    5. '(con' → logprob: -18.125017166137695
    6. '_con' → logprob: -18.250017166137695
    7. '	con' → logprob: -18.875017166137695
    8. '$con' → logprob: -20.000017166137695
    9. '-con' → logprob: -20.625017166137695
    10. 'constraint' → logprob: -20.625017166137695

Token 1605: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.0022360205184668303
    2. '_r' → logprob: -7.0022358894348145
    3. 'r' → logprob: -7.1272358894348145
    4. 'roots' → logprob: -7.6272358894348145
    5. 'ro' → logprob: -10.877236366271973
    6. '_root' → logprob: -12.752236366271973
    7. 'root' → logprob: -13.252236366271973
    8. '{
' → logprob: -13.502236366271973
    9. '
' → logprob: -13.627236366271973
    10. '_positions' → logprob: -13.627236366271973

Token 1606: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0020957801025360823
    2. 'ts' → logprob: -7.127095699310303
    3. 'sts' → logprob: -7.377095699310303
    4. 'oted' → logprob: -8.252096176147461
    5. 'uts' → logprob: -9.127096176147461
    6. 'pts' → logprob: -10.002096176147461
    7. 's' → logprob: -10.252096176147461
    8. 'ot' → logprob: -10.752096176147461
    9. '[' → logprob: -10.877096176147461
    10. 'ints' → logprob: -10.877096176147461

Token 1607: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12446420639753342
    2. ':' → logprob: -2.249464273452759
    3. '[' → logprob: -5.37446403503418
    4. '               ' → logprob: -6.12446403503418
    5. 'in' → logprob: -6.62446403503418
    6. '):
' → logprob: -6.99946403503418
    7. '       ' → logprob: -7.24946403503418
    8. ' in' → logprob: -7.62446403503418
    9. ',' → logprob: -7.74946403503418
    10. '           ' → logprob: -8.37446403503418

Token 1608: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006838412955403328
    2. ' if' → logprob: -7.750683784484863
    3. 'if' → logprob: -9.500683784484863
    4. '```' → logprob: -10.125683784484863
    5. '
' → logprob: -10.375683784484863
    6. '           ' → logprob: -10.875683784484863
    7. ',' → logprob: -11.000683784484863
    8. '<|end|>' → logprob: -11.125683784484863
    9. '                   ' → logprob: -11.250683784484863
    10. '                
' → logprob: -11.250683784484863

Token 1609: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.10300185531377792
    2. 'if' → logprob: -2.603001832962036
    3. '               ' → logprob: -4.353002071380615
    4. ' if' → logprob: -5.478002071380615
    5. ' min' → logprob: -6.103002071380615
    6. '           ' → logprob: -6.228002071380615
    7. '[min' → logprob: -6.978002071380615
    8. 'interval' → logprob: -7.228002071380615
    9. 'l' → logprob: -8.353001594543457
    10. 'pos' → logprob: -8.478001594543457

Token 1610: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0023693470284342766
    2. 'pos' → logprob: -6.377369403839111
    3. '(min' → logprob: -7.627369403839111
    4. 'min' → logprob: -9.627368927001953
    5. '_' → logprob: -10.627368927001953
    6. '=min' → logprob: -10.752368927001953
    7. '[min' → logprob: -10.877368927001953
    8. '_min' → logprob: -11.127368927001953
    9. '_position' → logprob: -11.752368927001953
    10. '[' → logprob: -12.002368927001953

Token 1611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3135829567909241
    2. ' =' → logprob: -1.3135828971862793
    3. '=min' → logprob: -8.063583374023438
    4. '=
' → logprob: -12.438583374023438
    5. '.=' → logprob: -14.938583374023438
    6. ')=' → logprob: -15.063583374023438
    7. '<|end|>' → logprob: -15.188583374023438
    8. '   ' → logprob: -15.313583374023438
    9. ',' → logprob: -15.438583374023438
    10. ']=' → logprob: -15.688583374023438

Token 1612: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.47407716512680054
    2. ' min' → logprob: -0.9740771651268005
    3. '	min' → logprob: -15.849077224731445
    4. '(min' → logprob: -17.349077224731445
    5. '.min' → logprob: -18.599077224731445
    6. '_min' → logprob: -18.724077224731445
    7. '[min' → logprob: -18.849077224731445
    8. '=min' → logprob: -18.974077224731445
    9. ',min' → logprob: -19.224077224731445
    10. 'max' → logprob: -19.849077224731445

Token 1613: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.015315104275941849
    2. '(interval' → logprob: -4.265315055847168
    3. 'min' → logprob: -7.515315055847168
    4. 'interval' → logprob: -7.515315055847168
    5. '(' → logprob: -10.015315055847168
    6. '(
' → logprob: -11.140315055847168
    7. '(int' → logprob: -14.390315055847168
    8. '(in' → logprob: -14.640315055847168
    9. '[min' → logprob: -15.390315055847168
    10. ' min' → logprob: -15.515315055847168

Token 1614: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0041134231723845005
    2. 'pos' → logprob: -5.50411319732666
    3. 'Pos' → logprob: -11.25411319732666
    4. 'interval' → logprob: -12.12911319732666
    5. '(interval' → logprob: -12.62911319732666
    6. '[
' → logprob: -13.00411319732666
    7. 'min' → logprob: -13.12911319732666
    8. '(
' → logprob: -13.50411319732666
    9. '(min' → logprob: -13.75411319732666
    10. 'positions' → logprob: -13.87911319732666

Token 1615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002514188876375556
    2. ',r' → logprob: -6.377514362335205
    3. ',
' → logprob: -7.627514362335205
    4. ' ,' → logprob: -8.377513885498047
    5. ',int' → logprob: -10.252513885498047
    6. ',min' → logprob: -11.752513885498047
    7. '<|end|>' → logprob: -12.127513885498047
    8. ',b' → logprob: -12.877513885498047
    9. 'r' → logprob: -13.002513885498047
    10. ',index' → logprob: -13.127513885498047

Token 1616: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0009120595059357584
    2. ' intervals' → logprob: -7.000912189483643
    3. '(interval' → logprob: -14.500911712646484
    4. '
' → logprob: -16.625911712646484
    5. '           ' → logprob: -18.500911712646484
    6. ' interval' → logprob: -18.750911712646484
    7. '```' → logprob: -19.125911712646484
    8. '            
' → logprob: -20.000911712646484
    9. 'int' → logprob: -20.000911712646484
    10. '   ' → logprob: -20.375911712646484

Token 1617: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0004487844998948276
    2. 'r' → logprob: -7.750448703765869
    3. '[
' → logprob: -11.250449180603027
    4. '[' → logprob: -12.250449180603027
    5. ' r' → logprob: -15.500449180603027
    6. '(r' → logprob: -16.50044822692871
    7. '
' → logprob: -18.37544822692871
    8. ' [' → logprob: -19.00044822692871
    9. '	r' → logprob: -19.12544822692871
    10. ',r' → logprob: -20.75044822692871

Token 1618: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009495720732957125
    2. '[' → logprob: -7.125949382781982
    3. ' ][' → logprob: -9.50094985961914
    4. '   ' → logprob: -11.00094985961914
    5. 'r' → logprob: -11.25094985961914
    6. '0' → logprob: -11.25094985961914
    7. '[r' → logprob: -11.87594985961914
    8. ']' → logprob: -12.12594985961914
    9. '
' → logprob: -13.25094985961914
    10. '"][' → logprob: -13.50094985961914

Token 1619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '
' → logprob: -12.875005722045898
    3. '[' → logprob: -13.625005722045898
    4. '1' → logprob: -14.500005722045898
    5. '][' → logprob: -15.375005722045898
    6. '   ' → logprob: -15.500005722045898
    7. ' ' → logprob: -16.1250057220459
    8. '```' → logprob: -16.3750057220459
    9. '۰' → logprob: -16.5000057220459
    10. ']' → logprob: -17.1875057220459

Token 1620: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3726382255554199
    2. ')' → logprob: -1.62263822555542
    3. '])
' → logprob: -2.37263822555542
    4. '])' → logprob: -4.24763822555542
    5. ' )
' → logprob: -5.62263822555542
    6. '           ' → logprob: -7.12263822555542
    7. ',' → logprob: -7.12263822555542
    8. ' )' → logprob: -7.99763822555542
    9. '               ' → logprob: -8.497638702392578
    10. ' ])
' → logprob: -8.997638702392578

Token 1621: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5321255922317505
    2. '               ' → logprob: -1.2821255922317505
    3. '           ' → logprob: -2.407125473022461
    4. '<|end|>' → logprob: -3.782125473022461
    5. '                   ' → logprob: -5.032125473022461
    6. ')
' → logprob: -5.282125473022461
    7. ',' → logprob: -5.907125473022461
    8. '                           ' → logprob: -6.657125473022461
    9. '            ' → logprob: -6.657125473022461
    10. '             ' → logprob: -7.032125473022461

Token 1622: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0009153862483799458
    2. ' max' → logprob: -7.00091552734375
    3. '           ' → logprob: -12.50091552734375
    4. '_max' → logprob: -16.87591552734375
    5. '               ' → logprob: -17.00091552734375
    6. '	max' → logprob: -17.00091552734375
    7. '(max' → logprob: -18.87591552734375
    8. '.max' → logprob: -18.87591552734375
    9. '```' → logprob: -18.87591552734375
    10. 'Max' → logprob: -19.25091552734375

Token 1623: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.370294846012257e-05
    2. '_' → logprob: -10.750043869018555
    3. 'Pos' → logprob: -11.500043869018555
    4. 'pos' → logprob: -12.375043869018555
    5. '```' → logprob: -13.625043869018555
    6. '+' → logprob: -13.750043869018555
    7. ' _' → logprob: -13.875043869018555
    8. '_positions' → logprob: -14.000043869018555
    9. '_POS' → logprob: -14.375043869018555
    10. '(' → logprob: -14.500043869018555

Token 1624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12702354788780212
    2. ' =' → logprob: -2.127023458480835
    3. ',' → logprob: -9.627023696899414
    4. '=max' → logprob: -11.252023696899414
    5. '<|end|>' → logprob: -11.502023696899414
    6. ')' → logprob: -13.502023696899414
    7. '+=' → logprob: -13.627023696899414
    8. '=
' → logprob: -14.002023696899414
    9. ' ,' → logprob: -14.127023696899414
    10. '+' → logprob: -14.627023696899414

Token 1625: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.038042064756155014
    2. ' max' → logprob: -3.2880420684814453
    3. '(max' → logprob: -14.788042068481445
    4. ' intervals' → logprob: -15.788042068481445
    5. 'interval' → logprob: -17.038042068481445
    6. '_max' → logprob: -18.038042068481445
    7. '=max' → logprob: -18.038042068481445
    8. '	max' → logprob: -18.538042068481445
    9. ',max' → logprob: -18.788042068481445
    10. 'min' → logprob: -18.788042068481445

Token 1626: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00020056030189152807
    2. 'max' → logprob: -8.750200271606445
    3. '(' → logprob: -11.125200271606445
    4. '_pos' → logprob: -11.625200271606445
    5. '(min' → logprob: -11.750200271606445
    6. '[max' → logprob: -13.250200271606445
    7. '=max' → logprob: -13.250200271606445
    8. '_max' → logprob: -13.375200271606445
    9. 'interval' → logprob: -13.625200271606445
    10. '```' → logprob: -14.125200271606445

Token 1627: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0041725412011146545
    2. '(max' → logprob: -6.379172325134277
    3. 'pos' → logprob: -6.629172325134277
    4. 'max' → logprob: -6.879172325134277
    5. 'Pos' → logprob: -9.754172325134277
    6. '[max' → logprob: -10.504172325134277
    7. '```' → logprob: -11.504172325134277
    8. '(' → logprob: -12.504172325134277
    9. 'interval' → logprob: -13.129172325134277
    10. '_POS' → logprob: -13.379172325134277

Token 1628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.74546217918396
    2. '[max' → logprob: -1.24546217918396
    3. '(max' → logprob: -1.49546217918396
    4. ',max' → logprob: -4.370462417602539
    5. '(interval' → logprob: -8.370462417602539
    6. 'max' → logprob: -8.745462417602539
    7. 'interval' → logprob: -8.870462417602539
    8. '```' → logprob: -9.370462417602539
    9. '[min' → logprob: -9.745462417602539
    10. '[' → logprob: -9.745462417602539

Token 1629: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0015034328680485487
    2. ' intervals' → logprob: -6.5015034675598145
    3. '(interval' → logprob: -13.876502990722656
    4. '
' → logprob: -16.251502990722656
    5. ' interval' → logprob: -17.751502990722656
    6. '           ' → logprob: -18.501502990722656
    7. '   ' → logprob: -18.626502990722656
    8. 'iterations' → logprob: -18.876502990722656
    9. 'int' → logprob: -19.376502990722656
    10. '       ' → logprob: -19.376502990722656

Token 1630: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.1008713702030946e-06
    2. 'r' → logprob: -13.375001907348633
    3. '[' → logprob: -14.875001907348633
    4. '[
' → logprob: -17.250001907348633
    5. '
' → logprob: -17.625001907348633
    6. '[m' → logprob: -18.250001907348633
    7. '(r' → logprob: -18.250001907348633
    8. '	r' → logprob: -18.375001907348633
    9. '[t' → logprob: -20.125001907348633
    10. '[max' → logprob: -20.250001907348633

Token 1631: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.027035502716898918
    2. '[r' → logprob: -3.6520354747772217
    3. '[' → logprob: -7.777035713195801
    4. ')[' → logprob: -8.6520357131958
    5. ']' → logprob: -9.4020357131958
    6. ' ][' → logprob: -10.9020357131958
    7. '}[' → logprob: -11.5270357131958
    8. '   ' → logprob: -12.2770357131958
    9. ']
' → logprob: -12.5270357131958
    10. 'r' → logprob: -12.6520357131958

Token 1632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.526570384972729e-05
    2. '[' → logprob: -10.375055313110352
    3. '
' → logprob: -11.625055313110352
    4. ' ' → logprob: -12.687555313110352
    5. 'max' → logprob: -12.937555313110352
    6. ']' → logprob: -13.062555313110352
    7. '   ' → logprob: -13.312555313110352
    8. '```' → logprob: -13.937555313110352
    9. 'r' → logprob: -14.187555313110352
    10. '0' → logprob: -14.187555313110352

Token 1633: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009796975646167994
    2. ')
' → logprob: -7.500979900360107
    3. '])' → logprob: -8.62597942352295
    4. '               ' → logprob: -9.25097942352295
    5. '           ' → logprob: -9.62597942352295
    6. ']' → logprob: -10.25097942352295
    7. '+' → logprob: -10.50097942352295
    8. ' )' → logprob: -12.00097942352295
    9. ')]' → logprob: -12.12597942352295
    10. '                   ' → logprob: -12.87597942352295

Token 1634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33088573813438416
    2. '
' → logprob: -1.3308857679367065
    3. ' return' → logprob: -5.330885887145996
    4. 'return' → logprob: -5.455885887145996
    5. ' 
' → logprob: -6.205885887145996
    6. '            
' → logprob: -6.205885887145996
    7. '       ' → logprob: -6.455885887145996
    8. '<|end|>' → logprob: -7.330885887145996
    9. '  
' → logprob: -7.705885887145996
    10. '```' → logprob: -8.080885887145996

Token 1635: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02285545878112316
    2. '           ' → logprob: -3.897855520248413
    3. 'length' → logprob: -6.647855281829834
    4. ' return' → logprob: -7.897855281829834
    5. '
' → logprob: -8.647855758666992
    6. '#' (adapté à ' #') → logprob: -8.647855758666992
    7. 'distance' → logprob: -9.647855758666992
    8. 'min' → logprob: -10.022855758666992
    9. '       ' → logprob: -10.022855758666992
    10. '```' → logprob: -10.147855758666992

Token 1636: ' Minimal' (ID: 99472)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07162325084209442
    2. '           ' → logprob: -2.8216233253479004
    3. 'length' → logprob: -5.5716233253479
    4. '#' → logprob: -5.6966233253479
    5. '       ' → logprob: -7.3216233253479
    6. 'result' → logprob: -7.3216233253479
    7. ' return' → logprob: -7.8216233253479
    8. 'min' → logprob: -8.321622848510742
    9. 'answer' → logprob: -9.071622848510742
    10. '   ' → logprob: -9.196622848510742

Token 1637: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.39984330534935
    2. '_length' → logprob: -1.7748433351516724
    3. 'length' → logprob: -1.8998433351516724
    4. ' _' → logprob: -6.024843215942383
    5. ' walking' → logprob: -6.149843215942383
    6. '_' → logprob: -6.524843215942383
    7. ' =' → logprob: -6.524843215942383
    8. ' return' → logprob: -7.274843215942383
    9. '_walk' → logprob: -7.399843215942383
    10. 'distance' → logprob: -7.899843215942383

Token 1638: ' travel' (ID: 6410)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047327592968940735
    2. '=' → logprob: -3.1723275184631348
    3. ' return' → logprob: -6.172327518463135
    4. 'return' → logprob: -7.047327518463135
    5. '           ' → logprob: -7.172327518463135
    6. ':' → logprob: -8.922327995300293
    7. '
' → logprob: -9.297327995300293
    8. ' is' → logprob: -9.422327995300293
    9. ' =
' → logprob: -9.922327995300293
    10. '            ' → logprob: -10.172327995300293

Token 1639: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12370594590902328
    2. '=' → logprob: -2.6237058639526367
    3. '           ' → logprob: -3.6237058639526367
    4. ' return' → logprob: -4.498705863952637
    5. 'return' → logprob: -5.873705863952637
    6. ' is' → logprob: -6.373705863952637
    7. '
' → logprob: -8.123705863952637
    8. ':' → logprob: -8.248705863952637
    9. '       ' → logprob: -8.623705863952637
    10. '               ' → logprob: -8.748705863952637

Token 1640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008505602367222309
    2. ' return' → logprob: -5.133505821228027
    3. 'return' → logprob: -6.008505821228027
    4. '               ' → logprob: -9.883505821228027
    5. '       ' → logprob: -10.383505821228027
    6. '            ' → logprob: -12.008505821228027
    7. '   ' → logprob: -12.133505821228027
    8. '          ' → logprob: -12.383505821228027
    9. '```' → logprob: -12.508505821228027
    10. '`' → logprob: -12.633505821228027

Token 1641: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11867079138755798
    2. '           ' → logprob: -2.618670701980591
    3. 'length' → logprob: -3.993670701980591
    4. ' return' → logprob: -4.11867094039917
    5. '       ' → logprob: -6.24367094039917
    6. 'min' → logprob: -6.99367094039917
    7. 'result' → logprob: -7.99367094039917
    8. ' length' → logprob: -8.118670463562012
    9. 'answer' → logprob: -8.743670463562012
    10. 'distance' → logprob: -8.868670463562012

Token 1642: ' start' (ID: 1604)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5097394585609436
    2. ' return' → logprob: -1.1347393989562988
    3. '           ' → logprob: -2.759739398956299
    4. '       ' → logprob: -5.509739398956299
    5. 'length' → logprob: -5.759739398956299
    6. 'min' → logprob: -5.884739398956299
    7. ' min' → logprob: -7.009739398956299
    8. '```' → logprob: -7.009739398956299
    9. ' length' → logprob: -7.134739398956299
    10. 'distance' → logprob: -7.384739398956299

Token 1643: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4539859890937805
    2. '_pos' → logprob: -2.3289859294891357
    3. 'from' → logprob: -2.4539859294891357
    4. '_distance' → logprob: -2.9539859294891357
    5. ' =' → logprob: -3.5789859294891357
    6. '(' → logprob: -3.7039859294891357
    7. '_position' → logprob: -3.9539859294891357
    8. 'distance' → logprob: -4.078986167907715
    9. 'pos' → logprob: -4.453986167907715
    10. '+' → logprob: -4.828986167907715

Token 1644: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1443098783493042
    2. 'min' → logprob: -2.0193099975585938
    3. 'max' → logprob: -6.769309997558594
    4. ' min' → logprob: -8.394309997558594
    5. ' ' → logprob: -9.144309997558594
    6. '
' → logprob: -9.769309997558594
    7. '(min' → logprob: -10.894309997558594
    8. '   ' → logprob: -11.144309997558594
    9. '`' → logprob: -11.769309997558594
    10. '[min' → logprob: -11.894309997558594

Token 1645: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08974563330411911
    2. 'min' → logprob: -2.46474552154541
    3. ' min' → logprob: -7.96474552154541
    4. ' ' → logprob: -8.21474552154541
    5. 'max' → logprob: -8.96474552154541
    6. '(min' → logprob: -11.58974552154541
    7. '
' → logprob: -11.58974552154541
    8. '   ' → logprob: -12.08974552154541
    9. '[min' → logprob: -12.08974552154541
    10. 'entr' → logprob: -12.46474552154541

Token 1646: ',
' (ID: 412)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17995475232601166
    2. '+' → logprob: -1.8049547672271729
    3. '           ' → logprob: -9.804954528808594
    4. ' +
' → logprob: -10.179954528808594
    5. ')' → logprob: -10.554954528808594
    6. '+
' → logprob: -10.554954528808594
    7. '
' → logprob: -11.054954528808594
    8. ',' → logprob: -11.429954528808594
    9. ')+' → logprob: -11.679954528808594
    10. '+(' → logprob: -12.304954528808594

Token 1647: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12873947620391846
    2. '+' → logprob: -2.128739356994629
    3. '           ' → logprob: -6.878739356994629
    4. ' +
' → logprob: -7.503739356994629
    5. '+
' → logprob: -9.253739356994629
    6. 'min' → logprob: -10.378739356994629
    7. '            ' → logprob: -10.878739356994629
    8. ')' → logprob: -11.003739356994629
    9. ')+' → logprob: -11.628739356994629
    10. '
' → logprob: -11.753739356994629

Token 1648: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6568300724029541
    2. ' +' → logprob: -0.7818300724029541
    3. '           ' → logprob: -4.531829833984375
    4. '+
' → logprob: -5.781829833984375
    5. '#' (adapté à ' #') → logprob: -5.906829833984375
    6. ' +
' → logprob: -6.031829833984375
    7. ' #' → logprob: -6.406829833984375
    8. '
' → logprob: -7.406829833984375
    9. 'distance' → logprob: -7.781829833984375
    10. ')' → logprob: -7.906829833984375

Token 1649: ' walk' (ID: 5229)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7791993021965027
    2. 'min' → logprob: -0.9041993021965027
    3. 'distance' → logprob: -2.6541993618011475
    4. '           ' → logprob: -4.154199123382568
    5. 'total' → logprob: -4.904199123382568
    6. '   ' → logprob: -5.029199123382568
    7. '+' → logprob: -5.029199123382568
    8. ' length' → logprob: -5.279199123382568
    9. 'max' → logprob: -5.279199123382568
    10. ' min' → logprob: -5.654199123382568

Token 1650: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6025161743164062
    2. ' from' → logprob: -1.9775161743164062
    3. 'to' → logprob: -2.1025161743164062
    4. ' to' → logprob: -2.6025161743164062
    5. 'max' → logprob: -2.7275161743164062
    6. ' max' → logprob: -3.2275161743164062
    7. ' +' → logprob: -5.727516174316406
    8. '+' → logprob: -6.227516174316406
    9. '(max' → logprob: -6.477516174316406
    10. ' up' → logprob: -6.602516174316406

Token 1651: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015779515961185098
    2. 'max' → logprob: -6.501577854156494
    3. ' min' → logprob: -9.501578330993652
    4. '	min' → logprob: -15.501578330993652
    5. '[min' → logprob: -15.626578330993652
    6. '(min' → logprob: -15.751578330993652
    7. ' max' → logprob: -15.876578330993652
    8. '
' → logprob: -16.376577377319336
    9. '   ' → logprob: -17.251577377319336
    10. '_min' → logprob: -18.251577377319336

Token 1652: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.8789383830153383e-05
    2. '_' → logprob: -11.125019073486328
    3. 'pos' → logprob: -12.875019073486328
    4. '_position' → logprob: -14.750019073486328
    5. '_p' → logprob: -15.625019073486328
    6. '_
' → logprob: -15.750019073486328
    7. '\' → logprob: -16.125019073486328
    8. ')' → logprob: -16.125019073486328
    9. '
' → logprob: -16.500019073486328
    10. ' _' → logprob: -16.500019073486328

Token 1653: ',
' (ID: 412)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6336036920547485
    2. ' +' → logprob: -0.8836036920547485
    3. '           ' → logprob: -3.633603572845459
    4. ',' → logprob: -4.758603572845459
    5. ')' → logprob: -4.883603572845459
    6. '-' → logprob: -5.758603572845459
    7. '+
' → logprob: -5.883603572845459
    8. '
' → logprob: -6.133603572845459
    9. ' +
' → logprob: -6.508603572845459
    10. ',
' → logprob: -7.008603572845459

Token 1654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7001897692680359
    2. '+' → logprob: -1.3251898288726807
    3. ' +' → logprob: -1.7001898288726807
    4. 'max' → logprob: -3.0751898288726807
    5. '            ' → logprob: -5.575189590454102
    6. ' max' → logprob: -6.700189590454102
    7. '               ' → logprob: -7.700189590454102
    8. '#' → logprob: -7.825189590454102
    9. 'then' → logprob: -7.825189590454102
    10. '+
' → logprob: -8.075189590454102

Token 1655: ' #' (ID: 1069)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2152053415775299
    2. '+' → logprob: -2.215205430984497
    3. '           ' → logprob: -3.215205430984497
    4. '
' → logprob: -4.090205192565918
    5. ' +
' → logprob: -4.465205192565918
    6. '+
' → logprob: -5.340205192565918
    7. ',' → logprob: -6.340205192565918
    8. ' then' → logprob: -6.715205192565918
    9. '       ' → logprob: -6.840205192565918
    10. '   ' → logprob: -6.965205192565918

Token 1656: ' cover' (ID: 4321)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.1314316838979721
    2. ' walk' → logprob: -2.3814315795898438
    3. 'max' → logprob: -3.8814315795898438
    4. 'then' → logprob: -5.631431579589844
    5. '
' → logprob: -5.881431579589844
    6. '+' → logprob: -6.506431579589844
    7. 'travel' → logprob: -7.756431579589844
    8. 'go' → logprob: -7.756431579589844
    9. ' then' → logprob: -8.256431579589844
    10. ' max' → logprob: -8.506431579589844

Token 1657: ' segment' (ID: 14806)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.47485077381134033
    2. 'max' → logprob: -0.9748507738113403
    3. '(max' → logprob: -7.849850654602051
    4. ' (' → logprob: -8.34985065460205
    5. ' ' → logprob: -10.34985065460205
    6. ' the' → logprob: -10.97485065460205
    7. '_max' → logprob: -11.22485065460205
    8. '[max' → logprob: -11.22485065460205
    9. '`' → logprob: -11.34985065460205
    10. '(' → logprob: -11.72485065460205

Token 1658: ' min' (ID: 1349)
  Prédit: '[max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[max' → logprob: -1.26895010471344
    2. '[min' → logprob: -1.39395010471344
    3. ' from' → logprob: -1.76895010471344
    4. 'max' → logprob: -2.0189499855041504
    5. 'from' → logprob: -2.8939499855041504
    6. ' max' → logprob: -3.6439499855041504
    7. ' [' → logprob: -3.8939499855041504
    8. '[' → logprob: -3.8939499855041504
    9. '(max' → logprob: -4.26894998550415
    10. 'min' → logprob: -5.26894998550415

Token 1659: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.003700200468301773
    2. '_' → logprob: -5.628700256347656
    3. '_
' → logprob: -9.878700256347656
    4. '```' → logprob: -11.503700256347656
    5. ' _' → logprob: -11.628700256347656
    6. '_,' → logprob: -11.878700256347656
    7. '+' → logprob: -12.628700256347656
    8. '   ' → logprob: -13.253700256347656
    9. ',' → logprob: -13.253700256347656
    10. '
' → logprob: -13.503700256347656

Token 1660: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32956886291503906
    2. ',
' → logprob: -1.454568862915039
    3. '
' → logprob: -3.954568862915039
    4. '...' → logprob: -4.954568862915039
    5. '<|end|>' → logprob: -5.204568862915039
    6. ',max' → logprob: -5.329568862915039
    7. ' ,' → logprob: -6.204568862915039
    8. '           ' → logprob: -6.579568862915039
    9. ':max' → logprob: -7.454568862915039
    10. '   ' → logprob: -7.454568862915039

Token 1661: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141421258449554
    2. ' max' → logprob: -1.7014142274856567
    3. '_max' → logprob: -14.826414108276367
    4. ' maximal' → logprob: -15.326414108276367
    5. '	max' → logprob: -16.076414108276367
    6. '(max' → logprob: -16.201414108276367
    7. ' ' → logprob: -17.326414108276367
    8. ' maxi' → logprob: -17.326414108276367
    9. ' ' → logprob: -17.701414108276367
    10. ',max' → logprob: -18.076414108276367

Token 1662: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001544321421533823
    2. '+' → logprob: -9.250154495239258
    3. '_' → logprob: -10.125154495239258
    4. 'pos' → logprob: -12.000154495239258
    5. '```' → logprob: -12.125154495239258
    6. 'Pos' → logprob: -12.375154495239258
    7. '_
' → logprob: -15.000154495239258
    8. '\' → logprob: -15.375154495239258
    9. ' _' → logprob: -15.500154495239258
    10. ')' → logprob: -15.625154495239258

Token 1663: ' and' (ID: 326)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3630335330963135
    2. '+' → logprob: -1.4880335330963135
    3. '           ' → logprob: -2.6130335330963135
    4. '
' → logprob: -6.113033294677734
    5. '+
' → logprob: -6.738033294677734
    6. ')' → logprob: -7.113033294677734
    7. ' +
' → logprob: -7.738033294677734
    8. ')+' → logprob: -8.363033294677734
    9. ',' → logprob: -8.738033294677734
    10. ',
' → logprob: -9.488033294677734

Token 1664: ' back' (ID: 1602)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -1.1597788333892822
    2. 'return' → logprob: -1.2847788333892822
    3. 'then' → logprob: -1.2847788333892822
    4. ' return' → logprob: -2.1597788333892822
    5. 'back' → logprob: -4.784778594970703
    6. ' back' → logprob: -4.909778594970703
    7. '+' → logprob: -8.034778594970703
    8. 'exit' → logprob: -8.034778594970703
    9. 'continue' → logprob: -8.159778594970703
    10. ' ' → logprob: -8.534778594970703

Token 1665: ' if' (ID: 538)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4725706875324249
    2. '           ' → logprob: -1.2225706577301025
    3. '+' → logprob: -2.8475706577301025
    4. ' +
' → logprob: -4.597570896148682
    5. '
' → logprob: -4.722570896148682
    6. '+
' → logprob: -5.472570896148682
    7. ')' → logprob: -8.722570419311523
    8. ',' → logprob: -8.972570419311523
    9. '```' → logprob: -9.097570419311523
    10. '               ' → logprob: -9.097570419311523

Token 1666: ' needed' (ID: 6118)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6565090417861938
    2. ' max' → logprob: -0.7815090417861938
    3. ' needed' → logprob: -4.281508922576904
    4. 'min' → logprob: -5.656508922576904
    5. ' min' → logprob: -5.906508922576904
    6. 'needed' → logprob: -6.656508922576904
    7. ' necessary' → logprob: -7.156508922576904
    8. ' minimal' → logprob: -8.406509399414062
    9. ' maximal' → logprob: -8.781509399414062
    10. '(max' → logprob: -9.031509399414062

Token 1667: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2640666365623474
    2. ' +' → logprob: -1.7640666961669922
    3. '+' → logprob: -3.014066696166992
    4. '
' → logprob: -5.639066696166992
    5. '+
' → logprob: -6.014066696166992
    6. ',' → logprob: -6.389066696166992
    7. ' +
' → logprob: -6.389066696166992
    8. '   ' → logprob: -7.764066696166992
    9. '       ' → logprob: -8.014066696166992
    10. 'return' → logprob: -8.389066696166992

Token 1668: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005212297663092613
    2. ' +' → logprob: -6.380212306976318
    3. '+' → logprob: -6.880212306976318
    4. '+
' → logprob: -7.380212306976318
    5. '#' → logprob: -7.505212306976318
    6. '
' → logprob: -7.630212306976318
    7. '               ' → logprob: -9.13021183013916
    8. ',
' → logprob: -9.25521183013916
    9. '\' → logprob: -9.25521183013916
    10. ',' → logprob: -9.38021183013916

Token 1669: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03974927216768265
    2. '+' → logprob: -3.9147493839263916
    3. '#' (adapté à ' #') → logprob: -4.9147491455078125
    4. ' +' → logprob: -4.9147491455078125
    5. '+
' → logprob: -5.7897491455078125
    6. ' +
' → logprob: -8.289749145507812
    7. '       ' → logprob: -8.539749145507812
    8. '   ' → logprob: -8.789749145507812
    9. '               ' → logprob: -9.164749145507812
    10. '          ' → logprob: -9.289749145507812

Token 1670: ' then' (ID: 1815)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.406227946281433
    2. ' +' → logprob: -1.656227946281433
    3. 'return' → logprob: -1.781227946281433
    4. ' return' → logprob: -1.781227946281433
    5. '           ' → logprob: -1.906227946281433
    6. '+
' → logprob: -3.6562280654907227
    7. 'length' → logprob: -3.9062280654907227
    8. ' plus' → logprob: -4.281228065490723
    9. ' +
' → logprob: -5.531228065490723
    10. ' length' → logprob: -5.781228065490723

Token 1671: ' exit' (ID: 10654)
  Prédit: ' walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walk' → logprob: -0.0556630864739418
    2. ' go' → logprob: -3.5556631088256836
    3. 'walk' → logprob: -4.555663108825684
    4. ' return' → logprob: -5.055663108825684
    5. '+' → logprob: -5.555663108825684
    6. ' +' → logprob: -6.305663108825684
    7. 'return' → logprob: -7.055663108825684
    8. ' continue' → logprob: -7.555663108825684
    9. ' exit' → logprob: -7.680663108825684
    10. ' proceed' → logprob: -8.430663108825684

Token 1672: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15386231243610382
    2. '
' → logprob: -3.153862237930298
    3. ' +' → logprob: -3.403862237930298
    4. '+' → logprob: -3.528862237930298
    5. '+
' → logprob: -4.153862476348877
    6. '(' → logprob: -5.903862476348877
    7. '       ' → logprob: -6.153862476348877
    8. ',
' → logprob: -6.153862476348877
    9. ' +
' → logprob: -6.153862476348877
    10. ' (' → logprob: -6.278862476348877

Token 1673: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07893175631761551
    2. ' self' → logprob: -2.5789318084716797
    3. 'max' → logprob: -11.20393180847168
    4. '(self' → logprob: -11.57893180847168
    5. ' max' → logprob: -12.07893180847168
    6. '[self' → logprob: -12.07893180847168
    7. '
' → logprob: -13.45393180847168
    8. '`' → logprob: -13.70393180847168
    9. '           ' → logprob: -14.07893180847168
    10. 'n' → logprob: -14.07893180847168

Token 1674: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.006006828509271e-05
    2. ' +' → logprob: -9.500080108642578
    3. '+
' → logprob: -12.750080108642578
    4. '
' → logprob: -13.750080108642578
    5. '   ' → logprob: -15.375080108642578
    6. ')+' → logprob: -15.500080108642578
    7. '```' → logprob: -15.625080108642578
    8. '           ' → logprob: -16.375080108642578
    9. '       ' → logprob: -16.625080108642578
    10. ')' → logprob: -16.625080108642578

Token 1675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '+' → logprob: -14.125001907348633
    3. '```' → logprob: -14.875001907348633
    4. '
' → logprob: -15.000001907348633
    5. ' ' → logprob: -16.000001907348633
    6. '2' → logprob: -16.125001907348633
    7. '<|end|>' → logprob: -17.000001907348633
    8. '`' → logprob: -18.375001907348633
    9. '[' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.625001907348633

Token 1676: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21692945063114166
    2. '
' → logprob: -1.7169294357299805
    3. 'return' → logprob: -4.5919294357299805
    4. ' return' → logprob: -6.0919294357299805
    5. '       ' → logprob: -6.8419294357299805
    6. '            
' → logprob: -7.2169294357299805
    7. '
' → logprob: -8.84192943572998
    8. ' +' → logprob: -9.34192943572998
    9. '```' → logprob: -9.46692943572998
    10. ' 
' → logprob: -9.46692943572998

Token 1677: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010426300577819347
    2. ' return' → logprob: -5.1354265213012695
    3. 'return' → logprob: -5.5104265213012695
    4. '
' → logprob: -9.51042652130127
    5. '       ' → logprob: -9.51042652130127
    6. '            
' → logprob: -9.51042652130127
    7. '```' → logprob: -10.01042652130127
    8. '\n' → logprob: -10.51042652130127
    9. '   ' → logprob: -10.51042652130127
    10. ' 
' → logprob: -10.63542652130127

Token 1678: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3153383135795593
    2. 'return' → logprob: -1.565338373184204
    3. ' return' → logprob: -3.315338373184204
    4. '
' → logprob: -3.815338373184204
    5. '       ' → logprob: -6.315338134765625
    6. '            
' → logprob: -7.190338134765625
    7. '```' → logprob: -9.315338134765625
    8. ' 
' → logprob: -9.315338134765625
    9. '        
' → logprob: -9.565338134765625
    10. '\' → logprob: -10.065338134765625

Token 1679: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3426429033279419
    2. 'length' → logprob: -2.4676427841186523
    3. '           ' → logprob: -2.5926427841186523
    4. 'distance' → logprob: -2.7176427841186523
    5. '       ' → logprob: -3.9676427841186523
    6. 'dist' → logprob: -4.342642784118652
    7. ' return' → logprob: -4.592642784118652
    8. '   ' → logprob: -4.592642784118652
    9. 'result' → logprob: -5.967642784118652
    10. 'total' → logprob: -6.342642784118652

Token 1680: ' cost' (ID: 3097)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.5912431478500366
    2. ' minimal' → logprob: -1.5912431478500366
    3. ' length' → logprob: -1.7162431478500366
    4. ' result' → logprob: -1.9662431478500366
    5. 'distance' → logprob: -2.466243267059326
    6. 'return' → logprob: -3.216243267059326
    7. 'result' → logprob: -3.466243267059326
    8. 'length' → logprob: -3.466243267059326
    9. ' distance' → logprob: -3.591243267059326
    10. ' #' → logprob: -4.091243267059326

Token 1681: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14447392523288727
    2. '=' → logprob: -2.0194740295410156
    3. ' ' → logprob: -7.519474029541016
    4. ' +=' → logprob: -7.644474029541016
    5. ' is' → logprob: -8.519474029541016
    6. ')' → logprob: -8.519474029541016
    7. '_' → logprob: -9.269474029541016
    8. ':' → logprob: -9.519474029541016
    9. '+' → logprob: -10.019474029541016
    10. '   ' → logprob: -10.269474029541016

Token 1682: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.6530755162239075
    2. ' (' → logprob: -1.0280754566192627
    3. 'max' → logprob: -2.5280754566192627
    4. ' max' → logprob: -4.028075695037842
    5. '(' → logprob: -4.403075695037842
    6. '(min' → logprob: -4.528075695037842
    7. 'min' → logprob: -7.653075695037842
    8. '2' → logprob: -8.278075218200684
    9. ' min' → logprob: -8.903075218200684
    10. '   ' → logprob: -9.153075218200684

Token 1683: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09250859916210175
    2. '(max' → logprob: -2.842508554458618
    3. ' max' → logprob: -3.717508554458618
    4. ' (' → logprob: -5.342508792877197
    5. '(' → logprob: -7.717508792877197
    6. 'min' → logprob: -8.967508316040039
    7. '2' → logprob: -9.467508316040039
    8. ' ' → logprob: -9.592508316040039
    9. 'abs' → logprob: -9.592508316040039
    10. '(min' → logprob: -9.842508316040039

Token 1684: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0009149204124696553
    2. '(' → logprob: -7.625915050506592
    3. '_' → logprob: -8.625914573669434
    4. '(
' → logprob: -9.000914573669434
    5. '(min' → logprob: -10.625914573669434
    6. '(_' → logprob: -10.625914573669434
    7. 'pos' → logprob: -10.875914573669434
    8. '(max' → logprob: -11.125914573669434
    9. '\' → logprob: -11.625914573669434
    10. 'Pos' → logprob: -11.875914573669434

Token 1685: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5952230095863342
    2. ')' → logprob: -1.3452229499816895
    3. '-' → logprob: -2.7202229499816895
    4. ',' → logprob: -2.9702229499816895
    5. '
' → logprob: -4.0952229499816895
    6. ' +' → logprob: -4.2202229499816895
    7. ' )' → logprob: -4.3452229499816895
    8. '+' → logprob: -5.3452229499816895
    9. ')+' → logprob: -5.7202229499816895
    10. ' ' → logprob: -5.9702229499816895

Token 1686: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048617683351039886
    2. ' ' → logprob: -3.0486176013946533
    3. ')' → logprob: -11.048617362976074
    4. '1' → logprob: -12.173617362976074
    5. '
' → logprob: -13.736117362976074
    6. '#' → logprob: -14.048617362976074
    7. '(' → logprob: -14.173617362976074
    8. ' #' → logprob: -14.173617362976074
    9. ' )' → logprob: -14.298617362976074
    10. ' 
' → logprob: -14.361117362976074

Token 1687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002491237595677376
    2. ' ' → logprob: -6.002491474151611
    3. '
' → logprob: -11.502490997314453
    4. ')' → logprob: -12.877490997314453
    5. '#' → logprob: -14.877490997314453
    6. ' 
' → logprob: -15.127490997314453
    7. ' ' → logprob: -15.252490997314453
    8. '1' → logprob: -15.627490997314453
    9. '=' → logprob: -15.752490997314453
    10. ',' → logprob: -15.877490997314453

Token 1688: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018282189266756177
    2. ')+' → logprob: -6.501828193664551
    3. ' )' → logprob: -8.25182819366455
    4. ')+(' → logprob: -10.50182819366455
    5. '+' → logprob: -11.12682819366455
    6. ')
' → logprob: -11.37682819366455
    7. ')*' → logprob: -12.62682819366455
    8. ' +' → logprob: -12.62682819366455
    9. '[' → logprob: -14.25182819366455
    10. '   ' → logprob: -14.75182819366455

Token 1689: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43677961826324463
    2. ' +' → logprob: -1.0617796182632446
    3. ')' → logprob: -4.936779499053955
    4. ' +
' → logprob: -7.811779499053955
    5. '+
' → logprob: -8.561779975891113
    6. '-' → logprob: -9.061779975891113
    7. ')+' → logprob: -9.311779975891113
    8. ' -' → logprob: -11.061779975891113
    9. ' ' → logprob: -11.936779975891113
    10. ' )' → logprob: -12.061779975891113

Token 1690: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.002395986346527934
    2. ' (' → logprob: -6.627396106719971
    3. 'max' → logprob: -7.752396106719971
    4. '(' → logprob: -7.877396106719971
    5. '(abs' → logprob: -8.877395629882812
    6. '((' → logprob: -9.752395629882812
    7. '(min' → logprob: -10.252395629882812
    8. ' ' → logprob: -11.627395629882812
    9. ' max' → logprob: -12.002395629882812
    10. '   ' → logprob: -12.877395629882812

Token 1691: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08057107031345367
    2. '(max' → logprob: -2.580571174621582
    3. ' max' → logprob: -6.455571174621582
    4. ' (' → logprob: -9.330571174621582
    5. '(' → logprob: -11.455571174621582
    6. '	max' → logprob: -13.455571174621582
    7. '[max' → logprob: -13.955571174621582
    8. 'abs' → logprob: -13.955571174621582
    9. '_max' → logprob: -14.205571174621582
    10. '(abs' → logprob: -14.330571174621582

Token 1692: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.4259644558478612e-05
    2. 'pos' → logprob: -12.250014305114746
    3. '_' → logprob: -12.375014305114746
    4. '(' → logprob: -13.500014305114746
    5. '_position' → logprob: -14.000014305114746
    6. '+' → logprob: -14.125014305114746
    7. '\' → logprob: -14.875014305114746
    8. ' _' → logprob: -14.875014305114746
    9. '
' → logprob: -15.375014305114746
    10. '(_' → logprob: -15.375014305114746

Token 1693: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0002338144404347986
    2. '-' → logprob: -8.37523365020752
    3. ')' → logprob: -13.12523365020752
    4. ' ' → logprob: -14.37523365020752
    5. ' +' → logprob: -15.12523365020752
    6. '+' → logprob: -15.50023365020752
    7. '[' → logprob: -16.250234603881836
    8. ' -
' → logprob: -17.250234603881836
    9. ' ' → logprob: -17.250234603881836
    10. '```' → logprob: -18.125234603881836

Token 1694: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.493430894101039e-05
    2. ' min' → logprob: -9.500075340270996
    3. '(min' → logprob: -19.25007438659668
    4. '	min' → logprob: -19.50007438659668
    5. '
' → logprob: -19.75007438659668
    6. '_min' → logprob: -19.75007438659668
    7. '[min' → logprob: -20.75007438659668
    8. 'mini' → logprob: -22.00007438659668
    9. '0' → logprob: -22.25007438659668
    10. '-min' → logprob: -22.62507438659668

Token 1695: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.36574100604048e-06
    2. 'pos' → logprob: -12.625004768371582
    3. '_' → logprob: -13.875004768371582
    4. '_p' → logprob: -17.625003814697266
    5. '0' → logprob: -18.500003814697266
    6. '_
' → logprob: -18.500003814697266
    7. '+' → logprob: -18.750003814697266
    8. ')' → logprob: -19.000003814697266
    9. '_)' → logprob: -19.000003814697266
    10. 'Pos' → logprob: -19.250003814697266

Token 1696: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006361891864798963
    2. ')+' → logprob: -8.000636100769043
    3. '+' → logprob: -8.250636100769043
    4. ' +' → logprob: -10.375636100769043
    5. '```' → logprob: -12.875636100769043
    6. ' )' → logprob: -13.125636100769043
    7. '[' → logprob: -13.750636100769043
    8. ')
' → logprob: -14.125636100769043
    9. '+)' → logprob: -14.375636100769043
    10. ')+(' → logprob: -15.125636100769043

Token 1697: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007124318508431315
    2. ' ' → logprob: -7.2507123947143555
    3. '1' → logprob: -13.125712394714355
    4. '
' → logprob: -15.875712394714355
    5. '3' → logprob: -16.875713348388672
    6. '```' → logprob: -17.063213348388672
    7. '   ' → logprob: -17.125713348388672
    8. '۲' → logprob: -17.688213348388672
    9. ' +' → logprob: -17.875713348388672
    10. '[' → logprob: -17.875713348388672

Token 1698: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25265389680862427
    2. ' +' → logprob: -1.5026538372039795
    3. '+
' → logprob: -8.127654075622559
    4. '           ' → logprob: -8.252654075622559
    5. ')' → logprob: -9.127654075622559
    6. ' +
' → logprob: -10.252654075622559
    7. ')+' → logprob: -11.252654075622559
    8. '               ' → logprob: -13.002654075622559
    9. '          ' → logprob: -13.502654075622559
    10. '
' → logprob: -13.502654075622559

Token 1699: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09500179439783096
    2. ' (' → logprob: -2.970001697540283
    3. '(max' → logprob: -4.095001697540283
    4. '((' → logprob: -4.220001697540283
    5. '(' → logprob: -5.220001697540283
    6. '(self' → logprob: -6.220001697540283
    7. '(min' → logprob: -8.220002174377441
    8. ' ((' → logprob: -9.345002174377441
    9. ' ' → logprob: -10.220002174377441
    10. '(abs' → logprob: -10.220002174377441

Token 1700: 'n' (ID: 77)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025868603959679604
    2. 'self' → logprob: -4.1508684158325195
    3. '(n' → logprob: -5.5258684158325195
    4. ' (' → logprob: -5.6508684158325195
    5. '((' → logprob: -6.1508684158325195
    6. '(' → logprob: -9.52586841583252
    7. ' self' → logprob: -10.02586841583252
    8. '(abs' → logprob: -11.02586841583252
    9. '   ' → logprob: -11.90086841583252
    10. 'n' → logprob: -12.52586841583252

Token 1701: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004008793330285698
    2. ' +' → logprob: -7.875401020050049
    3. '-' → logprob: -11.37540054321289
    4. ' -' → logprob: -11.87540054321289
    5. '+
' → logprob: -14.12540054321289
    6. '+-' → logprob: -14.50040054321289
    7. ')+' → logprob: -14.75040054321289
    8. '
' → logprob: -15.62540054321289
    9. '()+' → logprob: -16.50040054321289
    10. '[' → logprob: -16.62540054321289

Token 1702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03368477523326874
    2. '+' → logprob: -3.408684730529785
    3. ' ' → logprob: -11.033684730529785
    4. ' +' → logprob: -11.283684730529785
    5. ')' → logprob: -12.658684730529785
    6. '
' → logprob: -13.283684730529785
    7. '+
' → logprob: -13.658684730529785
    8. '2' → logprob: -13.783684730529785
    9. ')+' → logprob: -14.033684730529785
    10. '<|end|>' → logprob: -14.533684730529785

Token 1703: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030636915937066078
    2. '-' → logprob: -3.53063702583313
    3. ')' → logprob: -7.030636787414551
    4. ')-' → logprob: -14.40563678741455
    5. '-)' → logprob: -14.78063678741455
    6. ' ' → logprob: -15.78063678741455
    7. ' )' → logprob: -16.030637741088867
    8. '[' → logprob: -16.530637741088867
    9. ')-(' → logprob: -16.780637741088867
    10. ' ' → logprob: -17.155637741088867

Token 1704: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002614550176076591
    2. ' max' → logprob: -8.250261306762695
    3. '	max' → logprob: -16.500261306762695
    4. '   ' → logprob: -18.250261306762695
    5. '[max' → logprob: -18.750261306762695
    6. '(max' → logprob: -19.250261306762695
    7. ' ' → logprob: -21.125261306762695
    8. '_max' → logprob: -21.125261306762695
    9. ')' → logprob: -21.625261306762695
    10. 'min' → logprob: -21.875261306762695

Token 1705: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -12.250011444091797
    3. 'pos' → logprob: -12.750011444091797
    4. 'Pos' → logprob: -13.375011444091797
    5. ')' → logprob: -14.250011444091797
    6. '_)' → logprob: -15.000011444091797
    7. '_p' → logprob: -15.625011444091797
    8. ')_' → logprob: -15.625011444091797
    9. '```' → logprob: -16.000011444091797
    10. '\' → logprob: -16.375011444091797

Token 1706: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011629798245849088
    2. ')
' → logprob: -9.625116348266602
    3. ')+' → logprob: -10.125116348266602
    4. ' )' → logprob: -12.625116348266602
    5. '+' → logprob: -13.000116348266602
    6. ')`' → logprob: -13.125116348266602
    7. '```' → logprob: -14.250116348266602
    8. '))' → logprob: -14.500116348266602
    9. '   ' → logprob: -15.750116348266602
    10. '`)' → logprob: -15.750116348266602

Token 1707: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001563185011036694
    2. ' return' → logprob: -7.25156307220459
    3. 'return' → logprob: -7.37656307220459
    4. '       ' → logprob: -8.87656307220459
    5. '
' → logprob: -10.37656307220459
    6. ' +' → logprob: -10.75156307220459
    7. '               ' → logprob: -11.50156307220459
    8. '   ' → logprob: -11.75156307220459
    9. '          ' → logprob: -12.50156307220459
    10. '+' → logprob: -12.62656307220459

Token 1708: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1711127907037735
    2. 'return' → logprob: -2.4211127758026123
    3. ' return' → logprob: -3.0461127758026123
    4. '       ' → logprob: -4.546113014221191
    5. '
' → logprob: -4.671113014221191
    6. '   ' → logprob: -7.796113014221191
    7. '```' → logprob: -7.921113014221191
    8. '               ' → logprob: -9.796113014221191
    9. '`' → logprob: -10.796113014221191
    10. '	return' → logprob: -11.296113014221191

Token 1709: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03402968868613243
    2. 'return' → logprob: -3.909029722213745
    3. ' return' → logprob: -4.784029483795166
    4. '
' → logprob: -6.159029483795166
    5. '       ' → logprob: -6.159029483795166
    6. '               ' → logprob: -8.409029960632324
    7. '   ' → logprob: -8.784029960632324
    8. '```' → logprob: -9.284029960632324
    9. '            
' → logprob: -10.034029960632324
    10. ' 
' → logprob: -10.409029960632324

Token 1710: ' (' (ID: 350)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3861650228500366
    2. 'return' → logprob: -1.5111650228500366
    3. '
' → logprob: -4.011165142059326
    4. ')' → logprob: -4.511165142059326
    5. ' ' → logprob: -4.886165142059326
    6. ' 
' → logprob: -5.386165142059326
    7. ' code' → logprob: -5.511165142059326
    8. ' )' → logprob: -5.511165142059326
    9. ' space' → logprob: -5.511165142059326
    10. ' result' → logprob: -5.761165142059326

Token 1711: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12231260538101196
    2. 'min' → logprob: -2.997312545776367
    3. ')' → logprob: -3.872312545776367
    4. '*' → logprob: -4.997312545776367
    5. ' max' → logprob: -5.372312545776367
    6. '(max' → logprob: -5.497312545776367
    7. 'm' → logprob: -5.622312545776367
    8. 'n' → logprob: -5.622312545776367
    9. '#' → logprob: -5.622312545776367
    10. '(' → logprob: -6.247312545776367

Token 1712: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.228561349213123e-05
    2. 'pos' → logprob: -11.125052452087402
    3. '+' → logprob: -11.375052452087402
    4. '_' → logprob: -11.375052452087402
    5. ')' → logprob: -12.625052452087402
    6. ' _' → logprob: -12.875052452087402
    7. '
' → logprob: -13.625052452087402
    8. '-' → logprob: -13.750052452087402
    9. '_position' → logprob: -13.750052452087402
    10. '```' → logprob: -13.750052452087402

Token 1713: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.017707811668515205
    2. ' +' → logprob: -5.142707824707031
    3. '+' → logprob: -5.267707824707031
    4. ')' → logprob: -5.767707824707031
    5. '-' → logprob: -6.517707824707031
    6. '[' → logprob: -7.267707824707031
    7. ' ' → logprob: -7.767707824707031
    8. ' -
' → logprob: -8.642707824707031
    9. '```' → logprob: -9.267707824707031
    10. '#' → logprob: -9.392707824707031

Token 1714: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.000627610192168504
    2. ' min' → logprob: -7.375627517700195
    3. '_min' → logprob: -14.500627517700195
    4. '	min' → logprob: -15.500627517700195
    5. 'max' → logprob: -15.875627517700195
    6. '[min' → logprob: -16.375627517700195
    7. '(min' → logprob: -16.875627517700195
    8. 'minimum' → logprob: -17.125627517700195
    9. ' ' → logprob: -17.500627517700195
    10. '   ' → logprob: -17.750627517700195

Token 1715: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.861651490908116e-05
    2. 'pos' → logprob: -9.625068664550781
    3. '_' → logprob: -14.000068664550781
    4. 'Pos' → logprob: -14.000068664550781
    5. '_
' → logprob: -15.375068664550781
    6. ']' → logprob: -16.00006866455078
    7. ')' → logprob: -16.12506866455078
    8. '_p' → logprob: -16.12506866455078
    9. '+' → logprob: -16.50006866455078
    10. ' _' → logprob: -17.50006866455078

Token 1716: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6330441236495972
    2. ')*' → logprob: -0.7580441236495972
    3. ')+' → logprob: -8.508044242858887
    4. ' )' → logprob: -8.758044242858887
    5. ')
' → logprob: -10.508044242858887
    6. ')*(' → logprob: -11.633044242858887
    7. '
' → logprob: -11.883044242858887
    8. ' +' → logprob: -12.258044242858887
    9. ')#' → logprob: -12.258044242858887
    10. '))' → logprob: -12.383044242858887

Token 1717: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.033647891134023666
    2. ' ' → logprob: -3.4086477756500244
    3. '   ' → logprob: -14.158647537231445
    4. '
' → logprob: -14.846147537231445
    5. ' ' → logprob: -15.158647537231445
    6. '1' → logprob: -15.846147537231445
    7. ')' → logprob: -16.158647537231445
    8. '  ' → logprob: -16.283647537231445
    9. '```' → logprob: -16.408647537231445
    10. '	' → logprob: -16.596147537231445

Token 1718: ' because' (ID: 2236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4933755099773407
    2. ' +' → logprob: -1.368375539779663
    3. '+' → logprob: -2.243375539779663
    4. '           ' → logprob: -4.618375301361084
    5. ')+' → logprob: -5.743375301361084
    6. ')
' → logprob: -6.243375301361084
    7. ' )' → logprob: -6.368375301361084
    8. '<|end|>' → logprob: -6.368375301361084
    9. '```' → logprob: -6.618375301361084
    10. '#' → logprob: -6.743375301361084

Token 1719: ' she' (ID: 1770)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.31316253542900085
    2. 'the' → logprob: -2.3131625652313232
    3. ' she' → logprob: -2.3131625652313232
    4. 'she' → logprob: -2.9381625652313232
    5. ' we' → logprob: -4.813162326812744
    6. 'we' → logprob: -6.438162326812744
    7. ' visiting' → logprob: -6.563162326812744
    8. ' max' → logprob: -6.813162326812744
    9. 'max' → logprob: -6.938162326812744
    10. ' user' → logprob: -7.063162326812744

Token 1720: ' may' (ID: 1340)
  Prédit: ' might'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' might' → logprob: -0.4910515546798706
    2. ' may' → logprob: -1.6160515546798706
    3. 'might' → logprob: -2.24105167388916
    4. ' has' → logprob: -3.61605167388916
    5. ' must' → logprob: -3.74105167388916
    6. 'may' → logprob: -4.36605167388916
    7. 'must' → logprob: -4.61605167388916
    8. ' needs' → logprob: -4.99105167388916
    9. 'has' → logprob: -7.24105167388916
    10. ' can' → logprob: -7.24105167388916

Token 1721: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.8437049984931946
    2. ' have' → logprob: -1.2187049388885498
    3. 'need' → logprob: -2.46870493888855
    4. 'might' → logprob: -2.84370493888855
    5. 'may' → logprob: -3.59370493888855
    6. ' need' → logprob: -3.96870493888855
    7. ' needs' → logprob: -4.093705177307129
    8. ' may' → logprob: -4.218705177307129
    9. 'needs' → logprob: -4.218705177307129
    10. ' might' → logprob: -4.218705177307129

Token 1722: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.31342247128486633
    2. ' to' → logprob: -1.313422441482544
    3. 'return' → logprob: -9.813422203063965
    4. '<|end|>' → logprob: -10.063422203063965
    5. '_to' → logprob: -10.563422203063965
    6. '	to' → logprob: -11.688422203063965
    7. ' return' → logprob: -11.688422203063965
    8. 'constraints' → logprob: -12.313422203063965
    9. 'back' → logprob: -12.938422203063965
    10. ' constraints' → logprob: -13.563422203063965

Token 1723: ' go' (ID: 810)
  Prédit: ' walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walk' → logprob: -1.2530325651168823
    2. 'return' → logprob: -1.5030325651168823
    3. ' return' → logprob: -1.8780325651168823
    4. ' go' → logprob: -2.128032684326172
    5. 'walk' → logprob: -2.378032684326172
    6. 'go' → logprob: -2.628032684326172
    7. ' back' → logprob: -3.753032684326172
    8. 'back' → logprob: -4.253032684326172
    9. 'visit' → logprob: -4.503032684326172
    10. ' visit' → logprob: -5.878032684326172

Token 1724: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.03704728186130524
    2. 'back' → logprob: -3.4120473861694336
    3. ' backward' → logprob: -6.037047386169434
    4. ' backwards' → logprob: -7.412047386169434
    5. ' from' → logprob: -8.537047386169434
    6. ' forward' → logprob: -9.662047386169434
    7. 'from' → logprob: -10.162047386169434
    8. '_back' → logprob: -10.912047386169434
    9. '<|end|>' → logprob: -11.037047386169434
    10. ' ahead' → logprob: -11.662047386169434

Token 1725: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13167935609817505
    2. '
' → logprob: -3.2566792964935303
    3. ')' → logprob: -3.3816792964935303
    4. ')
' → logprob: -4.006679534912109
    5. '+' → logprob: -4.756679534912109
    6. ' +' → logprob: -5.256679534912109
    7. '               ' → logprob: -5.631679534912109
    8. '```' → logprob: -5.631679534912109
    9. '       ' → logprob: -5.756679534912109
    10. '+
' → logprob: -6.631679534912109

Token 1726: ' forth' (ID: 21806)
  Prédit: 'forth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forth' → logprob: -0.00036846695002168417
    2. ' forth' → logprob: -8.125368118286133
    3. '
' → logprob: -10.750368118286133
    4. 'forward' → logprob: -11.000368118286133
    5. 'f' → logprob: -11.125368118286133
    6. 'return' → logprob: -11.500368118286133
    7. 'for' → logprob: -12.625368118286133
    8. 'fort' → logprob: -13.500368118286133
    9. '   ' → logprob: -13.625368118286133
    10. 'front' → logprob: -13.750368118286133

Token 1727: ' within' (ID: 3518)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35709846019744873
    2. '
' → logprob: -1.2320984601974487
    3. ')
' → logprob: -5.982098579406738
    4. '       ' → logprob: -6.107098579406738
    5. 'return' → logprob: -7.107098579406738
    6. ')' → logprob: -7.232098579406738
    7. '
' → logprob: -7.607098579406738
    8. '\n' → logprob: -7.857098579406738
    9. '            
' → logprob: -7.857098579406738
    10. '               ' → logprob: -7.982098579406738

Token 1728: ' that' (ID: 484)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8145378828048706
    2. ' the' → logprob: -1.4395378828048706
    3. 'the' → logprob: -1.4395378828048706
    4. ' max' → logprob: -2.81453800201416
    5. 'min' → logprob: -5.06453800201416
    6. ' min' → logprob: -5.43953800201416
    7. '(max' → logprob: -5.68953800201416
    8. 'interval' → logprob: -5.93953800201416
    9. 'that' → logprob: -6.31453800201416
    10. ' that' → logprob: -6.43953800201416

Token 1729: ' interval' (ID: 17116)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.8028653264045715
    2. 'segment' → logprob: -0.9278653264045715
    3. 'interval' → logprob: -2.4278652667999268
    4. ' interval' → logprob: -3.8028652667999268
    5. 'space' → logprob: -4.052865505218506
    6. ')' → logprob: -4.677865505218506
    7. 'range' → logprob: -5.302865505218506
    8. ' space' → logprob: -5.427865505218506
    9. ' range' → logprob: -6.302865505218506
    10. '"' → logprob: -6.302865505218506

Token 1730: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10217487066984177
    2. '
' → logprob: -2.477174758911133
    3. ')' → logprob: -5.352174758911133
    4. ')
' → logprob: -5.852174758911133
    5. '       ' → logprob: -6.352174758911133
    6. '+' → logprob: -7.227174758911133
    7. '               ' → logprob: -7.477174758911133
    8. '            
' → logprob: -7.852174758911133
    9. '+
' → logprob: -8.102174758911133
    10. '\n' → logprob: -8.227174758911133

Token 1731: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.15779677033424377
    2. 'the' → logprob: -3.407796859741211
    3. ' constraints' → logprob: -3.407796859741211
    4. 'there' → logprob: -3.657796859741211
    5. 'needed' → logprob: -4.532796859741211
    6. 'some' → logprob: -4.532796859741211
    7. 'necessary' → logprob: -5.032796859741211
    8. ' the' → logprob: -5.157796859741211
    9. 'required' → logprob: -5.407796859741211
    10. 'she' → logprob: -5.657796859741211

Token 1732: ' force' (ID: 9578)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19921647012233734
    2. ')' → logprob: -1.9492164850234985
    3. '
' → logprob: -4.824216365814209
    4. '+' → logprob: -4.824216365814209
    5. '       ' → logprob: -4.949216365814209
    6. ' +' → logprob: -5.324216365814209
    7. '               ' → logprob: -6.074216365814209
    8. ')
' → logprob: -6.199216365814209
    9. ':' → logprob: -6.699216365814209
    10. ' )' → logprob: -7.699216365814209

Token 1733: ' visiting' (ID: 18798)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8124703168869019
    2. ')' → logprob: -1.4374703168869019
    3. ' a' → logprob: -2.6874704360961914
    4. ' her' → logprob: -3.0624704360961914
    5. ' the' → logprob: -3.4374704360961914
    6. ' return' → logprob: -3.6874704360961914
    7. '2' → logprob: -3.9374704360961914
    8. ' ' → logprob: -4.062470436096191
    9. 'return' → logprob: -4.062470436096191
    10. 'd' → logprob: -4.312470436096191

Token 1734: ' order' (ID: 2569)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2892516851425171
    2. '           ' → logprob: -1.914251685142517
    3. ')
' → logprob: -2.9142518043518066
    4. '
' → logprob: -3.7892518043518066
    5. '\n' → logprob: -4.539251804351807
    6. '+' → logprob: -5.789251804351807
    7. '```' → logprob: -6.289251804351807
    8. '       ' → logprob: -6.539251804351807
    9. '               ' → logprob: -6.664251804351807
    10. ' +' → logprob: -7.039251804351807

Token 1735: ' backwards' (ID: 59879)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35654595494270325
    2. '
' → logprob: -1.2315459251403809
    3. 'return' → logprob: -5.731545925140381
    4. '       ' → logprob: -6.356545925140381
    5. '
' → logprob: -6.856545925140381
    6. ')
' → logprob: -7.481545925140381
    7. ' return' → logprob: -7.606545925140381
    8. ')' → logprob: -8.606546401977539
    9. '            
' → logprob: -9.106546401977539
    10. '\n' → logprob: -9.231546401977539

Token 1736: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03162817284464836
    2. '
' → logprob: -3.906628131866455
    3. '       ' → logprob: -5.531628131866455
    4. '```' → logprob: -6.156628131866455
    5. 'return' → logprob: -6.656628131866455
    6. ')' → logprob: -7.031628131866455
    7. ')
' → logprob: -7.156628131866455
    8. ' return' → logprob: -7.906628131866455
    9. ' +' → logprob: -8.031628608703613
    10. '+' → logprob: -8.281628608703613

Token 1737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009635667316615582
    2. '
' → logprob: -5.3846354484558105
    3. 'return' → logprob: -6.3846354484558105
    4. '```' → logprob: -6.3846354484558105
    5. '       ' → logprob: -7.0096354484558105
    6. ' return' → logprob: -8.759635925292969
    7. '            
' → logprob: -8.884635925292969
    8. ')' → logprob: -9.509635925292969
    9. ')
' → logprob: -9.634635925292969
    10. '``' → logprob: -10.134635925292969

Token 1738: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0402941070497036
    2. 'return' → logprob: -3.9152941703796387
    3. '       ' → logprob: -4.165294170379639
    4. ' return' → logprob: -5.665294170379639
    5. '   ' → logprob: -8.41529369354248
    6. '
' → logprob: -8.54029369354248
    7. '```' → logprob: -9.29029369354248
    8. '               ' → logprob: -10.54029369354248
    9. '            
' → logprob: -12.16529369354248
    10. '        
' → logprob: -12.29029369354248

Token 1739: ' However' (ID: 5551)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31353479623794556
    2. '       ' → logprob: -1.4385347366333008
    3. '           ' → logprob: -4.063534736633301
    4. ' return' → logprob: -4.313534736633301
    5. '
' → logprob: -7.313534736633301
    6. '   ' → logprob: -8.3135347366333
    7. 'length' → logprob: -8.6885347366333
    8. 'result' → logprob: -9.4385347366333
    9. 'cost' → logprob: -10.3135347366333
    10. 'distance' → logprob: -10.8135347366333

Token 1740: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16301129758358002
    2. ' if' → logprob: -2.163011312484741
    3. ':' → logprob: -4.663011074066162
    4. '#' → logprob: -5.038011074066162
    5. ',' → logprob: -5.788011074066162
    6. '       ' → logprob: -6.038011074066162
    7. ':
' → logprob: -6.413011074066162
    8. ' #' → logprob: -6.538011074066162
    9. ' ' → logprob: -6.663011074066162
    10. '            ' → logprob: -6.663011074066162

Token 1741: ' checking' (ID: 19141)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9871972799301147
    2. '           ' → logprob: -1.2371972799301147
    3. ' if' → logprob: -1.4871972799301147
    4. 'return' → logprob: -2.3621973991394043
    5. '#' → logprob: -4.737197399139404
    6. ' #' → logprob: -5.487197399139404
    7. 'if' → logprob: -6.612197399139404
    8. '       ' → logprob: -6.987197399139404
    9. '               ' → logprob: -7.362197399139404
    10. '            ' → logprob: -7.487197399139404

Token 1742: ' samples' (ID: 16902)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1324007660150528
    2. 'max' → logprob: -2.5074007511138916
    3. ' constraints' → logprob: -4.382400989532471
    4. ' (' → logprob: -4.632400989532471
    5. '           ' → logprob: -5.632400989532471
    6. ' not' → logprob: -5.757400989532471
    7. ' min' → logprob: -5.757400989532471
    8. '(max' → logprob: -5.882400989532471
    9. ' if' → logprob: -6.632400989532471
    10. ' the' → logprob: -6.882400989532471

Token 1743: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14375589787960052
    2. '
' → logprob: -3.5187559127807617
    3. ':' → logprob: -3.6437559127807617
    4. '       ' → logprob: -4.268755912780762
    5. '            
' → logprob: -4.268755912780762
    6. '               ' → logprob: -4.643755912780762
    7. 'return' → logprob: -5.018755912780762
    8. ')' → logprob: -5.393755912780762
    9. ' return' → logprob: -5.393755912780762
    10. ':
' → logprob: -5.768755912780762

Token 1744: ' edge' (ID: 11165)
  Prédit: ' correctness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correctness' → logprob: -0.5320055484771729
    2. 'constraints' → logprob: -2.157005548477173
    3. 'correct' → logprob: -2.657005548477173
    4. ' constraints' → logprob: -3.032005548477173
    5. 'return' → logprob: -3.657005548477173
    6. 'the' → logprob: -4.032005310058594
    7. '```' → logprob: -4.157005310058594
    8. 'back' → logprob: -4.657005310058594
    9. ' return' → logprob: -4.657005310058594
    10. ' the' → logprob: -4.657005310058594

Token 1745: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.5614902377128601
    2. 'cases' → logprob: -1.6864902973175049
    3. ')' → logprob: -2.186490297317505
    4. '_cases' → logprob: -3.061490297317505
    5. 'case' → logprob: -3.811490297317505
    6. '
' → logprob: -4.186490058898926
    7. ' case' → logprob: -4.936490058898926
    8. '   ' → logprob: -5.061490058898926
    9. '_case' → logprob: -5.061490058898926
    10. ' ' → logprob: -5.061490058898926

Token 1746: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015237036161124706
    2. '
' → logprob: -5.265236854553223
    3. '       ' → logprob: -5.265236854553223
    4. '               ' → logprob: -7.265236854553223
    5. '```' → logprob: -7.390236854553223
    6. ' return' → logprob: -7.640236854553223
    7. 'return' → logprob: -7.765236854553223
    8. ')' → logprob: -7.890236854553223
    9. '<|end|>' → logprob: -7.890236854553223
    10. '<|end|>' → logprob: -8.015236854553223

Token 1747: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022255489602684975
    2. '               ' → logprob: -6.502225399017334
    3. '       ' → logprob: -8.127225875854492
    4. ' return' → logprob: -9.127225875854492
    5. 'return' → logprob: -9.752225875854492
    6. '```' → logprob: -9.752225875854492
    7. '                   ' → logprob: -9.877225875854492
    8. ' if' → logprob: -10.002225875854492
    9. '            
' → logprob: -10.877225875854492
    10. '            ' → logprob: -10.877225875854492

Token 1748: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0067201098427176476
    2. ' return' → logprob: -6.131720066070557
    3. 'return' → logprob: -6.256720066070557
    4. ' if' → logprob: -7.381720066070557
    5. '       ' → logprob: -7.506720066070557
    6. '               ' → logprob: -7.631720066070557
    7. '            ' → logprob: -8.006720542907715
    8. '            
' → logprob: -8.756720542907715
    9. '```' → logprob: -9.131720542907715
    10. ' ' → logprob: -9.881720542907715

Token 1749: ' Sometimes' (ID: 24501)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5248411297798157
    2. 'return' → logprob: -1.149841070175171
    3. ' return' → logprob: -3.024841070175171
    4. '       ' → logprob: -4.27484130859375
    5. ' if' → logprob: -4.77484130859375
    6. 'if' → logprob: -4.89984130859375
    7. '
' → logprob: -4.89984130859375
    8. '               ' → logprob: -6.64984130859375
    9. '   ' → logprob: -6.89984130859375
    10. 'length' → logprob: -7.39984130859375

Token 1750: ' it's' (ID: 4275)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4888165295124054
    2. ' she' → logprob: -1.613816499710083
    3. '#' → logprob: -2.863816499710083
    4. ',' → logprob: -3.863816499710083
    5. '
' → logprob: -4.113816738128662
    6. ' #' → logprob: -4.363816738128662
    7. ' there' → logprob: -4.488816738128662
    8. ' ' → logprob: -4.613816738128662
    9. ' return' → logprob: -4.988816738128662
    10. ' if' → logprob: -5.113816738128662

Token 1751: ' better' (ID: 3432)
  Prédit: ' better'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' better' → logprob: -0.48258307576179504
    2. ' possible' → logprob: -1.6075830459594727
    3. ' not' → logprob: -2.6075830459594727
    4. ' more' → logprob: -3.8575830459594727
    5. 'possible' → logprob: -4.232583045959473
    6. 'better' → logprob: -4.607583045959473
    7. ' simpler' → logprob: -4.732583045959473
    8. '```' → logprob: -4.732583045959473
    9. ' shorter' → logprob: -4.857583045959473
    10. ' necessary' → logprob: -5.107583045959473

Token 1752: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.045096009969711304
    2. ' return' → logprob: -3.295095920562744
    3. 'return' → logprob: -6.170095920562744
    4. '```' → logprob: -6.295095920562744
    5. '           ' → logprob: -6.670095920562744
    6. 'to' → logprob: -7.170095920562744
    7. ' if' → logprob: -8.170096397399902
    8. '               ' → logprob: -9.045096397399902
    9. '            ' → logprob: -9.295096397399902
    10. '
' → logprob: -9.295096397399902

Token 1753: ' just' (ID: 1327)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8186520338058472
    2. ' return' → logprob: -1.4436520338058472
    3. 'visit' → logprob: -1.5686520338058472
    4. ' visit' → logprob: -2.6936521530151367
    5. 'choose' → logprob: -4.568652153015137
    6. ' go' → logprob: -5.068652153015137
    7. ' try' → logprob: -5.568652153015137
    8. 'consider' → logprob: -5.818652153015137
    9. 'try' → logprob: -5.943652153015137
    10. 'continue' → logprob: -5.943652153015137

Token 1754: ' walk' (ID: 5229)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visit' → logprob: -0.8414691686630249
    2. ' return' → logprob: -1.591469168663025
    3. 'visit' → logprob: -1.966469168663025
    4. ' continue' → logprob: -2.3414692878723145
    5. 'return' → logprob: -2.9664692878723145
    6. ' go' → logprob: -3.3414692878723145
    7. 'continue' → logprob: -4.4664692878723145
    8. ' skip' → logprob: -4.9664692878723145
    9. ' stay' → logprob: -5.7164692878723145
    10. '
' → logprob: -5.9664692878723145

Token 1755: ' straight' (ID: 10230)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -2.153289318084717
    2. '```' → logprob: -2.153289318084717
    3. ' to' → logprob: -2.278289318084717
    4. '           ' → logprob: -2.403289318084717
    5. ' through' → logprob: -2.528289318084717
    6. '       ' → logprob: -3.153289318084717
    7. ' forward' → logprob: -3.153289318084717
    8. '   ' → logprob: -3.278289318084717
    9. 'from' → logprob: -3.528289318084717
    10. ')' → logprob: -3.653289318084717

Token 1756: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5869926810264587
    2. '
' → logprob: -1.2119927406311035
    3. '+' → logprob: -3.4619927406311035
    4. ' +' → logprob: -3.7119927406311035
    5. ':' → logprob: -4.0869927406311035
    6. '       ' → logprob: -4.3369927406311035
    7. '.' → logprob: -4.7119927406311035
    8. ')' → logprob: -4.7119927406311035
    9. '```' → logprob: -5.2119927406311035
    10. ',' → logprob: -5.4619927406311035

Token 1757: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0987128019332886
    2. ' through' → logprob: -1.9737128019332886
    3. ' ' → logprob: -2.223712921142578
    4. ' to' → logprob: -2.598712921142578
    5. ' forward' → logprob: -2.723712921142578
    6. ')' → logprob: -3.098712921142578
    7. ' ahead' → logprob: -3.473712921142578
    8. '.' → logprob: -3.848712921142578
    9. 'through' → logprob: -3.973712921142578
    10. ' (' → logprob: -3.973712921142578

Token 1758: '->' (ID: 609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1002668142318726
    2. ' +' → logprob: -1.2252668142318726
    3. '
' → logprob: -2.225266933441162
    4. ')' → logprob: -2.350266933441162
    5. '           ' → logprob: -2.725266933441162
    6. ' ' → logprob: -3.850266933441162
    7. '       ' → logprob: -4.225266933441162
    8. '   ' → logprob: -4.350266933441162
    9. '+
' → logprob: -4.850266933441162
    10. '#' → logprob: -5.100266933441162

Token 1759: 'n' (ID: 77)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5989535450935364
    2. ' max' → logprob: -0.8489535450935364
    3. 'n' → logprob: -4.973953723907471
    4. 'min' → logprob: -4.973953723907471
    5. ' min' → logprob: -5.723953723907471
    6. ' n' → logprob: -6.223953723907471
    7. ' (' → logprob: -6.598953723907471
    8. '1' → logprob: -7.098953723907471
    9. ' ' → logprob: -7.598953723907471
    10. '(max' → logprob: -8.473953247070312

Token 1760: '+' (ID: 10)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03254708647727966
    2. '
' → logprob: -4.4075469970703125
    3. ' +' → logprob: -5.2825469970703125
    4. '+' → logprob: -5.6575469970703125
    5. '       ' → logprob: -5.9075469970703125
    6. '               ' → logprob: -6.2825469970703125
    7. ')' → logprob: -7.0325469970703125
    8. ')
' → logprob: -7.1575469970703125
    9. '```' → logprob: -7.4075469970703125
    10. '            
' → logprob: -7.5325469970703125

Token 1761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.56233171664644e-05
    2. '+' → logprob: -10.125055313110352
    3. ' ' → logprob: -12.375055313110352
    4. '
' → logprob: -12.625055313110352
    5. '...' → logprob: -12.750055313110352
    6. ')' → logprob: -13.375055313110352
    7. '```' → logprob: -13.625055313110352
    8. '-' → logprob: -13.875055313110352
    9. '.' → logprob: -15.000055313110352
    10. ' +' → logprob: -15.250055313110352

Token 1762: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6247294545173645
    2. '
' → logprob: -0.8747294545173645
    3. '       ' → logprob: -4.374729633331299
    4. '            
' → logprob: -5.124729633331299
    5. ')' → logprob: -5.249729633331299
    6. ')
' → logprob: -5.499729633331299
    7. 'return' → logprob: -5.749729633331299
    8. '+' → logprob: -5.874729633331299
    9. '+
' → logprob: -5.999729633331299
    10. '```' → logprob: -6.374729633331299

Token 1763: ' constraints' (ID: 31060)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.8051518201828003
    2. ' constraints' → logprob: -1.5551518201828003
    3. 'constraints' → logprob: -2.05515193939209
    4. ' all' → logprob: -3.18015193939209
    5. ' the' → logprob: -3.30515193939209
    6. ' not' → logprob: -3.68015193939209
    7. 'no' → logprob: -3.80515193939209
    8. 'max' → logprob: -3.93015193939209
    9. ' there' → logprob: -3.93015193939209
    10. ' max' → logprob: -4.30515193939209

Token 1764: ' empty' (ID: 8213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0265438556671143
    2. '           ' → logprob: -2.1515438556671143
    3. ' ==' → logprob: -2.1515438556671143
    4. ' <' → logprob: -2.4015438556671143
    5. ' +' → logprob: -2.4015438556671143
    6. ':
' → logprob: -2.4015438556671143
    7. '+' → logprob: -2.6515438556671143
    8. ' <=' → logprob: -3.2765438556671143
    9. ' >' → logprob: -3.2765438556671143
    10. '
' → logprob: -3.7765438556671143

Token 1765: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025899045169353485
    2. '       ' → logprob: -4.5258989334106445
    3. ')' → logprob: -5.9008989334106445
    4. '
' → logprob: -6.1508989334106445
    5. 'return' → logprob: -6.5258989334106445
    6. ':' → logprob: -6.5258989334106445
    7. '               ' → logprob: -6.9008989334106445
    8. '```' → logprob: -6.9008989334106445
    9. '<|end|>' → logprob: -7.0258989334106445
    10. '   ' → logprob: -7.7758989334106445

Token 1766: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022921640425920486
    2. '       ' → logprob: -4.522921562194824
    3. '
' → logprob: -5.147921562194824
    4. 'return' → logprob: -6.147921562194824
    5. '            
' → logprob: -6.772921562194824
    6. '               ' → logprob: -7.272921562194824
    7. '   ' → logprob: -7.772921562194824
    8. ' return' → logprob: -7.897921562194824
    9. '```' → logprob: -8.147921562194824
    10. ')' → logprob: -8.397921562194824

Token 1767: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09846749156713486
    2. '
' → logprob: -2.9734675884246826
    3. 'return' → logprob: -3.9734675884246826
    4. ' return' → logprob: -4.4734673500061035
    5. '       ' → logprob: -4.5984673500061035
    6. '   ' → logprob: -7.3484673500061035
    7. '               ' → logprob: -7.5984673500061035
    8. ' if' → logprob: -8.098467826843262
    9. '            
' → logprob: -8.098467826843262
    10. ' 
' → logprob: -9.223467826843262

Token 1768: ' Return' (ID: 6318)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05127786472439766
    2. '       ' → logprob: -3.3012778759002686
    3. '               ' → logprob: -5.3012776374816895
    4. ' return' → logprob: -6.3012776374816895
    5. 'return' → logprob: -6.5512776374816895
    6. '
' → logprob: -6.6762776374816895
    7. '            
' → logprob: -7.6762776374816895
    8. ':' → logprob: -8.051278114318848
    9. '```' → logprob: -8.301278114318848
    10. '            ' → logprob: -8.301278114318848

Token 1769: ' calculated' (ID: 25702)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3983522951602936
    2. ' min' → logprob: -1.5233522653579712
    3. ' self' → logprob: -2.5233523845672607
    4. ' (' → logprob: -4.273352146148682
    5. 'max' → logprob: -5.148352146148682
    6. 'min' → logprob: -5.398352146148682
    7. 'self' → logprob: -5.648352146148682
    8. '           ' → logprob: -7.273352146148682
    9. '(max' → logprob: -7.523352146148682
    10. '(min' → logprob: -7.523352146148682

Token 1770: ' value' (ID: 1432)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8971883058547974
    2. '       ' → logprob: -2.147188186645508
    3. ' ' → logprob: -2.397188186645508
    4. ' max' → logprob: -2.647188186645508
    5. ' 
' → logprob: -3.022188186645508
    6. ' min' → logprob: -3.272188186645508
    7. '   ' → logprob: -3.272188186645508
    8. ')' → logprob: -3.397188186645508
    9. '
' → logprob: -3.647188186645508
    10. ':' → logprob: -4.147188186645508

Token 1771: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08012817800045013
    2. '
' → logprob: -3.4551281929016113
    3. '       ' → logprob: -3.7051281929016113
    4. 'return' → logprob: -4.955128192901611
    5. '            
' → logprob: -5.455128192901611
    6. ' 
' → logprob: -5.955128192901611
    7. '               ' → logprob: -6.330128192901611
    8. ' return' → logprob: -6.330128192901611
    9. '        
' → logprob: -6.955128192901611
    10. '  
' → logprob: -7.705128192901611

Token 1772: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013119110371917486
    2. 'return' → logprob: -9.250131607055664
    3. '               ' → logprob: -11.000131607055664
    4. '       ' → logprob: -11.625131607055664
    5. '```' → logprob: -12.375131607055664
    6. ' return' → logprob: -13.625131607055664
    7. '          ' → logprob: -13.875131607055664
    8. '{return' → logprob: -14.000131607055664
    9. '   ' → logprob: -14.500131607055664
    10. '                   ' → logprob: -14.750131607055664

Token 1773: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5383274555206299
    2. 'return' (adapté à ' return') → logprob: -1.0383274555206299
    3. '       ' → logprob: -2.78832745552063
    4. '```' → logprob: -7.913327217102051
    5. ' return' → logprob: -8.91332721710205
    6. '   ' → logprob: -9.41332721710205
    7. '               ' → logprob: -9.66332721710205
    8. '{return' → logprob: -10.41332721710205
    9. '          ' → logprob: -12.41332721710205
    10. '         ' → logprob: -12.53832721710205

Token 1774: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.022625427693128586
    2. '(min' → logprob: -3.89762544631958
    3. '(self' → logprob: -7.14762544631958
    4. '(max' → logprob: -7.52262544631958
    5. '(' → logprob: -7.77262544631958
    6. ' min' → logprob: -8.772624969482422
    7. '(n' → logprob: -9.397624969482422
    8. '`' → logprob: -11.022624969482422
    9. 'min' → logprob: -11.272624969482422
    10. '   ' → logprob: -11.772624969482422

Token 1775: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00010390079842181876
    2. '(min' → logprob: -9.500103950500488
    3. '0' → logprob: -11.250103950500488
    4. ' min' → logprob: -11.750103950500488
    5. 'max' → logprob: -11.875103950500488
    6. '(' → logprob: -14.625103950500488
    7. 'abs' → logprob: -15.500103950500488
    8. '   ' → logprob: -15.625103950500488
    9. '_min' → logprob: -16.250102996826172
    10. '1' → logprob: -16.500102996826172

Token 1776: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001777960715116933
    2. '_' → logprob: -9.250177383422852
    3. 'Pos' → logprob: -10.750177383422852
    4. ' _' → logprob: -10.875177383422852
    5. '_POS' → logprob: -11.500177383422852
    6. ')' → logprob: -11.500177383422852
    7. '(' → logprob: -11.750177383422852
    8. 'pos' → logprob: -12.375177383422852
    9. '(Pos' → logprob: -12.750177383422852
    10. '_Pos' → logprob: -13.125177383422852

Token 1777: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009954878129065037
    2. '-' → logprob: -4.759954929351807
    3. ')' → logprob: -6.634954929351807
    4. ' -
' → logprob: -11.759954452514648
    5. ' ' → logprob: -12.259954452514648
    6. ' )' → logprob: -12.884954452514648
    7. ',' → logprob: -13.259954452514648
    8. ')-' → logprob: -13.509954452514648
    9. ' ' → logprob: -13.634954452514648
    10. '[' → logprob: -13.634954452514648

Token 1778: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. '1' → logprob: -16.879077911376953
    4. '           ' → logprob: -17.504077911376953
    5. ')' → logprob: -17.879077911376953
    6. '```' → logprob: -18.254077911376953
    7. '   ' → logprob: -18.379077911376953
    8. '=' → logprob: -18.879077911376953
    9. ' ' → logprob: -19.004077911376953
    10. '`' → logprob: -19.129077911376953

Token 1779: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -22.75
    4. '```' → logprob: -23.625
    5. '   ' → logprob: -24.0
    6. '０' → logprob: -24.625
    7. '`' → logprob: -25.125
    8. '
' → logprob: -25.375
    9. ' ' → logprob: -26.0
    10. 'zero' → logprob: -26.25

Token 1780: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015520655550062656
    2. ')+' → logprob: -4.2655205726623535
    3. '+' → logprob: -6.6405205726623535
    4. ' +' → logprob: -10.515521049499512
    5. ')+(' → logprob: -11.390521049499512
    6. '+)' → logprob: -12.140521049499512
    7. ' )' → logprob: -12.515521049499512
    8. ')+'' → logprob: -14.515521049499512
    9. '           ' → logprob: -14.765521049499512
    10. '+
' → logprob: -15.015521049499512

Token 1781: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012975746765732765
    2. ' +' → logprob: -4.387975692749023
    3. ')' → logprob: -8.387975692749023
    4. '*' → logprob: -9.512975692749023
    5. ')+' → logprob: -9.762975692749023
    6. '+
' → logprob: -10.387975692749023
    7. '<|end|>' → logprob: -10.387975692749023
    8. '-' → logprob: -10.762975692749023
    9. '```' → logprob: -12.637975692749023
    10. '(' → logprob: -12.762975692749023

Token 1782: ' ' (ID: 220)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0071918657049536705
    2. '2' → logprob: -5.2571916580200195
    3. ' (' → logprob: -6.5071916580200195
    4. '(' → logprob: -8.00719165802002
    5. '((' → logprob: -9.25719165802002
    6. ' ' → logprob: -10.63219165802002
    7. '   ' → logprob: -13.13219165802002
    8. '(Max' → logprob: -13.25719165802002
    9. '1' → logprob: -13.50719165802002
    10. '(min' → logprob: -13.63219165802002

Token 1783: '2' (ID: 17)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.001662324066273868
    2. '2' → logprob: -6.501662254333496
    3. ' (' → logprob: -9.001662254333496
    4. '(' → logprob: -10.376662254333496
    5. '((' → logprob: -13.001662254333496
    6. ' ' → logprob: -13.876662254333496
    7. '(Max' → logprob: -14.001662254333496
    8. '(min' → logprob: -14.626662254333496
    9. '   ' → logprob: -14.876662254333496
    10. 'max' → logprob: -15.626662254333496

Token 1784: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.6133228540420532
    2. ' *' → logprob: -1.3633228540420532
    3. '*' → logprob: -1.6133228540420532
    4. '(max' → logprob: -6.238322734832764
    5. ' (' → logprob: -7.488322734832764
    6. '(' → logprob: -7.613322734832764
    7. ')' → logprob: -9.113323211669922
    8. '   ' → logprob: -9.613323211669922
    9. ' ' → logprob: -9.863323211669922
    10. '`' → logprob: -10.113323211669922

Token 1785: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -6.8497312895488e-05
    2. ' (' → logprob: -9.625068664550781
    3. '(' → logprob: -13.250068664550781
    4. '[max' → logprob: -15.750068664550781
    5. '((' → logprob: -16.00006866455078
    6. '(min' → logprob: -16.12506866455078
    7. 'max' → logprob: -16.25006866455078
    8. '(abs' → logprob: -16.75006866455078
    9. '=max' → logprob: -17.87506866455078
    10. '(Max' → logprob: -18.25006866455078

Token 1786: 'max' (ID: 3228)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5759888291358948
    2. 'max' → logprob: -0.8259888291358948
    3. ' max' → logprob: -10.20098876953125
    4. '[max' → logprob: -11.95098876953125
    5. ' (' → logprob: -12.95098876953125
    6. '_max' → logprob: -13.70098876953125
    7. '=max' → logprob: -14.45098876953125
    8. '(' → logprob: -14.57598876953125
    9. '	max' → logprob: -15.20098876953125
    10. '|max' → logprob: -15.45098876953125

Token 1787: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.5048530030981055e-06
    2. 'pos' → logprob: -14.375001907348633
    3. '_position' → logprob: -15.375001907348633
    4. 'Pos' → logprob: -15.375001907348633
    5. ' _' → logprob: -16.125001907348633
    6. '_positions' → logprob: -16.250001907348633
    7. '_POS' → logprob: -16.375001907348633
    8. '_' → logprob: -17.125001907348633
    9. '```' → logprob: -17.625001907348633
    10. '\' → logprob: -18.125001907348633

Token 1788: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12695708870887756
    2. '-' → logprob: -2.1269571781158447
    3. ')' → logprob: -10.876956939697266
    4. '[' → logprob: -12.001956939697266
    5. '[-' → logprob: -13.751956939697266
    6. '```' → logprob: -14.001956939697266
    7. '<|end|>' → logprob: -14.626956939697266
    8. ')-(' → logprob: -15.251956939697266
    9. '−' → logprob: -15.251956939697266
    10. ' ' → logprob: -15.501956939697266

Token 1789: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.512236498361744e-07
    2. ' min' → logprob: -14.500000953674316
    3. '_min' → logprob: -18.125
    4. 'max' → logprob: -19.875
    5. '[min' → logprob: -22.5
    6. '	min' → logprob: -23.0
    7. '=min' → logprob: -23.125
    8. '
' → logprob: -23.25
    9. '(min' → logprob: -23.375
    10. 'minimal' → logprob: -23.375

Token 1790: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00038527094875462353
    2. 'pos' → logprob: -7.875385284423828
    3. 'Pos' → logprob: -12.250385284423828
    4. '_p' → logprob: -16.375385284423828
    5. '_' → logprob: -16.875385284423828
    6. 'p' → logprob: -17.000385284423828
    7. '	pos' → logprob: -17.250385284423828
    8. '0' → logprob: -18.125385284423828
    9. '-pos' → logprob: -18.375385284423828
    10. '[pos' → logprob: -18.625385284423828

Token 1791: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003389190824236721
    2. ')+' → logprob: -8.375338554382324
    3. '+' → logprob: -9.875338554382324
    4. ' )' → logprob: -10.000338554382324
    5. ' +' → logprob: -11.500338554382324
    6. '+)' → logprob: -13.750338554382324
    7. ')
' → logprob: -16.75033950805664
    8. ')+(' → logprob: -17.00033950805664
    9. '           ' → logprob: -17.25033950805664
    10. '[' → logprob: -17.25033950805664

Token 1792: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0902976468205452
    2. '+' → logprob: -2.4652976989746094
    3. ')' → logprob: -7.465297698974609
    4. '           ' → logprob: -7.840297698974609
    5. ')+' → logprob: -8.34029769897461
    6. '          ' → logprob: -9.96529769897461
    7. '+
' → logprob: -10.71529769897461
    8. '            ' → logprob: -10.84029769897461
    9. ' +
' → logprob: -11.21529769897461
    10. '```' → logprob: -11.59029769897461

Token 1793: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017521461471915245
    2. '(n' → logprob: -4.392521381378174
    3. ' (' → logprob: -5.392521381378174
    4. '((' → logprob: -8.267521858215332
    5. 'self' → logprob: -8.767521858215332
    6. '(' → logprob: -11.392521858215332
    7. '           ' → logprob: -11.642521858215332
    8. ' self' → logprob: -12.142521858215332
    9. '   ' → logprob: -12.392521858215332
    10. '       ' → logprob: -13.642521858215332

Token 1794: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023292528465390205
    2. '(self' → logprob: -3.7732925415039062
    3. ' self' → logprob: -10.148292541503906
    4. ' (' → logprob: -12.523292541503906
    5. '           ' → logprob: -12.773292541503906
    6. '[self' → logprob: -14.023292541503906
    7. '
' → logprob: -15.523292541503906
    8. '   ' → logprob: -15.773292541503906
    9. '       ' → logprob: -16.148292541503906
    10. '               ' → logprob: -17.273292541503906

Token 1795: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -9.253090865968261e-06
    2. '.' → logprob: -11.750009536743164
    3. 'n' → logprob: -14.875009536743164
    4. ' .' → logprob: -15.000009536743164
    5. '
' → logprob: -15.625009536743164
    6. '+.' → logprob: -16.250009536743164
    7. '.user' → logprob: -16.375009536743164
    8. '.
' → logprob: -16.500009536743164
    9. 'self' → logprob: -16.625009536743164
    10. ').' → logprob: -16.875009536743164

Token 1796: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014571875333786
    2. ' +' → logprob: -1.701457142829895
    3. ')' → logprob: -10.951457023620605
    4. ')+' → logprob: -11.076457023620605
    5. '+
' → logprob: -11.701457023620605
    6. ' +
' → logprob: -13.576457023620605
    7. '<|end|>' → logprob: -14.701457023620605
    8. '[' → logprob: -15.451457023620605
    9. '+)' → logprob: -16.576457977294922
    10. '   ' → logprob: -16.576457977294922

Token 1797: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -16.5
    4. '+' → logprob: -17.875
    5. '   ' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. ')' → logprob: -20.125
    8. '[' → logprob: -20.75
    9. '`' → logprob: -21.625
    10. '۱' → logprob: -21.875

Token 1798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '
' → logprob: -18.875
    4. '```' → logprob: -20.0
    5. '۱' → logprob: -21.5
    6. '+' → logprob: -21.5
    7. '   ' → logprob: -21.75
    8. '[' → logprob: -22.0
    9. '{
' → logprob: -22.5
    10. '`' → logprob: -22.875

Token 1799: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2019612193107605
    2. ' -' → logprob: -1.8269612789154053
    3. '-' → logprob: -3.8269612789154053
    4. ' )' → logprob: -9.951961517333984
    5. '-)' → logprob: -10.076961517333984
    6. ')
' → logprob: -10.326961517333984
    7. ')-' → logprob: -10.576961517333984
    8. '   ' → logprob: -10.826961517333984
    9. '<|end|>' → logprob: -11.826961517333984
    10. '))' → logprob: -12.701961517333984

Token 1800: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.842555426876061e-06
    2. ' max' → logprob: -12.250004768371582
    3. '	max' → logprob: -22.6250057220459
    4. '[max' → logprob: -23.6250057220459
    5. '_max' → logprob: -24.5000057220459
    6. '
' → logprob: -24.8750057220459
    7. '   ' → logprob: -25.2500057220459
    8. 'maximum' → logprob: -26.5000057220459
    9. 'Max' → logprob: -26.5000057220459
    10. '(max' → logprob: -26.8750057220459

Token 1801: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003384422743692994
    2. 'pos' → logprob: -8.000338554382324
    3. 'Pos' → logprob: -13.125338554382324
    4. 'max' → logprob: -14.125338554382324
    5. '	pos' → logprob: -17.125337600708008
    6. '_POS' → logprob: -17.375337600708008
    7. ')' → logprob: -17.500337600708008
    8. '\' → logprob: -18.250337600708008
    9. '-pos' → logprob: -18.250337600708008
    10. '_max' → logprob: -18.875337600708008

Token 1802: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -11.000019073486328
    3. ')return' → logprob: -14.125019073486328
    4. ' )' → logprob: -14.375019073486328
    5. '       ' → logprob: -15.500019073486328
    6. '   ' → logprob: -16.375019073486328
    7. '+' → logprob: -16.500019073486328
    8. ')#' → logprob: -16.625019073486328
    9. '<|end|>' → logprob: -16.875019073486328
    10. '           ' → logprob: -17.125019073486328

Token 1803: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1804: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1805: ' __' (ID: 2516)
  Prédit: ' plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plan' → logprob: -1.0432963371276855
    2. ' _' → logprob: -1.5432963371276855
    3. '__' → logprob: -2.4182963371276855
    4. '_' → logprob: -2.5432963371276855
    5. ' minimal' → logprob: -2.5432963371276855
    6. ' find' → logprob: -2.6682963371276855
    7. '_min' → logprob: -3.2932963371276855
    8. '_plan' → logprob: -3.6682963371276855
    9. ' __' → logprob: -3.7932963371276855
    10. ' calculate' → logprob: -4.4182963371276855

Token 1806: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.04179706797003746
    2. '_' → logprob: -3.291797161102295
    3. 'i' → logprob: -5.791797161102295
    4. '_init' → logprob: -7.541797161102295
    5. '_i' → logprob: -9.416796684265137
    6. 'def' → logprob: -10.291796684265137
    7. '__' → logprob: -11.166796684265137
    8. 'in' → logprob: -11.916796684265137
    9. 'n' → logprob: -12.166796684265137
    10. '_
' → logprob: -12.416796684265137

Token 1807: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025999147910624743
    2. '__' → logprob: -6.002599716186523
    3. '__(
' → logprob: -9.377599716186523
    4. '__[' → logprob: -10.377599716186523
    5. '__((' → logprob: -12.252599716186523
    6. '(self' → logprob: -13.877599716186523
    7. '__.__' → logprob: -14.002599716186523
    8. '___' → logprob: -14.252599716186523
    9. '__(*' → logprob: -15.127599716186523
    10. '__('' → logprob: -15.127599716186523

Token 1808: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015085970517247915
    2. '   ' → logprob: -9.000150680541992
    3. ' self' → logprob: -11.375150680541992
    4. ',' → logprob: -12.125150680541992
    5. '(self' → logprob: -12.250150680541992
    6. '
' → logprob: -13.375150680541992
    7. '       ' → logprob: -13.750150680541992
    8. '0' → logprob: -14.375150680541992
    9. 'def' → logprob: -14.625150680541992
    10. 'n' → logprob: -15.000150680541992

Token 1809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00493914308026433
    2. 'self' → logprob: -5.379939079284668
    3. ',self' → logprob: -8.754939079284668
    4. '(self' → logprob: -9.379939079284668
    5. ')(' → logprob: -10.754939079284668
    6. ',
' → logprob: -11.129939079284668
    7. '   ' → logprob: -11.379939079284668
    8. ' ,' → logprob: -12.129939079284668
    9. '__,' → logprob: -12.129939079284668
    10. '):' → logprob: -12.254939079284668

Token 1810: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019819256849586964
    2. 'n' → logprob: -6.251981735229492
    3. '   ' → logprob: -10.126981735229492
    4. '       ' → logprob: -11.626981735229492
    5. ' self' → logprob: -12.501981735229492
    6. 'num' → logprob: -15.376981735229492
    7. '           ' → logprob: -16.001981735229492
    8. '
' → logprob: -16.001981735229492
    9. '```' → logprob: -16.001981735229492
    10. ' n' → logprob: -17.001981735229492

Token 1811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01044128555804491
    2. '):' → logprob: -4.635441303253174
    3. '):
' → logprob: -7.760441303253174
    4. '   ' → logprob: -8.635440826416016
    5. ')' → logprob: -11.010440826416016
    6. '       ' → logprob: -11.010440826416016
    7. ' ,' → logprob: -11.260440826416016
    8. ',
' → logprob: -11.260440826416016
    9. ',n' → logprob: -12.135440826416016
    10. ':' → logprob: -12.385440826416016

Token 1812: ' m' (ID: 284)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.005864801350980997
    2. ' constraints' → logprob: -5.50586462020874
    3. '   ' → logprob: -7.25586462020874
    4. 'positions' → logprob: -7.50586462020874
    5. '           ' → logprob: -9.005865097045898
    6. 'shops' → logprob: -9.005865097045898
    7. ')' → logprob: -9.130865097045898
    8. '       ' → logprob: -10.005865097045898
    9. '    ' → logprob: -11.255865097045898
    10. 'shop' → logprob: -11.380865097045898

Token 1813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14108328521251678
    2. '):' → logprob: -2.266083240509033
    3. '):
' → logprob: -3.641083240509033
    4. '=' → logprob: -6.766083240509033
    5. '   ' → logprob: -8.891083717346191
    6. ':' → logprob: -9.391083717346191
    7. ')' → logprob: -9.391083717346191
    8. '       ' → logprob: -10.016083717346191
    9. ' ,' → logprob: -10.141083717346191
    10. ',
' → logprob: -10.891083717346191

Token 1814: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.027070779353380203
    2. ' constraints' → logprob: -3.7770707607269287
    3. 'shops' → logprob: -6.402070999145508
    4. 'positions' → logprob: -7.152070999145508
    5. '   ' → logprob: -7.652070999145508
    6. '           ' → logprob: -7.777070999145508
    7. '       ' → logprob: -8.777070999145508
    8. ' shops' → logprob: -9.277070999145508
    9. 'constraint' → logprob: -10.152070999145508
    10. '    ' → logprob: -10.527070999145508

Token 1815: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6279374361038208
    2. '):' → logprob: -0.8779374361038208
    3. ',' → logprob: -3.0029373168945312
    4. '       ' → logprob: -7.502937316894531
    5. ':' → logprob: -8.377937316894531
    6. '   ' → logprob: -8.877937316894531
    7. '):
' → logprob: -9.877937316894531
    8. '=' → logprob: -10.752937316894531
    9. '):

' → logprob: -11.627937316894531
    10. ',
' → logprob: -12.127937316894531

Token 1816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023314079269766808
    2. ':' → logprob: -4.273313999176025
    3. '(' → logprob: -5.273313999176025
    4. ':
' → logprob: -6.648313999176025
    5. ',' → logprob: -7.648313999176025
    6. '(self' → logprob: -7.773313999176025
    7. '():
' → logprob: -7.898313999176025
    8. '(n' → logprob: -8.148314476013184
    9. '():' → logprob: -8.273314476013184
    10. '(
' → logprob: -8.648314476013184

Token 1817: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20163339376449585
    2. 'self' (adapté à ' self') → logprob: -1.7016334533691406
    3. ' self' → logprob: -8.70163345336914
    4. '   ' → logprob: -9.95163345336914
    5. '	self' → logprob: -12.95163345336914
    6. '```' → logprob: -12.95163345336914
    7. '(self' → logprob: -14.20163345336914
    8. '        
' → logprob: -15.95163345336914
    9. '           ' → logprob: -16.07663345336914
    10. '
' → logprob: -16.32663345336914

Token 1818: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.08065596222877502
    2. '.' → logprob: -2.580656051635742
    3. ' .' → logprob: -6.580656051635742
    4. 'n' → logprob: -9.205656051635742
    5. '=n' → logprob: -9.330656051635742
    6. ' =' → logprob: -9.830656051635742
    7. '=' → logprob: -9.955656051635742
    8. '   ' → logprob: -11.205656051635742
    9. '.
' → logprob: -11.455656051635742
    10. '​.' → logprob: -11.455656051635742

Token 1819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18444682657718658
    2. ' =' → logprob: -2.3094468116760254
    3. ',' → logprob: -2.8094468116760254
    4. '<|end|>' → logprob: -5.434446811676025
    5. '       ' → logprob: -6.934446811676025
    6. '=self' → logprob: -7.309446811676025
    7. '<|end|>' → logprob: -7.809446811676025
    8. '   ' → logprob: -7.809446811676025
    9. ')' → logprob: -7.934446811676025
    10. '=n' → logprob: -8.184447288513184

Token 1820: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006717505399137735
    2. ' n' → logprob: -5.006717681884766
    3. 'self' → logprob: -13.756717681884766
    4. '   ' → logprob: -14.506717681884766
    5. '	n' → logprob: -15.006717681884766
    6. '
' → logprob: -15.256717681884766
    7. ' self' → logprob: -17.006717681884766
    8. '    ' → logprob: -17.506717681884766
    9. ' ' → logprob: -18.131717681884766
    10. '_n' → logprob: -18.131717681884766

Token 1821: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.65055912733078
    2. ',' → logprob: -0.77555912733078
    3. '        
' → logprob: -5.150558948516846
    4. '<|end|>' → logprob: -5.275558948516846
    5. 'self' → logprob: -5.900558948516846
    6. '
' → logprob: -6.775558948516846
    7. ',
' → logprob: -6.900558948516846
    8. '   ' → logprob: -7.775558948516846
    9. ' ' → logprob: -8.150559425354004
    10. '       
' → logprob: -8.150559425354004

Token 1822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05699484050273895
    2. ',' → logprob: -3.431994915008545
    3. 'self' → logprob: -3.806994915008545
    4. '        
' → logprob: -8.556994438171387
    5. '   ' → logprob: -8.806994438171387
    6. '
' → logprob: -9.181994438171387
    7. ',
' → logprob: -9.431994438171387
    8. ' self' → logprob: -9.681994438171387
    9. '        ' → logprob: -10.181994438171387
    10. '           ' → logprob: -10.306994438171387

Token 1823: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -8.602024900028482e-05
    2. '       ' → logprob: -9.500085830688477
    3. ' self' → logprob: -11.500085830688477
    4. '
' → logprob: -14.875085830688477
    5. '   ' → logprob: -15.000085830688477
    6. '           ' → logprob: -15.625085830688477
    7. '	self' → logprob: -15.875085830688477
    8. '        
' → logprob: -18.375085830688477
    9. '        ' → logprob: -20.000085830688477
    10. 'm' → logprob: -20.000085830688477

Token 1824: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.012710356153547764
    2. '.constraints' → logprob: -4.7627105712890625
    3. '.' → logprob: -5.5127105712890625
    4. 'm' → logprob: -11.262710571289062
    5. 'constraints' → logprob: -11.387710571289062
    6. '.constraint' → logprob: -12.262710571289062
    7. '.n' → logprob: -12.262710571289062
    8. ' .' → logprob: -12.512710571289062
    9. '.м' → logprob: -12.512710571289062
    10. 'Constraints' → logprob: -13.137710571289062

Token 1825: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16566847264766693
    2. ',' → logprob: -2.290668487548828
    3. '<|end|>' → logprob: -3.415668487548828
    4. ')' → logprob: -4.540668487548828
    5. ' =' → logprob: -5.290668487548828
    6. '<|end|>' → logprob: -7.290668487548828
    7. '   ' → logprob: -7.790668487548828
    8. '.' → logprob: -7.790668487548828
    9. '+' → logprob: -8.040668487548828
    10. '       ' → logprob: -8.790668487548828

Token 1826: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0017580024432390928
    2. ' m' → logprob: -6.376758098602295
    3. 'constraints' → logprob: -10.001757621765137
    4. ' constraints' → logprob: -11.751757621765137
    5. 'len' → logprob: -13.251757621765137
    6. '    ' → logprob: -15.376757621765137
    7. '   ' → logprob: -15.376757621765137
    8. '	m' → logprob: -15.876757621765137
    9. ' len' → logprob: -16.001758575439453
    10. '
' → logprob: -16.376758575439453

Token 1827: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004750745836645365
    2. 'self' → logprob: -5.879750728607178
    3. ',' → logprob: -6.754750728607178
    4. '<|end|>' → logprob: -8.379751205444336
    5. '           ' → logprob: -8.754751205444336
    6. '   ' → logprob: -9.004751205444336
    7. '
' → logprob: -9.379751205444336
    8. ' self' → logprob: -10.004751205444336
    9. ',
' → logprob: -10.379751205444336
    10. '        
' → logprob: -10.879751205444336

Token 1828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033315911423414946
    2. 'self' → logprob: -6.003331661224365
    3. ',' → logprob: -7.253331661224365
    4. '           ' → logprob: -9.753331184387207
    5. ' self' → logprob: -10.628331184387207
    6. '<|end|>' → logprob: -10.753331184387207
    7. '   ' → logprob: -11.003331184387207
    8. ',
' → logprob: -11.753331184387207
    9. '        
' → logprob: -12.628331184387207
    10. '```' → logprob: -12.753331184387207

Token 1829: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005588395055383444
    2. ' self' → logprob: -5.255588531494141
    3. '       ' → logprob: -8.13058853149414
    4. '           ' → logprob: -10.25558853149414
    5. '   ' → logprob: -11.38058853149414
    6. '
' → logprob: -12.13058853149414
    7. '	self' → logprob: -12.75558853149414
    8. 'constraints' → logprob: -12.75558853149414
    9. '```' → logprob: -13.75558853149414
    10. ' constraints' → logprob: -15.75558853149414

Token 1830: '.constraints' (ID: 62986)
  Prédit: '.constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraints' → logprob: -0.005894191563129425
    2. '.positions' → logprob: -5.255894184112549
    3. '.constraint' → logprob: -8.380894660949707
    4. '.const' → logprob: -9.130894660949707
    5. 'constraints' → logprob: -9.255894660949707
    6. '.sh' → logprob: -9.255894660949707
    7. '.con' → logprob: -10.255894660949707
    8. '.shop' → logprob: -10.630894660949707
    9. '.classes' → logprob: -11.005894660949707
    10. '.position' → logprob: -12.130894660949707

Token 1831: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023268425837159157
    2. ' =' → logprob: -3.773268461227417
    3. '_' → logprob: -11.023268699645996
    4. '.extend' → logprob: -13.398268699645996
    5. '   ' → logprob: -13.648268699645996
    6. '=
' → logprob: -13.898268699645996
    7. '.append' → logprob: -14.273268699645996
    8. ',' → logprob: -14.773268699645996
    9. '=self' → logprob: -15.148268699645996
    10. ' =
' → logprob: -15.398268699645996

Token 1832: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.029778262600302696
    2. ' constraints' → logprob: -3.529778242111206
    3. '[' → logprob: -10.779778480529785
    4. '[
' → logprob: -13.029778480529785
    5. 'constraint' → logprob: -13.029778480529785
    6. ' [' → logprob: -13.904778480529785
    7. '[(' → logprob: -14.779778480529785
    8. 'list' → logprob: -15.154778480529785
    9. '[]' → logprob: -15.279778480529785
    10. 'const' → logprob: -15.529778480529785

Token 1833: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1834: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1835: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11365535855293274
    2. '<|end|>' → logprob: -2.8636553287506104
    3. 'def' → logprob: -3.6136553287506104
    4. '       ' → logprob: -4.2386555671691895
    5. ' self' → logprob: -5.6136555671691895
    6. '```' → logprob: -6.2386555671691895
    7. '
' → logprob: -6.3636555671691895
    8. '   ' → logprob: -6.8636555671691895
    9. '	self' → logprob: -8.863655090332031
    10. ')' → logprob: -9.113655090332031

Token 1836: '.cal' (ID: 40302)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.21907822787761688
    2. '.pl' → logprob: -2.219078302383423
    3. '.sh' → logprob: -3.594078302383423
    4. '.M' → logprob: -4.219078063964844
    5. '.m' → logprob: -4.594078063964844
    6. '.shop' → logprob: -4.844078063964844
    7. '.' → logprob: -5.469078063964844
    8. '.s' → logprob: -5.719078063964844
    9. '._' → logprob: -5.719078063964844
    10. '.vis' → logprob: -6.094078063964844

Token 1837: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.0010204248828813434
    2. 'c' → logprob: -7.001020431518555
    3. 'cul' → logprob: -9.501020431518555
    4. 'cular' → logprob: -10.501020431518555
    5. 'culation' → logprob: -13.126020431518555
    6. 'calculator' → logprob: -13.251020431518555
    7. 'culate' → logprob: -13.751020431518555
    8. 'cula' → logprob: -14.001020431518555
    9. 'culated' → logprob: -14.626020431518555
    10. '   ' → logprob: -16.501020431518555

Token 1838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695182859897614
    2. ' =' → logprob: -2.1269519329071045
    3. '.' → logprob: -11.251952171325684
    4. '_' → logprob: -12.501952171325684
    5. '.=' → logprob: -12.876952171325684
    6. '   ' → logprob: -13.001952171325684
    7. '=self' → logprob: -14.376952171325684
    8. '=
' → logprob: -15.001952171325684
    9. 's' → logprob: -15.001952171325684
    10. '_=' → logprob: -15.251952171325684

Token 1839: ' Mall' (ID: 34192)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07912540435791016
    2. 'Mall' → logprob: -2.57912540435791
    3. ' self' → logprob: -8.45412540435791
    4. ' Mall' → logprob: -10.82912540435791
    5. '   ' → logprob: -13.32912540435791
    6. '(self' → logprob: -14.57912540435791
    7. '
' → logprob: -15.20412540435791
    8. '=self' → logprob: -16.579124450683594
    9. 'Self' → logprob: -16.704124450683594
    10. '	self' → logprob: -16.704124450683594

Token 1840: 'Visit' (ID: 30514)
  Prédit: 'Visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Visit' → logprob: -6.704273118884885e-07
    2. 'Walk' → logprob: -15.500000953674316
    3. ' Visit' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.125
    5. '
' → logprob: -17.0
    6. '       ' → logprob: -18.125
    7. '    
' → logprob: -18.375
    8. 'Minimal' → logprob: -18.625
    9. 'Visits' → logprob: -18.75
    10. 'Visitor' → logprob: -18.875

Token 1841: 'Planner' (ID: 120933)
  Prédit: 'Planner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -1.4021237802808173e-05
    2. 'planner' → logprob: -11.250014305114746
    3. 'Calculator' → logprob: -14.000014305114746
    4. ' Planner' → logprob: -16.50001335144043
    5. 'Plan' → logprob: -17.25001335144043
    6. ' planner' → logprob: -18.62501335144043
    7. 'Painter' → logprob: -20.12501335144043
    8. '
' → logprob: -20.12501335144043
    9. 'Planning' → logprob: -20.75001335144043
    10. 'Visitor' → logprob: -21.12501335144043

Token 1842: '.Min' (ID: 35577)
  Prédit: '.Min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Min' → logprob: -0.0019361276645213366
    2. 'Minimal' → logprob: -6.876935958862305
    3. '.M' → logprob: -7.126935958862305
    4. ' Minimal' → logprob: -9.876935958862305
    5. '.Minimum' → logprob: -10.251935958862305
    6. ' minimal' → logprob: -12.751935958862305
    7. '.' → logprob: -13.001935958862305
    8. '.MIN' → logprob: -13.376935958862305
    9. ' .' → logprob: -13.751935958862305
    10. 'minimal' → logprob: -13.751935958862305

Token 1843: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -1.9361264946837764e-07
    2. 'inal' → logprob: -16.125
    3. 'im' → logprob: -19.75
    4. 'IMAL' → logprob: -19.75
    5. 'imum' → logprob: -19.875
    6. 'iminal' → logprob: -19.875
    7. 'imals' → logprob: -20.125
    8. 'i' → logprob: -20.875
    9. 'Walk' → logprob: -21.0
    10. 'mal' → logprob: -21.0

Token 1844: 'Walk' (ID: 37063)
  Prédit: 'Walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Walk' → logprob: -4.320199877838604e-07
    2. '_walk' → logprob: -15.625
    3. ' Walk' → logprob: -15.75
    4. 'walk' → logprob: -18.25
    5. 'Visit' → logprob: -20.0
    6. 'Walking' → logprob: -20.125
    7. 'Walker' → logprob: -20.875
    8. 'W' → logprob: -21.0
    9. ' walk' → logprob: -21.5
    10. 'Watch' → logprob: -22.5

Token 1845: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -1.9361264946837764e-07
    2. 'calculator' → logprob: -15.75
    3. ' Calculator' → logprob: -17.0
    4. 'culator' → logprob: -17.25
    5. 'Calcul' → logprob: -18.375
    6. 'Calculate' → logprob: -18.625
    7. 'Planner' → logprob: -18.75
    8. 'Evaluator' → logprob: -19.75
    9. 'Allocator' → logprob: -20.625
    10. '
' → logprob: -20.75

Token 1846: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.015497404150664806
    2. '(self' → logprob: -4.265497207641602
    3. '(' → logprob: -7.265497207641602
    4. '(
' → logprob: -7.390497207641602
    5. 'self' → logprob: -11.390497207641602
    6. ' (' → logprob: -12.640497207641602
    7. 'n' → logprob: -14.015497207641602
    8. '   ' → logprob: -15.265497207641602
    9. '```' → logprob: -15.265497207641602
    10. ' self' → logprob: -15.765497207641602

Token 1847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00892571173608303
    2. ',self' → logprob: -5.008925914764404
    3. ',const' → logprob: -6.133925914764404
    4. ',
' → logprob: -10.383925437927246
    5. 'self' → logprob: -12.633925437927246
    6. 'constraints' → logprob: -13.258925437927246
    7. 'const' → logprob: -13.383925437927246
    8. ' ,' → logprob: -13.508925437927246
    9. '   ' → logprob: -15.508925437927246
    10. '(self' → logprob: -15.508925437927246

Token 1848: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.03153449669480324
    2. 'self' → logprob: -3.531534433364868
    3. ' constraints' → logprob: -6.531534671783447
    4. ' self' → logprob: -8.031534194946289
    5. '   ' → logprob: -15.031534194946289
    6. '       ' → logprob: -15.656534194946289
    7. 'constraint' → logprob: -16.65653419494629
    8. '[self' → logprob: -17.65653419494629
    9. '
' → logprob: -17.65653419494629
    10. '           ' → logprob: -18.03153419494629

Token 1849: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.37500286102295
    3. '       ' → logprob: -14.25000286102295
    4. ' )' → logprob: -14.37500286102295
    5. '   ' → logprob: -15.62500286102295
    6. '<|end|>' → logprob: -17.125003814697266
    7. ' ' → logprob: -18.125003814697266
    8. ')

' → logprob: -18.625003814697266
    9. '())' → logprob: -18.750003814697266
    10. '),' → logprob: -18.875003814697266

Token 1850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36615192890167236
    2. 'def' → logprob: -1.6161519289016724
    3. ' def' → logprob: -3.366151809692383
    4. '    
' → logprob: -3.616151809692383
    5. '
' → logprob: -3.991151809692383
    6. '	def' → logprob: -4.491151809692383
    7. '<|end|>' → logprob: -5.366151809692383
    8. '       ' → logprob: -5.366151809692383
    9. '  
' → logprob: -5.991151809692383
    10. '        
' → logprob: -6.241151809692383

Token 1851: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14552131295204163
    2. '   ' → logprob: -2.395521402359009
    3. ' def' → logprob: -3.145521402359009
    4. '
' → logprob: -7.39552116394043
    5. '    
' → logprob: -7.52052116394043
    6. '        
' → logprob: -9.64552116394043
    7. '       ' → logprob: -11.27052116394043
    8. ' ' → logprob: -11.64552116394043
    9. '	def' → logprob: -11.77052116394043
    10. ' 
' → logprob: -12.77052116394043

Token 1852: ' solve' (ID: 17722)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.7479062080383301
    2. 'plan' → logprob: -1.99790620803833
    3. ' minimal' → logprob: -1.99790620803833
    4. 'compute' → logprob: -1.99790620803833
    5. 'calculate' → logprob: -2.74790620803833
    6. 'get' → logprob: -3.24790620803833
    7. ' plan' → logprob: -4.49790620803833
    8. ' compute' → logprob: -6.12290620803833
    9. 'find' → logprob: -6.74790620803833
    10. ' get' → logprob: -6.99790620803833

Token 1853: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007637155242264271
    2. '(' → logprob: -4.882637023925781
    3. '(
' → logprob: -11.257637023925781
    4. 'self' → logprob: -11.882637023925781
    5. '_' → logprob: -13.132637023925781
    6. '_self' → logprob: -13.257637023925781
    7. '()' → logprob: -13.382637023925781
    8. ' (' → logprob: -13.382637023925781
    9. '_(' → logprob: -14.132637023925781
    10. '   ' → logprob: -14.257637023925781

Token 1854: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1328248381614685
    2. '):
' → logprob: -2.1328248977661133
    3. ')' → logprob: -5.882824897766113
    4. '(self' → logprob: -6.757824897766113
    5. 'self' → logprob: -6.882824897766113
    6. ',' → logprob: -7.507824897766113
    7. '):
' → logprob: -8.882824897766113
    8. ')(' → logprob: -9.882824897766113
    9. '():' → logprob: -10.132824897766113
    10. '   ' → logprob: -10.882824897766113

Token 1855: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001402621390298009
    2. '        
' → logprob: -7.501402854919434
    3. 'return' → logprob: -8.251402854919434
    4. '
' → logprob: -8.626402854919434
    5. '```' → logprob: -9.501402854919434
    6. ' return' → logprob: -9.626402854919434
    7. '    
' → logprob: -10.001402854919434
    8. '(self' → logprob: -10.001402854919434
    9. '(' → logprob: -10.251402854919434
    10. '()' → logprob: -10.626402854919434

Token 1856: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06201854720711708
    2. '       ' → logprob: -2.812018632888794
    3. ' return' → logprob: -10.062018394470215
    4. '   ' → logprob: -12.312018394470215
    5. '```' → logprob: -12.812018394470215
    6. '
' → logprob: -14.687018394470215
    7. '	return' → logprob: -15.312018394470215
    8. '{return' → logprob: -15.312018394470215
    9. '	' → logprob: -17.68701934814453
    10. '_return' → logprob: -18.18701934814453

Token 1857: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687217235565186
    2. ' self' → logprob: -1.1368721723556519
    3. '	self' → logprob: -14.386872291564941
    4. '(self' → logprob: -15.261872291564941
    5. '   ' → logprob: -15.636872291564941
    6. ' ' → logprob: -16.011871337890625
    7. '       ' → logprob: -17.511871337890625
    8. '        
' → logprob: -18.261871337890625
    9. '_self' → logprob: -18.636871337890625
    10. '​' → logprob: -18.886871337890625

Token 1858: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.1300942301750183
    2. '.' → logprob: -2.130094289779663
    3. '.calc' → logprob: -6.380094051361084
    4. ' .' → logprob: -7.005094051361084
    5. '.calculate' → logprob: -8.380094528198242
    6. '.Cal' → logprob: -9.255094528198242
    7. '.min' → logprob: -9.630094528198242
    8. '   ' → logprob: -9.755094528198242
    9. '.solve' → logprob: -11.255094528198242
    10. '._' → logprob: -11.255094528198242

Token 1859: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -7.822646693966817e-06
    2. 'cul' → logprob: -13.000007629394531
    3. 'calculator' → logprob: -13.250007629394531
    4. 'ulator' → logprob: -13.625007629394531
    5. 'c' → logprob: -13.625007629394531
    6. 'culate' → logprob: -14.625007629394531
    7. 'cular' → logprob: -14.625007629394531
    8. 'lator' → logprob: -15.750007629394531
    9. 'cula' → logprob: -17.37500762939453
    10. 'cu' → logprob: -17.37500762939453

Token 1860: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.08913292735815048
    2. '.' → logprob: -2.4641330242156982
    3. '.calculate' → logprob: -9.214133262634277
    4. '.solve' → logprob: -10.089133262634277
    5. 'find' → logprob: -10.964133262634277
    6. ' .' → logprob: -11.214133262634277
    7. '.calc' → logprob: -12.589133262634277
    8. '.get' → logprob: -12.964133262634277
    9. '._' → logprob: -13.214133262634277
    10. '.
' → logprob: -13.214133262634277

Token 1861: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0001825642102630809
    2. '_' → logprob: -9.000182151794434
    3. '```' → logprob: -11.500182151794434
    4. '_length' → logprob: -11.625182151794434
    5. 'minimal' → logprob: -12.250182151794434
    6. '('_' → logprob: -12.500182151794434
    7. '_m' → logprob: -12.625182151794434
    8. '_max' → logprob: -12.625182151794434
    9. 'min' → logprob: -13.250182151794434
    10. '()' → logprob: -13.375182151794434

Token 1862: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -5.5027299822540954e-05
    2. 'inal' → logprob: -10.000055313110352
    3. 'imum' → logprob: -12.250055313110352
    4. '_' → logprob: -12.625055313110352
    5. 'al' → logprob: -15.125055313110352
    6. 'iminal' → logprob: -15.250055313110352
    7. 'ical' → logprob: -16.00005531311035
    8. 'ial' → logprob: -16.00005531311035
    9. 'ute' → logprob: -16.25005531311035
    10. 'imals' → logprob: -16.37505531311035

Token 1863: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.399378566537052e-05
    2. '_' → logprob: -9.625083923339844
    3. ' _' → logprob: -12.125083923339844
    4. '_l' → logprob: -12.625083923339844
    5. '_le' → logprob: -12.750083923339844
    6. '_len' → logprob: -13.375083923339844
    7. '_code' → logprob: -13.875083923339844
    8. '_lengths' → logprob: -13.875083923339844
    9. '_depth' → logprob: -14.500083923339844
    10. '_size' → logprob: -14.750083923339844

Token 1864: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5459666848182678
    2. '<|end|>' → logprob: -1.295966625213623
    3. '
' → logprob: -2.920966625213623
    4. '(' → logprob: -3.045966625213623
    5. '(
' → logprob: -3.920966625213623
    6. '()
' → logprob: -4.795966625213623
    7. '\n' → logprob: -4.920966625213623
    8. '```' → logprob: -5.170966625213623
    9. '#' → logprob: -6.670966625213623
    10. ':' → logprob: -7.420966625213623

Token 1865: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5564223527908325
    2. '<|end|>' → logprob: -0.9314223527908325
    3. '#' → logprob: -4.056422233581543
    4. '```' → logprob: -4.556422233581543
    5. '
' → logprob: -6.931422233581543
    6. '<|end|>' → logprob: -7.056422233581543
    7. '.' → logprob: -7.556422233581543
    8. '}' → logprob: -7.556422233581543
    9. '[' → logprob: -7.681422233581543
    10. ']' → logprob: -7.806422233581543

Token 1866: ' main' (ID: 2758)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.7131492495536804
    2. ' main' → logprob: -0.8381492495536804
    3. ' example' → logprob: -2.963149309158325
    4. ' solve' → logprob: -4.588149070739746
    5. ' solution' → logprob: -5.838149070739746
    6. '_example' → logprob: -6.213149070739746
    7. '__' → logprob: -6.338149070739746
    8. '_test' → logprob: -6.963149070739746
    9. ' run' → logprob: -7.088149070739746
    10. ' __' → logprob: -7.213149070739746

Token 1867: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004661403596401215
    2. '():
' → logprob: -5.379661560058594
    3. '()' → logprob: -10.254661560058594
    4. ' ():' → logprob: -12.879661560058594
    5. '(' → logprob: -13.504661560058594
    6. '():
' → logprob: -13.879661560058594
    7. '():

' → logprob: -14.879661560058594
    8. ':' → logprob: -15.004661560058594
    9. '().' → logprob: -15.504661560058594
    10. '()>' → logprob: -16.129661560058594

Token 1868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04060790687799454
    2. 'import' → logprob: -3.2906079292297363
    3. ' import' → logprob: -6.915607929229736
    4. '```' → logprob: -6.915607929229736
    5. ' if' → logprob: -8.915607452392578
    6. ' n' → logprob: -8.915607452392578
    7. 'n' → logprob: -8.915607452392578
    8. 'if' → logprob: -9.540607452392578
    9. '	import' → logprob: -9.665607452392578
    10. '   ' → logprob: -11.540607452392578

Token 1869: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.08063320815563202
    2. 'n' → logprob: -3.0806331634521484
    3. ' import' → logprob: -3.7056331634521484
    4. '   ' → logprob: -5.205633163452148
    5. ' n' → logprob: -6.580633163452148
    6. 't' → logprob: -10.455633163452148
    7. '	import' → logprob: -10.830633163452148
    8. '```' → logprob: -11.205633163452148
    9. 'if' → logprob: -11.330633163452148
    10. '	n' → logprob: -13.330633163452148

Token 1870: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004307884373702109
    2. ' sys' → logprob: -7.750430583953857
    3. '=sys' → logprob: -16.000431060791016
    4. '(sys' → logprob: -19.250431060791016
    5. '	sys' → logprob: -20.125431060791016
    6. 'math' → logprob: -20.625431060791016
    7. 'io' → logprob: -21.000431060791016
    8. '_sys' → logprob: -21.375431060791016
    9. '```' → logprob: -22.250431060791016
    10. '.sys' → logprob: -23.750431060791016

Token 1871: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043514396995306015
    2. '
' → logprob: -3.6685144901275635
    3. 'input' → logprob: -4.168514251708984
    4. '    
' → logprob: -7.293514251708984
    5. ' input' → logprob: -8.043514251708984
    6. '```' → logprob: -8.043514251708984
    7. 'import' → logprob: -9.418514251708984
    8. ' readline' → logprob: -9.793514251708984
    9. 'for' → logprob: -9.918514251708984
    10. 'data' → logprob: -10.043514251708984

Token 1872: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09212587028741837
    2. '
' → logprob: -3.34212589263916
    3. 'input' → logprob: -3.71712589263916
    4. '    
' → logprob: -3.84212589263916
    5. '```' → logprob: -5.84212589263916
    6. 'import' → logprob: -6.71712589263916
    7. 'def' → logprob: -6.71712589263916
    8. ' input' → logprob: -7.09212589263916
    9. ' readline' → logprob: -7.84212589263916
    10. 'data' → logprob: -9.71712589263916

Token 1873: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.036384694278240204
    2. '   ' → logprob: -3.5363845825195312
    3. ' input' → logprob: -5.036384582519531
    4. 'data' → logprob: -9.411384582519531
    5. 'n' → logprob: -12.036384582519531
    6. '```' → logprob: -12.286384582519531
    7. 'lines' → logprob: -12.411384582519531
    8. 'for' → logprob: -12.536384582519531
    9. '
' → logprob: -12.786384582519531
    10. 'line' → logprob: -12.911384582519531

Token 1874: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22746065258979797
    2. '_line' → logprob: -2.2274606227874756
    3. '=' → logprob: -2.9774606227874756
    4. '_data' → logprob: -3.7274606227874756
    5. '().' → logprob: -4.477460861206055
    6. ' =' → logprob: -5.852460861206055
    7. '_' → logprob: -5.852460861206055
    8. '_lines' → logprob: -6.727460861206055
    9. '.readline' → logprob: -7.227460861206055
    10. 'data' → logprob: -7.977460861206055

Token 1875: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006723183207213879
    2. ' sys' → logprob: -5.006723403930664
    3. 'input' → logprob: -12.381723403930664
    4. '=sys' → logprob: -13.006723403930664
    5. 'lambda' → logprob: -13.881723403930664
    6. '	sys' → logprob: -15.006723403930664
    7. '(sys' → logprob: -17.131723403930664
    8. ' input' → logprob: -18.006723403930664
    9. 'stdin' → logprob: -18.756723403930664
    10. ' lambda' → logprob: -18.756723403930664

Token 1876: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10725358873605728
    2. '().' → logprob: -3.1072535514831543
    3. '.readline' → logprob: -4.232253551483154
    4. '.' → logprob: -4.482253551483154
    5. '   ' → logprob: -5.482253551483154
    6. '```' → logprob: -5.607253551483154
    7. '.stdout' → logprob: -5.732253551483154
    8. 'stdin' → logprob: -5.982253551483154
    9. 'import' → logprob: -6.232253551483154
    10. ' .' → logprob: -6.357253551483154

Token 1877: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.030632521957159042
    2. '.' → logprob: -3.530632495880127
    3. '().' → logprob: -8.030632972717285
    4. 'read' → logprob: -8.405632972717285
    5. '.read' → logprob: -8.405632972717285
    6. '.readlines' → logprob: -9.655632972717285
    7. ' readline' → logprob: -11.280632972717285
    8. '_read' → logprob: -11.405632972717285
    9. '_reader' → logprob: -12.655632972717285
    10. '.stdin' → logprob: -13.155632972717285

Token 1878: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010463099926710129
    2. 'n' → logprob: -5.760463237762451
    3. '
' → logprob: -5.760463237762451
    4. 'def' → logprob: -5.760463237762451
    5. '(n' → logprob: -7.510463237762451
    6. '()' → logprob: -8.635462760925293
    7. '()
' → logprob: -9.010462760925293
    8. '    
' → logprob: -9.760462760925293
    9. 't' → logprob: -11.260462760925293
    10. '	n' → logprob: -11.260462760925293

Token 1879: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007542734500020742
    2. 'n' → logprob: -5.132542610168457
    3. '
' → logprob: -6.882542610168457
    4. 'def' → logprob: -8.007542610168457
    5. '(n' → logprob: -9.132542610168457
    6. '```' → logprob: -9.382542610168457
    7. '    
' → logprob: -10.507542610168457
    8. 'for' → logprob: -11.007542610168457
    9. '()' → logprob: -12.257542610168457
    10. 'num' → logprob: -12.882542610168457

Token 1880: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0042237089946866035
    2. 't' → logprob: -5.504223823547363
    3. '   ' → logprob: -9.754223823547363
    4. 'N' → logprob: -10.004223823547363
    5. ' n' → logprob: -11.004223823547363
    6. 'T' → logprob: -11.004223823547363
    7. '
' → logprob: -12.754223823547363
    8. '```' → logprob: -12.754223823547363
    9. '_n' → logprob: -13.754223823547363
    10. '	n' → logprob: -14.004223823547363

Token 1881: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005598236457444727
    2. ' ,' → logprob: -8.25055980682373
    3. '=' → logprob: -9.37555980682373
    4. ' =' → logprob: -9.50055980682373
    5. ',n' → logprob: -10.25055980682373
    6. '   ' → logprob: -10.75055980682373
    7. ',m' → logprob: -11.50055980682373
    8. ',p' → logprob: -11.62555980682373
    9. ',int' → logprob: -11.87555980682373
    10. ' ' → logprob: -11.87555980682373

Token 1882: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2521436810493469
    2. ' m' → logprob: -1.5021436214447021
    3. '=' → logprob: -9.377143859863281
    4. ' =' → logprob: -9.627143859863281
    5. ' ' → logprob: -10.627143859863281
    6. '    ' → logprob: -10.877143859863281
    7. '=m' → logprob: -12.127143859863281
    8. ',m' → logprob: -12.252143859863281
    9. ' 
' → logprob: -12.627143859863281
    10. '   ' → logprob: -13.127143859863281

Token 1883: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04742934927344322
    2. ' =' → logprob: -3.172429323196411
    3. ',' → logprob: -5.42242956161499
    4. ' ,' → logprob: -13.797429084777832
    5. '=
' → logprob: -13.922429084777832
    6. '=input' → logprob: -14.047429084777832
    7. '=int' → logprob: -14.797429084777832
    8. ' =
' → logprob: -14.922429084777832
    9. ' ' → logprob: -15.797429084777832
    10. ')' → logprob: -16.17243003845215

Token 1884: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.061969365924596786
    2. 'map' → logprob: -2.81196928024292
    3. '[' → logprob: -13.436969757080078
    4. 'input' → logprob: -16.311969757080078
    5. ' list' → logprob: -17.061969757080078
    6. ' input' → logprob: -17.061969757080078
    7. ' [' → logprob: -17.436969757080078
    8. '	map' → logprob: -17.561969757080078
    9. '(map' → logprob: -17.811969757080078
    10. 'list' → logprob: -17.936969757080078

Token 1885: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004817191977053881
    2. '(' → logprob: -6.129817008972168
    3. '(lambda' → logprob: -6.379817008972168
    4. '(str' → logprob: -7.379817008972168
    5. '(input' → logprob: -8.254817008972168
    6. '[int' → logprob: -10.879817008972168
    7. 'int' → logprob: -11.379817008972168
    8. '=int' → logprob: -12.254817008972168
    9. '(
' → logprob: -12.504817008972168
    10. '()' → logprob: -12.629817008972168

Token 1886: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.035791367292404175
    2. ',input' → logprob: -3.6607913970947266
    3. 'input' → logprob: -5.410791397094727
    4. ',' → logprob: -6.035791397094727
    5. '(' → logprob: -6.160791397094727
    6. '=input' → logprob: -7.910791397094727
    7. '```' → logprob: -10.410791397094727
    8. '(
' → logprob: -11.035791397094727
    9. '(),' → logprob: -11.160791397094727
    10. '[input' → logprob: -11.160791397094727

Token 1887: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003177952254191041
    2. ' input' → logprob: -5.753178119659424
    3. '=input' → logprob: -15.753177642822266
    4. '(input' → logprob: -16.753177642822266
    5. '<input' → logprob: -19.378177642822266
    6. '_input' → logprob: -19.628177642822266
    7. ',input' → logprob: -20.003177642822266
    8. 'int' → logprob: -20.128177642822266
    9. '
' → logprob: -20.378177642822266
    10. ' ' → logprob: -20.503177642822266

Token 1888: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019360085716471076
    2. '()' → logprob: -6.251935958862305
    3. '())' → logprob: -12.251935958862305
    4. '()
' → logprob: -13.001935958862305
    5. '()[' → logprob: -15.251935958862305
    6. '().
' → logprob: -16.626935958862305
    7. ' ().' → logprob: -17.501935958862305
    8. '()]' → logprob: -18.251935958862305
    9. '()>' → logprob: -18.501935958862305
    10. '())
' → logprob: -18.626935958862305

Token 1889: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0026219089049845934
    2. 'strip' → logprob: -6.002622127532959
    3. 'rstrip' → logprob: -8.8776216506958
    4. '(split' → logprob: -12.8776216506958
    5. '().' → logprob: -13.0026216506958
    6. ' split' → logprob: -14.3776216506958
    7. 'plit' → logprob: -14.8776216506958
    8. 's' → logprob: -15.0026216506958
    9. 'spl' → logprob: -15.3776216506958
    10. '_split' → logprob: -15.7526216506958

Token 1890: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3167288899421692
    2. ')' → logprob: -1.3167288303375244
    3. '()' → logprob: -5.6917290687561035
    4. '())
' → logprob: -9.691728591918945
    5. '(' → logprob: -10.941728591918945
    6. ')
' → logprob: -13.066728591918945
    7. '(),' → logprob: -13.816728591918945
    8. '().' → logprob: -13.941728591918945
    9. '()
' → logprob: -14.066728591918945
    10. '   ' → logprob: -14.441728591918945

Token 1891: '   ' (ID: 271)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.06459808349609375
    2. ' constraints' → logprob: -2.8145980834960938
    3. 'shops' → logprob: -6.689598083496094
    4. ' shops' → logprob: -7.564598083496094
    5. '   ' → logprob: -7.814598083496094
    6. 'c' → logprob: -8.064598083496094
    7. '_constraints' → logprob: -9.314598083496094
    8. 'constraint' → logprob: -11.064598083496094
    9. 's' → logprob: -12.064598083496094
    10. 'con' → logprob: -12.064598083496094

Token 1892: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' (adapté à ' constraints') → logprob: -0.0022092582657933235
    2. ' constraints' → logprob: -6.127209186553955
    3. 'c' → logprob: -11.002209663391113
    4. '```' → logprob: -12.877209663391113
    5. '_constraints' → logprob: -13.252209663391113
    6. '
' → logprob: -13.377209663391113
    7. 'constraint' → logprob: -14.627209663391113
    8. '   ' → logprob: -14.627209663391113
    9. 'cons' → logprob: -15.752209663391113
    10. '[
' → logprob: -15.877209663391113

Token 1893: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07936085760593414
    2. ' =' → logprob: -2.5793609619140625
    3. '=[]' → logprob: -7.7043609619140625
    4. '[]' → logprob: -11.329360961914062
    5. '=[]
' → logprob: -12.579360961914062
    6. '[' → logprob: -13.704360961914062
    7. '.append' → logprob: -14.079360961914062
    8. '   ' → logprob: -14.079360961914062
    9. '=[' → logprob: -14.079360961914062
    10. '[:]' → logprob: -14.454360961914062

Token 1894: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018646057695150375
    2. '[]' → logprob: -4.268646240234375
    3. '[m' → logprob: -5.518646240234375
    4. '[n' → logprob: -8.768646240234375
    5. '[int' → logprob: -9.018646240234375
    6. '[
' → logprob: -10.268646240234375
    7. '[]
' → logprob: -10.518646240234375
    8. '[p' → logprob: -10.768646240234375
    9. ' [' → logprob: -11.268646240234375
    10. '[i' → logprob: -11.393646240234375

Token 1895: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -3.440506407059729e-05
    2. ' tuple' → logprob: -10.50003433227539
    3. '(tuple' → logprob: -12.50003433227539
    4. 'list' → logprob: -12.75003433227539
    5. '   ' → logprob: -15.50003433227539
    6. 'map' → logprob: -16.75003433227539
    7. '
' → logprob: -18.62503433227539
    8. 'tu' → logprob: -19.75003433227539
    9. '       ' → logprob: -21.25003433227539
    10. '_tuple' → logprob: -21.62503433227539

Token 1896: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009120595059357584
    2. 'map' → logprob: -7.000912189483643
    3. '(int' → logprob: -14.875911712646484
    4. ' map' → logprob: -16.875911712646484
    5. '(input' → logprob: -17.000911712646484
    6. '	map' → logprob: -17.250911712646484
    7. '_map' → logprob: -18.125911712646484
    8. ',map' → logprob: -18.375911712646484
    9. '(
' → logprob: -18.750911712646484
    10. '(sorted' → logprob: -19.000911712646484

Token 1897: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0233075562864542
    2. 'int' → logprob: -3.7733075618743896
    3. '[int' → logprob: -10.023307800292969
    4. '=int' → logprob: -12.023307800292969
    5. ',int' → logprob: -12.523307800292969
    6. '<int' → logprob: -12.648307800292969
    7. ' int' → logprob: -13.398307800292969
    8. ':int' → logprob: -13.773307800292969
    9. ']int' → logprob: -14.148307800292969
    10. '(str' → logprob: -15.023307800292969

Token 1898: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.48699983954429626
    2. ',' → logprob: -1.2369998693466187
    3. '(input' → logprob: -2.361999750137329
    4. 'input' → logprob: -7.986999988555908
    5. '(' → logprob: -8.23699951171875
    6. '   ' → logprob: -8.36199951171875
    7. ',int' → logprob: -9.48699951171875
    8. ' ,' → logprob: -10.11199951171875
    9. '[input' → logprob: -10.11199951171875
    10. '(int' → logprob: -10.73699951171875

Token 1899: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0206720617134124e-05
    2. ' input' → logprob: -11.50001049041748
    3. '[input' → logprob: -17.625009536743164
    4. '(input' → logprob: -18.000009536743164
    5. 'list' → logprob: -19.750009536743164
    6. ',input' → logprob: -20.125009536743164
    7. '<input' → logprob: -21.125009536743164
    8. '   ' → logprob: -21.125009536743164
    9. '=input' → logprob: -21.375009536743164
    10. '_input' → logprob: -21.500009536743164

Token 1900: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.011373155459296e-05
    2. '()' → logprob: -10.500030517578125
    3. '()
' → logprob: -13.875030517578125
    4. '.readline' → logprob: -14.125030517578125
    5. '()[' → logprob: -15.250030517578125
    6. '(' → logprob: -15.625030517578125
    7. '.split' → logprob: -15.875030517578125
    8. '   ' → logprob: -16.125030517578125
    9. ' ().' → logprob: -17.000030517578125
    10. '())' → logprob: -17.500030517578125

Token 1901: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004309076175559312
    2. 'strip' → logprob: -7.750431060791016
    3. 'rstrip' → logprob: -16.000431060791016
    4. ' split' → logprob: -16.125431060791016
    5. '(split' → logprob: -18.625431060791016
    6. 'read' → logprob: -19.875431060791016
    7. '.split' → logprob: -20.000431060791016
    8. 'str' → logprob: -21.000431060791016
    9. 'spl' → logprob: -21.000431060791016
    10. ' strip' → logprob: -21.875431060791016

Token 1902: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0792371928691864
    2. '))' → logprob: -2.579237222671509
    3. '()' → logprob: -8.07923698425293
    4. '()))
' → logprob: -10.57923698425293
    5. '())' → logprob: -12.32923698425293
    6. '   ' → logprob: -12.82923698425293
    7. '().' → logprob: -13.20423698425293
    8. '(' → logprob: -13.95423698425293
    9. '()
' → logprob: -14.57923698425293
    10. ' ' → logprob: -14.82923698425293

Token 1903: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42176052927970886
    2. ' for' → logprob: -1.5467605590820312
    3. 'for' → logprob: -2.4217605590820312
    4. ')' → logprob: -3.6717605590820312
    5. '   ' → logprob: -4.171760559082031
    6. ']' → logprob: -7.921760559082031
    7. '(' → logprob: -8.171760559082031
    8. '()]' → logprob: -8.421760559082031
    9. '       ' → logprob: -8.671760559082031
    10. ')]' → logprob: -8.921760559082031

Token 1904: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.749814019713085e-06
    2. '_i' → logprob: -12.625006675720215
    3. '_range' → logprob: -12.875006675720215
    4. '_in' → logprob: -15.125006675720215
    5. '_
' → logprob: -15.500006675720215
    6. ' _' → logprob: -15.875006675720215
    7. '_line' → logprob: -17.50000762939453
    8. ' range' → logprob: -17.50000762939453
    9. '
' → logprob: -17.87500762939453
    10. '_tokens' → logprob: -17.87500762939453

Token 1905: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.074907287256792e-05
    2. ' range' → logprob: -9.75006103515625
    3. '_range' → logprob: -13.62506103515625
    4. 'in' → logprob: -14.25006103515625
    5. '_' → logprob: -15.12506103515625
    6. '(range' → logprob: -16.25006103515625
    7. ' in' → logprob: -18.12506103515625
    8. '
' → logprob: -18.50006103515625
    9. '	range' → logprob: -18.75006103515625
    10. '   ' → logprob: -19.25006103515625

Token 1906: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. 'm' → logprob: -19.75001335144043
    4. '(range' → logprob: -19.75001335144043
    5. '
' → logprob: -20.62501335144043
    6. '_range' → logprob: -21.00001335144043
    7. '	range' → logprob: -21.25001335144043
    8. '[' → logprob: -22.37501335144043
    9. '   ' → logprob: -23.00001335144043
    10. '.range' → logprob: -23.50001335144043

Token 1907: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.635164754698053e-05
    2. 'm' → logprob: -9.625066757202148
    3. '(' → logprob: -16.25006675720215
    4. ')m' → logprob: -16.62506675720215
    5. '	m' → logprob: -18.25006675720215
    6. ' m' → logprob: -18.37506675720215
    7. '[m' → logprob: -18.50006675720215
    8. '(
' → logprob: -19.12506675720215
    9. '<m' → logprob: -19.25006675720215
    10. '(M' → logprob: -19.62506675720215

Token 1908: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015312091272789985
    2. ']' → logprob: -9.250153541564941
    3. ')' → logprob: -10.250153541564941
    4. '   ' → logprob: -10.875153541564941
    5. ')]
' → logprob: -13.750153541564941
    6. ')])' → logprob: -14.500153541564941
    7. '])]' → logprob: -14.750153541564941
    8. ')],' → logprob: -15.875153541564941
    9. '])' → logprob: -16.000152587890625
    10. '       ' → logprob: -16.375152587890625

Token 1909: '   ' (ID: 271)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' → logprob: -0.39834126830101013
    2. '   ' → logprob: -1.1483412981033325
    3. '
' → logprob: -5.398341178894043
    4. ' planner' → logprob: -6.148341178894043
    5. 'plan' → logprob: -6.398341178894043
    6. '    
' → logprob: -6.523341178894043
    7. 'solver' → logprob: -7.273341178894043
    8. 'pl' → logprob: -8.023341178894043
    9. 'mv' → logprob: -8.273341178894043
    10. 'm' → logprob: -9.273341178894043

Token 1910: ' planner' (ID: 66791)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' (adapté à ' planner') → logprob: -8.077528764260933e-05
    2. 'plan' → logprob: -10.125081062316895
    3. 'mv' → logprob: -11.125081062316895
    4. 'solver' → logprob: -11.250081062316895
    5. ' planner' → logprob: -12.625081062316895
    6. 'mp' → logprob: -12.875081062316895
    7. '   ' → logprob: -13.000081062316895
    8. 'pl' → logprob: -13.000081062316895
    9. 'mall' → logprob: -13.500081062316895
    10. 'm' → logprob: -14.625081062316895

Token 1911: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18326136469841003
    2. '=' → logprob: -2.0582613945007324
    3. '.pl' → logprob: -3.5582613945007324
    4. '   ' → logprob: -4.808261394500732
    5. '.' → logprob: -6.683261394500732
    6. '(pl' → logprob: -7.558261394500732
    7. '.plan' → logprob: -7.933261394500732
    8. '       ' → logprob: -8.308260917663574
    9. '_pl' → logprob: -8.933260917663574
    10. '	pl' → logprob: -9.058260917663574

Token 1912: ' Mall' (ID: 34192)
  Prédit: 'Mall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mall' → logprob: -0.0005530327325686812
    2. ' Mall' → logprob: -7.500553131103516
    3. 'M' → logprob: -18.500553131103516
    4. 'Mal' → logprob: -18.875553131103516
    5. '
' → logprob: -19.000553131103516
    6. 'mall' → logprob: -21.000553131103516
    7. 'Mail' → logprob: -21.250553131103516
    8. '	M' → logprob: -21.750553131103516
    9. ' mall' → logprob: -22.000553131103516
    10. 'Mage' → logprob: -22.000553131103516

Token 1913: 'Visit' (ID: 30514)
  Prédit: 'Visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Visit' → logprob: -1.9361264946837764e-07
    2. ' Visit' → logprob: -16.75
    3. 'Planner' → logprob: -17.75
    4. '   ' → logprob: -17.875
    5. '_visit' → logprob: -18.0
    6. '.Visit' → logprob: -18.25
    7. 'visit' → logprob: -18.375
    8. 'Visits' → logprob: -18.625
    9. '(M' → logprob: -18.875
    10. 'Visitor' → logprob: -19.25

Token 1914: 'Planner' (ID: 120933)
  Prédit: 'Planner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -3.833878508885391e-05
    2. 'planner' → logprob: -10.250038146972656
    3. 'Plan' → logprob: -13.125038146972656
    4. ' Planner' → logprob: -14.125038146972656
    5. ' planner' → logprob: -15.625038146972656
    6. 'Pl' → logprob: -17.625038146972656
    7. '   ' → logprob: -17.750038146972656
    8. '
' → logprob: -17.750038146972656
    9. 'Mall' → logprob: -18.250038146972656
    10. 'Pla' → logprob: -19.250038146972656

Token 1915: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09772762656211853
    2. '(n' → logprob: -2.4727275371551514
    3. '(
' → logprob: -5.8477277755737305
    4. '(pl' → logprob: -5.9727277755737305
    5. '.' → logprob: -6.4727277755737305
    6. '.M' → logprob: -6.7227277755737305
    7. '(M' → logprob: -8.34772777557373
    8. '.Pl' → logprob: -8.72272777557373
    9. 'Planner' → logprob: -10.34772777557373
    10. ' (' → logprob: -10.47272777557373

Token 1916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008234490524046123
    2. ',m' → logprob: -7.125823497772217
    3. ')' → logprob: -11.875823020935059
    4. ' ,' → logprob: -12.250823020935059
    5. ',
' → logprob: -12.750823020935059
    6. '   ' → logprob: -12.875823020935059
    7. ',n' → logprob: -14.500823020935059
    8. '(' → logprob: -15.625823020935059
    9. 'm' → logprob: -15.875823020935059
    10. ',M' → logprob: -16.125823974609375

Token 1917: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.885492621222511e-05
    2. 'constraints' → logprob: -10.000068664550781
    3. 'planner' → logprob: -10.875068664550781
    4. ' m' → logprob: -12.875068664550781
    5. '   ' → logprob: -13.625068664550781
    6. 'pl' → logprob: -15.000068664550781
    7. '
' → logprob: -15.625068664550781
    8. '[m' → logprob: -16.87506866455078
    9. '       ' → logprob: -17.12506866455078
    10. ')m' → logprob: -17.75006866455078

Token 1918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023298701271414757
    2. ',const' → logprob: -3.773298740386963
    3. ')' → logprob: -10.273298263549805
    4. 'const' → logprob: -11.523298263549805
    5. 'constraints' → logprob: -12.398298263549805
    6. '(const' → logprob: -13.273298263549805
    7. ',
' → logprob: -13.773298263549805
    8. '   ' → logprob: -14.148298263549805
    9. ' ,' → logprob: -14.773298263549805
    10. '_constraints' → logprob: -15.398298263549805

Token 1919: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -5.836499985889532e-05
    2. ' constraints' → logprob: -9.7500581741333
    3. 'constraint' → logprob: -19.250059127807617
    4. '.constraints' → logprob: -19.500059127807617
    5. '_constraints' → logprob: -20.125059127807617
    6. '   ' → logprob: -20.375059127807617
    7. 'Constraints' → logprob: -20.625059127807617
    8. ' ' → logprob: -21.250059127807617
    9. 'plans' → logprob: -21.375059127807617
    10. '
' → logprob: -21.625059127807617

Token 1920: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37582525610923767
    2. '   ' → logprob: -1.25082528591156
    3. ')
' → logprob: -3.7508251667022705
    4. '<|end|>' → logprob: -7.12582540512085
    5. '()' → logprob: -8.000824928283691
    6. '
' → logprob: -8.125824928283691
    7. '    
' → logprob: -8.125824928283691
    8. '[' → logprob: -8.250824928283691
    9. '()
' → logprob: -8.375824928283691
    10. '  
' → logprob: -8.500824928283691

Token 1921: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025296485982835293
    2. '   ' → logprob: -6.002529621124268
    3. 'result' → logprob: -10.127530097961426
    4. ' print' → logprob: -11.752530097961426
    5. '```' → logprob: -12.502530097961426
    6. 'return' → logprob: -14.377530097961426
    7. 'res' → logprob: -14.502530097961426
    8. '
' → logprob: -14.502530097961426
    9. '    
' → logprob: -14.877530097961426
    10. '	print' → logprob: -15.252530097961426

Token 1922: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.5776860184123507e-06
    2. 'result' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.87500286102295
    4. '
' → logprob: -16.625001907348633
    5. ' print' → logprob: -17.500001907348633
    6. 'res' → logprob: -18.375001907348633
    7. '    
' → logprob: -18.875001907348633
    8. 'answer' → logprob: -20.625001907348633
    9. 'return' → logprob: -20.875001907348633
    10. '```' → logprob: -21.875001907348633

Token 1923: '(pl' (ID: 81738)
  Prédit: '(pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pl' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. '(plan' → logprob: -14.500001907348633
    4. 'planner' → logprob: -18.750001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '	pl' → logprob: -20.250001907348633
    7. '(p' → logprob: -20.875001907348633
    8. '(pr' → logprob: -21.000001907348633
    9. ' planner' → logprob: -22.375001907348633
    10. '/pl' → logprob: -22.625001907348633

Token 1924: 'anner' (ID: 6237)
  Prédit: 'anner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anner' → logprob: -0.00017517358355689794
    2. 'aner' → logprob: -9.000175476074219
    3. 'an' → logprob: -9.875175476074219
    4. 'ANNER' → logprob: -15.875175476074219
    5. 'anne' → logprob: -17.25017547607422
    6. 'anet' → logprob: -17.37517547607422
    7. 'ann' → logprob: -18.12517547607422
    8. '(' → logprob: -18.50017547607422
    9. 'anning' → logprob: -18.87517547607422
    10. 'anser' → logprob: -19.00017547607422

Token 1925: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -6.182190554682165e-05
    2. '.' → logprob: -9.750061988830566
    3. ').' → logprob: -13.250061988830566
    4. '.sol' → logprob: -14.250061988830566
    5. ' .' → logprob: -15.000061988830566
    6. '.
' → logprob: -15.250061988830566
    7. '.s' → logprob: -15.625061988830566
    8. '.solution' → logprob: -16.37506103515625
    9. '.run' → logprob: -16.50006103515625
    10. ')' → logprob: -16.50006103515625

Token 1926: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002479104558005929
    2. '()' → logprob: -6.002479076385498
    3. ')' → logprob: -13.377479553222656
    4. '())
' → logprob: -13.502479553222656
    5. ' ())' → logprob: -15.627479553222656
    6. '(' → logprob: -15.752479553222656
    7. '()
' → logprob: -16.377479553222656
    8. '();)' → logprob: -17.627479553222656
    9. '()))' → logprob: -18.252479553222656
    10. '()`' → logprob: -18.752479553222656

Token 1927: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010628211311995983
    2. '
' → logprob: -8.126062393188477
    3. '<|end|>' → logprob: -8.126062393188477
    4. '```' → logprob: -8.251062393188477
    5. ' if' → logprob: -8.626062393188477
    6. '\n' → logprob: -11.876062393188477
    7. '#' → logprob: -12.251062393188477
    8. 'main' → logprob: -12.751062393188477
    9. '  
' → logprob: -12.876062393188477
    10. '<|end|>' → logprob: -13.376062393188477

Token 1928: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47415462136268616
    2. ' __' → logprob: -0.9741545915603638
    3. '_' → logprob: -9.974154472351074
    4. '___' → logprob: -11.224154472351074
    5. '_name' → logprob: -11.599154472351074
    6. '(__' → logprob: -13.224154472351074
    7. '.__' → logprob: -13.349154472351074
    8. '____' → logprob: -13.724154472351074
    9. ' _' → logprob: -13.849154472351074
    10. ''' → logprob: -14.474154472351074

Token 1929: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012455896940082312
    2. '==' → logprob: -7.251245498657227
    3. '__.__' → logprob: -8.751245498657227
    4. ' ==' → logprob: -9.126245498657227
    5. '_' → logprob: -9.626245498657227
    6. '____' → logprob: -10.001245498657227
    7. '.__' → logprob: -10.251245498657227
    8. '___' → logprob: -10.626245498657227
    9. '__.' → logprob: -10.876245498657227
    10. '__
' → logprob: -11.001245498657227

Token 1930: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008944261819124222
    2. '==' → logprob: -5.008944034576416
    3. '=="' → logprob: -6.258944034576416
    4. '=='' → logprob: -8.383944511413574
    5. ' ==' → logprob: -9.758944511413574
    6. '__.__' → logprob: -11.008944511413574
    7. '==
' → logprob: -12.758944511413574
    8. '___' → logprob: -13.633944511413574
    9. '__
' → logprob: -13.758944511413574
    10. '__('' → logprob: -13.758944511413574

Token 1931: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.45850539207458496
    2. '==' → logprob: -1.333505392074585
    3. ' ==' → logprob: -2.333505392074585
    4. '=="' → logprob: -5.083505630493164
    5. '.__' → logprob: -7.458505630493164
    6. '=='' → logprob: -9.083505630493164
    7. '__.__' → logprob: -9.083505630493164
    8. '"' → logprob: -10.083505630493164
    9. '==
' → logprob: -10.083505630493164
    10. '["' → logprob: -10.458505630493164

Token 1932: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03804585337638855
    2. ''' → logprob: -3.288045883178711
    3. '__' → logprob: -12.413045883178711
    4. ' "__' → logprob: -15.288045883178711
    5. '"name' → logprob: -18.53804588317871
    6. '"user' → logprob: -18.78804588317871
    7. ' '__' → logprob: -19.41304588317871
    8. '   ' → logprob: -19.66304588317871
    9. '"os' → logprob: -19.66304588317871
    10. '("__' → logprob: -19.78804588317871

Token 1933: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.024524342268705368
    2. '"' → logprob: -4.024524211883545
    3. 'main' → logprob: -5.149524211883545
    4. ''' → logprob: -7.524524211883545
    5. '__
' → logprob: -12.899524688720703
    6. '"name' → logprob: -13.274524688720703
    7. '___' → logprob: -13.524524688720703
    8. '__":
' → logprob: -13.649524688720703
    9. ' "__' → logprob: -13.899524688720703
    10. 'name' → logprob: -13.899524688720703

Token 1934: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13939109444618225
    2. '__":
' → logprob: -2.1393911838531494
    3. '__
' → logprob: -5.13939094543457
    4. '__.__' → logprob: -5.51439094543457
    5. '__.' → logprob: -7.01439094543457
    6. '__':
' → logprob: -7.01439094543457
    7. '__["' → logprob: -7.63939094543457
    8. '__
' → logprob: -9.26439094543457
    9. '.' → logprob: -10.76439094543457
    10. '__()
' → logprob: -10.88939094543457

Token 1935: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023265745490789413
    2. '__' → logprob: -4.023265838623047
    3. '   ' → logprob: -5.898265838623047
    4. '"' → logprob: -6.398265838623047
    5. ' main' → logprob: -8.023265838623047
    6. ''' → logprob: -9.148265838623047
    7. '	main' → logprob: -9.398265838623047
    8. 'run' → logprob: -9.898265838623047
    9. '_main' → logprob: -9.898265838623047
    10. '    
' → logprob: -11.148265838623047

Token 1936: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.816093228830141e-06
    2. ' main' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.25000286102295
    4. '	main' → logprob: -15.37500286102295
    5. '(main' → logprob: -18.750001907348633
    6. '_main' → logprob: -19.750001907348633
    7. '.main' → logprob: -20.875001907348633
    8. 'Main' → logprob: -21.625001907348633
    9. '```' → logprob: -21.875001907348633
    10. 'import' → logprob: -23.000001907348633

Token 1937: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1935
Tokens correctement prédits (1ère position, stricte): 724
Tokens correctement prédits (1ère position, avec adaptation): 788
Tokens correctement prédits (top 10): 1488
Précision stricte (1ère position): 37.42%
Précision adaptée (1ère position): 40.72%
Précision (top 10): 76.90%
================================================================================
