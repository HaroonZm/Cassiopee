================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

MAX = 10_000_000

def sieve(n):
    sieve = [True]*(n+1)
    sieve[0] = sieve[1] = False
    for i in range(2, int(n**0.5)+1):
        if sieve[i]:
            for j in range(i*i, n+1, i):
                sieve[j] = False
    return sieve

prime = sieve(MAX)
four_primes = []
for a in range(5, MAX-8+1):
    if prime[a] and prime[a+2] and prime[a+6] and prime[a+8]:
        four_primes.append(a+8)

import bisect
input_lines = sys.stdin.read().strip().split('\n')
for line in input_lines:
    n = int(line)
    if n == 0:
        break
    idx = bisect.bisect_right(four_primes, n)
    if idx == 0:
        print()
    else:
        print(four_primes[idx-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'MAX' (ID: 21911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8861402273178101
    2. '\' → logprob: -1.38614022731781
    3. 'import' → logprob: -2.1361403465270996
    4. '\n' → logprob: -2.2611403465270996
    5. 'def' → logprob: -3.5111403465270996
    6. '```' → logprob: -3.6361403465270996
    7. ',' → logprob: -4.3861403465271
    8. '#' → logprob: -4.6361403465271
    9. '
' → logprob: -4.6361403465271
    10. '' → logprob: -5.3861403465271

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0024679286871105433
    2. '_SIZE' → logprob: -6.752468109130859
    3. '_SPACE' → logprob: -8.00246810913086
    4. '_VALUE' → logprob: -8.75246810913086
    5. '_LENGTH' → logprob: -8.87746810913086
    6. ' _' → logprob: -9.62746810913086
    7. '_CAP' → logprob: -9.62746810913086
    8. '_LINE' → logprob: -10.12746810913086
    9. '_MAX' → logprob: -10.50246810913086
    10. '_TOKEN' → logprob: -10.62746810913086

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02465740405023098
    2. '100' → logprob: -3.7746574878692627
    3. '10' → logprob: -6.649657249450684
    4. '999' → logprob: -10.524657249450684
    5. ' sys' → logprob: -10.649657249450684
    6. '1' → logprob: -10.899657249450684
    7. 'float' → logprob: -11.899657249450684
    8. 'sys' → logprob: -12.024657249450684
    9. 'int' → logprob: -12.149657249450684
    10. ' float' → logprob: -12.649657249450684

Token 9: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12932726740837097
    2. '10' → logprob: -2.7543272972106934
    3. ' ' → logprob: -2.8793272972106934
    4. '999' → logprob: -7.504327297210693
    5. '1' → logprob: -8.129326820373535
    6. 'sys' → logprob: -8.629326820373535
    7. 'int' → logprob: -8.754326820373535
    8. '2' → logprob: -9.004326820373535
    9. '214' → logprob: -10.129326820373535
    10. '102' → logprob: -10.754326820373535

Token 10: '_' (ID: 62)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7270890474319458
    2. '
' → logprob: -1.1020890474319458
    3. '\' → logprob: -1.9770890474319458
    4. '**' → logprob: -4.227088928222656
    5. '
' → logprob: -5.102088928222656
    6. '```' → logprob: -5.352088928222656
    7. '#' → logprob: -5.727088928222656
    8. ' 
' → logprob: -5.727088928222656
    9. '' → logprob: -5.977088928222656
    10. '*' → logprob: -6.227088928222656

Token 11: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002464240649715066
    2. '**' → logprob: -6.502464294433594
    3. '_' → logprob: -7.502464294433594
    4. '0' → logprob: -8.002464294433594
    5. '00' → logprob: -9.502464294433594
    6. '```' → logprob: -15.752464294433594
    7. '__' → logprob: -16.252464294433594
    8. ' ' → logprob: -16.752464294433594
    9. ' **' → logprob: -16.752464294433594
    10. '###' → logprob: -16.752464294433594

Token 12: '_' (ID: 62)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.034641899168491364
    2. '\n' → logprob: -4.284641742706299
    3. '

' → logprob: -4.784641742706299
    4. '_' → logprob: -5.659641742706299
    5. '
' → logprob: -5.659641742706299
    6. '\' → logprob: -6.784641742706299
    7. '**' → logprob: -7.409641742706299
    8. '#' → logprob: -7.784641742706299
    9. '```' → logprob: -7.784641742706299
    10. '  
' → logprob: -7.784641742706299

Token 13: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.039320468902588
    2. '000' → logprob: -1.414320468902588
    3. '_' → logprob: -1.914320468902588
    4. '+' → logprob: -2.039320468902588
    5. '\n' → logprob: -3.789320468902588
    6. '```' → logprob: -3.789320468902588
    7. ' ' → logprob: -4.289320468902588
    8. ')' → logprob: -4.539320468902588
    9. '00' → logprob: -4.664320468902588
    10. '
' → logprob: -4.664320468902588

Token 14: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0555451326072216
    2. '\n' → logprob: -3.3055450916290283
    3. '
' → logprob: -4.805545330047607
    4. '

' → logprob: -5.055545330047607
    5. '\' → logprob: -6.555545330047607
    6. '' → logprob: -8.05554485321045
    7. '  
' → logprob: -8.68054485321045
    8. '_' → logprob: -8.68054485321045
    9. ' 
' → logprob: -8.68054485321045
    10. '```' → logprob: -9.18054485321045

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0379316546022892
    2. 'for' → logprob: -3.9129316806793213
    3. 'pr' → logprob: -5.412931442260742
    4. '```' → logprob: -5.912931442260742
    5. 'result' → logprob: -6.662931442260742
    6. 'n' → logprob: -6.912931442260742
    7. 'factor' → logprob: -7.162931442260742
    8. 'data' → logprob: -7.287931442260742
    9. 'class' → logprob: -7.537931442260742
    10. 's' → logprob: -7.537931442260742

Token 16: ' sieve' (ID: 142781)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7117540240287781
    2. ' calculate' → logprob: -1.9617540836334229
    3. ' main' → logprob: -2.461754083633423
    4. ' factorial' → logprob: -2.586754083633423
    5. ' sieve' → logprob: -3.086754083633423
    6. ' factor' → logprob: -3.086754083633423
    7. ' prime' → logprob: -3.461754083633423
    8. ' solve' → logprob: -3.836754083633423
    9. ' compute' → logprob: -4.086753845214844
    10. ' is' → logprob: -4.961753845214844

Token 17: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25655028223991394
    2. '(' → logprob: -1.5065503120422363
    3. '_(' → logprob: -5.631550312042236
    4. '_s' → logprob: -8.256549835205078
    5. '(_)' → logprob: -8.256549835205078
    6. '```' → logprob: -10.006549835205078
    7. ' (' → logprob: -10.131549835205078
    8. '_p' → logprob: -10.631549835205078
    9. '(n' → logprob: -10.631549835205078
    10. '_^(' → logprob: -10.881549835205078

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04905908554792404
    2. ')' → logprob: -3.0490591526031494
    3. ' ):' → logprob: -7.92405891418457
    4. '_' → logprob: -10.17405891418457
    5. ' )' → logprob: -10.54905891418457
    6. ':' → logprob: -10.67405891418457
    7. '=' → logprob: -12.42405891418457
    8. ',' → logprob: -12.54905891418457
    9. ')：' → logprob: -12.54905891418457
    10. '):
' → logprob: -13.04905891418457

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017709736712276936
    2. ':
' → logprob: -7.251770973205566
    3. ' :' → logprob: -7.251770973205566
    4. '():' → logprob: -9.251770973205566
    5. ':**' → logprob: -10.251770973205566
    6. '":' → logprob: -10.376770973205566
    7. '):' → logprob: -10.501770973205566
    8. '`:' → logprob: -10.626770973205566
    9. ':return' → logprob: -10.876770973205566
    10. '**' → logprob: -11.001770973205566

Token 20: ' sieve' (ID: 142781)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3951323628425598
    2. ' primes' → logprob: -1.645132303237915
    3. ' sieve' → logprob: -2.895132303237915
    4. '   ' → logprob: -3.645132303237915
    5. ' prime' → logprob: -4.145132541656494
    6. 'pr' → logprob: -4.270132541656494
    7. 'is' → logprob: -5.145132541656494
    8. 'prime' → logprob: -5.145132541656494
    9. ' visited' → logprob: -6.020132541656494
    10. ' mark' → logprob: -6.770132541656494

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013665644451975822
    2. '[' → logprob: -5.263665676116943
    3. '=' → logprob: -5.513665676116943
    4. '_' → logprob: -6.263665676116943
    5. '=[' → logprob: -7.263665676116943
    6. '[:]' → logprob: -7.638665676116943
    7. '_list' → logprob: -8.138665199279785
    8. '[i' → logprob: -8.263665199279785
    9. '[n' → logprob: -8.638665199279785
    10. ' =[' → logprob: -8.763665199279785

Token 22: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20149901509284973
    2. '[' → logprob: -1.7014989852905273
    3. '[n' → logprob: -9.701498985290527
    4. ' ' → logprob: -11.951498985290527
    5. '[s' → logprob: -12.201498985290527
    6. '[f' → logprob: -13.201498985290527
    7. '   ' → logprob: -13.326498985290527
    8. '[start' → logprob: -13.326498985290527
    9. '[a' → logprob: -13.826498985290527
    10. '[int' → logprob: -13.826498985290527

Token 23: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.062032103538513184
    2. ' True' → logprob: -2.8120322227478027
    3. 'False' → logprob: -9.687031745910645
    4. '(True' → logprob: -13.312031745910645
    5. ' False' → logprob: -14.937031745910645
    6. '1' → logprob: -15.562031745910645
    7. '   ' → logprob: -16.06203269958496
    8. 'Tr' → logprob: -18.18703269958496
    9. '0' → logprob: -18.31203269958496
    10. ' ' → logprob: -19.81203269958496

Token 24: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10407821834087372
    2. ' for' → logprob: -2.3540782928466797
    3. ' ]' → logprob: -6.10407829284668
    4. '<|end|>' → logprob: -7.85407829284668
    5. 'for' → logprob: -8.10407829284668
    6. '   ' → logprob: -8.22907829284668
    7. '<|end|>' → logprob: -8.35407829284668
    8. ' ' → logprob: -8.60407829284668
    9. ')' → logprob: -9.22907829284668
    10. ']*' → logprob: -9.97907829284668

Token 25: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.5597102396423e-05
    2. ' n' → logprob: -10.250035285949707
    3. '(n' → logprob: -16.125036239624023
    4. '	n' → logprob: -16.750036239624023
    5. ' ' → logprob: -18.250036239624023
    6. ')n' → logprob: -18.500036239624023
    7. '(' → logprob: -19.250036239624023
    8. '   ' → logprob: -19.625036239624023
    9. ' ' → logprob: -20.250036239624023
    10. '```' → logprob: -20.375036239624023

Token 26: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002479581395164132
    2. ' +' → logprob: -6.002479553222656
    3. ')' → logprob: -13.002479553222656
    4. '+)' → logprob: -13.502479553222656
    5. ' )' → logprob: -16.752479553222656
    6. ' ' → logprob: -17.002479553222656
    7. '1' → logprob: -17.627479553222656
    8. ')+' → logprob: -17.627479553222656
    9. ' plus' → logprob: -17.752479553222656
    10. '+
' → logprob: -17.752479553222656

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007166040013544261
    2. ' ' → logprob: -7.250716686248779
    3. '0' → logprob: -12.875716209411621
    4. '2' → logprob: -13.375716209411621
    5. '  ' → logprob: -14.125716209411621
    6. '   ' → logprob: -14.750716209411621
    7. '```' → logprob: -14.750716209411621
    8. '7' → logprob: -15.375716209411621
    9. '5' → logprob: -15.500716209411621
    10. ')' → logprob: -16.000717163085938

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001992755103856325
    2. ')
' → logprob: -6.251992702484131
    3. ')
' → logprob: -10.376993179321289
    4. ' )' → logprob: -10.626993179321289
    5. '```' → logprob: -13.126993179321289
    6. ')

' → logprob: -13.251993179321289
    7. '[' → logprob: -13.876993179321289
    8. ' ' → logprob: -14.251993179321289
    9. ' )
' → logprob: -14.376993179321289
    10. '   ' → logprob: -14.626993179321289

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4439584016799927
    2. ' 
' → logprob: -1.6939584016799927
    3. '
' → logprob: -2.193958282470703
    4. '<|end|>' → logprob: -2.193958282470703
    5. ' ' → logprob: -2.443958282470703
    6. '    
' → logprob: -2.568958282470703
    7. '\n' → logprob: -2.818958282470703
    8. '  
' → logprob: -2.818958282470703
    9. ' for' → logprob: -3.443958282470703
    10. 'for' → logprob: -4.818958282470703

Token 30: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012201035395264626
    2. ' sieve' → logprob: -4.512200832366943
    3. ' ' → logprob: -7.512200832366943
    4. '   ' → logprob: -7.762200832366943
    5. ' for' → logprob: -9.262201309204102
    6. 'for' → logprob: -9.887201309204102
    7. '    
' → logprob: -12.012201309204102
    8. '	s' → logprob: -12.262201309204102
    9. '[' → logprob: -12.512201309204102
    10. '
' → logprob: -12.637201309204102

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -15.375000953674316
    3. '   ' → logprob: -16.0
    4. '\[' → logprob: -16.0
    5. '```' → logprob: -16.25
    6. '[:]' → logprob: -16.75
    7. '<|end|>' → logprob: -17.125
    8. '[:' → logprob: -17.375
    9. '[
' → logprob: -17.625
    10. '[...]' → logprob: -17.875

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022761584841646254
    2. '2' → logprob: -8.625227928161621
    3. '1' → logprob: -10.625227928161621
    4. ' ' → logprob: -11.250227928161621
    5. '-' → logprob: -12.625227928161621
    6. ':' → logprob: -13.000227928161621
    7. '   ' → logprob: -13.625227928161621
    8. ')' → logprob: -14.000227928161621
    9. '```' → logprob: -14.125227928161621
    10. '=' → logprob: -14.437727928161621

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019574174657464027
    2. ' ]' → logprob: -6.251957416534424
    3. ']=' → logprob: -10.626957893371582
    4. '],' → logprob: -12.751957893371582
    5. '=' → logprob: -14.251957893371582
    6. ' =' → logprob: -15.626957893371582
    7. ')' → logprob: -15.626957893371582
    8. '']' → logprob: -15.876957893371582
    9. ',' → logprob: -16.376956939697266
    10. ']==' → logprob: -16.376956939697266

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995255500078201
    2. '=' → logprob: -2.6949524879455566
    3. '=False' → logprob: -11.819952964782715
    4. ',' → logprob: -12.444952964782715
    5. ' =
' → logprob: -12.944952964782715
    6. ' ' → logprob: -13.694952964782715
    7. ' ==' → logprob: -14.569952964782715
    8. ' and' → logprob: -15.819952964782715
    9. '=True' → logprob: -15.819952964782715
    10. '[' → logprob: -16.0699520111084

Token 35: ' sieve' (ID: 142781)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3487285375595093
    2. ' False' → logprob: -1.2237285375595093
    3. 's' → logprob: -8.47372817993164
    4. ' sieve' → logprob: -9.59872817993164
    5. ' ' → logprob: -12.34872817993164
    6. '(False' → logprob: -14.09872817993164
    7. '=False' → logprob: -14.72372817993164
    8. ' false' → logprob: -15.09872817993164
    9. '.False' → logprob: -15.22372817993164
    10. 'F' → logprob: -15.34872817993164

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018523624166846275
    2. 'False' → logprob: -6.376852512359619
    3. ' False' → logprob: -9.626852035522461
    4. '=False' → logprob: -9.626852035522461
    5. ' [' → logprob: -11.501852035522461
    6. ' =' → logprob: -13.001852035522461
    7. '(False' → logprob: -13.126852035522461
    8. ' ' → logprob: -13.501852035522461
    9. '1' → logprob: -14.251852035522461
    10. '```' → logprob: -14.501852035522461

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -10.250067710876465
    3. 'False' → logprob: -10.375067710876465
    4. '0' → logprob: -14.625067710876465
    5. ']' → logprob: -15.750067710876465
    6. ' False' → logprob: -16.00006866455078
    7. '[' → logprob: -16.31256866455078
    8. 'True' → logprob: -16.37506866455078
    9. '```' → logprob: -16.62506866455078
    10. '۱' → logprob: -17.56256866455078

Token 38: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3879733383655548
    2. '=' → logprob: -1.1379733085632324
    3. ']' → logprob: -7.137973308563232
    4. ' ' → logprob: -9.01297378540039
    5. '=False' → logprob: -9.01297378540039
    6. ')' → logprob: -10.63797378540039
    7. ']=' → logprob: -11.26297378540039
    8. ' ]' → logprob: -11.63797378540039
    9. 'False' → logprob: -12.13797378540039
    10. ' False' → logprob: -12.76297378540039

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694627046585083
    2. '=' → logprob: -2.126946210861206
    3. '=False' → logprob: -11.126946449279785
    4. ' =
' → logprob: -13.251946449279785
    5. ' ' → logprob: -14.001946449279785
    6. ' False' → logprob: -14.376946449279785
    7. 'False' → logprob: -15.626946449279785
    8. ' =)' → logprob: -16.25194549560547
    9. '=True' → logprob: -16.62694549560547
    10. '=

' → logprob: -16.87694549560547

Token 40: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.47407710552215576
    2. 'False' → logprob: -0.9740771055221558
    3. '(False' → logprob: -17.599077224731445
    4. '=False' → logprob: -18.349077224731445
    5. 'F' → logprob: -18.599077224731445
    6. ' ' → logprob: -18.724077224731445
    7. '.False' → logprob: -19.599077224731445
    8. ' ' → logprob: -19.849077224731445
    9. ' F' → logprob: -19.974077224731445
    10. ' false' → logprob: -20.474077224731445

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08757679164409637
    2. '\n' → logprob: -2.8375768661499023
    3. '\' → logprob: -4.462576866149902
    4. ' 
' → logprob: -5.337576866149902
    5. '' → logprob: -5.462576866149902
    6. '    
' → logprob: -6.712576866149902
    7. 'newline' → logprob: -7.587576866149902
    8. '#' → logprob: -7.712576866149902
    9. '  
' → logprob: -7.837576866149902
    10. '   ' → logprob: -7.962576866149902

Token 42: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038638751953840256
    2. '\n' → logprob: -3.9136388301849365
    3. ' 
' → logprob: -4.288638591766357
    4. '    
' → logprob: -6.663638591766357
    5. '   ' → logprob: -6.913638591766357
    6. '  
' → logprob: -7.163638591766357
    7. '\' → logprob: -8.288639068603516
    8. '
' → logprob: -8.413639068603516
    9. '' → logprob: -8.913639068603516
    10. ' for' → logprob: -9.288639068603516

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14576852321624756
    2. 'for' (adapté à ' for') → logprob: -2.020768642425537
    3. '
' → logprob: -6.770768642425537
    4. ' ' → logprob: -7.145768642425537
    5. ' 
' → logprob: -7.145768642425537
    6. '   ' → logprob: -8.145768165588379
    7. ' i' → logprob: -11.020768165588379
    8. '<|end|>' → logprob: -11.145768165588379
    9. '	for' → logprob: -11.895768165588379
    10. '  ' → logprob: -11.895768165588379

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25302568078041077
    2. ' ' → logprob: -1.5030256509780884
    3. 'i' → logprob: -6.878025531768799
    4. '  ' → logprob: -10.378026008605957
    5. ' p' → logprob: -11.378026008605957
    6. ' ‌' → logprob: -12.003026008605957
    7. ' space' → logprob: -12.753026008605957
    8. '	i' → logprob: -12.753026008605957
    9. ' ' → logprob: -12.878026008605957
    10. ' x' → logprob: -13.878026008605957

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004327214322984219
    2. 'in' → logprob: -5.629327297210693
    3. ' ' → logprob: -7.254327297210693
    4. ' i' → logprob: -11.879326820373535
    5. '  ' → logprob: -11.879326820373535
    6. '	in' → logprob: -12.879326820373535
    7. 'n' → logprob: -14.504326820373535
    8. '2' → logprob: -14.879326820373535
    9. '   ' → logprob: -14.879326820373535
    10. ',' → logprob: -15.254326820373535

Token 46: ' range' (ID: 3352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.56296706199646
    2. ' range' → logprob: -1.06296706199646
    3. 'range' → logprob: -2.81296706199646
    4. '2' → logprob: -3.68796706199646
    5. '	range' → logprob: -13.312967300415039
    6. '(' → logprob: -14.187967300415039
    7. '(range' → logprob: -14.312967300415039
    8. '  ' → logprob: -14.812967300415039
    9. ' ' → logprob: -15.187967300415039
    10. 'Range' → logprob: -15.687967300415039

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3544423381972592e-05
    2. '2' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.37501335144043
    4. ' (' → logprob: -15.00001335144043
    5. '(
' → logprob: -20.62501335144043
    6. '[' → logprob: -22.37501335144043
    7. '```' → logprob: -22.37501335144043
    8. '	' → logprob: -22.50001335144043
    9. '   ' → logprob: -22.50001335144043
    10. '  ' → logprob: -23.12501335144043

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.00006675720215
    4. '(' → logprob: -18.50006675720215
    5. 'int' → logprob: -19.50006675720215
    6. '２' → logprob: -19.62506675720215
    7. '```' → logprob: -20.37506675720215
    8. '  ' → logprob: -20.50006675720215
    9. '۲' → logprob: -20.50006675720215
    10. '	' → logprob: -21.00006675720215

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008637258782982826
    2. ' ,' → logprob: -4.758637428283691
    3. ',n' → logprob: -11.258637428283691
    4. ' ' → logprob: -12.883637428283691
    5. '   ' → logprob: -12.883637428283691
    6. ',int' → logprob: -13.383637428283691
    7. ',len' → logprob: -13.883637428283691
    8. ',i' → logprob: -14.133637428283691
    9. ',num' → logprob: -15.133637428283691
    10. ')' → logprob: -15.258637428283691

Token 50: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4741571247577667
    2. ' int' → logprob: -0.9741570949554443
    3. 'math' → logprob: -10.224157333374023
    4. ' math' → logprob: -11.099157333374023
    5. '	int' → logprob: -11.474157333374023
    6. '   ' → logprob: -11.599157333374023
    7. '(int' → logprob: -12.349157333374023
    8. 'n' → logprob: -13.224157333374023
    9. ' n' → logprob: -13.349157333374023
    10. ' ' → logprob: -14.974157333374023

Token 51: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5551799535751343
    2. '(math' → logprob: -1.0551799535751343
    3. '(n' → logprob: -2.555180072784424
    4. '(s' → logprob: -9.180179595947266
    5. ' (' → logprob: -9.680179595947266
    6. ' math' → logprob: -10.805179595947266
    7. '(
' → logprob: -11.430179595947266
    8. '((' → logprob: -11.805179595947266
    9. ' ' → logprob: -12.055179595947266
    10. '(i' → logprob: -12.430179595947266

Token 52: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00506772194057703
    2. ' **' → logprob: -6.005067825317383
    3. '(math' → logprob: -6.130067825317383
    4. '(' → logprob: -8.505067825317383
    5. '(n' → logprob: -9.505067825317383
    6. ' (' → logprob: -10.255067825317383
    7. '.sqrt' → logprob: -10.505067825317383
    8. '(i' → logprob: -10.880067825317383
    9. ' ' → logprob: -11.505067825317383
    10. 'math' → logprob: -12.005067825317383

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.125017166137695
    3. '.' → logprob: -13.000017166137695
    4. '(' → logprob: -16.750017166137695
    5. ')' → logprob: -20.375017166137695
    6. ' ' → logprob: -20.625017166137695
    7. '   ' → logprob: -20.875017166137695
    8. '2' → logprob: -21.250017166137695
    9. '۰' → logprob: -21.375017166137695
    10. '```' → logprob: -21.375017166137695

Token 54: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.45848218582978e-06
    2. '5' → logprob: -13.62500286102295
    3. '0' → logprob: -14.87500286102295
    4. ' .' → logprob: -15.50000286102295
    5. '```' → logprob: -16.125001907348633
    6. '2' → logprob: -16.250001907348633
    7. '50' → logprob: -16.625001907348633
    8. '1' → logprob: -16.750001907348633
    9. '3' → logprob: -17.562501907348633
    10. '500' → logprob: -17.687501907348633

Token 55: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -13.812503814697266
    3. '```' → logprob: -14.062503814697266
    4. '0' → logprob: -15.562503814697266
    5. '4' → logprob: -15.812503814697266
    6. 'five' → logprob: -16.312503814697266
    7. '25' → logprob: -16.437503814697266
    8. ')' → logprob: -16.500003814697266
    9. '

' → logprob: -16.500003814697266
    10. '   ' → logprob: -16.562503814697266

Token 56: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6938282251358032
    2. ')+' → logprob: -0.6938282251358032
    3. '+' → logprob: -7.943828105926514
    4. ' )' → logprob: -8.943828582763672
    5. '()' → logprob: -9.568828582763672
    6. '()+' → logprob: -9.568828582763672
    7. ' +' → logprob: -10.693828582763672
    8. '}+' → logprob: -11.693828582763672
    9. '(' → logprob: -12.068828582763672
    10. ']+' → logprob: -12.318828582763672

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861528143286705
    2. ' ' → logprob: -4.758615493774414
    3. '   ' → logprob: -15.383615493774414
    4. '  ' → logprob: -15.633615493774414
    5. '2' → logprob: -15.883615493774414
    6. ' ' → logprob: -16.383615493774414
    7. '```' → logprob: -17.258615493774414
    8. '    ' → logprob: -17.883615493774414
    9. ')' → logprob: -18.008615493774414
    10. '(' → logprob: -19.383615493774414

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22885487973690033
    2. ':' → logprob: -1.6038548946380615
    3. ' ):' → logprob: -6.103854656219482
    4. ')' → logprob: -6.853854656219482
    5. '):
' → logprob: -9.97885513305664
    6. ':)' → logprob: -10.22885513305664
    7. ' :' → logprob: -10.72885513305664
    8. ',' → logprob: -10.97885513305664
    9. ' )' → logprob: -11.22885513305664
    10. ':**' → logprob: -12.35385513305664

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02913493476808071
    2. ' :' → logprob: -3.77913498878479
    3. '):' → logprob: -5.279134750366211
    4. '   ' → logprob: -8.529134750366211
    5. ':
' → logprob: -8.529134750366211
    6. ' ):' → logprob: -9.404134750366211
    7. ' :
' → logprob: -9.529134750366211
    8. ' ' → logprob: -9.779134750366211
    9. ')' → logprob: -9.904134750366211
    10. '    ' → logprob: -10.029134750366211

Token 60: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07500334084033966
    2. ' :' → logprob: -2.9500033855438232
    3. ' if' → logprob: -4.575003147125244
    4. ':
' → logprob: -5.825003147125244
    5. ' ' → logprob: -6.325003147125244
    6. ' :
' → logprob: -6.325003147125244
    7. 'if' (adapté à ' if') → logprob: -6.450003147125244
    8. '):' → logprob: -7.075003147125244
    9. ' ):' → logprob: -8.075003623962402
    10. '   ' → logprob: -9.075003623962402

Token 61: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.00278490805067122
    2. 's' → logprob: -6.002784729003906
    3. ' ' → logprob: -8.877784729003906
    4. ' ' → logprob: -9.127784729003906
    5. ' s' → logprob: -10.002784729003906
    6. '	s' → logprob: -11.502784729003906
    7. ' not' → logprob: -12.502784729003906
    8. ' sift' → logprob: -14.252784729003906
    9. ' sie' → logprob: -15.377784729003906
    10. ' space' → logprob: -15.502784729003906

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014171971939504147
    2. '[' → logprob: -4.264172077178955
    3. '[I' → logprob: -12.389171600341797
    4. '\[' → logprob: -13.639171600341797
    5. '```' → logprob: -14.014171600341797
    6. '[ip' → logprob: -14.014171600341797
    7. '[ii' → logprob: -15.389171600341797
    8. ' [' → logprob: -15.639171600341797
    9. '[int' → logprob: -15.764171600341797
    10. '[j' → logprob: -16.139171600341797

Token 63: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.730014443397522
    2. ']:' → logprob: -0.730014443397522
    3. ':' → logprob: -3.3550143241882324
    4. ']' → logprob: -7.355014324188232
    5. ' ):' → logprob: -8.10501480102539
    6. ']):' → logprob: -8.98001480102539
    7. '=' → logprob: -9.73001480102539
    8. '):
' → logprob: -10.10501480102539
    9. '[' → logprob: -10.35501480102539
    10. ')' → logprob: -11.10501480102539

Token 64: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02918252721428871
    2. ':
' → logprob: -3.7791824340820312
    3. '       ' → logprob: -5.654182434082031
    4. '           ' → logprob: -6.654182434082031
    5. ' :' → logprob: -7.529182434082031
    6. '   ' → logprob: -8.904182434082031
    7. ' :
' → logprob: -9.029182434082031
    8. '):' → logprob: -10.029182434082031
    9. '<|end|>' → logprob: -10.029182434082031
    10. ' ' → logprob: -10.279182434082031

Token 65: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009189272299408913
    2. 'for' (adapté à ' for') → logprob: -5.009189128875732
    3. ' j' → logprob: -6.634189128875732
    4. '   ' → logprob: -7.509189128875732
    5. ' ' → logprob: -8.63418960571289
    6. ' i' → logprob: -9.13418960571289
    7. '    ' → logprob: -9.13418960571289
    8. ' in' → logprob: -9.88418960571289
    9. ' ' → logprob: -10.00918960571289
    10. 's' → logprob: -11.00918960571289

Token 66: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.009904353879392147
    2. 'j' → logprob: -4.634904384613037
    3. ' ' → logprob: -8.884903907775879
    4. '	j' → logprob: -12.009903907775879
    5. ' range' → logprob: -13.509903907775879
    6. ' i' → logprob: -14.384903907775879
    7. '<|end|>' → logprob: -14.884903907775879
    8. '    ' → logprob: -15.134903907775879
    9. '   ' → logprob: -15.259903907775879
    10. ' x' → logprob: -15.384903907775879

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005994205828756094
    2. 'in' → logprob: -5.2559943199157715
    3. '<|end|>' → logprob: -8.005993843078613
    4. ' ' → logprob: -9.005993843078613
    5. ' i' → logprob: -9.130993843078613
    6. ' =' → logprob: -9.255993843078613
    7. '=' → logprob: -9.630993843078613
    8. '=i' → logprob: -10.880993843078613
    9. '<|end|>' → logprob: -12.755993843078613
    10. 'i' → logprob: -13.005993843078613

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049000546336174
    2. ' range' → logprob: -4.511048793792725
    3. '   ' → logprob: -13.886049270629883
    4. '	range' → logprob: -16.511049270629883
    5. '(range' → logprob: -16.636049270629883
    6. ' ' → logprob: -16.886049270629883
    7. 'i' → logprob: -17.261049270629883
    8. '    ' → logprob: -17.636049270629883
    9. 'rang' → logprob: -18.136049270629883
    10. '  ' → logprob: -18.136049270629883

Token 69: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0034791433718055487
    2. 'i' → logprob: -6.50347900390625
    3. ' i' → logprob: -6.87847900390625
    4. '(' → logprob: -7.00347900390625
    5. '	i' → logprob: -11.25347900390625
    6. ')' → logprob: -11.75347900390625
    7. ' (' → logprob: -11.87847900390625
    8. '   ' → logprob: -12.62847900390625
    9. ')i' → logprob: -12.87847900390625
    10. '(
' → logprob: -14.50347900390625

Token 70: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0019368429202586412
    2. '*' → logprob: -6.251936912536621
    3. ' *' → logprob: -11.876936912536621
    4. 'i' → logprob: -13.751936912536621
    5. '*j' → logprob: -16.126935958862305
    6. '**' → logprob: -17.126935958862305
    7. '*,' → logprob: -19.626935958862305
    8. ' i' → logprob: -19.751935958862305
    9. '2' → logprob: -20.126935958862305
    10. '*=' → logprob: -20.251935958862305

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07905799895524979
    2. ',n' → logprob: -2.5790579319000244
    3. ' ,' → logprob: -8.829057693481445
    4. 'n' → logprob: -10.954057693481445
    5. ',j' → logprob: -13.829057693481445
    6. ' n' → logprob: -14.204057693481445
    7. ',len' → logprob: -14.579057693481445
    8. '(n' → logprob: -14.829057693481445
    9. ';n' → logprob: -14.954057693481445
    10. ',num' → logprob: -15.079057693481445

Token 72: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029752571135759354
    2. ' n' → logprob: -3.529752492904663
    3. '	n' → logprob: -13.279752731323242
    4. '   ' → logprob: -15.029752731323242
    5. ' ' → logprob: -17.279752731323242
    6. '(n' → logprob: -17.404752731323242
    7. '    ' → logprob: -17.654752731323242
    8. ')n' → logprob: -18.779752731323242
    9. '_n' → logprob: -19.154752731323242
    10. '  ' → logprob: -19.404752731323242

Token 73: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1008713702030946e-06
    2. ' +' → logprob: -13.250001907348633
    3. '+
' → logprob: -15.250001907348633
    4. '+n' → logprob: -16.500001907348633
    5. '+,' → logprob: -19.250001907348633
    6. '+i' → logprob: -19.750001907348633
    7. '
' → logprob: -19.875001907348633
    8. '+j' → logprob: -20.000001907348633
    9. '+

' → logprob: -20.125001907348633
    10. ')+' → logprob: -20.250001907348633

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. ',' → logprob: -15.125003814697266
    4. ')' → logprob: -16.375003814697266
    5. '+' → logprob: -17.000003814697266
    6. '```' → logprob: -17.250003814697266
    7. '),' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.000003814697266
    9. 'i' → logprob: -18.625003814697266
    10. '-' → logprob: -19.312503814697266

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020832529291510582
    2. ',i' → logprob: -3.8958325386047363
    3. ' ,' → logprob: -8.270832061767578
    4. ' i' → logprob: -10.770832061767578
    5. 'i' → logprob: -11.770832061767578
    6. ':i' → logprob: -12.520832061767578
    7. ',j' → logprob: -13.395832061767578
    8. '(i' → logprob: -15.520832061767578
    9. '   ' → logprob: -16.270832061767578
    10. '	i' → logprob: -16.270832061767578

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.313265860080719
    2. ' i' → logprob: -1.3132658004760742
    3. '	i' → logprob: -12.813265800476074
    4. ')i' → logprob: -14.563265800476074
    5. ' ' → logprob: -14.688265800476074
    6. ')' → logprob: -14.938265800476074
    7. '   ' → logprob: -17.43826675415039
    8. ' ' → logprob: -17.81326675415039
    9. '_i' → logprob: -18.18826675415039
    10. ' )' → logprob: -18.43826675415039

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004809585225302726
    2. ')' → logprob: -7.750481128692627
    3. ' ):' → logprob: -10.750480651855469
    4. '):
' → logprob: -11.000480651855469
    5. ':' → logprob: -11.875480651855469
    6. ',' → logprob: -12.750480651855469
    7. ',i' → logprob: -14.875480651855469
    8. '*i' → logprob: -15.375480651855469
    9. '[i' → logprob: -15.750480651855469
    10. ']:' → logprob: -15.750480651855469

Token 78: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09551636874675751
    2. 's' → logprob: -3.0955164432525635
    3. ' sieve' → logprob: -3.0955164432525635
    4. '                   ' → logprob: -8.470516204833984
    5. '                ' → logprob: -9.345516204833984
    6. '              ' → logprob: -9.470516204833984
    7. '                       ' → logprob: -9.595516204833984
    8. '                
' → logprob: -10.095516204833984
    9. '           ' → logprob: -10.220516204833984
    10. ' sift' → logprob: -11.470516204833984

Token 79: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01252778060734272
    2. ' sieve' → logprob: -4.387527942657471
    3. '                   ' → logprob: -12.012527465820312
    4. '               ' → logprob: -12.512527465820312
    5. '	s' → logprob: -13.137527465820312
    6. ' s' → logprob: -13.262527465820312
    7. ' ' → logprob: -13.762527465820312
    8. '   ' → logprob: -14.387527465820312
    9. 'sie' → logprob: -14.387527465820312
    10. ' sift' → logprob: -14.387527465820312

Token 80: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.554343366995454e-05
    2. '[' → logprob: -9.375085830688477
    3. '```' → logprob: -15.250085830688477
    4. '\[' → logprob: -15.625085830688477
    5. '[i' → logprob: -15.875085830688477
    6. '[js' → logprob: -17.125085830688477
    7. ' [' → logprob: -17.250085830688477
    8. '][' → logprob: -18.000085830688477
    9. '[J' → logprob: -18.875085830688477
    10. '[s' → logprob: -19.500085830688477

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007107630372047424
    2. ']=' → logprob: -7.500710964202881
    3. ' ]' → logprob: -9.000710487365723
    4. '=' → logprob: -10.375710487365723
    5. ' =' → logprob: -12.750710487365723
    6. ')' → logprob: -14.875710487365723
    7. ']==' → logprob: -17.75071144104004
    8. '[' → logprob: -18.50071144104004
    9. ' ' → logprob: -19.00071144104004
    10. ']
' → logprob: -19.25071144104004

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687223196029663
    2. ' =' → logprob: -1.1368722915649414
    3. '=False' → logprob: -14.386872291564941
    4. ' =
' → logprob: -15.386872291564941
    5. ']' → logprob: -15.636872291564941
    6. '=
' → logprob: -16.136871337890625
    7. '[' → logprob: -17.011871337890625
    8. ' ' → logprob: -17.136871337890625
    9. '=True' → logprob: -17.511871337890625
    10. ']=' → logprob: -17.511871337890625

Token 83: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022412478923798
    2. ' False' → logprob: -1.9102240800857544
    3. 'F' → logprob: -18.16022491455078
    4. '(False' → logprob: -18.53522491455078
    5. '=False' → logprob: -20.03522491455078
    6. '.False' → logprob: -21.53522491455078
    7. '0' → logprob: -21.78522491455078
    8. ' F' → logprob: -21.78522491455078
    9. ' false' → logprob: -22.03522491455078
    10. 'True' → logprob: -22.03522491455078

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025604283437132835
    2. '\n' → logprob: -4.525604248046875
    3. '   ' → logprob: -4.650604248046875
    4. '    
' → logprob: -6.150604248046875
    5. ' 
' → logprob: -7.525604248046875
    6. '  
' → logprob: -7.775604248046875
    7. '' → logprob: -8.025604248046875
    8. 'return' → logprob: -8.150604248046875
    9. '<|end|>' → logprob: -8.150604248046875
    10. ' return' → logprob: -8.400604248046875

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22466035187244415
    2. '\n' → logprob: -2.0996603965759277
    3. '   ' → logprob: -3.3496603965759277
    4. 'return' → logprob: -4.599660396575928
    5. '<|end|>' → logprob: -4.599660396575928
    6. '    
' → logprob: -4.849660396575928
    7. ' return' → logprob: -5.849660396575928
    8. '' → logprob: -6.099660396575928
    9. ' 
' → logprob: -6.224660396575928
    10. '  
' → logprob: -6.349660396575928

Token 86: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1225636005401611
    2. '<|end|>' → logprob: -1.4975636005401611
    3. '\n' → logprob: -1.7475636005401611
    4. ' ' → logprob: -2.497563600540161
    5. ' 
' → logprob: -2.497563600540161
    6. '   ' → logprob: -3.872563600540161
    7. ' return' → logprob: -3.872563600540161
    8. '\' → logprob: -4.247563362121582
    9. 'return' (adapté à ' return') → logprob: -4.247563362121582
    10. 'n' → logprob: -4.622563362121582

Token 87: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2179376184940338
    2. '[s' → logprob: -2.217937707901001
    3. ' sieve' → logprob: -2.467937707901001
    4. '[' → logprob: -6.592937469482422
    5. ' [' → logprob: -7.092937469482422
    6. '[i' → logprob: -11.842937469482422
    7. '[n' → logprob: -12.717937469482422
    8. '`s' → logprob: -12.717937469482422
    9. ' ' → logprob: -13.217937469482422
    10. '[
' → logprob: -13.217937469482422

Token 88: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: 'prime' (ID: 46441)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7304024696350098
    2. '```' → logprob: -2.2304024696350098
    3. '
' → logprob: -2.3554024696350098
    4. '_' → logprob: -2.9804024696350098
    5. '#' → logprob: -3.2304024696350098
    6. 'n' → logprob: -3.3554024696350098
    7. '<|end|>' → logprob: -3.3554024696350098
    8. '[' → logprob: -3.4804024696350098
    9. '\' → logprob: -3.6054024696350098
    10. '

' → logprob: -4.48040246963501

Token 90: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -8.506661833962426e-05
    2. '_s' → logprob: -9.87508487701416
    3. '(s' → logprob: -11.12508487701416
    4. '(' → logprob: -12.62508487701416
    5. ')' → logprob: -12.62508487701416
    6. '[' → logprob: -12.87508487701416
    7. '[s' → logprob: -13.00008487701416
    8. ')s' → logprob: -13.37508487701416
    9. '```' → logprob: -13.50008487701416
    10. '_list' → logprob: -13.75008487701416

Token 91: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02994787134230137
    2. ' sieve' → logprob: -3.5299477577209473
    3. '[s' → logprob: -8.654948234558105
    4. ' [' → logprob: -11.529948234558105
    5. 'sie' → logprob: -11.779948234558105
    6. ' s' → logprob: -13.779948234558105
    7. '(s' → logprob: -13.904948234558105
    8. '[' → logprob: -14.029948234558105
    9. ' ' → logprob: -14.154948234558105
    10. '	s' → logprob: -14.404948234558105

Token 92: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.002605268033221364
    2. '(' → logprob: -6.002605438232422
    3. '(M' → logprob: -9.127605438232422
    4. '(
' → logprob: -11.502605438232422
    5. '(max' → logprob: -12.377605438232422
    6. '((' → logprob: -13.252605438232422
    7. '(Max' → logprob: -13.252605438232422
    8. 'MAX' → logprob: -13.627605438232422
    9. '(NUM' → logprob: -14.752605438232422
    10. ' (' → logprob: -15.752605438232422

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.000003814697266
    4. '))' → logprob: -16.250003814697266
    5. '[' → logprob: -17.250003814697266
    6. ')

' → logprob: -17.375003814697266
    7. ')`' → logprob: -17.375003814697266
    8. ')#' → logprob: -17.875003814697266
    9. '),' → logprob: -18.250003814697266
    10. ')return' → logprob: -19.125003814697266

Token 94: 'four' (ID: 61745)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006636032834649086
    2. 'for' → logprob: -6.131636142730713
    3. 'n' → logprob: -6.256636142730713
    4. 'pr' → logprob: -6.756636142730713
    5. 'count' → logprob: -8.006635665893555
    6. '#' → logprob: -8.381635665893555
    7. '```' → logprob: -9.381635665893555
    8. 'print' → logprob: -9.631635665893555
    9. 'sum' → logprob: -9.756635665893555
    10. '
' → logprob: -9.881635665893555

Token 95: '_pr' (ID: 18177)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.3401443362236023
    2. '_square' → logprob: -2.340144395828247
    3. '_' → logprob: -3.090144395828247
    4. 'th' → logprob: -3.090144395828247
    5. '_digits' → logprob: -4.090144157409668
    6. '_div' → logprob: -4.215144157409668
    7. '_prime' → logprob: -4.215144157409668
    8. '_s' → logprob: -4.465144157409668
    9. '_factor' → logprob: -4.965144157409668
    10. 'digit' → logprob: -5.215144157409668

Token 96: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.02311805821955204
    2. 'imes' → logprob: -3.898118019104004
    3. '{' → logprob: -8.148118019104004
    4. '[' → logprob: -8.273118019104004
    5. '_' → logprob: -8.773118019104004
    6. '#' → logprob: -8.960618019104004
    7. 'im' → logprob: -8.960618019104004
    8. '0' → logprob: -9.085618019104004
    9. '1' → logprob: -9.335618019104004
    10. 'i' → logprob: -9.523118019104004

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014411473646759987
    2. '=' → logprob: -4.264411449432373
    3. 's' → logprob: -9.514411926269531
    4. '_count' → logprob: -10.139411926269531
    5. '=[]' → logprob: -10.139411926269531
    6. ' ' → logprob: -10.514411926269531
    7. '_counts' → logprob: -10.889411926269531
    8. '[]' → logprob: -10.889411926269531
    9. 'count' → logprob: -12.514411926269531
    10. '[' → logprob: -12.514411926269531

Token 98: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6176597476005554
    2. '[' → logprob: -1.6176598072052002
    3. ' []' → logprob: -1.8676598072052002
    4. ' [' → logprob: -2.2426598072052
    5. '[i' → logprob: -7.992659568786621
    6. '[int' → logprob: -7.992659568786621
    7. '[len' → logprob: -8.242659568786621
    8. '[p' → logprob: -8.617659568786621
    9. '[a' → logprob: -8.992659568786621
    10. '[]
' → logprob: -9.117659568786621

Token 99: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.666993507067673e-05
    2. ' for' → logprob: -10.375036239624023
    3. 'f' → logprob: -12.750036239624023
    4. '(' → logprob: -13.250036239624023
    5. 'def' → logprob: -15.000036239624023
    6. 'i' → logprob: -16.000036239624023
    7. 'n' → logprob: -16.875036239624023
    8. 'd' → logprob: -17.125036239624023
    9. 'fo' → logprob: -17.125036239624023
    10. '[' → logprob: -17.375036239624023

Token 100: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009580777026712894
    2. ' p' → logprob: -5.134580612182617
    3. ' ' → logprob: -5.884580612182617
    4. ' num' → logprob: -7.634580612182617
    5. 'i' → logprob: -8.384580612182617
    6. ' n' → logprob: -10.009580612182617
    7. ' number' → logprob: -10.134580612182617
    8. ' x' → logprob: -10.384580612182617
    9. ' _' → logprob: -11.884580612182617
    10. ' ' → logprob: -12.134580612182617

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045710451900959015
    2. 'in' → logprob: -3.295710563659668
    3. ' ' → logprob: -4.920710563659668
    4. 'n' → logprob: -8.795710563659668
    5. ' i' → logprob: -9.295710563659668
    6. 'space' → logprob: -10.795710563659668
    7. 'i' → logprob: -10.920710563659668
    8. ',' → logprob: -11.170710563659668
    9. '  ' → logprob: -11.670710563659668
    10. ' ,' → logprob: -12.170710563659668

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07022707164287567
    2. ' range' → logprob: -2.6952271461486816
    3. 'prime' → logprob: -8.695226669311523
    4. 'four' → logprob: -10.570226669311523
    5. ' four' → logprob: -10.695226669311523
    6. ' ' → logprob: -10.820226669311523
    7. ' prime' → logprob: -11.195226669311523
    8. '[' → logprob: -11.320226669311523
    9. 'pr' → logprob: -11.820226669311523
    10. '	range' → logprob: -12.445226669311523

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6537622034084052e-05
    2. '(MAX' → logprob: -10.87502670288086
    3. '((' → logprob: -12.50002670288086
    4. ' (' → logprob: -13.12502670288086
    5. '(len' → logprob: -14.37502670288086
    6. '(max' → logprob: -14.87502670288086
    7. '(-' → logprob: -15.50002670288086
    8. '(int' → logprob: -15.62502670288086
    9. '(M' → logprob: -15.62502670288086
    10. '2' → logprob: -16.62502670288086

Token 104: '5' (ID: 20)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.5138941407203674
    2. '2' → logprob: -1.2638940811157227
    3. '3' → logprob: -3.0138940811157227
    4. 'int' → logprob: -4.138894081115723
    5. '4' → logprob: -4.763894081115723
    6. '1' → logprob: -5.013894081115723
    7. '(MAX' → logprob: -5.013894081115723
    8. '100' → logprob: -5.263894081115723
    9. '5' → logprob: -5.638894081115723
    10. '10' → logprob: -5.763894081115723

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05007452517747879
    2. ' ,' → logprob: -3.300074577331543
    3. ')' → logprob: -5.550074577331543
    4. '):' → logprob: -5.800074577331543
    5. '+' → logprob: -6.550074577331543
    6. ' )' → logprob: -6.925074577331543
    7. ' ):' → logprob: -6.925074577331543
    8. ' +' → logprob: -7.425074577331543
    9. ',+' → logprob: -7.550074577331543
    10. ' ' → logprob: -8.425074577331543

Token 106: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.07201878726482391
    2. ' MAX' → logprob: -3.19701886177063
    3. 'int' → logprob: -4.197018623352051
    4. ' int' → logprob: -4.822018623352051
    5. '100' → logprob: -5.947018623352051
    6. '10' → logprob: -7.197018623352051
    7. ' ' → logprob: -7.447018623352051
    8. '101' → logprob: -8.82201862335205
    9. '11' → logprob: -9.07201862335205
    10. '500' → logprob: -9.32201862335205

Token 107: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5878959894180298
    2. '+' → logprob: -1.5878959894180298
    3. '):' → logprob: -1.8378959894180298
    4. ' +' → logprob: -2.5878958702087402
    5. '-' → logprob: -6.21289587020874
    6. ' -' → logprob: -6.58789587020874
    7. ' ,' → logprob: -6.96289587020874
    8. '//' → logprob: -7.83789587020874
    9. ')' → logprob: -7.96289587020874
    10. ' ):' → logprob: -8.212896347045898

Token 108: '8' (ID: 23)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.9358876347541809
    2. '1' → logprob: -2.060887575149536
    3. '2' → logprob: -2.060887575149536
    4. '3' → logprob: -2.185887575149536
    5. '5' → logprob: -2.685887575149536
    6. '6' → logprob: -3.185887575149536
    7. '10' → logprob: -3.435887575149536
    8. '9' → logprob: -3.685887575149536
    9. '0' → logprob: -4.310887813568115
    10. '7' → logprob: -4.310887813568115

Token 109: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2649935483932495
    2. '):' → logprob: -1.6399935483932495
    3. ' ,' → logprob: -4.014993667602539
    4. '):
' → logprob: -4.139993667602539
    5. '+' → logprob: -6.139993667602539
    6. '1' → logprob: -7.514993667602539
    7. ')' → logprob: -7.639993667602539
    8. '0' → logprob: -7.639993667602539
    9. ' ):' → logprob: -7.639993667602539
    10. '2' → logprob: -9.264993667602539

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005562512087635696
    2. ' ' → logprob: -7.500556468963623
    3. '2' → logprob: -13.250555992126465
    4. '   ' → logprob: -15.000555992126465
    5. '  ' → logprob: -15.500555992126465
    6. ')' → logprob: -15.875555992126465
    7. '4' → logprob: -16.00055694580078
    8. '3' → logprob: -16.06305694580078
    9. ',' → logprob: -16.37555694580078
    10. '

' → logprob: -16.62555694580078

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27589738368988037
    2. ',' → logprob: -1.5258973836898804
    3. ' ):' → logprob: -4.27589750289917
    4. ')' → logprob: -5.15089750289917
    5. ' ,' → logprob: -5.77589750289917
    6. ':' → logprob: -7.52589750289917
    7. ' )' → logprob: -8.650897026062012
    8. '):
' → logprob: -8.900897026062012
    9. ' :' → logprob: -11.525897026062012
    10. ' ' → logprob: -12.150897026062012

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04047786444425583
    2. ' if' → logprob: -3.665477752685547
    3. ' ' → logprob: -4.290477752685547
    4. '<|end|>' → logprob: -9.540477752685547
    5. '  ' → logprob: -9.665477752685547
    6. '    
' → logprob: -10.165477752685547
    7. 'if' → logprob: -10.290477752685547
    8. '    ' → logprob: -10.540477752685547
    9. '	if' → logprob: -10.665477752685547
    10. '   ' → logprob: -10.790477752685547

Token 113: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3735848367214203
    2. ' if' → logprob: -1.3735848665237427
    3. 'if' (adapté à ' if') → logprob: -2.873584747314453
    4. ' for' → logprob: -7.248584747314453
    5. 'for' → logprob: -7.998584747314453
    6. '    ' → logprob: -8.123584747314453
    7. '	if' → logprob: -8.248584747314453
    8. ' ' → logprob: -9.123584747314453
    9. '   ' → logprob: -9.248584747314453
    10. '    
' → logprob: -9.748584747314453

Token 114: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.062397394329309464
    2. 'prime' → logprob: -2.9373974800109863
    3. ' not' → logprob: -5.312397480010986
    4. ' four' → logprob: -6.687397480010986
    5. ' ' → logprob: -7.062397480010986
    6. ' a' → logprob: -9.062397003173828
    7. '   ' → logprob: -9.562397003173828
    8. ' all' → logprob: -9.562397003173828
    9. 'not' → logprob: -9.812397003173828
    10. '  ' → logprob: -10.187397003173828

Token 115: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00016194197814911604
    2. '[' → logprob: -8.875162124633789
    3. ' [' → logprob: -11.250162124633789
    4. 'a' → logprob: -12.250162124633789
    5. '   ' → logprob: -13.625162124633789
    6. '[i' → logprob: -14.000162124633789
    7. '[A' → logprob: -14.000162124633789
    8. '(a' → logprob: -15.250162124633789
    9. '[f' → logprob: -15.625162124633789
    10. '[s' → logprob: -15.750162124633789

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14606790244579315
    2. ']:' → logprob: -2.7710678577423096
    3. ' and' → logprob: -3.0210678577423096
    4. 'and' → logprob: -4.021068096160889
    5. ' ]' → logprob: -5.771068096160889
    6. '-' → logprob: -6.396068096160889
    7. ' ' → logprob: -8.14606761932373
    8. '1' → logprob: -8.27106761932373
    9. ' -' → logprob: -8.64606761932373
    10. ':' → logprob: -8.89606761932373

Token 117: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1241520568728447
    2. 'and' → logprob: -2.2491519451141357
    3. ':' → logprob: -4.499152183532715
    4. ' :' → logprob: -9.499152183532715
    5. ' ' → logprob: -10.374152183532715
    6. ' a' → logprob: -11.124152183532715
    7. 'a' → logprob: -12.374152183532715
    8. ' an' → logprob: -12.749152183532715
    9. '1' → logprob: -12.874152183532715
    10. '4' → logprob: -12.999152183532715

Token 118: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.2812691330909729
    2. 'prime' → logprob: -1.4062690734863281
    3. ' ' → logprob: -10.031269073486328
    4. ' a' → logprob: -10.406269073486328
    5. 'a' → logprob: -11.031269073486328
    6. '   ' → logprob: -11.781269073486328
    7. '  ' → logprob: -12.156269073486328
    8. '_prime' → logprob: -12.156269073486328
    9. ' all' → logprob: -12.906269073486328
    10. '    ' → logprob: -13.781269073486328

Token 119: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.018404757604002953
    2. '[' → logprob: -4.018404960632324
    3. 'a' → logprob: -9.018404960632324
    4. ' [' → logprob: -10.143404960632324
    5. '   ' → logprob: -11.268404960632324
    6. '[
' → logprob: -11.955904960632324
    7. '[s' → logprob: -12.018404960632324
    8. '[max' → logprob: -12.143404960632324
    9. '[f' → logprob: -12.268404960632324
    10. ' ' → logprob: -12.518404960632324

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17678256332874298
    2. '-' → logprob: -2.4267826080322266
    3. ' +' → logprob: -2.9267826080322266
    4. ' -' → logprob: -3.9267826080322266
    5. '   ' → logprob: -9.051782608032227
    6. ' ' → logprob: -9.426782608032227
    7. ']' → logprob: -9.676782608032227
    8. '+a' → logprob: -10.051782608032227
    9. '4' → logprob: -10.176782608032227
    10. 'a' → logprob: -10.926782608032227

Token 121: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18031126260757446
    2. '2' → logprob: -1.8053112030029297
    3. ' ' → logprob: -8.43031120300293
    4. '```' → logprob: -9.49281120300293
    5. '6' → logprob: -10.05531120300293
    6. '8' → logprob: -10.05531120300293
    7. '

' → logprob: -10.18031120300293
    8. '
' → logprob: -10.55531120300293
    9. '{' → logprob: -10.99281120300293
    10. 'four' → logprob: -11.55531120300293

Token 122: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07037495821714401
    2. ']' → logprob: -2.9453749656677246
    3. 'and' → logprob: -4.445374965667725
    4. ' ' → logprob: -6.445374965667725
    5. ' ]' → logprob: -6.945374965667725
    6. '4' → logprob: -8.320374488830566
    7. '5' → logprob: -8.570374488830566
    8. '0' → logprob: -8.570374488830566
    9. '3' → logprob: -9.070374488830566
    10. '1' → logprob: -9.320374488830566

Token 123: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04305366054177284
    2. 'and' → logprob: -3.16805362701416
    3. ' ' → logprob: -10.41805362701416
    4. '    ' → logprob: -11.66805362701416
    5. '   ' → logprob: -11.66805362701416
    6. '  ' → logprob: -13.16805362701416
    7. 'a' → logprob: -14.54305362701416
    8. '        ' → logprob: -14.54305362701416
    9. '          ' → logprob: -14.66805362701416
    10. '           ' → logprob: -14.79305362701416

Token 124: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.062143802642822266
    2. 'prime' → logprob: -2.8121438026428223
    3. ' ' → logprob: -9.812143325805664
    4. '   ' → logprob: -10.187143325805664
    5. 'a' → logprob: -10.812143325805664
    6. ' ' → logprob: -11.312143325805664
    7. '_prime' → logprob: -11.437143325805664
    8. '  ' → logprob: -11.687143325805664
    9. ' a' → logprob: -12.187143325805664
    10. ' not' → logprob: -12.437143325805664

Token 125: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.000987200066447258
    2. '[' → logprob: -7.2509870529174805
    3. 'a' → logprob: -8.50098705291748
    4. '[c' → logprob: -11.25098705291748
    5. ' [' → logprob: -11.50098705291748
    6. '[(' → logprob: -11.75098705291748
    7. '   ' → logprob: -12.12598705291748
    8. '(a' → logprob: -12.12598705291748
    9. '[b' → logprob: -12.25098705291748
    10. ' ' → logprob: -12.75098705291748

Token 126: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04827810451388359
    2. '-' → logprob: -3.4232780933380127
    3. ' +' → logprob: -4.798278331756592
    4. ']' → logprob: -5.673278331756592
    5. ' and' → logprob: -6.923278331756592
    6. ' -' → logprob: -7.548278331756592
    7. '
' → logprob: -8.048277854919434
    8. 'and' → logprob: -8.298277854919434
    9. ' ' → logprob: -9.048277854919434
    10. ' ]' → logprob: -9.048277854919434

Token 127: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03313034400343895
    2. '8' → logprob: -3.783130407333374
    3. '4' → logprob: -4.658130168914795
    4. '```' → logprob: -9.595630645751953
    5. '

' → logprob: -10.033130645751953
    6. '12' → logprob: -10.283130645751953
    7. ' ' → logprob: -10.408130645751953
    8. '{' → logprob: -10.595630645751953
    9. '
' → logprob: -10.908130645751953
    10. '``' → logprob: -11.158130645751953

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08515700697898865
    2. ' and' → logprob: -2.9601569175720215
    3. 'and' → logprob: -3.9601569175720215
    4. ']:' → logprob: -4.9601569175720215
    5. ' ]' → logprob: -5.9601569175720215
    6. ']:
' → logprob: -6.9601569175720215
    7. '   ' → logprob: -9.83515739440918
    8. ' ' → logprob: -10.46015739440918
    9. ':' → logprob: -10.58515739440918
    10. '+' → logprob: -10.71015739440918

Token 129: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018167614936828613
    2. 'and' → logprob: -4.018167495727539
    3. ' ' → logprob: -11.018167495727539
    4. '[]' → logprob: -15.018167495727539
    5. '   ' → logprob: -15.143167495727539
    6. '[' → logprob: -15.518167495727539
    7. '    ' → logprob: -16.01816749572754
    8. '  ' → logprob: -16.14316749572754
    9. ' ' → logprob: -16.51816749572754
    10. ' a' → logprob: -16.64316749572754

Token 130: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.3869664967060089
    2. 'prime' → logprob: -1.1369664669036865
    3. '   ' → logprob: -9.386966705322266
    4. ' ' → logprob: -12.011966705322266
    5. '  ' → logprob: -13.011966705322266
    6. '_prime' → logprob: -13.511966705322266
    7. '    ' → logprob: -13.886966705322266
    8. 'pr' → logprob: -15.261966705322266
    9. 'prim' → logprob: -15.761966705322266
    10. 'Prime' → logprob: -16.011966705322266

Token 131: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.215330409351736e-05
    2. 'a' → logprob: -10.625041961669922
    3. '[' → logprob: -11.125041961669922
    4. '(a' → logprob: -14.375041961669922
    5. '```' → logprob: -14.375041961669922
    6. '   ' → logprob: -14.625041961669922
    7. ' [' → logprob: -14.625041961669922
    8. '[
' → logprob: -15.750041961669922
    9. '

' → logprob: -16.250041961669922
    10. ' a' → logprob: -16.375041961669922

Token 132: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013109555002301931
    2. ' +' → logprob: -7.1263108253479
    3. '[' → logprob: -8.251311302185059
    4. '8' → logprob: -8.751311302185059
    5. '+
' → logprob: -10.751311302185059
    6. '7' → logprob: -11.501311302185059
    7. '9' → logprob: -11.876311302185059
    8. ']+' → logprob: -11.876311302185059
    9. ' ' → logprob: -12.126311302185059
    10. ']' → logprob: -12.251311302185059

Token 133: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0025624572299420834
    2. '10' → logprob: -6.877562522888184
    3. '0' → logprob: -7.377562522888184
    4. '4' → logprob: -8.002562522888184
    5. '
' → logprob: -8.565062522888184
    6. '```' → logprob: -9.190062522888184
    7. '

' → logprob: -9.940062522888184
    8. '2' → logprob: -10.565062522888184
    9. '...' → logprob: -11.002562522888184
    10. '{' → logprob: -11.127562522888184

Token 134: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.000610690622124821
    2. ']' → logprob: -8.1256103515625
    3. ':' → logprob: -8.2506103515625
    4. ']:
' → logprob: -10.3756103515625
    5. ' ]' → logprob: -11.5006103515625
    6. '):' → logprob: -12.5006103515625
    7. '   ' → logprob: -13.6256103515625
    8. ']:
' → logprob: -13.6256103515625
    9. ' and' → logprob: -13.7506103515625
    10. '[' → logprob: -14.0006103515625

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018526002764701843
    2. '   ' → logprob: -4.018526077270508
    3. ' four' → logprob: -8.518526077270508
    4. ':' → logprob: -10.018526077270508
    5. '	' → logprob: -10.268526077270508
    6. '
' → logprob: -10.893526077270508
    7. '           ' → logprob: -10.893526077270508
    8. '	   ' → logprob: -10.893526077270508
    9. 'four' → logprob: -11.643526077270508
    10. '    
' → logprob: -12.018526077270508

Token 136: ' four' (ID: 4242)
  Prédit: ' four'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' four' → logprob: -0.12129151076078415
    2. 'four' (adapté à ' four') → logprob: -2.371291399002075
    3. '   ' → logprob: -3.871291399002075
    4. '       ' → logprob: -10.746291160583496
    5. '           ' → logprob: -12.621291160583496
    6. '    ' → logprob: -13.121291160583496
    7. '   ' → logprob: -13.371291160583496
    8. '
' → logprob: -13.746291160583496
    9. 'f' → logprob: -14.371291160583496
    10. '    
' → logprob: -14.871291160583496

Token 137: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0001600347168277949
    2. '_' → logprob: -9.125160217285156
    3. '_p' → logprob: -10.125160217285156
    4. '_pro' → logprob: -11.750160217285156
    5. ' _' → logprob: -13.750160217285156
    6. '_pres' → logprob: -14.500160217285156
    7. '_Pr' → logprob: -15.625160217285156
    8. '_print' → logprob: -15.750160217285156
    9. '_prime' → logprob: -15.750160217285156
    10. '_pl' → logprob: -15.875160217285156

Token 138: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -8.947715832618997e-05
    2. 'omes' → logprob: -10.250089645385742
    3. 'ime' → logprob: -10.625089645385742
    4. '

' → logprob: -12.500089645385742
    5. '[' → logprob: -12.750089645385742
    6. 'mes' → logprob: -13.000089645385742
    7. 'im' → logprob: -13.125089645385742
    8. '#' → logprob: -13.375089645385742
    9. '
' → logprob: -13.500089645385742
    10. '```' → logprob: -13.625089645385742

Token 139: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004096208605915308
    2. '.' → logprob: -5.504096031188965
    3. '.app' → logprob: -11.879096031188965
    4. ' .' → logprob: -12.504096031188965
    5. '.add' → logprob: -12.879096031188965
    6. '.ap' → logprob: -13.754096031188965
    7. '.extend' → logprob: -13.879096031188965
    8. '.Append' → logprob: -14.254096031188965
    9. '.py' → logprob: -14.754096031188965
    10. '​.' → logprob: -14.879096031188965

Token 140: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.038297027349472046
    2. '(' → logprob: -3.288296937942505
    3. '((' → logprob: -8.288296699523926
    4. '(
' → logprob: -13.288296699523926
    5. 'a' → logprob: -13.413296699523926
    6. ' (' → logprob: -15.038296699523926
    7. '(

' → logprob: -16.038297653198242
    8. '([' → logprob: -16.288297653198242
    9. '('' → logprob: -16.788297653198242
    10. '(`' → logprob: -17.163297653198242

Token 141: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. '+' → logprob: -12.500005722045898
    3. ' )' → logprob: -14.000005722045898
    4. ')
' → logprob: -14.250005722045898
    5. '))' → logprob: -15.375005722045898
    6. '}' → logprob: -16.6250057220459
    7. ']' → logprob: -17.0000057220459
    8. '+)' → logprob: -17.2500057220459
    9. '),' → logprob: -17.5000057220459
    10. ',)' → logprob: -17.5000057220459

Token 142: '8' (ID: 23)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2245802879333496
    2. '4' → logprob: -2.5995802879333496
    3. ' ' → logprob: -3.0995802879333496
    4. '1' → logprob: -3.4745802879333496
    5. '5' → logprob: -3.8495802879333496
    6. '2' → logprob: -4.47458028793335
    7. '8' → logprob: -5.22458028793335
    8. '9' → logprob: -5.22458028793335
    9. 'a' → logprob: -5.97458028793335
    10. '3' → logprob: -6.72458028793335

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.750005722045898
    3. ' )' → logprob: -13.000005722045898
    4. '))' → logprob: -15.750005722045898
    5. ')`' → logprob: -16.5000057220459
    6. ']' → logprob: -16.7500057220459
    7. '),' → logprob: -17.3750057220459
    8. '`)' → logprob: -17.5000057220459
    9. ')return' → logprob: -17.6250057220459
    10. '   ' → logprob: -17.7500057220459

Token 144: 'import' (ID: 561)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1140240803360939
    2. '
' → logprob: -3.3640241622924805
    3. '<|end|>' → logprob: -3.6140241622924805
    4. 'for' → logprob: -4.2390241622924805
    5. '#' → logprob: -4.4890241622924805
    6. '\n' → logprob: -4.4890241622924805
    7. '[' → logprob: -5.9890241622924805
    8. ')' → logprob: -6.6140241622924805
    9. 'if' → logprob: -6.6140241622924805
    10. '#print' → logprob: -7.2390241622924805

Token 145: ' bis' (ID: 7204)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.057733822613954544
    2. ' math' → logprob: -3.9327337741851807
    3. ' time' → logprob: -4.18273401260376
    4. ' itertools' → logprob: -4.80773401260376
    5. 'sys' → logprob: -4.93273401260376
    6. ' os' → logprob: -6.30773401260376
    7. ' bis' → logprob: -6.55773401260376
    8. ' random' → logprob: -6.68273401260376
    9. 'time' → logprob: -7.80773401260376
    10. ' threading' → logprob: -8.307733535766602

Token 146: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00015741224342491478
    2. 't' → logprob: -9.125157356262207
    3. 'ct' → logprob: -10.500157356262207
    4. 'c' → logprob: -12.375157356262207
    5. '
' → logprob: -13.000157356262207
    6. 'ects' → logprob: -13.000157356262207
    7. '

' → logprob: -13.125157356262207
    8. 'p' → logprob: -13.250157356262207
    9. 'ec' → logprob: -13.625157356262207
    10. 'e' → logprob: -13.750157356262207

Token 147: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02383325807750225
    2. '

' → logprob: -4.398833274841309
    3. 'for' → logprob: -5.148833274841309
    4. 'def' → logprob: -6.273833274841309
    5. '
' → logprob: -7.023833274841309
    6. 'n' → logprob: -7.148833274841309
    7. '#' → logprob: -7.523833274841309
    8. '[' → logprob: -8.523833274841309
    9. 'print' → logprob: -8.773833274841309
    10. 'idx' → logprob: -9.148833274841309

Token 148: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22983518242835999
    2. '
' → logprob: -2.354835271835327
    3. 'n' → logprob: -3.354835271835327
    4. 'q' → logprob: -3.479835271835327
    5. 't' → logprob: -3.979835271835327
    6. 'for' → logprob: -4.604835033416748
    7. 'query' → logprob: -4.854835033416748
    8. 'queries' → logprob: -6.479835033416748
    9. 'import' → logprob: -6.979835033416748
    10. 'Q' → logprob: -7.229835033416748

Token 149: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6387619376182556
    2. '_' → logprob: -1.2637619972229004
    3. '_data' → logprob: -2.5137619972229004
    4. ' =' → logprob: -3.1387619972229004
    5. '_line' → logprob: -3.7637619972229004
    6. '=' → logprob: -4.2637619972229
    7. '.' → logprob: -4.5137619972229
    8. '(' → logprob: -5.0137619972229
    9. '_input' → logprob: -5.5137619972229
    10. '_list' → logprob: -6.8887619972229

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22712358832359314
    2. ' =' → logprob: -1.6021236181259155
    3. '()' → logprob: -6.477123737335205
    4. '=[]' → logprob: -9.227123260498047
    5. '.' → logprob: -10.852123260498047
    6. '[:]' → logprob: -11.852123260498047
    7. '=sys' → logprob: -11.852123260498047
    8. '(' → logprob: -12.102123260498047
    9. ' ' → logprob: -12.102123260498047
    10. '.readline' → logprob: -12.227123260498047

Token 151: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02325083687901497
    2. ' sys' → logprob: -3.7732508182525635
    3. '=sys' → logprob: -13.398250579833984
    4. '	sys' → logprob: -13.773250579833984
    5. '[' → logprob: -13.898250579833984
    6. '[]' → logprob: -14.273250579833984
    7. 'list' → logprob: -14.398250579833984
    8. '(sys' → logprob: -15.398250579833984
    9. 'input' → logprob: -16.398250579833984
    10. 'open' → logprob: -16.398250579833984

Token 152: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0017610944341868162
    2. '.' → logprob: -6.376760959625244
    3. '.argv' → logprob: -10.876761436462402
    4. '.std' → logprob: -11.001761436462402
    5. '.stdout' → logprob: -11.251761436462402
    6. '.st' → logprob: -12.376761436462402
    7. '.readline' → logprob: -12.501761436462402
    8. 'stdin' → logprob: -14.626761436462402
    9. '._' → logprob: -14.751761436462402
    10. '.stderr' → logprob: -15.001761436462402

Token 153: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.18183913826942444
    2. '.readlines' → logprob: -1.806839108467102
    3. 'read' → logprob: -6.9318389892578125
    4. '.read' → logprob: -7.3068389892578125
    5. '.' → logprob: -8.056838989257812
    6. 'buffer' → logprob: -10.306838989257812
    7. '=' → logprob: -10.931838989257812
    8. '_read' → logprob: -11.181838989257812
    9. ' readline' → logprob: -11.306838989257812
    10. '.buffer' → logprob: -11.431838989257812

Token 154: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014168446883559227
    2. '()' → logprob: -4.2641682624816895
    3. '_lines' → logprob: -13.264168739318848
    4. '(' → logprob: -14.014168739318848
    5. '()
' → logprob: -14.639168739318848
    6. 'split' → logprob: -15.139168739318848
    7. '()`' → logprob: -15.264168739318848
    8. '()

' → logprob: -15.389168739318848
    9. ' ().' → logprob: -15.389168739318848
    10. '()\' → logprob: -15.514168739318848

Token 155: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3132633566856384
    2. 'strip' → logprob: -1.3132634162902832
    3. 'rstrip' → logprob: -13.813262939453125
    4. 'decode' → logprob: -15.188262939453125
    5. ' split' → logprob: -15.813262939453125
    6. 'read' → logprob: -16.688262939453125
    7. 'str' → logprob: -18.688262939453125
    8. ' strip' → logprob: -18.938262939453125
    9. 'spl' → logprob: -19.313262939453125
    10. '(split' → logprob: -19.313262939453125

Token 156: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006719282828271389
    2. '()' → logprob: -5.00671911239624
    3. 'split' → logprob: -13.506719589233398
    4. ' ().' → logprob: -14.131719589233398
    5. '(' → logprob: -14.506719589233398
    6. '()
' → logprob: -14.881719589233398
    7. '('' → logprob: -15.006719589233398
    8. '().'' → logprob: -16.1317195892334
    9. '（）' → logprob: -16.3817195892334
    10. ' ()' → logprob: -16.5067195892334

Token 157: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. 'spl' → logprob: -20.25
    4. '(split' → logprob: -21.0
    5. 'sp' → logprob: -22.625
    6. 'strip' → logprob: -22.625
    7. '_split' → logprob: -22.75
    8. 'plit' → logprob: -22.75
    9. 'rstrip' → logprob: -23.375
    10. '.split' → logprob: -23.625

Token 158: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004755138419568539
    2. '('\' → logprob: -5.629755020141602
    3. '()\' → logprob: -7.629755020141602
    4. 'lines' → logprob: -7.879755020141602
    5. '()
' → logprob: -8.879755020141602
    6. '(' → logprob: -9.004755020141602
    7. '("\' → logprob: -11.504755020141602
    8. '()[' → logprob: -12.004755020141602
    9. '()

' → logprob: -12.754755020141602
    10. '('' → logprob: -12.754755020141602

Token 159: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '\n' → logprob: -16.875
    3. ' n' → logprob: -17.875
    4. 'newline' → logprob: -19.125
    5. ')' → logprob: -20.375
    6. '
' → logprob: -20.375
    7. '```' → logprob: -21.625
    8. '	n' → logprob: -21.625
    9. ')n' → logprob: -21.75
    10. 'lines' → logprob: -21.875

Token 160: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005909211467951536
    2. '')' → logprob: -7.500590801239014
    3. ')
' → logprob: -10.750591278076172
    4. ' )' → logprob: -11.625591278076172
    5. ']' → logprob: -12.750591278076172
    6. '[' → logprob: -13.500591278076172
    7. '`)' → logprob: -13.875591278076172
    8. '")' → logprob: -14.125591278076172
    9. ')

' → logprob: -14.625591278076172
    10. '）' → logprob: -15.750591278076172

Token 161: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012373676523566246
    2. 'results' → logprob: -5.012373447418213
    3. 'output' → logprob: -5.887373447418213
    4. ' for' → logprob: -6.887373447418213
    5. 'result' → logprob: -7.012373447418213
    6. 'idx' → logprob: -7.637373447418213
    7. 'index' → logprob: -9.137373924255371
    8. 'answers' → logprob: -9.262373924255371
    9. '
' → logprob: -9.762373924255371
    10. 'n' → logprob: -9.887373924255371

Token 162: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.09968037158250809
    2. 'line' → logprob: -2.7246804237365723
    3. ' _' → logprob: -4.724680423736572
    4. '_' → logprob: -4.974680423736572
    5. ' l' → logprob: -5.349680423736572
    6. '_line' → logprob: -5.724680423736572
    7. ' t' → logprob: -6.349680423736572
    8. 'l' → logprob: -6.599680423736572
    9. ' i' → logprob: -7.724680423736572
    10. ' L' → logprob: -7.849680423736572

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008454058319330215
    2. 'in' → logprob: -5.133453845977783
    3. ':' → logprob: -6.008453845977783
    4. ':
' → logprob: -10.258454322814941
    5. ',' → logprob: -11.508454322814941
    6. ' :' → logprob: -11.758454322814941
    7. ' ' → logprob: -12.758454322814941
    8. ' i' → logprob: -13.008454322814941
    9. '   ' → logprob: -13.508454322814941
    10. ' =' → logprob: -13.633454322814941

Token 164: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01815052703022957
    2. ' input' → logprob: -4.018150329589844
    3. 'sys' → logprob: -14.518150329589844
    4. ' ' → logprob: -17.143150329589844
    5. 'line' → logprob: -17.268150329589844
    6. 'range' → logprob: -17.518150329589844
    7. ' sys' → logprob: -18.143150329589844
    8. 'import' → logprob: -18.268150329589844
    9. '(input' → logprob: -18.268150329589844
    10. '<input' → logprob: -18.643150329589844

Token 165: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.014428149908781052
    2. '_' → logprob: -4.38942813873291
    3. ':' → logprob: -7.26442813873291
    4. '_:' → logprob: -7.51442813873291
    5. '.' → logprob: -8.88942813873291
    6. '_line' → logprob: -9.26442813873291
    7. '():' → logprob: -9.26442813873291
    8. '_LINES' → logprob: -9.38942813873291
    9. 'lines' → logprob: -9.51442813873291
    10. '_.' → logprob: -9.88942813873291

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009568398236297071
    2. ':
' → logprob: -7.000957012176514
    3. ',' → logprob: -10.125956535339355
    4. ' :' → logprob: -13.250956535339355
    5. '):' → logprob: -13.375956535339355
    6. '=' → logprob: -14.750956535339355
    7. ':**' → logprob: -14.875956535339355
    8. ':

' → logprob: -15.375956535339355
    9. '():' → logprob: -15.625956535339355
    10. '.split' → logprob: -15.750956535339355

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002028923248872161
    2. ',' → logprob: -6.877028942108154
    3. ' n' → logprob: -7.502028942108154
    4. '	n' → logprob: -9.002028465270996
    5. '    
' → logprob: -9.627028465270996
    6. '   ' → logprob: -9.877028465270996
    7. ',n' → logprob: -10.627028465270996
    8. ' numbers' → logprob: -10.752028465270996
    9. ' tokens' → logprob: -10.752028465270996
    10. 'n' → logprob: -10.877028465270996

Token 168: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11301897466182709
    2. 'n' (adapté à ' n') → logprob: -2.3630189895629883
    3. ' N' → logprob: -5.363018989562988
    4. ' x' → logprob: -5.988018989562988
    5. ' L' → logprob: -6.363018989562988
    6. 'N' → logprob: -7.113018989562988
    7. '   ' → logprob: -7.238018989562988
    8. ' k' → logprob: -7.488018989562988
    9. 'x' → logprob: -7.613018989562988
    10. ' l' → logprob: -8.113018989562988

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020922193303704262
    2. '=' → logprob: -3.8959221839904785
    3. '=int' → logprob: -7.8959221839904785
    4. ' ' → logprob: -12.145922660827637
    5. ')' → logprob: -14.395922660827637
    6. ',' → logprob: -14.895922660827637
    7. 'int' → logprob: -15.020922660827637
    8. ' =
' → logprob: -15.020922660827637
    9. ' ' → logprob: -15.520922660827637
    10. 'x' → logprob: -15.645922660827637

Token 170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061967797577381134
    2. ' int' → logprob: -2.8119678497314453
    3. '[int' → logprob: -16.436967849731445
    4. '=int' → logprob: -17.561967849731445
    5. '(int' → logprob: -17.811967849731445
    6. ' ' → logprob: -18.311967849731445
    7. '<int' → logprob: -19.311967849731445
    8. '	int' → logprob: -19.936967849731445
    9. 'ints' → logprob: -20.686967849731445
    10. ':int' → logprob: -20.686967849731445

Token 171: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0011717714369297028
    2. '(' → logprob: -6.751171588897705
    3. '(
' → logprob: -14.626172065734863
    4. ' (' → logprob: -15.126172065734863
    5. '[line' → logprob: -15.501172065734863
    6. '=line' → logprob: -15.876172065734863
    7. '#line' → logprob: -16.001171112060547
    8. '(n' → logprob: -16.501171112060547
    9. ' line' → logprob: -16.501171112060547
    10. 'line' → logprob: -16.626171112060547

Token 172: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759872198104858
    2. ')' → logprob: -0.8259872198104858
    3. ' )
' → logprob: -10.700986862182617
    4. ')
' → logprob: -11.200986862182617
    5. ' )' → logprob: -11.950986862182617
    6. ')

' → logprob: -12.575986862182617
    7. ')`
' → logprob: -14.325986862182617
    8. ')`' → logprob: -14.950986862182617
    9. '[' → logprob: -16.325986862182617
    10. '
' → logprob: -16.325986862182617

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10066661983728409
    2. 'idx' → logprob: -2.4756665229797363
    3. 'i' → logprob: -5.225666522979736
    4. 'index' → logprob: -5.975666522979736
    5. ' idx' → logprob: -6.100666522979736
    6. 'pos' → logprob: -6.850666522979736
    7. 'ind' → logprob: -8.850666999816895
    8. ' i' → logprob: -9.475666999816895
    9. '	idx' → logprob: -9.725666999816895
    10. ' pos' → logprob: -9.975666999816895

Token 174: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3685876727104187
    2. ' idx' → logprob: -1.3685877323150635
    3. 'pos' → logprob: -3.9935877323150635
    4. 'i' → logprob: -4.118587493896484
    5. 'index' → logprob: -4.493587493896484
    6. ' pos' → logprob: -5.868587493896484
    7. ' index' → logprob: -6.493587493896484
    8. ' i' → logprob: -6.618587493896484
    9. 'if' (adapté à ' if') → logprob: -6.868587493896484
    10. '   ' → logprob: -7.493587493896484

Token 175: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6636911034584045
    2. ' four' → logprob: -1.0386910438537598
    3. ' not' → logprob: -2.6636910438537598
    4. ' bis' → logprob: -3.5386910438537598
    5. ' len' → logprob: -4.03869104385376
    6. ' ' → logprob: -4.78869104385376
    7. 'n' → logprob: -5.53869104385376
    8. 'four' → logprob: -7.03869104385376
    9. ' prime' → logprob: -8.288691520690918
    10. 'bis' → logprob: -8.663691520690918

Token 176: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5256572365760803
    2. '<' → logprob: -1.9006571769714355
    3. '==' → logprob: -2.5256571769714355
    4. ' ==' → logprob: -2.5256571769714355
    5. ' >=' → logprob: -3.2756571769714355
    6. '>' → logprob: -3.7756571769714355
    7. ' >' → logprob: -3.7756571769714355
    8. '>=' → logprob: -4.5256571769714355
    9. ' <=' → logprob: -6.4006571769714355
    10. '<=' → logprob: -6.6506571769714355

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287092685699463
    2. ' ' → logprob: -1.0537092685699463
    3. ' -' → logprob: -12.053709030151367
    4. '-' → logprob: -13.303709030151367
    5. '1' → logprob: -14.928709030151367
    6. '4' → logprob: -15.553709030151367
    7. '7' → logprob: -16.178709030151367
    8. '9' → logprob: -16.803709030151367
    9. ' ' → logprob: -16.928709030151367
    10. '3' → logprob: -17.178709030151367

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019599171355366707
    2. '-' → logprob: -6.251959800720215
    3. ' ' → logprob: -11.126959800720215
    4. ' -' → logprob: -11.376959800720215
    5. '1' → logprob: -13.126959800720215
    6. '2' → logprob: -14.376959800720215
    7. '4' → logprob: -14.376959800720215
    8. '```' → logprob: -15.189459800720215
    9. '   ' → logprob: -15.314459800720215
    10. '999' → logprob: -15.626959800720215

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38693767786026
    2. ':
' → logprob: -1.1369376182556152
    3. '   ' → logprob: -10.386938095092773
    4. ' :
' → logprob: -10.761938095092773
    5. ' :' → logprob: -11.261938095092773
    6. ':
' → logprob: -14.261938095092773
    7. ':

' → logprob: -14.636938095092773
    8. ':return' → logprob: -15.386938095092773
    9. '       ' → logprob: -15.636938095092773
    10. ' ' → logprob: -16.761938095092773

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03842414170503616
    2. '   ' → logprob: -3.288424253463745
    3. ' break' → logprob: -8.538424491882324
    4. 'break' → logprob: -9.788424491882324
    5. ':' → logprob: -9.913424491882324
    6. '     ' → logprob: -10.913424491882324
    7. ' ' → logprob: -10.913424491882324
    8. '           ' → logprob: -11.413424491882324
    9. '	break' → logprob: -11.413424491882324
    10. '      ' → logprob: -11.538424491882324

Token 181: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10039752721786499
    2. ' break' → logprob: -2.3503975868225098
    3. '   ' → logprob: -8.975397109985352
    4. '	break' → logprob: -9.850397109985352
    5. '       ' → logprob: -11.725397109985352
    6. '
' → logprob: -13.350397109985352
    7. '```' → logprob: -13.975397109985352
    8. 'br' → logprob: -14.975397109985352
    9. 'b' → logprob: -14.975397109985352
    10. '_break' → logprob: -16.10039710998535

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08183714747428894
    2. '
' → logprob: -2.7068371772766113
    3. '    
' → logprob: -4.456837177276611
    4. '  
' → logprob: -9.706836700439453
    5. '\n' → logprob: -9.956836700439453
    6. '\t' → logprob: -10.456836700439453
    7. '   
' → logprob: -10.831836700439453
    8. ' 
' → logprob: -11.456836700439453
    9. '        
' → logprob: -11.581836700439453
    10. '	
' → logprob: -11.956836700439453

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001197966979816556
    2. '    
' → logprob: -7.626197814941406
    3. 'idx' → logprob: -7.751197814941406
    4. 'index' → logprob: -8.376197814941406
    5. ' idx' → logprob: -11.376197814941406
    6. '
' → logprob: -11.501197814941406
    7. 'pos' → logprob: -11.626197814941406
    8. '	idx' → logprob: -12.626197814941406
    9. ' index' → logprob: -12.751197814941406
    10. 'i' → logprob: -13.001197814941406

Token 184: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.27091479301452637
    2. ' idx' → logprob: -1.8959147930145264
    3. '   ' → logprob: -3.5209147930145264
    4. 'pos' → logprob: -3.5209147930145264
    5. 'index' → logprob: -4.1459150314331055
    6. 'i' → logprob: -5.6459150314331055
    7. ' pos' → logprob: -5.6459150314331055
    8. 'ind' → logprob: -6.5209150314331055
    9. ' index' → logprob: -6.6459150314331055
    10. ' i' → logprob: -7.0209150314331055

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510117143392563
    2. '=' → logprob: -4.387510299682617
    3. ')' → logprob: -15.012510299682617
    4. ' ' → logprob: -16.262510299682617
    5. ']' → logprob: -17.512510299682617
    6. ' ' → logprob: -17.637510299682617
    7. '   ' → logprob: -17.887510299682617
    8. ' =
' → logprob: -18.012510299682617
    9. '.' → logprob: -18.387510299682617
    10. ',' → logprob: -18.512510299682617

Token 186: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.676292231422849e-05
    2. ' bis' → logprob: -11.000017166137695
    3. 'b' → logprob: -19.375017166137695
    4. 'bs' → logprob: -21.625017166137695
    5. '   ' → logprob: -22.875017166137695
    6. 'bi' → logprob: -23.625017166137695
    7. 'len' → logprob: -24.000017166137695
    8. 'Bis' → logprob: -24.500017166137695
    9. '4' → logprob: -24.750017166137695
    10. '-b' → logprob: -25.000017166137695

Token 187: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00017600801947992295
    2. 'lect' → logprob: -9.250176429748535
    3. 'sect' → logprob: -9.875176429748535
    4. 'ct' → logprob: -11.500176429748535
    5. 'ectl' → logprob: -12.250176429748535
    6. 's' → logprob: -12.875176429748535
    7. 'e' → logprob: -13.000176429748535
    8. 'est' → logprob: -13.125176429748535
    9. 'ects' → logprob: -13.625176429748535
    10. 'lest' → logprob: -13.875176429748535

Token 188: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.003968574106693268
    2. '_left' → logprob: -5.628968715667725
    3. '_right' → logprob: -8.003968238830566
    4. '.ins' → logprob: -11.003968238830566
    5. '.' → logprob: -11.503968238830566
    6. ' bis' → logprob: -13.628968238830566
    7. 'bis' → logprob: -14.003968238830566
    8. ' .' → logprob: -14.003968238830566
    9. '<|end|>' → logprob: -14.128968238830566
    10. '_LEFT' → logprob: -15.128968238830566

Token 189: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06359069049358368
    2. 'sect' → logprob: -3.1885907649993896
    3. 'spect' → logprob: -4.3135905265808105
    4. 'n' → logprob: -5.3135905265808105
    5. 'sc' → logprob: -7.9385905265808105
    6. 'sp' → logprob: -8.313591003417969
    7. 'sl' → logprob: -8.563591003417969
    8. 'sg' → logprob: -8.813591003417969
    9. 'sr' → logprob: -8.813591003417969
    10. 'ns' → logprob: -8.813591003417969

Token 190: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0011720098555088043
    2. 'ect' → logprob: -7.251172065734863
    3. 'n' → logprob: -7.876172065734863
    4. 'sect' → logprob: -10.751172065734863
    5. '```' → logprob: -11.501172065734863
    6. 'c' → logprob: -12.001172065734863
    7. 'r' → logprob: -12.501172065734863
    8. 'lect' → logprob: -12.626172065734863
    9. '<' → logprob: -12.751172065734863
    10. 'с' → logprob: -12.751172065734863

Token 191: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.05904538184404373
    2. '_right' → logprob: -3.0590453147888184
    3. '(f' → logprob: -4.684045314788818
    4. 'left' → logprob: -6.934045314788818
    5. 'right' → logprob: -8.684045791625977
    6. 'Left' → logprob: -11.309045791625977
    7. 'Right' → logprob: -12.434045791625977
    8. '(left' → logprob: -14.059045791625977
    9. 'four' → logprob: -14.434045791625977
    10. '_four' → logprob: -15.809045791625977

Token 192: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.3856492842023727e-06
    2. 'four' → logprob: -13.625000953674316
    3. '(' → logprob: -16.125001907348633
    4. 'f' → logprob: -20.250001907348633
    5. ' four' → logprob: -20.250001907348633
    6. '_four' → logprob: -20.875001907348633
    7. ' (' → logprob: -21.250001907348633
    8. '(for' → logprob: -21.375001907348633
    9. '四' → logprob: -21.875001907348633
    10. '4' → logprob: -21.875001907348633

Token 193: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: 0.0
    2. 'four' → logprob: -18.25
    3. ' our' → logprob: -20.625
    4. 'Our' → logprob: -20.75
    5. 'oure' → logprob: -22.625
    6. 'or' → logprob: -22.625
    7. 'ours' → logprob: -23.5
    8. '_four' → logprob: -23.875
    9. 'Four' → logprob: -24.25
    10. 'OUR' → logprob: -24.375

Token 194: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -2.1008713702030946e-06
    2. 'pr' → logprob: -13.125001907348633
    3. '_pro' → logprob: -17.375001907348633
    4. '_prime' → logprob: -17.875001907348633
    5. '_Pr' → logprob: -18.125001907348633
    6. '(pr' → logprob: -18.625001907348633
    7. '-pr' → logprob: -18.875001907348633
    8. 'Pr' → logprob: -19.000001907348633
    9. '	pr' → logprob: -19.375001907348633
    10. '_tr' → logprob: -19.625001907348633

Token 195: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00023488728038500994
    2. 'ime' → logprob: -9.250234603881836
    3. 'omes' → logprob: -9.750234603881836
    4. 'mes' → logprob: -11.125234603881836
    5. '
' → logprob: -12.000234603881836
    6. '   ' → logprob: -12.125234603881836
    7. 'es' → logprob: -12.562734603881836
    8. '_' → logprob: -12.625234603881836
    9. '[' → logprob: -12.687734603881836
    10. 'ames' → logprob: -12.750234603881836

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06324463337659836
    2. ',n' → logprob: -2.813244581222534
    3. '(n' → logprob: -6.688244819641113
    4. ' ,' → logprob: -10.563244819641113
    5. '(' → logprob: -12.688244819641113
    6. ',(' → logprob: -13.438244819641113
    7. 'n' → logprob: -16.313243865966797
    8. ' (' → logprob: -17.563243865966797
    9. '`,' → logprob: -17.563243865966797
    10. ',num' → logprob: -18.063243865966797

Token 197: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20150426030158997
    2. ' n' → logprob: -1.7015042304992676
    3. ')n' → logprob: -9.826504707336426
    4. '(n' → logprob: -10.326504707336426
    5. '[n' → logprob: -13.076504707336426
    6. '	n' → logprob: -13.951504707336426
    7. ')' → logprob: -14.201504707336426
    8. ',n' → logprob: -16.32650375366211
    9. '_n' → logprob: -16.32650375366211
    10. '[' → logprob: -16.70150375366211

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519422471523285
    2. ')
' → logprob: -1.5019422769546509
    3. '   ' → logprob: -12.00194263458252
    4. ')-' → logprob: -12.62694263458252
    5. ')
' → logprob: -13.50194263458252
    6. ')

' → logprob: -14.00194263458252
    7. ' )' → logprob: -15.00194263458252
    8. ' )
' → logprob: -15.25194263458252
    9. ')`
' → logprob: -15.50194263458252
    10. ')`' → logprob: -15.75194263458252

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006973040290176868
    2. '    
' → logprob: -7.875697135925293
    3. 'print' → logprob: -9.000697135925293
    4. '
' → logprob: -9.125697135925293
    5. '<|end|>' → logprob: -9.750697135925293
    6. ',' → logprob: -12.500697135925293
    7. '  
' → logprob: -12.500697135925293
    8. ' print' → logprob: -13.000697135925293
    9. '#' → logprob: -13.000697135925293
    10. 'if' → logprob: -13.250697135925293

Token 200: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012475630268454552
    2. 'if' (adapté à ' if') → logprob: -4.762475490570068
    3. ' print' → logprob: -5.637475490570068
    4. ' if' → logprob: -8.387475967407227
    5. '   ' → logprob: -10.387475967407227
    6. 'result' → logprob: -11.387475967407227
    7. '
' → logprob: -11.512475967407227
    8. 'pr' → logprob: -13.012475967407227
    9. ' 
' → logprob: -13.262475967407227
    10. '```' → logprob: -13.637475967407227

Token 201: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.023406894877552986
    2. 'idx' → logprob: -3.773406982421875
    3. '	idx' → logprob: -9.148406982421875
    4. ' ' → logprob: -10.273406982421875
    5. '(idx' → logprob: -12.273406982421875
    6. '_idx' → logprob: -12.523406982421875
    7. ' len' → logprob: -13.273406982421875
    8. '   ' → logprob: -13.398406982421875
    9. ' ' → logprob: -13.710906982421875
    10. '  ' → logprob: -13.835906982421875

Token 202: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17041093111038208
    2. '==' → logprob: -1.9204108715057373
    3. ' <' → logprob: -5.420411109924316
    4. ' >' → logprob: -5.920411109924316
    5. ':' → logprob: -6.420411109924316
    6. '>' → logprob: -6.920411109924316
    7. '<' → logprob: -8.420411109924316
    8. ' >=' → logprob: -9.795411109924316
    9. ' !=' → logprob: -10.545411109924316
    10. '=' → logprob: -10.670411109924316

Token 203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.041866011917591095
    2. 'len' → logprob: -3.7918660640716553
    3. ' ' → logprob: -4.041865825653076
    4. ' len' → logprob: -7.041865825653076
    5. '1' → logprob: -13.041866302490234
    6. '(len' → logprob: -13.666866302490234
    7. '	len' → logprob: -14.041866302490234
    8. '=len' → logprob: -14.291866302490234
    9. '<len' → logprob: -14.291866302490234
    10. '   ' → logprob: -14.354366302490234

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006168863270431757
    2. 'len' → logprob: -5.131168842315674
    3. ' ' → logprob: -8.506169319152832
    4. ' len' → logprob: -10.631169319152832
    5. '1' → logprob: -12.256169319152832
    6. '4' → logprob: -12.506169319152832
    7. '(len' → logprob: -14.068669319152832
    8. '   ' → logprob: -14.381169319152832
    9. '-' → logprob: -14.693669319152832
    10. '3' → logprob: -15.131169319152832

Token 205: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39389529824256897
    2. ':' → logprob: -1.1438952684402466
    3. ' or' → logprob: -5.143895149230957
    4. '   ' → logprob: -7.268895149230957
    5. '       ' → logprob: -8.018895149230957
    6. '):
' → logprob: -10.393895149230957
    7. 'print' → logprob: -10.518895149230957
    8. 'or' → logprob: -10.893895149230957
    9. ':

' → logprob: -11.393895149230957
    10. ' and' → logprob: -11.643895149230957

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2988482415676117
    2. '   ' → logprob: -2.0488481521606445
    3. 'print' → logprob: -2.0488481521606445
    4. ' print' → logprob: -7.6738481521606445
    5. '```' → logprob: -10.423848152160645
    6. '	print' → logprob: -11.298848152160645
    7. '           ' → logprob: -11.423848152160645
    8. '
' → logprob: -11.673848152160645
    9. '    
' → logprob: -11.798848152160645
    10. '        
' → logprob: -12.048848152160645

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011152047663927078
    2. '   ' → logprob: -4.511152267456055
    3. ' print' → logprob: -9.386152267456055
    4. '       ' → logprob: -11.136152267456055
    5. '```' → logprob: -12.511152267456055
    6. '-' → logprob: -14.261152267456055
    7. '	print' → logprob: -14.511152267456055
    8. '
' → logprob: -15.261152267456055
    9. '    
' → logprob: -16.011152267456055
    10. '``' → logprob: -16.011152267456055

Token 208: '()
' (ID: 1234)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19315482676029205
    2. '0' → logprob: -1.9431548118591309
    3. 'four' → logprob: -3.568154811859131
    4. '4' → logprob: -6.318154811859131
    5. '(-' → logprob: -7.318154811859131
    6. ' four' → logprob: -7.568154811859131
    7. '(' → logprob: -7.693154811859131
    8. '(f' → logprob: -8.068155288696289
    9. ' ' → logprob: -8.568155288696289
    10. ' -' → logprob: -9.318155288696289

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0075678229331970215
    2. '       ' → logprob: -5.882567882537842
    3. 'else' → logprob: -6.007567882537842
    4. ' else' → logprob: -6.507567882537842
    5. '    
' → logprob: -7.882567882537842
    6. 'continue' → logprob: -9.382567405700684
    7. ',' → logprob: -10.132567405700684
    8. '\n' → logprob: -10.257567405700684
    9. '        
' → logprob: -10.382567405700684
    10. '	else' → logprob: -10.507567405700684

Token 210: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5268616080284119
    2. '   ' → logprob: -1.5268616676330566
    3. ' else' → logprob: -1.6518616676330566
    4. 'elif' → logprob: -8.151861190795898
    5. '	else' → logprob: -8.776861190795898
    6. ' ' → logprob: -9.776861190795898
    7. ' elif' → logprob: -9.901861190795898
    8. '  ' → logprob: -10.901861190795898
    9. '       ' → logprob: -10.901861190795898
    10. 'print' → logprob: -11.276861190795898

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1889064460992813
    2. '       ' → logprob: -2.18890643119812
    3. ':
' → logprob: -2.81390643119812
    4. '   ' → logprob: -9.5639066696167
    5. ',' → logprob: -11.0639066696167
    6. '[' → logprob: -11.1889066696167
    7. 'print' → logprob: -12.5639066696167
    8. ' :' → logprob: -12.8139066696167
    9. ':

' → logprob: -13.1889066696167
    10. '    ' → logprob: -13.1889066696167

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004050263669341803
    2. 'print' → logprob: -5.879050254821777
    3. '   ' → logprob: -6.754050254821777
    4. ' print' → logprob: -9.504050254821777
    5. '```' → logprob: -13.754050254821777
    6. '     ' → logprob: -14.254050254821777
    7. '           ' → logprob: -14.379050254821777
    8. '      ' → logprob: -15.004050254821777
    9. '	print' → logprob: -15.504050254821777
    10. '    ' → logprob: -15.629050254821777

Token 213: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.009067014791071415
    2. ' print' → logprob: -4.884067058563232
    3. '       ' → logprob: -6.759067058563232
    4. 'for' → logprob: -8.384066581726074
    5. ' for' → logprob: -10.134066581726074
    6. '   ' → logprob: -10.634066581726074
    7. 'start' → logprob: -13.009066581726074
    8. '```' → logprob: -13.134066581726074
    9. '	print' → logprob: -14.384066581726074
    10. 'if' → logprob: -14.509066581726074

Token 214: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0013884471263736486
    2. 'four' → logprob: -6.6263885498046875
    3. '(' → logprob: -10.001388549804688
    4. '(*' → logprob: -12.001388549804688
    5. '('' → logprob: -12.376388549804688
    6. 'f' → logprob: -12.626388549804688
    7. ' four' → logprob: -14.126388549804688
    8. '("' → logprob: -14.376388549804688
    9. '(len' → logprob: -14.376388549804688
    10. '四' → logprob: -15.126388549804688

Token 215: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -1.9027791495318525e-05
    2. 'four' → logprob: -10.875019073486328
    3. '_four' → logprob: -17.625019073486328
    4. 'or' → logprob: -18.375019073486328
    5. ' our' → logprob: -18.750019073486328
    6. 'oure' → logprob: -19.250019073486328
    7. '{' → logprob: -19.250019073486328
    8. 'Our' → logprob: -19.625019073486328
    9. ' four' → logprob: -19.750019073486328
    10. '"' → logprob: -19.875019073486328

Token 216: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.625001907348633
    3. '_pro' → logprob: -15.500001907348633
    4. '_p' → logprob: -16.125001907348633
    5. 'pr' → logprob: -16.250001907348633
    6. ')' → logprob: -16.250001907348633
    7. '_Pr' → logprob: -16.625001907348633
    8. '_prime' → logprob: -16.750001907348633
    9. ')_' → logprob: -16.875001907348633
    10. '_pl' → logprob: -17.000001907348633

Token 217: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -7.815280696377158e-05
    2. '_pr' → logprob: -10.250078201293945
    3. '_' → logprob: -11.500078201293945
    4. 'ime' → logprob: -11.875078201293945
    5. 'mes' → logprob: -12.625078201293945
    6. 'pr' → logprob: -13.000078201293945
    7. '[' → logprob: -13.375078201293945
    8. '_times' → logprob: -13.625078201293945
    9. '_codes' → logprob: -13.750078201293945
    10. 'ims' → logprob: -14.000078201293945

Token 218: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. 'idx' → logprob: -15.500000953674316
    4. ')[' → logprob: -17.0
    5. '[
' → logprob: -17.25
    6. ')' → logprob: -17.875
    7. '   ' → logprob: -18.5
    8. '	idx' → logprob: -18.625
    9. ' idx' → logprob: -19.0
    10. '
' → logprob: -19.0

Token 219: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00037359268753789365
    2. '[idx' → logprob: -8.000373840332031
    3. 'idx' → logprob: -10.625373840332031
    4. ' -' → logprob: -11.625373840332031
    5. '[-' → logprob: -13.000373840332031
    6. '[' → logprob: -14.125373840332031
    7. ' idx' → logprob: -14.250373840332031
    8. ']-' → logprob: -14.500373840332031
    9. '0' → logprob: -15.250373840332031
    10. '(idx' → logprob: -15.625373840332031

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.375005722045898
    3. '0' → logprob: -14.125005722045898
    4. ')' → logprob: -15.875005722045898
    5. ']' → logprob: -16.2500057220459
    6. '4' → logprob: -16.5625057220459
    7. '2' → logprob: -16.7500057220459
    8. '```' → logprob: -17.0625057220459
    9. '])' → logprob: -17.0625057220459
    10. '3' → logprob: -18.0625057220459

Token 221: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ' )' → logprob: -11.875011444091797
    3. '))' → logprob: -12.875011444091797
    4. '})' → logprob: -14.250011444091797
    5. '])' → logprob: -15.125011444091797
    6. ')
' → logprob: -15.250011444091797
    7. ')`' → logprob: -15.375011444091797
    8. '`)' → logprob: -15.625011444091797
    9. ')")' → logprob: -16.750011444091797
    10. '())' → logprob: -18.000011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 219
Tokens correctement prédits (1ère position, stricte): 121
Tokens correctement prédits (1ère position, avec adaptation): 126
Tokens correctement prédits (top 10): 197
Précision stricte (1ère position): 55.25%
Précision adaptée (1ère position): 57.53%
Précision (top 10): 89.95%
================================================================================
