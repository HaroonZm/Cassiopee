================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

S = input().strip()
k = int(input().strip())
n = len(S)

LIMIT = 10**18

# dp[i][j] = number of shortest palindromes for S[i..j]
dp = [[-1]*(n) for _ in range(n)]

def count(i,j):
    if i > j:
        return 1
    if i == j:
        return 1
    if dp[i][j] != -1:
        return dp[i][j]
    if S[i] == S[j]:
        res = count(i+1,j-1)
    else:
        res = 0
        left = count(i+1,j)
        right = count(i,j-1)
        if left > LIMIT:
            left = LIMIT
        if right > LIMIT:
            right = LIMIT
        res = left + right
        if res > LIMIT:
            res = LIMIT
    dp[i][j] = res
    return res

def build(i,j,k):
    if i > j:
        return ''
    if i == j:
        return S[i]
    if S[i] == S[j]:
        return S[i] + build(i+1,j-1,k) + S[j]
    else:
        left = count(i+1,j)
        if left >= k:
            return S[i] + build(i+1,j,k) + S[i]
        else:
            return S[j] + build(i,j-1,k-left) + S[j]

total = count(0,n-1)
if total < k:
    print("NONE")
else:
    ans = build(0,n-1,k)
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.579630434513092
    2. '.' → logprob: -0.954630434513092
    3. 'import' → logprob: -3.9546303749084473
    4. '\' → logprob: -4.829630374908447
    5. 'newline' → logprob: -4.954630374908447
    6. '
' → logprob: -5.079630374908447
    7. '<|end|>' → logprob: -5.329630374908447
    8. '```' → logprob: -5.579630374908447
    9. '' → logprob: -6.704630374908447
    10. '<|end|>' → logprob: -6.954630374908447

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5778104662895203
    2. '_trace' → logprob: -1.327810525894165
    3. ' _' → logprob: -2.702810525894165
    4. '_version' → logprob: -3.577810525894165
    5. '_soft' → logprob: -4.577810287475586
    6. '_exc' → logprob: -4.702810287475586
    7. '_encoding' → logprob: -5.702810287475586
    8. '_ex' → logprob: -5.702810287475586
    9. '_exception' → logprob: -5.702810287475586
    10. '_default' → logprob: -5.827810287475586

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2565893828868866
    2. '_limit' → logprob: -1.631589412689209
    3. '_depth' → logprob: -3.756589412689209
    4. 'depth' → logprob: -5.006589412689209
    5. 'error' → logprob: -9.50658893585205
    6. '('_' → logprob: -9.50658893585205
    7. '_' → logprob: -9.63158893585205
    8. ' limit' → logprob: -9.75658893585205
    9. '(' → logprob: -9.88158893585205
    10. '_stack' → logprob: -10.25658893585205

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.64708495605737e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '```' → logprob: -12.750066757202148
    7. '((' → logprob: -12.875066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '("("' → logprob: -13.375066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07765462249517441
    2. '000' → logprob: -2.7026546001434326
    3. '6' → logprob: -5.452654838562012
    4. '00' → logprob: -6.327654838562012
    5. '7' → logprob: -7.452654838562012
    6. '**' → logprob: -7.577654838562012
    7. '5' → logprob: -8.077654838562012
    8. '4' → logprob: -9.202654838562012
    9. ')' → logprob: -9.702654838562012
    10. '```' → logprob: -10.452654838562012

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.005893245339393616
    2. '9' → logprob: -5.505893230438232
    3. '6' → logprob: -7.005893230438232
    4. '8' → logprob: -7.005893230438232
    5. '```' → logprob: -16.50589370727539
    6. ' ' → logprob: -17.50589370727539
    7. '``' → logprob: -19.88089370727539
    8. ')' → logprob: -20.50589370727539
    9. '**' → logprob: -20.63089370727539
    10. '(' → logprob: -20.75589370727539

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'S' (ID: 50)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13885730504989624
    2. ' =' → logprob: -2.138857364654541
    3. '=input' → logprob: -5.138857364654541
    4. '_' → logprob: -5.513857364654541
    5. ',' → logprob: -7.638857364654541
    6. ' ' → logprob: -8.138856887817383
    7. '=sys' → logprob: -8.388856887817383
    8. '[' → logprob: -8.513856887817383
    9. '=int' → logprob: -8.638856887817383
    10. ')' → logprob: -9.013856887817383

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6410754919052124
    2. ' input' → logprob: -0.7660754919052124
    3. ''' → logprob: -6.516075611114502
    4. ' "' → logprob: -6.766075611114502
    5. ' '' → logprob: -6.891075611114502
    6. ' ' → logprob: -7.016075611114502
    7. ' []' → logprob: -7.141075611114502
    8. ' ''' → logprob: -7.141075611114502
    9. ' ""' → logprob: -7.641075611114502
    10. '"' → logprob: -7.891075611114502

Token 16: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012702230364084244
    2. '()' → logprob: -4.387702465057373
    3. ')' → logprob: -10.012701988220215
    4. '(
' → logprob: -10.137701988220215
    5. '```' → logprob: -10.137701988220215
    6. '("("' → logprob: -11.762701988220215
    7. '`' → logprob: -11.887701988220215
    8. ' (' → logprob: -12.012701988220215
    9. '(

' → logprob: -12.137701988220215
    10. '().' → logprob: -12.262701988220215

Token 17: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12699183821678162
    2. 'rstrip' → logprob: -2.1269917488098145
    3. 'read' → logprob: -10.626992225646973
    4. 'split' → logprob: -10.876992225646973
    5. 'r' → logprob: -11.751992225646973
    6. ' strip' → logprob: -12.376992225646973
    7. 'replace' → logprob: -12.501992225646973
    8. 'startswith' → logprob: -13.001992225646973
    9. 'rst' → logprob: -13.501992225646973
    10. ' readline' → logprob: -15.501992225646973

Token 18: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17982031404972076
    2. '(' → logprob: -1.8048202991485596
    3. '(
' → logprob: -10.92982006072998
    4. '()`' → logprob: -11.30482006072998
    5. ')' → logprob: -11.42982006072998
    6. ' ()' → logprob: -12.30482006072998
    7. '()
' → logprob: -12.55482006072998
    8. '())' → logprob: -12.67982006072998
    9. '(

' → logprob: -12.67982006072998
    10. ' parentheses' → logprob: -12.92982006072998

Token 19: 'k' (ID: 74)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9296020865440369
    2. 'def' → logprob: -0.9296020865440369
    3. 'if' → logprob: -1.9296021461486816
    4. 'dp' → logprob: -3.4296021461486816
    5. 'N' → logprob: -4.429602146148682
    6. 'd' → logprob: -5.304602146148682
    7. 'result' → logprob: -5.554602146148682
    8. 'count' → logprob: -5.679602146148682
    9. 'a' → logprob: -7.054602146148682
    10. 'for' → logprob: -7.054602146148682

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22570621967315674
    2. '=' → logprob: -1.6007062196731567
    3. ' ' → logprob: -8.350706100463867
    4. '=int' → logprob: -9.975706100463867
    5. ',' → logprob: -12.725706100463867
    6. '_' → logprob: -12.850706100463867
    7. '  ' → logprob: -14.350706100463867
    8. ' =
' → logprob: -14.350706100463867
    9. ')' → logprob: -14.475706100463867
    10. 's' → logprob: -14.725706100463867

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20199932157993317
    2. ' int' → logprob: -1.701999306678772
    3. '10' → logprob: -8.45199966430664
    4. ' ' → logprob: -8.70199966430664
    5. '5' → logprob: -9.70199966430664
    6. '1' → logprob: -10.07699966430664
    7. '3' → logprob: -10.20199966430664
    8. '0' → logprob: -11.20199966430664
    9. '[int' → logprob: -11.32699966430664
    10. '20' → logprob: -11.82699966430664

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01244325004518032
    2. '(input' → logprob: -4.6374430656433105
    3. '(S' → logprob: -6.1374430656433105
    4. '('' → logprob: -8.387443542480469
    5. '(k' → logprob: -9.012443542480469
    6. '()' → logprob: -9.637443542480469
    7. ' (' → logprob: -10.137443542480469
    8. '(`' → logprob: -11.012443542480469
    9. '(sys' → logprob: -11.262443542480469
    10. '("' → logprob: -11.512443542480469

Token 23: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.320451557636261
    2. '()' → logprob: -1.3204514980316162
    3. ')' → logprob: -4.945451736450195
    4. '(' → logprob: -11.195451736450195
    5. ' ())' → logprob: -11.695451736450195
    6. '())
' → logprob: -12.320451736450195
    7. '().' → logprob: -12.570451736450195
    8. '();)' → logprob: -12.695451736450195
    9. '`)' → logprob: -12.945451736450195
    10. '()
' → logprob: -13.070451736450195

Token 24: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0008469101157970726
    2. ')' → logprob: -7.250846862792969
    3. 'rstrip' → logprob: -9.000846862792969
    4. 'split' → logprob: -11.875846862792969
    5. ' strip' → logprob: -13.000846862792969
    6. 'replace' → logprob: -13.000846862792969
    7. '_strip' → logprob: -14.125846862792969
    8. '-strip' → logprob: -14.250846862792969
    9. '))' → logprob: -15.875846862792969
    10. '())' → logprob: -16.00084686279297

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009356986731290817
    2. '())' → logprob: -4.88435697555542
    3. '()' → logprob: -6.38435697555542
    4. '))' → logprob: -10.384357452392578
    5. '`)' → logprob: -11.009357452392578
    6. '(' → logprob: -12.134357452392578
    7. ')
' → logprob: -13.009357452392578
    8. ' )' → logprob: -13.134357452392578
    9. '')' → logprob: -13.384357452392578
    10. '）' → logprob: -14.634357452392578

Token 26: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08760398626327515
    2. 'd' → logprob: -2.96260404586792
    3. '
' → logprob: -4.46260404586792
    4. '#' → logprob: -4.71260404586792
    5. '\' → logprob: -6.46260404586792
    6. ')' → logprob: -6.46260404586792
    7. 'dp' → logprob: -6.58760404586792
    8. ':' → logprob: -6.71260404586792
    9. 'a' → logprob: -6.96260404586792
    10. 'n' → logprob: -7.21260404586792

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08161304146051407
    2. '=' → logprob: -2.581613063812256
    3. ' ' → logprob: -6.581613063812256
    4. '=len' → logprob: -7.206613063812256
    5. ',' → logprob: -8.956612586975098
    6. 'um' → logprob: -9.331612586975098
    7. '=int' → logprob: -9.331612586975098
    8. 'u' → logprob: -9.581612586975098
    9. '-' → logprob: -10.206612586975098
    10. 'ext' → logprob: -10.581612586975098

Token 28: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18103745579719543
    2. ' len' → logprob: -1.806037425994873
    3. '1' → logprob: -7.681037425994873
    4. '10' → logprob: -8.056037902832031
    5. ' ' → logprob: -8.681037902832031
    6. '0' → logprob: -8.806037902832031
    7. 'k' → logprob: -9.931037902832031
    8. ' k' → logprob: -10.181037902832031
    9. 'int' → logprob: -10.806037902832031
    10. ' int' → logprob: -10.931037902832031

Token 29: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.006719640456140041
    2. '(' → logprob: -5.006719589233398
    3. '(s' → logprob: -12.506719589233398
    4. '(
' → logprob: -15.631719589233398
    5. '(k' → logprob: -16.0067195892334
    6. 'S' → logprob: -16.5067195892334
    7. '(`' → logprob: -16.8817195892334
    8. ' (' → logprob: -17.6317195892334
    9. '(

' → logprob: -17.7567195892334
    10. '(n' → logprob: -18.1317195892334

Token 30: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. '-' → logprob: -13.250011444091797
    3. '))' → logprob: -13.250011444091797
    4. ')
' → logprob: -13.625011444091797
    5. ' )' → logprob: -13.750011444091797
    6. '[' → logprob: -13.750011444091797
    7. '#' → logprob: -14.250011444091797
    8. '`)' → logprob: -14.375011444091797
    9. '**' → logprob: -14.500011444091797
    10. ')n' → logprob: -14.500011444091797

Token 31: 'LIMIT' (ID: 121694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024102939292788506
    2. 'def' → logprob: -4.274103164672852
    3. 'prefix' → logprob: -6.274103164672852
    4. 'DP' → logprob: -6.274103164672852
    5. 'd' → logprob: -6.899103164672852
    6. 'count' → logprob: -7.024103164672852
    7. 'result' → logprob: -7.024103164672852
    8. '
' → logprob: -7.649103164672852
    9. 'counts' → logprob: -7.899103164672852
    10. 'max' → logprob: -8.274103164672852

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006681174854747951
    2. '=' → logprob: -7.375668048858643
    3. 'S' → logprob: -10.6256685256958
    4. ' ' → logprob: -12.1256685256958
    5. '_' → logprob: -12.3756685256958
    6. 's' → logprob: -13.1256685256958
    7. ',' → logprob: -13.8756685256958
    8. '=int' → logprob: -14.3756685256958
    9. 'import' → logprob: -14.7506685256958
    10. '1' → logprob: -14.7506685256958

Token 33: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4432428181171417
    2. ' ' → logprob: -1.0682427883148193
    3. '100' → logprob: -5.443243026733398
    4. 'k' → logprob: -5.443243026733398
    5. '1' → logprob: -6.318243026733398
    6. '2' → logprob: -6.693243026733398
    7. ' k' → logprob: -6.943243026733398
    8. 'float' → logprob: -7.943243026733398
    9. 'pow' → logprob: -8.818243026733398
    10. 'int' → logprob: -8.818243026733398

Token 34: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.14571793377399445
    2. 'k' → logprob: -2.2707178592681885
    3. '100' → logprob: -3.7707178592681885
    4. '2' → logprob: -5.770718097686768
    5. '1' → logprob: -6.395718097686768
    6. '26' → logprob: -7.145718097686768
    7. '5' → logprob: -7.395718097686768
    8. '50' → logprob: -7.395718097686768
    9. '200' → logprob: -8.02071762084961
    10. '3' → logprob: -8.02071762084961

Token 35: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05757582187652588
    2. '6' → logprob: -3.5575757026672363
    3. '7' → logprob: -4.182575702667236
    4. '9' → logprob: -5.557575702667236
    5. '000' → logprob: -6.057575702667236
    6. '18' → logprob: -6.182575702667236
    7. '8' → logprob: -6.432575702667236
    8. '0' → logprob: -6.682575702667236
    9. '5' → logprob: -7.807575702667236
    10. '10' → logprob: -8.307576179504395

Token 36: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.7450646758079529
    2. '9' → logprob: -1.6200647354125977
    3. '10' → logprob: -2.1200647354125977
    4. '7' → logprob: -2.2450647354125977
    5. '5' → logprob: -3.2450647354125977
    6. '100' → logprob: -3.7450647354125977
    7. '6' → logprob: -4.745064735412598
    8. '15' → logprob: -4.995064735412598
    9. '8' → logprob: -5.120064735412598
    10. '12' → logprob: -5.245064735412598

Token 37: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10758122056722641
    2. 'def' → logprob: -2.85758113861084
    3. 'DP' → logprob: -4.48258113861084
    4. '
' → logprob: -4.60758113861084
    5. 'result' → logprob: -5.10758113861084
    6. 'a' → logprob: -6.10758113861084
    7. '#' → logprob: -6.35758113861084
    8. '```' → logprob: -6.48258113861084
    9. 'd' → logprob: -6.60758113861084
    10. 'answer' → logprob: -6.73258113861084

Token 38: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009707815013825893
    2. 'def' → logprob: -4.759707927703857
    3. 'count' → logprob: -8.3847074508667
    4. 'pow' → logprob: -8.5097074508667
    5. 'DP' → logprob: -8.6347074508667
    6. 'cnt' → logprob: -9.2597074508667
    7. 'counts' → logprob: -9.3847074508667
    8. 'memo' → logprob: -9.8847074508667
    9. 'from' → logprob: -10.0097074508667
    10. 'd' → logprob: -10.0097074508667

Token 39: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1689794510602951
    2. 'def' → logprob: -1.9189794063568115
    3. 'from' → logprob: -5.418979644775391
    4. ' dp' → logprob: -6.668979644775391
    5. 'INF' → logprob: -7.668979644775391
    6. 'import' → logprob: -7.793979644775391
    7. 'pow' → logprob: -8.04397964477539
    8. 'class' → logprob: -8.29397964477539
    9. 'cnt' → logprob: -8.29397964477539
    10. 'sys' → logprob: -8.54397964477539

Token 40: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003683924674987793
    2. '=' → logprob: -5.628684043884277
    3. 'dp' → logprob: -11.128684043884277
    4. '_size' → logprob: -11.878684043884277
    5. 'size' → logprob: -11.878684043884277
    6. ' ' → logprob: -12.003684043884277
    7. '_' → logprob: -12.003684043884277
    8. '[' → logprob: -12.253684043884277
    9. '_count' → logprob: -12.253684043884277
    10. 'count' → logprob: -12.378684043884277

Token 41: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16167303919792175
    2. ']' → logprob: -1.9116730690002441
    3. ' ][' → logprob: -7.036673069000244
    4. ']=' → logprob: -8.036672592163086
    5. ' =' → logprob: -9.536672592163086
    6. '[i' → logprob: -9.911672592163086
    7. ' ]' → logprob: -10.411672592163086
    8. '][]' → logprob: -11.036672592163086
    9. '=' → logprob: -11.161672592163086
    10. '+' → logprob: -11.536672592163086

Token 42: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06559843569993973
    2. 'k' → logprob: -3.440598487854004
    3. 's' → logprob: -4.940598487854004
    4. 'c' → logprob: -5.315598487854004
    5. 'l' → logprob: -5.315598487854004
    6. 'v' → logprob: -5.690598487854004
    7. ']' → logprob: -6.440598487854004
    8. 'x' → logprob: -6.440598487854004
    9. '0' → logprob: -6.565598487854004
    10. 'd' → logprob: -6.690598487854004

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034152281004935503
    2. '][' → logprob: -6.378415107727051
    3. ' ]' → logprob: -6.628415107727051
    4. ']:' → logprob: -8.37841510772705
    5. ']=' → logprob: -9.12841510772705
    6. ' ][' → logprob: -10.75341510772705
    7. '=' → logprob: -11.62841510772705
    8. '],' → logprob: -12.62841510772705
    9. ']={' → logprob: -12.75341510772705
    10. ' =' → logprob: -12.75341510772705

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06203065440058708
    2. '=' → logprob: -2.812030553817749
    3. ' ' → logprob: -10.812030792236328
    4. ',' → logprob: -11.187030792236328
    5. '[' → logprob: -12.437030792236328
    6. '0' → logprob: -12.437030792236328
    7. 'dp' → logprob: -12.437030792236328
    8. ':' → logprob: -12.687030792236328
    9. '=[]' → logprob: -13.187030792236328
    10. ' =[' → logprob: -13.312030792236328

Token 45: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.846878707408905
    2. ' ' → logprob: -1.8468787670135498
    3. ' the' → logprob: -2.84687876701355
    4. ' max' → logprob: -3.22187876701355
    5. 'the' → logprob: -3.34687876701355
    6. '最' → logprob: -3.59687876701355
    7. ' number' → logprob: -3.59687876701355
    8. 'max' → logprob: -3.72187876701355
    9. '1' → logprob: -4.346878528594971
    10. ' minimum' → logprob: -4.346878528594971

Token 46: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' shortest' (ID: 70564)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.4009113013744354
    2. ' subse' → logprob: -1.2759113311767578
    3. ' sequences' → logprob: -3.900911331176758
    4. ' distinct' → logprob: -4.650911331176758
    5. ' different' → logprob: -5.025911331176758
    6. ' strings' → logprob: -5.400911331176758
    7. ' substr' → logprob: -6.150911331176758
    8. 'ways' → logprob: -6.400911331176758
    9. 'distinct' → logprob: -6.400911331176758
    10. 'different' → logprob: -7.025911331176758

Token 48: ' pal' (ID: 5337)
  Prédit: ' paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.5944749712944031
    2. 'paths' → logprob: -1.2194750308990479
    3. ' subse' → logprob: -2.469475030899048
    4. ' super' → logprob: -3.969475030899048
    5. '_paths' → logprob: -4.344474792480469
    6. ' pal' → logprob: -4.469474792480469
    7. ' common' → logprob: -5.469474792480469
    8. 'super' → logprob: -5.594474792480469
    9. ' ways' → logprob: -5.594474792480469
    10. ' unique' → logprob: -6.219474792480469

Token 49: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.2825523316860199
    2. 'in' → logprob: -2.7825522422790527
    3. '```' → logprob: -2.7825522422790527
    4. 'indrome' → logprob: -2.9075522422790527
    5. '[i' → logprob: -3.7825522422790527
    6. '[]' → logprob: -4.907552242279053
    7. '_sub' → logprob: -5.157552242279053
    8. 'i' → logprob: -5.407552242279053
    9. '[' → logprob: -5.657552242279053
    10. 's' → logprob: -5.657552242279053

Token 50: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.29019320011138916
    2. 's' → logprob: -2.2901930809020996
    3. 'rome' → logprob: -3.0401930809020996
    4. 'rom' → logprob: -3.1651930809020996
    5. 'es' → logprob: -3.7901930809020996
    6. 'ind' → logprob: -4.1651930809021
    7. 'r' → logprob: -4.6651930809021
    8. 'ic' → logprob: -6.0401930809021
    9. '```' → logprob: -6.5401930809021
    10. 'rides' → logprob: -6.9151930809021

Token 51: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' S' (ID: 336)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0414938926696777
    2. ' i' → logprob: -1.9164938926696777
    3. 'the' → logprob: -2.6664938926696777
    4. 'prefix' → logprob: -2.9164938926696777
    5. 'i' → logprob: -3.0414938926696777
    6. ' S' → logprob: -3.1664938926696777
    7. ' prefix' → logprob: -3.1664938926696777
    8. ' substr' → logprob: -3.2914938926696777
    9. 'S' → logprob: -3.4164938926696777
    10. ' prefixes' → logprob: -3.4164938926696777

Token 53: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49488577246665955
    2. '<|end|>' → logprob: -1.994885802268982
    3. '[i' → logprob: -2.2448856830596924
    4. '[' → logprob: -3.1198856830596924
    5. 'dp' → logprob: -3.3698856830596924
    6. ']' → logprob: -4.3698859214782715
    7. ',' → logprob: -4.6198859214782715
    8. ' ' → logprob: -4.6198859214782715
    9. '_' → logprob: -4.8698859214782715
    10. '=' → logprob: -4.9948859214782715

Token 54: '..' (ID: 485)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08026152849197388
    2. ':' → logprob: -2.705261468887329
    3. ':j' → logprob: -5.205261707305908
    4. ' ][' → logprob: -5.830261707305908
    5. '[j' → logprob: -7.830261707305908
    6. ',j' → logprob: -8.08026123046875
    7. ']' → logprob: -8.20526123046875
    8. ' :' → logprob: -8.45526123046875
    9. ',' → logprob: -8.83026123046875
    10. '+' → logprob: -8.95526123046875

Token 55: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01908743567764759
    2. '][' → logprob: -4.644087314605713
    3. 'i' → logprob: -5.519087314605713
    4. ']' → logprob: -5.769087314605713
    5. ':j' → logprob: -6.519087314605713
    6. '+j' → logprob: -8.519087791442871
    7. ' j' → logprob: -9.394087791442871
    8. ',j' → logprob: -9.644087791442871
    9. 'n' → logprob: -9.769087791442871
    10. ',' → logprob: -9.894087791442871

Token 56: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.248469718324486e-05
    2. ' ]' → logprob: -11.375022888183594
    3. '][' → logprob: -12.000022888183594
    4. '']' → logprob: -13.875022888183594
    5. ']
' → logprob: -14.250022888183594
    6. '[' → logprob: -14.250022888183594
    7. ')' → logprob: -14.250022888183594
    8. '[]' → logprob: -14.750022888183594
    9. '#' → logprob: -15.750022888183594
    10. ']

' → logprob: -15.750022888183594

Token 57: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2524014711380005
    2. ' =' → logprob: -1.7524014711380005
    3. '=' → logprob: -3.377401351928711
    4. 'd' → logprob: -5.002401351928711
    5. '
' → logprob: -6.627401351928711
    6. ' dp' → logprob: -6.627401351928711
    7. ',' → logprob: -7.127401351928711
    8. '#' → logprob: -7.252401351928711
    9. 'import' → logprob: -7.377401351928711
    10. '\' → logprob: -7.377401351928711

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11037798225879669
    2. '=' → logprob: -2.7353780269622803
    3. '[' → logprob: -3.3603780269622803
    4. ' ' → logprob: -6.860377788543701
    5. '=[' → logprob: -6.860377788543701
    6. '=[[' → logprob: -6.985377788543701
    7. '[i' → logprob: -6.985377788543701
    8. ' =[' → logprob: -7.860377788543701
    9. '=[]' → logprob: -8.61037826538086
    10. ']' → logprob: -9.73537826538086

Token 59: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.31330546736717224
    2. '[[' → logprob: -1.3133054971694946
    3. ' [' → logprob: -10.438305854797363
    4. '[' → logprob: -11.313305854797363
    5. ' [[[' → logprob: -13.313305854797363
    6. '[['' → logprob: -15.438305854797363
    7. ' [[]' → logprob: -15.563305854797363
    8. '[]' → logprob: -16.438304901123047
    9. '{}' → logprob: -16.688304901123047
    10. '([[' → logprob: -17.188304901123047

Token 60: '-' (ID: 12)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021604323759675026
    2. '-' → logprob: -3.896604299545288
    3. 'None' → logprob: -6.896604537963867
    4. ' ' → logprob: -10.396604537963867
    5. ']' → logprob: -12.146604537963867
    6. ' -' → logprob: -12.396604537963867
    7. 'False' → logprob: -13.146604537963867
    8. '[' → logprob: -13.146604537963867
    9. ' None' → logprob: -13.396604537963867
    10. '-f' → logprob: -14.646604537963867

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001017551330733113
    2. '2' → logprob: -9.250102043151855
    3. ' ' → logprob: -12.375102043151855
    4. '0' → logprob: -14.375102043151855
    5. '```' → logprob: -16.37510108947754
    6. '   ' → logprob: -16.50010108947754
    7. '１' → logprob: -16.62510108947754
    8. ' -' → logprob: -17.18760108947754
    9. '۱' → logprob: -17.43760108947754
    10. '3' → logprob: -17.43760108947754

Token 62: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5574155449867249
    2. ' for' → logprob: -0.9324155449867249
    3. ']*' → logprob: -3.68241548538208
    4. ' ]' → logprob: -5.05741548538208
    5. ']*(' → logprob: -6.30741548538208
    6. 'for' → logprob: -8.557415962219238
    7. '	for' → logprob: -9.307415962219238
    8. ' ' → logprob: -10.932415962219238
    9. ']+' → logprob: -11.432415962219238
    10. ']]' → logprob: -11.432415962219238

Token 63: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.531315314830863e-06
    2. ' n' → logprob: -12.625003814697266
    3. ')n' → logprob: -16.125003814697266
    4. '(n' → logprob: -16.375003814697266
    5. '_n' → logprob: -17.625003814697266
    6. '	n' → logprob: -17.875003814697266
    7. '
' → logprob: -18.750003814697266
    8. ')' → logprob: -19.750003814697266
    9. '+n' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.250003814697266

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044506508857011795
    2. '+' → logprob: -5.504450798034668
    3. ')n' → logprob: -8.129450798034668
    4. '+n' → logprob: -10.379450798034668
    5. ')
' → logprob: -11.004450798034668
    6. ' )' → logprob: -12.129450798034668
    7. ',n' → logprob: -12.254450798034668
    8. 'n' → logprob: -12.254450798034668
    9. ' +' → logprob: -12.879450798034668
    10. ' ' → logprob: -13.629450798034668

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.386947900056839
    2. ' for' → logprob: -1.1369478702545166
    3. ')' → logprob: -9.886947631835938
    4. '	for' → logprob: -10.886947631835938
    5. ' ' → logprob: -13.011947631835938
    6. ']' → logprob: -13.011947631835938
    7. '   ' → logprob: -13.261947631835938
    8. '```' → logprob: -15.636947631835938
    9. ' )' → logprob: -16.386947631835938
    10. '+' → logprob: -16.511947631835938

Token 66: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7545620203018188
    2. '<|end|>' → logprob: -1.1295620203018188
    3. ' range' → logprob: -2.2545619010925293
    4. ' i' → logprob: -3.1295619010925293
    5. ' _' → logprob: -3.2545619010925293
    6. '<|end|>' → logprob: -4.629561901092529
    7. ' ' → logprob: -5.004561901092529
    8. 'range' → logprob: -6.504561901092529
    9. '_range' → logprob: -8.254562377929688
    10. '_i' → logprob: -8.629562377929688

Token 67: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23327884078025818
    2. ' in' → logprob: -1.6082788705825806
    3. 'range' → logprob: -4.983278751373291
    4. 'i' → logprob: -7.108278751373291
    5. '_' → logprob: -9.10827922821045
    6. 'n' → logprob: -10.60827922821045
    7. ' range' → logprob: -10.98327922821045
    8. ' i' → logprob: -12.10827922821045
    9. ' ' → logprob: -12.73327922821045
    10. '(range' → logprob: -13.48327922821045

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416398212313652
    2. ' range' → logprob: -4.264163970947266
    3. '(range' → logprob: -14.764163970947266
    4. '	range' → logprob: -16.889163970947266
    5. 'n' → logprob: -17.639163970947266
    6. ' xrange' → logprob: -19.014163970947266
    7. ' ' → logprob: -19.889163970947266
    8. '.range' → logprob: -20.389163970947266
    9. ')' → logprob: -20.889163970947266
    10. '_range' → logprob: -21.014163970947266

Token 69: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001911432045744732
    2. '(' → logprob: -8.625190734863281
    3. ' (' → logprob: -12.250190734863281
    4. '(range' → logprob: -13.000190734863281
    5. ')' → logprob: -13.625190734863281
    6. ')(' → logprob: -13.750190734863281
    7. 'n' → logprob: -13.750190734863281
    8. '((' → logprob: -14.375190734863281
    9. ')n' → logprob: -14.625190734863281
    10. '(s' → logprob: -16.25019073486328

Token 70: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.2994620242971e-06
    2. ')' → logprob: -12.125008583068848
    3. ']' → logprob: -13.250008583068848
    4. ')])' → logprob: -14.750008583068848
    5. ')],' → logprob: -15.000008583068848
    6. '])]' → logprob: -15.500008583068848
    7. ' )' → logprob: -16.37500762939453
    8. '))' → logprob: -16.75000762939453
    9. '])' → logprob: -17.00000762939453
    10. '')]' → logprob: -17.37500762939453

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033933715894818306
    2. 'd' → logprob: -5.753393173217773
    3. ')' → logprob: -9.003393173217773
    4. 'de' → logprob: -10.503393173217773
    5. '
' → logprob: -10.503393173217773
    6. ' def' → logprob: -11.753393173217773
    7. ']' → logprob: -11.753393173217773
    8. '\' → logprob: -12.128393173217773
    9. '```' → logprob: -12.253393173217773
    10. '#' → logprob: -12.378393173217773

Token 72: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.04989784583449364
    2. ' dfs' → logprob: -3.2998979091644287
    3. ' solve' → logprob: -5.42489767074585
    4. 'count' → logprob: -5.92489767074585
    5. ' calc' → logprob: -6.04989767074585
    6. ' dp' → logprob: -7.54989767074585
    7. ' pal' → logprob: -7.54989767074585
    8. ' f' → logprob: -8.049898147583008
    9. ' ' → logprob: -8.299898147583008
    10. ' shortest' → logprob: -8.674898147583008

Token 73: '(i' (ID: 3649)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.2689261734485626
    2. '_short' → logprob: -1.5189261436462402
    3. '_' → logprob: -4.89392614364624
    4. '(' → logprob: -5.39392614364624
    5. '(i' → logprob: -6.26892614364624
    6. '_dp' → logprob: -7.01892614364624
    7. 'Shortest' → logprob: -7.39392614364624
    8. '_p' → logprob: -7.76892614364624
    9. '_min' → logprob: -8.518926620483398
    10. '_sub' → logprob: -8.643926620483398

Token 74: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011416459456086159
    2. ',j' → logprob: -6.876141548156738
    3. ' ,' → logprob: -9.126141548156738
    4. ',int' → logprob: -17.751142501831055
    5. ',
' → logprob: -18.751142501831055
    6. '‌,' → logprob: -19.501142501831055
    7. ',end' → logprob: -19.626142501831055
    8. 'j' → logprob: -20.001142501831055
    9. ':' → logprob: -20.126142501831055
    10. ' j' → logprob: -20.251142501831055

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002100965939462185
    2. ')' → logprob: -8.50020980834961
    3. ':' → logprob: -12.50020980834961
    4. ' ):' → logprob: -13.50020980834961
    5. '):
' → logprob: -13.62520980834961
    6. ']:' → logprob: -17.12520980834961
    7. '}:' → logprob: -17.37520980834961
    8. '):
' → logprob: -17.50020980834961
    9. ')：' → logprob: -17.62520980834961
    10. ')):' → logprob: -17.62520980834961

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12197035551071167
    2. ' ' → logprob: -2.6219704151153564
    3. '<|end|>' → logprob: -4.121970176696777
    4. ' if' → logprob: -4.371970176696777
    5. '    ' → logprob: -4.996970176696777
    6. ':' → logprob: -6.121970176696777
    7. ')' → logprob: -6.371970176696777
    8. '  ' → logprob: -7.496970176696777
    9. ' )' → logprob: -7.621970176696777
    10. ' :' → logprob: -7.871970176696777

Token 77: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25174662470817566
    2. ' if' → logprob: -1.751746654510498
    3. 'if' (adapté à ' if') → logprob: -3.876746654510498
    4. '<|end|>' → logprob: -4.751746654510498
    5. '   ' → logprob: -5.001746654510498
    6. '    ' → logprob: -5.126746654510498
    7. ' 
' → logprob: -5.751746654510498
    8. '  ' → logprob: -6.376746654510498
    9. ' \' → logprob: -7.001746654510498
    10. ' ' → logprob: -8.50174617767334

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025867905467748642
    2. 'i' → logprob: -3.7758679389953613
    3. ' j' → logprob: -6.025867938995361
    4. 'j' → logprob: -9.275867462158203
    5. ' dp' → logprob: -9.650867462158203
    6. ' ' → logprob: -11.400867462158203
    7. ')' → logprob: -11.400867462158203
    8. '	i' → logprob: -12.025867462158203
    9. 'dp' → logprob: -12.275867462158203
    10. ' )' → logprob: -12.900867462158203

Token 79: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003291782923042774
    2. ' >' → logprob: -5.753291606903076
    3. '==' → logprob: -9.503292083740234
    4. '>=' → logprob: -10.378292083740234
    5. '=' → logprob: -13.128292083740234
    6. '<=' → logprob: -13.753292083740234
    7. '   ' → logprob: -13.753292083740234
    8. '0' → logprob: -14.003292083740234
    9. '">' → logprob: -14.378292083740234
    10. '<|end|>' → logprob: -14.753292083740234

Token 80: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004891689168289304
    2. ' j' → logprob: -7.625489234924316
    3. ' ' → logprob: -14.250489234924316
    4. '   ' → logprob: -15.125489234924316
    5. '	j' → logprob: -16.12548828125
    6. '<|end|>' → logprob: -16.37548828125
    7. '  ' → logprob: -16.50048828125
    8. '```' → logprob: -17.75048828125
    9. '_j' → logprob: -18.37548828125
    10. '[j' → logprob: -18.37548828125

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011237033642828465
    2. ':return' → logprob: -4.636237144470215
    3. ':
' → logprob: -6.636237144470215
    4. '   ' → logprob: -9.761237144470215
    5. '       ' → logprob: -9.886237144470215
    6. ' :' → logprob: -10.386237144470215
    7. ' or' → logprob: -11.761237144470215
    8. '):' → logprob: -11.761237144470215
    9. ' ' → logprob: -12.636237144470215
    10. ')' → logprob: -13.011237144470215

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017927512526512146
    2. '0' → logprob: -7.626792907714844
    3. '   ' → logprob: -7.626792907714844
    4. ' return' → logprob: -7.751792907714844
    5. '<|end|>' → logprob: -8.501792907714844
    6. ' ' → logprob: -9.376792907714844
    7. 'return' → logprob: -10.376792907714844
    8. '1' → logprob: -11.126792907714844
    9. ':return' → logprob: -11.501792907714844
    10. '    ' → logprob: -11.751792907714844

Token 83: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7960399389266968
    2. '0' → logprob: -1.5460399389266968
    3. ' return' → logprob: -1.5460399389266968
    4. '1' → logprob: -2.2960400581359863
    5. '       ' → logprob: -4.796040058135986
    6. '   ' → logprob: -4.921040058135986
    7. ' ' → logprob: -5.046040058135986
    8. '    ' → logprob: -10.796039581298828
    9. '           ' → logprob: -11.296039581298828
    10. '  ' → logprob: -12.296039581298828

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020442712120711803
    2. ' ' → logprob: -6.627044200897217
    3. '0' → logprob: -7.252044200897217
    4. '   ' → logprob: -11.752044677734375
    5. '  ' → logprob: -14.502044677734375
    6. '`' → logprob: -15.814544677734375
    7. '    ' → logprob: -15.877044677734375
    8. 'int' → logprob: -16.002044677734375
    9. '[' → logprob: -16.252044677734375
    10. '```' → logprob: -16.439544677734375

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001332382787950337
    2. '0' → logprob: -6.6263322830200195
    3. ' ' → logprob: -12.00133228302002
    4. 'int' → logprob: -16.876333236694336
    5. '[' → logprob: -17.126333236694336
    6. '{' → logprob: -17.313833236694336
    7. '   ' → logprob: -17.376333236694336
    8. '(' → logprob: -17.813833236694336
    9. '```' → logprob: -18.188833236694336
    10. '  ' → logprob: -18.813833236694336

Token 86: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6380062103271484
    2. '<|end|>' → logprob: -1.2630062103271484
    3. '
' → logprob: -2.0130062103271484
    4. ' 
' → logprob: -3.5130062103271484
    5. '\' → logprob: -4.513006210327148
    6. '\r' → logprob: -6.013006210327148
    7. '<|end|>' → logprob: -6.138006210327148
    8. 'newline' → logprob: -6.263006210327148
    9. '```' → logprob: -6.513006210327148
    10. '    
' → logprob: -6.513006210327148

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2045837640762329
    2. '<|end|>' → logprob: -1.829583764076233
    3. '\n' → logprob: -4.579583644866943
    4. '    
' → logprob: -5.579583644866943
    5. '
' → logprob: -6.204583644866943
    6. ' ' → logprob: -6.329583644866943
    7. '  ' → logprob: -6.329583644866943
    8. '  
' → logprob: -6.704583644866943
    9. '<|end|>' → logprob: -6.704583644866943
    10. '    ' → logprob: -7.704583644866943

Token 88: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' i' (ID: 575)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.47017401456832886
    2. ' i' → logprob: -1.5951740741729736
    3. 'dp' → logprob: -1.9701740741729736
    4. 'i' → logprob: -3.4701740741729736
    5. ' S' → logprob: -7.0951738357543945
    6. 'S' → logprob: -7.3451738357543945
    7. ' ' → logprob: -9.595173835754395
    8. '	dp' → logprob: -10.282673835754395
    9. '(dp' → logprob: -10.720173835754395
    10. '   ' → logprob: -10.845173835754395

Token 90: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22160232067108154
    2. ' ==' → logprob: -1.7216023206710815
    3. '>' → logprob: -3.971602439880371
    4. ' >' → logprob: -6.846602439880371
    5. '=' → logprob: -9.721602439880371
    6. '>=' → logprob: -12.346602439880371
    7. '[' → logprob: -12.596602439880371
    8. ' ' → logprob: -12.721602439880371
    9. '<|end|>' → logprob: -13.221602439880371
    10. '+' → logprob: -13.596602439880371

Token 91: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000496436667162925
    2. ' j' → logprob: -7.6254963874816895
    3. '<|end|>' → logprob: -12.125496864318848
    4. '   ' → logprob: -13.500496864318848
    5. ' ' → logprob: -13.750496864318848
    6. '  ' → logprob: -15.250496864318848
    7. '    ' → logprob: -16.12549591064453
    8. '	j' → logprob: -16.12549591064453
    9. '<|end|>' → logprob: -16.50049591064453
    10. ')' → logprob: -18.00049591064453

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04677054286003113
    2. ':
' → logprob: -3.1717705726623535
    3. '       ' → logprob: -6.2967705726623535
    4. ':return' → logprob: -6.4217705726623535
    5. '   ' → logprob: -8.296770095825195
    6. ' :' → logprob: -11.546770095825195
    7. '):' → logprob: -11.671770095825195
    8. '):
' → logprob: -11.921770095825195
    9. ':
' → logprob: -12.421770095825195
    10. ':

' → logprob: -12.546770095825195

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013963071396574378
    2. ' return' → logprob: -7.376396179199219
    3. 'return' → logprob: -8.251396179199219
    4. '1' → logprob: -8.376396179199219
    5. '   ' → logprob: -8.501396179199219
    6. ' ' → logprob: -10.501396179199219
    7. '0' → logprob: -11.126396179199219
    8. '2' → logprob: -11.626396179199219
    9. '	return' → logprob: -12.626396179199219
    10. '4' → logprob: -13.126396179199219

Token 94: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5783387422561646
    2. ' return' → logprob: -0.8283387422561646
    3. '   ' → logprob: -6.578338623046875
    4. '1' → logprob: -7.078338623046875
    5. '       ' → logprob: -8.828338623046875
    6. ' ' → logprob: -11.453338623046875
    7. '    ' → logprob: -13.453338623046875
    8. '	return' → logprob: -13.453338623046875
    9. '2' → logprob: -14.078338623046875
    10. ':return' → logprob: -14.203338623046875

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00132976402528584
    2. ' ' → logprob: -6.6263298988342285
    3. '   ' → logprob: -13.12632942199707
    4. 'a' → logprob: -14.93882942199707
    5. '(' → logprob: -15.37632942199707
    6. '  ' → logprob: -15.62632942199707
    7. '2' → logprob: -16.06382942199707
    8. '0' → logprob: -16.25132942199707
    9. 'k' → logprob: -16.37632942199707
    10. '```' → logprob: -16.62632942199707

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '2' → logprob: -15.000007629394531
    4. '0' → logprob: -15.750007629394531
    5. 'a' → logprob: -16.37500762939453
    6. 'k' → logprob: -16.50000762939453
    7. '   ' → logprob: -16.81250762939453
    8. '26' → logprob: -17.18750762939453
    9. 'dp' → logprob: -17.37500762939453
    10. '```' → logprob: -17.43750762939453

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24358698725700378
    2. '<|end|>' → logprob: -1.9935870170593262
    3. '
' → logprob: -2.868587017059326
    4. '    
' → logprob: -4.493587017059326
    5. '<|end|>' → logprob: -5.368587017059326
    6. '  
' → logprob: -5.993587017059326
    7. '\n' → logprob: -6.368587017059326
    8. ' ' → logprob: -7.118587017059326
    9. '  ' → logprob: -7.618587017059326
    10. ' 
' → logprob: -7.743587017059326

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.142414852976799
    2. '<|end|>' → logprob: -2.3924148082733154
    3. '
' → logprob: -3.8924148082733154
    4. '    
' → logprob: -4.5174150466918945
    5. ' 
' → logprob: -5.7674150466918945
    6. '<|end|>' → logprob: -6.2674150466918945
    7. '  
' → logprob: -6.3924150466918945
    8. '  ' → logprob: -7.1424150466918945
    9. ' ' → logprob: -7.2674150466918945
    10. '    ' → logprob: -7.6424150466918945

Token 99: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02993549406528473
    2. ' if' → logprob: -3.529935598373413
    3. '   ' → logprob: -8.904935836791992
    4. 'res' → logprob: -11.029935836791992
    5. ' ' → logprob: -11.279935836791992
    6. 'token' → logprob: -12.029935836791992
    7. ' res' → logprob: -12.404935836791992
    8. '	if' → logprob: -13.279935836791992
    9. '    ' → logprob: -13.404935836791992
    10. 't' → logprob: -13.404935836791992

Token 100: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.10024474561214447
    2. 'dp' → logprob: -2.3502447605133057
    3. '(dp' → logprob: -10.350244522094727
    4. '	dp' → logprob: -12.225244522094727
    5. ' ' → logprob: -14.725244522094727
    6. ' ' → logprob: -14.975244522094727
    7. '_dp' → logprob: -16.475244522094727
    8. '   ' → logprob: -16.600244522094727
    9. '.dp' → logprob: -16.725244522094727
    10. '0' → logprob: -17.100244522094727

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.165027217415627e-05
    2. '][' → logprob: -11.375021934509277
    3. '[' → logprob: -12.125021934509277
    4. '[I' → logprob: -13.125021934509277
    5. '```' → logprob: -14.250021934509277
    6. '[j' → logprob: -15.125021934509277
    7. '[token' → logprob: -15.125021934509277
    8. '}[' → logprob: -15.250021934509277
    9. '\[' → logprob: -15.375021934509277
    10. ')[' → logprob: -15.500021934509277

Token 102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016199536621570587
    2. '[i' → logprob: -6.501619815826416
    3. ']' → logprob: -9.251620292663574
    4. '[' → logprob: -12.126620292663574
    5. ' ][' → logprob: -12.251620292663574
    6. ']][' → logprob: -12.501620292663574
    7. '"][' → logprob: -12.626620292663574
    8. '<|end|>' → logprob: -13.626620292663574
    9. ''][' → logprob: -14.251620292663574
    10. '<|end|>' → logprob: -14.501620292663574

Token 103: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.0100624169572257e-05
    2. ']' → logprob: -11.375020027160645
    3. '][' → logprob: -12.125020027160645
    4. '<|end|>' → logprob: -13.125020027160645
    5. '```' → logprob: -15.250020027160645
    6. '[j' → logprob: -15.250020027160645
    7. ')' → logprob: -16.00002098083496
    8. ' j' → logprob: -16.00002098083496
    9. '[' → logprob: -16.50002098083496
    10. ' ' → logprob: -16.62502098083496

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39365431666374207
    2. ']!=' → logprob: -1.1436543464660645
    3. '!=' → logprob: -5.1436543464660645
    4. '!=-' → logprob: -7.3936543464660645
    5. ' !=' → logprob: -8.518653869628906
    6. ')!=' → logprob: -9.768653869628906
    7. ']>=' → logprob: -10.518653869628906
    8. ' ]' → logprob: -12.143653869628906
    9. ')' → logprob: -12.143653869628906
    10. '()!=' → logprob: -13.143653869628906

Token 105: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.39814695715904236
    2. ' !=' → logprob: -1.1481469869613647
    3. '!=-' → logprob: -4.523147106170654
    4. ']!=' → logprob: -8.898146629333496
    5. '>=' → logprob: -9.273146629333496
    6. ')!=' → logprob: -9.523146629333496
    7. '>' → logprob: -11.148146629333496
    8. '!==' → logprob: -11.273146629333496
    9. '()!=' → logprob: -11.773146629333496
    10. '[' → logprob: -11.898146629333496

Token 106: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0380416102707386
    2. ' -' → logprob: -3.288041591644287
    3. ' ' → logprob: -15.788042068481445
    4. '−' → logprob: -18.163042068481445
    5. '   ' → logprob: -18.538042068481445
    6. '-l' → logprob: -19.038042068481445
    7. '  ' → logprob: -20.038042068481445
    8. '```' → logprob: -20.038042068481445
    9. '	' → logprob: -20.163042068481445
    10. '‌' → logprob: -20.413042068481445

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '2' → logprob: -18.375
    4. '```' → logprob: -18.5
    5. '１' → logprob: -20.0625
    6. '0' → logprob: -20.1875
    7. '<|end|>' → logprob: -20.5625
    8. ',' → logprob: -20.5625
    9. '...' → logprob: -20.6875
    10. '   ' → logprob: -20.8125

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0094766141846776
    2. ':return' → logprob: -4.759476661682129
    3. '):' → logprob: -7.509476661682129
    4. ' :' → logprob: -8.634476661682129
    5. ':
' → logprob: -9.009476661682129
    6. ')' → logprob: -12.009476661682129
    7. '):
' → logprob: -13.134476661682129
    8. '   ' → logprob: -13.634476661682129
    9. '<|end|>' → logprob: -13.634476661682129
    10. ')return' → logprob: -14.509476661682129

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028098674956709146
    2. ' return' → logprob: -6.252810001373291
    3. 'return' → logprob: -7.502810001373291
    4. '   ' → logprob: -8.127809524536133
    5. '	return' → logprob: -11.627809524536133
    6. ':return' → logprob: -12.002809524536133
    7. '    ' → logprob: -12.377809524536133
    8. '<|end|>' → logprob: -12.877809524536133
    9. '	   ' → logprob: -13.002809524536133
    10. ' ' → logprob: -13.127809524536133

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28169339895248413
    2. ' return' → logprob: -1.531693458557129
    3. '   ' → logprob: -3.531693458557129
    4. '       ' → logprob: -10.281693458557129
    5. '	return' → logprob: -11.156693458557129
    6. '    ' → logprob: -11.656693458557129
    7. ':return' → logprob: -11.781693458557129
    8. ' ' → logprob: -12.906693458557129
    9. '
' → logprob: -13.531693458557129
    10. ')return' → logprob: -14.531693458557129

Token 111: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0052350712940096855
    2. ' dp' → logprob: -5.255235195159912
    3. '	dp' → logprob: -13.755234718322754
    4. '(dp' → logprob: -15.630234718322754
    5. '_dp' → logprob: -18.13023567199707
    6. '.dp' → logprob: -20.13023567199707
    7. 'd' → logprob: -20.50523567199707
    8. 'int' → logprob: -20.75523567199707
    9. 'dpi' → logprob: -21.13023567199707
    10. 'DP' → logprob: -21.38023567199707

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.637786231702194e-05
    2. '[' → logprob: -9.375086784362793
    3. '```' → logprob: -14.625086784362793
    4. '[j' → logprob: -15.250086784362793
    5. '[
' → logprob: -15.375086784362793
    6. '[I' → logprob: -15.500086784362793
    7. '\[' → logprob: -16.125085830688477
    8. 'i' → logprob: -16.375085830688477
    9. '[int' → logprob: -16.875085830688477
    10. '][' → logprob: -17.375085830688477

Token 113: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005208624061197042
    2. '[i' → logprob: -7.625520706176758
    3. ']' → logprob: -10.750520706176758
    4. '[j' → logprob: -12.000520706176758
    5. ')[' → logprob: -13.625520706176758
    6. ']][' → logprob: -13.750520706176758
    7. ' ][' → logprob: -14.000520706176758
    8. '[' → logprob: -14.625520706176758
    9. ')][' → logprob: -14.625520706176758
    10. '   ' → logprob: -14.875520706176758

Token 114: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -14.750000953674316
    3. ']' → logprob: -15.375000953674316
    4. '[j' → logprob: -15.625000953674316
    5. 'i' → logprob: -16.125001907348633
    6. ')' → logprob: -16.125001907348633
    7. '```' → logprob: -16.625001907348633
    8. '1' → logprob: -17.250001907348633
    9. ' ' → logprob: -17.250001907348633
    10. '][' → logprob: -17.625001907348633

Token 115: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1037629246711731
    2. ')' → logprob: -2.3537628650665283
    3. '])' → logprob: -5.853763103485107
    4. ']
' → logprob: -8.22876262664795
    5. ')return' → logprob: -8.97876262664795
    6. ')
' → logprob: -9.10376262664795
    7. '   ' → logprob: -9.47876262664795
    8. 'return' → logprob: -9.97876262664795
    9. '])
' → logprob: -10.85376262664795
    10. '）' → logprob: -11.47876262664795

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010027975076809525
    2. '    
' → logprob: -7.001002788543701
    3. '<|end|>' → logprob: -10.00100326538086
    4. ' if' → logprob: -11.37600326538086
    5. '    ' → logprob: -11.50100326538086
    6. '```' → logprob: -11.62600326538086
    7. '  
' → logprob: -13.12600326538086
    8. 'def' → logprob: -13.12600326538086
    9. '   
' → logprob: -13.25100326538086
    10. '<|end|>' → logprob: -13.37600326538086

Token 117: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39247825741767883
    2. 'if' (adapté à ' if') → logprob: -1.1424782276153564
    3. 'count' → logprob: -6.5174784660339355
    4. 'cnt' → logprob: -6.6424784660339355
    5. 'total' → logprob: -6.7674784660339355
    6. ' res' → logprob: -7.3924784660339355
    7. ' if' → logprob: -7.8924784660339355
    8. 'ans' → logprob: -8.142477989196777
    9. 'result' → logprob: -9.017477989196777
    10. '   ' → logprob: -9.142477989196777

Token 118: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.020548662170767784
    2. 'S' → logprob: -3.8955485820770264
    3. ' ' → logprob: -12.645548820495605
    4. '(S' → logprob: -13.145548820495605
    5. 's' → logprob: -14.770548820495605
    6. '	S' → logprob: -14.895548820495605
    7. '   ' → logprob: -15.145548820495605
    8. '(' → logprob: -15.520548820495605
    9. ' ' → logprob: -16.27054786682129
    10. ' (' → logprob: -16.52054786682129

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006002502050250769
    2. '[' → logprob: -5.131002426147461
    3. '[I' → logprob: -9.631002426147461
    4. '[j' → logprob: -13.131002426147461
    5. '[
' → logprob: -13.131002426147461
    6. '[index' → logprob: -14.381002426147461
    7. '[start' → logprob: -14.756002426147461
    8. '[int' → logprob: -14.756002426147461
    9. '```' → logprob: -15.006002426147461
    10. '[S' → logprob: -15.381002426147461

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04543847590684891
    2. ']==' → logprob: -3.170438528060913
    3. ' ]' → logprob: -6.795438289642334
    4. '==' → logprob: -6.795438289642334
    5. ' ==' → logprob: -8.795438766479492
    6. ']!=' → logprob: -10.920438766479492
    7. '[' → logprob: -11.295438766479492
    8. '[i' → logprob: -12.420438766479492
    9. '']' → logprob: -12.670438766479492
    10. '']==' → logprob: -13.420438766479492

Token 121: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10041165351867676
    2. ' ==' → logprob: -2.3504116535186768
    3. '!=' → logprob: -8.850411415100098
    4. ' !=' → logprob: -10.600411415100098
    5. '=' → logprob: -11.600411415100098
    6. ']==' → logprob: -11.600411415100098
    7. ' ' → logprob: -11.725411415100098
    8. '==
' → logprob: -12.850411415100098
    9. '```' → logprob: -12.975411415100098
    10. '===' → logprob: -13.725411415100098

Token 122: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0005532711511477828
    2. ' S' → logprob: -7.500553131103516
    3. ' ' → logprob: -15.500553131103516
    4. '<|end|>' → logprob: -18.500553131103516
    5. '[' → logprob: -18.750553131103516
    6. '   ' → logprob: -19.500553131103516
    7. ' ' → logprob: -19.625553131103516
    8. '  ' → logprob: -19.625553131103516
    9. 's' → logprob: -19.625553131103516
    10. '_S' → logprob: -19.750553131103516

Token 123: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005195335950702429
    2. '[i' → logprob: -5.380195140838623
    3. '[' → logprob: -7.755195140838623
    4. '[S' → logprob: -8.880195617675781
    5. '```' → logprob: -13.380195617675781
    6. '[
' → logprob: -13.505195617675781
    7. 'S' → logprob: -13.630195617675781
    8. 'j' → logprob: -13.880195617675781
    9. ' [' → logprob: -14.755195617675781
    10. '   ' → logprob: -14.880195617675781

Token 124: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.443535178899765
    2. '):' → logprob: -1.0685352087020874
    3. ':' → logprob: -4.693535327911377
    4. '):
' → logprob: -5.818535327911377
    5. ']:
' → logprob: -6.818535327911377
    6. ']):' → logprob: -7.068535327911377
    7. ']' → logprob: -7.693535327911377
    8. '"]:' → logprob: -10.443534851074219
    9. '）：' → logprob: -10.568534851074219
    10. ')' → logprob: -10.693534851074219

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036373690236359835
    2. ' dp' → logprob: -6.128637313842773
    3. 'dp' → logprob: -6.753637313842773
    4. '   ' → logprob: -9.378637313842773
    5. ':' → logprob: -10.128637313842773
    6. '	dp' → logprob: -10.378637313842773
    7. '    ' → logprob: -10.628637313842773
    8. 'count' → logprob: -10.878637313842773
    9. '      ' → logprob: -11.503637313842773
    10. '(dp' → logprob: -11.503637313842773

Token 126: ' res' (ID: 694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007803229382261634
    2. 'res' (adapté à ' res') → logprob: -7.87578010559082
    3. ' dp' → logprob: -8.25078010559082
    4. 'count' → logprob: -10.25078010559082
    5. 'ans' → logprob: -10.25078010559082
    6. '       ' → logprob: -10.62578010559082
    7. '   ' → logprob: -11.25078010559082
    8. 'cnt' → logprob: -12.12578010559082
    9. 'v' → logprob: -12.62578010559082
    10. 'ret' → logprob: -12.75078010559082

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '=count' → logprob: -14.318147659301758
    4. ')' → logprob: -16.568147659301758
    5. '＝' → logprob: -17.193147659301758
    6. '=cut' → logprob: -18.193147659301758
    7. ' ' → logprob: -19.318147659301758
    8. '=
' → logprob: -19.318147659301758
    9. '```' → logprob: -19.693147659301758
    10. ')=' → logprob: -19.693147659301758

Token 128: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.010652195662260056
    2. 'min' → logprob: -4.7606520652771
    3. ' count' → logprob: -6.5106520652771
    4. ' min' → logprob: -7.5106520652771
    5. 'max' → logprob: -15.260652542114258
    6. '   ' → logprob: -15.635652542114258
    7. '0' → logprob: -16.010652542114258
    8. '(count' → logprob: -16.885652542114258
    9. '	count' → logprob: -17.010652542114258
    10. '
' → logprob: -17.260652542114258

Token 129: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. '(
' → logprob: -18.125
    4. ' (' → logprob: -18.375
    5. '(ii' → logprob: -19.0
    6. '(I' → logprob: -19.0
    7. '((' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. '[i' → logprob: -21.125
    10. '   ' → logprob: -21.875

Token 130: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025134736206382513
    2. ' +' → logprob: -6.002513408660889
    3. '+i' → logprob: -10.377513885498047
    4. '+j' → logprob: -12.752513885498047
    5. '   ' → logprob: -13.252513885498047
    6. '1' → logprob: -14.502513885498047
    7. '()+' → logprob: -14.752513885498047
    8. '＋' → logprob: -15.002513885498047
    9. '+
' → logprob: -15.002513885498047
    10. ' ' → logprob: -15.627513885498047

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.750007629394531
    4. '```' → logprob: -16.25000762939453
    5. '  ' → logprob: -19.87500762939453
    6. '2' → logprob: -19.87500762939453
    7. '``' → logprob: -20.62500762939453
    8. ')' → logprob: -20.75000762939453
    9. ',' → logprob: -21.00000762939453
    10. '+' → logprob: -21.12500762939453

Token 132: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.023250484839081764
    2. ',' → logprob: -3.7732505798339844
    3. ' ,' → logprob: -12.273250579833984
    4. '   ' → logprob: -15.898250579833984
    5. ',n' → logprob: -17.273250579833984
    6. 'j' → logprob: -17.523250579833984
    7. ',b' → logprob: -17.523250579833984
    8. ',
' → logprob: -17.648250579833984
    9. ' ' → logprob: -18.273250579833984
    10. ',end' → logprob: -18.523250579833984

Token 133: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. ' -' → logprob: -14.250000953674316
    3. '−' → logprob: -20.625
    4. '-i' → logprob: -20.75
    5. '-)' → logprob: -20.875
    6. '-
' → logprob: -21.5
    7. '–' → logprob: -22.0
    8. ')' → logprob: -22.375
    9. '‑' → logprob: -22.375
    10. '()-' → logprob: -22.625

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ')' → logprob: -13.000004768371582
    3. '+' → logprob: -13.750004768371582
    4. ' ' → logprob: -14.625004768371582
    5. '```' → logprob: -14.625004768371582
    6. 'count' → logprob: -16.4375057220459
    7. '+)' → logprob: -16.7500057220459
    8. ')+' → logprob: -16.8125057220459
    9. '2' → logprob: -16.8125057220459
    10. 'i' → logprob: -17.4375057220459

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011780819622799754
    2. ')
' → logprob: -7.00117826461792
    3. '<|end|>' → logprob: -8.501177787780762
    4. 'else' → logprob: -10.376177787780762
    5. ')return' → logprob: -12.126177787780762
    6. '<|end|>' → logprob: -12.126177787780762
    7. '   ' → logprob: -12.376177787780762
    8. '
' → logprob: -12.876177787780762
    9. '```' → logprob: -13.126177787780762
    10. '*' → logprob: -13.251177787780762

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010361640714108944
    2. '       ' → logprob: -4.635361671447754
    3. '
' → logprob: -8.635361671447754
    4. 'else' → logprob: -8.760361671447754
    5. '+' → logprob: -9.510361671447754
    6. '```' → logprob: -9.510361671447754
    7. ' else' → logprob: -10.385361671447754
    8. '<|end|>' → logprob: -10.510361671447754
    9. ' if' → logprob: -11.135361671447754
    10. ')' → logprob: -11.635361671447754

Token 137: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.36472874879837036
    2. ' else' → logprob: -1.6147286891937256
    3. '   ' → logprob: -2.2397286891937256
    4. '	else' → logprob: -8.739728927612305
    5. '  ' → logprob: -11.614728927612305
    6. ' ' → logprob: -12.364728927612305
    7. 'elif' → logprob: -13.114728927612305
    8. ')' → logprob: -13.114728927612305
    9. '_else' → logprob: -13.614728927612305
    10. '<|end|>' → logprob: -13.614728927612305

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004022003151476383
    2. ':
' → logprob: -5.629022121429443
    3. '       ' → logprob: -8.004021644592285
    4. ' :' → logprob: -10.379021644592285
    5. '   ' → logprob: -10.629021644592285
    6. '):' → logprob: -11.504021644592285
    7. '):
' → logprob: -13.129021644592285
    8. ',' → logprob: -13.254021644592285
    9. '```' → logprob: -13.254021644592285
    10. ':
' → logprob: -13.504021644592285

Token 139: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5384809374809265
    2. '       ' → logprob: -1.1634809970855713
    3. ' res' → logprob: -2.2884809970855713
    4. '   ' → logprob: -6.413480758666992
    5. '```' → logprob: -7.663480758666992
    6. '	res' → logprob: -9.538480758666992
    7. '
' → logprob: -9.663480758666992
    8. 'count' → logprob: -9.788480758666992
    9. '           ' → logprob: -10.038480758666992
    10. ' ' → logprob: -10.663480758666992

Token 140: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.003916564863175154
    2. ' res' → logprob: -5.6289167404174805
    3. '       ' → logprob: -8.12891674041748
    4. '           ' → logprob: -11.75391674041748
    5. '   ' → logprob: -12.50391674041748
    6. '
' → logprob: -13.12891674041748
    7. '	res' → logprob: -13.25391674041748
    8. '0' → logprob: -13.50391674041748
    9. '(res' → logprob: -14.12891674041748
    10. 'count' → logprob: -14.50391674041748

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. '=count' → logprob: -15.200940132141113
    4. ')' → logprob: -15.825940132141113
    5. '＝' → logprob: -16.450939178466797
    6. ' ' → logprob: -16.450939178466797
    7. '=max' → logprob: -17.200939178466797
    8. ',' → logprob: -17.325939178466797
    9. ')=' → logprob: -18.075939178466797
    10. '=int' → logprob: -18.075939178466797

Token 142: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.18617317080497742
    2. 'count' → logprob: -1.8111732006072998
    3. ' min' → logprob: -5.186172962188721
    4. ' count' → logprob: -7.436172962188721
    5. 'max' → logprob: -8.686173439025879
    6. '(min' → logprob: -10.561173439025879
    7. '0' → logprob: -11.561173439025879
    8. '
' → logprob: -12.311173439025879
    9. '   ' → logprob: -12.686173439025879
    10. '(count' → logprob: -12.686173439025879

Token 143: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1275382786989212
    2. 'count' → logprob: -2.1275382041931152
    3. '(min' → logprob: -8.502538681030273
    4. 'max' → logprob: -8.627538681030273
    5. ' min' → logprob: -8.627538681030273
    6. '0' → logprob: -10.502538681030273
    7. ' count' → logprob: -11.752538681030273
    8. '(count' → logprob: -11.877538681030273
    9. '(' → logprob: -13.127538681030273
    10. 'sum' → logprob: -13.877538681030273

Token 144: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44837456941604614
    2. '+' → logprob: -1.1983745098114014
    3. '
' → logprob: -2.9483745098114014
    4. '   ' → logprob: -5.6983747482299805
    5. 'count' → logprob: -6.9483747482299805
    6. 'res' → logprob: -7.3233747482299805
    7. '+
' → logprob: -7.5733747482299805
    8. '       ' → logprob: -8.07337474822998
    9. ' +
' → logprob: -8.07337474822998
    10. ' res' → logprob: -8.69837474822998

Token 145: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5414166450500488
    2. ' +' → logprob: -0.9164166450500488
    3. '   ' → logprob: -4.791416645050049
    4. 'else' → logprob: -5.791416645050049
    5. 'res' → logprob: -6.041416645050049
    6. 'if' → logprob: -6.916416645050049
    7. ' res' → logprob: -7.416416645050049
    8. '+
' → logprob: -7.416416645050049
    9. '       ' → logprob: -7.666416645050049
    10. ' if' → logprob: -8.16641616821289

Token 146: ' left' (ID: 3561)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.34945476055145264
    2. 'if' → logprob: -1.2244547605514526
    3. ' res' → logprob: -7.974454879760742
    4. ' if' → logprob: -8.349454879760742
    5. '+' → logprob: -8.474454879760742
    6. '
' → logprob: -8.974454879760742
    7. '   ' → logprob: -10.474454879760742
    8. 'count' → logprob: -11.224454879760742
    9. '(res' → logprob: -11.599454879760742
    10. ' +' → logprob: -12.224454879760742

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20286019146442413
    2. ' =' → logprob: -1.7028602361679077
    3. '_res' → logprob: -7.577860355377197
    4. '_count' → logprob: -8.327859878540039
    5. 'res' → logprob: -8.577859878540039
    6. 'count' → logprob: -8.952859878540039
    7. '+' → logprob: -8.952859878540039
    8. '+=' → logprob: -9.702859878540039
    9. '_' → logprob: -10.202859878540039
    10. '=count' → logprob: -10.577859878540039

Token 148: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0019311357755213976
    2. ' count' → logprob: -6.251931190490723
    3. '0' → logprob: -13.626931190490723
    4. '(count' → logprob: -13.876931190490723
    5. '   ' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.626930236816406
    7. '=count' → logprob: -16.626930236816406
    8. '	count' → logprob: -16.751930236816406
    9. '[count' → logprob: -17.251930236816406
    10. '<count' → logprob: -18.001930236816406

Token 149: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. ' (' → logprob: -17.125
    4. '(
' → logprob: -18.125
    5. '(I' → logprob: -19.0
    6. 'i' → logprob: -19.5
    7. '```' → logprob: -20.125
    8. '(ii' → logprob: -21.5
    9. '((' → logprob: -22.0
    10. '   ' → logprob: -22.25

Token 150: '+' (ID: 10)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.8204331994056702
    2. '+' → logprob: -0.9454331994056702
    3. ',j' → logprob: -1.8204331398010254
    4. ',' → logprob: -5.195433139801025
    5. '(i' → logprob: -6.570433139801025
    6. ' +' → logprob: -7.070433139801025
    7. '+i' → logprob: -7.570433139801025
    8. 'i' → logprob: -8.445433616638184
    9. '   ' → logprob: -8.445433616638184
    10. ' ,' → logprob: -8.570433616638184

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '```' → logprob: -15.687504768371582
    4. '
' → logprob: -15.875004768371582
    5. '0' → logprob: -15.875004768371582
    6. '+' → logprob: -16.000003814697266
    7. '2' → logprob: -16.000003814697266
    8. '   ' → logprob: -16.000003814697266
    9. 'j' → logprob: -16.375003814697266
    10. 'i' → logprob: -17.625003814697266

Token 152: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.02326015569269657
    2. ',' → logprob: -3.7732601165771484
    3. ' ,' → logprob: -11.148260116577148
    4. 'j' → logprob: -16.27326011657715
    5. ',k' → logprob: -16.52326011657715
    6. ',q' → logprob: -17.14826011657715
    7. ')' → logprob: -17.64826011657715
    8. ',y' → logprob: -17.64826011657715
    9. ',i' → logprob: -17.77326011657715
    10. ',n' → logprob: -17.89826011657715

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011057018302381039
    2. ')
' → logprob: -4.511056900024414
    3. ')
' → logprob: -12.511056900024414
    4. ' )' → logprob: -12.636056900024414
    5. ')

' → logprob: -14.511056900024414
    6. '```' → logprob: -15.011056900024414
    7. '       ' → logprob: -15.261056900024414
    8. '   ' → logprob: -15.511056900024414
    9. ' ' → logprob: -15.761056900024414
    10. ')view' → logprob: -16.136056900024414

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7676021456718445
    2. '+' → logprob: -1.2676022052764893
    3. ' +' → logprob: -1.3926022052764893
    4. '<|end|>' → logprob: -5.64260196685791
    5. '        ' → logprob: -7.39260196685791
    6. '
' → logprob: -7.51760196685791
    7. ',' → logprob: -8.39260196685791
    8. 'res' → logprob: -8.89260196685791
    9. '        
' → logprob: -9.26760196685791
    10. '+
' → logprob: -9.26760196685791

Token 155: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.2520237863063812
    2. ' right' → logprob: -1.5020238161087036
    3. '       ' → logprob: -9.752023696899414
    4. '	right' → logprob: -10.377023696899414
    5. ' if' → logprob: -13.627023696899414
    6. ',right' → logprob: -14.127023696899414
    7. 'if' → logprob: -14.252023696899414
    8. '.right' → logprob: -14.377023696899414
    9. '[right' → logprob: -14.627023696899414
    10. '_right' → logprob: -15.002023696899414

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576074481010437
    2. '=' → logprob: -0.826074481010437
    3. '=count' → logprob: -8.951074600219727
    4. ' ' → logprob: -12.951074600219727
    5. '   ' → logprob: -13.076074600219727
    6. '  ' → logprob: -15.701074600219727
    7. '＝' → logprob: -15.826074600219727
    8. ')' → logprob: -15.951074600219727
    9. ',' → logprob: -16.326074600219727
    10. '=
' → logprob: -16.576074600219727

Token 157: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001968958182260394
    2. ' count' → logprob: -6.251968860626221
    3. '(count' → logprob: -10.126969337463379
    4. '[count' → logprob: -16.001968383789062
    5. '	count' → logprob: -16.251968383789062
    6. ' ' → logprob: -16.376968383789062
    7. '.count' → logprob: -16.751968383789062
    8. '=count' → logprob: -16.876968383789062
    9. '<count' → logprob: -17.501968383789062
    10. '$count' → logprob: -18.001968383789062

Token 158: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.375
    3. ' (' → logprob: -16.75
    4. '(I' → logprob: -17.5
    5. '(ii' → logprob: -17.625
    6. '(
' → logprob: -18.0
    7. '```' → logprob: -18.375
    8. '[i' → logprob: -18.5
    9. '<|end|>' → logprob: -19.0
    10. 'i' → logprob: -19.25

Token 159: ',j' (ID: 22712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1271248608827591
    2. ',j' → logprob: -2.127124786376953
    3. 'j' → logprob: -8.877124786376953
    4. ',' → logprob: -10.752124786376953
    5. ' +' → logprob: -11.252124786376953
    6. '```' → logprob: -12.252124786376953
    7. '+j' → logprob: -12.377124786376953
    8. '
' → logprob: -12.502124786376953
    9. '+
' → logprob: -12.752124786376953
    10. '[j' → logprob: -13.502124786376953

Token 160: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.77627644513268e-06
    2. 'j' → logprob: -11.750008583068848
    3. '+j' → logprob: -15.250008583068848
    4. ' +' → logprob: -15.375008583068848
    5. '[j' → logprob: -15.375008583068848
    6. '```' → logprob: -16.500009536743164
    7. '   ' → logprob: -17.375009536743164
    8. ',j' → logprob: -18.375009536743164
    9. '+
' → logprob: -19.500009536743164
    10. '-' → logprob: -20.125009536743164

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '-' → logprob: -17.5
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. ')' → logprob: -18.375
    7. 'j' → logprob: -19.375
    8. '
' → logprob: -19.75
    9. '2' → logprob: -20.25
    10. '１' → logprob: -20.875

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014861512929201126
    2. '       ' → logprob: -5.014861583709717
    3. '
' → logprob: -5.639861583709717
    4. '<|end|>' → logprob: -6.014861583709717
    5. ')
' → logprob: -7.014861583709717
    6. '<|end|>' → logprob: -7.639861583709717
    7. '+' → logprob: -8.264861106872559
    8. ' +' → logprob: -8.889861106872559
    9. '   ' → logprob: -9.764861106872559
    10. '-' → logprob: -10.014861106872559

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10794651508331299
    2. '+' → logprob: -2.7329463958740234
    3. ' +' → logprob: -3.8579463958740234
    4. '<|end|>' → logprob: -5.107946395874023
    5. ')' → logprob: -5.982946395874023
    6. 'res' → logprob: -6.482946395874023
    7. ' if' → logprob: -6.607946395874023
    8. '```' → logprob: -6.732946395874023
    9. '   ' → logprob: -7.107946395874023
    10. ' res' → logprob: -7.107946395874023

Token 164: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4840843677520752
    2. ' res' → logprob: -0.9840843677520752
    3. '       ' → logprob: -5.109084129333496
    4. ' if' → logprob: -6.234084129333496
    5. 'if' (adapté à ' if') → logprob: -6.359084129333496
    6. '
' → logprob: -9.109084129333496
    7. '           ' → logprob: -10.859084129333496
    8. '   ' → logprob: -11.109084129333496
    9. '	res' → logprob: -11.484084129333496
    10. '```' → logprob: -11.609084129333496

Token 165: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.4407416582107544
    2. 'left' → logprob: -1.0657416582107544
    3. ' S' → logprob: -5.440741539001465
    4. ' res' → logprob: -5.690741539001465
    5. 'S' → logprob: -5.940741539001465
    6. ' i' → logprob: -7.315741539001465
    7. 'res' → logprob: -8.190741539001465
    8. '(left' → logprob: -8.565741539001465
    9. 'i' → logprob: -8.815741539001465
    10. ' (' → logprob: -9.190741539001465

Token 166: ' >' (ID: 1424)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3014339506626129
    2. ' +' → logprob: -2.05143404006958
    3. '>' → logprob: -2.17643404006958
    4. ':' → logprob: -4.17643404006958
    5. ' >' → logprob: -6.42643404006958
    6. '!=' → logprob: -7.05143404006958
    7. '<' → logprob: -9.426433563232422
    8. ' !=' → logprob: -9.926433563232422
    9. ' or' → logprob: -10.301433563232422
    10. '==' → logprob: -10.301433563232422

Token 167: ' LIMIT' (ID: 21457)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40384912490844727
    2. 'LIMIT' → logprob: -1.4038491249084473
    3. 'right' → logprob: -3.2788491249084473
    4. ' LIMIT' → logprob: -3.4038491249084473
    5. ' ' → logprob: -4.653849124908447
    6. ' right' → logprob: -5.653849124908447
    7. 'left' → logprob: -6.653849124908447
    8. 'limit' → logprob: -7.903849124908447
    9. ' left' → logprob: -8.153848648071289
    10. 'RIGHT' → logprob: -8.528848648071289

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6094870567321777
    2. '-' → logprob: -1.4844870567321777
    3. ':
' → logprob: -1.6094870567321777
    4. ' -' → logprob: -3.6094870567321777
    5. '   ' → logprob: -7.234487056732178
    6. '       ' → logprob: -7.359487056732178
    7. '           ' → logprob: -7.734487056732178
    8. ':return' → logprob: -7.984487056732178
    9. '-ex' → logprob: -9.609487533569336
    10. ' or' → logprob: -9.859487533569336

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14335615932941437
    2. 'left' → logprob: -2.2683560848236084
    3. ' left' → logprob: -4.0183563232421875
    4. 'res' → logprob: -5.0183563232421875
    5. ' res' → logprob: -5.3933563232421875
    6. '	left' → logprob: -8.393356323242188
    7. '```' → logprob: -8.643356323242188
    8. '       ' → logprob: -8.893356323242188
    9. '               ' → logprob: -9.143356323242188
    10. '   ' → logprob: -9.268356323242188

Token 170: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.004874608013778925
    2. ' left' → logprob: -6.1298747062683105
    3. 'res' → logprob: -6.3798747062683105
    4. '           ' → logprob: -7.0048747062683105
    5. '	left' → logprob: -11.004874229431152
    6. ' res' → logprob: -11.129874229431152
    7. 'right' → logprob: -11.254874229431152
    8. '       ' → logprob: -11.379874229431152
    9. '   ' → logprob: -11.879874229431152
    10. 'limit' → logprob: -12.004874229431152

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40157419443130493
    2. ' =' → logprob: -1.7765741348266602
    3. '>' → logprob: -2.90157413482666
    4. ':' → logprob: -3.27657413482666
    5. '+' → logprob: -3.52657413482666
    6. '-' → logprob: -5.15157413482666
    7. ' +' → logprob: -5.27657413482666
    8. '+=' → logprob: -5.27657413482666
    9. ' left' → logprob: -5.40157413482666
    10. ' >' → logprob: -5.52657413482666

Token 172: ' LIMIT' (ID: 21457)
  Prédit: 'LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIMIT' → logprob: -0.00020389800192788243
    2. ' LIMIT' → logprob: -8.500204086303711
    3. 'L' → logprob: -15.625204086303711
    4. '_LIMIT' → logprob: -16.37520408630371
    5. '10' → logprob: -16.62520408630371
    6. 'limit' → logprob: -17.37520408630371
    7. 'Limit' → logprob: -18.00020408630371
    8. ' LIM' → logprob: -18.62520408630371
    9. '   ' → logprob: -18.75020408630371
    10. '    ' → logprob: -18.87520408630371

Token 173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013828959316015244
    2. '
' → logprob: -4.763828754425049
    3. '        
' → logprob: -6.013828754425049
    4. '+' → logprob: -6.388828754425049
    5. '<|end|>' → logprob: -7.763828754425049
    6. ' +' → logprob: -8.513829231262207
    7. '```' → logprob: -9.388829231262207
    8. ',' → logprob: -9.388829231262207
    9. '
' → logprob: -9.513829231262207
    10. '  
' → logprob: -9.763829231262207

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048715711454860866
    2. '+' → logprob: -8.500487327575684
    3. '```' → logprob: -9.375487327575684
    4. '<|end|>' → logprob: -9.500487327575684
    5. '
' → logprob: -10.500487327575684
    6. '        
' → logprob: -10.875487327575684
    7. 'right' → logprob: -10.875487327575684
    8. ',' → logprob: -11.125487327575684
    9. ' +' → logprob: -11.625487327575684
    10. ' right' → logprob: -11.875487327575684

Token 175: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008829176425933838
    2. ' if' → logprob: -5.508829116821289
    3. ' right' → logprob: -6.633829116821289
    4. 'right' → logprob: -6.758829116821289
    5. 'if' (adapté à ' if') → logprob: -7.008829116821289
    6. ' res' → logprob: -7.383829116821289
    7. 'res' → logprob: -7.758829116821289
    8. '        
' → logprob: -9.008829116821289
    9. '+' → logprob: -10.133829116821289
    10. '```' → logprob: -10.258829116821289

Token 176: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.07889363914728165
    2. 'right' → logprob: -2.5788936614990234
    3. '(right' → logprob: -13.453893661499023
    4. '	right' → logprob: -13.453893661499023
    5. '[right' → logprob: -15.203893661499023
    6. ' ' → logprob: -15.328893661499023
    7. 'Right' → logprob: -15.828893661499023
    8. '.right' → logprob: -16.578893661499023
    9. 'left' → logprob: -16.953893661499023
    10. ' left' → logprob: -16.953893661499023

Token 177: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005389211233705282
    2. '>' → logprob: -5.255389213562012
    3. '<|end|>' → logprob: -8.880389213562012
    4. '<|end|>' → logprob: -11.755389213562012
    5. ' ' → logprob: -12.880389213562012
    6. ' ' → logprob: -13.005389213562012
    7. ' >=' → logprob: -13.880389213562012
    8. ')' → logprob: -14.630389213562012
    9. ' >
' → logprob: -14.755389213562012
    10. '```' → logprob: -15.005389213562012

Token 178: ' LIMIT' (ID: 21457)
  Prédit: ' LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LIMIT' → logprob: -0.03804895281791687
    2. 'LIMIT' → logprob: -3.2880489826202393
    3. '_LIMIT' → logprob: -12.53804874420166
    4. ' LIMITED' → logprob: -13.41304874420166
    5. 'Limit' → logprob: -13.53804874420166
    6. ' LIM' → logprob: -14.78804874420166
    7. ' Limit' → logprob: -15.66304874420166
    8. ' limit' → logprob: -15.91304874420166
    9. 'limit' → logprob: -16.163049697875977
    10. 'L' → logprob: -16.663049697875977

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34515297412872314
    2. '           ' → logprob: -1.4701529741287231
    3. ':
' → logprob: -2.8451528549194336
    4. '       ' → logprob: -6.845152854919434
    5. '=' → logprob: -6.970152854919434
    6. '<|end|>' → logprob: -7.220152854919434
    7. ',' → logprob: -7.845152854919434
    8. '               ' → logprob: -8.845152854919434
    9. '```' → logprob: -8.970152854919434
    10. ':return' → logprob: -9.470152854919434

Token 180: '           ' (ID: 352)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0666523352265358
    2. 'right' → logprob: -3.066652297973633
    3. '           ' → logprob: -4.066652297973633
    4. '```' → logprob: -8.191652297973633
    5. 'Right' → logprob: -9.316652297973633
    6. '	right' → logprob: -9.441652297973633
    7. '               ' → logprob: -9.566652297973633
    8. '[right' → logprob: -9.691652297973633
    9. '(right' → logprob: -10.191652297973633
    10. '.right' → logprob: -10.316652297973633

Token 181: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.698135256767273
    2. 'right' (adapté à ' right') → logprob: -0.698135256767273
    3. 'LIMIT' → logprob: -5.8231353759765625
    4. ' LIMIT' → logprob: -6.3231353759765625
    5. 'RIGHT' → logprob: -8.573135375976562
    6. '[right' → logprob: -12.198135375976562
    7. 'limit' → logprob: -12.323135375976562
    8. '	right' → logprob: -12.323135375976562
    9. 'Right' → logprob: -12.573135375976562
    10. ' limit' → logprob: -12.823135375976562

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -17.264163970947266
    4. '```' → logprob: -17.264163970947266
    5. '=

' → logprob: -17.889163970947266
    6. ')' → logprob: -18.139163970947266
    7. '=}' → logprob: -18.389163970947266
    8. '   ' → logprob: -18.389163970947266
    9. '[' → logprob: -18.764163970947266
    10. '==' → logprob: -18.764163970947266

Token 183: ' LIMIT' (ID: 21457)
  Prédit: 'LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIMIT' → logprob: -0.20141704380512238
    2. ' LIMIT' → logprob: -1.701417088508606
    3. '_LIMIT' → logprob: -13.076416969299316
    4. 'L' → logprob: -14.451416969299316
    5. ' LIMITED' → logprob: -14.451416969299316
    6. 'limit' → logprob: -15.576416969299316
    7. ' LIM' → logprob: -15.951416969299316
    8. 'Limit' → logprob: -16.076417922973633
    9. ' limit' → logprob: -16.201417922973633
    10. '```' → logprob: -17.701417922973633

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001495814765803516
    2. '
' → logprob: -7.876495838165283
    3. '<|end|>' → logprob: -7.876495838165283
    4. 'res' → logprob: -8.251495361328125
    5. ' res' → logprob: -9.001495361328125
    6. '        
' → logprob: -9.126495361328125
    7. ',' → logprob: -9.251495361328125
    8. '<|end|>' → logprob: -10.251495361328125
    9. '        ' → logprob: -10.626495361328125
    10. '```' → logprob: -10.751495361328125

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016260750591754913
    2. '
' → logprob: -4.766260623931885
    3. ' res' → logprob: -5.766260623931885
    4. 'res' → logprob: -6.141260623931885
    5. '   ' → logprob: -6.766260623931885
    6. '        
' → logprob: -7.766260623931885
    7. '
' → logprob: -8.891261100769043
    8. '```' → logprob: -9.016261100769043
    9. '  
' → logprob: -9.016261100769043
    10. '+' → logprob: -9.391261100769043

Token 186: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.04384715482592583
    2. ' res' → logprob: -3.16884708404541
    3. '       ' → logprob: -7.16884708404541
    4. 'if' → logprob: -10.54384708404541
    5. '   ' → logprob: -11.04384708404541
    6. '
' → logprob: -11.04384708404541
    7. ' if' → logprob: -11.79384708404541
    8. '	res' → logprob: -12.16884708404541
    9. '           ' → logprob: -13.04384708404541
    10. '```' → logprob: -14.16884708404541

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771415829658508
    2. '=' → logprob: -0.8271415829658508
    3. ' +=' → logprob: -7.077141761779785
    4. '+=' → logprob: -7.952141761779785
    5. ' ' → logprob: -13.452141761779785
    6. '   ' → logprob: -13.827141761779785
    7. '=max' → logprob: -13.827141761779785
    8. '=min' → logprob: -14.077141761779785
    9. '=res' → logprob: -15.702141761779785
    10. ' ' → logprob: -16.07714080810547

Token 188: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.35248085856437683
    2. 'min' → logprob: -1.2274808883666992
    3. ' min' → logprob: -6.102480888366699
    4. ' left' → logprob: -6.477480888366699
    5. 'max' → logprob: -9.1024808883667
    6. '(min' → logprob: -9.6024808883667
    7. '(left' → logprob: -9.8524808883667
    8. '(' → logprob: -12.6024808883667
    9. '	left' → logprob: -12.6024808883667
    10. '	min' → logprob: -13.1024808883667

Token 189: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141372084617615
    2. ' +' → logprob: -1.7014137506484985
    3. '+
' → logprob: -15.201414108276367
    4. '＋' → logprob: -16.201414108276367
    5. ' +
' → logprob: -17.576414108276367
    6. '+r' → logprob: -18.076414108276367
    7. ' ' → logprob: -18.576414108276367
    8. '
' → logprob: -19.201414108276367
    9. '+\' → logprob: -19.826414108276367
    10. '+=' → logprob: -20.076414108276367

Token 190: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006715370807796717
    2. ' right' → logprob: -5.006715297698975
    3. '	right' → logprob: -17.756715774536133
    4. '(right' → logprob: -17.881715774536133
    5. '[right' → logprob: -18.506715774536133
    6. '.right' → logprob: -21.506715774536133
    7. ' ' → logprob: -22.131715774536133
    8. '_right' → logprob: -22.256715774536133
    9. ',right' → logprob: -22.256715774536133
    10. 'r' → logprob: -22.631715774536133

Token 191: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.79319167137146
    2. 'if' → logprob: -1.29319167137146
    3. '
' → logprob: -1.54319167137146
    4. '   ' → logprob: -3.41819167137146
    5. '       ' → logprob: -3.79319167137146
    6. '<|end|>' → logprob: -6.668191909790039
    7. 'return' → logprob: -7.168191909790039
    8. '	if' → logprob: -7.668191909790039
    9. '```' → logprob: -7.793191909790039
    10. '    
' → logprob: -7.793191909790039

Token 192: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7709356546401978
    2. 'if' → logprob: -0.7709356546401978
    3. ' if' → logprob: -3.270935535430908
    4. '
' → logprob: -3.895935535430908
    5. '       ' → logprob: -4.145935535430908
    6. '```' → logprob: -8.145936012268066
    7. 'res' → logprob: -9.020936012268066
    8. 'return' → logprob: -9.145936012268066
    9. '
' → logprob: -9.520936012268066
    10. '    
' → logprob: -9.895936012268066

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1153210774064064
    2. ' if' → logprob: -2.365321159362793
    3. '       ' → logprob: -4.615321159362793
    4. 'return' → logprob: -5.615321159362793
    5. '   ' → logprob: -7.365321159362793
    6. 'dp' → logprob: -7.615321159362793
    7. ' return' → logprob: -9.240321159362793
    8. 'res' → logprob: -9.740321159362793
    9. 'count' → logprob: -10.490321159362793
    10. ' ' → logprob: -10.490321159362793

Token 194: ' res' (ID: 694)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.30002593994140625
    2. ' S' → logprob: -2.0500259399414062
    3. 'res' → logprob: -2.8000259399414062
    4. ' res' → logprob: -3.4250259399414062
    5. 'count' → logprob: -3.9250259399414062
    6. 'left' → logprob: -5.050025939941406
    7. ' count' → logprob: -5.300025939941406
    8. ' (' → logprob: -6.300025939941406
    9. ' left' → logprob: -6.675025939941406
    10. '(S' → logprob: -7.050025939941406

Token 195: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38882896304130554
    2. ' >' → logprob: -1.138828992843628
    3. '<|end|>' → logprob: -7.263828754425049
    4. '>=' → logprob: -7.388828754425049
    5. ' >=' → logprob: -7.888828754425049
    6. '[' → logprob: -9.138829231262207
    7. '<|end|>' → logprob: -9.138829231262207
    8. '=' → logprob: -12.138829231262207
    9. ' ' → logprob: -12.888829231262207
    10. '()>' → logprob: -13.263829231262207

Token 196: ' LIMIT' (ID: 21457)
  Prédit: 'LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIMIT' → logprob: -0.2014147937297821
    2. ' LIMIT' → logprob: -1.7014148235321045
    3. 'L' → logprob: -14.201415061950684
    4. '_LIMIT' → logprob: -14.701415061950684
    5. ' LIM' → logprob: -15.076415061950684
    6. ' LIMITED' → logprob: -16.201414108276367
    7. 'Limit' → logprob: -16.951414108276367
    8. ' ' → logprob: -17.451414108276367
    9. ' limit' → logprob: -18.201414108276367
    10. 'limit' → logprob: -18.701414108276367

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06580596417188644
    2. ':
' → logprob: -2.8158059120178223
    3. '           ' → logprob: -5.940805912017822
    4. '       ' → logprob: -7.190805912017822
    5. '=' → logprob: -9.19080638885498
    6. 'res' → logprob: -9.94080638885498
    7. '):
' → logprob: -9.94080638885498
    8. '   ' → logprob: -10.06580638885498
    9. ' res' → logprob: -10.31580638885498
    10. '<|end|>' → logprob: -10.81580638885498

Token 198: '           ' (ID: 352)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2898584306240082
    2. '           ' → logprob: -1.6648584604263306
    3. 'res' → logprob: -2.789858341217041
    4. '       ' → logprob: -7.539858341217041
    5. '               ' → logprob: -9.1648588180542
    6. '   ' → logprob: -9.1648588180542
    7. '	res' → logprob: -9.2898588180542
    8. '```' → logprob: -10.0398588180542
    9. 'LIMIT' → logprob: -10.9148588180542
    10. ',res' → logprob: -11.0398588180542

Token 199: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.16023285686969757
    2. ' res' → logprob: -1.9102329015731812
    3. '           ' → logprob: -11.785232543945312
    4. '	res' → logprob: -14.160232543945312
    5. '   ' → logprob: -14.910232543945312
    6. '=res' → logprob: -17.535232543945312
    7. '       ' → logprob: -17.660232543945312
    8. '$res' → logprob: -17.910232543945312
    9. '_res' → logprob: -18.285232543945312
    10. '(res' → logprob: -18.410232543945312

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -17.66022491455078
    4. ' ' → logprob: -20.66022491455078
    5. '.=' → logprob: -20.91022491455078
    6. '```' → logprob: -21.53522491455078
    7. '=
' → logprob: -21.66022491455078
    8. '=}' → logprob: -21.78522491455078
    9. '=res' → logprob: -21.78522491455078
    10. '=cut' → logprob: -21.91022491455078

Token 201: ' LIMIT' (ID: 21457)
  Prédit: 'LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIMIT' → logprob: -0.0009117019944824278
    2. ' LIMIT' → logprob: -7.000911712646484
    3. '_LIMIT' → logprob: -16.500911712646484
    4. 'Limit' → logprob: -16.875911712646484
    5. 'L' → logprob: -17.500911712646484
    6. '   ' → logprob: -18.375911712646484
    7. ' LIM' → logprob: -18.500911712646484
    8. '    ' → logprob: -18.875911712646484
    9. '10' → logprob: -19.250911712646484
    10. 'limit' → logprob: -19.375911712646484

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031762905418872833
    2. 'dp' → logprob: -6.003176212310791
    3. ' dp' → logprob: -7.503176212310791
    4. '
' → logprob: -9.25317668914795
    5. '	dp' → logprob: -11.25317668914795
    6. '    
' → logprob: -11.62817668914795
    7. ')' → logprob: -11.62817668914795
    8. ',' → logprob: -12.00317668914795
    9. '       ' → logprob: -12.25317668914795
    10. '(dp' → logprob: -13.37817668914795

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019817621796391904
    2. 'dp' → logprob: -9.000198364257812
    3. ' dp' → logprob: -9.750198364257812
    4. '
' → logprob: -11.500198364257812
    5. ')' → logprob: -13.000198364257812
    6. '	dp' → logprob: -13.500198364257812
    7. '```' → logprob: -14.250198364257812
    8. '       ' → logprob: -14.500198364257812
    9. '    
' → logprob: -15.000198364257812
    10. ',' → logprob: -15.125198364257812

Token 204: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.905213475227356
    2. 'dp' (adapté à ' dp') → logprob: -0.905213475227356
    3. ' dp' → logprob: -1.655213475227356
    4. '	dp' → logprob: -10.405213356018066
    5. '
' → logprob: -13.405213356018066
    6. '(dp' → logprob: -13.530213356018066
    7. '```' → logprob: -13.655213356018066
    8. ' ' → logprob: -13.905213356018066
    9. '    
' → logprob: -14.280213356018066
    10. '_dp' → logprob: -14.405213356018066

Token 205: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[I' → logprob: -16.0
    3. '[' → logprob: -17.125
    4. '][' → logprob: -17.75
    5. ')[' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '[j' → logprob: -18.875
    8. ' [' → logprob: -19.625
    9. '[int' → logprob: -19.75
    10. '[u' → logprob: -20.25

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013953536108601838
    2. ']' → logprob: -9.125139236450195
    3. '[i' → logprob: -11.125139236450195
    4. '"][' → logprob: -11.500139236450195
    5. ''][' → logprob: -13.250139236450195
    6. '[' → logprob: -13.750139236450195
    7. '[j' → logprob: -13.750139236450195
    8. ']][' → logprob: -14.625139236450195
    9. ')][' → logprob: -15.000139236450195
    10. ' ][' → logprob: -15.125139236450195

Token 207: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. ']' → logprob: -15.875
    3. ' j' → logprob: -16.5
    4. ')' → logprob: -17.125
    5. ' ' → logprob: -18.375
    6. '[j' → logprob: -18.625
    7. '   ' → logprob: -18.875
    8. 's' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '1' → logprob: -19.125

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010535178706049919
    2. '=' → logprob: -4.76053524017334
    3. ']=' → logprob: -6.26053524017334
    4. ')' → logprob: -12.13553524017334
    5. ' ]' → logprob: -13.38553524017334
    6. ' =' → logprob: -13.63553524017334
    7. ')=' → logprob: -16.385534286499023
    8. '}' → logprob: -16.635534286499023
    9. ']==' → logprob: -16.760534286499023
    10. ']
' → logprob: -16.885534286499023

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -18.001928329467773
    4. '＝' → logprob: -18.626928329467773
    5. '.=' → logprob: -18.751928329467773
    6. '=

' → logprob: -19.626928329467773
    7. '=}' → logprob: -19.751928329467773
    8. '=int' → logprob: -20.876928329467773
    9. ')=' → logprob: -21.751928329467773
    10. '=`' → logprob: -21.876928329467773

Token 210: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00012403888104017824
    2. ' res' → logprob: -9.000123977661133
    3. 'min' → logprob: -14.375123977661133
    4. ' min' → logprob: -19.625123977661133
    5. '	res' → logprob: -19.750123977661133
    6. '   ' → logprob: -20.625123977661133
    7. '(res' → logprob: -20.875123977661133
    8. 'int' → logprob: -21.000123977661133
    9. 're' → logprob: -21.125123977661133
    10. '$res' → logprob: -21.500123977661133

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005672106635756791
    2. 'return' → logprob: -7.500567436218262
    3. ' return' → logprob: -11.375567436218262
    4. '    
' → logprob: -14.000567436218262
    5. '  ' → logprob: -14.375567436218262
    6. ':return' → logprob: -14.875567436218262
    7. '	return' → logprob: -15.375567436218262
    8. '       ' → logprob: -15.625567436218262
    9. '```' → logprob: -16.125566482543945
    10. '<|end|>' → logprob: -16.250566482543945

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001468067930545658
    2. 'return' → logprob: -8.875146865844727
    3. ' return' → logprob: -12.500146865844727
    4. '       ' → logprob: -14.500146865844727
    5. '```' → logprob: -14.625146865844727
    6. '  ' → logprob: -14.750146865844727
    7. ')' → logprob: -14.875146865844727
    8. '	return' → logprob: -14.875146865844727
    9. ':return' → logprob: -15.125146865844727
    10. '    
' → logprob: -15.125146865844727

Token 213: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029833676293492317
    2. 'return' (adapté à ' return') → logprob: -3.5298337936401367
    3. ' return' → logprob: -9.404833793640137
    4. '  ' → logprob: -15.029833793640137
    5. '    
' → logprob: -15.404833793640137
    6. '	return' → logprob: -15.529833793640137
    7. ':return' → logprob: -16.40483283996582
    8. '       ' → logprob: -16.52983283996582
    9. '```' → logprob: -16.77983283996582
    10. ' ' → logprob: -16.77983283996582

Token 214: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.012550151906907558
    2. ' res' → logprob: -4.512550354003906
    3. 'dp' → logprob: -6.512550354003906
    4. ' dp' → logprob: -11.012550354003906
    5. '	res' → logprob: -18.137550354003906
    6. '(res' → logprob: -18.512550354003906
    7. '$res' → logprob: -20.262550354003906
    8. '(dp' → logprob: -20.762550354003906
    9. 're' → logprob: -20.887550354003906
    10. '_res' → logprob: -21.012550354003906

Token 215: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008372489362955093
    2. 'result' → logprob: -5.2583723068237305
    3. 'res' → logprob: -6.2583723068237305
    4. '#' → logprob: -7.2583723068237305
    5. 'answer' → logprob: -9.13337230682373
    6. ')' → logprob: -9.75837230682373
    7. 'print' → logprob: -10.13337230682373
    8. '<|end|>' → logprob: -10.38337230682373
    9. '```' → logprob: -10.50837230682373
    10. 'next' → logprob: -10.63337230682373

Token 217: ' build' (ID: 3024)
  Prédit: ' construct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construct' → logprob: -1.014000415802002
    2. 'construct' → logprob: -1.389000415802002
    3. ' reconstruct' → logprob: -1.764000415802002
    4. ' build' → logprob: -2.764000415802002
    5. ' kth' → logprob: -3.389000415802002
    6. ' find' → logprob: -3.639000415802002
    7. 'build' → logprob: -4.014000415802002
    8. ' dfs' → logprob: -4.389000415802002
    9. 're' → logprob: -4.389000415802002
    10. ' get' → logprob: -4.889000415802002

Token 218: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000217006730963476
    2. '(' → logprob: -8.50021743774414
    3. ' (' → logprob: -11.50021743774414
    4. '(idx' → logprob: -14.25021743774414
    5. '(index' → logprob: -14.37521743774414
    6. '(prefix' → logprob: -15.12521743774414
    7. '(a' → logprob: -15.37521743774414
    8. '(token' → logprob: -15.50021743774414
    9. '(I' → logprob: -15.62521743774414
    10. '(s' → logprob: -15.75021743774414

Token 219: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.008680874481797218
    2. ',' → logprob: -4.758680820465088
    3. ' ,' → logprob: -9.633681297302246
    4. ',end' → logprob: -14.883681297302246
    5. ',int' → logprob: -16.25868034362793
    6. 'j' → logprob: -16.25868034362793
    7. ',n' → logprob: -16.63368034362793
    8. ',
' → logprob: -17.25868034362793
    9. ',start' → logprob: -17.25868034362793
    10. '   ' → logprob: -17.50868034362793

Token 220: ',k' (ID: 35155)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025871701654978096
    2. ',' → logprob: -8.500258445739746
    3. ')' → logprob: -10.750258445739746
    4. '):
' → logprob: -11.000258445739746
    5. ':' → logprob: -11.875258445739746
    6. ' ):' → logprob: -11.875258445739746
    7. '   ' → logprob: -13.750258445739746
    8. ',i' → logprob: -14.750258445739746
    9. ',j' → logprob: -15.000258445739746
    10. '}:' → logprob: -15.375258445739746

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003213997988495976
    2. '):
' → logprob: -8.500321388244629
    3. ')' → logprob: -9.125321388244629
    4. ' ):' → logprob: -11.875321388244629
    5. '):
' → logprob: -14.000321388244629
    6. ',' → logprob: -14.500321388244629
    7. ':' → logprob: -15.000321388244629
    8. '):

' → logprob: -15.875321388244629
    9. '   ' → logprob: -16.125322341918945
    10. ' ' → logprob: -16.625322341918945

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028495676815509796
    2. ' if' → logprob: -5.877849578857422
    3. '<|end|>' → logprob: -10.752849578857422
    4. '    
' → logprob: -12.252849578857422
    5. '	if' → logprob: -12.377849578857422
    6. 'if' → logprob: -12.377849578857422
    7. '    ' → logprob: -13.127849578857422
    8. '\n' → logprob: -13.377849578857422
    9. '```' → logprob: -13.627849578857422
    10. '\t' → logprob: -13.877849578857422

Token 223: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02723853476345539
    2. ' if' → logprob: -3.777238607406616
    3. '   ' → logprob: -5.527238368988037
    4. 'while' → logprob: -12.777238845825195
    5. '	if' → logprob: -12.902238845825195
    6. '```' → logprob: -13.527238845825195
    7. '    
' → logprob: -14.902238845825195
    8. ' ' → logprob: -15.152238845825195
    9. '
' → logprob: -15.277238845825195
    10. 'i' → logprob: -15.902238845825195

Token 224: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759493708610535
    2. ' i' → logprob: -0.8259493708610535
    3. '   ' → logprob: -12.075949668884277
    4. ' ' → logprob: -12.825949668884277
    5. ' ' → logprob: -14.075949668884277
    6. '	i' → logprob: -15.200949668884277
    7. '  ' → logprob: -15.700949668884277
    8. '(i' → logprob: -15.950949668884277
    9. '>' → logprob: -16.57594871520996
    10. '_i' → logprob: -16.82594871520996

Token 225: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20144695043563843
    2. ' >' → logprob: -1.7014470100402832
    3. '==' → logprob: -10.826446533203125
    4. ' ==' → logprob: -11.826446533203125
    5. '   ' → logprob: -13.451446533203125
    6. '>b' → logprob: -13.701446533203125
    7. '>
' → logprob: -14.076446533203125
    8. ' ' → logprob: -14.201446533203125
    9. ')' → logprob: -14.576446533203125
    10. ' >
' → logprob: -14.826446533203125

Token 226: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004078639671206474
    2. ' j' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. ' ' → logprob: -18.129077911376953
    5. '	j' → logprob: -18.129077911376953
    6. '<|end|>' → logprob: -18.879077911376953
    7. '  ' → logprob: -19.004077911376953
    8. '_j' → logprob: -19.129077911376953
    9. '```' → logprob: -19.254077911376953
    10. '
' → logprob: -19.629077911376953

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20190812647342682
    2. ':
' → logprob: -1.8269081115722656
    3. '   ' → logprob: -4.076908111572266
    4. '       ' → logprob: -5.701908111572266
    5. ':return' → logprob: -6.701908111572266
    6. '<|end|>' → logprob: -8.826908111572266
    7. '):
' → logprob: -9.326908111572266
    8. '):' → logprob: -10.826908111572266
    9. ' or' → logprob: -10.826908111572266
    10. ',' → logprob: -10.951908111572266

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002730455482378602
    2. '   ' → logprob: -6.752730369567871
    3. '\n' → logprob: -6.877730369567871
    4. ' return' → logprob: -8.377730369567871
    5. '    ' → logprob: -10.002730369567871
    6. '<|end|>' → logprob: -10.002730369567871
    7. '        
' → logprob: -10.377730369567871
    8. ' ' → logprob: -10.502730369567871
    9. 'return' → logprob: -10.627730369567871
    10. ' 
' → logprob: -10.752730369567871

Token 229: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00807134248316288
    2. ' return' → logprob: -5.008071422576904
    3. '   ' → logprob: -7.008071422576904
    4. 'print' → logprob: -8.008070945739746
    5. '       ' → logprob: -9.883070945739746
    6. '	return' → logprob: -10.633070945739746
    7. '\n' → logprob: -11.633070945739746
    8. ':return' → logprob: -11.758070945739746
    9. '""' → logprob: -12.133070945739746
    10. '```' → logprob: -12.508070945739746

Token 230: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.07971251010894775
    2. '''' → logprob: -2.579712390899658
    3. ' ""' → logprob: -7.579712390899658
    4. '"' → logprob: -8.204712867736816
    5. ' ''' → logprob: -10.204712867736816
    6. ''' → logprob: -14.204712867736816
    7. '''
' → logprob: -15.454712867736816
    8. '"",' → logprob: -15.704712867736816
    9. '"":' → logprob: -16.4547119140625
    10. '"""' → logprob: -16.4547119140625

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036144492332823575
    2. ' if' → logprob: -9.125361442565918
    3. '<|end|>' → logprob: -9.250361442565918
    4. '    
' → logprob: -10.000361442565918
    5. 'if' → logprob: -10.250361442565918
    6. '
' → logprob: -10.625361442565918
    7. '\n' → logprob: -11.375361442565918
    8. ' ' → logprob: -11.625361442565918
    9. '  ' → logprob: -11.750361442565918
    10. '    ' → logprob: -12.125361442565918

Token 232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005365899996832013
    2. '   ' → logprob: -8.000536918640137
    3. ' if' → logprob: -8.625536918640137
    4. 'elif' → logprob: -10.750536918640137
    5. '```' → logprob: -15.750536918640137
    6. '	if' → logprob: -16.37553596496582
    7. 'If' → logprob: -16.87553596496582
    8. 'i' → logprob: -17.00053596496582
    9. '
' → logprob: -17.75053596496582
    10. '    
' → logprob: -18.50053596496582

Token 233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.523128092288971
    2. ' i' → logprob: -0.898128092288971
    3. ' ' → logprob: -13.273128509521484
    4. 'S' → logprob: -13.898128509521484
    5. '   ' → logprob: -14.273128509521484
    6. '	i' → logprob: -14.898128509521484
    7. '  ' → logprob: -15.273128509521484
    8. ' S' → logprob: -15.523128509521484
    9. 'j' → logprob: -15.523128509521484
    10. ' ' → logprob: -16.398128509521484

Token 234: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31603842973709106
    2. '==' → logprob: -1.3160383701324463
    3. ' >' → logprob: -6.066038608551025
    4. '>' → logprob: -7.816038608551025
    5. ' ' → logprob: -10.691038131713867
    6. '   ' → logprob: -11.441038131713867
    7. '=' → logprob: -11.816038131713867
    8. ')' → logprob: -13.191038131713867
    9. '==
' → logprob: -13.691038131713867
    10. ' ==
' → logprob: -14.441038131713867

Token 235: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008614808320999146
    2. ' j' → logprob: -4.758615016937256
    3. '	j' → logprob: -15.758614540100098
    4. '   ' → logprob: -16.258615493774414
    5. ' ' → logprob: -16.883615493774414
    6. '    ' → logprob: -17.508615493774414
    7. '<|end|>' → logprob: -18.258615493774414
    8. '  ' → logprob: -18.758615493774414
    9. '=j' → logprob: -19.508615493774414
    10. '$j' → logprob: -19.633615493774414

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004851242061704397
    2. ':
' → logprob: -5.379851341247559
    3. '       ' → logprob: -9.379851341247559
    4. ':return' → logprob: -9.379851341247559
    5. '   ' → logprob: -9.879851341247559
    6. ' :' → logprob: -12.004851341247559
    7. '<|end|>' → logprob: -13.629851341247559
    8. '):' → logprob: -14.629851341247559
    9. '=' → logprob: -14.879851341247559
    10. '    ' → logprob: -15.004851341247559

Token 237: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4266286790370941
    2. ' return' → logprob: -1.1766287088394165
    3. 'return' → logprob: -3.801628589630127
    4. ' if' → logprob: -4.801628589630127
    5. '       ' → logprob: -5.051628589630127
    6. ' S' → logprob: -7.176628589630127
    7. ' ' → logprob: -7.801628589630127
    8. 'if' → logprob: -7.926628589630127
    9. '    ' → logprob: -8.676629066467285
    10. ''' → logprob: -9.051629066467285

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5303342938423157
    2. 'if' → logprob: -0.9053342938423157
    3. ' if' → logprob: -5.78033447265625
    4. ' return' → logprob: -6.03033447265625
    5. '   ' → logprob: -6.65533447265625
    6. 'S' → logprob: -7.90533447265625
    7. ' ' → logprob: -11.78033447265625
    8. ' S' → logprob: -12.03033447265625
    9. 'c' → logprob: -12.65533447265625
    10. '       ' → logprob: -12.65533447265625

Token 239: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0019316127290949225
    2. ' S' → logprob: -6.251931667327881
    3. ' ' → logprob: -13.751931190490723
    4. ''S' → logprob: -13.876931190490723
    5. '   ' → logprob: -15.251931190490723
    6. '"S' → logprob: -15.501931190490723
    7. ''' → logprob: -15.626931190490723
    8. '(S' → logprob: -16.00193214416504
    9. ' ' → logprob: -16.75193214416504
    10. '_S' → logprob: -17.00193214416504

Token 240: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1888679839321412e-05
    2. 'i' → logprob: -10.875021934509277
    3. '[' → logprob: -13.000021934509277
    4. '[j' → logprob: -15.125021934509277
    5. ' i' → logprob: -16.25002098083496
    6. '(i' → logprob: -16.50002098083496
    7. '```' → logprob: -16.50002098083496
    8. '[
' → logprob: -18.00002098083496
    9. ',i' → logprob: -19.37502098083496
    10. '_i' → logprob: -19.62502098083496

Token 241: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020818933262489736
    2. '[i' → logprob: -9.375207901000977
    3. ']
' → logprob: -9.625207901000977
    4. ' ]' → logprob: -11.250207901000977
    5. '<|end|>' → logprob: -11.500207901000977
    6. ')' → logprob: -11.750207901000977
    7. '])' → logprob: -12.000207901000977
    8. '   ' → logprob: -12.375207901000977
    9. '}' → logprob: -12.375207901000977
    10. '']' → logprob: -12.375207901000977

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3367285132408142
    2. '<|end|>' → logprob: -1.961728572845459
    3. '
' → logprob: -2.711728572845459
    4. '\n' → logprob: -3.461728572845459
    5. '    
' → logprob: -3.961728572845459
    6. ' if' → logprob: -4.836728572845459
    7. '  
' → logprob: -5.336728572845459
    8. ' 
' → logprob: -5.711728572845459
    9. ' ' → logprob: -6.086728572845459
    10. '[' → logprob: -6.211728572845459

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0026711381506174803
    2. ' if' → logprob: -6.002671241760254
    3. '   ' → logprob: -8.752671241760254
    4. 'token' → logprob: -11.127671241760254
    5. '```' → logprob: -11.627671241760254
    6. 'i' → logprob: -11.752671241760254
    7. 'c' → logprob: -14.002671241760254
    8. '	if' → logprob: -14.127671241760254
    9. 'res' → logprob: -14.252671241760254
    10. ' ' → logprob: -14.377671241760254

Token 244: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0019373197574168444
    2. ' S' → logprob: -6.251937389373779
    3. 'dp' → logprob: -12.001936912536621
    4. '   ' → logprob: -13.876936912536621
    5. ' ' → logprob: -14.376936912536621
    6. 'i' → logprob: -15.001936912536621
    7. 'count' → logprob: -15.001936912536621
    8. 's' → logprob: -16.126937866210938
    9. '(S' → logprob: -16.376937866210938
    10. ' dp' → logprob: -16.626937866210938

Token 245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016146517009474337
    2. '[' → logprob: -8.750161170959473
    3. '[I' → logprob: -13.625161170959473
    4. '[
' → logprob: -14.500161170959473
    5. '```' → logprob: -14.875161170959473
    6. ' [' → logprob: -15.000161170959473
    7. '[S' → logprob: -15.000161170959473
    8. 'i' → logprob: -15.500161170959473
    9. '\[' → logprob: -18.12516212463379
    10. '<|end|>' → logprob: -18.50016212463379

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014674744568765163
    2. ']==' → logprob: -4.514674663543701
    3. '[i' → logprob: -5.764674663543701
    4. '[' → logprob: -8.26467514038086
    5. '==' → logprob: -8.63967514038086
    6. ' ]' → logprob: -10.88967514038086
    7. '']' → logprob: -11.63967514038086
    8. '[j' → logprob: -11.63967514038086
    9. ' ==' → logprob: -12.38967514038086
    10. '][' → logprob: -13.01467514038086

Token 247: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6328513622283936
    2. ' ==' → logprob: -0.7578513622283936
    3. ']==' → logprob: -9.007851600646973
    4. '[' → logprob: -10.007851600646973
    5. ')==' → logprob: -10.882851600646973
    6. '=' → logprob: -10.882851600646973
    7. ']' → logprob: -11.132851600646973
    8. '[i' → logprob: -11.632851600646973
    9. ')' → logprob: -11.882851600646973
    10. ' !=' → logprob: -12.507851600646973

Token 248: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004307884373702109
    2. ' S' → logprob: -7.750430583953857
    3. '(S' → logprob: -17.000431060791016
    4. ' ' → logprob: -17.000431060791016
    5. '   ' → logprob: -17.500431060791016
    6. '[' → logprob: -17.875431060791016
    7. ''S' → logprob: -19.000431060791016
    8. 's' → logprob: -19.000431060791016
    9. '[S' → logprob: -19.000431060791016
    10. '<|end|>' → logprob: -19.250431060791016

Token 249: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.4391956685576588e-05
    2. '[i' → logprob: -11.625024795532227
    3. '[' → logprob: -11.750024795532227
    4. 'j' → logprob: -11.875024795532227
    5. '```' → logprob: -15.000024795532227
    6. '[
' → logprob: -16.375024795532227
    7. '\[' → logprob: -17.500024795532227
    8. '   ' → logprob: -17.750024795532227
    9. '[S' → logprob: -17.750024795532227
    10. ']' → logprob: -17.875024795532227

Token 250: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.13135872781276703
    2. ']:
' → logprob: -2.3813586235046387
    3. ':' → logprob: -3.8813586235046387
    4. ']' → logprob: -5.506358623504639
    5. '']:' → logprob: -6.381358623504639
    6. '']:
' → logprob: -6.631358623504639
    7. '':' → logprob: -6.756358623504639
    8. ':
' → logprob: -7.131358623504639
    9. '"]:' → logprob: -7.756358623504639
    10. '']' → logprob: -9.006359100341797

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02130153402686119
    2. '   ' → logprob: -4.146301746368408
    3. ':' → logprob: -5.646301746368408
    4. ' return' → logprob: -7.021301746368408
    5. 'return' → logprob: -8.27130126953125
    6. ' ' → logprob: -8.52130126953125
    7. '	   ' → logprob: -9.89630126953125
    8. '    ' → logprob: -10.02130126953125
    9. '
' → logprob: -10.14630126953125
    10. '        
' → logprob: -10.52130126953125

Token 252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6607589721679688
    2. ' return' → logprob: -1.1607589721679688
    3. '   ' → logprob: -1.7857589721679688
    4. '       ' → logprob: -6.035758972167969
    5. '	return' → logprob: -9.285758972167969
    6. '```' → logprob: -9.910758972167969
    7. 'result' → logprob: -10.160758972167969
    8. 'res' → logprob: -10.785758972167969
    9. '
' → logprob: -11.535758972167969
    10. ':return' → logprob: -12.785758972167969

Token 253: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.0126840758603066e-05
    2. ' S' → logprob: -10.125040054321289
    3. ' ' → logprob: -17.50004005432129
    4. '   ' → logprob: -17.75004005432129
    5. '	S' → logprob: -18.37504005432129
    6. '  ' → logprob: -18.87504005432129
    7. ''S' → logprob: -19.37504005432129
    8. '_S' → logprob: -19.75004005432129
    9. ' ' → logprob: -20.50004005432129
    10. '    ' → logprob: -20.50004005432129

Token 254: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010986098641296849
    2. '[' → logprob: -9.125109672546387
    3. '[
' → logprob: -15.500109672546387
    4. '```' → logprob: -15.625109672546387
    5. '[I' → logprob: -16.000110626220703
    6. 'i' → logprob: -16.125110626220703
    7. '[j' → logprob: -16.875110626220703
    8. 'build' → logprob: -16.875110626220703
    9. '[start' → logprob: -16.875110626220703
    10. '[k' → logprob: -18.125110626220703

Token 255: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005301942583173513
    2. '+' → logprob: -5.8803019523620605
    3. ']+' → logprob: -6.0053019523620605
    4. '}' → logprob: -10.880301475524902
    5. ' +' → logprob: -12.880301475524902
    6. '']' → logprob: -13.005301475524902
    7. '>' → logprob: -13.505301475524902
    8. '+]' → logprob: -13.880301475524902
    9. ')' → logprob: -14.005301475524902
    10. '"]' → logprob: -14.005301475524902

Token 256: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020699352025986
    2. ' +' → logprob: -2.3502070903778076
    3. '+
' → logprob: -15.100207328796387
    4. 'build' → logprob: -16.85020637512207
    5. '```' → logprob: -16.97520637512207
    6. '＋' → logprob: -18.22520637512207
    7. '+b' → logprob: -19.22520637512207
    8. ' +
' → logprob: -19.47520637512207
    9. '+(' → logprob: -19.60020637512207
    10. ' ' → logprob: -20.22520637512207

Token 257: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.00020354038861114532
    2. ' build' → logprob: -8.500203132629395
    3. '(build' → logprob: -19.75020408630371
    4. '	build' → logprob: -20.62520408630371
    5. '.build' → logprob: -23.37520408630371
    6. '
' → logprob: -23.50020408630371
    7. ' ' → logprob: -24.00020408630371
    8. '   ' → logprob: -24.62520408630371
    9. '_build' → logprob: -24.87520408630371
    10. 'b' → logprob: -25.12520408630371

Token 258: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. ' (' → logprob: -17.375
    4. '(ii' → logprob: -17.875
    5. '(
' → logprob: -19.0
    6. '```' → logprob: -19.0
    7. '(I' → logprob: -19.875
    8. '(iv' → logprob: -21.125
    9. '((' → logprob: -21.625
    10. '(in' → logprob: -21.75

Token 259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008142740116454661
    2. '1' → logprob: -8.000814437866211
    3. ' +' → logprob: -8.000814437866211
    4. '+i' → logprob: -8.875814437866211
    5. ' ' → logprob: -14.375814437866211
    6. '＋' → logprob: -14.375814437866211
    7. 'i' → logprob: -14.625814437866211
    8. '(i' → logprob: -14.750814437866211
    9. '+
' → logprob: -14.875814437866211
    10. '[i' → logprob: -15.000814437866211

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '+' → logprob: -17.375
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -19.5
    6. '2' → logprob: -21.25
    7. '
' → logprob: -21.25
    8. '0' → logprob: -21.75
    9. '  ' → logprob: -22.375
    10. ',' → logprob: -23.5

Token 261: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.001037214300595224
    2. ',' → logprob: -6.876037120819092
    3. ' ,' → logprob: -12.50103759765625
    4. 'j' → logprob: -14.37603759765625
    5. '   ' → logprob: -16.62603759765625
    6. '```' → logprob: -17.37603759765625
    7. '+' → logprob: -17.87603759765625
    8. '(j' → logprob: -18.37603759765625
    9. '[j' → logprob: -18.50103759765625
    10. ',
' → logprob: -18.50103759765625

Token 262: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8624639324116288e-06
    2. ' -' → logprob: -13.250001907348633
    3. ')' → logprob: -19.625001907348633
    4. '-)' → logprob: -20.125001907348633
    5. '1' → logprob: -20.500001907348633
    6. '−' → logprob: -21.000001907348633
    7. '-
' → logprob: -21.375001907348633
    8. '   ' → logprob: -21.750001907348633
    9. '```' → logprob: -22.125001907348633
    10. 's' → logprob: -23.125001907348633

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -16.625
    4. ')' → logprob: -16.75
    5. '<|end|>' → logprob: -19.0625
    6. '-' → logprob: -20.0
    7. '۱' → logprob: -20.0
    8. '   ' → logprob: -20.0625
    9. 'def' → logprob: -20.5
    10. '4' → logprob: -20.5625

Token 264: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.006716674659401178
    2. ',' → logprob: -5.006716728210449
    3. ' ,' → logprob: -13.63171672821045
    4. ',j' → logprob: -16.756715774536133
    5. ',i' → logprob: -19.131715774536133
    6. ',K' → logprob: -19.881715774536133
    7. ',n' → logprob: -20.006715774536133
    8. '   ' → logprob: -20.131715774536133
    9. 'k' → logprob: -20.881715774536133
    10. ',key' → logprob: -20.881715774536133

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.619311974034645e-05
    2. ')
' → logprob: -10.875036239624023
    3. ' )' → logprob: -11.000036239624023
    4. '   ' → logprob: -15.125036239624023
    5. ')return' → logprob: -16.875036239624023
    6. 'else' → logprob: -17.000036239624023
    7. ' ' → logprob: -17.375036239624023
    8. ')`' → logprob: -17.500036239624023
    9. '）' → logprob: -17.625036239624023
    10. ')

' → logprob: -17.875036239624023

Token 266: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22467511892318726
    2. 'else' → logprob: -2.599675178527832
    3. '    
' → logprob: -2.724675178527832
    4. '
' → logprob: -3.599675178527832
    5. ' else' → logprob: -4.099675178527832
    6. '<|end|>' → logprob: -5.224675178527832
    7. '  
' → logprob: -5.349675178527832
    8. '\n' → logprob: -5.849675178527832
    9. 'elif' → logprob: -6.974675178527832
    10. '   
' → logprob: -7.224675178527832

Token 267: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.15310683415737e-05
    2. ' S' → logprob: -10.750021934509277
    3. ' ' → logprob: -17.12502098083496
    4. '   ' → logprob: -19.75002098083496
    5. '  ' → logprob: -20.00002098083496
    6. '	S' → logprob: -21.12502098083496
    7. '    ' → logprob: -21.62502098083496
    8. ' ' → logprob: -22.00002098083496
    9. '_S' → logprob: -22.00002098083496
    10. ''S' → logprob: -22.12502098083496

Token 268: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1279553291387856e-05
    2. '[i' → logprob: -12.000011444091797
    3. 'j' → logprob: -12.250011444091797
    4. '[' → logprob: -16.000011444091797
    5. '```' → logprob: -16.875011444091797
    6. '[
' → logprob: -17.125011444091797
    7. '[k' → logprob: -19.125011444091797
    8. ']' → logprob: -19.375011444091797
    9. '\[' → logprob: -19.375011444091797
    10. '	j' → logprob: -19.750011444091797

Token 269: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010080150241265073
    2. '')' → logprob: -9.250101089477539
    3. ')
' → logprob: -12.750101089477539
    4. '}' → logprob: -14.125101089477539
    5. '")' → logprob: -15.125101089477539
    6. ' )' → logprob: -15.750101089477539
    7. '   ' → logprob: -15.875101089477539
    8. '<|end|>' → logprob: -16.00010108947754
    9. ']' → logprob: -16.50010108947754
    10. ')}' → logprob: -17.25010108947754

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2833503484725952
    2. 'else' → logprob: -2.0333504676818848
    3. '    
' → logprob: -2.9083504676818848
    4. '
' → logprob: -3.2833504676818848
    5. ' else' → logprob: -4.158350467681885
    6. '```' → logprob: -5.908350467681885
    7. '  
' → logprob: -6.158350467681885
    8. ' 
' → logprob: -6.908350467681885
    9. '	
' → logprob: -7.658350467681885
    10. '	else' → logprob: -7.908350467681885

Token 271: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4141266345977783
    2. 'if' → logprob: -1.4141266345977783
    3. 'left' → logprob: -2.6641266345977783
    4. 'l' → logprob: -4.414126396179199
    5. '
' → logprob: -5.414126396179199
    6. ' else' → logprob: -5.664126396179199
    7. 'elif' → logprob: -6.289126396179199
    8. '   ' → logprob: -6.289126396179199
    9. ' left' → logprob: -7.414126396179199
    10. ' if' → logprob: -7.664126396179199

Token 272: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7262709736824036
    2. '   ' → logprob: -0.8512709736824036
    3. 'left' → logprob: -2.476270914077759
    4. '       ' → logprob: -6.101271152496338
    5. ' left' → logprob: -6.101271152496338
    6. '    
' → logprob: -8.35127067565918
    7. '```' → logprob: -8.85127067565918
    8. '
' → logprob: -9.47627067565918
    9. '	left' → logprob: -9.47627067565918
    10. ',left' → logprob: -9.72627067565918

Token 273: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5284901261329651
    2. '   ' → logprob: -0.9034901261329651
    3. '       ' → logprob: -5.52849006652832
    4. ' left' → logprob: -7.52849006652832
    5. '```' → logprob: -8.40349006652832
    6. '	left' → logprob: -8.77849006652832
    7. 'count' → logprob: -8.90349006652832
    8. 'if' → logprob: -9.27849006652832
    9. '[left' → logprob: -10.15349006652832
    10. 'l' → logprob: -10.27849006652832

Token 274: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.001276545925065875
    2. 'if' → logprob: -6.75127649307251
    3. 'lef' → logprob: -10.001276969909668
    4. '       ' → logprob: -10.501276969909668
    5. ' left' → logprob: -11.251276969909668
    6. 'l' → logprob: -11.751276969909668
    7. '   ' → logprob: -13.001276969909668
    8. 'count' → logprob: -13.751276969909668
    9. '	left' → logprob: -13.876276969909668
    10. '```' → logprob: -13.876276969909668

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6667908430099487
    2. '=' → logprob: -1.0417908430099487
    3. '_count' → logprob: -2.0417909622192383
    4. 'count' → logprob: -6.291790962219238
    5. '_left' → logprob: -7.041790962219238
    6. '_cnt' → logprob: -7.166790962219238
    7. ',' → logprob: -8.666790962219238
    8. '_' → logprob: -9.166790962219238
    9. 'left' → logprob: -9.666790962219238
    10. '=count' → logprob: -9.791790962219238

Token 276: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001988471020013094
    2. 'dp' → logprob: -6.251988410949707
    3. ' count' → logprob: -9.751988410949707
    4. ' dp' → logprob: -13.501988410949707
    5. '0' → logprob: -15.376988410949707
    6. '   ' → logprob: -16.251989364624023
    7. 'cnt' → logprob: -18.251989364624023
    8. ' ' → logprob: -18.501989364624023
    9. '  ' → logprob: -18.751989364624023
    10. '(count' → logprob: -19.001989364624023

Token 277: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -16.875
    3. 'i' → logprob: -18.75
    4. ' (' → logprob: -21.5
    5. '(
' → logprob: -21.75
    6. '```' → logprob: -21.75
    7. '[i' → logprob: -21.875
    8. '(ii' → logprob: -22.75
    9. '(I' → logprob: -23.125
    10. '((' → logprob: -23.375

Token 278: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.8232690460281447e-05
    2. ' +' → logprob: -10.125048637390137
    3. '1' → logprob: -12.375048637390137
    4. '+i' → logprob: -12.625048637390137
    5. '()+' → logprob: -16.00004768371582
    6. '+,' → logprob: -16.37504768371582
    7. '+k' → logprob: -16.37504768371582
    8. '＋' → logprob: -16.50004768371582
    9. '+
' → logprob: -16.50004768371582
    10. ' ' → logprob: -17.62504768371582

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004975094925612211
    2. '+' → logprob: -7.750497341156006
    3. 'j' → logprob: -9.625497817993164
    4. '```' → logprob: -14.375497817993164
    5. ',j' → logprob: -16.500497817993164
    6. ' ' → logprob: -16.750497817993164
    7. 'i' → logprob: -17.000497817993164
    8. '
' → logprob: -17.375497817993164
    9. '   ' → logprob: -18.375497817993164
    10. '+j' → logprob: -18.375497817993164

Token 280: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.014167623594403267
    2. ',' → logprob: -4.264167785644531
    3. ' ,' → logprob: -12.764167785644531
    4. 'j' → logprob: -14.014167785644531
    5. ',k' → logprob: -16.01416778564453
    6. ',
' → logprob: -17.01416778564453
    7. '```' → logprob: -17.13916778564453
    8. ',y' → logprob: -17.38916778564453
    9. ',s' → logprob: -17.63916778564453
    10. '   ' → logprob: -17.76416778564453

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007310202927328646
    2. ')
' → logprob: -7.250730991363525
    3. ',' → logprob: -11.625731468200684
    4. ',k' → logprob: -12.000731468200684
    5. ' )' → logprob: -12.875731468200684
    6. ')

' → logprob: -13.750731468200684
    7. ')
' → logprob: -13.875731468200684
    8. 'k' → logprob: -14.750731468200684
    9. ' ' → logprob: -15.000731468200684
    10. '),' → logprob: -16.125730514526367

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32954949140548706
    2. '
' → logprob: -2.329549551010132
    3. ' if' → logprob: -2.454549551010132
    4. '<|end|>' → logprob: -2.704549551010132
    5. '   ' → logprob: -4.829549312591553
    6. 'if' → logprob: -5.329549312591553
    7. ' 
' → logprob: -5.329549312591553
    8. '        
' → logprob: -5.454549312591553
    9. '  
' → logprob: -6.079549312591553
    10. '        ' → logprob: -6.704549312591553

Token 283: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0020577155519276857
    2. ' if' → logprob: -6.2520575523376465
    3. 'right' → logprob: -9.127058029174805
    4. '       ' → logprob: -11.252058029174805
    5. '```' → logprob: -12.252058029174805
    6. 'left' → logprob: -14.002058029174805
    7. '[' → logprob: -14.252058029174805
    8. 'If' → logprob: -14.627058029174805
    9. '	if' → logprob: -15.627058029174805
    10. '           ' → logprob: -16.002058029174805

Token 284: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7119094729423523
    2. ' left' → logprob: -1.336909532546997
    3. 'k' → logprob: -1.461909532546997
    4. ' k' → logprob: -4.211909294128418
    5. '	left' → logprob: -11.461909294128418
    6. '(left' → logprob: -12.336909294128418
    7. ' ' → logprob: -12.836909294128418
    8. ' ' → logprob: -13.086909294128418
    9. ' lef' → logprob: -13.211909294128418
    10. '_left' → logprob: -13.586909294128418

Token 285: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4289250373840332
    2. ' >=' → logprob: -1.0539250373840332
    3. ')>=' → logprob: -8.678924560546875
    4. ']>=' → logprob: -10.428924560546875
    5. '<' → logprob: -11.803924560546875
    6. ' <' → logprob: -12.428924560546875
    7. ' ' → logprob: -12.553924560546875
    8. '[' → logprob: -12.678924560546875
    9. '≥' → logprob: -13.053924560546875
    10. '>' → logprob: -13.303924560546875

Token 286: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033546582562848926
    2. ' k' → logprob: -8.000335693359375
    3. '	k' → logprob: -17.375335693359375
    4. ' ' → logprob: -19.250335693359375
    5. '[k' → logprob: -19.250335693359375
    6. '       ' → logprob: -19.375335693359375
    7. '=k' → logprob: -19.625335693359375
    8. ',k' → logprob: -20.125335693359375
    9. '{k' → logprob: -20.125335693359375
    10. '(k' → logprob: -20.250335693359375

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008635488338768482
    2. ':
' → logprob: -4.758635520935059
    3. ':return' → logprob: -11.508635520935059
    4. ' :' → logprob: -12.633635520935059
    5. '):' → logprob: -13.133635520935059
    6. ':
' → logprob: -13.258635520935059
    7. '       ' → logprob: -13.758635520935059
    8. '):
' → logprob: -14.383635520935059
    9. ',' → logprob: -14.508635520935059
    10. ':

' → logprob: -14.883635520935059

Token 288: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3931574523448944
    2. '       ' → logprob: -1.1431574821472168
    3. ' return' → logprob: -5.143157482147217
    4. '           ' → logprob: -8.143157005310059
    5. '   ' → logprob: -9.768157005310059
    6. '```' → logprob: -10.268157005310059
    7. '	return' → logprob: -10.893157005310059
    8. ':return' → logprob: -11.518157005310059
    9. '{return' → logprob: -11.893157005310059
    10. 'result' → logprob: -12.518157005310059

Token 289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004923873930238187
    2. ' return' → logprob: -7.625492572784424
    3. '       ' → logprob: -13.000492095947266
    4. '           ' → logprob: -13.875492095947266
    5. '	return' → logprob: -15.000492095947266
    6. '```' → logprob: -15.125492095947266
    7. '   ' → logprob: -15.375492095947266
    8. 'if' → logprob: -16.750492095947266
    9. '`' → logprob: -16.875492095947266
    10. '
' → logprob: -17.250492095947266

Token 290: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003446707036346197
    2. ' S' → logprob: -6.253446578979492
    3. 'build' → logprob: -6.503446578979492
    4. ' build' → logprob: -11.003446578979492
    5. ' ' → logprob: -14.628446578979492
    6. '   ' → logprob: -15.003446578979492
    7. '_S' → logprob: -15.128446578979492
    8. '(S' → logprob: -15.378446578979492
    9. '	S' → logprob: -15.503446578979492
    10. '  ' → logprob: -15.878446578979492

Token 291: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008952890522778034
    2. 'i' → logprob: -4.758953094482422
    3. '(i' → logprob: -8.258953094482422
    4. '[' → logprob: -9.508953094482422
    5. ' i' → logprob: -13.133953094482422
    6. ''i' → logprob: -14.008953094482422
    7. '`' → logprob: -14.508953094482422
    8. ''' → logprob: -14.883953094482422
    9. '{i' → logprob: -14.883953094482422
    10. ' [' → logprob: -15.633953094482422

Token 292: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15533487498760223
    2. ' +' → logprob: -2.280334949493408
    3. ')' → logprob: -3.280334949493408
    4. ')+' → logprob: -5.905334949493408
    5. ']' → logprob: -7.030334949493408
    6. ']+' → logprob: -8.40533447265625
    7. '}' → logprob: -9.53033447265625
    8. '>' → logprob: -10.40533447265625
    9. '```' → logprob: -10.65533447265625
    10. '}+' → logprob: -11.03033447265625

Token 293: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868716359138489
    2. ' +' → logprob: -1.136871576309204
    3. ' plus' → logprob: -15.761871337890625
    4. ')' → logprob: -16.011871337890625
    5. '```' → logprob: -16.386871337890625
    6. ')+' → logprob: -16.636871337890625
    7. '＋' → logprob: -18.011871337890625
    8. '+k' → logprob: -18.011871337890625
    9. '+xml' → logprob: -18.011871337890625
    10. '+
' → logprob: -18.136871337890625

Token 294: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.306760805164231e-05
    2. ' build' → logprob: -11.25001335144043
    3. '(build' → logprob: -19.37501335144043
    4. '
' → logprob: -19.87501335144043
    5. '	build' → logprob: -20.37501335144043
    6. '.build' → logprob: -21.25001335144043
    7. ' ' → logprob: -22.12501335144043
    8. 'b' → logprob: -22.75001335144043
    9. '   ' → logprob: -23.50001335144043
    10. '_build' → logprob: -24.12501335144043

Token 295: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'i' → logprob: -16.125
    4. ' (' → logprob: -17.875
    5. '```' → logprob: -19.25
    6. '(
' → logprob: -19.5
    7. '[i' → logprob: -19.75
    8. ' i' → logprob: -20.125
    9. '=i' → logprob: -20.25
    10. ',i' → logprob: -20.375

Token 296: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.273621405242011e-05
    2. ' +' → logprob: -10.625032424926758
    3. '1' → logprob: -11.875032424926758
    4. '+i' → logprob: -13.750032424926758
    5. '＋' → logprob: -16.625032424926758
    6. '+
' → logprob: -16.750032424926758
    7. '()+' → logprob: -16.875032424926758
    8. ' ' → logprob: -18.125032424926758
    9. 's' → logprob: -18.250032424926758
    10. 'i' → logprob: -18.375032424926758

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -15.625001907348633
    4. '```' → logprob: -15.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. ',j' → logprob: -18.375001907348633
    7. '2' → logprob: -18.500001907348633
    8. ',' → logprob: -18.625001907348633
    9. '
' → logprob: -18.875001907348633
    10. '7' → logprob: -19.000001907348633

Token 298: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0022086622193455696
    2. ',' → logprob: -6.127208709716797
    3. 'j' → logprob: -11.002208709716797
    4. ' ,' → logprob: -12.002208709716797
    5. '```' → logprob: -16.002208709716797
    6. '[j' → logprob: -16.002208709716797
    7. ',
' → logprob: -16.252208709716797
    8. ' j' → logprob: -16.627208709716797
    9. '(j' → logprob: -16.752208709716797
    10. '`,`' → logprob: -16.752208709716797

Token 299: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0016055555315688252
    2. ',' → logprob: -6.50160551071167
    3. ',j' → logprob: -9.251605987548828
    4. ' ,' → logprob: -12.126605987548828
    5. '-' → logprob: -14.876605987548828
    6. ',m' → logprob: -15.501605987548828
    7. 'k' → logprob: -15.501605987548828
    8. ',n' → logprob: -15.501605987548828
    9. '```' → logprob: -15.751605987548828
    10. ',s' → logprob: -15.751605987548828

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023357603640761226
    2. ')
' → logprob: -8.37523365020752
    3. ' )' → logprob: -13.25023365020752
    4. '')' → logprob: -14.12523365020752
    5. ')
' → logprob: -16.125232696533203
    6. 'else' → logprob: -16.500232696533203
    7. ')

' → logprob: -16.500232696533203
    8. '`)' → logprob: -18.250232696533203
    9. '）' → logprob: -18.375232696533203
    10. '")' → logprob: -18.750232696533203

Token 301: ' +' (ID: 659)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5424861311912537
    2. '   ' → logprob: -1.5424861907958984
    3. 'else' → logprob: -1.9174861907958984
    4. '<|end|>' → logprob: -3.7924861907958984
    5. '       ' → logprob: -4.167486190795898
    6. ' +' → logprob: -4.417486190795898
    7. '
' → logprob: -5.792486190795898
    8. '+' → logprob: -6.292486190795898
    9. '  ' → logprob: -7.292486190795898
    10. '    ' → logprob: -7.542486190795898

Token 302: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.1689596148207784e-05
    2. ' S' → logprob: -9.875051498413086
    3. ' ' → logprob: -16.500051498413086
    4. 's' → logprob: -17.625051498413086
    5. '	S' → logprob: -18.375051498413086
    6. ')' → logprob: -18.875051498413086
    7. '   ' → logprob: -19.125051498413086
    8. '  ' → logprob: -19.250051498413086
    9. '(S' → logprob: -19.625051498413086
    10. '```' → logprob: -19.875051498413086

Token 303: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.159660890465602e-05
    2. '[i' → logprob: -9.62507152557373
    3. 'j' → logprob: -12.62507152557373
    4. '[' → logprob: -13.37507152557373
    5. '[
' → logprob: -15.62507152557373
    6. ']' → logprob: -15.75007152557373
    7. '```' → logprob: -16.000072479248047
    8. '\[' → logprob: -17.000072479248047
    9. '
' → logprob: -17.375072479248047
    10. ''[' → logprob: -17.500072479248047

Token 304: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010840528644621372
    2. ']' → logprob: -4.63584041595459
    3. 'else' → logprob: -7.88584041595459
    4. ')
' → logprob: -8.13584041595459
    5. '[j' → logprob: -9.01084041595459
    6. ' else' → logprob: -9.63584041595459
    7. '}' → logprob: -9.88584041595459
    8. '')' → logprob: -10.13584041595459
    9. '<|end|>' → logprob: -10.26084041595459
    10. '])' → logprob: -10.63584041595459

Token 305: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20979277789592743
    2. ' else' → logprob: -1.7097927331924438
    3. '   ' → logprob: -4.959792613983154
    4. '       ' → logprob: -6.709792613983154
    5. '	else' → logprob: -9.459793090820312
    6. '
' → logprob: -11.584793090820312
    7. '    
' → logprob: -12.084793090820312
    8. 'return' → logprob: -12.584793090820312
    9. ')' → logprob: -12.959793090820312
    10. '```' → logprob: -12.959793090820312

Token 306: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.023247458040714264
    2. ' else' → logprob: -3.773247480392456
    3. 'return' → logprob: -13.898247718811035
    4. '   ' → logprob: -14.523247718811035
    5. '
' → logprob: -15.523247718811035
    6. 'elif' → logprob: -16.27324676513672
    7. '	else' → logprob: -16.39824676513672
    8. ')' → logprob: -17.52324676513672
    9. '}else' → logprob: -17.52324676513672
    10. '```' → logprob: -17.77324676513672

Token 307: ':
' (ID: 734)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7268249988555908
    2. ':' → logprob: -1.8518249988555908
    3. ':
' → logprob: -1.9768249988555908
    4. '           ' → logprob: -2.101824998855591
    5. 'return' → logprob: -2.476824998855591
    6. ':return' → logprob: -4.726824760437012
    7. ' :
' → logprob: -5.851824760437012
    8. ' :' → logprob: -6.726824760437012
    9. '       ' → logprob: -7.351824760437012
    10. '          ' → logprob: -7.976824760437012

Token 308: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.569050669670105
    2. ' return' → logprob: -1.569050669670105
    3. 'k' → logprob: -2.1940507888793945
    4. '       ' → logprob: -2.1940507888793945
    5. ' k' → logprob: -6.0690507888793945
    6. '   ' → logprob: -8.444050788879395
    7. '           ' → logprob: -9.069050788879395
    8. ' ' → logprob: -10.194050788879395
    9. '	return' → logprob: -10.694050788879395
    10. 'left' → logprob: -10.819050788879395

Token 309: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.310482919216156
    2. 'k' → logprob: -1.4354829788208008
    3. ' return' → logprob: -3.560482978820801
    4. ' k' → logprob: -8.3104829788208
    5. 'right' → logprob: -8.6854829788208
    6. '           ' → logprob: -10.0604829788208
    7. 'left' → logprob: -12.3104829788208
    8. '
' → logprob: -12.5604829788208
    9. '       ' → logprob: -12.9354829788208
    10. '   ' → logprob: -13.0604829788208

Token 310: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03804241120815277
    2. ' S' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.163042068481445
    4. '   ' → logprob: -16.163042068481445
    5. 'build' → logprob: -16.538042068481445
    6. '  ' → logprob: -16.663042068481445
    7. 's' → logprob: -17.788042068481445
    8. ' build' → logprob: -17.913042068481445
    9. ' ' → logprob: -18.163042068481445
    10. '	S' → logprob: -18.413042068481445

Token 311: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16034415364265442
    2. '[j' → logprob: -1.910344123840332
    3. '[' → logprob: -9.035344123840332
    4. 'j' → logprob: -14.910344123840332
    5. 'i' → logprob: -15.660344123840332
    6. '   ' → logprob: -16.03534507751465
    7. '```' → logprob: -16.03534507751465
    8. '[k' → logprob: -16.16034507751465
    9. '[I' → logprob: -17.28534507751465
    10. '[f' → logprob: -18.28534507751465

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009126788936555386
    2. ')' → logprob: -4.884126663208008
    3. '+' → logprob: -6.634126663208008
    4. ']+' → logprob: -8.884126663208008
    5. ' +' → logprob: -10.384126663208008
    6. '']' → logprob: -10.759126663208008
    7. '>' → logprob: -12.759126663208008
    8. '[' → logprob: -12.884126663208008
    9. ' ]' → logprob: -13.009126663208008
    10. '])' → logprob: -13.509126663208008

Token 313: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931478977203369
    2. ' +' → logprob: -0.6931478977203369
    3. '+j' → logprob: -15.193147659301758
    4. ' ' → logprob: -16.193147659301758
    5. '>' → logprob: -16.318147659301758
    6. '```' → logprob: -16.943147659301758
    7. 'build' → logprob: -17.068147659301758
    8. '+b' → logprob: -17.068147659301758
    9. ')' → logprob: -17.568147659301758
    10. ' build' → logprob: -17.693147659301758

Token 314: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.16022463142871857
    2. ' build' → logprob: -1.9102246761322021
    3. '(build' → logprob: -15.285224914550781
    4. '	build' → logprob: -16.28522491455078
    5. 'b' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.53522491455078
    7. ' buildup' → logprob: -17.66022491455078
    8. ' buil' → logprob: -17.66022491455078
    9. '.build' → logprob: -18.41022491455078
    10. ' ' → logprob: -18.91022491455078

Token 315: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. 'i' → logprob: -16.625
    4. ' (' → logprob: -17.875
    5. '(
' → logprob: -20.75
    6. '(j' → logprob: -21.125
    7. '(I' → logprob: -22.125
    8. '```' → logprob: -22.5
    9. '(ii' → logprob: -22.5
    10. ' i' → logprob: -22.875

Token 316: ',j' (ID: 22712)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.21196416020393372
    2. ',j' → logprob: -1.7119641304016113
    3. ',' → logprob: -4.586964130401611
    4. 'i' → logprob: -8.46196460723877
    5. ' ,' → logprob: -9.33696460723877
    6. ' i' → logprob: -12.71196460723877
    7. '(i' → logprob: -12.96196460723877
    8. ',s' → logprob: -13.08696460723877
    9. 'j' → logprob: -13.58696460723877
    10. ',count' → logprob: -14.33696460723877

Token 317: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -12.500003814697266
    3. '```' → logprob: -15.875003814697266
    4. ' -' → logprob: -17.000003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '`' → logprob: -19.125003814697266
    7. '
' → logprob: -19.375003814697266
    8. '-
' → logprob: -19.875003814697266
    9. ' ' → logprob: -20.000003814697266
    10. '``' → logprob: -20.250003814697266

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -12.000008583068848
    3. '
' → logprob: -14.000008583068848
    4. ' ' → logprob: -14.125008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '```' → logprob: -15.875008583068848
    7. 'j' → logprob: -18.31250762939453
    8. '  ' → logprob: -18.43750762939453
    9. '`' → logprob: -18.56250762939453
    10. '１' → logprob: -18.62500762939453

Token 319: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0018442784203216434
    2. ',' → logprob: -7.00184440612793
    3. 'k' → logprob: -7.62684440612793
    4. ',j' → logprob: -7.75184440612793
    5. '-' → logprob: -11.87684440612793
    6. '`,' → logprob: -13.25184440612793
    7. 'j' → logprob: -13.25184440612793
    8. ' ,' → logprob: -13.25184440612793
    9. '(k' → logprob: -13.37684440612793
    10. '',' → logprob: -14.87684440612793

Token 320: '-left' (ID: 17007)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.09264476597309113
    2. '-' → logprob: -3.092644691467285
    3. ',' → logprob: -3.592644691467285
    4. '-k' → logprob: -5.092644691467285
    5. ' -' → logprob: -5.467644691467285
    6. ' ,' → logprob: -5.967644691467285
    7. ',j' → logprob: -5.967644691467285
    8. '),' → logprob: -10.967644691467285
    9. '-j' → logprob: -11.217644691467285
    10. '-(' → logprob: -11.342644691467285

Token 321: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7014437364414334e-05
    2. ',' → logprob: -11.50002670288086
    3. ' )' → logprob: -11.75002670288086
    4. '+' → logprob: -12.50002670288086
    5. ',k' → logprob: -13.00002670288086
    6. ')`' → logprob: -13.62502670288086
    7. ')
' → logprob: -15.00002670288086
    8. ')+' → logprob: -15.25002670288086
    9. ')}' → logprob: -15.62502670288086
    10. '),' → logprob: -15.62502670288086

Token 322: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00653868867084384
    2. 'result' → logprob: -5.2565388679504395
    3. 'if' → logprob: -6.8815388679504395
    4. '
' → logprob: -9.006538391113281
    5. 'res' → logprob: -10.131538391113281
    6. 'answer' → logprob: -10.256538391113281
    7. ' print' → logprob: -11.256538391113281
    8. '<|end|>' → logprob: -11.381538391113281
    9. 'k' → logprob: -11.506538391113281
    10. '  
' → logprob: -11.756538391113281

Token 323: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002475777640938759
    2. ' S' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.50247573852539
    4. '   ' → logprob: -17.75247573852539
    5. '	S' → logprob: -18.62747573852539
    6. '_S' → logprob: -19.50247573852539
    7. ''S' → logprob: -19.87747573852539
    8. ' ' → logprob: -19.87747573852539
    9. '  ' → logprob: -20.50247573852539
    10. '"S' → logprob: -20.50247573852539

Token 324: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005573204252868891
    2. 'j' → logprob: -7.5005574226379395
    3. '[i' → logprob: -12.500556945800781
    4. '[' → logprob: -15.250556945800781
    5. '```' → logprob: -15.375556945800781
    6. '   ' → logprob: -16.75055694580078
    7. '`' → logprob: -17.50055694580078
    8. '(j' → logprob: -17.50055694580078
    9. '	j' → logprob: -17.87555694580078
    10. '_j' → logprob: -18.12555694580078

Token 325: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. '}' → logprob: -12.875004768371582
    3. ')
' → logprob: -14.000004768371582
    4. '')' → logprob: -14.250004768371582
    5. '<|end|>' → logprob: -14.750004768371582
    6. ']' → logprob: -14.875004768371582
    7. ')}' → logprob: -15.875004768371582
    8. '   ' → logprob: -15.875004768371582
    9. ' )' → logprob: -16.7500057220459
    10. '）' → logprob: -16.7500057220459

Token 326: 'total' (ID: 9577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09042605757713318
    2. 'result' → logprob: -2.590425968170166
    3. 'res' → logprob: -4.590425968170166
    4. 'ans' → logprob: -6.965425968170166
    5. 'answer' → logprob: -7.965425968170166
    6. '```' → logprob: -11.090426445007324
    7. 'if' → logprob: -11.840426445007324
    8. '#' → logprob: -13.715426445007324
    9. 'def' → logprob: -13.840426445007324
    10. 'pal' → logprob: -14.090426445007324

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5394594073295593
    2. '=' → logprob: -0.9144594073295593
    3. '_' → logprob: -4.539459228515625
    4. '_count' → logprob: -5.539459228515625
    5. '_tokens' → logprob: -8.039459228515625
    6. '_k' → logprob: -8.289459228515625
    7. ')' → logprob: -8.414459228515625
    8. '(' → logprob: -8.914459228515625
    9. '_counts' → logprob: -8.914459228515625
    10. '_pal' → logprob: -9.664459228515625

Token 328: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.5577775128767826e-06
    2. ' count' → logprob: -12.125005722045898
    3. 'dp' → logprob: -17.5000057220459
    4. '(count' → logprob: -18.0000057220459
    5. 'limit' → logprob: -21.1250057220459
    6. '[count' → logprob: -21.6250057220459
    7. ' ' → logprob: -21.7500057220459
    8. 'total' → logprob: -22.0000057220459
    9. '=count' → logprob: -22.0000057220459
    10. '10' → logprob: -22.5000057220459

Token 329: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -13.750000953674316
    3. ' (' → logprob: -16.000001907348633
    4. '(
' → logprob: -18.125001907348633
    5. 'def' → logprob: -20.250001907348633
    6. '```' → logprob: -20.750001907348633
    7. '[' → logprob: -22.125001907348633
    8. '<|end|>' → logprob: -22.500001907348633
    9. '(

' → logprob: -22.750001907348633
    10. '((' → logprob: -23.125001907348633

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -18.125
    3. ' ' → logprob: -21.0
    4. '۰' → logprob: -23.5
    5. '０' → logprob: -23.5
    6. '00' → logprob: -25.5
    7. '012' → logprob: -26.625
    8. '```' → logprob: -28.0
    9. '000' → logprob: -28.25
    10. '০' → logprob: -28.75

Token 331: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.058793071657419205
    2. ',' → logprob: -3.558793067932129
    3. '(n' → logprob: -3.558793067932129
    4. 'n' → logprob: -9.308793067932129
    5. ' ,' → logprob: -10.558793067932129
    6. ',len' → logprob: -10.683793067932129
    7. '(' → logprob: -11.933793067932129
    8. ',(' → logprob: -12.933793067932129
    9. ',total' → logprob: -14.058793067932129
    10. ' (' → logprob: -14.558793067932129

Token 332: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7120533811976202e-05
    2. ' -' → logprob: -11.125017166137695
    3. '1' → logprob: -13.000017166137695
    4. '−' → logprob: -16.875017166137695
    5. ')' → logprob: -18.375017166137695
    6. '```' → logprob: -18.625017166137695
    7. ',' → logprob: -19.250017166137695
    8. '–' → logprob: -19.500017166137695
    9. '()-' → logprob: -20.125017166137695
    10. ')-' → logprob: -21.125017166137695

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -16.0
    4. '```' → logprob: -16.5
    5. '   ' → logprob: -19.9375
    6. '１' → logprob: -20.3125
    7. '۱' → logprob: -20.3125
    8. ',' → logprob: -20.375
    9. '0' → logprob: -20.5
    10. '`' → logprob: -20.875

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -13.750001907348633
    3. ')
' → logprob: -15.250001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '))' → logprob: -17.250001907348633
    6. ',)' → logprob: -17.625001907348633
    7. ')#' → logprob: -18.000001907348633
    8. '),' → logprob: -18.375001907348633
    9. ')`' → logprob: -18.500001907348633
    10. ',k' → logprob: -18.500001907348633

Token 335: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09346079081296921
    2. 'print' → logprob: -2.46846079826355
    3. 'result' → logprob: -6.218460559844971
    4. 'ans' → logprob: -6.218460559844971
    5. 'res' → logprob: -8.093461036682129
    6. '```' → logprob: -9.093461036682129
    7. 'answer' → logprob: -9.468461036682129
    8. '
' → logprob: -10.968461036682129
    9. ' if' → logprob: -11.968461036682129
    10. 'import' → logprob: -13.343461036682129

Token 336: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4440741539001465
    2. ' k' → logprob: -1.1940741539001465
    3. 'k' → logprob: -3.3190741539001465
    4. 'total' → logprob: -3.9440741539001465
    5. ' ' → logprob: -10.694074630737305
    6. ' not' → logprob: -11.319074630737305
    7. ' ' → logprob: -13.819074630737305
    8. ' tot' → logprob: -13.944074630737305
    9. '(total' → logprob: -14.069074630737305
    10. ' n' → logprob: -14.319074630737305

Token 337: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10350456088781357
    2. ' <' → logprob: -2.3535046577453613
    3. '>=' → logprob: -5.978504657745361
    4. ' >=' → logprob: -7.228504657745361
    5. '<int' → logprob: -11.728504180908203
    6. '<n' → logprob: -12.228504180908203
    7. '<m' → logprob: -13.353504180908203
    8. '<s' → logprob: -13.353504180908203
    9. '<data' → logprob: -13.353504180908203
    10. '<class' → logprob: -13.478504180908203

Token 338: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00862213596701622
    2. ' k' → logprob: -4.758622169494629
    3. '=' → logprob: -12.133622169494629
    4. '=k' → logprob: -13.758622169494629
    5. '1' → logprob: -15.008622169494629
    6. ' ' → logprob: -15.008622169494629
    7. '	k' → logprob: -15.758622169494629
    8. '100' → logprob: -16.508621215820312
    9. '    ' → logprob: -16.883621215820312
    10. '10' → logprob: -16.883621215820312

Token 339: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02328508161008358
    2. ':' → logprob: -3.773285150527954
    3. 'print' → logprob: -11.523284912109375
    4. ' or' → logprob: -11.773284912109375
    5. '   ' → logprob: -11.773284912109375
    6. '):
' → logprob: -12.023284912109375
    7. ' :
' → logprob: -12.273284912109375
    8. ' print' → logprob: -13.898284912109375
    9. ':
' → logprob: -13.898284912109375
    10. '():
' → logprob: -15.148284912109375

Token 340: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02499639429152012
    2. '   ' → logprob: -3.774996280670166
    3. ' print' → logprob: -6.399996280670166
    4. '```' → logprob: -9.649996757507324
    5. '	print' → logprob: -12.024996757507324
    6. '``' → logprob: -12.149996757507324
    7. '
' → logprob: -12.774996757507324
    8. '-' → logprob: -13.149996757507324
    9. '.print' → logprob: -13.274996757507324
    10. '    
' → logprob: -13.274996757507324

Token 341: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.539801688631997e-05
    2. ' print' → logprob: -10.125065803527832
    3. '   ' → logprob: -10.750065803527832
    4. '-' → logprob: -12.750065803527832
    5. '-print' → logprob: -14.125065803527832
    6. '
' → logprob: -16.000064849853516
    7. '	print' → logprob: -16.750064849853516
    8. '```' → logprob: -17.250064849853516
    9. 'import' → logprob: -18.375064849853516
    10. '``' → logprob: -18.750064849853516

Token 342: '("' (ID: 568)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.35097241401672363
    2. '-' → logprob: -1.2259724140167236
    3. '("-' → logprob: -6.1009721755981445
    4. '(' → logprob: -8.725972175598145
    5. '"-' → logprob: -9.975972175598145
    6. '("' → logprob: -10.475972175598145
    7. '('-' → logprob: -10.975972175598145
    8. '()-' → logprob: -11.225972175598145
    9. ' -' → logprob: -12.100972175598145
    10. '(
' → logprob: -13.100972175598145

Token 343: 'NONE' (ID: 101023)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019877557642757893
    2. '-im' → logprob: -6.376987934112549
    3. '-m' → logprob: -9.50198745727539
    4. '-th' → logprob: -10.37698745727539
    5. '"-' → logprob: -10.75198745727539
    6. '-invalid' → logprob: -10.87698745727539
    7. '-none' → logprob: -11.00198745727539
    8. '-k' → logprob: -11.12698745727539
    9. '-empty' → logprob: -11.12698745727539
    10. '-M' → logprob: -11.37698745727539

Token 344: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5760122537612915
    2. '")
' → logprob: -0.8260122537612915
    3. '")
' → logprob: -9.57601261138916
    4. ')
' → logprob: -13.57601261138916
    5. '"' → logprob: -13.95101261138916
    6. ')' → logprob: -14.20101261138916
    7. ')")
' → logprob: -15.95101261138916
    8. '")

' → logprob: -16.326011657714844
    9. '')
' → logprob: -16.451011657714844
    10. ')")' → logprob: -17.076011657714844

Token 345: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -9.088346359931165e-07
    2. ' else' → logprob: -14.625000953674316
    3. 'elif' → logprob: -16.0
    4. '_else' → logprob: -16.0
    5. '
' → logprob: -16.625
    6. 'elser' → logprob: -17.25
    7. '}else' → logprob: -17.25
    8. 'elses' → logprob: -18.125
    9. '```' → logprob: -18.25
    10. '<|end|>' → logprob: -18.625

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1002325564622879
    2. ':
' → logprob: -2.3502326011657715
    3. '   ' → logprob: -10.725232124328613
    4. ':
' → logprob: -13.850232124328613
    5. ' :' → logprob: -14.100232124328613
    6. ' :
' → logprob: -14.225232124328613
    7. 'print' → logprob: -14.350232124328613
    8. ':

' → logprob: -14.850232124328613
    9. ' print' → logprob: -15.600232124328613
    10. '):
' → logprob: -16.35023307800293

Token 347: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014013137842994183
    2. '   ' → logprob: -9.250140190124512
    3. ' print' → logprob: -10.750140190124512
    4. 'result' → logprob: -11.125140190124512
    5. '```' → logprob: -12.375140190124512
    6. 'res' → logprob: -12.625140190124512
    7. 'answer' → logprob: -15.875140190124512
    8. '	print' → logprob: -16.500139236450195
    9. '
' → logprob: -17.125139236450195
    10. 'ans' → logprob: -17.250139236450195

Token 348: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.126521035796031e-05
    2. 'res' → logprob: -9.750091552734375
    3. 'result' → logprob: -10.750091552734375
    4. '   ' → logprob: -11.875091552734375
    5. ' print' → logprob: -12.625091552734375
    6. 'ans' (adapté à ' ans') → logprob: -13.875091552734375
    7. 'answer' → logprob: -15.625091552734375
    8. '```' → logprob: -16.875091552734375
    9. '
' → logprob: -18.250091552734375
    10. '    
' → logprob: -18.375091552734375

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889088988304138
    2. '=' → logprob: -2.578890800476074
    3. '＝' → logprob: -15.453890800476074
    4. ')' → logprob: -15.578890800476074
    5. ' +=' → logprob: -15.828890800476074
    6. '   ' → logprob: -15.828890800476074
    7. ' ' → logprob: -15.953890800476074
    8. ',' → logprob: -15.953890800476074
    9. ' ' → logprob: -16.32889175415039
    10. ' =
' → logprob: -17.57889175415039

Token 350: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.004078401252627373
    2. ' build' → logprob: -5.504078388214111
    3. '(build' → logprob: -20.129077911376953
    4. '	build' → logprob: -21.129077911376953
    5. '_build' → logprob: -21.879077911376953
    6. '.build' → logprob: -22.004077911376953
    7. ' buil' → logprob: -23.004077911376953
    8. 'building' → logprob: -23.629077911376953
    9. 'b' → logprob: -24.004077911376953
    10. 'Build' → logprob: -24.254077911376953

Token 351: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.625
    3. '0' → logprob: -18.625
    4. '(
' → logprob: -22.5
    5. '```' → logprob: -22.625
    6. '
' → logprob: -23.5
    7. 'def' → logprob: -24.375
    8. '((' → logprob: -24.625
    9. '​' → logprob: -24.75
    10. ' ' → logprob: -24.875

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. ' ' → logprob: -17.25
    4. '０' → logprob: -22.0
    5. '۰' → logprob: -22.125
    6. '00' → logprob: -22.875
    7. ')' → logprob: -23.625
    8. '```' → logprob: -24.5
    9. '   ' → logprob: -25.0
    10. '000' → logprob: -25.125

Token 353: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.011277585290372372
    2. ',' → logprob: -4.511277675628662
    3. 'n' → logprob: -8.386277198791504
    4. ' ,' → logprob: -13.761277198791504
    5. ',
' → logprob: -15.386277198791504
    6. ',len' → logprob: -15.511277198791504
    7. ' n' → logprob: -16.01127815246582
    8. '0' → logprob: -16.88627815246582
    9. '<n' → logprob: -17.26127815246582
    10. '
' → logprob: -18.26127815246582

Token 354: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.375000953674316
    3. ' -' → logprob: -16.125
    4. '−' → logprob: -16.125
    5. 'n' → logprob: -17.625
    6. '–' → logprob: -17.75
    7. ',' → logprob: -17.875
    8. ',n' → logprob: -18.875
    9. '```' → logprob: -19.0
    10. '-n' → logprob: -20.0

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.0
    4. '１' → logprob: -19.1875
    5. ')' → logprob: -19.3125
    6. '   ' → logprob: -19.375
    7. '-' → logprob: -19.4375
    8. 'n' → logprob: -19.625
    9. 's' → logprob: -19.8125
    10. '
' → logprob: -19.9375

Token 356: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0011703446507453918
    2. ',' → logprob: -6.7511701583862305
    3. ' ,' → logprob: -15.62617015838623
    4. 'k' → logprob: -17.126171112060547
    5. ',
' → logprob: -18.751171112060547
    6. ',int' → logprob: -19.751171112060547
    7. ',n' → logprob: -20.501171112060547
    8. ',K' → logprob: -20.876171112060547
    9. '   ' → logprob: -21.001171112060547
    10. ',j' → logprob: -22.001171112060547

Token 357: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0004372254479676485
    2. ')' → logprob: -7.750437259674072
    3. 'print' → logprob: -12.125436782836914
    4. ')
' → logprob: -13.750436782836914
    5. ' )
' → logprob: -17.000436782836914
    6. ')

' → logprob: -19.125436782836914
    7. '))
' → logprob: -19.250436782836914
    8. ')`
' → logprob: -19.250436782836914
    9. '")
' → logprob: -19.625436782836914
    10. '
' → logprob: -20.375436782836914

Token 358: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. '
' → logprob: -12.375004768371582
    3. ' print' → logprob: -14.250004768371582
    4. '   ' → logprob: -16.8750057220459
    5. '```' → logprob: -17.2500057220459
    6. '	print' → logprob: -19.5000057220459
    7. '#print' → logprob: -19.5000057220459
    8. '.print' → logprob: -19.6250057220459
    9. '(print' → logprob: -19.6250057220459
    10. '    
' → logprob: -20.3750057220459

Token 359: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -21.75
    3. '   ' → logprob: -26.25
    4. 'pr' → logprob: -28.25
    5. '
' → logprob: -28.375
    6. 'printf' → logprob: -28.375
    7. '```' → logprob: -28.625
    8. '	print' → logprob: -29.125
    9. 'println' → logprob: -29.875
    10. 'prin' → logprob: -30.625

Token 360: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -15.375
    3. '(' → logprob: -16.125
    4. '(answer' → logprob: -18.375
    5. '	ans' → logprob: -18.875
    6. ' (' → logprob: -19.5
    7. '()' → logprob: -20.375
    8. '(abs' → logprob: -21.625
    9. '(ord' → logprob: -21.75
    10. '(
' → logprob: -21.875

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '())' → logprob: -16.625
    3. '))' → logprob: -17.125
    4. ' )' → logprob: -17.375
    5. '()' → logprob: -18.125
    6. ')`' → logprob: -18.75
    7. ')
' → logprob: -19.0
    8. '")' → logprob: -19.5
    9. '`)' → logprob: -19.625
    10. '')' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 175
Tokens correctement prédits (top 10): 326
Précision stricte (1ère position): 41.78%
Précision adaptée (1ère position): 48.75%
Précision (top 10): 90.81%
================================================================================
