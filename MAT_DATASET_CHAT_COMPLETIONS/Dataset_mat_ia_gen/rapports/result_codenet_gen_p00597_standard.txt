================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    # Precompute maximum number of carbons for longest chain lengths 1 to 30
    max_carbons = [0]*31
    max_carbons[1] = 1
    for i in range(2,31):
        max_carbons[i] = max_carbons[i-1] + 2*(i-1)
    for line in sys.stdin:
        n = line.strip()
        if not n.isdigit():
            continue
        n = int(n)
        print(max_carbons[n])
if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.05252670496702194
    2. ' sys' → logprob: -3.1775267124176025
    3. ' math' → logprob: -5.427526473999023
    4. ' ' → logprob: -6.177526473999023
    5. ' numpy' → logprob: -6.302526473999023
    6. ' json' → logprob: -7.427526473999023
    7. ' random' → logprob: -8.552526473999023
    8. ' pandas' → logprob: -9.677526473999023
    9. ' tensorflow' → logprob: -9.802526473999023
    10. ' csv' → logprob: -10.052526473999023

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8383219242095947
    2. '.' → logprob: -1.5883219242095947
    3. '\' → logprob: -1.8383219242095947
    4. 'newline' → logprob: -2.7133219242095947
    5. '   ' → logprob: -3.0883219242095947
    6. '<|end|>' → logprob: -3.9633219242095947
    7. '    
' → logprob: -4.338321685791016
    8. '```' → logprob: -4.338321685791016
    9. 'import' → logprob: -5.088321685791016
    10. '.readline' → logprob: -5.088321685791016

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5024410486221313
    2. '.' → logprob: -1.6274410486221313
    3. '    ' → logprob: -3.377440929412842
    4. '.readline' → logprob: -3.752440929412842
    5. 'newline' → logprob: -3.752440929412842
    6. '.stdout' → logprob: -4.377440929412842
    7. ' ' → logprob: -4.377440929412842
    8. 'import' → logprob: -4.502440929412842
    9. '    
' → logprob: -4.502440929412842
    10. '```' → logprob: -4.752440929412842

Token 8: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.278299480676651
    2. '.' → logprob: -2.403299570083618
    3. ' ' → logprob: -3.403299570083618
    4. '    ' → logprob: -3.528299570083618
    5. '[' → logprob: -3.528299570083618
    6. 'print' → logprob: -4.403299331665039
    7. 'import' → logprob: -5.028299331665039
    8. '\' → logprob: -5.403299331665039
    9. '\n' → logprob: -5.403299331665039
    10. '  ' → logprob: -5.403299331665039

Token 9: ' Pre' (ID: 4659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055337730795145035
    2. ' argv' → logprob: -3.68033766746521
    3. 'argv' → logprob: -5.305337905883789
    4. '    ' → logprob: -5.555337905883789
    5. '  ' → logprob: -5.680337905883789
    6. ' ' → logprob: -6.180337905883789
    7. '   ' → logprob: -6.305337905883789
    8. ' input' → logprob: -6.430337905883789
    9. ' import' → logprob: -6.680337905883789
    10. ' readline' → logprob: -6.805337905883789

Token 10: 'compute' (ID: 54521)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.4409874379634857
    2. 'processing' → logprob: -1.815987467765808
    3. 'dict' → logprob: -1.940987467765808
    4. 'd' → logprob: -4.190987586975098
    5. 'fix' → logprob: -4.565987586975098
    6. 'f' → logprob: -5.815987586975098
    7. 'pare' → logprob: -5.940987586975098
    8. 'processor' → logprob: -6.065987586975098
    9. 'processed' → logprob: -6.190987586975098
    10. ' processing' → logprob: -6.815987586975098

Token 11: ' maximum' (ID: 10562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035133246332407
    2. ' ' → logprob: -3.5351333618164062
    3. ' _' → logprob: -5.785133361816406
    4. '_s' → logprob: -7.285133361816406
    5. '_space' → logprob: -9.035133361816406
    6. '_values' → logprob: -9.160133361816406
    7. 's' → logprob: -9.160133361816406
    8. '_token' → logprob: -9.535133361816406
    9. 'space' → logprob: -9.910133361816406
    10. '__' → logprob: -10.160133361816406

Token 12: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10371661186218262
    2. '_length' → logprob: -3.6037166118621826
    3. ' _' → logprob: -4.228716850280762
    4. 's' → logprob: -4.353716850280762
    5. '_lengths' → logprob: -5.353716850280762
    6. '_max' → logprob: -5.478716850280762
    7. '_depth' → logprob: -5.478716850280762
    8. '_value' → logprob: -5.478716850280762
    9. '_size' → logprob: -5.728716850280762
    10. '_n' → logprob: -6.103716850280762

Token 13: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.045376844704151154
    2. '_' → logprob: -3.295376777648926
    3. ' of' → logprob: -5.545376777648926
    4. '_of' → logprob: -6.545376777648926
    5. 'of' → logprob: -7.420376777648926
    6. '_s' → logprob: -7.795376777648926
    7. '_tokens' → logprob: -8.420376777648926
    8. ' ' → logprob: -8.795376777648926
    9. '<|end|>' → logprob: -9.045376777648926
    10. '```' → logprob: -9.795376777648926

Token 14: ' carb' (ID: 41933)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5110571384429932
    2. ' steps' → logprob: -2.261057138442993
    3. '_' → logprob: -2.386057138442993
    4. 's' → logprob: -2.636057138442993
    5. ' digits' → logprob: -3.136057138442993
    6. ' spaces' → logprob: -3.386057138442993
    7. ' s' → logprob: -3.386057138442993
    8. '```' → logprob: -3.761057138442993
    9. ' coins' → logprob: -3.886057138442993
    10. ' pages' → logprob: -4.011056900024414

Token 15: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.41966578364372253
    2. 'o' → logprob: -1.919665813446045
    3. 'on' → logprob: -1.919665813446045
    4. 's' → logprob: -3.669665813446045
    5. 'os' → logprob: -5.044665813446045
    6. 'ones' → logprob: -5.794665813446045
    7. '```' → logprob: -6.419665813446045
    8. '_' → logprob: -7.044665813446045
    9. 'hydrates' → logprob: -7.169665813446045
    10. 'onn' → logprob: -7.419665813446045

Token 16: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01206030324101448
    2. '_per' → logprob: -5.387060165405273
    3. ' _' → logprob: -5.387060165405273
    4. ' =' → logprob: -6.512060165405273
    5. '_in' → logprob: -7.762060165405273
    6. 's' → logprob: -8.637060165405273
    7. '_s' → logprob: -8.887060165405273
    8. '=' → logprob: -9.262060165405273
    9. '_n' → logprob: -9.637060165405273
    10. '_possible' → logprob: -10.012060165405273

Token 17: ' longest' (ID: 37511)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.3029732704162598
    2. ' n' → logprob: -1.4279732704162598
    3. ' a' → logprob: -2.4279732704162598
    4. ' given' → logprob: -2.8029732704162598
    5. ' chain' → logprob: -2.9279732704162598
    6. ' chains' → logprob: -2.9279732704162598
    7. ' i' → logprob: -3.1779732704162598
    8. ' al' → logprob: -4.30297327041626
    9. ' methane' → logprob: -4.30297327041626
    10. ' the' → logprob: -4.55297327041626

Token 18: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.43030279874801636
    2. ' chains' → logprob: -2.055302858352661
    3. 'chain' → logprob: -2.430302858352661
    4. '_chain' → logprob: -3.180302858352661
    5. 'chains' → logprob: -4.180302619934082
    6. '_' → logprob: -4.555302619934082
    7. 'sub' → logprob: -5.180302619934082
    8. ' prefix' → logprob: -5.367802619934082
    9. ' possible' → logprob: -5.492802619934082
    10. '_sub' → logprob: -5.555302619934082

Token 19: ' lengths' (ID: 51957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12066525965929031
    2. 's' → logprob: -2.9956653118133545
    3. ' =' → logprob: -3.4956653118133545
    4. ' _' → logprob: -3.9956653118133545
    5. '_s' → logprob: -5.870665073394775
    6. ' ' → logprob: -6.245665073394775
    7. '_lengths' → logprob: -6.495665073394775
    8. '_length' → logprob: -6.620665073394775
    9. '_n' → logprob: -6.745665073394775
    10. '_max' → logprob: -6.870665073394775

Token 20: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16391722857952118
    2. '   ' → logprob: -2.788917303085327
    3. '\' → logprob: -3.788917303085327
    4. '_n' → logprob: -3.788917303085327
    5. '_max' → logprob: -4.288917064666748
    6. '```' → logprob: -5.038917064666748
    7. '_
' → logprob: -5.163917064666748
    8. '\n' → logprob: -5.913917064666748
    9. 'n' → logprob: -6.038917064666748
    10. '
' → logprob: -6.288917064666748

Token 21: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.729133665561676
    2. ' =' → logprob: -1.9791336059570312
    3. 's' → logprob: -2.1041336059570312
    4. '_max' → logprob: -2.2291336059570312
    5. '_n' → logprob: -3.7291336059570312
    6. ' ' → logprob: -3.9791336059570312
    7. 'max' → logprob: -3.9791336059570312
    8. '```' → logprob: -4.354133605957031
    9. ':' → logprob: -4.479133605957031
    10. ' _' → logprob: -4.604133605957031

Token 22: ' to' (ID: 316)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3511550426483154
    2. '0' → logprob: -1.8511550426483154
    3. '2' → logprob: -1.9761550426483154
    4. '9' → logprob: -2.2261550426483154
    5. '...' → logprob: -2.8511550426483154
    6. ' ' → logprob: -2.9761550426483154
    7. ' to' → logprob: -2.9761550426483154
    8. '6' → logprob: -2.9761550426483154
    9. '7' → logprob: -3.2261550426483154
    10. ',' → logprob: -3.3511550426483154

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5239207148551941
    2. '20' → logprob: -1.6489207744598389
    3. '100' → logprob: -3.273920774459839
    4. '40' → logprob: -3.398920774459839
    5. '50' → logprob: -3.398920774459839
    6. '60' → logprob: -3.898920774459839
    7. '30' → logprob: -4.39892053604126
    8. '10' → logprob: -4.52392053604126
    9. '12' → logprob: -5.02392053604126
    10. '25' → logprob: -5.02392053604126

Token 24: '30' (ID: 1130)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.5695690512657166
    2. '10' → logprob: -2.3195691108703613
    3. '100' → logprob: -2.6945691108703613
    4. '50' → logprob: -2.8195691108703613
    5. '30' → logprob: -3.3195691108703613
    6. '60' → logprob: -3.4445691108703613
    7. '40' → logprob: -3.5695691108703613
    8. '15' → logprob: -3.6945691108703613
    9. ' ' → logprob: -4.069569110870361
    10. '25' → logprob: -4.444569110870361

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43767374753952026
    2. 'n' → logprob: -2.437673807144165
    3. '_' → logprob: -2.937673807144165
    4. '_max' → logprob: -3.062673807144165
    5. '\n' → logprob: -3.312673807144165
    6. '_n' → logprob: -3.312673807144165
    7. 'max' → logprob: -3.437673807144165
    8. '_car' → logprob: -4.062673568725586
    9. '```' → logprob: -5.187673568725586
    10. ' 
' → logprob: -5.312673568725586

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17247973382472992
    2. '
' → logprob: -3.2974796295166016
    3. '\n' → logprob: -3.5474796295166016
    4. '_max' → logprob: -3.6724796295166016
    5. 'n' → logprob: -4.047479629516602
    6. 'max' → logprob: -4.172479629516602
    7. '    
' → logprob: -4.547479629516602
    8. '_' → logprob: -4.922479629516602
    9. '\' → logprob: -6.047479629516602
    10. '```' → logprob: -6.172479629516602

Token 27: ' max' (ID: 2999)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5448095798492432
    2. '\n' → logprob: -1.5448095798492432
    3. 'max' (adapté à ' max') → logprob: -2.794809579849243
    4. ' max' → logprob: -2.919809579849243
    5. 'n' → logprob: -3.169809579849243
    6. '\' → logprob: -4.294809341430664
    7. ' 
' → logprob: -4.669809341430664
    8. '    
' → logprob: -5.669809341430664
    9. '_max' → logprob: -5.794809341430664
    10. '```' → logprob: -5.794809341430664

Token 28: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7387282252311707
    2. '_chain' → logprob: -1.1137282848358154
    3. '_car' → logprob: -2.4887282848358154
    4. '_' → logprob: -3.4887282848358154
    5. '_ch' → logprob: -3.6137282848358154
    6. '_lengths' → logprob: -3.6137282848358154
    7. '_length' → logprob: -4.863728046417236
    8. '_num' → logprob: -4.988728046417236
    9. '_len' → logprob: -5.988728046417236
    10. '_long' → logprob: -6.363728046417236

Token 29: 'arb' (ID: 36740)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9152558445930481
    2. 'ar' → logprob: -1.5402557849884033
    3. 'arb' → logprob: -1.6652557849884033
    4. 'hain' → logprob: -2.5402557849884033
    5. 'ha' → logprob: -3.7902557849884033
    6. 'a' → logprob: -4.040256023406982
    7. '_h' → logprob: -4.540256023406982
    8. '_' → logprob: -4.540256023406982
    9. '_c' → logprob: -5.165256023406982
    10. '_length' → logprob: -5.415256023406982

Token 30: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.02169286645948887
    2. 'on' → logprob: -4.271692752838135
    3. '_' → logprob: -5.146692752838135
    4. '=' → logprob: -8.396693229675293
    5. '\' → logprob: -9.021693229675293
    6. '_on' → logprob: -9.021693229675293
    7. '```' → logprob: -9.146693229675293
    8. 'o' → logprob: -9.271693229675293
    9. '[' → logprob: -9.896693229675293
    10. '#' → logprob: -10.021693229675293

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2545124888420105
    2. '=' → logprob: -1.5045125484466553
    3. '_for' → logprob: -7.254512310028076
    4. '_' → logprob: -7.504512310028076
    5. '[' → logprob: -7.754512310028076
    6. 's' → logprob: -7.879512310028076
    7. ' ' → logprob: -8.379512786865234
    8. '_per' → logprob: -9.129512786865234
    9. 'for' → logprob: -10.004512786865234
    10. '   ' → logprob: -10.254512786865234

Token 32: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.028280898928642273
    2. '[' → logprob: -3.6532809734344482
    3. ' [
' → logprob: -6.778280735015869
    4. ' ' → logprob: -7.903280735015869
    5. ' []' → logprob: -8.278281211853027
    6. ' [

' → logprob: -9.528281211853027
    7. '  ' → logprob: -10.528281211853027
    8. '[
' → logprob: -10.528281211853027
    9. '[]' → logprob: -11.028281211853027
    10. ' ['' → logprob: -11.403281211853027

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6946156620979309
    2. ' ' → logprob: -0.9446156620979309
    3. '1' → logprob: -2.319615602493286
    4. '   ' → logprob: -5.569615840911865
    5. ' i' → logprob: -5.694615840911865
    6. 'i' → logprob: -6.569615840911865
    7. ']' → logprob: -7.319615840911865
    8. ' ]' → logprob: -7.444615840911865
    9. ' None' → logprob: -7.444615840911865
    10. '    ' → logprob: -7.569615840911865

Token 34: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1278640478849411
    2. ']' → logprob: -2.127864122390747
    3. ' ]' → logprob: -7.127863883972168
    4. ' ,' → logprob: -10.127863883972168
    5. ']*' → logprob: -10.377863883972168
    6. ' for' → logprob: -10.752863883972168
    7. ',
' → logprob: -11.252863883972168
    8. '0' → logprob: -12.002863883972168
    9. ']+' → logprob: -12.377863883972168
    10. ']int' → logprob: -12.627863883972168

Token 35: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -3.750436007976532e-05
    2. '30' → logprob: -10.50003719329834
    3. ' ' → logprob: -12.12503719329834
    4. '(' → logprob: -12.50003719329834
    5. '32' → logprob: -14.25003719329834
    6. '33' → logprob: -16.625038146972656
    7. '301' → logprob: -17.000038146972656
    8. '36' → logprob: -17.750038146972656
    9. '34' → logprob: -18.000038146972656
    10. '35' → logprob: -18.125038146972656

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02212800644338131
    2. '<|end|>' → logprob: -3.897128105163574
    3. '\n' → logprob: -8.147128105163574
    4. '
' → logprob: -8.272128105163574
    5. '<|end|>' → logprob: -8.272128105163574
    6. ' 
' → logprob: -8.772128105163574
    7. '

' → logprob: -9.272128105163574
    8. '#' → logprob: -9.272128105163574
    9. ' ' → logprob: -9.522128105163574
    10. '```' → logprob: -10.397128105163574

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5116730332374573
    2. '
' → logprob: -1.5116729736328125
    3. 'max' → logprob: -2.7616729736328125
    4. ' max' → logprob: -2.8866729736328125
    5. ' for' → logprob: -3.6366729736328125
    6. ' 
' → logprob: -4.7616729736328125
    7. '    
' → logprob: -4.8866729736328125
    8. 'for' → logprob: -5.1366729736328125
    9. ' ' → logprob: -5.7616729736328125
    10. '  
' → logprob: -6.3866729736328125

Token 38: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.331100583076477
    2. ' for' → logprob: -1.456100583076477
    3. 'max' (adapté à ' max') → logprob: -1.956100583076477
    4. ' max' → logprob: -2.5811004638671875
    5. ' 
' → logprob: -2.7061004638671875
    6. '   ' → logprob: -2.7061004638671875
    7. ' ' → logprob: -2.7061004638671875
    8. '
' → logprob: -3.2061004638671875
    9. 'c' → logprob: -3.9561004638671875
    10. '#' → logprob: -5.3311004638671875

Token 39: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00029995047952979803
    2. '_' → logprob: -8.250300407409668
    3. ' _' → logprob: -10.875300407409668
    4. '_car' → logprob: -11.250300407409668
    5. '_max' → logprob: -13.125300407409668
    6. '_chain' → logprob: -14.500300407409668
    7. '_C' → logprob: -14.875300407409668
    8. '_s' → logprob: -15.250300407409668
    9. '_lengths' → logprob: -15.375300407409668
    10. '\' → logprob: -15.375300407409668

Token 40: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.030783429741859436
    2. 'ar' → logprob: -3.5307834148406982
    3. 'a' → logprob: -7.030783653259277
    4. 'car' → logprob: -10.530783653259277
    5. '_c' → logprob: -10.780783653259277
    6. '_' → logprob: -11.280783653259277
    7. 'arc' → logprob: -11.905783653259277
    8. 'h' → logprob: -12.030783653259277
    9. '_ar' → logprob: -12.030783653259277
    10. '_car' → logprob: -12.030783653259277

Token 41: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.04385490342974663
    2. 'bons' → logprob: -3.5438549518585205
    3. 'arb' → logprob: -4.543854713439941
    4. 'on' → logprob: -6.543854713439941
    5. 'ar' → logprob: -6.543854713439941
    6. '_' → logprob: -7.793854713439941
    7. 'ars' → logprob: -11.168854713439941
    8. 'o' → logprob: -11.418854713439941
    9. '__' → logprob: -12.168854713439941
    10. 'rons' → logprob: -12.293854713439941

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23134106397628784
    2. ' =' → logprob: -1.6063411235809326
    3. '=' → logprob: -5.6063408851623535
    4. '[:]' → logprob: -6.7313408851623535
    5. ' ' → logprob: -8.481341361999512
    6. ']' → logprob: -8.731341361999512
    7. 'def' → logprob: -8.856341361999512
    8. '   ' → logprob: -9.106341361999512
    9. '<|end|>' → logprob: -9.356341361999512
    10. ' [' → logprob: -9.856341361999512

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44419243931770325
    2. '0' → logprob: -1.0691924095153809
    3. ' ' → logprob: -4.194192409515381
    4. ']' → logprob: -8.319192886352539
    5. 'i' → logprob: -11.069192886352539
    6. ' ]' → logprob: -11.444192886352539
    7. '-' → logprob: -12.819192886352539
    8. '2' → logprob: -12.944192886352539
    9. ')' → logprob: -12.944192886352539
    10. 's' → logprob: -13.444192886352539

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032385535538196564
    2. '=' → logprob: -3.7823855876922607
    3. ' ]' → logprob: -5.157385349273682
    4. ' =' → logprob: -6.282385349273682
    5. ']=' → logprob: -6.532385349273682
    6. ' ' → logprob: -11.28238582611084
    7. ')' → logprob: -13.65738582611084
    8. '[' → logprob: -14.65738582611084
    9. ']+=' → logprob: -14.78238582611084
    10. '-' → logprob: -15.15738582611084

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. '=int' → logprob: -15.035224914550781
    4. ' ' → logprob: -15.910224914550781
    5. ' +=' → logprob: -15.910224914550781
    6. ',' → logprob: -16.41022491455078
    7. ' =)' → logprob: -17.16022491455078
    8. '0' → logprob: -17.53522491455078
    9. '=}' → logprob: -17.66022491455078
    10. ')' → logprob: -17.78522491455078

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017598653212189674
    2. '2' → logprob: -4.642598628997803
    3. '0' → logprob: -5.392598628997803
    4. '3' → logprob: -6.517598628997803
    5. '4' → logprob: -7.142598628997803
    6. ' ' → logprob: -7.767598628997803
    7. '6' → logprob: -9.017599105834961
    8. '5' → logprob: -9.267599105834961
    9. '10' → logprob: -9.705099105834961
    10. '9' → logprob: -10.017599105834961

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009525509551167488
    2. '2' → logprob: -5.134525299072266
    3. '0' → logprob: -6.384525299072266
    4. '3' → logprob: -7.509525299072266
    5. '4' → logprob: -7.509525299072266
    6. ' ' → logprob: -8.134525299072266
    7. '6' → logprob: -9.447025299072266
    8. '10' → logprob: -9.572025299072266
    9. '5' → logprob: -9.634525299072266
    10. '9' → logprob: -9.759525299072266

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.001309871673584
    2. '0' → logprob: -2.251309871673584
    3. ' for' → logprob: -2.251309871673584
    4. '   ' → logprob: -2.251309871673584
    5. ' max' → logprob: -2.876309871673584
    6. '2' → logprob: -3.126309871673584
    7. ' ' → logprob: -3.251309871673584
    8. ' 
' → logprob: -3.376309871673584
    9. 'for' → logprob: -3.501309871673584
    10. '7' → logprob: -3.501309871673584

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42562076449394226
    2. '   ' → logprob: -1.6756207942962646
    3. ' for' → logprob: -2.8006207942962646
    4. '0' → logprob: -3.8006207942962646
    5. '2' → logprob: -3.8006207942962646
    6. '<|end|>' → logprob: -4.3006205558776855
    7. 'for' → logprob: -4.4256205558776855
    8. ' 
' → logprob: -5.4256205558776855
    9. '4' → logprob: -5.5506205558776855
    10. ' ' → logprob: -5.6756205558776855

Token 50: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5565741658210754
    2. 'for' (adapté à ' for') → logprob: -1.4315741062164307
    3. '   ' → logprob: -1.6815741062164307
    4. '
' → logprob: -7.05657434463501
    5. ' ' → logprob: -7.80657434463501
    6. ')' → logprob: -8.931573867797852
    7. '  ' → logprob: -9.556573867797852
    8. ' max' → logprob: -9.806573867797852
    9. ',' → logprob: -10.556573867797852
    10. '	for' → logprob: -10.556573867797852

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005463317036628723
    2. ' chain' → logprob: -6.380463123321533
    3. 'i' → logprob: -6.880463123321533
    4. ' ' → logprob: -7.005463123321533
    5. ' n' → logprob: -7.255463123321533
    6. ' length' → logprob: -7.255463123321533
    7. ' l' → logprob: -8.005463600158691
    8. ' _' → logprob: -10.755463600158691
    9. ' c' → logprob: -11.630463600158691
    10. 'n' → logprob: -11.755463600158691

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015233141602948308
    2. 'in' → logprob: -6.751523494720459
    3. ' ' → logprob: -8.0015230178833
    4. '	in' → logprob: -11.7515230178833
    5. ',' → logprob: -12.5015230178833
    6. '  ' → logprob: -13.1265230178833
    7. ' i' → logprob: -14.1265230178833
    8. '```' → logprob: -14.7515230178833
    9. 'range' → logprob: -15.1265230178833
    10. ' ' → logprob: -15.2515230178833

Token 53: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002493375912308693
    2. 'range' → logprob: -6.002493381500244
    3. ' ' → logprob: -11.002492904663086
    4. '(range' → logprob: -15.252492904663086
    5. '	range' → logprob: -15.252492904663086
    6. '   ' → logprob: -15.752492904663086
    7. ' xrange' → logprob: -15.877492904663086
    8. '[' → logprob: -15.877492904663086
    9. '  ' → logprob: -16.252492904663086
    10. '2' → logprob: -18.127492904663086

Token 54: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.584861744660884e-05
    2. ' (' → logprob: -10.750045776367188
    3. ' ' → logprob: -10.875045776367188
    4. '2' → logprob: -12.250045776367188
    5. '1' → logprob: -15.000045776367188
    6. '[' → logprob: -15.625045776367188
    7. '<|end|>' → logprob: -17.125045776367188
    8. '   ' → logprob: -17.500045776367188
    9. '(i' → logprob: -17.625045776367188
    10. '(
' → logprob: -18.375045776367188

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00609315000474453
    2. ' ' → logprob: -5.1310930252075195
    3. '1' → logprob: -8.75609302520752
    4. ')' → logprob: -12.88109302520752
    5. '   ' → logprob: -13.00609302520752
    6. '(' → logprob: -14.56859302520752
    7. '  ' → logprob: -14.88109302520752
    8. '```' → logprob: -15.25609302520752
    9. '
' → logprob: -15.44359302520752
    10. ' )' → logprob: -15.56859302520752

Token 56: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41673246026039124
    2. ' ):' → logprob: -1.4167324304580688
    3. ',' → logprob: -2.7917325496673584
    4. '):
' → logprob: -3.7917325496673584
    5. ' ,' → logprob: -4.791732311248779
    6. ' ):
' → logprob: -5.166732311248779
    7. ':' → logprob: -8.916732788085938
    8. '   ' → logprob: -9.166732788085938
    9. ' ' → logprob: -9.541732788085938
    10. ')' → logprob: -11.041732788085938

Token 57: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.005236598663032055
    2. ' ' → logprob: -5.255236625671387
    3. '   ' → logprob: -13.005236625671387
    4. '  ' → logprob: -15.630236625671387
    5. '    ' → logprob: -15.880236625671387
    6. '```' → logprob: -16.38023567199707
    7. ')' → logprob: -16.50523567199707
    8. '30' → logprob: -16.75523567199707
    9. ' ' → logprob: -19.06773567199707
    10. '3' → logprob: -19.06773567199707

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011132119223475456
    2. '):
' → logprob: -4.51113224029541
    3. ':' → logprob: -10.13613224029541
    4. ' ):' → logprob: -10.38613224029541
    5. ')' → logprob: -12.01113224029541
    6. ']:' → logprob: -12.88613224029541
    7. '   ' → logprob: -13.01113224029541
    8. '):
' → logprob: -14.01113224029541
    9. '}:' → logprob: -14.38613224029541
    10. ' ):
' → logprob: -14.88613224029541

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020506936125457287
    2. ' max' → logprob: -6.627050876617432
    3. 'max' → logprob: -8.627050399780273
    4. '   ' → logprob: -8.752050399780273
    5. '<|end|>' → logprob: -9.002050399780273
    6. '
' → logprob: -9.877050399780273
    7. ',' → logprob: -10.252050399780273
    8. '```' → logprob: -10.502050399780273
    9. ':' → logprob: -10.627050399780273
    10. ')' → logprob: -10.877050399780273

Token 60: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.49885329604148865
    2. ' max' → logprob: -1.248853325843811
    3. '   ' → logprob: -2.2488532066345215
    4. '       ' → logprob: -8.49885368347168
    5. '	max' → logprob: -9.37385368347168
    6. ' ' → logprob: -9.99885368347168
    7. '
' → logprob: -10.37385368347168
    8. '```' → logprob: -11.49885368347168
    9. '_max' → logprob: -11.87385368347168
    10. '  ' → logprob: -12.12385368347168

Token 61: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. ' _' → logprob: -15.125004768371582
    4. '_car' → logprob: -15.875004768371582
    5. '_max' → logprob: -17.0000057220459
    6. ')_' → logprob: -17.7500057220459
    7. '```' → logprob: -18.1250057220459
    8. '_s' → logprob: -18.1250057220459
    9. '_b' → logprob: -18.3750057220459
    10. '._' → logprob: -18.3750057220459

Token 62: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.020597364753484726
    2. 'ar' → logprob: -3.895597457885742
    3. 'car' → logprob: -11.270597457885742
    4. 'arc' → logprob: -11.520597457885742
    5. 'a' → logprob: -11.770597457885742
    6. '_c' → logprob: -12.395597457885742
    7. 'rb' → logprob: -12.895597457885742
    8. 'арб' → logprob: -12.895597457885742
    9. 'arp' → logprob: -13.145597457885742
    10. 'ab' → logprob: -13.645597457885742

Token 63: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00035119339008815587
    2. 'on' → logprob: -8.375350952148438
    3. 'bons' → logprob: -9.375350952148438
    4. '_' → logprob: -10.750350952148438
    5. 'онс' → logprob: -13.125350952148438
    6. 'o' → logprob: -13.500350952148438
    7. 'tons' → logprob: -13.875350952148438
    8. '[' → logprob: -14.000350952148438
    9. '   ' → logprob: -14.125350952148438
    10. '__' → logprob: -14.375350952148438

Token 64: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6680925488471985
    2. '=' → logprob: -1.0430924892425537
    3. '[i' → logprob: -2.0430924892425537
    4. '[' → logprob: -5.668092727661133
    5. '=max' → logprob: -6.793092727661133
    6. '=i' → logprob: -7.668092727661133
    7. ')' → logprob: -9.543092727661133
    8. ']' → logprob: -9.668092727661133
    9. 'max' → logprob: -9.918092727661133
    10. ' +=' → logprob: -10.918092727661133

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006874137907288969
    2. ' ]' → logprob: -7.875687599182129
    3. ']=' → logprob: -8.250687599182129
    4. ' =' → logprob: -10.500687599182129
    5. ')' → logprob: -11.625687599182129
    6. '=' → logprob: -12.250687599182129
    7. '-' → logprob: -12.875687599182129
    8. ']=(' → logprob: -14.500687599182129
    9. ' -' → logprob: -14.750687599182129
    10. ' ' → logprob: -14.750687599182129

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022822767496109
    2. '=' → logprob: -2.3502283096313477
    3. '=max' → logprob: -10.850228309631348
    4. ' +=' → logprob: -14.475228309631348
    5. '=i' → logprob: -15.225228309631348
    6. 'max' → logprob: -15.475228309631348
    7. '=int' → logprob: -15.725228309631348
    8. ' ' → logprob: -15.725228309631348
    9. '=

' → logprob: -16.10022735595703
    10. '   ' → logprob: -16.35022735595703

Token 67: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4486960172653198
    2. 'max' → logprob: -1.0736960172653198
    3. '2' → logprob: -4.448696136474609
    4. ' i' → logprob: -6.073696136474609
    5. ' ' → logprob: -6.073696136474609
    6. 'i' → logprob: -6.698696136474609
    7. '3' → logprob: -7.073696136474609
    8. '1' → logprob: -7.823696136474609
    9. ' (' → logprob: -8.63619613647461
    10. '6' → logprob: -9.07369613647461

Token 68: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0014598811976611614
    2. '(max' → logprob: -7.001460075378418
    3. '(' → logprob: -7.626460075378418
    4. '_' → logprob: -10.626460075378418
    5. '(i' → logprob: -11.501460075378418
    6. '(_' → logprob: -11.626460075378418
    7. '```' → logprob: -12.501460075378418
    8. '_(' → logprob: -12.751460075378418
    9. '_car' → logprob: -13.376460075378418
    10. 'max' → logprob: -13.751460075378418

Token 69: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.5542937517166138
    2. '_c' → logprob: -0.9292937517166138
    3. 'ar' → logprob: -3.804293632507324
    4. 'max' → logprob: -5.304293632507324
    5. '_' → logprob: -7.054293632507324
    6. '(max' → logprob: -7.429293632507324
    7. 'car' → logprob: -8.054293632507324
    8. '(' → logprob: -9.054293632507324
    9. '_b' → logprob: -9.179293632507324
    10. 'a' → logprob: -9.304293632507324

Token 70: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0030922740697860718
    2. 'on' → logprob: -6.128092288970947
    3. 'bons' → logprob: -7.503092288970947
    4. 'tons' → logprob: -10.128091812133789
    5. '   ' → logprob: -10.378091812133789
    6. 'ones' → logprob: -10.503091812133789
    7. 'o' → logprob: -10.628091812133789
    8. '[' → logprob: -10.628091812133789
    9. '_' → logprob: -10.878091812133789
    10. 'ars' → logprob: -11.315591812133789

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.375012397766113
    3. '```' → logprob: -15.125012397766113
    4. 'i' → logprob: -15.375012397766113
    5. ' [' → logprob: -15.875012397766113
    6. '[
' → logprob: -17.500011444091797
    7. '`' → logprob: -18.250011444091797
    8. '(i' → logprob: -18.375011444091797
    9. '[I' → logprob: -18.375011444091797
    10. '\[' → logprob: -18.750011444091797

Token 72: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031106919050216675
    2. '[i' → logprob: -6.253110885620117
    3. ' -' → logprob: -6.753110885620117
    4. '[-' → logprob: -11.753110885620117
    5. '-i' → logprob: -13.128110885620117
    6. 'i' → logprob: -13.128110885620117
    7. '[' → logprob: -14.003110885620117
    8. '```' → logprob: -14.878110885620117
    9. '   ' → logprob: -15.503110885620117
    10. '-
' → logprob: -15.878110885620117

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007435183506458998
    2. '2' → logprob: -7.375743389129639
    3. ' ' → logprob: -9.250743865966797
    4. '3' → logprob: -12.250743865966797
    5. ')' → logprob: -13.000743865966797
    6. ']' → logprob: -13.563243865966797
    7. '   ' → logprob: -13.625743865966797
    8. 'i' → logprob: -13.875743865966797
    9. '

' → logprob: -13.938243865966797
    10. '```' → logprob: -14.000743865966797

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37652698159217834
    2. ')' → logprob: -2.2515270709991455
    3. ' +' → logprob: -2.5015270709991455
    4. '+' → logprob: -2.6265270709991455
    5. '*' → logprob: -3.7515270709991455
    6. ']+' → logprob: -3.8765270709991455
    7. ' *' → logprob: -6.001526832580566
    8. '}' → logprob: -6.376526832580566
    9. ')+' → logprob: -6.501526832580566
    10. ']*' → logprob: -7.251526832580566

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39526209235191345
    2. '+' → logprob: -1.1452621221542358
    3. '*' → logprob: -5.020262241363525
    4. ' *' → logprob: -6.395262241363525
    5. '+i' → logprob: -10.395261764526367
    6. ' plus' → logprob: -11.270261764526367
    7. '```' → logprob: -12.082761764526367
    8. ' ' → logprob: -12.082761764526367
    9. ' ' → logprob: -12.645261764526367
    10. '1' → logprob: -12.895261764526367

Token 76: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2596832811832428
    2. ' i' → logprob: -1.8846832513809204
    3. '2' → logprob: -4.259683132171631
    4. 'max' → logprob: -4.384683132171631
    5. '(i' → logprob: -4.509683132171631
    6. ' (' → logprob: -4.884683132171631
    7. ' ' → logprob: -5.009683132171631
    8. '3' → logprob: -5.009683132171631
    9. '6' → logprob: -5.259683132171631
    10. ' max' → logprob: -5.259683132171631

Token 77: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09453520178794861
    2. '2' → logprob: -3.7195351123809814
    3. '3' → logprob: -3.9695351123809814
    4. '(i' → logprob: -4.7195353507995605
    5. '6' → logprob: -4.8445353507995605
    6. '(' → logprob: -4.8445353507995605
    7. ' i' → logprob: -4.9695353507995605
    8. '1' → logprob: -5.4695353507995605
    9. 'max' → logprob: -5.7195353507995605
    10. '4' → logprob: -5.7195353507995605

Token 78: '*(' (ID: 14793)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.32157817482948303
    2. ' *' → logprob: -2.07157826423645
    3. '<|end|>' → logprob: -2.44657826423645
    4. '*' → logprob: -4.071578025817871
    5. '**' → logprob: -4.321578025817871
    6. ' +' → logprob: -4.571578025817871
    7. '
' → logprob: -5.071578025817871
    8. '*(' → logprob: -5.321578025817871
    9. '+' → logprob: -5.696578025817871
    10. ' ' → logprob: -5.946578025817871

Token 79: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27854764461517334
    2. '(i' → logprob: -1.5285476446151733
    3. ' (' → logprob: -4.528547763824463
    4. ' i' → logprob: -4.778547763824463
    5. '(' → logprob: -5.278547763824463
    6. 'max' → logprob: -7.028547763824463
    7. '(max' → logprob: -8.403547286987305
    8. ')' → logprob: -8.653547286987305
    9. ' ' → logprob: -8.903547286987305
    10. ' max' → logprob: -8.903547286987305

Token 80: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6108593940734863
    2. '-' → logprob: -0.8608593940734863
    3. ')' → logprob: -3.4858593940734863
    4. ' )' → logprob: -5.735859394073486
    5. ')-' → logprob: -8.235858917236328
    6. ' ' → logprob: -9.235858917236328
    7. '-)' → logprob: -11.235858917236328
    8. '+' → logprob: -11.235858917236328
    9. '   ' → logprob: -11.735858917236328
    10. ' +' → logprob: -11.923358917236328

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048286578385159373
    2. ' ' → logprob: -8.250482559204102
    3. '2' → logprob: -9.125482559204102
    4. ')' → logprob: -9.750482559204102
    5. '-' → logprob: -10.375482559204102
    6. 'i' → logprob: -12.125482559204102
    7. ' -' → logprob: -12.250482559204102
    8. '<|end|>' → logprob: -12.375482559204102
    9. '   ' → logprob: -13.500482559204102
    10. '3' → logprob: -13.500482559204102

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023670511320233345
    2. '-' → logprob: -4.148670673370361
    3. ' )' → logprob: -5.148670673370361
    4. ' -' → logprob: -6.398670673370361
    5. ')-' → logprob: -10.023670196533203
    6. '   ' → logprob: -10.648670196533203
    7. ' ' → logprob: -11.023670196533203
    8. '-)' → logprob: -11.148670196533203
    9. ')+' → logprob: -11.648670196533203
    10. '+' → logprob: -12.148670196533203

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3803863525390625
    2. '<|end|>' → logprob: -1.7553863525390625
    3. '   ' → logprob: -2.6303863525390625
    4. '\n' → logprob: -3.2553863525390625
    5. ' 
' → logprob: -4.5053863525390625
    6. ' ' → logprob: -5.1303863525390625
    7. '  
' → logprob: -5.7553863525390625
    8. '```' → logprob: -5.8803863525390625
    9. '    
' → logprob: -6.0053863525390625
    10. '#' → logprob: -6.7553863525390625

Token 84: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15215259790420532
    2. '   ' → logprob: -2.6521525382995605
    3. '<|end|>' → logprob: -2.9021525382995605
    4. '    
' → logprob: -5.4021525382995605
    5. ' 
' → logprob: -5.7771525382995605
    6. '```' → logprob: -6.5271525382995605
    7. '  
' → logprob: -6.6521525382995605
    8. '\n' → logprob: -6.7771525382995605
    9. '#' → logprob: -7.0271525382995605
    10. ' ' → logprob: -7.1521525382995605

Token 85: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3029533326625824
    2. ' ' → logprob: -1.8029533624649048
    3. ' chain' → logprob: -3.3029532432556152
    4. ' n' → logprob: -3.9279532432556152
    5. ' l' → logprob: -4.177953243255615
    6. ' length' → logprob: -4.302953243255615
    7. ' c' → logprob: -5.302953243255615
    8. ' carbon' → logprob: -6.427953243255615
    9. ' _' → logprob: -6.677953243255615
    10. 'i' → logprob: -7.052953243255615

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010104290209710598
    2. ' ' → logprob: -5.510104179382324
    3. 'in' → logprob: -5.635104179382324
    4. ' =' → logprob: -6.260104179382324
    5. ' i' → logprob: -8.510104179382324
    6. ':' → logprob: -9.885104179382324
    7. '<|end|>' → logprob: -9.885104179382324
    8. ',' → logprob: -10.385104179382324
    9. '  ' → logprob: -10.510104179382324
    10. '=' → logprob: -10.635104179382324

Token 87: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.016049150377511978
    2. 'sys' → logprob: -4.141049385070801
    3. '=sys' → logprob: -11.8910493850708
    4. '	sys' → logprob: -12.5160493850708
    5. '(sys' → logprob: -12.6410493850708
    6. ' ' → logprob: -14.2660493850708
    7. ' iter' → logprob: -15.3910493850708
    8. ' input' → logprob: -16.641048431396484
    9. 'stdin' → logprob: -16.891048431396484
    10. ' stdin' → logprob: -17.391048431396484

Token 88: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.014963915571570396
    2. '.' → logprob: -4.2649641036987305
    3. 'stdin' → logprob: -7.8899641036987305
    4. ' .' → logprob: -8.51496410369873
    5. '.readline' → logprob: -8.76496410369873
    6. ' stdin' → logprob: -10.88996410369873
    7. '.stdout' → logprob: -11.76496410369873
    8. '(stdin' → logprob: -11.88996410369873
    9. '.argv' → logprob: -12.38996410369873
    10. '._' → logprob: -12.38996410369873

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008105786982923746
    2. '.readline' → logprob: -7.375810623168945
    3. '.strip' → logprob: -9.875810623168945
    4. ':
' → logprob: -10.000810623168945
    5. ' :' → logprob: -10.500810623168945
    6. '.' → logprob: -10.875810623168945
    7. '.readlines' → logprob: -11.500810623168945
    8. '):' → logprob: -11.625810623168945
    9. '.rstrip' → logprob: -11.750810623168945
    10. ':**' → logprob: -12.750810623168945

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005779238883405924
    2. '   ' → logprob: -6.630779266357422
    3. '    ' → logprob: -6.755779266357422
    4. ' ' → logprob: -6.755779266357422
    5. '<|end|>' → logprob: -7.005779266357422
    6. '        
' → logprob: -7.630779266357422
    7. '        ' → logprob: -8.255779266357422
    8. '    
' → logprob: -9.130779266357422
    9. '<|end|>' → logprob: -9.880779266357422
    10. '     ' → logprob: -9.880779266357422

Token 91: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.33426782488822937
    2. '       ' → logprob: -2.0842678546905518
    3. ' n' → logprob: -2.5842678546905518
    4. ' s' → logprob: -3.0842678546905518
    5. '   ' → logprob: -5.084267616271973
    6. '    ' → logprob: -5.084267616271973
    7. ' input' → logprob: -5.459267616271973
    8. ' ' → logprob: -5.584267616271973
    9. ' tokens' → logprob: -5.834267616271973
    10. ' if' → logprob: -6.084267616271973

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023319896310567856
    2. '=' → logprob: -3.773319959640503
    3. ' ' → logprob: -10.023320198059082
    4. '=int' → logprob: -11.273320198059082
    5. ' =
' → logprob: -11.523320198059082
    6. ',' → logprob: -12.023320198059082
    7. ')' → logprob: -14.648320198059082
    8. ' =
' → logprob: -15.523320198059082
    9. ' ,' → logprob: -15.773320198059082
    10. '=line' → logprob: -15.898320198059082

Token 93: ' line' (ID: 2543)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3869086802005768
    2. 'int' → logprob: -1.1369086503982544
    3. ' line' → logprob: -11.511908531188965
    4. ' ' → logprob: -11.636908531188965
    5. '=int' → logprob: -11.761908531188965
    6. 'line' → logprob: -12.386908531188965
    7. 'len' → logprob: -13.011908531188965
    8. ' len' → logprob: -13.261908531188965
    9. '(int' → logprob: -13.886908531188965
    10. '   ' → logprob: -14.761908531188965

Token 94: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.13107477128505707
    2. '.' → logprob: -2.2560746669769287
    3. '.rstrip' → logprob: -4.131074905395508
    4. '.split' → logprob: -6.756074905395508
    5. '.readline' → logprob: -8.381074905395508
    6. 'strip' → logprob: -8.756074905395508
    7. ' .' → logprob: -9.006074905395508
    8. '<|end|>' → logprob: -9.006074905395508
    9. ')' → logprob: -9.881074905395508
    10. 'rstrip' → logprob: -10.131074905395508

Token 95: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10965340584516525
    2. '(' → logprob: -2.6096534729003906
    3. '().' → logprob: -3.7346534729003906
    4. '('' → logprob: -5.234653472900391
    5. '("("' → logprob: -7.484653472900391
    6. '().'' → logprob: -9.48465347290039
    7. '("' → logprob: -9.98465347290039
    8. ''' → logprob: -10.10965347290039
    9. '()='' → logprob: -10.23465347290039
    10. '"' → logprob: -10.23465347290039

Token 96: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16298051178455353
    2. 'if' (adapté à ' if') → logprob: -1.912980556488037
    3. ' ' → logprob: -6.037980556488037
    4. ' i' → logprob: -9.037980079650879
    5. 'n' → logprob: -9.287980079650879
    6. ' n' → logprob: -9.537980079650879
    7. ' 
' → logprob: -10.412980079650879
    8. 'i' → logprob: -10.787980079650879
    9. '       ' → logprob: -11.412980079650879
    10. '   ' → logprob: -12.537980079650879

Token 98: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6073375940322876
    2. ' n' → logprob: -0.8573375940322876
    3. ' ' → logprob: -3.482337474822998
    4. 'n' → logprob: -9.607337951660156
    5. 'not' → logprob: -9.982337951660156
    6. ' len' → logprob: -10.607337951660156
    7. ' n't' → logprob: -10.857337951660156
    8. ' ' → logprob: -11.232337951660156
    9. '	n' → logprob: -14.107337951660156
    10. '	not' → logprob: -14.732337951660156

Token 99: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0001334559783572331
    2. 'n' → logprob: -9.125133514404297
    3. ' ' → logprob: -10.625133514404297
    4. '<|end|>' → logprob: -15.875133514404297
    5. '	n' → logprob: -16.750133514404297
    6. ' ' → logprob: -16.875133514404297
    7. '_n' → logprob: -18.250133514404297
    8. ' line' → logprob: -19.250133514404297
    9. ' н' → logprob: -19.500133514404297
    10. ')n' → logprob: -19.625133514404297

Token 100: '.is' (ID: 3109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009228380396962166
    2. ' or' → logprob: -5.009228229522705
    3. ':
' → logprob: -6.134228229522705
    4. ' :' → logprob: -8.259228706359863
    5. '.' → logprob: -9.884228706359863
    6. ':return' → logprob: -11.134228706359863
    7. ' .' → logprob: -12.134228706359863
    8. ':

' → logprob: -13.009228706359863
    9. '.is' → logprob: -13.384228706359863
    10. '.startswith' → logprob: -13.384228706359863

Token 101: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0012172595597803593
    2. 'decimal' → logprob: -6.751217365264893
    3. 'numeric' → logprob: -10.126216888427734
    4. ' digit' → logprob: -12.626216888427734
    5. 'alpha' → logprob: -13.501216888427734
    6. 'al' → logprob: -13.626216888427734
    7. 'digits' → logprob: -14.626216888427734
    8. '_digit' → logprob: -15.501216888427734
    9. 'digital' → logprob: -15.751216888427734
    10. ' decimal' → logprob: -16.626216888427734

Token 102: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1273212432861328
    2. '()' → logprob: -2.127321243286133
    3. '():
' → logprob: -8.002321243286133
    4. '(' → logprob: -10.127321243286133
    5. ':' → logprob: -11.627321243286133
    6. ' ():' → logprob: -11.877321243286133
    7. ' ()' → logprob: -14.127321243286133
    8. '():

' → logprob: -14.502321243286133
    9. ' or' → logprob: -14.627321243286133
    10. 'or' → logprob: -14.877321243286133

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014991517178714275
    2. ' continue' → logprob: -4.264991283416748
    3. 'continue' → logprob: -7.389991283416748
    4. '       ' → logprob: -9.264991760253906
    5. '\n' → logprob: -10.264991760253906
    6. '
' → logprob: -11.764991760253906
    7. '		' → logprob: -11.889991760253906
    8. '\' → logprob: -11.889991760253906
    9. ' continues' → logprob: -11.889991760253906
    10. ':
' → logprob: -11.889991760253906

Token 104: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5445953607559204
    2. ' break' → logprob: -1.6695953607559204
    3. ' continue' → logprob: -2.169595241546631
    4. '           ' → logprob: -2.169595241546631
    5. 'continue' (adapté à ' continue') → logprob: -6.794595241546631
    6. 'break' → logprob: -7.169595241546631
    7. '               ' → logprob: -7.544595241546631
    8. '   ' → logprob: -8.169595718383789
    9. '	break' → logprob: -9.294595718383789
    10. ' ' → logprob: -9.419595718383789

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6044564843177795
    2. '<|end|>' → logprob: -0.8544564843177795
    3. '   ' → logprob: -4.354456424713135
    4. '        
' → logprob: -5.729456424713135
    5. '<|end|>' → logprob: -5.729456424713135
    6. '    
' → logprob: -5.729456424713135
    7. '
' → logprob: -6.479456424713135
    8. 'n' → logprob: -7.229456424713135
    9. '    ' → logprob: -7.479456424713135
    10. '  
' → logprob: -7.729456424713135

Token 107: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.030457468703389168
    2. 'n' (adapté à ' n') → logprob: -3.5304574966430664
    3. ' c' → logprob: -8.405457496643066
    4. ' 
' → logprob: -8.405457496643066
    5. ' ' → logprob: -9.030457496643066
    6. 'c' → logprob: -10.405457496643066
    7. '       ' → logprob: -10.530457496643066
    8. ' ' → logprob: -11.155457496643066
    9. '	n' → logprob: -11.155457496643066
    10. ' k' → logprob: -12.155457496643066

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012588057667016983
    2. '=' → logprob: -4.387588024139404
    3. '=int' → logprob: -9.637588500976562
    4. ' =
' → logprob: -12.012588500976562
    5. ' ' → logprob: -12.637588500976562
    6. '_int' → logprob: -13.637588500976562
    7. 'int' → logprob: -13.637588500976562
    8. '_num' → logprob: -15.012588500976562
    9. '_' → logprob: -15.387588500976562
    10. '_val' → logprob: -15.387588500976562

Token 109: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889022678136826
    2. 'int' → logprob: -2.578890323638916
    3. ' in' → logprob: -15.703889846801758
    4. '=int' → logprob: -15.953889846801758
    5. '[int' → logprob: -15.953889846801758
    6. '	int' → logprob: -16.328889846801758
    7. '(int' → logprob: -16.953889846801758
    8. '<int' → logprob: -17.328889846801758
    9. ']int' → logprob: -17.828889846801758
    10. ':int' → logprob: -18.078889846801758

Token 110: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.061970822513103485
    2. '(' → logprob: -2.8119707107543945
    3. '(
' → logprob: -13.561970710754395
    4. '()' → logprob: -14.061970710754395
    5. ' (' → logprob: -14.436970710754395
    6. ' ' → logprob: -15.811970710754395
    7. '(nn' → logprob: -16.93697166442871
    8. '("("' → logprob: -17.18697166442871
    9. ')' → logprob: -17.31197166442871
    10. '(

' → logprob: -17.31197166442871

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016054363222792745
    2. ' )' → logprob: -6.50160551071167
    3. ')
' → logprob: -9.251605033874512
    4. ' ' → logprob: -12.876605033874512
    5. ')`' → logprob: -13.501605033874512
    6. ' )
' → logprob: -13.876605033874512
    7. ')

' → logprob: -14.626605033874512
    8. '))' → logprob: -14.751605033874512
    9. '       ' → logprob: -15.001605033874512
    10. '   ' → logprob: -15.126605033874512

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004371375311166048
    2. '        
' → logprob: -5.879371166229248
    3. '   ' → logprob: -8.004371643066406
    4. ' ' → logprob: -8.004371643066406
    5. '<|end|>' → logprob: -8.004371643066406
    6. '        ' → logprob: -9.004371643066406
    7. '
' → logprob: -9.004371643066406
    8. ' 
' → logprob: -9.504371643066406
    9. '    ' → logprob: -10.004371643066406
    10. ' if' → logprob: -10.254371643066406

Token 113: ' print' (ID: 2123)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.3799309730529785
    2. ' chain' → logprob: -1.5049309730529785
    3. ' i' → logprob: -2.5049309730529785
    4. 'i' → logprob: -2.6299309730529785
    5. 'l' → logprob: -2.6299309730529785
    6. 'if' → logprob: -3.0049309730529785
    7. ' if' → logprob: -3.1299309730529785
    8. 'length' → logprob: -3.1299309730529785
    9. ' length' → logprob: -3.3799309730529785
    10. 'for' → logprob: -3.6299309730529785

Token 114: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1995248943567276
    2. '('' → logprob: -2.5745248794555664
    3. '(max' → logprob: -2.6995248794555664
    4. '("' → logprob: -3.4495248794555664
    5. '(next' → logprob: -6.324524879455566
    6. '([' → logprob: -6.574524879455566
    7. '(n' → logprob: -7.324524879455566
    8. '()' → logprob: -7.449524879455566
    9. '(sum' → logprob: -7.824524879455566
    10. '(f' → logprob: -8.699524879455566

Token 115: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.253090865968261e-06
    2. '_' → logprob: -12.375009536743164
    3. '_car' → logprob: -12.500009536743164
    4. ')_' → logprob: -14.375009536743164
    5. '_max' → logprob: -15.625009536743164
    6. ' _' → logprob: -15.875009536743164
    7. ')' → logprob: -15.875009536743164
    8. '```' → logprob: -16.875009536743164
    9. '_n' → logprob: -17.000009536743164
    10. '_s' → logprob: -17.625009536743164

Token 116: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.016159649938344955
    2. 'ar' → logprob: -4.141159534454346
    3. 'a' → logprob: -9.891160011291504
    4. 'арб' → logprob: -10.891160011291504
    5. 'car' → logprob: -11.141160011291504
    6. 'rb' → logprob: -11.891160011291504
    7. 'bon' → logprob: -12.266160011291504
    8. 'b' → logprob: -12.766160011291504
    9. 'arp' → logprob: -12.766160011291504
    10. 'ab' → logprob: -12.891160011291504

Token 117: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -1.1041145626222715e-05
    2. 'on' → logprob: -12.250011444091797
    3. 'bons' → logprob: -12.250011444091797
    4. '_' → logprob: -14.000011444091797
    5. '[' → logprob: -15.500011444091797
    6. 'онс' → logprob: -16.250011444091797
    7. 'o' → logprob: -17.375011444091797
    8. '   ' → logprob: -17.625011444091797
    9. 'ONS' → logprob: -17.625011444091797
    10. '`' → logprob: -17.625011444091797

Token 118: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0031888822559267282
    2. '[' → logprob: -5.8781890869140625
    3. '[min' → logprob: -8.253189086914062
    4. ')' → logprob: -10.253189086914062
    5. ' [' → logprob: -11.003189086914062
    6. ')[' → logprob: -11.253189086914062
    7. '[len' → logprob: -11.378189086914062
    8. '[
' → logprob: -11.503189086914062
    9. '.index' → logprob: -11.628189086914062
    10. ')n' → logprob: -12.128189086914062

Token 119: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004276534542441368
    2. ')' → logprob: -5.879276752471924
    3. ']' → logprob: -7.129276752471924
    4. ' ])' → logprob: -7.379276752471924
    5. ' )' → logprob: -11.504276275634766
    6. '))' → logprob: -11.879276275634766
    7. ')])' → logprob: -12.004276275634766
    8. '],' → logprob: -12.004276275634766
    9. '])
' → logprob: -12.379276275634766
    10. ']))' → logprob: -13.254276275634766

Token 120: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00012678056373260915
    2. '__' → logprob: -9.000126838684082
    3. '_' → logprob: -13.625126838684082
    4. ' ' → logprob: -13.750126838684082
    5. ' ' → logprob: -14.375126838684082
    6. ' _' → logprob: -15.500126838684082
    7. '_name' → logprob: -16.000125885009766
    8. ' ___' → logprob: -16.125125885009766
    9. 'name' → logprob: -17.750125885009766
    10. ' ' → logprob: -17.875125885009766

Token 122: 'name' (ID: 897)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00013512482109945267
    2. '==' → logprob: -9.00013542175293
    3. ' ==' → logprob: -11.75013542175293
    4. '_' → logprob: -13.50013542175293
    5. ' __' → logprob: -14.37513542175293
    6. '___' → logprob: -14.62513542175293
    7. '=="' → logprob: -14.62513542175293
    8. '__.__' → logprob: -14.87513542175293
    9. '____' → logprob: -15.75013542175293
    10. '__

' → logprob: -16.62513542175293

Token 124: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.39276525378227234
    2. '==' → logprob: -1.1427652835845947
    3. '=="' → logprob: -5.642765045166016
    4. '__' → logprob: -6.642765045166016
    5. '<|end|>' → logprob: -7.517765045166016
    6. '=='' → logprob: -8.642765045166016
    7. '"' → logprob: -9.267765045166016
    8. '=' → logprob: -9.392765045166016
    9. '[' → logprob: -10.642765045166016
    10. '===' → logprob: -11.142765045166016

Token 125: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007187459850683808
    2. ' __' → logprob: -7.250718593597412
    3. ' "__' → logprob: -12.75071907043457
    4. ''' → logprob: -12.87571907043457
    5. '_main' → logprob: -13.50071907043457
    6. '_' → logprob: -14.25071907043457
    7. 'main' → logprob: -14.75071907043457
    8. '"' → logprob: -14.87571907043457
    9. ' '__' → logprob: -15.00071907043457
    10. '___' → logprob: -15.62571907043457

Token 126: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.584239938296378e-06
    2. ' main' → logprob: -12.000007629394531
    3. 'ma' → logprob: -14.250007629394531
    4. 'm' → logprob: -14.500007629394531
    5. 'name' → logprob: -15.750007629394531
    6. '_main' → logprob: -16.62500762939453
    7. '	main' → logprob: -17.00000762939453
    8. 'mai' → logprob: -17.87500762939453
    9. 'built' → logprob: -19.25000762939453
    10. '(main' → logprob: -19.25000762939453

Token 127: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38707607984542847
    2. '__":
' → logprob: -1.1370761394500732
    3. '__:' → logprob: -9.012076377868652
    4. '__':
' → logprob: -10.387076377868652
    5. '__.' → logprob: -10.762076377868652
    6. '__["' → logprob: -11.012076377868652
    7. '_' → logprob: -11.637076377868652
    8. '__.__' → logprob: -13.137076377868652
    9. '__("' → logprob: -13.887076377868652
    10. '"' → logprob: -14.262076377868652

Token 128: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007734276819974184
    2. '	main' → logprob: -5.507734298706055
    3. '   ' → logprob: -6.132734298706055
    4. '<|end|>' → logprob: -7.007734298706055
    5. '    
' → logprob: -8.507734298706055
    6. ' 
' → logprob: -8.757734298706055
    7. 'main' → logprob: -9.757734298706055
    8. ' ' → logprob: -10.257734298706055
    9. '(main' → logprob: -10.632734298706055
    10. ' ' → logprob: -10.632734298706055

Token 129: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0001426346570951864
    2. 'main' (adapté à ' main') → logprob: -9.375143051147461
    3. '	main' → logprob: -9.875143051147461
    4. ' ' → logprob: -12.250143051147461
    5. '_main' → logprob: -14.250143051147461
    6. ' mains' → logprob: -15.125143051147461
    7. '(main' → logprob: -15.375143051147461
    8. ' ma' → logprob: -15.750143051147461
    9. '<|end|>' → logprob: -16.62514305114746
    10. ' m' → logprob: -16.87514305114746

Token 130: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007289757952094078
    2. '(' → logprob: -5.007289886474609
    3. '()
' → logprob: -7.632289886474609
    4. '
' → logprob: -10.50728988647461
    5. '(
' → logprob: -10.50728988647461
    6. '<|end|>' → logprob: -11.38228988647461
    7. '```' → logprob: -11.75728988647461
    8. '()

' → logprob: -12.50728988647461
    9. ' ()' → logprob: -12.88228988647461
    10. '()\' → logprob: -13.00728988647461


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 128
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 106
Précision stricte (1ère position): 57.81%
Précision adaptée (1ère position): 58.59%
Précision (top 10): 82.81%
================================================================================
