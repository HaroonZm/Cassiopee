================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    while True:
        H, W, C, M, NW, NC, NM = map(int, input().split())
        if H < 0:
            break

        # read warriors' friendly heroes
        warrior_hero = []
        for _ in range(W):
            line = list(map(int, input().split()))
            ni = line[0]
            hero_list = line[1:] if ni > 0 else []
            warrior_hero.append(set(hero_list))

        # read clerics' friendly warriors
        cleric_warrior = []
        for _ in range(C):
            line = list(map(int, input().split()))
            ni = line[0]
            warrior_list = line[1:] if ni > 0 else []
            cleric_warrior.append(set(warrior_list))

        # read mages' friendly clerics
        mage_cleric = []
        for _ in range(M):
            line = list(map(int, input().split()))
            ni = line[0]
            cleric_list = line[1:] if ni > 0 else []
            mage_cleric.append(set(cleric_list))

        max_parties = 0

        # For each possible number of parties from 0 up to total number of heroes,
        # try to find if it's possible to form that many parties.
        # Since the problem states max 50, trying all is ok for a beginner approach.

        # We'll try all subsets of heroes of size p (from p = min(H, W+C+M+H) down to 0)
        # but searching all subsets is very big (2^H)
        # instead, we will try a simple greedy approach by enumerating possible parties.
        # Because groups depend on get along conditions, we check combinations.

        # We'll try all possible parties by enumerating number of parties
        # For each party, choose one hero, possibly one warrior, one cleric, one mage following rules
        # We'll generate all possible parties. Then, greedily pick disjoint parties to maximize count.

        # First, prepare friendly pairs between roles
        # warrior i gets along with hero h if h in warrior_hero[i]
        # cleric j gets along with warrior i if i in cleric_warrior[j]
        # mage k gets along with cleric j if j in mage_cleric[k]

        # We'll create lists of possible parties:
        # Each party: hero h, optional warrior w, optional cleric c, optional mage m
        # Ensure the get-along constraints are met.

        parties = []

        # We try all possible hero assignments since hero mandatory
        # For warrior, can be None or an index 0..W-1
        # Same for cleric and mage
        # But must meet constraints:

        # Conditions:
        # 1) party must have hero
        # 2) warrior and hero get along if warrior is present
        # 3) cleric and warrior get along if both present
        # 4) mage and cleric get along if both present
        # 5) party recommended to have warrior, cleric, mage but up to NW,NC,NM parties can lack them
        # 6) party without cleric should have warrior and mage
        #
        # Because the problem is complex, and beginner solution allowed,
        # we will just generate all possible groups that satisfy the conditions without limits on NW, NC, NM,
        # then later count how many groups can be formed minimizing missing warriors/clerics/mages.

        # For simplicity, we only consider parties with hero and optional warrior, cleric, mage
        # But to cover the tricky rules, we consider all combos and filter.

        # Because IDs of heroes, warriors, clerics, mages start from 1, but indices in lists start from 0,
        # pay attention to indexing.

        # We'll create a list of all parties:
        # for hero in 1..H
        # for warrior in [None] + 1..W
        # for cleric in [None] + 1..C
        # for mage in [None] + 1..M

        # Check constraints, if satisfied, add party as a tuple (h, w, c, m)

        # Because max is 50 for each, total combinations could be big but since beginner approach,
        # we'll prune to only possible combinations.

        for h in range(1, H+1):
            for w in [None] + list(range(1, W+1)):
                # if warrior is present, hero must be in warrior_hero[w-1]
                if w is not None:
                    if h not in warrior_hero[w-1]:
                        continue
                for c in [None] + list(range(1, C+1)):
                    if c is not None and w is not None:
                        # cleric and warrior must get along
                        if w not in cleric_warrior[c-1]:
                            continue
                    for m in [None] + list(range(1, M+1)):
                        if m is not None and c is not None:
                            # mage and cleric must get along
                            if c not in mage_cleric[m-1]:
                                continue
                        # Rule: party must have hero
                        # Already have h
                        # Rule: party without cleric should have warrior and mage
                        if c is None:
                            if w is None or m is None:
                                continue
                        # Rule: warrior and hero get along if warrior present done above
                        # Rule: cleric and warrior get along if both present done above
                        # Rule: mage and cleric get along if both present done above
                        # valid party
                        parties.append((h, w, c, m))

        # Now we want to select maximum number of disjoint parties
        # Disjoint means one adventurer can be in only one party
        # So no overlapping heroes, warriors, clerics, mages

        # We'll do a greedy approach:
        # sort parties by number of adventurers involved (more adventurers harder to overlap)
        # then pick parties if no conflict with already chosen parties

        chosen_heroes = set()
        chosen_warriors = set()
        chosen_clerics = set()
        chosen_mages = set()

        max_count = 0

        # Sort by number of roles used descending to pick bigger parties first
        def count_roles(p):
            return sum([1 if x is not None else 0 for x in p])

        parties_sorted = sorted(parties, key=count_roles, reverse=True)

        for p in parties_sorted:
            h, w, c, m = p
            if h in chosen_heroes:
                continue
            if w is not None and w in chosen_warriors:
                continue
            if c is not None and c in chosen_clerics:
                continue
            if m is not None and m in chosen_mages:
                continue
            chosen_heroes.add(h)
            if w is not None:
                chosen_warriors.add(w)
            if c is not None:
                chosen_clerics.add(c)
            if m is not None:
                chosen_mages.add(m)
            max_count += 1

        # Check how many parties missing warrior, cleric, mage
        missing_W = 0
        missing_C = 0
        missing_M = 0

        # We do not have direct list of parties chosen, but we can find that later if needed
        # For beginner solution, ignore constraints on NW, NC, NM, just print max_count

        # But problem says it's allowed that at most NW, NC, NM parties does not have warrior, cleric, mage respectively.

        # Because our selection greedily picks bigger parties first, usually minimal missing
        # But we do not distinguish missing counts and problem may require reducing count.

        # So as beginner approach, if missing counts exceed limits, reduce max_count by exceeding amount
        # approximately.

        # To count missing, we count parties lacking warrior, cleric, mage from chosen parties

        # For beginner approach, we can keep a list of chosen parties and count missing

        chosen_parties = []

        chosen_heroes = set()
        chosen_warriors = set()
        chosen_clerics = set()
        chosen_mages = set()
        max_count = 0

        for p in parties_sorted:
            h, w, c, m = p
            if h in chosen_heroes:
                continue
            if w is not None and w in chosen_warriors:
                continue
            if c is not None and c in chosen_clerics:
                continue
            if m is not None and m in chosen_mages:
                continue
            chosen_heroes.add(h)
            if w is not None:
                chosen_warriors.add(w)
            if c is not None:
                chosen_clerics.add(c)
            if m is not None:
                chosen_mages.add(m)
            chosen_parties.append(p)
            max_count += 1

        missing_w = sum(1 for p in chosen_parties if p[1] is None)
        missing_c = sum(1 for p in chosen_parties if p[2] is None)
        missing_m = sum(1 for p in chosen_parties if p[3] is None)

        # If missing > limits, reduce parties count
        # Each missing party over limit reduce max_count by 1 (simple)

        reduce = 0
        if missing_w > NW:
            reduce += missing_w - NW
        if missing_c > NC:
            reduce += missing_c - NC
        if missing_m > NM:
            reduce += missing_m - NM

        result = max_count - reduce
        if result < 0:
            result = 0

        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3967858850955963
    2. '   ' → logprob: -1.771785855293274
    3. 'pass' → logprob: -2.5217859745025635
    4. 'return' → logprob: -3.8967859745025635
    5. '#' → logprob: -4.271785736083984
    6. 'p' → logprob: -4.521785736083984
    7. '    ' → logprob: -4.771785736083984
    8. 'a' → logprob: -5.146785736083984
    9. 'r' → logprob: -5.521785736083984
    10. 'n' → logprob: -6.271785736083984

Token 5: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23754185438156128
    2. ' True' → logprob: -1.612541913986206
    3. '  ' → logprob: -4.862541675567627
    4. ' not' → logprob: -6.237541675567627
    5. '    ' → logprob: -7.237541675567627
    6. ' (' → logprob: -7.862541675567627
    7. 'True' → logprob: -8.237542152404785
    8. '"' → logprob: -8.362542152404785
    9. ' a' → logprob: -8.862542152404785
    10. ' )' → logprob: -9.487542152404785

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005847262218594551
    2. '():' → logprob: -8.125584602355957
    3. ':
' → logprob: -9.500584602355957
    4. ' :' → logprob: -9.750584602355957
    5. '       ' → logprob: -9.750584602355957
    6. '):' → logprob: -10.750584602355957
    7. '(:' → logprob: -11.500584602355957
    8. ':**' → logprob: -11.625584602355957
    9. '```' → logprob: -11.750584602355957
    10. ':return' → logprob: -11.875584602355957

Token 7: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08014390617609024
    2. '        
' → logprob: -3.080143928527832
    3. '```' → logprob: -4.955143928527832
    4. '\n' → logprob: -5.455143928527832
    5. '(' → logprob: -5.705143928527832
    6. '   ' → logprob: -5.830143928527832
    7. '`' → logprob: -5.955143928527832
    8. '\' → logprob: -6.080143928527832
    9. '    ' → logprob: -6.705143928527832
    10. '    
' → logprob: -6.955143928527832

Token 8: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1844078302383423
    2. '    ' → logprob: -1.5594078302383423
    3. '       ' → logprob: -1.8094078302383423
    4. 'user' → logprob: -2.8094077110290527
    5. 'i' → logprob: -2.9344077110290527
    6. 'input' → logprob: -3.1844077110290527
    7. ' ' → logprob: -3.4344077110290527
    8. '        ' → logprob: -3.5594077110290527
    9. 'pass' → logprob: -3.9344077110290527
    10. 'n' → logprob: -4.559407711029053

Token 9: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01449371688067913
    2. 'i' → logprob: -5.514493942260742
    3. ':' → logprob: -5.889493942260742
    4. 'u' → logprob: -6.014493942260742
    5. 'a' → logprob: -6.014493942260742
    6. '   ' → logprob: -6.639493942260742
    7. '=' → logprob: -7.389493942260742
    8. '    ' → logprob: -9.264493942260742
    9. 'T' → logprob: -9.389493942260742
    10. 'I' → logprob: -9.514493942260742

Token 10: ' W' (ID: 486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5683315396308899
    2. ' input' → logprob: -2.693331480026245
    3. 'input' → logprob: -2.818331480026245
    4. ' I' → logprob: -2.943331480026245
    5. 'space' → logprob: -2.943331480026245
    6. 'I' → logprob: -3.068331480026245
    7. ' =' → logprob: -3.443331480026245
    8. '<|end|>' → logprob: -4.068331718444824
    9. '    ' → logprob: -4.193331718444824
    10. ')' → logprob: -4.193331718444824

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4387601912021637
    2. '=' → logprob: -1.0637601613998413
    3. ',' → logprob: -4.813760280609131
    4. '<|end|>' → logprob: -7.063760280609131
    5. ' ,' → logprob: -7.313760280609131
    6. ')' → logprob: -8.563759803771973
    7. ' ' → logprob: -9.063759803771973
    8. '<|end|>' → logprob: -11.438759803771973
    9. '       ' → logprob: -11.938759803771973
    10. '  ' → logprob: -12.063759803771973

Token 12: ' C' (ID: 363)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05233462527394295
    2. '=' → logprob: -3.0523345470428467
    3. ' ' → logprob: -5.802334785461426
    4. '    ' → logprob: -8.677334785461426
    5. 'input' → logprob: -8.927334785461426
    6. '=input' → logprob: -8.927334785461426
    7. ',' → logprob: -9.427334785461426
    8. ' input' → logprob: -9.552334785461426
    9. '  ' → logprob: -10.302334785461426
    10. ' ,' → logprob: -10.677334785461426

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744375944137573
    2. '=' → logprob: -0.9744375944137573
    3. ',' → logprob: -7.974437713623047
    4. ')' → logprob: -12.099437713623047
    5. ' ,' → logprob: -12.599437713623047
    6. ' ' → logprob: -13.099437713623047
    7. '    ' → logprob: -13.974437713623047
    8. '   ' → logprob: -14.349437713623047
    9. '.' → logprob: -14.599437713623047
    10. '=input' → logprob: -14.599437713623047

Token 14: ' M' (ID: 391)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5292214751243591
    2. '=' → logprob: -2.404221534729004
    3. 'D' → logprob: -3.029221534729004
    4. 'N' → logprob: -3.279221534729004
    5. ' M' → logprob: -3.529221534729004
    6. ' D' → logprob: -3.654221534729004
    7. ' ' → logprob: -3.779221534729004
    8. 'M' → logprob: -3.779221534729004
    9. ' N' → logprob: -3.904221534729004
    10. 'L' → logprob: -4.654221534729004

Token 15: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693352460861206
    2. ' =' → logprob: -0.693352460861206
    3. ',' → logprob: -8.568352699279785
    4. ')' → logprob: -11.818352699279785
    5. ' ,' → logprob: -13.193352699279785
    6. ' ' → logprob: -13.568352699279785
    7. '=input' → logprob: -14.068352699279785
    8. '  ' → logprob: -14.443352699279785
    9. '    ' → logprob: -14.568352699279785
    10. '.' → logprob: -14.693352699279785

Token 16: ' NW' (ID: 58124)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19424358010292053
    2. '=' → logprob: -2.1942436695098877
    3. ' ' → logprob: -2.8192436695098877
    4. '_' → logprob: -6.694243431091309
    5. 'input' → logprob: -7.069243431091309
    6. ' input' → logprob: -7.319243431091309
    7. '    ' → logprob: -7.444243431091309
    8. '=input' → logprob: -8.569243431091309
    9. ' N' → logprob: -8.819243431091309
    10. ' _' → logprob: -8.819243431091309

Token 17: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31363150477409363
    2. ' =' → logprob: -1.313631534576416
    3. ',' → logprob: -7.938631534576416
    4. ')' → logprob: -12.188631057739258
    5. ' ' → logprob: -12.813631057739258
    6. '_' → logprob: -13.813631057739258
    7. '.' → logprob: -14.313631057739258
    8. '  ' → logprob: -14.313631057739258
    9. '=input' → logprob: -14.563631057739258
    10. ' ,' → logprob: -14.688631057739258

Token 18: ' NC' (ID: 28895)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17555902898311615
    2. '=' → logprob: -2.1755590438842773
    3. ' N' → logprob: -3.8005590438842773
    4. ' ' → logprob: -5.300559043884277
    5. 'N' → logprob: -6.050559043884277
    6. ' D' → logprob: -6.175559043884277
    7. ' _' → logprob: -6.550559043884277
    8. ' L' → logprob: -6.675559043884277
    9. ' S' → logprob: -6.738059043884277
    10. 'D' → logprob: -6.800559043884277

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235140323638916
    2. '=' → logprob: -0.8985140323638916
    3. ',' → logprob: -8.023513793945312
    4. ')' → logprob: -10.398513793945312
    5. ' ' → logprob: -11.398513793945312
    6. ' ,' → logprob: -12.148513793945312
    7. '<|end|>' → logprob: -12.273513793945312
    8. '    ' → logprob: -13.273513793945312
    9. '   ' → logprob: -13.273513793945312
    10. '  ' → logprob: -13.523513793945312

Token 20: ' NM' (ID: 59722)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19505859911441803
    2. '=' → logprob: -2.820058584213257
    3. ' N' → logprob: -2.945058584213257
    4. ' ' → logprob: -4.195058822631836
    5. ' NH' → logprob: -5.195058822631836
    6. ' S' → logprob: -5.320058822631836
    7. ',' → logprob: -5.570058822631836
    8. ' L' → logprob: -5.695058822631836
    9. ' _' → logprob: -5.882558822631836
    10. '    ' → logprob: -5.945058822631836

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576411783695221
    2. '=' → logprob: -0.826411783695221
    3. ',' → logprob: -7.701411724090576
    4. ')' → logprob: -11.576412200927734
    5. ' ,' → logprob: -12.576412200927734
    6. ' ' → logprob: -12.951412200927734
    7. '<|end|>' → logprob: -13.951412200927734
    8. '  ' → logprob: -14.076412200927734
    9. ' =
' → logprob: -14.826412200927734
    10. '   ' → logprob: -15.076412200927734

Token 22: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016388466581702232
    2. 'map' → logprob: -4.141388416290283
    3. ' input' → logprob: -8.516388893127441
    4. ' [' → logprob: -9.766388893127441
    5. ' list' → logprob: -9.891388893127441
    6. 'input' → logprob: -11.016388893127441
    7. '[' → logprob: -11.391388893127441
    8. ' ' → logprob: -11.766388893127441
    9. '(map' → logprob: -12.766388893127441
    10. 'list' → logprob: -13.141388893127441

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5265359282493591
    2. '(' → logprob: -1.026535987854004
    3. '(lambda' → logprob: -3.151535987854004
    4. '(str' → logprob: -4.901535987854004
    5. '<|end|>' → logprob: -7.401535987854004
    6. '(eval' → logprob: -10.151535987854004
    7. '<int' → logprob: -10.651535987854004
    8. '(
' → logprob: -10.651535987854004
    9. 'int' → logprob: -10.776535987854004
    10. '()' → logprob: -10.901535987854004

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2688817083835602
    2. '(' → logprob: -1.8938816785812378
    3. ')' → logprob: -3.2688817977905273
    4. '<|end|>' → logprob: -3.2688817977905273
    5. '<|end|>' → logprob: -6.268881797790527
    6. 'input' → logprob: -6.393881797790527
    7. '(int' → logprob: -6.518881797790527
    8. '```' → logprob: -7.143881797790527
    9. '(str' → logprob: -7.268881797790527
    10. '(line' → logprob: -8.643881797790527

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760171413421631
    2. 'input' → logprob: -0.8260171413421631
    3. ')' → logprob: -9.826017379760742
    4. '(input' → logprob: -10.951017379760742
    5. ' )' → logprob: -12.951017379760742
    6. ' ' → logprob: -13.451017379760742
    7. '=input' → logprob: -14.201017379760742
    8. '	input' → logprob: -14.451017379760742
    9. ',input' → logprob: -14.701017379760742
    10. '```' → logprob: -15.701017379760742

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7806986570358276
    2. '('' → logprob: -1.4056986570358276
    3. '().' → logprob: -1.7806986570358276
    4. '(' → logprob: -2.530698776245117
    5. '())' → logprob: -3.405698776245117
    6. '(()' → logprob: -5.155698776245117
    7. '());' → logprob: -5.905698776245117
    8. ')' → logprob: -6.780698776245117
    9. '("("' → logprob: -6.780698776245117
    10. '('').' → logprob: -6.905698776245117

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002112886286340654
    2. 'strip' → logprob: -8.500211715698242
    3. 'rstrip' → logprob: -11.875211715698242
    4. '(split' → logprob: -14.625211715698242
    5. ' split' → logprob: -14.875211715698242
    6. ')' → logprob: -17.750211715698242
    7. 'spl' → logprob: -17.875211715698242
    8. 'read' → logprob: -18.250211715698242
    9. '()' → logprob: -19.500211715698242
    10. 's' → logprob: -19.750211715698242

Token 28: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08258873224258423
    2. '())' → logprob: -3.2075886726379395
    3. '))' → logprob: -3.3325886726379395
    4. '()))' → logprob: -6.2075886726379395
    5. '()' → logprob: -6.9575886726379395
    6. ')))' → logprob: -10.082589149475098
    7. '(' → logprob: -10.207589149475098
    8. '),' → logprob: -10.832589149475098
    9. '('' → logprob: -11.957589149475098
    10. '(','' → logprob: -12.082589149475098

Token 29: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.851097047328949
    2. ':' → logprob: -1.1010971069335938
    3. '<|end|>' → logprob: -1.7260971069335938
    4. '):' → logprob: -3.1010971069335938
    5. ' if' → logprob: -5.601097106933594
    6. '       ' → logprob: -5.976097106933594
    7. ' ' → logprob: -6.226097106933594
    8. '<|end|>' → logprob: -6.976097106933594
    9. ',' → logprob: -7.101097106933594
    10. 'if' → logprob: -7.101097106933594

Token 30: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' H' (ID: 487)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5988560318946838
    2. ' H' → logprob: -0.8488560318946838
    3. ' ' → logprob: -3.973855972290039
    4. ' (' → logprob: -6.223855972290039
    5. 'not' → logprob: -6.473855972290039
    6. 'H' → logprob: -8.473855972290039
    7. ' N' → logprob: -10.223855972290039
    8. ' C' → logprob: -10.848855972290039
    9. ' any' → logprob: -11.098855972290039
    10. '<|end|>' → logprob: -11.973855972290039

Token 32: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.045957744121551514
    2. '==' → logprob: -3.2959578037261963
    3. ' <=' → logprob: -5.295957565307617
    4. ' <' → logprob: -6.545957565307617
    5. '<|end|>' → logprob: -7.670957565307617
    6. ')' → logprob: -8.295957565307617
    7. '<' → logprob: -8.420957565307617
    8. '<=' → logprob: -8.795957565307617
    9. ' ' → logprob: -9.545957565307617
    10. '=' → logprob: -9.670957565307617

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.638506293296814
    2. '1' → logprob: -1.513506293296814
    3. '0' → logprob: -2.0135064125061035
    4. '=' → logprob: -2.1385064125061035
    5. '>' → logprob: -8.638505935668945
    6. ' =' → logprob: -8.763505935668945
    7. ' or' → logprob: -10.638505935668945
    8. '2' → logprob: -11.388505935668945
    9. '3' → logprob: -11.826005935668945
    10. 'or' → logprob: -12.263505935668945

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4312196969985962
    2. '0' → logprob: -1.0562196969985962
    3. ' ' → logprob: -6.306219577789307
    4. '=' → logprob: -7.431219577789307
    5. '2' → logprob: -10.056220054626465
    6. '3' → logprob: -10.806220054626465
    7. '>' → logprob: -11.056220054626465
    8. '10' → logprob: -11.806220054626465
    9. '100' → logprob: -12.806220054626465
    10. 'W' → logprob: -13.431220054626465

Token 35: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08954674005508423
    2. ':' → logprob: -2.4645466804504395
    3. ' and' → logprob: -8.839547157287598
    4. '<|end|>' → logprob: -9.214547157287598
    5. 'or' → logprob: -9.464547157287598
    6. '   ' → logprob: -9.589547157287598
    7. ' ' → logprob: -9.714547157287598
    8. ' :' → logprob: -9.964547157287598
    9. ':return' → logprob: -10.464547157287598
    10. ')' → logprob: -11.089547157287598

Token 36: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7573397755622864
    2. ' ' → logprob: -1.6323397159576416
    3. ' or' → logprob: -1.8823397159576416
    4. ':' → logprob: -2.1323397159576416
    5. '       ' → logprob: -4.007339954376221
    6. '<|end|>' → logprob: -4.382339954376221
    7. ' :' → logprob: -4.507339954376221
    8. '   ' → logprob: -5.007339954376221
    9. ' ' → logprob: -5.132339954376221
    10. '    ' → logprob: -6.257339954376221

Token 37: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5291624665260315
    2. '       ' → logprob: -0.9041624665260315
    3. '           ' → logprob: -6.029162406921387
    4. '        ' → logprob: -6.029162406921387
    5. 'break' (adapté à ' break') → logprob: -7.279162406921387
    6. '	break' → logprob: -8.654162406921387
    7. '   ' → logprob: -9.279162406921387
    8. ' ' → logprob: -9.279162406921387
    9. '    ' → logprob: -10.279162406921387
    10. ' ' → logprob: -10.529162406921387

Token 38: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3826158344745636
    2. '<|end|>' → logprob: -1.2576158046722412
    3. '        ' → logprob: -4.50761604309082
    4. '
' → logprob: -4.75761604309082
    5. '        
' → logprob: -5.63261604309082
    6. ' ' → logprob: -6.13261604309082
    7. '\n' → logprob: -6.25761604309082
    8. '<|end|>' → logprob: -6.75761604309082
    9. ')' → logprob: -6.88261604309082
    10. '    ' → logprob: -7.13261604309082

Token 39: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5843881368637085
    2. '       ' → logprob: -2.209388256072998
    3. '<|end|>' → logprob: -2.209388256072998
    4. '   ' → logprob: -2.459388256072998
    5. ' ' → logprob: -2.709388256072998
    6. ')' → logprob: -3.084388256072998
    7. '#' → logprob: -4.959388256072998
    8. '[' → logprob: -5.584388256072998
    9. '    ' → logprob: -5.959388256072998
    10. '  ' → logprob: -6.209388256072998

Token 40: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9542317390441895
    2. '#' (adapté à ' #') → logprob: -1.9542317390441895
    3. ' ' → logprob: -1.9542317390441895
    4. 'n' → logprob: -2.2042317390441895
    5. '        ' → logprob: -2.8292317390441895
    6. 'r' → logprob: -3.5792317390441895
    7. 't' → logprob: -3.8292317390441895
    8. '    ' → logprob: -4.3292317390441895
    9. 'i' → logprob: -4.4542317390441895
    10. ')' → logprob: -4.4542317390441895

Token 41: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4472690224647522
    2. '#' → logprob: -1.6972689628601074
    3. '       ' → logprob: -3.1972689628601074
    4. '        ' → logprob: -3.6972689628601074
    5. ')' → logprob: -3.8222689628601074
    6. ' #' → logprob: -4.072268962860107
    7. '    ' → logprob: -4.197268962860107
    8. 's' → logprob: -4.572268962860107
    9. ' )' → logprob: -4.822268962860107
    10. '   ' → logprob: -5.197268962860107

Token 42: ' warriors' (ID: 95724)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3349231779575348
    2. '<|end|>' → logprob: -1.9599231481552124
    3. '   ' → logprob: -2.584923267364502
    4. '<|end|>' → logprob: -3.834923267364502
    5. ' for' → logprob: -4.459923267364502
    6. ')' → logprob: -4.834923267364502
    7. 'for' → logprob: -5.334923267364502
    8. '        ' → logprob: -5.334923267364502
    9. '    ' → logprob: -5.334923267364502
    10. '[' → logprob: -5.584923267364502

Token 44: ' friendly' (ID: 11888)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.7507913708686829
    2. ' positions' → logprob: -1.125791311264038
    3. 'positions' → logprob: -2.250791311264038
    4. ' data' → logprob: -3.500791311264038
    5. ' ' → logprob: -4.625791549682617
    6. ' strengths' → logprob: -4.875791549682617
    7. 'data' → logprob: -5.250791549682617
    8. '<|end|>' → logprob: -5.500791549682617
    9. ' abilities' → logprob: -5.750791549682617
    10. ' stats' → logprob: -5.750791549682617

Token 45: ' heroes' (ID: 46540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1869868040084839
    2. ')' → logprob: -1.5619868040084839
    3. '       ' → logprob: -2.0619869232177734
    4. '[' → logprob: -2.1869869232177734
    5. '<|end|>' → logprob: -2.9369869232177734
    6. '#' → logprob: -3.3119869232177734
    7. 's' → logprob: -3.4369869232177734
    8. '    ' → logprob: -3.8119869232177734
    9. ' for' → logprob: -4.186986923217773
    10. 'for' → logprob: -4.311986923217773

Token 47: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' warrior' (ID: 76541)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14453387260437012
    2. '_f' → logprob: -2.26953387260437
    3. '_' → logprob: -3.64453387260437
    4. '_s' → logprob: -6.519534111022949
    5. '_friend' → logprob: -6.519534111022949
    6. ' =' → logprob: -6.894534111022949
    7. '=' → logprob: -8.39453411102295
    8. '_names' → logprob: -8.64453411102295
    9. '_to' → logprob: -9.14453411102295
    10. '_list' → logprob: -9.26953411102295

Token 50: 'hero' (ID: 28501)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.7663947343826294
    2. 'friendly' → logprob: -1.6413947343826294
    3. 'heroes' → logprob: -2.39139461517334
    4. 'friend' → logprob: -2.64139461517334
    5. 'f' → logprob: -2.89139461517334
    6. 'fh' → logprob: -3.51639461517334
    7. 's' → logprob: -3.89139461517334
    8. 'hero' → logprob: -4.01639461517334
    9. 'her' → logprob: -4.89139461517334
    10. 'fr' → logprob: -4.89139461517334

Token 51: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14739878475666046
    2. '_f' → logprob: -2.3973987102508545
    3. 'es' → logprob: -3.2723987102508545
    4. '_' → logprob: -5.522398948669434
    5. ' =' → logprob: -6.897398948669434
    6. '_s' → logprob: -7.147398948669434
    7. '_list' → logprob: -7.647398948669434
    8. 'ies' → logprob: -8.147398948669434
    9. 'ships' → logprob: -8.522398948669434
    10. '=' → logprob: -8.772398948669434

Token 52: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9960032105445862
    2. ' []' → logprob: -1.2460031509399414
    3. '[' → logprob: -2.1210031509399414
    4. ' [' → logprob: -2.3710031509399414
    5. '{}' → logprob: -2.3710031509399414
    6. ' {}' → logprob: -3.4960031509399414
    7. ' [[]' → logprob: -5.496003150939941
    8. ' defaultdict' → logprob: -7.621003150939941
    9. ' [{}' → logprob: -8.371003150939941
    10. '{' → logprob: -8.496003150939941

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3494301438331604
    2. ' for' → logprob: -1.5994300842285156
    3. '       ' → logprob: -2.7244300842285156
    4. '	for' → logprob: -3.9744300842285156
    5. '\t' → logprob: -5.349430084228516
    6. '   ' → logprob: -6.099430084228516
    7. '<|end|>' → logprob: -8.099430084228516
    8. '[' → logprob: -8.349430084228516
    9. ' ' → logprob: -8.474430084228516
    10. '	' → logprob: -8.599430084228516

Token 55: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0016024599317461252
    2. ' i' → logprob: -6.876602649688721
    3. '_' → logprob: -8.001602172851562
    4. ' ' → logprob: -8.376602172851562
    5. ' ' → logprob: -13.626602172851562
    6. 'i' → logprob: -13.751602172851562
    7. '  ' → logprob: -14.626602172851562
    8. ' ​' → logprob: -15.001602172851562
    9. ' ‌' → logprob: -15.001602172851562
    10. ' w' → logprob: -15.126602172851562

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31744876503944397
    2. 'in' → logprob: -1.3174487352371216
    3. 'n' → logprob: -6.567448616027832
    4. ' ' → logprob: -6.567448616027832
    5. '  ' → logprob: -8.442448616027832
    6. '_' → logprob: -8.567448616027832
    7. 'w' → logprob: -8.817448616027832
    8. 'range' → logprob: -8.817448616027832
    9. 'i' → logprob: -9.067448616027832
    10. 's' → logprob: -9.817448616027832

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008059371029958129
    2. ' range' → logprob: -7.125805854797363
    3. '	range' → logprob: -14.250805854797363
    4. '(range' → logprob: -15.500805854797363
    5. 'rang' → logprob: -15.500805854797363
    6. '_range' → logprob: -16.37580680847168
    7. 'ran' → logprob: -16.37580680847168
    8. 'ange' → logprob: -16.87580680847168
    9. '_' → logprob: -17.37580680847168
    10. 'input' → logprob: -17.62580680847168

Token 58: '(W' (ID: 26031)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.033337898552417755
    2. '(N' → logprob: -3.7833378314971924
    3. '(' → logprob: -5.1583380699157715
    4. '(W' → logprob: -5.6583380699157715
    5. '(C' → logprob: -7.2833380699157715
    6. '(M' → logprob: -9.908337593078613
    7. ' (' → logprob: -10.408337593078613
    8. '(int' → logprob: -11.158337593078613
    9. '(K' → logprob: -11.658337593078613
    10. '(S' → logprob: -13.158337593078613

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004946522531099617
    2. '):
' → logprob: -7.875494480133057
    3. ' ):' → logprob: -9.750494956970215
    4. ')' → logprob: -10.625494956970215
    5. ':' → logprob: -11.125494956970215
    6. '   ' → logprob: -12.125494956970215
    7. '       ' → logprob: -12.250494956970215
    8. '):
' → logprob: -12.625494956970215
    9. '+' → logprob: -14.250494956970215
    10. '():' → logprob: -15.000494956970215

Token 60: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016982607543468475
    2. '       ' → logprob: -4.641982555389404
    3. '   ' → logprob: -5.641982555389404
    4. '<|end|>' → logprob: -6.891982555389404
    5. '<|end|>' → logprob: -7.766982555389404
    6. '	   ' → logprob: -7.891982555389404
    7. '    	   ' → logprob: -8.266983032226562
    8. ':' → logprob: -8.266983032226562
    9. '	       ' → logprob: -9.141983032226562
    10. '            
' → logprob: -9.141983032226562

Token 61: ' line' (ID: 2543)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.06443177908658981
    2. 'war' → logprob: -3.064431667327881
    3. ' input' → logprob: -4.939431667327881
    4. 'input' → logprob: -6.189431667327881
    5. ' hero' → logprob: -7.064431667327881
    6. ' war' → logprob: -7.314431667327881
    7. '   ' → logprob: -7.439431667327881
    8. ' friendly' → logprob: -7.564431667327881
    9. ' w' → logprob: -7.814431667327881
    10. 'w' → logprob: -7.814431667327881

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00976741872727871
    2. '=' → logprob: -4.634767532348633
    3. 's' → logprob: -11.759767532348633
    4. ' ' → logprob: -13.759767532348633
    5. '=line' → logprob: -14.009767532348633
    6. '_' → logprob: -14.509767532348633
    7. '=input' → logprob: -15.009767532348633
    8. '   ' → logprob: -15.009767532348633
    9. '    ' → logprob: -16.009767532348633
    10. '_input' → logprob: -16.134767532348633

Token 63: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17694678902626038
    2. 'input' → logprob: -1.926946759223938
    3. ' list' → logprob: -4.301946640014648
    4. 'list' → logprob: -5.801946640014648
    5. 'set' → logprob: -12.176946640014648
    6. ' set' → logprob: -12.426946640014648
    7. 'int' → logprob: -12.926946640014648
    8. '[input' → logprob: -13.051946640014648
    9. '=input' → logprob: -13.801946640014648
    10. ' [' → logprob: -13.926946640014648

Token 64: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.008709357120096684
    2. '(' → logprob: -4.75870943069458
    3. '()' → logprob: -9.758708953857422
    4. '(int' → logprob: -10.758708953857422
    5. '(input' → logprob: -11.383708953857422
    6. 'map' → logprob: -13.133708953857422
    7. ' map' → logprob: -14.258708953857422
    8. '(
' → logprob: -14.758708953857422
    9. '_map' → logprob: -15.133708953857422
    10. '(

' → logprob: -15.258708953857422

Token 65: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013971416046842933
    2. '(' → logprob: -6.626397132873535
    3. '(lambda' → logprob: -10.001397132873535
    4. 'int' → logprob: -11.376397132873535
    5. '[int' → logprob: -12.251397132873535
    6. '<int' → logprob: -12.751397132873535
    7. '(
' → logprob: -13.376397132873535
    8. '<|end|>' → logprob: -13.376397132873535
    9. '=int' → logprob: -14.001397132873535
    10. '(str' → logprob: -14.126397132873535

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31360718607902527
    2. ',input' → logprob: -1.3136072158813477
    3. '(input' → logprob: -8.438607215881348
    4. '(' → logprob: -9.688607215881348
    5. 'input' → logprob: -10.063607215881348
    6. ',int' → logprob: -11.188607215881348
    7. ' ,' → logprob: -12.063607215881348
    8. '(),' → logprob: -12.938607215881348
    9. ',line' → logprob: -14.188607215881348
    10. '=input' → logprob: -15.063607215881348

Token 67: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022726893424988
    2. ' input' → logprob: -1.9102272987365723
    3. ')' → logprob: -13.285226821899414
    4. '	input' → logprob: -14.285226821899414
    5. ',input' → logprob: -15.160226821899414
    6. '=input' → logprob: -15.660226821899414
    7. '_input' → logprob: -16.160226821899414
    8. '(input' → logprob: -16.285226821899414
    9. ' ' → logprob: -16.785226821899414
    10. '[input' → logprob: -17.285226821899414

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.034592388459714e-06
    2. '()' → logprob: -12.375005722045898
    3. '.' → logprob: -14.000005722045898
    4. ')' → logprob: -15.125005722045898
    5. ' ().' → logprob: -15.250005722045898
    6. '>().' → logprob: -16.7500057220459
    7. '()))' → logprob: -17.0000057220459
    8. '(' → logprob: -17.2500057220459
    9. ' .' → logprob: -17.5000057220459
    10. '().__' → logprob: -17.6250057220459

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016909420082811266
    2. 'strip' → logprob: -8.750168800354004
    3. ' split' → logprob: -12.000168800354004
    4. 'rstrip' → logprob: -12.375168800354004
    5. '(split' → logprob: -15.875168800354004
    6. 'spl' → logprob: -16.62516975402832
    7. 'read' → logprob: -17.00016975402832
    8. ')' → logprob: -17.12516975402832
    9. 'plit' → logprob: -17.87516975402832
    10. '   ' → logprob: -18.87516975402832

Token 70: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.015782708302140236
    2. '()' → logprob: -4.640782833099365
    3. '))' → logprob: -5.515782833099365
    4. '())' → logprob: -6.515782833099365
    5. '()))
' → logprob: -8.140782356262207
    6. '(' → logprob: -8.640782356262207
    7. '()));' → logprob: -11.265782356262207
    8. ')' → logprob: -11.515782356262207
    9. '()
' → logprob: -12.765782356262207
    10. '()))

' → logprob: -13.015782356262207

Token 71: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20769301056861877
    2. '           ' → logprob: -1.7076929807662964
    3. '       ' → logprob: -6.207693099975586
    4. '<|end|>' → logprob: -6.457693099975586
    5. ' )' → logprob: -7.082693099975586
    6. '()' → logprob: -7.457693099975586
    7. ')
' → logprob: -8.082693099975586
    8. '<|end|>' → logprob: -8.332693099975586
    9. '())' → logprob: -8.957693099975586
    10. '          ' → logprob: -9.707693099975586

Token 72: ' ni' (ID: 2565)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048567160964012146
    2. '<|end|>' → logprob: -3.548567056655884
    3. '           ' → logprob: -4.548567295074463
    4. ' warrior' → logprob: -5.548567295074463
    5. '<|end|>' → logprob: -6.423567295074463
    6. ')' → logprob: -6.673567295074463
    7. ' ' → logprob: -7.923567295074463
    8. ' ' → logprob: -8.798566818237305
    9. '   ' → logprob: -9.173566818237305
    10. ' _' → logprob: -9.173566818237305

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22793550789356232
    2. ' =' → logprob: -1.602935552597046
    3. 'n' → logprob: -6.352935314178467
    4. '=len' → logprob: -8.727935791015625
    5. '   ' → logprob: -8.977935791015625
    6. 'w' → logprob: -9.727935791015625
    7. '=int' → logprob: -9.727935791015625
    8. ' ' → logprob: -10.102935791015625
    9. '    ' → logprob: -10.477935791015625
    10. 'nt' → logprob: -10.602935791015625

Token 74: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07025529444217682
    2. 'line' → logprob: -2.6952552795410156
    3. ' len' → logprob: -8.320255279541016
    4. 'len' → logprob: -9.695255279541016
    5. ' ' → logprob: -12.195255279541016
    6. '	line' → logprob: -12.445255279541016
    7. '=line' → logprob: -13.445255279541016
    8. ' int' → logprob: -13.945255279541016
    9. '[line' → logprob: -13.945255279541016
    10. 'int' → logprob: -14.445255279541016

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.875007629394531
    3. '[
' → logprob: -13.375007629394531
    4. ' [' → logprob: -14.125007629394531
    5. '   ' → logprob: -14.750007629394531
    6. '0' → logprob: -15.000007629394531
    7. 's' → logprob: -15.250007629394531
    8. '[-' → logprob: -15.250007629394531
    9. '           ' → logprob: -15.500007629394531
    10. '()[' → logprob: -15.500007629394531

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002108118060277775
    2. ' ' → logprob: -8.875210762023926
    3. '1' → logprob: -9.625210762023926
    4. '   ' → logprob: -13.562710762023926
    5. ':' → logprob: -14.187710762023926
    6. '2' → logprob: -14.500210762023926
    7. '  ' → logprob: -14.625210762023926
    8. '(' → logprob: -15.000210762023926
    9. '[' → logprob: -15.375210762023926
    10. '    ' → logprob: -15.812710762023926

Token 77: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2932763397693634
    2. '])' → logprob: -2.043276309967041
    3. ']' → logprob: -2.293276309967041
    4. ')
' → logprob: -3.918276309967041
    5. '           ' → logprob: -6.668276309967041
    6. ']
' → logprob: -6.918276309967041
    7. '])
' → logprob: -7.668276309967041
    8. ' )' → logprob: -8.6682767868042
    9. '）' → logprob: -8.7932767868042
    10. ':' → logprob: -8.7932767868042

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29943621158599854
    2. '<|end|>' → logprob: -1.5494362115859985
    3. '       ' → logprob: -3.799436092376709
    4. '<|end|>' → logprob: -4.549436092376709
    5. ',' → logprob: -5.924436092376709
    6. '        ' → logprob: -6.174436092376709
    7. ')' → logprob: -6.549436092376709
    8. ' ' → logprob: -6.674436092376709
    9. '            ' → logprob: -6.674436092376709
    10. ' warrior' → logprob: -6.924436092376709

Token 79: ' hero' (ID: 20917)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.00573253259062767
    2. '<|end|>' → logprob: -5.380732536315918
    3. ' warriors' → logprob: -7.755732536315918
    4. ' ' → logprob: -8.255732536315918
    5. ' Warrior' → logprob: -8.880732536315918
    6. ' friendly' → logprob: -9.505732536315918
    7. '<|end|>' → logprob: -9.880732536315918
    8. 'war' → logprob: -10.505732536315918
    9. ' line' → logprob: -10.755732536315918
    10. ' friend' → logprob: -10.880732536315918

Token 80: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00028541131177917123
    2. ' =' → logprob: -9.625285148620605
    3. '_list' → logprob: -9.750285148620605
    4. '_s' → logprob: -9.750285148620605
    5. ' s' → logprob: -10.000285148620605
    6. '_ids' → logprob: -11.000285148620605
    7. '_' → logprob: -11.750285148620605
    8. '_indices' → logprob: -12.125285148620605
    9. '=' → logprob: -12.250285148620605
    10. '  ' → logprob: -12.750285148620605

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. 's' → logprob: -15.029751777648926
    4. '=line' → logprob: -15.279751777648926
    5. ' ' → logprob: -15.779751777648926
    6. ' =[' → logprob: -16.02975082397461
    7. '＝' → logprob: -16.52975082397461
    8. '=[]' → logprob: -16.77975082397461
    9. '<|end|>' → logprob: -17.02975082397461
    10. ',' → logprob: -17.65475082397461

Token 82: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.018200984224677086
    2. 'line' → logprob: -4.018200874328613
    3. '[line' → logprob: -11.018200874328613
    4. '	line' → logprob: -11.143200874328613
    5. ' ' → logprob: -12.018200874328613
    6. ' []' → logprob: -12.268200874328613
    7. ' set' → logprob: -12.643200874328613
    8. ' list' → logprob: -12.768200874328613
    9. ' [' → logprob: -13.643200874328613
    10. '(line' → logprob: -14.268200874328613

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.958325295476243e-05
    2. '1' → logprob: -9.500079154968262
    3. '```' → logprob: -13.625079154968262
    4. '(' → logprob: -13.750079154968262
    5. ':' → logprob: -14.125079154968262
    6. ' [' → logprob: -14.625079154968262
    7. 's' → logprob: -15.625079154968262
    8. '=' → logprob: -15.625079154968262
    9. '[
' → logprob: -15.625079154968262
    10. '[:' → logprob: -16.125080108642578

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022558939235750586
    2. ' ' → logprob: -9.000226020812988
    3. ':' → logprob: -9.625226020812988
    4. ':]' → logprob: -11.250226020812988
    5. '   ' → logprob: -11.875226020812988
    6. '```' → logprob: -13.062726020812988
    7. '2' → logprob: -13.187726020812988
    8. ' :' → logprob: -13.375226020812988
    9. '  ' → logprob: -13.437726020812988
    10. ']' → logprob: -13.500226020812988

Token 85: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.5760259628295898
    2. ':' → logprob: -0.8260259628295898
    3. ' :]' → logprob: -10.57602596282959
    4. ' :' → logprob: -10.70102596282959
    5. ':n' → logprob: -11.20102596282959
    6. ']' → logprob: -11.95102596282959
    7. ':].' → logprob: -12.07602596282959
    8. ':],' → logprob: -12.20102596282959
    9. '：' → logprob: -13.70102596282959
    10. ':]
' → logprob: -13.70102596282959

Token 86: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24998298287391663
    2. '<|end|>' → logprob: -1.6249829530715942
    3. '
' → logprob: -4.874982833862305
    4. '       ' → logprob: -5.374982833862305
    5. '<|end|>' → logprob: -5.874982833862305
    6. '               ' → logprob: -5.874982833862305
    7. ')' → logprob: -6.124982833862305
    8. ',' → logprob: -6.874982833862305
    9. ' ' → logprob: -7.124982833862305
    10. '```' → logprob: -8.249982833862305

Token 87: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.04454537108540535
    2. 'ni' → logprob: -3.1695454120635986
    3. ' len' → logprob: -6.5445451736450195
    4. 'len' → logprob: -9.29454517364502
    5. ' li' → logprob: -12.41954517364502
    6. ' ' → logprob: -12.79454517364502
    7. ' si' → logprob: -13.41954517364502
    8. ' nii' → logprob: -13.66954517364502
    9. ' nij' → logprob: -13.79454517364502
    10. 'li' → logprob: -14.16954517364502

Token 88: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.358686625957489
    2. '>' → logprob: -1.2336866855621338
    3. ' ==' → logprob: -5.733686447143555
    4. '==' → logprob: -5.858686447143555
    5. ' else' → logprob: -6.608686447143555
    6. ' ' → logprob: -6.858686447143555
    7. ' >=' → logprob: -7.108686447143555
    8. '>=' → logprob: -7.858686447143555
    9. 'else' → logprob: -8.858686447143555
    10. ' !=' → logprob: -9.233686447143555

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462284917011857
    2. ' ' → logprob: -5.379622936248779
    3. '  ' → logprob: -13.879622459411621
    4. '>' → logprob: -14.754622459411621
    5. '<|end|>' → logprob: -14.754622459411621
    6. '=' → logprob: -14.879622459411621
    7. '1' → logprob: -15.379622459411621
    8. '```' → logprob: -15.754622459411621
    9. '   ' → logprob: -16.129623413085938
    10. '<|end|>' → logprob: -17.442123413085938

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006296366918832064
    2. ' ' → logprob: -7.375629425048828
    3. '  ' → logprob: -13.875629425048828
    4. '1' → logprob: -14.500629425048828
    5. '<|end|>' → logprob: -14.500629425048828
    6. '```' → logprob: -14.625629425048828
    7. '   ' → logprob: -16.188129425048828
    8. '>' → logprob: -16.313129425048828
    9. '=' → logprob: -16.625629425048828
    10. '<|end|>' → logprob: -16.875629425048828

Token 91: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016515221446752548
    2. 'else' → logprob: -4.141515254974365
    3. '           ' → logprob: -8.516514778137207
    4. ' ' → logprob: -8.641514778137207
    5. '               ' → logprob: -10.516514778137207
    6. '<|end|>' → logprob: -10.516514778137207
    7. ' ' → logprob: -11.141514778137207
    8. '            ' → logprob: -11.266514778137207
    9. '	else' → logprob: -12.641514778137207
    10. '          ' → logprob: -13.016514778137207

Token 92: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1602381318807602
    2. '[]' → logprob: -1.9102381467819214
    3. ' []
' → logprob: -12.035238265991211
    4. ' [' → logprob: -13.035238265991211
    5. '[' → logprob: -13.660238265991211
    6. '[]
' → logprob: -13.660238265991211
    7. ' [])' → logprob: -14.410238265991211
    8. '[]}' → logprob: -14.410238265991211
    9. ' []

' → logprob: -14.535238265991211
    10. '[]>' → logprob: -14.660238265991211

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038858477026224136
    2. '       ' → logprob: -3.663858413696289
    3. '<|end|>' → logprob: -4.538858413696289
    4. '
' → logprob: -7.288858413696289
    5. ')' → logprob: -7.788858413696289
    6. '<|end|>' → logprob: -8.038858413696289
    7. '               ' → logprob: -9.538858413696289
    8. ',' → logprob: -9.663858413696289
    9. '	       ' → logprob: -10.038858413696289
    10. '            
' → logprob: -10.163858413696289

Token 94: ' warrior' (ID: 76541)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23375444114208221
    2. '           ' → logprob: -1.6087543964385986
    3. ' warrior' → logprob: -5.483754634857178
    4. 'war' → logprob: -6.858754634857178
    5. ' ' → logprob: -7.358754634857178
    6. '<|end|>' → logprob: -7.608754634857178
    7. '
' → logprob: -7.983754634857178
    8. '   ' → logprob: -7.983754634857178
    9. '            
' → logprob: -8.60875415802002
    10. '               ' → logprob: -8.85875415802002

Token 95: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.717296517104842e-05
    2. ' _' → logprob: -10.250057220458984
    3. '_h' → logprob: -12.250057220458984
    4. '_friend' → logprob: -13.000057220458984
    5. '_f' → logprob: -13.250057220458984
    6. '_s' → logprob: -13.375057220458984
    7. 's' → logprob: -13.500057220458984
    8. '._' → logprob: -14.125057220458984
    9. ''_' → logprob: -14.125057220458984
    10. '_helper' → logprob: -14.625057220458984

Token 96: 'hero' (ID: 28501)
  Prédit: 'hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hero' → logprob: -9.968312951968983e-06
    2. ' hero' → logprob: -12.875009536743164
    3. 'friendly' → logprob: -12.875009536743164
    4. 'friend' → logprob: -14.000009536743164
    5. 'heroes' → logprob: -14.250009536743164
    6. 'her' → logprob: -14.250009536743164
    7. ' ' → logprob: -14.750009536743164
    8. '_' → logprob: -14.750009536743164
    9. '.hero' → logprob: -15.375009536743164
    10. 'helper' → logprob: -15.375009536743164

Token 97: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0053364550694823265
    2. '.' → logprob: -5.255336284637451
    3. '.extend' → logprob: -9.25533676147461
    4. ' .' → logprob: -12.88033676147461
    5. '.app' → logprob: -13.38033676147461
    6. '.ap' → logprob: -13.75533676147461
    7. '.add' → logprob: -14.25533676147461
    8. '.setdefault' → logprob: -14.25533676147461
    9. 'append' → logprob: -15.75533676147461
    10. '.push' → logprob: -15.88033676147461

Token 98: '(set' (ID: 25904)
  Prédit: '(hero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(hero' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. 'hero' → logprob: -15.375097274780273
    4. '(h' → logprob: -15.500097274780273
    5. '(
' → logprob: -16.375097274780273
    6. '(home' → logprob: -16.875097274780273
    7. ' hero' → logprob: -17.125097274780273
    8. ' (' → logprob: -17.250097274780273
    9. '((' → logprob: -17.375097274780273
    10. '(enemy' → logprob: -18.125097274780273

Token 99: '(hero' (ID: 184053)
  Prédit: '(hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hero' → logprob: -1.8624639324116288e-06
    2. 'hero' → logprob: -14.000001907348633
    3. '(h' → logprob: -14.625001907348633
    4. '(' → logprob: -15.125001907348633
    5. ' (' → logprob: -16.000001907348633
    6. ')' → logprob: -17.500001907348633
    7. ' hero' → logprob: -17.625001907348633
    8. '(
' → logprob: -18.500001907348633
    9. '(home' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.375001907348633

Token 100: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.927930654550437e-05
    2. 's' → logprob: -10.625029563903809
    3. '_' → logprob: -12.750029563903809
    4. ')_' → logprob: -13.750029563903809
    5. ')' → logprob: -14.750029563903809
    6. ' _' → logprob: -16.125028610229492
    7. 'er' → logprob: -16.625028610229492
    8. '_l' → logprob: -16.875028610229492
    9. '_lists' → logprob: -16.875028610229492
    10. 'list' → logprob: -17.125028610229492

Token 101: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037251986213959754
    2. '))' → logprob: -8.250372886657715
    3. ')
' → logprob: -9.500372886657715
    4. '       ' → logprob: -10.375372886657715
    5. ' )' → logprob: -12.625372886657715
    6. ')))' → logprob: -14.125372886657715
    7. '           ' → logprob: -14.625372886657715
    8. ')
' → logprob: -15.375372886657715
    9. '())' → logprob: -15.750372886657715
    10. ')

' → logprob: -16.3753719329834

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4646560251712799
    2. '<|end|>' → logprob: -1.0896559953689575
    3. '
' → logprob: -3.464656114578247
    4. '        
' → logprob: -6.089655876159668
    5. '<|end|>' → logprob: -6.714655876159668
    6. '   ' → logprob: -8.839655876159668
    7. ')' → logprob: -9.089655876159668
    8. '```' → logprob: -9.714655876159668
    9. ' ' → logprob: -10.839655876159668
    10. '            
' → logprob: -11.089655876159668

Token 103: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2724563479423523
    2. '<|end|>' → logprob: -1.647456407546997
    3. '
' → logprob: -3.272456407546997
    4. '        
' → logprob: -5.772456169128418
    5. ' for' → logprob: -6.522456169128418
    6. '<|end|>' → logprob: -6.772456169128418
    7. 'for' → logprob: -7.272456169128418
    8. '#' (adapté à ' #') → logprob: -7.897456169128418
    9. '   ' → logprob: -8.772456169128418
    10. 'n' → logprob: -8.772456169128418

Token 104: ' read' (ID: 1729)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19849400222301483
    2. '       ' → logprob: -2.8234939575195312
    3. 'read' → logprob: -3.1984939575195312
    4. ' #' → logprob: -3.6984939575195312
    5. 'for' → logprob: -4.198493957519531
    6. ' for' → logprob: -4.948493957519531
    7. '   ' → logprob: -5.323493957519531
    8. 'continue' → logprob: -5.948493957519531
    9. ' read' → logprob: -6.073493957519531
    10. 'war' → logprob: -6.323493957519531

Token 105: ' cler' (ID: 91536)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -1.3575570583343506
    2. '#' → logprob: -1.6075570583343506
    3. ' heroes' → logprob: -2.3575570583343506
    4. 'friendly' → logprob: -2.4825570583343506
    5. ' friendly' → logprob: -2.6075570583343506
    6. 'mon' → logprob: -3.7325570583343506
    7. 'vill' → logprob: -3.9200570583343506
    8. '   ' → logprob: -4.17005729675293
    9. ' #' → logprob: -4.29505729675293
    10. 'war' → logprob: -4.54505729675293

Token 106: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.6515223383903503
    2. 'ic' → logprob: -0.7765223383903503
    3. 'gy' → logprob: -4.776522159576416
    4. 'ks' → logprob: -5.401522159576416
    5. 'g' → logprob: -5.776522159576416
    6. 'gym' → logprob: -7.401522159576416
    7. '

' → logprob: -8.026522636413574
    8. '```' → logprob: -8.401522636413574
    9. 'ical' → logprob: -8.526522636413574
    10. '</' → logprob: -8.589022636413574

Token 107: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006537623703479767
    2. ' for' → logprob: -5.506537437438965
    3. 'for' → logprob: -6.506537437438965
    4. '   ' → logprob: -7.131537437438965
    5. ' and' → logprob: -10.006537437438965
    6. 'cler' → logprob: -10.506537437438965
    7. ' cler' → logprob: -11.131537437438965
    8. '
' → logprob: -11.506537437438965
    9. '<|end|>' → logprob: -11.631537437438965
    10. 'and' → logprob: -11.631537437438965

Token 108: ' friendly' (ID: 11888)
  Prédit: 'friendly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friendly' → logprob: -0.46124622225761414
    2. ' friendly' → logprob: -1.0862462520599365
    3. '_' → logprob: -4.586246013641357
    4. 'hero' → logprob: -5.211246013641357
    5. 'friend' → logprob: -5.461246013641357
    6. '-friendly' → logprob: -6.648746013641357
    7. '_f' → logprob: -6.836246013641357
    8. ' hero' → logprob: -7.086246013641357
    9. 'riendly' → logprob: -7.086246013641357
    10. ' friend' → logprob: -7.211246013641357

Token 109: ' warriors' (ID: 95724)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.23607687652111053
    2. ' heroes' → logprob: -1.736076831817627
    3. '_' → logprob: -3.611076831817627
    4. 'hero' → logprob: -6.236076831817627
    5. 'her' → logprob: -6.611076831817627
    6. '```' → logprob: -7.611076831817627
    7. 'cler' → logprob: -7.736076831817627
    8. ' ' → logprob: -8.236077308654785
    9. '<|end|>' → logprob: -8.236077308654785
    10. 'war' → logprob: -8.673577308654785

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035934215411543846
    2. '<|end|>' → logprob: -5.878593444824219
    3. '   ' → logprob: -8.128593444824219
    4. ' for' → logprob: -8.878593444824219
    5. 'for' → logprob: -9.503593444824219
    6. '<|end|>' → logprob: -9.628593444824219
    7. ' and' → logprob: -9.753593444824219
    8. '
' → logprob: -9.878593444824219
    9. '```' → logprob: -10.128593444824219
    10. '        
' → logprob: -11.128593444824219

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010647247545421124
    2. '   ' → logprob: -7.376064777374268
    3. '<|end|>' → logprob: -8.50106430053711
    4. 'cler' → logprob: -9.50106430053711
    5. '
' → logprob: -10.00106430053711
    6. '```' → logprob: -11.12606430053711
    7. ' and' → logprob: -11.25106430053711
    8. ' ' → logprob: -11.25106430053711
    9. 'for' → logprob: -11.25106430053711
    10. ' cler' → logprob: -11.75106430053711

Token 112: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' (adapté à ' cler') → logprob: -0.17250682413578033
    2. '       ' → logprob: -2.172506809234619
    3. ' cler' → logprob: -3.297506809234619
    4. 'cl' → logprob: -5.297506809234619
    5. 'for' → logprob: -6.797506809234619
    6. '
' → logprob: -7.922506809234619
    7. ' for' → logprob: -8.297507286071777
    8. '   ' → logprob: -8.672507286071777
    9. '```' → logprob: -8.797507286071777
    10. '        
' → logprob: -8.922507286071777

Token 113: 'ic' (ID: 291)
  Prédit: 'ics'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.6333453059196472
    2. 'ic' → logprob: -0.7583453059196472
    3. '   ' → logprob: -8.008345603942871
    4. '_' → logprob: -9.883345603942871
    5. '    ' → logprob: -10.383345603942871
    6. '       ' → logprob: -10.383345603942871
    7. '  ' → logprob: -10.508345603942871
    8. '#' → logprob: -10.508345603942871
    9. '        ' → logprob: -10.633345603942871
    10. ' ' → logprob: -10.633345603942871

Token 114: '_w' (ID: 3567)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013140703551471233
    2. ' =' → logprob: -5.388140678405762
    3. '_w' → logprob: -5.513140678405762
    4. '_f' → logprob: -6.013140678405762
    5. '_friend' → logprob: -6.388140678405762
    6. 's' → logprob: -8.888140678405762
    7. '=' → logprob: -9.388140678405762
    8. '_enemy' → logprob: -10.638140678405762
    9. '_h' → logprob: -11.513140678405762
    10. '_=' → logprob: -11.763140678405762

Token 115: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.01893595978617668
    2. 'ari' → logprob: -4.0189361572265625
    3. 'arri' → logprob: -7.8939361572265625
    4. 'arr' → logprob: -8.393936157226562
    5. '_' → logprob: -10.768936157226562
    6. 'ario' → logprob: -11.143936157226562
    7. '_ar' → logprob: -11.268936157226562
    8. 'arl' → logprob: -11.268936157226562
    9. 'here' → logprob: -11.518936157226562
    10. 'e' → logprob: -11.518936157226562

Token 116: 'rior' (ID: 12072)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6215308904647827
    2. 'rior' → logprob: -1.1215308904647827
    3. 'or' → logprob: -2.4965310096740723
    4. 'riors' → logprob: -3.6215310096740723
    5. 'iors' → logprob: -4.621531009674072
    6. 'ior' → logprob: -5.121531009674072
    7. 'ari' → logprob: -5.246531009674072
    8. 'ors' → logprob: -6.496531009674072
    9. 'ror' → logprob: -6.871531009674072
    10. 'ri' → logprob: -6.996531009674072

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893197983503342
    2. '=' → logprob: -2.578932046890259
    3. '=[]' → logprob: -10.82893180847168
    4. ' ' → logprob: -11.57893180847168
    5. '   ' → logprob: -11.57893180847168
    6. '=[]
' → logprob: -13.07893180847168
    7. 's' → logprob: -14.70393180847168
    8. '  ' → logprob: -14.82893180847168
    9. ' =
' → logprob: -15.57893180847168
    10. '=
' → logprob: -16.07893180847168

Token 118: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.20163464546203613
    2. '[]' → logprob: -1.7016346454620361
    3. ' []
' → logprob: -8.701634407043457
    4. ' []' → logprob: -9.826634407043457
    5. '[]

' → logprob: -15.076634407043457
    6. '=[]
' → logprob: -15.201634407043457
    7. '[' → logprob: -15.201634407043457
    8. '[
' → logprob: -15.576634407043457
    9. '([])
' → logprob: -16.701635360717773
    10. '[])
' → logprob: -17.201635360717773

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031595028936862946
    2. '<|end|>' → logprob: -4.156595230102539
    3. 'for' → logprob: -4.906595230102539
    4. ' for' → logprob: -5.281595230102539
    5. '   ' → logprob: -6.031595230102539
    6. '<|end|>' → logprob: -8.156595230102539
    7. '[]
' → logprob: -9.781595230102539
    8. '
' → logprob: -9.906595230102539
    9. ' ' → logprob: -10.031595230102539
    10. '        
' → logprob: -10.156595230102539

Token 120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16044528782367706
    2. ' for' → logprob: -1.9104453325271606
    3. '       ' → logprob: -8.660445213317871
    4. '   ' → logprob: -10.035445213317871
    5. '	for' → logprob: -12.660445213317871
    6. ' ' → logprob: -14.285445213317871
    7. '<|end|>' → logprob: -16.660446166992188
    8. '[]' → logprob: -17.285446166992188
    9. '  ' → logprob: -17.785446166992188
    10. 'def' → logprob: -17.910446166992188

Token 121: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055433038622140884
    2. ' _' → logprob: -2.9304330348968506
    3. ' range' → logprob: -7.68043327331543
    4. ' in' → logprob: -10.05543327331543
    5. ' i' → logprob: -10.68043327331543
    6. '_range' → logprob: -11.43043327331543
    7. 'range' → logprob: -11.68043327331543
    8. 'i' → logprob: -14.43043327331543
    9. '_i' → logprob: -14.68043327331543
    10. ' ' → logprob: -14.68043327331543

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48419389128685
    2. 'in' → logprob: -0.9841939210891724
    3. 'range' → logprob: -4.734193801879883
    4. ' range' → logprob: -6.734193801879883
    5. '_' → logprob: -10.109193801879883
    6. ' ' → logprob: -10.234193801879883
    7. '(range' → logprob: -12.359193801879883
    8. ' _' → logprob: -12.859193801879883
    9. '  ' → logprob: -13.734193801879883
    10. '(' → logprob: -14.109193801879883

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975292131304741
    2. ' range' → logprob: -3.5297529697418213
    3. '_' → logprob: -13.654752731323242
    4. '(range' → logprob: -14.154752731323242
    5. ' ' → logprob: -15.154752731323242
    6. '	range' → logprob: -16.779752731323242
    7. '_range' → logprob: -16.904752731323242
    8. '  ' → logprob: -17.029752731323242
    9. '   ' → logprob: -17.404752731323242
    10. 'r' → logprob: -17.779752731323242

Token 124: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.006134976167231798
    2. 'C' → logprob: -5.381134986877441
    3. ' (' → logprob: -7.381134986877441
    4. '(' → logprob: -8.256134986877441
    5. '(M' → logprob: -8.256134986877441
    6. ' C' → logprob: -8.506134986877441
    7. ')' → logprob: -10.131134986877441
    8. '	C' → logprob: -10.256134986877441
    9. '(N' → logprob: -11.006134986877441
    10. 'M' → logprob: -11.131134986877441

Token 125: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0006712094182148576
    2. '):' → logprob: -7.37567138671875
    3. '):
' → logprob: -10.62567138671875
    4. '       ' → logprob: -11.62567138671875
    5. '   ' → logprob: -12.62567138671875
    6. ' ):
' → logprob: -12.75067138671875
    7. '():
' → logprob: -13.25067138671875
    8. ')' → logprob: -13.37567138671875
    9. ':
' → logprob: -14.00067138671875
    10. ':' → logprob: -14.87567138671875

Token 126: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5134232640266418
    2. '       ' → logprob: -1.013423204421997
    3. '           ' → logprob: -3.888423204421997
    4. 'line' → logprob: -4.513423442840576
    5. ' line' → logprob: -5.013423442840576
    6. '	line' → logprob: -9.138422966003418
    7. ' ' → logprob: -9.888422966003418
    8. '
' → logprob: -9.888422966003418
    9. '(line' → logprob: -9.888422966003418
    10. '    
' → logprob: -10.138422966003418

Token 127: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4030035138130188
    2. 'line' (adapté à ' line') → logprob: -1.153003454208374
    3. '   ' → logprob: -4.778003692626953
    4. '           ' → logprob: -5.028003692626953
    5. '       ' → logprob: -7.528003692626953
    6. '	line' → logprob: -8.153003692626953
    7. ' ' → logprob: -9.403003692626953
    8. '    ' → logprob: -10.153003692626953
    9. ' lines' → logprob: -11.153003692626953
    10. '  ' → logprob: -11.403003692626953

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246990516781807
    2. '=' → logprob: -3.773247003555298
    3. '=line' → logprob: -14.273246765136719
    4. ' ' → logprob: -15.023246765136719
    5. '=list' → logprob: -15.398246765136719
    6. '   ' → logprob: -15.773246765136719
    7. ' =
' → logprob: -16.89824676513672
    8. 's' → logprob: -17.02324676513672
    9. ')' → logprob: -17.64824676513672
    10. '=
' → logprob: -17.89824676513672

Token 129: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16022443771362305
    2. 'list' → logprob: -1.910224437713623
    3. '(list' → logprob: -15.785224914550781
    4. '=list' → logprob: -16.91022491455078
    5. ' map' → logprob: -17.03522491455078
    6. ' ' → logprob: -17.78522491455078
    7. 'map' → logprob: -17.78522491455078
    8. '	list' → logprob: -18.03522491455078
    9. 'List' → logprob: -18.78522491455078
    10. ':list' → logprob: -18.91022491455078

Token 130: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00022678142704535276
    2. 'map' → logprob: -8.500226974487305
    3. '(int' → logprob: -11.625226974487305
    4. '(' → logprob: -11.625226974487305
    5. '.map' → logprob: -13.375226974487305
    6. ',map' → logprob: -13.625226974487305
    7. '(list' → logprob: -14.250226974487305
    8. ' map' → logprob: -14.625226974487305
    9. '	map' → logprob: -15.125226974487305
    10. 'int' → logprob: -15.125226974487305

Token 131: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.610702363715973e-06
    2. '=int' → logprob: -12.500009536743164
    3. ',int' → logprob: -13.250009536743164
    4. ' (' → logprob: -13.625009536743164
    5. '<int' → logprob: -13.750009536743164
    6. '[int' → logprob: -14.125009536743164
    7. 'int' → logprob: -14.875009536743164
    8. ']int' → logprob: -15.125009536743164
    9. '(' → logprob: -15.250009536743164
    10. ' int' → logprob: -16.250009536743164

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003040101146325469
    2. '(int' → logprob: -6.878040313720703
    3. ',int' → logprob: -7.003040313720703
    4. ',input' → logprob: -7.253040313720703
    5. '(input' → logprob: -8.003040313720703
    6. 'int' → logprob: -11.128040313720703
    7. 'input' → logprob: -11.253040313720703
    8. ' ,' → logprob: -11.378040313720703
    9. '(' → logprob: -11.378040313720703
    10. '   ' → logprob: -14.503040313720703

Token 133: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008615754544734955
    2. ' input' → logprob: -4.758615970611572
    3. '(input' → logprob: -13.633615493774414
    4. '=input' → logprob: -18.258615493774414
    5. ' ' → logprob: -18.508615493774414
    6. 'int' → logprob: -18.758615493774414
    7. ',input' → logprob: -18.883615493774414
    8. '<input' → logprob: -19.133615493774414
    9. 'output' → logprob: -20.008615493774414
    10. '	input' → logprob: -20.008615493774414

Token 134: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.375
    3. ' ().' → logprob: -17.375
    4. '.' → logprob: -19.375
    5. '()[' → logprob: -20.625
    6. '().__' → logprob: -20.75
    7. '.split' → logprob: -20.75
    8. '(' → logprob: -21.0
    9. ' .' → logprob: -22.0
    10. '   ' → logprob: -22.375

Token 135: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. '(split' → logprob: -14.500000953674316
    3. ' split' → logprob: -14.625000953674316
    4. 'strip' → logprob: -17.625001907348633
    5. ')' → logprob: -18.500001907348633
    6. 'spl' → logprob: -18.875001907348633
    7. 'input' → logprob: -19.000001907348633
    8. 'skip' → logprob: -19.625001907348633
    9. '_split' → logprob: -20.375001907348633
    10. '.split' → logprob: -20.625001907348633

Token 136: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20784088969230652
    2. '()))
' → logprob: -1.707840919494629
    3. '())' → logprob: -5.707840919494629
    4. '()' → logprob: -5.957840919494629
    5. '())
' → logprob: -8.082840919494629
    6. '))' → logprob: -9.457840919494629
    7. '():
' → logprob: -10.457840919494629
    8. '()
' → logprob: -10.582840919494629
    9. '()))
' → logprob: -10.957840919494629
    10. '()[' → logprob: -11.582840919494629

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012329274788498878
    2. 'ni' → logprob: -5.1373291015625
    3. ')' → logprob: -6.1373291015625
    4. '(' → logprob: -6.3873291015625
    5. '       ' → logprob: -6.7623291015625
    6. '               ' → logprob: -7.5123291015625
    7. '0' → logprob: -7.6373291015625
    8. ' ni' → logprob: -9.3873291015625
    9. '()' → logprob: -9.5123291015625
    10. '   ' → logprob: -10.2623291015625

Token 138: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' (adapté à ' ni') → logprob: -0.1817699670791626
    2. ' ni' → logprob: -2.306769847869873
    3. '           ' → logprob: -2.806769847869873
    4. 'nj' → logprob: -6.931769847869873
    5. 'n' → logprob: -7.181769847869873
    6. 'nc' → logprob: -7.556769847869873
    7. 'li' → logprob: -7.806769847869873
    8. '   ' → logprob: -7.931769847869873
    9. 'mi' → logprob: -7.931769847869873
    10. 'nk' → logprob: -7.931769847869873

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4749511778354645
    2. '=' → logprob: -0.9749511480331421
    3. '[' → logprob: -7.599951267242432
    4. '           ' → logprob: -8.974950790405273
    5. '=line' → logprob: -9.724950790405273
    6. '       ' → logprob: -9.974950790405273
    7. ' ' → logprob: -10.224950790405273
    8. ')' → logprob: -10.849950790405273
    9. '0' → logprob: -10.849950790405273
    10. '        ' → logprob: -11.349950790405273

Token 140: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16022635996341705
    2. ' line' → logprob: -1.9102263450622559
    3. '(line' → logprob: -14.535226821899414
    4. 'len' → logprob: -14.660226821899414
    5. '[line' → logprob: -14.660226821899414
    6. '	line' → logprob: -15.035226821899414
    7. '#line' → logprob: -15.785226821899414
    8. '=line' → logprob: -16.035226821899414
    9. '0' → logprob: -16.535226821899414
    10. 'int' → logprob: -16.535226821899414

Token 141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.372294698550832e-06
    2. '0' → logprob: -11.625009536743164
    3. '(' → logprob: -16.500009536743164
    4. ' [' → logprob: -17.125009536743164
    5. '[
' → logprob: -17.500009536743164
    6. '=' → logprob: -17.625009536743164
    7. '```' → logprob: -17.625009536743164
    8. 's' → logprob: -17.625009536743164
    9. 'def' → logprob: -18.125009536743164
    10. '1' → logprob: -18.250009536743164

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.250016212463379
    3. '[' → logprob: -14.250016212463379
    4. '1' → logprob: -14.437516212463379
    5. '   ' → logprob: -15.250016212463379
    6. '(' → logprob: -15.937516212463379
    7. '-' → logprob: -16.187515258789062
    8. '```' → logprob: -17.000015258789062
    9. '۰' → logprob: -17.000015258789062
    10. ' ' → logprob: -17.250015258789062

Token 143: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6285640597343445
    2. '           ' → logprob: -1.0035641193389893
    3. ')' → logprob: -2.3785641193389893
    4. ']
' → logprob: -5.75356388092041
    5. 'line' → logprob: -6.37856388092041
    6. ']' → logprob: -6.87856388092041
    7. '=line' → logprob: -7.75356388092041
    8. '       ' → logprob: -8.62856388092041
    9. '(line' → logprob: -8.75356388092041
    10. '[line' → logprob: -8.75356388092041

Token 144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001234428636962548
    2. 'war' → logprob: -10.000123023986816
    3. 'hero' → logprob: -10.750123023986816
    4. '       ' → logprob: -10.875123023986816
    5. '          ' → logprob: -11.375123023986816
    6. '   ' → logprob: -12.250123023986816
    7. '
' → logprob: -12.375123023986816
    8. '<|end|>' → logprob: -12.625123023986816
    9. '         ' → logprob: -13.000123023986816
    10. '            
' → logprob: -13.125123023986816

Token 145: ' warrior' (ID: 76541)
  Prédit: 'hero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hero' → logprob: -0.10977219045162201
    2. ' hero' → logprob: -2.359772205352783
    3. '           ' → logprob: -5.734772205352783
    4. 'war' → logprob: -5.734772205352783
    5. ' warrior' → logprob: -6.734772205352783
    6. 'cler' → logprob: -7.359772205352783
    7. 'w' → logprob: -7.734772205352783
    8. 'friend' → logprob: -8.984771728515625
    9. 'friendly' → logprob: -9.734771728515625
    10. '       ' → logprob: -9.859771728515625

Token 146: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0025412975810468197
    2. 's' → logprob: -6.1275410652160645
    3. '_' → logprob: -8.252541542053223
    4. '_f' → logprob: -10.127541542053223
    5. 'list' → logprob: -11.002541542053223
    6. '_w' → logprob: -11.252541542053223
    7. '_set' → logprob: -11.502541542053223
    8. '_s' → logprob: -11.877541542053223
    9. '_ids' → logprob: -13.252541542053223
    10. '_lst' → logprob: -13.377541542053223

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10077493637800217
    2. ' =' → logprob: -2.3507750034332275
    3. '=line' → logprob: -7.475774765014648
    4. ' line' → logprob: -14.100774765014648
    5. 'line' → logprob: -14.475774765014648
    6. '(line' → logprob: -16.47577476501465
    7. '[line' → logprob: -17.10077476501465
    8. 's' → logprob: -17.47577476501465
    9. '=set' → logprob: -17.47577476501465
    10. ')' → logprob: -17.85077476501465

Token 148: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04858975484967232
    2. 'line' → logprob: -3.0485897064208984
    3. ' list' → logprob: -13.673589706420898
    4. '[line' → logprob: -15.048589706420898
    5. ' set' → logprob: -15.423589706420898
    6. 'list' → logprob: -15.548589706420898
    7. '(line' → logprob: -15.798589706420898
    8. 'set' → logprob: -16.4235897064209
    9. '	line' → logprob: -16.4235897064209
    10. '=line' → logprob: -16.6735897064209

Token 149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.875000953674316
    3. '           ' → logprob: -15.125000953674316
    4. ' [' → logprob: -15.750000953674316
    5. 's' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. '[:]' → logprob: -17.125001907348633
    8. '(' → logprob: -17.125001907348633
    9. '=' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.500001907348633

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -13.375007629394531
    3. ':]' → logprob: -13.375007629394531
    4. ']' → logprob: -13.625007629394531
    5. '[' → logprob: -13.875007629394531
    6. ':' → logprob: -13.875007629394531
    7. '   ' → logprob: -14.750007629394531
    8. '0' → logprob: -15.375007629394531
    9. '(' → logprob: -15.625007629394531
    10. '           ' → logprob: -15.875007629394531

Token 151: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -1.0921942703134846e-05
    2. ':' → logprob: -12.25001049041748
    3. ']' → logprob: -12.37501049041748
    4. 'if' → logprob: -14.25001049041748
    5. ' :]' → logprob: -14.62501049041748
    6. ':]
' → logprob: -15.37501049041748
    7. ':]

' → logprob: -16.000011444091797
    8. '()]' → logprob: -16.750011444091797
    9. ' if' → logprob: -17.000011444091797
    10. '0' → logprob: -17.000011444091797

Token 152: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06273937225341797
    2. 'if' → logprob: -2.812739372253418
    3. '           ' → logprob: -7.187739372253418
    4. '            ' → logprob: -12.062739372253418
    5. '          ' → logprob: -12.687739372253418
    6. '               ' → logprob: -12.937739372253418
    7. '             ' → logprob: -13.562739372253418
    8. '         ' → logprob: -13.687739372253418
    9. ' ' → logprob: -14.687739372253418
    10. '       ' → logprob: -14.812739372253418

Token 153: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.11282570660114288
    2. ' ni' → logprob: -2.237825632095337
    3. '(' → logprob: -14.112825393676758
    4. ' ' → logprob: -14.612825393676758
    5. 'n' → logprob: -14.737825393676758
    6. '   ' → logprob: -14.987825393676758
    7. '0' → logprob: -15.737825393676758
    8. '```' → logprob: -15.737825393676758
    9. 'ny' → logprob: -15.987825393676758
    10. 'len' → logprob: -16.112825393676758

Token 154: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931567788124084
    2. ' >' → logprob: -0.6931567788124084
    3. ' ' → logprob: -12.443157196044922
    4. ' ' → logprob: -13.193157196044922
    5. '0' → logprob: -13.443157196044922
    6. 'else' → logprob: -14.568157196044922
    7. '()>' → logprob: -14.693157196044922
    8. ' else' → logprob: -14.943157196044922
    9. '[' → logprob: -15.443157196044922
    10. ')>' → logprob: -15.693157196044922

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300091043114662
    2. ' ' → logprob: -3.1680009365081787
    3. '>' → logprob: -14.855501174926758
    4. '   ' → logprob: -15.105501174926758
    5. '```' → logprob: -16.480501174926758
    6. '=' → logprob: -16.543001174926758
    7. ' NC' → logprob: -16.668001174926758
    8. '  ' → logprob: -16.668001174926758
    9. '(' → logprob: -16.855501174926758
    10. ' ' → logprob: -16.980501174926758

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005270395893603563
    2. ' ' → logprob: -5.255270481109619
    3. '   ' → logprob: -11.630270004272461
    4. '>' → logprob: -12.505270004272461
    5. '1' → logprob: -12.567770004272461
    6. 'NC' → logprob: -12.692770004272461
    7. ' NC' → logprob: -12.880270004272461
    8. 'C' → logprob: -13.255270004272461
    9. 'NM' → logprob: -13.880270004272461
    10. ' C' → logprob: -14.005270004272461

Token 157: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31367477774620056
    2. ' else' → logprob: -1.313674807548523
    3. '           ' → logprob: -8.063674926757812
    4. '       ' → logprob: -10.188674926757812
    5. '[]' → logprob: -10.563674926757812
    6. '               ' → logprob: -11.188674926757812
    7. '         ' → logprob: -12.563674926757812
    8. '          ' → logprob: -13.063674926757812
    9. '        ' → logprob: -13.188674926757812
    10. ')' → logprob: -13.188674926757812

Token 158: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00044616201194003224
    2. '[]
' → logprob: -7.750446319580078
    3. ' []' → logprob: -12.000446319580078
    4. 'set' → logprob: -12.250446319580078
    5. '[]

' → logprob: -13.000446319580078
    6. '[])' → logprob: -13.750446319580078
    7. '[]}' → logprob: -14.250446319580078
    8. '[' → logprob: -15.375446319580078
    9. '[]>' → logprob: -16.125446319580078
    10. 'else' → logprob: -17.000446319580078

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006475062109529972
    2. 'cler' → logprob: -7.62564754486084
    3. '       ' → logprob: -9.12564754486084
    4. ' cler' → logprob: -11.00064754486084
    5. '          ' → logprob: -11.25064754486084
    6. 'cl' → logprob: -11.87564754486084
    7. '         ' → logprob: -12.62564754486084
    8. '               ' → logprob: -12.75064754486084
    9. '   ' → logprob: -12.87564754486084
    10. '<|end|>' → logprob: -14.00064754486084

Token 160: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' (adapté à ' cler') → logprob: -0.08140569925308228
    2. ' cler' → logprob: -2.5814056396484375
    3. '           ' → logprob: -6.0814056396484375
    4. 'war' → logprob: -9.206405639648438
    5. ' warrior' → logprob: -10.831405639648438
    6. 'cl' → logprob: -11.331405639648438
    7. 'clar' → logprob: -11.456405639648438
    8. '   ' → logprob: -11.831405639648438
    9. ' clerk' → logprob: -11.893905639648438
    10. '       ' → logprob: -11.893905639648438

Token 161: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.2664456789934775e-06
    2. 'ics' → logprob: -14.625000953674316
    3. '_ic' → logprob: -15.375000953674316
    4. 'c' → logprob: -15.750000953674316
    5. 'ict' → logprob: -16.125001907348633
    6. 'ric' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. '       ' → logprob: -17.375001907348633
    9. '_w' → logprob: -17.500001907348633
    10. '           ' → logprob: -17.500001907348633

Token 162: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -9.253090865968261e-06
    2. '.append' → logprob: -12.250009536743164
    3. '_' → logprob: -12.625009536743164
    4. '_d' → logprob: -15.375009536743164
    5. 'append' → logprob: -15.875009536743164
    6. '_append' → logprob: -16.500009536743164
    7. 's' → logprob: -16.750009536743164
    8. '_b' → logprob: -16.875009536743164
    9. '_m' → logprob: -16.875009536743164
    10. '_s' → logprob: -17.375009536743164

Token 163: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0023711316753178835
    2. 'arr' → logprob: -6.502371311187744
    3. 'ari' → logprob: -7.627371311187744
    4. 'append' → logprob: -9.127370834350586
    5. '.append' → logprob: -10.002370834350586
    6. '_' → logprob: -10.127370834350586
    7. 'arri' → logprob: -10.252370834350586
    8. 'or' → logprob: -10.502370834350586
    9. 'war' → logprob: -10.502370834350586
    10. '_ar' → logprob: -10.627370834350586

Token 164: 'rior' (ID: 12072)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.32978329062461853
    2. '_' → logprob: -1.579783320426941
    3. '_w' → logprob: -3.7047832012176514
    4. '.append' → logprob: -3.9547832012176514
    5. 'append' → logprob: -4.7047834396362305
    6. 'rior' → logprob: -4.8297834396362305
    7. 'ror' → logprob: -5.2047834396362305
    8. 'ior' → logprob: -5.9547834396362305
    9. 'ar' → logprob: -7.2047834396362305
    10. 'ator' → logprob: -7.4547834396362305

Token 165: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.68153518543113e-05
    2. '.' → logprob: -9.875057220458984
    3. 'append' → logprob: -12.375057220458984
    4. ' .' → logprob: -14.375057220458984
    5. '.ap' → logprob: -15.625057220458984
    6. '.app' → logprob: -15.625057220458984
    7. '.setdefault' → logprob: -18.125057220458984
    8. '.extend' → logprob: -18.375057220458984
    9. '.add' → logprob: -18.750057220458984
    10. '.Append' → logprob: -18.875057220458984

Token 166: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.005946691147983074
    2. 'set' → logprob: -5.130946636199951
    3. '(' → logprob: -11.75594711303711
    4. ' set' → logprob: -11.88094711303711
    5. '=set' → logprob: -13.13094711303711
    6. ' (' → logprob: -13.88094711303711
    7. ')set' → logprob: -15.50594711303711
    8. '	set' → logprob: -16.75594711303711
    9. ',set' → logprob: -17.13094711303711
    10. '(se' → logprob: -17.38094711303711

Token 167: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.2200749754119897e-06
    2. 'war' → logprob: -13.125001907348633
    3. 'War' → logprob: -17.000001907348633
    4. '(' → logprob: -17.125001907348633
    5. ' (' → logprob: -17.125001907348633
    6. '(W' → logprob: -17.375001907348633
    7. '-war' → logprob: -19.000001907348633
    8. '(cl' → logprob: -19.375001907348633
    9. '((' → logprob: -19.625001907348633
    10. '(wx' → logprob: -19.625001907348633

Token 168: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.006078345235437155
    2. 'arri' → logprob: -5.631078243255615
    3. 'arr' → logprob: -6.381078243255615
    4. 'ari' → logprob: -7.256078243255615
    5. 'war' → logprob: -9.756078720092773
    6. '(' → logprob: -11.631078720092773
    7. '(ar' → logprob: -13.006078720092773
    8. '[' → logprob: -13.131078720092773
    9. ' warrior' → logprob: -14.006078720092773
    10. 'arian' → logprob: -14.756078720092773

Token 169: 'rior' (ID: 12072)
  Prédit: 'rior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rior' → logprob: -0.2976300120353699
    2. 'ar' → logprob: -2.2976300716400146
    3. 'ior' → logprob: -2.5476300716400146
    4. 'or' → logprob: -2.7976300716400146
    5. 'arr' → logprob: -4.4226298332214355
    6. 'ari' → logprob: -6.1726298332214355
    7. '_list' → logprob: -6.9226298332214355
    8. 'ror' → logprob: -7.6726298332214355
    9. '[' → logprob: -7.9226298332214355
    10. ')' → logprob: -7.9226298332214355

Token 170: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.4849443838757e-06
    2. 'list' → logprob: -13.250004768371582
    3. '_line' → logprob: -14.125004768371582
    4. ')' → logprob: -15.000004768371582
    5. '_w' → logprob: -15.125004768371582
    6. 'w' → logprob: -15.250004768371582
    7. 's' → logprob: -15.375004768371582
    8. '_' → logprob: -15.750004768371582
    9. 'List' → logprob: -15.875004768371582
    10. '[' → logprob: -15.875004768371582

Token 171: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002448893792461604
    2. '())' → logprob: -8.875245094299316
    3. '))' → logprob: -9.375245094299316
    4. '       ' → logprob: -11.125245094299316
    5. ')
' → logprob: -12.875245094299316
    6. '()' → logprob: -13.500245094299316
    7. ' )' → logprob: -14.375245094299316
    8. ')

' → logprob: -15.250245094299316
    9. ')}' → logprob: -15.750245094299316
    10. '   ' → logprob: -16.375244140625

Token 172: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6445824503898621
    2. '#' (adapté à ' #') → logprob: -0.7695824503898621
    3. '   ' → logprob: -5.269582271575928
    4. '```' → logprob: -6.644582271575928
    5. ' #' → logprob: -7.019582271575928
    6. '
' → logprob: -7.269582271575928
    7. '        
' → logprob: -7.519582271575928
    8. 'for' → logprob: -7.769582271575928
    9. 'vill' → logprob: -8.519582748413086
    10. 'n' → logprob: -8.582082748413086

Token 174: ' read' (ID: 1729)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11869270354509354
    2. '       ' → logprob: -3.743692636489868
    3. 'for' → logprob: -4.368692874908447
    4. ' #' → logprob: -4.493692874908447
    5. '   ' → logprob: -4.618692874908447
    6. 'monster' → logprob: -5.556192874908447
    7. ' for' → logprob: -5.618692874908447
    8. 'read' → logprob: -6.118692874908447
    9. 'max' → logprob: -6.493692874908447
    10. 'nec' → logprob: -6.556192874908447

Token 175: ' m' (ID: 284)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mon' → logprob: -1.1921920776367188
    2. 'heroes' → logprob: -2.4421920776367188
    3. 'mages' → logprob: -2.6921920776367188
    4. 'monster' → logprob: -2.8171920776367188
    5. 'items' → logprob: -3.2546920776367188
    6. ' monsters' → logprob: -3.5671920776367188
    7. 'cler' → logprob: -3.7546920776367188
    8. 'hero' → logprob: -3.8171920776367188
    9. 'm' → logprob: -3.9421920776367188
    10. 'for' → logprob: -4.067192077636719

Token 176: 'ages' (ID: 1461)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.768487274646759
    2. 'ages' → logprob: -1.0184872150421143
    3. 'age' → logprob: -2.5184872150421143
    4. 'agic' → logprob: -3.2684872150421143
    5. 'ag' → logprob: -3.8934872150421143
    6. 'ons' → logprob: -5.393487453460693
    7. 'ana' → logprob: -5.518487453460693
    8. 'agi' → logprob: -5.768487453460693
    9. 'ap' → logprob: -5.893487453460693
    10. 'ission' → logprob: -6.268487453460693

Token 177: ''' (ID: 6)
  Prédit: 'mages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mages' → logprob: -1.6909579038619995
    2. '   ' → logprob: -1.8159579038619995
    3. '=' → logprob: -1.9409579038619995
    4. '       ' → logprob: -2.190958023071289
    5. ' =' → logprob: -2.190958023071289
    6. '_m' → logprob: -2.315958023071289
    7. 'mage' → logprob: -2.315958023071289
    8. 'm' → logprob: -2.815958023071289
    9. '=[]
' → logprob: -4.815958023071289
    10. '=[]' → logprob: -4.815958023071289

Token 178: ' friendly' (ID: 11888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8712167143821716
    2. '_w' → logprob: -0.9962167143821716
    3. 'war' → logprob: -3.2462167739868164
    4. 'mage' → logprob: -3.2462167739868164
    5. '_f' → logprob: -3.3712167739868164
    6. '_m' → logprob: -3.3712167739868164
    7. 'friendly' → logprob: -3.3712167739868164
    8. 'hero' → logprob: -4.371216773986816
    9. 'wizard' → logprob: -4.996216773986816
    10. 'friend' → logprob: -5.746216773986816

Token 179: ' cler' (ID: 91536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5464481115341187
    2. '_w' → logprob: -1.2964481115341187
    3. ' warriors' → logprob: -2.921448230743408
    4. 'war' → logprob: -4.046448230743408
    5. '_cl' → logprob: -4.046448230743408
    6. 'cler' → logprob: -4.296448230743408
    7. ' cler' → logprob: -4.296448230743408
    8. '_m' → logprob: -4.546448230743408
    9. ' heroes' → logprob: -4.796448230743408
    10. 'heroes' → logprob: -5.546448230743408

Token 180: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.2522291839122772
    2. 'ic' → logprob: -1.5022292137145996
    3. 's' → logprob: -9.252228736877441
    4. '#' → logprob: -10.002228736877441
    5. '   ' → logprob: -10.752228736877441
    6. 'cs' → logprob: -11.252228736877441
    7. '       ' → logprob: -11.252228736877441
    8. '[' → logprob: -11.377228736877441
    9. '```' → logprob: -11.502228736877441
    10. '
' → logprob: -11.752228736877441

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4864500164985657
    2. 'm' → logprob: -1.861449956893921
    3. 'mage' → logprob: -2.236449956893921
    4. 'mages' → logprob: -2.236449956893921
    5. '   ' → logprob: -4.4864501953125
    6. '
' → logprob: -5.9864501953125
    7. '```' → logprob: -7.7364501953125
    8. '=' → logprob: -7.9864501953125
    9. ' mage' → logprob: -7.9864501953125
    10. '<|end|>' → logprob: -8.3614501953125

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054165247827768326
    2. 'm' → logprob: -3.1791653633117676
    3. 'mages' → logprob: -5.304165363311768
    4. '   ' → logprob: -5.804165363311768
    5. '<|end|>' → logprob: -6.929165363311768
    6. 'mage' → logprob: -7.054165363311768
    7. '
' → logprob: -8.30416488647461
    8. ' m' → logprob: -8.55416488647461
    9. '```' → logprob: -9.17916488647461
    10. '<|end|>' → logprob: -9.42916488647461

Token 183: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' (adapté à ' mage') → logprob: -0.0034917385783046484
    2. ' mage' → logprob: -6.1284918785095215
    3. 'mages' → logprob: -6.8784918785095215
    4. '       ' → logprob: -8.503491401672363
    5. 'm' → logprob: -9.753491401672363
    6. '   ' → logprob: -11.753491401672363
    7. '
' → logprob: -12.878491401672363
    8. 'Mage' → logprob: -13.503491401672363
    9. ' m' → logprob: -14.378491401672363
    10. 'mag' → logprob: -14.628491401672363

Token 184: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.8056243658065796
    2. '_' → logprob: -1.3056243658065796
    3. '_f' → logprob: -1.6806243658065796
    4. '_m' → logprob: -3.055624485015869
    5. '_w' → logprob: -3.305624485015869
    6. '_friend' → logprob: -4.555624485015869
    7. '_magic' → logprob: -7.305624485015869
    8. 'mage' → logprob: -8.805624008178711
    9. '_list' → logprob: -9.180624008178711
    10. '_mag' → logprob: -9.305624008178711

Token 185: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -5.741137283621356e-05
    2. 'e' → logprob: -10.250057220458984
    3. ' er' → logprob: -12.625057220458984
    4. '```' → logprob: -13.125057220458984
    5. 'ar' → logprob: -13.250057220458984
    6. '_' → logprob: -13.250057220458984
    7. 'erc' → logprob: -13.375057220458984
    8. '[' → logprob: -13.625057220458984
    9. 'ery' → logprob: -14.125057220458984
    10. '   ' → logprob: -14.125057220458984

Token 186: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0013886855449527502
    2. 'ics' → logprob: -6.6263885498046875
    3. '_' → logprob: -11.001388549804688
    4. '

' → logprob: -11.501388549804688
    5. '   ' → logprob: -12.626388549804688
    6. '```' → logprob: -13.063888549804688
    7. '_ic' → logprob: -13.063888549804688
    8. 'i' → logprob: -13.126388549804688
    9. '1' → logprob: -13.313888549804688
    10. '#' → logprob: -13.376388549804688

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933210492134094
    2. ' =' → logprob: -0.6933210492134094
    3. '=[]' → logprob: -8.943321228027344
    4. ' ' → logprob: -10.943321228027344
    5. 's' → logprob: -11.943321228027344
    6. '=[]
' → logprob: -12.693321228027344
    7. '<|end|>' → logprob: -12.693321228027344
    8. '   ' → logprob: -12.943321228027344
    9. '_' → logprob: -12.943321228027344
    10. '[' → logprob: -13.443321228027344

Token 188: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.03825045004487038
    2. '[]' → logprob: -3.53825044631958
    3. ' []
' → logprob: -4.78825044631958
    4. ' []' → logprob: -9.038250923156738
    5. '=[]
' → logprob: -11.038250923156738
    6. '([])
' → logprob: -13.788250923156738
    7. '[]

' → logprob: -14.913250923156738
    8. '=[]' → logprob: -15.038250923156738
    9. '[])
' → logprob: -15.788250923156738
    10. '[' → logprob: -15.913250923156738

Token 189: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1596848964691162
    2. '       ' → logprob: -2.159684896469116
    3. ' for' → logprob: -3.534684896469116
    4. '   ' → logprob: -6.659685134887695
    5. '[]
' → logprob: -6.659685134887695
    6. '
' → logprob: -8.034685134887695
    7. '[]' → logprob: -10.159685134887695
    8. '[' → logprob: -10.284685134887695
    9. '<|end|>' → logprob: -10.659685134887695
    10. '	for' → logprob: -11.034685134887695

Token 190: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1160349458805285e-05
    2. ' for' → logprob: -12.000011444091797
    3. '[]
' → logprob: -12.250011444091797
    4. '[]' → logprob: -16.125011444091797
    5. '       ' → logprob: -17.625011444091797
    6. '
' → logprob: -17.875011444091797
    7. '   ' → logprob: -18.250011444091797
    8. '[
' → logprob: -19.000011444091797
    9. '	for' → logprob: -19.375011444091797
    10. '=[]
' → logprob: -20.750011444091797

Token 191: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.85366350505501e-05
    2. ' _' → logprob: -9.62509822845459
    3. ' in' → logprob: -10.37509822845459
    4. '_range' → logprob: -13.87509822845459
    5. ' range' → logprob: -15.62509822845459
    6. 'range' → logprob: -16.625099182128906
    7. 'in' → logprob: -17.375099182128906
    8. '_in' → logprob: -17.875099182128906
    9. '_=' → logprob: -19.625099182128906
    10. '`' → logprob: -20.500099182128906

Token 192: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003392767102923244
    2. ' in' → logprob: -8.12533950805664
    3. ' _' → logprob: -10.50033950805664
    4. 'in' → logprob: -11.12533950805664
    5. 'range' → logprob: -14.25033950805664
    6. '_range' → logprob: -15.37533950805664
    7. ' range' → logprob: -16.62533950805664
    8. '_=' → logprob: -17.12533950805664
    9. '_in' → logprob: -17.37533950805664
    10. 'import' → logprob: -18.62533950805664

Token 193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12748098373413086
    2. ' range' → logprob: -2.127480983734131
    3. '_' → logprob: -7.877480983734131
    4. '_range' → logprob: -8.877481460571289
    5. '(range' → logprob: -10.377481460571289
    6. 'M' → logprob: -14.377481460571289
    7. '_m' → logprob: -14.627481460571289
    8. '	range' → logprob: -14.877481460571289
    9. ' _' → logprob: -15.127481460571289
    10. 'm' → logprob: -15.252481460571289

Token 194: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002946320688351989
    2. '(M' → logprob: -6.377946376800537
    3. '(' → logprob: -6.877946376800537
    4. 'NM' → logprob: -8.877945899963379
    5. ' (' → logprob: -10.127945899963379
    6. ' NM' → logprob: -10.752945899963379
    7. 'N' → logprob: -12.627945899963379
    8. 'M' → logprob: -12.877945899963379
    9. '(n' → logprob: -13.377945899963379
    10. '(
' → logprob: -13.752945899963379

Token 195: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00617253640666604
    2. '):' → logprob: -5.1311726570129395
    3. '       ' → logprob: -9.631172180175781
    4. '):
' → logprob: -10.006172180175781
    5. '():
' → logprob: -10.256172180175781
    6. ' ):
' → logprob: -10.256172180175781
    7. ')' → logprob: -10.881172180175781
    8. ':
' → logprob: -11.381172180175781
    9. '   ' → logprob: -11.631172180175781
    10. '           ' → logprob: -11.881172180175781

Token 196: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19685032963752747
    2. '   ' → logprob: -2.571850299835205
    3. '           ' → logprob: -2.946850299835205
    4. 'line' → logprob: -3.071850299835205
    5. ' line' → logprob: -5.821850299835205
    6. '	line' → logprob: -8.946850776672363
    7. '(line' → logprob: -9.196850776672363
    8. '	       ' → logprob: -9.821850776672363
    9. '[line' → logprob: -9.821850776672363
    10. '	   ' → logprob: -9.821850776672363

Token 197: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.251981258392334
    2. ' line' → logprob: -1.501981258392334
    3. '   ' → logprob: -10.376981735229492
    4. '           ' → logprob: -12.001981735229492
    5. '(line' → logprob: -12.501981735229492
    6. '	line' → logprob: -12.626981735229492
    7. 'list' → logprob: -13.001981735229492
    8. '       ' → logprob: -13.251981735229492
    9. '[line' → logprob: -14.126981735229492
    10. ' ' → logprob: -14.376981735229492

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016038119792938232
    2. '=' → logprob: -4.141037940979004
    3. '   ' → logprob: -13.141037940979004
    4. '=list' → logprob: -14.266037940979004
    5. '=line' → logprob: -14.516037940979004
    6. ' ' → logprob: -15.391037940979004
    7. '           ' → logprob: -16.26603889465332
    8. '```' → logprob: -16.39103889465332
    9. '    ' → logprob: -16.51603889465332
    10. '        ' → logprob: -16.51603889465332

Token 199: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029750484973192215
    2. ' list' → logprob: -3.5297505855560303
    3. 'List' → logprob: -20.02975082397461
    4. '(list' → logprob: -20.40475082397461
    5. '=list' → logprob: -20.90475082397461
    6. '	list' → logprob: -21.02975082397461
    7. '.list' → logprob: -21.52975082397461
    8. '           ' → logprob: -21.52975082397461
    9. ' ' → logprob: -22.27975082397461
    10. '       ' → logprob: -22.52975082397461

Token 200: '(map' (ID: 16946)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.3127400577068329
    2. '=' → logprob: -2.5627400875091553
    3. '(' → logprob: -2.6877400875091553
    4. '=list' → logprob: -2.8127400875091553
    5. 'list' → logprob: -3.5627400875091553
    6. ' =' → logprob: -4.312739849090576
    7. ' (' → logprob: -5.062739849090576
    8. '(map' → logprob: -5.437739849090576
    9. ')' → logprob: -5.812739849090576
    10. '```' → logprob: -6.187739849090576

Token 201: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0077051762491464615
    2. 'int' → logprob: -4.882705211639404
    3. ',int' → logprob: -10.257704734802246
    4. '=int' → logprob: -10.757704734802246
    5. '[int' → logprob: -10.882704734802246
    6. '<int' → logprob: -11.132704734802246
    7. ' int' → logprob: -12.507704734802246
    8. ']int' → logprob: -12.882704734802246
    9. '```' → logprob: -13.632704734802246
    10. ':int' → logprob: -14.382704734802246

Token 202: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03952218219637871
    2. ',int' → logprob: -3.664522171020508
    3. ',' → logprob: -5.039522171020508
    4. '(input' → logprob: -5.414522171020508
    5. 'int' → logprob: -7.289522171020508
    6. ',input' → logprob: -7.414522171020508
    7. '=int' → logprob: -7.914522171020508
    8. ' (' → logprob: -8.414522171020508
    9. '   ' → logprob: -9.414522171020508
    10. '<int' → logprob: -9.914522171020508

Token 203: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6941499710083008
    2. 'input' → logprob: -0.6941499710083008
    3. ' input' → logprob: -6.944149971008301
    4. ' int' → logprob: -10.1941499710083
    5. '(int' → logprob: -14.8191499710083
    6. '<int' → logprob: -16.444149017333984
    7. '(input' → logprob: -16.944149017333984
    8. '<input' → logprob: -17.194149017333984
    9. ')' → logprob: -17.319149017333984
    10. '[int' → logprob: -17.319149017333984

Token 204: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.625000953674316
    3. ' ().' → logprob: -17.375001907348633
    4. '.' → logprob: -18.625001907348633
    5. '()
' → logprob: -20.000001907348633
    6. '()[' → logprob: -20.000001907348633
    7. '(' → logprob: -20.625001907348633
    8. ' .' → logprob: -20.750001907348633
    9. '().__' → logprob: -21.000001907348633
    10. '.split' → logprob: -21.500001907348633

Token 205: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.75
    3. '(split' → logprob: -17.0
    4. 'spl' → logprob: -19.5
    5. 'strip' → logprob: -20.0
    6. ')' → logprob: -20.25
    7. '.split' → logprob: -20.5
    8. '```' → logprob: -20.5
    9. 'skip' → logprob: -22.0
    10. '_split' → logprob: -22.75

Token 206: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04203759506344795
    2. '()))
' → logprob: -3.4170374870300293
    3. '()' → logprob: -5.292037487030029
    4. '())' → logprob: -5.917037487030029
    5. '))' → logprob: -7.917037487030029
    6. '():
' → logprob: -9.542037963867188
    7. '())
' → logprob: -9.667037963867188
    8. '(' → logprob: -9.667037963867188
    9. '()
' → logprob: -10.667037963867188
    10. '()))

' → logprob: -11.667037963867188

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012230603955686092
    2. 'ni' → logprob: -4.637230396270752
    3. '       ' → logprob: -6.137230396270752
    4. '0' → logprob: -9.13723087310791
    5. '               ' → logprob: -9.51223087310791
    6. '   ' → logprob: -10.26223087310791
    7. '```' → logprob: -10.51223087310791
    8. '          ' → logprob: -11.26223087310791
    9. '
' → logprob: -11.63723087310791
    10. '	       ' → logprob: -11.63723087310791

Token 208: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' (adapté à ' ni') → logprob: -0.0026793447323143482
    2. '           ' → logprob: -6.377679347991943
    3. ' ni' → logprob: -7.002679347991943
    4. 'n' → logprob: -10.752678871154785
    5. 'nu' → logprob: -11.127678871154785
    6. '               ' → logprob: -11.877678871154785
    7. 'nii' → logprob: -12.377678871154785
    8. '   ' → logprob: -12.877678871154785
    9. 'nj' → logprob: -13.502678871154785
    10. '0' → logprob: -13.502678871154785

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34858912229537964
    2. ' =' → logprob: -1.2235891819000244
    3. '[' → logprob: -9.473588943481445
    4. '=line' → logprob: -10.598588943481445
    5. '0' → logprob: -11.723588943481445
    6. ' ' → logprob: -11.973588943481445
    7. '           ' → logprob: -12.348588943481445
    8. ')' → logprob: -12.473588943481445
    9. '       ' → logprob: -12.473588943481445
    10. '=int' → logprob: -12.723588943481445

Token 210: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.061969030648469925
    2. ' line' → logprob: -2.811969041824341
    3. 'len' → logprob: -14.061968803405762
    4. '(line' → logprob: -15.311968803405762
    5. '[line' → logprob: -16.311969757080078
    6. '	line' → logprob: -16.686969757080078
    7. '=line' → logprob: -17.061969757080078
    8. 'list' → logprob: -17.311969757080078
    9. '#line' → logprob: -17.561969757080078
    10. 'length' → logprob: -17.936969757080078

Token 211: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002211754210293293
    2. '0' → logprob: -6.127211570739746
    3. ' [' → logprob: -12.252211570739746
    4. '=' → logprob: -12.502211570739746
    5. '           ' → logprob: -12.627211570739746
    6. '<|end|>' → logprob: -13.127211570739746
    7. '>' → logprob: -13.377211570739746
    8. ' ' → logprob: -13.377211570739746
    9. '1' → logprob: -13.377211570739746
    10. '#' → logprob: -13.502211570739746

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010354319238103926
    2. 'line' → logprob: -9.750103950500488
    3. '1' → logprob: -11.000103950500488
    4. ' ' → logprob: -11.750103950500488
    5. 'len' → logprob: -11.875103950500488
    6. '[' → logprob: -12.375103950500488
    7. ' line' → logprob: -13.500103950500488
    8. 'ni' → logprob: -13.875103950500488
    9. '(line' → logprob: -14.187603950500488
    10. 'int' → logprob: -14.250103950500488

Token 213: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7831364870071411
    2. ')
' → logprob: -1.0331364870071411
    3. '           ' → logprob: -2.1581363677978516
    4. '])' → logprob: -2.7831363677978516
    5. '])
' → logprob: -5.283136367797852
    6. 'line' → logprob: -7.283136367797852
    7. '[line' → logprob: -7.533136367797852
    8. ']' → logprob: -7.658136367797852
    9. '               ' → logprob: -7.658136367797852
    10. '       ' → logprob: -7.658136367797852

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016561364755034447
    2. 'line' → logprob: -7.3766560554504395
    3. 'hero' → logprob: -7.3766560554504395
    4. '          ' → logprob: -8.376656532287598
    5. '       ' → logprob: -10.376656532287598
    6. '         ' → logprob: -10.876656532287598
    7. '            ' → logprob: -11.001656532287598
    8. '            
' → logprob: -11.001656532287598
    9. '<|end|>' → logprob: -11.376656532287598
    10. 'war' → logprob: -11.376656532287598

Token 215: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' (adapté à ' cler') → logprob: -0.01016211323440075
    2. ' cler' → logprob: -4.760161876678467
    3. 'cl' → logprob: -6.760161876678467
    4. 'hero' → logprob: -8.885162353515625
    5. 'mage' → logprob: -9.385162353515625
    6. 'friend' → logprob: -10.260162353515625
    7. ' hero' → logprob: -11.135162353515625
    8. '           ' → logprob: -11.135162353515625
    9. 'cli' → logprob: -11.385162353515625
    10. 'friendly' → logprob: -11.510162353515625

Token 216: 'ic' (ID: 291)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.11723710596561432
    2. 'ic' → logprob: -2.367237091064453
    3. 'ist' → logprob: -4.742237091064453
    4. '_cl' → logprob: -5.242237091064453
    5. '_' → logprob: -6.492237091064453
    6. 'ilist' → logprob: -8.242237091064453
    7. 'ics' → logprob: -8.367237091064453
    8. 'cl' → logprob: -8.617237091064453
    9. ' _' → logprob: -9.617237091064453
    10. '_c' → logprob: -9.992237091064453

Token 217: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.8325677703833207e-05
    2. '_' → logprob: -10.625028610229492
    3. 'list' → logprob: -13.250028610229492
    4. '_cl' → logprob: -14.125028610229492
    5. 's' → logprob: -14.500028610229492
    6. '_lst' → logprob: -15.125028610229492
    7. '_l' → logprob: -15.250028610229492
    8. 'List' → logprob: -15.375028610229492
    9. '_lists' → logprob: -15.375028610229492
    10. '_lista' → logprob: -16.875028610229492

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022899746894836
    2. '=' → logprob: -1.910228967666626
    3. '=line' → logprob: -12.285228729248047
    4. ' ' → logprob: -16.285228729248047
    5. '=set' → logprob: -18.160228729248047
    6. '=
' → logprob: -18.285228729248047
    7. '           ' → logprob: -18.535228729248047
    8. 's' → logprob: -18.535228729248047
    9. ' =
' → logprob: -18.535228729248047
    10. '=[]' → logprob: -18.660228729248047

Token 219: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3132641315460205
    2. 'line' → logprob: -1.3132641315460205
    3. 'list' → logprob: -14.063263893127441
    4. ' list' → logprob: -14.313263893127441
    5. '[line' → logprob: -14.813263893127441
    6. '(line' → logprob: -15.188263893127441
    7. '=line' → logprob: -16.063264846801758
    8. '	line' → logprob: -16.313264846801758
    9. ' ' → logprob: -17.313264846801758
    10. 'Line' → logprob: -17.563264846801758

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.375000953674316
    3. '[:]' → logprob: -16.125
    4. 'if' → logprob: -17.25
    5. '```' → logprob: -17.25
    6. ' [' → logprob: -17.625
    7. '[]' → logprob: -17.875
    8. '[
' → logprob: -18.125
    9. '[:' → logprob: -18.25
    10. '           ' → logprob: -18.375

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11483636498451233
    2. 'line' → logprob: -2.2398364543914795
    3. ' line' → logprob: -6.3648362159729
    4. '[' → logprob: -8.739836692810059
    5. ' ' → logprob: -9.489836692810059
    6. ']' → logprob: -10.864836692810059
    7. '[line' → logprob: -11.489836692810059
    8. 'list' → logprob: -11.614836692810059
    9. '(line' → logprob: -11.739836692810059
    10. '[]' → logprob: -12.864836692810059

Token 222: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -1.4140441635390744e-05
    2. ':' → logprob: -11.500014305114746
    3. ']' → logprob: -12.875014305114746
    4. ' :]' → logprob: -14.250014305114746
    5. ':]
' → logprob: -15.375014305114746
    6. ':]

' → logprob: -15.750014305114746
    7. 'if' → logprob: -16.00001335144043
    8. ':],' → logprob: -17.00001335144043
    9. ':].' → logprob: -17.12501335144043
    10. '()]' → logprob: -17.37501335144043

Token 223: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10020947456359863
    2. 'if' → logprob: -2.3502094745635986
    3. '           ' → logprob: -13.85020923614502
    4. '```' → logprob: -14.35020923614502
    5. 'If' → logprob: -15.35020923614502
    6. '<|end|>' → logprob: -15.47520923614502
    7. '               ' → logprob: -15.97520923614502
    8. ' ' → logprob: -16.225210189819336
    9. '            ' → logprob: -16.225210189819336
    10. '	if' → logprob: -16.350210189819336

Token 224: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.5759454369544983
    2. 'ni' → logprob: -0.8259454369544983
    3. ' ' → logprob: -14.075945854187012
    4. '   ' → logprob: -14.200945854187012
    5. 'n' → logprob: -14.700945854187012
    6. ' ny' → logprob: -14.700945854187012
    7. '           ' → logprob: -14.825945854187012
    8. ' len' → logprob: -15.075945854187012
    9. 'len' → logprob: -15.325945854187012
    10. '```' → logprob: -15.325945854187012

Token 225: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47521689534187317
    2. '>' → logprob: -0.9752168655395508
    3. '0' → logprob: -6.850216865539551
    4. ' ' → logprob: -9.72521686553955
    5. ' ' → logprob: -11.97521686553955
    6. 'len' → logprob: -12.85021686553955
    7. '()>' → logprob: -13.72521686553955
    8. '```' → logprob: -13.85021686553955
    9. ' len' → logprob: -14.10021686553955
    10. '   ' → logprob: -14.22521686553955

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282848566770554
    2. ' ' → logprob: -2.237828493118286
    3. '>' → logprob: -12.987828254699707
    4. '   ' → logprob: -13.487828254699707
    5. '```' → logprob: -14.612828254699707
    6. ' ' → logprob: -15.112828254699707
    7. '           ' → logprob: -15.362828254699707
    8. '-' → logprob: -15.675328254699707
    9. '       ' → logprob: -15.675328254699707
    10. '1' → logprob: -15.737828254699707

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009122979827225208
    2. ' ' → logprob: -7.000912189483643
    3. '>' → logprob: -15.0009126663208
    4. '   ' → logprob: -15.2509126663208
    5. 'ni' → logprob: -16.125911712646484
    6. 'len' → logprob: -16.875911712646484
    7. '
' → logprob: -17.625911712646484
    8. '  ' → logprob: -17.688411712646484
    9. '1' → logprob: -17.938411712646484
    10. '```' → logprob: -18.125911712646484

Token 228: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05505514517426491
    2. ' else' → logprob: -2.9300551414489746
    3. '               ' → logprob: -9.180055618286133
    4. '           ' → logprob: -9.680055618286133
    5. '```' → logprob: -13.430055618286133
    6. '       ' → logprob: -13.680055618286133
    7. '                   ' → logprob: -14.555055618286133
    8. '             ' → logprob: -14.555055618286133
    9. '[]' → logprob: -14.680055618286133
    10. '   ' → logprob: -15.055055618286133

Token 229: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20604021847248077
    2. '[]
' → logprob: -1.9560402631759644
    3. ' []' → logprob: -3.331040143966675
    4. ' []
' → logprob: -5.331040382385254
    5. 'line' → logprob: -5.831040382385254
    6. 'set' → logprob: -7.456040382385254
    7. 'cler' → logprob: -8.581040382385254
    8. '[]

' → logprob: -9.081040382385254
    9. 'list' → logprob: -9.456040382385254
    10. '[line' → logprob: -9.706040382385254

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012688105925917625
    2. 'mage' → logprob: -4.387688159942627
    3. '       ' → logprob: -9.137687683105469
    4. '          ' → logprob: -10.887687683105469
    5. ' mage' → logprob: -11.012687683105469
    6. '               ' → logprob: -11.512687683105469
    7. 'm' → logprob: -11.887687683105469
    8. '   ' → logprob: -12.012687683105469
    9. '         ' → logprob: -12.137687683105469
    10. 'mages' → logprob: -13.012687683105469

Token 231: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' (adapté à ' mage') → logprob: -0.00022165567497722805
    2. ' mage' → logprob: -8.750221252441406
    3. '           ' → logprob: -9.750221252441406
    4. 'm' → logprob: -12.625221252441406
    5. 'mages' → logprob: -14.125221252441406
    6. 'magic' → logprob: -15.250221252441406
    7. '       ' → logprob: -16.000221252441406
    8. 'mag' → logprob: -16.250221252441406
    9. '   ' → logprob: -16.250221252441406
    10. ' ' → logprob: -16.875221252441406

Token 232: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.250005722045898
    3. '_c' → logprob: -15.875005722045898
    4. '_cli' → logprob: -16.2500057220459
    5. '_claim' → logprob: -16.8750057220459
    6. ' _' → logprob: -17.3750057220459
    7. 'cler' → logprob: -17.7500057220459
    8. '_cre' → logprob: -18.0000057220459
    9. '_clear' → logprob: -18.3750057220459
    10. '_cons' → logprob: -18.3750057220459

Token 233: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00011641718447208405
    2. 'ic' → logprob: -9.625116348266602
    3. 'ric' → logprob: -11.375116348266602
    4. 'erc' → logprob: -11.375116348266602
    5. 'e' → logprob: -11.875116348266602
    6. '_' → logprob: -12.500116348266602
    7. 'ir' → logprob: -12.750116348266602
    8. '   ' → logprob: -13.125116348266602
    9. '       ' → logprob: -13.500116348266602
    10. '[' → logprob: -13.875116348266602

Token 234: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.9623810658231378e-05
    2. 'ics' → logprob: -12.000020027160645
    3. 'c' → logprob: -12.375020027160645
    4. 'cl' → logprob: -12.500020027160645
    5. 'icl' → logprob: -13.375020027160645
    6. '_' → logprob: -14.250020027160645
    7. 'ical' → logprob: -14.250020027160645
    8. 'i' → logprob: -14.750020027160645
    9. '_ic' → logprob: -15.750020027160645
    10. '```' → logprob: -15.750020027160645

Token 235: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014799882774241269
    2. '.' → logprob: -8.875147819519043
    3. 'append' → logprob: -11.875147819519043
    4. '.app' → logprob: -14.125147819519043
    5. ' .' → logprob: -16.25014877319336
    6. '.ap' → logprob: -16.37514877319336
    7. '.setdefault' → logprob: -16.50014877319336
    8. '.Append' → logprob: -17.50014877319336
    9. 'app' → logprob: -17.50014877319336
    10. '[m' → logprob: -18.37514877319336

Token 236: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.07925338298082352
    2. 'set' → logprob: -2.5792534351348877
    3. ' set' → logprob: -7.954253196716309
    4. '=set' → logprob: -11.704253196716309
    5. ' (' → logprob: -13.204253196716309
    6. ')set' → logprob: -13.954253196716309
    7. '(' → logprob: -14.579253196716309
    8. '	set' → logprob: -15.204253196716309
    9. '.set' → logprob: -15.829253196716309
    10. ':set' → logprob: -15.954253196716309

Token 237: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -6.392202976712724e-06
    2. 'cler' → logprob: -12.000006675720215
    3. 'cl' → logprob: -16.3750057220459
    4. '(' → logprob: -16.7500057220459
    5. ' cler' → logprob: -17.6250057220459
    6. '_cl' → logprob: -18.8750057220459
    7. '(c' → logprob: -19.3750057220459
    8. ')' → logprob: -20.0000057220459
    9. '(cli' → logprob: -20.0000057220459
    10. '(m' → logprob: -20.2500057220459

Token 238: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.696889623621246e-06
    2. 'ic' → logprob: -13.12500286102295
    3. 'ir' → logprob: -15.50000286102295
    4. 'ric' → logprob: -16.250001907348633
    5. 'ier' → logprob: -16.625001907348633
    6. '[' → logprob: -17.125001907348633
    7. 'erc' → logprob: -17.250001907348633
    8. 'e' → logprob: -17.375001907348633
    9. 'ar' → logprob: -17.500001907348633
    10. ' cler' → logprob: -18.000001907348633

Token 239: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -9.088346359931165e-07
    2. 'ics' → logprob: -14.250000953674316
    3. '_list' → logprob: -15.750000953674316
    4. 'i' → logprob: -17.125
    5. '[' → logprob: -17.875
    6. 'it' → logprob: -18.5
    7. '[]' → logprob: -18.75
    8. '_' → logprob: -18.875
    9. '_ic' → logprob: -19.0
    10. 'is' → logprob: -19.125

Token 240: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.723352049040841e-06
    2. 'list' → logprob: -12.875004768371582
    3. 'List' → logprob: -14.000004768371582
    4. '_' → logprob: -14.500004768371582
    5. ')' → logprob: -15.375004768371582
    6. 's' → logprob: -16.125003814697266
    7. '_lists' → logprob: -16.500003814697266
    8. 'cl' → logprob: -16.750003814697266
    9. '_cl' → logprob: -17.125003814697266
    10. 'ist' → logprob: -17.125003814697266

Token 241: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.380904672667384e-05
    2. '())' → logprob: -11.500033378601074
    3. '       ' → logprob: -11.625033378601074
    4. '))' → logprob: -12.000033378601074
    5. ')
' → logprob: -12.125033378601074
    6. ' )' → logprob: -13.750033378601074
    7. '           ' → logprob: -14.125033378601074
    8. ')

' → logprob: -15.125033378601074
    9. '[' → logprob: -15.625033378601074
    10. '()' → logprob: -16.00003433227539

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09986691176891327
    2. '<|end|>' → logprob: -2.5998668670654297
    3. '#' → logprob: -4.97486686706543
    4. '   ' → logprob: -5.22486686706543
    5. '        
' → logprob: -6.09986686706543
    6. 'for' → logprob: -6.59986686706543
    7. 'n' → logprob: -6.84986686706543
    8. '
' → logprob: -7.34986686706543
    9. ' for' → logprob: -7.59986686706543
    10. 'def' → logprob: -7.72486686706543

Token 243: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37769660353660583
    2. '#' → logprob: -2.0026965141296387
    3. '
' → logprob: -2.6276965141296387
    4. '<|end|>' → logprob: -3.1276965141296387
    5. '        
' → logprob: -3.5026965141296387
    6. '```' → logprob: -4.502696514129639
    7. 'def' → logprob: -5.002696514129639
    8. '   ' → logprob: -6.127696514129639
    9. '    
' → logprob: -7.002696514129639
    10. 'for' → logprob: -7.002696514129639

Token 244: '_part' (ID: 24053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6713314056396484
    2. '_count' → logprob: -2.0463314056396484
    3. '_score' → logprob: -2.2963314056396484
    4. '_value' → logprob: -3.0463314056396484
    5. '_f' → logprob: -3.2963314056396484
    6. '_total' → logprob: -3.5463314056396484
    7. '_size' → logprob: -4.546331405639648
    8. '_points' → logprob: -4.546331405639648
    9. '_val' → logprob: -4.671331405639648
    10. '_w' → logprob: -4.671331405639648

Token 245: 'ies' (ID: 566)
  Prédit: 'icip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'icip' → logprob: -0.856581449508667
    2. 'icipants' → logprob: -0.856581449508667
    3. 'icipant' → logprob: -2.856581449508667
    4. '_size' → logprob: -3.106581449508667
    5. '=' → logprob: -4.231581687927246
    6. 's' → logprob: -4.356581687927246
    7. 'ition' → logprob: -4.606581687927246
    8. '_' → logprob: -5.481581687927246
    9. 'size' → logprob: -6.106581687927246
    10. 'itions' → logprob: -6.731581687927246

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999035179615021
    2. '=' → logprob: -2.694990396499634
    3. '=[]' → logprob: -10.319990158081055
    4. ',' → logprob: -11.694990158081055
    5. '<|end|>' → logprob: -12.694990158081055
    6. ')' → logprob: -12.944990158081055
    7. '   ' → logprob: -13.444990158081055
    8. ' ' → logprob: -14.069990158081055
    9. '_' → logprob: -14.194990158081055
    10. ' =)' → logprob: -14.569990158081055

Token 247: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056560661643743515
    2. ' ' → logprob: -2.931560754776001
    3. '[]' → logprob: -6.931560516357422
    4. ' []' → logprob: -8.306560516357422
    5. ' min' → logprob: -8.931560516357422
    6. 'min' → logprob: -9.431560516357422
    7. ' H' → logprob: -10.306560516357422
    8. '[' → logprob: -10.556560516357422
    9. 'H' → logprob: -10.556560516357422
    10. ' (' → logprob: -11.119060516357422

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013680962147191167
    2. '[]' → logprob: -6.876368045806885
    3. 'H' → logprob: -9.751368522644043
    4. '[' → logprob: -9.876368522644043
    5. 'min' → logprob: -10.001368522644043
    6. ' ' → logprob: -10.126368522644043
    7. 'set' → logprob: -10.376368522644043
    8. '(' → logprob: -11.001368522644043
    9. '{}' → logprob: -11.001368522644043
    10. '-' → logprob: -11.376368522644043

Token 249: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5144887566566467
    2. '       ' → logprob: -1.389488697052002
    3. ' for' → logprob: -2.139488697052002
    4. '#' (adapté à ' #') → logprob: -3.764488697052002
    5. 'from' → logprob: -5.514488697052002
    6. 'selected' → logprob: -6.264488697052002
    7. ' #' → logprob: -6.514488697052002
    8. 'import' → logprob: -7.389488697052002
    9. 'possible' → logprob: -7.389488697052002
    10. 'visited' → logprob: -7.514488697052002

Token 252: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2860988676548004
    2. ' for' → logprob: -1.536098837852478
    3. 'from' → logprob: -4.161098957061768
    4. '#' → logprob: -4.286098957061768
    5. ' #' → logprob: -6.661098957061768
    6. ' from' → logprob: -6.911098957061768
    7. '       ' → logprob: -7.161098957061768
    8. 'import' → logprob: -7.411098957061768
    9. 'def' → logprob: -8.53609848022461
    10. 'possible' → logprob: -9.16109848022461

Token 253: ' each' (ID: 2454)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6015194654464722
    2. ' w' → logprob: -1.1015194654464722
    3. ' warrior' → logprob: -2.8515195846557617
    4. ' i' → logprob: -3.9765195846557617
    5. ' H' → logprob: -4.351519584655762
    6. ' c' → logprob: -5.226519584655762
    7. ' hero' → logprob: -5.226519584655762
    8. ' W' → logprob: -5.601519584655762
    9. ' warriors' → logprob: -5.726519584655762
    10. ' C' → logprob: -6.101519584655762

Token 254: ' possible' (ID: 4149)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.22804352641105652
    2. ' hero' → logprob: -2.353043556213379
    3. ' mage' → logprob: -3.603043556213379
    4. 'mage' → logprob: -4.103043556213379
    5. ' cler' → logprob: -4.228043556213379
    6. 'war' → logprob: -4.353043556213379
    7. ' w' → logprob: -5.478043556213379
    8. ' war' → logprob: -5.478043556213379
    9. 'hero' → logprob: -5.478043556213379
    10. ' h' → logprob: -5.728043556213379

Token 255: ' number' (ID: 2086)
  Prédit: ' combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.7359341979026794
    2. ' warrior' → logprob: -1.9859342575073242
    3. ' party' → logprob: -2.360934257507324
    4. ' number' → logprob: -2.735934257507324
    5. ' size' → logprob: -3.235934257507324
    6. ' hero' → logprob: -3.360934257507324
    7. 'party' → logprob: -3.360934257507324
    8. ' subset' → logprob: -3.610934257507324
    9. ' H' → logprob: -4.735934257507324
    10. ' mask' → logprob: -4.985934257507324

Token 256: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9656131863594055
    2. ' of' → logprob: -1.0906131267547607
    3. ' ' → logprob: -2.5906131267547607
    4. 'of' → logprob: -2.8406131267547607
    5. '       ' → logprob: -3.5906131267547607
    6. '   ' → logprob: -3.7156131267547607
    7. ' =' → logprob: -4.21561336517334
    8. '  ' → logprob: -4.46561336517334
    9. ',' → logprob: -4.84061336517334
    10. '        ' → logprob: -4.96561336517334

Token 257: ' parties' (ID: 13531)
  Prédit: ' warriors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warriors' → logprob: -0.24972587823867798
    2. 'war' → logprob: -2.624725818634033
    3. ' heroes' → logprob: -2.999725818634033
    4. 'heroes' → logprob: -2.999725818634033
    5. 'mages' → logprob: -5.124725818634033
    6. 'part' → logprob: -5.124725818634033
    7. 'cler' → logprob: -5.374725818634033
    8. 'NW' → logprob: -5.812225818634033
    9. '```' → logprob: -5.999725818634033
    10. ' war' → logprob: -6.062225818634033

Token 258: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5997264981269836
    2. ',' → logprob: -1.3497264385223389
    3. ' for' → logprob: -2.974726438522339
    4. ' ' → logprob: -3.224726438522339
    5. '        ' → logprob: -3.724726438522339
    6. 'for' → logprob: -4.099726676940918
    7. '    ' → logprob: -4.599726676940918
    8. ':' → logprob: -4.724726676940918
    9. ' (' → logprob: -4.724726676940918
    10. '   ' → logprob: -4.849726676940918

Token 259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010857156477868557
    2. '0' → logprob: -5.135857105255127
    3. ' ' → logprob: -5.510857105255127
    4. 'min' → logprob: -7.760857105255127
    5. ' min' → logprob: -8.135857582092285
    6. 'max' → logprob: -10.385857582092285
    7. '   ' → logprob: -10.510857582092285
    8. 'NW' → logprob: -11.073357582092285
    9. ' NW' → logprob: -11.448357582092285
    10. ' max' → logprob: -11.448357582092285

Token 260: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030547427013516426
    2. '0' → logprob: -3.7805473804473877
    3. 'min' → logprob: -5.155547618865967
    4. 'max' → logprob: -7.280547618865967
    5. 'NW' → logprob: -7.530547618865967
    6. 'N' → logprob: -9.280547142028809
    7. ' ' → logprob: -9.655547142028809
    8. 'H' → logprob: -10.405547142028809
    9. 'C' → logprob: -10.530547142028809
    10. '```' → logprob: -11.530547142028809

Token 261: ' up' (ID: 869)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04696108400821686
    2. 'to' → logprob: -3.6719610691070557
    3. ' ' → logprob: -4.796961307525635
    4. ',' → logprob: -5.296961307525635
    5. '       ' → logprob: -6.046961307525635
    6. '        ' → logprob: -6.421961307525635
    7. '    ' → logprob: -6.671961307525635
    8. '   ' → logprob: -6.921961307525635
    9. '  ' → logprob: -8.296960830688477
    10. ' up' → logprob: -8.296960830688477

Token 262: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0038960378151386976
    2. ' to' → logprob: -6.128896236419678
    3. 't' → logprob: -7.253896236419678
    4. '       ' → logprob: -7.503896236419678
    5. '   ' → logprob: -8.25389575958252
    6. ' ' → logprob: -10.00389575958252
    7. '_to' → logprob: -10.37889575958252
    8. 'o' → logprob: -10.62889575958252
    9. '0' → logprob: -11.12889575958252
    10. '1' → logprob: -11.37889575958252

Token 263: ' total' (ID: 3609)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.677275538444519
    2. 'min' → logprob: -0.802275538444519
    3. 'H' → logprob: -4.052275657653809
    4. 'NW' → logprob: -4.677275657653809
    5. ' NW' → logprob: -4.927275657653809
    6. ' H' → logprob: -5.427275657653809
    7. 'W' → logprob: -6.427275657653809
    8. 'C' → logprob: -6.802275657653809
    9. ' W' → logprob: -7.302275657653809
    10. 'N' → logprob: -7.552275657653809

Token 264: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20904067158699036
    2. 'heroes' → logprob: -3.084040641784668
    3. '_part' → logprob: -3.334040641784668
    4. 'H' → logprob: -4.084040641784668
    5. '_H' → logprob: -4.709040641784668
    6. '_h' → logprob: -5.084040641784668
    7. ' heroes' → logprob: -5.209040641784668
    8. '   ' → logprob: -5.459040641784668
    9. '_possible' → logprob: -5.584040641784668
    10. 'part' → logprob: -5.584040641784668

Token 265: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7134666442871094
    2. '       ' → logprob: -1.2134666442871094
    3. 'of' → logprob: -2.3384666442871094
    4. ' (' → logprob: -3.4634666442871094
    5. '(' → logprob: -3.8384666442871094
    6. 'range' → logprob: -4.588466644287109
    7. '   ' → logprob: -4.713466644287109
    8. '(H' → logprob: -4.838466644287109
    9. '(range' → logprob: -4.963466644287109
    10. '=' → logprob: -5.588466644287109

Token 266: ' heroes' (ID: 46540)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8261018991470337
    2. 'H' → logprob: -1.2011018991470337
    3. 'war' → logprob: -2.826101779937744
    4. 'W' → logprob: -2.826101779937744
    5. 'NW' → logprob: -3.201101779937744
    6. ' min' → logprob: -3.451101779937744
    7. 'C' → logprob: -3.576101779937744
    8. 'heroes' → logprob: -4.826101779937744
    9. ' warriors' → logprob: -4.826101779937744
    10. 'N' → logprob: -4.951101779937744

Token 267: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2046237736940384
    2. ':' → logprob: -2.4546236991882324
    3. ',' → logprob: -3.4546236991882324
    4. '<|end|>' → logprob: -3.8296236991882324
    5. '   ' → logprob: -4.704623699188232
    6. ' ' → logprob: -4.829623699188232
    7. ' (' → logprob: -4.829623699188232
    8. '        ' → logprob: -5.329623699188232
    9. '(' → logprob: -6.079623699188232
    10. ' for' → logprob: -6.204623699188232

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1614474654197693
    2. '        ' → logprob: -2.036447525024414
    3. ' ' → logprob: -4.786447525024414
    4. '    ' → logprob: -5.286447525024414
    5. ' #' → logprob: -7.036447525024414
    6. '   ' → logprob: -7.161447525024414
    7. '        
' → logprob: -7.411447525024414
    8. '#' → logprob: -7.661447525024414
    9. ' for' → logprob: -7.661447525024414
    10. '      ' → logprob: -8.411447525024414

Token 269: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1822432577610016
    2. '        ' → logprob: -2.5572433471679688
    3. ' for' → logprob: -2.9322433471679688
    4. ' ' → logprob: -4.682243347167969
    5. 'for' → logprob: -5.057243347167969
    6. ' i' → logprob: -5.682243347167969
    7. '    ' → logprob: -5.932243347167969
    8. ' 
' → logprob: -5.932243347167969
    9. ' #' → logprob: -6.057243347167969
    10. '        
' → logprob: -6.307243347167969

Token 270: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3222379982471466
    2. 'for' → logprob: -1.8222379684448242
    3. '       ' → logprob: -2.447237968444824
    4. ' #' → logprob: -3.947237968444824
    5. '#' → logprob: -5.322237968444824
    6. ' 
' → logprob: -7.322237968444824
    7. '        ' → logprob: -7.447237968444824
    8. '   ' → logprob: -7.697237968444824
    9. '        
' → logprob: -8.197237968444824
    10. ' i' → logprob: -8.947237968444824

Token 271: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3450644910335541
    2. ':' → logprob: -1.9700645208358765
    3. ' to' → logprob: -2.595064401626587
    4. '    ' → logprob: -3.595064401626587
    5. '       ' → logprob: -4.845064640045166
    6. 'to' → logprob: -4.845064640045166
    7. ' for' → logprob: -4.845064640045166
    8. ' all' → logprob: -4.970064640045166
    9. ':
' → logprob: -5.345064640045166
    10. 'for' → logprob: -6.095064640045166

Token 272: ' find' (ID: 1646)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5779703855514526
    2. 'range' → logprob: -0.8279703855514526
    3. ' find' → logprob: -7.577970504760742
    4. 'for' → logprob: -7.827970504760742
    5. ' for' → logprob: -8.077970504760742
    6. 'find' → logprob: -9.202970504760742
    7. '   ' → logprob: -9.577970504760742
    8. ' continue' → logprob: -9.577970504760742
    9. 'max' → logprob: -9.702970504760742
    10. '(range' → logprob: -9.827970504760742

Token 273: ' if' (ID: 538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2696363031864166
    2. ' the' → logprob: -2.769636392593384
    3. ' an' → logprob: -3.269636392593384
    4. ' valid' → logprob: -4.019636154174805
    5. ' 
' → logprob: -4.394636154174805
    6. ' possible' → logprob: -4.519636154174805
    7. ')' → logprob: -4.644636154174805
    8. ' if' → logprob: -4.644636154174805
    9. ' parties' → logprob: -4.769636154174805
    10. ' )' → logprob: -4.894636154174805

Token 274: ' it's' (ID: 4275)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6183656454086304
    2. ' max' → logprob: -2.11836576461792
    3. ' possible' → logprob: -2.24336576461792
    4. ' the' → logprob: -2.61836576461792
    5. ' ' → logprob: -2.99336576461792
    6. ' there' → logprob: -3.49336576461792
    7. ' an' → logprob: -4.24336576461792
    8. ' parties' → logprob: -4.24336576461792
    9. 'max' → logprob: -4.74336576461792
    10. 'possible' → logprob: -5.11836576461792

Token 275: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.18623292446136475
    2. 'possible' → logprob: -1.8112329244613647
    3. ' feasible' → logprob: -5.311233043670654
    4. '_possible' → logprob: -6.811233043670654
    5. ' ' → logprob: -8.561232566833496
    6. ' True' → logprob: -10.186232566833496
    7. ' posible' → logprob: -10.561232566833496
    8. 'Possible' → logprob: -10.686232566833496
    9. ' poss' → logprob: -10.936232566833496
    10. 'fe' → logprob: -11.561232566833496

Token 276: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7560933232307434
    2. ' to' → logprob: -0.7560933232307434
    3. '   ' → logprob: -3.5060932636260986
    4. ' ' → logprob: -4.256093502044678
    5. ',' → logprob: -5.256093502044678
    6. '<|end|>' → logprob: -5.381093502044678
    7. '    ' → logprob: -5.506093502044678
    8. 'to' → logprob: -7.381093502044678
    9. '        ' → logprob: -7.506093502044678
    10. '  ' → logprob: -7.506093502044678

Token 277: ' form' (ID: 1625)
  Prédit: ' form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.19324365258216858
    2. 'form' → logprob: -1.8182436227798462
    3. 'assemble' → logprob: -5.193243503570557
    4. ' assemble' → logprob: -6.068243503570557
    5. 'assign' → logprob: -6.568243503570557
    6. 'build' → logprob: -7.193243503570557
    7. '
' → logprob: -7.443243503570557
    8. ' build' → logprob: -7.818243503570557
    9. 'create' → logprob: -7.943243503570557
    10. 'select' → logprob: -8.068243980407715

Token 278: ' that' (ID: 484)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.46140673756599426
    2. 'max' → logprob: -1.3364067077636719
    3. 'part' → logprob: -3.336406707763672
    4. ' a' → logprob: -3.461406707763672
    5. ' parties' → logprob: -3.961406707763672
    6. 'a' → logprob: -5.336406707763672
    7. ' that' → logprob: -5.336406707763672
    8. ' valid' → logprob: -5.836406707763672
    9. ' k' → logprob: -6.461406707763672
    10. ' the' → logprob: -6.961406707763672

Token 279: ' many' (ID: 1991)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.41368043422698975
    2. ' many' → logprob: -1.4136804342269897
    3. 'number' → logprob: -3.1636805534362793
    4. 'many' → logprob: -3.5386805534362793
    5. '
' → logprob: -4.288680553436279
    6. ' parties' → logprob: -5.788680553436279
    7. ' 
' → logprob: -6.413680553436279
    8. ' amount' → logprob: -7.288680553436279
    9. 'max' → logprob: -7.413680553436279
    10. 'part' → logprob: -7.538680553436279

Token 280: ' parties' (ID: 13531)
  Prédit: ' parties'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parties' → logprob: -0.3504844605922699
    2. 'part' → logprob: -1.6004844903945923
    3. '<|end|>' → logprob: -3.1004843711853027
    4. '_part' → logprob: -3.7254843711853027
    5. ' part' → logprob: -4.350484371185303
    6. ' heroes' → logprob: -6.350484371185303
    7. 'heroes' → logprob: -6.600484371185303
    8. '_' → logprob: -6.725484371185303
    9. '_party' → logprob: -6.850484371185303
    10. ' warriors' → logprob: -7.475484371185303

Token 281: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015511149540543556
    2. ':' → logprob: -5.3905110359191895
    3. '<|end|>' → logprob: -5.6405110359191895
    4. ',' → logprob: -6.5155110359191895
    5. '   ' → logprob: -6.6405110359191895
    6. '        
' → logprob: -6.8905110359191895
    7. '
' → logprob: -7.2655110359191895
    8. '        ' → logprob: -7.6405110359191895
    9. ' ' → logprob: -7.7655110359191895
    10. '    ' → logprob: -7.8905110359191895

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04217610880732536
    2. '        
' → logprob: -4.167176246643066
    3. ' 
' → logprob: -4.417176246643066
    4. '
' → logprob: -4.917176246643066
    5. '   ' → logprob: -6.417176246643066
    6. ' ' → logprob: -6.417176246643066
    7. '    ' → logprob: -7.167176246643066
    8. '  
' → logprob: -7.792176246643066
    9. '    
' → logprob: -7.917176246643066
    10. '<|end|>' → logprob: -8.042176246643066

Token 283: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0495673231780529
    2. ' for' → logprob: -3.174567222595215
    3. 'for' → logprob: -5.549567222595215
    4. '
' → logprob: -7.049567222595215
    5. '   ' → logprob: -7.924567222595215
    6. '        
' → logprob: -7.924567222595215
    7. ' 
' → logprob: -8.049567222595215
    8. '        ' → logprob: -8.174567222595215
    9. '    ' → logprob: -9.049567222595215
    10. ' ' → logprob: -9.424567222595215

Token 284: ' Since' (ID: 12265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20699553191661835
    2. 'for' → logprob: -1.9569954872131348
    3. '       ' → logprob: -3.2069954872131348
    4. '#' → logprob: -6.331995487213135
    5. ' #' → logprob: -6.706995487213135
    6. 'def' → logprob: -7.331995487213135
    7. '
' → logprob: -8.081995964050293
    8. '        
' → logprob: -8.206995964050293
    9. '        ' → logprob: -8.331995964050293
    10. ' 
' → logprob: -9.331995964050293

Token 285: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4241801500320435
    2. 'max' → logprob: -1.9241801500320435
    3. ' H' → logprob: -2.049180030822754
    4. ' W' → logprob: -2.049180030822754
    5. 'W' → logprob: -2.799180030822754
    6. ' for' → logprob: -3.174180030822754
    7. 'H' → logprob: -3.174180030822754
    8. 'def' → logprob: -3.299180030822754
    9. '#' → logprob: -3.549180030822754
    10. 'range' → logprob: -3.674180030822754

Token 286: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.1385058164596558
    2. ' next' → logprob: -1.3885058164596558
    3. 'max' → logprob: -2.2635059356689453
    4. 'W' → logprob: -3.1385059356689453
    5. '#' → logprob: -3.5135059356689453
    6. ' problem' → logprob: -3.5135059356689453
    7. 'next' → logprob: -3.7635059356689453
    8. 'H' → logprob: -3.7635059356689453
    9. ' max' → logprob: -3.7635059356689453
    10. 'code' → logprob: -4.138505935668945

Token 287: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08171674609184265
    2. ' requires' → logprob: -3.206716775894165
    3. ' involves' → logprob: -4.581716537475586
    4. '   ' → logprob: -5.206716537475586
    5. ' continues' → logprob: -5.331716537475586
    6. 'is' → logprob: -5.581716537475586
    7. ' seems' → logprob: -6.081716537475586
    8. ' remains' → logprob: -6.456716537475586
    9. ' can' → logprob: -7.081716537475586
    10. 'requires' → logprob: -7.206716537475586

Token 288: ' max' (ID: 2999)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3340604305267334
    2. ' the' → logprob: -2.2090604305267334
    3. '       ' → logprob: -2.9590604305267334
    4. '   ' → logprob: -3.5840604305267334
    5. ' to' → logprob: -3.9590604305267334
    6. 'that' → logprob: -4.2090606689453125
    7. ',' → logprob: -4.4590606689453125
    8. ' we' → logprob: -4.4590606689453125
    9. ' #' → logprob: -4.5840606689453125
    10. ' a' → logprob: -5.7090606689453125

Token 289: ' ' (ID: 220)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.061201225966215134
    2. '_' → logprob: -3.811201333999634
    3. '_party' → logprob: -4.436201095581055
    4. '_possible' → logprob: -4.436201095581055
    5. '_num' → logprob: -5.686201095581055
    6. 'part' → logprob: -5.936201095581055
    7. '_number' → logprob: -6.186201095581055
    8. '   ' → logprob: -7.061201095581055
    9. '_size' → logprob: -7.186201095581055
    10. 'heroes' → logprob: -7.811201095581055

Token 290: '50' (ID: 1434)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.6140492558479309
    2. 'part' → logprob: -2.364049196243286
    3. 'heroes' → logprob: -2.364049196243286
    4. ' number' → logprob: -2.614049196243286
    5. 'number' → logprob: -2.739049196243286
    6. '_' → logprob: -3.864049196243286
    7. 'H' → logprob: -3.864049196243286
    8. '_party' → logprob: -4.114049434661865
    9. '_possible' → logprob: -4.364049434661865
    10. 'possible' → logprob: -4.739049434661865

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47315269708633423
    2. ' ,' → logprob: -1.9731526374816895
    3. '):' → logprob: -2.3481526374816895
    4. ':' → logprob: -2.7231526374816895
    5. ',
' → logprob: -4.3481526374816895
    6. '   ' → logprob: -4.5981526374816895
    7. '):
' → logprob: -4.9731526374816895
    8. ')' → logprob: -4.9731526374816895
    9. '<|end|>' → logprob: -4.9731526374816895
    10. 'heroes' → logprob: -5.0981526374816895

Token 292: ' trying' (ID: 6700)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.510967493057251
    2. '       ' → logprob: -1.010967493057251
    3. 'for' → logprob: -4.260967254638672
    4. ' max' → logprob: -5.260967254638672
    5. ' 
' → logprob: -5.635967254638672
    6. '        ' → logprob: -6.260967254638672
    7. ' #' → logprob: -6.510967254638672
    8. ' continue' → logprob: -6.635967254638672
    9. '
' → logprob: -6.760967254638672
    10. '   ' → logprob: -6.885967254638672

Token 293: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.3078200817108154
    2. 'from' → logprob: -1.4328200817108154
    3. ' from' → logprob: -2.0578200817108154
    4. 'range' → logprob: -2.5578200817108154
    5. 'all' → logprob: -2.6828200817108154
    6. 'for' → logprob: -2.8078200817108154
    7. ' for' → logprob: -2.8078200817108154
    8. ' range' → logprob: -3.8078200817108154
    9. '   ' → logprob: -4.0578203201293945
    10. '
' → logprob: -4.1828203201293945

Token 294: ' is' (ID: 382)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4159178733825684
    2. 'for' → logprob: -1.4159178733825684
    3. 'possible' → logprob: -2.6659178733825684
    4. ' for' → logprob: -2.7909178733825684
    5. 'range' → logprob: -3.1659178733825684
    6. 'p' → logprob: -3.1659178733825684
    7. 'i' → logprob: -3.2909178733825684
    8. ' i' → logprob: -3.2909178733825684
    9. 'part' → logprob: -3.4159178733825684
    10. 'num' → logprob: -3.4159178733825684

Token 295: ' ok' (ID: 4763)
  Prédit: ' feasible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -0.5974889993667603
    2. 'fe' → logprob: -0.8474889993667603
    3. ' possible' → logprob: -5.222488880157471
    4. 'possible' → logprob: -5.347488880157471
    5. '   ' → logprob: -5.722488880157471
    6. ' reasonable' → logprob: -6.472488880157471
    7. ' okay' → logprob: -6.597488880157471
    8. ' manageable' → logprob: -7.222488880157471
    9. ' acceptable' → logprob: -7.472488880157471
    10. 'reasonable' → logprob: -7.597488880157471

Token 296: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03853403404355049
    2. '
' → logprob: -4.163534164428711
    3. ' for' → logprob: -4.788534164428711
    4. ',' → logprob: -5.413534164428711
    5. '.' → logprob: -5.538534164428711
    6. '        
' → logprob: -6.538534164428711
    7. ' 
' → logprob: -7.413534164428711
    8. '   ' → logprob: -7.538534164428711
    9. '<|end|>' → logprob: -7.538534164428711
    10. ':' → logprob: -7.788534164428711

Token 297: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8496255278587341
    2. ' p' → logprob: -1.474625587463379
    3. 'i' → logprob: -2.349625587463379
    4. '_' → logprob: -2.349625587463379
    5. ' _' → logprob: -3.224625587463379
    6. ' party' → logprob: -3.474625587463379
    7. 'p' → logprob: -3.849625587463379
    8. ' range' → logprob: -4.474625587463379
    9. ' H' → logprob: -5.099625587463379
    10. 'party' → logprob: -5.099625587463379

Token 298: ' beginner' (ID: 57062)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -1.1375442743301392
    2. 'range' → logprob: -1.1375442743301392
    3. ' range' → logprob: -1.7625442743301392
    4. 'while' → logprob: -2.0125441551208496
    5. 'b' → logprob: -4.01254415512085
    6. 'for' → logprob: -4.88754415512085
    7. ' while' → logprob: -5.51254415512085
    8. ' bit' → logprob: -5.76254415512085
    9. 'bit' → logprob: -6.01254415512085
    10. 'l' → logprob: -6.26254415512085

Token 299: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09410909563302994
    2. '
' → logprob: -2.594109058380127
    3. '<|end|>' → logprob: -4.844109058380127
    4. '        
' → logprob: -5.469109058380127
    5. ' 
' → logprob: -7.469109058380127
    6. ',' → logprob: -7.594109058380127
    7. '    
' → logprob: -8.094109535217285
    8. ' for' → logprob: -8.219109535217285
    9. '  
' → logprob: -8.344109535217285
    10. '        ' → logprob: -8.594109535217285

Token 300: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0192890428006649
    2. '
' → logprob: -4.144289016723633
    3. '        
' → logprob: -6.394289016723633
    4. '<|end|>' → logprob: -7.144289016723633
    5. ' for' → logprob: -8.894289016723633
    6. '    
' → logprob: -9.144289016723633
    7. '   ' → logprob: -9.144289016723633
    8. ',' → logprob: -9.519289016723633
    9. '  
' → logprob: -9.894289016723633
    10. 'for' → logprob: -10.019289016723633

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029585588723421097
    2. '
' → logprob: -4.029585361480713
    3. '        
' → logprob: -5.529585361480713
    4. '   ' → logprob: -5.904585361480713
    5. ' 
' → logprob: -6.029585361480713
    6. ' for' → logprob: -7.529585361480713
    7. '    
' → logprob: -7.779585361480713
    8. '    ' → logprob: -7.779585361480713
    9. '  
' → logprob: -8.654585838317871
    10. '     
' → logprob: -9.154585838317871

Token 302: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.816906213760376
    2. '       ' → logprob: -0.941906213760376
    3. 'for' → logprob: -1.816906213760376
    4. '   ' → logprob: -5.566905975341797
    5. '
' → logprob: -7.191905975341797
    6. '        
' → logprob: -8.191905975341797
    7. ' 
' → logprob: -8.191905975341797
    8. 'import' → logprob: -9.316905975341797
    9. '    
' → logprob: -9.691905975341797
    10. 'from' → logprob: -9.816905975341797

Token 303: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005264356732368469
    2. '#' → logprob: -6.1302642822265625
    3. ' for' → logprob: -6.2552642822265625
    4. 'from' → logprob: -7.8802642822265625
    5. 'part' → logprob: -8.505264282226562
    6. 'possible' → logprob: -8.755264282226562
    7. '       ' → logprob: -9.005264282226562
    8. '   ' → logprob: -9.380264282226562
    9. 'max' → logprob: -9.505264282226562
    10. '```' → logprob: -10.505264282226562

Token 304: ' try' (ID: 2075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7964301705360413
    2. 'try' → logprob: -1.5464301109313965
    3. 'continue' → logprob: -2.1714301109313965
    4. 'use' → logprob: -2.7964301109313965
    5. ' try' → logprob: -3.4214301109313965
    6. 'implement' → logprob: -3.9214301109313965
    7. ' use' → logprob: -4.0464301109313965
    8. ' import' → logprob: -4.4214301109313965
    9. 'define' → logprob: -4.4214301109313965
    10. ' implement' → logprob: -4.5464301109313965

Token 305: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.067586898803711
    2. ' for' → logprob: -1.567586898803711
    3. ' to' → logprob: -1.942586898803711
    4. '   ' → logprob: -2.817586898803711
    5. 'range' → logprob: -2.942586898803711
    6. 'from' → logprob: -3.317586898803711
    7. ' all' → logprob: -3.317586898803711
    8. 'to' → logprob: -4.192586898803711
    9. 'all' → logprob: -4.192586898803711
    10. 'part' → logprob: -4.567586898803711

Token 306: ' subsets' (ID: 165377)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -2.123365879058838
    2. ' range' → logprob: -2.248365879058838
    3. ' i' → logprob: -2.373365879058838
    4. ' k' → logprob: -2.373365879058838
    5. 'range' → logprob: -2.498365879058838
    6. ' possible' → logprob: -2.623365879058838
    7. 'from' → logprob: -2.873365879058838
    8. ' num' → logprob: -3.248365879058838
    9. 'possible' → logprob: -3.373365879058838
    10. ' for' → logprob: -3.623365879058838

Token 307: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.591994047164917
    2. '       ' → logprob: -2.091994047164917
    3. '<|end|>' → logprob: -2.966994047164917
    4. ' ' → logprob: -3.091994047164917
    5. 'from' → logprob: -3.216994047164917
    6. '        ' → logprob: -3.466994047164917
    7. ' for' → logprob: -3.466994047164917
    8. '   ' → logprob: -3.716994047164917
    9. ' (' → logprob: -4.591994285583496
    10. '(' → logprob: -4.591994285583496

Token 308: ' heroes' (ID: 46540)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6334019303321838
    2. 'war' → logprob: -1.258401870727539
    3. ' range' → logprob: -2.258401870727539
    4. 'heroes' → logprob: -3.258401870727539
    5. ' warriors' → logprob: -3.633401870727539
    6. ' heroes' → logprob: -5.133401870727539
    7. 'H' → logprob: -5.883401870727539
    8. 'W' → logprob: -6.008401870727539
    9. 'C' → logprob: -6.883401870727539
    10. '(range' → logprob: -7.633401870727539

Token 309: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4353387653827667
    2. ' from' → logprob: -2.1853387355804443
    3. 'from' → logprob: -2.4353387355804443
    4. '<|end|>' → logprob: -3.1853387355804443
    5. ',' → logprob: -3.4353387355804443
    6. '(' → logprob: -3.8103387355804443
    7. ' (' → logprob: -4.310338973999023
    8. '(range' → logprob: -4.685338973999023
    9. 'import' → logprob: -4.810338973999023
    10. '   ' → logprob: -5.435338973999023

Token 310: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.39841780066490173
    2. 'range' → logprob: -1.2734178304672241
    3. ' size' → logprob: -4.023417949676514
    4. 'sizes' → logprob: -4.023417949676514
    5. 'C' → logprob: -5.273417949676514
    6. ' range' → logprob: -5.648417949676514
    7. 'all' → logprob: -7.148417949676514
    8. 'each' → logprob: -7.148417949676514
    9. ' C' → logprob: -8.023417472839355
    10. 'H' → logprob: -8.023417472839355

Token 311: ' p' (ID: 275)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.7916278839111328
    2. ' i' → logprob: -2.041627883911133
    3. 'i' → logprob: -2.291627883911133
    4. ' p' → logprob: -2.416627883911133
    5. 'p' → logprob: -2.916627883911133
    6. 'k' → logprob: -3.041627883911133
    7. 'C' → logprob: -3.041627883911133
    8. ' k' → logprob: -3.166627883911133
    9. ' range' → logprob: -3.291627883911133
    10. '1' → logprob: -3.291627883911133

Token 312: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4265970289707184
    2. 'for' → logprob: -2.4265971183776855
    3. ':' → logprob: -2.5515971183776855
    4. ' for' → logprob: -2.8015971183776855
    5. ',' → logprob: -3.3015971183776855
    6. '_' → logprob: -3.9265971183776855
    7. '       ' → logprob: -4.6765971183776855
    8. '   ' → logprob: -5.0515971183776855
    9. ' ,' → logprob: -5.0515971183776855
    10. '<|end|>' → logprob: -5.4265971183776855

Token 313: 'from' (ID: 2845)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0692707300186157
    2. ' )' → logprob: -1.0692707300186157
    3. ')' → logprob: -1.8192707300186157
    4. 'for' → logprob: -2.319270610809326
    5. ' p' → logprob: -4.444270610809326
    6. '):' → logprob: -4.569270610809326
    7. ' ):' → logprob: -4.944270610809326
    8. ' ' → logprob: -5.819270610809326
    9. ' range' → logprob: -5.944270610809326
    10. ' ):
' → logprob: -5.944270610809326

Token 314: ' p' (ID: 275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6368115544319153
    2. '0' → logprob: -0.8868115544319153
    3. ' ' → logprob: -2.8868114948272705
    4. ' C' → logprob: -6.51181173324585
    5. 'C' → logprob: -6.76181173324585
    6. ' p' → logprob: -8.261811256408691
    7. 'p' → logprob: -8.511811256408691
    8. 'range' → logprob: -10.636811256408691
    9. 'max' → logprob: -10.761811256408691
    10. ' max' → logprob: -10.886811256408691

Token 315: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08145076036453247
    2. '=' → logprob: -2.9564507007598877
    3. ' =' → logprob: -4.206450939178467
    4. 'in' → logprob: -4.581450939178467
    5. ' ' → logprob: -7.456450939178467
    6. ')' → logprob: -8.831450462341309
    7. '0' → logprob: -9.581450462341309
    8. 'import' → logprob: -9.706450462341309
    9. '1' → logprob: -9.831450462341309
    10. ',' → logprob: -10.706450462341309

Token 316: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6373199224472046
    2. '1' → logprob: -0.7623199224472046
    3. ' ' → logprob: -5.512320041656494
    4. 'C' → logprob: -7.887320041656494
    5. 'max' → logprob: -8.637319564819336
    6. ' C' → logprob: -10.512319564819336
    7. 'H' → logprob: -10.762319564819336
    8. 'W' → logprob: -11.262319564819336
    9. ' max' → logprob: -11.262319564819336
    10. 'NW' → logprob: -11.637319564819336

Token 317: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.49885690212249756
    2. '(W' → logprob: -2.123857021331787
    3. '(' → logprob: -2.248857021331787
    4. '(C' → logprob: -2.373857021331787
    5. '(N' → logprob: -2.748857021331787
    6. '(p' → logprob: -5.623857021331787
    7. ',' → logprob: -5.998857021331787
    8. '(P' → logprob: -6.373857021331787
    9. '(max' → logprob: -7.373857021331787
    10. '(
' → logprob: -7.373857021331787

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10252265632152557
    2. ')' → logprob: -2.727522611618042
    3. '),' → logprob: -4.352522850036621
    4. ' ,' → logprob: -4.602522850036621
    5. '   ' → logprob: -5.727522850036621
    6. ' ' → logprob: -6.602522850036621
    7. '//' → logprob: -7.227522850036621
    8. ',H' → logprob: -7.352522850036621
    9. ' //' → logprob: -7.727522850036621
    10. ',
' → logprob: -7.852522850036621

Token 319: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.49051201343536377
    2. ' W' → logprob: -1.8655120134353638
    3. '50' → logprob: -1.9905120134353638
    4. 'C' → logprob: -3.990511894226074
    5. ' ' → logprob: -4.240511894226074
    6. 'H' → logprob: -4.490511894226074
    7. 'NW' → logprob: -4.615511894226074
    8. 'max' → logprob: -4.740511894226074
    9. 'min' → logprob: -4.865511894226074
    10. ' C' → logprob: -5.115511894226074

Token 320: '+C' (ID: 163271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3449251055717468
    2. '+C' → logprob: -2.5949251651763916
    3. '),' → logprob: -2.8449251651763916
    4. '+' → logprob: -3.0949251651763916
    5. ',' → logprob: -3.3449251651763916
    6. ' +' → logprob: -3.5949251651763916
    7. '):' → logprob: -3.9699251651763916
    8. '))' → logprob: -4.2199249267578125
    9. 'C' → logprob: -5.3449249267578125
    10. ')):' → logprob: -6.0949249267578125

Token 321: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03604265674948692
    2. '))' → logprob: -3.9110426902770996
    3. ')' → logprob: -5.1610426902771
    4. ' +' → logprob: -5.7860426902771
    5. 'M' → logprob: -6.0360426902771
    6. ')))' → logprob: -6.2860426902771
    7. '+D' → logprob: -7.0360426902771
    8. '+C' → logprob: -8.286042213439941
    9. ' ' → logprob: -9.036042213439941
    10. '+m' → logprob: -9.161042213439941

Token 322: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.18422207236289978
    2. 'H' → logprob: -2.5592219829559326
    3. 'C' → logprob: -2.9342219829559326
    4. 'W' → logprob: -3.6842219829559326
    5. 'NW' → logprob: -5.309222221374512
    6. 'N' → logprob: -6.184222221374512
    7. ' M' → logprob: -6.559222221374512
    8. '
' → logprob: -6.684222221374512
    9. ' ' → logprob: -6.934222221374512
    10. 'NC' → logprob: -8.184222221374512

Token 323: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26652586460113525
    2. '):' → logprob: -2.1415257453918457
    3. '+' → logprob: -3.2665257453918457
    4. '))' → logprob: -3.5165257453918457
    5. ')):' → logprob: -4.016525745391846
    6. ')+' → logprob: -4.391525745391846
    7. ' +' → logprob: -5.516525745391846
    8. '),' → logprob: -5.766525745391846
    9. ' )' → logprob: -6.266525745391846
    10. '):
' → logprob: -6.266525745391846

Token 324: 'H' (ID: 39)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7593780159950256
    2. '1' → logprob: -1.7593779563903809
    3. 'NW' → logprob: -2.009377956390381
    4. 'W' → logprob: -2.634377956390381
    5. 'H' → logprob: -2.759377956390381
    6. '0' → logprob: -3.134377956390381
    7. ' NW' → logprob: -4.884377956390381
    8. ' ' → logprob: -4.884377956390381
    9. ' C' → logprob: -5.009377956390381
    10. 'N' → logprob: -5.134377956390381

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04948201775550842
    2. '))' → logprob: -3.5494821071624756
    3. '):' → logprob: -5.1744818687438965
    4. ' )' → logprob: -5.2994818687438965
    5. ')))' → logprob: -6.1744818687438965
    6. ')+' → logprob: -7.0494818687438965
    7. ')):' → logprob: -7.0494818687438965
    8. '+' → logprob: -7.2994818687438965
    9. '),' → logprob: -7.5494818687438965
    10. '-' → logprob: -7.6744818687438965

Token 326: ' down' (ID: 1917)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15902522206306458
    2. ')' → logprob: -2.909025192260742
    3. '):
' → logprob: -3.034025192260742
    4. '+' → logprob: -4.159025192260742
    5. ' +' → logprob: -5.034025192260742
    6. '       ' → logprob: -5.159025192260742
    7. '   ' → logprob: -5.284025192260742
    8. ' ):' → logprob: -5.659025192260742
    9. ',' → logprob: -6.909025192260742
    10. 'for' → logprob: -7.034025192260742

Token 327: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5610947608947754
    2. 'to' → logprob: -1.9360947608947754
    3. ' to' → logprob: -2.3110947608947754
    4. '       ' → logprob: -3.1860947608947754
    5. '   ' → logprob: -3.5610947608947754
    6. ')' → logprob: -3.5610947608947754
    7. '+' → logprob: -3.9360947608947754
    8. ' =' → logprob: -3.9360947608947754
    9. ' in' → logprob: -4.311094760894775
    10. ',' → logprob: -5.186094760894775

Token 328: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33925408124923706
    2. '1' → logprob: -2.089254140853882
    3. 'p' → logprob: -2.589254140853882
    4. ' ' → logprob: -2.839254140853882
    5. ' p' → logprob: -3.589254140853882
    6. ' H' → logprob: -6.839253902435303
    7. 'H' → logprob: -6.964253902435303
    8. 'max' → logprob: -8.089254379272461
    9. ' max' → logprob: -8.589254379272461
    10. '   ' → logprob: -8.839254379272461

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.355069637298584
    2. '1' → logprob: -1.855069637298584
    3. 'p' → logprob: -2.730069637298584
    4. 'H' → logprob: -2.855069637298584
    5. ' ' → logprob: -4.605069637298584
    6. ' H' → logprob: -5.480069637298584
    7. ' p' → logprob: -5.855069637298584
    8. 'max' → logprob: -6.605069637298584
    9. 'W' → logprob: -7.480069637298584
    10. 'min' → logprob: -8.355070114135742

Token 330: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07658533751964569
    2. '):
' → logprob: -2.826585292816162
    3. ':' → logprob: -5.201585292816162
    4. '       ' → logprob: -5.701585292816162
    5. ')' → logprob: -5.701585292816162
    6. ',' → logprob: -7.326585292816162
    7. ' ):' → logprob: -7.701585292816162
    8. '   ' → logprob: -8.20158576965332
    9. 'for' → logprob: -8.20158576965332
    10. ' for' → logprob: -8.32658576965332

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0734640583395958
    2. ':' → logprob: -3.1984641551971436
    3. '
' → logprob: -4.0734639167785645
    4. ' for' → logprob: -5.5734639167785645
    5. ':
' → logprob: -6.5734639167785645
    6. '        
' → logprob: -6.5734639167785645
    7. '<|end|>' → logprob: -6.6984639167785645
    8. ',' → logprob: -6.8234639167785645
    9. '   ' → logprob: -7.0734639167785645
    10. '  
' → logprob: -7.1984639167785645

Token 332: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06650733947753906
    2. '
' → logprob: -3.191507339477539
    3. ' for' → logprob: -4.441507339477539
    4. '<|end|>' → logprob: -4.941507339477539
    5. '        
' → logprob: -6.816507339477539
    6. 'for' → logprob: -7.441507339477539
    7. '        ' → logprob: -7.566507339477539
    8. ',' → logprob: -7.566507339477539
    9. '   ' → logprob: -7.941507339477539
    10. ' 
' → logprob: -8.441507339477539

Token 333: ' but' (ID: 889)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4223800301551819
    2. '       ' → logprob: -1.172379970550537
    3. 'for' → logprob: -3.422379970550537
    4. '   ' → logprob: -7.672379970550537
    5. '
' → logprob: -8.047380447387695
    6. 'import' → logprob: -8.422380447387695
    7. ' from' → logprob: -8.422380447387695
    8. '        
' → logprob: -8.797380447387695
    9. 'from' → logprob: -8.922380447387695
    10. ' 
' → logprob: -8.922380447387695

Token 334: ' searching' (ID: 17437)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2175437957048416
    2. ' for' → logprob: -2.842543840408325
    3. '   ' → logprob: -3.342543840408325
    4. ' ' → logprob: -4.217543601989746
    5. ' W' → logprob: -4.217543601989746
    6. '        ' → logprob: -4.342543601989746
    7. 'for' → logprob: -4.592543601989746
    8. ' continue' → logprob: -4.717543601989746
    9. ' H' → logprob: -4.842543601989746
    10. '    ' → logprob: -5.092543601989746

Token 335: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14355269074440002
    2. ' all' → logprob: -3.143552780151367
    3. 'for' → logprob: -3.518552780151367
    4. ' through' → logprob: -4.393552780151367
    5. '_' → logprob: -4.643552780151367
    6. ' the' → logprob: -4.643552780151367
    7. ' in' → logprob: -4.893552780151367
    8. ' ' → logprob: -5.518552780151367
    9. 'all' → logprob: -6.518552780151367
    10. ' them' → logprob: -6.893552780151367

Token 336: ' subsets' (ID: 165377)
  Prédit: ' subsets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.02600056119263172
    2. ' heroes' → logprob: -4.651000499725342
    3. 'sub' → logprob: -5.026000499725342
    4. ' ' → logprob: -6.401000499725342
    5. 'heroes' → logprob: -6.651000499725342
    6. '_sub' → logprob: -6.901000499725342
    7. ' possible' → logprob: -7.026000499725342
    8. '_' → logprob: -7.276000499725342
    9. ' is' → logprob: -7.651000499725342
    10. 'subset' → logprob: -7.901000499725342

Token 337: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05713615193963051
    2. ' ' → logprob: -4.182136058807373
    3. '<|end|>' → logprob: -4.557136058807373
    4. ' would' → logprob: -4.932136058807373
    5. '.' → logprob: -5.307136058807373
    6. ',' → logprob: -5.932136058807373
    7. ' for' → logprob: -5.932136058807373
    8. ' of' → logprob: -6.057136058807373
    9. '
' → logprob: -6.682136058807373
    10. '#' → logprob: -6.682136058807373

Token 338: ' very' (ID: 1869)
  Prédit: ' too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.7593433856964111
    2. ' infe' → logprob: -2.134343385696411
    3. 'too' → logprob: -2.259343385696411
    4. ' not' → logprob: -2.509343385696411
    5. ' computational' → logprob: -2.634343385696411
    6. ' impr' → logprob: -2.634343385696411
    7. 'not' → logprob: -3.384343385696411
    8. ' impossible' → logprob: -4.509343147277832
    9. 'im' → logprob: -4.884343147277832
    10. 'in' → logprob: -4.884343147277832

Token 339: ' big' (ID: 3464)
  Prédit: ' inefficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inefficient' → logprob: -1.1307458877563477
    2. ' expensive' → logprob: -1.3807458877563477
    3. 'ine' → logprob: -1.6307458877563477
    4. ' slow' → logprob: -2.3807458877563477
    5. 'exp' → logprob: -2.7557458877563477
    6. ' costly' → logprob: -3.2557458877563477
    7. ' hard' → logprob: -4.755745887756348
    8. 'slow' → logprob: -4.880745887756348
    9. ' computational' → logprob: -5.630745887756348
    10. ' difficult' → logprob: -5.880745887756348

Token 340: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7386080622673035
    2. ' )' → logprob: -0.7386080622673035
    3. ' ' → logprob: -3.7386081218719482
    4. '#' → logprob: -5.238607883453369
    5. ' 
' → logprob: -5.363607883453369
    6. ' H' → logprob: -5.988607883453369
    7. ' #' → logprob: -6.613607883453369
    8. '       ' → logprob: -6.863607883453369
    9. ' ...' → logprob: -7.363607883453369
    10. ' W' → logprob: -7.363607883453369

Token 342: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5761380195617676
    2. ' **' → logprob: -0.8261380195617676
    3. '*' → logprob: -9.32613754272461
    4. ' *' → logprob: -9.45113754272461
    5. '^' → logprob: -10.95113754272461
    6. ' ' → logprob: -12.57613754272461
    7. ' **
' → logprob: -12.95113754272461
    8. ' **)' → logprob: -13.07613754272461
    9. ')' → logprob: -13.45113754272461
    10. ' )' → logprob: -13.70113754272461

Token 343: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03285940736532211
    2. '(H' → logprob: -3.7828593254089355
    3. '(' → logprob: -5.6578593254089355
    4. 'W' → logprob: -6.0328593254089355
    5. ' (' → logprob: -6.2828593254089355
    6. ' H' → logprob: -7.5328593254089355
    7. 'N' → logprob: -8.157859802246094
    8. ')' → logprob: -8.282859802246094
    9. ' ' → logprob: -9.032859802246094
    10. '
' → logprob: -9.532859802246094

Token 344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12862072885036469
    2. '),' → logprob: -2.7536206245422363
    3. ' )' → logprob: -3.2536206245422363
    4. ' ),' → logprob: -5.128620624542236
    5. '))' → logprob: -5.878620624542236
    6. ' -' → logprob: -6.253620624542236
    7. '   ' → logprob: -6.503620624542236
    8. '       ' → logprob: -6.753620624542236
    9. '
' → logprob: -7.253620624542236
    10. ',' → logprob: -7.253620624542236

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4069735109806061
    2. '<|end|>' → logprob: -1.4069734811782837
    3. '
' → logprob: -2.6569736003875732
    4. '<|end|>' → logprob: -5.031973361968994
    5. ',' → logprob: -5.406973361968994
    6. ')' → logprob: -6.031973361968994
    7. '.' → logprob: -6.531973361968994
    8. '        
' → logprob: -6.531973361968994
    9. '#' → logprob: -7.031973361968994
    10. '   ' → logprob: -7.656973361968994

Token 346: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2777347266674042
    2. '<|end|>' → logprob: -1.9027347564697266
    3. '
' → logprob: -2.5277347564697266
    4. '#' (adapté à ' #') → logprob: -5.152734756469727
    5. '        
' → logprob: -5.527734756469727
    6. '<|end|>' → logprob: -6.527734756469727
    7. '   ' → logprob: -7.652734756469727
    8. ',' → logprob: -7.902734756469727
    9. ' ' → logprob: -8.027734756469727
    10. ')' → logprob: -8.902734756469727

Token 347: ' instead' (ID: 7665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4481101930141449
    2. '#' → logprob: -1.4481102228164673
    3. '
' → logprob: -3.3231101036071777
    4. 'for' → logprob: -3.4481101036071777
    5. ' for' → logprob: -3.8231101036071777
    6. ' #' → logprob: -4.323110103607178
    7. '   ' → logprob: -5.198110103607178
    8. '        
' → logprob: -5.448110103607178
    9. ' 
' → logprob: -5.948110103607178
    10. '        ' → logprob: -6.448110103607178

Token 348: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25162917375564575
    2. ',' → logprob: -1.626629114151001
    3. ' for' → logprob: -4.37662935256958
    4. ' we' → logprob: -6.12662935256958
    5. ':' → logprob: -6.25162935256958
    6. 'import' → logprob: -6.62662935256958
    7. 'for' → logprob: -6.62662935256958
    8. '        
' → logprob: -6.62662935256958
    9. '
' → logprob: -6.75162935256958
    10. '#' → logprob: -6.87662935256958

Token 349: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.450265496969223
    2. 'for' → logprob: -1.8252655267715454
    3. ' for' → logprob: -2.450265407562256
    4. 'from' → logprob: -3.325265407562256
    5. ' #' → logprob: -3.450265407562256
    6. 'import' → logprob: -3.825265407562256
    7. '       ' → logprob: -4.950265407562256
    8. ' from' → logprob: -5.450265407562256
    9. 'continue' → logprob: -6.075265407562256
    10. ' import' → logprob: -6.200265407562256

Token 350: ' will' (ID: 738)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3205394744873047
    2. ''ll' → logprob: -2.1955394744873047
    3. ' try' → logprob: -2.4455394744873047
    4. '       ' → logprob: -3.8205394744873047
    5. ' #' → logprob: -4.445539474487305
    6. ' will' → logprob: -4.570539474487305
    7. '   ' → logprob: -5.195539474487305
    8. 'can' → logprob: -5.445539474487305
    9. '#' → logprob: -5.695539474487305
    10. ' continue' → logprob: -5.945539474487305

Token 351: ' try' (ID: 2075)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.8464803099632263
    2. ' try' → logprob: -1.471480369567871
    3. 'use' → logprob: -1.846480369567871
    4. 'try' → logprob: -2.096480369567871
    5. 'attempt' → logprob: -4.471480369567871
    6. ' implement' → logprob: -4.596480369567871
    7. 'implement' → logprob: -4.971480369567871
    8. 'import' → logprob: -4.971480369567871
    9. 'continue' → logprob: -5.346480369567871
    10. '   ' → logprob: -5.846480369567871

Token 352: ' a' (ID: 261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.538634181022644
    2. 'to' → logprob: -0.913634181022644
    3. '   ' → logprob: -4.663634300231934
    4. 'for' → logprob: -6.663634300231934
    5. 'from' → logprob: -7.288634300231934
    6. '       ' → logprob: -7.413634300231934
    7. '```' → logprob: -7.913634300231934
    8. 'def' → logprob: -8.038634300231934
    9. ' a' → logprob: -8.038634300231934
    10. 'all' → logprob: -8.038634300231934

Token 353: ' simple' (ID: 4705)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6998427510261536
    2. 'binary' → logprob: -1.5748426914215088
    3. 'gre' → logprob: -2.074842691421509
    4. ' binary' → logprob: -3.324842691421509
    5. 'dynamic' → logprob: -3.949842691421509
    6. 'b' → logprob: -4.074842929840088
    7. ' dynamic' → logprob: -4.074842929840088
    8. 'from' → logprob: -4.574842929840088
    9. 'pp' → logprob: -4.699842929840088
    10. ' dp' → logprob: -4.824842929840088

Token 354: ' greedy' (ID: 107110)
  Prédit: ' greedy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' greedy' → logprob: -0.6069045066833496
    2. 'gre' → logprob: -1.2319045066833496
    3. ' heuristic' → logprob: -3.1069045066833496
    4. 'dp' → logprob: -3.2319045066833496
    5. ' dynamic' → logprob: -4.23190450668335
    6. ' approach' → logprob: -4.85690450668335
    7. '```' → logprob: -4.98190450668335
    8. 'binary' → logprob: -5.10690450668335
    9. 'appro' → logprob: -5.60690450668335
    10. 'b' → logprob: -5.60690450668335

Token 355: ' approach' (ID: 7139)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4383373260498047
    2. '       ' → logprob: -1.8133373260498047
    3. ' approach' → logprob: -1.9383373260498047
    4. '_' → logprob: -2.0633373260498047
    5. ' ' → logprob: -2.0633373260498047
    6. ' 
' → logprob: -3.3133373260498047
    7. 'for' → logprob: -3.5633373260498047
    8. '        
' → logprob: -3.8133373260498047
    9. '        ' → logprob: -4.188337326049805
    10. '    ' → logprob: -4.563337326049805

Token 356: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12390406429767609
    2. '
' → logprob: -2.37390398979187
    3. '        
' → logprob: -3.99890398979187
    4. ':' → logprob: -6.248904228210449
    5. '<|end|>' → logprob: -6.373904228210449
    6. ' for' → logprob: -7.873904228210449
    7. '    
' → logprob: -8.99890422821045
    8. ':
' → logprob: -9.12390422821045
    9. '  
' → logprob: -9.24890422821045
    10. '<|end|>' → logprob: -9.37390422821045

Token 357: ' enumer' (ID: 21093)
  Prédit: ' selecting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' selecting' → logprob: -0.90753573179245
    2. ' sorting' → logprob: -2.5325357913970947
    3. ' continuing' → logprob: -2.6575357913970947
    4. ' adding' → logprob: -3.0325357913970947
    5. 'for' → logprob: -3.1575357913970947
    6. 'select' → logprob: -3.1575357913970947
    7. ' trying' → logprob: -3.4075357913970947
    8. 'sorting' → logprob: -3.5325357913970947
    9. ' picking' → logprob: -3.6575357913970947
    10. 'def' → logprob: -3.7825357913970947

Token 358: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.43321454524993896
    2. 'ate' → logprob: -1.058214545249939
    3. 'range' → logprob: -5.8082146644592285
    4. '       ' → logprob: -7.3082146644592285
    5. '   ' → logprob: -7.8082146644592285
    6. 'for' → logprob: -9.05821418762207
    7. 'ation' → logprob: -9.30821418762207
    8. '           ' → logprob: -10.30821418762207
    9. 'at' → logprob: -10.43321418762207
    10. '
' → logprob: -10.80821418762207

Token 359: ' possible' (ID: 4149)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.11260417848825455
    2. 'p' → logprob: -2.6126041412353516
    3. ' heroes' → logprob: -4.612604141235352
    4. ' all' → logprob: -4.862604141235352
    5. 'heroes' → logprob: -5.612604141235352
    6. ' possible' → logprob: -5.987604141235352
    7. 'all' → logprob: -6.112604141235352
    8. 'part' → logprob: -6.737604141235352
    9. ' parties' → logprob: -6.987604141235352
    10. 'possible' → logprob: -6.987604141235352

Token 360: ' parties' (ID: 13531)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8622394800186157
    2. 'p' → logprob: -1.4872394800186157
    3. 'sizes' → logprob: -2.612239360809326
    4. 'part' → logprob: -2.987239360809326
    5. ' numbers' → logprob: -3.112239360809326
    6. 'counts' → logprob: -3.487239360809326
    7. 'party' → logprob: -3.487239360809326
    8. ' party' → logprob: -3.737239360809326
    9. ' counts' → logprob: -3.987239360809326
    10. 'numbers' → logprob: -4.112239360809326

Token 361: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0423458069562912
    2. '        
' → logprob: -4.042346000671387
    3. '<|end|>' → logprob: -4.667346000671387
    4. '        ' → logprob: -5.542346000671387
    5. '
' → logprob: -5.792346000671387
    6. ',' → logprob: -6.042346000671387
    7. ' for' → logprob: -6.667346000671387
    8. '.' → logprob: -7.042346000671387
    9. ':' → logprob: -7.417346000671387
    10. 'for' → logprob: -7.792346000671387

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08962193876504898
    2. '        
' → logprob: -3.0896220207214355
    3. '
' → logprob: -3.8396220207214355
    4. '<|end|>' → logprob: -4.3396220207214355
    5. ' 
' → logprob: -6.3396220207214355
    6. ' ' → logprob: -7.3396220207214355
    7. '\' → logprob: -7.3396220207214355
    8. '   ' → logprob: -8.089621543884277
    9. '  
' → logprob: -8.214621543884277
    10. '\n' → logprob: -8.214621543884277

Token 363: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5525873899459839
    2. '
' → logprob: -1.9275873899459839
    3. '        
' → logprob: -2.0525875091552734
    4. ' 
' → logprob: -2.3025875091552734
    5. ' ' → logprob: -4.552587509155273
    6. 'for' → logprob: -4.927587509155273
    7. '        ' → logprob: -4.927587509155273
    8. ' for' → logprob: -5.552587509155273
    9. '  
' → logprob: -6.052587509155273
    10. '    ' → logprob: -6.052587509155273

Token 364: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5399295687675476
    2. ' for' → logprob: -1.2899296283721924
    3. 'for' → logprob: -2.2899296283721924
    4. '
' → logprob: -4.039929389953613
    5. '        
' → logprob: -4.539929389953613
    6. ' #' → logprob: -5.539929389953613
    7. '#' → logprob: -5.789929389953613
    8. ' 
' → logprob: -6.289929389953613
    9. '        ' → logprob: -6.539929389953613
    10. '   ' → logprob: -8.039929389953613

Token 365: ' groups' (ID: 8896)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.8288989663124084
    2. ' W' → logprob: -1.7038989067077637
    3. '        ' → logprob: -1.9538989067077637
    4. ' ' → logprob: -2.5788989067077637
    5. '    ' → logprob: -2.5788989067077637
    6. '       ' → logprob: -3.8288989067077637
    7. ' you' → logprob: -4.578898906707764
    8. ' ' → logprob: -5.328898906707764
    9. ' max' → logprob: -5.328898906707764
    10. ' we' → logprob: -5.578898906707764

Token 366: ' depend' (ID: 9630)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.21600393950939178
    2. 'on' → logprob: -1.7160038948059082
    3. '   ' → logprob: -4.966003894805908
    4. ' only' → logprob: -5.466003894805908
    5. '       ' → logprob: -7.216003894805908
    6. 'only' → logprob: -7.341003894805908
    7. '    ' → logprob: -7.716003894805908
    8. ' ' → logprob: -7.841003894805908
    9. '  ' → logprob: -8.091004371643066
    10. ' mainly' → logprob: -9.466004371643066

Token 368: ' get' (ID: 717)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0701634883880615
    2. ' heroes' → logprob: -1.5701634883880615
    3. ' friendly' → logprob: -1.9451634883880615
    4. ' mutual' → logprob: -3.0701634883880615
    5. ' relationships' → logprob: -3.4451634883880615
    6. 'the' → logprob: -3.5701634883880615
    7. ' hero' → logprob: -3.6951634883880615
    8. 'heroes' → logprob: -3.9451634883880615
    9. ' their' → logprob: -4.070163726806641
    10. ' friendships' → logprob: -4.445163726806641

Token 369: ' along' (ID: 4251)
  Prédit: 'ting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ting' → logprob: -0.7471915483474731
    2. '_' → logprob: -1.1221915483474731
    3. 'her' → logprob: -2.3721914291381836
    4. 'ing' → logprob: -3.9971914291381836
    5. '   ' → logprob: -4.997191429138184
    6. '_h' → logprob: -5.122191429138184
    7. ' ' → logprob: -5.247191429138184
    8. ')' → logprob: -5.872191429138184
    9. ' _' → logprob: -5.872191429138184
    10. '```' → logprob: -5.997191429138184

Token 370: ' conditions' (ID: 6409)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9162445664405823
    2. 's' → logprob: -0.9162445664405823
    3. '()' → logprob: -2.6662445068359375
    4. 'ness' → logprob: -2.9162445068359375
    5. 'ing' → logprob: -4.2912445068359375
    6. ',' → logprob: -4.7912445068359375
    7. ' ' → logprob: -4.7912445068359375
    8. ')' → logprob: -4.9162445068359375
    9. ' _' → logprob: -5.9162445068359375
    10. '   ' → logprob: -5.9162445068359375

Token 371: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5628674030303955
    2. ',' → logprob: -2.1878674030303955
    3. '        
' → logprob: -2.4378674030303955
    4. '
' → logprob: -2.5628674030303955
    5. '<|end|>' → logprob: -2.9378674030303955
    6. ':' → logprob: -3.0628674030303955
    7. '        ' → logprob: -4.062867164611816
    8. ' ,' → logprob: -5.562867164611816
    9. '<|end|>' → logprob: -5.687867164611816
    10. ' ' → logprob: -5.687867164611816

Token 372: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.882482647895813
    2. ' for' → logprob: -1.007482647895813
    3. '#' → logprob: -2.6324825286865234
    4. ' pass' → logprob: -2.7574825286865234
    5. 'for' → logprob: -3.5074825286865234
    6. ' continue' → logprob: -3.8824825286865234
    7. ' #' → logprob: -4.007482528686523
    8. 'pass' → logprob: -5.007482528686523
    9. 'continue' → logprob: -5.382482528686523
    10. '        
' → logprob: -6.757482528686523

Token 373: ' check' (ID: 2371)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.339784860610962
    2. ' need' → logprob: -1.589784860610962
    3. '       ' → logprob: -1.839784860610962
    4. '   ' → logprob: -2.214784860610962
    5. ''ll' → logprob: -2.714784860610962
    6. ' continue' → logprob: -3.089784860610962
    7. ' will' → logprob: -3.339784860610962
    8. '    ' → logprob: -3.839784860610962
    9. ' #' → logprob: -4.089784622192383
    10. ' ' → logprob: -4.589784622192383

Token 374: ' combinations' (ID: 43835)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6317570209503174
    2. '       ' → logprob: -1.2567570209503174
    3. 'if' → logprob: -3.1317570209503174
    4. 'for' → logprob: -3.8817570209503174
    5. 'all' → logprob: -4.131756782531738
    6. ' all' → logprob: -4.131756782531738
    7. '   ' → logprob: -4.256756782531738
    8. ' whether' → logprob: -4.506756782531738
    9. ' for' → logprob: -4.631756782531738
    10. 'possible' → logprob: -4.756756782531738

Token 375: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05124140530824661
    2. ',' → logprob: -4.926241397857666
    3. ':' → logprob: -5.051241397857666
    4. ' of' → logprob: -5.051241397857666
    5. ' for' → logprob: -5.176241397857666
    6. '<|end|>' → logprob: -5.176241397857666
    7. '.' → logprob: -5.551241397857666
    8. '        ' → logprob: -6.051241397857666
    9. '        
' → logprob: -6.051241397857666
    10. 'import' → logprob: -6.551241397857666

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012045224197208881
    2. '        
' → logprob: -5.012045383453369
    3. '   ' → logprob: -6.262045383453369
    4. '<|end|>' → logprob: -7.012045383453369
    5. '
' → logprob: -7.262045383453369
    6. ' for' → logprob: -8.512044906616211
    7. ' 
' → logprob: -8.512044906616211
    8. '    ' → logprob: -8.512044906616211
    9. ' ' → logprob: -8.637044906616211
    10. '        ' → logprob: -8.762044906616211

Token 377: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9032297730445862
    2. '       ' → logprob: -1.1532297134399414
    3. ' for' → logprob: -1.4032297134399414
    4. '        
' → logprob: -5.153229713439941
    5. '
' → logprob: -5.528229713439941
    6. ' 
' → logprob: -5.653229713439941
    7. '   ' → logprob: -5.653229713439941
    8. 'import' → logprob: -5.778229713439941
    9. ' #' → logprob: -5.903229713439941
    10. '#' (adapté à ' #') → logprob: -6.028229713439941

Token 378: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5010987520217896
    2. ' for' → logprob: -1.1260987520217896
    3. 'from' → logprob: -3.8760986328125
    4. '#' → logprob: -4.5010986328125
    5. '       ' → logprob: -5.0010986328125
    6. 'possible' → logprob: -5.0010986328125
    7. 'import' → logprob: -5.1260986328125
    8. ' from' → logprob: -5.5010986328125
    9. ' possible' → logprob: -5.6260986328125
    10. ' #' → logprob: -5.6260986328125

Token 379: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2675279378890991
    2. ' continue' → logprob: -1.2675279378890991
    3. ' import' → logprob: -1.7675279378890991
    4. '       ' → logprob: -2.0175280570983887
    5. 'import' → logprob: -2.7675280570983887
    6. 'for' → logprob: -4.267528057098389
    7. ' try' → logprob: -4.267528057098389
    8. 'continue' → logprob: -4.517528057098389
    9. '   ' → logprob: -4.642528057098389
    10. ' indent' → logprob: -5.142528057098389

Token 380: ' all' (ID: 722)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7448295950889587
    2. '   ' → logprob: -1.6198296546936035
    3. ' all' → logprob: -2.2448296546936035
    4. 'for' → logprob: -3.2448296546936035
    5. 'all' → logprob: -3.3698296546936035
    6. 'to' → logprob: -3.3698296546936035
    7. ':' → logprob: -3.4948296546936035
    8. ' for' → logprob: -3.8698296546936035
    9. 'from' → logprob: -3.8698296546936035
    10. '       ' → logprob: -4.1198296546936035

Token 381: ' possible' (ID: 4149)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.2976760864257812
    2. ' combinations' → logprob: -1.4226760864257812
    3. 'from' → logprob: -1.5476760864257812
    4. ' possible' → logprob: -2.4226760864257812
    5. ' for' → logprob: -2.7976760864257812
    6. ' H' → logprob: -3.4226760864257812
    7. 'import' → logprob: -4.172676086425781
    8. '       ' → logprob: -4.547676086425781
    9. ' ranges' → logprob: -4.672676086425781
    10. 'for' → logprob: -4.672676086425781

Token 382: ' parties' (ID: 13531)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.05910111963748932
    2. '   ' → logprob: -4.059101104736328
    3. ' H' → logprob: -4.309101104736328
    4. 'from' → logprob: -5.934101104736328
    5. ' from' → logprob: -5.934101104736328
    6. ' sizes' → logprob: -6.059101104736328
    7. 'H' → logprob: -6.309101104736328
    8. ' hero' → logprob: -6.309101104736328
    9. ' ranges' → logprob: -6.559101104736328
    10. '       ' → logprob: -6.684101104736328

Token 383: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2163804769515991
    2. ':' → logprob: -1.7163804769515991
    3. ' =' → logprob: -1.7163804769515991
    4. '   ' → logprob: -2.5913805961608887
    5. 'for' → logprob: -2.5913805961608887
    6. ' for' → logprob: -3.0913805961608887
    7. 'from' → logprob: -3.4663805961608887
    8. 'import' → logprob: -3.9663805961608887
    9. '<|end|>' → logprob: -4.091380596160889
    10. '=' → logprob: -4.216380596160889

Token 384: ' enumer' (ID: 21093)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.30334585905075073
    2. ' combinations' → logprob: -1.6783459186553955
    3. ' iter' → logprob: -3.8033459186553955
    4. 'import' → logprob: -4.803345680236816
    5. ' range' → logprob: -5.053345680236816
    6. ' for' → logprob: -5.178345680236816
    7. 'it' → logprob: -5.803345680236816
    8. ' ranges' → logprob: -5.803345680236816
    9. ' nested' → logprob: -5.803345680236816
    10. '   ' → logprob: -6.053345680236816

Token 385: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.6343326568603516
    2. 'ate' → logprob: -0.7593326568603516
    3. 'at' → logprob: -6.509332656860352
    4. 'atting' → logprob: -10.259332656860352
    5. 'import' → logprob: -10.509332656860352
    6. 'ing' → logprob: -10.509332656860352
    7. 't' → logprob: -10.634332656860352
    8. '   ' → logprob: -11.009332656860352
    9. 'ation' → logprob: -11.134332656860352
    10. 'atings' → logprob: -11.259332656860352

Token 386: ' number' (ID: 2086)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.8351941108703613
    2. ' all' → logprob: -2.0851941108703613
    3. ' heroes' → logprob: -2.4601941108703613
    4. ' from' → logprob: -2.4601941108703613
    5. 'from' → logprob: -2.7101941108703613
    6. '       ' → logprob: -2.8351941108703613
    7. ' subsets' → logprob: -2.9601941108703613
    8. ' H' → logprob: -3.0851941108703613
    9. 'heroes' → logprob: -3.0851941108703613
    10. '   ' → logprob: -3.3351941108703613

Token 387: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8689471483230591
    2. 's' → logprob: -2.1189470291137695
    3. ')' → logprob: -2.4939470291137695
    4. ' =' → logprob: -2.6189470291137695
    5. 'of' → logprob: -2.7439470291137695
    6. '=' → logprob: -2.8689470291137695
    7. '_of' → logprob: -3.1189470291137695
    8. '(' → logprob: -3.6189470291137695
    9. ' of' → logprob: -4.1189470291137695
    10. ' ' → logprob: -4.3689470291137695

Token 388: ' parties' (ID: 13531)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.947905421257019
    2. ' heroes' → logprob: -1.697905421257019
    3. ' warriors' → logprob: -1.822905421257019
    4. 'part' → logprob: -1.822905421257019
    5. ' parties' → logprob: -3.1979055404663086
    6. '_part' → logprob: -3.6979055404663086
    7. 'war' → logprob: -3.6979055404663086
    8. ' part' → logprob: -6.072905540466309
    9. 'w' → logprob: -6.447905540466309
    10. '_' → logprob: -7.072905540466309

Token 389: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8236193060874939
    2. ' in' → logprob: -1.1986193656921387
    3. ' for' → logprob: -2.1986193656921387
    4. 'in' → logprob: -2.6986193656921387
    5. '       ' → logprob: -3.1986193656921387
    6. 'from' → logprob: -3.4486193656921387
    7. '   ' → logprob: -5.823619365692139
    8. ',' → logprob: -6.698619365692139
    9. ' from' → logprob: -6.698619365692139
    10. ' =' → logprob: -7.073619365692139

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04435095191001892
    2. ' for' → logprob: -3.7943508625030518
    3. 'for' → logprob: -3.9193508625030518
    4. ',' → logprob: -8.169350624084473
    5. 'from' → logprob: -8.169350624084473
    6. '   ' → logprob: -8.919350624084473
    7. ' from' → logprob: -9.294350624084473
    8. '        ' → logprob: -9.794350624084473
    9. ' in' → logprob: -10.169350624084473
    10. ')' → logprob: -11.044350624084473

Token 391: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3957443237304688
    2. ':' → logprob: -1.7707443237304688
    3. '       ' → logprob: -2.0207443237304688
    4. ' =' → logprob: -2.1457443237304688
    5. ',' → logprob: -2.2707443237304688
    6. 'for' → logprob: -2.3957443237304688
    7. ' :' → logprob: -3.1457443237304688
    8. '=' → logprob: -3.8957443237304688
    9. ' ' → logprob: -3.8957443237304688
    10. '   ' → logprob: -4.020744323730469

Token 392: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6306115984916687
    2. '       ' → logprob: -1.1306116580963135
    3. 'for' → logprob: -2.3806116580963135
    4. '   ' → logprob: -3.5056116580963135
    5. '
' → logprob: -4.755611419677734
    6. ' 
' → logprob: -5.630611419677734
    7. ':' → logprob: -6.005611419677734
    8. ',' → logprob: -6.630611419677734
    9. ' p' → logprob: -6.755611419677734
    10. ' ' → logprob: -7.005611419677734

Token 393: ' each' (ID: 2454)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.23282437026500702
    2. 'p' → logprob: -1.6078243255615234
    3. ' num' → logprob: -6.232824325561523
    4. 'num' → logprob: -6.607824325561523
    5. ' party' → logprob: -6.732824325561523
    6. 'part' → logprob: -7.232824325561523
    7. ' parties' → logprob: -7.232824325561523
    8. 'party' → logprob: -7.232824325561523
    9. ' part' → logprob: -8.857824325561523
    10. ' i' → logprob: -9.732824325561523

Token 394: ' party' (ID: 7362)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2049385905265808
    2. 'p' → logprob: -1.7049386501312256
    3. ' party' → logprob: -6.7049384117126465
    4. 'num' → logprob: -7.5799384117126465
    5. 'party' → logprob: -7.7049384117126465
    6. ' num' → logprob: -8.204938888549805
    7. ' size' → logprob: -8.704938888549805
    8. ' number' → logprob: -8.829938888549805
    9. 'part' → logprob: -8.829938888549805
    10. ' possible' → logprob: -9.079938888549805

Token 395: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3960285484790802
    2. '_size' → logprob: -2.146028518676758
    3. ':' → logprob: -2.646028518676758
    4. ',' → logprob: -2.896028518676758
    5. ' _' → logprob: -3.896028518676758
    6. 'in' → logprob: -3.896028518676758
    7. 'size' → logprob: -4.271028518676758
    8. ' size' → logprob: -4.896028518676758
    9. ' ,' → logprob: -5.146028518676758
    10. '   ' → logprob: -5.646028518676758

Token 396: ' choose' (ID: 5655)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17139314115047455
    2. 'for' → logprob: -2.7963931560516357
    3. '       ' → logprob: -3.4213931560516357
    4. '        ' → logprob: -4.046392917633057
    5. ' pass' → logprob: -4.046392917633057
    6. '   ' → logprob: -4.921392917633057
    7. '    ' → logprob: -5.296392917633057
    8. ' #' → logprob: -5.921392917633057
    9. '           ' → logprob: -6.171392917633057
    10. 'range' → logprob: -6.421392917633057

Token 397: ' one' (ID: 1001)
  Prédit: ' warriors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warriors' → logprob: -0.9627977013587952
    2. ' heroes' → logprob: -1.0877976417541504
    3. 'heroes' → logprob: -1.9627976417541504
    4. ' a' → logprob: -2.9627976417541504
    5. ' the' → logprob: -4.71279764175415
    6. ' hero' → logprob: -4.83779764175415
    7. 'H' → logprob: -4.96279764175415
    8. ' H' → logprob: -5.08779764175415
    9. ' warrior' → logprob: -5.08779764175415
    10. 'a' → logprob: -5.08779764175415

Token 398: ' hero' (ID: 20917)
  Prédit: ' hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hero' → logprob: -0.40658196806907654
    2. 'hero' → logprob: -1.781581997871399
    3. '   ' → logprob: -3.1565818786621094
    4. '       ' → logprob: -3.5315818786621094
    5. ')' → logprob: -3.6565818786621094
    6. ' for' → logprob: -4.281581878662109
    7. 'for' → logprob: -4.781581878662109
    8. ' warrior' → logprob: -5.531581878662109
    9. 'def' → logprob: -5.656581878662109
    10. ' of' → logprob: -5.781581878662109

Token 399: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.904590904712677
    2. '_' → logprob: -1.4045908451080322
    3. '<|end|>' → logprob: -2.5295908451080322
    4. ' =' → logprob: -2.7795908451080322
    5. ' in' → logprob: -3.0295908451080322
    6. ':' → logprob: -4.029591083526611
    7. '       ' → logprob: -4.029591083526611
    8. ' s' → logprob: -4.154591083526611
    9. ' ' → logprob: -4.279591083526611
    10. ',' → logprob: -4.654591083526611

Token 400: ' possibly' (ID: 14836)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8764230012893677
    2. ' one' → logprob: -1.8764230012893677
    3. ' and' → logprob: -2.001422882080078
    4. ' then' → logprob: -2.626422882080078
    5. '#' → logprob: -3.376422882080078
    6. ' for' → logprob: -3.376422882080078
    7. '<|end|>' → logprob: -3.376422882080078
    8. ',' → logprob: -4.251422882080078
    9. ' #' → logprob: -4.251422882080078
    10. 'one' → logprob: -4.751422882080078

Token 401: ' one' (ID: 1001)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4634127616882324
    2. ' with' → logprob: -1.9634127616882324
    3. ' from' → logprob: -2.0884127616882324
    4. 'with' → logprob: -2.3384127616882324
    5. ' more' → logprob: -2.7134127616882324
    6. ' one' → logprob: -3.0884127616882324
    7. 'more' → logprob: -3.0884127616882324
    8. ',' → logprob: -3.4634127616882324
    9. ' including' → logprob: -3.5884127616882324
    10. ' a' → logprob: -3.7134127616882324

Token 402: ' warrior' (ID: 76541)
  Prédit: ' warrior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.08498632162809372
    2. 'war' → logprob: -2.5849862098693848
    3. ' cler' → logprob: -6.584986209869385
    4. 'cler' → logprob: -6.709986209869385
    5. 'from' → logprob: -7.459986209869385
    6. '   ' → logprob: -7.584986209869385
    7. ' war' → logprob: -7.709986209869385
    8. ' from' → logprob: -7.959986209869385
    9. ' ' → logprob: -8.334986686706543
    10. 'space' → logprob: -8.334986686706543

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03112829476594925
    2. ' ,' → logprob: -4.156128406524658
    3. ',
' → logprob: -5.031128406524658
    4. '       ' → logprob: -5.156128406524658
    5. ' and' → logprob: -7.031128406524658
    6. ')' → logprob: -7.906128406524658
    7. '_' → logprob: -8.0311279296875
    8. '   ' → logprob: -8.6561279296875
    9. '_,' → logprob: -8.6561279296875
    10. '<|end|>' → logprob: -8.6561279296875

Token 404: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.06070908531546593
    2. 'one' → logprob: -2.935708999633789
    3. ' possibly' → logprob: -6.185708999633789
    4. ' and' → logprob: -6.435708999633789
    5. 'and' → logprob: -7.310708999633789
    6. ',' → logprob: -7.560708999633789
    7. 'cler' → logprob: -8.310708999633789
    8. ' cler' → logprob: -8.560708999633789
    9. '       ' → logprob: -8.935708999633789
    10. 'possibly' → logprob: -8.935708999633789

Token 405: ' cler' (ID: 91536)
  Prédit: ' cler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cler' → logprob: -0.246131032705307
    2. 'cler' → logprob: -1.6211310625076294
    3. ',' → logprob: -4.24613094329834
    4. 'cl' → logprob: -6.62113094329834
    5. ' clerk' → logprob: -6.87113094329834
    6. '   ' → logprob: -6.99613094329834
    7. ' ' → logprob: -7.24613094329834
    8. ' ,' → logprob: -7.62113094329834
    9. '
' → logprob: -8.74613094329834
    10. ' and' → logprob: -8.99613094329834

Token 406: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.292907877039397e-06
    2. 'ics' → logprob: -12.75000286102295
    3. 'ict' → logprob: -15.75000286102295
    4. 'ical' → logprob: -16.250003814697266
    5. 'icc' → logprob: -18.000003814697266
    6. 'c' → logprob: -18.750003814697266
    7. '#' → logprob: -18.875003814697266
    8. '       ' → logprob: -19.375003814697266
    9. 'ist' → logprob: -19.500003814697266
    10. '1' → logprob: -19.562503814697266

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024279789067804813
    2. ' ,' → logprob: -6.50242805480957
    3. '<|end|>' → logprob: -8.37742805480957
    4. ',
' → logprob: -8.50242805480957
    5. '       ' → logprob: -8.62742805480957
    6. ' and' → logprob: -8.75242805480957
    7. '   ' → logprob: -10.12742805480957
    8. ')' → logprob: -10.12742805480957
    9. '           ' → logprob: -11.25242805480957
    10. '#' → logprob: -11.62742805480957

Token 408: ' one' (ID: 1001)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3914084732532501
    2. ' one' → logprob: -1.5164084434509277
    3. 'and' → logprob: -2.5164084434509277
    4. 'one' → logprob: -3.7664084434509277
    5. ',' → logprob: -8.516408920288086
    6. ' or' → logprob: -9.766408920288086
    7. '               ' → logprob: -9.766408920288086
    8. '#' → logprob: -10.141408920288086
    9. ' ' → logprob: -10.391408920288086
    10. '       ' → logprob: -10.766408920288086

Token 409: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.027561916038393974
    2. ' mage' → logprob: -3.652561902999878
    3. ',' → logprob: -7.152562141418457
    4. 'm' → logprob: -8.527562141418457
    5. ' ' → logprob: -9.777562141418457
    6. '   ' → logprob: -10.027562141418457
    7. 'and' → logprob: -10.152562141418457
    8. ' and' → logprob: -10.652562141418457
    9. 'mages' → logprob: -10.777562141418457
    10. ' or' → logprob: -11.027562141418457

Token 410: ' following' (ID: 3992)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01886250637471676
    2. '<|end|>' → logprob: -4.768862724304199
    3. '
' → logprob: -5.018862724304199
    4. ',' → logprob: -6.518862724304199
    5. '        
' → logprob: -7.268862724304199
    6. '.' → logprob: -8.0188627243042
    7. '<|end|>' → logprob: -8.1438627243042
    8. ' for' → logprob: -8.5188627243042
    9. ',
' → logprob: -9.1438627243042
    10. '#' → logprob: -9.2688627243042

Token 411: ' rules' (ID: 9607)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.193919375538826
    2. 'the' → logprob: -2.0689194202423096
    3. '       ' → logprob: -3.6939194202423096
    4. ' their' → logprob: -4.3189191818237305
    5. '   ' → logprob: -5.8189191818237305
    6. 'their' → logprob: -6.0689191818237305
    7. '           ' → logprob: -6.8189191818237305
    8. '```' → logprob: -7.3189191818237305
    9. 'range' → logprob: -7.5689191818237305
    10. ' a' → logprob: -7.5689191818237305

Token 412: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038444098085165024
    2. '<|end|>' → logprob: -4.1634440422058105
    3. '
' → logprob: -4.5384440422058105
    4. '        
' → logprob: -4.9134440422058105
    5. ',' → logprob: -6.9134440422058105
    6. ':' → logprob: -7.2884440422058105
    7. '<|end|>' → logprob: -7.5384440422058105
    8. '        ' → logprob: -7.7884440422058105
    9. ' for' → logprob: -8.538444519042969
    10. '.' → logprob: -8.663444519042969

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024649559054523706
    2. '<|end|>' → logprob: -6.752464771270752
    3. '        
' → logprob: -7.502464771270752
    4. '
' → logprob: -8.50246524810791
    5. ',' → logprob: -9.00246524810791
    6. '.' → logprob: -9.62746524810791
    7. '           ' → logprob: -9.75246524810791
    8. '#' → logprob: -9.75246524810791
    9. ' for' → logprob: -9.87746524810791
    10. '<|end|>' → logprob: -10.12746524810791

Token 414: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026718001812696457
    2. '
' → logprob: -4.5267181396484375
    3. '        
' → logprob: -4.7767181396484375
    4. '<|end|>' → logprob: -5.9017181396484375
    5. ':' → logprob: -6.7767181396484375
    6. ' for' → logprob: -7.4017181396484375
    7. ',' → logprob: -7.7767181396484375
    8. '   ' → logprob: -7.9017181396484375
    9. '  
' → logprob: -8.526718139648438
    10. '#' (adapté à ' #') → logprob: -8.526718139648438

Token 415: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007840840145945549
    2. ' for' → logprob: -5.882840633392334
    3. '
' → logprob: -6.007840633392334
    4. '        
' → logprob: -7.007840633392334
    5. 'for' → logprob: -7.257840633392334
    6. '   ' → logprob: -8.257841110229492
    7. '#' → logprob: -8.882841110229492
    8. 'from' → logprob: -9.632841110229492
    9. '<|end|>' → logprob: -9.632841110229492
    10. '  
' → logprob: -9.882841110229492

Token 416: ' generate' (ID: 10419)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12066061049699783
    2. '       ' → logprob: -2.9956605434417725
    3. ' import' → logprob: -3.3706605434417725
    4. ' for' → logprob: -4.620660781860352
    5. 'continue' → logprob: -4.870660781860352
    6. 'import' → logprob: -5.245660781860352
    7. ' indent' → logprob: -6.120660781860352
    8. 'for' → logprob: -6.745660781860352
    9. ' try' → logprob: -6.745660781860352
    10. '        ' → logprob: -7.370660781860352

Token 417: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.1685890555381775
    2. ' combinations' → logprob: -2.9185891151428223
    3. 'all' → logprob: -3.4185891151428223
    4. '       ' → logprob: -3.7935891151428223
    5. ' possible' → logprob: -4.543589115142822
    6. ' for' → logprob: -4.793589115142822
    7. 'for' → logprob: -5.043589115142822
    8. 'possible' → logprob: -5.168589115142822
    9. ' parties' → logprob: -5.793589115142822
    10. '   ' → logprob: -6.293589115142822

Token 418: ' possible' (ID: 4149)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.1577998250722885
    2. ' possible' → logprob: -2.15779972076416
    3. 'possible' → logprob: -4.28279972076416
    4. '   ' → logprob: -5.78279972076416
    5. ' hero' → logprob: -5.78279972076416
    6. ' heroes' → logprob: -6.28279972076416
    7. 'com' → logprob: -6.65779972076416
    8. ' from' → logprob: -6.78279972076416
    9. ' permutations' → logprob: -6.78279972076416
    10. 'from' → logprob: -7.15779972076416

Token 419: ' parties' (ID: 13531)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.03497716411948204
    2. 'com' → logprob: -4.034976959228516
    3. ' hero' → logprob: -4.784976959228516
    4. 'heroes' → logprob: -6.409976959228516
    5. ' heroes' → logprob: -6.909976959228516
    6. 'hero' → logprob: -6.909976959228516
    7. '_com' → logprob: -7.159976959228516
    8. '   ' → logprob: -7.409976959228516
    9. ' combos' → logprob: -7.659976959228516
    10. 'comb' → logprob: -7.784976959228516

Token 420: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0670042484998703
    2. ':' → logprob: -3.3170042037963867
    3. ',' → logprob: -4.192004203796387
    4. '        
' → logprob: -5.567004203796387
    5. '.' → logprob: -5.942004203796387
    6. ' =' → logprob: -6.317004203796387
    7. '   ' → logprob: -6.567004203796387
    8. '=' → logprob: -8.067004203796387
    9. ' for' → logprob: -8.067004203796387
    10. ' :' → logprob: -8.067004203796387

Token 421: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021077338606119156
    2. '        
' → logprob: -4.6460771560668945
    3. '<|end|>' → logprob: -5.2710771560668945
    4. '
' → logprob: -5.7710771560668945
    5. ' for' → logprob: -6.5210771560668945
    6. 'for' → logprob: -8.146077156066895
    7. ',' → logprob: -9.021077156066895
    8. '#' → logprob: -9.021077156066895
    9. '<|end|>' → logprob: -9.021077156066895
    10. 'from' → logprob: -9.146077156066895

Token 422: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9872526526451111
    2. '       ' → logprob: -1.6122527122497559
    3. ' possible' → logprob: -2.487252712249756
    4. 'possible' → logprob: -2.612252712249756
    5. ' continue' → logprob: -2.737252712249756
    6. 'continue' → logprob: -2.862252712249756
    7. 'for' → logprob: -3.237252712249756
    8. ' parties' → logprob: -3.862252712249756
    9. ' #' → logprob: -4.237252712249756
    10. '#' → logprob: -4.362252712249756

Token 423: ' greed' (ID: 103438)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3609613180160522
    2. '#' → logprob: -1.6109613180160522
    3. '       ' → logprob: -1.9859613180160522
    4. 'for' → logprob: -1.9859613180160522
    5. ' from' → logprob: -3.110961437225342
    6. ' used' → logprob: -3.235961437225342
    7. 'from' → logprob: -3.360961437225342
    8. ' #' → logprob: -3.610961437225342
    9. 'import' → logprob: -4.485961437225342
    10. ' parties' → logprob: -4.485961437225342

Token 424: 'ily' (ID: 1810)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7012529969215393
    2. 'ate' → logprob: -1.2012529373168945
    3. 'ately' → logprob: -2.3262529373168945
    4. 'ily' → logprob: -2.7012529373168945
    5. '   ' → logprob: -4.0762529373168945
    6. '           ' → logprob: -5.2012529373168945
    7. 'ul' → logprob: -5.9512529373168945
    8. 'y' → logprob: -5.9512529373168945
    9. 'iately' → logprob: -6.5762529373168945
    10. 'atively' → logprob: -6.7012529373168945

Token 425: ' pick' (ID: 5230)
  Prédit: ' select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' select' → logprob: -0.20504747331142426
    2. 'select' → logprob: -2.205047369003296
    3. ' choose' → logprob: -3.830047369003296
    4. 'choose' → logprob: -3.955047369003296
    5. 'assign' → logprob: -4.455047607421875
    6. ' pick' → logprob: -5.205047607421875
    7. ' assign' → logprob: -5.705047607421875
    8. '       ' → logprob: -5.955047607421875
    9. 'pick' → logprob: -5.955047607421875
    10. ' use' → logprob: -6.330047607421875

Token 426: ' dis' (ID: 829)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.9550482034683228
    2. 'from' → logprob: -0.9550482034683228
    3. ' parties' → logprob: -2.580048084259033
    4. ' subsets' → logprob: -3.830048084259033
    5. ' sets' → logprob: -4.205048084259033
    6. ' one' → logprob: -4.330048084259033
    7. 'part' → logprob: -4.330048084259033
    8. ' ones' → logprob: -4.705048084259033
    9. ' combinations' → logprob: -4.830048084259033
    10. ' valid' → logprob: -5.080048084259033

Token 427: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.19388608634471893
    2. 'card' → logprob: -2.3188860416412354
    3. 'j' → logprob: -3.9438860416412354
    4. 't' → logprob: -4.0688862800598145
    5. 'jo' → logprob: -5.1938862800598145
    6. '   ' → logprob: -5.4438862800598145
    7. '```' → logprob: -5.4438862800598145
    8. '       ' → logprob: -6.0688862800598145
    9. '=' → logprob: -6.3188862800598145
    10. 'covered' → logprob: -6.4438862800598145

Token 428: ' parties' (ID: 13531)
  Prédit: ' sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sets' → logprob: -0.42744654417037964
    2. 'sets' → logprob: -1.1774466037750244
    3. 'part' → logprob: -4.052446365356445
    4. ' parties' → logprob: -4.927446365356445
    5. '_part' → logprob: -5.052446365356445
    6. ' subsets' → logprob: -5.302446365356445
    7. '_sets' → logprob: -7.052446365356445
    8. ' ones' → logprob: -7.177446365356445
    9. 'heroes' → logprob: -7.677446365356445
    10. ' heroes' → logprob: -7.677446365356445

Token 429: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11610109359025955
    2. '
' → logprob: -2.741101026535034
    3. '        
' → logprob: -3.741101026535034
    4. '<|end|>' → logprob: -3.991101026535034
    5. '<|end|>' → logprob: -7.741101264953613
    6. '#' → logprob: -7.866101264953613
    7. 'import' → logprob: -7.866101264953613
    8. 'from' → logprob: -7.991101264953613
    9. ',' → logprob: -8.241101264953613
    10. '        

' → logprob: -8.741101264953613

Token 430: ' maximize' (ID: 44207)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.14212046563625336
    2. ' cover' → logprob: -2.267120361328125
    3. 'maximize' → logprob: -4.142120361328125
    4. 'form' → logprob: -5.517120361328125
    5. 'use' → logprob: -6.017120361328125
    6. 'max' → logprob: -6.142120361328125
    7. ' maximize' → logprob: -7.142120361328125
    8. '       ' → logprob: -7.392120361328125
    9. ' form' → logprob: -7.517120361328125
    10. 'include' → logprob: -7.642120361328125

Token 431: ' count' (ID: 3605)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9668470025062561
    2. '_part' → logprob: -1.3418469429016113
    3. ' the' → logprob: -1.7168469429016113
    4. 'count' → logprob: -2.3418469429016113
    5. 'max' → logprob: -3.9668469429016113
    6. '   ' → logprob: -4.716846942901611
    7. 'coverage' → logprob: -4.716846942901611
    8. 'result' → logprob: -5.091846942901611
    9. 'part' → logprob: -5.341846942901611
    10. 'number' → logprob: -5.466846942901611

Token 432: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13575968146324158
    2. '<|end|>' → logprob: -2.2607595920562744
    3. '        
' → logprob: -4.8857598304748535
    4. '
' → logprob: -5.2607598304748535
    5. '.' → logprob: -5.5107598304748535
    6. '<|end|>' → logprob: -6.1357598304748535
    7. ',' → logprob: -6.6357598304748535
    8. 'import' → logprob: -7.3857598304748535
    9. '#' → logprob: -7.7607598304748535
    10. '        ' → logprob: -8.260759353637695

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06736794859170914
    2. '
' → logprob: -3.1923680305480957
    3. '        
' → logprob: -3.8173680305480957
    4. 'from' → logprob: -7.067368030548096
    5. 'import' → logprob: -7.942368030548096
    6. '<|end|>' → logprob: -8.067367553710938
    7. '```' → logprob: -8.817367553710938
    8. '  
' → logprob: -9.192367553710938
    9. ' from' → logprob: -9.942367553710938
    10. ' 
' → logprob: -10.192367553710938

Token 434: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038863521069288254
    2. 'from' → logprob: -4.413863658905029
    3. '
' → logprob: -5.038863658905029
    4. 'import' → logprob: -5.288863658905029
    5. 'possible' → logprob: -5.663863658905029
    6. ' from' → logprob: -5.788863658905029
    7. 'part' → logprob: -5.913863658905029
    8. '        
' → logprob: -6.038863658905029
    9. '#' (adapté à ' #') → logprob: -6.413863658905029
    10. '   ' → logprob: -8.163863182067871

Token 435: ' First' (ID: 8338)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1681549549102783
    2. 'possible' → logprob: -1.2931549549102783
    3. '#' → logprob: -1.5431549549102783
    4. 'part' → logprob: -2.1681549549102783
    5. 'import' → logprob: -4.293154716491699
    6. '   ' → logprob: -4.293154716491699
    7. 'heroes' → logprob: -4.418154716491699
    8. ' from' → logprob: -4.543154716491699
    9. 'all' → logprob: -4.543154716491699
    10. '       ' → logprob: -4.918154716491699

Token 436: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3362241983413696
    2. '   ' → logprob: -1.5862241983413696
    3. ',' → logprob: -1.7112241983413696
    4. '       ' → logprob: -2.21122407913208
    5. 'possible' → logprob: -2.33622407913208
    6. '_possible' → logprob: -3.71122407913208
    7. '
' → logprob: -3.96122407913208
    8. ' possible' → logprob: -4.21122407913208
    9. ' #' → logprob: -4.21122407913208
    10. 'part' → logprob: -4.46122407913208

Token 437: ' prepare' (ID: 13708)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.47804656624794006
    2. 'possible' → logprob: -2.1030466556549072
    3. '#' → logprob: -2.3530466556549072
    4. 'party' → logprob: -3.2280466556549072
    5. ' parties' → logprob: -3.3530466556549072
    6. 'all' → logprob: -4.228046417236328
    7. 'hero' → logprob: -4.353046417236328
    8. 'war' → logprob: -4.603046417236328
    9. '   ' → logprob: -4.728046417236328
    10. 'from' → logprob: -4.728046417236328

Token 438: ' friendly' (ID: 11888)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9328060150146484
    2. 'possible' → logprob: -0.9328060150146484
    3. 'heroes' → logprob: -3.0578060150146484
    4. 'party' → logprob: -3.4328060150146484
    5. 'war' → logprob: -3.5578060150146484
    6. 'all' → logprob: -3.5578060150146484
    7. ' parties' → logprob: -3.9328060150146484
    8. 'hero' → logprob: -4.057806015014648
    9. ' possible' → logprob: -4.432806015014648
    10. '#' → logprob: -4.432806015014648

Token 439: ' pairs' (ID: 24702)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.9893654584884644
    2. '_sets' → logprob: -1.1143654584884644
    3. '_' → logprob: -1.9893654584884644
    4. '_part' → logprob: -2.989365577697754
    5. '_map' → logprob: -3.489365577697754
    6. 'sets' → logprob: -3.614365577697754
    7. '_w' → logprob: -3.864365577697754
    8. 'heroes' → logprob: -4.864365577697754
    9. '_rel' → logprob: -5.489365577697754
    10. '_groups' → logprob: -5.489365577697754

Token 440: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.895352840423584
    2. 'war' → logprob: -0.895352840423584
    3. 'friendly' → logprob: -3.270352840423584
    4. 'pairs' → logprob: -3.520352840423584
    5. 'friend' → logprob: -4.020352840423584
    6. '#' → logprob: -4.145352840423584
    7. 'hero' → logprob: -4.395352840423584
    8. '   ' → logprob: -4.520352840423584
    9. ' pairs' → logprob: -4.770352840423584
    10. ' =' → logprob: -4.770352840423584

Token 441: ' roles' (ID: 18834)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.257190078496933
    2. ' heroes' → logprob: -2.382189989089966
    3. 'war' → logprob: -2.757189989089966
    4. 'hero' → logprob: -3.382189989089966
    5. ' hero' → logprob: -4.757190227508545
    6. 'layers' → logprob: -4.882190227508545
    7. ' warriors' → logprob: -5.007190227508545
    8. 'types' → logprob: -6.007190227508545
    9. 'levels' → logprob: -6.132190227508545
    10. ' layers' → logprob: -6.507190227508545

Token 442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09994295984506607
    2. 'war' → logprob: -3.099942922592163
    3. '#' → logprob: -4.099943161010742
    4. '        
' → logprob: -4.849943161010742
    5. 'friend' → logprob: -5.224943161010742
    6. ' warrior' → logprob: -5.349943161010742
    7. 'friendly' → logprob: -5.599943161010742
    8. '
' → logprob: -5.974943161010742
    9. ' between' → logprob: -6.599943161010742
    10. ':' → logprob: -6.974943161010742

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1647154986858368
    2. 'war' → logprob: -2.289715528488159
    3. '        
' → logprob: -4.28971529006958
    4. ' warrior' → logprob: -4.78971529006958
    5. '#' → logprob: -4.91471529006958
    6. 'friend' → logprob: -5.28971529006958
    7. '
' → logprob: -5.28971529006958
    8. 'friendly' → logprob: -5.53971529006958
    9. '```' → logprob: -7.03971529006958
    10. 'hero' → logprob: -7.16471529006958

Token 444: ' #' (ID: 1069)
  Prédit: 'friendly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friendly' → logprob: -0.7084540724754333
    2. 'war' → logprob: -1.2084541320800781
    3. '       ' → logprob: -2.708454132080078
    4. 'friend' → logprob: -3.333454132080078
    5. '#' (adapté à ' #') → logprob: -3.458454132080078
    6. ' friendly' → logprob: -3.583454132080078
    7. ' warrior' → logprob: -3.708454132080078
    8. 'hero' → logprob: -4.333454132080078
    9. ' hero' → logprob: -6.208454132080078
    10. '   ' → logprob: -6.958454132080078

Token 445: ' warrior' (ID: 76541)
  Prédit: 'friendly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friendly' → logprob: -0.7210537791252136
    2. 'war' → logprob: -1.2210538387298584
    3. '#' → logprob: -2.5960538387298584
    4. 'friend' → logprob: -3.4710538387298584
    5. ' friendly' → logprob: -3.4710538387298584
    6. '       ' → logprob: -3.4710538387298584
    7. ' warrior' → logprob: -3.7210538387298584
    8. '   ' → logprob: -4.971053600311279
    9. 'hero' → logprob: -5.471053600311279
    10. ' #' → logprob: -5.971053600311279

Token 446: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08861202001571655
    2. '_to' → logprob: -2.8386120796203613
    3. '_cl' → logprob: -3.9636120796203613
    4. '_f' → logprob: -5.213612079620361
    5. '_friend' → logprob: -6.588612079620361
    6. '_w' → logprob: -9.088611602783203
    7. 'to' → logprob: -9.463611602783203
    8. '_can' → logprob: -9.713611602783203
    9. 'hero' → logprob: -10.338611602783203
    10. '_m' → logprob: -10.463611602783203

Token 447: ' gets' (ID: 8625)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2208259105682373
    2. 's' → logprob: -1.3458259105682373
    3. '_' → logprob: -1.8458259105682373
    4. ' s' → logprob: -2.3458259105682373
    5. ' =' → logprob: -3.4708259105682373
    6. 'for' → logprob: -3.9708259105682373
    7. ' _' → logprob: -4.095826148986816
    8. ' for' → logprob: -4.220826148986816
    9. ' ,' → logprob: -4.345826148986816
    10. ' ' → logprob: -4.845826148986816

Token 448: ' along' (ID: 4251)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.008251428604126
    2. ' a' → logprob: -2.008251428604126
    3. ' friendly' → logprob: -2.008251428604126
    4. 'friendly' → logprob: -2.133251428604126
    5. ' for' → logprob: -2.633251428604126
    6. '   ' → logprob: -3.258251428604126
    7. ' {' → logprob: -3.508251428604126
    8. 'friend' → logprob: -3.633251428604126
    9. 'for' → logprob: -3.883251428604126
    10. 'war' → logprob: -3.883251428604126

Token 449: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.35707709193229675
    2. ' with' → logprob: -1.2320771217346191
    3. '_with' → logprob: -5.232077121734619
    4. '   ' → logprob: -6.607077121734619
    5. ' ' → logprob: -7.482077121734619
    6. ' =' → logprob: -7.732077121734619
    7. '	with' → logprob: -8.857076644897461
    8. '       ' → logprob: -9.107076644897461
    9. '  ' → logprob: -9.232076644897461
    10. '_w' → logprob: -9.232076644897461

Token 450: ' hero' (ID: 20917)
  Prédit: ' cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cler' → logprob: -0.5211218595504761
    2. ' mage' → logprob: -1.896121859550476
    3. 'cler' → logprob: -2.2711219787597656
    4. ' hero' → logprob: -2.7711219787597656
    5. 'mage' → logprob: -3.0211219787597656
    6. 'hero' → logprob: -3.6461219787597656
    7. ' heroes' → logprob: -5.396121978759766
    8. 'heroes' → logprob: -5.646121978759766
    9. ' set' → logprob: -6.771121978759766
    10. '   ' → logprob: -7.021121978759766

Token 451: ' h' (ID: 312)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3388521075248718
    2. '_' → logprob: -1.9638521671295166
    3. ' s' → logprob: -2.9638521671295166
    4. ' _' → logprob: -3.2138521671295166
    5. '_s' → logprob: -4.3388519287109375
    6. '[i' → logprob: -4.8388519287109375
    7. ' ' → logprob: -5.2138519287109375
    8. '[' → logprob: -5.4638519287109375
    9. ' i' → logprob: -5.4638519287109375
    10. '_set' → logprob: -5.5888519287109375

Token 452: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04727654159069061
    2. '=' → logprob: -4.047276496887207
    3. ',' → logprob: -4.922276496887207
    4. '       ' → logprob: -5.547276496887207
    5. '_f' → logprob: -5.797276496887207
    6. '_w' → logprob: -6.047276496887207
    7. '_pairs' → logprob: -6.047276496887207
    8. '   ' → logprob: -6.422276496887207
    9. 'if' → logprob: -6.547276496887207
    10. '_' → logprob: -6.547276496887207

Token 453: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.021049082279205322
    2. ' h' → logprob: -3.8960490226745605
    3. '(h' → logprob: -8.896049499511719
    4. '   ' → logprob: -9.271049499511719
    5. 'i' → logprob: -9.521049499511719
    6. 'H' → logprob: -9.896049499511719
    7. 'w' → logprob: -10.771049499511719
    8. ' ' → logprob: -10.896049499511719
    9. 'war' → logprob: -10.896049499511719
    10. ' (' → logprob: -11.146049499511719

Token 454: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07046973705291748
    2. 'in' → logprob: -2.695469856262207
    3. ' ' → logprob: -8.570469856262207
    4. '_in' → logprob: -9.445469856262207
    5. '_' → logprob: -9.695469856262207
    6. 's' → logprob: -10.195469856262207
    7. '   ' → logprob: -10.757969856262207
    8. ' not' → logprob: -11.070469856262207
    9. ')' → logprob: -11.257969856262207
    10. ' i' → logprob: -11.382969856262207

Token 455: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.0022601638920605183
    2. ' warrior' → logprob: -6.627260208129883
    3. '   ' → logprob: -7.252260208129883
    4. '       ' → logprob: -9.002260208129883
    5. ' ' → logprob: -10.252260208129883
    6. '           ' → logprob: -11.377260208129883
    7. '  ' → logprob: -11.502260208129883
    8. '	' → logprob: -11.877260208129883
    9. ' ' → logprob: -12.002260208129883
    10. '    ' → logprob: -12.252260208129883

Token 456: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.491498531133402e-06
    2. '_h' → logprob: -12.625009536743164
    3. '_w' → logprob: -13.125009536743164
    4. ' _' → logprob: -13.125009536743164
    5. '_friend' → logprob: -14.000009536743164
    6. '_f' → logprob: -14.625009536743164
    7. 'hero' → logprob: -15.375009536743164
    8. '._' → logprob: -16.000009536743164
    9. '[_' → logprob: -16.000009536743164
    10. '```' → logprob: -16.250009536743164

Token 457: 'hero' (ID: 28501)
  Prédit: 'hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hero' → logprob: -0.018282450735569
    2. '_' → logprob: -4.018282413482666
    3. ' hero' → logprob: -9.518282890319824
    4. ' ' → logprob: -11.393282890319824
    5. '_h' → logprob: -11.393282890319824
    6. 'war' → logprob: -11.768282890319824
    7. '_w' → logprob: -12.018282890319824
    8. '```' → logprob: -12.643282890319824
    9. '.hero' → logprob: -13.018282890319824
    10. 'her' → logprob: -13.018282890319824

Token 458: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005936859175562859
    2. '[' → logprob: -6.130936622619629
    3. '       ' → logprob: -7.130936622619629
    4. '[h' → logprob: -7.130936622619629
    5. ' and' → logprob: -7.505936622619629
    6. ')' → logprob: -7.630936622619629
    7. '   ' → logprob: -8.380936622619629
    8. 's' → logprob: -8.505936622619629
    9. '_' → logprob: -8.755936622619629
    10. '_h' → logprob: -9.380936622619629

Token 459: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005538831930607557
    2. '[i' → logprob: -6.7555389404296875
    3. ']:' → logprob: -6.7555389404296875
    4. '],' → logprob: -7.5055389404296875
    5. ']
' → logprob: -7.6305389404296875
    6. '[' → logprob: -7.7555389404296875
    7. '       ' → logprob: -7.8805389404296875
    8. '   ' → logprob: -8.255538940429688
    9. ' ]' → logprob: -8.630538940429688
    10. ')' → logprob: -8.880538940429688

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1466004103422165
    2. '<|end|>' → logprob: -2.8966004848480225
    3. '
' → logprob: -3.1466004848480225
    4. '.' → logprob: -4.271600246429443
    5. '\n' → logprob: -5.146600246429443
    6. ',' → logprob: -5.146600246429443
    7. '        
' → logprob: -6.146600246429443
    8. ')' → logprob: -6.396600246429443
    9. ':' → logprob: -6.771600246429443
    10. '   ' → logprob: -7.146600246429443

Token 461: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013556404039263725
    2. '
' → logprob: -5.388556480407715
    3. ',' → logprob: -5.638556480407715
    4. '        
' → logprob: -5.763556480407715
    5. '#' (adapté à ' #') → logprob: -7.138556480407715
    6. ')' → logprob: -8.513556480407715
    7. '.' → logprob: -8.513556480407715
    8. ',
' → logprob: -8.888556480407715
    9. ' and' → logprob: -8.888556480407715
    10. '\n' → logprob: -9.013556480407715

Token 462: ' cler' (ID: 91536)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1426476538181305
    2. '        
' → logprob: -3.5176477432250977
    3. '\n' → logprob: -3.6426477432250977
    4. ',' → logprob: -3.7676477432250977
    5. '#' → logprob: -4.267647743225098
    6. ',
' → logprob: -5.017647743225098
    7. '
' → logprob: -5.017647743225098
    8. '  
' → logprob: -5.267647743225098
    9. 'W' → logprob: -5.392647743225098
    10. '\' → logprob: -6.392647743225098

Token 463: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0005868718726560473
    2. '_w' → logprob: -8.12558650970459
    3. '_' → logprob: -8.75058650970459
    4. '   ' → logprob: -9.50058650970459
    5. '  ' → logprob: -11.37558650970459
    6. ' _' → logprob: -12.00058650970459
    7. 'ics' → logprob: -12.00058650970459
    8. ' ' → logprob: -12.25058650970459
    9. '_ic' → logprob: -12.62558650970459
    10. ' ic' → logprob: -13.00058650970459

Token 464: ' j' (ID: 441)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.43050912022590637
    2. '_' → logprob: -1.305509090423584
    3. ' _' → logprob: -2.930509090423584
    4. '   ' → logprob: -5.180509090423584
    5. '_j' → logprob: -5.555509090423584
    6. '_h' → logprob: -5.930509090423584
    7. '_cl' → logprob: -6.055509090423584
    8. ' ' → logprob: -6.055509090423584
    9. '[i' → logprob: -6.180509090423584
    10. '_i' → logprob: -6.930509090423584

Token 465: ' gets' (ID: 8625)
  Prédit: ' gets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gets' → logprob: -0.1276284158229828
    2. 'gets' → logprob: -2.2526283264160156
    3. '   ' → logprob: -5.502628326416016
    4. '       ' → logprob: -5.877628326416016
    5. ' ' → logprob: -6.502628326416016
    6. '_get' → logprob: -6.502628326416016
    7. '_' → logprob: -6.752628326416016
    8. ' get' → logprob: -7.377628326416016
    9. 'get' → logprob: -7.752628326416016
    10. '
' → logprob: -8.127628326416016

Token 466: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.11334941536188126
    2. ' along' → logprob: -2.238349437713623
    3. '_al' → logprob: -8.738348960876465
    4. '   ' → logprob: -9.113348960876465
    5. 'all' → logprob: -10.238348960876465
    6. ' ' → logprob: -10.238348960876465
    7. 'Along' → logprob: -10.988348960876465
    8. '  ' → logprob: -10.988348960876465
    9. '    ' → logprob: -11.113348960876465
    10. '_' → logprob: -11.363348960876465

Token 467: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.4292401373386383
    2. ' with' → logprob: -1.054240107536316
    3. '_with' → logprob: -7.6792402267456055
    4. '	with' → logprob: -9.804240226745605
    5. ' ' → logprob: -11.929240226745605
    6. '   ' → logprob: -12.554240226745605
    7. '    ' → logprob: -13.179240226745605
    8. '=' → logprob: -13.429240226745605
    9. '_' → logprob: -13.679240226745605
    10. ' =' → logprob: -13.804240226745605

Token 468: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.2623121440410614
    2. ' warrior' → logprob: -1.6373121738433838
    3. 'cler' → logprob: -4.262311935424805
    4. ' range' → logprob: -5.387311935424805
    5. ' cler' → logprob: -5.387311935424805
    6. 'hero' → logprob: -5.887311935424805
    7. 'range' → logprob: -6.012311935424805
    8. ' hero' → logprob: -6.512311935424805
    9. 'mage' → logprob: -6.512311935424805
    10. ' set' → logprob: -7.262311935424805

Token 469: ' i' (ID: 575)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.16688138246536255
    2. '_' → logprob: -3.4168813228607178
    3. '[k' → logprob: -3.5418813228607178
    4. '_cl' → logprob: -3.7918813228607178
    5. '[i' → logprob: -3.7918813228607178
    6. '_w' → logprob: -3.9168813228607178
    7. ' [' → logprob: -5.041881561279297
    8. '[' → logprob: -5.166881561279297
    9. '_[' → logprob: -5.791881561279297
    10. '_j' → logprob: -5.791881561279297

Token 470: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21828016638755798
    2. ' and' → logprob: -1.8432801961898804
    3. '       ' → logprob: -3.968280076980591
    4. 'and' → logprob: -4.84328031539917
    5. 'if' → logprob: -4.96828031539917
    6. '[j' → logprob: -6.34328031539917
    7. '           ' → logprob: -6.46828031539917
    8. ' or' → logprob: -8.468279838562012
    9. ' ' → logprob: -9.343279838562012
    10. '        ' → logprob: -9.468279838562012

Token 471: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13361665606498718
    2. ' j' → logprob: -2.1336166858673096
    3. 'cler' → logprob: -5.1336164474487305
    4. ' cler' → logprob: -8.25861644744873
    5. '   ' → logprob: -9.25861644744873
    6. ' ' → logprob: -9.50861644744873
    7. 'i' → logprob: -9.63361644744873
    8. '	j' → logprob: -9.63361644744873
    9. 'cl' → logprob: -10.13361644744873
    10. ' i' → logprob: -10.25861644744873

Token 472: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033936358988285065
    2. 'in' → logprob: -3.4089362621307373
    3. ' ' → logprob: -9.033936500549316
    4. '_in' → logprob: -10.033936500549316
    5. 's' → logprob: -10.658936500549316
    6. '_' → logprob: -11.221436500549316
    7. ' ' → logprob: -11.471436500549316
    8. '   ' → logprob: -11.471436500549316
    9. ')' → logprob: -11.846436500549316
    10. ' <' → logprob: -11.908936500549316

Token 473: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.0003724006237462163
    2. 'war' → logprob: -8.500371932983398
    3. ' cler' → logprob: -8.750371932983398
    4. 'cl' → logprob: -12.125371932983398
    5. '   ' → logprob: -13.625371932983398
    6. 'clar' → logprob: -14.625371932983398
    7. 'cle' → logprob: -15.000371932983398
    8. '	' → logprob: -15.000371932983398
    9. 'cla' → logprob: -15.000371932983398
    10. ' ' → logprob: -15.125371932983398

Token 474: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.4153549020411447e-05
    2. 'c' → logprob: -11.37502384185791
    3. 'cl' → logprob: -11.87502384185791
    4. 'ics' → logprob: -13.25002384185791
    5. 'icl' → logprob: -14.37502384185791
    6. 'oc' → logprob: -15.12502384185791
    7. 'cler' → logprob: -15.25002384185791
    8. '   ' → logprob: -15.25002384185791
    9. 'nic' → logprob: -15.37502384185791
    10. 'i' → logprob: -15.50002384185791

Token 475: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.500003814697266
    3. 'war' → logprob: -13.875003814697266
    4. '_j' → logprob: -14.750003814697266
    5. '   ' → logprob: -15.250003814697266
    6. ' _' → logprob: -16.000003814697266
    7. '\' → logprob: -16.000003814697266
    8. '_cl' → logprob: -16.250003814697266
    9. '[_' → logprob: -16.625003814697266
    10. '       ' → logprob: -17.000003814697266

Token 476: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.029366128146648407
    2. 'arr' → logprob: -4.1543660163879395
    3. '_w' → logprob: -4.5293660163879395
    4. 'arri' → logprob: -6.6543660163879395
    5. 'ari' → logprob: -7.9043660163879395
    6. '_' → logprob: -8.154366493225098
    7. '_arr' → logprob: -8.654366493225098
    8. '_ar' → logprob: -8.904366493225098
    9. 'war' → logprob: -9.529366493225098
    10. '[' → logprob: -10.404366493225098

Token 477: 'rior' (ID: 12072)
  Prédit: 'rior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rior' → logprob: -0.5129448771476746
    2. 'or' → logprob: -1.2629449367523193
    3. 'ior' → logprob: -2.2629449367523193
    4. 'ar' → logprob: -5.01294469833374
    5. 'ror' → logprob: -5.88794469833374
    6. 'itor' → logprob: -7.51294469833374
    7. 'i' → logprob: -7.76294469833374
    8. '   ' → logprob: -8.012945175170898
    9. 'ator' → logprob: -8.137945175170898
    10. '_' → logprob: -8.137945175170898

Token 478: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00021259987261146307
    2. '       ' → logprob: -10.125212669372559
    3. '           ' → logprob: -10.625212669372559
    4. '[' → logprob: -10.750212669372559
    5. 'j' → logprob: -10.875212669372559
    6. ')' → logprob: -10.875212669372559
    7. '[i' → logprob: -11.125212669372559
    8. 's' → logprob: -11.500212669372559
    9. '   ' → logprob: -11.625212669372559
    10. '```' → logprob: -11.875212669372559

Token 479: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036679957062006
    2. '])' → logprob: -4.286679744720459
    3. ')' → logprob: -4.661679744720459
    4. ']
' → logprob: -5.161679744720459
    5. '       ' → logprob: -5.536679744720459
    6. '           ' → logprob: -6.661679744720459
    7. ')]' → logprob: -7.536679744720459
    8. ' ]' → logprob: -8.161680221557617
    9. '[' → logprob: -8.411680221557617
    10. '   ' → logprob: -8.786680221557617

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005301469471305609
    2. '#' → logprob: -5.380301475524902
    3. '<|end|>' → logprob: -8.005301475524902
    4. '        
' → logprob: -8.755301475524902
    5. ',' → logprob: -10.005301475524902
    6. '
' → logprob: -10.255301475524902
    7. ' #' → logprob: -10.880301475524902
    8. '           ' → logprob: -11.005301475524902
    9. ' and' → logprob: -11.380301475524902
    10. '        ' → logprob: -11.380301475524902

Token 481: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004551169462502003
    2. '#' (adapté à ' #') → logprob: -5.629550933837891
    3. '<|end|>' → logprob: -7.879550933837891
    4. '   ' → logprob: -8.50455093383789
    5. '           ' → logprob: -9.75455093383789
    6. '        ' → logprob: -10.00455093383789
    7. ' #' → logprob: -10.12955093383789
    8. ' ' → logprob: -10.37955093383789
    9. '        
' → logprob: -10.37955093383789
    10. ',' → logprob: -10.37955093383789

Token 482: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.762491762638092
    2. '#' → logprob: -1.0124917030334473
    3. '       ' → logprob: -2.0124917030334473
    4. ' mage' → logprob: -3.6374917030334473
    5. ' #' → logprob: -5.387491703033447
    6. 'cler' → logprob: -6.637491703033447
    7. '   ' → logprob: -7.137491703033447
    8. 'mages' → logprob: -7.137491703033447
    9. 'for' → logprob: -7.762491703033447
    10. 'war' → logprob: -7.887491703033447

Token 483: ' k' (ID: 372)
  Prédit: '_cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.038582317531108856
    2. '_' → logprob: -3.5385823249816895
    3. ' _' → logprob: -5.9135823249816895
    4. ' j' → logprob: -6.4135823249816895
    5. '_j' → logprob: -6.5385823249816895
    6. '_m' → logprob: -6.6635823249816895
    7. ' i' → logprob: -7.7885823249816895
    8. '   ' → logprob: -8.288581848144531
    9. '_w' → logprob: -8.663581848144531
    10. ' ' → logprob: -9.038581848144531

Token 484: ' gets' (ID: 8625)
  Prédit: ' gets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gets' → logprob: -0.4768204689025879
    2. 'gets' → logprob: -0.9768204689025879
    3. ' in' → logprob: -6.351820468902588
    4. '       ' → logprob: -8.47681999206543
    5. ' has' → logprob: -8.85181999206543
    6. '   ' → logprob: -9.10181999206543
    7. 'in' → logprob: -9.10181999206543
    8. ' ' → logprob: -9.35181999206543
    9. '_get' → logprob: -9.35181999206543
    10. 's' → logprob: -10.10181999206543

Token 485: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.11648599058389664
    2. ' along' → logprob: -2.491486072540283
    3. 'aligned' → logprob: -5.116486072540283
    4. '_al' → logprob: -5.366486072540283
    5. 'with' → logprob: -5.366486072540283
    6. 'in' → logprob: -5.741486072540283
    7. 'cler' → logprob: -6.491486072540283
    8. ' in' → logprob: -6.866486072540283
    9. '_cl' → logprob: -6.991486072540283
    10. ' with' → logprob: -7.241486072540283

Token 486: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.38820865750312805
    2. ' with' → logprob: -1.1382086277008057
    3. '_with' → logprob: -6.638208866119385
    4. '	with' → logprob: -10.763208389282227
    5. ' ' → logprob: -12.888208389282227
    6. '_' → logprob: -14.263208389282227
    7. '   ' → logprob: -14.388208389282227
    8. ' ' → logprob: -14.763208389282227
    9. '    ' → logprob: -15.513208389282227
    10. ' =' → logprob: -15.513208389282227

Token 487: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.10024172812700272
    2. ' cler' → logprob: -2.3502416610717773
    3. 'mage' → logprob: -11.225241661071777
    4. 'cl' → logprob: -12.100241661071777
    5. ' ' → logprob: -12.350241661071777
    6. '   ' → logprob: -12.600241661071777
    7. ' mage' → logprob: -13.350241661071777
    8. '  ' → logprob: -13.850241661071777
    9. ' clerk' → logprob: -13.975241661071777
    10. 'k' → logprob: -14.225241661071777

Token 488: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.2246291337069124e-05
    2. 'ics' → logprob: -11.500021934509277
    3. 'i' → logprob: -12.000021934509277
    4. '_w' → logprob: -12.375021934509277
    5. 'c' → logprob: -15.000021934509277
    6. 'ict' → logprob: -15.250021934509277
    7. 'er' → logprob: -15.875021934509277
    8. '   ' → logprob: -16.125022888183594
    9. 'tic' → logprob: -16.250022888183594
    10. 'ical' → logprob: -16.375022888183594

Token 489: ' j' (ID: 441)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.790129555156454e-05
    2. ' [' → logprob: -10.500067710876465
    3. '[' → logprob: -11.500067710876465
    4. '[j' → logprob: -11.625067710876465
    5. 'k' → logprob: -12.000067710876465
    6. '           ' → logprob: -12.625067710876465
    7. '{k' → logprob: -12.750067710876465
    8. '       ' → logprob: -13.375067710876465
    9. '```' → logprob: -13.375067710876465
    10. '[i' → logprob: -13.500067710876465

Token 490: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6741922497749329
    2. 'if' → logprob: -0.7991922497749329
    3. '[k' → logprob: -3.299192190170288
    4. '       ' → logprob: -6.174192428588867
    5. '[' → logprob: -7.299192428588867
    6. '           ' → logprob: -7.549192428588867
    7. '#' → logprob: -9.424192428588867
    8. '=' → logprob: -9.674192428588867
    9. '[j' → logprob: -9.674192428588867
    10. 'k' → logprob: -9.674192428588867

Token 491: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2520357370376587
    2. 'j' → logprob: -1.5020357370376587
    3. ' k' → logprob: -10.502036094665527
    4. 'k' → logprob: -10.752036094665527
    5. '   ' → logprob: -10.877036094665527
    6. 'cler' → logprob: -11.127036094665527
    7. ' ' → logprob: -11.752036094665527
    8. '    ' → logprob: -12.252036094665527
    9. '	j' → logprob: -12.627036094665527
    10. ' cler' → logprob: -12.627036094665527

Token 492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012523430399596691
    2. 'in' → logprob: -4.387523651123047
    3. ' ' → logprob: -12.262523651123047
    4. '[' → logprob: -13.262523651123047
    5. '_in' → logprob: -13.512523651123047
    6. ' ' → logprob: -13.637523651123047
    7. '	in' → logprob: -14.262523651123047
    8. 'In' → logprob: -14.512523651123047
    9. 'k' → logprob: -14.512523651123047
    10. '   ' → logprob: -14.762523651123047

Token 493: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.49239087104797363
    2. 'cler' → logprob: -1.3673908710479736
    3. ' mage' → logprob: -2.4923908710479736
    4. ' cler' → logprob: -2.9923908710479736
    5. 'cl' → logprob: -7.1173906326293945
    6. ' ' → logprob: -8.867390632629395
    7. '   ' → logprob: -9.242390632629395
    8. 'm' → logprob: -10.992390632629395
    9. '  ' → logprob: -11.367390632629395
    10. ' clerk' → logprob: -11.492390632629395

Token 494: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -3.128163257315464e-07
    2. 'cler' → logprob: -15.125
    3. '_m' → logprob: -18.0
    4. '_' → logprob: -18.875
    5. '\' → logprob: -19.125
    6. '_c' → logprob: -19.25
    7. '   ' → logprob: -19.75
    8. '_cli' → logprob: -20.125
    9. '_w' → logprob: -20.375
    10. '_cre' → logprob: -20.375

Token 495: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0001363168703392148
    2. 'ic' → logprob: -9.625136375427246
    3. 'erc' → logprob: -10.875136375427246
    4. 'e' → logprob: -11.000136375427246
    5. '_' → logprob: -11.500136375427246
    6. 'ric' → logprob: -12.625136375427246
    7. 'eri' → logprob: -13.500136375427246
    8. '   ' → logprob: -13.500136375427246
    9. '_er' → logprob: -13.500136375427246
    10. 'ery' → logprob: -13.625136375427246

Token 496: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.292907877039397e-06
    2. 'ics' → logprob: -14.37500286102295
    3. 'i' → logprob: -14.50000286102295
    4. 'c' → logprob: -14.62500286102295
    5. '   ' → logprob: -15.12500286102295
    6. 'ict' → logprob: -15.12500286102295
    7. '  ' → logprob: -16.125003814697266
    8. 'ical' → logprob: -16.375003814697266
    9. '#' → logprob: -16.375003814697266
    10. '       ' → logprob: -16.500003814697266

Token 497: '[k' (ID: 14298)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.572016179561615
    2. ']' → logprob: -2.1970162391662598
    3. '[k' → logprob: -2.3220162391662598
    4. '       ' → logprob: -2.6970162391662598
    5. ']:' → logprob: -2.8220162391662598
    6. '[' → logprob: -3.4470162391662598
    7. '):' → logprob: -3.8220162391662598
    8. ':
' → logprob: -4.94701623916626
    9. '   ' → logprob: -5.07201623916626
    10. '.' → logprob: -5.07201623916626

Token 498: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014976482838392258
    2. ']:' → logprob: -4.264976501464844
    3. '])' → logprob: -8.514976501464844
    4. ')' → logprob: -8.764976501464844
    5. ')]' → logprob: -9.514976501464844
    6. '):' → logprob: -9.889976501464844
    7. ']):' → logprob: -10.014976501464844
    8. ' ]' → logprob: -10.139976501464844
    9. '       ' → logprob: -10.264976501464844
    10. ':' → logprob: -10.639976501464844

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01564224436879158
    2. '<|end|>' → logprob: -4.765642166137695
    3. '        
' → logprob: -5.640642166137695
    4. '
' → logprob: -6.765642166137695
    5. '```' → logprob: -7.015642166137695
    6. '#' → logprob: -7.390642166137695
    7. '   ' → logprob: -8.890642166137695
    8. '\' → logprob: -9.390642166137695
    9. '    
' → logprob: -9.390642166137695
    10. '<|end|>' → logprob: -9.640642166137695

Token 500: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038554170168936253
    2. '
' → logprob: -6.628855228424072
    3. '        
' → logprob: -6.753855228424072
    4. '#' (adapté à ' #') → logprob: -7.003855228424072
    5. 'war' → logprob: -8.12885570526123
    6. '   ' → logprob: -10.00385570526123
    7. 'possible' → logprob: -10.75385570526123
    8. 'from' → logprob: -10.87885570526123
    9. '    
' → logprob: -11.12885570526123
    10. 'import' → logprob: -11.12885570526123

Token 501: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5853557586669922
    2. 'from' → logprob: -1.9603557586669922
    3. 'war' → logprob: -2.085355758666992
    4. '       ' → logprob: -2.085355758666992
    5. 'possible' → logprob: -4.085355758666992
    6. 'for' → logprob: -4.835355758666992
    7. 'import' → logprob: -4.835355758666992
    8. 'part' → logprob: -5.085355758666992
    9. 'heroes' → logprob: -5.710355758666992
    10. 'hero' → logprob: -5.835355758666992

Token 502: ' create' (ID: 2501)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2313098907470703
    2. ' continue' → logprob: -1.9813098907470703
    3. 'continue' → logprob: -1.9813098907470703
    4. 'from' → logprob: -2.2313098907470703
    5. '       ' → logprob: -3.2313098907470703
    6. ' create' → logprob: -3.2313098907470703
    7. '#' → logprob: -3.2313098907470703
    8. ' import' → logprob: -3.4813098907470703
    9. 'generate' → logprob: -3.7313098907470703
    10. ' #' → logprob: -3.8563098907470703

Token 503: ' lists' (ID: 19471)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -1.1012792587280273
    2. 'a' → logprob: -1.4762792587280273
    3. 'adj' → logprob: -2.8512792587280273
    4. ' a' → logprob: -3.2262792587280273
    5. 'part' → logprob: -3.6012792587280273
    6. ' lists' → logprob: -3.6012792587280273
    7. 'possible' → logprob: -3.6012792587280273
    8. '#' → logprob: -3.6012792587280273
    9. 'friendly' → logprob: -3.7262792587280273
    10. 'hero' → logprob: -3.8512792587280273

Token 504: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.22240696847438812
    2. ' of' → logprob: -1.8474069833755493
    3. 'war' → logprob: -3.8474068641662598
    4. '       ' → logprob: -5.22240686416626
    5. 'w' → logprob: -5.59740686416626
    6. '_of' → logprob: -5.84740686416626
    7. '_w' → logprob: -6.09740686416626
    8. 'for' → logprob: -6.34740686416626
    9. '[]' → logprob: -6.97240686416626
    10. '   ' → logprob: -6.97240686416626

Token 505: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.905007541179657
    2. 'war' → logprob: -1.7800076007843018
    3. 'part' → logprob: -1.9050076007843018
    4. 'friendly' → logprob: -2.4050076007843018
    5. 'heroes' → logprob: -2.6550076007843018
    6. 'compatible' → logprob: -3.6550076007843018
    7. 'friends' → logprob: -4.030007362365723
    8. 'pairs' → logprob: -4.155007362365723
    9. 'all' → logprob: -4.405007362365723
    10. 'friend' → logprob: -4.405007362365723

Token 506: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.08971904963254929
    2. 'war' → logprob: -3.46471905708313
    3. ' parties' → logprob: -3.96471905708313
    4. 'pairs' → logprob: -4.839718818664551
    5. 'party' → logprob: -5.589718818664551
    6. 'heroes' → logprob: -5.589718818664551
    7. ' pairs' → logprob: -5.964718818664551
    8. 'connections' → logprob: -6.339718818664551
    9. 'trip' → logprob: -6.464718818664551
    10. ' warriors' → logprob: -6.464718818664551

Token 507: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5859766006469727
    2. '
' → logprob: -1.5859766006469727
    3. 'possible' → logprob: -2.5859766006469727
    4. 'part' → logprob: -2.9609766006469727
    5. '        
' → logprob: -3.5859766006469727
    6. '#' → logprob: -3.9609766006469727
    7. '_part' → logprob: -4.460976600646973
    8. '   ' → logprob: -4.710976600646973
    9. ' possible' → logprob: -5.085976600646973
    10. ' parties' → logprob: -5.460976600646973

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047634415328502655
    2. '
' → logprob: -3.9226343631744385
    3. '        
' → logprob: -4.922634601593018
    4. ' parties' → logprob: -5.172634601593018
    5. 'part' → logprob: -5.297634601593018
    6. 'possible' → logprob: -5.672634601593018
    7. ' possible' → logprob: -6.297634601593018
    8. '#' → logprob: -7.422634601593018
    9. '```' → logprob: -7.422634601593018
    10. '   ' → logprob: -7.672634601593018

Token 509: ' #' (ID: 1069)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.29108726978302
    2. ' parties' → logprob: -1.29108726978302
    3. '       ' → logprob: -1.41608726978302
    4. ' possible' → logprob: -2.2910871505737305
    5. 'possible' → logprob: -2.4160871505737305
    6. ' part' → logprob: -5.1660871505737305
    7. '   ' → logprob: -6.0410871505737305
    8. 'all' → logprob: -6.6660871505737305
    9. ' all' → logprob: -6.6660871505737305
    10. '
' → logprob: -6.9160871505737305

Token 510: ' Each' (ID: 11555)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.11509819328784943
    2. 'possible' → logprob: -2.365098237991333
    3. ' parties' → logprob: -4.490097999572754
    4. ' possible' → logprob: -6.240097999572754
    5. 'for' → logprob: -7.865097999572754
    6. 'party' → logprob: -7.865097999572754
    7. '#' → logprob: -7.990097999572754
    8. ' part' → logprob: -8.865097999572754
    9. '   ' → logprob: -8.990097999572754
    10. 'all' → logprob: -10.365097999572754

Token 511: ' party' (ID: 7362)
  Prédit: '_party'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_party' → logprob: -0.17786693572998047
    2. '_' → logprob: -2.5528669357299805
    3. ' party' → logprob: -2.6778669357299805
    4. 'party' → logprob: -5.1778669357299805
    5. '_part' → logprob: -5.4278669357299805
    6. ' _' → logprob: -6.1778669357299805
    7. ' possible' → logprob: -6.8028669357299805
    8. ' =' → logprob: -6.9278669357299805
    9. '_possible' → logprob: -7.5528669357299805
    10. ' (' → logprob: -7.8028669357299805

Token 512: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05775969475507736
    2. '=' → logprob: -3.3077597618103027
    3. ' is' → logprob: -4.807759761810303
    4. ' consists' → logprob: -4.807759761810303
    5. ' can' → logprob: -7.057759761810303
    6. '_' → logprob: -7.307759761810303
    7. ':' → logprob: -8.307759284973145
    8. 'is' → logprob: -8.557759284973145
    9. '=[]' → logprob: -8.682759284973145
    10. '_party' → logprob: -8.807759284973145

Token 513: ' hero' (ID: 20917)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14359812438488007
    2. '(h' → logprob: -3.0185980796813965
    3. ' []' → logprob: -3.1435980796813965
    4. '[]' → logprob: -4.1435980796813965
    5. '(' → logprob: -4.7685980796813965
    6. '(H' → logprob: -5.1435980796813965
    7. ' ()' → logprob: -5.7685980796813965
    8. '(hero' → logprob: -5.8935980796813965
    9. '       ' → logprob: -6.5185980796813965
    10. ' [' → logprob: -7.0185980796813965

Token 514: ' h' (ID: 312)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6166126132011414
    2. ',' → logprob: -1.3666126728057861
    3. '_' → logprob: -2.366612672805786
    4. '_ids' → logprob: -3.491612672805786
    5. '_id' → logprob: -3.991612672805786
    6. '_indices' → logprob: -4.491612434387207
    7. ' _' → logprob: -4.616612434387207
    8. ' ,' → logprob: -5.241612434387207
    9. '_idx' → logprob: -5.241612434387207
    10. ' =' → logprob: -5.366612434387207

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25231772661209106
    2. 's' → logprob: -1.8773176670074463
    3. ')' → logprob: -3.3773176670074463
    4. ' ,' → logprob: -4.502317905426025
    5. '_' → logprob: -5.002317905426025
    6. ',
' → logprob: -5.127317905426025
    7. '<|end|>' → logprob: -5.127317905426025
    8. ' s' → logprob: -6.627317905426025
    9. ' =' → logprob: -7.127317905426025
    10. '),' → logprob: -7.627317905426025

Token 516: ' optional' (ID: 18297)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.1657257378101349
    2. 'war' → logprob: -1.9157257080078125
    3. ''' → logprob: -5.7907257080078125
    4. ' war' → logprob: -7.1657257080078125
    5. ' '' → logprob: -8.040725708007812
    6. '"' → logprob: -8.290725708007812
    7. 'w' → logprob: -8.415725708007812
    8. ' w' → logprob: -8.665725708007812
    9. ''w' → logprob: -8.665725708007812
    10. ' ' → logprob: -9.665725708007812

Token 517: ' warrior' (ID: 76541)
  Prédit: ' warrior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.04041764885187149
    2. 'war' → logprob: -3.2904176712036133
    3. ' ' → logprob: -7.540417671203613
    4. ' ,' → logprob: -7.790417671203613
    5. ',' → logprob: -7.915417671203613
    6. ' hero' → logprob: -8.040417671203613
    7. ' war' → logprob: -8.165417671203613
    8. ' ' → logprob: -9.290417671203613
    9. '_w' → logprob: -9.540417671203613
    10. ' w' → logprob: -10.165417671203613

Token 518: ' w' (ID: 286)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18638361990451813
    2. ' ,' → logprob: -1.811383605003357
    3. '_,' → logprob: -5.5613837242126465
    4. '<|end|>' → logprob: -7.1863837242126465
    5. '_' → logprob: -7.6863837242126465
    6. ')' → logprob: -8.061383247375488
    7. ',
' → logprob: -8.311383247375488
    8. 's' → logprob: -8.561383247375488
    9. ' ' → logprob: -8.686383247375488
    10. '),' → logprob: -9.436383247375488

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01045991014689207
    2. ' ,' → logprob: -4.885459899902344
    3. 's' → logprob: -7.135459899902344
    4. '<|end|>' → logprob: -7.260459899902344
    5. ',
' → logprob: -7.635459899902344
    6. ')' → logprob: -8.260459899902344
    7. ' (' → logprob: -8.635459899902344
    8. '_,' → logprob: -8.760459899902344
    9. '),' → logprob: -9.885459899902344
    10. '(s' → logprob: -10.135459899902344

Token 520: ' optional' (ID: 18297)
  Prédit: ' optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.3655488193035126
    2. 'optional' → logprob: -1.240548849105835
    3. ' cler' → logprob: -4.615548610687256
    4. 'cler' → logprob: -4.990548610687256
    5. '(optional' → logprob: -9.365549087524414
    6. 'cl' → logprob: -9.740549087524414
    7. '_optional' → logprob: -10.615549087524414
    8. ',' → logprob: -10.615549087524414
    9. 'Optional' → logprob: -11.615549087524414
    10. ' cl' → logprob: -11.865549087524414

Token 521: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.2865050733089447
    2. ' cler' → logprob: -1.411505103111267
    3. 'cl' → logprob: -5.661505222320557
    4. 'hero' → logprob: -7.661505222320557
    5. ' hero' → logprob: -8.161504745483398
    6. 'mage' → logprob: -8.286504745483398
    7. ' clerk' → logprob: -8.786504745483398
    8. ' ' → logprob: -8.786504745483398
    9. '```' → logprob: -9.411504745483398
    10. '#' → logprob: -10.036504745483398

Token 522: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -4.008129963040119e-06
    2. 'ics' → logprob: -12.500003814697266
    3. 'i' → logprob: -16.000003814697266
    4. '#' → logprob: -17.125003814697266
    5. 'ical' → logprob: -17.375003814697266
    6. 'c' → logprob: -18.000003814697266
    7. '

' → logprob: -18.500003814697266
    8. 'er' → logprob: -19.000003814697266
    9. 'ict' → logprob: -19.375003814697266
    10. 'ric' → logprob: -19.500003814697266

Token 523: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5635932683944702
    2. ' ,' → logprob: -0.9385932683944702
    3. 's' → logprob: -4.31359338760376
    4. '<|end|>' → logprob: -4.68859338760376
    5. ' k' → logprob: -4.93859338760376
    6. ' s' → logprob: -5.43859338760376
    7. '_,' → logprob: -6.18859338760376
    8. ' ' → logprob: -7.18859338760376
    9. ' w' → logprob: -7.68859338760376
    10. ' _,' → logprob: -8.063592910766602

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00904988031834364
    2. ' ,' → logprob: -5.009049892425537
    3. ',
' → logprob: -6.509049892425537
    4. '       ' → logprob: -7.884049892425537
    5. '#' → logprob: -9.259049415588379
    6. '`,' → logprob: -9.259049415588379
    7. '```' → logprob: -9.384049415588379
    8. '   ' → logprob: -10.384049415588379
    9. ',m' → logprob: -11.009049415588379
    10. ')' → logprob: -11.009049415588379

Token 525: ' optional' (ID: 18297)
  Prédit: ' optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optional' → logprob: -0.2019105702638626
    2. 'optional' → logprob: -1.7019106149673462
    3. '#' → logprob: -8.451910972595215
    4. ' #' → logprob: -8.576910972595215
    5. '_optional' → logprob: -10.701910972595215
    6. ' mage' → logprob: -11.576910972595215
    7. '(optional' → logprob: -11.576910972595215
    8. ' and' → logprob: -11.826910972595215
    9. ' ' → logprob: -11.951910972595215
    10. '```' → logprob: -11.951910972595215

Token 526: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.07891842722892761
    2. ' mage' → logprob: -2.57891845703125
    3. ' ' → logprob: -11.57891845703125
    4. 'm' → logprob: -12.07891845703125
    5. 'mages' → logprob: -12.07891845703125
    6. 'Mage' → logprob: -13.32891845703125
    7. '   ' → logprob: -13.82891845703125
    8. '#' → logprob: -14.07891845703125
    9. '`' → logprob: -14.07891845703125
    10. '
' → logprob: -14.57891845703125

Token 527: ' m' (ID: 284)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1083711385726929
    2. '_part' → logprob: -1.3583711385726929
    3. '_' → logprob: -1.8583711385726929
    4. '_possible' → logprob: -2.1083712577819824
    5. '       ' → logprob: -3.3583712577819824
    6. '
' → logprob: -3.7333712577819824
    7. '   ' → logprob: -4.483371257781982
    8. '_s' → logprob: -4.733371257781982
    9. '_h' → logprob: -4.733371257781982
    10. ' =' → logprob: -5.108371257781982

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6894246339797974
    2. '
' → logprob: -1.0644246339797974
    3. '<|end|>' → logprob: -2.314424514770508
    4. '        
' → logprob: -3.564424514770508
    5. ',' → logprob: -5.189424514770508
    6. ':' → logprob: -5.814424514770508
    7. '<|end|>' → logprob: -6.314424514770508
    8. '   ' → logprob: -6.564424514770508
    9. '        ' → logprob: -6.689424514770508
    10. '#' → logprob: -6.689424514770508

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023638499900698662
    2. '
' → logprob: -4.148638725280762
    3. '        
' → logprob: -5.398638725280762
    4. '<|end|>' → logprob: -7.273638725280762
    5. '   ' → logprob: -7.648638725280762
    6. ',' → logprob: -8.023638725280762
    7. 'possible' → logprob: -8.148638725280762
    8. '#' → logprob: -8.523638725280762
    9. 'import' → logprob: -9.148638725280762
    10. ')' → logprob: -9.273638725280762

Token 530: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056062374264001846
    2. '
' → logprob: -3.0560624599456787
    3. '        
' → logprob: -5.4310622215271
    4. '<|end|>' → logprob: -6.4310622215271
    5. 'possible' → logprob: -7.9310622215271
    6. '#' (adapté à ' #') → logprob: -8.556062698364258
    7. '   ' → logprob: -9.181062698364258
    8. ',' → logprob: -9.306062698364258
    9. 'from' → logprob: -9.431062698364258
    10. 'import' → logprob: -9.556062698364258

Token 531: ' Ensure' (ID: 43810)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12179791927337646
    2. 'possible' → logprob: -2.621798038482666
    3. '   ' → logprob: -4.121798038482666
    4. 'part' → logprob: -4.621798038482666
    5. ' possible' → logprob: -5.246798038482666
    6. '
' → logprob: -5.371798038482666
    7. '        
' → logprob: -6.246798038482666
    8. '#' → logprob: -6.996798038482666
    9. ' parties' → logprob: -7.246798038482666
    10. 'heroes' → logprob: -7.496798038482666

Token 532: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2677253782749176
    2. ' that' → logprob: -2.1427254676818848
    3. ' w' → logprob: -2.5177254676818848
    4. ' h' → logprob: -4.267725467681885
    5. 'all' → logprob: -5.392725467681885
    6. 'that' → logprob: -5.392725467681885
    7. ' the' → logprob: -6.142725467681885
    8. 'w' → logprob: -6.267725467681885
    9. ' each' → logprob: -6.517725467681885
    10. '   ' → logprob: -6.517725467681885

Token 533: ' get' (ID: 717)
  Prédit: ' hero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hero' → logprob: -1.56147301197052
    2. ' parties' → logprob: -2.1864728927612305
    3. ' party' → logprob: -2.3114728927612305
    4. ' get' → logprob: -2.6864728927612305
    5. 'hero' → logprob: -3.0614728927612305
    6. ' warrior' → logprob: -3.3114728927612305
    7. ' friendly' → logprob: -3.4364728927612305
    8. ' compatibility' → logprob: -3.5614728927612305
    9. ' pairs' → logprob: -3.8114728927612305
    10. ' code' → logprob: -3.8114728927612305

Token 534: '-al' (ID: 13254)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.28642353415489197
    2. '_' → logprob: -1.6614235639572144
    3. ' along' → logprob: -3.161423444747925
    4. ' _' → logprob: -4.786423683166504
    5. 'along' → logprob: -6.286423683166504
    6. '_all' → logprob: -6.536423683166504
    7. '_ac' → logprob: -6.911423683166504
    8. ' ' → logprob: -7.161423683166504
    9. '```' → logprob: -8.036423683166504
    10. '   ' → logprob: -8.161423683166504

Token 535: 'ong' (ID: 705)
  Prédit: 'ong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ong' → logprob: -0.009365138597786427
    2. 'along' → logprob: -5.634365081787109
    3. 'ways' → logprob: -6.759365081787109
    4. 'on' → logprob: -7.259365081787109
    5. '#' → logprob: -7.509365081787109
    6. 'l' → logprob: -7.634365081787109
    7. '```' → logprob: -7.759365081787109
    8. 'right' → logprob: -8.13436508178711
    9. ' along' → logprob: -8.13436508178711
    10. 'ongs' → logprob: -8.38436508178711

Token 536: ' constraints' (ID: 31060)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.285779595375061
    2. ' conditions' → logprob: -1.410779595375061
    3. '_conditions' → logprob: -1.785779595375061
    4. ' condition' → logprob: -2.4107794761657715
    5. 'conditions' → logprob: -2.9107794761657715
    6. '_condition' → logprob: -3.1607794761657715
    7. 'condition' → logprob: -3.6607794761657715
    8. 's' → logprob: -3.6607794761657715
    9. '   ' → logprob: -4.4107794761657715
    10. ' =' → logprob: -4.6607794761657715

Token 537: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025274695828557014
    2. '
' → logprob: -3.9002747535705566
    3. '        
' → logprob: -5.650274753570557
    4. '#' → logprob: -8.525274276733398
    5. 'possible' → logprob: -8.525274276733398
    6. '<|end|>' → logprob: -8.775274276733398
    7. '   ' → logprob: -9.650274276733398
    8. '        

' → logprob: -9.900274276733398
    9. '    
' → logprob: -10.025274276733398
    10. 'import' → logprob: -10.275274276733398

Token 538: ' met' (ID: 1421)
  Prédit: ' met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' met' → logprob: -0.7662466168403625
    2. 'met' → logprob: -1.1412465572357178
    3. 's' → logprob: -1.7662465572357178
    4. ' satisfied' → logprob: -3.5162465572357178
    5. 'True' → logprob: -5.016246795654297
    6. ' True' → logprob: -5.391246795654297
    7. 'fulfilled' → logprob: -6.391246795654297
    8. 'checked' → logprob: -7.266246795654297
    9. ' respected' → logprob: -7.641246795654297
    10. 'true' → logprob: -8.141246795654297

Token 539: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29978781938552856
    2. '
' → logprob: -1.4247877597808838
    3. '        
' → logprob: -4.674787998199463
    4. '#' → logprob: -5.924787998199463
    5. 'possible' → logprob: -5.924787998199463
    6. ',' → logprob: -7.424787998199463
    7. '_possible' → logprob: -7.799787998199463
    8. ' possible' → logprob: -7.924787998199463
    9. '

' → logprob: -8.299787521362305
    10. 'heroes' → logprob: -8.299787521362305

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022619009017944336
    2. 'possible' → logprob: -4.397619247436523
    3. '
' → logprob: -5.897619247436523
    4. 'part' → logprob: -6.022619247436523
    5. '   ' → logprob: -6.272619247436523
    6. '        
' → logprob: -7.272619247436523
    7. '#' → logprob: -7.522619247436523
    8. 'from' → logprob: -7.647619247436523
    9. 'heroes' → logprob: -8.022619247436523
    10. ' possible' → logprob: -8.272619247436523

Token 541: ' parties' (ID: 13531)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14392118155956268
    2. '   ' → logprob: -2.643921136856079
    3. 'possible' → logprob: -3.268921136856079
    4. '
' → logprob: -5.268921375274658
    5. 'from' → logprob: -5.393921375274658
    6. 'part' → logprob: -5.393921375274658
    7. '#' → logprob: -5.518921375274658
    8. '        
' → logprob: -6.518921375274658
    9. 'heroes' → logprob: -6.643921375274658
    10. ' possible' → logprob: -6.643921375274658

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01252119429409504
    2. '=' → logprob: -4.387521266937256
    3. '=[]' → logprob: -11.512520790100098
    4. 's' → logprob: -14.137520790100098
    5. '_' → logprob: -15.137520790100098
    6. '_list' → logprob: -16.512521743774414
    7. '[]' → logprob: -16.637521743774414
    8. ',' → logprob: -16.762521743774414
    9. '=[]
' → logprob: -16.762521743774414
    10. '[' → logprob: -17.137521743774414

Token 543: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.339278580620885e-06
    2. '[]
' → logprob: -13.250001907348633
    3. ' []' → logprob: -15.125001907348633
    4. '[' → logprob: -15.625001907348633
    5. '[]}' → logprob: -16.750001907348633
    6. '[]

' → logprob: -17.750001907348633
    7. 'set' → logprob: -17.875001907348633
    8. '[]"' → logprob: -18.875001907348633
    9. '[]>' → logprob: -19.250001907348633
    10. '[])' → logprob: -19.375001907348633

Token 544: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7759655714035034
    2. ' for' → logprob: -1.1509655714035034
    3. '       ' → logprob: -1.5259655714035034
    4. '        
' → logprob: -5.525965690612793
    5. '
' → logprob: -7.900965690612793
    6. '   ' → logprob: -7.900965690612793
    7. '<|end|>' → logprob: -8.275965690612793
    8. ',' → logprob: -8.775965690612793
    9. ' 
' → logprob: -9.025965690612793
    10. '        ' → logprob: -9.025965690612793

Token 545: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030463019385933876
    2. ' for' → logprob: -4.030463218688965
    3. '       ' → logprob: -4.405463218688965
    4. '   ' → logprob: -11.905463218688965
    5. 'from' → logprob: -12.155463218688965
    6. '#' (adapté à ' #') → logprob: -12.280463218688965
    7. 'hero' → logprob: -12.405463218688965
    8. '```' → logprob: -13.155463218688965
    9. '        
' → logprob: -14.405463218688965
    10. '	for' → logprob: -14.530463218688965

Token 546: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011533168144524097
    2. ' for' → logprob: -7.501153469085693
    3. '       ' → logprob: -7.626153469085693
    4. 'from' → logprob: -9.626152992248535
    5. 'hero' → logprob: -10.626152992248535
    6. '   ' → logprob: -11.751152992248535
    7. '#' → logprob: -11.876152992248535
    8. 'heroes' → logprob: -12.751152992248535
    9. '```' → logprob: -13.376152992248535
    10. '
' → logprob: -14.251152992248535

Token 547: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4460447430610657
    2. ' for' → logprob: -1.446044683456421
    3. ' =' → logprob: -2.446044683456421
    4. '=' → logprob: -4.446044921875
    5. '       ' → logprob: -4.446044921875
    6. ' ' → logprob: -4.821044921875
    7. '   ' → logprob: -6.196044921875
    8. '        ' → logprob: -6.321044921875
    9. '    ' → logprob: -6.946044921875
    10. '  ' → logprob: -8.571044921875

Token 548: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0983153581619263
    2. ' all' → logprob: -1.2233153581619263
    3. ' for' → logprob: -1.7233153581619263
    4. ' to' → logprob: -2.2233152389526367
    5. ':' → logprob: -3.2233152389526367
    6. '       ' → logprob: -4.473315238952637
    7. ' ' → logprob: -4.848315238952637
    8. '    ' → logprob: -5.098315238952637
    9. 'for' → logprob: -5.348315238952637
    10. 'all' → logprob: -5.598315238952637

Token 549: ' possible' (ID: 4149)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.28947991132736206
    2. ' heroes' → logprob: -2.789479970932007
    3. 'h' → logprob: -2.914479970932007
    4. ' hero' → logprob: -3.414479970932007
    5. '   ' → logprob: -3.914479970932007
    6. ' H' → logprob: -4.039479732513428
    7. 'heroes' → logprob: -4.039479732513428
    8. ' for' → logprob: -4.414479732513428
    9. 'for' → logprob: -4.664479732513428
    10. 'hero' → logprob: -5.164479732513428

Token 550: ' hero' (ID: 20917)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4413118064403534
    2. 'h' → logprob: -1.4413118362426758
    3. ' hero' → logprob: -3.316311836242676
    4. 'hero' → logprob: -3.941311836242676
    5. ' heroes' → logprob: -4.191311836242676
    6. 'heroes' → logprob: -4.316311836242676
    7. 'H' → logprob: -4.816311836242676
    8. ' H' → logprob: -4.941311836242676
    9. ' for' → logprob: -5.066311836242676
    10. 'for' → logprob: -5.066311836242676

Token 551: ' assignments' (ID: 41477)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28545570373535156
    2. ' s' → logprob: -1.4104557037353516
    3. '_s' → logprob: -5.910455703735352
    4. 'es' → logprob: -6.910455703735352
    5. '_' → logprob: -8.160455703735352
    6. ' _' → logprob: -9.785455703735352
    7. ' =' → logprob: -9.910455703735352
    8. '   ' → logprob: -10.285455703735352
    9. ' for' → logprob: -10.410455703735352
    10. ' ' → logprob: -10.660455703735352

Token 552: ' since' (ID: 3630)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10268682986497879
    2. 'for' → logprob: -2.727686882019043
    3. '       ' → logprob: -3.602686882019043
    4. '   ' → logprob: -5.727686882019043
    5. ' h' → logprob: -7.477686882019043
    6. '
' → logprob: -7.602686882019043
    7. ',' → logprob: -8.602686882019043
    8. ':' → logprob: -9.727686882019043
    9. ' to' → logprob: -9.852686882019043
    10. ' =' → logprob: -10.102686882019043

Token 553: ' hero' (ID: 20917)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4142010807991028
    2. ' h' → logprob: -2.664201021194458
    3. ' range' → logprob: -2.789201021194458
    4. 'range' → logprob: -2.789201021194458
    5. 'True' → logprob: -3.039201021194458
    6. 'h' → logprob: -3.289201021194458
    7. ' H' → logprob: -3.539201021194458
    8. 'H' → logprob: -3.914201021194458
    9. ' for' → logprob: -5.414201259613037
    10. '   ' → logprob: -5.664201259613037

Token 554: ' mandatory' (ID: 40021)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6947135329246521
    2. 's' → logprob: -0.8197135329246521
    3. ' in' → logprob: -2.944713592529297
    4. ' ' → logprob: -6.444713592529297
    5. '_s' → logprob: -6.444713592529297
    6. ' for' → logprob: -6.694713592529297
    7. '_' → logprob: -7.194713592529297
    8. ' is' → logprob: -7.444713592529297
    9. ' _' → logprob: -7.569713592529297
    10. ' =' → logprob: -7.694713592529297

Token 555: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6041102409362793
    2. ':' → logprob: -1.8541102409362793
    3. ' for' → logprob: -2.2291102409362793
    4. 'for' → logprob: -2.6041102409362793
    5. '   ' → logprob: -3.1041102409362793
    6. ',' → logprob: -4.104110240936279
    7. '        
' → logprob: -4.604110240936279
    8. ' ' → logprob: -4.979110240936279
    9. ' 
' → logprob: -5.104110240936279
    10. '    ' → logprob: -5.729110240936279

Token 556: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31905221939086914
    2. '       ' → logprob: -1.4440522193908691
    3. 'for' → logprob: -3.319052219390869
    4. '   ' → logprob: -6.944052219390869
    5. ',' → logprob: -11.444051742553711
    6. ' ' → logprob: -11.944051742553711
    7. '        
' → logprob: -12.694051742553711
    8. '	for' → logprob: -13.069051742553711
    9. '           ' → logprob: -13.069051742553711
    10. ' in' → logprob: -13.319051742553711

Token 557: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5524836182594299
    2. ' for' → logprob: -0.9274836182594299
    3. 'for' → logprob: -3.552483558654785
    4. '   ' → logprob: -8.302483558654785
    5. ' ' → logprob: -11.802483558654785
    6. '        
' → logprob: -12.052483558654785
    7. '    ' → logprob: -12.677483558654785
    8. ',' → logprob: -12.677483558654785
    9. '           ' → logprob: -13.302483558654785
    10. '      ' → logprob: -13.552483558654785

Token 558: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03213679417967796
    2. 'for' → logprob: -3.6571366786956787
    3. '       ' → logprob: -5.157136917114258
    4. '   ' → logprob: -9.782136917114258
    5. '```' → logprob: -12.907136917114258
    6. '
' → logprob: -14.782136917114258
    7. ' h' → logprob: -15.032136917114258
    8. '        
' → logprob: -15.157136917114258
    9. ' ' → logprob: -15.157136917114258
    10. ' range' → logprob: -15.157136917114258

Token 559: ' warrior' (ID: 76541)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.31442761421203613
    2. ' h' → logprob: -1.3144276142120361
    3. 'hero' → logprob: -7.439427375793457
    4. ' hero' → logprob: -7.814427375793457
    5. '_h' → logprob: -10.689427375793457
    6. ' i' → logprob: -10.689427375793457
    7. ' ' → logprob: -10.814427375793457
    8. 'w' → logprob: -11.189427375793457
    9. '```' → logprob: -11.189427375793457
    10. 'i' → logprob: -11.189427375793457

Token 560: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01884167455136776
    2. ' ' → logprob: -5.143841743469238
    3. ' i' → logprob: -5.518841743469238
    4. '_' → logprob: -5.768841743469238
    5. 'in' → logprob: -6.393841743469238
    6. '_idx' → logprob: -6.893841743469238
    7. '_i' → logprob: -7.143841743469238
    8. ' _' → logprob: -7.643841743469238
    9. 's' → logprob: -7.893841743469238
    10. 'i' → logprob: -8.018841743469238

Token 561: ' can' (ID: 665)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14611640572547913
    2. 'for' → logprob: -2.3961164951324463
    3. ' w' → logprob: -3.2711164951324463
    4. 'w' → logprob: -5.771116256713867
    5. ' range' → logprob: -6.021116256713867
    6. ' warrior' → logprob: -7.771116256713867
    7. 'range' → logprob: -8.521116256713867
    8. ' in' → logprob: -8.771116256713867
    9. ' None' → logprob: -9.396116256713867
    10. ' ' → logprob: -9.396116256713867

Token 562: ' be' (ID: 413)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7024797797203064
    2. ' ' → logprob: -2.202479839324951
    3. ' None' → logprob: -2.202479839324951
    4. ' be' → logprob: -2.452479839324951
    5. 'range' → logprob: -2.827479839324951
    6. ' in' → logprob: -3.077479839324951
    7. '   ' → logprob: -3.702479839324951
    8. '=None' → logprob: -4.452479839324951
    9. 'None' → logprob: -4.952479839324951
    10. '  ' → logprob: -5.202479839324951

Token 563: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.24788740277290344
    2. 'range' → logprob: -1.622887372970581
    3. '-' → logprob: -4.12288761138916
    4. ' None' → logprob: -5.37288761138916
    5. 'none' → logprob: -7.62288761138916
    6. '   ' → logprob: -7.74788761138916
    7. ' range' → logprob: -8.24788761138916
    8. '[' → logprob: -10.24788761138916
    9. 'list' → logprob: -10.37288761138916
    10. '[-' → logprob: -10.99788761138916

Token 564: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03373560309410095
    2. ' ,' → logprob: -3.533735513687134
    3. ' or' → logprob: -6.158735752105713
    4. ' ' → logprob: -7.783735752105713
    5. '<|end|>' → logprob: -8.158735275268555
    6. ',None' → logprob: -8.283735275268555
    7. ',
' → logprob: -8.533735275268555
    8. 'or' → logprob: -9.033735275268555
    9. '_' → logprob: -9.158735275268555
    10. '
' → logprob: -9.533735275268555

Token 565: ' an' (ID: 448)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3829447329044342
    2. ' range' → logprob: -1.2579447031021118
    3. 'w' → logprob: -4.257944583892822
    4. ' w' → logprob: -4.507944583892822
    5. ' ' → logprob: -6.132944583892822
    6. '   ' → logprob: -6.257944583892822
    7. ' None' → logprob: -6.507944583892822
    8. '0' → logprob: -6.632944583892822
    9. 'None' → logprob: -7.507944583892822
    10. 'i' → logprob: -8.50794506072998

Token 566: ' index' (ID: 3472)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.37621042132377625
    2. ' int' → logprob: -2.1262104511260986
    3. 'int' → logprob: -2.5012104511260986
    4. ' y' → logprob: -2.8762104511260986
    5. ' range' → logprob: -3.2512104511260986
    6. 'range' → logprob: -4.6262102127075195
    7. ' ' → logprob: -6.3762102127075195
    8. 'i' → logprob: -6.6262102127075195
    9. ' integer' → logprob: -7.3762102127075195
    10. '   ' → logprob: -7.5012102127075195

Token 567: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6537877917289734
    2. '_' → logprob: -1.2787878513336182
    3. '_w' → logprob: -2.153787851333618
    4. ',' → logprob: -3.278787851333618
    5. '=' → logprob: -4.403787612915039
    6. ' ' → logprob: -4.778787612915039
    7. ' _' → logprob: -5.028787612915039
    8. 'w' → logprob: -6.028787612915039
    9. 'for' → logprob: -6.278787612915039
    10. '       ' → logprob: -6.278787612915039

Token 568: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7285472750663757
    2. ' =' → logprob: -1.9785473346710205
    3. ' or' → logprob: -2.3535473346710205
    4. '=' → logprob: -2.7285473346710205
    5. '_w' → logprob: -3.2285473346710205
    6. 'in' → logprob: -3.4785473346710205
    7. '       ' → logprob: -3.8535473346710205
    8. ' w' → logprob: -4.103547096252441
    9. ' if' → logprob: -4.353547096252441
    10. ',' → logprob: -4.353547096252441

Token 569: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.23577767610549927
    2. ',' → logprob: -2.2357776165008545
    3. '...' → logprob: -3.4857776165008545
    4. '       ' → logprob: -4.110777854919434
    5. ' ' → logprob: -4.235777854919434
    6. ' ..' → logprob: -4.235777854919434
    7. '.' → logprob: -5.360777854919434
    8. ' ,' → logprob: -5.485777854919434
    9. ' up' → logprob: -5.860777854919434
    10. '   ' → logprob: -5.860777854919434

Token 570: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03425595909357071
    2. ' W' → logprob: -3.4092559814453125
    3. '(W' → logprob: -7.9092559814453125
    4. ' ' → logprob: -9.784255981445312
    5. ' (' → logprob: -10.034255981445312
    6. 'H' → logprob: -10.159255981445312
    7. '   ' → logprob: -10.409255981445312
    8. '`' → logprob: -11.284255981445312
    9. '  ' → logprob: -11.534255981445312
    10. '(' → logprob: -11.534255981445312

Token 571: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7326663732528687
    2. 'for' → logprob: -2.232666492462158
    3. ')' → logprob: -2.607666492462158
    4. ':' → logprob: -2.732666492462158
    5. '_' → logprob: -2.857666492462158
    6. ',' → logprob: -2.982666492462158
    7. ' for' → logprob: -3.357666492462158
    8. '
' → logprob: -3.482666492462158
    9. '   ' → logprob: -3.482666492462158
    10. '_w' → logprob: -3.732666492462158

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '-' → logprob: -15.125021934509277
    4. '   ' → logprob: -15.875021934509277
    5. '       ' → logprob: -16.750022888183594
    6. '```' → logprob: -17.125022888183594
    7. '
' → logprob: -17.250022888183594
    8. ')' → logprob: -18.375022888183594
    9. '0' → logprob: -18.625022888183594
    10. '2' → logprob: -18.937522888183594

Token 573: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8186820149421692
    2. 'for' → logprob: -1.1936819553375244
    3. '
' → logprob: -2.0686819553375244
    4. ',' → logprob: -3.5686819553375244
    5. '        
' → logprob: -3.9436819553375244
    6. ' 
' → logprob: -4.3186821937561035
    7. '_' → logprob: -4.3186821937561035
    8. '       ' → logprob: -4.4436821937561035
    9. '_w' → logprob: -5.0686821937561035
    10. ':' → logprob: -5.1936821937561035

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025603151880204678
    2. ' for' → logprob: -7.127560138702393
    3. '        
' → logprob: -7.627560138702393
    4. 'for' → logprob: -7.877560138702393
    5. '   ' → logprob: -8.00256061553955
    6. '        ' → logprob: -8.87756061553955
    7. ',' → logprob: -9.12756061553955
    8. '           ' → logprob: -10.00256061553955
    9. '
' → logprob: -10.12756061553955
    10. '  
' → logprob: -10.37756061553955

Token 575: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08999918401241302
    2. ' for' → logprob: -2.714999198913574
    3. 'for' → logprob: -3.964999198913574
    4. '        
' → logprob: -7.964999198913574
    5. '
' → logprob: -8.464999198913574
    6. '   ' → logprob: -8.714999198913574
    7. ' 
' → logprob: -9.839999198913574
    8. ' ' → logprob: -10.589999198913574
    9. '  
' → logprob: -11.339999198913574
    10. '    
' → logprob: -11.339999198913574

Token 576: ' Same' (ID: 38569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17285777628421783
    2. 'for' → logprob: -1.9228577613830566
    3. '       ' → logprob: -4.547857761383057
    4. ' w' → logprob: -7.422857761383057
    5. ' ' → logprob: -7.797857761383057
    6. ' 
' → logprob: -8.672858238220215
    7. ' warrior' → logprob: -8.672858238220215
    8. ' For' → logprob: -9.047858238220215
    9. ' ' → logprob: -9.047858238220215
    10. '        
' → logprob: -9.297858238220215

Token 577: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6362290978431702
    2. 'for' → logprob: -0.7612290978431702
    3. '       ' → logprob: -6.136229038238525
    4. '   ' → logprob: -7.136229038238525
    5. '    ' → logprob: -8.386229515075684
    6. '        ' → logprob: -9.386229515075684
    7. ' ' → logprob: -9.386229515075684
    8. '        
' → logprob: -9.761229515075684
    9. '```' → logprob: -10.386229515075684
    10. '
' → logprob: -10.511229515075684

Token 578: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.25601333379745483
    2. ' cler' → logprob: -1.5060133934020996
    3. 'war' → logprob: -6.2560133934021
    4. 'cl' → logprob: -7.1310133934021
    5. ' warrior' → logprob: -7.6310133934021
    6. 'hero' → logprob: -8.256012916564941
    7. '   ' → logprob: -9.381012916564941
    8. ' ' → logprob: -9.381012916564941
    9. ' hero' → logprob: -9.381012916564941
    10. ' range' → logprob: -9.881012916564941

Token 579: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.4121114822482923e-06
    2. 'ics' → logprob: -13.625003814697266
    3. '       ' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.625003814697266
    5. ' ' → logprob: -16.125003814697266
    6. '    ' → logprob: -16.250003814697266
    7. '      ' → logprob: -16.250003814697266
    8. '
' → logprob: -16.375003814697266
    9. '  ' → logprob: -16.375003814697266
    10. '        ' → logprob: -16.500003814697266

Token 580: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7160421013832092
    2. '       ' → logprob: -1.2160420417785645
    3. ',' → logprob: -2.7160420417785645
    4. ' w' → logprob: -2.9660420417785645
    5. 'for' → logprob: -2.9660420417785645
    6. ' ,' → logprob: -3.8410420417785645
    7. ' and' → logprob: -5.3410420417785645
    8. '        
' → logprob: -5.4660420417785645
    9. ' ' → logprob: -5.8410420417785645
    10. 'w' → logprob: -5.8410420417785645

Token 581: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.042400654405355453
    2. ' mage' → logprob: -3.417400598526001
    3. 'm' → logprob: -4.91740083694458
    4. ' ' → logprob: -7.91740083694458
    5. 'M' → logprob: -8.417400360107422
    6. ' m' → logprob: -8.667400360107422
    7. 'mages' → logprob: -8.792400360107422
    8. 'Mage' → logprob: -8.917400360107422
    9. '   ' → logprob: -9.042400360107422
    10. ' M' → logprob: -9.167400360107422

Token 582: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11338314414024353
    2. '
' → logprob: -2.4883830547332764
    3. ' for' → logprob: -4.6133832931518555
    4. '        
' → logprob: -4.8633832931518555
    5. 'for' → logprob: -5.4883832931518555
    6. '   ' → logprob: -6.7383832931518555
    7. '    
' → logprob: -7.8633832931518555
    8. '  
' → logprob: -8.363383293151855
    9. ',' → logprob: -8.988383293151855
    10. ',
' → logprob: -9.613383293151855

Token 583: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002180596347898245
    2. ' for' → logprob: -6.877180576324463
    3. '
' → logprob: -7.752180576324463
    4. '        
' → logprob: -8.127181053161621
    5. 'for' → logprob: -8.377181053161621
    6. '   ' → logprob: -8.752181053161621
    7. '    
' → logprob: -11.252181053161621
    8. ' 
' → logprob: -12.502181053161621
    9. '  
' → logprob: -12.752181053161621
    10. '           ' → logprob: -13.002181053161621

Token 584: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18460917472839355
    2. ' for' → logprob: -2.1846091747283936
    3. 'for' → logprob: -3.5596091747283936
    4. '        
' → logprob: -4.309609413146973
    5. '
' → logprob: -4.809609413146973
    6. ' 
' → logprob: -6.059609413146973
    7. '   ' → logprob: -6.809609413146973
    8. '  
' → logprob: -7.059609413146973
    9. '    
' → logprob: -7.184609413146973
    10. ' ' → logprob: -7.934609413146973

Token 585: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48440682888031006
    2. ' for' → logprob: -0.9844068288803101
    3. '       ' → logprob: -4.8594069480896
    4. '   ' → logprob: -6.4844069480896
    5. '
' → logprob: -6.9844069480896
    6. 'from' → logprob: -10.734406471252441
    7. ' ' → logprob: -11.109406471252441
    8. '        
' → logprob: -11.484406471252441
    9. '    
' → logprob: -12.359406471252441
    10. ' from' → logprob: -12.359406471252441

Token 586: ' must' (ID: 2804)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10454163700342178
    2. 'for' → logprob: -2.854541540145874
    3. ' W' → logprob: -3.354541540145874
    4. '   ' → logprob: -6.854541778564453
    5. ' True' → logprob: -7.104541778564453
    6. ' hero' → logprob: -7.104541778564453
    7. ' we' → logprob: -7.354541778564453
    8. 'W' → logprob: -7.354541778564453
    9. ' w' → logprob: -7.479541778564453
    10. ' range' → logprob: -8.354541778564453

Token 587: ' meet' (ID: 4158)
  Prédit: ' satisfy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' satisfy' → logprob: -1.1770681142807007
    2. ' ensure' → logprob: -1.4270681142807007
    3. ' have' → logprob: -1.8020681142807007
    4. ' respect' → logprob: -2.1770682334899902
    5. ' choose' → logprob: -3.3020682334899902
    6. ' be' → logprob: -3.5520682334899902
    7. ' not' → logprob: -3.8020682334899902
    8. ' ' → logprob: -4.55206823348999
    9. ' follow' → logprob: -4.92706823348999
    10. ' consider' → logprob: -5.17706823348999

Token 588: ' constraints' (ID: 31060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8450095057487488
    2. ' all' → logprob: -0.9700095057487488
    3. ' warrior' → logprob: -3.3450095653533936
    4. ' get' → logprob: -3.4700095653533936
    5. '   ' → logprob: -3.4700095653533936
    6. ' ' → logprob: -3.9700095653533936
    7. 'the' → logprob: -3.9700095653533936
    8. ' constraints' → logprob: -4.2200093269348145
    9. 'war' → logprob: -4.8450093269348145
    10. 'all' → logprob: -5.0950093269348145

Token 589: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14201518893241882
    2. ' for' → logprob: -2.267015218734741
    3. '
' → logprob: -4.517014980316162
    4. 'for' → logprob: -4.767014980316162
    5. '   ' → logprob: -5.392014980316162
    6. '        
' → logprob: -5.517014980316162
    7. '    
' → logprob: -8.01701545715332
    8. ' 
' → logprob: -9.01701545715332
    9. '  
' → logprob: -10.14201545715332
    10. '```' → logprob: -10.14201545715332

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11045314371585846
    2. ' for' → logprob: -2.3604531288146973
    3. 'for' → logprob: -4.610453128814697
    4. '   ' → logprob: -8.985453605651855
    5. '
' → logprob: -9.735453605651855
    6. '        
' → logprob: -9.985453605651855
    7. '    
' → logprob: -12.735453605651855
    8. ' ' → logprob: -12.985453605651855
    9. ' 
' → logprob: -13.110453605651855
    10. '           ' → logprob: -13.110453605651855

Token 591: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7091546654701233
    2. ' for' → logprob: -0.9591546654701233
    3. '       ' → logprob: -2.0841546058654785
    4. '
' → logprob: -8.834155082702637
    5. '   ' → logprob: -9.084155082702637
    6. 'from' → logprob: -10.959155082702637
    7. '        
' → logprob: -11.084155082702637
    8. ' 
' → logprob: -12.334155082702637
    9. ' from' → logprob: -12.459155082702637
    10. ' ' → logprob: -13.084155082702637

Token 592: ' Conditions' (ID: 39333)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003696516389027238
    2. ' for' → logprob: -5.628696441650391
    3. '       ' → logprob: -9.87869644165039
    4. 'from' → logprob: -10.62869644165039
    5. '   ' → logprob: -11.25369644165039
    6. '
' → logprob: -12.87869644165039
    7. 'hero' → logprob: -13.12869644165039
    8. '        
' → logprob: -14.37869644165039
    9. '#' → logprob: -14.50369644165039
    10. 'import' → logprob: -14.75369644165039

Token 593: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27753746509552
    2. ' for' → logprob: -1.65253746509552
    3. 'for' → logprob: -3.0275373458862305
    4. '
' → logprob: -6.6525373458862305
    5. '   ' → logprob: -7.5275373458862305
    6. '        
' → logprob: -7.9025373458862305
    7. '           ' → logprob: -10.77753734588623
    8. '        ' → logprob: -10.90253734588623
    9. '    
' → logprob: -11.02753734588623
    10. ':' → logprob: -11.02753734588623

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008010327816009521
    2. ' for' → logprob: -5.758010387420654
    3. '        
' → logprob: -6.008010387420654
    4. 'for' → logprob: -6.883010387420654
    5. '#' → logprob: -7.758010387420654
    6. '
' → logprob: -8.008009910583496
    7. '   ' → logprob: -8.633009910583496
    8. '        ' → logprob: -8.633009910583496
    9. ' #' → logprob: -9.758009910583496
    10. '    
' → logprob: -10.258009910583496

Token 595: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6063381433486938
    2. ' for' → logprob: -0.8563381433486938
    3. 'for' → logprob: -4.106338024139404
    4. '        
' → logprob: -5.356338024139404
    5. '        ' → logprob: -5.731338024139404
    6. ' 
' → logprob: -6.606338024139404
    7. ' if' → logprob: -7.356338024139404
    8. ' #' → logprob: -7.356338024139404
    9. ' ' → logprob: -7.481338024139404
    10. '
' → logprob: -7.606338024139404

Token 596: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.881106436252594
    2. '#' → logprob: -1.0061063766479492
    3. ' for' → logprob: -1.8811063766479492
    4. ' #' → logprob: -3.881106376647949
    5. '       ' → logprob: -4.006106376647949
    6. '1' → logprob: -4.006106376647949
    7. '
' → logprob: -6.131106376647949
    8. '   ' → logprob: -6.131106376647949
    9. '-' → logprob: -6.381106376647949
    10. 'For' → logprob: -6.506106376647949

Token 597: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5475025177001953
    2. 'for' → logprob: -0.9225025177001953
    3. 'True' → logprob: -4.922502517700195
    4. 'w' → logprob: -5.797502517700195
    5. '       ' → logprob: -5.797502517700195
    6. 'hero' → logprob: -5.922502517700195
    7. '   ' → logprob: -6.422502517700195
    8. '
' → logprob: -6.547502517700195
    9. 'H' → logprob: -7.172502517700195
    10. 'if' → logprob: -7.297502517700195

Token 598: ')' (ID: 8)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6756813526153564
    2. ')' → logprob: -1.8006813526153564
    3. ' =' → logprob: -1.9256813526153564
    4. ':' → logprob: -2.0506813526153564
    5. '   ' → logprob: -2.4256813526153564
    6. ' ==' → logprob: -2.9256813526153564
    7. ' )' → logprob: -3.3006813526153564
    8. ' :' → logprob: -3.6756813526153564
    9. ' if' → logprob: -3.6756813526153564
    10. '       ' → logprob: -3.8006813526153564

Token 599: ' party' (ID: 7362)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -1.132240891456604
    2. 'hero' → logprob: -1.882240891456604
    3. 'war' → logprob: -2.2572407722473145
    4. ' hero' → logprob: -2.3822407722473145
    5. 'There' → logprob: -3.0072407722473145
    6. '#' → logprob: -3.2572407722473145
    7. 'For' → logprob: -3.6322407722473145
    8. 'for' → logprob: -3.8822407722473145
    9. ' for' → logprob: -3.8822407722473145
    10. '   ' → logprob: -3.8822407722473145

Token 600: ' must' (ID: 2804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3236180543899536
    2. ' =' → logprob: -1.4486180543899536
    3. '       ' → logprob: -1.9486180543899536
    4. ':' → logprob: -2.448617935180664
    5. ' ' → logprob: -2.573617935180664
    6. '   ' → logprob: -2.823617935180664
    7. ')' → logprob: -3.573617935180664
    8. '=' → logprob: -4.198617935180664
    9. '[' → logprob: -4.198617935180664
    10. ' _' → logprob: -4.448617935180664

Token 601: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.44439172744750977
    2. ' include' → logprob: -1.4443917274475098
    3. ' contain' → logprob: -2.5693917274475098
    4. ' consist' → logprob: -3.6943917274475098
    5. ' be' → logprob: -4.94439172744751
    6. ' ' → logprob: -5.44439172744751
    7. 'have' → logprob: -5.81939172744751
    8. 'include' → logprob: -6.31939172744751
    9. '   ' → logprob: -6.69439172744751
    10. ' consists' → logprob: -7.19439172744751

Token 602: ' hero' (ID: 20917)
  Prédit: ' hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hero' → logprob: -0.8242895603179932
    2. ' at' → logprob: -1.0742895603179932
    3. ' a' → logprob: -1.9492895603179932
    4. ' one' → logprob: -3.449289560317993
    5. 'hero' → logprob: -3.574289560317993
    6. ' ' → logprob: -4.699289321899414
    7. '1' → logprob: -5.824289321899414
    8. 'a' → logprob: -6.199289321899414
    9. 'at' → logprob: -6.699289321899414
    10. '   ' → logprob: -7.199289321899414

Token 603: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1295208930969238
    2. ' 
' → logprob: -1.7545208930969238
    3. '       ' → logprob: -2.379520893096924
    4. ' h' → logprob: -2.629520893096924
    5. ',' → logprob: -2.879520893096924
    6. '        
' → logprob: -3.129520893096924
    7. '  
' → logprob: -3.254520893096924
    8. ' ,' → logprob: -3.504520893096924
    9. 's' → logprob: -3.754520893096924
    10. '   ' → logprob: -3.754520893096924

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03796999156475067
    2. ',' → logprob: -3.4129700660705566
    3. ' ,' → logprob: -7.287970066070557
    4. ')' → logprob: -7.537970066070557
    5. ' ' → logprob: -7.787970066070557
    6. '        ' → logprob: -7.912970066070557
    7. '   ' → logprob: -8.037969589233398
    8. '<|end|>' → logprob: -8.037969589233398
    9. '        
' → logprob: -8.037969589233398
    10. ' ' → logprob: -8.787969589233398

Token 605: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012627131305634975
    2. '   ' → logprob: -5.387627124786377
    3. '        
' → logprob: -6.137627124786377
    4. ' ' → logprob: -6.262627124786377
    5. ',' → logprob: -7.012627124786377
    6. ' 
' → logprob: -7.512627124786377
    7. '
' → logprob: -7.637627124786377
    8. ' ' → logprob: -8.137627601623535
    9. '    
' → logprob: -8.512627601623535
    10. '        ' → logprob: -8.637627601623535

Token 606: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4861835837364197
    2. ' for' → logprob: -1.4861836433410645
    3. 'for' → logprob: -1.8611836433410645
    4. '   ' → logprob: -6.2361836433410645
    5. '
' → logprob: -7.4861836433410645
    6. ' ' → logprob: -8.236183166503906
    7. '        
' → logprob: -8.611183166503906
    8. '#' → logprob: -9.861183166503906
    9. '        ' → logprob: -10.111183166503906
    10. '           ' → logprob: -10.236183166503906

Token 607: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0784523487091064
    2. '       ' → logprob: -1.2034523487091064
    3. '1' → logprob: -3.0784523487091064
    4. 'for' → logprob: -3.0784523487091064
    5. '2' → logprob: -3.2034523487091064
    6. '#' → logprob: -3.2034523487091064
    7. ' #' → logprob: -3.4534523487091064
    8. ' for' → logprob: -3.4534523487091064
    9. ' ' → logprob: -3.7034523487091064
    10. ' 
' → logprob: -3.8284523487091064

Token 608: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06949415057897568
    2. ' )' → logprob: -2.9444942474365234
    3. '   ' → logprob: -4.569494247436523
    4. '       ' → logprob: -5.819494247436523
    5. ' ==' → logprob: -8.069494247436523
    6. ' ' → logprob: -9.069494247436523
    7. ',' → logprob: -9.194494247436523
    8. '==' → logprob: -9.194494247436523
    9. ' and' → logprob: -9.194494247436523
    10. '    ' → logprob: -9.319494247436523

Token 609: ' warrior' (ID: 76541)
  Prédit: ' warrior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.8430619239807129
    2. ' for' → logprob: -1.843061923980713
    3. '   ' → logprob: -2.468061923980713
    4. 'for' → logprob: -2.593061923980713
    5. 'war' → logprob: -2.968061923980713
    6. ' w' → logprob: -3.093061923980713
    7. ' (' → logprob: -3.593061923980713
    8. 'w' → logprob: -3.968061923980713
    9. ' hero' → logprob: -4.468061923980713
    10. 'W' → logprob: -4.718061923980713

Token 610: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4647461175918579
    2. ' =' → logprob: -1.464746117591858
    3. ' in' → logprob: -2.9647459983825684
    4. ' can' → logprob: -3.0897459983825684
    5. '=None' → logprob: -4.339745998382568
    6. ' ' → logprob: -5.214745998382568
    7. '_' → logprob: -5.339745998382568
    8. '=' → logprob: -5.714745998382568
    9. 's' → logprob: -5.839745998382568
    10. ' ==' → logprob: -5.839745998382568

Token 611: ' hero' (ID: 20917)
  Prédit: ' hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hero' → logprob: -0.14302071928977966
    2. 'hero' → logprob: -2.3930206298828125
    3. ' (' → logprob: -3.7680206298828125
    4. '(hero' → logprob: -4.8930206298828125
    5. ' ' → logprob: -5.1430206298828125
    6. '(' → logprob: -7.2680206298828125
    7. '   ' → logprob: -7.8930206298828125
    8. ' ' → logprob: -8.018020629882812
    9. ' warrior' → logprob: -8.018020629882812
    10. ' optional' → logprob: -8.143020629882812

Token 612: ' get' (ID: 717)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3239423930644989
    2. '_' → logprob: -2.6989424228668213
    3. ' and' → logprob: -2.9489424228668213
    4. ' are' → logprob: -3.1989424228668213
    5. ' is' → logprob: -3.1989424228668213
    6. 'in' → logprob: -3.6989424228668213
    7. ' must' → logprob: -4.448942184448242
    8. 'and' → logprob: -4.948942184448242
    9. ' ' → logprob: -5.073942184448242
    10. ',' → logprob: -5.448942184448242

Token 613: ' along' (ID: 4251)
  Prédit: ' along'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.735992431640625
    2. '_al' → logprob: -0.985992431640625
    3. 'along' → logprob: -2.110992431640625
    4. '_' → logprob: -4.110992431640625
    5. '   ' → logprob: -4.860992431640625
    6. ' _' → logprob: -7.360992431640625
    7. ' ' → logprob: -7.485992431640625
    8. '```' → logprob: -8.485992431640625
    9. '    ' → logprob: -8.610992431640625
    10. '  ' → logprob: -8.735992431640625

Token 614: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06398940831422806
    2. ' and' → logprob: -4.188989639282227
    3. ' or' → logprob: -4.688989639282227
    4. ',' → logprob: -4.938989639282227
    5. '   ' → logprob: -5.313989639282227
    6. '_' → logprob: -5.313989639282227
    7. ' if' → logprob: -5.813989639282227
    8. ' =' → logprob: -6.063989639282227
    9. '<|end|>' → logprob: -6.063989639282227
    10. '        
' → logprob: -6.188989639282227

Token 615: ' warrior' (ID: 76541)
  Prédit: ' warrior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.7418993711471558
    2. 'war' → logprob: -1.3668993711471558
    3. 'w' → logprob: -2.1168994903564453
    4. ' w' → logprob: -2.4918994903564453
    5. ' (' → logprob: -3.6168994903564453
    6. ' ' → logprob: -4.241899490356445
    7. '(w' → logprob: -4.366899490356445
    8. '(' → logprob: -5.741899490356445
    9. '   ' → logprob: -5.866899490356445
    10. ' ' → logprob: -6.366899490356445

Token 616: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12550298869609833
    2. ' is' → logprob: -2.3755030632019043
    3. ' in' → logprob: -4.500503063201904
    4. ' and' → logprob: -6.000503063201904
    5. 's' → logprob: -6.750503063201904
    6. 'w' → logprob: -6.750503063201904
    7. '==' → logprob: -6.875503063201904
    8. '=' → logprob: -7.000503063201904
    9. ' _' → logprob: -7.250503063201904
    10. '_w' → logprob: -7.250503063201904

Token 617: ' present' (ID: 3333)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.575592577457428
    2. ' None' → logprob: -0.950592577457428
    3. 'None' → logprob: -3.450592517852783
    4. 'not' → logprob: -3.950592517852783
    5. ' ' → logprob: -9.075592994689941
    6. '=None' → logprob: -11.825592994689941
    7. '  ' → logprob: -12.325592994689941
    8. '(None' → logprob: -12.450592994689941
    9. '   ' → logprob: -12.575592994689941
    10. ' ' → logprob: -12.950592994689941

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004213786742184311
    2. ',' → logprob: -9.250421524047852
    3. '        
' → logprob: -9.375421524047852
    4. ' for' → logprob: -9.625421524047852
    5. 'for' → logprob: -10.625421524047852
    6. '           ' → logprob: -10.625421524047852
    7. '#' → logprob: -10.750421524047852
    8. '<|end|>' → logprob: -10.750421524047852
    9. '
' → logprob: -11.500421524047852
    10. 'w' → logprob: -11.625421524047852

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009213464800268412
    2. '        
' → logprob: -7.625921249389648
    3. '           ' → logprob: -8.875921249389648
    4. ',' → logprob: -9.125921249389648
    5. ' for' → logprob: -10.000921249389648
    6. '   ' → logprob: -10.500921249389648
    7. '        ' → logprob: -10.625921249389648
    8. ')' → logprob: -11.125921249389648
    9. ' ' → logprob: -11.125921249389648
    10. '               ' → logprob: -11.875921249389648

Token 620: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042567000491544604
    2. '        
' → logprob: -8.625425338745117
    3. '           ' → logprob: -9.125425338745117
    4. '#' (adapté à ' #') → logprob: -10.500425338745117
    5. ',' → logprob: -10.875425338745117
    6. '        ' → logprob: -11.000425338745117
    7. '   ' → logprob: -11.125425338745117
    8. '
' → logprob: -11.625425338745117
    9. '      ' → logprob: -12.000425338745117
    10. ' ' → logprob: -12.125425338745117

Token 621: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009161015041172504
    2. '           ' → logprob: -8.250916481018066
    3. '        
' → logprob: -8.750916481018066
    4. '        ' → logprob: -8.875916481018066
    5. ' for' → logprob: -9.750916481018066
    6. '   ' → logprob: -9.750916481018066
    7. ' ' → logprob: -10.000916481018066
    8. 'for' → logprob: -10.250916481018066
    9. ',' → logprob: -10.375916481018066
    10. ' ' → logprob: -10.750916481018066

Token 622: '3' (ID: 18)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13078300654888153
    2. '#' → logprob: -2.2557830810546875
    3. 'if' → logprob: -4.8807830810546875
    4. '   ' → logprob: -4.8807830810546875
    5. 'for' → logprob: -6.5057830810546875
    6. '
' → logprob: -8.005783081054688
    7. '3' → logprob: -8.255783081054688
    8. '2' → logprob: -9.130783081054688
    9. '           ' → logprob: -9.255783081054688
    10. ' ' → logprob: -9.380783081054688

Token 623: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010783927515149117
    2. ' )' → logprob: -5.010784149169922
    3. '   ' → logprob: -6.135784149169922
    4. ' if' → logprob: -7.010784149169922
    5. '       ' → logprob: -7.135784149169922
    6. 'if' → logprob: -9.635784149169922
    7. '    ' → logprob: -10.260784149169922
    8. ' ' → logprob: -10.635784149169922
    9. '  ' → logprob: -11.010784149169922
    10. '        ' → logprob: -11.510784149169922

Token 624: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.5246322751045227
    2. ' cler' → logprob: -0.8996322751045227
    3. '   ' → logprob: -8.024632453918457
    4. 'cl' → logprob: -8.649632453918457
    5. '       ' → logprob: -8.899632453918457
    6. 'if' → logprob: -8.899632453918457
    7. ' ' → logprob: -9.399632453918457
    8. ' if' → logprob: -9.524632453918457
    9. 'hero' → logprob: -9.649632453918457
    10. '(' → logprob: -9.774632453918457

Token 625: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -5.1689596148207784e-05
    2. '   ' → logprob: -11.125051498413086
    3. '       ' → logprob: -11.250051498413086
    4. '           ' → logprob: -12.250051498413086
    5. 'ics' → logprob: -12.750051498413086
    6. '    ' → logprob: -13.000051498413086
    7. '  ' → logprob: -13.250051498413086
    8. '        ' → logprob: -13.250051498413086
    9. '      ' → logprob: -13.250051498413086
    10. '#' → logprob: -13.625051498413086

Token 626: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.443754106760025
    2. ' is' → logprob: -1.3187540769577026
    3. 'and' → logprob: -2.568754196166992
    4. '==' → logprob: -5.943754196166992
    5. ' present' → logprob: -6.068754196166992
    6. ' ' → logprob: -6.318754196166992
    7. ' in' → logprob: -6.568754196166992
    8. ' must' → logprob: -6.568754196166992
    9. ' ==' → logprob: -6.943754196166992
    10. ' not' → logprob: -7.193754196166992

Token 627: ' warrior' (ID: 76541)
  Prédit: ' warrior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.14419110119342804
    2. 'war' → logprob: -2.644191026687622
    3. ' (' → logprob: -3.144191026687622
    4. '(w' → logprob: -4.894191265106201
    5. ' hero' → logprob: -5.144191265106201
    6. ' war' → logprob: -6.269191265106201
    7. ' ' → logprob: -6.894191265106201
    8. ' ' → logprob: -7.019191265106201
    9. ' w' → logprob: -7.519191265106201
    10. '(' → logprob: -7.769191265106201

Token 628: ' get' (ID: 717)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.416055291891098
    2. ' get' → logprob: -1.9160553216934204
    3. ' present' → logprob: -2.416055202484131
    4. ' and' → logprob: -3.291055202484131
    5. ' if' → logprob: -4.541055202484131
    6. '_present' → logprob: -4.541055202484131
    7. 'get' → logprob: -5.166055202484131
    8. ' in' → logprob: -5.291055202484131
    9. ' not' → logprob: -5.416055202484131
    10. ' ' → logprob: -5.416055202484131

Token 629: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.2515851557254791
    2. ' along' → logprob: -1.6265851259231567
    3. '_al' → logprob: -3.7515852451324463
    4. '_' → logprob: -7.001585006713867
    5. 'al' → logprob: -7.751585006713867
    6. '=' → logprob: -8.876585006713867
    7. '```' → logprob: -9.001585006713867
    8. 'Along' → logprob: -9.126585006713867
    9. '   ' → logprob: -9.251585006713867
    10. ' ' → logprob: -9.251585006713867

Token 630: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18554982542991638
    2. ' if' → logprob: -2.060549736022949
    3. '<|end|>' → logprob: -3.310549736022949
    4. '        ' → logprob: -6.935549736022949
    5. ',' → logprob: -7.060549736022949
    6. '        
' → logprob: -7.435549736022949
    7. '<|end|>' → logprob: -7.560549736022949
    8. ' or' → logprob: -8.06054973602295
    9. 'if' → logprob: -8.06054973602295
    10. ' (' → logprob: -8.18554973602295

Token 631: ' both' (ID: 2973)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.25422388315200806
    2. ' cler' → logprob: -1.5042238235473633
    3. ' warrior' → logprob: -6.504223823547363
    4. 'war' → logprob: -7.879223823547363
    5. 'cl' → logprob: -8.379223823547363
    6. ' clerk' → logprob: -10.129223823547363
    7. ' present' → logprob: -10.379223823547363
    8. '   ' → logprob: -10.629223823547363
    9. ' ' → logprob: -10.879223823547363
    10. '    ' → logprob: -11.504223823547363

Token 632: ' present' (ID: 3333)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0644097551703453
    2. ' if' → logprob: -3.1894097328186035
    3. ' and' → logprob: -4.8144097328186035
    4. ' present' → logprob: -5.9394097328186035
    5. '<|end|>' → logprob: -5.9394097328186035
    6. ' or' → logprob: -6.6894097328186035
    7. '   ' → logprob: -6.9394097328186035
    8. '           ' → logprob: -7.0644097328186035
    9. 'present' → logprob: -7.1894097328186035
    10. 'and' → logprob: -7.4394097328186035

Token 633: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002925598528236151
    2. '<|end|>' → logprob: -8.875292778015137
    3. '           ' → logprob: -10.000292778015137
    4. '        
' → logprob: -10.375292778015137
    5. ',' → logprob: -10.625292778015137
    6. '        ' → logprob: -11.250292778015137
    7. '#' → logprob: -11.750292778015137
    8. '   ' → logprob: -12.125292778015137
    9. '
' → logprob: -12.500292778015137
    10. '      ' → logprob: -12.875292778015137

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010136510245501995
    2. '#' → logprob: -4.635136604309082
    3. '           ' → logprob: -9.010136604309082
    4. ' #' → logprob: -9.260136604309082
    5. '   ' → logprob: -9.510136604309082
    6. '        ' → logprob: -10.385136604309082
    7. '      ' → logprob: -11.260136604309082
    8. ' ' → logprob: -11.260136604309082
    9. '<|end|>' → logprob: -11.510136604309082
    10. '               ' → logprob: -12.760136604309082

Token 635: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20190520584583282
    2. '#' (adapté à ' #') → logprob: -1.7019052505493164
    3. ' #' → logprob: -7.951905250549316
    4. '   ' → logprob: -9.951905250549316
    5. '           ' → logprob: -10.201905250549316
    6. '        ' → logprob: -11.326905250549316
    7. ' ' → logprob: -11.576905250549316
    8. '
' → logprob: -11.951905250549316
    9. '<|end|>' → logprob: -12.326905250549316
    10. '      ' → logprob: -12.576905250549316

Token 636: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015017237514257431
    2. '#' → logprob: -4.640017032623291
    3. '        ' → logprob: -6.015017032623291
    4. '        
' → logprob: -7.140017032623291
    5. ' #' → logprob: -7.265017032623291
    6. ' ' → logprob: -7.515017032623291
    7. '           ' → logprob: -8.64001750946045
    8. ' ' → logprob: -9.01501750946045
    9. '
' → logprob: -9.26501750946045
    10. '   ' → logprob: -9.51501750946045

Token 637: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.026895679533481598
    2. '#' → logprob: -4.401895523071289
    3. '       ' → logprob: -4.401895523071289
    4. '   ' → logprob: -6.651895523071289
    5. 'if' → logprob: -7.901895523071289
    6. ' ' → logprob: -8.651895523071289
    7. '
' → logprob: -9.776895523071289
    8. 'elif' → logprob: -9.776895523071289
    9. 'for' → logprob: -11.401895523071289
    10. ' #' → logprob: -11.526895523071289

Token 638: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009178895270451903
    2. ' )' → logprob: -7.625917911529541
    3. '       ' → logprob: -8.375917434692383
    4. '   ' → logprob: -9.250917434692383
    5. '#' → logprob: -10.000917434692383
    6. ' if' → logprob: -11.000917434692383
    7. 'if' → logprob: -11.125917434692383
    8. ')#' → logprob: -11.750917434692383
    9. ')
' → logprob: -12.250917434692383
    10. ' #' → logprob: -12.875917434692383

Token 639: ' mage' (ID: 89091)
  Prédit: ' mage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mage' → logprob: -0.16184116899967194
    2. 'mage' → logprob: -1.9118411540985107
    3. '   ' → logprob: -7.78684139251709
    4. '(m' → logprob: -8.28684139251709
    5. '#' → logprob: -8.91184139251709
    6. ' cler' → logprob: -9.28684139251709
    7. '       ' → logprob: -9.66184139251709
    8. 'm' → logprob: -9.72434139251709
    9. ' ' → logprob: -9.78684139251709
    10. ' (' → logprob: -9.78684139251709

Token 640: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0198545940220356
    2. 'and' → logprob: -4.769854545593262
    3. ' is' → logprob: -5.144854545593262
    4. ' ' → logprob: -6.019854545593262
    5. ' must' → logprob: -7.644854545593262
    6. ' can' → logprob: -8.019854545593262
    7. ' present' → logprob: -8.144854545593262
    8. '_' → logprob: -8.519854545593262
    9. '_and' → logprob: -8.519854545593262
    10. ' if' → logprob: -8.769854545593262

Token 641: ' cler' (ID: 91536)
  Prédit: ' cler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cler' → logprob: -0.10056808590888977
    2. 'cler' → logprob: -2.3505680561065674
    3. ' clerk' → logprob: -9.225567817687988
    4. 'cl' → logprob: -9.725567817687988
    5. ' ' → logprob: -9.850567817687988
    6. ' clergy' → logprob: -10.350567817687988
    7. '   ' → logprob: -10.725567817687988
    8. ' ' → logprob: -11.100567817687988
    9. ' clar' → logprob: -11.225567817687988
    10. ' cl' → logprob: -11.850567817687988

Token 642: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -7.922563963802531e-05
    2. 'i' → logprob: -10.250079154968262
    3. 'ics' → logprob: -10.875079154968262
    4. '   ' → logprob: -12.500079154968262
    5. '       ' → logprob: -13.250079154968262
    6. 'ical' → logprob: -13.250079154968262
    7. '        ' → logprob: -13.500079154968262
    8. '    ' → logprob: -13.500079154968262
    9. '      ' → logprob: -13.500079154968262
    10. '#' → logprob: -13.625079154968262

Token 643: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.19706110656261444
    2. ' if' → logprob: -2.572061061859131
    3. 'get' → logprob: -2.822061061859131
    4. '       ' → logprob: -3.697061061859131
    5. 'if' → logprob: -4.697061061859131
    6. ' present' → logprob: -6.197061061859131
    7. ' are' → logprob: -6.322061061859131
    8. ' and' → logprob: -6.822061061859131
    9. '   ' → logprob: -7.197061061859131
    10. ' ' → logprob: -7.322061061859131

Token 644: ' along' (ID: 4251)
  Prédit: ' along'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.4791814982891083
    2. 'along' → logprob: -0.9791815280914307
    3. '```' → logprob: -6.479181289672852
    4. '   ' → logprob: -7.104181289672852
    5. '           ' → logprob: -7.104181289672852
    6. '_al' → logprob: -7.604181289672852
    7. 'al' → logprob: -8.104181289672852
    8. '  ' → logprob: -8.354181289672852
    9. ' ' → logprob: -8.479181289672852
    10. '    ' → logprob: -9.604181289672852

Token 645: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011367641389369965
    2. '        
' → logprob: -4.8863677978515625
    3. '
' → logprob: -6.1363677978515625
    4. '           ' → logprob: -8.011367797851562
    5. ' for' → logprob: -8.136367797851562
    6. '        ' → logprob: -8.386367797851562
    7. '   ' → logprob: -8.636367797851562
    8. 'for' → logprob: -9.386367797851562
    9. '  
' → logprob: -9.511367797851562
    10. '    
' → logprob: -9.761367797851562

Token 646: ' both' (ID: 2973)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.2832924425601959
    2. ' cler' → logprob: -1.4082924127578735
    3. 'cl' → logprob: -6.533292293548584
    4. ' both' → logprob: -7.533292293548584
    5. 'both' → logprob: -9.408292770385742
    6. ' ' → logprob: -11.033292770385742
    7. ' clergy' → logprob: -11.158292770385742
    8. ' clerk' → logprob: -11.533292770385742
    9. ' cl' → logprob: -12.408292770385742
    10. '   ' → logprob: -12.408292770385742

Token 647: ' present' (ID: 3333)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08274458348751068
    2. ' if' → logprob: -2.957744598388672
    3. '           ' → logprob: -4.332744598388672
    4. '        
' → logprob: -5.582744598388672
    5. 'if' → logprob: -6.082744598388672
    6. ' present' → logprob: -6.207744598388672
    7. '   ' → logprob: -6.957744598388672
    8. ',' → logprob: -7.332744598388672
    9. '        ' → logprob: -7.707744598388672
    10. '
' → logprob: -7.707744598388672

Token 648: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003617062233388424
    2. '
' → logprob: -6.003617286682129
    3. '        
' → logprob: -7.003617286682129
    4. ' for' → logprob: -9.128617286682129
    5. 'for' → logprob: -9.253617286682129
    6. '   ' → logprob: -11.628617286682129
    7. '    
' → logprob: -12.628617286682129
    8. '<|end|>' → logprob: -13.003617286682129
    9. 'import' → logprob: -13.253617286682129
    10. 'from' → logprob: -13.253617286682129

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002223529852926731
    2. '        
' → logprob: -6.627223491668701
    3. '
' → logprob: -7.127223491668701
    4. '<|end|>' → logprob: -10.37722396850586
    5. 'for' → logprob: -11.37722396850586
    6. '           ' → logprob: -11.87722396850586
    7. ' for' → logprob: -12.00222396850586
    8. '   ' → logprob: -12.00222396850586
    9. '```' → logprob: -12.00222396850586
    10. ',' → logprob: -12.12722396850586

Token 650: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011337858159095049
    2. ' for' → logprob: -7.376133918762207
    3. 'for' → logprob: -7.751133918762207
    4. '   ' → logprob: -10.126133918762207
    5. '
' → logprob: -10.751133918762207
    6. '        
' → logprob: -11.876133918762207
    7. 'from' → logprob: -12.501133918762207
    8. '           ' → logprob: -13.501133918762207
    9. 'import' → logprob: -13.876133918762207
    10. ' ' → logprob: -14.501133918762207

Token 651: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7524402737617493
    2. 'for' → logprob: -0.7524402737617493
    3. ' for' → logprob: -2.8774402141571045
    4. 'from' → logprob: -7.002440452575684
    5. '   ' → logprob: -8.127440452575684
    6. ' from' → logprob: -10.127440452575684
    7. '
' → logprob: -11.127440452575684
    8. ' ' → logprob: -11.877440452575684
    9. '```' → logprob: -12.002440452575684
    10. '        
' → logprob: -12.252440452575684

Token 652: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004985823179595172
    2. ' for' → logprob: -8.12549877166748
    3. '       ' → logprob: -9.12549877166748
    4. '
' → logprob: -10.12549877166748
    5. 'from' → logprob: -10.75049877166748
    6. '   ' → logprob: -10.87549877166748
    7. 'hero' → logprob: -11.87549877166748
    8. '        
' → logprob: -12.75049877166748
    9. '    
' → logprob: -14.37549877166748
    10. ' ' → logprob: -14.50049877166748

Token 653: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007045221049338579
    2. '   ' → logprob: -6.007045269012451
    3. ' )' → logprob: -6.007045269012451
    4. '       ' → logprob: -6.882045269012451
    5. ')
' → logprob: -8.007044792175293
    6. '#' → logprob: -8.507044792175293
    7. 'def' → logprob: -9.507044792175293
    8. ' if' → logprob: -10.132044792175293
    9. ':' → logprob: -10.257044792175293
    10. ' ' → logprob: -10.382044792175293

Token 654: ' party' (ID: 7362)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5798463821411133
    2. 'for' → logprob: -1.0798463821411133
    3. 'from' → logprob: -3.4548463821411133
    4. '       ' → logprob: -4.454846382141113
    5. 'Each' → logprob: -4.704846382141113
    6. 'We' → logprob: -4.954846382141113
    7. ' for' → logprob: -5.079846382141113
    8. 'party' → logprob: -5.329846382141113
    9. 'For' → logprob: -5.954846382141113
    10. 'At' → logprob: -5.954846382141113

Token 655: ' recommended' (ID: 13883)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.077958106994629
    2. '_members' → logprob: -1.077958106994629
    3. 'members' → logprob: -2.702958106994629
    4. '_' → logprob: -2.952958106994629
    5. ' must' → logprob: -2.952958106994629
    6. ' =' → logprob: -3.702958106994629
    7. '   ' → logprob: -3.827958106994629
    8. 'must' → logprob: -3.827958106994629
    9. ' members' → logprob: -4.077958106994629
    10. 'size' → logprob: -4.452958106994629

Token 656: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7394161224365234
    2. '_' → logprob: -1.4894161224365234
    3. 's' → logprob: -3.1144161224365234
    4. '   ' → logprob: -3.2394161224365234
    5. '       ' → logprob: -3.2394161224365234
    6. ',' → logprob: -3.7394161224365234
    7. ':' → logprob: -3.7394161224365234
    8. '=' → logprob: -3.9894161224365234
    9. ' ' → logprob: -4.364416122436523
    10. '<|end|>' → logprob: -4.364416122436523

Token 657: ' have' (ID: 679)
  Prédit: ' include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' include' → logprob: -1.1694170236587524
    2. ' have' → logprob: -1.2944170236587524
    3. 'have' → logprob: -1.6694170236587524
    4. 'include' → logprob: -1.9194170236587524
    5. ' be' → logprob: -3.294416904449463
    6. ' contain' → logprob: -3.669416904449463
    7. 'contain' → logprob: -4.794416904449463
    8. 'continue' → logprob: -6.294416904449463
    9. 'be' → logprob: -6.419416904449463
    10. '   ' → logprob: -7.169416904449463

Token 658: ' warrior' (ID: 76541)
  Prédit: ' hero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hero' → logprob: -0.3487847149372101
    2. ' at' → logprob: -1.4737846851348877
    3. 'hero' → logprob: -3.3487846851348877
    4. ' a' → logprob: -4.098784923553467
    5. 'at' → logprob: -5.348784923553467
    6. ' one' → logprob: -6.473784923553467
    7. 'a' → logprob: -6.723784923553467
    8. ' all' → logprob: -6.848784923553467
    9. ' either' → logprob: -7.098784923553467
    10. ' space' → logprob: -7.098784923553467

Token 659: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24401484429836273
    2. ' for' → logprob: -1.869014859199524
    3. 'for' → logprob: -2.8690147399902344
    4. '        
' → logprob: -6.369014739990234
    5. ',' → logprob: -6.619014739990234
    6. '
' → logprob: -7.119014739990234
    7. '<|end|>' → logprob: -7.869014739990234
    8. '   ' → logprob: -7.994014739990234
    9. 'import' → logprob: -8.119014739990234
    10. 'def' → logprob: -8.619014739990234

Token 660: ' cler' (ID: 91536)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.10851159691810608
    2. '       ' → logprob: -2.6085116863250732
    3. ' not' → logprob: -4.733511447906494
    4. '        ' → logprob: -5.983511447906494
    5. 'but' → logprob: -5.983511447906494
    6. ' or' → logprob: -6.108511447906494
    7. ' hero' → logprob: -6.733511447906494
    8. ' else' → logprob: -6.858511447906494
    9. ' optional' → logprob: -6.858511447906494
    10. ' cler' → logprob: -6.983511447906494

Token 661: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.688212614681106e-05
    2. 'ics' → logprob: -11.500017166137695
    3. 'i' → logprob: -13.500017166137695
    4. '#' → logprob: -14.000017166137695
    5. '

' → logprob: -14.250017166137695
    6. '   ' → logprob: -14.750017166137695
    7. '_' → logprob: -14.937517166137695
    8. '
' → logprob: -14.937517166137695
    9. 'ical' → logprob: -15.125017166137695
    10. 'c' → logprob: -15.312517166137695

Token 662: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056053925305604935
    2. '
' → logprob: -3.306053876876831
    3. '        
' → logprob: -4.68105411529541
    4. ' for' → logprob: -5.05605411529541
    5. 'for' → logprob: -6.68105411529541
    6. '    
' → logprob: -8.18105411529541
    7. '   ' → logprob: -8.18105411529541
    8. '<|end|>' → logprob: -8.80605411529541
    9. ',' → logprob: -9.68105411529541
    10. '  
' → logprob: -10.18105411529541

Token 663: ' mage' (ID: 89091)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.429648220539093
    2. 'or' → logprob: -2.1796481609344482
    3. '#' → logprob: -2.9296481609344482
    4. ' and' → logprob: -3.3046481609344482
    5. ' mage' → logprob: -3.3046481609344482
    6. 'and' → logprob: -3.5546481609344482
    7. 'mage' → logprob: -4.054648399353027
    8. 'm' → logprob: -4.054648399353027
    9. '       ' → logprob: -4.554648399353027
    10. ' m' → logprob: -4.679648399353027

Token 664: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04209873080253601
    2. '
' → logprob: -4.042098522186279
    3. ' for' → logprob: -4.167098522186279
    4. 'for' → logprob: -4.917098522186279
    5. '        
' → logprob: -7.667098522186279
    6. '   ' → logprob: -8.417098999023438
    7. '<|end|>' → logprob: -10.167098999023438
    8. '    
' → logprob: -10.542098999023438
    9. 'from' → logprob: -11.042098999023438
    10. ',' → logprob: -11.417098999023438

Token 665: ' up' (ID: 869)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.24263055622577667
    2. ' not' → logprob: -1.7426306009292603
    3. 'can' → logprob: -4.992630481719971
    4. '#' → logprob: -5.367630481719971
    5. 'it's' → logprob: -5.367630481719971
    6. 'it' → logprob: -5.492630481719971
    7. ' can' → logprob: -5.617630481719971
    8. ' it's' → logprob: -5.867630481719971
    9. 'they' → logprob: -6.117630481719971
    10. 'optional' → logprob: -6.117630481719971

Token 666: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07737264037132263
    2. ' to' → logprob: -2.8273725509643555
    3. '       ' → logprob: -4.7023725509643555
    4. '   ' → logprob: -5.8273725509643555
    5. 'def' → logprob: -7.0773725509643555
    6. '=' → logprob: -7.4523725509643555
    7. '           ' → logprob: -8.452372550964355
    8. 'None' → logprob: -8.452372550964355
    9. '=None' → logprob: -8.952372550964355
    10. '```' → logprob: -9.077372550964355

Token 667: ' NW' (ID: 58124)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2409130334854126
    2. 'hero' → logprob: -1.6159130334854126
    3. 'H' → logprob: -1.8659130334854126
    4. '1' → logprob: -1.9909130334854126
    5. 'one' → logprob: -3.115912914276123
    6. ' one' → logprob: -3.240912914276123
    7. 'None' → logprob: -3.865912914276123
    8. '4' → logprob: -3.990912914276123
    9. ' hero' → logprob: -4.365912914276123
    10. ' H' → logprob: -4.365912914276123

Token 668: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5450752377510071
    2. '       ' → logprob: -1.0450751781463623
    3. '<|end|>' → logprob: -3.2950751781463623
    4. '   ' → logprob: -4.920075416564941
    5. '        
' → logprob: -5.295075416564941
    6. 'for' → logprob: -5.670075416564941
    7. ',' → logprob: -5.670075416564941
    8. ' for' → logprob: -6.295075416564941
    9. '<|end|>' → logprob: -6.670075416564941
    10. ')' → logprob: -6.670075416564941

Token 669: 'NC' (ID: 14842)
  Prédit: ' NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NC' → logprob: -0.3741738498210907
    2. 'NC' → logprob: -2.499173879623413
    3. ' W' → logprob: -2.999173879623413
    4. ' 
' → logprob: -3.374173879623413
    5. 'W' → logprob: -3.749173879623413
    6. '    ' → logprob: -3.874173879623413
    7. '       ' → logprob: -4.499173641204834
    8. ' N' → logprob: -4.624173641204834
    9. ' ' → logprob: -4.624173641204834
    10. ' NM' → logprob: -4.874173641204834

Token 670: ',N' (ID: 49539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2815503776073456
    2. '   ' → logprob: -2.031550407409668
    3. ',' → logprob: -3.406550407409668
    4. '        
' → logprob: -4.031550407409668
    5. '
' → logprob: -4.281550407409668
    6. 'for' → logprob: -4.781550407409668
    7. ')' → logprob: -5.031550407409668
    8. ' for' → logprob: -5.906550407409668
    9. ' =' → logprob: -5.906550407409668
    10. ' ' → logprob: -5.906550407409668

Token 671: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0005909211467951536
    2. '=' → logprob: -7.875590801239014
    3. '   ' → logprob: -10.125591278076172
    4. 'NM' → logprob: -10.250591278076172
    5. '0' → logprob: -11.250591278076172
    6. ' M' → logprob: -11.500591278076172
    7. '1' → logprob: -11.500591278076172
    8. '#' → logprob: -11.625591278076172
    9. ' =' → logprob: -11.875591278076172
    10. 'um' → logprob: -12.000591278076172

Token 672: ' parties' (ID: 13531)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23284636437892914
    2. 'for' → logprob: -2.107846260070801
    3. ' for' → logprob: -2.482846260070801
    4. '
' → logprob: -6.607846260070801
    5. '        
' → logprob: -8.2328462600708
    6. 'import' → logprob: -8.3578462600708
    7. '   ' → logprob: -8.3578462600708
    8. '```' → logprob: -8.4828462600708
    9. '<|end|>' → logprob: -9.4828462600708
    10. 'from' → logprob: -9.4828462600708

Token 673: ' can' (ID: 665)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6041861176490784
    2. '       ' → logprob: -1.1041860580444336
    3. 'for' → logprob: -2.2291860580444336
    4. '
' → logprob: -4.854186058044434
    5. '   ' → logprob: -5.479186058044434
    6. 'import' → logprob: -7.354186058044434
    7. '        
' → logprob: -7.479186058044434
    8. '```' → logprob: -8.229186058044434
    9. ' ' → logprob: -8.354186058044434
    10. 'from' → logprob: -8.729186058044434

Token 674: ' lack' (ID: 11728)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.023052465170621872
    2. 'be' → logprob: -5.27305269241333
    3. '       ' → logprob: -5.52305269241333
    4. ' have' → logprob: -5.64805269241333
    5. '   ' → logprob: -6.52305269241333
    6. 'particip' → logprob: -6.64805269241333
    7. ' not' → logprob: -6.89805269241333
    8. ' present' → logprob: -7.02305269241333
    9. ' include' → logprob: -7.64805269241333
    10. 'not' → logprob: -7.64805269241333

Token 675: ' them' (ID: 1373)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5377069711685181
    2. '       ' → logprob: -1.162706971168518
    3. 'for' → logprob: -2.7877068519592285
    4. '
' → logprob: -3.5377068519592285
    5. '        
' → logprob: -4.9127068519592285
    6. '   ' → logprob: -5.6627068519592285
    7. '    
' → logprob: -7.5377068519592285
    8. ' 
' → logprob: -8.162707328796387
    9. ' ' → logprob: -8.537707328796387
    10. '        ' → logprob: -8.912707328796387

Token 676: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005413165781646967
    2. ' for' → logprob: -5.880413055419922
    3. 'for' → logprob: -6.255413055419922
    4. '
' → logprob: -7.755413055419922
    5. '   ' → logprob: -9.005413055419922
    6. '        
' → logprob: -10.130413055419922
    7. 'from' → logprob: -10.130413055419922
    8. 'import' → logprob: -10.505413055419922
    9. ' ' → logprob: -11.380413055419922
    10. ' from' → logprob: -12.505413055419922

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2989930510520935
    2. ' for' → logprob: -2.0489931106567383
    3. 'for' → logprob: -2.7989931106567383
    4. '        
' → logprob: -3.1739931106567383
    5. ' 
' → logprob: -4.423993110656738
    6. '   ' → logprob: -5.173993110656738
    7. '
' → logprob: -6.048993110656738
    8. '    
' → logprob: -6.173993110656738
    9. ' ' → logprob: -6.548993110656738
    10. '        ' → logprob: -7.548993110656738

Token 678: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03854126110672951
    2. ' for' → logprob: -4.163541316986084
    3. '
' → logprob: -4.288541316986084
    4. 'for' → logprob: -5.288541316986084
    5. '        
' → logprob: -6.038541316986084
    6. '   ' → logprob: -7.538541316986084
    7. '<|end|>' → logprob: -8.913540840148926
    8. '    
' → logprob: -9.538540840148926
    9. 'from' → logprob: -9.788540840148926
    10. ',' → logprob: -9.913540840148926

Token 679: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6703060865402222
    2. '       ' → logprob: -1.4203060865402222
    3. ' for' → logprob: -1.4203060865402222
    4. 'from' → logprob: -5.670306205749512
    5. '   ' → logprob: -7.295306205749512
    6. ' from' → logprob: -7.670306205749512
    7. '
' → logprob: -8.170306205749512
    8. 'import' → logprob: -8.795306205749512
    9. '        
' → logprob: -9.670306205749512
    10. ' ' → logprob: -10.920306205749512

Token 680: '6' (ID: 21)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011753206141293049
    2. 'from' → logprob: -4.636753082275391
    3. '#' → logprob: -7.636753082275391
    4. 'hero' → logprob: -7.761753082275391
    5. 'max' → logprob: -8.26175308227539
    6. 'used' → logprob: -8.38675308227539
    7. ' for' → logprob: -8.76175308227539
    8. 'possible' → logprob: -9.63675308227539
    9. 'import' → logprob: -9.76175308227539
    10. 'H' → logprob: -9.76175308227539

Token 681: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27328717708587646
    2. '   ' → logprob: -2.148287296295166
    3. ')' → logprob: -2.398287296295166
    4. '
' → logprob: -5.273287296295166
    5. '        ' → logprob: -5.398287296295166
    6. '    ' → logprob: -5.523287296295166
    7. ':' → logprob: -5.523287296295166
    8. ' ' → logprob: -6.023287296295166
    9. '        
' → logprob: -6.148287296295166
    10. ' =' → logprob: -6.773287296295166

Token 682: ' party' (ID: 7362)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6025791168212891
    2. 'for' → logprob: -2.102579116821289
    3. 'used' → logprob: -2.102579116821289
    4. ' used' → logprob: -3.352579116821289
    5. 'max' → logprob: -3.477579116821289
    6. 'total' → logprob: -4.352579116821289
    7. 'allowed' → logprob: -4.477579116821289
    8. ' for' → logprob: -4.602579116821289
    9. 'part' → logprob: -4.727579116821289
    10. ' #' → logprob: -4.852579116821289

Token 683: ' without' (ID: 2935)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5572031736373901
    2. '_count' → logprob: -1.8072031736373901
    3. '_members' → logprob: -2.4322032928466797
    4. '_size' → logprob: -2.5572032928466797
    5. '_can' → logprob: -4.43220329284668
    6. '_m' → logprob: -4.93220329284668
    7. '_ids' → logprob: -4.93220329284668
    8. '_has' → logprob: -5.05720329284668
    9. 'must' → logprob: -5.18220329284668
    10. 'members' → logprob: -5.30720329284668

Token 684: ' cler' (ID: 91536)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.0549459308385849
    2. 'war' → logprob: -3.054945945739746
    3. ' ' → logprob: -5.929945945739746
    4. '   ' → logprob: -6.429945945739746
    5. ' war' → logprob: -7.679945945739746
    6. ' a' → logprob: -7.929945945739746
    7. ' ' → logprob: -8.429945945739746
    8. ' hero' → logprob: -8.554945945739746
    9. '  ' → logprob: -9.304945945739746
    10. ' wizard' → logprob: -9.429945945739746

Token 685: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00016659092216286808
    2. 'ics' → logprob: -8.875166893005371
    3. '       ' → logprob: -11.000166893005371
    4. '   ' → logprob: -12.750166893005371
    5. ')' → logprob: -13.750166893005371
    6. '        ' → logprob: -13.875166893005371
    7. '           ' → logprob: -14.000166893005371
    8. 'ical' → logprob: -14.500166893005371
    9. '    ' → logprob: -14.625166893005371
    10. ' ' → logprob: -14.750166893005371

Token 686: ' should' (ID: 1757)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.65708988904953
    2. ' and' → logprob: -2.032089948654175
    3. ',' → logprob: -2.407089948654175
    4. ' =' → logprob: -2.532089948654175
    5. ' ,' → logprob: -2.907089948654175
    6. '=' → logprob: -3.907089948654175
    7. ' ==' → logprob: -4.032089710235596
    8. ' ' → logprob: -4.157089710235596
    9. ' if' → logprob: -4.407089710235596
    10. ' is' → logprob: -4.407089710235596

Token 687: ' have' (ID: 679)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4331965446472168
    2. 'not' → logprob: -1.9331965446472168
    3. ' have' → logprob: -2.183196544647217
    4. 'have' → logprob: -3.058196544647217
    5. ' be' → logprob: -3.433196544647217
    6. 'be' → logprob: -5.308196544647217
    7. 'n't' → logprob: -5.683196544647217
    8. ' also' → logprob: -5.933196544647217
    9. 'also' → logprob: -7.183196544647217
    10. '_not' → logprob: -7.433196544647217

Token 688: ' warrior' (ID: 76541)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.1299954652786255
    2. 'cler' → logprob: -1.6299954652786255
    3. ' no' → logprob: -1.6299954652786255
    4. 'war' → logprob: -2.754995346069336
    5. ' at' → logprob: -3.254995346069336
    6. ' cler' → logprob: -3.504995346069336
    7. 'a' → logprob: -3.629995346069336
    8. ' warrior' → logprob: -4.129995346069336
    9. 'at' → logprob: -4.379995346069336
    10. 'cl' → logprob: -4.504995346069336

Token 689: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010683808475732803
    2. ' for' → logprob: -5.385684013366699
    3. '
' → logprob: -5.885684013366699
    4. 'for' → logprob: -6.135684013366699
    5. '   ' → logprob: -8.0106840133667
    6. '        
' → logprob: -8.1356840133667
    7. 'from' → logprob: -8.6356840133667
    8. 'import' → logprob: -9.2606840133667
    9. 'def' → logprob: -9.5106840133667
    10. '           ' → logprob: -10.7606840133667

Token 690: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.21219846606254578
    2. ' mage' → logprob: -2.837198495864868
    3. 'not' → logprob: -3.212198495864868
    4. 'hero' → logprob: -3.212198495864868
    5. ' not' → logprob: -4.462198257446289
    6. 'cler' → logprob: -5.212198257446289
    7. 'war' → logprob: -5.462198257446289
    8. 'C' → logprob: -5.587198257446289
    9. 'm' → logprob: -5.587198257446289
    10. '   ' → logprob: -6.087198257446289

Token 691: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06412000209093094
    2. '
' → logprob: -3.064120054244995
    3. '        
' → logprob: -4.564119815826416
    4. '<|end|>' → logprob: -6.314119815826416
    5. ' for' → logprob: -7.064119815826416
    6. 'for' → logprob: -7.439119815826416
    7. '   ' → logprob: -7.939119815826416
    8. '        

' → logprob: -8.939120292663574
    9. '    
' → logprob: -9.064120292663574
    10. ' 
' → logprob: -9.064120292663574

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07262545824050903
    2. '   ' → logprob: -3.3226253986358643
    3. '        
' → logprob: -3.9476253986358643
    4. ' ' → logprob: -5.947625637054443
    5. '_' → logprob: -6.072625637054443
    6. ' 
' → logprob: -6.447625637054443
    7. '        ' → logprob: -6.572625637054443
    8. '    
' → logprob: -6.822625637054443
    9. '    ' → logprob: -7.572625637054443
    10. '  
' → logprob: -7.697625637054443

Token 693: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022180013358592987
    2. '
' → logprob: -4.772180080413818
    3. '        
' → logprob: -5.522180080413818
    4. '<|end|>' → logprob: -5.897180080413818
    5. '   ' → logprob: -6.022180080413818
    6. '#' → logprob: -7.272180080413818
    7. '           ' → logprob: -7.272180080413818
    8. ',' → logprob: -7.397180080413818
    9. '        ' → logprob: -8.02217960357666
    10. ')' → logprob: -8.39717960357666

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00202594674192369
    2. ' for' → logprob: -6.877026081085205
    3. 'for' → logprob: -7.377026081085205
    4. '   ' → logprob: -8.252025604248047
    5. 'import' → logprob: -10.252025604248047
    6. 'from' → logprob: -10.502025604248047
    7. '        
' → logprob: -11.002025604248047
    8. ' ' → logprob: -11.627025604248047
    9. '
' → logprob: -11.877025604248047
    10. '           ' → logprob: -12.752025604248047

Token 695: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6629638075828552
    2. 'for' → logprob: -0.9129638075828552
    3. '       ' → logprob: -3.0379638671875
    4. '   ' → logprob: -3.4129638671875
    5. '        
' → logprob: -7.2879638671875
    6. '
' → logprob: -7.5379638671875
    7. '    
' → logprob: -8.2879638671875
    8. ' 
' → logprob: -8.4129638671875
    9. 'import' → logprob: -8.6629638671875
    10. ' ' → logprob: -9.2879638671875

Token 696: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1356605887413025
    2. ' for' → logprob: -2.1356606483459473
    3. '       ' → logprob: -5.135660648345947
    4. 'from' → logprob: -6.510660648345947
    5. '   ' → logprob: -6.760660648345947
    6. ' from' → logprob: -9.885660171508789
    7. 'import' → logprob: -10.010660171508789
    8. '
' → logprob: -10.010660171508789
    9. ' ' → logprob: -11.885660171508789
    10. '        
' → logprob: -12.635660171508789

Token 697: ' the' (ID: 290)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.39875534176826477
    2. ' len' → logprob: -2.3987553119659424
    3. ' not' → logprob: -2.7737553119659424
    4. 'W' → logprob: -3.3987553119659424
    5. ' ' → logprob: -3.6487553119659424
    6. '#' → logprob: -4.1487555503845215
    7. ' the' → logprob: -4.1487555503845215
    8. '   ' → logprob: -4.2737555503845215
    9. ' NW' → logprob: -4.2737555503845215
    10. ' True' → logprob: -4.6487555503845215

Token 698: ' problem' (ID: 4792)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2445191144943237
    2. ' code' → logprob: -1.2445191144943237
    3. ' #' → logprob: -2.4945192337036133
    4. ' space' → logprob: -2.4945192337036133
    5. '#' → logprob: -3.1195192337036133
    6. ' ' → logprob: -3.6195192337036133
    7. ' next' → logprob: -3.8695192337036133
    8. ' best' → logprob: -4.119519233703613
    9. ' for' → logprob: -4.244519233703613
    10. ' problem' → logprob: -4.244519233703613

Token 699: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2706027030944824
    2. '       ' → logprob: -1.5206027030944824
    3. '<|end|>' → logprob: -2.2706027030944824
    4. ' continues' → logprob: -2.3956027030944824
    5. '   ' → logprob: -2.6456027030944824
    6. ' #' → logprob: -3.0206027030944824
    7. '_' → logprob: -3.7706027030944824
    8. ' can' → logprob: -4.020602703094482
    9. ':' → logprob: -4.020602703094482
    10. '        ' → logprob: -4.270602703094482

Token 700: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.5937826037406921
    2. 'hard' → logprob: -1.843782663345337
    3. ' quite' → logprob: -2.343782663345337
    4. 'quite' → logprob: -3.343782663345337
    5. ' complex' → logprob: -3.468782663345337
    6. 'too' → logprob: -3.593782663345337
    7. 'very' → logprob: -3.718782663345337
    8. ' hard' → logprob: -4.093782424926758
    9. '#' → logprob: -4.218782424926758
    10. 'not' → logprob: -4.718782424926758

Token 701: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19724933803081512
    2. '<|end|>' → logprob: -2.822249412536621
    3. ':' → logprob: -2.947249412536621
    4. ',' → logprob: -3.572249412536621
    5. '        
' → logprob: -4.447249412536621
    6. '   ' → logprob: -4.697249412536621
    7. '<|end|>' → logprob: -5.822249412536621
    8. '        ' → logprob: -6.197249412536621
    9. ' =' → logprob: -7.072249412536621
    10. ' :' → logprob: -7.072249412536621

Token 702: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7518511414527893
    2. ' for' → logprob: -1.0018510818481445
    3. ' continue' → logprob: -2.0018510818481445
    4. 'for' → logprob: -4.8768510818481445
    5. 'continue' → logprob: -5.1268510818481445
    6. '   ' → logprob: -5.5018510818481445
    7. ' #' → logprob: -6.8768510818481445
    8. ' continues' → logprob: -6.8768510818481445
    9. '        
' → logprob: -7.0018510818481445
    10. 'import' → logprob: -7.0018510818481445

Token 703: ' beginner' (ID: 57062)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14609931409358978
    2. '#' → logprob: -2.896099328994751
    3. ' the' → logprob: -3.896099328994751
    4. '   ' → logprob: -4.021099090576172
    5. ' #' → logprob: -5.021099090576172
    6. 'the' → logprob: -5.021099090576172
    7. '...' → logprob: -5.646099090576172
    8. ' ' → logprob: -5.771099090576172
    9. 'import' → logprob: -6.271099090576172
    10. ' for' → logprob: -6.396099090576172

Token 704: ' solution' (ID: 7578)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6652001738548279
    2. '<|end|>' → logprob: -1.5402002334594727
    3. ' ' → logprob: -2.4152002334594727
    4. '<|end|>' → logprob: -3.4152002334594727
    5. ')' → logprob: -3.6652002334594727
    6. ':' → logprob: -3.7902002334594727
    7. '   ' → logprob: -4.165200233459473
    8. '       ' → logprob: -4.290200233459473
    9. ' =' → logprob: -4.290200233459473
    10. ' _' → logprob: -5.040200233459473

Token 705: ' allowed' (ID: 9279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 706: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.275117963552475
    2. ':' → logprob: -1.6501179933547974
    3. '   ' → logprob: -4.025117874145508
    4. ' for' → logprob: -4.900117874145508
    5. ':
' → logprob: -5.150117874145508
    6. ',' → logprob: -5.400117874145508
    7. '        
' → logprob: -5.400117874145508
    8. 'for' → logprob: -6.400117874145508
    9. ' :' → logprob: -6.650117874145508
    10. '<|end|>' → logprob: -6.900117874145508

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000896693323738873
    2. '        
' → logprob: -7.87589693069458
    3. '<|end|>' → logprob: -8.000896453857422
    4. '   ' → logprob: -9.625896453857422
    5. '           ' → logprob: -9.875896453857422
    6. '<|end|>' → logprob: -10.750896453857422
    7. ' for' → logprob: -12.375896453857422
    8. 'import' → logprob: -12.500896453857422
    9. '        ' → logprob: -12.500896453857422
    10. '      ' → logprob: -12.625896453857422

Token 708: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004441035911440849
    2. ' for' → logprob: -5.754441261291504
    3. 'for' → logprob: -7.254441261291504
    4. '   ' → logprob: -8.129441261291504
    5. '        
' → logprob: -9.504441261291504
    6. '           ' → logprob: -10.254441261291504
    7. 'import' → logprob: -10.379441261291504
    8. ' ' → logprob: -10.504441261291504
    9. '        ' → logprob: -11.129441261291504
    10. '
' → logprob: -11.254441261291504

Token 709: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6077777743339539
    2. ' for' → logprob: -0.9827777743339539
    3. 'for' → logprob: -2.6077778339385986
    4. 'import' → logprob: -5.6077775955200195
    5. 'from' → logprob: -6.4827775955200195
    6. ' from' → logprob: -6.7327775955200195
    7. ' import' → logprob: -7.6077775955200195
    8. '   ' → logprob: -8.10777759552002
    9. ' ' → logprob: -9.35777759552002
    10. '
' → logprob: -10.35777759552002

Token 710: ' will' (ID: 738)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.508660614490509
    2. '       ' → logprob: -1.1336605548858643
    3. 'continue' → logprob: -3.2586605548858643
    4. '   ' → logprob: -4.383660793304443
    5. 'import' → logprob: -4.508660793304443
    6. ' can' → logprob: -5.133660793304443
    7. ' for' → logprob: -6.133660793304443
    8. ' import' → logprob: -6.508660793304443
    9. 'for' → logprob: -6.633660793304443
    10. ' will' → logprob: -7.008660793304443

Token 711: ' just' (ID: 1327)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4807828366756439
    2. 'continue' → logprob: -1.3557828664779663
    3. 'import' → logprob: -3.1057827472686768
    4. ' try' → logprob: -3.3557827472686768
    5. ' import' → logprob: -4.230782985687256
    6. ' for' → logprob: -4.730782985687256
    7. ' indent' → logprob: -5.230782985687256
    8. '   ' → logprob: -5.855782985687256
    9. '       ' → logprob: -5.980782985687256
    10. 'generate' → logprob: -6.230782985687256

Token 712: ' generate' (ID: 10419)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6030739545822144
    2. 'import' → logprob: -1.7280739545822144
    3. ' continue' → logprob: -2.103074073791504
    4. ' try' → logprob: -3.103074073791504
    5. 'pass' → logprob: -3.728074073791504
    6. 'try' → logprob: -3.728074073791504
    7. 'generate' → logprob: -4.103074073791504
    8. 'enumer' → logprob: -4.728074073791504
    9. ' for' → logprob: -5.228074073791504
    10. 'for' → logprob: -5.478074073791504

Token 713: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7355208992958069
    2. ' for' → logprob: -1.235520839691162
    3. ' all' → logprob: -2.985520839691162
    4. ')' → logprob: -3.235520839691162
    5. '       ' → logprob: -3.860520839691162
    6. 'part' → logprob: -3.985520839691162
    7. 'possible' → logprob: -4.110520839691162
    8. 'from' → logprob: -4.360520839691162
    9. ' parties' → logprob: -4.610520839691162
    10. '   ' → logprob: -4.985520839691162

Token 714: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3574156761169434
    2. ' possible' → logprob: -2.1074156761169434
    3. ' for' → logprob: -2.1074156761169434
    4. 'possible' → logprob: -2.3574156761169434
    5. '   ' → logprob: -2.6074156761169434
    6. 'heroes' → logprob: -2.7324156761169434
    7. ' h' → logprob: -2.9824156761169434
    8. '       ' → logprob: -3.2324156761169434
    9. 'h' → logprob: -3.3574156761169434
    10. '```' → logprob: -3.3574156761169434

Token 715: ' groups' (ID: 8896)
  Prédit: 'hero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hero' → logprob: -1.197195053100586
    2. 'heroes' → logprob: -1.572195053100586
    3. ' hero' → logprob: -2.072195053100586
    4. ' h' → logprob: -2.197195053100586
    5. '       ' → logprob: -2.947195053100586
    6. 'h' → logprob: -3.447195053100586
    7. '   ' → logprob: -3.447195053100586
    8. ' heroes' → logprob: -3.822195053100586
    9. '_' → logprob: -4.072195053100586
    10. '_h' → logprob: -4.197195053100586

Token 716: ' that' (ID: 484)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.151932954788208
    2. '       ' → logprob: -1.151932954788208
    3. 'for' → logprob: -1.401932954788208
    4. ' for' → logprob: -2.276932954788208
    5. '        
' → logprob: -5.026932716369629
    6. '   ' → logprob: -5.151932716369629
    7. ' 
' → logprob: -6.901932716369629
    8. '    
' → logprob: -7.151932716369629
    9. 'def' → logprob: -8.026932716369629
    10. '```' → logprob: -8.026932716369629

Token 717: ' satisfy' (ID: 35441)
  Prédit: 'include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'include' → logprob: -0.3909755051136017
    2. ' include' → logprob: -1.6409754753112793
    3. 'have' → logprob: -2.8909754753112793
    4. ' can' → logprob: -3.7659754753112793
    5. ' have' → logprob: -3.7659754753112793
    6. 'can' → logprob: -4.265975475311279
    7. '   ' → logprob: -5.265975475311279
    8. 'contain' → logprob: -6.390975475311279
    9. 'could' → logprob: -6.390975475311279
    10. ' could' → logprob: -6.765975475311279

Token 718: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6301445960998535
    2. 'for' → logprob: -1.6301445960998535
    3. ' for' → logprob: -2.7551445960998535
    4. '   ' → logprob: -2.7551445960998535
    5. 'range' → logprob: -3.5051445960998535
    6. '
' → logprob: -3.6301445960998535
    7. ' the' → logprob: -4.0051445960998535
    8. ' range' → logprob: -4.3801445960998535
    9. 'the' → logprob: -4.3801445960998535
    10. '```' → logprob: -4.3801445960998535

Token 719: ' conditions' (ID: 6409)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.4893968105316162
    2. 'constraints' → logprob: -1.4893968105316162
    3. ' conditions' → logprob: -2.864396810531616
    4. 'conditions' → logprob: -4.114397048950195
    5. '       ' → logprob: -4.364397048950195
    6. '_constraints' → logprob: -4.739397048950195
    7. ' get' → logprob: -4.739397048950195
    8. ' code' → logprob: -4.989397048950195
    9. '   ' → logprob: -5.364397048950195
    10. '#' → logprob: -5.364397048950195

Token 720: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13566236197948456
    2. '
' → logprob: -2.760662317276001
    3. ' for' → logprob: -3.260662317276001
    4. 'for' → logprob: -4.13566255569458
    5. '   ' → logprob: -5.51066255569458
    6. '        
' → logprob: -5.88566255569458
    7. ' 
' → logprob: -7.51066255569458
    8. '    
' → logprob: -8.135662078857422
    9. 'import' → logprob: -9.010662078857422
    10. ',' → logprob: -9.010662078857422

Token 721: ' limits' (ID: 22406)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -1.550492763519287
    2. ' duplicates' → logprob: -1.675492763519287
    3. ' om' → logprob: -2.425492763519287
    4. 'om' → logprob: -2.550492763519287
    5. ' skipping' → logprob: -2.675492763519287
    6. 'heroes' → logprob: -3.050492763519287
    7. 'hero' → logprob: -3.175492763519287
    8. ' any' → logprob: -3.425492763519287
    9. 'import' → logprob: -3.925492763519287
    10. 'war' → logprob: -3.925492763519287

Token 722: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06075563654303551
    2. '
' → logprob: -2.935755729675293
    3. '        
' → logprob: -5.560755729675293
    4. ' for' → logprob: -7.310755729675293
    5. 'for' → logprob: -7.310755729675293
    6. '   ' → logprob: -8.685755729675293
    7. '<|end|>' → logprob: -8.685755729675293
    8. '    
' → logprob: -9.185755729675293
    9. ',' → logprob: -10.560755729675293
    10. '           ' → logprob: -10.810755729675293

Token 723: ' NW' (ID: 58124)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8325386643409729
    2. 'the' → logprob: -2.082538604736328
    3. 'size' → logprob: -2.082538604736328
    4. ' size' → logprob: -3.082538604736328
    5. 'number' → logprob: -3.082538604736328
    6. ' the' → logprob: -3.332538604736328
    7. 'party' → logprob: -3.457538604736328
    8. ' number' → logprob: -3.707538604736328
    9. 'sizes' → logprob: -4.207538604736328
    10. 'missing' → logprob: -4.332538604736328

Token 724: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009281758219003677
    2. '        
' → logprob: -5.759281635284424
    3. 'for' → logprob: -6.509281635284424
    4. '
' → logprob: -7.134281635284424
    5. '   ' → logprob: -7.259281635284424
    6. ',' → logprob: -7.384281635284424
    7. '<|end|>' → logprob: -7.759281635284424
    8. ' for' → logprob: -7.884281635284424
    9. ')' → logprob: -8.009282112121582
    10. '        ' → logprob: -8.634282112121582

Token 725: ' NC' (ID: 28895)
  Prédit: 'NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NC' → logprob: -0.0053176009096205235
    2. ' NC' → logprob: -5.255317687988281
    3. 'NM' → logprob: -10.505317687988281
    4. '   ' → logprob: -11.005317687988281
    5. '       ' → logprob: -11.505317687988281
    6. '1' → logprob: -12.005317687988281
    7. 'N' → logprob: -12.380317687988281
    8. 'ND' → logprob: -13.380317687988281
    9. ' ' → logprob: -13.505317687988281
    10. '    ' → logprob: -13.505317687988281

Token 726: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043565988540649414
    2. 'for' → logprob: -4.04356575012207
    3. ' for' → logprob: -4.16856575012207
    4. '        
' → logprob: -5.91856575012207
    5. '   ' → logprob: -6.16856575012207
    6. '
' → logprob: -6.16856575012207
    7. ',' → logprob: -6.91856575012207
    8. '<|end|>' → logprob: -7.16856575012207
    9. '.' → logprob: -8.91856575012207
    10. ' ' → logprob: -9.04356575012207

Token 727: ' NM' (ID: 59722)
  Prédit: 'NM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NM' → logprob: -0.033593833446502686
    2. ' NM' → logprob: -3.6585938930511475
    3. '   ' → logprob: -5.908593654632568
    4. 'NL' → logprob: -6.283593654632568
    5. ' ' → logprob: -6.908593654632568
    6. 'N' → logprob: -7.783593654632568
    7. '  ' → logprob: -8.533594131469727
    8. '     ' → logprob: -9.158594131469727
    9. '       ' → logprob: -9.158594131469727
    10. '    ' → logprob: -9.533594131469727

Token 728: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11343933641910553
    2. '
' → logprob: -2.4884393215179443
    3. ' for' → logprob: -4.363439559936523
    4. 'for' → logprob: -4.613439559936523
    5. '        
' → logprob: -6.863439559936523
    6. '   ' → logprob: -8.238439559936523
    7. '    
' → logprob: -10.113439559936523
    8. 'import' → logprob: -10.113439559936523
    9. ' 
' → logprob: -10.613439559936523
    10. ',' → logprob: -10.988439559936523

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09483082592487335
    2. ' and' → logprob: -2.7198307514190674
    3. ' then' → logprob: -4.8448309898376465
    4. '
' → logprob: -5.0948309898376465
    5. '        
' → logprob: -5.0948309898376465
    6. 'and' → logprob: -6.7198309898376465
    7. '           ' → logprob: -7.2198309898376465
    8. '   ' → logprob: -7.7198309898376465
    9. ',' → logprob: -7.9698309898376465
    10. ' for' → logprob: -8.219830513000488

Token 730: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031996533274650574
    2. ' and' → logprob: -4.406996726989746
    3. ' then' → logprob: -5.281996726989746
    4. '        
' → logprob: -5.406996726989746
    5. '
' → logprob: -5.531996726989746
    6. '   ' → logprob: -5.781996726989746
    7. '           ' → logprob: -7.156996726989746
    8. 'and' → logprob: -7.281996726989746
    9. '    
' → logprob: -8.781996726989746
    10. 'for' → logprob: -8.906996726989746

Token 731: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7098193764686584
    2. 'for' → logprob: -1.0848193168640137
    3. ' for' → logprob: -2.2098193168640137
    4. '
' → logprob: -3.4598193168640137
    5. '        
' → logprob: -4.334819316864014
    6. '   ' → logprob: -4.584819316864014
    7. ' 
' → logprob: -6.709819316864014
    8. '    
' → logprob: -7.209819316864014
    9. '  
' → logprob: -7.209819316864014
    10. ' and' → logprob: -7.459819316864014

Token 732: ' later' (ID: 4849)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7981507778167725
    2. '#' → logprob: -1.6731507778167725
    3. '       ' → logprob: -2.2981507778167725
    4. ' continue' → logprob: -2.4231507778167725
    5. 'count' → logprob: -2.6731507778167725
    6. 'import' → logprob: -3.4231507778167725
    7. 'filter' → logprob: -4.173151016235352
    8. 'from' → logprob: -4.423151016235352
    9. 'for' → logprob: -4.798151016235352
    10. '   ' → logprob: -5.173151016235352

Token 733: ' count' (ID: 3605)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7988747358322144
    2. 'continue' → logprob: -1.2988747358322144
    3. '       ' → logprob: -1.7988747358322144
    4. '#' → logprob: -3.298874855041504
    5. 'count' → logprob: -3.798874855041504
    6. 'filter' → logprob: -4.048874855041504
    7. '
' → logprob: -5.298874855041504
    8. ' filter' → logprob: -5.298874855041504
    9. 'limit' → logprob: -5.923874855041504
    10. '```' → logprob: -6.048874855041504

Token 734: ' how' (ID: 1495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4259103834629059
    2. 'for' → logprob: -1.6759103536605835
    3. '
' → logprob: -2.425910472869873
    4. ' for' → logprob: -2.675910472869873
    5. '   ' → logprob: -7.050910472869873
    6. 'import' → logprob: -7.800910472869873
    7. '        
' → logprob: -7.800910472869873
    8. '```' → logprob: -8.175909996032715
    9. 'from' → logprob: -9.550909996032715
    10. '           ' → logprob: -10.050909996032715

Token 735: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.23726016283035278
    2. ' many' → logprob: -1.612260103225708
    3. 'to' → logprob: -4.987260341644287
    4. ' to' → logprob: -5.362260341644287
    5. '_many' → logprob: -8.737259864807129
    6. 'Many' → logprob: -10.362259864807129
    7. '#' → logprob: -10.987259864807129
    8. '   ' → logprob: -11.112259864807129
    9. '<|end|>' → logprob: -11.112259864807129
    10. '       ' → logprob: -12.862259864807129

Token 736: ' groups' (ID: 8896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.815947949886322
    2. 'for' → logprob: -1.4409480094909668
    3. ' for' → logprob: -1.8159480094909668
    4. '
' → logprob: -2.815948009490967
    5. '   ' → logprob: -3.315948009490967
    6. '        
' → logprob: -4.690948009490967
    7. 'import' → logprob: -4.940948009490967
    8. ' =' → logprob: -5.065948009490967
    9. ' ' → logprob: -5.565948009490967
    10. '        ' → logprob: -5.690948009490967

Token 737: ' can' (ID: 665)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16012153029441833
    2. '       ' → logprob: -2.535121440887451
    3. '        
' → logprob: -3.410121440887451
    4. 'for' → logprob: -4.660121440887451
    5. '  
' → logprob: -5.660121440887451
    6. ' 
' → logprob: -5.785121440887451
    7. '    
' → logprob: -6.035121440887451
    8. '<|end|>' → logprob: -6.035121440887451
    9. '   ' → logprob: -6.160121440887451
    10. '\n' → logprob: -6.285121440887451

Token 738: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.31396692991256714
    2. 'be' → logprob: -1.313966989517212
    3. '```' → logprob: -7.938966751098633
    4. '_be' → logprob: -9.063966751098633
    5. '       ' → logprob: -9.813966751098633
    6. '   ' → logprob: -10.188966751098633
    7. '	be' → logprob: -10.563966751098633
    8. '``' → logprob: -11.438966751098633
    9. 'fit' → logprob: -11.563966751098633
    10. '        ' → logprob: -11.688966751098633

Token 739: ' formed' (ID: 20680)
  Prédit: 'formed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formed' → logprob: -0.38953956961631775
    2. ' formed' → logprob: -1.2645395994186401
    3. '```' → logprob: -3.8895394802093506
    4. 'generated' → logprob: -4.38953971862793
    5. 'built' → logprob: -6.88953971862793
    6. 'form' → logprob: -6.88953971862793
    7. 'used' → logprob: -7.01453971862793
    8. 'added' → logprob: -7.01453971862793
    9. 'selected' → logprob: -7.63953971862793
    10. ' generated' → logprob: -7.76453971862793

Token 740: ' minimizing' (ID: 111215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3482888638973236
    2. '
' → logprob: -1.473288893699646
    3. 'for' → logprob: -2.9732887744903564
    4. ' for' → logprob: -4.3482890129089355
    5. '   ' → logprob: -7.8482890129089355
    6. '        
' → logprob: -8.098288536071777
    7. '```' → logprob: -10.098288536071777
    8. '    
' → logprob: -10.973288536071777
    9. '
' → logprob: -11.348288536071777
    10. ' ' → logprob: -11.473288536071777

Token 741: ' missing' (ID: 12486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9858179688453674
    2. ' ' → logprob: -1.9858179092407227
    3. '        ' → logprob: -2.6108179092407227
    4. '_' → logprob: -2.7358179092407227
    5. ' #' → logprob: -3.2358179092407227
    6. ' for' → logprob: -3.2358179092407227
    7. 'for' → logprob: -3.6108179092407227
    8. '    ' → logprob: -3.6108179092407227
    9. ' _' → logprob: -3.6108179092407227
    10. '   ' → logprob: -3.9858179092407227

Token 742: ' warriors' (ID: 95724)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9258219003677368
    2. 'for' → logprob: -1.0508219003677368
    3. '
' → logprob: -1.8008219003677368
    4. ' for' → logprob: -3.0508217811584473
    5. '        
' → logprob: -4.050821781158447
    6. '   ' → logprob: -4.050821781158447
    7. '    
' → logprob: -6.550821781158447
    8. '\n' → logprob: -6.925821781158447
    9. '  
' → logprob: -7.300821781158447
    10. ' 
' → logprob: -7.800821781158447

Token 743: '/' (ID: 14)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017616571858525276
    2. '
' → logprob: -5.2676167488098145
    3. '        
' → logprob: -5.2676167488098145
    4. 'for' → logprob: -6.1426167488098145
    5. ',' → logprob: -6.7676167488098145
    6. '   ' → logprob: -6.8926167488098145
    7. ')' → logprob: -7.3926167488098145
    8. ' for' → logprob: -7.7676167488098145
    9. '           ' → logprob: -8.142616271972656
    10. '        ' → logprob: -8.392616271972656

Token 744: 'cler' (ID: 55207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21973030269145966
    2. '       ' → logprob: -2.5947303771972656
    3. ' for' → logprob: -2.5947303771972656
    4. '   ' → logprob: -4.094730377197266
    5. '        
' → logprob: -4.469730377197266
    6. '
' → logprob: -5.094730377197266
    7. ' ' → logprob: -6.344730377197266
    8. 'from' → logprob: -6.594730377197266
    9. '    
' → logprob: -6.969730377197266
    10. ' 
' → logprob: -7.094730377197266

Token 745: 'ics' (ID: 1541)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.3492757976055145
    2. 'ics' → logprob: -1.224275827407837
    3. ')' → logprob: -8.224275588989258
    4. '#' → logprob: -9.724275588989258
    5. 'c' → logprob: -9.849275588989258
    6. 's' → logprob: -9.974275588989258
    7. ',' → logprob: -10.224275588989258
    8. '       ' → logprob: -10.349275588989258
    9. ')
' → logprob: -10.599275588989258
    10. 'icts' → logprob: -10.786775588989258

Token 746: '/m' (ID: 5712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13883301615715027
    2. '        
' → logprob: -3.6388330459594727
    3. ' =' → logprob: -3.7638330459594727
    4. '   ' → logprob: -3.8888330459594727
    5. '
' → logprob: -4.388833045959473
    6. '        ' → logprob: -4.638833045959473
    7. '_' → logprob: -5.013833045959473
    8. ':' → logprob: -5.388833045959473
    9. ' ' → logprob: -5.763833045959473
    10. ' 
' → logprob: -6.138833045959473

Token 747: 'ages' (ID: 1461)
  Prédit: 'issing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issing' → logprob: -0.38064107298851013
    2. 'ages' → logprob: -1.2556411027908325
    3. 'age' → logprob: -4.255640983581543
    4. 'mages' → logprob: -5.505640983581543
    5. 'iss' → logprob: -5.880640983581543
    6. 'isses' → logprob: -6.255640983581543
    7. 'embers' → logprob: -6.380640983581543
    8. 'ax' → logprob: -6.880640983581543
    9. 'missing' → logprob: -7.380640983581543
    10. 'agic' → logprob: -7.505640983581543

Token 748: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3392122983932495
    2. '
' → logprob: -1.5892122983932495
    3. ' for' → logprob: -3.214212417602539
    4. 'for' → logprob: -3.339212417602539
    5. '        
' → logprob: -5.214212417602539
    6. '   ' → logprob: -6.964212417602539
    7. '    
' → logprob: -8.339212417602539
    8. ' 
' → logprob: -8.589212417602539
    9. '<|end|>' → logprob: -8.964212417602539
    10. 'def' → logprob: -9.089212417602539

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13282139599323273
    2. ' for' → logprob: -2.5078213214874268
    3. 'for' → logprob: -3.2578213214874268
    4. '
' → logprob: -5.882821559906006
    5. '        
' → logprob: -7.007821559906006
    6. '   ' → logprob: -7.632821559906006
    7. ' 
' → logprob: -9.757821083068848
    8. ' ' → logprob: -10.257821083068848
    9. '    
' → logprob: -10.382821083068848
    10. '        ' → logprob: -10.507821083068848

Token 750: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.878166139125824
    2. 'for' → logprob: -1.3781661987304688
    3. ' for' → logprob: -1.3781661987304688
    4. '
' → logprob: -3.2531661987304688
    5. ' 
' → logprob: -4.253166198730469
    6. '        
' → logprob: -4.503166198730469
    7. '   ' → logprob: -4.753166198730469
    8. '    
' → logprob: -5.628166198730469
    9. '  
' → logprob: -6.628166198730469
    10. '       
' → logprob: -7.628166198730469

Token 751: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3604068458080292
    2. 'for' → logprob: -1.2354068756103516
    3. '       ' → logprob: -4.485406875610352
    4. '
' → logprob: -8.235406875610352
    5. '   ' → logprob: -8.860406875610352
    6. 'from' → logprob: -9.735406875610352
    7. '        
' → logprob: -10.360406875610352
    8. 'import' → logprob: -10.485406875610352
    9. ' from' → logprob: -10.610406875610352
    10. '#' → logprob: -11.860406875610352

Token 752: ' simplicity' (ID: 57516)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1614633947610855
    2. ' h' → logprob: -2.411463499069214
    3. 'w' → logprob: -3.286463499069214
    4. 'hero' → logprob: -4.536463260650635
    5. ' w' → logprob: -4.911463260650635
    6. ' hero' → logprob: -5.661463260650635
    7. 'i' → logprob: -9.536463737487793
    8. 'war' → logprob: -9.973963737487793
    9. ' warrior' → logprob: -10.223963737487793
    10. 'H' → logprob: -10.348963737487793

Token 753: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5946546792984009
    2. ' for' → logprob: -1.0946546792984009
    3. 'for' → logprob: -2.8446545600891113
    4. ':' → logprob: -4.219654560089111
    5. '   ' → logprob: -4.469654560089111
    6. '        
' → logprob: -4.844654560089111
    7. ' =' → logprob: -5.094654560089111
    8. '        ' → logprob: -5.844654560089111
    9. '
' → logprob: -5.844654560089111
    10. ' ' → logprob: -6.469654560089111

Token 754: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4292463958263397
    2. 'for' → logprob: -1.054246425628662
    3. '       ' → logprob: -7.929246425628662
    4. '   ' → logprob: -9.929245948791504
    5. 'import' → logprob: -10.054245948791504
    6. ' hero' → logprob: -10.429245948791504
    7. '```' → logprob: -10.804245948791504
    8. 'hero' → logprob: -11.804245948791504
    9. '        
' → logprob: -12.054245948791504
    10. 'from' → logprob: -12.429245948791504

Token 755: ' only' (ID: 1606)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2285323292016983
    2. ' for' → logprob: -2.353532314300537
    3. ' ' → logprob: -3.103532314300537
    4. 'for' → logprob: -3.728532314300537
    5. ' will' → logprob: -3.978532314300537
    6. 'continue' → logprob: -5.228532314300537
    7. ' can' → logprob: -5.478532314300537
    8. '       ' → logprob: -5.603532314300537
    9. '   ' → logprob: -5.728532314300537
    10. '    ' → logprob: -6.853532314300537

Token 756: ' consider' (ID: 3331)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6303221583366394
    2. ' for' → logprob: -1.0053222179412842
    3. ' =' → logprob: -3.505322217941284
    4. '   ' → logprob: -3.880322217941284
    5. '       ' → logprob: -4.130321979522705
    6. ' ' → logprob: -4.755321979522705
    7. 'import' → logprob: -5.255321979522705
    8. '=' → logprob: -5.380321979522705
    9. 'range' → logprob: -6.130321979522705
    10. '  ' → logprob: -6.505321979522705

Token 757: ' parties' (ID: 13531)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.7035282850265503
    2. 'hero' → logprob: -1.0785282850265503
    3. 'war' → logprob: -2.95352840423584
    4. 'h' → logprob: -3.07852840423584
    5. ' hero' → logprob: -3.45352840423584
    6. ' heroes' → logprob: -4.20352840423584
    7. 'w' → logprob: -4.95352840423584
    8. ' warriors' → logprob: -5.57852840423584
    9. '   ' → logprob: -5.82852840423584
    10. ' h' → logprob: -6.95352840423584

Token 758: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4394991099834442
    2. '       ' → logprob: -1.5644991397857666
    3. '   ' → logprob: -3.0644991397857666
    4. ' for' → logprob: -3.5644991397857666
    5. ' in' → logprob: -4.0644989013671875
    6. '=' → logprob: -4.0644989013671875
    7. 'for' → logprob: -4.3144989013671875
    8. ' with' → logprob: -5.1894989013671875
    9. 'with' → logprob: -5.5644989013671875
    10. 'def' → logprob: -6.0644989013671875

Token 759: ' hero' (ID: 20917)
  Prédit: ' hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hero' → logprob: -0.1663789302110672
    2. ' one' → logprob: -2.916378974914551
    3. 'hero' → logprob: -2.916378974914551
    4. ' heroes' → logprob: -4.541378974914551
    5. ' a' → logprob: -5.166378974914551
    6. ' ' → logprob: -5.166378974914551
    7. 'one' → logprob: -5.291378974914551
    8. ' h' → logprob: -5.291378974914551
    9. 'heroes' → logprob: -5.916378974914551
    10. ' just' → logprob: -6.416378974914551

Token 760: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5667855739593506
    2. ' h' → logprob: -1.9417855739593506
    3. 'for' → logprob: -2.0667855739593506
    4. ' =' → logprob: -2.9417855739593506
    5. '
' → logprob: -3.8167855739593506
    6. ',' → logprob: -4.19178581237793
    7. ' ' → logprob: -4.31678581237793
    8. '_' → logprob: -4.44178581237793
    9. ' 
' → logprob: -5.31678581237793
    10. ' _' → logprob: -5.44178581237793

Token 761: ' optional' (ID: 18297)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.4691948890686035
    2. 'war' → logprob: -1.4691948890686035
    3. ' either' → logprob: -3.0941948890686035
    4. ' optional' → logprob: -3.7191948890686035
    5. ' no' → logprob: -4.0941948890686035
    6. ' (' → logprob: -4.7191948890686035
    7. ' at' → logprob: -4.8441948890686035
    8. ' ' → logprob: -4.9691948890686035
    9. '0' → logprob: -5.2191948890686035
    10. 'optional' → logprob: -5.3441948890686035

Token 762: ' warrior' (ID: 76541)
  Prédit: ' warrior'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.16052661836147308
    2. 'war' → logprob: -1.9105266332626343
    3. ' war' → logprob: -8.785526275634766
    4. ' warriors' → logprob: -10.285526275634766
    5. ' Warrior' → logprob: -10.785526275634766
    6. ' ' → logprob: -10.785526275634766
    7. '```' → logprob: -10.910526275634766
    8. 'warf' → logprob: -11.410526275634766
    9. '   ' → logprob: -11.660526275634766
    10. 'w' → logprob: -11.785526275634766

Token 763: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5837903618812561
    2. '       ' → logprob: -1.4587903022766113
    3. 'for' → logprob: -1.9587903022766113
    4. ',' → logprob: -3.5837903022766113
    5. ':' → logprob: -4.458790302276611
    6. '   ' → logprob: -4.958790302276611
    7. '        
' → logprob: -5.208790302276611
    8. '        ' → logprob: -5.458790302276611
    9. ' in' → logprob: -6.083790302276611
    10. '    ' → logprob: -6.708790302276611

Token 764: ' cler' (ID: 91536)
  Prédit: ' cler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cler' → logprob: -0.2608662247657776
    2. 'cler' → logprob: -1.5108661651611328
    3. ' optional' → logprob: -4.885866165161133
    4. 'optional' → logprob: -7.135866165161133
    5. 'cl' → logprob: -8.885866165161133
    6. ' clerk' → logprob: -9.635866165161133
    7. '       ' → logprob: -10.260866165161133
    8. '   ' → logprob: -10.260866165161133
    9. ' and' → logprob: -10.260866165161133
    10. ' ' → logprob: -10.760866165161133

Token 765: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.650518920039758e-06
    2. 'ics' → logprob: -12.750003814697266
    3. '       ' → logprob: -15.250003814697266
    4. '#' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '
' → logprob: -17.000003814697266
    7. '           ' → logprob: -17.500003814697266
    8. ' ' → logprob: -17.625003814697266
    9. '        ' → logprob: -17.625003814697266
    10. '         ' → logprob: -17.875003814697266

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06277218461036682
    2. ' ,' → logprob: -2.812772274017334
    3. ',
' → logprob: -7.687772274017334
    4. '       ' → logprob: -9.687771797180176
    5. '<|end|>' → logprob: -9.937771797180176
    6. ',w' → logprob: -10.187771797180176
    7. ' and' → logprob: -10.437771797180176
    8. ' ,
' → logprob: -10.437771797180176
    9. ',m' → logprob: -10.687771797180176
    10. 's' → logprob: -11.062771797180176

Token 767: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.6370341777801514
    2. ' mage' → logprob: -0.7620341777801514
    3. 'm' → logprob: -6.0120344161987305
    4. '```' → logprob: -7.7620344161987305
    5. ' ' → logprob: -8.01203441619873
    6. '   ' → logprob: -8.38703441619873
    7. ' m' → logprob: -8.38703441619873
    8. 'mages' → logprob: -8.88703441619873
    9. '
' → logprob: -9.13703441619873
    10. ',' → logprob: -9.38703441619873

Token 768: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04643410071730614
    2. '       ' → logprob: -4.046433925628662
    3. 'for' → logprob: -4.671433925628662
    4. '        
' → logprob: -5.296433925628662
    5. ' for' → logprob: -5.796433925628662
    6. ':' → logprob: -6.046433925628662
    7. '  
' → logprob: -6.671433925628662
    8. '   ' → logprob: -6.796433925628662
    9. ' 
' → logprob: -6.796433925628662
    10. '    
' → logprob: -6.921433925628662

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004986116662621498
    2. '
' → logprob: -6.00498628616333
    3. ' for' → logprob: -6.75498628616333
    4. '        
' → logprob: -7.00498628616333
    5. 'for' → logprob: -8.629985809326172
    6. '<|end|>' → logprob: -9.129985809326172
    7. ',' → logprob: -10.004985809326172
    8. '   ' → logprob: -10.504985809326172
    9. '           ' → logprob: -10.629985809326172
    10. '        ' → logprob: -11.754985809326172

Token 770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005505287554115057
    2. ' for' → logprob: -5.505505084991455
    3. 'for' → logprob: -6.630505084991455
    4. '
' → logprob: -10.005505561828613
    5. '        
' → logprob: -10.255505561828613
    6. '   ' → logprob: -11.505505561828613
    7. 'from' → logprob: -12.380505561828613
    8. ' from' → logprob: -13.005505561828613
    9. 'import' → logprob: -13.255505561828613
    10. '           ' → logprob: -13.505505561828613

Token 771: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07504314929246902
    2. '       ' → logprob: -2.700043201446533
    3. ' for' → logprob: -5.325043201446533
    4. 'from' → logprob: -9.200042724609375
    5. '   ' → logprob: -9.825042724609375
    6. '
' → logprob: -10.200042724609375
    7. '#' → logprob: -12.075042724609375
    8. 'hero' → logprob: -12.075042724609375
    9. 'heroes' → logprob: -12.450042724609375
    10. '```' → logprob: -12.825042724609375

Token 772: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.972610354423523
    2. ' W' → logprob: -1.347610354423523
    3. ' hero' → logprob: -2.4726104736328125
    4. ' not' → logprob: -2.7226104736328125
    5. ' we' → logprob: -3.0976104736328125
    6. 'for' → logprob: -3.7226104736328125
    7. '   ' → logprob: -3.8476104736328125
    8. ' continue' → logprob: -3.9726104736328125
    9. ' range' → logprob: -4.0976104736328125
    10. ' warrior' → logprob: -4.3476104736328125

Token 773: ' cover' (ID: 4321)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.943135142326355
    2. 'continue' → logprob: -1.443135142326355
    3. ' continue' → logprob: -1.943135142326355
    4. ' for' → logprob: -2.1931352615356445
    5. '       ' → logprob: -2.6931352615356445
    6. '   ' → logprob: -4.0681352615356445
    7. 'range' → logprob: -5.1931352615356445
    8. ' range' → logprob: -5.5681352615356445
    9. ' ' → logprob: -5.8181352615356445
    10. '#' → logprob: -5.9431352615356445

Token 774: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3295401334762573
    2. 'all' → logprob: -1.4545401334762573
    3. 'heroes' → logprob: -4.704540252685547
    4. ' hero' → logprob: -5.079540252685547
    5. ' heroes' → logprob: -5.079540252685547
    6. ' the' → logprob: -5.204540252685547
    7. 'hero' → logprob: -5.704540252685547
    8. '       ' → logprob: -5.829540252685547
    9. ' ' → logprob: -5.954540252685547
    10. 'the' → logprob: -6.329540252685547

Token 775: ' tricky' (ID: 53009)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8452774286270142
    2. ' rest' → logprob: -1.7202774286270142
    3. 'range' → logprob: -2.2202773094177246
    4. ' full' → logprob: -2.5952773094177246
    5. ' best' → logprob: -3.2202773094177246
    6. ' possible' → logprob: -3.3452773094177246
    7. ' ' → logprob: -3.9702773094177246
    8. 'rest' → logprob: -4.095277309417725
    9. 'possible' → logprob: -4.095277309417725
    10. '```' → logprob: -4.595277309417725

Token 776: ' rules' (ID: 9607)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.6464975476264954
    2. ' cases' → logprob: -1.5214974880218506
    3. ' parts' → logprob: -2.2714974880218506
    4. ' part' → logprob: -2.5214974880218506
    5. 'case' → logprob: -4.02149772644043
    6. '       ' → logprob: -4.39649772644043
    7. '#' → logprob: -5.27149772644043
    8. 'cases' → logprob: -5.27149772644043
    9. ' condition' → logprob: -5.52149772644043
    10. 'part' → logprob: -5.77149772644043

Token 777: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11700595915317535
    2. ',' → logprob: -2.8670060634613037
    3. ' for' → logprob: -3.3670060634613037
    4. ':' → logprob: -5.242005825042725
    5. 'for' → logprob: -5.242005825042725
    6. ':
' → logprob: -6.242005825042725
    7. ',
' → logprob: -6.492005825042725
    8. '
' → logprob: -6.617005825042725
    9. '        
' → logprob: -6.617005825042725
    10. '   ' → logprob: -6.867005825042725

Token 778: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17054392397403717
    2. 'for' → logprob: -2.045543909072876
    3. '       ' → logprob: -4.045544147491455
    4. ' continue' → logprob: -4.795544147491455
    5. 'continue' → logprob: -6.920544147491455
    6. '
' → logprob: -8.045543670654297
    7. '   ' → logprob: -8.670543670654297
    8. 'import' → logprob: -9.420543670654297
    9. '        
' → logprob: -10.545543670654297
    10. '           ' → logprob: -10.670543670654297

Token 779: ' consider' (ID: 3331)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2012934535741806
    2. 'continue' → logprob: -1.8262934684753418
    3. '       ' → logprob: -5.076293468475342
    4. ' for' → logprob: -5.451293468475342
    5. 'for' → logprob: -5.576293468475342
    6. '   ' → logprob: -6.451293468475342
    7. 'import' → logprob: -6.576293468475342
    8. ' need' → logprob: -6.576293468475342
    9. '           ' → logprob: -7.701293468475342
    10. ' will' → logprob: -7.826293468475342

Token 780: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4386537969112396
    2. ' hero' → logprob: -1.813653826713562
    3. '   ' → logprob: -3.5636537075042725
    4. ' warrior' → logprob: -3.6886537075042725
    5. 'all' → logprob: -3.8136537075042725
    6. ' heroes' → logprob: -4.063653945922852
    7. ' warriors' → logprob: -4.063653945922852
    8. ' w' → logprob: -4.563653945922852
    9. '       ' → logprob: -4.563653945922852
    10. ' for' → logprob: -4.688653945922852

Token 781: ' combos' (ID: 150243)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.1475721150636673
    2. ' for' → logprob: -2.6475720405578613
    3. 'h' → logprob: -3.3975720405578613
    4. 'for' → logprob: -4.272572040557861
    5. ' possible' → logprob: -5.522572040557861
    6. '   ' → logprob: -5.647572040557861
    7. '```' → logprob: -5.647572040557861
    8. ' range' → logprob: -6.022572040557861
    9. ' hero' → logprob: -7.022572040557861
    10. '       ' → logprob: -7.147572040557861

Token 782: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02190072275698185
    2. ' for' → logprob: -4.521900653839111
    3. '
' → logprob: -5.146900653839111
    4. 'for' → logprob: -5.521900653839111
    5. '   ' → logprob: -8.02190113067627
    6. '        
' → logprob: -8.52190113067627
    7. '           ' → logprob: -8.77190113067627
    8. ':' → logprob: -9.64690113067627
    9. '```' → logprob: -9.89690113067627
    10. ',' → logprob: -10.27190113067627

Token 783: ' filter' (ID: 6690)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.7002025246620178
    2. 'continue' → logprob: -2.450202465057373
    3. ' append' → logprob: -2.825202465057373
    4. 'for' → logprob: -2.950202465057373
    5. ' continue' → logprob: -2.950202465057373
    6. ' check' → logprob: -2.950202465057373
    7. 'check' → logprob: -3.200202465057373
    8. '       ' → logprob: -3.825202465057373
    9. ' for' → logprob: -3.950202465057373
    10. 'validate' → logprob: -4.075202465057373

Token 784: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17115990817546844
    2. ' for' → logprob: -2.1711599826812744
    3. 'for' → logprob: -3.7961599826812744
    4. '   ' → logprob: -4.796159744262695
    5. ':' → logprob: -5.796159744262695
    6. '        
' → logprob: -5.796159744262695
    7. '
' → logprob: -6.046159744262695
    8. ',' → logprob: -7.546159744262695
    9. '```' → logprob: -7.921159744262695
    10. '        ' → logprob: -7.921159744262695

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017834873870015144
    2. ' for' → logprob: -4.392834663391113
    3. 'for' → logprob: -5.267834663391113
    4. '
' → logprob: -9.642834663391113
    5. '        
' → logprob: -10.142834663391113
    6. '   ' → logprob: -10.767834663391113
    7. 'from' → logprob: -11.642834663391113
    8. 'import' → logprob: -12.392834663391113
    9. '           ' → logprob: -12.517834663391113
    10. ' from' → logprob: -12.517834663391113

Token 786: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05203523486852646
    2. ' for' → logprob: -3.302035331726074
    3. '       ' → logprob: -4.302035331726074
    4. 'from' → logprob: -8.302035331726074
    5. '   ' → logprob: -9.927035331726074
    6. '
' → logprob: -10.427035331726074
    7. ' from' → logprob: -12.052035331726074
    8. 'hero' → logprob: -12.427035331726074
    9. '        
' → logprob: -12.552035331726074
    10. 'import' → logprob: -12.927035331726074

Token 787: ' Because' (ID: 13602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05640237033367157
    2. ' for' → logprob: -3.0564024448394775
    3. '       ' → logprob: -5.056402206420898
    4. 'from' → logprob: -6.681402206420898
    5. '   ' → logprob: -9.556402206420898
    6. ' from' → logprob: -10.056402206420898
    7. 'hero' → logprob: -11.306402206420898
    8. 'heroes' → logprob: -11.431402206420898
    9. 'import' → logprob: -12.181402206420898
    10. '```' → logprob: -12.681402206420898

Token 788: ' IDs' (ID: 58321)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.26252806186676025
    2. 'H' → logprob: -2.3875279426574707
    3. ' W' → logprob: -2.6375279426574707
    4. ' len' → logprob: -3.8875279426574707
    5. ' hero' → logprob: -4.637527942657471
    6. ' for' → logprob: -4.762527942657471
    7. ' h' → logprob: -5.387527942657471
    8. 'W' → logprob: -5.512527942657471
    9. ' range' → logprob: -5.637527942657471
    10. ' ' → logprob: -5.637527942657471

Token 789: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5391594767570496
    2. ' in' → logprob: -2.0391595363616943
    3. ' are' → logprob: -3.0391595363616943
    4. ' <=' → logprob: -3.2891595363616943
    5. ' ' → logprob: -3.5391595363616943
    6. '=' → logprob: -3.7891595363616943
    7. '_' → logprob: -4.164159297943115
    8. ')' → logprob: -4.164159297943115
    9. '   ' → logprob: -4.289159297943115
    10. ':' → logprob: -4.539159297943115

Token 790: ' heroes' (ID: 46540)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.2426062375307083
    2. ' heroes' → logprob: -1.617606282234192
    3. 'war' → logprob: -5.367606163024902
    4. 'hero' → logprob: -5.492606163024902
    5. 'part' → logprob: -6.242606163024902
    6. ' warriors' → logprob: -6.867606163024902
    7. ' hero' → logprob: -7.117606163024902
    8. ' parties' → logprob: -7.242606163024902
    9. '#' → logprob: -7.492606163024902
    10. 'the' → logprob: -7.492606163024902

Token 791: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.230210542678833
    2. ',' → logprob: -1.855210542678833
    3. ' are' → logprob: -4.855210304260254
    4. ')' → logprob: -5.230210304260254
    5. ' =' → logprob: -5.355210304260254
    6. ' and' → logprob: -5.355210304260254
    7. '_' → logprob: -5.605210304260254
    8. ' ' → logprob: -5.855210304260254
    9. '<|end|>' → logprob: -5.980210304260254
    10. ':' → logprob: -6.105210304260254

Token 792: ' warriors' (ID: 95724)
  Prédit: ' warriors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warriors' → logprob: -0.17325493693351746
    2. 'war' → logprob: -2.42325496673584
    3. ' W' → logprob: -3.92325496673584
    4. 'W' → logprob: -3.92325496673584
    5. ',' → logprob: -4.92325496673584
    6. ')' → logprob: -5.67325496673584
    7. ' ,' → logprob: -5.79825496673584
    8. ' war' → logprob: -6.29825496673584
    9. 'w' → logprob: -6.29825496673584
    10. 'heroes' → logprob: -6.42325496673584

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08297139406204224
    2. ' ,' → logprob: -2.7079713344573975
    3. ')' → logprob: -5.457971572875977
    4. '<|end|>' → logprob: -6.207971572875977
    5. ',
' → logprob: -6.707971572875977
    6. ' are' → logprob: -6.832971572875977
    7. ' =' → logprob: -7.207971572875977
    8. '       ' → logprob: -7.457971572875977
    9. '),' → logprob: -7.707971572875977
    10. '   ' → logprob: -7.832971572875977

Token 794: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.3191484808921814
    2. ' cler' → logprob: -1.6941485404968262
    3. ',' → logprob: -2.819148540496826
    4. ' and' → logprob: -4.944148540496826
    5. 'C' → logprob: -5.069148540496826
    6. 'cl' → logprob: -5.694148540496826
    7. 'and' → logprob: -6.194148540496826
    8. ')' → logprob: -6.444148540496826
    9. ' C' → logprob: -6.819148540496826
    10. '   ' → logprob: -6.819148540496826

Token 795: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.08237062394618988
    2. 'ic' → logprob: -2.7073705196380615
    3. 's' → logprob: -4.832370758056641
    4. '_' → logprob: -6.832370758056641
    5. '   ' → logprob: -7.332370758056641
    6. 'cs' → logprob: -7.457370758056641
    7. '```' → logprob: -7.707370758056641
    8. '       ' → logprob: -7.832370758056641
    9. ' ' → logprob: -8.83237075805664
    10. 'es' → logprob: -8.95737075805664

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06316405534744263
    2. ' =' → logprob: -3.313163995742798
    3. ')' → logprob: -4.813164234161377
    4. ' ,' → logprob: -4.813164234161377
    5. '=' → logprob: -6.063164234161377
    6. '<|end|>' → logprob: -6.063164234161377
    7. '   ' → logprob: -7.563164234161377
    8. ' and' → logprob: -7.688164234161377
    9. '),' → logprob: -7.688164234161377
    10. '):' → logprob: -7.938164234161377

Token 797: ' m' (ID: 284)
  Prédit: 'mages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mages' → logprob: -0.09666238725185394
    2. 'm' → logprob: -2.9716622829437256
    3. ' m' → logprob: -4.596662521362305
    4. ' and' → logprob: -4.596662521362305
    5. '#' → logprob: -5.596662521362305
    6. 'and' → logprob: -5.721662521362305
    7. 'mage' → logprob: -5.721662521362305
    8. ',' → logprob: -6.221662521362305
    9. ')' → logprob: -6.346662521362305
    10. '<|end|>' → logprob: -6.471662521362305

Token 798: 'ages' (ID: 1461)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.9840633869171143
    2. 'e' → logprob: -1.3590633869171143
    3. '=' → logprob: -2.1090633869171143
    4. ',' → logprob: -2.3590633869171143
    5. '_' → logprob: -2.8590633869171143
    6. 'W' → logprob: -3.7340633869171143
    7. 'er' → logprob: -4.109063148498535
    8. ' =' → logprob: -4.609063148498535
    9. ')' → logprob: -4.734063148498535
    10. '   ' → logprob: -4.984063148498535

Token 799: ' start' (ID: 1604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4276309013366699
    2. ' in' → logprob: -1.80263090133667
    3. ')' → logprob: -3.17763090133667
    4. ' are' → logprob: -3.17763090133667
    5. ':' → logprob: -3.30263090133667
    6. ',' → logprob: -3.80263090133667
    7. '=' → logprob: -4.55263090133667
    8. ' range' → logprob: -5.17763090133667
    9. '):' → logprob: -5.42763090133667
    10. 'range' → logprob: -5.80263090133667

Token 800: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9851734042167664
    2. 'from' → logprob: -1.2351734638214111
    3. ' from' → logprob: -1.3601734638214111
    4. ' at' → logprob: -2.860173463821411
    5. ' =' → logprob: -3.985173463821411
    6. 'at' → logprob: -6.235173225402832
    7. '_from' → logprob: -7.610173225402832
    8. '_' → logprob: -8.360173225402832
    9. 'with' → logprob: -8.485173225402832
    10. '   ' → logprob: -8.610173225402832

Token 801: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045965831726789474
    2. '1' → logprob: -3.7959659099578857
    3. ' ' → logprob: -3.7959659099578857
    4. '```' → logprob: -13.920966148376465
    5. ' ' → logprob: -14.420966148376465
    6. ' zero' → logprob: -14.608466148376465
    7. '=' → logprob: -15.983466148376465
    8. '`' → logprob: -16.29596519470215
    9. ' =' → logprob: -16.35846519470215
    10. ')' → logprob: -16.54596519470215

Token 802: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06995032727718353
    2. '1' → logprob: -2.6949503421783447
    3. ' ' → logprob: -11.444950103759766
    4. 'zero' → logprob: -14.069950103759766
    5. '```' → logprob: -14.194950103759766
    6. '=' → logprob: -15.319950103759766
    7. '#' → logprob: -15.632450103759766
    8. '2' → logprob: -15.694950103759766
    9. '-' → logprob: -16.319950103759766
    10. 'h' → logprob: -16.444950103759766

Token 803: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0736626386642456
    2. '):' → logprob: -2.823662757873535
    3. ',' → logprob: -5.323662757873535
    4. ' :' → logprob: -6.323662757873535
    5. ')' → logprob: -6.448662757873535
    6. 'for' → logprob: -7.698662757873535
    7. '   ' → logprob: -7.698662757873535
    8. ' ):' → logprob: -7.823662757873535
    9. '       ' → logprob: -8.073662757873535
    10. ' for' → logprob: -8.073662757873535

Token 804: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4985266327857971
    2. ' for' → logprob: -1.4985265731811523
    3. ':' → logprob: -3.2485265731811523
    4. ' ' → logprob: -3.8735265731811523
    5. 'for' → logprob: -3.9985265731811523
    6. '   ' → logprob: -4.373526573181152
    7. ')' → logprob: -4.373526573181152
    8. ' h' → logprob: -4.373526573181152
    9. ' 
' → logprob: -4.498526573181152
    10. ' :' → logprob: -4.998526573181152

Token 805: ' indices' (ID: 30378)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1900101751089096
    2. 'H' → logprob: -3.3150100708007812
    3. ' range' → logprob: -3.4400100708007812
    4. '#' → logprob: -4.315010070800781
    5. 'hero' → logprob: -4.315010070800781
    6. 'heroes' → logprob: -4.440010070800781
    7. 'for' → logprob: -4.815010070800781
    8. ' hero' → logprob: -5.065010070800781
    9. ' heroes' → logprob: -5.190010070800781
    10. '```' → logprob: -5.440010070800781

Token 806: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10454422235488892
    2. ' are' → logprob: -3.104544162750244
    3. '=' → logprob: -3.229544162750244
    4. ' in' → logprob: -4.854544162750244
    5. ' +=' → logprob: -5.604544162750244
    6. '<|end|>' → logprob: -6.729544162750244
    7. 'are' → logprob: -7.979544162750244
    8. ')' → logprob: -8.104544639587402
    9. 'in' → logprob: -8.229544639587402
    10. ' ' → logprob: -8.854544639587402

Token 807: ' lists' (ID: 19471)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09051229804754257
    2. ' range' → logprob: -2.465512275695801
    3. ' code' → logprob: -7.715512275695801
    4. 'code' → logprob: -7.965512275695801
    5. 'ranges' → logprob: -7.965512275695801
    6. 'the' → logprob: -8.7155122756958
    7. 'part' → logprob: -9.2155122756958
    8. ' the' → logprob: -10.5905122756958
    9. '```' → logprob: -10.5905122756958
    10. ' ranges' → logprob: -10.7155122756958

Token 808: ' start' (ID: 1604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25639796257019043
    2. ' are' → logprob: -2.5063979625701904
    3. ' in' → logprob: -2.8813979625701904
    4. '=' → logprob: -3.3813979625701904
    5. ':' → logprob: -4.0063982009887695
    6. '+' → logprob: -4.6313982009887695
    7. ' +=' → logprob: -4.8813982009887695
    8. ' +' → logprob: -5.1313982009887695
    9. ')' → logprob: -6.0063982009887695
    10. '):' → logprob: -6.3813982009887695

Token 809: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00034142236108891666
    2. 'from' → logprob: -8.875341415405273
    3. ' =' → logprob: -9.750341415405273
    4. '0' → logprob: -9.875341415405273
    5. '_' → logprob: -10.625341415405273
    6. '=[]' → logprob: -10.625341415405273
    7. '+=' → logprob: -11.375341415405273
    8. '[' → logprob: -12.250341415405273
    9. '_=' → logprob: -12.250341415405273
    10. '```' → logprob: -12.875341415405273

Token 810: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'zero' → logprob: -16.000001907348633
    4. ' zero' → logprob: -16.750001907348633
    5. 'def' → logprob: -19.375001907348633
    6. '```' → logprob: -19.375001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '۰' → logprob: -20.875001907348633
    9. '1' → logprob: -21.000001907348633
    10. '０' → logprob: -22.375001907348633

Token 811: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. ' zero' → logprob: -18.87501335144043
    4. 'zero' → logprob: -19.50001335144043
    5. '```' → logprob: -20.12501335144043
    6. '   ' → logprob: -20.37501335144043
    7. '۰' → logprob: -20.50001335144043
    8. 'def' → logprob: -20.87501335144043
    9. '=' → logprob: -21.62501335144043
    10. '1' → logprob: -22.00001335144043

Token 812: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08644866198301315
    2. '       ' → logprob: -3.9614486694335938
    3. '   ' → logprob: -4.336448669433594
    4. ',' → logprob: -4.336448669433594
    5. '):' → logprob: -4.461448669433594
    6. ')' → logprob: -4.586448669433594
    7. ':
' → logprob: -5.336448669433594
    8. '[' → logprob: -6.211448669433594
    9. '
' → logprob: -6.586448669433594
    10. ' 
' → logprob: -7.086448669433594

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007736531086266041
    2. ':' → logprob: -5.757736682891846
    3. '   ' → logprob: -7.132736682891846
    4. '<|end|>' → logprob: -7.257736682891846
    5. '        
' → logprob: -7.507736682891846
    6. ',' → logprob: -7.632736682891846
    7. '           ' → logprob: -7.632736682891846
    8. ')' → logprob: -8.132736206054688
    9. '        ' → logprob: -9.007736206054688
    10. ' ' → logprob: -9.132736206054688

Token 814: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19578061997890472
    2. ':' → logprob: -2.5707805156707764
    3. ' ' → logprob: -3.1957805156707764
    4. '   ' → logprob: -3.5707805156707764
    5. ' :' → logprob: -4.6957807540893555
    6. ')' → logprob: -5.6957807540893555
    7. '    ' → logprob: -5.6957807540893555
    8. '        ' → logprob: -5.8207807540893555
    9. ' for' → logprob: -6.3207807540893555
    10. '<|end|>' → logprob: -6.3207807540893555

Token 815: ' pay' (ID: 2777)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2681680917739868
    2. 'for' → logprob: -1.8931680917739868
    3. '       ' → logprob: -2.6431679725646973
    4. '   ' → logprob: -4.893167972564697
    5. ' 
' → logprob: -6.393167972564697
    6. ' ' → logprob: -7.018167972564697
    7. '
' → logprob: -7.268167972564697
    8. '    ' → logprob: -7.393167972564697
    9. '        
' → logprob: -7.893167972564697
    10. '        ' → logprob: -8.268168449401855

Token 816: ' attention' (ID: 8684)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1309317350387573
    2. 'def' → logprob: -1.5059317350387573
    3. ':' → logprob: -1.7559317350387573
    4. '       ' → logprob: -2.505931854248047
    5. 'ing' → logprob: -2.630931854248047
    6. 'space' → logprob: -3.755931854248047
    7. ' ' → logprob: -4.130931854248047
    8. '(' → logprob: -4.505931854248047
    9. '_' → logprob: -4.755931854248047
    10. 'ed' → logprob: -4.755931854248047

Token 817: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11096228659152985
    2. '   ' → logprob: -2.860962390899658
    3. ' for' → logprob: -3.860962390899658
    4. ' to' → logprob: -4.860962390899658
    5. ':' → logprob: -5.360962390899658
    6. '
' → logprob: -5.360962390899658
    7. '        
' → logprob: -5.985962390899658
    8. ' 
' → logprob: -6.485962390899658
    9. 'for' → logprob: -6.485962390899658
    10. '\n' → logprob: -6.985962390899658

Token 818: ' indexing' (ID: 105989)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30524078011512756
    2. ' ' → logprob: -2.3052408695220947
    3. ' range' → logprob: -2.5552408695220947
    4. '1' → logprob: -2.6802408695220947
    5. ' the' → logprob: -5.680240631103516
    6. '+' → logprob: -5.930240631103516
    7. ')' → logprob: -6.430240631103516
    8. '```' → logprob: -6.430240631103516
    9. ' +' → logprob: -6.555240631103516
    10. '_' → logprob: -6.555240631103516

Token 819: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02288120798766613
    2. '
' → logprob: -4.147881031036377
    3. ' for' → logprob: -5.647881031036377
    4. '        
' → logprob: -6.647881031036377
    5. '   ' → logprob: -7.647881031036377
    6. ':' → logprob: -8.022881507873535
    7. 'for' → logprob: -8.147881507873535
    8. '<|end|>' → logprob: -8.147881507873535
    9. ':
' → logprob: -8.897881507873535
    10. ',' → logprob: -9.272881507873535

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001268089865334332
    2. ' for' → logprob: -7.376267910003662
    3. '        
' → logprob: -8.12626838684082
    4. '
' → logprob: -8.62626838684082
    5. 'for' → logprob: -9.75126838684082
    6. '   ' → logprob: -9.75126838684082
    7. '<|end|>' → logprob: -11.00126838684082
    8. '```' → logprob: -11.75126838684082
    9. 'import' → logprob: -12.50126838684082
    10. '           ' → logprob: -12.62626838684082

Token 821: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005039963871240616
    2. 'for' → logprob: -6.005040168762207
    3. ' for' → logprob: -6.005040168762207
    4. '   ' → logprob: -10.005040168762207
    5. '        
' → logprob: -10.630040168762207
    6. '
' → logprob: -11.505040168762207
    7. '```' → logprob: -12.630040168762207
    8. 'import' → logprob: -13.005040168762207
    9. 'from' → logprob: -13.130040168762207
    10. '#' (adapté à ' #') → logprob: -13.380040168762207

Token 822: ' We'll' (ID: 46830)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5269759893417358
    2. 'for' → logprob: -0.9019759893417358
    3. '       ' → logprob: -5.901976108551025
    4. '   ' → logprob: -7.151976108551025
    5. '
' → logprob: -8.651975631713867
    6. 'from' → logprob: -9.776975631713867
    7. ' from' → logprob: -11.151975631713867
    8. ' hero' → logprob: -11.651975631713867
    9. 'import' → logprob: -11.901975631713867
    10. '```' → logprob: -11.901975631713867

Token 823: ' create' (ID: 2501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10059589892625809
    2. ' for' → logprob: -2.4755959510803223
    3. 'continue' → logprob: -5.350595951080322
    4. ' continue' → logprob: -5.475595951080322
    5. 'import' → logprob: -6.850595951080322
    6. '   ' → logprob: -7.975595951080322
    7. 'range' → logprob: -8.600595474243164
    8. 'from' → logprob: -8.725595474243164
    9. ' range' → logprob: -8.975595474243164
    10. ' ' → logprob: -8.975595474243164

Token 824: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26004287600517273
    2. ' for' → logprob: -2.135042905807495
    3. ' all' → logprob: -3.260042905807495
    4. 'part' → logprob: -3.385042905807495
    5. ' parties' → logprob: -4.260042667388916
    6. 'all' → logprob: -4.635042667388916
    7. 'possible' → logprob: -5.885042667388916
    8. 'ranges' → logprob: -6.385042667388916
    9. ' possible' → logprob: -6.885042667388916
    10. ' ranges' → logprob: -7.010042667388916

Token 825: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04523638263344765
    2. 'range' → logprob: -3.545236349105835
    3. ' for' → logprob: -4.545236587524414
    4. ' range' → logprob: -5.795236587524414
    5. '```' → logprob: -7.795236587524414
    6. 'def' → logprob: -8.295236587524414
    7. '   ' → logprob: -9.045236587524414
    8. 'space' → logprob: -9.045236587524414
    9. 'from' → logprob: -9.045236587524414
    10. 'nested' → logprob: -9.295236587524414

Token 826: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3168662786483765
    2. ' =' → logprob: -1.6918662786483765
    3. 'of' → logprob: -1.8168662786483765
    4. 'for' → logprob: -2.191866397857666
    5. ' of' → logprob: -2.191866397857666
    6. '(' → logprob: -2.691866397857666
    7. '=[]' → logprob: -3.816866397857666
    8. ' for' → logprob: -4.191866397857666
    9. '       ' → logprob: -4.316866397857666
    10. '   ' → logprob: -4.316866397857666

Token 827: ' all' (ID: 722)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.39684104919433594
    2. 'possible' → logprob: -1.646841049194336
    3. 'heroes' → logprob: -2.771841049194336
    4. 'all' → logprob: -3.021841049194336
    5. 'party' → logprob: -5.146841049194336
    6. 'for' → logprob: -5.521841049194336
    7. 'valid' → logprob: -5.771841049194336
    8. '```' → logprob: -6.021841049194336
    9. 'available' → logprob: -6.396841049194336
    10. 'hero' → logprob: -7.021841049194336

Token 828: ' parties' (ID: 13531)
  Prédit: 'heroes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -1.049382209777832
    2. 'possible' → logprob: -1.674382209777832
    3. 'part' → logprob: -1.924382209777832
    4. ' possible' → logprob: -2.424382209777832
    5. ' heroes' → logprob: -2.549382209777832
    6. 'for' → logprob: -3.799382209777832
    7. '(' → logprob: -3.924382209777832
    8. ' parties' → logprob: -4.049382209777832
    9. '_' → logprob: -4.174382209777832
    10. '_part' → logprob: -4.799382209777832

Token 829: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2915605306625366
    2. ' for' → logprob: -2.666560649871826
    3. 'for' → logprob: -2.916560649871826
    4. '   ' → logprob: -3.041560649871826
    5. ':' → logprob: -3.166560649871826
    6. '
' → logprob: -3.916560649871826
    7. ' =' → logprob: -4.666560649871826
    8. ':
' → logprob: -5.416560649871826
    9. '=' → logprob: -5.916560649871826
    10. '        
' → logprob: -7.041560649871826

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03850661590695381
    2. ' for' → logprob: -3.663506507873535
    3. 'for' → logprob: -4.663506507873535
    4. '   ' → logprob: -6.038506507873535
    5. '        
' → logprob: -9.538506507873535
    6. '
' → logprob: -10.413506507873535
    7. ' ' → logprob: -10.538506507873535
    8. 'from' → logprob: -10.538506507873535
    9. '           ' → logprob: -10.788506507873535
    10. '<|end|>' → logprob: -11.038506507873535

Token 831: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.635157585144043
    2. 'for' → logprob: -1.135157585144043
    3. '       ' → logprob: -2.010157585144043
    4. '   ' → logprob: -4.260157585144043
    5. ' 
' → logprob: -9.010157585144043
    6. '
' → logprob: -9.260157585144043
    7. '        
' → logprob: -9.385157585144043
    8. ' ' → logprob: -9.760157585144043
    9. 'space' → logprob: -9.760157585144043
    10. ' ' → logprob: -9.885157585144043

Token 832: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20198966562747955
    2. ' for' → logprob: -1.7019896507263184
    3. 'from' → logprob: -8.576990127563477
    4. '```' → logprob: -9.326990127563477
    5. 'party' → logprob: -9.451990127563477
    6. '       ' → logprob: -9.951990127563477
    7. 'part' → logprob: -10.076990127563477
    8. '   ' → logprob: -10.451990127563477
    9. ' from' → logprob: -10.951990127563477
    10. ' party' → logprob: -10.951990127563477

Token 833: ' hero' (ID: 20917)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.013472664169967175
    2. ' h' → logprob: -4.388472557067871
    3. 'hero' → logprob: -7.138472557067871
    4. ' hero' → logprob: -8.763472557067871
    5. '```' → logprob: -12.638472557067871
    6. '	h' → logprob: -12.763472557067871
    7. ' ' → logprob: -13.513472557067871
    8. '   ' → logprob: -13.638472557067871
    9. 'H' → logprob: -13.888472557067871
    10. ' ' → logprob: -14.513472557067871

Token 834: ' in' (ID: 306)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.22352392971515656
    2. ' in' → logprob: -1.7235239744186401
    3. 'h' → logprob: -3.8485238552093506
    4. 'in' → logprob: -7.84852409362793
    5. '_h' → logprob: -9.84852409362793
    6. '_' → logprob: -10.72352409362793
    7. 'range' → logprob: -11.09852409362793
    8. ',' → logprob: -11.22352409362793
    9. ' i' → logprob: -11.59852409362793
    10. '```' → logprob: -11.72352409362793

Token 835: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061971161514520645
    2. ' range' → logprob: -2.8119711875915527
    3. '   ' → logprob: -14.061970710754395
    4. 'hero' → logprob: -14.311970710754395
    5. ' ' → logprob: -14.811970710754395
    6. '```' → logprob: -15.186970710754395
    7. '1' → logprob: -15.311970710754395
    8. 'h' → logprob: -15.436970710754395
    9. 'H' → logprob: -15.436970710754395
    10. '`' → logprob: -15.561970710754395

Token 836: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023059594968799502
    2. ' range' → logprob: -8.37523078918457
    3. '(range' → logprob: -17.50023078918457
    4. 'h' → logprob: -17.87523078918457
    5. 'hero' → logprob: -18.12523078918457
    6. '1' → logprob: -18.37523078918457
    7. '```' → logprob: -18.50023078918457
    8. '	range' → logprob: -19.00023078918457
    9. 'H' → logprob: -19.12523078918457
    10. '   ' → logprob: -19.37523078918457

Token 837: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09456361830234528
    2. ' in' → logprob: -3.5945637226104736
    3. 'range' → logprob: -3.8445637226104736
    4. ':' → logprob: -4.2195634841918945
    5. 'in' → logprob: -4.3445634841918945
    6. ' range' → logprob: -5.8445634841918945
    7. 'to' → logprob: -5.8445634841918945
    8. '..' → logprob: -6.7195634841918945
    9. ' ,' → logprob: -6.8445634841918945
    10. '
' → logprob: -6.8445634841918945

Token 838: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.006736572831869125
    2. ' H' → logprob: -5.006736755371094
    3. 'range' → logprob: -11.881736755371094
    4. '(H' → logprob: -12.631736755371094
    5. ' range' → logprob: -12.756736755371094
    6. '   ' → logprob: -12.756736755371094
    7. '`' → logprob: -13.881736755371094
    8. ' ' → logprob: -14.006736755371094
    9. ',H' → logprob: -14.256736755371094
    10. '```' → logprob: -14.506736755371094

Token 839: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020046710968017578
    2. 'for' → logprob: -5.020046710968018
    3. ':
' → logprob: -5.645046710968018
    4. ' for' → logprob: -5.770046710968018
    5. ' in' → logprob: -5.770046710968018
    6. '   ' → logprob: -6.645046710968018
    7. ',' → logprob: -7.020046710968018
    8. 'range' → logprob: -8.27004623413086
    9. '+' → logprob: -8.39504623413086
    10. ' :' → logprob: -8.64504623413086

Token 840: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21285544335842133
    2. ' for' → logprob: -2.462855339050293
    3. '   ' → logprob: -3.087855339050293
    4. 'for' → logprob: -3.587855339050293
    5. '       ' → logprob: -3.837855339050293
    6. ' in' → logprob: -5.587855339050293
    7. ',' → logprob: -6.212855339050293
    8. ' :' → logprob: -6.212855339050293
    9. ':
' → logprob: -6.712855339050293
    10. '):' → logprob: -7.212855339050293

Token 841: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3840312361717224
    2. ' for' → logprob: -2.009031295776367
    3. 'for' → logprob: -2.509031295776367
    4. '       ' → logprob: -2.759031295776367
    5. '   ' → logprob: -3.884031295776367
    6. ':
' → logprob: -4.509031295776367
    7. ',' → logprob: -5.634031295776367
    8. ' in' → logprob: -5.759031295776367
    9. 'range' → logprob: -7.759031295776367
    10. '```' → logprob: -8.009031295776367

Token 842: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2738693952560425
    2. '       ' → logprob: -2.398869514465332
    3. 'for' → logprob: -2.523869514465332
    4. '   ' → logprob: -3.148869514465332
    5. ' range' → logprob: -4.773869514465332
    6. ':' → logprob: -4.898869514465332
    7. 'range' → logprob: -5.523869514465332
    8. ',' → logprob: -6.648869514465332
    9. '```' → logprob: -6.898869514465332
    10. ' in' → logprob: -7.148869514465332

Token 843: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.22542479634284973
    2. ' warrior' → logprob: -2.4754247665405273
    3. 'w' → logprob: -2.6004247665405273
    4. ' w' → logprob: -3.8504247665405273
    5. 'hero' → logprob: -4.100424766540527
    6. ' hero' → logprob: -5.725424766540527
    7. ' war' → logprob: -6.725424766540527
    8. 'wizard' → logprob: -8.100424766540527
    9. 'h' → logprob: -8.725424766540527
    10. 'warf' → logprob: -9.350424766540527

Token 844: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032154994551092386
    2. 'in' → logprob: -5.753215312957764
    3. ' ' → logprob: -11.128215789794922
    4. 'w' → logprob: -12.253215789794922
    5. ' i' → logprob: -12.753215789794922
    6. ',' → logprob: -13.253215789794922
    7. '_' → logprob: -13.253215789794922
    8. '   ' → logprob: -13.378215789794922
    9. ' ,' → logprob: -13.503215789794922
    10. '_in' → logprob: -13.503215789794922

Token 845: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48155078291893005
    2. ' range' → logprob: -1.3565508127212524
    3. '[' → logprob: -2.231550693511963
    4. ' [' → logprob: -4.356550693511963
    5. 'None' → logprob: -5.981550693511963
    6. ' None' → logprob: -6.981550693511963
    7. '(range' → logprob: -7.981550693511963
    8. '   ' → logprob: -8.606551170349121
    9. ' (' → logprob: -8.856551170349121
    10. '0' → logprob: -8.981551170349121

Token 846: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004374638374429196
    2. ' None' → logprob: -8.00043773651123
    3. 'range' → logprob: -9.50043773651123
    4. '-' → logprob: -11.37543773651123
    5. '   ' → logprob: -11.62543773651123
    6. '[' → logprob: -13.00043773651123
    7. '
' → logprob: -13.25043773651123
    8. '(None' → logprob: -14.25043773651123
    9. '_None' → logprob: -14.37543773651123
    10. '0' → logprob: -14.62543773651123

Token 847: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001907216152176261
    2. ']' → logprob: -6.3769073486328125
    3. ' ,' → logprob: -9.001907348632812
    4. ',None' → logprob: -9.626907348632812
    5. ']+' → logprob: -11.626907348632812
    6. ',
' → logprob: -12.251907348632812
    7. 'None' → logprob: -13.876907348632812
    8. ' ]' → logprob: -15.001907348632812
    9. '   ' → logprob: -15.751907348632812
    10. ',List' → logprob: -15.876907348632812

Token 848: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00702982721850276
    2. ' ,' → logprob: -5.132030010223389
    3. ',None' → logprob: -7.007030010223389
    4. '<|end|>' → logprob: -9.75702953338623
    5. ' or' → logprob: -9.88202953338623
    6. ',
' → logprob: -11.00702953338623
    7. ' if' → logprob: -11.75702953338623
    8. '+' → logprob: -11.75702953338623
    9. ']' → logprob: -11.75702953338623
    10. ' in' → logprob: -12.38202953338623

Token 849: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00026097820955328643
    2. 'range' → logprob: -9.000261306762695
    3. ' list' → logprob: -9.500261306762695
    4. '[list' → logprob: -9.750261306762695
    5. '[' → logprob: -12.375261306762695
    6. '(list' → logprob: -16.750261306762695
    7. '=list' → logprob: -18.125261306762695
    8. ' range' → logprob: -19.000261306762695
    9. '	list' → logprob: -19.000261306762695
    10. '[
' → logprob: -19.000261306762695

Token 850: '1' (ID: 16)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.2378600735682994e-05
    2. '[list' → logprob: -10.750032424926758
    3. 'range' → logprob: -11.500032424926758
    4. ' list' → logprob: -14.625032424926758
    5. '[' → logprob: -15.375032424926758
    6. '(list' → logprob: -19.750032424926758
    7. '=list' → logprob: -20.500032424926758
    8. '[List' → logprob: -20.875032424926758
    9. '[l' → logprob: -21.625032424926758
    10. '[i' → logprob: -21.875032424926758

Token 851: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.7419635057449341
    2. 'range' → logprob: -1.491963505744934
    3. '...' → logprob: -2.1169633865356445
    4. '+' → logprob: -2.6169633865356445
    5. ',' → logprob: -2.9919633865356445
    6. '.' → logprob: -4.8669633865356445
    7. ' +' → logprob: -4.8669633865356445
    8. '
' → logprob: -5.1169633865356445
    9. ')' → logprob: -5.2419633865356445
    10. '       ' → logprob: -5.3669633865356445

Token 852: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.007721390575170517
    2. ' W' → logprob: -5.507721424102783
    3. 'range' → logprob: -6.257721424102783
    4. '(W' → logprob: -7.132721424102783
    5. '[' → logprob: -7.257721424102783
    6. ' range' → logprob: -9.507720947265625
    7. '   ' → logprob: -10.382720947265625
    8. ' ' → logprob: -10.882720947265625
    9. 'H' → logprob: -11.007720947265625
    10. '(range' → logprob: -11.257720947265625

Token 853: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2832069396972656
    2. ':
' → logprob: -2.0332069396972656
    3. '       ' → logprob: -2.4082069396972656
    4. '   ' → logprob: -4.783206939697266
    5. '[' → logprob: -5.158206939697266
    6. '+' → logprob: -5.158206939697266
    7. ' +' → logprob: -6.158206939697266
    8. '):' → logprob: -7.658206939697266
    9. '):
' → logprob: -7.658206939697266
    10. '           ' → logprob: -8.033206939697266

Token 854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29189756512641907
    2. ':' → logprob: -1.4168975353240967
    3. ':
' → logprob: -5.416897773742676
    4. '[' → logprob: -5.666897773742676
    5. '   ' → logprob: -7.291897773742676
    6. '           ' → logprob: -7.541897773742676
    7. '):' → logprob: -8.041897773742676
    8. ' for' → logprob: -8.791897773742676
    9. ',' → logprob: -8.791897773742676
    10. ' :' → logprob: -8.916897773742676

Token 855: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4367227554321289
    2. ':' → logprob: -1.311722755432129
    3. '[' → logprob: -2.936722755432129
    4. ' for' → logprob: -4.561722755432129
    5. 'for' → logprob: -5.186722755432129
    6. ':
' → logprob: -5.311722755432129
    7. '[:' → logprob: -5.811722755432129
    8. '   ' → logprob: -6.311722755432129
    9. ' :' → logprob: -6.561722755432129
    10. ' [' → logprob: -7.061722755432129

Token 856: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8522579073905945
    2. '[' → logprob: -1.6022579669952393
    3. '       ' → logprob: -1.6022579669952393
    4. 'for' → logprob: -2.9772579669952393
    5. ' [' → logprob: -3.2272579669952393
    6. ':' → logprob: -3.3522579669952393
    7. ' :' → logprob: -4.22725772857666
    8. '   ' → logprob: -5.10225772857666
    9. ' ' → logprob: -5.35225772857666
    10. ' (' → logprob: -5.85225772857666

Token 857: ' cler' (ID: 91536)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6358363628387451
    2. '[' → logprob: -0.7608363628387451
    3. '   ' → logprob: -7.260836601257324
    4. ' ' → logprob: -7.260836601257324
    5. 'war' → logprob: -8.135836601257324
    6. ' range' → logprob: -8.260836601257324
    7. '[w' → logprob: -8.385836601257324
    8. 'cler' → logprob: -8.510836601257324
    9. ' cler' → logprob: -9.385836601257324
    10. 'range' → logprob: -9.510836601257324

Token 858: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.8087270038668066e-05
    2. '[' → logprob: -11.625027656555176
    3. '       ' → logprob: -12.000027656555176
    4. '   ' → logprob: -12.625027656555176
    5. 'ics' → logprob: -13.375027656555176
    6. '[]' → logprob: -13.375027656555176
    7. 'None' → logprob: -13.375027656555176
    8. '(None' → logprob: -13.625027656555176
    9. '=None' → logprob: -13.750027656555176
    10. 'ric' → logprob: -15.500027656555176

Token 859: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019360085716471076
    2. 'in' → logprob: -6.251935958862305
    3. '[' → logprob: -13.126935958862305
    4. ' ' → logprob: -13.376935958862305
    5. ' [' → logprob: -13.376935958862305
    6. '   ' → logprob: -13.626935958862305
    7. '[in' → logprob: -15.376935958862305
    8. '```' → logprob: -15.751935958862305
    9. 's' → logprob: -15.876935958862305
    10. ' ' → logprob: -16.001935958862305

Token 860: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006736916024237871
    2. ' [' → logprob: -5.006736755371094
    3. '[N' → logprob: -11.756736755371094
    4. 'range' → logprob: -11.881736755371094
    5. ' range' → logprob: -12.631736755371094
    6. '[n' → logprob: -13.381736755371094
    7. '   ' → logprob: -13.631736755371094
    8. '([' → logprob: -15.256736755371094
    9. ' ' → logprob: -16.256736755371094
    10. '       ' → logprob: -16.381736755371094

Token 861: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3489837646484375
    2. 'None' → logprob: -1.2239837646484375
    3. ' None' → logprob: -8.723983764648438
    4. '(None' → logprob: -8.848983764648438
    5. ' [' → logprob: -9.098983764648438
    6. 'range' → logprob: -9.723983764648438
    7. '   ' → logprob: -10.848983764648438
    8. '[N' → logprob: -11.098983764648438
    9. '_None' → logprob: -12.098983764648438
    10. '```' → logprob: -12.848983764648438

Token 862: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010109483264386654
    2. ']+' → logprob: -4.6351094245910645
    3. ' ]' → logprob: -8.260109901428223
    4. '+' → logprob: -10.635109901428223
    5. ',' → logprob: -10.885109901428223
    6. '   ' → logprob: -11.135109901428223
    7. ' +' → logprob: -11.635109901428223
    8. '[' → logprob: -11.885109901428223
    9. '+]' → logprob: -12.010109901428223
    10. '']' → logprob: -12.760109901428223

Token 863: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12946626543998718
    2. '+' → logprob: -2.1294662952423096
    3. '+[' → logprob: -6.7544660568237305
    4. '       ' → logprob: -7.6294660568237305
    5. '   ' → logprob: -8.37946605682373
    6. ']+' → logprob: -8.75446605682373
    7. ']' → logprob: -8.87946605682373
    8. '[' → logprob: -9.25446605682373
    9. ')' → logprob: -9.37946605682373
    10. ')+' → logprob: -9.75446605682373

Token 864: ' ' (ID: 220)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9980956315994263
    2. ' range' → logprob: -1.2480956315994263
    3. 'range' → logprob: -1.4980956315994263
    4. 'list' → logprob: -2.8730955123901367
    5. '[' → logprob: -3.1230955123901367
    6. ' [' → logprob: -4.248095512390137
    7. '1' → logprob: -5.998095512390137
    8. '0' → logprob: -6.373095512390137
    9. ' ' → logprob: -6.998095512390137
    10. '(range' → logprob: -8.123095512390137

Token 865: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049908965826034546
    2. 'range' → logprob: -3.4249088764190674
    3. 'list' → logprob: -4.1749091148376465
    4. ' [' → logprob: -8.174908638000488
    5. ' range' → logprob: -9.174908638000488
    6. '0' → logprob: -9.299908638000488
    7. '[list' → logprob: -9.549908638000488
    8. '(range' → logprob: -9.674908638000488
    9. '1' → logprob: -9.924908638000488
    10. ' list' → logprob: -10.174908638000488

Token 866: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -7.123899558791891e-05
    2. '...' → logprob: -9.62507152557373
    3. ' ..' → logprob: -12.50007152557373
    4. '       ' → logprob: -15.25007152557373
    5. 'range' → logprob: -15.62507152557373
    6. '+' → logprob: -16.000070571899414
    7. '....' → logprob: -16.250070571899414
    8. '..<' → logprob: -16.250070571899414
    9. '   ' → logprob: -16.500070571899414
    10. '.."' → logprob: -16.750070571899414

Token 867: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0016922038048505783
    2. 'W' → logprob: -6.626692295074463
    3. 'M' → logprob: -8.251691818237305
    4. ' C' → logprob: -9.876691818237305
    5. 'range' → logprob: -10.001691818237305
    6. '[C' → logprob: -12.376691818237305
    7. '(C' → logprob: -13.626691818237305
    8. '[' → logprob: -14.501691818237305
    9. '   ' → logprob: -14.626691818237305
    10. '```' → logprob: -14.751691818237305

Token 868: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06462915241718292
    2. ' for' → logprob: -2.939629077911377
    3. '[' → logprob: -5.314629077911377
    4. 'for' → logprob: -6.064629077911377
    5. '           ' → logprob: -7.314629077911377
    6. '```' → logprob: -7.564629077911377
    7. '   ' → logprob: -7.689629077911377
    8. ' [' → logprob: -8.314629554748535
    9. ':
' → logprob: -8.939629554748535
    10. ' (' → logprob: -9.814629554748535

Token 869: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02067338488996029
    2. ' for' → logprob: -4.0206732749938965
    3. 'for' → logprob: -7.3956732749938965
    4. '[' → logprob: -7.6456732749938965
    5. '```' → logprob: -7.7706732749938965
    6. '#' → logprob: -8.395673751831055
    7. ',' → logprob: -8.770673751831055
    8. '   ' → logprob: -9.020673751831055
    9. '        ' → logprob: -9.020673751831055
    10. '           ' → logprob: -9.270673751831055

Token 870: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09875286370515823
    2. ' for' → logprob: -2.473752975463867
    3. 'for' → logprob: -5.348752975463867
    4. '[' → logprob: -6.473752975463867
    5. '```' → logprob: -6.973752975463867
    6. '#' (adapté à ' #') → logprob: -7.348752975463867
    7. '        ' → logprob: -7.723752975463867
    8. '   ' → logprob: -7.973752975463867
    9. ',' → logprob: -8.223752975463867
    10. ' #' → logprob: -8.723752975463867

Token 871: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1492973268032074
    2. 'for' → logprob: -2.0242972373962402
    3. '       ' → logprob: -5.39929723739624
    4. '[' → logprob: -6.52429723739624
    5. ' ' → logprob: -8.524297714233398
    6. ' [' → logprob: -8.774297714233398
    7. '   ' → logprob: -9.649297714233398
    8. '[
' → logprob: -10.149297714233398
    9. ',' → logprob: -10.524297714233398
    10. '#' → logprob: -10.524297714233398

Token 872: ' mage' (ID: 89091)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3486117720603943
    2. ' [' → logprob: -1.223611831665039
    3. '[m' → logprob: -9.473611831665039
    4. ' ' → logprob: -10.348611831665039
    5. ' ' → logprob: -10.598611831665039
    6. '   ' → logprob: -10.973611831665039
    7. '[M' → logprob: -12.098611831665039
    8. '[N' → logprob: -13.098611831665039
    9. '  ' → logprob: -13.598611831665039
    10. 'm' → logprob: -13.848611831665039

Token 873: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013078561751171947
    2. 'in' → logprob: -7.501307964324951
    3. ' [' → logprob: -8.001307487487793
    4. '[' → logprob: -8.126307487487793
    5. ' ' → logprob: -10.001307487487793
    6. ' None' → logprob: -10.001307487487793
    7. 'None' → logprob: -11.126307487487793
    8. '   ' → logprob: -11.876307487487793
    9. ' ' → logprob: -13.501307487487793
    10. ',' → logprob: -13.751307487487793

Token 874: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759611129760742
    2. '[' → logprob: -0.8259611129760742
    3. ' ' → logprob: -11.450961112976074
    4. ' ' → logprob: -12.325961112976074
    5. '   ' → logprob: -13.325961112976074
    6. '[N' → logprob: -13.825961112976074
    7. '[n' → logprob: -14.450961112976074
    8. '([' → logprob: -14.700961112976074
    9. ' range' → logprob: -14.950961112976074
    10. ' None' → logprob: -14.950961112976074

Token 875: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00026848804554902017
    2. 'None' → logprob: -8.250268936157227
    3. ' [' → logprob: -12.500268936157227
    4. '(None' → logprob: -12.875268936157227
    5. '_None' → logprob: -15.375268936157227
    6. ' None' → logprob: -15.750268936157227
    7. '   ' → logprob: -16.000268936157227
    8. ']' → logprob: -16.625268936157227
    9. '```' → logprob: -17.125268936157227
    10. '
' → logprob: -17.250268936157227

Token 876: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003936152206733823
    2. ']+' → logprob: -8.375393867492676
    3. ' ]' → logprob: -8.875393867492676
    4. '   ' → logprob: -11.750393867492676
    5. '[' → logprob: -12.875393867492676
    6. '']' → logprob: -13.125393867492676
    7. ',' → logprob: -13.125393867492676
    8. '+]' → logprob: -13.500393867492676
    9. ']
' → logprob: -13.750393867492676
    10. '+' → logprob: -13.875393867492676

Token 877: ' +' (ID: 659)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8745250701904297
    2. ':' → logprob: -1.6245250701904297
    3. '+' → logprob: -1.7495250701904297
    4. ' +' → logprob: -2.3745250701904297
    5. '       ' → logprob: -3.4995250701904297
    6. ':
' → logprob: -4.24952507019043
    7. 'for' → logprob: -4.37452507019043
    8. '[' → logprob: -4.37452507019043
    9. '           ' → logprob: -4.74952507019043
    10. ' for' → logprob: -4.87452507019043

Token 878: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.2789828777313232
    2. 'range' → logprob: -1.5289828777313232
    3. '1' → logprob: -1.7789828777313232
    4. ' ' → logprob: -1.9039828777313232
    5. '0' → logprob: -2.4039828777313232
    6. '[' → logprob: -2.9039828777313232
    7. ' [' → logprob: -3.2789828777313232
    8. ' list' → logprob: -6.528983116149902
    9. 'list' → logprob: -6.903983116149902
    10. '(range' → logprob: -8.028983116149902

Token 879: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007117183413356543
    2. 'range' → logprob: -5.63211727142334
    3. '[' → logprob: -5.88211727142334
    4. '[M' → logprob: -7.88211727142334
    5. 'M' → logprob: -9.00711727142334
    6. ' ' → logprob: -9.38211727142334
    7. 'list' → logprob: -9.50711727142334
    8. ' range' → logprob: -10.50711727142334
    9. ' [' → logprob: -11.38211727142334
    10. '(range' → logprob: -12.13211727142334

Token 880: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03135579824447632
    2. ':
' → logprob: -3.781355857849121
    3. '+' → logprob: -5.656355857849121
    4. '4' → logprob: -7.031355857849121
    5. '0' → logprob: -7.281355857849121
    6. '+:' → logprob: -7.781355857849121
    7. '       ' → logprob: -8.156355857849121
    8. '..' → logprob: -8.531355857849121
    9. '):' → logprob: -8.531355857849121
    10. '   ' → logprob: -8.531355857849121

Token 881: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0013621398247778416
    2. ' M' → logprob: -6.626362323760986
    3. ' ' → logprob: -10.876361846923828
    4. 'C' → logprob: -12.251361846923828
    5. 'range' → logprob: -12.501361846923828
    6. '   ' → logprob: -12.626361846923828
    7. '(M' → logprob: -13.626361846923828
    8. '
' → logprob: -14.251361846923828
    9. '  ' → logprob: -14.626361846923828
    10. '```' → logprob: -15.001361846923828

Token 882: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35903647541999817
    2. '   ' → logprob: -1.7340364456176758
    3. ':' → logprob: -2.734036445617676
    4. ' for' → logprob: -3.609036445617676
    5. '
' → logprob: -4.359036445617676
    6. 'for' → logprob: -4.484036445617676
    7. ':
' → logprob: -5.359036445617676
    8. '        
' → logprob: -6.984036445617676
    9. '```' → logprob: -7.359036445617676
    10. '    
' → logprob: -7.609036445617676

Token 883: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6765914559364319
    2. '       ' → logprob: -0.8015914559364319
    3. '   ' → logprob: -3.426591396331787
    4. ':
' → logprob: -5.551591396331787
    5. ',' → logprob: -6.551591396331787
    6. ' :' → logprob: -6.551591396331787
    7. '{' → logprob: -7.176591396331787
    8. '(' → logprob: -7.801591396331787
    9. '        
' → logprob: -8.051591873168945
    10. '[' → logprob: -8.176591873168945

Token 884: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033662643283605576
    2. '   ' → logprob: -3.7836625576019287
    3. ' for' → logprob: -4.783662796020508
    4. '        
' → logprob: -7.408662796020508
    5. '
' → logprob: -7.783662796020508
    6. '    
' → logprob: -8.033662796020508
    7. '```' → logprob: -8.533662796020508
    8. 'for' → logprob: -8.658662796020508
    9. ' 
' → logprob: -9.533662796020508
    10. '\' → logprob: -10.408662796020508

Token 885: ' Check' (ID: 6208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16724713146686554
    2. 'for' → logprob: -2.0422470569610596
    3. '   ' → logprob: -4.417247295379639
    4. '       ' → logprob: -4.417247295379639
    5. ' from' → logprob: -9.91724681854248
    6. 'from' → logprob: -10.16724681854248
    7. 'import' → logprob: -11.16724681854248
    8. '```' → logprob: -11.29224681854248
    9. ' ' → logprob: -12.04224681854248
    10. '
' → logprob: -12.54224681854248

Token 886: ' constraints' (ID: 31060)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1096826791763306
    2. '   ' → logprob: -1.2346826791763306
    3. '       ' → logprob: -1.6096826791763306
    4. 'for' → logprob: -1.9846826791763306
    5. ' hero' → logprob: -4.109682559967041
    6. ' if' → logprob: -5.234682559967041
    7. ' range' → logprob: -5.609682559967041
    8. '```' → logprob: -5.859682559967041
    9. '    ' → logprob: -5.984682559967041
    10. ' h' → logprob: -6.609682559967041

Token 887: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007020479999482632
    2. ' for' → logprob: -5.632020473480225
    3. '
' → logprob: -6.257020473480225
    4. '   ' → logprob: -7.382020473480225
    5. 'for' → logprob: -7.632020473480225
    6. '        
' → logprob: -8.257020950317383
    7. '           ' → logprob: -10.257020950317383
    8. ':' → logprob: -10.507020950317383
    9. '    
' → logprob: -10.632020950317383
    10. '        ' → logprob: -11.757020950317383

Token 888: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1869942843914032
    2. ' for' → logprob: -1.9369943141937256
    3. 'for' → logprob: -3.6869943141937256
    4. '           ' → logprob: -7.0619940757751465
    5. '   ' → logprob: -8.186994552612305
    6. '               ' → logprob: -9.811994552612305
    7. '        
' → logprob: -9.811994552612305
    8. '        ' → logprob: -10.061994552612305
    9. '                   ' → logprob: -11.061994552612305
    10. ' ' → logprob: -11.686994552612305

Token 889: ' satisfied' (ID: 23121)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4406301975250244
    2. ' warrior' → logprob: -1.5656301975250244
    3. 'True' → logprob: -3.1906301975250244
    4. ' hero' → logprob: -3.3156301975250244
    5. ' not' → logprob: -3.8156301975250244
    6. 'war' → logprob: -4.565629959106445
    7. 'hero' → logprob: -4.815629959106445
    8. ' ' → logprob: -4.940629959106445
    9. ' w' → logprob: -5.440629959106445
    10. ' h' → logprob: -5.940629959106445

Token 890: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5893711447715759
    2. '       ' → logprob: -0.9643711447715759
    3. ':
' → logprob: -2.8393712043762207
    4. '           ' → logprob: -6.089371204376221
    5. ',' → logprob: -6.964371204376221
    6. ' for' → logprob: -7.089371204376221
    7. '   ' → logprob: -7.714371204376221
    8. 'for' → logprob: -7.714371204376221
    9. '
' → logprob: -8.714370727539062
    10. '        
' → logprob: -8.964370727539062

Token 891: ' add' (ID: 1147)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1905776560306549
    2. '                               ' → logprob: -3.065577745437622
    3. ' parties' → logprob: -3.440577745437622
    4. '                   ' → logprob: -4.065577507019043
    5. ' continue' → logprob: -4.190577507019043
    6. '                           ' → logprob: -4.440577507019043
    7. '               ' → logprob: -4.440577507019043
    8. '                       ' → logprob: -4.815577507019043
    9. 'continue' → logprob: -4.940577507019043
    10. '       ' → logprob: -4.940577507019043

Token 892: ' party' (ID: 7362)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17387333512306213
    2. ' (' → logprob: -2.7988734245300293
    3. '(' → logprob: -3.5488734245300293
    4. '   ' → logprob: -3.5488734245300293
    5. '           ' → logprob: -4.048873424530029
    6. '               ' → logprob: -4.548873424530029
    7. '(
' → logprob: -5.423873424530029
    8. ' for' → logprob: -6.548873424530029
    9. 'for' → logprob: -6.673873424530029
    10. '                   ' → logprob: -6.673873424530029

Token 893: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03998352959752083
    2. '
' → logprob: -4.039983749389648
    3. ' for' → logprob: -4.664983749389648
    4. '   ' → logprob: -4.789983749389648
    5. '        
' → logprob: -6.164983749389648
    6. 'for' → logprob: -6.789983749389648
    7. '    
' → logprob: -8.414983749389648
    8. ':' → logprob: -9.164983749389648
    9. '```' → logprob: -9.414983749389648
    10. ' 
' → logprob: -9.914983749389648

Token 894: ' a' (ID: 261)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.07571796327829361
    2. '(' → logprob: -2.8257179260253906
    3. ' (' → logprob: -4.575717926025391
    4. '(hero' → logprob: -5.825717926025391
    5. '(H' → logprob: -8.32571792602539
    6. '   ' → logprob: -8.82571792602539
    7. '       ' → logprob: -12.82571792602539
    8. '((' → logprob: -12.95071792602539
    9. '```' → logprob: -13.07571792602539
    10. '(hr' → logprob: -13.32571792602539

Token 895: ' tuple' (ID: 31311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22363430261611938
    2. '(h' → logprob: -2.5986342430114746
    3. ' (' → logprob: -2.7236342430114746
    4. 'tuple' → logprob: -3.3486342430114746
    5. ' tuple' → logprob: -3.9736342430114746
    6. '(
' → logprob: -6.223634243011475
    7. '.append' → logprob: -6.848634243011475
    8. '(H' → logprob: -7.098634243011475
    9. '[' → logprob: -7.473634243011475
    10. ')' → logprob: -7.473634243011475

Token 896: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5383044481277466
    2. '(
' → logprob: -1.4133044481277466
    3. '       ' → logprob: -2.413304328918457
    4. '(h' → logprob: -3.288304328918457
    5. ' (' → logprob: -3.413304328918457
    6. '   ' → logprob: -5.538304328918457
    7. ' =' → logprob: -5.788304328918457
    8. '           ' → logprob: -6.288304328918457
    9. ' (
' → logprob: -6.788304328918457
    10. '=' → logprob: -7.413304328918457

Token 897: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014041745103895664
    2. '(h' → logprob: -4.639041900634766
    3. 'hero' → logprob: -5.764041900634766
    4. ' h' → logprob: -7.514041900634766
    5. '(hero' → logprob: -8.389041900634766
    6. ')' → logprob: -9.014041900634766
    7. '   ' → logprob: -9.264041900634766
    8. ' (' → logprob: -9.514041900634766
    9. '(' → logprob: -10.514041900634766
    10. ' hero' → logprob: -11.389041900634766

Token 898: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001954087056219578
    2. 'ero' → logprob: -6.626954078674316
    3. ')' → logprob: -8.001954078674316
    4. ',
' → logprob: -8.751954078674316
    5. ' ,' → logprob: -9.626954078674316
    6. 'e' → logprob: -10.626954078674316
    7. ',)' → logprob: -11.126954078674316
    8. '),' → logprob: -11.376954078674316
    9. '_,' → logprob: -11.876954078674316
    10. 'er' → logprob: -12.001954078674316

Token 899: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008824214339256287
    2. ' w' → logprob: -4.758824348449707
    3. 'None' → logprob: -8.758824348449707
    4. ' None' → logprob: -10.508824348449707
    5. '(w' → logprob: -11.383824348449707
    6. ')' → logprob: -12.508824348449707
    7. '
' → logprob: -12.758824348449707
    8. '	w' → logprob: -13.383824348449707
    9. '   ' → logprob: -13.633824348449707
    10. '```' → logprob: -14.258824348449707

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015824666479602456
    2. ')' → logprob: -9.125158309936523
    3. ',
' → logprob: -10.625158309936523
    4. ',None' → logprob: -11.750158309936523
    5. ' ,' → logprob: -11.875158309936523
    6. '),' → logprob: -13.625158309936523
    7. '```' → logprob: -13.750158309936523
    8. '   ' → logprob: -13.875158309936523
    9. 'None' → logprob: -13.875158309936523
    10. ',w' → logprob: -13.875158309936523

Token 901: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01105359848588705
    2. ' c' → logprob: -4.511053562164307
    3. 'None' → logprob: -13.636054039001465
    4. ')' → logprob: -13.886054039001465
    5. ' None' → logprob: -14.261054039001465
    6. ')c' → logprob: -14.386054039001465
    7. '   ' → logprob: -14.636054039001465
    8. '```' → logprob: -14.636054039001465
    9. '
' → logprob: -14.761054039001465
    10. '       ' → logprob: -15.261054039001465

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017183588352054358
    2. ',m' → logprob: -9.375171661376953
    3. ',
' → logprob: -9.750171661376953
    4. ')' → logprob: -11.000171661376953
    5. 'm' → logprob: -11.625171661376953
    6. ' ,' → logprob: -13.000171661376953
    7. '),' → logprob: -15.000171661376953
    8. 'w' → logprob: -16.000171661376953
    9. ',w' → logprob: -16.125171661376953
    10. ',)' → logprob: -16.750171661376953

Token 903: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001398929744027555
    2. ' m' → logprob: -8.875140190124512
    3. ')' → logprob: -17.250139236450195
    4. ')m' → logprob: -18.250139236450195
    5. '   ' → logprob: -18.375139236450195
    6. '
' → logprob: -18.375139236450195
    7. ' ' → logprob: -18.875139236450195
    8. '	m' → logprob: -19.125139236450195
    9. '```' → logprob: -19.500139236450195
    10. '  ' → logprob: -21.125139236450195

Token 904: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.62500286102295
    3. '):' → logprob: -14.75000286102295
    4. '   ' → logprob: -14.87500286102295
    5. ')`' → logprob: -15.12500286102295
    6. ' )' → logprob: -15.25000286102295
    7. '),' → logprob: -15.37500286102295
    8. ',' → logprob: -16.000003814697266
    9. ').' → logprob: -16.500003814697266
    10. '))' → logprob: -17.000003814697266

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11863914132118225
    2. '   ' → logprob: -2.8686392307281494
    3. '
' → logprob: -3.2436392307281494
    4. ' for' → logprob: -4.99363899230957
    5. '        
' → logprob: -5.61863899230957
    6. '\n' → logprob: -5.99363899230957
    7. '    
' → logprob: -6.49363899230957
    8. ' 
' → logprob: -7.11863899230957
    9. 'for' → logprob: -8.24363899230957
    10. '  
' → logprob: -8.49363899230957

Token 906: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39681506156921387
    2. '   ' → logprob: -1.5218150615692139
    3. ' for' → logprob: -2.396815061569214
    4. 'for' → logprob: -4.021815299987793
    5. '```' → logprob: -9.021815299987793
    6. '
' → logprob: -9.521815299987793
    7. '    
' → logprob: -10.396815299987793
    8. '	for' → logprob: -10.396815299987793
    9. '        
' → logprob: -10.521815299987793
    10. ' ' → logprob: -12.146815299987793

Token 907: ' Because' (ID: 13602)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45374688506126404
    2. 'for' → logprob: -1.0787469148635864
    3. '   ' → logprob: -3.953746795654297
    4. '       ' → logprob: -5.203746795654297
    5. '    
' → logprob: -11.703746795654297
    6. '
' → logprob: -11.703746795654297
    7. ' h' → logprob: -11.828746795654297
    8. ' indent' → logprob: -12.078746795654297
    9. '        
' → logprob: -12.203746795654297
    10. ' ' → logprob: -12.203746795654297

Token 908: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3187619149684906
    2. ' h' → logprob: -1.568761944770813
    3. ' H' → logprob: -3.1937618255615234
    4. ' range' → logprob: -4.443761825561523
    5. ' space' → logprob: -6.068761825561523
    6. ' len' → logprob: -6.068761825561523
    7. ' for' → logprob: -6.318761825561523
    8. '  ' → logprob: -6.318761825561523
    9. 'H' → logprob: -7.318761825561523
    10. ' True' → logprob: -7.568761825561523

Token 909: ' is' (ID: 382)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6233656406402588
    2. ' ' → logprob: -2.373365640640259
    3. '_' → logprob: -2.748365640640259
    4. 'for' → logprob: -2.998365640640259
    5. '   ' → logprob: -3.123365640640259
    6. ' H' → logprob: -3.123365640640259
    7. ' for' → logprob: -3.373365640640259
    8. '    ' → logprob: -3.373365640640259
    9. ' =' → logprob: -3.748365640640259
    10. 'H' → logprob: -3.873365640640259

Token 910: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.4857943058013916
    2. ' ' → logprob: -1.2357943058013916
    3. ' H' → logprob: -3.1107943058013916
    4. 'H' → logprob: -3.1107943058013916
    5. '   ' → logprob: -6.1107940673828125
    6. ' min' → logprob: -7.6107940673828125
    7. '100' → logprob: -7.7357940673828125
    8. '20' → logprob: -8.110794067382812
    9. '1' → logprob: -8.485794067382812
    10. '  ' → logprob: -8.860794067382812

Token 911: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.1280992031097412
    2. 'H' → logprob: -2.253099203109741
    3. ' ' → logprob: -4.50309944152832
    4. '51' → logprob: -6.12809944152832
    5. '100' → logprob: -7.37809944152832
    6. ' H' → logprob: -7.62809944152832
    7. '   ' → logprob: -8.75309944152832
    8. '1' → logprob: -9.12809944152832
    9. '20' → logprob: -9.37809944152832
    10. '0' → logprob: -9.87809944152832

Token 912: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9992436766624451
    2. ':' → logprob: -1.2492437362670898
    3. '   ' → logprob: -2.12424373626709
    4. ',' → logprob: -2.99924373626709
    5. '[' → logprob: -2.99924373626709
    6. ')' → logprob: -3.24924373626709
    7. 'for' → logprob: -3.62424373626709
    8. '):' → logprob: -3.87424373626709
    9. ' for' → logprob: -5.12424373626709
    10. '    ' → logprob: -5.37424373626709

Token 913: ' each' (ID: 2454)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0674529075622559
    2. ' h' → logprob: -1.5674529075622559
    3. ' H' → logprob: -1.5674529075622559
    4. 'h' → logprob: -2.192452907562256
    5. ' hero' → logprob: -2.567452907562256
    6. 'hero' → logprob: -3.942452907562256
    7. ' heroes' → logprob: -4.942452907562256
    8. '_' → logprob: -5.067452907562256
    9. 'heroes' → logprob: -5.942452907562256
    10. ' ' → logprob: -5.942452907562256

Token 914: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.45237991213798523
    2. ':' → logprob: -1.8273799419403076
    3. '   ' → logprob: -2.9523799419403076
    4. '):
' → logprob: -3.2023799419403076
    5. '_h' → logprob: -4.0773797035217285
    6. '):' → logprob: -4.3273797035217285
    7. '
' → logprob: -4.4523797035217285
    8. ',' → logprob: -4.5773797035217285
    9. ' :
' → logprob: -4.5773797035217285
    10. '       ' → logprob: -4.7023797035217285

Token 915: ' total' (ID: 3609)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01689998246729374
    2. 'for' → logprob: -4.266900062561035
    3. ' 
' → logprob: -6.266900062561035
    4. '   ' → logprob: -8.141900062561035
    5. ' h' → logprob: -8.891900062561035
    6. ' ' → logprob: -9.141900062561035
    7. '       ' → logprob: -9.516900062561035
    8. '    ' → logprob: -9.641900062561035
    9. '```' → logprob: -10.141900062561035
    10. '    
' → logprob: -11.266900062561035

Token 916: ' combinations' (ID: 43835)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9763307571411133
    2. '   ' → logprob: -1.7263307571411133
    3. '_' → logprob: -1.8513307571411133
    4. ' _' → logprob: -2.3513307571411133
    5. ' for' → logprob: -3.2263307571411133
    6. ')' → logprob: -3.7263307571411133
    7. ' ' → logprob: -3.7263307571411133
    8. '    ' → logprob: -3.8513307571411133
    9. '  ' → logprob: -4.476330757141113
    10. '_token' → logprob: -4.601330757141113

Token 917: ' could' (ID: 2023)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16299915313720703
    2. '   ' → logprob: -3.287999153137207
    3. '       ' → logprob: -3.662999153137207
    4. '):' → logprob: -3.912999153137207
    5. 'for' → logprob: -4.287999153137207
    6. ' for' → logprob: -4.537999153137207
    7. ' :' → logprob: -4.662999153137207
    8. ' =' → logprob: -4.787999153137207
    9. 'import' → logprob: -5.162999153137207
    10. ',' → logprob: -5.787999153137207

Token 918: ' be' (ID: 413)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12170947343111038
    2. ' be' → logprob: -2.6217095851898193
    3. '=' → logprob: -3.4967095851898193
    4. ' +=' → logprob: -5.62170934677124
    5. ' <=' → logprob: -5.87170934677124
    6. ' ' → logprob: -6.74670934677124
    7. ' continue' → logprob: -6.99670934677124
    8. ')' → logprob: -7.74670934677124
    9. ',' → logprob: -8.246709823608398
    10. '_' → logprob: -8.496709823608398

Token 919: ' big' (ID: 3464)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46979713439941406
    2. ' ' → logprob: -1.094797134399414
    3. ' (' → logprob: -4.344797134399414
    4. '0' → logprob: -5.469797134399414
    5. '(' → logprob: -5.719797134399414
    6. '```' → logprob: -5.844797134399414
    7. ' H' → logprob: -6.219797134399414
    8. ' =' → logprob: -6.469797134399414
    9. '50' → logprob: -6.469797134399414
    10. ' W' → logprob: -7.219797134399414

Token 920: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21919073164463043
    2. ':' → logprob: -2.219190835952759
    3. '   ' → logprob: -3.719190835952759
    4. '
' → logprob: -4.46919059753418
    5. 'for' → logprob: -4.46919059753418
    6. ',' → logprob: -4.59419059753418
    7. ' for' → logprob: -4.71919059753418
    8. '):' → logprob: -5.21919059753418
    9. ':
' → logprob: -5.59419059753418
    10. '        
' → logprob: -6.09419059753418

Token 921: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5179009437561035
    2. ' continue' → logprob: -1.7679009437561035
    3. ' True' → logprob: -2.3929009437561035
    4. ' for' → logprob: -3.5179009437561035
    5. '           ' → logprob: -3.6429009437561035
    6. 'continue' → logprob: -4.2679009437561035
    7. 'True' → logprob: -4.7679009437561035
    8. '\n' → logprob: -5.0179009437561035
    9. ' (' → logprob: -5.1429009437561035
    10. '   ' → logprob: -5.1429009437561035

Token 922: ' beginner' (ID: 57062)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5431318879127502
    2. ' True' → logprob: -2.1681318283081055
    3. ' h' → logprob: -2.2931318283081055
    4. 'H' → logprob: -2.4181318283081055
    5. ' ' → logprob: -3.0431318283081055
    6. '   ' → logprob: -4.0431318283081055
    7. ' range' → logprob: -4.5431318283081055
    8. ' W' → logprob: -4.7931318283081055
    9. '    ' → logprob: -5.0431318283081055
    10. 'h' → logprob: -5.1681318283081055

Token 923: ' approach' (ID: 7139)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 924: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19634833931922913
    2. '   ' → logprob: -2.8213484287261963
    3. '       ' → logprob: -3.1963484287261963
    4. ':
' → logprob: -4.071348190307617
    5. '):' → logprob: -4.571348190307617
    6. ',' → logprob: -4.821348190307617
    7. ' =' → logprob: -4.946348190307617
    8. ' :' → logprob: -5.321348190307617
    9. '):
' → logprob: -5.821348190307617
    10. '<|end|>' → logprob: -5.946348190307617

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020342161878943443
    2. '           ' → logprob: -4.1453423500061035
    3. ' for' → logprob: -6.2703423500061035
    4. '   ' → logprob: -7.1453423500061035
    5. '        ' → logprob: -7.2703423500061035
    6. '        
' → logprob: -8.270341873168945
    7. '```' → logprob: -9.020341873168945
    8. '               ' → logprob: -9.145341873168945
    9. 'for' → logprob: -9.270341873168945
    10. '    ' → logprob: -9.645341873168945

Token 926: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03490326553583145
    2. ' for' → logprob: -3.6599032878875732
    3. 'for' → logprob: -5.784903049468994
    4. '           ' → logprob: -6.159903049468994
    5. '   ' → logprob: -6.284903049468994
    6. '        
' → logprob: -7.534903049468994
    7. ' continue' → logprob: -7.659903049468994
    8. 'continue' → logprob: -9.784903526306152
    9. '        ' → logprob: -9.909903526306152
    10. '               ' → logprob: -10.159903526306152

Token 927: ' we'll' (ID: 22782)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7202825546264648
    2. ' for' → logprob: -1.0952825546264648
    3. '       ' → logprob: -2.720282554626465
    4. ' continue' → logprob: -2.845282554626465
    5. 'continue' → logprob: -2.970282554626465
    6. '   ' → logprob: -6.345282554626465
    7. '           ' → logprob: -7.470282554626465
    8. '```' → logprob: -7.595282554626465
    9. 'pass' → logprob: -8.595282554626465
    10. 'max' → logprob: -9.345282554626465

Token 928: ' prune' (ID: 140388)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4454801380634308
    2. 'continue' → logprob: -1.0704801082611084
    3. '   ' → logprob: -4.8204803466796875
    4. '```' → logprob: -6.3204803466796875
    5. 'indent' → logprob: -6.5704803466796875
    6. '       ' → logprob: -6.5704803466796875
    7. ' indent' → logprob: -7.1954803466796875
    8. 'for' → logprob: -7.4454803466796875
    9. ' for' → logprob: -7.5704803466796875
    10. 'import' → logprob: -7.8204803466796875

Token 929: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04626863822340965
    2. '        
' → logprob: -4.671268463134766
    3. '        ' → logprob: -4.796268463134766
    4. ' for' → logprob: -5.171268463134766
    5. ' if' → logprob: -5.421268463134766
    6. 'for' → logprob: -5.671268463134766
    7. '   ' → logprob: -5.796268463134766
    8. '
' → logprob: -6.046268463134766
    9. '           ' → logprob: -6.546268463134766
    10. '    ' → logprob: -6.546268463134766

Token 930: ' only' (ID: 1606)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9664061069488525
    2. ' ' → logprob: -1.7164061069488525
    3. ' range' → logprob: -2.4664061069488525
    4. '1' → logprob: -2.9664061069488525
    5. '50' → logprob: -2.9664061069488525
    6. 'continue' → logprob: -2.9664061069488525
    7. 'range' → logprob: -3.3414061069488525
    8. 'H' → logprob: -3.3414061069488525
    9. ' continue' → logprob: -3.5914061069488525
    10. ' min' → logprob: -3.7164061069488525

Token 931: ' possible' (ID: 4149)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6925480961799622
    2. 'range' → logprob: -1.4425480365753174
    3. ' for' → logprob: -2.6925480365753174
    4. 'for' → logprob: -3.0675480365753174
    5. 'h' → logprob: -3.4425480365753174
    6. ' hero' → logprob: -3.5675480365753174
    7. ' h' → logprob: -3.8175480365753174
    8. 'hero' → logprob: -4.4425482749938965
    9. ' include' → logprob: -4.9425482749938965
    10. ' (' → logprob: -5.0675482749938965

Token 932: ' combinations' (ID: 43835)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3982293605804443
    2. ' for' → logprob: -1.7732293605804443
    3. 'for' → logprob: -1.8982293605804443
    4. '   ' → logprob: -2.2732293605804443
    5. ' range' → logprob: -2.7732293605804443
    6. 'hero' → logprob: -2.8982293605804443
    7. 'range' → logprob: -2.8982293605804443
    8. ' hero' → logprob: -3.2732293605804443
    9. 'heroes' → logprob: -3.5232293605804443
    10. ' if' → logprob: -4.148229598999023

Token 933: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09478668868541718
    2. ' for' → logprob: -3.2197866439819336
    3. '   ' → logprob: -3.4697866439819336
    4. '
' → logprob: -4.094786643981934
    5. 'for' → logprob: -6.094786643981934
    6. '        
' → logprob: -8.969786643981934
    7. '    
' → logprob: -9.094786643981934
    8. '           ' → logprob: -9.969786643981934
    9. '```' → logprob: -9.969786643981934
    10. ' ' → logprob: -11.469786643981934

Token 934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31741899251937866
    2. '   ' → logprob: -1.5674190521240234
    3. ' for' → logprob: -2.9424190521240234
    4. 'for' → logprob: -4.817419052124023
    5. '
' → logprob: -6.442419052124023
    6. '```' → logprob: -7.192419052124023
    7. '        
' → logprob: -8.817419052124023
    8. '    
' → logprob: -10.067419052124023
    9. '           ' → logprob: -11.442419052124023
    10. ' ' → logprob: -12.692419052124023

Token 935: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6915561556816101
    2. 'for' (adapté à ' for') → logprob: -0.9415561556816101
    3. '       ' → logprob: -2.316556215286255
    4. '   ' → logprob: -4.566555976867676
    5. '```' → logprob: -9.191555976867676
    6. '
' → logprob: -9.816555976867676
    7. '    
' → logprob: -12.316555976867676
    8. '        
' → logprob: -12.566555976867676
    9. '``' → logprob: -12.941555976867676
    10. 'from' → logprob: -12.941555976867676

Token 936: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.008041306398808956
    2. 'h' → logprob: -4.8830413818359375
    3. ' hero' → logprob: -8.758041381835938
    4. ' ' → logprob: -9.133041381835938
    5. ' _' → logprob: -9.508041381835938
    6. ' ' → logprob: -11.133041381835938
    7. '_' → logprob: -11.258041381835938
    8. ' space' → logprob: -11.258041381835938
    9. 'hero' → logprob: -11.508041381835938
    10. '_h' → logprob: -11.758041381835938

Token 937: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008626867085695267
    2. 'in' → logprob: -4.758626937866211
    3. ' ' → logprob: -11.508626937866211
    4. ')' → logprob: -15.258626937866211
    5. 'space' → logprob: -15.258626937866211
    6. 'n' → logprob: -15.383626937866211
    7. '1' → logprob: -15.383626937866211
    8. ',' → logprob: -15.383626937866211
    9. ' ,' → logprob: -16.00862693786621
    10. '_' → logprob: -16.13362693786621

Token 938: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3486783802509308
    2. 'range' → logprob: -1.2236783504486084
    3. '1' → logprob: -9.098678588867188
    4. '(range' → logprob: -9.598678588867188
    5. ' in' → logprob: -10.223678588867188
    6. ' ' → logprob: -11.848678588867188
    7. '   ' → logprob: -13.098678588867188
    8. 'in' → logprob: -13.098678588867188
    9. '(' → logprob: -13.223678588867188
    10. ' (' → logprob: -13.473678588867188

Token 939: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.68022444692906e-05
    2. '1' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.875046730041504
    4. '(
' → logprob: -15.250046730041504
    5. '   ' → logprob: -15.875046730041504
    6. '(H' → logprob: -16.75004768371582
    7. ' ' → logprob: -19.75004768371582
    8. '0' → logprob: -19.87504768371582
    9. '	' → logprob: -20.50004768371582
    10. '       ' → logprob: -21.25004768371582

Token 940: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. 'H' → logprob: -12.125006675720215
    3. '0' → logprob: -14.250006675720215
    4. '   ' → logprob: -15.125006675720215
    5. ' ' → logprob: -15.625006675720215
    6. '(' → logprob: -15.875006675720215
    7. '(H' → logprob: -17.25000762939453
    8. ' H' → logprob: -19.25000762939453
    9. '
' → logprob: -19.75000762939453
    10. '```' → logprob: -19.87500762939453

Token 941: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010354298865422606
    2. ' ,' → logprob: -7.001035213470459
    3. ',H' → logprob: -9.126035690307617
    4. ',
' → logprob: -11.751035690307617
    5. '   ' → logprob: -13.001035690307617
    6. '       ' → logprob: -13.001035690307617
    7. '(H' → logprob: -14.126035690307617
    8. ',h' → logprob: -14.376035690307617
    9. '(' → logprob: -15.751035690307617
    10. '```' → logprob: -15.876035690307617

Token 942: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -6.704273118884885e-07
    2. ' H' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.5
    4. '(H' → logprob: -21.5
    5. '	H' → logprob: -22.125
    6. ',H' → logprob: -22.5
    7. '       ' → logprob: -22.625
    8. '<H' → logprob: -23.5
    9. ')' → logprob: -23.625
    10. '.H' → logprob: -23.625

Token 943: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246292024850845
    2. ' +' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.523246765136719
    4. '+
' → logprob: -16.02324676513672
    5. '       ' → logprob: -16.14824676513672
    6. '```' → logprob: -17.39824676513672
    7. '):
' → logprob: -17.64824676513672
    8. '1' → logprob: -17.77324676513672
    9. ' +
' → logprob: -17.89824676513672
    10. '
' → logprob: -18.02324676513672

Token 944: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.875022888183594
    3. ')' → logprob: -13.250022888183594
    4. '   ' → logprob: -13.750022888183594
    5. '):
' → logprob: -15.125022888183594
    6. '```' → logprob: -15.375022888183594
    7. '
' → logprob: -15.500022888183594
    8. '2' → logprob: -17.250022888183594
    9. '       ' → logprob: -17.375022888183594
    10. '):' → logprob: -17.375022888183594

Token 945: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025685155764222145
    2. '):
' → logprob: -4.0256853103637695
    3. ':' → logprob: -4.9006853103637695
    4. '       ' → logprob: -10.77568531036377
    5. '   ' → logprob: -11.27568531036377
    6. ')' → logprob: -11.77568531036377
    7. ':
' → logprob: -12.15068531036377
    8. ' ):' → logprob: -12.52568531036377
    9. ',' → logprob: -12.65068531036377
    10. '):
' → logprob: -13.02568531036377

Token 946: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25067654252052307
    2. ' for' → logprob: -1.8756765127182007
    3. '       ' → logprob: -2.8756766319274902
    4. '   ' → logprob: -4.50067663192749
    5. 'for' → logprob: -7.50067663192749
    6. '        ' → logprob: -9.375676155090332
    7. ' ' → logprob: -9.500676155090332
    8. ':' → logprob: -10.375676155090332
    9. '<|end|>' → logprob: -10.500676155090332
    10. '	       ' → logprob: -10.625676155090332

Token 947: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18512405455112457
    2. 'for' (adapté à ' for') → logprob: -2.060124158859253
    3. '           ' → logprob: -3.560124158859253
    4. '   ' → logprob: -4.810123920440674
    5. '       ' → logprob: -5.435123920440674
    6. ' ' → logprob: -8.435124397277832
    7. '	for' → logprob: -8.810124397277832
    8. ' ' → logprob: -8.935124397277832
    9. '               ' → logprob: -10.060124397277832
    10. '	       ' → logprob: -11.060124397277832

Token 948: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2017938643693924
    2. ' w' → logprob: -1.701793909072876
    3. 'None' → logprob: -9.076793670654297
    4. '_w' → logprob: -9.576793670654297
    5. ' None' → logprob: -9.701793670654297
    6. '   ' → logprob: -9.951793670654297
    7. 'war' → logprob: -10.451793670654297
    8. ' ' → logprob: -11.201793670654297
    9. '	w' → logprob: -11.326793670654297
    10. ' ' → logprob: -12.076793670654297

Token 949: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08894262462854385
    2. 'in' → logprob: -2.463942527770996
    3. ' ' → logprob: -13.588942527770996
    4. '   ' → logprob: -14.838942527770996
    5. ',' → logprob: -15.088942527770996
    6. 'i' → logprob: -15.588942527770996
    7. 'In' → logprob: -15.713942527770996
    8. 's' → logprob: -16.213943481445312
    9. 'n' → logprob: -16.713943481445312
    10. '```' → logprob: -16.838943481445312

Token 950: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012035658583045006
    2. 'range' → logprob: -6.876203536987305
    3. ' [' → logprob: -9.126203536987305
    4. '([' → logprob: -10.001203536987305
    5. '[N' → logprob: -12.001203536987305
    6. '(range' → logprob: -13.001203536987305
    7. '   ' → logprob: -13.251203536987305
    8. ' range' → logprob: -13.626203536987305
    9. '(' → logprob: -13.626203536987305
    10. '[n' → logprob: -14.376203536987305

Token 951: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.512236498361744e-07
    2. ' None' → logprob: -15.125000953674316
    3. '
' → logprob: -16.25
    4. '   ' → logprob: -16.25
    5. '(None' → logprob: -18.375
    6. '0' → logprob: -19.375
    7. '_None' → logprob: -19.75
    8. 'none' → logprob: -19.875
    9. '    
' → logprob: -20.0
    10. '
' → logprob: -21.0

Token 952: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3907075524330139
    2. ']' → logprob: -1.1407074928283691
    3. ']+' → logprob: -5.640707492828369
    4. ' ,' → logprob: -9.015707969665527
    5. ' ]' → logprob: -9.265707969665527
    6. ',
' → logprob: -10.140707969665527
    7. '   ' → logprob: -11.640707969665527
    8. ',None' → logprob: -12.390707969665527
    9. '           ' → logprob: -12.890707969665527
    10. '       ' → logprob: -13.265707969665527

Token 953: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6084457039833069
    2. ' +' → logprob: -1.108445644378662
    3. ',' → logprob: -2.233445644378662
    4. '+[' → logprob: -4.608445644378662
    5. ':' → logprob: -5.858445644378662
    6. '           ' → logprob: -6.483445644378662
    7. '[' → logprob: -6.483445644378662
    8. '               ' → logprob: -7.483445644378662
    9. ' ,' → logprob: -8.23344612121582
    10. '       ' → logprob: -8.35844612121582

Token 954: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.160971628967673e-05
    2. '[list' → logprob: -9.500082015991211
    3. 'range' → logprob: -12.125082015991211
    4. '[' → logprob: -14.000082015991211
    5. ' list' → logprob: -15.000082015991211
    6. '(list' → logprob: -18.37508201599121
    7. '   ' → logprob: -19.37508201599121
    8. '=list' → logprob: -19.62508201599121
    9. '[l' → logprob: -20.00008201599121
    10. '[List' → logprob: -20.00008201599121

Token 955: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -5.872261317563243e-05
    2. 'range' → logprob: -9.750059127807617
    3. '(' → logprob: -14.875059127807617
    4. ' range' → logprob: -18.375059127807617
    5. '	range' → logprob: -19.625059127807617
    6. '(
' → logprob: -20.375059127807617
    7. '(map' → logprob: -21.375059127807617
    8. ' (' → logprob: -22.625059127807617
    9. 'Range' → logprob: -23.750059127807617
    10. '_range' → logprob: -24.000059127807617

Token 956: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013480921043083072
    2. '1' → logprob: -6.62634801864624
    3. '(W' → logprob: -10.751348495483398
    4. '0' → logprob: -15.126348495483398
    5. ' (' → logprob: -15.501348495483398
    6. '(
' → logprob: -16.3763484954834
    7. '(w' → logprob: -16.6263484954834
    8. ' ' → logprob: -17.7513484954834
    9. '   ' → logprob: -18.1263484954834
    10. '(H' → logprob: -18.3763484954834

Token 957: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013375049456954002
    2. '0' → logprob: -7.50133752822876
    3. '(' → logprob: -7.87633752822876
    4. 'W' → logprob: -7.87633752822876
    5. '(W' → logprob: -10.626337051391602
    6. ' ' → logprob: -15.251337051391602
    7. ',W' → logprob: -15.876337051391602
    8. '   ' → logprob: -16.0013370513916
    9. ' W' → logprob: -16.2513370513916
    10. 'w' → logprob: -17.0013370513916

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001985852373763919
    2. ',W' → logprob: -6.251986026763916
    3. ' ,' → logprob: -9.876985549926758
    4. ',
' → logprob: -13.376985549926758
    5. ',w' → logprob: -13.501985549926758
    6. '   ' → logprob: -13.626985549926758
    7. '       ' → logprob: -14.376985549926758
    8. '(W' → logprob: -15.251985549926758
    9. 'W' → logprob: -15.376985549926758
    10. '           ' → logprob: -15.626985549926758

Token 959: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.0087516784551553e-05
    2. ' W' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.12501049041748
    4. '       ' → logprob: -15.87501049041748
    5. '(W' → logprob: -16.375009536743164
    6. '	W' → logprob: -17.000009536743164
    7. '           ' → logprob: -17.625009536743164
    8. ',W' → logprob: -18.250009536743164
    9. '               ' → logprob: -18.500009536743164
    10. '                   ' → logprob: -18.875009536743164

Token 960: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8444881536415778e-05
    2. ' +' → logprob: -10.500028610229492
    3. ')):
' → logprob: -14.875028610229492
    4. '+
' → logprob: -15.000028610229492
    5. ')):' → logprob: -16.375028610229492
    6. '1' → logprob: -17.250028610229492
    7. '   ' → logprob: -17.375028610229492
    8. '[' → logprob: -17.500028610229492
    9. '       ' → logprob: -17.500028610229492
    10. '))' → logprob: -17.875028610229492

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.875
    4. '
' → logprob: -19.625
    5. '2' → logprob: -20.125
    6. '```' → logprob: -20.375
    7. ')' → logprob: -20.75
    8. '-' → logprob: -21.0
    9. '+' → logprob: -21.5
    10. '(' → logprob: -21.625

Token 962: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03907391428947449
    2. ')):' → logprob: -3.914073944091797
    3. '):
' → logprob: -4.039073944091797
    4. ')):
' → logprob: -7.789073944091797
    5. '           ' → logprob: -9.289073944091797
    6. '       ' → logprob: -9.289073944091797
    7. ')' → logprob: -9.289073944091797
    8. ']):' → logprob: -10.914073944091797
    9. '):

' → logprob: -11.914073944091797
    10. '))' → logprob: -11.914073944091797

Token 963: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7791324257850647
    2. '               ' → logprob: -0.9041324257850647
    3. '):' → logprob: -3.15413236618042
    4. '):
' → logprob: -3.65413236618042
    5. ']' → logprob: -3.90413236618042
    6. ']:' → logprob: -4.02913236618042
    7. ':' → logprob: -4.65413236618042
    8. ')' → logprob: -5.27913236618042
    9. ']:
' → logprob: -5.52913236618042
    10. '       ' → logprob: -6.02913236618042

Token 964: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7845454216003418
    2. '):' → logprob: -1.7845454216003418
    3. ':' → logprob: -2.034545421600342
    4. '               ' → logprob: -2.159545421600342
    5. '):
' → logprob: -3.284545421600342
    6. '           ' → logprob: -3.409545421600342
    7. ']:' → logprob: -3.909545421600342
    8. ':
' → logprob: -4.284545421600342
    9. ']' → logprob: -4.534545421600342
    10. ']:
' → logprob: -5.659545421600342

Token 965: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4408639371395111
    2. '           ' → logprob: -1.4408639669418335
    3. '               ' → logprob: -2.440863847732544
    4. ']' → logprob: -4.565864086151123
    5. 'if' → logprob: -5.565864086151123
    6. 'for' → logprob: -5.565864086151123
    7. ':
' → logprob: -5.940864086151123
    8. ' for' → logprob: -6.065864086151123
    9. ' if' → logprob: -6.190864086151123
    10. ']:
' → logprob: -6.440864086151123

Token 966: ' warrior' (ID: 76541)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.11454044282436371
    2. 'w' → logprob: -2.2395403385162354
    3. ' not' → logprob: -7.3645405769348145
    4. '               ' → logprob: -7.8645405769348145
    5. '                   ' → logprob: -8.364540100097656
    6. '                ' → logprob: -9.364540100097656
    7. 'not' → logprob: -9.489540100097656
    8. ' (' → logprob: -9.614540100097656
    9. '   ' → logprob: -9.739540100097656
    10. ' ' → logprob: -10.239540100097656

Token 967: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.036114055663347244
    2. 'is' → logprob: -4.91111421585083
    3. ' ==' → logprob: -5.16111421585083
    4. ')' → logprob: -5.16111421585083
    5. 'w' → logprob: -5.53611421585083
    6. '               ' → logprob: -5.66111421585083
    7. ' !=' → logprob: -6.41111421585083
    8. '==' → logprob: -6.53611421585083
    9. '):
' → logprob: -6.66111421585083
    10. ']' → logprob: -6.78611421585083

Token 968: ' present' (ID: 3333)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.23174336552619934
    2. ' None' → logprob: -2.231743335723877
    3. ' not' → logprob: -2.606743335723877
    4. 'not' → logprob: -3.856743335723877
    5. 'w' → logprob: -5.606743335723877
    6. ' w' → logprob: -8.106743812561035
    7. '   ' → logprob: -8.606743812561035
    8. 'Not' → logprob: -9.231743812561035
    9. '               ' → logprob: -9.481743812561035
    10. '=None' → logprob: -9.731743812561035

Token 969: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8818475604057312
    2. '               ' → logprob: -1.506847620010376
    3. ':
' → logprob: -1.506847620010376
    4. ':' → logprob: -2.256847620010376
    5. ' and' → logprob: -4.506847381591797
    6. '):
' → logprob: -5.131847381591797
    7. ',' → logprob: -5.506847381591797
    8. 'and' → logprob: -5.756847381591797
    9. ']' → logprob: -6.006847381591797
    10. ' if' → logprob: -6.131847381591797

Token 970: ' hero' (ID: 20917)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3923758566379547
    2. ' w' → logprob: -2.267375946044922
    3. 'w' → logprob: -2.392375946044922
    4. ' if' → logprob: -3.017375946044922
    5. 'if' → logprob: -4.017375946044922
    6. ' warrior' → logprob: -4.142375946044922
    7. '               ' → logprob: -4.517375946044922
    8. ' not' → logprob: -4.892375946044922
    9. ')' → logprob: -5.517375946044922
    10. '   ' → logprob: -6.142375946044922

Token 971: ' must' (ID: 2804)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16670531034469604
    2. 'in' → logprob: -2.041705369949341
    3. ')' → logprob: -4.291705131530762
    4. '_' → logprob: -5.666705131530762
    5. '   ' → logprob: -7.166705131530762
    6. '           ' → logprob: -7.291705131530762
    7. ']' → logprob: -7.291705131530762
    8. ' not' → logprob: -7.416705131530762
    9. '_in' → logprob: -7.416705131530762
    10. '       ' → logprob: -7.791705131530762

Token 972: ' be' (ID: 413)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38999783992767334
    2. 'in' → logprob: -1.1399978399276733
    3. ')' → logprob: -6.014997959136963
    4. ' be' → logprob: -8.139997482299805
    5. ' ' → logprob: -9.764997482299805
    6. '               ' → logprob: -10.264997482299805
    7. '_' → logprob: -10.264997482299805
    8. '                   ' → logprob: -10.514997482299805
    9. '   ' → logprob: -10.764997482299805
    10. '           ' → logprob: -10.889997482299805

Token 973: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.182962104678154
    2. 'w' → logprob: -2.43296217918396
    3. ' in' → logprob: -2.80796217918396
    4. 'war' → logprob: -5.057961940765381
    5. 'h' → logprob: -5.432961940765381
    6. ' w' → logprob: -5.557961940765381
    7. ')' → logprob: -6.057961940765381
    8. '(w' → logprob: -7.557961940765381
    9. '   ' → logprob: -7.932961940765381
    10. 'None' → logprob: -8.182962417602539

Token 974: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.008814170025289059
    2. ' warrior' → logprob: -5.258814334869385
    3. '               ' → logprob: -6.633814334869385
    4. '   ' → logprob: -7.383814334869385
    5. '       ' → logprob: -7.508814334869385
    6. '           ' → logprob: -7.633814334869385
    7. '                   ' → logprob: -8.258813858032227
    8. '                       ' → logprob: -9.508813858032227
    9. '                               ' → logprob: -9.883813858032227
    10. '                                   ' → logprob: -10.758813858032227

Token 975: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3663626305060461e-05
    2. 's' → logprob: -12.87501335144043
    3. '_w' → logprob: -13.00001335144043
    4. ')' → logprob: -13.12501335144043
    5. '_f' → logprob: -13.75001335144043
    6. '[w' → logprob: -13.75001335144043
    7. '_friend' → logprob: -14.62501335144043
    8. '       ' → logprob: -14.62501335144043
    9. ']' → logprob: -14.75001335144043
    10. '_h' → logprob: -14.87501335144043

Token 976: 'hero' (ID: 28501)
  Prédit: 'hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hero' → logprob: -0.029330827295780182
    2. '_' → logprob: -4.154330730438232
    3. 'w' → logprob: -5.279330730438232
    4. '[w' → logprob: -5.654330730438232
    5. 'war' → logprob: -6.654330730438232
    6. '_w' → logprob: -6.779330730438232
    7. '[' → logprob: -7.404330730438232
    8. '_h' → logprob: -7.404330730438232
    9. 'h' → logprob: -8.27933120727539
    10. '```' → logprob: -9.40433120727539

Token 977: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.008376159705221653
    2. 'w' → logprob: -5.633376121520996
    3. '_w' → logprob: -6.508376121520996
    4. '           ' → logprob: -7.258376121520996
    5. '               ' → logprob: -7.258376121520996
    6. ')' → logprob: -7.508376121520996
    7. ']' → logprob: -8.008376121520996
    8. '       ' → logprob: -8.133376121520996
    9. '):
' → logprob: -8.633376121520996
    10. 's' → logprob: -9.633376121520996

Token 978: '-' (ID: 12)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.04548119753599167
    2. '])' → logprob: -3.6704812049865723
    3. ']' → logprob: -4.295481204986572
    4. '-' → logprob: -6.545481204986572
    5. 'w' → logprob: -6.920481204986572
    6. ']]' → logprob: -7.295481204986572
    7. '][' → logprob: -8.170480728149414
    8. '[' → logprob: -8.170480728149414
    9. ')]' → logprob: -8.420480728149414
    10. ']):
' → logprob: -9.170480728149414

Token 979: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14706572890281677
    2. '1' → logprob: -2.8970656394958496
    3. '[w' → logprob: -3.5220656394958496
    4. '])' → logprob: -3.7720656394958496
    5. ']' → logprob: -4.02206563949585
    6. ')]' → logprob: -5.27206563949585
    7. ')' → logprob: -6.02206563949585
    8. '(w' → logprob: -6.14706563949585
    9. ' w' → logprob: -8.272066116333008
    10. ']]' → logprob: -8.772066116333008

Token 980: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22139720618724823
    2. '])' → logprob: -2.3463971614837646
    3. '               ' → logprob: -3.5963971614837646
    4. ']:
' → logprob: -3.8463971614837646
    5. ')]' → logprob: -4.096397399902344
    6. ']):
' → logprob: -4.596397399902344
    7. ']):' → logprob: -5.096397399902344
    8. ']
' → logprob: -5.221397399902344
    9. ']:' → logprob: -5.596397399902344
    10. '           ' → logprob: -5.596397399902344

Token 981: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13073718547821045
    2. ']' → logprob: -3.2557373046875
    3. '           ' → logprob: -3.5057373046875
    4. '                   ' → logprob: -4.1307373046875
    5. ']:' → logprob: -4.6307373046875
    6. ':' → logprob: -4.8807373046875
    7. ')' → logprob: -5.1307373046875
    8. '):' → logprob: -5.2557373046875
    9. ']:
' → logprob: -5.7557373046875
    10. '):
' → logprob: -6.0057373046875

Token 982: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06728693097829819
    2. '                   ' → logprob: -3.192286968231201
    3. ':
' → logprob: -4.692286968231201
    4. ':' → logprob: -5.317286968231201
    5. '):
' → logprob: -6.192286968231201
    6. '           ' → logprob: -6.317286968231201
    7. ']' → logprob: -6.692286968231201
    8. ' if' → logprob: -6.817286968231201
    9. ']:
' → logprob: -6.942286968231201
    10. ' and' → logprob: -7.442286968231201

Token 983: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2812495231628418
    2. ' w' → logprob: -1.4062495231628418
    3. '   ' → logprob: -10.15625
    4. '               ' → logprob: -10.90625
    5. 'not' → logprob: -11.53125
    6. ' not' → logprob: -11.65625
    7. '                   ' → logprob: -11.65625
    8. '           ' → logprob: -12.65625
    9. '       ' → logprob: -12.90625
    10. '(w' → logprob: -13.03125

Token 984: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2014227956533432
    2. 'is' → logprob: -1.7014228105545044
    3. 'not' → logprob: -13.701422691345215
    4. ' ' → logprob: -13.826422691345215
    5. 'and' → logprob: -13.951422691345215
    6. '   ' → logprob: -14.076422691345215
    7. '!=' → logprob: -14.076422691345215
    8. ' not' → logprob: -14.576422691345215
    9. '==' → logprob: -14.701422691345215
    10. '    ' → logprob: -14.701422691345215

Token 985: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01774294488132
    2. ' not' → logprob: -4.517743110656738
    3. 'None' → logprob: -5.017743110656738
    4. ' None' → logprob: -10.517743110656738
    5. '   ' → logprob: -11.517743110656738
    6. 'Not' → logprob: -12.517743110656738
    7. '	not' → logprob: -12.892743110656738
    8. 'none' → logprob: -13.267743110656738
    9. '       ' → logprob: -13.767743110656738
    10. ' ' → logprob: -13.892743110656738

Token 986: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011722482740879059
    2. ' None' → logprob: -6.751172065734863
    3. 'not' → logprob: -13.376172065734863
    4. '(None' → logprob: -15.876172065734863
    5. '_None' → logprob: -15.876172065734863
    6. '=None' → logprob: -16.25117301940918
    7. ' not' → logprob: -17.12617301940918
    8. '   ' → logprob: -17.62617301940918
    9. 'none' → logprob: -18.25117301940918
    10. 'Not' → logprob: -18.75117301940918

Token 987: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10323195904493332
    2. 'and' → logprob: -2.353231906890869
    3. '                   ' → logprob: -6.103231906890869
    4. ' not' → logprob: -8.103232383728027
    5. '               ' → logprob: -8.103232383728027
    6. '                       ' → logprob: -9.228232383728027
    7. 'not' → logprob: -10.478232383728027
    8. '           ' → logprob: -11.353232383728027
    9. '	and' → logprob: -11.478232383728027
    10. '   ' → logprob: -11.603232383728027

Token 988: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7641540169715881
    2. '                   ' → logprob: -1.0141539573669434
    3. '               ' → logprob: -1.8891539573669434
    4. ' not' → logprob: -4.764153957366943
    5. 'and' → logprob: -5.764153957366943
    6. ':' → logprob: -5.764153957366943
    7. ':
' → logprob: -6.264153957366943
    8. '           ' → logprob: -6.889153957366943
    9. ',' → logprob: -7.514153957366943
    10. '                       ' → logprob: -7.889153957366943

Token 989: ' if' (ID: 538)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08364123106002808
    2. 'if' (adapté à ' if') → logprob: -3.333641290664673
    3. ' h' → logprob: -3.583641290664673
    4. '                   ' → logprob: -4.708641052246094
    5. ' if' → logprob: -5.083641052246094
    6. '                       ' → logprob: -6.708641052246094
    7. '   ' → logprob: -9.333641052246094
    8. '               ' → logprob: -9.583641052246094
    9. '           ' → logprob: -9.833641052246094
    10. 'w' → logprob: -10.333641052246094

Token 990: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002108743879944086
    2. '(h' → logprob: -6.377108573913574
    3. ' h' → logprob: -8.002108573913574
    4. '   ' → logprob: -10.377108573913574
    5. 'not' → logprob: -10.627108573913574
    6. '           ' → logprob: -12.377108573913574
    7. ' (' → logprob: -13.252108573913574
    8. '       ' → logprob: -13.377108573913574
    9. ' not' → logprob: -13.377108573913574
    10. '               ' → logprob: -13.877108573913574

Token 991: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011096511036157608
    2. 'not' → logprob: -4.511096477508545
    3. '-' → logprob: -10.886096954345703
    4. ')' → logprob: -11.011096954345703
    5. ' in' → logprob: -11.636096954345703
    6. '>' → logprob: -13.636096954345703
    7. 'in' → logprob: -13.761096954345703
    8. '	not' → logprob: -14.386096954345703
    9. ' )' → logprob: -15.386096954345703
    10. '               ' → logprob: -15.511096954345703

Token 992: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3506351709365845
    2. 'in' → logprob: -1.2256351709365845
    3. ' warrior' → logprob: -6.600635051727295
    4. ')' → logprob: -8.100635528564453
    5. 'war' → logprob: -8.350635528564453
    6. '                   ' → logprob: -9.225635528564453
    7. ',' → logprob: -9.350635528564453
    8. '               ' → logprob: -11.725635528564453
    9. 'w' → logprob: -11.725635528564453
    10. '                    ' → logprob: -11.725635528564453

Token 993: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.0003818140830844641
    2. ' warrior' → logprob: -7.875381946563721
    3. '   ' → logprob: -14.375381469726562
    4. ' war' → logprob: -15.500381469726562
    5. 'wart' → logprob: -15.625381469726562
    6. 'warf' → logprob: -15.625381469726562
    7. '-war' → logprob: -16.000381469726562
    8. ' ' → logprob: -16.250381469726562
    9. '       ' → logprob: -16.250381469726562
    10. ' ' → logprob: -16.375381469726562

Token 994: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.531315314830863e-06
    2. '_w' → logprob: -13.750003814697266
    3. 'hero' → logprob: -13.875003814697266
    4. '[w' → logprob: -14.375003814697266
    5. 'w' → logprob: -14.625003814697266
    6. '[_' → logprob: -15.875003814697266
    7. '\' → logprob: -16.750003814697266
    8. '_h' → logprob: -17.125003814697266
    9. '[' → logprob: -17.125003814697266
    10. '-' → logprob: -17.250003814697266

Token 995: 'hero' (ID: 28501)
  Prédit: 'hero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hero' → logprob: -0.00012523093027994037
    2. '_' → logprob: -9.50012493133545
    3. 'w' → logprob: -10.12512493133545
    4. '[w' → logprob: -12.87512493133545
    5. 'war' → logprob: -13.25012493133545
    6. 'h' → logprob: -13.87512493133545
    7. ' hero' → logprob: -14.37512493133545
    8. '```' → logprob: -14.37512493133545
    9. 'Hero' → logprob: -14.50012493133545
    10. '{' → logprob: -14.50012493133545

Token 996: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -1.1398757123970427e-05
    2. 'w' → logprob: -11.750011444091797
    3. '[' → logprob: -13.750011444091797
    4. '               ' → logprob: -14.250011444091797
    5. '       ' → logprob: -15.000011444091797
    6. '           ' → logprob: -15.000011444091797
    7. ' [' → logprob: -15.375011444091797
    8. '                   ' → logprob: -15.750011444091797
    9. '   ' → logprob: -15.875011444091797
    10. '[
' → logprob: -16.500011444091797

Token 997: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012887831777334213
    2. 'w' → logprob: -5.137887954711914
    3. '[w' → logprob: -5.137887954711914
    4. '[' → logprob: -7.762887954711914
    5. '[-' → logprob: -8.387887954711914
    6. '-w' → logprob: -8.637887954711914
    7. ' -' → logprob: -8.637887954711914
    8. 's' → logprob: -11.887887954711914
    9. ']-' → logprob: -11.887887954711914
    10. ' w' → logprob: -12.012887954711914

Token 998: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -13.125004768371582
    3. '2' → logprob: -14.375004768371582
    4. '[' → logprob: -14.875004768371582
    5. 'w' → logprob: -15.187504768371582
    6. '   ' → logprob: -15.500004768371582
    7. '0' → logprob: -15.687504768371582
    8. '           ' → logprob: -15.687504768371582
    9. '```' → logprob: -15.750004768371582
    10. '       ' → logprob: -16.250003814697266

Token 999: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6028430461883545
    2. ']:
' → logprob: -1.7278430461883545
    3. '):' → logprob: -1.9778430461883545
    4. ']:' → logprob: -2.7278430461883545
    5. '                   ' → logprob: -3.4778430461883545
    6. '               ' → logprob: -3.8528430461883545
    7. '                       ' → logprob: -5.477843284606934
    8. ']' → logprob: -5.602843284606934
    9. ')' → logprob: -5.852843284606934
    10. '           ' → logprob: -6.352843284606934

Token 1000: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002590050222352147
    2. ':
' → logprob: -6.377590179443359
    3. '                   ' → logprob: -8.00259017944336
    4. ' continue' → logprob: -8.37759017944336
    5. 'continue' → logprob: -8.62759017944336
    6. ':' → logprob: -9.12759017944336
    7. '               ' → logprob: -11.25259017944336
    8. '                           ' → logprob: -11.50259017944336
    9. '):
' → logprob: -13.00259017944336
    10. '           ' → logprob: -13.25259017944336

Token 1001: ' continue' (ID: 4901)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.086422860622406
    2. 'continue' (adapté à ' continue') → logprob: -3.086422920227051
    3. ' continue' → logprob: -3.461422920227051
    4. '                       ' → logprob: -5.336422920227051
    5. '                   ' → logprob: -7.336422920227051
    6. '                               ' → logprob: -8.71142292022705
    7. '               ' → logprob: -9.96142292022705
    8. '           ' → logprob: -9.96142292022705
    9. '
' → logprob: -11.58642292022705
    10. '                                   ' → logprob: -13.08642292022705

Token 1002: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07037518173456192
    2. '           ' → logprob: -2.6953752040863037
    3. ')' → logprob: -7.820374965667725
    4. '                   ' → logprob: -10.945375442504883
    5. '       ' → logprob: -12.195375442504883
    6. '	           ' → logprob: -12.445375442504883
    7. '```' → logprob: -13.070375442504883
    8. '<|end|>' → logprob: -13.445375442504883
    9. '                
' → logprob: -14.195375442504883
    10. '                ' → logprob: -14.195375442504883

Token 1003: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043209508061409
    2. '           ' → logprob: -3.1682095527648926
    3. ')' → logprob: -8.668209075927734
    4. '                   ' → logprob: -10.793209075927734
    5. '```' → logprob: -12.168209075927734
    6. '       ' → logprob: -12.543209075927734
    7. '                
' → logprob: -13.168209075927734
    8. '	           ' → logprob: -13.668209075927734
    9. '                ' → logprob: -14.168209075927734
    10. '              ' → logprob: -14.168209075927734

Token 1004: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22574254870414734
    2. '               ' → logprob: -1.6007425785064697
    3. ')' → logprob: -8.22574234008789
    4. '       ' → logprob: -10.72574234008789
    5. '                   ' → logprob: -11.85074234008789
    6. ':' → logprob: -11.97574234008789
    7. '```' → logprob: -12.22574234008789
    8. ',' → logprob: -12.72574234008789
    9. '):' → logprob: -12.97574234008789
    10. '            
' → logprob: -12.97574234008789

Token 1005: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06995421648025513
    2. ' c' → logprob: -2.6949541568756104
    3. '```' → logprob: -12.944953918457031
    4. '(c' → logprob: -13.194953918457031
    5. '_c' → logprob: -13.194953918457031
    6. '   ' → logprob: -13.194953918457031
    7. 'cl' → logprob: -13.194953918457031
    8. ')c' → logprob: -13.569953918457031
    9. '	c' → logprob: -13.694953918457031
    10. '[c' → logprob: -14.444953918457031

Token 1006: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020548781380057335
    2. 'in' → logprob: -3.8955488204956055
    3. ' ' → logprob: -13.645548820495605
    4. 's' → logprob: -13.895548820495605
    5. '   ' → logprob: -14.020548820495605
    6. 'n' → logprob: -14.145548820495605
    7. '[' → logprob: -14.520548820495605
    8. '```' → logprob: -14.895548820495605
    9. 'for' → logprob: -15.145548820495605
    10. ')' → logprob: -15.270548820495605

Token 1007: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038047004491090775
    2. ' [' → logprob: -3.2880470752716064
    3. '               ' → logprob: -12.413046836853027
    4. '(None' → logprob: -14.288046836853027
    5. '[N' → logprob: -15.038046836853027
    6. '   ' → logprob: -15.538046836853027
    7. '                   ' → logprob: -15.788046836853027
    8. '           ' → logprob: -16.538047790527344
    9. '```' → logprob: -16.538047790527344
    10. '       ' → logprob: -17.038047790527344

Token 1008: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.45848218582978e-06
    2. '(None' → logprob: -13.75000286102295
    3. ' None' → logprob: -13.87500286102295
    4. '[' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.125001907348633
    6. '_None' → logprob: -16.250001907348633
    7. '```' → logprob: -17.875001907348633
    8. ',None' → logprob: -18.375001907348633
    9. '.None' → logprob: -18.500001907348633
    10. '
' → logprob: -19.125001907348633

Token 1009: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00031973462319001555
    2. ']+' → logprob: -8.125319480895996
    3. ' ]' → logprob: -11.750319480895996
    4. '               ' → logprob: -12.125319480895996
    5. '           ' → logprob: -12.375319480895996
    6. ')' → logprob: -13.375319480895996
    7. '()]' → logprob: -14.250319480895996
    8. ',' → logprob: -14.375319480895996
    9. '            ' → logprob: -14.750319480895996
    10. '   ' → logprob: -14.750319480895996

Token 1010: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.325933039188385
    2. '+' → logprob: -1.9509329795837402
    3. ' +' → logprob: -2.2009329795837402
    4. ']+' → logprob: -3.7009329795837402
    5. ',' → logprob: -8.450933456420898
    6. ')' → logprob: -9.075933456420898
    7. '+]' → logprob: -9.825933456420898
    8. '[' → logprob: -10.200933456420898
    9. '+[' → logprob: -10.325933456420898
    10. ')+' → logprob: -10.325933456420898

Token 1011: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.048590321093797684
    2. ' list' → logprob: -3.0485904216766357
    3. 'range' → logprob: -12.923590660095215
    4. '[list' → logprob: -15.423590660095215
    5. '(list' → logprob: -15.548590660095215
    6. ' range' → logprob: -15.673590660095215
    7. '[' → logprob: -19.0485897064209
    8. '=list' → logprob: -19.0485897064209
    9. ' [' → logprob: -19.9235897064209
    10. ':list' → logprob: -20.1735897064209

Token 1012: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.7968066206085496e-05
    2. 'range' → logprob: -10.500027656555176
    3. '(' → logprob: -14.875027656555176
    4. ' range' → logprob: -18.500028610229492
    5. '	range' → logprob: -19.125028610229492
    6. ' (' → logprob: -19.625028610229492
    7. '(
' → logprob: -20.000028610229492
    8. '((' → logprob: -20.625028610229492
    9. '.range' → logprob: -21.375028610229492
    10. '(rank' → logprob: -23.375028610229492

Token 1013: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.0
    4. '(C' → logprob: -17.25
    5. '(
' → logprob: -17.375
    6. '   ' → logprob: -18.0
    7. '```' → logprob: -19.0
    8. '           ' → logprob: -19.75
    9. '                   ' → logprob: -19.75
    10. '((' → logprob: -20.0

Token 1014: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007608989719301462
    2. '(' → logprob: -4.882608890533447
    3. '   ' → logprob: -13.382609367370605
    4. ' ' → logprob: -14.632609367370605
    5. 'C' → logprob: -15.132609367370605
    6. '0' → logprob: -15.632609367370605
    7. '
' → logprob: -16.00760841369629
    8. '```' → logprob: -16.00760841369629
    9. '[' → logprob: -16.38260841369629
    10. '       ' → logprob: -17.25760841369629

Token 1015: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004897649050690234
    2. ',C' → logprob: -7.750489711761475
    3. ' ,' → logprob: -10.500490188598633
    4. '(C' → logprob: -10.875490188598633
    5. '   ' → logprob: -12.500490188598633
    6. '       ' → logprob: -12.625490188598633
    7. '(' → logprob: -13.250490188598633
    8. '           ' → logprob: -13.875490188598633
    9. ',c' → logprob: -13.875490188598633
    10. ',(' → logprob: -14.250490188598633

Token 1016: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0002116462419508025
    2. '(C' → logprob: -9.250211715698242
    3. ' C' → logprob: -9.500211715698242
    4. '   ' → logprob: -10.250211715698242
    5. '       ' → logprob: -13.375211715698242
    6. '           ' → logprob: -14.125211715698242
    7. '(' → logprob: -14.125211715698242
    8. '	C' → logprob: -15.250211715698242
    9. '```' → logprob: -15.250211715698242
    10. '               ' → logprob: -15.500211715698242

Token 1017: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.288163083605468e-05
    2. ' +' → logprob: -10.500052452087402
    3. '+C' → logprob: -12.000052452087402
    4. '()+' → logprob: -12.250052452087402
    5. '))' → logprob: -12.500052452087402
    6. ')):' → logprob: -12.750052452087402
    7. ')):
' → logprob: -12.750052452087402
    8. ')' → logprob: -13.250052452087402
    9. ')+' → logprob: -13.500052452087402
    10. '[' → logprob: -14.750052452087402

Token 1018: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11315854638814926
    2. '1' → logprob: -2.2381584644317627
    3. '(C' → logprob: -8.738158226013184
    4. '()+' → logprob: -9.613158226013184
    5. '(' → logprob: -10.363158226013184
    6. '```' → logprob: -10.738158226013184
    7. '+C' → logprob: -10.988158226013184
    8. ')+' → logprob: -11.613158226013184
    9. '(+' → logprob: -11.863158226013184
    10. ')):
' → logprob: -12.613158226013184

Token 1019: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.9484587907791138
    2. '):' → logprob: -1.3234587907791138
    3. '):
' → logprob: -1.6984587907791138
    4. ')):
' → logprob: -1.8234587907791138
    5. '               ' → logprob: -7.198458671569824
    6. ')' → logprob: -7.698458671569824
    7. '))' → logprob: -7.823458671569824
    8. '           ' → logprob: -8.198458671569824
    9. '       ' → logprob: -10.323458671569824
    10. ')):
' → logprob: -10.448458671569824

Token 1020: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0067673493176698685
    2. ':' → logprob: -6.006767272949219
    3. '           ' → logprob: -6.381767272949219
    4. '):' → logprob: -6.506767272949219
    5. '                   ' → logprob: -7.756767272949219
    6. '):
' → logprob: -8.506767272949219
    7. ':
' → logprob: -9.006767272949219
    8. ']' → logprob: -9.256767272949219
    9. ')' → logprob: -9.381767272949219
    10. ']:' → logprob: -9.381767272949219

Token 1021: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10385377705097198
    2. '                   ' → logprob: -2.728853702545166
    3. ':' → logprob: -3.978853702545166
    4. '):' → logprob: -4.853853702545166
    5. '               ' → logprob: -6.228853702545166
    6. ')' → logprob: -6.478853702545166
    7. '):
' → logprob: -7.603853702545166
    8. ':
' → logprob: -7.603853702545166
    9. '       ' → logprob: -8.103854179382324
    10. ' if' → logprob: -8.478854179382324

Token 1022: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5239965319633484
    2. ' c' → logprob: -0.8989965319633484
    3. '                   ' → logprob: -7.273996353149414
    4. '   ' → logprob: -10.023996353149414
    5. ' ' → logprob: -10.523996353149414
    6. 'w' → logprob: -11.023996353149414
    7. '(c' → logprob: -11.023996353149414
    8. '               ' → logprob: -11.398996353149414
    9. '                       ' → logprob: -11.398996353149414
    10. '	c' → logprob: -12.086496353149414

Token 1023: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07898452132940292
    2. 'is' → logprob: -2.578984498977661
    3. '                   ' → logprob: -9.328984260559082
    4. ' not' → logprob: -13.578984260559082
    5. '	is' → logprob: -13.703984260559082
    6. ')' → logprob: -13.953984260559082
    7. 'not' → logprob: -14.078984260559082
    8. '                       ' → logprob: -14.828984260559082
    9. '           ' → logprob: -15.328984260559082
    10. '               ' → logprob: -15.703984260559082

Token 1024: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06288054585456848
    2. ' not' → logprob: -2.812880516052246
    3. 'None' → logprob: -7.062880516052246
    4. '                   ' → logprob: -10.062880516052246
    5. ' None' → logprob: -12.062880516052246
    6. '	not' → logprob: -12.812880516052246
    7. 'Not' → logprob: -13.187880516052246
    8. '               ' → logprob: -13.437880516052246
    9. '_not' → logprob: -13.937880516052246
    10. '                       ' → logprob: -15.687880516052246

Token 1025: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024817234370857477
    2. ' None' → logprob: -6.002481937408447
    3. 'not' → logprob: -12.877481460571289
    4. '(None' → logprob: -13.252481460571289
    5. '_None' → logprob: -14.002481460571289
    6. ' not' → logprob: -14.627481460571289
    7. '=None' → logprob: -15.252481460571289
    8. '   ' → logprob: -15.627481460571289
    9. '.None' → logprob: -17.62748146057129
    10. 'none' → logprob: -18.12748146057129

Token 1026: ' and' (ID: 326)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07249254733324051
    2. ':' → logprob: -2.8224925994873047
    3. ':
' → logprob: -5.197492599487305
    4. ' and' → logprob: -6.072492599487305
    5. '                   ' → logprob: -6.447492599487305
    6. 'and' → logprob: -7.697492599487305
    7. '                     ' → logprob: -8.572492599487305
    8. '                        ' → logprob: -9.322492599487305
    9. '                      ' → logprob: -9.322492599487305
    10. '                           ' → logprob: -10.197492599487305

Token 1027: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.13138505816459656
    2. '(w' → logprob: -2.131385087966919
    3. '                   ' → logprob: -6.25638484954834
    4. ' w' → logprob: -6.88138484954834
    5. ' (' → logprob: -7.50638484954834
    6. '((' → logprob: -8.13138484954834
    7. '               ' → logprob: -8.88138484954834
    8. '   ' → logprob: -9.25638484954834
    9. '(' → logprob: -9.25638484954834
    10. '       ' → logprob: -9.88138484954834

Token 1028: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05494457110762596
    2. 'is' → logprob: -2.9299445152282715
    3. '                   ' → logprob: -10.55494499206543
    4. '==' → logprob: -11.55494499206543
    5. '-' → logprob: -11.92994499206543
    6. '	is' → logprob: -12.05494499206543
    7. ' not' → logprob: -13.05494499206543
    8. '                       ' → logprob: -13.17994499206543
    9. 'not' → logprob: -13.30494499206543
    10. ')' → logprob: -13.30494499206543

Token 1029: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3690599799156189
    2. 'not' → logprob: -1.3690600395202637
    3. ' not' → logprob: -3.1190600395202637
    4. ' None' → logprob: -4.619060039520264
    5. '                   ' → logprob: -8.869059562683105
    6. 'Not' → logprob: -10.244059562683105
    7. '   ' → logprob: -11.744059562683105
    8. '                       ' → logprob: -11.869059562683105
    9. '               ' → logprob: -12.744059562683105
    10. '                           ' → logprob: -12.994059562683105

Token 1030: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.718606891809031e-05
    2. ' None' → logprob: -9.625066757202148
    3. '_None' → logprob: -14.625066757202148
    4. '(None' → logprob: -15.000066757202148
    5. '                   ' → logprob: -16.12506675720215
    6. '=None' → logprob: -16.37506675720215
    7. '   ' → logprob: -17.12506675720215
    8. '               ' → logprob: -17.25006675720215
    9. '           ' → logprob: -17.37506675720215
    10. '.None' → logprob: -17.75006675720215

Token 1031: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017584480345249176
    2. ':
' → logprob: -4.642584323883057
    3. ' and' → logprob: -5.142584323883057
    4. ':' → logprob: -6.517584323883057
    5. 'and' → logprob: -7.892584323883057
    6. '                   ' → logprob: -9.767584800720215
    7. '                      ' → logprob: -11.517584800720215
    8. '():
' → logprob: -12.017584800720215
    9. '                     ' → logprob: -12.142584800720215
    10. '                           ' → logprob: -12.142584800720215

Token 1032: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007052833680063486
    2. ':' → logprob: -8.50070571899414
    3. '                        
' → logprob: -8.62570571899414
    4. '                        ' → logprob: -9.12570571899414
    5. ':
' → logprob: -9.75070571899414
    6. '                     ' → logprob: -10.50070571899414
    7. '                      ' → logprob: -10.87570571899414
    8. '                   ' → logprob: -11.00070571899414
    9. '                           ' → logprob: -11.00070571899414
    10. ' and' → logprob: -11.37570571899414

Token 1033: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007625080645084381
    2. 'if' → logprob: -5.257625102996826
    3. ' if' → logprob: -6.132625102996826
    4. '                           ' → logprob: -9.882624626159668
    5. ':
' → logprob: -10.382624626159668
    6. '   ' → logprob: -10.507624626159668
    7. '                        ' → logprob: -11.007624626159668
    8. '                   ' → logprob: -11.132624626159668
    9. '                        
' → logprob: -11.382624626159668
    10. '                     ' → logprob: -11.632624626159668

Token 1034: ' cler' (ID: 91536)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013633064925670624
    2. '                       ' → logprob: -4.6386332511901855
    3. ' if' → logprob: -5.7636332511901855
    4. '                   ' → logprob: -8.013632774353027
    5. '                           ' → logprob: -8.638632774353027
    6. '```' → logprob: -9.513632774353027
    7. '#' → logprob: -10.013632774353027
    8. '   ' → logprob: -10.513632774353027
    9. ' ' → logprob: -11.388632774353027
    10. '                               ' → logprob: -11.763632774353027

Token 1035: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.3387746214866638
    2. '                   ' → logprob: -2.0887746810913086
    3. '_w' → logprob: -2.0887746810913086
    4. 'c' → logprob: -4.463774681091309
    5. 'w' → logprob: -4.838774681091309
    6. 'if' → logprob: -5.213774681091309
    7. '```' → logprob: -5.713774681091309
    8. ')' → logprob: -6.088774681091309
    9. 'is' → logprob: -6.463774681091309
    10. 'ics' → logprob: -6.588774681091309

Token 1036: ' and' (ID: 326)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.19609372317790985
    2. ' not' → logprob: -2.696093797683716
    3. ' in' → logprob: -3.071093797683716
    4. '_' → logprob: -3.946093797683716
    5. 'and' → logprob: -4.946093559265137
    6. '   ' → logprob: -5.571093559265137
    7. 'w' → logprob: -5.571093559265137
    8. 'not' → logprob: -5.571093559265137
    9. ' must' → logprob: -5.821093559265137
    10. ' and' → logprob: -5.821093559265137

Token 1037: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.25752368569374084
    2. 'w' → logprob: -1.5075236558914185
    3. ' w' → logprob: -5.757523536682129
    4. ' warrior' → logprob: -6.257523536682129
    5. '   ' → logprob: -8.632523536682129
    6. '       ' → logprob: -9.382523536682129
    7. ' war' → logprob: -10.257523536682129
    8. 'warf' → logprob: -11.007523536682129
    9. '           ' → logprob: -11.132523536682129
    10. '(w' → logprob: -11.132523536682129

Token 1038: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.6123397946357727
    2. 'must' → logprob: -1.362339735031128
    3. '                       ' → logprob: -2.362339735031128
    4. ' get' → logprob: -3.612339735031128
    5. 'get' → logprob: -3.987339735031128
    6. ' not' → logprob: -4.112339973449707
    7. '                   ' → logprob: -4.612339973449707
    8. ' in' → logprob: -4.987339973449707
    9. '```' → logprob: -5.612339973449707
    10. '                           ' → logprob: -5.737339973449707

Token 1039: ' get' (ID: 717)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.1365532875061035
    2. 'get' → logprob: -1.1365532875061035
    3. ' get' → logprob: -1.2615532875061035
    4. 'be' → logprob: -2.6365532875061035
    5. ' not' → logprob: -6.7615532875061035
    6. '_get' → logprob: -7.6365532875061035
    7. '```' → logprob: -8.011552810668945
    8. '.get' → logprob: -8.011552810668945
    9. 'not' → logprob: -8.511552810668945
    10. ' in' → logprob: -8.761552810668945

Token 1040: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.4264935851097107
    2. '_al' → logprob: -1.1764936447143555
    3. ' along' → logprob: -3.4264936447143555
    4. '```' → logprob: -5.4264936447143555
    5. '                       ' → logprob: -6.6764936447143555
    6. '                   ' → logprob: -8.801493644714355
    7. '                           ' → logprob: -8.926493644714355
    8. '                        ' → logprob: -9.801493644714355
    9. 'al' → logprob: -9.926493644714355
    10. '                        
' → logprob: -10.801493644714355

Token 1041: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.019340382888913155
    2. ':
' → logprob: -4.269340515136719
    3. '                           ' → logprob: -6.144340515136719
    4. ' if' → logprob: -6.644340515136719
    5. ':' → logprob: -7.019340515136719
    6. 'if' → logprob: -7.519340515136719
    7. ' and' → logprob: -9.644340515136719
    8. '                   ' → logprob: -10.144340515136719
    9. ',' → logprob: -10.394340515136719
    10. '                        ' → logprob: -10.394340515136719

Token 1042: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0034915003925561905
    2. ':
' → logprob: -6.628491401672363
    3. '                           ' → logprob: -7.003491401672363
    4. ' if' → logprob: -7.628491401672363
    5. ':' → logprob: -8.378491401672363
    6. ' and' → logprob: -8.878491401672363
    7. 'if' → logprob: -9.003491401672363
    8. '                   ' → logprob: -9.378491401672363
    9. '                        ' → logprob: -10.003491401672363
    10. ',' → logprob: -10.128491401672363

Token 1043: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2760290801525116
    2. '                       ' → logprob: -2.026029109954834
    3. ' if' → logprob: -2.401029109954834
    4. '                           ' → logprob: -4.026029109954834
    5. '```' → logprob: -8.901028633117676
    6. '                   ' → logprob: -9.026028633117676
    7. '   ' → logprob: -9.276028633117676
    8. '                         ' → logprob: -9.776028633117676
    9. ' ' → logprob: -9.901028633117676
    10. 'for' → logprob: -10.026028633117676

Token 1044: ' w' (ID: 286)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07450645416975021
    2. 'w' → logprob: -2.6995065212249756
    3. '(c' → logprob: -5.6995062828063965
    4. '(w' → logprob: -7.1995062828063965
    5. ' c' → logprob: -8.074506759643555
    6. ' w' → logprob: -10.449506759643555
    7. '   ' → logprob: -10.574506759643555
    8. 'cl' → logprob: -10.824506759643555
    9. 'not' → logprob: -11.074506759643555
    10. ' (' → logprob: -11.574506759643555

Token 1045: ' not' (ID: 625)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17411556839942932
    2. ' not' → logprob: -1.924115538597107
    3. 'not' → logprob: -4.6741156578063965
    4. ' -' → logprob: -5.4241156578063965
    5. '                   ' → logprob: -11.424115180969238
    6. '                       ' → logprob: -11.424115180969238
    7. '-not' → logprob: -12.049115180969238
    8. '[' → logprob: -12.424115180969238
    9. '	not' → logprob: -12.799115180969238
    10. ')' → logprob: -12.924115180969238

Token 1046: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2813987731933594
    2. ' in' → logprob: -1.4063987731933594
    3. 'not' → logprob: -8.78139877319336
    4. ' not' → logprob: -10.15639877319336
    5. 'cler' → logprob: -10.90639877319336
    6. 'to' → logprob: -11.15639877319336
    7. ' warrior' → logprob: -12.28139877319336
    8. '                   ' → logprob: -12.28139877319336
    9. ',' → logprob: -12.90639877319336
    10. ' cler' → logprob: -13.28139877319336

Token 1047: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.0002622894535306841
    2. ' cler' → logprob: -8.250262260437012
    3. 'cl' → logprob: -14.250262260437012
    4. 'clar' → logprob: -15.875262260437012
    5. 'cla' → logprob: -16.625263214111328
    6. '[' → logprob: -17.375263214111328
    7. '```' → logprob: -17.875263214111328
    8. '   ' → logprob: -18.000263214111328
    9. '
' → logprob: -18.000263214111328
    10. 'clin' → logprob: -18.000263214111328

Token 1048: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.054500666621607e-06
    2. 'c' → logprob: -13.25000286102295
    3. 'ics' → logprob: -15.62500286102295
    4. '[' → logprob: -16.000003814697266
    5. '_w' → logprob: -16.625003814697266
    6. '[c' → logprob: -16.875003814697266
    7. '_' → logprob: -16.875003814697266
    8. 'oc' → logprob: -17.000003814697266
    9. 'if' → logprob: -17.250003814697266
    10. '[-' → logprob: -17.250003814697266

Token 1049: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -2.999452772201039e-05
    2. '[j' → logprob: -11.625029563903809
    3. '                   ' → logprob: -12.000029563903809
    4. '[w' → logprob: -13.000029563903809
    5. '[_' → logprob: -13.125029563903809
    6. '   ' → logprob: -13.375029563903809
    7. 'w' → logprob: -13.500029563903809
    8. 'war' → logprob: -13.625029563903809
    9. '_c' → logprob: -13.750029563903809
    10. '_j' → logprob: -13.875029563903809

Token 1050: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.028194084763526917
    2. 'arr' → logprob: -4.153193950653076
    3. '_w' → logprob: -5.028193950653076
    4. 'arri' → logprob: -6.403193950653076
    5. 'ari' → logprob: -6.653193950653076
    6. 'war' → logprob: -7.403193950653076
    7. '[j' → logprob: -8.153194427490234
    8. 'rior' → logprob: -8.153194427490234
    9. 'or' → logprob: -8.653194427490234
    10. '_' → logprob: -8.653194427490234

Token 1051: 'rior' (ID: 12072)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3236114978790283
    2. 'rior' → logprob: -1.5736114978790283
    3. 'arr' → logprob: -3.1986114978790283
    4. 'or' → logprob: -4.698611259460449
    5. 'ari' → logprob: -5.323611259460449
    6. 'arri' → logprob: -5.698611259460449
    7. '_w' → logprob: -6.073611259460449
    8. '[' → logprob: -6.198611259460449
    9. 'w' → logprob: -7.823611259460449
    10. 'ior' → logprob: -7.823611259460449

Token 1052: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.1994775377388578e-05
    2. '                   ' → logprob: -11.750012397766113
    3. 'c' → logprob: -12.625012397766113
    4. '[' → logprob: -15.375012397766113
    5. '                       ' → logprob: -15.875012397766113
    6. '               ' → logprob: -16.250011444091797
    7. '(c' → logprob: -16.625011444091797
    8. '[j' → logprob: -16.875011444091797
    9. '           ' → logprob: -17.625011444091797
    10. '```' → logprob: -17.875011444091797

Token 1053: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2459256947040558
    2. '[c' → logprob: -1.7459256649017334
    3. '[j' → logprob: -3.9959256649017334
    4. '[w' → logprob: -4.1209259033203125
    5. '                   ' → logprob: -5.9959259033203125
    6. '[' → logprob: -6.2459259033203125
    7. '               ' → logprob: -6.6209259033203125
    8. ' -' → logprob: -7.7459259033203125
    9. 'w' → logprob: -7.8709259033203125
    10. '[-' → logprob: -7.8709259033203125

Token 1054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007475639577023685
    2. '-' → logprob: -7.2507476806640625
    3. ' ' → logprob: -10.750747680664062
    4. '0' → logprob: -11.625747680664062
    5. '[' → logprob: -13.000747680664062
    6. 'w' → logprob: -13.875747680664062
    7. '               ' → logprob: -14.000747680664062
    8. '                   ' → logprob: -14.125747680664062
    9. '           ' → logprob: -14.375747680664062
    10. '       ' → logprob: -14.875747680664062

Token 1055: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3368743360042572
    2. '                       ' → logprob: -1.8368743658065796
    3. '                   ' → logprob: -2.58687424659729
    4. ']:' → logprob: -3.83687424659729
    5. '):
' → logprob: -4.336874485015869
    6. ':
' → logprob: -4.711874485015869
    7. ':' → logprob: -6.211874485015869
    8. '               ' → logprob: -6.711874485015869
    9. '[w' → logprob: -6.836874485015869
    10. '[c' → logprob: -7.586874485015869

Token 1056: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.023138204589486122
    2. '                           ' → logprob: -4.023138046264648
    3. ':
' → logprob: -5.398138046264648
    4. '                               ' → logprob: -8.773138046264648
    5. ':' → logprob: -9.273138046264648
    6. '                   ' → logprob: -9.773138046264648
    7. '):
' → logprob: -10.148138046264648
    8. 'continue' → logprob: -10.273138046264648
    9. '```' → logprob: -10.898138046264648
    10. ' continue' → logprob: -10.898138046264648

Token 1057: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6953728795051575
    2. '                               ' → logprob: -1.1953728199005127
    3. ' continue' → logprob: -1.6953728199005127
    4. '                           ' → logprob: -4.445373058319092
    5. '                       ' → logprob: -5.945373058319092
    6. '                                   ' → logprob: -7.820373058319092
    7. '   ' → logprob: -9.320372581481934
    8. '	continue' → logprob: -10.570372581481934
    9. '                                       ' → logprob: -10.945372581481934
    10. '               ' → logprob: -11.070372581481934

Token 1058: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01467298436909914
    2. '               ' → logprob: -4.389672756195068
    3. ')' → logprob: -6.764672756195068
    4. '                       ' → logprob: -7.264672756195068
    5. '           ' → logprob: -9.014673233032227
    6. '```' → logprob: -9.389673233032227
    7. 'for' → logprob: -10.264673233032227
    8. '                           ' → logprob: -11.014673233032227
    9. ']' → logprob: -11.139673233032227
    10. '       ' → logprob: -11.389673233032227

Token 1059: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001842609723098576
    2. '                       ' → logprob: -6.751842498779297
    3. '               ' → logprob: -7.751842498779297
    4. '```' → logprob: -8.876842498779297
    5. ')' → logprob: -10.126842498779297
    6. '                           ' → logprob: -10.376842498779297
    7. '           ' → logprob: -11.251842498779297
    8. 'for' → logprob: -12.751842498779297
    9. '       ' → logprob: -12.751842498779297
    10. '                               ' → logprob: -13.126842498779297

Token 1060: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004385963547974825
    2. '               ' → logprob: -6.004385948181152
    3. '                       ' → logprob: -7.379385948181152
    4. '```' → logprob: -7.754385948181152
    5. 'for' (adapté à ' for') → logprob: -8.254385948181152
    6. ')' → logprob: -8.629385948181152
    7. '           ' → logprob: -8.629385948181152
    8. '       ' → logprob: -9.129385948181152
    9. ' for' → logprob: -10.004385948181152
    10. '				' → logprob: -10.379385948181152

Token 1061: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007659635040909052
    2. ' m' → logprob: -4.882659435272217
    3. '[m' → logprob: -10.132659912109375
    4. '[' → logprob: -11.757659912109375
    5. '   ' → logprob: -12.757659912109375
    6. ' [' → logprob: -13.382659912109375
    7. ' ' → logprob: -14.882659912109375
    8. '	m' → logprob: -15.507659912109375
    9. '  ' → logprob: -15.632659912109375
    10. '(m' → logprob: -15.882659912109375

Token 1062: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06196993216872215
    2. 'in' → logprob: -2.8119699954986572
    3. ' ' → logprob: -14.311969757080078
    4. '   ' → logprob: -14.436969757080078
    5. '                   ' → logprob: -15.186969757080078
    6. '[' → logprob: -15.811969757080078
    7. '[in' → logprob: -16.436969757080078
    8. '    ' → logprob: -16.561969757080078
    9. 'n' → logprob: -16.561969757080078
    10. ',' → logprob: -16.561969757080078

Token 1063: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47408169507980347
    2. ' [' → logprob: -0.9740816950798035
    3. '   ' → logprob: -13.224081993103027
    4. ' ' → logprob: -14.349081993103027
    5. ' `[' → logprob: -14.599081993103027
    6. '[N' → logprob: -15.724081993103027
    7. '    ' → logprob: -15.724081993103027
    8. '`' → logprob: -15.849081993103027
    9. '```' → logprob: -15.974081993103027
    10. '(None' → logprob: -16.09908103942871

Token 1064: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3870622515678406
    2. '[' → logprob: -1.1370623111724854
    3. '(None' → logprob: -8.637062072753906
    4. ' None' → logprob: -11.762062072753906
    5. '_None' → logprob: -12.262062072753906
    6. ',None' → logprob: -14.887062072753906
    7. '.None' → logprob: -15.012062072753906
    8. '   ' → logprob: -15.512062072753906
    9. '`' → logprob: -16.012062072753906
    10. '```' → logprob: -16.387062072753906

Token 1065: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01831698603928089
    2. ']+' → logprob: -4.018317222595215
    3. '()]' → logprob: -10.018317222595215
    4. ' ]' → logprob: -10.143317222595215
    5. '+]' → logprob: -10.518317222595215
    6. '+' → logprob: -11.018317222595215
    7. ',' → logprob: -11.893317222595215
    8. ' +' → logprob: -12.018317222595215
    9. '   ' → logprob: -12.018317222595215
    10. ')' → logprob: -12.643317222595215

Token 1066: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3954463601112366
    2. '+' → logprob: -1.1454463005065918
    3. ']' → logprob: -4.895446300506592
    4. ']+' → logprob: -7.270446300506592
    5. '[' → logprob: -8.39544677734375
    6. '+[' → logprob: -9.77044677734375
    7. '   ' → logprob: -11.14544677734375
    8. '[]' → logprob: -11.27044677734375
    9. '+]' → logprob: -12.02044677734375
    10. ' in' → logprob: -12.27044677734375

Token 1067: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0031777136027812958
    2. ' list' → logprob: -5.753177642822266
    3. 'range' → logprob: -17.128177642822266
    4. '[list' → logprob: -17.878177642822266
    5. '(list' → logprob: -19.878177642822266
    6. '   ' → logprob: -20.378177642822266
    7. 'List' → logprob: -21.503177642822266
    8. '	list' → logprob: -21.628177642822266
    9. '=list' → logprob: -21.628177642822266
    10. '.list' → logprob: -21.628177642822266

Token 1068: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001314295077463612
    2. '(' → logprob: -9.500131607055664
    3. 'range' → logprob: -9.875131607055664
    4. '(list' → logprob: -12.875131607055664
    5. '((' → logprob: -13.250131607055664
    6. '([' → logprob: -15.125131607055664
    7. ' (' → logprob: -15.625131607055664
    8. '(
' → logprob: -16.250131607055664
    9. ' range' → logprob: -17.250131607055664
    10. '```' → logprob: -17.625131607055664

Token 1069: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.50000286102295
    3. ' (' → logprob: -14.87500286102295
    4. '(
' → logprob: -14.87500286102295
    5. '                   ' → logprob: -15.50000286102295
    6. '```' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '           ' → logprob: -17.500001907348633
    9. '               ' → logprob: -17.750001907348633
    10. '((' → logprob: -17.875001907348633

Token 1070: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08894884586334229
    2. '(' → logprob: -2.4639487266540527
    3. '                   ' → logprob: -12.588949203491211
    4. '           ' → logprob: -13.838949203491211
    5. '```' → logprob: -13.963949203491211
    6. ' ' → logprob: -14.213949203491211
    7. '   ' → logprob: -14.213949203491211
    8. '                       ' → logprob: -14.463949203491211
    9. '                           ' → logprob: -14.963949203491211
    10. '(M' → logprob: -15.088949203491211

Token 1071: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018205074593424797
    2. ',' → logprob: -4.018205165863037
    3. '1' → logprob: -10.143204689025879
    4. '(m' → logprob: -12.518204689025879
    5. '(M' → logprob: -12.768204689025879
    6. '(
' → logprob: -13.268204689025879
    7. ' (' → logprob: -13.393204689025879
    8. '   ' → logprob: -13.518204689025879
    9. ' ,' → logprob: -13.643204689025879
    10. '           ' → logprob: -14.018204689025879

Token 1072: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0008414304465986788
    2. '(M' → logprob: -7.1258416175842285
    3. ' M' → logprob: -10.75084114074707
    4. '1' → logprob: -12.12584114074707
    5. '   ' → logprob: -12.25084114074707
    6. '(' → logprob: -13.37584114074707
    7. '           ' → logprob: -13.62584114074707
    8. '       ' → logprob: -13.75084114074707
    9. '                   ' → logprob: -14.37584114074707
    10. '               ' → logprob: -14.87584114074707

Token 1073: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00031258241506293416
    2. '()+' → logprob: -8.750312805175781
    3. '(' → logprob: -9.125312805175781
    4. ' +' → logprob: -10.875312805175781
    5. '(+' → logprob: -11.125312805175781
    6. '(m' → logprob: -11.875312805175781
    7. ')+' → logprob: -13.375312805175781
    8. '(M' → logprob: -14.375312805175781
    9. '```' → logprob: -14.625312805175781
    10. '   ' → logprob: -14.750312805175781

Token 1074: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048745427280664444
    2. '1' → logprob: -3.0487453937530518
    3. ' +' → logprob: -10.048745155334473
    4. '(' → logprob: -10.298745155334473
    5. '()+' → logprob: -10.673745155334473
    6. '```' → logprob: -11.173745155334473
    7. '(M' → logprob: -11.298745155334473
    8. '   ' → logprob: -12.173745155334473
    9. ')+' → logprob: -12.423745155334473
    10. '(m' → logprob: -12.423745155334473

Token 1075: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12614449858665466
    2. '):' → logprob: -2.3761444091796875
    3. ')):
' → logprob: -3.8761444091796875
    4. ')):' → logprob: -5.3761444091796875
    5. ')' → logprob: -9.126144409179688
    6. '):

' → logprob: -10.376144409179688
    7. '))' → logprob: -10.626144409179688
    8. '):
' → logprob: -11.001144409179688
    9. '       ' → logprob: -11.251144409179688
    10. '()):
' → logprob: -11.876144409179688

Token 1076: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.020335620269179344
    2. '                   ' → logprob: -4.145335674285889
    3. '               ' → logprob: -6.145335674285889
    4. '                           ' → logprob: -7.270335674285889
    5. '                               ' → logprob: -7.770335674285889
    6. '(' → logprob: -8.89533519744873
    7. ':' → logprob: -8.89533519744873
    8. '       ' → logprob: -9.14533519744873
    9. '                        
' → logprob: -9.14533519744873
    10. '           ' → logprob: -9.27033519744873

Token 1077: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06231989338994026
    2. '                       ' → logprob: -3.1873199939727783
    3. ':' → logprob: -4.562319755554199
    4. '                               ' → logprob: -5.437319755554199
    5. '(' → logprob: -7.187319755554199
    6. '           ' → logprob: -7.312319755554199
    7. '):' → logprob: -8.0623197555542
    8. ')' → logprob: -8.1873197555542
    9. '(
' → logprob: -8.1873197555542
    10. ':
' → logprob: -8.3123197555542

Token 1078: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5769351720809937
    2. 'm' → logprob: -0.8269351720809937
    3. ' c' → logprob: -7.701935291290283
    4. 'c' → logprob: -9.076934814453125
    5. '                           ' → logprob: -9.326934814453125
    6. '   ' → logprob: -9.576934814453125
    7. ' ' → logprob: -9.701934814453125
    8. '                       ' → logprob: -9.826934814453125
    9. '                               ' → logprob: -10.201934814453125
    10. '(m' → logprob: -11.076934814453125

Token 1079: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0017049367306753993
    2. 'is' → logprob: -6.376705169677734
    3. ' not' → logprob: -14.751705169677734
    4. '                           ' → logprob: -14.751705169677734
    5. '```' → logprob: -14.876705169677734
    6. '                        ' → logprob: -15.001705169677734
    7. ' ' → logprob: -15.501705169677734
    8. '                       ' → logprob: -15.626705169677734
    9. '                               ' → logprob: -16.001705169677734
    10. ')' → logprob: -16.001705169677734

Token 1080: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5762069225311279
    2. 'not' → logprob: -0.8262069225311279
    3. 'None' → logprob: -8.326207160949707
    4. ' None' → logprob: -10.826207160949707
    5. 'Not' → logprob: -13.701207160949707
    6. '	not' → logprob: -13.951207160949707
    7. '                       ' → logprob: -14.701207160949707
    8. ' is' → logprob: -14.701207160949707
    9. '_not' → logprob: -14.826207160949707
    10. '                   ' → logprob: -14.826207160949707

Token 1081: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07992008328437805
    2. 'not' → logprob: -2.5799200534820557
    3. ' not' → logprob: -7.454920291900635
    4. ' None' → logprob: -8.204919815063477
    5. 'Not' → logprob: -8.954919815063477
    6. '_None' → logprob: -10.454919815063477
    7. '(None' → logprob: -11.829919815063477
    8. '_not' → logprob: -12.204919815063477
    9. '_none' → logprob: -13.204919815063477
    10. '=None' → logprob: -13.954919815063477

Token 1082: ' and' (ID: 326)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00680454121902585
    2. ':
' → logprob: -5.881804466247559
    3. ' and' → logprob: -6.631804466247559
    4. ':' → logprob: -6.881804466247559
    5. '                       ' → logprob: -7.131804466247559
    6. '                               ' → logprob: -8.006804466247559
    7. '                            ' → logprob: -9.381804466247559
    8. '                          ' → logprob: -9.631804466247559
    9. '                         ' → logprob: -9.881804466247559
    10. '):
' → logprob: -10.006804466247559

Token 1083: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04308779910206795
    2. ' c' → logprob: -3.1680877208709717
    3. '                       ' → logprob: -10.16808795928955
    4. '(c' → logprob: -10.79308795928955
    5. '                           ' → logprob: -11.66808795928955
    6. '   ' → logprob: -12.16808795928955
    7. '                               ' → logprob: -12.29308795928955
    8. '                   ' → logprob: -13.29308795928955
    9. '	c' → logprob: -13.66808795928955
    10. ' (' → logprob: -13.91808795928955

Token 1084: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02353556826710701
    2. 'is' → logprob: -3.7735354900360107
    3. ' not' → logprob: -8.39853572845459
    4. 'not' → logprob: -10.02353572845459
    5. '                           ' → logprob: -11.77353572845459
    6. '                       ' → logprob: -12.14853572845459
    7. ')' → logprob: -13.64853572845459
    8. '                   ' → logprob: -14.02353572845459
    9. '	is' → logprob: -14.14853572845459
    10. '                               ' → logprob: -14.52353572845459

Token 1085: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4769088327884674
    2. ' not' → logprob: -0.976908802986145
    3. 'None' → logprob: -5.9769086837768555
    4. 'Not' → logprob: -8.851908683776855
    5. ' None' → logprob: -9.351908683776855
    6. '                       ' → logprob: -10.601908683776855
    7. '_not' → logprob: -11.101908683776855
    8. '                           ' → logprob: -11.726908683776855
    9. '                               ' → logprob: -12.851908683776855
    10. '	not' → logprob: -12.851908683776855

Token 1086: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.68022444692906e-05
    2. ' None' → logprob: -10.000046730041504
    3. '_None' → logprob: -14.250046730041504
    4. '(None' → logprob: -14.875046730041504
    5. '=None' → logprob: -16.62504768371582
    6. '.None' → logprob: -16.87504768371582
    7. 'none' → logprob: -17.00004768371582
    8. '_none' → logprob: -17.25004768371582
    9. '   ' → logprob: -17.37504768371582
    10. '```' → logprob: -17.75004768371582

Token 1087: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0014852239983156323
    2. ':
' → logprob: -7.126485347747803
    3. ':' → logprob: -7.751485347747803
    4. '                       ' → logprob: -9.376484870910645
    5. ' and' → logprob: -9.501484870910645
    6. '                               ' → logprob: -10.251484870910645
    7. '                          ' → logprob: -11.001484870910645
    8. '                            ' → logprob: -11.626484870910645
    9. '                         ' → logprob: -11.751484870910645
    10. 'and' → logprob: -12.251484870910645

Token 1088: '                           ' (ID: 1686)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1089: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07594228535890579
    2. '                               ' → logprob: -2.950942277908325
    3. 'if' → logprob: -3.950942277908325
    4. ' if' → logprob: -6.825942516326904
    5. '                             ' → logprob: -8.825942039489746
    6. '                       ' → logprob: -8.950942039489746
    7. '                            ' → logprob: -9.200942039489746
    8. '                                   ' → logprob: -10.075942039489746
    9. '```' → logprob: -10.450942039489746
    10. '                          ' → logprob: -11.200942039489746

Token 1090: ' mage' (ID: 89091)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.537180211627856e-05
    2. '                           ' → logprob: -10.625045776367188
    3. ' if' → logprob: -11.250045776367188
    4. '                               ' → logprob: -12.000045776367188
    5. '                       ' → logprob: -14.125045776367188
    6. '#' → logprob: -14.625045776367188
    7. '```' → logprob: -15.375045776367188
    8. '   ' → logprob: -16.000045776367188
    9. '           ' → logprob: -17.125045776367188
    10. '                                   ' → logprob: -17.250045776367188

Token 1091: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7301934361457825
    2. ' not' → logprob: -0.9801934361457825
    3. 'and' → logprob: -2.3551933765411377
    4. '                           ' → logprob: -3.8551933765411377
    5. ' in' → logprob: -5.105193614959717
    6. 'not' → logprob: -5.230193614959717
    7. ' must' → logprob: -5.230193614959717
    8. ' ' → logprob: -5.980193614959717
    9. '                               ' → logprob: -6.355193614959717
    10. ' is' → logprob: -7.230193614959717

Token 1092: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.774373471736908
    2. 'c' → logprob: -1.3993735313415527
    3. ' cler' → logprob: -1.7743735313415527
    4. ' c' → logprob: -2.1493735313415527
    5. 'cl' → logprob: -5.149373531341553
    6. ' cl' → logprob: -9.899373054504395
    7. ' clerk' → logprob: -10.274373054504395
    8. ' ' → logprob: -10.524373054504395
    9. '                       ' → logprob: -10.774373054504395
    10. 'clic' → logprob: -11.274373054504395

Token 1093: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -8.172891830326989e-05
    2. 'ics' → logprob: -9.625082015991211
    3. 'c' → logprob: -11.625082015991211
    4. '#' → logprob: -14.000082015991211
    5. '   ' → logprob: -14.625082015991211
    6. '```' → logprob: -14.750082015991211
    7. 'if' → logprob: -14.875082015991211
    8. '
' → logprob: -15.125082015991211
    9. 'sic' → logprob: -15.125082015991211
    10. '                       ' → logprob: -15.250082015991211

Token 1094: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.8777665495872498
    2. '                           ' → logprob: -1.2527666091918945
    3. '                               ' → logprob: -1.8777666091918945
    4. 'must' → logprob: -2.0027666091918945
    5. ' not' → logprob: -5.1277666091918945
    6. '```' → logprob: -6.3777666091918945
    7. 'not' → logprob: -6.7527666091918945
    8. 'if' → logprob: -7.3777666091918945
    9. '                             ' → logprob: -8.002766609191895
    10. '                            ' → logprob: -8.127766609191895

Token 1095: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06554451584815979
    2. 'not' → logprob: -3.190544605255127
    3. 'be' → logprob: -4.065544605255127
    4. ' get' → logprob: -5.815544605255127
    5. '```' → logprob: -7.190544605255127
    6. ' not' → logprob: -7.315544605255127
    7. '                           ' → logprob: -8.690544128417969
    8. ' be' → logprob: -8.815544128417969
    9. '_get' → logprob: -8.815544128417969
    10. '                               ' → logprob: -9.190544128417969

Token 1096: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.030432147905230522
    2. '_al' → logprob: -3.5304322242736816
    3. ' along' → logprob: -7.405432224273682
    4. '```' → logprob: -11.030431747436523
    5. 'al' → logprob: -11.530431747436523
    6. 'Along' → logprob: -11.780431747436523
    7. '           ' → logprob: -11.780431747436523
    8. '-al' → logprob: -12.030431747436523
    9. '   ' → logprob: -12.405431747436523
    10. '                       ' → logprob: -12.405431747436523

Token 1097: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0038769119419157505
    2. '                               ' → logprob: -5.628876686096191
    3. 'if' → logprob: -8.503876686096191
    4. '```' → logprob: -10.503876686096191
    5. '                       ' → logprob: -10.878876686096191
    6. ' if' → logprob: -11.253876686096191
    7. '                            ' → logprob: -11.753876686096191
    8. '                             ' → logprob: -13.128876686096191
    9. '                          ' → logprob: -13.378876686096191
    10. '                                   ' → logprob: -14.503876686096191

Token 1098: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0015505714109167457
    2. '                               ' → logprob: -6.501550674438477
    3. 'if' → logprob: -11.126550674438477
    4. '                       ' → logprob: -11.501550674438477
    5. '                            ' → logprob: -11.751550674438477
    6. '```' → logprob: -12.251550674438477
    7. '                          ' → logprob: -12.626550674438477
    8. '                             ' → logprob: -13.251550674438477
    9. ' if' → logprob: -13.501550674438477
    10. '                         ' → logprob: -13.876550674438477

Token 1099: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.39900732040405273
    2. 'if' (adapté à ' if') → logprob: -1.1490073204040527
    3. '                               ' → logprob: -4.649007320404053
    4. ' if' → logprob: -6.024007320404053
    5. '                       ' → logprob: -10.149007797241211
    6. '   ' → logprob: -11.899007797241211
    7. '                            ' → logprob: -12.024007797241211
    8. '                                   ' → logprob: -12.149007797241211
    9. '```' → logprob: -12.399007797241211
    10. '                          ' → logprob: -13.024007797241211

Token 1100: ' c' (ID: 274)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.037496909499168396
    2. ' m' → logprob: -3.41249680519104
    3. 'c' → logprob: -5.662497043609619
    4. ' c' → logprob: -8.662496566772461
    5. 'w' → logprob: -9.912496566772461
    6. '   ' → logprob: -10.412496566772461
    7. '(m' → logprob: -10.537496566772461
    8. '                           ' → logprob: -10.662496566772461
    9. '                               ' → logprob: -10.912496566772461
    10. '           ' → logprob: -11.912496566772461

Token 1101: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05128738284111023
    2. 'not' → logprob: -3.0512874126434326
    3. '-' → logprob: -5.9262871742248535
    4. ' -' → logprob: -11.801287651062012
    5. 'm' → logprob: -12.051287651062012
    6. '-not' → logprob: -12.676287651062012
    7. '[' → logprob: -12.801287651062012
    8. '	not' → logprob: -12.926287651062012
    9. ')' → logprob: -13.051287651062012
    10. '                           ' → logprob: -13.176287651062012

Token 1102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31907638907432556
    2. 'in' → logprob: -1.319076418876648
    3. 'mage' → logprob: -5.1940765380859375
    4. 'not' → logprob: -9.569076538085938
    5. ' mage' → logprob: -9.694076538085938
    6. 'm' → logprob: -10.194076538085938
    7. ' not' → logprob: -10.444076538085938
    8. 'mages' → logprob: -11.319076538085938
    9. '                           ' → logprob: -11.694076538085938
    10. '(m' → logprob: -11.819076538085938

Token 1103: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.00012201975914649665
    2. 'cler' → logprob: -9.5001220703125
    3. ' mage' → logprob: -10.0001220703125
    4. '   ' → logprob: -14.7501220703125
    5. 'mages' → logprob: -14.7501220703125
    6. 'cl' → logprob: -15.3751220703125
    7. ' cler' → logprob: -16.3751220703125
    8. '  ' → logprob: -16.5001220703125
    9. '[m' → logprob: -16.6251220703125
    10. ' ' → logprob: -16.8751220703125

Token 1104: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -4.320199877838604e-07
    2. 'cler' → logprob: -15.75
    3. '_c' → logprob: -16.375
    4. '
' → logprob: -17.625
    5. '```' → logprob: -18.75
    6. 'm' → logprob: -19.125
    7. '\' → logprob: -19.25
    8. 'a' → logprob: -19.25
    9. '_cli' → logprob: -19.25
    10. '[' → logprob: -19.375

Token 1105: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000158842682139948
    2. '_' → logprob: -10.12515926361084
    3. 'cler' → logprob: -11.00015926361084
    4. 'ric' → logprob: -11.75015926361084
    5. '_er' → logprob: -11.75015926361084
    6. 'ic' → logprob: -11.87515926361084
    7. ' cler' → logprob: -12.00015926361084
    8. 'erc' → logprob: -12.00015926361084
    9. 'r' → logprob: -12.00015926361084
    10. 'e' → logprob: -12.25015926361084

Token 1106: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.2948405128554441e-05
    2. '_ic' → logprob: -12.00001335144043
    3. 'er' → logprob: -13.37501335144043
    4. 'icl' → logprob: -13.87501335144043
    5. 'ics' → logprob: -14.00001335144043
    6. 'c' → logprob: -14.50001335144043
    7. '```' → logprob: -14.75001335144043
    8. 'cl' → logprob: -14.87501335144043
    9. '_' → logprob: -14.87501335144043
    10. 'if' → logprob: -15.50001335144043

Token 1107: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -2.3438327843905427e-05
    2. 'm' → logprob: -11.50002384185791
    3. '[c' → logprob: -11.62502384185791
    4. '[k' → logprob: -12.87502384185791
    5. '[' → logprob: -15.12502384185791
    6. '           ' → logprob: -15.25002384185791
    7. '                       ' → logprob: -15.25002384185791
    8. ' [' → logprob: -15.75002384185791
    9. '                           ' → logprob: -15.75002384185791
    10. '(m' → logprob: -15.75002384185791

Token 1108: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.35706390615087e-05
    2. ' -' → logprob: -10.625033378601074
    3. '[' → logprob: -12.375033378601074
    4. '[-' → logprob: -13.250033378601074
    5. 'c' → logprob: -13.500033378601074
    6. '_' → logprob: -14.125033378601074
    7. ']-' → logprob: -14.750033378601074
    8. '_c' → logprob: -15.375033378601074
    9. 'm' → logprob: -15.625033378601074
    10. '       ' → logprob: -16.50003433227539

Token 1109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.429896944202483e-05
    2. 'c' → logprob: -10.375043869018555
    3. 'cl' → logprob: -12.875043869018555
    4. '-' → logprob: -13.375043869018555
    5. '                       ' → logprob: -13.500043869018555
    6. ' ' → logprob: -13.750043869018555
    7. '                   ' → logprob: -13.875043869018555
    8. '[' → logprob: -13.875043869018555
    9. '{' → logprob: -14.375043869018555
    10. '2' → logprob: -14.625043869018555

Token 1110: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.014413824304938316
    2. '                       ' → logprob: -5.139413833618164
    3. ']:' → logprob: -5.889413833618164
    4. ':
' → logprob: -6.014413833618164
    5. '                           ' → logprob: -6.764413833618164
    6. '[c' → logprob: -6.889413833618164
    7. '):
' → logprob: -7.389413833618164
    8. ']' → logprob: -9.264413833618164
    9. ']]:
' → logprob: -9.764413833618164
    10. ':' → logprob: -9.889413833618164

Token 1111: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.018798042088747025
    2. '                           ' → logprob: -4.018797874450684
    3. ':
' → logprob: -7.893797874450684
    4. '                       ' → logprob: -9.018797874450684
    5. '                                   ' → logprob: -9.643797874450684
    6. '                             ' → logprob: -11.268797874450684
    7. '                              ' → logprob: -11.393797874450684
    8. ':' → logprob: -11.393797874450684
    9. '):
' → logprob: -11.643797874450684
    10. '```' → logprob: -11.893797874450684

Token 1112: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.009224479086697102
    2. ' continue' → logprob: -5.0092244148254395
    3. '                                   ' → logprob: -6.2592244148254395
    4. '                               ' → logprob: -7.5092244148254395
    5. '                                       ' → logprob: -10.884224891662598
    6. '                           ' → logprob: -11.259224891662598
    7. '                                           ' → logprob: -12.634224891662598
    8. '           ' → logprob: -12.759224891662598
    9. '                       ' → logprob: -13.009224891662598
    10. '                   ' → logprob: -13.884224891662598

Token 1113: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0011162757873535
    2. '                               ' → logprob: -1.0011162757873535
    3. '                           ' → logprob: -1.3761162757873535
    4. ':' → logprob: -5.3761162757873535
    5. ':
' → logprob: -5.6261162757873535
    6. '                        
' → logprob: -7.0011162757873535
    7. '                                
' → logprob: -7.5011162757873535
    8. ')' → logprob: -7.6261162757873535
    9. '                            
' → logprob: -7.6261162757873535
    10. '```' → logprob: -7.7511162757873535

Token 1114: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.045339375734329224
    2. '                           ' → logprob: -3.795339345932007
    3. ')' → logprob: -4.045339584350586
    4. '                               ' → logprob: -6.045339584350586
    5. '):' → logprob: -7.170339584350586
    6. '```' → logprob: -7.795339584350586
    7. ':' → logprob: -8.670339584350586
    8. '                        
' → logprob: -8.920339584350586
    9. '                   ' → logprob: -9.045339584350586
    10. '                        ' → logprob: -9.170339584350586

Token 1115: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03669581189751625
    2. '                           ' → logprob: -3.411695718765259
    3. ')' → logprob: -6.661695957183838
    4. '           ' → logprob: -7.786695957183838
    5. '```' → logprob: -8.16169548034668
    6. '                   ' → logprob: -8.53669548034668
    7. '                               ' → logprob: -8.66169548034668
    8. '                        ' → logprob: -8.66169548034668
    9. '                        
' → logprob: -8.91169548034668
    10. '):' → logprob: -9.03669548034668

Token 1116: ' Rule' (ID: 32118)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0925382524728775
    2. 'if' → logprob: -2.717538356781006
    3. '#' → logprob: -4.592538356781006
    4. '                           ' → logprob: -4.842538356781006
    5. '           ' → logprob: -6.342538356781006
    6. '                   ' → logprob: -6.842538356781006
    7. ' if' → logprob: -7.342538356781006
    8. '       ' → logprob: -8.467537879943848
    9. '   ' → logprob: -8.717537879943848
    10. '               ' → logprob: -8.842537879943848

Token 1117: ':' (ID: 25)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007247499655932188
    2. '                        
' → logprob: -6.007247447967529
    3. ' if' → logprob: -6.632247447967529
    4. '                           ' → logprob: -6.882247447967529
    5. '                        ' → logprob: -7.382247447967529
    6. ':' → logprob: -7.507247447967529
    7. '           ' → logprob: -7.757247447967529
    8. 'if' → logprob: -8.757247924804688
    9. 's' → logprob: -8.757247924804688
    10. '                   ' → logprob: -9.007247924804688

Token 1118: ' party' (ID: 7362)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.017835460603237152
    2. ' if' → logprob: -4.76783561706543
    3. 'if' → logprob: -4.89283561706543
    4. '                           ' → logprob: -6.89283561706543
    5. '                               ' → logprob: -8.26783561706543
    6. '```' → logprob: -8.76783561706543
    7. '                        
' → logprob: -9.26783561706543
    8. '                        ' → logprob: -10.01783561706543
    9. '                   ' → logprob: -10.64283561706543
    10. '           ' → logprob: -10.89283561706543

Token 1119: ' must' (ID: 2804)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6602490544319153
    2. ' without' → logprob: -1.1602489948272705
    3. ' should' → logprob: -3.0352489948272705
    4. 'without' → logprob: -3.1602489948272705
    5. ' must' → logprob: -4.16024923324585
    6. '           ' → logprob: -4.28524923324585
    7. '_without' → logprob: -4.53524923324585
    8. ' if' → logprob: -4.91024923324585
    9. '                           ' → logprob: -5.16024923324585
    10. 'should' → logprob: -5.28524923324585

Token 1120: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.17756853997707367
    2. ' have' → logprob: -2.0525684356689453
    3. 'not' → logprob: -3.9275684356689453
    4. ' not' → logprob: -4.427568435668945
    5. '                       ' → logprob: -6.677568435668945
    6. '_have' → logprob: -7.927568435668945
    7. ' be' → logprob: -8.052568435668945
    8. 'be' → logprob: -8.177568435668945
    9. 'either' → logprob: -9.552568435668945
    10. '#' → logprob: -9.802568435668945

Token 1121: ' hero' (ID: 20917)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.1052736043930054
    2. 'w' → logprob: -1.3552736043930054
    3. 'hero' → logprob: -1.8552736043930054
    4. 'war' → logprob: -2.730273723602295
    5. ' warrior' → logprob: -3.105273723602295
    6. ' hero' → logprob: -3.230273723602295
    7. ' at' → logprob: -3.730273723602295
    8. '   ' → logprob: -3.855273723602295
    9. ' a' → logprob: -4.230273723602295
    10. '                       ' → logprob: -4.355273723602295

Token 1122: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7360746264457703
    2. '                           ' → logprob: -0.9860746264457703
    3. ':' → logprob: -2.486074686050415
    4. '):' → logprob: -3.361074686050415
    5. ')' → logprob: -4.361074447631836
    6. '           ' → logprob: -5.986074447631836
    7. '                               ' → logprob: -6.111074447631836
    8. '                        ' → logprob: -6.236074447631836
    9. ',' → logprob: -6.361074447631836
    10. '                        
' → logprob: -6.486074447631836

Token 1123: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00017076305812224746
    2. '                        
' → logprob: -9.500170707702637
    3. 'if' → logprob: -10.125170707702637
    4. '```' → logprob: -10.750170707702637
    5. '                           ' → logprob: -11.375170707702637
    6. '           ' → logprob: -12.000170707702637
    7. '               ' → logprob: -12.500170707702637
    8. '                        ' → logprob: -13.000170707702637
    9. '                   ' → logprob: -13.125170707702637
    10. '       ' → logprob: -13.125170707702637

Token 1124: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009226372465491295
    2. 'if' → logprob: -4.884226322174072
    3. '                           ' → logprob: -7.259226322174072
    4. ' if' → logprob: -7.259226322174072
    5. '           ' → logprob: -9.13422679901123
    6. '                        
' → logprob: -9.88422679901123
    7. '               ' → logprob: -11.50922679901123
    8. '       ' → logprob: -11.63422679901123
    9. '                               ' → logprob: -11.63422679901123
    10. '                   ' → logprob: -11.63422679901123

Token 1125: ' Already' (ID: 72560)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5220248103141785
    2. '                       ' → logprob: -1.0220248699188232
    3. ' if' → logprob: -3.1470248699188232
    4. '                           ' → logprob: -6.022024631500244
    5. '#' → logprob: -7.647024631500244
    6. '                        
' → logprob: -8.147025108337402
    7. '                               ' → logprob: -8.772025108337402
    8. '                        ' → logprob: -8.897025108337402
    9. '```' → logprob: -9.147025108337402
    10. '                   ' → logprob: -9.522025108337402

Token 1126: ' have' (ID: 679)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.326041340827942
    2. 'have' → logprob: -1.576041340827942
    3. '                       ' → logprob: -2.0760412216186523
    4. ' continue' → logprob: -2.7010412216186523
    5. ':' → logprob: -2.8260412216186523
    6. 'h' → logprob: -2.8260412216186523
    7. 'True' → logprob: -3.3260412216186523
    8. 'if' → logprob: -3.5760412216186523
    9. ' have' → logprob: -3.9510412216186523
    10. ':
' → logprob: -4.201041221618652

Token 1127: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1863023042678833
    2. 'hero' → logprob: -2.3113021850585938
    3. 'True' → logprob: -3.1863021850585938
    4. ' True' → logprob: -4.686302185058594
    5. ' hero' → logprob: -4.936302185058594
    6. ' h' → logprob: -5.311302185058594
    7. '                       ' → logprob: -5.686302185058594
    8. '           ' → logprob: -6.686302185058594
    9. '                   ' → logprob: -7.561302185058594
    10. '   ' → logprob: -7.686302185058594

Token 1128: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002159898867830634
    2. '                           ' → logprob: -7.00216007232666
    3. ',' → logprob: -7.87716007232666
    4. ')' → logprob: -8.37716007232666
    5. '                        
' → logprob: -9.00216007232666
    6. ':' → logprob: -9.25216007232666
    7. '                   ' → logprob: -9.37716007232666
    8. '```' → logprob: -9.50216007232666
    9. '                               ' → logprob: -9.87716007232666
    10. '                        ' → logprob: -9.87716007232666

Token 1129: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004429435357451439
    2. '                        
' → logprob: -7.875442981719971
    3. '                        ' → logprob: -11.250442504882812
    4. '                           ' → logprob: -11.250442504882812
    5. '                   ' → logprob: -11.625442504882812
    6. '<|end|>' → logprob: -11.875442504882812
    7. '```' → logprob: -12.250442504882812
    8. '               ' → logprob: -12.500442504882812
    9. 'if' → logprob: -13.125442504882812
    10. '                      ' → logprob: -13.250442504882812

Token 1130: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002315833931788802
    2. '                        
' → logprob: -6.377315998077393
    3. '                           ' → logprob: -8.377315521240234
    4. 'if' → logprob: -8.627315521240234
    5. '                        ' → logprob: -9.377315521240234
    6. '```' → logprob: -9.877315521240234
    7. '                               ' → logprob: -11.377315521240234
    8. '
' → logprob: -11.502315521240234
    9. ' if' → logprob: -11.627315521240234
    10. '                            
' → logprob: -11.752315521240234

Token 1131: ' Rule' (ID: 32118)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011221705935895443
    2. 'if' → logprob: -5.011221885681152
    3. '                           ' → logprob: -6.511221885681152
    4. '                        
' → logprob: -6.511221885681152
    5. ' if' → logprob: -7.511221885681152
    6. '                               ' → logprob: -8.511221885681152
    7. '                        ' → logprob: -8.886221885681152
    8. '
' → logprob: -9.011221885681152
    9. '                   ' → logprob: -9.136221885681152
    10. '           ' → logprob: -9.136221885681152

Token 1132: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.756350040435791
    2. '                       ' → logprob: -0.756350040435791
    3. '                           ' → logprob: -4.256350040435791
    4. ' if' → logprob: -4.506350040435791
    5. ' ==' → logprob: -5.131350040435791
    6. ' :' → logprob: -5.381350040435791
    7. '                   ' → logprob: -5.506350040435791
    8. '                        ' → logprob: -5.506350040435791
    9. '                        
' → logprob: -6.256350040435791
    10. '               ' → logprob: -6.381350040435791

Token 1133: ' party' (ID: 7362)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.0136938095092773
    2. ' (' → logprob: -1.6386938095092773
    3. 'if' → logprob: -1.8886938095092773
    4. ' if' → logprob: -2.0136938095092773
    5. '(not' → logprob: -3.6386938095092773
    6. '                       ' → logprob: -3.6386938095092773
    7. ' not' → logprob: -3.8886938095092773
    8. ' w' → logprob: -3.8886938095092773
    9. '(' → logprob: -4.013693809509277
    10. 'not' → logprob: -4.138693809509277

Token 1134: ' without' (ID: 2935)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.44499340653419495
    2. 'must' → logprob: -2.069993495941162
    3. ' without' → logprob: -2.319993495941162
    4. ' should' → logprob: -3.069993495941162
    5. '                       ' → logprob: -3.819993495941162
    6. 'without' → logprob: -3.944993495941162
    7. '           ' → logprob: -4.069993495941162
    8. 'should' → logprob: -4.694993495941162
    9. '                           ' → logprob: -5.319993495941162
    10. '               ' → logprob: -5.569993495941162

Token 1135: ' cler' (ID: 91536)
  Prédit: ' warrior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warrior' → logprob: -0.35598787665367126
    2. 'war' → logprob: -1.3559879064559937
    3. 'cler' → logprob: -3.605987787246704
    4. ' cler' → logprob: -5.230988025665283
    5. '   ' → logprob: -6.230988025665283
    6. ' w' → logprob: -6.855988025665283
    7. 'w' → logprob: -6.980988025665283
    8. '_w' → logprob: -6.980988025665283
    9. ' ' → logprob: -7.105988025665283
    10. ' war' → logprob: -7.355988025665283

Token 1136: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -6.861651490908116e-05
    2. '                   ' → logprob: -10.500068664550781
    3. '                       ' → logprob: -10.500068664550781
    4. 'c' → logprob: -13.500068664550781
    5. 'icc' → logprob: -13.500068664550781
    6. '                        ' → logprob: -13.875068664550781
    7. 'ical' → logprob: -14.000068664550781
    8. '                        
' → logprob: -14.000068664550781
    9. 'if' → logprob: -14.125068664550781
    10. 'ics' → logprob: -14.125068664550781

Token 1137: ' should' (ID: 1757)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.898619532585144
    2. ' should' → logprob: -1.398619532585144
    3. '                       ' → logprob: -1.398619532585144
    4. ' or' → logprob: -3.3986196517944336
    5. ' if' → logprob: -3.8986196517944336
    6. 'should' → logprob: -4.273619651794434
    7. 'and' → logprob: -4.773619651794434
    8. ' must' → logprob: -5.523619651794434
    9. ' not' → logprob: -5.773619651794434
    10. ':' → logprob: -5.773619651794434

Token 1138: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.13168583810329437
    2. ' have' → logprob: -2.131685733795166
    3. 'not' → logprob: -5.881685733795166
    4. '_have' → logprob: -6.881685733795166
    5. ' not' → logprob: -7.006685733795166
    6. '
' → logprob: -12.381686210632324
    7. ' be' → logprob: -12.381686210632324
    8. 'be' → logprob: -12.506686210632324
    9. '_not' → logprob: -12.631686210632324
    10. '                       ' → logprob: -12.881686210632324

Token 1139: ' warrior' (ID: 76541)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1140: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14927832782268524
    2. 'and' → logprob: -2.649278402328491
    3. '                       ' → logprob: -2.774278402328491
    4. ' or' → logprob: -5.524278163909912
    5. '                        ' → logprob: -7.524278163909912
    6. '                           ' → logprob: -7.649278163909912
    7. ' if' → logprob: -8.39927864074707
    8. ' ' → logprob: -9.27427864074707
    9. ' (' → logprob: -9.89927864074707
    10. '                        
' → logprob: -10.39927864074707

Token 1141: ' mage' (ID: 89091)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1649216264486313
    2. 'mage' → logprob: -1.9149216413497925
    3. ' m' → logprob: -5.664921760559082
    4. ' mage' → logprob: -7.164921760559082
    5. '(m' → logprob: -8.664921760559082
    6. '   ' → logprob: -9.414921760559082
    7. '```' → logprob: -9.664921760559082
    8. '
' → logprob: -9.914921760559082
    9. 'mages' → logprob: -10.539921760559082
    10. '	m' → logprob: -10.789921760559082

Token 1142: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004004024958703667
    2. '                           ' → logprob: -8.25040054321289
    3. '                        
' → logprob: -10.25040054321289
    4. ' if' → logprob: -10.62540054321289
    5. '```' → logprob: -10.75040054321289
    6. ',' → logprob: -11.37540054321289
    7. ':' → logprob: -11.50040054321289
    8. 'if' → logprob: -11.62540054321289
    9. ':
' → logprob: -11.87540054321289
    10. '                        ' → logprob: -12.00040054321289

Token 1143: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00021641071361955255
    2. '                        
' → logprob: -9.000216484069824
    3. '                           ' → logprob: -9.750216484069824
    4. '           ' → logprob: -11.625216484069824
    5. '                        ' → logprob: -11.875216484069824
    6. '               ' → logprob: -12.875216484069824
    7. '                   ' → logprob: -13.000216484069824
    8. '```' → logprob: -13.000216484069824
    9. '       ' → logprob: -13.125216484069824
    10. '                               ' → logprob: -13.375216484069824

Token 1144: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005711443373002112
    2. 'if' (adapté à ' if') → logprob: -7.625571250915527
    3. '                           ' → logprob: -10.000571250915527
    4. ' if' → logprob: -11.000571250915527
    5. '                        
' → logprob: -11.500571250915527
    6. '           ' → logprob: -12.750571250915527
    7. '                   ' → logprob: -12.750571250915527
    8. '                        ' → logprob: -13.500571250915527
    9. '                      ' → logprob: -14.125571250915527
    10. '```' → logprob: -14.125571250915527

Token 1145: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.055203042924404144
    2. 'c' → logprob: -2.9302029609680176
    3. '                   ' → logprob: -9.055203437805176
    4. ' not' → logprob: -9.680203437805176
    5. '(c' → logprob: -10.180203437805176
    6. ' ' → logprob: -10.430203437805176
    7. ' (' → logprob: -10.680203437805176
    8. '                       ' → logprob: -11.055203437805176
    9. '   ' → logprob: -11.430203437805176
    10. '                           ' → logprob: -12.055203437805176

Token 1146: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007629938889294863
    2. 'is' → logprob: -4.882629871368408
    3. '==' → logprob: -10.882630348205566
    4. '	is' → logprob: -13.007630348205566
    5. ' ==' → logprob: -14.007630348205566
    6. ')' → logprob: -14.257630348205566
    7. 'in' → logprob: -15.507630348205566
    8. '=' → logprob: -15.632630348205566
    9. ' ' → logprob: -15.882630348205566
    10. ' in' → logprob: -16.13262939453125

Token 1147: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20151662826538086
    2. ' None' → logprob: -1.7015166282653809
    3. ' not' → logprob: -9.326517105102539
    4. 'not' → logprob: -11.951517105102539
    5. '_None' → logprob: -12.451517105102539
    6. '=None' → logprob: -12.826517105102539
    7. '(None' → logprob: -13.826517105102539
    8. '   ' → logprob: -15.951517105102539
    9. 'Not' → logprob: -16.57651710510254
    10. ',None' → logprob: -17.70151710510254

Token 1148: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06965940445661545
    2. 'and' → logprob: -3.444659471511841
    3. '                           ' → logprob: -3.444659471511841
    4. '                       ' → logprob: -5.819659233093262
    5. ' or' → logprob: -8.694659233093262
    6. '                               ' → logprob: -9.069659233093262
    7. '                          ' → logprob: -9.694659233093262
    8. '           ' → logprob: -10.319659233093262
    9. '                            ' → logprob: -11.069659233093262
    10. '                        ' → logprob: -11.069659233093262

Token 1149: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0010696083772927523
    2. '                               ' → logprob: -7.12606954574585
    3. '                       ' → logprob: -8.376070022583008
    4. '           ' → logprob: -11.501070022583008
    5. '                                   ' → logprob: -11.876070022583008
    6. '                            ' → logprob: -12.126070022583008
    7. ' if' → logprob: -12.626070022583008
    8. '                   ' → logprob: -13.126070022583008
    9. '                          ' → logprob: -13.376070022583008
    10. '               ' → logprob: -13.876070022583008

Token 1150: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4862734377384186
    2. ' if' → logprob: -1.4862734079360962
    3. '                           ' → logprob: -2.2362735271453857
    4. 'if' (adapté à ' if') → logprob: -2.9862735271453857
    5. '   ' → logprob: -7.361273288726807
    6. '                       ' → logprob: -8.111273765563965
    7. '           ' → logprob: -8.736273765563965
    8. '               ' → logprob: -8.861273765563965
    9. ' ' → logprob: -9.236273765563965
    10. '                                   ' → logprob: -9.486273765563965

Token 1151: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.029788101091980934
    2. ' w' → logprob: -3.529788017272949
    3. '(w' → logprob: -11.02978801727295
    4. '                           ' → logprob: -11.15478801727295
    5. '   ' → logprob: -13.15478801727295
    6. '                               ' → logprob: -13.27978801727295
    7. '                                   ' → logprob: -13.77978801727295
    8. '	w' → logprob: -14.27978801727295
    9. ' (' → logprob: -14.52978801727295
    10. '                                       ' → logprob: -15.02978801727295

Token 1152: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002843625843524933
    2. ' None' → logprob: -6.377843856811523
    3. 'is' → logprob: -7.002843856811523
    4. 'None' → logprob: -9.127843856811523
    5. '==' → logprob: -9.627843856811523
    6. '=None' → logprob: -10.502843856811523
    7. ' not' → logprob: -11.002843856811523
    8. ' ==' → logprob: -12.002843856811523
    9. ' ' → logprob: -13.127843856811523
    10. ')' → logprob: -13.377843856811523

Token 1153: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16272252798080444
    2. ' None' → logprob: -1.9127225875854492
    3. ' not' → logprob: -6.287722587585449
    4. 'not' → logprob: -7.662722587585449
    5. '                           ' → logprob: -9.78772258758545
    6. '=None' → logprob: -9.91272258758545
    7. '                               ' → logprob: -10.91272258758545
    8. '(None' → logprob: -11.03772258758545
    9. '_None' → logprob: -11.16272258758545
    10. '                                   ' → logprob: -11.78772258758545

Token 1154: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018037907779216766
    2. 'or' → logprob: -4.518037796020508
    3. '                               ' → logprob: -5.018037796020508
    4. '                           ' → logprob: -8.143037796020508
    5. ' and' → logprob: -10.643037796020508
    6. '```' → logprob: -11.893037796020508
    7. '                            ' → logprob: -12.518037796020508
    8. 'and' → logprob: -12.518037796020508
    9. '	or' → logprob: -12.518037796020508
    10. ' ' → logprob: -12.768037796020508

Token 1155: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004081009421497583
    2. ' m' → logprob: -5.504080772399902
    3. '                               ' → logprob: -14.004080772399902
    4. '                           ' → logprob: -14.254080772399902
    5. '   ' → logprob: -14.379080772399902
    6. '                                   ' → logprob: -14.754080772399902
    7. '	m' → logprob: -17.87908172607422
    8. '                            ' → logprob: -17.87908172607422
    9. '                                       ' → logprob: -18.00408172607422
    10. ' ' → logprob: -18.50408172607422

Token 1156: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20206992328166962
    2. 'is' → logprob: -1.702069878578186
    3. '==' → logprob: -8.077070236206055
    4. ' None' → logprob: -9.202070236206055
    5. '                           ' → logprob: -9.452070236206055
    6. '=None' → logprob: -9.702070236206055
    7. 'None' → logprob: -9.827070236206055
    8. '                               ' → logprob: -11.452070236206055
    9. ' not' → logprob: -11.702070236206055
    10. '                                   ' → logprob: -12.452070236206055

Token 1157: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024763736873865128
    2. ' None' → logprob: -6.002476215362549
    3. '_None' → logprob: -14.627476692199707
    4. '=None' → logprob: -16.37747573852539
    5. '(None' → logprob: -16.75247573852539
    6. '.None' → logprob: -19.50247573852539
    7. '_none' → logprob: -20.00247573852539
    8. '   ' → logprob: -20.25247573852539
    9. ',None' → logprob: -21.12747573852539
    10. 'none' → logprob: -21.37747573852539

Token 1158: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2213527113199234
    2. ':
' → logprob: -1.7213526964187622
    3. ':' → logprob: -3.9713528156280518
    4. '                           ' → logprob: -7.596352577209473
    5. 'continue' → logprob: -8.971352577209473
    6. ' continue' → logprob: -9.721352577209473
    7. '                       ' → logprob: -9.721352577209473
    8. '                              ' → logprob: -9.721352577209473
    9. '               ' → logprob: -11.096352577209473
    10. '                                   ' → logprob: -11.471352577209473

Token 1159: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0001789881061995402
    2. 'continue' → logprob: -9.500179290771484
    3. '                           ' → logprob: -9.875179290771484
    4. ' continue' → logprob: -10.125179290771484
    5. '                                   ' → logprob: -12.500179290771484
    6. '   ' → logprob: -12.750179290771484
    7. '                       ' → logprob: -13.000179290771484
    8. '```' → logprob: -13.875179290771484
    9. '                              ' → logprob: -14.250179290771484
    10. ':
' → logprob: -14.750179290771484

Token 1160: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5701007843017578
    2. '                                   ' → logprob: -1.0701007843017578
    3. '                               ' → logprob: -2.570100784301758
    4. '                           ' → logprob: -4.320100784301758
    5. ' continue' → logprob: -6.570100784301758
    6. '   ' → logprob: -8.570100784301758
    7. '           ' → logprob: -9.695100784301758
    8. '                                       ' → logprob: -10.195100784301758
    9. '                   ' → logprob: -10.945100784301758
    10. '                                           ' → logprob: -12.070100784301758

Token 1161: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5818890333175659
    2. '                               ' → logprob: -1.581889033317566
    3. ')' → logprob: -2.0818891525268555
    4. '                           ' → logprob: -2.3318891525268555
    5. '                                   ' → logprob: -5.4568891525268555
    6. '                        
' → logprob: -5.8318891525268555
    7. '<|end|>' → logprob: -6.5818891525268555
    8. '                            
' → logprob: -7.3318891525268555
    9. '                                
' → logprob: -7.4568891525268555
    10. ',' → logprob: -7.7068891525268555

Token 1162: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006548870820552111
    2. '                        
' → logprob: -5.381548881530762
    3. '
' → logprob: -7.006548881530762
    4. '                           ' → logprob: -7.756548881530762
    5. '                               ' → logprob: -8.131548881530762
    6. '                            
' → logprob: -9.131548881530762
    7. '```' → logprob: -9.506548881530762
    8. '<|end|>' → logprob: -10.131548881530762
    9. '                                
' → logprob: -11.131548881530762
    10. '                        ' → logprob: -11.631548881530762

Token 1163: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0019250639015808702
    2. '                           ' → logprob: -6.751924991607666
    3. '                        
' → logprob: -7.376924991607666
    4. '                               ' → logprob: -9.626925468444824
    5. '                   ' → logprob: -10.876925468444824
    6. '
' → logprob: -11.376925468444824
    7. '                            
' → logprob: -11.751925468444824
    8. '                        ' → logprob: -12.376925468444824
    9. '           ' → logprob: -12.376925468444824
    10. '               ' → logprob: -12.501925468444824

Token 1164: ' Rule' (ID: 32118)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.019076673313975334
    2. '                           ' → logprob: -4.519076824188232
    3. 'part' → logprob: -5.519076824188232
    4. '                               ' → logprob: -6.269076824188232
    5. '       ' → logprob: -7.394076824188232
    6. '           ' → logprob: -7.519076824188232
    7. '                   ' → logprob: -7.644076824188232
    8. '               ' → logprob: -8.394076347351074
    9. 'party' → logprob: -9.144076347351074
    10. '                                   ' → logprob: -10.019076347351074

Token 1165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24206288158893585
    2. '                       ' → logprob: -1.6170629262924194
    3. '                   ' → logprob: -5.367063045501709
    4. '                           ' → logprob: -5.617063045501709
    5. '           ' → logprob: -5.867063045501709
    6. ' if' → logprob: -6.492063045501709
    7. '               ' → logprob: -6.867063045501709
    8. '       ' → logprob: -7.367063045501709
    9. '                        ' → logprob: -8.11706256866455
    10. ':
' → logprob: -8.24206256866455

Token 1166: ' warrior' (ID: 76541)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39369815587997437
    2. ' if' → logprob: -1.2686982154846191
    3. '(w' → logprob: -4.393698215484619
    4. 'not' → logprob: -4.768698215484619
    5. ' not' → logprob: -5.018698215484619
    6. '       ' → logprob: -5.893698215484619
    7. ' (' → logprob: -6.018698215484619
    8. '                               ' → logprob: -6.143698215484619
    9. '(not' → logprob: -6.268698215484619
    10. '(N' → logprob: -6.893698215484619

Token 1167: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.038134098052978516
    2. ' !=' → logprob: -4.2881340980529785
    3. '                           ' → logprob: -5.1631340980529785
    4. ')' → logprob: -5.4131340980529785
    5. 'is' → logprob: -6.4131340980529785
    6. ' must' → logprob: -6.4131340980529785
    7. 'must' → logprob: -6.4131340980529785
    8. '==' → logprob: -6.7881340980529785
    9. '!=' → logprob: -6.7881340980529785
    10. ' ==' → logprob: -7.0381340980529785

Token 1168: ' hero' (ID: 20917)
  Prédit: 'hero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hero' → logprob: -0.30566272139549255
    2. 'h' → logprob: -1.430662751197815
    3. ' hero' → logprob: -4.180662631988525
    4. ' h' → logprob: -5.055662631988525
    5. 'w' → logprob: -6.430662631988525
    6. ' w' → logprob: -7.930662631988525
    7. ' ' → logprob: -9.305663108825684
    8. '
' → logprob: -9.555663108825684
    9. '(hero' → logprob: -9.680663108825684
    10. '   ' → logprob: -10.055663108825684

Token 1169: ' get' (ID: 717)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9928697943687439
    2. ' must' → logprob: -1.8678698539733887
    3. ' is' → logprob: -2.1178698539733887
    4. ')' → logprob: -2.2428698539733887
    5. ' not' → logprob: -3.2428698539733887
    6. ':
' → logprob: -3.2428698539733887
    7. 'in' → logprob: -3.2428698539733887
    8. 'must' → logprob: -3.3678698539733887
    9. '                       ' → logprob: -4.117869853973389
    10. '):
' → logprob: -4.742869853973389

Token 1170: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.7089841961860657
    2. '_al' → logprob: -1.208984136581421
    3. ' along' → logprob: -1.583984136581421
    4. '```' → logprob: -6.208984375
    5. '   ' → logprob: -7.583984375
    6. 'Along' → logprob: -8.208984375
    7. 'al' → logprob: -8.583984375
    8. '_' → logprob: -8.833984375
    9. '                       ' → logprob: -9.083984375
    10. ' ' → logprob: -9.208984375

Token 1171: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.556826651096344
    2. '                           ' → logprob: -0.931826651096344
    3. '                               ' → logprob: -5.056826591491699
    4. ')' → logprob: -5.181826591491699
    5. ':
' → logprob: -5.306826591491699
    6. ':' → logprob: -5.681826591491699
    7. '):
' → logprob: -5.806826591491699
    8. '                   ' → logprob: -5.806826591491699
    9. '           ' → logprob: -6.306826591491699
    10. '):' → logprob: -6.931826591491699

Token 1172: ' warrior' (ID: 76541)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03387390077114105
    2. ' w' → logprob: -3.4088737964630127
    3. 'war' → logprob: -9.033873558044434
    4. ' warrior' → logprob: -10.533873558044434
    5. 'present' → logprob: -10.783873558044434
    6. ' present' → logprob: -11.408873558044434
    7. '   ' → logprob: -11.908873558044434
    8. '                   ' → logprob: -12.033873558044434
    9. '(w' → logprob: -12.158873558044434
    10. '```' → logprob: -12.158873558044434

Token 1173: ' present' (ID: 3333)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9935457110404968
    2. ' is' → logprob: -1.1185457706451416
    3. ' must' → logprob: -2.9935457706451416
    4. ':' → logprob: -3.1185457706451416
    5. '                       ' → logprob: -3.1185457706451416
    6. ')' → logprob: -3.4935457706451416
    7. '):
' → logprob: -3.6185457706451416
    8. 'is' → logprob: -3.8685457706451416
    9. '                               ' → logprob: -3.8685457706451416
    10. ':
' → logprob: -4.1185455322265625

Token 1174: ' done' (ID: 4167)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17037072777748108
    2. '                           ' → logprob: -1.9203706979751587
    3. '                               ' → logprob: -5.295370578765869
    4. '<|end|>' → logprob: -5.795370578765869
    5. ':' → logprob: -7.045370578765869
    6. '           ' → logprob: -8.170371055603027
    7. '                   ' → logprob: -8.420371055603027
    8. ':
' → logprob: -9.420371055603027
    9. '               ' → logprob: -9.420371055603027
    10. ')' → logprob: -9.420371055603027

Token 1175: ' above' (ID: 5151)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2794017195701599
    2. '                           ' → logprob: -2.2794017791748047
    3. ')' → logprob: -2.5294017791748047
    4. '):' → logprob: -3.6544017791748047
    5. ':' → logprob: -4.779401779174805
    6. '                   ' → logprob: -4.904401779174805
    7. '           ' → logprob: -5.029401779174805
    8. '):
' → logprob: -5.154401779174805
    9. '               ' → logprob: -5.529401779174805
    10. '```' → logprob: -6.404401779174805

Token 1176: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04035387560725212
    2. ')' → logprob: -3.915353775024414
    3. '                           ' → logprob: -4.165353775024414
    4. '):' → logprob: -6.790353775024414
    5. '):
' → logprob: -7.040353775024414
    6. '                               ' → logprob: -7.415353775024414
    7. ':' → logprob: -7.915353775024414
    8. '```' → logprob: -8.040353775024414
    9. '                   ' → logprob: -8.165353775024414
    10. '           ' → logprob: -9.165353775024414

Token 1177: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005575117189437151
    2. ')' → logprob: -6.380575180053711
    3. '                           ' → logprob: -6.505575180053711
    4. '                        
' → logprob: -6.880575180053711
    5. '<|end|>' → logprob: -7.505575180053711
    6. '                   ' → logprob: -8.380575180053711
    7. '                               ' → logprob: -8.380575180053711
    8. '                        ' → logprob: -9.630575180053711
    9. '```' → logprob: -9.630575180053711
    10. '           ' → logprob: -9.880575180053711

Token 1178: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002417630283161998
    2. '                        
' → logprob: -6.37741756439209
    3. '                           ' → logprob: -8.00241756439209
    4. '<|end|>' → logprob: -9.12741756439209
    5. '                               ' → logprob: -9.37741756439209
    6. '                   ' → logprob: -10.12741756439209
    7. ')' → logprob: -10.37741756439209
    8. '```' → logprob: -10.87741756439209
    9. '                        ' → logprob: -11.00241756439209
    10. '           ' → logprob: -11.25241756439209

Token 1179: ' Rule' (ID: 32118)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00043734462815336883
    2. '                           ' → logprob: -8.37543773651123
    3. 'if' → logprob: -10.12543773651123
    4. '                               ' → logprob: -10.25043773651123
    5. '                   ' → logprob: -10.62543773651123
    6. '#' → logprob: -10.62543773651123
    7. '       ' → logprob: -11.37543773651123
    8. '```' → logprob: -11.37543773651123
    9. '                        
' → logprob: -11.50043773651123
    10. ')' → logprob: -11.50043773651123

Token 1180: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024207426235079765
    2. '                       ' → logprob: -4.024207592010498
    3. '                   ' → logprob: -5.774207592010498
    4. ':
' → logprob: -6.399207592010498
    5. '               ' → logprob: -8.02420711517334
    6. '                           ' → logprob: -9.02420711517334
    7. ' :' → logprob: -9.14920711517334
    8. '           ' → logprob: -9.14920711517334
    9. '```' → logprob: -9.14920711517334
    10. ' w' → logprob: -9.89920711517334

Token 1181: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.03892200067639351
    2. ' cler' → logprob: -3.788922071456909
    3. '#' → logprob: -4.91392183303833
    4. 'cl' → logprob: -6.03892183303833
    5. 'if' → logprob: -6.16392183303833
    6. 'mage' → logprob: -6.53892183303833
    7. 'c' → logprob: -7.41392183303833
    8. '                       ' → logprob: -8.288922309875488
    9. '
' → logprob: -8.663922309875488
    10. ' if' → logprob: -8.788922309875488

Token 1182: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.696889623621246e-06
    2. '                   ' → logprob: -13.25000286102295
    3. '                       ' → logprob: -15.00000286102295
    4. 'ick' → logprob: -15.25000286102295
    5. 'ics' → logprob: -16.250001907348633
    6. '                    ' → logprob: -17.000001907348633
    7. ']' → logprob: -17.125001907348633
    8. 'c' → logprob: -17.250001907348633
    9. ')' → logprob: -17.500001907348633
    10. '                           ' → logprob: -17.625001907348633

Token 1183: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6080581545829773
    2. 'and' → logprob: -1.358058214187622
    3. ' and' → logprob: -1.733058214187622
    4. 'is' → logprob: -3.983058214187622
    5. '                           ' → logprob: -6.858057975769043
    6. '==' → logprob: -6.983057975769043
    7. 'must' → logprob: -8.983057975769043
    8. ' None' → logprob: -9.233057975769043
    9. '_and' → logprob: -9.483057975769043
    10. ' or' → logprob: -9.483057975769043

Token 1184: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.10304949432611465
    2. ' warrior' → logprob: -2.7280495166778564
    3. 'hero' → logprob: -4.228049278259277
    4. 'w' → logprob: -4.603049278259277
    5. 'mage' → logprob: -6.228049278259277
    6. 'wizard' → logprob: -6.478049278259277
    7. ' hero' → logprob: -6.603049278259277
    8. '(w' → logprob: -7.228049278259277
    9. ' w' → logprob: -7.603049278259277
    10. ' war' → logprob: -7.978049278259277

Token 1185: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9369676113128662
    2. 'get' → logprob: -1.1869676113128662
    3. ' must' → logprob: -1.9369676113128662
    4. 'must' → logprob: -2.061967611312866
    5. 'present' → logprob: -4.686967849731445
    6. ' present' → logprob: -4.686967849731445
    7. 'if' → logprob: -5.436967849731445
    8. ' if' → logprob: -6.686967849731445
    9. '           ' → logprob: -6.686967849731445
    10. '       ' → logprob: -6.936967849731445

Token 1186: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.025481225922703743
    2. '_al' → logprob: -3.7754812240600586
    3. ' along' → logprob: -6.400481224060059
    4. '```' → logprob: -8.400481224060059
    5. 'Along' → logprob: -9.400481224060059
    6. 'None' → logprob: -9.775481224060059
    7. '_present' → logprob: -10.650481224060059
    8. '_none' → logprob: -10.650481224060059
    9. 'align' → logprob: -10.775481224060059
    10. 'al' → logprob: -11.150481224060059

Token 1187: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.29446670413017273
    2. '                       ' → logprob: -1.5444667339324951
    3. ':
' → logprob: -4.044466495513916
    4. 'done' → logprob: -5.044466495513916
    5. ' if' → logprob: -5.669466495513916
    6. 'if' → logprob: -6.044466495513916
    7. '                               ' → logprob: -6.044466495513916
    8. '```' → logprob: -6.169466495513916
    9. ' done' → logprob: -6.544466495513916
    10. ':' → logprob: -6.544466495513916

Token 1188: ' both' (ID: 2973)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.27572882175445557
    2. ' c' → logprob: -1.6507288217544556
    3. 'w' → logprob: -3.525728702545166
    4. ' w' → logprob: -5.025728702545166
    5. ' both' → logprob: -5.900728702545166
    6. ' present' → logprob: -5.900728702545166
    7. 'both' → logprob: -6.150728702545166
    8. 'present' → logprob: -6.525728702545166
    9. ' not' → logprob: -6.650728702545166
    10. 'None' → logprob: -7.150728702545166

Token 1189: ' present' (ID: 3333)
  Prédit: ' present'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' present' → logprob: -0.25269168615341187
    2. 'present' → logprob: -1.5026917457580566
    3. '                           ' → logprob: -8.002691268920898
    4. ' is' → logprob: -8.127691268920898
    5. '_present' → logprob: -9.877691268920898
    6. 'is' → logprob: -10.877691268920898
    7. '                       ' → logprob: -11.502691268920898
    8. '                               ' → logprob: -11.627691268920898
    9. ' are' → logprob: -11.627691268920898
    10. 'Present' → logprob: -12.127691268920898

Token 1190: ' done' (ID: 4167)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.111850306391716
    2. '                           ' → logprob: -2.6118502616882324
    3. '                               ' → logprob: -4.486850261688232
    4. ')' → logprob: -4.736850261688232
    5. '<|end|>' → logprob: -5.236850261688232
    6. '```' → logprob: -5.361850261688232
    7. ':' → logprob: -7.611850261688232
    8. '):' → logprob: -7.736850261688232
    9. '           ' → logprob: -8.23685073852539
    10. ',' → logprob: -8.61185073852539

Token 1191: ' above' (ID: 5151)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8836779594421387
    2. 'above' → logprob: -1.6336779594421387
    3. '                           ' → logprob: -2.2586779594421387
    4. '```' → logprob: -2.3836779594421387
    5. ' above' → logprob: -3.0086779594421387
    6. ']' → logprob: -3.1336779594421387
    7. 'done' → logprob: -3.8836779594421387
    8. ')' → logprob: -4.258677959442139
    9. ':' → logprob: -4.258677959442139
    10. ':
' → logprob: -4.508677959442139

Token 1192: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006261039059609175
    2. '                           ' → logprob: -6.256260871887207
    3. ')' → logprob: -6.381260871887207
    4. '                               ' → logprob: -6.756260871887207
    5. '<|end|>' → logprob: -7.506260871887207
    6. '                        
' → logprob: -7.631260871887207
    7. '```' → logprob: -9.006260871887207
    8. '
' → logprob: -9.506260871887207
    9. '                   ' → logprob: -10.131260871887207
    10. 'continue' → logprob: -10.506260871887207

Token 1193: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006057132501155138
    2. '                           ' → logprob: -5.631057262420654
    3. ')' → logprob: -7.506057262420654
    4. '```' → logprob: -7.506057262420654
    5. '                        
' → logprob: -7.506057262420654
    6. '                               ' → logprob: -7.631057262420654
    7. '                   ' → logprob: -9.256056785583496
    8. '<|end|>' → logprob: -9.381056785583496
    9. '                        ' → logprob: -10.381056785583496
    10. '           ' → logprob: -10.381056785583496

Token 1194: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0022857412695884705
    2. '                        
' → logprob: -6.752285957336426
    3. '                           ' → logprob: -7.377285957336426
    4. '```' → logprob: -8.377285957336426
    5. '                        ' → logprob: -9.377285957336426
    6. '                               ' → logprob: -10.002285957336426
    7. '                   ' → logprob: -10.752285957336426
    8. '<|end|>' → logprob: -10.877285957336426
    9. '           ' → logprob: -11.252285957336426
    10. '                            
' → logprob: -11.377285957336426

Token 1195: ' Rule' (ID: 32118)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11880651116371155
    2. '                           ' → logprob: -2.8688066005706787
    3. '                               ' → logprob: -3.1188066005706787
    4. 'if' → logprob: -5.3688063621521
    5. ')' → logprob: -5.7438063621521
    6. ' if' → logprob: -6.7438063621521
    7. '                                   ' → logprob: -7.8688063621521
    8. '                   ' → logprob: -7.9938063621521
    9. '           ' → logprob: -8.118806838989258
    10. '                        ' → logprob: -8.368806838989258

Token 1196: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004680037964135408
    2. '                       ' → logprob: -5.754680156707764
    3. '#' → logprob: -6.629680156707764
    4. ':
' → logprob: -10.004679679870605
    5. '                           ' → logprob: -10.254679679870605
    6. ':#' → logprob: -11.004679679870605
    7. ' m' → logprob: -11.754679679870605
    8. '                   ' → logprob: -11.879679679870605
    9. ':w' → logprob: -12.004679679870605
    10. ':m' → logprob: -12.129679679870605

Token 1197: ' mage' (ID: 89091)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06945200264453888
    2. '#' → logprob: -3.9444520473480225
    3. '(m' → logprob: -4.194451808929443
    4. ' m' → logprob: -4.569451808929443
    5. 'if' → logprob: -4.819451808929443
    6. 'mage' → logprob: -5.569451808929443
    7. '                       ' → logprob: -5.819451808929443
    8. '   ' → logprob: -6.819451808929443
    9. '       ' → logprob: -7.194451808929443
    10. ' (' → logprob: -7.569451808929443

Token 1198: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1658264398574829
    2. 'and' → logprob: -2.1658263206481934
    3. ' is' → logprob: -3.2908263206481934
    4. 'is' → logprob: -7.540826320648193
    5. '_and' → logprob: -8.915826797485352
    6. ' ' → logprob: -9.665826797485352
    7. '```' → logprob: -10.165826797485352
    8. ' None' → logprob: -10.290826797485352
    9. '==' → logprob: -10.290826797485352
    10. 'if' → logprob: -11.165826797485352

Token 1199: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.027025174349546432
    2. ' cler' → logprob: -3.6520252227783203
    3. 'c' → logprob: -7.52702522277832
    4. 'cl' → logprob: -10.02702522277832
    5. ' c' → logprob: -10.15202522277832
    6. '
' → logprob: -10.65202522277832
    7. ' ' → logprob: -11.27702522277832
    8. '   ' → logprob: -11.27702522277832
    9. 'clar' → logprob: -11.40202522277832
    10. 'm' → logprob: -12.27702522277832

Token 1200: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.5928495486150496e-05
    2. 'ics' → logprob: -12.250016212463379
    3. 'None' → logprob: -12.750016212463379
    4. 'c' → logprob: -13.000016212463379
    5. '```' → logprob: -13.375016212463379
    6. 'ric' → logprob: -13.750016212463379
    7. '#' → logprob: -14.625016212463379
    8. 'icc' → logprob: -15.125016212463379
    9. '1' → logprob: -15.250016212463379
    10. '``' → logprob: -15.500016212463379

Token 1201: ' get' (ID: 717)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.1202351450920105
    2. 'must' → logprob: -2.7452352046966553
    3. ' get' → logprob: -3.8702352046966553
    4. '```' → logprob: -4.870234966278076
    5. ' is' → logprob: -5.370234966278076
    6. ' present' → logprob: -5.620234966278076
    7. 'get' → logprob: -5.745234966278076
    8. ' and' → logprob: -6.120234966278076
    9. ' if' → logprob: -6.495234966278076
    10. ' should' → logprob: -7.245234966278076

Token 1202: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.0011149736819788814
    2. '```' → logprob: -7.501114845275879
    3. ' along' → logprob: -7.751114845275879
    4. '_al' → logprob: -9.876114845275879
    5. 'None' → logprob: -10.876114845275879
    6. '   ' → logprob: -11.626114845275879
    7. '_' → logprob: -12.376114845275879
    8. '``' → logprob: -12.376114845275879
    9. 'alone' → logprob: -12.626114845275879
    10. 'al' → logprob: -12.626114845275879

Token 1203: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9637249708175659
    2. ' if' → logprob: -1.088724970817566
    3. '                       ' → logprob: -1.838724970817566
    4. '                               ' → logprob: -2.9637250900268555
    5. 'if' → logprob: -3.4637250900268555
    6. 'done' → logprob: -3.8387250900268555
    7. ' done' → logprob: -4.3387250900268555
    8. '```' → logprob: -6.3387250900268555
    9. ':
' → logprob: -7.7137250900268555
    10. '                            ' → logprob: -7.7137250900268555

Token 1204: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.040295712649822235
    2. 'm' → logprob: -4.290295600891113
    3. 'None' → logprob: -4.790295600891113
    4. ' both' → logprob: -5.040295600891113
    5. 'False' → logprob: -5.415295600891113
    6. 'c' → logprob: -5.790295600891113
    7. 'not' → logprob: -6.665295600891113
    8. 'w' → logprob: -6.915295600891113
    9. 'True' → logprob: -7.540295600891113
    10. 'Both' → logprob: -7.540295600891113

Token 1205: ' present' (ID: 3333)
  Prédit: 'present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'present' → logprob: -0.5797291398048401
    2. ' present' → logprob: -0.8297291398048401
    3. ' is' → logprob: -6.704729080200195
    4. 'None' → logprob: -6.954729080200195
    5. ' None' → logprob: -6.954729080200195
    6. 'is' → logprob: -8.204729080200195
    7. '_present' → logprob: -8.204729080200195
    8. ' not' → logprob: -11.204729080200195
    9. '```' → logprob: -11.204729080200195
    10. 'not' → logprob: -11.329729080200195

Token 1206: ' done' (ID: 4167)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4533199071884155
    2. '                               ' → logprob: -1.2033199071884155
    3. '                       ' → logprob: -3.203320026397705
    4. ':
' → logprob: -4.828320026397705
    5. ':' → logprob: -4.953320026397705
    6. '                                   ' → logprob: -5.828320026397705
    7. '):
' → logprob: -5.828320026397705
    8. '):' → logprob: -6.703320026397705
    9. '```' → logprob: -7.578320026397705
    10. ')' → logprob: -8.453319549560547

Token 1207: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.14161287248134613
    2. ' above' → logprob: -2.2666127681732178
    3. '                           ' → logprob: -4.641613006591797
    4. '                       ' → logprob: -5.391613006591797
    5. '```' → logprob: -5.391613006591797
    6. '                                   ' → logprob: -5.766613006591797
    7. 'Above' → logprob: -6.641613006591797
    8. '                               ' → logprob: -6.766613006591797
    9. '                                           ' → logprob: -7.766613006591797
    10. '   ' → logprob: -7.766613006591797

Token 1208: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010839937254786491
    2. '                           ' → logprob: -5.260839939117432
    3. ')' → logprob: -5.885839939117432
    4. '                               ' → logprob: -6.760839939117432
    5. '                        
' → logprob: -7.260839939117432
    6. '```' → logprob: -7.260839939117432
    7. '                   ' → logprob: -10.260839462280273
    8. '                            
' → logprob: -10.510839462280273
    9. '
' → logprob: -10.885839462280273
    10. '                                   ' → logprob: -11.010839462280273

Token 1209: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02392975240945816
    2. '                           ' → logprob: -4.398929595947266
    3. ')' → logprob: -4.773929595947266
    4. '                               ' → logprob: -6.648929595947266
    5. '                        
' → logprob: -7.398929595947266
    6. '```' → logprob: -7.773929595947266
    7. '                   ' → logprob: -8.898929595947266
    8. '           ' → logprob: -9.273929595947266
    9. '                        ' → logprob: -9.398929595947266
    10. '<|end|>' → logprob: -9.898929595947266

Token 1210: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11664056777954102
    2. '                       ' → logprob: -2.241640567779541
    3. '                               ' → logprob: -6.366640567779541
    4. ')' → logprob: -6.491640567779541
    5. '           ' → logprob: -8.116640090942383
    6. '                   ' → logprob: -10.116640090942383
    7. '                        
' → logprob: -10.366640090942383
    8. '                            
' → logprob: -10.366640090942383
    9. '
' → logprob: -10.491640090942383
    10. '               ' → logprob: -10.616640090942383

Token 1211: ' valid' (ID: 4529)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05752934515476227
    2. '                           ' → logprob: -2.9325294494628906
    3. '                               ' → logprob: -6.057529449462891
    4. 'if' → logprob: -9.05752944946289
    5. '                                   ' → logprob: -9.80752944946289
    6. '           ' → logprob: -10.43252944946289
    7. '                   ' → logprob: -10.55752944946289
    8. '```' → logprob: -11.05752944946289
    9. 'part' → logprob: -11.55752944946289
    10. '       ' → logprob: -11.93252944946289

Token 1212: ' party' (ID: 7362)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.922914445400238
    2. '):' → logprob: -1.7979145050048828
    3. '                       ' → logprob: -1.9229145050048828
    4. ':' → logprob: -2.297914505004883
    5. ':
' → logprob: -2.547914505004883
    6. '):
' → logprob: -2.922914505004883
    7. ')' → logprob: -3.547914505004883
    8. '                               ' → logprob: -4.422914505004883
    9. ',' → logprob: -5.422914505004883
    10. '           ' → logprob: -5.422914505004883

Token 1213: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.05760159343481064
    2. '                       ' → logprob: -2.9326016902923584
    3. '                               ' → logprob: -6.432601451873779
    4. ')' → logprob: -7.682601451873779
    5. '           ' → logprob: -8.557601928710938
    6. '                   ' → logprob: -9.182601928710938
    7. '):' → logprob: -9.432601928710938
    8. '                                   ' → logprob: -9.432601928710938
    9. '):
' → logprob: -9.807601928710938
    10. '               ' → logprob: -11.057601928710938

Token 1214: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0010234013898298144
    2. '                       ' → logprob: -7.376023292541504
    3. ')' → logprob: -9.001023292541504
    4. '           ' → logprob: -9.001023292541504
    5. '                               ' → logprob: -9.376023292541504
    6. '                   ' → logprob: -10.876023292541504
    7. '               ' → logprob: -11.251023292541504
    8. '):' → logprob: -12.126023292541504
    9. ':' → logprob: -12.376023292541504
    10. '                            
' → logprob: -12.626023292541504

Token 1215: ' parties' (ID: 13531)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06525541841983795
    2. '                       ' → logprob: -2.8152554035186768
    3. '                               ' → logprob: -6.315255641937256
    4. 'part' → logprob: -7.065255641937256
    5. '           ' → logprob: -7.940255641937256
    6. '                   ' → logprob: -8.940255165100098
    7. '               ' → logprob: -9.815255165100098
    8. '                                   ' → logprob: -9.940255165100098
    9. '       ' → logprob: -12.065255165100098
    10. 'parts' → logprob: -12.690255165100098

Token 1216: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.994086627149954e-05
    2. '.' → logprob: -9.875080108642578
    3. '           ' → logprob: -11.250080108642578
    4. ').' → logprob: -12.250080108642578
    5. ' .' → logprob: -13.375080108642578
    6. '```' → logprob: -13.375080108642578
    7. '.setdefault' → logprob: -13.750080108642578
    8. '.add' → logprob: -13.750080108642578
    9. '].' → logprob: -13.875080108642578
    10. '.app' → logprob: -14.000080108642578

Token 1217: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.8785097002983093
    2. '(' → logprob: -1.128509759902954
    3. ' (' → logprob: -1.378509759902954
    4. '(h' → logprob: -5.253509521484375
    5. ' ((' → logprob: -5.753509521484375
    6. '   ' → logprob: -7.253509521484375
    7. '           ' → logprob: -12.003509521484375
    8. '       ' → logprob: -12.503509521484375
    9. '                   ' → logprob: -12.878509521484375
    10. '(
' → logprob: -13.253509521484375

Token 1218: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.4868770196917467e-05
    2. ' h' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.125024795532227
    4. '(h' → logprob: -16.250024795532227
    5. '           ' → logprob: -16.625024795532227
    6. '                   ' → logprob: -17.375024795532227
    7. '               ' → logprob: -17.875024795532227
    8. '       ' → logprob: -18.250024795532227
    9. '	h' → logprob: -18.375024795532227
    10. '"h' → logprob: -18.375024795532227

Token 1219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002385399304330349
    2. ',w' → logprob: -6.62738561630249
    3. ',
' → logprob: -7.62738561630249
    4. '           ' → logprob: -8.377385139465332
    5. ' ,' → logprob: -9.502385139465332
    6. '<|end|>' → logprob: -9.752385139465332
    7. '                       ' → logprob: -9.877385139465332
    8. ')' → logprob: -10.127385139465332
    9. '       ' → logprob: -10.502385139465332
    10. '               ' → logprob: -11.127385139465332

Token 1220: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.4727069139480591
    2. 'w' → logprob: -1.097706913948059
    3. ' None' → logprob: -3.7227067947387695
    4. 'None' → logprob: -3.9727067947387695
    5. ')' → logprob: -11.09770679473877
    6. '(None' → logprob: -11.97270679473877
    7. '0' → logprob: -12.09770679473877
    8. ' 
' → logprob: -12.09770679473877
    9. ' ' → logprob: -12.22270679473877
    10. ',None' → logprob: -12.47270679473877

Token 1221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007902132347226143
    2. ',c' → logprob: -7.750790119171143
    3. ',
' → logprob: -8.3757905960083
    4. '                       ' → logprob: -10.5007905960083
    5. ' ,' → logprob: -10.6257905960083
    6. ')' → logprob: -10.8757905960083
    7. '),' → logprob: -11.8757905960083
    8. '<|end|>' → logprob: -12.1257905960083
    9. '                   ' → logprob: -12.5007905960083
    10. ',None' → logprob: -12.6257905960083

Token 1222: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012415809032972902
    2. ' c' → logprob: -9.000123977661133
    3. '                   ' → logprob: -14.875123977661133
    4. '                               ' → logprob: -15.750123977661133
    5. '   ' → logprob: -16.500123977661133
    6. '                       ' → logprob: -17.000123977661133
    7. '                                   ' → logprob: -17.375123977661133
    8. '                           ' → logprob: -17.625123977661133
    9. '               ' → logprob: -17.750123977661133
    10. '       ' → logprob: -17.750123977661133

Token 1223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16152283549308777
    2. ',m' → logprob: -1.9115228652954102
    3. '                       ' → logprob: -8.28652286529541
    4. ')' → logprob: -8.66152286529541
    5. ' ,' → logprob: -8.78652286529541
    6. '<|end|>' → logprob: -8.91152286529541
    7. '))' → logprob: -9.03652286529541
    8. ',None' → logprob: -9.41152286529541
    9. ',
' → logprob: -9.78652286529541
    10. '                           ' → logprob: -10.28652286529541

Token 1224: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.494741632603109e-05
    2. ' m' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.000085830688477
    4. '                   ' → logprob: -18.250085830688477
    5. '                               ' → logprob: -18.875085830688477
    6. '           ' → logprob: -18.875085830688477
    7. '       ' → logprob: -19.000085830688477
    8. '	m' → logprob: -19.125085830688477
    9. '               ' → logprob: -19.750085830688477
    10. '                           ' → logprob: -19.875085830688477

Token 1225: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693282961845398
    2. '))' → logprob: -0.693282961845398
    3. '))
' → logprob: -9.318283081054688
    4. '                       ' → logprob: -10.693283081054688
    5. ')
' → logprob: -11.693283081054688
    6. ')))' → logprob: -12.193283081054688
    7. ')}' → logprob: -12.443283081054688
    8. '       ' → logprob: -13.443283081054688
    9. ')]' → logprob: -14.193283081054688
    10. '           ' → logprob: -14.568283081054688

Token 1226: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1227: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8995615839958191
    2. '<|end|>' → logprob: -1.0245616436004639
    3. '
' → logprob: -1.5245616436004639
    4. '        
' → logprob: -4.274561405181885
    5. '<|end|>' → logprob: -6.774561405181885
    6. '```' → logprob: -7.649561405181885
    7. '#' (adapté à ' #') → logprob: -8.774561882019043
    8. ')' → logprob: -9.024561882019043
    9. '
        
' → logprob: -9.149561882019043
    10. '

' → logprob: -9.149561882019043

Token 1228: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9999926090240479
    2. 'used' → logprob: -1.3749926090240479
    3. '       ' → logprob: -1.6249926090240479
    4. 'from' → logprob: -2.124992609024048
    5. 'selected' → logprob: -3.499992609024048
    6. 'import' → logprob: -4.624992370605469
    7. 'part' → logprob: -5.499992370605469
    8. 'counts' → logprob: -6.124992370605469
    9. 'visited' → logprob: -6.249992370605469
    10. 'party' → logprob: -6.249992370605469

Token 1229: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0772029384970665
    2. '#' → logprob: -3.7022030353546143
    3. ' #' → logprob: -4.077202796936035
    4. 'import' → logprob: -4.202202796936035
    5. '        
' → logprob: -5.827202796936035
    6. '```' → logprob: -5.952202796936035
    7. ' import' → logprob: -6.077202796936035
    8. 'part' → logprob: -6.327202796936035
    9. 'from' → logprob: -6.452202796936035
    10. ' from' → logprob: -6.577202796936035

Token 1230: ' want' (ID: 1682)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5110934972763062
    2. '=' → logprob: -1.6360934972763062
    3. '       ' → logprob: -2.2610936164855957
    4. ' want' → logprob: -2.8860936164855957
    5. '#' → logprob: -4.136093616485596
    6. '.sort' → logprob: -5.511093616485596
    7. 'continue' → logprob: -5.511093616485596
    8. ' will' → logprob: -5.886093616485596
    9. ' need' → logprob: -6.136093616485596
    10. ' continue' → logprob: -6.386093616485596

Token 1231: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29509150981903076
    2. ' to' → logprob: -1.6700915098190308
    3. 'to' → logprob: -3.1700916290283203
    4. '#' → logprob: -5.17009162902832
    5. 'count' → logprob: -5.54509162902832
    6. 'def' → logprob: -6.04509162902832
    7. 'max' → logprob: -6.67009162902832
    8. 'possible' → logprob: -6.67009162902832
    9. ' #' → logprob: -6.92009162902832
    10. 'import' → logprob: -6.92009162902832

Token 1232: ' select' (ID: 4736)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8583031296730042
    2. 'sort' → logprob: -1.6083030700683594
    3. 'select' → logprob: -1.8583030700683594
    4. 'count' → logprob: -2.2333030700683594
    5. 'import' → logprob: -2.9833030700683594
    6. 'find' → logprob: -4.233303070068359
    7. 'filter' → logprob: -4.233303070068359
    8. 'use' → logprob: -5.108303070068359
    9. 'choose' → logprob: -5.233303070068359
    10. ' sort' → logprob: -5.733303070068359

Token 1233: ' maximum' (ID: 10562)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.3324495851993561
    2. '       ' → logprob: -2.3324496746063232
    3. ' a' → logprob: -2.9574496746063232
    4. 'part' → logprob: -3.3324496746063232
    5. 'from' → logprob: -3.5824496746063232
    6. 'a' → logprob: -4.207449436187744
    7. '   ' → logprob: -4.457449436187744
    8. 'subset' → logprob: -4.707449436187744
    9. ' from' → logprob: -4.957449436187744
    10. ' sets' → logprob: -5.332449436187744

Token 1234: ' number' (ID: 2086)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.7677769660949707
    2. 'number' → logprob: -1.8927769660949707
    3. '   ' → logprob: -2.0177769660949707
    4. ' number' → logprob: -2.2677769660949707
    5. '_number' → logprob: -3.7677769660949707
    6. 'part' → logprob: -3.7677769660949707
    7. '       ' → logprob: -4.142776966094971
    8. 'count' → logprob: -4.267776966094971
    9. 'size' → logprob: -4.392776966094971
    10. '```' → logprob: -4.767776966094971

Token 1235: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4877144992351532
    2. ' of' → logprob: -1.6127145290374756
    3. '_of' → logprob: -1.8627145290374756
    4. '[' → logprob: -4.4877142906188965
    5. '       ' → logprob: -4.4877142906188965
    6. '_' → logprob: -6.3627142906188965
    7. '   ' → logprob: -6.4877142906188965
    8. ')' → logprob: -6.8627142906188965
    9. '_part' → logprob: -7.6127142906188965
    10. '
' → logprob: -7.7377142906188965

Token 1236: ' dis' (ID: 829)
  Prédit: ' parties'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parties' → logprob: -0.5368624329566956
    2. 'part' → logprob: -0.9118624329566956
    3. ' part' → logprob: -5.036862373352051
    4. ' dis' → logprob: -5.536862373352051
    5. '_part' → logprob: -6.786862373352051
    6. ' non' → logprob: -7.161862373352051
    7. ' partis' → logprob: -8.91186237335205
    8. 'dis' → logprob: -9.16186237335205
    9. '```' → logprob: -9.28686237335205
    10. 'spaces' → logprob: -9.53686237335205

Token 1237: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.019182860851287842
    2. 'j' → logprob: -4.6441826820373535
    3. 't' → logprob: -5.8941826820373535
    4. '   ' → logprob: -6.0191826820373535
    5. '       ' → logprob: -7.0191826820373535
    6. '_' → logprob: -7.3941826820373535
    7. '
' → logprob: -7.3941826820373535
    8. '```' → logprob: -8.269183158874512
    9. '_joint' → logprob: -8.394183158874512
    10. '_j' → logprob: -8.644183158874512

Token 1238: ' parties' (ID: 13531)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -1.012046217918396
    2. ' parties' → logprob: -1.262046217918396
    3. 'part' → logprob: -2.1370463371276855
    4. ')' → logprob: -3.0120463371276855
    5. '(part' → logprob: -3.0120463371276855
    6. ' (' → logprob: -3.5120463371276855
    7. '(
' → logprob: -4.1370463371276855
    8. '(' → logprob: -4.2620463371276855
    9. ' sets' → logprob: -4.3870463371276855
    10. '```' → logprob: -5.1370463371276855

Token 1239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.714367687702179
    2. '        
' → logprob: -1.4643676280975342
    3. '
' → logprob: -1.7143676280975342
    4. '<|end|>' → logprob: -2.964367628097534
    5. ',' → logprob: -3.964367628097534
    6. 'from' → logprob: -4.214367866516113
    7. ',
' → logprob: -5.589367866516113
    8. ' from' → logprob: -6.214367866516113
    9. '```' → logprob: -7.089367866516113
    10. '#' → logprob: -7.339367866516113

Token 1240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036806702613830566
    2. ',' → logprob: -4.161806583404541
    3. '        
' → logprob: -4.786806583404541
    4. '.' → logprob: -5.786806583404541
    5. '
' → logprob: -6.411806583404541
    6. ':' → logprob: -6.411806583404541
    7. '(' → logprob: -6.786806583404541
    8. '<|end|>' → logprob: -7.286806583404541
    9. '_' → logprob: -7.661806583404541
    10. ',
' → logprob: -7.661806583404541

Token 1241: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08960887789726257
    2. '
' → logprob: -3.089608907699585
    3. 'from' → logprob: -3.839608907699585
    4. '        
' → logprob: -4.964608669281006
    5. 'import' → logprob: -5.464608669281006
    6. '#' (adapté à ' #') → logprob: -6.089608669281006
    7. '```' → logprob: -6.339608669281006
    8. ' from' → logprob: -6.464608669281006
    9. ',' → logprob: -7.339608669281006
    10. ',
' → logprob: -8.964609146118164

Token 1242: ' Dis' (ID: 3946)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7143638134002686
    2. ' used' → logprob: -1.8393638134002686
    3. '#' → logprob: -2.2143638134002686
    4. 'from' → logprob: -2.5893638134002686
    5. '
' → logprob: -2.9643638134002686
    6. 'used' → logprob: -3.0893638134002686
    7. 'import' → logprob: -3.5893638134002686
    8. ' from' → logprob: -3.9643638134002686
    9. ' #' → logprob: -4.589364051818848
    10. '        
' → logprob: -5.714364051818848

Token 1243: 'joint' (ID: 69164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.30910763144493103
    2. 'joint' → logprob: -2.559107542037964
    3. '       ' → logprob: -2.684107542037964
    4. '.' → logprob: -3.184107542037964
    5. ')' → logprob: -3.809107542037964
    6. 'j' → logprob: -4.309107780456543
    7. 'card' → logprob: -5.059107780456543
    8. '#' → logprob: -5.059107780456543
    9. '=' → logprob: -5.559107780456543
    10. '```' → logprob: -5.559107780456543

Token 1244: ' means' (ID: 4748)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.5309131741523743
    2. '_' → logprob: -1.5309131145477295
    3. '_sets' → logprob: -2.2809131145477295
    4. '_parts' → logprob: -3.2809131145477295
    5. '_party' → logprob: -4.280913352966309
    6. '_set' → logprob: -4.905913352966309
    7. ')' → logprob: -5.155913352966309
    8. ',' → logprob: -5.780913352966309
    9. 'sets' → logprob: -6.405913352966309
    10. ':' → logprob: -6.405913352966309

Token 1245: ' one' (ID: 1001)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.1882285177707672
    2. ' that' → logprob: -2.5632286071777344
    3. 'no' → logprob: -4.063228607177734
    4. '       ' → logprob: -4.188228607177734
    5. ' all' → logprob: -4.313228607177734
    6. ' heroes' → logprob: -4.438228607177734
    7. ' each' → logprob: -4.813228607177734
    8. '   ' → logprob: -5.313228607177734
    9. 'that' → logprob: -5.313228607177734
    10. 'heroes' → logprob: -5.438228607177734

Token 1246: ' advent' (ID: 13572)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6545640230178833
    2. '_' → logprob: -2.1545639038085938
    3. ' (' → logprob: -2.5295639038085938
    4. ' )' → logprob: -3.1545639038085938
    5. '       ' → logprob: -3.4045639038085938
    6. ' party' → logprob: -3.9045639038085938
    7. '(
' → logprob: -4.029563903808594
    8. '_party' → logprob: -4.279563903808594
    9. ' hero' → logprob: -4.404563903808594
    10. ',' → logprob: -4.529563903808594

Token 1247: 'urer' (ID: 8563)
  Prédit: 'urer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urer' → logprob: -0.03159826248884201
    2. 'urers' → logprob: -3.5315983295440674
    3. 'u' → logprob: -7.406598091125488
    4. 'ure' → logprob: -7.531598091125488
    5. 'ur' → logprob: -8.781598091125488
    6. '   ' → logprob: -9.281598091125488
    7. ')' → logprob: -9.656598091125488
    8. '       ' → logprob: -10.156598091125488
    9. ']' → logprob: -10.406598091125488
    10. ',' → logprob: -10.656598091125488

Token 1248: ' can' (ID: 665)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6720169186592102
    2. 's' → logprob: -1.4220168590545654
    3. ')' → logprob: -1.6720168590545654
    4. ',' → logprob: -3.5470168590545654
    5. ':' → logprob: -4.7970170974731445
    6. '<|end|>' → logprob: -5.7970170974731445
    7. ' _' → logprob: -5.9220170974731445
    8. '):' → logprob: -6.1720170974731445
    9. '[' → logprob: -6.6720170974731445
    10. ' =' → logprob: -6.9220170974731445

Token 1249: ' be' (ID: 413)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.44832104444503784
    2. ' not' → logprob: -1.4483211040496826
    3. ' be' → logprob: -2.3233211040496826
    4. ' only' → logprob: -4.5733208656311035
    5. 'appear' → logprob: -5.1983208656311035
    6. ' appear' → logprob: -5.3233208656311035
    7. 'be' → logprob: -5.9483208656311035
    8. 'n't' → logprob: -5.9483208656311035
    9. 'only' → logprob: -6.8233208656311035
    10. 'particip' → logprob: -7.8233208656311035

Token 1250: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2939685881137848
    2. 'used' → logprob: -1.4189685583114624
    3. 'part' → logprob: -5.418968677520752
    4. ' in' → logprob: -5.668968677520752
    5. ' used' → logprob: -6.293968677520752
    6. '```' → logprob: -6.418968677520752
    7. 'assigned' → logprob: -7.418968677520752
    8. '   ' → logprob: -8.793968200683594
    9. '_used' → logprob: -9.293968200683594
    10. ' part' → logprob: -9.293968200683594

Token 1251: ' only' (ID: 1606)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5083085298538208
    2. 'only' → logprob: -1.1333085298538208
    3. 'part' → logprob: -2.8833084106445312
    4. 'no' → logprob: -4.508308410644531
    5. 'more' → logprob: -5.883308410644531
    6. ' at' → logprob: -6.008308410644531
    7. 'multiple' → logprob: -6.133308410644531
    8. '   ' → logprob: -7.758308410644531
    9. 'one' → logprob: -7.883308410644531
    10. 'any' → logprob: -8.258308410644531

Token 1252: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.4894876182079315
    2. 'one' → logprob: -1.114487648010254
    3. 'part' → logprob: -2.989487648010254
    4. ' ' → logprob: -5.739487648010254
    5. ' parties' → logprob: -6.614487648010254
    6. '
' → logprob: -6.989487648010254
    7. '```' → logprob: -7.489487648010254
    8. '   ' → logprob: -7.614487648010254
    9. ' at' → logprob: -7.739487648010254
    10. 'party' → logprob: -8.239487648010254

Token 1253: ' party' (ID: 7362)
  Prédit: 'party'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'party' → logprob: -1.0469599962234497
    2. '_party' → logprob: -1.0469599962234497
    3. ' party' → logprob: -1.5469599962234497
    4. '_' → logprob: -3.67195987701416
    5. ')' → logprob: -3.79695987701416
    6. '   ' → logprob: -5.17195987701416
    7. ' (' → logprob: -5.42195987701416
    8. '```' → logprob: -5.67195987701416
    9. '(
' → logprob: -5.79695987701416
    10. '       ' → logprob: -6.04695987701416

Token 1254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18717046082019806
    2. ':' → logprob: -3.3121705055236816
    3. ',' → logprob: -3.5621705055236816
    4. ')' → logprob: -3.5621705055236816
    5. '_' → logprob: -3.9371705055236816
    6. '.' → logprob: -4.187170505523682
    7. 's' → logprob: -4.812170505523682
    8. '<|end|>' → logprob: -4.937170505523682
    9. ':
' → logprob: -5.187170505523682
    10. '
' → logprob: -5.312170505523682

Token 1255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6201076507568359
    2. '<|end|>' → logprob: -1.370107650756836
    3. '
' → logprob: -1.620107650756836
    4. '<|end|>' → logprob: -5.870107650756836
    5. '        
' → logprob: -6.370107650756836
    6. ')' → logprob: -6.620107650756836
    7. ',' → logprob: -6.745107650756836
    8. '.' → logprob: -7.745107650756836
    9. '#' → logprob: -7.870107650756836
    10. '```' → logprob: -8.495107650756836

Token 1256: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09460819512605667
    2. '<|end|>' → logprob: -3.0946083068847656
    3. '
' → logprob: -3.4696083068847656
    4. '        
' → logprob: -5.219608306884766
    5. ',' → logprob: -5.844608306884766
    6. '.' → logprob: -6.844608306884766
    7. ')' → logprob: -6.844608306884766
    8. '<|end|>' → logprob: -7.469608306884766
    9. 'from' → logprob: -7.594608306884766
    10. '#' (adapté à ' #') → logprob: -7.719608306884766

Token 1257: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06379963457584381
    2. '
' → logprob: -3.3137996196746826
    3. 'import' → logprob: -4.438799858093262
    4. 'from' → logprob: -4.938799858093262
    5. '```' → logprob: -6.063799858093262
    6. '#' → logprob: -6.313799858093262
    7. 'visited' → logprob: -7.438799858093262
    8. '        
' → logprob: -7.563799858093262
    9. '``' → logprob: -8.438799858093262
    10. 'used' → logprob: -8.688799858093262

Token 1258: ' no' (ID: 860)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.32563215494155884
    2. '       ' → logprob: -2.200632095336914
    3. 'used' → logprob: -3.075632095336914
    4. '#' → logprob: -3.325632095336914
    5. ' #' → logprob: -3.950632095336914
    6. ' from' → logprob: -4.325632095336914
    7. 'import' → logprob: -4.450632095336914
    8. ' import' → logprob: -4.700632095336914
    9. 'from' → logprob: -4.950632095336914
    10. ' selected' → logprob: -5.200632095336914

Token 1259: ' overlapping' (ID: 90457)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.138067603111267
    2. ' h' → logprob: -1.888067603111267
    3. 'h' → logprob: -2.1380677223205566
    4. ' hero' → logprob: -2.2630677223205566
    5. '       ' → logprob: -3.3880677223205566
    6. 'w' → logprob: -3.3880677223205566
    7. ')' → logprob: -3.5130677223205566
    8. '   ' → logprob: -3.6380677223205566
    9. 'hero' → logprob: -3.6380677223205566
    10. 'two' → logprob: -4.138067722320557

Token 1260: ' heroes' (ID: 46540)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5552009344100952
    2. '_used' → logprob: -2.6802010536193848
    3. '#' → logprob: -2.8052010536193848
    4. '_' → logprob: -3.0552010536193848
    5. 'heroes' → logprob: -3.1802010536193848
    6. '   ' → logprob: -4.180201053619385
    7. '       ' → logprob: -4.430201053619385
    8. ',' → logprob: -4.430201053619385
    9. 'members' → logprob: -4.430201053619385
    10. 'tokens' → logprob: -4.555201053619385

Token 1261: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36033228039741516
    2. ',' → logprob: -1.6103322505950928
    3. ')' → logprob: -2.7353322505950928
    4. ',
' → logprob: -4.360332489013672
    5. ' ,' → logprob: -5.735332489013672
    6. '_' → logprob: -5.735332489013672
    7. '   ' → logprob: -5.860332489013672
    8. ' =' → logprob: -6.235332489013672
    9. ' and' → logprob: -6.485332489013672
    10. '
' → logprob: -6.485332489013672

Token 1262: ' warriors' (ID: 95724)
  Prédit: ' warriors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warriors' → logprob: -0.5317519903182983
    2. 'war' → logprob: -0.9067519903182983
    3. '       ' → logprob: -5.281752109527588
    4. 'w' → logprob: -6.281752109527588
    5. '   ' → logprob: -7.781752109527588
    6. 'wars' → logprob: -8.15675163269043
    7. 'cler' → logprob: -8.53175163269043
    8. '```' → logprob: -8.78175163269043
    9. 'wards' → logprob: -9.15675163269043
    10. ' w' → logprob: -9.28175163269043

Token 1263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062485191971063614
    2. ')' → logprob: -3.6874852180480957
    3. '       ' → logprob: -4.437485218048096
    4. ' ,' → logprob: -4.812485218048096
    5. ',
' → logprob: -4.812485218048096
    6. '_,' → logprob: -6.312485218048096
    7. '_' → logprob: -6.562485218048096
    8. '```' → logprob: -6.812485218048096
    9. '           ' → logprob: -8.187484741210938
    10. '<|end|>' → logprob: -8.187484741210938

Token 1264: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.08495959639549255
    2. ' cler' → logprob: -2.5849595069885254
    3. 'cl' → logprob: -5.334959506988525
    4. ',' → logprob: -7.959959506988525
    5. '```' → logprob: -8.334959983825684
    6. 'cles' → logprob: -8.834959983825684
    7. '#' → logprob: -9.334959983825684
    8. '       ' → logprob: -9.584959983825684
    9. '``' → logprob: -9.709959983825684
    10. 'clar' → logprob: -9.834959983825684

Token 1265: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.0004593862977344543
    2. 'ic' → logprob: -7.87545919418335
    3. '   ' → logprob: -11.125459671020508
    4. '           ' → logprob: -11.625459671020508
    5. 's' → logprob: -11.750459671020508
    6. 'cs' → logprob: -11.875459671020508
    7. '       ' → logprob: -12.250459671020508
    8. '```' → logprob: -12.500459671020508
    9. ' ' → logprob: -12.750459671020508
    10. '#' → logprob: -12.750459671020508

Token 1266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025836240965873003
    2. 's' → logprob: -6.8775835037231445
    3. '                       ' → logprob: -7.5025835037231445
    4. '```' → logprob: -8.252583503723145
    5. ',m' → logprob: -8.627583503723145
    6. ' ,' → logprob: -8.627583503723145
    7. ',
' → logprob: -9.252583503723145
    8. '                   ' → logprob: -9.377583503723145
    9. ',w' → logprob: -9.877583503723145
    10. '       ' → logprob: -10.002583503723145

Token 1267: ' m' (ID: 284)
  Prédit: 'mages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mages' → logprob: -0.011506709270179272
    2. 'm' → logprob: -4.5115065574646
    3. ' m' → logprob: -7.8865065574646
    4. '   ' → logprob: -9.886507034301758
    5. ',' → logprob: -11.386507034301758
    6. 'mage' → logprob: -12.011507034301758
    7. 'mates' → logprob: -12.386507034301758
    8. ' ' → logprob: -12.761507034301758
    9. '```' → logprob: -12.886507034301758
    10. '       ' → logprob: -13.636507034301758

Token 1268: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.00034177995985373855
    2. 'mages' → logprob: -8.000341415405273
    3. 'age' → logprob: -12.625341415405273
    4. 'm' → logprob: -14.250341415405273
    5. 'agents' → logprob: -14.625341415405273
    6. 's' → logprob: -14.625341415405273
    7. '#' → logprob: -15.000341415405273
    8. 'agers' → logprob: -15.000341415405273
    9. '   ' → logprob: -15.250341415405273
    10. 'a' → logprob: -16.625341415405273

Token 1269: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10399850457906723
    2. '
' → logprob: -3.7289984226226807
    3. '        
' → logprob: -3.7289984226226807
    4. ',' → logprob: -3.9789984226226807
    5. '.' → logprob: -4.22899866104126
    6. ':' → logprob: -4.72899866104126
    7. ')' → logprob: -6.60399866104126
    8. ',
' → logprob: -6.60399866104126
    9. '<|end|>' → logprob: -6.85399866104126
    10. ':
' → logprob: -6.85399866104126

Token 1270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03450717404484749
    2. '
' → logprob: -3.6595072746276855
    3. '        
' → logprob: -5.6595072746276855
    4. 'from' → logprob: -6.0345072746276855
    5. 'import' → logprob: -7.4095072746276855
    6. '```' → logprob: -7.9095072746276855
    7. '<|end|>' → logprob: -8.909506797790527
    8. ',' → logprob: -8.909506797790527
    9. '#' → logprob: -9.159506797790527
    10. 'indices' → logprob: -9.159506797790527

Token 1271: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03895926848053932
    2. '
' → logprob: -3.538959264755249
    3. 'from' → logprob: -5.413959503173828
    4. 'import' → logprob: -5.538959503173828
    5. '```' → logprob: -7.913959503173828
    6. '        
' → logprob: -8.163959503173828
    7. '#' (adapté à ' #') → logprob: -9.663959503173828
    8. '``' → logprob: -10.413959503173828
    9. 'visited' → logprob: -12.413959503173828
    10. '`' → logprob: -12.663959503173828

Token 1272: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4713421165943146
    2. 'import' → logprob: -1.3463420867919922
    3. '#' → logprob: -2.596342086791992
    4. '       ' → logprob: -3.471342086791992
    5. 'used' → logprob: -5.346342086791992
    6. 'visited' → logprob: -6.096342086791992
    7. 'part' → logprob: -7.471342086791992
    8. 'selected' → logprob: -7.596342086791992
    9. '```' → logprob: -7.596342086791992
    10. '
' → logprob: -8.346342086791992

Token 1273: ' do' (ID: 621)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1274: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6388132572174072
    2. '       ' → logprob: -1.5138132572174072
    3. ' an' → logprob: -1.7638132572174072
    4. '```' → logprob: -2.8888132572174072
    5. 'a' → logprob: -4.638813018798828
    6. 'import' → logprob: -5.013813018798828
    7. '``' → logprob: -6.138813018798828
    8. 'an' → logprob: -6.763813018798828
    9. '#' → logprob: -6.888813018798828
    10. ' the' → logprob: -7.263813018798828

Token 1275: ' greedy' (ID: 107110)
  Prédit: ' greedy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' greedy' → logprob: -0.7374552488327026
    2. '#' → logprob: -1.2374552488327026
    3. 'gre' → logprob: -2.487455368041992
    4. 'import' → logprob: -2.987455368041992
    5. 'def' → logprob: -3.987455368041992
    6. 'br' → logprob: -4.487455368041992
    7. '```' → logprob: -4.612455368041992
    8. 'from' → logprob: -4.612455368041992
    9. 'simple' → logprob: -5.112455368041992
    10. 'sort' → logprob: -5.237455368041992

Token 1276: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.04639256000518799
    2. 'appro' → logprob: -3.6713924407958984
    3. '       ' → logprob: -4.546392440795898
    4. '
' → logprob: -6.171392440795898
    5. ' for' → logprob: -6.546392440795898
    6. 'for' → logprob: -6.671392440795898
    7. '   ' → logprob: -6.921392440795898
    8. '        
' → logprob: -7.421392440795898
    9. '```' → logprob: -7.671392440795898
    10. 'sort' → logprob: -8.171392440795898

Token 1277: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004698903299868107
    2. ':' → logprob: -6.504698753356934
    3. '.sort' → logprob: -7.129698753356934
    4. ',' → logprob: -7.879698753356934
    5. '```' → logprob: -8.004698753356934
    6. 'sorted' → logprob: -8.379698753356934
    7. '_sorted' → logprob: -8.879698753356934
    8. ':
' → logprob: -8.879698753356934
    9. 'part' → logprob: -9.004698753356934
    10. '(part' → logprob: -9.004698753356934

Token 1278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016670884797349572
    2. 'part' → logprob: -6.626667022705078
    3. 'visited' → logprob: -9.626667022705078
    4. 'used' → logprob: -9.751667022705078
    5. 'selected' → logprob: -9.876667022705078
    6. 'available' → logprob: -10.001667022705078
    7. '```' → logprob: -10.376667022705078
    8. 'sorted' → logprob: -11.251667022705078
    9. 'party' → logprob: -11.376667022705078
    10. '
' → logprob: -11.501667022705078

Token 1279: ' #' (ID: 1069)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5183230042457581
    2. '       ' → logprob: -1.0183229446411133
    3. 'used' → logprob: -3.2683229446411133
    4. 'selected' → logprob: -6.018322944641113
    5. 'party' → logprob: -7.268322944641113
    6. ' used' → logprob: -7.643322944641113
    7. 'sorted' → logprob: -8.268322944641113
    8. '#' (adapté à ' #') → logprob: -8.768322944641113
    9. ' part' → logprob: -8.768322944641113
    10. '```' → logprob: -8.893322944641113

Token 1280: ' sort' (ID: 4506)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.3724989593029022
    2. 'part' → logprob: -1.2474989891052246
    3. ' used' → logprob: -4.497498989105225
    4. 'selected' → logprob: -5.372498989105225
    5. '#' → logprob: -5.872498989105225
    6. '   ' → logprob: -6.497498989105225
    7. '       ' → logprob: -7.122498989105225
    8. 'visited' → logprob: -7.747498989105225
    9. 'party' → logprob: -7.997498989105225
    10. 'chosen' → logprob: -8.247498512268066

Token 1281: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.011177267879247665
    2. '(part' → logprob: -4.511177062988281
    3. '_part' → logprob: -10.261177062988281
    4. 'key' → logprob: -10.511177062988281
    5. '       ' → logprob: -10.761177062988281
    6. '   ' → logprob: -11.636177062988281
    7. '(' → logprob: -11.761177062988281
    8. '(key' → logprob: -11.761177062988281
    9. 'sorted' → logprob: -12.511177062988281
    10. 'party' → logprob: -12.511177062988281

Token 1282: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7745082378387451
    2. '.sort' → logprob: -0.7745082378387451
    3. 'sorted' → logprob: -4.024508476257324
    4. '(sorted' → logprob: -4.024508476257324
    5. ' =' → logprob: -4.774508476257324
    6. '_sorted' → logprob: -4.899508476257324
    7. ')' → logprob: -5.024508476257324
    8. '       ' → logprob: -5.899508476257324
    9. '.' → logprob: -6.024508476257324
    10. '(part' → logprob: -6.399508476257324

Token 1283: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001871401909738779
    2. 'length' → logprob: -6.626871585845947
    3. 'lambda' → logprob: -8.751871109008789
    4. ' len' → logprob: -9.251871109008789
    5. 'the' → logprob: -9.876871109008789
    6. 'their' → logprob: -10.001871109008789
    7. 'number' → logprob: -10.001871109008789
    8. ')' → logprob: -10.251871109008789
    9. '(len' → logprob: -10.751871109008789
    10. 'size' → logprob: -10.751871109008789

Token 1284: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8346184492111206
    2. ']' → logprob: -1.0846184492111206
    3. ':' → logprob: -2.08461856842041
    4. '=' → logprob: -3.58461856842041
    5. '(' → logprob: -3.70961856842041
    6. '):' → logprob: -4.45961856842041
    7. ',' → logprob: -4.70961856842041
    8. '[' → logprob: -4.83461856842041
    9. '.' → logprob: -4.95961856842041
    10. '(sorted' → logprob: -5.45961856842041

Token 1285: ' advent' (ID: 13572)
  Prédit: 'members'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'members' → logprob: -1.1370657682418823
    2. 'participants' → logprob: -2.137065887451172
    3. 'parts' → logprob: -2.262065887451172
    4. 'None' → logprob: -2.512065887451172
    5. '```' → logprob: -2.762065887451172
    6. 'elements' → logprob: -3.012065887451172
    7. ')' → logprob: -3.387065887451172
    8. 'part' → logprob: -3.637065887451172
    9. ' None' → logprob: -3.637065887451172
    10. 'heroes' → logprob: -3.887065887451172

Token 1286: 'urers' (ID: 16003)
  Prédit: 'urers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urers' → logprob: -0.0024934951215982437
    2. 'urer' → logprob: -6.752493381500244
    3. 'r' → logprob: -7.002493381500244
    4. 'ur' → logprob: -8.377493858337402
    5. '       ' → logprob: -9.877493858337402
    6. '   ' → logprob: -9.877493858337402
    7. '        ' → logprob: -10.752493858337402
    8. 'ures' → logprob: -11.502493858337402
    9. '      ' → logprob: -11.752493858337402
    10. '```' → logprob: -11.877493858337402

Token 1287: ' involved' (ID: 9808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.017082691192627
    2. '=' → logprob: -2.142082691192627
    3. '       ' → logprob: -2.142082691192627
    4. ',' → logprob: -2.392082691192627
    5. 's' → logprob: -2.392082691192627
    6. '.sort' → logprob: -2.517082691192627
    7. '(sorted' → logprob: -3.892082691192627
    8. '_sorted' → logprob: -3.892082691192627
    9. ',
' → logprob: -4.267082691192627
    10. 'sorted' → logprob: -4.392082691192627

Token 1288: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.004483938217163
    2. '.sort' → logprob: -1.379483938217163
    3. ')' → logprob: -1.504483938217163
    4. ',' → logprob: -2.879483938217163
    5. '(sorted' → logprob: -3.879483938217163
    6. '=' → logprob: -4.004484176635742
    7. ',
' → logprob: -4.629484176635742
    8. 'sorted' → logprob: -4.754484176635742
    9. '```' → logprob: -5.129484176635742
    10. '_sorted' → logprob: -5.254484176635742

Token 1289: 'more' (ID: 8229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.904748260974884
    2. '   ' → logprob: -1.5297482013702393
    3. ')' → logprob: -1.9047482013702393
    4. 'len' → logprob: -2.5297482013702393
    5. '-' → logprob: -3.2797482013702393
    6. 'key' → logprob: -3.4047482013702393
    7. '```' → logprob: -3.9047482013702393
    8. '=' → logprob: -4.404748439788818
    9. '),' → logprob: -5.154748439788818
    10. ' ' → logprob: -5.154748439788818

Token 1290: ' advent' (ID: 13572)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49637776613235474
    2. '_' → logprob: -1.87137770652771
    3. ',' → logprob: -2.87137770652771
    4. '   ' → logprob: -3.74637770652771
    5. ' ' → logprob: -3.99637770652771
    6. '_parts' → logprob: -4.121377944946289
    7. '_part' → logprob: -4.371377944946289
    8. '_ad' → logprob: -4.496377944946289
    9. '```' → logprob: -4.621377944946289
    10. '-' → logprob: -4.746377944946289

Token 1291: 'urers' (ID: 16003)
  Prédit: 'urers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urers' → logprob: -0.10101407766342163
    2. 'aries' → logprob: -3.2260141372680664
    3. '   ' → logprob: -3.4760141372680664
    4. '           ' → logprob: -6.101014137268066
    5. 'ars' → logprob: -6.101014137268066
    6. ')' → logprob: -6.101014137268066
    7. 'agers' → logprob: -6.226014137268066
    8. 'ators' → logprob: -6.601014137268066
    9. '       ' → logprob: -6.601014137268066
    10. 'ancers' → logprob: -6.726014137268066

Token 1292: ' harder' (ID: 27008)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8609071373939514
    2. ')' → logprob: -1.8609070777893066
    3. '_in' → logprob: -2.1109070777893066
    4. '=' → logprob: -2.1109070777893066
    5. ',' → logprob: -2.9859070777893066
    6. ' involved' → logprob: -4.110907077789307
    7. 's' → logprob: -4.235907077789307
    8. '-' → logprob: -4.610907077789307
    9. '       ' → logprob: -4.735907077789307
    10. '>' → logprob: -4.860907077789307

Token 1293: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.587567150592804
    2. ' to' → logprob: -1.3375670909881592
    3. ')' → logprob: -2.462567090988159
    4. '_to' → logprob: -3.212567090988159
    5. '),' → logprob: -4.087567329406738
    6. ',' → logprob: -4.087567329406738
    7. '```' → logprob: -5.212567329406738
    8. '):
' → logprob: -5.337567329406738
    9. '-to' → logprob: -5.462567329406738
    10. 'selected' → logprob: -6.087567329406738

Token 1294: ' overlap' (ID: 56631)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.9488949179649353
    2. 'choose' → logprob: -1.44889497756958
    3. 'pick' → logprob: -1.44889497756958
    4. ' place' → logprob: -3.07389497756958
    5. 'select' → logprob: -3.69889497756958
    6. 'use' → logprob: -4.07389497756958
    7. 'include' → logprob: -4.57389497756958
    8. 'get' → logprob: -4.94889497756958
    9. 'pack' → logprob: -4.94889497756958
    10. 'assign' → logprob: -5.57389497756958

Token 1295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5416060090065002
    2. ',' → logprob: -1.0416059494018555
    3. '       ' → logprob: -4.4166059494018555
    4. '):
' → logprob: -4.4166059494018555
    5. '),' → logprob: -4.5416059494018555
    6. '=' → logprob: -5.4166059494018555
    7. ',
' → logprob: -5.4166059494018555
    8. '_sorted' → logprob: -5.5416059494018555
    9. '))' → logprob: -5.6666059494018555
    10. 'sorted' → logprob: -6.2916059494018555

Token 1296: '       ' (ID: 309)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.6821540594100952
    2. '       ' → logprob: -1.8071540594100952
    3. '=' → logprob: -2.1821541786193848
    4. ')' → logprob: -2.5571541786193848
    5. 'sorted' → logprob: -2.6821541786193848
    6. 'sort' → logprob: -4.057154178619385
    7. '```' → logprob: -4.057154178619385
    8. '_sorted' → logprob: -4.682154178619385
    9. '(sorted' → logprob: -5.182154178619385
    10. ',' → logprob: -5.307154178619385

Token 1297: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7586988806724548
    2. '.sort' → logprob: -1.1336989402770996
    3. '=' → logprob: -2.6336989402770996
    4. 'sorted' → logprob: -3.1336989402770996
    5. ')' → logprob: -3.2586989402770996
    6. 'sort' → logprob: -4.2586989402771
    7. '(sorted' → logprob: -4.2586989402771
    8. '_sorted' → logprob: -4.7586989402771
    9. ' =' → logprob: -5.5086989402771
    10. '```' → logprob: -5.5086989402771

Token 1298: ' then' (ID: 1815)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.4892493188381195
    2. '=' → logprob: -1.989249348640442
    3. '       ' → logprob: -1.989249348640442
    4. ' =' → logprob: -2.9892492294311523
    5. 'sort' → logprob: -3.4892492294311523
    6. 'sorted' → logprob: -3.9892492294311523
    7. ')' → logprob: -4.739249229431152
    8. '(sorted' → logprob: -6.739249229431152
    9. '```' → logprob: -7.239249229431152
    10. '_sorted' → logprob: -7.239249229431152

Token 1299: ' pick' (ID: 5230)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.032497819513082504
    2. '       ' → logprob: -3.7824978828430176
    3. 'sort' → logprob: -5.407497882843018
    4. ' parties' → logprob: -6.907497882843018
    5. 'for' → logprob: -7.032497882843018
    6. 'selected' → logprob: -7.407497882843018
    7. ' part' → logprob: -7.532497882843018
    8. ' sort' → logprob: -8.03249740600586
    9. '```' → logprob: -8.15749740600586
    10. '   ' → logprob: -8.40749740600586

Token 1300: ' parties' (ID: 13531)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20002275705337524
    2. ' parties' → logprob: -2.4500226974487305
    3. 'part' → logprob: -3.2000226974487305
    4. '   ' → logprob: -4.9500226974487305
    5. '```' → logprob: -5.2000226974487305
    6. ')' → logprob: -5.3250226974487305
    7. 'sort' → logprob: -5.4500226974487305
    8. ',' → logprob: -5.5750226974487305
    9. '=' → logprob: -5.7000226974487305
    10. 'sorted' → logprob: -5.8250226974487305

Token 1301: ' if' (ID: 538)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.027933519333600998
    2. '       ' → logprob: -4.402933597564697
    3. '_sorted' → logprob: -4.777933597564697
    4. '=' → logprob: -6.027933597564697
    5. '(sorted' → logprob: -6.652933597564697
    6. ' =' → logprob: -7.027933597564697
    7. '.' → logprob: -7.277933597564697
    8. 'sorted' → logprob: -7.777933597564697
    9. ':' → logprob: -8.027933120727539
    10. ')' → logprob: -8.402933120727539

Token 1302: ' no' (ID: 860)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.11670379340648651
    2. ' not' → logprob: -2.616703748703003
    3. 'all' → logprob: -3.866703748703003
    4. 'not' → logprob: -4.991703987121582
    5. ' their' → logprob: -5.616703987121582
    6. '   ' → logprob: -7.116703987121582
    7. ' they' → logprob: -7.241703987121582
    8. ' no' → logprob: -7.241703987121582
    9. 'their' → logprob: -7.241703987121582
    10. ' none' → logprob: -7.616703987121582

Token 1303: ' conflict' (ID: 21461)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -1.4742029905319214
    2. ' conflict' → logprob: -1.9742029905319214
    3. ' conflicts' → logprob: -2.099203109741211
    4. '_overlap' → logprob: -2.099203109741211
    5. 'over' → logprob: -2.474203109741211
    6. '_' → logprob: -2.849203109741211
    7. 'conf' → logprob: -3.224203109741211
    8. '   ' → logprob: -3.349203109741211
    9. ' ' → logprob: -3.474203109741211
    10. ' overlaps' → logprob: -4.349203109741211

Token 1304: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4188069701194763
    2. ':' → logprob: -1.293807029724121
    3. '):' → logprob: -3.668807029724121
    4. '_sorted' → logprob: -4.418807029724121
    5. ')' → logprob: -4.918807029724121
    6. '=' → logprob: -5.543807029724121
    7. ':
' → logprob: -5.918807029724121
    8. ',' → logprob: -6.043807029724121
    9. '):
' → logprob: -6.168807029724121
    10. '.sort' → logprob: -6.168807029724121

Token 1305: ' already' (ID: 4279)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.20009233057498932
    2. 'selected' → logprob: -2.450092315673828
    3. 'already' → logprob: -3.200092315673828
    4. 'chosen' → logprob: -3.200092315673828
    5. 'previous' → logprob: -4.950092315673828
    6. 'existing' → logprob: -5.950092315673828
    7. ' used' → logprob: -6.575092315673828
    8. 'picked' → logprob: -7.200092315673828
    9. ' selected' → logprob: -7.325092315673828
    10. ' chosen' → logprob: -7.825092315673828

Token 1306: ' chosen' (ID: 16180)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2993571162223816
    2. 'selected' → logprob: -1.7993571758270264
    3. 'chosen' → logprob: -2.5493571758270264
    4. 'picked' → logprob: -5.174356937408447
    5. '_used' → logprob: -5.424356937408447
    6. 'assigned' → logprob: -6.549356937408447
    7. 'occupied' → logprob: -6.799356937408447
    8. ' used' → logprob: -6.924356937408447
    9. 'taken' → logprob: -7.549356937408447
    10. ' chosen' → logprob: -7.924356937408447

Token 1307: ' parties' (ID: 13531)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.22717173397541046
    2. '_sorted' → logprob: -2.4771716594696045
    3. '       ' → logprob: -2.9771716594696045
    4. 'part' → logprob: -3.8521716594696045
    5. ' =' → logprob: -4.352171897888184
    6. '_parts' → logprob: -4.977171897888184
    7. 'sorted' → logprob: -5.727171897888184
    8. '=' → logprob: -5.852171897888184
    9. '(part' → logprob: -5.852171897888184
    10. 's' → logprob: -5.852171897888184

Token 1308: '

' (ID: 279)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.12508566677570343
    2. '       ' → logprob: -2.3750855922698975
    3. ')' → logprob: -4.500085830688477
    4. ' =' → logprob: -6.000085830688477
    5. '_sorted' → logprob: -6.000085830688477
    6. '=' → logprob: -6.250085830688477
    7. 's' → logprob: -6.625085830688477
    8. 'sorted' → logprob: -6.750085830688477
    9. 'sort' → logprob: -6.875085830688477
    10. ',' → logprob: -7.250085830688477

Token 1309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023151186760514975
    2. 'sort' → logprob: -7.752315044403076
    3. '
' → logprob: -7.877315044403076
    4. 'sorted' → logprob: -7.877315044403076
    5. '        
' → logprob: -8.502315521240234
    6. '.sort' → logprob: -8.502315521240234
    7. '```' → logprob: -8.752315521240234
    8. '   ' → logprob: -9.002315521240234
    9. 'part' → logprob: -9.502315521240234
    10. '_sorted' → logprob: -9.752315521240234

Token 1310: ' chosen' (ID: 16180)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.31392529606819153
    2. '       ' → logprob: -1.3139252662658691
    3. '   ' → logprob: -8.938925743103027
    4. ' parties' → logprob: -9.063925743103027
    5. 'sorted' → logprob: -9.188925743103027
    6. 'party' → logprob: -9.313925743103027
    7. '
' → logprob: -9.563925743103027
    8. ' part' → logprob: -10.188925743103027
    9. '```' → logprob: -10.313925743103027
    10. '        
' → logprob: -10.813925743103027

Token 1311: '_' (ID: 62)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.025782756507396698
    2. '_' → logprob: -3.900782823562622
    3. ' =' → logprob: -6.025782585144043
    4. '=' → logprob: -6.650782585144043
    5. '_parts' → logprob: -7.400782585144043
    6. '_party' → logprob: -7.650782585144043
    7. '_tokens' → logprob: -9.400782585144043
    8. '=[]' → logprob: -9.900782585144043
    9. '_par' → logprob: -10.025782585144043
    10. 's' → logprob: -10.025782585144043

Token 1312: 'heroes' (ID: 103812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.644765317440033
    2. 'part' → logprob: -0.894765317440033
    3. '_part' → logprob: -2.7697653770446777
    4. ' =' → logprob: -5.894765377044678
    5. '=[]' → logprob: -7.269765377044678
    6. '=[]
' → logprob: -8.64476490020752
    7. '=set' → logprob: -9.39476490020752
    8. 'Part' → logprob: -10.89476490020752
    9. '_party' → logprob: -11.01976490020752
    10. '=
' → logprob: -11.01976490020752

Token 1313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4294951558113098
    2. ' =' → logprob: -1.054495096206665
    3. '=set' → logprob: -7.804495334625244
    4. ',' → logprob: -8.304494857788086
    5. 's' → logprob: -9.929494857788086
    6. '_set' → logprob: -10.304494857788086
    7. ' ' → logprob: -11.179494857788086
    8. '   ' → logprob: -11.179494857788086
    9. '_' → logprob: -11.554494857788086
    10. ')' → logprob: -12.429494857788086

Token 1314: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.8624639324116288e-06
    2. ' set' → logprob: -13.250001907348633
    3. '=set' → logprob: -20.875001907348633
    4. '	set' → logprob: -21.000001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '(set' → logprob: -23.125001907348633
    7. ')set' → logprob: -24.625001907348633
    8. '{}' → logprob: -24.875001907348633
    9. '{' → logprob: -24.875001907348633
    10. '.set' → logprob: -25.125001907348633

Token 1315: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17996838688850403
    2. '()
' → logprob: -1.8049683570861816
    3. '()

' → logprob: -9.30496883392334
    4. ',' → logprob: -10.30496883392334
    5. '       ' → logprob: -10.30496883392334
    6. '(),' → logprob: -10.67996883392334
    7. '<|end|>' → logprob: -12.17996883392334
    8. '())' → logprob: -12.30496883392334
    9. '   ' → logprob: -12.42996883392334
    10. '()
' → logprob: -12.55496883392334

Token 1316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1650129109621048
    2. 'chosen' → logprob: -2.040012836456299
    3. ' chosen' → logprob: -4.415012836456299
    4. '```' → logprob: -4.790012836456299
    5. '   ' → logprob: -6.665012836456299
    6. ',' → logprob: -9.290013313293457
    7. '	ch' → logprob: -9.790013313293457
    8. '(ch' → logprob: -9.915013313293457
    9. 'selected' → logprob: -10.290013313293457
    10. '        ' → logprob: -10.540013313293457

Token 1317: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.045891597867012024
    2. ' chosen' → logprob: -3.670891523361206
    3. '       ' → logprob: -4.170891761779785
    4. '```' → logprob: -5.795891761779785
    5. '   ' → logprob: -7.045891761779785
    6. 'selected' → logprob: -10.545891761779785
    7. '``' → logprob: -11.545891761779785
    8. '           ' → logprob: -12.545891761779785
    9. 'ch' → logprob: -13.670891761779785
    10. '        ' → logprob: -13.795891761779785

Token 1318: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.010011408478021622
    2. '_' → logprob: -4.635011196136475
    3. '_part' → logprob: -9.135011672973633
    4. '_ad' → logprob: -9.760011672973633
    5. '_workers' → logprob: -10.885011672973633
    6. 'war' → logprob: -11.510011672973633
    7. '_parts' → logprob: -11.635011672973633
    8. '_
' → logprob: -11.885011672973633
    9. '_we' → logprob: -12.385011672973633
    10. '_wr' → logprob: -12.510011672973633

Token 1319: 'ar' (ID: 277)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1320: 'riors' (ID: 46128)
  Prédit: 'riors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riors' → logprob: -0.013930302113294601
    2. 'iors' → logprob: -4.513930320739746
    3. 'rior' → logprob: -5.888930320739746
    4. 'rors' → logprob: -9.763930320739746
    5. 'ior' → logprob: -11.388930320739746
    6. 'ri' → logprob: -11.388930320739746
    7. 'rios' → logprob: -11.888930320739746
    8. 'riers' → logprob: -12.013930320739746
    9. 'ror' → logprob: -12.388930320739746
    10. 's' → logprob: -12.888930320739746

Token 1321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021906346082687
    2. '=' → logprob: -2.3502190113067627
    3. ' ' → logprob: -13.100218772888184
    4. ',' → logprob: -13.100218772888184
    5. '<|end|>' → logprob: -13.100218772888184
    6. '=set' → logprob: -13.225218772888184
    7. '=
' → logprob: -13.475218772888184
    8. ' =
' → logprob: -13.600218772888184
    9. ')' → logprob: -14.475218772888184
    10. '   ' → logprob: -14.725218772888184

Token 1322: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0009115827269852161
    2. ' set' → logprob: -7.000911712646484
    3. '	set' → logprob: -16.625911712646484
    4. '=set' → logprob: -17.125911712646484
    5. '   ' → logprob: -17.625911712646484
    6. ' ' → logprob: -19.125911712646484
    7. '(set' → logprob: -19.625911712646484
    8. '{}' → logprob: -20.500911712646484
    9. '  ' → logprob: -21.375911712646484
    10. ')set' → logprob: -21.750911712646484

Token 1323: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31376275420188904
    2. '()
' → logprob: -1.3137627840042114
    3. '       ' → logprob: -7.688762664794922
    4. '()

' → logprob: -11.563762664794922
    5. ')' → logprob: -11.938762664794922
    6. '<|end|>' → logprob: -12.438762664794922
    7. '())' → logprob: -12.563762664794922
    8. '   ' → logprob: -12.563762664794922
    9. '(),
' → logprob: -12.688762664794922
    10. '()
' → logprob: -12.938762664794922

Token 1324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012946208007633686
    2. 'chosen' → logprob: -5.262946128845215
    3. '```' → logprob: -5.762946128845215
    4. '   ' → logprob: -6.387946128845215
    5. '        ' → logprob: -7.387946128845215
    6. '()' → logprob: -7.387946128845215
    7. ' chosen' → logprob: -7.637946128845215
    8. '           ' → logprob: -8.387946128845215
    9. '      ' → logprob: -9.262946128845215
    10. '``' → logprob: -9.387946128845215

Token 1325: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.012876064516603947
    2. '       ' → logprob: -4.887876033782959
    3. ' chosen' → logprob: -5.762876033782959
    4. '   ' → logprob: -6.262876033782959
    5. '```' → logprob: -8.762876510620117
    6. '        ' → logprob: -11.512876510620117
    7. '    ' → logprob: -12.137876510620117
    8. '  ' → logprob: -12.262876510620117
    9. '
' → logprob: -12.262876510620117
    10. ' ' → logprob: -12.387876510620117

Token 1326: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.10154127329587936
    2. '_' → logprob: -2.35154128074646
    3. 'cler' → logprob: -6.976541042327881
    4. '_w' → logprob: -9.601541519165039
    5. '_chars' → logprob: -9.601541519165039
    6. 'cl' → logprob: -10.351541519165039
    7. '_choices' → logprob: -10.476541519165039
    8. '_helpers' → logprob: -10.726541519165039
    9. '_
' → logprob: -10.726541519165039
    10. '\' → logprob: -10.726541519165039

Token 1327: 'er' (ID: 259)
  Prédit: 'osed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osed' → logprob: -0.7891047596931458
    2. 'e' → logprob: -1.414104700088501
    3. 'oved' → logprob: -3.164104700088501
    4. 'ead' → logprob: -3.414104700088501
    5. 'ar' → logprob: -3.539104700088501
    6. 'o' → logprob: -3.664104700088501
    7. 'ass' → logprob: -3.664104700088501
    8. 'ear' → logprob: -3.914104700088501
    9. 'er' → logprob: -4.16410493850708
    10. '```' → logprob: -4.28910493850708

Token 1328: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.00436294823884964
    2. 'ic' → logprob: -5.754363059997559
    3. 'ors' → logprob: -8.004363059997559
    4. '```' → logprob: -8.879363059997559
    5. 'ars' → logprob: -9.254363059997559
    6. 'os' → logprob: -9.629363059997559
    7. 'ocs' → logprob: -9.629363059997559
    8. 'oes' → logprob: -9.629363059997559
    9. 'ores' → logprob: -9.754363059997559
    10. 'icks' → logprob: -10.004363059997559

Token 1329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38721051812171936
    2. '=' → logprob: -1.137210488319397
    3. '=set' → logprob: -8.012210845947266
    4. '=
' → logprob: -13.137210845947266
    5. ')' → logprob: -13.387210845947266
    6. ',' → logprob: -14.012210845947266
    7. ' =
' → logprob: -14.512210845947266
    8. '```' → logprob: -14.637210845947266
    9. '<|end|>' → logprob: -14.762210845947266
    10. 'set' → logprob: -14.887210845947266

Token 1330: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00012368128227535635
    2. ' set' → logprob: -9.000123977661133
    3. '()' → logprob: -16.125123977661133
    4. '(set' → logprob: -16.625123977661133
    5. '   ' → logprob: -16.750123977661133
    6. '	set' → logprob: -17.500123977661133
    7. '=set' → logprob: -18.250123977661133
    8. ' ' → logprob: -19.625123977661133
    9. '       ' → logprob: -19.750123977661133
    10. '{}' → logprob: -20.125123977661133

Token 1331: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026829302310943604
    2. '```' → logprob: -4.776829242706299
    3. ' =' → logprob: -4.901829242706299
    4. '=set' → logprob: -5.651829242706299
    5. 'set' → logprob: -7.026829242706299
    6. '   ' → logprob: -7.151829242706299
    7. '_set' → logprob: -7.276829242706299
    8. ',' → logprob: -7.401829242706299
    9. '=' → logprob: -7.526829242706299
    10. ' set' → logprob: -7.526829242706299

Token 1332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4617840647697449
    2. '   ' → logprob: -1.7117841243743896
    3. 'chosen' → logprob: -1.7117841243743896
    4. '```' → logprob: -4.8367838859558105
    5. ' chosen' → logprob: -7.4617838859558105
    6. '``' → logprob: -9.336784362792969
    7. '           ' → logprob: -9.336784362792969
    8. '                       ' → logprob: -10.461784362792969
    9. '
' → logprob: -11.586784362792969
    10. 'selected' → logprob: -12.086784362792969

Token 1333: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.0013773757964372635
    2. ' chosen' → logprob: -6.751377582550049
    3. '       ' → logprob: -9.12637710571289
    4. '   ' → logprob: -9.62637710571289
    5. '```' → logprob: -10.50137710571289
    6. 'selected' → logprob: -13.12637710571289
    7. '``' → logprob: -13.25137710571289
    8. '           ' → logprob: -15.00137710571289
    9. ' ' → logprob: -15.37637710571289
    10. '{' → logprob: -15.62637710571289

Token 1334: '_m' (ID: 1285)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.20424383878707886
    2. '_m' → logprob: -1.7042438983917236
    3. '_' → logprob: -5.9542436599731445
    4. '_players' → logprob: -9.704243659973145
    5. '_set' → logprob: -10.079243659973145
    6. '_sets' → logprob: -10.329243659973145
    7. 's' → logprob: -11.079243659973145
    8. 'mages' → logprob: -11.454243659973145
    9. '_
' → logprob: -11.954243659973145
    10. '_members' → logprob: -12.329243659973145

Token 1335: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.00395539402961731
    2. 'sets' → logprob: -6.378955364227295
    3. 'embers' → logprob: -7.503955364227295
    4. 'set' → logprob: -7.628955364227295
    5. 'mages' → logprob: -8.003955841064453
    6. 'part' → logprob: -8.253955841064453
    7. '_part' → logprob: -8.378955841064453
    8. '_set' → logprob: -9.503955841064453
    9. '_sets' → logprob: -9.503955841064453
    10. 'en' → logprob: -9.753955841064453

Token 1336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519647777080536
    2. '=' → logprob: -1.501964807510376
    3. '=set' → logprob: -10.251964569091797
    4. ' ' → logprob: -16.001964569091797
    5. 'set' → logprob: -16.501964569091797
    6. ' =
' → logprob: -16.626964569091797
    7. ')' → logprob: -16.751964569091797
    8. '=
' → logprob: -17.626964569091797
    9. '<|end|>' → logprob: -17.751964569091797
    10. '.add' → logprob: -17.751964569091797

Token 1337: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.014163628220558167
    2. ' set' → logprob: -4.264163494110107
    3. '=set' → logprob: -17.014163970947266
    4. '	set' → logprob: -17.264163970947266
    5. '   ' → logprob: -17.764163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '(set' → logprob: -18.139163970947266
    8. '  ' → logprob: -21.014163970947266
    9. ')set' → logprob: -21.014163970947266
    10. '       ' → logprob: -21.389163970947266

Token 1338: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1011091098189354
    2. ' =' → logprob: -3.101109027862549
    3. '   ' → logprob: -4.476109027862549
    4. '
' → logprob: -4.726109027862549
    5. '()
' → logprob: -4.851109027862549
    6. ':
' → logprob: -5.101109027862549
    7. '(
' → logprob: -5.476109027862549
    8. '```' → logprob: -5.851109027862549
    9. '        
' → logprob: -6.476109027862549
    10. '=' → logprob: -6.601109027862549

Token 1339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018320027738809586
    2. 'for' → logprob: -4.018320083618164
    3. '
' → logprob: -9.393320083618164
    4. '   ' → logprob: -10.518320083618164
    5. ' for' → logprob: -10.518320083618164
    6. '```' → logprob: -10.518320083618164
    7. '        
' → logprob: -13.268320083618164
    8. '           ' → logprob: -13.268320083618164
    9. 'sorted' → logprob: -13.643320083618164
    10. 'part' → logprob: -15.643320083618164

Token 1340: ' max' (ID: 2999)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5909980535507202
    2. 'for' → logprob: -0.8409980535507202
    3. '       ' → logprob: -4.21599817276001
    4. 'party' → logprob: -9.215997695922852
    5. '```' → logprob: -10.090997695922852
    6. '   ' → logprob: -11.590997695922852
    7. 'parts' → logprob: -11.715997695922852
    8. '
' → logprob: -12.090997695922852
    9. 'sorted' → logprob: -12.090997695922852
    10. '#' → logprob: -12.590997695922852

Token 1341: '_count' (ID: 7536)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0006529859383590519
    2. '_count' → logprob: -7.50065279006958
    3. '_party' → logprob: -10.250653266906738
    4. '_parts' → logprob: -11.125653266906738
    5. 'Part' → logprob: -11.250653266906738
    6. '_' → logprob: -11.750653266906738
    7. 'part' → logprob: -11.750653266906738
    8. '_possible' → logprob: -11.750653266906738
    9. 'count' → logprob: -12.500653266906738
    10. '_candidates' → logprob: -12.875653266906738

Token 1342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16989246010780334
    2. '=' → logprob: -1.919892430305481
    3. ' +=' → logprob: -4.794892311096191
    4. '+=' → logprob: -7.294892311096191
    5. ')' → logprob: -8.669892311096191
    6. '   ' → logprob: -9.169892311096191
    7. '<|end|>' → logprob: -9.294892311096191
    8. '       ' → logprob: -9.669892311096191
    9. '_' → logprob: -9.669892311096191
    10. ',' → logprob: -9.919892311096191

Token 1343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '       ' → logprob: -15.500066757202148
    4. '   ' → logprob: -16.50006675720215
    5. 'len' → logprob: -17.00006675720215
    6. '```' → logprob: -17.12506675720215
    7. '000' → logprob: -18.87506675720215
    8. ' ' → logprob: -19.12506675720215
    9. 'max' → logprob: -19.62506675720215
    10. '           ' → logprob: -19.75006675720215

Token 1344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'len' → logprob: -15.62500286102295
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -19.125001907348633
    6. '000' → logprob: -20.000001907348633
    7. '       ' → logprob: -20.125001907348633
    8. '
' → logprob: -20.500001907348633
    9. 'max' → logprob: -20.625001907348633
    10. 'int' → logprob: -20.750001907348633

Token 1345: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005816095042973757
    2. '
' → logprob: -5.2558159828186035
    3. 'for' → logprob: -8.380816459655762
    4. '        
' → logprob: -9.005816459655762
    5. ' for' → logprob: -9.380816459655762
    6. '   ' → logprob: -9.630816459655762
    7. ',' → logprob: -10.380816459655762
    8. '<|end|>' → logprob: -11.380816459655762
    9. '  
' → logprob: -12.130816459655762
    10. '```' → logprob: -12.130816459655762

Token 1346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07615616172552109
    2. 'for' → logprob: -2.7011561393737793
    3. ' for' → logprob: -5.201156139373779
    4. '   ' → logprob: -7.826156139373779
    5. '
' → logprob: -8.201156616210938
    6. '```' → logprob: -12.826156616210938
    7. '           ' → logprob: -12.951156616210938
    8. ' ' → logprob: -13.326156616210938
    9. '        
' → logprob: -13.326156616210938
    10. 'part' → logprob: -13.451156616210938

Token 1347: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1809130162000656
    2. 'for' → logprob: -1.930912971496582
    3. 'part' → logprob: -3.930912971496582
    4. 'from' → logprob: -7.555912971496582
    5. '
' → logprob: -9.555912971496582
    6. 'import' → logprob: -9.805912971496582
    7. '```' → logprob: -9.930912971496582
    8. 'party' → logprob: -10.055912971496582
    9. '   ' → logprob: -10.430912971496582
    10. 'parts' → logprob: -10.555912971496582

Token 1348: ' Sort' (ID: 25945)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13635168969631195
    2. 'part' → logprob: -2.2613515853881836
    3. '       ' → logprob: -4.386351585388184
    4. 'from' → logprob: -4.636351585388184
    5. 'import' → logprob: -6.886351585388184
    6. 'party' → logprob: -9.886351585388184
    7. '   ' → logprob: -11.386351585388184
    8. '```' → logprob: -11.636351585388184
    9. '#' → logprob: -11.886351585388184
    10. '``' → logprob: -12.886351585388184

Token 1349: ' by' (ID: 656)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.006861124187707901
    2. '(part' → logprob: -5.006861209869385
    3. '       ' → logprob: -9.256860733032227
    4. '_part' → logprob: -10.256860733032227
    5. 'sorted' → logprob: -12.506860733032227
    6. 'party' → logprob: -12.631860733032227
    7. '   ' → logprob: -12.756860733032227
    8. 'Part' → logprob: -13.631860733032227
    9. 'key' → logprob: -14.006860733032227
    10. '(sorted' → logprob: -14.381860733032227

Token 1350: ' number' (ID: 2086)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.850831925868988
    2. 'lambda' → logprob: -0.850831925868988
    3. 'len' → logprob: -2.100831985473633
    4. '-' → logprob: -4.475831985473633
    5. ' -' → logprob: -4.975831985473633
    6. '-s' → logprob: -6.475831985473633
    7. '-(' → logprob: -6.725831985473633
    8. '   ' → logprob: -7.225831985473633
    9. ' lambda' → logprob: -7.350831985473633
    10. '(lambda' → logprob: -7.600831985473633

Token 1351: ' of' (ID: 328)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.9567999243736267
    2. '(
' → logprob: -1.5817999839782715
    3. '=' → logprob: -1.7067999839782715
    4. '(' → logprob: -2.3317999839782715
    5. 'sorted' → logprob: -2.9567999839782715
    6. '(part' → logprob: -3.8317999839782715
    7. 'of' → logprob: -4.4567999839782715
    8. '(len' → logprob: -4.4567999839782715
    9. '       ' → logprob: -5.2067999839782715
    10. '(parts' → logprob: -5.3317999839782715

Token 1352: ' roles' (ID: 18834)
  Prédit: ' advent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' advent' → logprob: -0.7426528930664062
    2. 'ad' → logprob: -1.8676528930664062
    3. '(' → logprob: -1.9926528930664062
    4. '```' → logprob: -3.6176528930664062
    5. 'participants' → logprob: -3.7426528930664062
    6. 'part' → logprob: -3.9926528930664062
    7. ')' → logprob: -4.117652893066406
    8. '   ' → logprob: -4.242652893066406
    9. ',' → logprob: -4.367652893066406
    10. ' ' → logprob: -4.492652893066406

Token 1353: ' used' (ID: 2061)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13337184488773346
    2. ',' → logprob: -2.6333718299865723
    3. 'key' → logprob: -4.633371829986572
    4. '(key' → logprob: -4.758371829986572
    5. ' =' → logprob: -4.883371829986572
    6. '       ' → logprob: -5.633371829986572
    7. '(' → logprob: -5.758371829986572
    8. '   ' → logprob: -5.883371829986572
    9. '(part' → logprob: -6.258371829986572
    10. 'in' → logprob: -6.258371829986572

Token 1354: ' descending' (ID: 89489)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.44961413741111755
    2. ',' → logprob: -2.0746140480041504
    3. 'part' → logprob: -2.8246140480041504
    4. '       ' → logprob: -2.9496140480041504
    5. '(key' → logprob: -3.4496140480041504
    6. 'key' → logprob: -3.6996140480041504
    7. '=' → logprob: -3.6996140480041504
    8. '_part' → logprob: -4.57461404800415
    9. ' =' → logprob: -4.82461404800415
    10. '(sorted' → logprob: -4.82461404800415

Token 1355: ' to' (ID: 316)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.4581497609615326
    2. '       ' → logprob: -1.833149790763855
    3. ',' → logprob: -2.2081496715545654
    4. 'part' → logprob: -3.0831496715545654
    5. '(sorted' → logprob: -3.9581496715545654
    6. '(key' → logprob: -4.8331499099731445
    7. 'sorted' → logprob: -5.2081499099731445
    8. 'key' → logprob: -5.3331499099731445
    9. '=' → logprob: -5.4581499099731445
    10. '(' → logprob: -6.2081499099731445

Token 1356: ' pick' (ID: 5230)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4819190800189972
    2. ' key' → logprob: -1.3569190502166748
    3. 'lambda' → logprob: -2.731919050216675
    4. 'reverse' → logprob: -3.481919050216675
    5. ' lambda' → logprob: -4.481919288635254
    6. 'len' → logprob: -4.731919288635254
    7. ' reverse' → logprob: -4.981919288635254
    8. ' len' → logprob: -7.481919288635254
    9. '   ' → logprob: -7.981919288635254
    10. '=lambda' → logprob: -8.106919288635254

Token 1357: ' bigger' (ID: 17791)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2704557478427887
    2. '   ' → logprob: -2.645455837249756
    3. 'lambda' → logprob: -3.020455837249756
    4. '(key' → logprob: -3.270455837249756
    5. ' key' → logprob: -3.520455837249756
    6. 'reverse' → logprob: -4.270455837249756
    7. '       ' → logprob: -4.520455837249756
    8. '(lambda' → logprob: -4.645455837249756
    9. '(
' → logprob: -5.770455837249756
    10. ',' → logprob: -6.145455837249756

Token 1358: ' parties' (ID: 13531)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.1177666187286377
    2. 'part' → logprob: -1.1177666187286377
    3. '(part' → logprob: -1.4927666187286377
    4. '(' → logprob: -2.8677666187286377
    5. '_part' → logprob: -2.9927666187286377
    6. '()' → logprob: -5.992766380310059
    7. '-part' → logprob: -6.617766380310059
    8. ',' → logprob: -6.992766380310059
    9. '(parts' → logprob: -6.992766380310059
    10. '-' → logprob: -7.117766380310059

Token 1359: ' first' (ID: 1577)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.6432827115058899
    2. '       ' → logprob: -1.7682826519012451
    3. ',' → logprob: -1.8932826519012451
    4. 'part' → logprob: -2.643282651901245
    5. '(sorted' → logprob: -3.018282651901245
    6. 'sorted' → logprob: -4.268282890319824
    7. 'key' → logprob: -5.518282890319824
    8. ',
' → logprob: -5.893282890319824
    9. '(
' → logprob: -6.018282890319824
    10. '(key' → logprob: -6.143282890319824

Token 1360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6436440944671631
    2. ',' → logprob: -0.8936440944671631
    3. 'part' → logprob: -3.768644094467163
    4. '(part' → logprob: -4.268644332885742
    5. 'sorted' → logprob: -4.393644332885742
    6. '(sorted' → logprob: -5.143644332885742
    7. ',
' → logprob: -5.393644332885742
    8. ')' → logprob: -5.643644332885742
    9. '.sort' → logprob: -8.143644332885742
    10. ')
' → logprob: -8.518644332885742

Token 1361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30438748002052307
    2. ',' → logprob: -1.9293874502182007
    3. 'part' → logprob: -2.4293875694274902
    4. '(part' → logprob: -4.17938756942749
    5. 'sorted' → logprob: -4.80438756942749
    6. '(sorted' → logprob: -6.17938756942749
    7. ',
' → logprob: -6.80438756942749
    8. ')' → logprob: -7.30438756942749
    9. '```' → logprob: -8.179387092590332
    10. '(' → logprob: -8.429387092590332

Token 1362: ' def' (ID: 1056)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6373547911643982
    2. '       ' → logprob: -1.012354850769043
    3. 'sorted' → logprob: -2.262354850769043
    4. ')' → logprob: -6.262354850769043
    5. 'sort' → logprob: -7.887354850769043
    6. 'parts' → logprob: -8.012354850769043
    7. '   ' → logprob: -8.137354850769043
    8. ' sorted' → logprob: -8.637354850769043
    9. '```' → logprob: -8.887354850769043
    10. 'key' → logprob: -9.012354850769043

Token 1363: ' count' (ID: 3605)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.7076207399368286
    2. 'key' → logprob: -1.2076207399368286
    3. 'party' → logprob: -2.332620620727539
    4. 'len' → logprob: -3.457620620727539
    5. '_key' → logprob: -3.707620620727539
    6. ' party' → logprob: -4.207620620727539
    7. 'count' → logprob: -4.332620620727539
    8. 'num' → logprob: -5.332620620727539
    9. 'lambda' → logprob: -5.332620620727539
    10. '_party' → logprob: -5.707620620727539

Token 1364: '_roles' (ID: 107720)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.02552330493927
    2. '_roles' → logprob: -1.02552330493927
    3. '_tokens' → logprob: -2.0255231857299805
    4. '(
' → logprob: -2.7755231857299805
    5. '_' → logprob: -3.9005231857299805
    6. '_used' → logprob: -4.1505231857299805
    7. '_parts' → logprob: -4.1505231857299805
    8. 'roles' → logprob: -4.7755231857299805
    9. 'tokens' → logprob: -5.2755231857299805
    10. '   ' → logprob: -5.7755231857299805

Token 1365: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2679968774318695
    2. '(' → logprob: -1.892996907234192
    3. '(part' → logprob: -3.2679967880249023
    4. '(role' → logprob: -3.2679967880249023
    5. '(
' → logprob: -6.142996788024902
    6. '(s' → logprob: -6.517996788024902
    7. '(parts' → logprob: -6.767996788024902
    8. '(h' → logprob: -7.267996788024902
    9. '((' → logprob: -7.517996788024902
    10. '(token' → logprob: -7.892996788024902

Token 1366: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25394412875175476
    2. 'art' → logprob: -2.253944158554077
    3. '):' → logprob: -2.503944158554077
    4. ' =' → logprob: -4.628943920135498
    5. '():
' → logprob: -5.503943920135498
    6. 'arty' → logprob: -5.503943920135498
    7. ':
' → logprob: -5.753943920135498
    8. '(' → logprob: -5.753943920135498
    9. 'ar' → logprob: -5.878943920135498
    10. '(p' → logprob: -6.003943920135498

Token 1367: '           ' (ID: 352)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.22544372081756592
    2. '(' → logprob: -2.3504438400268555
    3. '(
' → logprob: -2.6004438400268555
    4. '(h' → logprob: -3.9754438400268555
    5. '       ' → logprob: -5.8504438400268555
    6. '   ' → logprob: -6.2254438400268555
    7. '(role' → logprob: -6.6004438400268555
    8. ' (' → logprob: -7.1004438400268555
    9. '(parts' → logprob: -7.2254438400268555
    10. '           ' → logprob: -7.3504438400268555

Token 1368: ' return' (ID: 622)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2585575580596924
    2. '(p' → logprob: -2.0085575580596924
    3. ' p' → logprob: -2.7585575580596924
    4. '(' → logprob: -4.633557319641113
    5. 'return' (adapté à ' return') → logprob: -5.383557319641113
    6. '   ' → logprob: -5.508557319641113
    7. ' (' → logprob: -5.883557319641113
    8. '(
' → logprob: -5.883557319641113
    9. ' return' → logprob: -6.758557319641113
    10. 'len' → logprob: -7.008557319641113

Token 1369: ' sum' (ID: 4215)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7591164708137512
    2. '4' → logprob: -2.0091164112091064
    3. ' (' → logprob: -2.2591164112091064
    4. '(' → logprob: -2.2591164112091064
    5. '1' → logprob: -2.3841164112091064
    6. 'sum' → logprob: -3.7591164112091064
    7. '(sum' → logprob: -4.2591166496276855
    8. '(len' → logprob: -4.2591166496276855
    9. ' ' → logprob: -4.3841166496276855
    10. ' sum' → logprob: -4.6341166496276855

Token 1370: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03799707069993019
    2. '([' → logprob: -3.787997007369995
    3. '(x' → logprob: -4.662997245788574
    4. '(p' → logprob: -6.162997245788574
    5. '((' → logprob: -6.787997245788574
    6. '(role' → logprob: -7.037997245788574
    7. '(c' → logprob: -7.662997245788574
    8. '([(' → logprob: -8.537997245788574
    9. '(t' → logprob: -8.787997245788574
    10. '([
' → logprob: -9.037997245788574

Token 1371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12090856581926346
    2. 'p' → logprob: -2.495908498764038
    3. 'x' → logprob: -3.495908498764038
    4. '(' → logprob: -7.620908737182617
    5. 'role' → logprob: -8.995908737182617
    6. 'part' → logprob: -9.120908737182617
    7. 'c' → logprob: -9.120908737182617
    8. '[' → logprob: -9.620908737182617
    9. '(p' → logprob: -10.120908737182617
    10. 'party' → logprob: -10.245908737182617

Token 1372: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24004004895687103
    2. '(p' → logprob: -1.6150400638580322
    3. '((' → logprob: -5.365039825439453
    4. '(x' → logprob: -5.490039825439453
    5. '(role' → logprob: -6.240039825439453
    6. '(
' → logprob: -6.490039825439453
    7. '([' → logprob: -7.615039825439453
    8. '(i' → logprob: -8.115039825439453
    9. '1' → logprob: -8.490039825439453
    10. '(c' → logprob: -8.740039825439453

Token 1373: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1073610931634903
    2. 'p' → logprob: -2.357361078262329
    3. 'role' → logprob: -5.607361316680908
    4. 'r' → logprob: -5.732361316680908
    5. 'v' → logprob: -9.35736083984375
    6. 'i' → logprob: -10.23236083984375
    7. 'e' → logprob: -10.60736083984375
    8. 'part' → logprob: -11.10736083984375
    9. 'token' → logprob: -11.48236083984375
    10. ' x' → logprob: -11.98236083984375

Token 1374: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.474509596824646
    2. 'is' → logprob: -0.974509596824646
    3. '!=' → logprob: -8.099509239196777
    4. '[' → logprob: -10.849509239196777
    5. 'in' → logprob: -10.974509239196777
    6. ' !=' → logprob: -11.099509239196777
    7. ' ' → logprob: -11.099509239196777
    8. '   ' → logprob: -11.599509239196777
    9. 'else' → logprob: -11.724509239196777
    10. 'x' → logprob: -11.974509239196777

Token 1375: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.012533076107501984
    2. ' not' → logprob: -4.387533187866211
    3. 'x' → logprob: -11.762533187866211
    4. 'None' → logprob: -12.012533187866211
    5. 'n' → logprob: -12.887533187866211
    6. '   ' → logprob: -13.387533187866211
    7. 'p' → logprob: -14.012533187866211
    8. '
' → logprob: -14.137533187866211
    9. 'Not' → logprob: -14.137533187866211
    10. '	not' → logprob: -14.387533187866211

Token 1376: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.009545107372105122
    2. 'None' → logprob: -4.88454532623291
    3. ' not' → logprob: -6.25954532623291
    4. 'Not' → logprob: -11.38454532623291
    5. '   ' → logprob: -12.38454532623291
    6. 'none' → logprob: -12.75954532623291
    7. '...' → logprob: -13.75954532623291
    8. ' None' → logprob: -13.75954532623291
    9. '```' → logprob: -14.00954532623291
    10. '``' → logprob: -14.38454532623291

Token 1377: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5763998627662659
    2. 'else' → logprob: -0.8263998627662659
    3. '   ' → logprob: -9.326399803161621
    4. 'and' → logprob: -9.326399803161621
    5. ' ' → logprob: -10.201399803161621
    6. '           ' → logprob: -10.451399803161621
    7. ' and' → logprob: -10.701399803161621
    8. '          ' → logprob: -10.701399803161621
    9. '            ' → logprob: -11.201399803161621
    10. '        ' → logprob: -11.326399803161621

Token 1378: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005948548787273467
    2. ' ' → logprob: -7.6255950927734375
    3. 'True' → logprob: -9.375595092773438
    4. '0' → logprob: -11.500595092773438
    5. ' True' → logprob: -11.750595092773438
    6. '   ' → logprob: -13.000595092773438
    7. '+' → logprob: -13.875595092773438
    8. '```' → logprob: -15.875595092773438
    9. '
' → logprob: -16.000595092773438
    10. '  ' → logprob: -16.375595092773438

Token 1379: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06995822489261627
    2. '0' → logprob: -2.694958209991455
    3. ' ' → logprob: -10.944958686828613
    4. '   ' → logprob: -12.569958686828613
    5. '-' → logprob: -15.694958686828613
    6. '  ' → logprob: -16.069957733154297
    7. '
' → logprob: -16.194957733154297
    8. '       ' → logprob: -16.569957733154297
    9. '+' → logprob: -16.694957733154297
    10. '           ' → logprob: -16.944957733154297

Token 1380: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1274980902671814
    2. 'for' → logprob: -2.127498149871826
    3. ' else' → logprob: -8.377497673034668
    4. ')' → logprob: -9.752497673034668
    5. 'else' → logprob: -9.752497673034668
    6. ',' → logprob: -9.752497673034668
    7. '           ' → logprob: -11.002497673034668
    8. '                   ' → logprob: -11.127497673034668
    9. '                       ' → logprob: -11.252497673034668
    10. '               ' → logprob: -11.252497673034668

Token 1381: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003207181114703417
    2. 'x' → logprob: -5.753207206726074
    3. '[p' → logprob: -11.503207206726074
    4. '[' → logprob: -11.628207206726074
    5. '(p' → logprob: -12.003207206726074
    6. ' p' → logprob: -12.753207206726074
    7. '[x' → logprob: -14.253207206726074
    8. '(x' → logprob: -14.253207206726074
    9. '(' → logprob: -16.628206253051758
    10. '   ' → logprob: -17.253206253051758

Token 1382: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0023245064076036215
    2. 'x' → logprob: -6.25232458114624
    3. ' p' → logprob: -8.002324104309082
    4. '(p' → logprob: -10.377324104309082
    5. 'in' → logprob: -12.002324104309082
    6. '[' → logprob: -12.002324104309082
    7. '(' → logprob: -12.252324104309082
    8. ' in' → logprob: -12.627324104309082
    9. '(x' → logprob: -12.752324104309082
    10. ' (' → logprob: -13.127324104309082

Token 1383: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.007317567011341e-05
    2. '[p' → logprob: -10.125089645385742
    3. '(p' → logprob: -10.500089645385742
    4. '[' → logprob: -10.875089645385742
    5. ' p' → logprob: -13.000089645385742
    6. '   ' → logprob: -14.500089645385742
    7. '(' → logprob: -15.375089645385742
    8. '
' → logprob: -15.625089645385742
    9. '[
' → logprob: -16.750089645385742
    10. 'list' → logprob: -16.750089645385742

Token 1384: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00023929782037157565
    2. '       ' → logprob: -9.375239372253418
    3. '])
' → logprob: -9.875239372253418
    4. ')' → logprob: -10.625239372253418
    5. ' ])' → logprob: -10.875239372253418
    6. '   ' → logprob: -11.000239372253418
    7. ')])' → logprob: -11.750239372253418
    8. '[' → logprob: -11.750239372253418
    9. '])

' → logprob: -11.875239372253418
    10. '])+' → logprob: -12.000239372253418

Token 1385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02797212265431881
    2. '
' → logprob: -4.777972221374512
    3. ':' → logprob: -5.652972221374512
    4. ')' → logprob: -5.777972221374512
    5. '   ' → logprob: -5.902972221374512
    6. '        
' → logprob: -5.902972221374512
    7. ':
' → logprob: -6.277972221374512
    8. ')
' → logprob: -7.152972221374512
    9. '(
' → logprob: -7.277972221374512
    10. '):
' → logprob: -7.402972221374512

Token 1386: ' parties' (ID: 13531)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6345539093017578
    2. 'part' → logprob: -0.7595539093017578
    3. '   ' → logprob: -6.384553909301758
    4. 'parts' → logprob: -9.759553909301758
    5. '
' → logprob: -10.134553909301758
    6. '```' → logprob: -10.134553909301758
    7. 'sorted' → logprob: -10.134553909301758
    8. 'party' → logprob: -10.259553909301758
    9. 'for' → logprob: -10.634553909301758
    10. '           ' → logprob: -12.134553909301758

Token 1387: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -8.53050296427682e-05
    2. '.' → logprob: -9.62508487701416
    3. 'sort' → logprob: -11.37508487701416
    4. '_sorted' → logprob: -12.75008487701416
    5. ').' → logprob: -13.50008487701416
    6. '=' → logprob: -13.50008487701416
    7. ')' → logprob: -14.62508487701416
    8. 'sorted' → logprob: -14.87508487701416
    9. ' =' → logprob: -15.12508487701416
    10. ' .' → logprob: -15.62508487701416

Token 1388: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.10124032944440842
    2. '=' → logprob: -2.351240396499634
    3. ' =' → logprob: -6.976240158081055
    4. '.' → logprob: -10.726240158081055
    5. 'sorted' → logprob: -10.976240158081055
    6. '.sorted' → logprob: -11.101240158081055
    7. '(sorted' → logprob: -11.351240158081055
    8. 'sort' → logprob: -11.601240158081055
    9. '_sorted' → logprob: -12.101240158081055
    10. '(sort' → logprob: -12.226240158081055

Token 1389: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -3.054500666621607e-06
    2. ' sorted' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. '(sorted' → logprob: -18.625003814697266
    5. '       ' → logprob: -20.000003814697266
    6. '           ' → logprob: -21.875003814697266
    7. '.sorted' → logprob: -22.000003814697266
    8. '```' → logprob: -23.750003814697266
    9. '[' → logprob: -24.000003814697266
    10. 'sort' → logprob: -24.125003814697266

Token 1390: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -1.5451681974809617e-05
    2. 'part' → logprob: -11.125015258789062
    3. '(' → logprob: -14.875015258789062
    4. '(p' → logprob: -15.750015258789062
    5. '(parts' → logprob: -15.750015258789062
    6. '(
' → logprob: -17.500015258789062
    7. '(port' → logprob: -19.375015258789062
    8. ' (' → logprob: -19.500015258789062
    9. '((' → logprob: -19.625015258789062
    10. '	part' → logprob: -19.625015258789062

Token 1391: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.005088002886623144
    2. '(part' → logprob: -5.630087852478027
    3. 'art' → logprob: -7.380087852478027
    4. 's' → logprob: -8.630087852478027
    5. '[' → logprob: -8.755087852478027
    6. '(' → logprob: -9.130087852478027
    7. 'ties' → logprob: -9.755087852478027
    8. 'aires' → logprob: -9.755087852478027
    9. 'aties' → logprob: -9.880087852478027
    10. 'aries' → logprob: -10.130087852478027

Token 1392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11178304255008698
    2. '(key' → logprob: -2.861783027648926
    3. ',key' → logprob: -3.111783027648926
    4. 'key' → logprob: -5.986783027648926
    5. '(reverse' → logprob: -7.111783027648926
    6. ',
' → logprob: -8.236783027648926
    7. '       ' → logprob: -9.111783027648926
    8. 'reverse' → logprob: -9.611783027648926
    9. '(part' → logprob: -9.736783027648926
    10. '   ' → logprob: -9.736783027648926

Token 1393: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005252491682767868
    2. ' key' → logprob: -5.255252361297607
    3. 'reverse' → logprob: -11.255252838134766
    4. '   ' → logprob: -12.255252838134766
    5. '       ' → logprob: -14.880252838134766
    6. '(key' → logprob: -15.130252838134766
    7. '	key' → logprob: -16.505252838134766
    8. ' reverse' → logprob: -16.505252838134766
    9. '           ' → logprob: -16.880252838134766
    10. ',key' → logprob: -18.005252838134766

Token 1394: '=count' (ID: 186893)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005855670664459467
    2. '=' → logprob: -5.255855560302734
    3. '=count' → logprob: -7.505855560302734
    4. '=len' → logprob: -9.630855560302734
    5. 'lambda' → logprob: -12.505855560302734
    6. '=
' → logprob: -13.255855560302734
    7. ' =' → logprob: -15.130855560302734
    8. '(lambda' → logprob: -16.005855560302734
    9. '   ' → logprob: -16.005855560302734
    10. 'count' → logprob: -16.630855560302734

Token 1395: '_roles' (ID: 107720)
  Prédit: '_roles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_roles' → logprob: -4.36574100604048e-06
    2. ')' → logprob: -13.750004768371582
    3. 'roles' → logprob: -13.875004768371582
    4. '_' → logprob: -14.500004768371582
    5. '_parts' → logprob: -14.750004768371582
    6. '```' → logprob: -15.375004768371582
    7. 'Roles' → logprob: -15.500004768371582
    8. '(' → logprob: -15.500004768371582
    9. '(_' → logprob: -16.000003814697266
    10. '_role' → logprob: -16.250003814697266

Token 1396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014036978245712817
    2. 'reverse' → logprob: -10.000140190124512
    3. 'lambda' → logprob: -10.375140190124512
    4. 'p' → logprob: -10.875140190124512
    5. '=lambda' → logprob: -11.000140190124512
    6. ' ,' → logprob: -11.875140190124512
    7. ',p' → logprob: -12.250140190124512
    8. ',
' → logprob: -12.750140190124512
    9. '(p' → logprob: -12.750140190124512
    10. 's' → logprob: -13.125140190124512

Token 1397: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.018483757972717285
    2. 'lambda' → logprob: -4.018483638763428
    3. ' reverse' → logprob: -8.393484115600586
    4. '=lambda' → logprob: -9.643484115600586
    5. ' lambda' → logprob: -10.893484115600586
    6. '   ' → logprob: -11.643484115600586
    7. 'True' → logprob: -11.893484115600586
    8. '_reverse' → logprob: -13.018484115600586
    9. ',' → logprob: -13.518484115600586
    10. '
' → logprob: -13.893484115600586

Token 1398: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0014564243610948324
    2. '=' → logprob: -7.126456260681152
    3. ')' → logprob: -7.376456260681152
    4. 'True' → logprob: -11.751456260681152
    5. ')=' → logprob: -12.126456260681152
    6. '(True' → logprob: -12.501456260681152
    7. '=lambda' → logprob: -12.751456260681152
    8. ',' → logprob: -13.501456260681152
    9. '=False' → logprob: -13.501456260681152
    10. ' =' → logprob: -14.001456260681152

Token 1399: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013291050679981709
    2. '):' → logprob: -4.638290882110596
    3. '       ' → logprob: -5.888290882110596
    4. ')
' → logprob: -7.888290882110596
    5. '):
' → logprob: -8.013291358947754
    6. '   ' → logprob: -10.888291358947754
    7. ':' → logprob: -11.013291358947754
    8. '           ' → logprob: -12.138291358947754
    9. ' )' → logprob: -12.888291358947754
    10. ',' → logprob: -13.763291358947754

Token 1400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007124403957277536
    2. 'for' → logprob: -5.007124423980713
    3. '   ' → logprob: -8.382123947143555
    4. ' for' → logprob: -8.632123947143555
    5. '
' → logprob: -14.007123947143555
    6. '           ' → logprob: -14.757123947143555
    7. '        
' → logprob: -15.132123947143555
    8. '```' → logprob: -15.257123947143555
    9. '	for' → logprob: -17.257123947143555
    10. '     ' → logprob: -17.882123947143555

Token 1401: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.025551414117217064
    2. 'used' → logprob: -4.0255513191223145
    3. 'selected' → logprob: -5.2755513191223145
    4. '       ' → logprob: -6.4005513191223145
    5. 'chosen' → logprob: -8.025551795959473
    6. 'picked' → logprob: -9.025551795959473
    7. 'visited' → logprob: -9.150551795959473
    8. 'taken' → logprob: -11.025551795959473
    9. 'available' → logprob: -11.900551795959473
    10. '   ' → logprob: -12.400551795959473

Token 1402: ' p' (ID: 275)
  Prédit: 'party'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'party' → logprob: -0.17447686195373535
    2. 'p' → logprob: -2.0494768619537354
    3. ' party' → logprob: -3.6744768619537354
    4. ' p' → logprob: -5.174476623535156
    5. 'part' → logprob: -8.549476623535156
    6. '   ' → logprob: -9.799476623535156
    7. '(p' → logprob: -11.049476623535156
    8. ' ' → logprob: -12.049476623535156
    9. '_party' → logprob: -12.924476623535156
    10. ' (' → logprob: -13.424476623535156

Token 1403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11573292315006256
    2. 'in' → logprob: -2.2407329082489014
    3. '<|end|>' → logprob: -7.1157331466674805
    4. '[' → logprob: -7.4907331466674805
    5. ')' → logprob: -7.9907331466674805
    6. '):
' → logprob: -8.86573314666748
    7. '_' → logprob: -9.24073314666748
    8. '<|end|>' → logprob: -9.49073314666748
    9. ':
' → logprob: -9.61573314666748
    10. ' ' → logprob: -9.61573314666748

Token 1404: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.000923965300898999
    2. ' parties' → logprob: -7.000924110412598
    3. 'parts' → logprob: -11.375924110412598
    4. '(part' → logprob: -15.250924110412598
    5. '_part' → logprob: -15.875924110412598
    6. 'party' → logprob: -16.00092315673828
    7. '[' → logprob: -16.25092315673828
    8. '.part' → logprob: -16.50092315673828
    9. '   ' → logprob: -16.50092315673828
    10. ' partis' → logprob: -16.75092315673828

Token 1405: '_sorted' (ID: 104993)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25894802808761597
    2. ':
' → logprob: -1.6339480876922607
    3. '[' → logprob: -4.508947849273682
    4. '<|end|>' → logprob: -5.008947849273682
    5. '           ' → logprob: -5.258947849273682
    6. '):
' → logprob: -5.758947849273682
    7. '):' → logprob: -6.508947849273682
    8. ' in' → logprob: -6.633947849273682
    9. '[:' → logprob: -7.133947849273682
    10. '       ' → logprob: -7.133947849273682

Token 1406: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5880248546600342
    2. ':' → logprob: -0.8380248546600342
    3. '           ' → logprob: -4.963025093078613
    4. '<|end|>' → logprob: -6.713025093078613
    5. '[' → logprob: -6.963025093078613
    6. ',' → logprob: -7.088025093078613
    7. '<|end|>' → logprob: -7.088025093078613
    8. '):
' → logprob: -7.588025093078613
    9. '       ' → logprob: -9.338025093078613
    10. ' if' → logprob: -9.463025093078613

Token 1407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01722424104809761
    2. '       ' → logprob: -4.142224311828613
    3. '        
' → logprob: -8.392224311828613
    4. '   ' → logprob: -8.767224311828613
    5. '            
' → logprob: -8.892224311828613
    6. '<|end|>' → logprob: -8.892224311828613
    7. ' if' → logprob: -9.267224311828613
    8. '[' → logprob: -9.642224311828613
    9. '        ' → logprob: -10.017224311828613
    10. '
' → logprob: -10.142224311828613

Token 1408: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.31150513887405396
    2. 'h' (adapté à ' h') → logprob: -1.4365050792694092
    3. '           ' → logprob: -3.686505079269409
    4. '(h' → logprob: -6.061505317687988
    5. ' if' → logprob: -7.186505317687988
    6. '               ' → logprob: -7.436505317687988
    7. '   ' → logprob: -7.686505317687988
    8. '	h' → logprob: -8.686505317687988
    9. ' (' → logprob: -9.061505317687988
    10. '       ' → logprob: -9.186505317687988

Token 1409: ',' (ID: 11)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03303449600934982
    2. ',' → logprob: -4.533034324645996
    3. 'not' → logprob: -4.783034324645996
    4. ' in' → logprob: -5.033034324645996
    5. ' =' → logprob: -6.158034324645996
    6. ' if' → logprob: -6.283034324645996
    7. ')' → logprob: -6.658034324645996
    8. '_not' → logprob: -7.408034324645996
    9. '=' → logprob: -8.033034324645996
    10. 'if' → logprob: -8.533034324645996

Token 1410: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6931600570678711
    2. ' w' → logprob: -0.6931600570678711
    3. '           ' → logprob: -12.818160057067871
    4. ',' → logprob: -12.943160057067871
    5. ',w' → logprob: -13.068160057067871
    6. '            
' → logprob: -13.818160057067871
    7. ' ' → logprob: -13.943160057067871
    8. ' ' → logprob: -14.318160057067871
    9. ' 
' → logprob: -14.693160057067871
    10. '_w' → logprob: -15.318160057067871

Token 1411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0990556478500366
    2. '=' → logprob: -1.0990556478500366
    3. ' =' → logprob: -1.0990556478500366
    4. ' ,' → logprob: -8.599055290222168
    5. ')' → logprob: -8.724055290222168
    6. '<|end|>' → logprob: -10.974055290222168
    7. '_,' → logprob: -11.349055290222168
    8. '           ' → logprob: -11.599055290222168
    9. ',
' → logprob: -11.599055290222168
    10. ' ' → logprob: -11.599055290222168

Token 1412: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759417414665222
    2. ' c' → logprob: -0.8259417414665222
    3. 'None' → logprob: -14.200942039489746
    4. ',c' → logprob: -14.450942039489746
    5. ',' → logprob: -14.950942039489746
    6. ' None' → logprob: -15.075942039489746
    7. ' ' → logprob: -16.32594108581543
    8. ' ' → logprob: -16.32594108581543
    9. ' 
' → logprob: -16.82594108581543
    10. '```' → logprob: -16.95094108581543

Token 1413: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39541760087013245
    2. ',' → logprob: -1.64541757106781
    3. ' =' → logprob: -2.0204176902770996
    4. ')' → logprob: -7.0204176902771
    5. '           ' → logprob: -9.145417213439941
    6. ',
' → logprob: -11.645417213439941
    7. '=None' → logprob: -11.770417213439941
    8. '   ' → logprob: -12.020417213439941
    9. ' ,' → logprob: -12.020417213439941
    10. '       ' → logprob: -12.145417213439941

Token 1414: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692810595035553
    2. ' m' → logprob: -2.1269280910491943
    3. '	m' → logprob: -17.376928329467773
    4. ' None' → logprob: -17.626928329467773
    5. ' ' → logprob: -17.876928329467773
    6. ' ' → logprob: -18.126928329467773
    7. 'None' → logprob: -18.251928329467773
    8. '   ' → logprob: -18.501928329467773
    9. '_m' → logprob: -18.626928329467773
    10. '```' → logprob: -19.001928329467773

Token 1415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28805720806121826
    2. '=' → logprob: -2.038057327270508
    3. '           ' → logprob: -2.163057327270508
    4. ',' → logprob: -6.163057327270508
    5. ')' → logprob: -7.163057327270508
    6. '       ' → logprob: -8.163057327270508
    7. '=
' → logprob: -8.163057327270508
    8. '            ' → logprob: -8.413057327270508
    9. '<|end|>' → logprob: -8.413057327270508
    10. '            
' → logprob: -8.663057327270508

Token 1416: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000553151941858232
    2. ' p' → logprob: -7.500553131103516
    3. '           ' → logprob: -16.500553131103516
    4. '   ' → logprob: -16.625553131103516
    5. '       ' → logprob: -19.500553131103516
    6. '    ' → logprob: -19.500553131103516
    7. '*p' → logprob: -20.625553131103516
    8. '            ' → logprob: -20.750553131103516
    9. '
' → logprob: -20.750553131103516
    10. '        ' → logprob: -20.875553131103516

Token 1417: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003514072159305215
    2. '               ' → logprob: -6.003514289855957
    3. '<|end|>' → logprob: -7.503514289855957
    4. '            
' → logprob: -9.378514289855957
    5. ':
' → logprob: -9.628514289855957
    6. ',' → logprob: -9.753514289855957
    7. '            ' → logprob: -10.003514289855957
    8. '       ' → logprob: -10.253514289855957
    9. '	       ' → logprob: -10.378514289855957
    10. '          ' → logprob: -10.378514289855957

Token 1418: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012403888104017824
    2. '               ' → logprob: -9.500123977661133
    3. '       ' → logprob: -10.125123977661133
    4. '<|end|>' → logprob: -12.125123977661133
    5. '   ' → logprob: -14.250123977661133
    6. '            
' → logprob: -14.375123977661133
    7. ' if' → logprob: -14.500123977661133
    8. '	       ' → logprob: -14.625123977661133
    9. '          ' → logprob: -14.875123977661133
    10. '                       ' → logprob: -15.250123977661133

Token 1419: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05028902366757393
    2. ' if' → logprob: -3.0502889156341553
    3. 'if' (adapté à ' if') → logprob: -6.425289154052734
    4. '       ' → logprob: -10.050289154052734
    5. '   ' → logprob: -10.425289154052734
    6. '               ' → logprob: -12.800289154052734
    7. '          ' → logprob: -13.925289154052734
    8. '            ' → logprob: -14.050289154052734
    9. '    ' → logprob: -14.175289154052734
    10. ' ' → logprob: -14.550289154052734

Token 1420: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3488423824310303
    2. 'h' → logprob: -1.2238423824310303
    3. ' (' → logprob: -8.22384262084961
    4. '(h' → logprob: -9.34884262084961
    5. ' not' → logprob: -10.59884262084961
    6. '           ' → logprob: -12.22384262084961
    7. '   ' → logprob: -12.72384262084961
    8. '(' → logprob: -12.72384262084961
    9. 'not' → logprob: -13.22384262084961
    10. '    ' → logprob: -13.34884262084961

Token 1421: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.001704102149233222
    2. 'not' → logprob: -6.376704216003418
    3. ')' → logprob: -13.626704216003418
    4. ' ' → logprob: -15.501704216003418
    5. ' h' → logprob: -15.876704216003418
    6. '           ' → logprob: -16.3767032623291
    7. '_not' → logprob: -16.7517032623291
    8. '	not' → logprob: -16.8767032623291
    9. ' in' → logprob: -17.1267032623291
    10. ' if' → logprob: -17.2517032623291

Token 1422: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -6.511406809295295e-06
    2. ' chosen' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.125006675720215
    4. '           ' → logprob: -18.1250057220459
    5. '```' → logprob: -18.2500057220459
    6. '       ' → logprob: -18.7500057220459
    7. '
' → logprob: -18.8750057220459
    8. 'selected' → logprob: -19.5000057220459
    9. '``' → logprob: -21.0000057220459
    10. ' ' → logprob: -21.2500057220459

Token 1423: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010044389637187123
    2. 'heroes' → logprob: -9.250100135803223
    3. '_h' → logprob: -13.375100135803223
    4. '_w' → logprob: -14.250100135803223
    5. '_helpers' → logprob: -14.875100135803223
    6. '{' → logprob: -15.250100135803223
    7. '```' → logprob: -15.250100135803223
    8. '{
' → logprob: -15.250100135803223
    9. '_
' → logprob: -15.500100135803223
    10. '\' → logprob: -15.750100135803223

Token 1424: 'heroes' (ID: 103812)
  Prédit: 'heroes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -7.896309739408025e-07
    2. ' heroes' → logprob: -14.375000953674316
    3. '
' → logprob: -16.75
    4. '```' → logprob: -17.75
    5. 'helpers' → logprob: -18.0
    6. '{' → logprob: -18.5
    7. 'war' → logprob: -18.75
    8. '_' → logprob: -19.0
    9. 'her' → logprob: -19.0
    10. 'chosen' → logprob: -19.0

Token 1425: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09039969742298126
    2. 'or' → logprob: -2.465399742126465
    3. '           ' → logprob: -7.590399742126465
    4. 'and' → logprob: -8.215399742126465
    5. ' and' → logprob: -8.215399742126465
    6. '               ' → logprob: -8.590399742126465
    7. '<|end|>' → logprob: -9.590399742126465
    8. '	or' → logprob: -9.715399742126465
    9. ':' → logprob: -10.090399742126465
    10. ':
' → logprob: -11.090399742126465

Token 1426: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04670365899801254
    2. ' continue' → logprob: -3.296703577041626
    3. ' and' → logprob: -5.546703815460205
    4. '           ' → logprob: -6.296703815460205
    5. 'continue' → logprob: -6.546703815460205
    6. ' or' → logprob: -6.796703815460205
    7. ' continues' → logprob: -8.671703338623047
    8. 'and' → logprob: -9.546703338623047
    9. '                   ' → logprob: -10.921703338623047
    10. ' continuing' → logprob: -11.546703338623047

Token 1427: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12048383802175522
    2. ' continue' → logprob: -2.620483875274658
    3. 'continue' (adapté à ' continue') → logprob: -3.245483875274658
    4. '           ' → logprob: -6.370483875274658
    5. '                   ' → logprob: -10.2454833984375
    6. '	continue' → logprob: -10.9954833984375
    7. '_continue' → logprob: -11.7454833984375
    8. ' continues' → logprob: -12.2454833984375
    9. '   ' → logprob: -12.3704833984375
    10. ' continued' → logprob: -13.8704833984375

Token 1428: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009474263642914593
    2. '<|end|>' → logprob: -7.37594747543335
    3. '            
' → logprob: -8.875946998596191
    4. '          ' → logprob: -9.750946998596191
    5. '               ' → logprob: -10.125946998596191
    6. '            ' → logprob: -10.375946998596191
    7. '```' → logprob: -11.000946998596191
    8. '           
' → logprob: -12.250946998596191
    9. ' 
' → logprob: -12.500946998596191
    10. '                   ' → logprob: -12.500946998596191

Token 1429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007233651354908943
    2. '<|end|>' → logprob: -6.007233619689941
    3. '            
' → logprob: -6.382233619689941
    4. '            ' → logprob: -6.507233619689941
    5. '               ' → logprob: -7.882233619689941
    6. '          ' → logprob: -8.132233619689941
    7. '       ' → logprob: -8.507233619689941
    8. ' 
' → logprob: -9.382233619689941
    9. '```' → logprob: -9.632233619689941
    10. '        ' → logprob: -9.632233619689941

Token 1430: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013911371119320393
    2. ' if' → logprob: -4.763911247253418
    3. 'if' (adapté à ' if') → logprob: -5.263911247253418
    4. '               ' → logprob: -10.138911247253418
    5. '       ' → logprob: -10.638911247253418
    6. '          ' → logprob: -11.513911247253418
    7. '            ' → logprob: -12.013911247253418
    8. '                   ' → logprob: -12.138911247253418
    9. 'w' → logprob: -12.138911247253418
    10. '   ' → logprob: -12.638911247253418

Token 1431: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.4770463705062866
    2. 'w' → logprob: -0.9770463705062866
    3. '(w' → logprob: -6.352046489715576
    4. ' (' → logprob: -6.852046489715576
    5. '(' → logprob: -9.102046012878418
    6. '   ' → logprob: -10.102046012878418
    7. '	w' → logprob: -12.477046012878418
    8. ' ' → logprob: -13.102046012878418
    9. ' ' → logprob: -13.602046012878418
    10. '    ' → logprob: -14.227046012878418

Token 1432: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.013176819309592247
    2. 'is' → logprob: -4.513176918029785
    3. ' not' → logprob: -6.263176918029785
    4. 'not' → logprob: -9.013176918029785
    5. ' in' → logprob: -9.388176918029785
    6. 'in' → logprob: -11.138176918029785
    7. ' None' → logprob: -14.763176918029785
    8. 'if' → logprob: -15.513176918029785
    9. '=None' → logprob: -15.638176918029785
    10. 'None' → logprob: -16.01317596435547

Token 1433: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3541531264781952
    2. 'not' → logprob: -1.3541531562805176
    3. 'None' → logprob: -3.6041531562805176
    4. ' None' → logprob: -4.354153156280518
    5. 'Not' → logprob: -13.85415267944336
    6. '(None' → logprob: -14.72915267944336
    7. 'none' → logprob: -14.85415267944336
    8. '_not' → logprob: -15.10415267944336
    9. '_None' → logprob: -15.10415267944336
    10. '	not' → logprob: -15.60415267944336

Token 1434: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.3425219549390022e-05
    2. ' None' → logprob: -11.25001335144043
    3. '_None' → logprob: -15.75001335144043
    4. '(None' → logprob: -16.12501335144043
    5. 'not' → logprob: -16.25001335144043
    6. '_none' → logprob: -19.25001335144043
    7. 'Not' → logprob: -19.37501335144043
    8. 'in' → logprob: -20.50001335144043
    9. '=None' → logprob: -20.62501335144043
    10. 'none' → logprob: -20.62501335144043

Token 1435: ' and' (ID: 326)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03576686605811119
    2. ' and' → logprob: -3.660766839981079
    3. 'not' → logprob: -5.160767078399658
    4. 'and' → logprob: -5.660767078399658
    5. ' in' → logprob: -8.6607666015625
    6. '           ' → logprob: -10.9107666015625
    7. 'in' → logprob: -11.9107666015625
    8. '            ' → logprob: -13.4107666015625
    9. '	not' → logprob: -13.6607666015625
    10. '               ' → logprob: -13.7857666015625

Token 1436: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16022463142871857
    2. ' w' → logprob: -1.9102246761322021
    3. '(w' → logprob: -15.285224914550781
    4. '	w' → logprob: -16.53522491455078
    5. ' ' → logprob: -16.53522491455078
    6. '   ' → logprob: -17.78522491455078
    7. '<w' → logprob: -18.53522491455078
    8. ' ' → logprob: -18.53522491455078
    9. ' (' → logprob: -18.78522491455078
    10. '_w' → logprob: -20.03522491455078

Token 1437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0380416102707386
    2. 'in' → logprob: -3.288041591644287
    3. 'not' → logprob: -17.163042068481445
    4. '	in' → logprob: -17.163042068481445
    5. ' ' → logprob: -17.288042068481445
    6. '   ' → logprob: -17.538042068481445
    7. ' not' → logprob: -17.538042068481445
    8. 'In' → logprob: -17.788042068481445
    9. ' ' → logprob: -18.163042068481445
    10. 's' → logprob: -19.163042068481445

Token 1438: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -7.505351095460355e-05
    2. ' chosen' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.875075340270996
    4. 'selected' → logprob: -18.00007438659668
    5. ' ' → logprob: -19.50007438659668
    6. '       ' → logprob: -21.25007438659668
    7. '           ' → logprob: -21.37507438659668
    8. '  ' → logprob: -21.62507438659668
    9. '
' → logprob: -21.62507438659668
    10. '```' → logprob: -22.37507438659668

Token 1439: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.8624639324116288e-06
    2. 'war' → logprob: -13.250001907348633
    3. '_' → logprob: -19.250001907348633
    4. 'w' → logprob: -20.250001907348633
    5. ' warriors' → logprob: -20.250001907348633
    6. '\' → logprob: -21.000001907348633
    7. '_workers' → logprob: -21.125001907348633
    8. 'War' → logprob: -21.750001907348633
    9. '   ' → logprob: -22.000001907348633
    10. '_arm' → logprob: -22.500001907348633

Token 1440: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0946003869175911
    2. '_w' → logprob: -2.7196004390716553
    3. 'war' → logprob: -4.094600200653076
    4. 'arr' → logprob: -5.219600200653076
    5. 'arri' → logprob: -6.719600200653076
    6. '_arr' → logprob: -8.594600677490234
    7. '_ar' → logprob: -8.719600677490234
    8. 'or' → logprob: -8.719600677490234
    9. 'w' → logprob: -9.344600677490234
    10. '
' → logprob: -9.719600677490234

Token 1441: 'riors' (ID: 46128)
  Prédit: 'riors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riors' → logprob: -0.4850110709667206
    2. 'ar' → logprob: -1.610011100769043
    3. 'war' → logprob: -2.985011100769043
    4. 'or' → logprob: -3.360011100769043
    5. 'rior' → logprob: -3.485011100769043
    6. 'arr' → logprob: -3.610011100769043
    7. 'iors' → logprob: -4.235011100769043
    8. 'ior' → logprob: -4.485011100769043
    9. 'fighters' → logprob: -6.110011100769043
    10. 'orr' → logprob: -6.235011100769043

Token 1442: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04658658429980278
    2. ':' → logprob: -3.546586513519287
    3. '           ' → logprob: -4.421586513519287
    4. '               ' → logprob: -5.421586513519287
    5. ' or' → logprob: -9.921586990356445
    6. 'continue' → logprob: -9.921586990356445
    7. '):
' → logprob: -10.421586990356445
    8. ' continue' → logprob: -10.921586990356445
    9. '==' → logprob: -11.296586990356445
    10. '       ' → logprob: -11.421586990356445

Token 1443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004075432196259499
    2. ' continue' → logprob: -5.754075527191162
    3. 'continue' → logprob: -7.379075527191162
    4. '           ' → logprob: -8.754075050354004
    5. ':
' → logprob: -10.504075050354004
    6. ' continues' → logprob: -11.129075050354004
    7. '                   ' → logprob: -11.129075050354004
    8. '                       ' → logprob: -11.379075050354004
    9. '<|end|>' → logprob: -11.629075050354004
    10. '_continue' → logprob: -11.754075050354004

Token 1444: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.314347505569458
    2. '               ' → logprob: -1.564347505569458
    3. 'continue' (adapté à ' continue') → logprob: -2.814347505569458
    4. '                   ' → logprob: -7.564347267150879
    5. '           ' → logprob: -10.689347267150879
    6. '   ' → logprob: -11.314347267150879
    7. '	continue' → logprob: -12.439347267150879
    8. '_continue' → logprob: -12.939347267150879
    9. '```' → logprob: -13.314347267150879
    10. '                       ' → logprob: -14.064347267150879

Token 1445: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2948405128554441e-05
    2. '```' → logprob: -12.12501335144043
    3. '               ' → logprob: -12.62501335144043
    4. '                   ' → logprob: -13.37501335144043
    5. '		' → logprob: -14.37501335144043
    6. '       ' → logprob: -14.50001335144043
    7. '
' → logprob: -14.62501335144043
    8. '<|end|>' → logprob: -14.87501335144043
    9. '          ' → logprob: -15.25001335144043
    10. '   ' → logprob: -15.87501335144043

Token 1446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013214473437983543
    2. '```' → logprob: -10.00013256072998
    3. '               ' → logprob: -10.12513256072998
    4. '                   ' → logprob: -11.00013256072998
    5. '                       ' → logprob: -11.25013256072998
    6. '                           ' → logprob: -12.37513256072998
    7. '       ' → logprob: -12.50013256072998
    8. '<|end|>' → logprob: -12.87513256072998
    9. '          ' → logprob: -13.12513256072998
    10. '		' → logprob: -13.62513256072998

Token 1447: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000989699736237526
    2. ' if' → logprob: -7.50098991394043
    3. '                   ' → logprob: -8.75098991394043
    4. 'if' (adapté à ' if') → logprob: -9.12598991394043
    5. '               ' → logprob: -9.62598991394043
    6. '                       ' → logprob: -10.62598991394043
    7. '       ' → logprob: -10.62598991394043
    8. '          ' → logprob: -11.00098991394043
    9. '
' → logprob: -12.12598991394043
    10. '            ' → logprob: -12.37598991394043

Token 1448: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.251930296421051
    2. 'c' → logprob: -1.5019302368164062
    3. '   ' → logprob: -14.626930236816406
    4. '           ' → logprob: -15.126930236816406
    5. 'None' → logprob: -15.626930236816406
    6. '(c' → logprob: -16.251930236816406
    7. '	c' → logprob: -16.626930236816406
    8. '       ' → logprob: -17.751930236816406
    9. '    ' → logprob: -17.876930236816406
    10. 'm' → logprob: -17.876930236816406

Token 1449: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.061968810856342316
    2. 'is' → logprob: -2.8119688034057617
    3. 'not' → logprob: -14.061968803405762
    4. ' not' → logprob: -14.936968803405762
    5. 'None' → logprob: -17.436969757080078
    6. '           ' → logprob: -17.936969757080078
    7. 'and' → logprob: -18.061969757080078
    8. '	is' → logprob: -18.186969757080078
    9. 'in' → logprob: -18.311969757080078
    10. '```' → logprob: -18.561969757080078

Token 1450: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31351569294929504
    2. ' not' → logprob: -1.3135156631469727
    3. 'None' → logprob: -8.313515663146973
    4. 'Not' → logprob: -12.563515663146973
    5. ' None' → logprob: -13.313515663146973
    6. '	not' → logprob: -13.938515663146973
    7. '```' → logprob: -14.688515663146973
    8. 'none' → logprob: -14.688515663146973
    9. '_not' → logprob: -15.063515663146973
    10. '[' → logprob: -15.188515663146973

Token 1451: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.3425219549390022e-05
    2. ' None' → logprob: -11.25001335144043
    3. 'not' → logprob: -15.75001335144043
    4. '_None' → logprob: -16.50001335144043
    5. '(None' → logprob: -16.87501335144043
    6. '   ' → logprob: -18.37501335144043
    7. '=None' → logprob: -18.50001335144043
    8. 'none' → logprob: -18.75001335144043
    9. '_none' → logprob: -19.62501335144043
    10. 'Not' → logprob: -20.25001335144043

Token 1452: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3133232295513153
    2. 'and' → logprob: -1.3133232593536377
    3. ' not' → logprob: -10.313323020935059
    4. '           ' → logprob: -10.938323020935059
    5. 'not' → logprob: -11.813323020935059
    6. 'in' → logprob: -13.688323020935059
    7. '            ' → logprob: -13.813323020935059
    8. ',' → logprob: -15.313323020935059
    9. '               ' → logprob: -15.563323020935059
    10. ' in' → logprob: -16.188323974609375

Token 1453: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.251930296421051
    2. ' c' → logprob: -1.5019302368164062
    3. '(c' → logprob: -14.251930236816406
    4. '   ' → logprob: -15.126930236816406
    5. '	c' → logprob: -16.251930236816406
    6. '    ' → logprob: -17.251930236816406
    7. '$c' → logprob: -17.251930236816406
    8. '  ' → logprob: -17.814430236816406
    9. ')c' → logprob: -17.814430236816406
    10. 'chosen' → logprob: -17.876930236816406

Token 1454: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740821421146393
    2. ' in' → logprob: -0.9740821123123169
    3. 'not' → logprob: -12.474081993103027
    4. ' not' → logprob: -14.474081993103027
    5. 'is' → logprob: -15.349081993103027
    6. 'import' → logprob: -15.599081993103027
    7. ' ' → logprob: -16.849082946777344
    8. 'In' → logprob: -17.224082946777344
    9. '	in' → logprob: -17.224082946777344
    10. 'if' → logprob: -17.224082946777344

Token 1455: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.0031784253660589457
    2. ' chosen' → logprob: -5.753178596496582
    3. 'selected' → logprob: -14.628178596496582
    4. '   ' → logprob: -15.128178596496582
    5. '       ' → logprob: -18.628177642822266
    6. ' ' → logprob: -18.878177642822266
    7. '           ' → logprob: -18.878177642822266
    8. '```' → logprob: -19.253177642822266
    9. '  ' → logprob: -19.628177642822266
    10. 'choose' → logprob: -19.753177642822266

Token 1456: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.00016110755677800626
    2. 'cler' → logprob: -8.750161170959473
    3. '_w' → logprob: -13.875161170959473
    4. '_' → logprob: -14.250161170959473
    5. '_c' → logprob: -14.375161170959473
    6. '_cre' → logprob: -15.500161170959473
    7. '\' → logprob: -16.375160217285156
    8. '_cli' → logprob: -17.375160217285156
    9. '
' → logprob: -17.500160217285156
    10. 'cl' → logprob: -17.875160217285156

Token 1457: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1277952343225479
    2. 'ics' → logprob: -2.1277952194213867
    3. 'ic' → logprob: -7.252795219421387
    4. 'eries' → logprob: -10.752795219421387
    5. '[' → logprob: -11.252795219421387
    6. 'rics' → logprob: -11.252795219421387
    7. 'ir' → logprob: -11.377795219421387
    8. 'ific' → logprob: -11.502795219421387
    9. 'icis' → logprob: -11.627795219421387
    10. 'ur' → logprob: -12.127795219421387

Token 1458: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.00033403540146537125
    2. 'ic' → logprob: -8.250333786010742
    3. '[' → logprob: -11.000333786010742
    4. '   ' → logprob: -11.375333786010742
    5. 'icts' → logprob: -12.000333786010742
    6. '
' → logprob: -12.125333786010742
    7. '```' → logprob: -12.125333786010742
    8. '{' → logprob: -12.250333786010742
    9. '_' → logprob: -12.500333786010742
    10. 't' → logprob: -13.125333786010742

Token 1459: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15795914828777313
    2. '               ' → logprob: -2.032959222793579
    3. ':' → logprob: -4.282958984375
    4. '           ' → logprob: -6.782958984375
    5. 'continue' → logprob: -9.657958984375
    6. '):
' → logprob: -10.157958984375
    7. '                   ' → logprob: -10.907958984375
    8. ':

' → logprob: -11.032958984375
    9. '                       ' → logprob: -11.282958984375
    10. '<|end|>' → logprob: -11.532958984375

Token 1460: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007433292921632528
    2. 'continue' → logprob: -5.1324334144592285
    3. ' continue' → logprob: -6.8824334144592285
    4. '           ' → logprob: -8.88243293762207
    5. ':
' → logprob: -9.13243293762207
    6. '                       ' → logprob: -9.25743293762207
    7. '                   ' → logprob: -10.13243293762207
    8. ' continues' → logprob: -11.38243293762207
    9. '   ' → logprob: -11.50743293762207
    10. 'Continue' → logprob: -11.50743293762207

Token 1461: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07238299399614334
    2. '               ' → logprob: -3.322382926940918
    3. ' continue' → logprob: -3.447382926940918
    4. '                   ' → logprob: -6.322382926940918
    5. '           ' → logprob: -10.197382926940918
    6. 'False' → logprob: -10.197382926940918
    7. '                       ' → logprob: -10.947382926940918
    8. '   ' → logprob: -11.072382926940918
    9. 'True' → logprob: -11.822382926940918
    10. '_continue' → logprob: -12.197382926940918

Token 1462: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18442243337631226
    2. '                       ' → logprob: -1.934422492980957
    3. '               ' → logprob: -4.309422492980957
    4. '                   ' → logprob: -5.434422492980957
    5. '                           ' → logprob: -5.434422492980957
    6. '```' → logprob: -6.809422492980957
    7. '                               ' → logprob: -8.059422492980957
    8. ' if' → logprob: -9.934422492980957
    9. '   ' → logprob: -9.934422492980957
    10. '                                   ' → logprob: -10.059422492980957

Token 1463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043670520186424255
    2. '               ' → logprob: -3.418670415878296
    3. '```' → logprob: -5.168670654296875
    4. '                       ' → logprob: -5.918670654296875
    5. '                   ' → logprob: -6.793670654296875
    6. '                           ' → logprob: -8.418670654296875
    7. '       ' → logprob: -9.543670654296875
    8. ' if' → logprob: -9.793670654296875
    9. '``' → logprob: -10.793670654296875
    10. '                               ' → logprob: -10.793670654296875

Token 1464: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40295422077178955
    2. 'if' (adapté à ' if') → logprob: -1.1529542207717896
    3. ' if' → logprob: -4.1529541015625
    4. '                       ' → logprob: -8.7779541015625
    5. '```' → logprob: -10.1529541015625
    6. '               ' → logprob: -10.4029541015625
    7. '                   ' → logprob: -12.1529541015625
    8. '                           ' → logprob: -12.7779541015625
    9. '   ' → logprob: -13.2779541015625
    10. '       ' → logprob: -13.5279541015625

Token 1465: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.023247458040714264
    2. 'm' → logprob: -3.773247480392456
    3. '   ' → logprob: -13.648247718811035
    4. ' ' → logprob: -15.648247718811035
    5. '(m' → logprob: -15.773247718811035
    6. '	m' → logprob: -15.898247718811035
    7. ' ' → logprob: -16.64824676513672
    8. '    ' → logprob: -16.83574676513672
    9. '```' → logprob: -16.83574676513672
    10. ' (' → logprob: -16.96074676513672

Token 1466: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.029750604182481766
    2. 'is' → logprob: -3.5297505855560303
    3. ' not' → logprob: -16.52975082397461
    4. 'not' → logprob: -17.40475082397461
    5. '           ' → logprob: -17.65475082397461
    6. 'in' → logprob: -17.77975082397461
    7. '```' → logprob: -17.77975082397461
    8. ' ' → logprob: -17.90475082397461
    9. '            ' → logprob: -17.90475082397461
    10. 'None' → logprob: -18.02975082397461

Token 1467: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6338128447532654
    2. 'not' → logprob: -0.7588128447532654
    3. 'None' → logprob: -6.75881290435791
    4. ' None' → logprob: -10.50881290435791
    5. 'Not' → logprob: -12.00881290435791
    6. 'm' → logprob: -12.38381290435791
    7. ' is' → logprob: -12.63381290435791
    8. 'none' → logprob: -12.88381290435791
    9. 'is' → logprob: -13.38381290435791
    10. '```' → logprob: -13.88381290435791

Token 1468: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01108389999717474
    2. 'not' → logprob: -4.511084079742432
    3. ' None' → logprob: -10.511083602905273
    4. 'Not' → logprob: -12.261083602905273
    5. ' not' → logprob: -13.261083602905273
    6. '_None' → logprob: -13.761083602905273
    7. '(None' → logprob: -14.261083602905273
    8. '_none' → logprob: -15.511083602905273
    9. '_not' → logprob: -15.761083602905273
    10. '=None' → logprob: -16.011083602905273

Token 1469: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8132051825523376
    2. ' and' → logprob: -0.8132051825523376
    3. 'and' → logprob: -2.4382052421569824
    4. 'in' → logprob: -3.6882052421569824
    5. ' not' → logprob: -7.563205242156982
    6. '           ' → logprob: -8.688204765319824
    7. '            ' → logprob: -9.813204765319824
    8. 'not' → logprob: -10.313204765319824
    9. '               ' → logprob: -11.438204765319824
    10. ' is' → logprob: -13.188204765319824

Token 1470: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0788913294672966
    2. ' m' → logprob: -2.5788912773132324
    3. '   ' → logprob: -13.95389175415039
    4. '(m' → logprob: -15.70389175415039
    5. ' ' → logprob: -15.95389175415039
    6. ' ' → logprob: -16.07889175415039
    7. '	m' → logprob: -16.20389175415039
    8. '  ' → logprob: -16.20389175415039
    9. '    ' → logprob: -16.32889175415039
    10. '           ' → logprob: -17.51639175415039

Token 1471: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805147483944893
    2. 'in' → logprob: -3.2880513668060303
    3. ' not' → logprob: -11.91305160522461
    4. 'not' → logprob: -13.53805160522461
    5. ' ' → logprob: -13.78805160522461
    6. ' ' → logprob: -14.53805160522461
    7. ' is' → logprob: -16.41305160522461
    8. 'is' → logprob: -16.53805160522461
    9. 'import' → logprob: -17.03805160522461
    10. 's' → logprob: -17.03805160522461

Token 1472: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.023246178403496742
    2. ' chosen' → logprob: -3.7732462882995605
    3. 'selected' → logprob: -14.523245811462402
    4. '   ' → logprob: -16.02324676513672
    5. 'used' → logprob: -17.02324676513672
    6. ' ' → logprob: -17.52324676513672
    7. '  ' → logprob: -18.39824676513672
    8. ' selected' → logprob: -18.64824676513672
    9. '
' → logprob: -18.77324676513672
    10. ' used' → logprob: -19.27324676513672

Token 1473: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0019351851660758257
    2. 'mages' → logprob: -6.251935005187988
    3. 'm' → logprob: -12.876935005187988
    4. '_' → logprob: -12.876935005187988
    5. ' m' → logprob: -14.501935005187988
    6. 'M' → logprob: -16.001935958862305
    7. '	m' → logprob: -16.126935958862305
    8. '   ' → logprob: -16.251935958862305
    9. '_g' → logprob: -16.501935958862305
    10. '
' → logprob: -16.501935958862305

Token 1474: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.00019007037917617708
    2. 'mages' → logprob: -8.750189781188965
    3. '_' → logprob: -10.875189781188965
    4. 's' → logprob: -13.000189781188965
    5. '
' → logprob: -13.125189781188965
    6. 'age' → logprob: -13.875189781188965
    7. 'ges' → logprob: -14.125189781188965
    8. '   ' → logprob: -14.375189781188965
    9. '{' → logprob: -14.375189781188965
    10. 'agers' → logprob: -14.500189781188965

Token 1475: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03344777226448059
    2. '               ' → logprob: -3.658447742462158
    3. ':' → logprob: -5.033447742462158
    4. '           ' → logprob: -7.908447742462158
    5. '):
' → logprob: -8.783448219299316
    6. '                       ' → logprob: -10.783448219299316
    7. '                   ' → logprob: -11.158448219299316
    8. '():
' → logprob: -11.158448219299316
    9. ':

' → logprob: -11.533448219299316
    10. ',' → logprob: -12.533448219299316

Token 1476: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015324609354138374
    2. ' continue' → logprob: -4.390324592590332
    3. '           ' → logprob: -6.515324592590332
    4. 'continue' → logprob: -6.640324592590332
    5. '                   ' → logprob: -11.515324592590332
    6. '   ' → logprob: -12.390324592590332
    7. ' continues' → logprob: -13.140324592590332
    8. '```' → logprob: -13.390324592590332
    9. '       ' → logprob: -13.890324592590332
    10. '                       ' → logprob: -14.015324592590332

Token 1477: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.028568705543875694
    2. 'continue' (adapté à ' continue') → logprob: -3.778568744659424
    3. '           ' → logprob: -5.778568744659424
    4. '               ' → logprob: -6.153568744659424
    5. '            ' → logprob: -10.653568267822266
    6. '   ' → logprob: -11.153568267822266
    7. ' ' → logprob: -11.528568267822266
    8. '
' → logprob: -12.028568267822266
    9. ' 
' → logprob: -12.278568267822266
    10. '  ' → logprob: -12.278568267822266

Token 1478: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019698418327607214
    2. '               ' → logprob: -9.375197410583496
    3. '            
' → logprob: -10.250197410583496
    4. '       ' → logprob: -10.375197410583496
    5. '
' → logprob: -10.625197410583496
    6. '```' → logprob: -11.750197410583496
    7. '<|end|>' → logprob: -12.375197410583496
    8. '    
' → logprob: -13.500197410583496
    9. '        
' → logprob: -13.750197410583496
    10. '   ' → logprob: -13.875197410583496

Token 1479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007291130605153739
    2. '```' → logprob: -7.625729084014893
    3. '       ' → logprob: -8.62572956085205
    4. '               ' → logprob: -10.00072956085205
    5. '[' → logprob: -12.75072956085205
    6. '   ' → logprob: -13.12572956085205
    7. '            
' → logprob: -13.25072956085205
    8. '
' → logprob: -13.50072956085205
    9. 'continue' → logprob: -13.62572956085205
    10. '``' → logprob: -13.75072956085205

Token 1480: ' chosen' (ID: 16180)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014139274135231972
    2. 'chosen' (adapté à ' chosen') → logprob: -6.751413822174072
    3. '       ' → logprob: -8.50141429901123
    4. '               ' → logprob: -11.62641429901123
    5. ' chosen' → logprob: -11.62641429901123
    6. '   ' → logprob: -11.75141429901123
    7. 'selected' → logprob: -12.25141429901123
    8. '```' → logprob: -12.25141429901123
    9. '
' → logprob: -12.37641429901123
    10. '                   ' → logprob: -15.87641429901123

Token 1481: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5048530030981055e-06
    2. '_w' → logprob: -15.125001907348633
    3. '_h' → logprob: -15.375001907348633
    4. '_helpers' → logprob: -15.375001907348633
    5. '_tokens' → logprob: -15.375001907348633
    6. '\' → logprob: -16.250001907348633
    7. '_he' → logprob: -16.500001907348633
    8. 's' → logprob: -17.125001907348633
    9. '_
' → logprob: -17.125001907348633
    10. '_roles' → logprob: -17.250001907348633

Token 1482: 'heroes' (ID: 103812)
  Prédit: 'heroes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. 'her' → logprob: -16.125
    4. ' heroes' → logprob: -17.25
    5. 'roles' → logprob: -18.625
    6. 'war' → logprob: -18.625
    7. '#' → logprob: -18.75
    8. 'hero' → logprob: -19.25
    9. 'helpers' → logprob: -19.25
    10. 'w' → logprob: -19.5

Token 1483: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -11.625009536743164
    3. ' .' → logprob: -15.875009536743164
    4. 'add' → logprob: -17.625009536743164
    5. '.Add' → logprob: -17.750009536743164
    6. '.update' → logprob: -18.250009536743164
    7. ' add' → logprob: -19.500009536743164
    8. '.append' → logprob: -19.500009536743164
    9. '.setdefault' → logprob: -19.625009536743164
    10. '_add' → logprob: -20.125009536743164

Token 1484: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3155907392501831
    2. '(h' → logprob: -1.315590739250183
    3. ' h' → logprob: -6.065590858459473
    4. ' (' → logprob: -12.440590858459473
    5. '(' → logprob: -14.065590858459473
    6. '(p' → logprob: -16.440589904785156
    7. '	h' → logprob: -16.565589904785156
    8. '_h' → logprob: -18.190589904785156
    9. '(
' → logprob: -18.315589904785156
    10. ',h' → logprob: -18.690589904785156

Token 1485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30238282680511475
    2. ')
' → logprob: -1.4273828268051147
    3. '           ' → logprob: -3.9273829460144043
    4. '<|end|>' → logprob: -7.177382946014404
    5. '       ' → logprob: -8.302382469177246
    6. '```' → logprob: -9.177382469177246
    7. '               ' → logprob: -10.177382469177246
    8. ',' → logprob: -10.302382469177246
    9. '
' → logprob: -10.677382469177246
    10. '),' → logprob: -10.927382469177246

Token 1486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011621268931776285
    2. '```' → logprob: -7.626162052154541
    3. ' w' → logprob: -7.876162052154541
    4. 'w' → logprob: -9.1261625289917
    5. '               ' → logprob: -9.6261625289917
    6. '       ' → logprob: -10.6261625289917
    7. '                   ' → logprob: -11.0011625289917
    8. ',w' → logprob: -11.1261625289917
    9. '          ' → logprob: -11.2511625289917
    10. '                       ' → logprob: -11.6261625289917

Token 1487: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041360240429639816
    2. 'chosen' → logprob: -3.6663601398468018
    3. ' chosen' → logprob: -5.166360378265381
    4. ' if' → logprob: -5.291360378265381
    5. 'if' (adapté à ' if') → logprob: -5.541360378265381
    6. 'w' → logprob: -9.291359901428223
    7. '       ' → logprob: -9.666359901428223
    8. ' w' → logprob: -10.166359901428223
    9. '```' → logprob: -10.291359901428223
    10. '   ' → logprob: -10.541359901428223

Token 1488: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.07889022678136826
    2. 'w' → logprob: -2.578890323638916
    3. '	w' → logprob: -15.578889846801758
    4. ' ' → logprob: -15.953889846801758
    5. '   ' → logprob: -16.328889846801758
    6. '_w' → logprob: -18.328889846801758
    7. '    ' → logprob: -18.453889846801758
    8. ' ' → logprob: -18.453889846801758
    9. ' not' → logprob: -18.703889846801758
    10. 'None' → logprob: -18.828889846801758

Token 1489: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0031784253660589457
    2. 'is' → logprob: -5.753178596496582
    3. '           ' → logprob: -15.378178596496582
    4. '	is' → logprob: -16.003177642822266
    5. '            ' → logprob: -16.628177642822266
    6. ' not' → logprob: -16.878177642822266
    7. '               ' → logprob: -17.003177642822266
    8. '                   ' → logprob: -17.878177642822266
    9. '   ' → logprob: -17.878177642822266
    10. 'in' → logprob: -18.003177642822266

Token 1490: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20141655206680298
    2. ' not' → logprob: -1.7014164924621582
    3. 'Not' → logprob: -13.576416969299316
    4. 'None' → logprob: -13.701416969299316
    5. '	not' → logprob: -15.701416969299316
    6. '
' → logprob: -15.951416969299316
    7. '!' → logprob: -16.076416015625
    8. '           ' → logprob: -16.701416015625
    9. 'w' → logprob: -16.701416015625
    10. '               ' → logprob: -16.826416015625

Token 1491: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.088346359931165e-07
    2. ' None' → logprob: -14.000000953674316
    3. '_None' → logprob: -20.0
    4. '(None' → logprob: -20.125
    5. '=None' → logprob: -20.5
    6. 'none' → logprob: -21.0
    7. '_none' → logprob: -22.25
    8. '   ' → logprob: -23.5
    9. '.None' → logprob: -23.75
    10. '```' → logprob: -24.125

Token 1492: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1468893438577652
    2. ':
' → logprob: -2.5218894481658936
    3. '           ' → logprob: -3.2718894481658936
    4. ':' → logprob: -5.1468892097473145
    5. '.add' → logprob: -5.6468892097473145
    6. ' chosen' → logprob: -5.8968892097473145
    7. ',' → logprob: -6.6468892097473145
    8. ' in' → logprob: -7.0218892097473145
    9. ' .' → logprob: -7.5218892097473145
    10. '.' → logprob: -7.5218892097473145

Token 1493: '               ' (ID: 506)
  Prédit: ' chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chosen' → logprob: -0.05197060853242874
    2. 'chosen' → logprob: -3.6769707202911377
    3. '               ' → logprob: -4.176970481872559
    4. '           ' → logprob: -4.676970481872559
    5. ' selected' → logprob: -7.426970481872559
    6. '   ' → logprob: -9.926970481872559
    7. 'selected' → logprob: -10.926970481872559
    8. '                   ' → logprob: -12.051970481872559
    9. ' ' → logprob: -12.301970481872559
    10. '       ' → logprob: -12.551970481872559

Token 1494: ' chosen' (ID: 16180)
  Prédit: ' chosen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chosen' → logprob: -0.16028404235839844
    2. 'chosen' (adapté à ' chosen') → logprob: -1.9102840423583984
    3. ' selected' → logprob: -10.035284042358398
    4. 'selected' → logprob: -11.660284042358398
    5. '           ' → logprob: -12.160284042358398
    6. '   ' → logprob: -14.160284042358398
    7. '               ' → logprob: -14.410284042358398
    8. ' chose' → logprob: -15.035284042358398
    9. ' ' → logprob: -15.910284042358398
    10. '       ' → logprob: -16.4102840423584

Token 1495: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.5048530030981055e-06
    2. 'war' → logprob: -13.500001907348633
    3. '_' → logprob: -18.000001907348633
    4. 'War' → logprob: -18.375001907348633
    5. ' warriors' → logprob: -19.500001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '\' → logprob: -19.875001907348633
    8. ' _' → logprob: -20.125001907348633
    9. 'w' → logprob: -20.375001907348633
    10. '._' → logprob: -21.000001907348633

Token 1496: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.017272990196943283
    2. 'war' → logprob: -4.14227294921875
    3. '_w' → logprob: -7.14227294921875
    4. 'arr' → logprob: -8.14227294921875
    5. 'arri' → logprob: -9.14227294921875
    6. '_ar' → logprob: -11.26727294921875
    7. 'ari' → logprob: -11.51727294921875
    8. 'w' → logprob: -11.64227294921875
    9. '_arr' → logprob: -12.39227294921875
    10. '-war' → logprob: -13.51727294921875

Token 1497: 'riors' (ID: 46128)
  Prédit: 'riors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riors' → logprob: -0.008861556649208069
    2. 'iors' → logprob: -4.758861541748047
    3. 'rior' → logprob: -8.383861541748047
    4. 'ior' → logprob: -12.008861541748047
    5. 'rors' → logprob: -12.383861541748047
    6. 'ri' → logprob: -13.008861541748047
    7. 'ror' → logprob: -13.508861541748047
    8. 'riers' → logprob: -13.633861541748047
    9. 'r' → logprob: -13.758861541748047
    10. '   ' → logprob: -15.008861541748047

Token 1498: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.718606891809031e-05
    2. '.' → logprob: -9.625066757202148
    3. ' .' → logprob: -14.375066757202148
    4. '.Add' → logprob: -15.500066757202148
    5. 'add' → logprob: -16.25006675720215
    6. '   ' → logprob: -18.12506675720215
    7. '_add' → logprob: -18.25006675720215
    8. '.append' → logprob: -18.25006675720215
    9. '.
' → logprob: -18.62506675720215
    10. ')add' → logprob: -18.75006675720215

Token 1499: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16296228766441345
    2. ' w' → logprob: -1.9129623174667358
    3. '(w' → logprob: -5.912962436676025
    4. '(' → logprob: -10.662961959838867
    5. '	w' → logprob: -12.412961959838867
    6. ' (' → logprob: -13.412961959838867
    7. ' ' → logprob: -14.412961959838867
    8. '{' → logprob: -15.662961959838867
    9. '   ' → logprob: -16.037961959838867
    10. ''' → logprob: -16.412961959838867

Token 1500: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2279042899608612
    2. '           ' → logprob: -1.9779043197631836
    3. ')' → logprob: -2.7279043197631836
    4. '               ' → logprob: -9.727904319763184
    5. '       ' → logprob: -11.102904319763184
    6. '                   ' → logprob: -12.602904319763184
    7. '
' → logprob: -13.477904319763184
    8. '   ' → logprob: -13.977904319763184
    9. ')

' → logprob: -13.977904319763184
    10. ' )
' → logprob: -14.227904319763184

Token 1501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21042563021183014
    2. '```' → logprob: -2.710425615310669
    3. '               ' → logprob: -2.835425615310669
    4. '                   ' → logprob: -3.085425615310669
    5. '                       ' → logprob: -4.210425853729248
    6. '       ' → logprob: -6.585425853729248
    7. '                           ' → logprob: -7.585425853729248
    8. ' if' → logprob: -7.960425853729248
    9. '``' → logprob: -7.960425853729248
    10. '          ' → logprob: -8.08542537689209

Token 1502: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.762356209335849e-05
    2. ' if' → logprob: -10.87503719329834
    3. 'if' (adapté à ' if') → logprob: -12.25003719329834
    4. '                   ' → logprob: -12.50003719329834
    5. '               ' → logprob: -12.75003719329834
    6. '                       ' → logprob: -12.75003719329834
    7. '```' → logprob: -13.00003719329834
    8. '          ' → logprob: -13.87503719329834
    9. '                           ' → logprob: -15.00003719329834
    10. '
' → logprob: -15.00003719329834

Token 1503: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931576728820801
    2. ' c' → logprob: -0.6931576728820801
    3. '           ' → logprob: -11.568157196044922
    4. '               ' → logprob: -14.443157196044922
    5. '   ' → logprob: -15.818157196044922
    6. '                   ' → logprob: -16.318157196044922
    7. '       ' → logprob: -16.443157196044922
    8. '(c' → logprob: -16.568157196044922
    9. '            ' → logprob: -17.318157196044922
    10. '	c' → logprob: -17.443157196044922

Token 1504: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07889308780431747
    2. 'is' → logprob: -2.5788931846618652
    3. '           ' → logprob: -13.578892707824707
    4. '```' → logprob: -14.328892707824707
    5. 'not' → logprob: -14.828892707824707
    6. '               ' → logprob: -15.203892707824707
    7. '            ' → logprob: -15.203892707824707
    8. ')' → logprob: -16.328893661499023
    9. ' not' → logprob: -16.328893661499023
    10. '	is' → logprob: -17.078893661499023

Token 1505: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008617646060883999
    2. 'not' → logprob: -4.758617877960205
    3. 'None' → logprob: -13.508617401123047
    4. 'Not' → logprob: -14.008617401123047
    5. ' is' → logprob: -14.633617401123047
    6. ' None' → logprob: -14.883617401123047
    7. '_not' → logprob: -15.883617401123047
    8. '	not' → logprob: -18.133617401123047
    9. 'is' → logprob: -18.383617401123047
    10. '```' → logprob: -18.633617401123047

Token 1506: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005643534241244197
    2. ' None' → logprob: -7.5005645751953125
    3. 'not' → logprob: -11.500564575195312
    4. '_None' → logprob: -14.375564575195312
    5. '(None' → logprob: -15.125564575195312
    6. 'Not' → logprob: -15.625564575195312
    7. ' not' → logprob: -15.875564575195312
    8. '_none' → logprob: -16.750564575195312
    9. '=None' → logprob: -17.875564575195312
    10. '```' → logprob: -18.500564575195312

Token 1507: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029354790225625038
    2. ':
' → logprob: -3.9043548107147217
    3. ':' → logprob: -4.904354572296143
    4. '```' → logprob: -7.279354572296143
    5. '           ' → logprob: -7.904354572296143
    6. '):
' → logprob: -8.7793550491333
    7. ')' → logprob: -10.4043550491333
    8. ',' → logprob: -10.6543550491333
    9. '              ' → logprob: -10.7793550491333
    10. '):' → logprob: -11.1543550491333

Token 1508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010677010286599398
    2. '           ' → logprob: -6.876067638397217
    3. '              ' → logprob: -11.126068115234375
    4. '                   ' → logprob: -11.876068115234375
    5. '             ' → logprob: -12.876068115234375
    6. '            ' → logprob: -12.876068115234375
    7. '   ' → logprob: -12.876068115234375
    8. '                       ' → logprob: -13.251068115234375
    9. '       ' → logprob: -14.251068115234375
    10. 'chosen' → logprob: -14.251068115234375

Token 1509: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.02673286199569702
    2. ' chosen' → logprob: -3.776732921600342
    3. '               ' → logprob: -5.776732921600342
    4. '           ' → logprob: -7.901732921600342
    5. '                   ' → logprob: -12.401732444763184
    6. 'selected' → logprob: -12.526732444763184
    7. '   ' → logprob: -13.651732444763184
    8. '             ' → logprob: -13.776732444763184
    9. '              ' → logprob: -13.776732444763184
    10. '            ' → logprob: -14.651732444763184

Token 1510: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -9.841743303695694e-05
    2. 'cler' → logprob: -9.25009822845459
    3. '_c' → logprob: -13.50009822845459
    4. '_cre' → logprob: -15.12509822845459
    5. '_' → logprob: -15.37509822845459
    6. '_w' → logprob: -15.62509822845459
    7. '_clear' → logprob: -16.625099182128906
    8. '\' → logprob: -16.875099182128906
    9. '_pr' → logprob: -17.750099182128906
    10. '_class' → logprob: -17.750099182128906

Token 1511: 'er' (ID: 259)
  Prédit: 'ics'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.14313560724258423
    2. 'er' → logprob: -2.0181355476379395
    3. 'ic' → logprob: -8.143136024475098
    4. 'ific' → logprob: -9.393136024475098
    5. 'rics' → logprob: -10.518136024475098
    6. 'icis' → logprob: -11.518136024475098
    7. '   ' → logprob: -11.643136024475098
    8. 'ir' → logprob: -12.268136024475098
    9. 'eris' → logprob: -12.268136024475098
    10. '```' → logprob: -12.268136024475098

Token 1512: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -2.4987974029500037e-05
    2. 'ic' → logprob: -10.625024795532227
    3. '_' → logprob: -15.250024795532227
    4. 'cs' → logprob: -15.625024795532227
    5. 'icts' → logprob: -16.750024795532227
    6. '```' → logprob: -16.750024795532227
    7. '[' → logprob: -17.750024795532227
    8. '   ' → logprob: -17.875024795532227
    9. 'c' → logprob: -18.625024795532227
    10. '__' → logprob: -18.625024795532227

Token 1513: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.1160349458805285e-05
    2. '.' → logprob: -12.125011444091797
    3. 'add' → logprob: -12.250011444091797
    4. '           ' → logprob: -14.250011444091797
    5. ' .' → logprob: -15.875011444091797
    6. '_add' → logprob: -17.875011444091797
    7. '.Add' → logprob: -18.500011444091797
    8. '       ' → logprob: -18.750011444091797
    9. '               ' → logprob: -18.750011444091797
    10. '.append' → logprob: -19.125011444091797

Token 1514: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.704273118884885e-07
    2. 'c' → logprob: -14.375000953674316
    3. ' (' → logprob: -17.625
    4. '{' → logprob: -17.875
    5. ' c' → logprob: -18.875
    6. '[c' → logprob: -19.375
    7. '(
' → logprob: -19.75
    8. '(C' → logprob: -20.0
    9. '©' → logprob: -20.375
    10. '	c' → logprob: -20.75

Token 1515: ')
' (ID: 446)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.014648552983999252
    2. '               ' → logprob: -4.6396484375
    3. '           ' → logprob: -5.5146484375
    4. 'add' → logprob: -8.0146484375
    5. '.' → logprob: -8.0146484375
    6. '                   ' → logprob: -9.7646484375
    7. '(add' → logprob: -10.0146484375
    8. '.append' → logprob: -10.7646484375
    9. '.Add' → logprob: -11.5146484375
    10. ')' → logprob: -11.5146484375

Token 1516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26299822330474854
    2. '               ' → logprob: -1.5129982233047485
    3. '```' → logprob: -4.762998104095459
    4. ' if' → logprob: -6.262998104095459
    5. '``' → logprob: -8.262998580932617
    6. '                   ' → logprob: -9.012998580932617
    7. 'if' → logprob: -9.887998580932617
    8. '          ' → logprob: -10.637998580932617
    9. '                       ' → logprob: -10.637998580932617
    10. '
' → logprob: -10.762998580932617

Token 1517: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012801689095795155
    2. ' if' → logprob: -4.762801647186279
    3. 'if' (adapté à ' if') → logprob: -5.512801647186279
    4. '               ' → logprob: -9.387802124023438
    5. '```' → logprob: -10.137802124023438
    6. '                   ' → logprob: -12.012802124023438
    7. '          ' → logprob: -12.762802124023438
    8. '       ' → logprob: -12.887802124023438
    9. '            ' → logprob: -13.012802124023438
    10. '``' → logprob: -13.262802124023438

Token 1518: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.006716913543641567
    2. 'm' → logprob: -5.006716728210449
    3. '   ' → logprob: -13.75671672821045
    4. '	m' → logprob: -16.131717681884766
    5. '    ' → logprob: -16.506717681884766
    6. ' ' → logprob: -16.506717681884766
    7. ' ' → logprob: -16.506717681884766
    8. '(m' → logprob: -17.006717681884766
    9. ' not' → logprob: -17.381717681884766
    10. '```' → logprob: -17.631717681884766

Token 1519: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0036031559575349092
    2. 'is' → logprob: -5.628602981567383
    3. '           ' → logprob: -13.753602981567383
    4. '            ' → logprob: -14.503602981567383
    5. '               ' → logprob: -14.628602981567383
    6. '```' → logprob: -14.753602981567383
    7. '                ' → logprob: -16.128602981567383
    8. 'if' → logprob: -16.503602981567383
    9. '        ' → logprob: -16.503602981567383
    10. '          ' → logprob: -16.878602981567383

Token 1520: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006717863027006388
    2. 'not' → logprob: -5.006717681884766
    3. 'None' → logprob: -13.631717681884766
    4. 'Not' → logprob: -14.381717681884766
    5. ' None' → logprob: -15.131717681884766
    6. '_not' → logprob: -15.256717681884766
    7. ' is' → logprob: -16.381717681884766
    8. ' ' → logprob: -16.756717681884766
    9. '	not' → logprob: -16.881717681884766
    10. '[' → logprob: -17.256717681884766

Token 1521: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6085212230682373
    2. 'not' → logprob: -0.8585212230682373
    3. ' not' → logprob: -3.6085212230682373
    4. 'Not' → logprob: -5.483521461486816
    5. ' None' → logprob: -7.233521461486816
    6. '_not' → logprob: -9.733521461486816
    7. '(None' → logprob: -12.108521461486816
    8. 'm' → logprob: -12.358521461486816
    9. '=None' → logprob: -12.358521461486816
    10. '_None' → logprob: -12.483521461486816

Token 1522: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47912031412124634
    2. '.add' → logprob: -0.9791203141212463
    3. '.' → logprob: -6.604120254516602
    4. ':
' → logprob: -6.729120254516602
    5. '           ' → logprob: -6.854120254516602
    6. ':' → logprob: -7.354120254516602
    7. '```' → logprob: -8.604120254516602
    8. '                   ' → logprob: -9.229120254516602
    9. '.Add' → logprob: -9.354120254516602
    10. '{
' → logprob: -9.729120254516602

Token 1523: '               ' (ID: 506)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.6111243367195129
    2. '               ' → logprob: -0.8611243367195129
    3. ' chosen' → logprob: -3.486124277114868
    4. '           ' → logprob: -5.736124515533447
    5. 'selected' → logprob: -8.611124038696289
    6. '   ' → logprob: -8.736124038696289
    7. '                   ' → logprob: -8.986124038696289
    8. '```' → logprob: -9.236124038696289
    9. '       ' → logprob: -10.111124038696289
    10. '              ' → logprob: -10.361124038696289

Token 1524: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.011082957498729229
    2. ' chosen' → logprob: -4.511083126068115
    3. 'selected' → logprob: -11.261082649230957
    4. '           ' → logprob: -11.261082649230957
    5. '               ' → logprob: -12.261082649230957
    6. '       ' → logprob: -12.761082649230957
    7. '   ' → logprob: -13.386082649230957
    8. ' selected' → logprob: -16.261083602905273
    9. '                   ' → logprob: -17.511083602905273
    10. 'Chosen' → logprob: -17.636083602905273

Token 1525: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00010270876373397186
    2. 'mages' → logprob: -9.250102996826172
    3. '_' → logprob: -12.375102996826172
    4. 'm' → logprob: -13.000102996826172
    5. 'M' → logprob: -17.500102996826172
    6. '\' → logprob: -17.500102996826172
    7. '_g' → logprob: -18.500102996826172
    8. '   ' → logprob: -18.500102996826172
    9. '_w' → logprob: -18.500102996826172
    10. 's' → logprob: -18.500102996826172

Token 1526: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.00874233152717352
    2. 'mages' → logprob: -5.258742332458496
    3. '_' → logprob: -5.883742332458496
    4. 's' → logprob: -7.633742332458496
    5. '_w' → logprob: -9.633742332458496
    6. 'ges' → logprob: -9.633742332458496
    7. 'age' → logprob: -10.633742332458496
    8. '_s' → logprob: -11.383742332458496
    9. '_m' → logprob: -11.883742332458496
    10. 'ag' → logprob: -12.133742332458496

Token 1527: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00012415809032972902
    2. '.' → logprob: -9.000123977661133
    3. 'add' → logprob: -15.000123977661133
    4. ' .' → logprob: -15.000123977661133
    5. '           ' → logprob: -16.750123977661133
    6. '.Add' → logprob: -17.375123977661133
    7. '_add' → logprob: -18.250123977661133
    8. '.append' → logprob: -19.375123977661133
    9. '               ' → logprob: -19.625123977661133
    10. '   ' → logprob: -19.750123977661133

Token 1528: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: 0.0
    2. 'm' → logprob: -18.0
    3. ' (' → logprob: -20.75
    4. '(M' → logprob: -22.375
    5. '	m' → logprob: -23.0
    6. ' m' → logprob: -23.125
    7. '[m' → logprob: -23.375
    8. '{' → logprob: -24.375
    9. '((' → logprob: -24.75
    10. '(s' → logprob: -25.0

Token 1529: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.258530855178833
    2. ')' → logprob: -2.258530855178833
    3. '.add' → logprob: -2.383530855178833
    4. ')
' → logprob: -4.883530616760254
    5. '       ' → logprob: -5.008530616760254
    6. '               ' → logprob: -5.383530616760254
    7. '```' → logprob: -5.883530616760254
    8. '.' → logprob: -6.133530616760254
    9. '<|end|>' → logprob: -6.383530616760254
    10. '()' → logprob: -6.508530616760254

Token 1530: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06256112456321716
    2. '           ' → logprob: -2.81256103515625
    3. 'max' → logprob: -7.93756103515625
    4. '```' → logprob: -8.81256103515625
    5. '
' → logprob: -9.56256103515625
    6. '   ' → logprob: -11.81256103515625
    7. ' max' → logprob: -12.31256103515625
    8. '(max' → logprob: -13.68756103515625
    9. '[max' → logprob: -14.06256103515625
    10. ',max' → logprob: -14.18756103515625

Token 1531: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.12783215939998627
    2. '           ' → logprob: -2.1278321743011475
    3. '       ' → logprob: -7.127831935882568
    4. ' max' → logprob: -9.627832412719727
    5. '
' → logprob: -11.002832412719727
    6. '   ' → logprob: -11.627832412719727
    7. '               ' → logprob: -12.752832412719727
    8. '```' → logprob: -12.752832412719727
    9. '	max' → logprob: -13.627832412719727
    10. '                   ' → logprob: -14.502832412719727

Token 1532: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.1002098023891449
    2. '_part' → logprob: -2.3502097129821777
    3. '_parts' → logprob: -13.850210189819336
    4. '\' → logprob: -14.350210189819336
    5. '_' → logprob: -14.350210189819336
    6. 'count' → logprob: -14.975210189819336
    7. '_party' → logprob: -14.975210189819336
    8. '_counts' → logprob: -16.725210189819336
    9. 'part' → logprob: -16.850210189819336
    10. '_p' → logprob: -16.975210189819336

Token 1533: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2520640790462494
    2. ' +=' → logprob: -1.5020641088485718
    3. '=' → logprob: -9.252063751220703
    4. '+' → logprob: -10.377063751220703
    5. ']+=' → logprob: -12.377063751220703
    6. ' =' → logprob: -13.252063751220703
    7. '   ' → logprob: -14.002063751220703
    8. '    ' → logprob: -15.252063751220703
    9. '+="' → logprob: -15.627063751220703
    10. '+='' → logprob: -15.877063751220703

Token 1534: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -21.375
    5. '+' → logprob: -21.875
    6. '１' → logprob: -22.75
    7. '۱' → logprob: -24.25
    8. '`' → logprob: -24.625
    9. '100' → logprob: -25.125
    10. '10' → logprob: -25.5

Token 1535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '１' → logprob: -23.75
    4. '   ' → logprob: -23.875
    5. '+' → logprob: -23.875
    6. '```' → logprob: -24.25
    7. '
' → logprob: -25.125
    8. '۱' → logprob: -26.5
    9. '0' → logprob: -26.75
    10. '2' → logprob: -26.75

Token 1536: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12881450355052948
    2. '
' → logprob: -2.128814458847046
    3. '        
' → logprob: -7.378814697265625
    4. '```' → logprob: -7.378814697265625
    5. '<|end|>' → logprob: -7.753814697265625
    6. 'print' → logprob: -9.003814697265625
    7. '   ' → logprob: -10.003814697265625
    8. '    
' → logprob: -11.253814697265625
    9. '
' → logprob: -11.753814697265625
    10. '  
' → logprob: -12.628814697265625

Token 1537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16399343311786652
    2. '
' → logprob: -2.0389933586120605
    3. '<|end|>' → logprob: -4.6639933586120605
    4. '   ' → logprob: -4.9139933586120605
    5. '        
' → logprob: -5.6639933586120605
    6. '    
' → logprob: -7.5389933586120605
    7. 'print' → logprob: -9.663993835449219
    8. '  
' → logprob: -10.038993835449219
    9. '```' → logprob: -10.038993835449219
    10. '<|end|>' → logprob: -10.038993835449219

Token 1538: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2015182077884674
    2. '       ' → logprob: -1.701518177986145
    3. '   ' → logprob: -9.701518058776855
    4. '```' → logprob: -10.326518058776855
    5. ' print' → logprob: -11.576518058776855
    6. '
' → logprob: -13.826518058776855
    7. '        
' → logprob: -15.201518058776855
    8. '``' → logprob: -16.076519012451172
    9. 'printf' → logprob: -16.576519012451172
    10. '#print' → logprob: -17.201519012451172

Token 1539: ' Check' (ID: 6208)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008638089522719383
    2. '       ' → logprob: -4.75863790512085
    3. ' print' → logprob: -11.258638381958008
    4. '   ' → logprob: -11.508638381958008
    5. '```' → logprob: -14.258638381958008
    6. '
' → logprob: -17.383638381958008
    7. '``' → logprob: -18.508638381958008
    8. '	print' → logprob: -18.758638381958008
    9. '        
' → logprob: -18.883638381958008
    10. '#print' → logprob: -19.633638381958008

Token 1540: ' how' (ID: 1495)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43355828523635864
    2. '       ' → logprob: -1.1835582256317139
    3. 'if' → logprob: -3.683558225631714
    4. '
' → logprob: -4.683558464050293
    5. 'max' → logprob: -5.558558464050293
    6. ' if' → logprob: -5.683558464050293
    7. '(max' → logprob: -6.308558464050293
    8. '   ' → logprob: -6.433558464050293
    9. '```' → logprob: -8.683558464050293
    10. ' print' → logprob: -8.683558464050293

Token 1541: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.1882515251636505
    2. 'many' → logprob: -2.438251495361328
    3. '       ' → logprob: -2.563251495361328
    4. ' to' → logprob: -5.563251495361328
    5. '   ' → logprob: -7.063251495361328
    6. 'to' → logprob: -7.313251495361328
    7. '#' → logprob: -7.563251495361328
    8. ' missing' → logprob: -8.438251495361328
    9. '_many' → logprob: -8.438251495361328
    10. 'print' → logprob: -8.438251495361328

Token 1542: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6187474131584167
    2. 'print' → logprob: -1.6187474727630615
    3. 'missing' → logprob: -2.6187474727630615
    4. '   ' → logprob: -3.2437474727630615
    5. 'more' → logprob: -3.6187474727630615
    6. ' print' → logprob: -3.8687474727630615
    7. ' missing' → logprob: -3.8687474727630615
    8. ' parties' → logprob: -4.493747234344482
    9. ' more' → logprob: -4.743747234344482
    10. '       ' → logprob: -5.118747234344482

Token 1543: ' missing' (ID: 12486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3397356867790222
    2. 'print' → logprob: -1.464735746383667
    3. ' can' → logprob: -4.089735507965088
    4. ' that' → logprob: -4.714735507965088
    5. ' print' → logprob: -4.839735507965088
    6. 'can' → logprob: -5.089735507965088
    7. 'with' → logprob: -5.214735507965088
    8. 'possible' → logprob: -5.839735507965088
    9. 'that' → logprob: -6.339735507965088
    10. ' with' → logprob: -6.464735507965088

Token 1544: ' warrior' (ID: 76541)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.12509945034980774
    2. '_' → logprob: -2.5000994205474854
    3. 'war' → logprob: -3.8750994205474854
    4. ' =' → logprob: -4.7500996589660645
    5. '_m' → logprob: -6.3750996589660645
    6. '   ' → logprob: -6.8750996589660645
    7. '=' → logprob: -7.5000996589660645
    8. 'w' → logprob: -7.7500996589660645
    9. '_without' → logprob: -8.125099182128906
    10. '_missing' → logprob: -8.375099182128906

Token 1545: ',' (ID: 11)
  Prédit: '_missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_missing' → logprob: -0.1767992526292801
    2. ' =' → logprob: -3.1767992973327637
    3. '_count' → logprob: -3.6767992973327637
    4. '       ' → logprob: -4.051799297332764
    5. 'missing' → logprob: -4.176799297332764
    6. '
' → logprob: -4.426799297332764
    7. '_no' → logprob: -4.426799297332764
    8. 's' → logprob: -4.676799297332764
    9. '   ' → logprob: -4.926799297332764
    10. '_' → logprob: -5.551799297332764

Token 1546: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.1521887332201004
    2. ' cler' → logprob: -2.277188777923584
    3. '#' → logprob: -3.402188777923584
    4. 'cl' → logprob: -5.652188777923584
    5. ' #' → logprob: -6.902188777923584
    6. '       ' → logprob: -8.152188301086426
    7. '_cl' → logprob: -9.402188301086426
    8. '
' → logprob: -9.777188301086426
    9. 'clar' → logprob: -9.902188301086426
    10. '```' → logprob: -10.152188301086426

Token 1547: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00033713103039190173
    2. 'ics' → logprob: -8.000337600708008
    3. '#' → logprob: -14.750337600708008
    4. '
' → logprob: -15.500337600708008
    5. '   ' → logprob: -15.625337600708008
    6. 'c' → logprob: -15.625337600708008
    7. '```' → logprob: -15.750337600708008
    8. 'ical' → logprob: -16.125337600708008
    9. '

' → logprob: -16.750337600708008
    10. '  ' → logprob: -17.000337600708008

Token 1548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5494972467422485
    2. '_count' → logprob: -1.5494972467422485
    3. 's' → logprob: -2.424497127532959
    4. ' =' → logprob: -2.799497127532959
    5. '_missing' → logprob: -4.174497127532959
    6. '=' → logprob: -4.424497127532959
    7. 'count' → logprob: -4.674497127532959
    8. '_or' → logprob: -5.424497127532959
    9. '_counts' → logprob: -5.424497127532959
    10. '   ' → logprob: -6.174497127532959

Token 1549: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.16599509119987488
    2. '#' → logprob: -2.4159951210021973
    3. ' mage' → logprob: -3.5409951210021973
    4. ' or' → logprob: -4.165995121002197
    5. 'or' → logprob: -4.540995121002197
    6. 'm' → logprob: -5.290995121002197
    7. '       ' → logprob: -6.290995121002197
    8. ' #' → logprob: -7.290995121002197
    9. '
' → logprob: -8.165994644165039
    10. '   ' → logprob: -8.665994644165039

Token 1550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6068883538246155
    2. 'missing' → logprob: -0.8568883538246155
    3. 'miss' → logprob: -4.731888294219971
    4. 'without' → logprob: -4.981888294219971
    5. ' missing' → logprob: -5.356888294219971
    6. 'no' → logprob: -5.606888294219971
    7. '   ' → logprob: -6.106888294219971
    8. 'count' → logprob: -6.356888294219971
    9. '
' → logprob: -7.106888294219971
    10. ',' → logprob: -7.981888294219971

Token 1551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009777456521987915
    2. '        
' → logprob: -6.009777545928955
    3. '
' → logprob: -6.134777545928955
    4. 'missing' → logprob: -6.134777545928955
    5. ' missing' → logprob: -6.259777545928955
    6. '_missing' → logprob: -7.509777545928955
    7. ',' → logprob: -8.259777069091797
    8. 'count' → logprob: -9.884777069091797
    9. '<|end|>' → logprob: -10.759777069091797
    10. ' counts' → logprob: -11.009777069091797

Token 1552: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' (adapté à ' missing') → logprob: -0.30326592922210693
    2. '       ' → logprob: -1.553265929222107
    3. ' missing' → logprob: -3.8032660484313965
    4. 'no' → logprob: -4.6782660484313965
    5. 'miss' → logprob: -4.8032660484313965
    6. 'count' → logprob: -5.1782660484313965
    7. 'without' → logprob: -6.6782660484313965
    8. '   ' → logprob: -7.1782660484313965
    9. 'war' → logprob: -7.3032660484313965
    10. 'num' → logprob: -7.9282660484313965

Token 1553: '_W' (ID: 5493)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.06094285100698471
    2. '_counts' → logprob: -3.6859428882598877
    3. '_without' → logprob: -3.9359428882598877
    4. '_no' → logprob: -4.560942649841309
    5. '_count' → logprob: -5.810942649841309
    6. '_' → logprob: -7.560942649841309
    7. '_part' → logprob: -8.310942649841309
    8. '_wc' → logprob: -9.435942649841309
    9. '_with' → logprob: -10.185942649841309
    10. '_per' → logprob: -10.560942649841309

Token 1554: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.40551942586898804
    2. '_counts' → logprob: -1.9055194854736328
    3. ' =' → logprob: -2.030519485473633
    4. '=' → logprob: -3.780519485473633
    5. 's' → logprob: -4.155519485473633
    6. '_part' → logprob: -4.905519485473633
    7. '_cnt' → logprob: -6.030519485473633
    8. '_' → logprob: -6.155519485473633
    9. 'count' → logprob: -7.655519485473633
    10. '=_' → logprob: -7.780519485473633

Token 1555: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5526561737060547
    2. '0' → logprob: -0.9276561737060547
    3. 'chosen' → logprob: -4.177656173706055
    4. 'max' → logprob: -5.052656173706055
    5. 'part' → logprob: -5.552656173706055
    6. 'NW' → logprob: -6.552656173706055
    7. 'len' → logprob: -6.677656173706055
    8. ' sum' → logprob: -8.427656173706055
    9. '[' → logprob: -9.052656173706055
    10. 'min' → logprob: -9.677656173706055

Token 1556: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2314220368862152
    2. '0' → logprob: -1.7314220666885376
    3. 'chosen' → logprob: -3.856421947479248
    4. 'max' → logprob: -5.481421947479248
    5. 'NW' → logprob: -5.856421947479248
    6. 'len' → logprob: -7.356421947479248
    7. 'part' → logprob: -8.231422424316406
    8. 'selected' → logprob: -9.106422424316406
    9. 'N' → logprob: -9.606422424316406
    10. 'min' → logprob: -9.981422424316406

Token 1557: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08295362442731857
    2. 'for' → logprob: -2.832953691482544
    3. ' =' → logprob: -3.957953691482544
    4. ' for' → logprob: -6.957953453063965
    5. '
' → logprob: -7.832953453063965
    6. '       ' → logprob: -9.082953453063965
    7. '=
' → logprob: -9.457953453063965
    8. '=[]
' → logprob: -9.957953453063965
    9. '   ' → logprob: -11.332953453063965
    10. '0' → logprob: -11.332953453063965

Token 1558: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049868930131196976
    2. ' for' → logprob: -3.6748688220977783
    3. '=' → logprob: -4.674869060516357
    4. '<|end|>' → logprob: -5.049869060516357
    5. '
' → logprob: -5.299869060516357
    6. '       ' → logprob: -6.799869060516357
    7. ' =' → logprob: -7.924869060516357
    8. 'if' → logprob: -8.5498685836792
    9. '0' → logprob: -8.6748685836792
    10. '```' → logprob: -9.1748685836792

Token 1559: ' missing' (ID: 12486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059690073132514954
    2. 'missing' (adapté à ' missing') → logprob: -2.934689998626709
    3. 'chosen' → logprob: -5.434689998626709
    4. '       ' → logprob: -8.934690475463867
    5. '
' → logprob: -9.059690475463867
    6. '   ' → logprob: -9.809690475463867
    7. ' for' → logprob: -10.809690475463867
    8. 'W' → logprob: -10.809690475463867
    9. 'selected' → logprob: -10.934690475463867
    10. '#' → logprob: -11.059690475463867

Token 1560: '_C' (ID: 1720)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24825187027454376
    2. '_W' → logprob: -1.7482519149780273
    3. '_H' → logprob: -4.373251914978027
    4. '_part' → logprob: -4.498251914978027
    5. '_w' → logprob: -4.873251914978027
    6. '_M' → logprob: -6.123251914978027
    7. '_P' → logprob: -6.498251914978027
    8. 'W' → logprob: -6.498251914978027
    9. 'part' → logprob: -6.498251914978027
    10. '_parts' → logprob: -6.623251914978027

Token 1561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858873412013054
    2. ' =' → logprob: -3.048588752746582
    3. '=
' → logprob: -14.423588752746582
    4. '+=' → logprob: -14.923588752746582
    5. ',' → logprob: -15.298588752746582
    6. ' +=' → logprob: -16.173587799072266
    7. 'for' → logprob: -16.423587799072266
    8. ' =
' → logprob: -16.798587799072266
    9. '<|end|>' → logprob: -17.048587799072266
    10. '   ' → logprob: -17.673587799072266

Token 1562: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029995047952979803
    2. 'sum' → logprob: -8.750300407409668
    3. ' ' → logprob: -9.250300407409668
    4. 'max' → logprob: -10.125300407409668
    5. 'part' → logprob: -13.250300407409668
    6. ' sum' → logprob: -14.250300407409668
    7. 'len' → logprob: -14.625300407409668
    8. 'chosen' → logprob: -14.750300407409668
    9. '1' → logprob: -15.062800407409668
    10. 'for' → logprob: -15.250300407409668

Token 1563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. 'sum' → logprob: -11.625017166137695
    3. 'max' → logprob: -12.000017166137695
    4. 'for' → logprob: -14.500017166137695
    5. ' ' → logprob: -15.000017166137695
    6. 'part' → logprob: -15.500017166137695
    7. '1' → logprob: -15.500017166137695
    8. 'chosen' → logprob: -15.625017166137695
    9. 'len' → logprob: -16.000017166137695
    10. 'p' → logprob: -16.187517166137695

Token 1564: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3639630973339081
    2. '       ' → logprob: -1.7389631271362305
    3. 'missing' → logprob: -2.4889631271362305
    4. '
' → logprob: -4.3639631271362305
    5. ' for' → logprob: -4.4889631271362305
    6. ' =' → logprob: -4.8639631271362305
    7. '=' → logprob: -5.1139631271362305
    8. ' missing' → logprob: -6.3639631271362305
    9. '```' → logprob: -6.6139631271362305
    10. '<|end|>' → logprob: -6.6139631271362305

Token 1565: '       ' (ID: 309)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.44644489884376526
    2. 'for' → logprob: -1.6964448690414429
    3. '       ' → logprob: -2.0714449882507324
    4. ' missing' → logprob: -4.196444988250732
    5. ' for' → logprob: -4.571444988250732
    6. '```' → logprob: -4.696444988250732
    7. 'm' → logprob: -5.446444988250732
    8. '
' → logprob: -5.571444988250732
    9. '   ' → logprob: -6.071444988250732
    10. '_missing' → logprob: -7.446444988250732

Token 1566: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' (adapté à ' missing') → logprob: -0.00046630011638626456
    2. 'for' → logprob: -8.250466346740723
    3. '       ' → logprob: -8.750466346740723
    4. ' missing' → logprob: -11.500466346740723
    5. '   ' → logprob: -11.625466346740723
    6. '
' → logprob: -11.625466346740723
    7. '```' → logprob: -11.875466346740723
    8. 'miss' → logprob: -12.125466346740723
    9. '           ' → logprob: -13.125466346740723
    10. '_missing' → logprob: -14.000466346740723

Token 1567: '_M' (ID: 2372)
  Prédit: '_W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.03810368850827217
    2. '_M' → logprob: -3.2881035804748535
    3. '_w' → logprob: -10.288104057312012
    4. 'W' → logprob: -11.163104057312012
    5. '```' → logprob: -12.413104057312012
    6. '_P' → logprob: -12.538104057312012
    7. '_m' → logprob: -12.913104057312012
    8. '_' → logprob: -13.913104057312012
    9. '_V' → logprob: -14.538104057312012
    10. 'M' → logprob: -14.913104057312012

Token 1568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. '=
' → logprob: -14.923587799072266
    4. ' =
' → logprob: -16.923587799072266
    5. ' +=' → logprob: -17.673587799072266
    6. '+=' → logprob: -17.923587799072266
    7. ' ' → logprob: -19.298587799072266
    8. '=

' → logprob: -19.298587799072266
    9. 'for' → logprob: -19.423587799072266
    10. '   ' → logprob: -19.548587799072266

Token 1569: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021860685665160418
    2. ' ' → logprob: -6.127186298370361
    3. '   ' → logprob: -15.127185821533203
    4. '1' → logprob: -15.877185821533203
    5. '```' → logprob: -16.002185821533203
    6. 'max' → logprob: -16.127185821533203
    7. '=' → logprob: -16.377185821533203
    8. '
' → logprob: -17.002185821533203
    9. '  ' → logprob: -17.064685821533203
    10. '       ' → logprob: -17.752185821533203

Token 1570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'max' → logprob: -15.62500286102295
    4. '=' → logprob: -17.625003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '```' → logprob: -17.750003814697266
    7. '1' → logprob: -18.250003814697266
    8. 'len' → logprob: -18.500003814697266
    9. '{' → logprob: -18.937503814697266
    10. '
' → logprob: -19.000003814697266

Token 1571: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43554168939590454
    2. 'for' → logprob: -1.0605416297912598
    3. ' for' → logprob: -5.06054162979126
    4. '   ' → logprob: -8.685542106628418
    5. '
' → logprob: -8.810542106628418
    6. '        
' → logprob: -9.435542106628418
    7. '<|end|>' → logprob: -9.810542106628418
    8. '	for' → logprob: -12.185542106628418
    9. ' ' → logprob: -12.935542106628418
    10. '\' → logprob: -13.310542106628418

Token 1572: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7506698369979858
    2. '       ' → logprob: -1.2506698369979858
    3. '
' → logprob: -1.6256698369979858
    4. ' for' → logprob: -3.2506699562072754
    5. '        
' → logprob: -6.125669956207275
    6. '<|end|>' → logprob: -6.125669956207275
    7. '   ' → logprob: -7.375669956207275
    8. '  
' → logprob: -8.250669479370117
    9. '	for' → logprob: -8.500669479370117
    10. '```' → logprob: -8.750669479370117

Token 1573: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004170052707195282
    2. '       ' → logprob: -5.504169940948486
    3. ' for' → logprob: -9.379170417785645
    4. '
' → logprob: -12.629170417785645
    5. '	for' → logprob: -13.504170417785645
    6. '```' → logprob: -13.629170417785645
    7. '   ' → logprob: -14.254170417785645
    8. '        
' → logprob: -14.754170417785645
    9. '``' → logprob: -16.379169464111328
    10. '           ' → logprob: -18.129169464111328

Token 1574: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.723352049040841e-06
    2. '       ' → logprob: -12.375004768371582
    3. ' for' → logprob: -15.500004768371582
    4. '
' → logprob: -16.250003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '```' → logprob: -17.000003814697266
    7. '        
' → logprob: -18.625003814697266
    8. '#' → logprob: -19.500003814697266
    9. 'from' → logprob: -19.500003814697266
    10. '	for' → logprob: -19.750003814697266

Token 1575: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20296736061573029
    2. '=' → logprob: -2.202967405319214
    3. ' =' → logprob: -3.327967405319214
    4. ' for' → logprob: -3.702967405319214
    5. '       ' → logprob: -4.702967166900635
    6. '=
' → logprob: -7.077967166900635
    7. '           ' → logprob: -7.077967166900635
    8. '   ' → logprob: -7.702967166900635
    9. '#' → logprob: -8.327967643737793
    10. '```' → logprob: -8.702967643737793

Token 1576: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14354164898395538
    2. ' for' → logprob: -2.3935415744781494
    3. '       ' → logprob: -3.2685415744781494
    4. 'chosen' → logprob: -6.3935418128967285
    5. ' chosen' → logprob: -6.8935418128967285
    6. '           ' → logprob: -7.0185418128967285
    7. '
' → logprob: -8.14354133605957
    8. '   ' → logprob: -8.89354133605957
    9. '```' → logprob: -9.14354133605957
    10. 'selected' → logprob: -9.64354133605957

Token 1577: ' have' (ID: 679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07770591229200363
    2. '
' → logprob: -3.7027058601379395
    3. ' for' → logprob: -4.0777058601379395
    4. 'chosen' → logprob: -4.5777058601379395
    5. 'have' → logprob: -4.7027058601379395
    6. '       ' → logprob: -5.4527058601379395
    7. '   ' → logprob: -6.0777058601379395
    8. '```' → logprob: -6.4527058601379395
    9. '           ' → logprob: -6.9527058601379395
    10. '#' → logprob: -7.3277058601379395

Token 1578: ' direct' (ID: 2823)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023207388818264008
    2. ' for' → logprob: -4.148207187652588
    3. '
' → logprob: -5.148207187652588
    4. '#' → logprob: -7.398207187652588
    5. '       ' → logprob: -8.148207664489746
    6. 'chosen' → logprob: -8.523207664489746
    7. '```' → logprob: -9.273207664489746
    8. '           ' → logprob: -10.273207664489746
    9. '   ' → logprob: -10.523207664489746
    10. 'selected' → logprob: -11.273207664489746

Token 1579: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0943665504455566
    2. 'access' → logprob: -1.7193665504455566
    3. 'part' → logprob: -1.9693665504455566
    4. ' access' → logprob: -2.7193665504455566
    5. 'count' → logprob: -3.0943665504455566
    6. '_count' → logprob: -3.0943665504455566
    7. '_access' → logprob: -3.8443665504455566
    8. 'code' → logprob: -3.8443665504455566
    9. ' for' → logprob: -4.094366550445557
    10. '_lines' → logprob: -4.219366550445557

Token 1580: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20592108368873596
    2. '
' → logprob: -2.830921173095703
    3. 'of' → logprob: -2.830921173095703
    4. ' for' → logprob: -3.080921173095703
    5. ' of' → logprob: -4.080921173095703
    6. '       ' → logprob: -6.455921173095703
    7. 'to' → logprob: -7.330921173095703
    8. ' to' → logprob: -7.830921173095703
    9. ':
' → logprob: -7.955921173095703
    10. '#' → logprob: -8.080921173095703

Token 1581: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.4675511121749878
    2. 'chosen' → logprob: -1.0925511121749878
    3. 'for' → logprob: -4.217551231384277
    4. 'p' → logprob: -4.342551231384277
    5. '```' → logprob: -6.217551231384277
    6. 'party' → logprob: -6.467551231384277
    7. 'selected' → logprob: -6.842551231384277
    8. ' chosen' → logprob: -6.967551231384277
    9. ' p' → logprob: -6.967551231384277
    10. ' parties' → logprob: -7.217551231384277

Token 1582: ' chosen' (ID: 16180)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36611196398735046
    2. '       ' → logprob: -1.8661119937896729
    3. 'for' → logprob: -2.616111993789673
    4. ' for' → logprob: -3.241111993789673
    5. ',' → logprob: -4.866111755371094
    6. 'chosen' → logprob: -5.366111755371094
    7. '        
' → logprob: -5.616111755371094
    8. ' but' → logprob: -5.741111755371094
    9. '```' → logprob: -5.991111755371094
    10. ' and' → logprob: -5.991111755371094

Token 1583: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7310310006141663
    2. '       ' → logprob: -1.1060309410095215
    3. ' for' → logprob: -2.2310309410095215
    4. 'for' → logprob: -2.9810309410095215
    5. '#' → logprob: -4.4810309410095215
    6. '<|end|>' → logprob: -5.1060309410095215
    7. '        
' → logprob: -5.9810309410095215
    8. '```' → logprob: -6.4810309410095215
    9. '   ' → logprob: -6.7310309410095215
    10. ',' → logprob: -7.1060309410095215

Token 1584: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6116645336151123
    2. '       ' → logprob: -1.3616645336151123
    3. '#' → logprob: -1.8616645336151123
    4. ' for' → logprob: -3.9866645336151123
    5. 'continue' → logprob: -3.9866645336151123
    6. '   ' → logprob: -6.611664772033691
    7. '```' → logprob: -6.736664772033691
    8. 'pass' → logprob: -6.736664772033691
    9. '
' → logprob: -7.111664772033691
    10. '<|end|>' → logprob: -7.111664772033691

Token 1585: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14672444760799408
    2. 'for' → logprob: -2.5217244625091553
    3. '       ' → logprob: -3.7717244625091553
    4. 'pass' → logprob: -4.021724224090576
    5. '           ' → logprob: -4.396724224090576
    6. '
' → logprob: -6.646724224090576
    7. 'chosen' → logprob: -7.521724224090576
    8. 'continue' → logprob: -7.771724224090576
    9. '   ' → logprob: -8.646724700927734
    10. 'idx' → logprob: -9.396724700927734

Token 1586: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38642993569374084
    2. '#' → logprob: -2.511430025100708
    3. '           ' → logprob: -2.636430025100708
    4. 'for' → logprob: -2.886430025100708
    5. 'continue' → logprob: -3.386430025100708
    6. 'have' → logprob: -4.636429786682129
    7. ' for' → logprob: -4.761429786682129
    8. '
' → logprob: -4.886429786682129
    9. '=' → logprob: -4.886429786682129
    10. ' have' → logprob: -5.261429786682129

Token 1587: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6417528986930847
    2. 'pass' → logprob: -1.2667529582977295
    3. 'continue' → logprob: -2.5167529582977295
    4. '#' → logprob: -3.1417529582977295
    5. '           ' → logprob: -3.2667529582977295
    6. '       ' → logprob: -4.01675271987915
    7. ' for' → logprob: -5.89175271987915
    8. '   ' → logprob: -6.39175271987915
    9. 'chosen' → logprob: -6.39175271987915
    10. '
' → logprob: -6.76675271987915

Token 1588: ' that' (ID: 484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3550761938095093
    2. '#' → logprob: -1.7300761938095093
    3. '   ' → logprob: -1.9800761938095093
    4. '       ' → logprob: -2.605076313018799
    5. 'the' → logprob: -2.980076313018799
    6. ' that' → logprob: -2.980076313018799
    7. ' for' → logprob: -2.980076313018799
    8. 'pass' → logprob: -3.230076313018799
    9. '
' → logprob: -3.605076313018799
    10. 'chosen' → logprob: -3.730076313018799

Token 1589: ' later' (ID: 4849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.594698965549469
    2. '#' → logprob: -1.8446989059448242
    3. '
' → logprob: -2.094698905944824
    4. '           ' → logprob: -2.344698905944824
    5. 'for' → logprob: -3.469698905944824
    6. ' for' → logprob: -3.844698905944824
    7. 'continue' → logprob: -4.719698905944824
    8. 'pass' → logprob: -6.094698905944824
    9. 'chosen' → logprob: -6.344698905944824
    10. '   ' → logprob: -6.469698905944824

Token 1590: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3666260838508606
    2. '<|end|>' → logprob: -1.7416260242462158
    3. '
' → logprob: -2.116626024246216
    4. '#' → logprob: -5.116626262664795
    5. '<|end|>' → logprob: -6.491626262664795
    6. '        
' → logprob: -6.741626262664795
    7. '   ' → logprob: -7.116626262664795
    8. 'def' → logprob: -7.366626262664795
    9. '```' → logprob: -7.991626262664795
    10. '...' → logprob: -8.616625785827637

Token 1591: ' needed' (ID: 6118)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.05088990926742554
    2. 'True' → logprob: -3.5508899688720703
    3. ' False' → logprob: -4.30088996887207
    4. 'chosen' → logprob: -5.80088996887207
    5. 'max' → logprob: -6.67588996887207
    6. '0' → logprob: -7.17588996887207
    7. ' True' → logprob: -7.42588996887207
    8. '#' → logprob: -7.80088996887207
    9. ''' → logprob: -8.05088996887207
    10. 'len' → logprob: -8.42588996887207

Token 1592: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1593: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1594: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1595: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3821674883365631
    2. '<|end|>' → logprob: -1.2571674585342407
    3. '#' → logprob: -4.007167339324951
    4. '   ' → logprob: -5.257167339324951
    5. '
' → logprob: -5.382167339324951
    6. 'return' → logprob: -6.382167339324951
    7. '```' → logprob: -7.007167339324951
    8. '        
' → logprob: -7.007167339324951
    9. '<|end|>' → logprob: -7.257167339324951
    10. 'def' → logprob: -7.757167339324951

Token 1596: ' beginner' (ID: 57062)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1693185716867447
    2. ' p' → logprob: -2.669318675994873
    3. '_' → logprob: -3.294318675994873
    4. 'h' → logprob: -3.544318675994873
    5. ' _' → logprob: -5.044318675994873
    6. '_p' → logprob: -5.669318675994873
    7. ' h' → logprob: -6.044318675994873
    8. '_h' → logprob: -6.419318675994873
    9. 'part' → logprob: -6.669318675994873
    10. '```' → logprob: -6.669318675994873

Token 1597: ' solution' (ID: 7578)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.9105051755905151
    2. '
' → logprob: -2.1605052947998047
    3. '_' → logprob: -2.2855052947998047
    4. '   ' → logprob: -2.5355052947998047
    5. '       ' → logprob: -2.5355052947998047
    6. '#' → logprob: -3.0355052947998047
    7. ' in' → logprob: -3.0355052947998047
    8. ' code' → logprob: -3.1605052947998047
    9. 'part' → logprob: -3.2855052947998047
    10. '```' → logprob: -3.5355052947998047

Token 1598: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1599: ' ignore' (ID: 17887)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6470525860786438
    2. '       ' → logprob: -0.7720525860786438
    3. '   ' → logprob: -5.522052764892578
    4. '<|end|>' → logprob: -5.522052764892578
    5. ' print' → logprob: -6.147052764892578
    6. '#' → logprob: -6.272052764892578
    7. '```' → logprob: -6.897052764892578
    8. 'def' → logprob: -7.647052764892578
    9. 'return' → logprob: -7.897052764892578
    10. 'pass' → logprob: -8.147052764892578

Token 1600: ' constraints' (ID: 31060)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1601: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5328068137168884
    2. '<|end|>' → logprob: -1.0328068733215332
    3. '   ' → logprob: -3.282806873321533
    4. '
' → logprob: -4.157806873321533
    5. 'if' → logprob: -7.032806873321533
    6. '<|end|>' → logprob: -7.157806873321533
    7. '        
' → logprob: -7.657806873321533
    8. 'def' → logprob: -7.657806873321533
    9. '```' → logprob: -7.657806873321533
    10. 'print' → logprob: -8.032806396484375

Token 1602: ' NW' (ID: 58124)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.7101446390151978
    2. 'NW' → logprob: -1.5851446390151978
    3. 'max' → logprob: -2.710144519805908
    4. 'limits' → logprob: -2.960144519805908
    5. 'number' → logprob: -3.335144519805908
    6. 'maximum' → logprob: -3.835144519805908
    7. 'the' → logprob: -3.960144519805908
    8. ' missing' → logprob: -3.960144519805908
    9. 'counts' → logprob: -4.210144519805908
    10. '```' → logprob: -4.460144519805908

Token 1603: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1604: ' NC' (ID: 28895)
  Prédit: 'NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NC' → logprob: -0.03137393295764923
    2. ' NC' → logprob: -3.531373977661133
    3. 'NM' → logprob: -6.656373977661133
    4. 'NL' → logprob: -9.281373977661133
    5. ' NM' → logprob: -9.906373977661133
    6. 'N' → logprob: -10.031373977661133
    7. '
' → logprob: -10.156373977661133
    8. '#' → logprob: -10.656373977661133
    9. '   ' → logprob: -10.656373977661133
    10. '    ' → logprob: -11.406373977661133

Token 1605: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1606: ' NM' (ID: 59722)
  Prédit: 'NM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NM' → logprob: -0.022168930619955063
    2. '       ' → logprob: -3.8971688747406006
    3. '#' → logprob: -6.77216911315918
    4. ' NM' → logprob: -8.39716911315918
    5. '
' → logprob: -9.14716911315918
    6. '   ' → logprob: -9.39716911315918
    7. 'NL' → logprob: -11.52216911315918
    8. 'nm' → logprob: -11.64716911315918
    9. '        
' → logprob: -11.77216911315918
    10. '```' → logprob: -12.02216911315918

Token 1607: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.171769380569458
    2. '<|end|>' → logprob: -2.296769380569458
    3. '
' → logprob: -2.921769380569458
    4. '        
' → logprob: -6.546769142150879
    5. '   ' → logprob: -6.796769142150879
    6. '<|end|>' → logprob: -7.796769142150879
    7. 'print' → logprob: -9.421769142150879
    8. '```' → logprob: -9.421769142150879
    9. ',' → logprob: -9.921769142150879
    10. '    
' → logprob: -10.046769142150879

Token 1608: ' just' (ID: 1327)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1609: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003357006062287837
    2. ' print' → logprob: -8.625335693359375
    3. '       ' → logprob: -9.500335693359375
    4. '```' → logprob: -9.625335693359375
    5. '   ' → logprob: -12.250335693359375
    6. 'continue' → logprob: -12.625335693359375
    7. 'pass' → logprob: -12.750335693359375
    8. '
' → logprob: -13.250335693359375
    9. 'return' → logprob: -14.125335693359375
    10. '           ' → logprob: -15.125335693359375

Token 1610: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011118779657408595
    2. '
' → logprob: -7.12611198425293
    3. 'print' → logprob: -8.25111198425293
    4. '   ' → logprob: -10.50111198425293
    5. '        
' → logprob: -11.12611198425293
    6. '```' → logprob: -13.37611198425293
    7. ' print' → logprob: -13.50111198425293
    8. '<|end|>' → logprob: -14.62611198425293
    9. '    
' → logprob: -15.00111198425293
    10. '           ' → logprob: -15.25111198425293

Token 1611: '_count' (ID: 7536)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011525565758347511
    2. '
' → logprob: -5.136525630950928
    3. 'print' → logprob: -5.511525630950928
    4. '   ' → logprob: -7.261525630950928
    5. '<|end|>' → logprob: -7.636525630950928
    6. '        
' → logprob: -8.76152515411377
    7. '```' → logprob: -9.01152515411377
    8. ',' → logprob: -11.13652515411377
    9. 'def' → logprob: -11.63652515411377
    10. ' print' → logprob: -11.76152515411377

Token 1612: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23702149093151093
    2. '
' → logprob: -2.2370214462280273
    3. '<|end|>' → logprob: -2.4870214462280273
    4. '   ' → logprob: -4.112021446228027
    5. '```' → logprob: -6.612021446228027
    6. '        
' → logprob: -6.862021446228027
    7. 'print' → logprob: -6.987021446228027
    8. ')' → logprob: -8.362021446228027
    9. '<|end|>' → logprob: -8.362021446228027
    10. '    
' → logprob: -8.612021446228027

Token 1613: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1614: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.080027274787426
    2. 'print' → logprob: -2.5800273418426514
    3. '   ' → logprob: -6.830027103424072
    4. '```' → logprob: -9.83002758026123
    5. ' print' → logprob: -14.08002758026123
    6. '        
' → logprob: -14.08002758026123
    7. '
' → logprob: -14.83002758026123
    8. '	print' → logprob: -17.205026626586914
    9. '<|end|>' → logprob: -17.330026626586914
    10. '           ' → logprob: -17.330026626586914

Token 1615: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048841241747140884
    2. 'print' → logprob: -3.0488412380218506
    3. '   ' → logprob: -8.29884147644043
    4. '```' → logprob: -12.42384147644043
    5. ' print' → logprob: -14.04884147644043
    6. '        
' → logprob: -16.29884147644043
    7. '#print' → logprob: -17.04884147644043
    8. '           ' → logprob: -17.17384147644043
    9. '
' → logprob: -17.79884147644043
    10. '	print' → logprob: -18.42384147644043

Token 1616: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42166668176651
    2. 'print' → logprob: -1.4216666221618652
    3. ' print' → logprob: -2.2966666221618652
    4. '   ' → logprob: -6.171666622161865
    5. '```' → logprob: -10.421667098999023
    6. '
' → logprob: -11.921667098999023
    7. ' if' → logprob: -12.796667098999023
    8. ' for' → logprob: -12.921667098999023
    9. ' ' → logprob: -12.921667098999023
    10. '           ' → logprob: -13.546667098999023

Token 1617: ' says' (ID: 5003)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21696582436561584
    2. '<|end|>' → logprob: -1.9669657945632935
    3. '<|end|>' → logprob: -4.341965675354004
    4. '   ' → logprob: -4.341965675354004
    5. ')' → logprob: -4.966965675354004
    6. '```' → logprob: -5.091965675354004
    7. 'print' → logprob: -5.966965675354004
    8. '#' → logprob: -6.216965675354004
    9. 'def' → logprob: -6.341965675354004
    10. ':' → logprob: -6.466965675354004

Token 1618: ' it's' (ID: 4275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8735492825508118
    2. 'print' → logprob: -0.9985492825508118
    3. ' print' → logprob: -1.623549222946167
    4. '
' → logprob: -4.998549461364746
    5. '   ' → logprob: -5.748549461364746
    6. ' if' → logprob: -6.248549461364746
    7. '```' → logprob: -6.248549461364746
    8. ' for' → logprob: -7.748549461364746
    9. ' to' → logprob: -7.748549461364746
    10. ':' → logprob: -7.748549461364746

Token 1619: ' allowed' (ID: 9279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4078845977783203
    2. ' not' → logprob: -1.4078845977783203
    3. 'not' → logprob: -1.6578845977783203
    4. '   ' → logprob: -1.9078845977783203
    5. '```' → logprob: -2.5328845977783203
    6. 'possible' → logprob: -3.9078845977783203
    7. 'def' → logprob: -4.40788459777832
    8. ' possible' → logprob: -4.90788459777832
    9. 'print' → logprob: -5.40788459777832
    10. '           ' → logprob: -5.53288459777832

Token 1620: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042928047478199005
    2. '<|end|>' → logprob: -3.7929279804229736
    3. '
' → logprob: -4.042928218841553
    4. '        
' → logprob: -7.167928218841553
    5. '<|end|>' → logprob: -7.667928218841553
    6. 'print' → logprob: -8.667927742004395
    7. ',' → logprob: -8.792927742004395
    8. ')' → logprob: -9.042927742004395
    9. '   ' → logprob: -9.042927742004395
    10. ')
' → logprob: -10.792927742004395

Token 1621: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12909995019435883
    2. 'print' → logprob: -2.5040998458862305
    3. ' print' → logprob: -3.3790998458862305
    4. '           ' → logprob: -6.2540998458862305
    5. '   ' → logprob: -7.0040998458862305
    6. ' for' → logprob: -7.3790998458862305
    7. 'def' → logprob: -7.8790998458862305
    8. '```' → logprob: -8.00409984588623
    9. 'continue' → logprob: -8.25409984588623
    10. '
' → logprob: -8.50409984588623

Token 1622: ' most' (ID: 1645)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.5198767185211182
    2. ' least' → logprob: -1.0198767185211182
    3. 'most' → logprob: -3.394876718521118
    4. ' most' → logprob: -4.769876480102539
    5. '```' → logprob: -7.144876480102539
    6. '       ' → logprob: -7.269876480102539
    7. 'print' → logprob: -7.769876480102539
    8. '#' → logprob: -8.019876480102539
    9. '_le' → logprob: -9.269876480102539
    10. '
' → logprob: -9.644876480102539

Token 1623: ' NW' (ID: 58124)
  Prédit: ' NW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NW' → logprob: -0.3852755129337311
    2. 'NW' → logprob: -1.3852754831314087
    3. ' missing' → logprob: -3.1352756023406982
    4. 'missing' → logprob: -4.260275363922119
    5. 'max' → logprob: -5.760275363922119
    6. ' max' → logprob: -5.885275363922119
    7. '```' → logprob: -6.510275363922119
    8. ' ' → logprob: -7.010275363922119
    9. '   ' → logprob: -7.385275363922119
    10. ' one' → logprob: -7.510275363922119

Token 1624: ',' (ID: 11)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8595174551010132
    2. ',' → logprob: -1.7345174551010132
    3. ' parties' → logprob: -2.7345175743103027
    4. 'and' → logprob: -2.8595175743103027
    5. ' and' → logprob: -3.2345175743103027
    6. 'missing' → logprob: -3.2345175743103027
    7. '
' → logprob: -3.4845175743103027
    8. '```' → logprob: -3.6095175743103027
    9. ')' → logprob: -3.7345175743103027
    10. ' missing' → logprob: -4.234517574310303

Token 1625: ' NC' (ID: 28895)
  Prédit: 'NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NC' → logprob: -0.5762022137641907
    2. ' NC' → logprob: -0.8262022137641907
    3. ' ' → logprob: -9.826202392578125
    4. '```' → logprob: -10.201202392578125
    5. 'N' → logprob: -10.701202392578125
    6. '0' → logprob: -11.201202392578125
    7. '`' → logprob: -11.201202392578125
    8. ' N' → logprob: -11.701202392578125
    9. 'ND' → logprob: -11.701202392578125
    10. '``' → logprob: -11.701202392578125

Token 1626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07600824534893036
    2. 'M' → logprob: -2.7010083198547363
    3. ',M' → logprob: -5.826008319854736
    4. ',
' → logprob: -7.451008319854736
    5. ',N' → logprob: -7.576008319854736
    6. ')' → logprob: -8.076007843017578
    7. '
' → logprob: -8.451007843017578
    8. '_M' → logprob: -8.576007843017578
    9. '_,' → logprob: -8.826007843017578
    10. 'N' → logprob: -8.951007843017578

Token 1627: ' NM' (ID: 59722)
  Prédit: 'NM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NM' → logprob: -0.02639296092092991
    2. ' NM' → logprob: -3.651392936706543
    3. 'M' → logprob: -10.651392936706543
    4. '
' → logprob: -10.901392936706543
    5. '```' → logprob: -11.276392936706543
    6. '#' → logprob: -11.526392936706543
    7. ' ' → logprob: -12.151392936706543
    8. '   ' → logprob: -12.651392936706543
    9. 'ND' → logprob: -13.026392936706543
    10. '0' → logprob: -13.026392936706543

Token 1628: ' parties' (ID: 13531)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6735340356826782
    2. '       ' → logprob: -1.5485340356826782
    3. ')' → logprob: -2.7985339164733887
    4. 'print' → logprob: -3.1735339164733887
    5. ' parties' → logprob: -3.5485339164733887
    6. ' can' → logprob: -3.6735339164733887
    7. ')
' → logprob: -4.173533916473389
    8. '<|end|>' → logprob: -4.298533916473389
    9. '```' → logprob: -4.298533916473389
    10. '#' → logprob: -4.423533916473389

Token 1629: ' does' (ID: 2226)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057288918644189835
    2. '
' → logprob: -3.182288885116577
    3. '<|end|>' → logprob: -4.682289123535156
    4. '        
' → logprob: -6.182289123535156
    5. '```' → logprob: -6.682289123535156
    6. 'print' → logprob: -7.307289123535156
    7. ',' → logprob: -7.557289123535156
    8. '<|end|>' → logprob: -8.932289123535156
    9. ',
' → logprob: -9.807289123535156
    10. '#' → logprob: -10.557289123535156

Token 1630: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5782657265663147
    2. ' not' → logprob: -0.8282657265663147
    3. 'n't' → logprob: -6.07826566696167
    4. '_not' → logprob: -11.828266143798828
    5. ' missing' → logprob: -12.078266143798828
    6. ' have' → logprob: -12.328266143798828
    7. '```' → logprob: -12.453266143798828
    8. '
' → logprob: -12.953266143798828
    9. 'have' → logprob: -13.078266143798828
    10. '	not' → logprob: -13.703266143798828

Token 1631: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.2908139228820801
    2. ' have' → logprob: -1.41581392288208
    3. '_have' → logprob: -4.79081392288208
    4. 'lack' → logprob: -6.91581392288208
    5. ' lack' → logprob: -9.040813446044922
    6. 'contain' → logprob: -9.665813446044922
    7. 'exist' → logprob: -10.415813446044922
    8. '```' → logprob: -10.415813446044922
    9. 'include' → logprob: -10.665813446044922
    10. 'miss' → logprob: -11.290813446044922

Token 1632: ' warrior' (ID: 76541)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -0.03946901112794876
    2. ' warrior' → logprob: -3.539469003677368
    3. 'a' → logprob: -5.539469242095947
    4. 'w' → logprob: -6.039469242095947
    5. '```' → logprob: -6.914469242095947
    6. '   ' → logprob: -7.164469242095947
    7. ' a' → logprob: -7.539469242095947
    8. '_w' → logprob: -8.039468765258789
    9. 'wizard' → logprob: -8.789468765258789
    10. ' ' → logprob: -9.414468765258789

Token 1633: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012792862020432949
    2. '
' → logprob: -5.012793064117432
    3. '<|end|>' → logprob: -5.387793064117432
    4. '        
' → logprob: -7.512793064117432
    5. ',' → logprob: -7.637793064117432
    6. 'print' → logprob: -8.887792587280273
    7. '<|end|>' → logprob: -9.637792587280273
    8. ',
' → logprob: -9.762792587280273
    9. '```' → logprob: -9.762792587280273
    10. '   ' → logprob: -10.637792587280273

Token 1634: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.5838316082954407
    2. '       ' → logprob: -2.208831548690796
    3. ' cler' → logprob: -2.208831548690796
    4. '#' → logprob: -2.458831548690796
    5. '```' → logprob: -3.583831548690796
    6. 'M' → logprob: -3.708831548690796
    7. 'm' → logprob: -3.833831548690796
    8. 'C' → logprob: -3.958831548690796
    9. 'NC' → logprob: -5.208831787109375
    10. 'cl' → logprob: -5.333831787109375

Token 1635: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0025127585977315903
    2. 'ics' → logprob: -6.0025129318237305
    3. '```' → logprob: -11.62751293182373
    4. ')
' → logprob: -12.12751293182373
    5. ')' → logprob: -12.37751293182373
    6. '   ' → logprob: -13.37751293182373
    7. '
' → logprob: -13.75251293182373
    8. '])' → logprob: -13.75251293182373
    9. '#' → logprob: -13.87751293182373
    10. '       ' → logprob: -13.87751293182373

Token 1636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30761444568634033
    2. '       ' → logprob: -1.6826144456863403
    3. ',
' → logprob: -3.557614326477051
    4. ')' → logprob: -3.682614326477051
    5. '```' → logprob: -4.807614326477051
    6. ' or' → logprob: -4.932614326477051
    7. ')
' → logprob: -5.932614326477051
    8. '   ' → logprob: -6.807614326477051
    9. '):
' → logprob: -7.182614326477051
    10. '#' → logprob: -7.432614326477051

Token 1637: ' mage' (ID: 89091)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9906124472618103
    2. 'mage' → logprob: -1.115612506866455
    3. 'or' → logprob: -1.615612506866455
    4. 'm' → logprob: -2.490612506866455
    5. ' mage' → logprob: -4.365612506866455
    6. ' mace' → logprob: -6.490612506866455
    7. '```' → logprob: -6.865612506866455
    8. '       ' → logprob: -7.115612506866455
    9. '#' → logprob: -7.240612506866455
    10. 'mages' → logprob: -7.365612506866455

Token 1638: ' respectively' (ID: 24364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008535735309123993
    2. '
' → logprob: -5.258535861968994
    3. '        
' → logprob: -6.758535861968994
    4. '<|end|>' → logprob: -6.758535861968994
    5. 'print' → logprob: -7.133535861968994
    6. '   ' → logprob: -9.633535385131836
    7. '<|end|>' → logprob: -10.383535385131836
    8. ',' → logprob: -10.633535385131836
    9. '```' → logprob: -11.258535385131836
    10. ')' → logprob: -12.008535385131836

Token 1639: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36281099915504456
    2. '
' → logprob: -1.3628109693527222
    3. '<|end|>' → logprob: -3.6128110885620117
    4. '        
' → logprob: -3.9878110885620117
    5. '   ' → logprob: -6.487811088562012
    6. '<|end|>' → logprob: -7.987811088562012
    7. 'print' → logprob: -8.237811088562012
    8. '```' → logprob: -9.112811088562012
    9. '    
' → logprob: -9.237811088562012
    10. ',' → logprob: -9.487811088562012

Token 1640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005220236722379923
    2. '
' → logprob: -5.755220413208008
    3. '<|end|>' → logprob: -6.755220413208008
    4. '        
' → logprob: -7.505220413208008
    5. '```' → logprob: -9.005220413208008
    6. 'print' → logprob: -9.255220413208008
    7. '   ' → logprob: -10.380220413208008
    8. '<|end|>' → logprob: -11.005220413208008
    9. ',' → logprob: -11.755220413208008
    10. '#' → logprob: -12.255220413208008

Token 1641: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012288063764572144
    2. 'print' → logprob: -4.7622880935668945
    3. '
' → logprob: -6.0122880935668945
    4. '   ' → logprob: -7.1372880935668945
    5. '        
' → logprob: -8.012288093566895
    6. '```' → logprob: -9.762288093566895
    7. ' print' → logprob: -11.262288093566895
    8. '    
' → logprob: -11.387288093566895
    9. '<|end|>' → logprob: -12.887288093566895
    10. '           ' → logprob: -13.512288093566895

Token 1642: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16064387559890747
    2. 'print' → logprob: -1.9106438159942627
    3. '
' → logprob: -8.535643577575684
    4. '```' → logprob: -9.160643577575684
    5. ' print' → logprob: -10.285643577575684
    6. '        
' → logprob: -10.285643577575684
    7. '   ' → logprob: -10.410643577575684
    8. 'import' → logprob: -11.535643577575684
    9. '#print' → logprob: -12.160643577575684
    10. '#' → logprob: -13.410643577575684

Token 1643: ' our' (ID: 1039)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.641394853591919
    2. 'True' → logprob: -1.641394853591919
    3. '       ' → logprob: -2.766394853591919
    4. '#' → logprob: -2.891394853591919
    5. ' True' → logprob: -3.016394853591919
    6. 'False' → logprob: -3.141394853591919
    7. 'not' → logprob: -3.641394853591919
    8. 'len' → logprob: -3.641394853591919
    9. ' max' → logprob: -5.39139461517334
    10. ' False' → logprob: -6.26639461517334

Token 1644: ' selection' (ID: 8441)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8776791095733643
    2. '_code' → logprob: -1.3776791095733643
    3. ' solution' → logprob: -1.8776791095733643
    4. '
' → logprob: -3.6276791095733643
    5. '```' → logprob: -3.6276791095733643
    6. ' previous' → logprob: -4.377678871154785
    7. ' chosen' → logprob: -4.502678871154785
    8. 'for' → logprob: -4.877678871154785
    9. '_count' → logprob: -4.877678871154785
    10. ' current' → logprob: -5.127678871154785

Token 1645: ' greed' (ID: 103438)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9271405339241028
    2. '       ' → logprob: -1.052140474319458
    3. ':' → logprob: -3.052140474319458
    4. ' continues' → logprob: -3.427140474319458
    5. ' is' → logprob: -3.427140474319458
    6. '_' → logprob: -3.552140474319458
    7. '_sorted' → logprob: -3.927140474319458
    8. '   ' → logprob: -4.052140712738037
    9. ')' → logprob: -4.427140712738037
    10. '.' → logprob: -4.677140712738037

Token 1646: 'ily' (ID: 1810)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22468073666095734
    2. 'y' → logprob: -2.0996806621551514
    3. '           ' → logprob: -3.3496806621551514
    4. ')' → logprob: -4.2246809005737305
    5. 'ary' → logprob: -5.3496809005737305
    6. 'iest' → logprob: -5.3496809005737305
    7. '   ' → logprob: -5.5996809005737305
    8. '      ' → logprob: -6.2246809005737305
    9. '        ' → logprob: -6.3496809005737305
    10. ',' → logprob: -6.8496809005737305

Token 1647: ' picks' (ID: 37120)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.9603058695793152
    2. '           ' → logprob: -1.58530592918396
    3. ' continues' → logprob: -2.46030592918396
    4. '       ' → logprob: -2.96030592918396
    5. 'continued' → logprob: -3.33530592918396
    6. '.add' → logprob: -3.83530592918396
    7. ' +=' → logprob: -3.96030592918396
    8. 'continue' → logprob: -3.96030592918396
    9. ' continued' → logprob: -3.96030592918396
    10. '=' → logprob: -4.085305690765381

Token 1648: ' bigger' (ID: 17791)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.4995388984680176
    2. ' more' → logprob: -1.6245388984680176
    3. ' only' → logprob: -1.6245388984680176
    4. ' parties' → logprob: -2.2495388984680176
    5. ' the' → logprob: -2.9995388984680176
    6. ' part' → logprob: -3.8745388984680176
    7. '   ' → logprob: -3.8745388984680176
    8. '       ' → logprob: -3.9995388984680176
    9. 'more' → logprob: -3.9995388984680176
    10. ' ' → logprob: -4.124538898468018

Token 1649: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.05963054671883583
    2. '_part' → logprob: -3.6846306324005127
    3. ' parties' → logprob: -4.684630393981934
    4. ' part' → logprob: -4.809630393981934
    5. ',' → logprob: -5.059630393981934
    6. '   ' → logprob: -5.809630393981934
    7. ')' → logprob: -6.559630393981934
    8. '       ' → logprob: -7.309630393981934
    9. ' and' → logprob: -7.684630393981934
    10. ' ,' → logprob: -7.809630393981934

Token 1650: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04164876788854599
    2. '           ' → logprob: -3.5416488647460938
    3. ',' → logprob: -4.791648864746094
    4. '<|end|>' → logprob: -7.166648864746094
    5. '.' → logprob: -7.416648864746094
    6. '   ' → logprob: -7.916648864746094
    7. ' and' → logprob: -8.416648864746094
    8. ':
' → logprob: -8.541648864746094
    9. '               ' → logprob: -8.791648864746094
    10. '```' → logprob: -9.041648864746094

Token 1651: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037116892635822296
    2. ',' → logprob: -3.7871170043945312
    3. '           ' → logprob: -5.037117004394531
    4. '<|end|>' → logprob: -5.662117004394531
    5. '
' → logprob: -7.162117004394531
    6. ',
' → logprob: -7.537117004394531
    7. '<|end|>' → logprob: -7.537117004394531
    8. ')' → logprob: -7.662117004394531
    9. '   ' → logprob: -8.037117004394531
    10. '        
' → logprob: -8.287117004394531

Token 1652: ' usually' (ID: 6971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004592942073941231
    2. '           ' → logprob: -6.5045928955078125
    3. '<|end|>' → logprob: -6.8795928955078125
    4. '
' → logprob: -7.5045928955078125
    5. ' continue' → logprob: -7.8795928955078125
    6. '```' → logprob: -8.254592895507812
    7. '   ' → logprob: -8.504592895507812
    8. 'continue' → logprob: -8.504592895507812
    9. '<|end|>' → logprob: -9.129592895507812
    10. '        
' → logprob: -9.504592895507812

Token 1653: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1023893356323242
    2. '<|end|>' → logprob: -1.9773893356323242
    3. 'max' → logprob: -2.227389335632324
    4. '#' → logprob: -2.602389335632324
    5. ' max' → logprob: -3.227389335632324
    6. ' continue' → logprob: -3.602389335632324
    7. 'continue' → logprob: -3.602389335632324
    8. ')' → logprob: -3.727389335632324
    9. '```' → logprob: -3.727389335632324
    10. ':
' → logprob: -4.102389335632324

Token 1654: ' missing' (ID: 12486)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1685281991958618
    2. '_missing' → logprob: -1.2935281991958618
    3. ')' → logprob: -2.4185280799865723
    4. '_count' → logprob: -2.9185280799865723
    5. '_w' → logprob: -3.0435280799865723
    6. ' _' → logprob: -3.1685280799865723
    7. ' missing' → logprob: -3.7935280799865723
    8. 'missing' → logprob: -4.043528079986572
    9. '_m' → logprob: -4.168528079986572
    10. '
' → logprob: -4.668528079986572

Token 1655: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.047699213027954
    2. '_W' → logprob: -1.547699213027954
    3. '_part' → logprob: -2.422699213027954
    4. ')' → logprob: -2.547699213027954
    5. '_w' → logprob: -2.672699213027954
    6. '       ' → logprob: -2.797699213027954
    7. 'part' → logprob: -3.297699213027954
    8. '<|end|>' → logprob: -3.547699213027954
    9. '   ' → logprob: -4.672698974609375
    10. ',' → logprob: -4.672698974609375

Token 1656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011573052033782005
    2. '
' → logprob: -5.13657283782959
    3. '<|end|>' → logprob: -5.63657283782959
    4. '<|end|>' → logprob: -7.76157283782959
    5. '   ' → logprob: -8.13657283782959
    6. ',' → logprob: -8.26157283782959
    7. '        
' → logprob: -8.38657283782959
    8. ')' → logprob: -8.38657283782959
    9. '```' → logprob: -8.38657283782959
    10. '           ' → logprob: -9.26157283782959

Token 1657: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5884617567062378
    2. '
' → logprob: -0.8384617567062378
    3. '        
' → logprob: -5.338461875915527
    4. ',' → logprob: -6.213461875915527
    5. '```' → logprob: -6.588461875915527
    6. '<|end|>' → logprob: -6.588461875915527
    7. ',
' → logprob: -7.088461875915527
    8. ')
' → logprob: -7.963461875915527
    9. '<|end|>' → logprob: -8.463461875915527
    10. '#' (adapté à ' #') → logprob: -8.588461875915527

Token 1658: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004109746310859919
    2. 'print' → logprob: -5.629109859466553
    3. '   ' → logprob: -8.129109382629395
    4. '
' → logprob: -8.754109382629395
    5. '```' → logprob: -10.254109382629395
    6. '        
' → logprob: -11.004109382629395
    7. ' print' → logprob: -13.129109382629395
    8. '           ' → logprob: -13.254109382629395
    9. '    
' → logprob: -14.879109382629395
    10. '<|end|>' → logprob: -15.379109382629395

Token 1659: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02478417567908764
    2. ' print' → logprob: -3.8997840881347656
    3. '       ' → logprob: -5.649784088134766
    4. '```' → logprob: -8.149784088134766
    5. '#' → logprob: -8.399784088134766
    6. '   ' → logprob: -9.149784088134766
    7. '
' → logprob: -9.524784088134766
    8. 'for' → logprob: -11.774784088134766
    9. 'continue' → logprob: -12.524784088134766
    10. ' for' → logprob: -12.524784088134766

Token 1660: ' do' (ID: 621)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.137134075164795
    2. '
' → logprob: -1.512134075164795
    3. '       ' → logprob: -2.012134075164795
    4. ' can' → logprob: -2.137134075164795
    5. 'continue' → logprob: -2.262134075164795
    6. '#' → logprob: -4.012134075164795
    7. ' cannot' → logprob: -4.512134075164795
    8. 'can' → logprob: -4.887134075164795
    9. ' will' → logprob: -4.887134075164795
    10. '   ' → logprob: -5.137134075164795

Token 1661: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07641362398862839
    2. ' not' → logprob: -2.701413631439209
    3. 'n't' → logprob: -5.576413631439209
    4. '       ' → logprob: -6.701413631439209
    5. '           ' → logprob: -6.826413631439209
    6. '   ' → logprob: -8.45141315460205
    7. '```' → logprob: -9.95141315460205
    8. 'continue' → logprob: -10.57641315460205
    9. 'n' → logprob: -11.07641315460205
    10. '         ' → logprob: -11.70141315460205

Token 1662: ' distinguish' (ID: 59938)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.8170486092567444
    2. 'have' → logprob: -0.9420486092567444
    3. 'print' → logprob: -2.8170485496520996
    4. 'know' → logprob: -3.5670485496520996
    5. '```' → logprob: -3.6920485496520996
    6. '
' → logprob: -4.5670485496521
    7. ' know' → logprob: -4.9420485496521
    8. '           ' → logprob: -4.9420485496521
    9. '       ' → logprob: -5.0670485496521
    10. ' print' → logprob: -5.1920485496521

Token 1663: ' missing' (ID: 12486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2963077127933502
    2. 'print' → logprob: -1.5463076829910278
    3. '
' → logprob: -4.421307563781738
    4. '```' → logprob: -4.421307563781738
    5. '()
' → logprob: -5.546307563781738
    6. '   ' → logprob: -5.546307563781738
    7. ' print' → logprob: -6.171307563781738
    8. ',' → logprob: -6.546307563781738
    9. ')
' → logprob: -6.796307563781738
    10. 'for' → logprob: -7.171307563781738

Token 1664: ' counts' (ID: 28991)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.096266269683838
    2. '_' → logprob: -1.346266269683838
    3. 'part' → logprob: -2.346266269683838
    4. '_W' → logprob: -2.596266269683838
    5. '<|end|>' → logprob: -2.721266269683838
    6. ')' → logprob: -3.471266269683838
    7. '_part' → logprob: -3.596266269683838
    8. '   ' → logprob: -3.971266269683838
    9. 'parts' → logprob: -4.346266269683838
    10. 'W' → logprob: -4.596266269683838

Token 1665: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15933406352996826
    2. '
' → logprob: -2.284334182739258
    3. '<|end|>' → logprob: -3.784334182739258
    4. '        
' → logprob: -5.284334182739258
    5. ')' → logprob: -5.409334182739258
    6. '   ' → logprob: -6.034334182739258
    7. '```' → logprob: -6.409334182739258
    8. '                       ' → logprob: -6.409334182739258
    9. '                        
' → logprob: -6.534334182739258
    10. '<|end|>' → logprob: -7.034334182739258

Token 1666: ' problem' (ID: 4792)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5049681663513184
    2. ' continue' → logprob: -1.5049681663513184
    3. 'print' → logprob: -2.7549681663513184
    4. '   ' → logprob: -3.6299681663513184
    5. '```' → logprob: -4.129968166351318
    6. '#' → logprob: -4.879968166351318
    7. 'cannot' → logprob: -5.004968166351318
    8. '
' → logprob: -5.004968166351318
    9. 'break' → logprob: -5.129968166351318
    10. ' #' → logprob: -5.254968166351318

Token 1667: ' may' (ID: 1340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13353009521961212
    2. ')' → logprob: -2.8835301399230957
    3. '   ' → logprob: -3.5085301399230957
    4. 'def' → logprob: -5.008530139923096
    5. ':' → logprob: -5.633530139923096
    6. '```' → logprob: -5.633530139923096
    7. '           ' → logprob: -5.758530139923096
    8. 'does' → logprob: -5.883530139923096
    9. '#' → logprob: -6.133530139923096
    10. '.' → logprob: -6.258530139923096

Token 1668: ' require' (ID: 1841)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.33828005194664
    2. 'have' → logprob: -2.213279962539673
    3. 'want' → logprob: -3.338279962539673
    4. ' not' → logprob: -3.963279962539673
    5. 'be' → logprob: -3.963279962539673
    6. 'need' → logprob: -4.088280200958252
    7. 'continue' → logprob: -4.088280200958252
    8. 'print' → logprob: -4.213280200958252
    9. 'fail' → logprob: -4.213280200958252
    10. '#' → logprob: -4.713280200958252

Token 1669: ' reducing' (ID: 25040)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08131295442581177
    2. ' for' → logprob: -4.081313133239746
    3. '```' → logprob: -4.206313133239746
    4. '#' → logprob: -4.456313133239746
    5. 'for' → logprob: -4.456313133239746
    6. 'continue' → logprob: -5.706313133239746
    7. 'def' → logprob: -5.831313133239746
    8. '   ' → logprob: -5.831313133239746
    9. 'print' → logprob: -5.956313133239746
    10. 'import' → logprob: -6.081313133239746

Token 1670: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1342199444770813
    2. '#' → logprob: -3.6342198848724365
    3. 'count' → logprob: -4.009220123291016
    4. 'the' → logprob: -4.259220123291016
    5. ' the' → logprob: -4.759220123291016
    6. '...' → logprob: -5.009220123291016
    7. '```' → logprob: -5.009220123291016
    8. '_count' → logprob: -5.384220123291016
    9. '   ' → logprob: -5.384220123291016
    10. 'missing' → logprob: -5.509220123291016

Token 1671: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03098951280117035
    2. '<|end|>' → logprob: -4.155989646911621
    3. '        
' → logprob: -5.280989646911621
    4. '
' → logprob: -5.530989646911621
    5. ')' → logprob: -6.780989646911621
    6. '<|end|>' → logprob: -7.405989646911621
    7. ',' → logprob: -7.530989646911621
    8. '.' → logprob: -7.655989646911621
    9. '   ' → logprob: -7.780989646911621
    10. '#' → logprob: -8.030989646911621

Token 1672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11752405762672424
    2. '<|end|>' → logprob: -2.3675241470336914
    3. '
' → logprob: -4.242524147033691
    4. '        
' → logprob: -6.742524147033691
    5. '   ' → logprob: -7.242524147033691
    6. '<|end|>' → logprob: -7.492524147033691
    7. '```' → logprob: -9.367524147033691
    8. 'print' → logprob: -9.867524147033691
    9. ')' → logprob: -9.867524147033691
    10. '#' → logprob: -10.617524147033691

Token 1673: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032494855113327503
    2. '   ' → logprob: -6.628249645233154
    3. 'print' → logprob: -7.003249645233154
    4. '
' → logprob: -7.128249645233154
    5. '```' → logprob: -8.878249168395996
    6. '        
' → logprob: -9.878249168395996
    7. '<|end|>' → logprob: -11.628249168395996
    8. '    
' → logprob: -12.628249168395996
    9. '#' (adapté à ' #') → logprob: -13.378249168395996
    10. ' print' → logprob: -13.628249168395996

Token 1674: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11670198291540146
    2. 'print' → logprob: -2.241702079772949
    3. '   ' → logprob: -5.741702079772949
    4. ' print' → logprob: -7.866702079772949
    5. '```' → logprob: -8.61670207977295
    6. '<|end|>' → logprob: -10.24170207977295
    7. '        
' → logprob: -10.61670207977295
    8. '
' → logprob: -11.11670207977295
    9. '#print' → logprob: -11.86670207977295
    10. '           ' → logprob: -12.11670207977295

Token 1675: ' as' (ID: 472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03382043167948723
    2. ' print' → logprob: -4.658820629119873
    3. ' if' → logprob: -4.783820629119873
    4. '       ' → logprob: -4.908820629119873
    5. 'if' → logprob: -5.033820629119873
    6. '
' → logprob: -7.283820629119873
    7. '```' → logprob: -7.783820629119873
    8. '#' → logprob: -9.158820152282715
    9. 'for' → logprob: -9.533820152282715
    10. 'import' → logprob: -9.533820152282715

Token 1676: ' beginner' (ID: 57062)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07288216799497604
    2. '#' → logprob: -3.1978821754455566
    3. '           ' → logprob: -4.947882175445557
    4. 'for' → logprob: -4.947882175445557
    5. '```' → logprob: -4.947882175445557
    6. ' for' → logprob: -6.697882175445557
    7. 'continue' → logprob: -6.947882175445557
    8. '        ' → logprob: -7.447882175445557
    9. '   ' → logprob: -7.572882175445557
    10. ':
' → logprob: -7.697882175445557

Token 1677: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5890874266624451
    2. '_' → logprob: -2.46408748626709
    3. ':' → logprob: -2.58908748626709
    4. '_count' → logprob: -2.58908748626709
    5. '```' → logprob: -2.83908748626709
    6. ':
' → logprob: -3.08908748626709
    7. '():
' → logprob: -4.08908748626709
    8. '):
' → logprob: -4.58908748626709
    9. '``' → logprob: -5.08908748626709
    10. ')' → logprob: -5.08908748626709

Token 1678: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008881522342562675
    2. '
' → logprob: -6.008881568908691
    3. ':
' → logprob: -6.008881568908691
    4. ':' → logprob: -6.133881568908691
    5. ',' → logprob: -7.258881568908691
    6. '<|end|>' → logprob: -7.883881568908691
    7. '        
' → logprob: -8.508881568908691
    8. '   ' → logprob: -8.633881568908691
    9. '           ' → logprob: -9.383881568908691
    10. '<|end|>' → logprob: -9.508881568908691

Token 1679: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25972962379455566
    2. 'print' → logprob: -1.5097296237945557
    3. ' print' → logprob: -5.009729385375977
    4. '   ' → logprob: -7.509729385375977
    5. '```' → logprob: -7.509729385375977
    6. '``' → logprob: -14.509729385375977
    7. '
' → logprob: -14.634729385375977
    8. '           ' → logprob: -15.009729385375977
    9. 'return' → logprob: -15.884729385375977
    10. 'import' → logprob: -15.884729385375977

Token 1680: ' missing' (ID: 12486)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.145478755235672
    2. 'max' → logprob: -2.0204787254333496
    3. ' missing' → logprob: -6.02047872543335
    4. 'missing' → logprob: -8.895479202270508
    5. ' not' → logprob: -9.895479202270508
    6. '(max' → logprob: -10.270479202270508
    7. '```' → logprob: -10.395479202270508
    8. ' True' → logprob: -10.895479202270508
    9. '_missing' → logprob: -11.270479202270508
    10. '   ' → logprob: -11.520479202270508

Token 1681: ' counts' (ID: 28991)
  Prédit: '_W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.10652128607034683
    2. '_' → logprob: -2.9815213680267334
    3. 'W' → logprob: -4.106521129608154
    4. 'part' → logprob: -4.231521129608154
    5. '_w' → logprob: -5.606521129608154
    6. '_part' → logprob: -5.731521129608154
    7. '_counts' → logprob: -5.856521129608154
    8. '```' → logprob: -6.231521129608154
    9. '=' → logprob: -6.481521129608154
    10. ' =' → logprob: -6.606521129608154

Token 1682: ' exceed' (ID: 23275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1247355118393898
    2. ' =' → logprob: -2.3747355937957764
    3. '==' → logprob: -4.874735355377197
    4. '>' → logprob: -4.999735355377197
    5. '```' → logprob: -6.749735355377197
    6. 'continue' → logprob: -6.874735355377197
    7. ')' → logprob: -7.374735355377197
    8. '#' → logprob: -7.499735355377197
    9. 'are' → logprob: -7.499735355377197
    10. ' ==' → logprob: -7.624735355377197

Token 1683: ' limits' (ID: 22406)
  Prédit: ' NW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' NW' → logprob: -0.6114068031311035
    2. 'NW' → logprob: -0.9864068031311035
    3. ' max' → logprob: -3.8614068031311035
    4. ' the' → logprob: -4.1114068031311035
    5. 'max' → logprob: -4.4864068031311035
    6. ' ' → logprob: -5.1114068031311035
    7. '   ' → logprob: -5.2364068031311035
    8. 'the' → logprob: -5.7364068031311035
    9. '_N' → logprob: -5.8614068031311035
    10. '```' → logprob: -6.2364068031311035

Token 1684: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5679433941841125
    2. ':' → logprob: -0.9429433941841125
    3. '           ' → logprob: -4.067943572998047
    4. ',' → logprob: -4.317943572998047
    5. '>' → logprob: -6.192943572998047
    6. '==' → logprob: -6.317943572998047
    7. '       ' → logprob: -6.567943572998047
    8. '=' → logprob: -6.942943572998047
    9. '                       ' → logprob: -7.067943572998047
    10. 'continue' → logprob: -7.067943572998047

Token 1685: ' reduce' (ID: 10389)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.36684146523475647
    2. '           ' → logprob: -1.866841435432434
    3. ' break' → logprob: -2.8668415546417236
    4. '       ' → logprob: -2.8668415546417236
    5. 'continue' → logprob: -3.6168415546417236
    6. '   ' → logprob: -5.1168413162231445
    7. 'break' → logprob: -5.6168413162231445
    8. ' print' → logprob: -7.8668413162231445
    9. '```' → logprob: -7.9918413162231445
    10. '#' → logprob: -8.491841316223145

Token 1686: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03253232315182686
    2. '
' → logprob: -4.657532215118408
    3. '_' → logprob: -5.782532215118408
    4. '   ' → logprob: -6.032532215118408
    5. '_count' → logprob: -6.032532215118408
    6. '#' → logprob: -6.282532215118408
    7. '        
' → logprob: -6.657532215118408
    8. '           ' → logprob: -6.782532215118408
    9. ' =' → logprob: -6.782532215118408
    10. 'count' → logprob: -7.157532215118408

Token 1687: '_count' (ID: 7536)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04043275862932205
    2. '_' → logprob: -4.415432929992676
    3. '_count' → logprob: -4.415432929992676
    4. '
' → logprob: -6.415432929992676
    5. ' if' → logprob: -6.665432929992676
    6. '   ' → logprob: -6.665432929992676
    7. ' _' → logprob: -6.790432929992676
    8. 'count' → logprob: -6.790432929992676
    9. ' =' → logprob: -7.040432929992676
    10. '           ' → logprob: -7.165432929992676

Token 1688: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028711659833788872
    2. '
' → logprob: -3.7787115573883057
    3. '        
' → logprob: -5.528711795806885
    4. '<|end|>' → logprob: -8.153711318969727
    5. 'def' → logprob: -8.528711318969727
    6. '#' → logprob: -8.903711318969727
    7. ',' → logprob: -9.153711318969727
    8. ')' → logprob: -9.653711318969727
    9. '           ' → logprob: -10.028711318969727
    10. '   ' → logprob: -10.028711318969727

Token 1689: ' exceeding' (ID: 85205)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009766360744833946
    2. ' ' → logprob: -4.634766578674316
    3. '
' → logprob: -13.009766578674316
    4. ' one' → logprob: -13.009766578674316
    5. '0' → logprob: -13.134766578674316
    6. '```' → logprob: -13.884766578674316
    7. ' ' → logprob: -14.134766578674316
    8. 'one' → logprob: -14.384766578674316
    9. '   ' → logprob: -15.509766578674316
    10. 'max' → logprob: -15.759766578674316

Token 1690: ' amount' (ID: 4527)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1740267276763916
    2. '
' → logprob: -1.9240267276763916
    3. '#' → logprob: -6.2990264892578125
    4. 'for' → logprob: -6.4240264892578125
    5. 'missing' → logprob: -6.4240264892578125
    6. '   ' → logprob: -6.5490264892578125
    7. '        
' → logprob: -7.0490264892578125
    8. '```' → logprob: -7.1740264892578125
    9. ' for' → logprob: -7.4240264892578125
    10. '

' → logprob: -7.6740264892578125

Token 1691: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06831655651330948
    2. '
' → logprob: -2.8183164596557617
    3. '<|end|>' → logprob: -5.818316459655762
    4. '        
' → logprob: -6.193316459655762
    5. '   ' → logprob: -8.568316459655762
    6. '#' → logprob: -8.818316459655762
    7. 'for' → logprob: -8.943316459655762
    8. 'def' → logprob: -8.943316459655762
    9. ' for' → logprob: -9.318316459655762
    10. ')' → logprob: -9.443316459655762

Token 1692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036275613820180297
    2. '
' → logprob: -8.875362396240234
    3. ',' → logprob: -9.375362396240234
    4. '```' → logprob: -10.000362396240234
    5. '<|end|>' → logprob: -10.875362396240234
    6. '           ' → logprob: -10.875362396240234
    7. '        
' → logprob: -11.125362396240234
    8. ' if' → logprob: -11.750362396240234
    9. '   ' → logprob: -12.250362396240234
    10. ')' → logprob: -12.250362396240234

Token 1693: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08314331620931625
    2. '
' → logprob: -2.5831432342529297
    3. '        
' → logprob: -5.58314323425293
    4. '<|end|>' → logprob: -8.95814323425293
    5. '#' (adapté à ' #') → logprob: -10.20814323425293
    6. '
' → logprob: -10.20814323425293
    7. ' missing' → logprob: -10.45814323425293
    8. ',' → logprob: -10.45814323425293
    9. '   ' → logprob: -10.70814323425293
    10. '```' → logprob: -10.83314323425293

Token 1694: ' approximately' (ID: 16679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5787791013717651
    2. '
' → logprob: -1.9537791013717651
    3. 'chosen' → logprob: -1.9537791013717651
    4. 'for' → logprob: -2.4537792205810547
    5. 'missing' → logprob: -3.2037792205810547
    6. '#' → logprob: -5.078779220581055
    7. 'count' → logprob: -5.203779220581055
    8. 'selected' → logprob: -5.328779220581055
    9. '```' → logprob: -6.328779220581055
    10. ' chosen' → logprob: -6.578779220581055

Token 1695: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06510262191295624
    2. '
' → logprob: -3.1901025772094727
    3. 'for' → logprob: -4.190102577209473
    4. ' for' → logprob: -5.565102577209473
    5. '   ' → logprob: -7.065102577209473
    6. '           ' → logprob: -7.815102577209473
    7. '        
' → logprob: -8.315102577209473
    8. '#' → logprob: -9.065102577209473
    9. ')' → logprob: -9.565102577209473
    10. 'def' → logprob: -9.565102577209473

Token 1696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025737788528203964
    2. '
' → logprob: -3.900737762451172
    3. 'missing' → logprob: -6.650737762451172
    4. 'for' → logprob: -7.400737762451172
    5. '```' → logprob: -7.525737762451172
    6. '        
' → logprob: -7.525737762451172
    7. '   ' → logprob: -7.650737762451172
    8. 'count' → logprob: -7.650737762451172
    9. ' missing' → logprob: -8.275737762451172
    10. ' for' → logprob: -8.275737762451172

Token 1697: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01086069643497467
    2. 'for' → logprob: -5.885860919952393
    3. 'count' → logprob: -6.635860919952393
    4. 'missing' → logprob: -6.635860919952393
    5. 'chosen' → logprob: -7.010860919952393
    6. '#' (adapté à ' #') → logprob: -7.135860919952393
    7. '
' → logprob: -7.385860919952393
    8. ' for' → logprob: -7.510860919952393
    9. 'selected' → logprob: -7.635860919952393
    10. '```' → logprob: -7.635860919952393

Token 1698: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3997015357017517
    2. 'chosen' → logprob: -1.7747015953063965
    3. '#' → logprob: -3.0247015953063965
    4. 'missing' → logprob: -3.1497015953063965
    5. 'count' → logprob: -4.0247015953063965
    6. 'selected' → logprob: -4.0247015953063965
    7. 'for' → logprob: -4.3997015953063965
    8. 'counts' → logprob: -4.6497015953063965
    9. 'used' → logprob: -5.8997015953063965
    10. 'from' → logprob: -7.0247015953063965

Token 1699: ' count' (ID: 3605)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21087130904197693
    2. 'count' → logprob: -2.9608712196350098
    3. 'for' → logprob: -3.7108712196350098
    4. '
' → logprob: -3.8358712196350098
    5. '       ' → logprob: -4.46087121963501
    6. ' #' → logprob: -4.58587121963501
    7. 'calculate' → logprob: -4.58587121963501
    8. 'get' → logprob: -4.96087121963501
    9. 'continue' → logprob: -5.21087121963501
    10. '   ' → logprob: -5.33587121963501

Token 1700: ' missing' (ID: 12486)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.7028726935386658
    2. 'for' → logprob: -1.0778727531433105
    3. 'missing' → logprob: -3.4528727531433105
    4. ' chosen' → logprob: -3.7028727531433105
    5. ' for' → logprob: -3.7028727531433105
    6. 'part' → logprob: -4.2028727531433105
    7. '
' → logprob: -4.3278727531433105
    8. '```' → logprob: -4.7028727531433105
    9. '#' → logprob: -4.9528727531433105
    10. ' parties' → logprob: -5.2028727531433105

Token 1701: ',' (ID: 11)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07932000607252121
    2. '_part' → logprob: -3.954319953918457
    3. 'chosen' → logprob: -3.954319953918457
    4. 'for' → logprob: -4.829319953918457
    5. '_' → logprob: -4.954319953918457
    6. 'W' → logprob: -4.954319953918457
    7. '#' → logprob: -5.704319953918457
    8. 'heroes' → logprob: -6.079319953918457
    9. '
' → logprob: -6.579319953918457
    10. '_W' → logprob: -6.704319953918457

Token 1702: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27739980816841125
    2. ' for' → logprob: -1.9023997783660889
    3. 'chosen' → logprob: -3.152399778366089
    4. 'missing' → logprob: -4.402400016784668
    5. '#' → logprob: -4.527400016784668
    6. '       ' → logprob: -4.527400016784668
    7. '
' → logprob: -4.902400016784668
    8. '           ' → logprob: -5.777400016784668
    9. 'selected' → logprob: -6.402400016784668
    10. ' chosen' → logprob: -6.527400016784668

Token 1703: ' count' (ID: 3605)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1652634143829346
    2. '#' → logprob: -1.6652634143829346
    3. 'for' → logprob: -1.6652634143829346
    4. '       ' → logprob: -2.0402634143829346
    5. ' =' → logprob: -2.7902634143829346
    6. 'chosen' → logprob: -2.9152634143829346
    7. 'will' → logprob: -4.2902631759643555
    8. 'have' → logprob: -4.7902631759643555
    9. 'need' → logprob: -4.9152631759643555
    10. '```' → logprob: -5.0402631759643555

Token 1704: ' parties' (ID: 13531)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17957361042499542
    2. 'chosen' → logprob: -2.3045735359191895
    3. ' for' → logprob: -3.5545735359191895
    4. 'part' → logprob: -5.0545735359191895
    5. ' chosen' → logprob: -5.3045735359191895
    6. '   ' → logprob: -5.3045735359191895
    7. 'the' → logprob: -5.6795735359191895
    8. 'missing' → logprob: -5.8045735359191895
    9. 'p' → logprob: -6.0545735359191895
    10. ' the' → logprob: -6.8045735359191895

Token 1705: ' lacking' (ID: 53426)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0767260789871216
    2. '=' → logprob: -1.9517260789871216
    3. '_' → logprob: -1.9517260789871216
    4. '_part' → logprob: -1.9517260789871216
    5. '_ch' → logprob: -2.701725959777832
    6. 'chosen' → logprob: -3.201725959777832
    7. '_selected' → logprob: -4.201725959777832
    8. '_used' → logprob: -4.326725959777832
    9. '_w' → logprob: -4.451725959777832
    10. 's' → logprob: -4.451725959777832

Token 1706: ' warrior' (ID: 76541)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7809994220733643
    2. 'war' → logprob: -1.1559994220733643
    3. '_w' → logprob: -2.6559994220733643
    4. 'for' → logprob: -2.9059994220733643
    5. 'W' → logprob: -3.4059994220733643
    6. '   ' → logprob: -4.030999183654785
    7. '_W' → logprob: -4.905999183654785
    8. '       ' → logprob: -5.405999183654785
    9. 'the' → logprob: -5.405999183654785
    10. ' warrior' → logprob: -5.405999183654785

Token 1707: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.104108214378357
    2. '
' → logprob: -1.854108214378357
    3. '       ' → logprob: -1.979108214378357
    4. '   ' → logprob: -2.8541083335876465
    5. '=' → logprob: -2.9791083335876465
    6. '#' → logprob: -3.1041083335876465
    7. 's' → logprob: -3.4791083335876465
    8. 'for' → logprob: -3.6041083335876465
    9. '_count' → logprob: -4.1041083335876465
    10. '_party' → logprob: -4.1041083335876465

Token 1708: ' cler' (ID: 91536)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.07112233340740204
    2. ' cler' → logprob: -2.696122407913208
    3. 'cl' → logprob: -7.696122169494629
    4. '#' → logprob: -8.071122169494629
    5. '       ' → logprob: -9.071122169494629
    6. 'clar' → logprob: -9.321122169494629
    7. 'c' → logprob: -9.696122169494629
    8. 'cles' → logprob: -11.071122169494629
    9. '   ' → logprob: -11.071122169494629
    10. ' #' → logprob: -11.196122169494629

Token 1709: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0009188431431539357
    2. 'ics' → logprob: -7.000918865203857
    3. '```' → logprob: -13.7509183883667
    4. 'er' → logprob: -14.0009183883667
    5. 'i' → logprob: -14.1259183883667
    6. 'if' → logprob: -14.3759183883667
    7. '   ' → logprob: -14.6259183883667
    8. 'ar' → logprob: -15.1259183883667
    9. '#' → logprob: -15.1259183883667
    10. '[' → logprob: -15.5009183883667

Token 1710: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5340811014175415
    2. ' =' → logprob: -1.7840811014175415
    3. 's' → logprob: -2.409080982208252
    4. ',' → logprob: -3.284080982208252
    5. '=' → logprob: -3.909080982208252
    6. '   ' → logprob: -4.159080982208252
    7. '
' → logprob: -4.659080982208252
    8. '           ' → logprob: -4.659080982208252
    9. '_count' → logprob: -4.784080982208252
    10. 'chosen' → logprob: -5.159080982208252

Token 1711: ' mage' (ID: 89091)
  Prédit: 'mage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mage' → logprob: -0.003712546546012163
    2. 'm' → logprob: -6.7537126541137695
    3. '       ' → logprob: -7.1287126541137695
    4. ' mage' → logprob: -7.2537126541137695
    5. '   ' → logprob: -7.8787126541137695
    6. '#' → logprob: -8.25371265411377
    7. ' or' → logprob: -8.87871265411377
    8. 'mages' → logprob: -9.25371265411377
    9. 'or' → logprob: -10.87871265411377
    10. '
' → logprob: -10.87871265411377

Token 1712: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09135303646326065
    2. '
' → logprob: -2.966352939605713
    3. 'chosen' → logprob: -4.216352939605713
    4. 'selected' → logprob: -4.966352939605713
    5. 'missing' → logprob: -5.591352939605713
    6. '```' → logprob: -6.091352939605713
    7. '#' → logprob: -6.216352939605713
    8. '        
' → logprob: -6.341352939605713
    9. 'party' → logprob: -7.466352939605713
    10. '   ' → logprob: -7.466352939605713

Token 1713: ' chosen' (ID: 16180)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.12975454330444336
    2. 'chosen' → logprob: -2.2547545433044434
    3. 'the' → logprob: -5.004754543304443
    4. '[(' → logprob: -5.129754543304443
    5. '[' → logprob: -6.254754543304443
    6. '[]' → logprob: -8.129755020141602
    7. '#' → logprob: -8.379755020141602
    8. 'range' → logprob: -8.379755020141602
    9. 'list' → logprob: -8.504755020141602
    10. '   ' → logprob: -8.879755020141602

Token 1714: ' parties' (ID: 13531)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11115143448114395
    2. 'chosen' → logprob: -2.8611514568328857
    3. '
' → logprob: -3.9861514568328857
    4. '#' → logprob: -4.361151218414307
    5. 'selected' → logprob: -4.986151218414307
    6. 'missing' → logprob: -5.611151218414307
    7. '   ' → logprob: -6.861151218414307
    8. ' chosen' → logprob: -7.236151218414307
    9. 'for' → logprob: -7.361151218414307
    10. '        
' → logprob: -7.361151218414307

Token 1715: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.139868825674057
    2. '
' → logprob: -3.26486873626709
    3. 'chosen' → logprob: -3.26486873626709
    4. 'selected' → logprob: -4.01486873626709
    5. '```' → logprob: -4.38986873626709
    6. '#' → logprob: -4.88986873626709
    7. 'missing' → logprob: -5.63986873626709
    8. ' chosen' → logprob: -6.51486873626709
    9. 'part' → logprob: -6.63986873626709
    10. '        
' → logprob: -6.76486873626709

Token 1716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020920565351843834
    2. '
' → logprob: -4.145920753479004
    3. 'for' → logprob: -6.520920753479004
    4. 'chosen' → logprob: -6.520920753479004
    5. 'missing' → logprob: -7.270920753479004
    6. '        
' → logprob: -8.020920753479004
    7. '```' → logprob: -8.270920753479004
    8. 'selected' → logprob: -8.645920753479004
    9. '   ' → logprob: -9.020920753479004
    10. 'count' → logprob: -9.270920753479004

Token 1717: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11462123692035675
    2. 'chosen' → logprob: -2.364621162414551
    3. 'missing' → logprob: -5.364621162414551
    4. 'selected' → logprob: -5.989621162414551
    5. '
' → logprob: -6.114621162414551
    6. '#' (adapté à ' #') → logprob: -6.114621162414551
    7. '        
' → logprob: -7.114621162414551
    8. ' chosen' → logprob: -7.739621162414551
    9. '   ' → logprob: -7.989621162414551
    10. 'count' → logprob: -8.73962116241455

Token 1718: ' For' (ID: 2214)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.3230303227901459
    2. '       ' → logprob: -1.5730303525924683
    3. '#' → logprob: -3.4480302333831787
    4. 'missing' → logprob: -3.6980302333831787
    5. 'selected' → logprob: -5.698030471801758
    6. '
' → logprob: -5.948030471801758
    7. 'part' → logprob: -6.448030471801758
    8. '   ' → logprob: -6.823030471801758
    9. '           ' → logprob: -7.198030471801758
    10. 'from' → logprob: -7.573030471801758

Token 1719: ' beginner' (ID: 57062)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.079287089407444
    2. 'chosen' → logprob: -3.329287052154541
    3. 'party' → logprob: -3.704287052154541
    4. 'h' → logprob: -4.954287052154541
    5. 'i' → logprob: -6.204287052154541
    6. 'part' → logprob: -6.329287052154541
    7. '_p' → logprob: -6.829287052154541
    8. 'selected' → logprob: -7.579287052154541
    9. '(p' → logprob: -7.829287052154541
    10. '_party' → logprob: -7.829287052154541

Token 1720: ' approach' (ID: 7139)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8419167995452881
    2. '_' → logprob: -1.466916799545288
    3. 'p' → logprob: -1.841916799545288
    4. ' approach' → logprob: -2.966916799545288
    5. ' _' → logprob: -4.341917037963867
    6. 'party' → logprob: -4.466917037963867
    7. 'part' → logprob: -4.841917037963867
    8. ' line' → logprob: -4.841917037963867
    9. 'i' → logprob: -4.966917037963867
    10. 'for' → logprob: -4.966917037963867

Token 1721: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0599549375474453
    2. ',' → logprob: -3.809954881668091
    3. '
' → logprob: -4.55995512008667
    4. 'selected' → logprob: -5.05995512008667
    5. ':' → logprob: -5.30995512008667
    6. 'chosen' → logprob: -5.30995512008667
    7. '#' → logprob: -6.05995512008667
    8. ':
' → logprob: -6.18495512008667
    9. ' chosen' → logprob: -7.18495512008667
    10. '   ' → logprob: -7.43495512008667

Token 1722: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7223804593086243
    2. 'pass' → logprob: -2.0973803997039795
    3. '           ' → logprob: -2.3473803997039795
    4. '       ' → logprob: -2.3473803997039795
    5. 'chosen' → logprob: -2.3473803997039795
    6. 'missing' → logprob: -2.8473803997039795
    7. 'continue' → logprob: -3.7223803997039795
    8. '
' → logprob: -4.972380638122559
    9. 'selected' → logprob: -5.722380638122559
    10. 'for' → logprob: -5.722380638122559

Token 1723: ' can' (ID: 665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.1959689855575562
    2. '       ' → logprob: -1.9459689855575562
    3. '#' → logprob: -2.4459691047668457
    4. ' can' → logprob: -2.5709691047668457
    5. ' need' → logprob: -2.5709691047668457
    6. 'continue' → logprob: -2.8209691047668457
    7. 'don't' → logprob: -2.9459691047668457
    8. ' don't' → logprob: -3.3209691047668457
    9. 'have' → logprob: -3.5709691047668457
    10. 'do' → logprob: -3.6959691047668457

Token 1724: ' keep' (ID: 3357)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.1984543800354004
    2. '#' → logprob: -1.3234543800354004
    3. 'pass' → logprob: -1.3234543800354004
    4. 'for' → logprob: -3.4484543800354004
    5. 'chosen' → logprob: -3.8234543800354004
    6. 'continue' → logprob: -4.3234543800354
    7. '```' → logprob: -4.4484543800354
    8. 'keep' → logprob: -4.4484543800354
    9. 'stop' → logprob: -4.6984543800354
    10. 'simulate' → logprob: -4.8234543800354

Token 1725: ' a' (ID: 261)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.23409578204154968
    2. 'a' → logprob: -2.234095811843872
    3. 'track' → logprob: -2.734095811843872
    4. 'selected' → logprob: -4.234095573425293
    5. 'tracking' → logprob: -5.109095573425293
    6. '#' → logprob: -5.359095573425293
    7. '```' → logprob: -5.484095573425293
    8. 'cho' → logprob: -5.984095573425293
    9. 'the' → logprob: -6.484095573425293
    10. 'part' → logprob: -7.234095573425293

Token 1726: ' list' (ID: 1562)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.010917894542217255
    2. '#' → logprob: -5.635917663574219
    3. 'list' → logprob: -5.760917663574219
    4. 'selected' → logprob: -6.385917663574219
    5. '```' → logprob: -7.135917663574219
    6. 'for' → logprob: -7.885917663574219
    7. 'new' → logprob: -8.260917663574219
    8. 'count' → logprob: -8.635917663574219
    9. 'line' → logprob: -9.010917663574219
    10. 'ch' → logprob: -9.135917663574219

Token 1727: ' of' (ID: 328)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.6346642374992371
    2. 'selected' → logprob: -1.6346642971038818
    3. '       ' → logprob: -2.259664297103882
    4. 'of' → logprob: -2.884664297103882
    5. '=' → logprob: -3.259664297103882
    6. '=[]' → logprob: -3.884664297103882
    7. ' =' → logprob: -4.009664058685303
    8. '_selected' → logprob: -5.259664058685303
    9. '           ' → logprob: -5.634664058685303
    10. '=[]
' → logprob: -5.634664058685303

Token 1728: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.018970470875501633
    2. 'part' → logprob: -4.768970489501953
    3. 'selected' → logprob: -5.018970489501953
    4. 'p' → logprob: -6.518970489501953
    5. '(p' → logprob: -7.518970489501953
    6. 'picked' → logprob: -8.018970489501953
    7. ' chosen' → logprob: -8.393970489501953
    8. 'party' → logprob: -8.393970489501953
    9. '(ch' → logprob: -8.643970489501953
    10. '(part' → logprob: -8.768970489501953

Token 1729: ' parties' (ID: 13531)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.2823242247104645
    2. 'part' → logprob: -1.407324194908142
    3. '_party' → logprob: -8.032323837280273
    4. '_list' → logprob: -8.282323837280273
    5. '_p' → logprob: -8.657323837280273
    6. '_parts' → logprob: -8.782323837280273
    7. '_' → logprob: -9.032323837280273
    8. '```' → logprob: -10.407323837280273
    9. '
' → logprob: -11.032323837280273
    10. 'party' → logprob: -11.282323837280273

Token 1730: ' and' (ID: 326)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.44936421513557434
    2. '
' → logprob: -2.199364185333252
    3. '       ' → logprob: -2.199364185333252
    4. ' chosen' → logprob: -3.449364185333252
    5. '[]
' → logprob: -3.574364185333252
    6. 'selected' → logprob: -3.824364185333252
    7. '```' → logprob: -4.199364185333252
    8. '[
' → logprob: -4.324364185333252
    9. '[]' → logprob: -4.699364185333252
    10. 'choices' → logprob: -5.699364185333252

Token 1731: ' count' (ID: 3605)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0386958122253418
    2. 'for' → logprob: -1.4136958122253418
    3. ' for' → logprob: -2.163695812225342
    4. 'chosen' → logprob: -2.913695812225342
    5. '
' → logprob: -3.038695812225342
    6. 'continue' → logprob: -3.163695812225342
    7. ' continue' → logprob: -4.038695812225342
    8. 'selected' → logprob: -4.288695812225342
    9. 's' → logprob: -4.538695812225342
    10. 'calculate' → logprob: -4.663695812225342

Token 1732: ' missing' (ID: 12486)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.48308897018432617
    2. '_' → logprob: -1.6080889701843262
    3. ' =' → logprob: -3.483088970184326
    4. 's' → logprob: -3.733088970184326
    5. '_ch' → logprob: -3.858088970184326
    6. '[' → logprob: -4.233088970184326
    7. 'chosen' → logprob: -4.358088970184326
    8. '_selected' → logprob: -4.483088970184326
    9. '_parts' → logprob: -4.858088970184326
    10. '_p' → logprob: -4.858088970184326

Token 1733: '

' (ID: 279)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.4536667466163635
    2. ' =' → logprob: -1.3286666870117188
    3. '_ch' → logprob: -3.8286666870117188
    4. '_party' → logprob: -3.9536666870117188
    5. '_list' → logprob: -4.328666687011719
    6. 's' → logprob: -4.453666687011719
    7. '_selected' → logprob: -5.078666687011719
    8. '_parts' → logprob: -5.453666687011719
    9. 'chosen' → logprob: -5.828666687011719
    10. '=' → logprob: -5.953666687011719

Token 1734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09126022458076477
    2. ' =' → logprob: -3.5912601947784424
    3. 'chosen' → logprob: -3.7162601947784424
    4. ' chosen' → logprob: -4.8412604331970215
    5. '
' → logprob: -5.2162604331970215
    6. '_selected' → logprob: -5.9662604331970215
    7. '_list' → logprob: -6.0912604331970215
    8. '   ' → logprob: -6.0912604331970215
    9. '[]' → logprob: -6.3412604331970215
    10. '[' → logprob: -6.4662604331970215

Token 1735: ' chosen' (ID: 16180)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013812391087412834
    2. 'chosen' (adapté à ' chosen') → logprob: -5.01381254196167
    3. '
' → logprob: -5.51381254196167
    4. '```' → logprob: -6.51381254196167
    5. '   ' → logprob: -7.01381254196167
    6. 'selected' → logprob: -8.263812065124512
    7. ' chosen' → logprob: -8.513812065124512
    8. '        
' → logprob: -9.388812065124512
    9. '``' → logprob: -10.263812065124512
    10. 'ch' → logprob: -11.013812065124512

Token 1736: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0004475924652069807
    2. '_parts' → logprob: -9.000447273254395
    3. 'part' → logprob: -9.125447273254395
    4. '_' → logprob: -9.625447273254395
    5. '_list' → logprob: -10.125447273254395
    6. '_party' → logprob: -10.375447273254395
    7. ' =' → logprob: -10.625447273254395
    8. '.append' → logprob: -11.500447273254395
    9. '=' → logprob: -11.875447273254395
    10. '_par' → logprob: -12.125447273254395

Token 1737: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0007802037871442735
    2. '_part' → logprob: -8.25078010559082
    3. '```' → logprob: -8.87578010559082
    4. '=' → logprob: -9.25078010559082
    5. 's' → logprob: -9.50078010559082
    6. '
' → logprob: -9.62578010559082
    7. 'part' → logprob: -10.37578010559082
    8. ' =' → logprob: -10.50078010559082
    9. '_list' → logprob: -11.50078010559082
    10. '   ' → logprob: -11.75078010559082

Token 1738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20376120507717133
    2. '=' → logprob: -1.7037612199783325
    3. '.append' → logprob: -6.203761100769043
    4. '=[]' → logprob: -8.203761100769043
    5. '_list' → logprob: -11.578761100769043
    6. '=[]
' → logprob: -11.578761100769043
    7. '[]' → logprob: -12.078761100769043
    8. '_append' → logprob: -12.453761100769043
    9. '_selected' → logprob: -12.703761100769043
    10. 's' → logprob: -12.953761100769043

Token 1739: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.0126840758603066e-05
    2. '[]
' → logprob: -10.375040054321289
    3. '[' → logprob: -12.625040054321289
    4. ' []' → logprob: -12.750040054321289
    5. '[]}' → logprob: -13.375040054321289
    6. '[]

' → logprob: -15.125040054321289
    7. '[]>' → logprob: -15.250040054321289
    8. '[])' → logprob: -15.625040054321289
    9. '[],' → logprob: -15.750040054321289
    10. '[]"' → logprob: -16.25004005432129

Token 1740: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019381542224436998
    2. 'for' → logprob: -6.376938343048096
    3. '           ' → logprob: -9.626937866210938
    4. '
' → logprob: -9.626937866210938
    5. '   ' → logprob: -9.751937866210938
    6. '```' → logprob: -10.751937866210938
    7. ' for' → logprob: -11.626937866210938
    8. '        
' → logprob: -11.751937866210938
    9. '               ' → logprob: -13.001937866210938
    10. 'selected' → logprob: -13.626937866210938

Token 1741: ' chosen' (ID: 16180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3327375650405884
    2. '       ' → logprob: -1.4577375650405884
    3. '
' → logprob: -3.582737445831299
    4. ' for' → logprob: -5.082737445831299
    5. 'chosen' (adapté à ' chosen') → logprob: -5.082737445831299
    6. '```' → logprob: -5.082737445831299
    7. '   ' → logprob: -6.582737445831299
    8. '``' → logprob: -7.207737445831299
    9. '           ' → logprob: -7.832737445831299
    10. '#' → logprob: -8.457737922668457

Token 1742: '_' (ID: 62)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0010174484923481941
    2. '.append' → logprob: -7.6260175704956055
    3. '_' → logprob: -8.126017570495605
    4. '_parts' → logprob: -9.251017570495605
    5. 'part' → logprob: -9.751017570495605
    6. ' =' → logprob: -10.751017570495605
    7. '.' → logprob: -11.501017570495605
    8. '_tokens' → logprob: -11.501017570495605
    9. '   ' → logprob: -11.626017570495605
    10. '_party' → logprob: -12.001017570495605

Token 1743: 'heroes' (ID: 103812)
  Prédit: 'heroes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.24912029504776
    2. 'part' → logprob: -1.6241202354431152
    3. '_part' → logprob: -3.9991202354431152
    4. '_' → logprob: -6.249120235443115
    5. 'for' → logprob: -6.749120235443115
    6. '=' → logprob: -7.999120235443115
    7. 'roles' → logprob: -8.499120712280273
    8. 'p' → logprob: -8.749120712280273
    9. 'party' → logprob: -8.999120712280273
    10. ' =' → logprob: -8.999120712280273

Token 1744: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.4221067428588867
    2. '.clear' → logprob: -1.5471067428588867
    3. '.' → logprob: -3.1721067428588867
    4. '=' → logprob: -3.4221067428588867
    5. ' =' → logprob: -3.5471067428588867
    6. '<|end|>' → logprob: -4.547106742858887
    7. 'add' → logprob: -4.672106742858887
    8. ',' → logprob: -6.297106742858887
    9. '.pop' → logprob: -6.922106742858887
    10. '.update' → logprob: -6.922106742858887

Token 1745: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0001295222609769553
    2. ' set' → logprob: -9.000129699707031
    3. '{' → logprob: -12.500129699707031
    4. '{}' → logprob: -13.875129699707031
    5. '=set' → logprob: -14.000129699707031
    6. '	set' → logprob: -15.250129699707031
    7. '   ' → logprob: -15.875129699707031
    8. ' ' → logprob: -16.37512969970703
    9. '(set' → logprob: -16.87512969970703
    10. ')set' → logprob: -18.37512969970703

Token 1746: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.32894328236579895
    2. '()' → logprob: -1.3289432525634766
    3. '       ' → logprob: -4.453943252563477
    4. 'chosen' → logprob: -5.953943252563477
    5. '(),' → logprob: -8.078943252563477
    6. ',' → logprob: -8.578943252563477
    7. '(selected' → logprob: -9.578943252563477
    8. '        ' → logprob: -9.828943252563477
    9. '()

' → logprob: -9.828943252563477
    10. '<|end|>' → logprob: -9.953943252563477

Token 1747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0712146982550621
    2. 'chosen' → logprob: -2.9462146759033203
    3. '```' → logprob: -4.69621467590332
    4. ' chosen' → logprob: -5.44621467590332
    5. '   ' → logprob: -6.19621467590332
    6. '           ' → logprob: -8.69621467590332
    7. '[' → logprob: -8.82121467590332
    8. '``' → logprob: -9.19621467590332
    9. 'selected' → logprob: -9.19621467590332
    10. ',' → logprob: -10.07121467590332

Token 1748: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.06347960233688354
    2. ' chosen' → logprob: -3.1884796619415283
    3. '       ' → logprob: -4.438479423522949
    4. '```' → logprob: -5.188479423522949
    5. '   ' → logprob: -6.313479423522949
    6. 'selected' → logprob: -7.438479423522949
    7. '{' → logprob: -9.31347942352295
    8. '        ' → logprob: -9.56347942352295
    9. '           ' → logprob: -9.81347942352295
    10. '[]' → logprob: -10.18847942352295

Token 1749: '_w' (ID: 3567)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.03222394734621048
    2. '_w' → logprob: -3.53222393989563
    3. 'part' → logprob: -6.032224178314209
    4. '_' → logprob: -10.90722370147705
    5. '_p' → logprob: -10.90722370147705
    6. '_party' → logprob: -11.15722370147705
    7. '_parts' → logprob: -11.15722370147705
    8. '_par' → logprob: -14.03222370147705
    9. '```' → logprob: -14.15722370147705
    10. 'w' → logprob: -14.40722370147705

Token 1750: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.42314350605010986
    2. 'part' → logprob: -1.4231435060501099
    3. '_part' → logprob: -2.2981433868408203
    4. 'arr' → logprob: -6.79814338684082
    5. 'ari' → logprob: -7.54814338684082
    6. 'art' → logprob: -7.67314338684082
    7. 'arries' → logprob: -7.67314338684082
    8. 'p' → logprob: -8.04814338684082
    9. 'par' → logprob: -8.42314338684082
    10. 'ars' → logprob: -9.42314338684082

Token 1751: 'riors' (ID: 46128)
  Prédit: 'iors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iors' → logprob: -1.2008103132247925
    2. 'riors' → logprob: -1.3258103132247925
    3. 'ors' → logprob: -1.8258103132247925
    4. 'or' → logprob: -1.8258103132247925
    5. 'art' → logprob: -3.200810432434082
    6. 'part' → logprob: -4.325810432434082
    7. 'ories' → logprob: -4.325810432434082
    8. 'ities' → logprob: -4.450810432434082
    9. '_part' → logprob: -5.450810432434082
    10. 'itories' → logprob: -5.700810432434082

Token 1752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872034251689911
    2. ' =' → logprob: -1.1372034549713135
    3. '.add' → logprob: -8.887203216552734
    4. '=
' → logprob: -10.012203216552734
    5. '   ' → logprob: -10.137203216552734
    6. '=set' → logprob: -10.262203216552734
    7. '.clear' → logprob: -10.637203216552734
    8. '<|end|>' → logprob: -11.137203216552734
    9. ',' → logprob: -11.762203216552734
    10. '       ' → logprob: -11.887203216552734

Token 1753: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.47626737493556e-05
    2. ' set' → logprob: -10.37503433227539
    3. '=set' → logprob: -12.62503433227539
    4. '	set' → logprob: -15.75003433227539
    5. '(set' → logprob: -16.87503433227539
    6. '{' → logprob: -17.37503433227539
    7. '{}' → logprob: -17.75003433227539
    8. '=' → logprob: -18.87503433227539
    9. ')set' → logprob: -19.25003433227539
    10. '   ' → logprob: -19.50003433227539

Token 1754: '()
' (ID: 1234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5696470141410828
    2. ' =' → logprob: -1.0696470737457275
    3. '       ' → logprob: -3.1946470737457275
    4. '```' → logprob: -4.194646835327148
    5. '.add' → logprob: -4.319646835327148
    6. '=set' → logprob: -5.444646835327148
    7. '=
' → logprob: -5.569646835327148
    8. '()' → logprob: -6.069646835327148
    9. ',' → logprob: -6.194646835327148
    10. '(
' → logprob: -6.819646835327148

Token 1755: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3039790391921997
    2. '```' → logprob: -1.5539790391921997
    3. 'chosen' → logprob: -3.17897891998291
    4. '``' → logprob: -5.05397891998291
    5. '   ' → logprob: -6.67897891998291
    6. ' chosen' → logprob: -7.05397891998291
    7. '           ' → logprob: -8.42897891998291
    8. '[' → logprob: -9.42897891998291
    9. 'selected' → logprob: -9.92897891998291
    10. ',' → logprob: -10.17897891998291

Token 1756: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.0006582272471860051
    2. '```' → logprob: -7.87565803527832
    3. '       ' → logprob: -8.37565803527832
    4. '   ' → logprob: -10.37565803527832
    5. '``' → logprob: -12.12565803527832
    6. 'selected' → logprob: -12.62565803527832
    7. ' chosen' → logprob: -12.62565803527832
    8. '{' → logprob: -13.25065803527832
    9. '           ' → logprob: -14.25065803527832
    10. '{
' → logprob: -14.75065803527832

Token 1757: '_cl' (ID: 11209)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.34701424837112427
    2. '_' → logprob: -1.7220141887664795
    3. '_cl' → logprob: -2.2220141887664795
    4. 'part' → logprob: -5.722014427185059
    5. '_w' → logprob: -6.722014427185059
    6. '_party' → logprob: -7.472014427185059
    7. 'cler' → logprob: -8.097014427185059
    8. '_m' → logprob: -8.222014427185059
    9. 'heroes' → logprob: -9.222014427185059
    10. '   ' → logprob: -9.722014427185059

Token 1758: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6214647889137268
    2. 'o' → logprob: -2.371464729309082
    3. '```' → logprob: -2.371464729309082
    4. 'ar' → logprob: -2.496464729309082
    5. '_part' → logprob: -3.246464729309082
    6. 'e' → logprob: -3.246464729309082
    7. 'ear' → logprob: -3.996464729309082
    8. '_' → logprob: -4.496464729309082
    9. 'chosen' → logprob: -4.496464729309082
    10. 'eries' → logprob: -4.621464729309082

Token 1759: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.002496587112545967
    2. 'ic' → logprob: -6.502496719360352
    3. '```' → logprob: -8.502496719360352
    4. '   ' → logprob: -9.252496719360352
    5. 'icts' → logprob: -9.502496719360352
    6. 'ors' → logprob: -9.502496719360352
    7. '
' → logprob: -9.627496719360352
    8. '_' → logprob: -10.252496719360352
    9. 's' → logprob: -10.502496719360352
    10. '       ' → logprob: -10.502496719360352

Token 1760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11443965882062912
    2. ' =' → logprob: -2.2394397258758545
    3. '       ' → logprob: -7.364439487457275
    4. '.add' → logprob: -7.614439487457275
    5. '=
' → logprob: -8.614439964294434
    6. '=set' → logprob: -8.864439964294434
    7. '```' → logprob: -10.239439964294434
    8. '           ' → logprob: -10.364439964294434
    9. ',' → logprob: -10.364439964294434
    10. '.' → logprob: -11.114439964294434

Token 1761: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00012368128227535635
    2. ' set' → logprob: -9.000123977661133
    3. '=set' → logprob: -15.500123977661133
    4. '	set' → logprob: -17.000123977661133
    5. '(set' → logprob: -17.375123977661133
    6. '{' → logprob: -18.000123977661133
    7. ')set' → logprob: -20.500123977661133
    8. '#set' → logprob: -20.500123977661133
    9. '{}' → logprob: -20.625123977661133
    10. '```' → logprob: -20.750123977661133

Token 1762: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27283135056495667
    2. 'chosen' → logprob: -1.8978313207626343
    3. '```' → logprob: -2.522831439971924
    4. 'set' → logprob: -5.272831439971924
    5. '``' → logprob: -6.897831439971924
    6. '=set' → logprob: -7.022831439971924
    7. ' =' → logprob: -7.522831439971924
    8. '   ' → logprob: -7.647831439971924
    9. '
' → logprob: -8.272830963134766
    10. 'selected' → logprob: -9.022830963134766

Token 1763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17479461431503296
    2. 'chosen' → logprob: -2.4247946739196777
    3. '```' → logprob: -2.6747946739196777
    4. ' chosen' → logprob: -6.049794673919678
    5. '``' → logprob: -8.04979419708252
    6. 'selected' → logprob: -8.92479419708252
    7. '   ' → logprob: -9.04979419708252
    8. '           ' → logprob: -11.29979419708252
    9. 'Chosen' → logprob: -11.92479419708252
    10. '               ' → logprob: -13.42479419708252

Token 1764: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.08740225434303284
    2. '```' → logprob: -2.83740234375
    3. '       ' → logprob: -3.83740234375
    4. '   ' → logprob: -6.46240234375
    5. '``' → logprob: -6.46240234375
    6. ' chosen' → logprob: -8.33740234375
    7. '           ' → logprob: -9.08740234375
    8. 'selected' → logprob: -10.33740234375
    9. '               ' → logprob: -10.33740234375
    10. '        ' → logprob: -12.21240234375

Token 1765: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.16131284832954407
    2. '_part' → logprob: -1.9113128185272217
    3. 'part' → logprob: -7.161313056945801
    4. '_party' → logprob: -9.1613130569458
    5. '_parts' → logprob: -10.0363130569458
    6. '```' → logprob: -10.0363130569458
    7. '_set' → logprob: -10.2863130569458
    8. 's' → logprob: -10.7863130569458
    9. '=set' → logprob: -11.2863130569458
    10. 'm' → logprob: -11.7863130569458

Token 1766: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.002483626827597618
    2. 'part' → logprob: -6.50248384475708
    3. '_part' → logprob: -7.37748384475708
    4. 'art' → logprob: -9.252483367919922
    5. 'p' → logprob: -10.002483367919922
    6. 'age' → logprob: -10.252483367919922
    7. 'mages' → logprob: -10.502483367919922
    8. 'ates' → logprob: -11.002483367919922
    9. 'ag' → logprob: -11.252483367919922
    10. '   ' → logprob: -11.377483367919922

Token 1767: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001190702780149877
    2. ' =' → logprob: -6.751190662384033
    3. '=set' → logprob: -10.876191139221191
    4. '=
' → logprob: -14.001191139221191
    5. '   ' → logprob: -14.501191139221191
    6. '       ' → logprob: -16.001190185546875
    7. '.clear' → logprob: -18.376190185546875
    8. '           ' → logprob: -18.376190185546875
    9. '```' → logprob: -18.376190185546875
    10. '.add' → logprob: -18.376190185546875

Token 1768: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.0722858102526516e-05
    2. ' set' → logprob: -10.125041007995605
    3. '=set' → logprob: -14.875041007995605
    4. '	set' → logprob: -16.37504005432129
    5. '```' → logprob: -17.37504005432129
    6. '   ' → logprob: -17.62504005432129
    7. '(set' → logprob: -17.75004005432129
    8. '{' → logprob: -18.75004005432129
    9. ')set' → logprob: -19.62504005432129
    10. 'def' → logprob: -19.62504005432129

Token 1769: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002692532492801547
    2. '
' → logprob: -6.002692699432373
    3. '   ' → logprob: -9.877692222595215
    4. '<|end|>' → logprob: -10.002692222595215
    5. 'for' → logprob: -10.002692222595215
    6. '        
' → logprob: -10.502692222595215
    7. '```' → logprob: -10.627692222595215
    8. '	' → logprob: -12.127692222595215
    9. '	for' → logprob: -12.502692222595215
    10. ' for' → logprob: -12.752692222595215

Token 1771: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30353569984436035
    2. '       ' → logprob: -1.6785356998443604
    3. '
' → logprob: -3.9285356998443604
    4. ' for' → logprob: -4.178535461425781
    5. 'chosen' → logprob: -4.178535461425781
    6. 'max' (adapté à ' max') → logprob: -4.303535461425781
    7. '   ' → logprob: -4.928535461425781
    8. '```' → logprob: -6.303535461425781
    9. 'selected' → logprob: -6.928535461425781
    10. '``' → logprob: -8.053535461425781

Token 1772: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.004477354697883129
    2. '_part' → logprob: -5.504477500915527
    3. '   ' → logprob: -8.254477500915527
    4. '       ' → logprob: -9.754477500915527
    5. 'count' → logprob: -10.004477500915527
    6. '```' → logprob: -11.879477500915527
    7. '_' → logprob: -12.129477500915527
    8. 'part' → logprob: -12.379477500915527
    9. ')' → logprob: -12.754477500915527
    10. '\' → logprob: -13.254477500915527

Token 1773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7043088674545288
    2. ' =' → logprob: -0.7043088674545288
    3. ' +=' → logprob: -5.454308986663818
    4. '+=' → logprob: -5.829308986663818
    5. '+' → logprob: -6.329308986663818
    6. '       ' → logprob: -7.329308986663818
    7. '   ' → logprob: -7.579308986663818
    8. ',' → logprob: -8.45430850982666
    9. '=
' → logprob: -8.82930850982666
    10. ')' → logprob: -9.32930850982666

Token 1774: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.375015258789062
    4. '       ' → logprob: -19.250015258789062
    5. '```' → logprob: -19.250015258789062
    6. ' ' → logprob: -19.625015258789062
    7. 'len' → logprob: -20.625015258789062
    8. '00' → logprob: -20.625015258789062
    9. '000' → logprob: -20.750015258789062
    10. '  ' → logprob: -20.875015258789062

Token 1775: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.250003814697266
    4. '```' → logprob: -17.375003814697266
    5. '000' → logprob: -18.125003814697266
    6. '
' → logprob: -18.625003814697266
    7. 'len' → logprob: -18.750003814697266
    8. '00' → logprob: -19.125003814697266
    9. '       ' → logprob: -19.250003814697266
    10. '#' → logprob: -19.625003814697266

Token 1776: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010442581959068775
    2. '<|end|>' → logprob: -5.260442733764648
    3. 'for' → logprob: -6.260442733764648
    4. '
' → logprob: -6.760442733764648
    5. '        
' → logprob: -7.010442733764648
    6. ' for' → logprob: -7.760442733764648
    7. '   ' → logprob: -8.010442733764648
    8. '<|end|>' → logprob: -8.760442733764648
    9. '```' → logprob: -9.510442733764648
    10. '    
' → logprob: -10.635442733764648

Token 1777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003969455719925463
    2. '<|end|>' → logprob: -8.875396728515625
    3. 'for' → logprob: -9.125396728515625
    4. '   ' → logprob: -9.500396728515625
    5. ' for' → logprob: -10.500396728515625
    6. '
' → logprob: -10.875396728515625
    7. '        
' → logprob: -11.250396728515625
    8. '           ' → logprob: -12.250396728515625
    9. '<|end|>' → logprob: -12.625396728515625
    10. '```' → logprob: -13.500396728515625

Token 1778: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044496119022369385
    2. 'for' (adapté à ' for') → logprob: -3.1694960594177246
    3. ' for' → logprob: -6.669496059417725
    4. '
' → logprob: -8.919496536254883
    5. '   ' → logprob: -9.919496536254883
    6. '```' → logprob: -10.794496536254883
    7. 'part' → logprob: -12.169496536254883
    8. 'next' → logprob: -12.419496536254883
    9. '        
' → logprob: -12.919496536254883
    10. '           ' → logprob: -13.419496536254883

Token 1779: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02333783730864525
    2. ' p' → logprob: -3.7733378410339355
    3. 'party' → logprob: -9.523337364196777
    4. ' party' → logprob: -11.273337364196777
    5. '   ' → logprob: -12.273337364196777
    6. 'part' → logprob: -13.648337364196777
    7. ' ' → logprob: -15.273337364196777
    8. '	p' → logprob: -15.898337364196777
    9. '       ' → logprob: -16.648338317871094
    10. '  ' → logprob: -16.773338317871094

Token 1780: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003392767102923244
    2. 'in' → logprob: -8.00033950805664
    3. ' ' → logprob: -13.62533950805664
    4. '	in' → logprob: -14.12533950805664
    5. '_in' → logprob: -14.87533950805664
    6. '        ' → logprob: -15.00033950805664
    7. '[' → logprob: -15.62533950805664
    8. '           ' → logprob: -15.87533950805664
    9. '_' → logprob: -15.87533950805664
    10. 's' → logprob: -16.12533950805664

Token 1781: ' parties' (ID: 13531)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.318681188422488e-05
    2. ' parties' → logprob: -11.25001335144043
    3. 'parts' → logprob: -16.25001335144043
    4. '(part' → logprob: -17.50001335144043
    5. '   ' → logprob: -17.62501335144043
    6. 'party' → logprob: -17.62501335144043
    7. '
' → logprob: -19.75001335144043
    8. '	part' → logprob: -19.75001335144043
    9. ' partis' → logprob: -19.87501335144043
    10. '_part' → logprob: -20.00001335144043

Token 1782: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0006254645413719118
    2. ':' → logprob: -8.875625610351562
    3. 'sorted' → logprob: -9.000625610351562
    4. ':
' → logprob: -9.000625610351562
    5. 'in' → logprob: -9.250625610351562
    6. 's' → logprob: -10.250625610351562
    7. ' in' → logprob: -10.625625610351562
    8. '):
' → logprob: -11.000625610351562
    9. '           ' → logprob: -11.125625610351562
    10. '       ' → logprob: -11.500625610351562

Token 1783: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4174460470676422
    2. ':' → logprob: -1.4174460172653198
    3. '           ' → logprob: -2.4174461364746094
    4. '[' → logprob: -5.292446136474609
    5. '<|end|>' → logprob: -6.792446136474609
    6. ' in' → logprob: -6.917446136474609
    7. '<|end|>' → logprob: -7.542446136474609
    8. '():
' → logprob: -8.04244613647461
    9. '       ' → logprob: -8.29244613647461
    10. '):
' → logprob: -8.66744613647461

Token 1784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046510808169841766
    2. '[' → logprob: -9.000465393066406
    3. ' if' → logprob: -9.000465393066406
    4. '            
' → logprob: -10.000465393066406
    5. '<|end|>' → logprob: -10.250465393066406
    6. '            ' → logprob: -11.000465393066406
    7. '{' → logprob: -11.250465393066406
    8. 'if' → logprob: -11.375465393066406
    9. ' h' → logprob: -11.875465393066406
    10. '               ' → logprob: -12.000465393066406

Token 1785: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.20923283696174622
    2. '           ' → logprob: -1.9592328071594238
    3. 'h' (adapté à ' h') → logprob: -3.834232807159424
    4. '   ' → logprob: -4.209232807159424
    5. '(h' → logprob: -4.959232807159424
    6. '               ' → logprob: -6.459232807159424
    7. ' if' → logprob: -6.959232807159424
    8. ' (' → logprob: -7.459232807159424
    9. '       ' → logprob: -7.959232807159424
    10. 'if' → logprob: -8.709233283996582

Token 1786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05549021065235138
    2. ' not' → logprob: -3.680490255355835
    3. '           ' → logprob: -4.805490016937256
    4. ' in' → logprob: -5.055490016937256
    5. ' ,' → logprob: -5.055490016937256
    6. 'not' → logprob: -5.680490016937256
    7. 'in' → logprob: -6.430490016937256
    8. ',
' → logprob: -6.555490016937256
    9. ' if' → logprob: -7.680490016937256
    10. ',p' → logprob: -8.055490493774414

Token 1787: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20141352713108063
    2. ' w' → logprob: -1.7014135122299194
    3. '           ' → logprob: -15.45141315460205
    4. '   ' → logprob: -19.576414108276367
    5. '       ' → logprob: -19.701414108276367
    6. ',w' → logprob: -19.701414108276367
    7. 'None' → logprob: -19.951414108276367
    8. '=w' → logprob: -20.076414108276367
    9. '	w' → logprob: -20.201414108276367
    10. ' ' → logprob: -20.826414108276367

Token 1788: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17486466467380524
    2. 'in' → logprob: -2.5498647689819336
    3. ' in' → logprob: -3.4248647689819336
    4. '           ' → logprob: -3.5498647689819336
    5. ')' → logprob: -4.049864768981934
    6. ' ,' → logprob: -6.799864768981934
    7. ',
' → logprob: -7.549864768981934
    8. '<|end|>' → logprob: -7.924864768981934
    9. '=' → logprob: -8.049864768981934
    10. ',in' → logprob: -8.299864768981934

Token 1789: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141959190368652
    2. ' c' → logprob: -1.7014195919036865
    3. 'None' → logprob: -12.826419830322266
    4. ' None' → logprob: -13.326419830322266
    5. ',c' → logprob: -14.076419830322266
    6. ',' → logprob: -15.076419830322266
    7. '```' → logprob: -15.701419830322266
    8. '           ' → logprob: -16.326419830322266
    9. ' ' → logprob: -16.576419830322266
    10. '	c' → logprob: -16.701419830322266

Token 1790: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8625717163085938
    2. ')' → logprob: -1.2375717163085938
    3. '           ' → logprob: -1.8625717163085938
    4. ',' → logprob: -2.4875717163085938
    5. ' =' → logprob: -3.2375717163085938
    6. ' in' → logprob: -5.237571716308594
    7. '=None' → logprob: -6.112571716308594
    8. '==' → logprob: -7.612571716308594
    9. '          ' → logprob: -8.487571716308594
    10. 'in' → logprob: -8.487571716308594

Token 1791: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001201062579639256
    2. ' m' → logprob: -6.751201152801514
    3. 'c' → logprob: -10.626200675964355
    4. 'None' → logprob: -12.126200675964355
    5. ' None' → logprob: -14.126200675964355
    6. '           ' → logprob: -15.251200675964355
    7. ' c' → logprob: -16.501201629638672
    8. '```' → logprob: -16.751201629638672
    9. '   ' → logprob: -17.376201629638672
    10. '       ' → logprob: -17.376201629638672

Token 1792: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3452635407447815
    2. ' =' → logprob: -1.7202634811401367
    3. '=' → logprob: -2.8452634811401367
    4. ')' → logprob: -3.7202634811401367
    5. 'in' → logprob: -4.345263481140137
    6. ' in' → logprob: -5.095263481140137
    7. ' not' → logprob: -6.345263481140137
    8. ' if' → logprob: -6.595263481140137
    9. '<|end|>' → logprob: -6.595263481140137
    10. '```' → logprob: -6.970263481140137

Token 1793: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1269282102584839
    2. ' p' → logprob: -2.1269283294677734
    3. '(p' → logprob: -16.001928329467773
    4. ' (' → logprob: -18.001928329467773
    5. ')p' → logprob: -18.251928329467773
    6. '	p' → logprob: -18.751928329467773
    7. '_p' → logprob: -19.376928329467773
    8. ' ' → logprob: -19.876928329467773
    9. '   ' → logprob: -20.126928329467773
    10. '[p' → logprob: -20.251928329467773

Token 1794: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004948746878653765
    2. '<|end|>' → logprob: -5.379948616027832
    3. '               ' → logprob: -9.379948616027832
    4. ' if' → logprob: -9.629948616027832
    5. '<|end|>' → logprob: -10.254948616027832
    6. ',' → logprob: -10.629948616027832
    7. '       ' → logprob: -10.629948616027832
    8. '   ' → logprob: -10.754948616027832
    9. '```' → logprob: -11.004948616027832
    10. '          ' → logprob: -11.504948616027832

Token 1795: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.4881879400927573e-05
    2. ' if' → logprob: -10.875035285949707
    3. '       ' → logprob: -12.000035285949707
    4. '               ' → logprob: -12.750035285949707
    5. '```' → logprob: -12.750035285949707
    6. '   ' → logprob: -12.875035285949707
    7. 'if' → logprob: -14.750035285949707
    8. '	       ' → logprob: -14.875035285949707
    9. '<|end|>' → logprob: -15.250035285949707
    10. '          ' → logprob: -15.875035285949707

Token 1796: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1971127837896347
    2. '           ' → logprob: -2.197112798690796
    3. ' if' → logprob: -2.697112798690796
    4. '   ' → logprob: -8.072113037109375
    5. '       ' → logprob: -9.822113037109375
    6. ' ' → logprob: -12.197113037109375
    7. '```' → logprob: -13.322113037109375
    8. '	if' → logprob: -13.572113037109375
    9. 'h' → logprob: -13.947113037109375
    10. '               ' → logprob: -14.322113037109375

Token 1797: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.020548075437545776
    2. ' h' → logprob: -3.895548105239868
    3. '(h' → logprob: -12.395547866821289
    4. '   ' → logprob: -13.645547866821289
    5. '           ' → logprob: -15.520547866821289
    6. ' ' → logprob: -16.27054786682129
    7. ' (' → logprob: -16.39554786682129
    8. 'not' → logprob: -16.39554786682129
    9. '	h' → logprob: -16.52054786682129
    10. '[h' → logprob: -16.64554786682129

Token 1798: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011620194651186466
    2. 'not' → logprob: -4.511620044708252
    3. ' in' → logprob: -7.511620044708252
    4. 'in' → logprob: -10.63662052154541
    5. '	not' → logprob: -14.76162052154541
    6. '<|end|>' → logprob: -15.13662052154541
    7. ')' → logprob: -15.76162052154541
    8. '           ' → logprob: -15.88662052154541
    9. '```' → logprob: -16.011619567871094
    10. '_not' → logprob: -16.136619567871094

Token 1799: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.0052354102954268456
    2. ' chosen' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.63023567199707
    4. 'selected' → logprob: -15.25523567199707
    5. '           ' → logprob: -17.13023567199707
    6. '       ' → logprob: -17.13023567199707
    7. '```' → logprob: -17.25523567199707
    8. ' ' → logprob: -17.38023567199707
    9. '  ' → logprob: -17.63023567199707
    10. '    ' → logprob: -17.88023567199707

Token 1800: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.4849443838757e-06
    2. 'heroes' → logprob: -12.625004768371582
    3. '_ch' → logprob: -14.500004768371582
    4. '_part' → logprob: -14.875004768371582
    5. '\' → logprob: -16.750003814697266
    6. '
' → logprob: -17.250003814697266
    7. '```' → logprob: -17.250003814697266
    8. '_
' → logprob: -17.375003814697266
    9. '_choices' → logprob: -17.375003814697266
    10. 'Heroes' → logprob: -17.875003814697266

Token 1801: 'heroes' (ID: 103812)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.575965404510498
    2. 'heroes' → logprob: -0.825965404510498
    3. 'her' → logprob: -11.575965881347656
    4. 'chosen' → logprob: -11.700965881347656
    5. '_part' → logprob: -12.825965881347656
    6. ' heroes' → logprob: -12.825965881347656
    7. '{' → logprob: -14.450965881347656
    8. 'part' → logprob: -14.450965881347656
    9. '```' → logprob: -14.950965881347656
    10. '_ch' → logprob: -15.325965881347656

Token 1802: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33888158202171326
    2. ':
' → logprob: -1.5888816118240356
    3. ' or' → logprob: -2.963881492614746
    4. ':' → logprob: -4.088881492614746
    5. '           ' → logprob: -4.338881492614746
    6. ' and' → logprob: -7.463881492614746
    7. '):
' → logprob: -7.713881492614746
    8. 'and' → logprob: -8.088881492614746
    9. '<|end|>' → logprob: -8.338881492614746
    10. '==' → logprob: -10.088881492614746

Token 1803: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007819918682798743
    2. '           ' → logprob: -7.750782012939453
    3. ' continue' → logprob: -8.500782012939453
    4. 'continue' → logprob: -9.625782012939453
    5. '<|end|>' → logprob: -10.250782012939453
    6. '```' → logprob: -11.625782012939453
    7. '   ' → logprob: -12.250782012939453
    8. '              ' → logprob: -12.625782012939453
    9. ':
' → logprob: -12.750782012939453
    10. ':' → logprob: -13.000782012939453

Token 1804: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6117584705352783
    2. ' continue' → logprob: -1.3617584705352783
    3. 'continue' (adapté à ' continue') → logprob: -1.6117584705352783
    4. '           ' → logprob: -6.361758232116699
    5. '```' → logprob: -9.9867582321167
    6. '   ' → logprob: -10.4867582321167
    7. '                   ' → logprob: -10.4867582321167
    8. '_continue' → logprob: -11.8617582321167
    9. '                ' → logprob: -12.4867582321167
    10. '       ' → logprob: -12.4867582321167

Token 1805: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004286146257072687
    2. '               ' → logprob: -6.254286289215088
    3. '```' → logprob: -6.504286289215088
    4. '            ' → logprob: -7.879286289215088
    5. '            
' → logprob: -8.87928581237793
    6. '<|end|>' → logprob: -9.00428581237793
    7. 'if' → logprob: -9.75428581237793
    8. '          ' → logprob: -10.50428581237793
    9. ' if' → logprob: -10.62928581237793
    10. '       ' → logprob: -10.75428581237793

Token 1806: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002081739716231823
    2. '            ' → logprob: -6.627081871032715
    3. '```' → logprob: -7.502081871032715
    4. '               ' → logprob: -9.002081871032715
    5. ' if' → logprob: -10.502081871032715
    6. '          ' → logprob: -11.127081871032715
    7. '<|end|>' → logprob: -11.877081871032715
    8. '                   ' → logprob: -12.002081871032715
    9. 'if' → logprob: -12.002081871032715
    10. '   ' → logprob: -12.252081871032715

Token 1807: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3443402349948883
    2. ' if' → logprob: -1.344340205192566
    3. 'if' (adapté à ' if') → logprob: -4.3443403244018555
    4. ' w' → logprob: -4.8443403244018555
    5. 'w' → logprob: -5.0943403244018555
    6. '            ' → logprob: -6.0943403244018555
    7. '```' → logprob: -6.9693403244018555
    8. '               ' → logprob: -8.094340324401855
    9. '                   ' → logprob: -10.344340324401855
    10. 'If' → logprob: -10.594340324401855

Token 1808: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3132758140563965
    2. ' w' → logprob: -1.3132758140563965
    3. '   ' → logprob: -12.188276290893555
    4. '(w' → logprob: -12.438276290893555
    5. '           ' → logprob: -12.688276290893555
    6. '	w' → logprob: -14.438276290893555
    7. '       ' → logprob: -15.313276290893555
    8. '               ' → logprob: -15.313276290893555
    9. 'c' → logprob: -15.938276290893555
    10. 'None' → logprob: -16.688276290893555

Token 1809: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07387213408946991
    2. ' not' → logprob: -2.8238720893859863
    3. 'is' → logprob: -4.698872089385986
    4. 'not' → logprob: -5.948872089385986
    5. ' in' → logprob: -9.323872566223145
    6. 'in' → logprob: -10.448872566223145
    7. '           ' → logprob: -15.073872566223145
    8. '_not' → logprob: -15.573872566223145
    9. ')' → logprob: -15.698872566223145
    10. ' None' → logprob: -16.073871612548828

Token 1810: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8014622330665588
    2. 'None' → logprob: -1.051462173461914
    3. 'not' → logprob: -1.801462173461914
    4. ' None' → logprob: -3.301462173461914
    5. 'Not' → logprob: -11.551462173461914
    6. '(None' → logprob: -13.801462173461914
    7. 'is' → logprob: -14.051462173461914
    8. '=None' → logprob: -14.176462173461914
    9. ' is' → logprob: -14.301462173461914
    10. 'none' → logprob: -14.426462173461914

Token 1811: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01815696805715561
    2. ' None' → logprob: -4.018157005310059
    3. 'not' → logprob: -12.268157005310059
    4. '=None' → logprob: -13.768157005310059
    5. '_None' → logprob: -14.268157005310059
    6. '(None' → logprob: -15.143157005310059
    7. ' not' → logprob: -15.893157005310059
    8. '_none' → logprob: -16.143156051635742
    9. 'none' → logprob: -16.268156051635742
    10. '   ' → logprob: -16.518156051635742

Token 1812: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5626036524772644
    2. 'and' → logprob: -1.0626037120819092
    3. ' not' → logprob: -2.562603712081909
    4. 'not' → logprob: -5.06260347366333
    5. '           ' → logprob: -6.81260347366333
    6. ' in' → logprob: -9.187603950500488
    7. '               ' → logprob: -10.187603950500488
    8. 'in' → logprob: -10.312603950500488
    9. '            ' → logprob: -11.937603950500488
    10. ',' → logprob: -13.062603950500488

Token 1813: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.007606747094541788
    2. ' w' → logprob: -4.8826069831848145
    3. '(w' → logprob: -15.132606506347656
    4. '   ' → logprob: -16.132606506347656
    5. '	w' → logprob: -16.257606506347656
    6. ' ' → logprob: -17.132606506347656
    7. ' ' → logprob: -17.257606506347656
    8. ''w' → logprob: -17.507606506347656
    9. '[w' → logprob: -18.007606506347656
    10. '<w' → logprob: -18.007606506347656

Token 1814: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891656458377838
    2. 'in' → logprob: -2.578916549682617
    3. ' not' → logprob: -10.828916549682617
    4. 'not' → logprob: -11.953916549682617
    5. ' ' → logprob: -15.703916549682617
    6. '   ' → logprob: -15.828916549682617
    7. '[' → logprob: -17.453916549682617
    8. 'n' → logprob: -17.578916549682617
    9. '```' → logprob: -17.578916549682617
    10. 'is' → logprob: -17.703916549682617

Token 1815: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -5.991464786347933e-05
    2. ' chosen' → logprob: -9.750060081481934
    3. 'selected' → logprob: -13.875060081481934
    4. '   ' → logprob: -14.375060081481934
    5. '  ' → logprob: -18.625059127807617
    6. '       ' → logprob: -18.875059127807617
    7. '           ' → logprob: -19.250059127807617
    8. ' ' → logprob: -19.375059127807617
    9. 'used' → logprob: -20.000059127807617
    10. '    ' → logprob: -20.125059127807617

Token 1816: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.5094070477061905e-05
    2. 'war' → logprob: -11.125015258789062
    3. '_' → logprob: -16.875015258789062
    4. '\' → logprob: -17.500015258789062
    5. 'w' → logprob: -17.625015258789062
    6. '_ch' → logprob: -17.750015258789062
    7. '```' → logprob: -17.750015258789062
    8. '
' → logprob: -18.000015258789062
    9. 'chosen' → logprob: -18.000015258789062
    10. 'part' → logprob: -18.125015258789062

Token 1817: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.03511505946516991
    2. '_w' → logprob: -3.6601150035858154
    3. 'war' → logprob: -4.9101152420043945
    4. 'arri' → logprob: -7.6601152420043945
    5. 'arr' → logprob: -7.7851152420043945
    6. '_ar' → logprob: -8.660115242004395
    7. 'w' → logprob: -9.535115242004395
    8. 'or' → logprob: -10.160115242004395
    9. 'ari' → logprob: -10.285115242004395
    10. '_arr' → logprob: -10.535115242004395

Token 1818: 'riors' (ID: 46128)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5771886110305786
    2. 'riors' → logprob: -0.9521886110305786
    3. 'arr' → logprob: -3.827188491821289
    4. 'or' → logprob: -3.952188491821289
    5. 'rior' → logprob: -5.577188491821289
    6. 'arri' → logprob: -5.952188491821289
    7. 'r' → logprob: -6.827188491821289
    8. '
' → logprob: -7.952188491821289
    9. 'orr' → logprob: -7.952188491821289
    10. 'iors' → logprob: -7.952188491821289

Token 1819: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17097876965999603
    2. '               ' → logprob: -1.9209787845611572
    3. ':' → logprob: -4.920978546142578
    4. '           ' → logprob: -5.795978546142578
    5. '):
' → logprob: -8.920978546142578
    6. '```' → logprob: -9.920978546142578
    7. '{
' → logprob: -10.545978546142578
    8. 'continue' → logprob: -11.045978546142578
    9. '                   ' → logprob: -11.170978546142578
    10. '():
' → logprob: -11.170978546142578

Token 1820: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017791526624932885
    2. '```' → logprob: -9.250178337097168
    3. 'continue' → logprob: -10.000178337097168
    4. '           ' → logprob: -10.875178337097168
    5. '                   ' → logprob: -12.250178337097168
    6. ' continue' → logprob: -12.625178337097168
    7. ':
' → logprob: -13.000178337097168
    8. '                       ' → logprob: -13.125178337097168
    9. '                               ' → logprob: -14.000178337097168
    10. ':' → logprob: -14.000178337097168

Token 1821: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7770229578018188
    2. 'continue' (adapté à ' continue') → logprob: -0.9020229578018188
    3. ' continue' → logprob: -2.0270228385925293
    4. '```' → logprob: -6.027022838592529
    5. '                   ' → logprob: -8.902023315429688
    6. '{
' → logprob: -10.152023315429688
    7. 'Continue' → logprob: -10.652023315429688
    8. '   ' → logprob: -10.902023315429688
    9. '           ' → logprob: -10.902023315429688
    10. '``' → logprob: -10.902023315429688

Token 1822: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004529926925897598
    2. '               ' → logprob: -5.50452995300293
    3. '```' → logprob: -8.37952995300293
    4. ' if' → logprob: -9.50452995300293
    5. '                   ' → logprob: -9.75452995300293
    6. 'if' → logprob: -10.75452995300293
    7. '                           ' → logprob: -11.00452995300293
    8. '                       ' → logprob: -11.25452995300293
    9. 'continue' → logprob: -12.00452995300293
    10. '
' → logprob: -12.00452995300293

Token 1823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015199800254777074
    2. '```' → logprob: -7.126520156860352
    3. ' if' → logprob: -8.376520156860352
    4. '               ' → logprob: -8.876520156860352
    5. '                   ' → logprob: -9.001520156860352
    6. '                           ' → logprob: -9.376520156860352
    7. 'if' → logprob: -10.001520156860352
    8. '                       ' → logprob: -10.751520156860352
    9. '                               ' → logprob: -11.126520156860352
    10. '   ' → logprob: -11.501520156860352

Token 1824: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24635067582130432
    2. '               ' → logprob: -1.996350646018982
    3. '```' → logprob: -3.1213507652282715
    4. 'if' (adapté à ' if') → logprob: -3.7463507652282715
    5. 'continue' → logprob: -4.8713507652282715
    6. '                   ' → logprob: -5.4963507652282715
    7. ' if' → logprob: -6.9963507652282715
    8. '``' → logprob: -7.1213507652282715
    9. ' continue' → logprob: -7.9963507652282715
    10. '{
' → logprob: -8.371350288391113

Token 1825: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14272341132164001
    2. 'c' → logprob: -2.017723321914673
    3. ' m' → logprob: -11.517723083496094
    4. 'm' → logprob: -11.517723083496094
    5. '```' → logprob: -11.642723083496094
    6. '           ' → logprob: -11.767723083496094
    7. '(c' → logprob: -12.642723083496094
    8. 'not' → logprob: -13.517723083496094
    9. ')c' → logprob: -14.017723083496094
    10. ' not' → logprob: -14.142723083496094

Token 1826: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0069732400588691235
    2. 'is' → logprob: -5.0069732666015625
    3. ' not' → logprob: -8.506973266601562
    4. 'not' → logprob: -10.631973266601562
    5. '```' → logprob: -11.006973266601562
    6. '            ' → logprob: -12.256973266601562
    7. '           ' → logprob: -12.381973266601562
    8. ')' → logprob: -13.381973266601562
    9. 'None' → logprob: -13.631973266601562
    10. ' in' → logprob: -14.131973266601562

Token 1827: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.770641028881073
    2. 'not' → logprob: -1.2706410884857178
    3. 'None' → logprob: -1.5206410884857178
    4. ' None' → logprob: -3.2706410884857178
    5. 'Not' → logprob: -11.145641326904297
    6. '_None' → logprob: -11.395641326904297
    7. '_not' → logprob: -11.645641326904297
    8. '   ' → logprob: -11.770641326904297
    9. 'is' → logprob: -11.895641326904297
    10. '```' → logprob: -12.145641326904297

Token 1828: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0051295082084834576
    2. ' None' → logprob: -5.630129337310791
    3. 'not' → logprob: -6.505129337310791
    4. ' not' → logprob: -10.75512981414795
    5. 'Not' → logprob: -12.25512981414795
    6. '   ' → logprob: -12.88012981414795
    7. '_None' → logprob: -13.75512981414795
    8. 'none' → logprob: -14.00512981414795
    9. '       ' → logprob: -14.88012981414795
    10. '(None' → logprob: -15.00512981414795

Token 1829: ' and' (ID: 326)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07477185130119324
    2. 'is' → logprob: -3.3247718811035156
    3. ' not' → logprob: -3.9497718811035156
    4. 'not' → logprob: -4.324771881103516
    5. 'and' → logprob: -6.324771881103516
    6. ' and' → logprob: -6.449771881103516
    7. 'None' → logprob: -9.324771881103516
    8. '```' → logprob: -10.199771881103516
    9. '               ' → logprob: -10.824771881103516
    10. '           ' → logprob: -11.074771881103516

Token 1830: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.041746076196432114
    2. 'chosen' → logprob: -3.916746139526367
    3. ' c' → logprob: -4.041746139526367
    4. ' chosen' → logprob: -5.791746139526367
    5. '(c' → logprob: -8.166746139526367
    6. '   ' → logprob: -11.166746139526367
    7. ' (' → logprob: -11.166746139526367
    8. 'None' → logprob: -11.666746139526367
    9. 'not' → logprob: -12.166746139526367
    10. '(m' → logprob: -12.541746139526367

Token 1831: ' in' (ID: 306)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8490269184112549
    2. 'not' → logprob: -1.5990269184112549
    3. 'is' → logprob: -1.7240269184112549
    4. 'in' → logprob: -2.349026918411255
    5. ' not' → logprob: -2.974026918411255
    6. ' in' → logprob: -3.099026918411255
    7. '```' → logprob: -10.474026679992676
    8. 'None' → logprob: -10.974026679992676
    9. '_not' → logprob: -11.724026679992676
    10. ' None' → logprob: -11.974026679992676

Token 1832: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.05000035837292671
    2. 'None' → logprob: -3.0500004291534424
    3. 'not' → logprob: -6.675000190734863
    4. ' None' → logprob: -9.675000190734863
    5. ' chosen' → logprob: -10.300000190734863
    6. 'used' → logprob: -11.550000190734863
    7. '_not' → logprob: -12.175000190734863
    8. 'cho' → logprob: -12.175000190734863
    9. '```' → logprob: -12.550000190734863
    10. '_none' → logprob: -12.675000190734863

Token 1833: '_cl' (ID: 11209)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.4742838442325592
    2. '_cl' → logprob: -0.9742838144302368
    3. '_w' → logprob: -8.974284172058105
    4. 'cl' → logprob: -10.349284172058105
    5. '_c' → logprob: -11.099284172058105
    6. '_cre' → logprob: -11.349284172058105
    7. '_' → logprob: -12.099284172058105
    8. 'war' → logprob: -12.724284172058105
    9. 'w' → logprob: -12.974284172058105
    10. '
' → logprob: -13.224284172058105

Token 1834: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00823676586151123
    2. '```' → logprob: -6.008236885070801
    3. 'ics' → logprob: -6.383236885070801
    4. 'rics' → logprob: -7.633236885070801
    5. '   ' → logprob: -7.883236885070801
    6. '``' → logprob: -8.2582368850708
    7. 'r' → logprob: -8.2582368850708
    8. '{' → logprob: -8.7582368850708
    9. 'cler' → logprob: -8.7582368850708
    10. '
' → logprob: -8.7582368850708

Token 1835: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.00015502817404922098
    2. 'ic' → logprob: -9.500155448913574
    3. '[' → logprob: -11.125155448913574
    4. 's' → logprob: -11.750155448913574
    5. 'rics' → logprob: -11.750155448913574
    6. '_' → logprob: -11.875155448913574
    7. 'cs' → logprob: -12.250155448913574
    8. '
' → logprob: -12.750155448913574
    9. '```' → logprob: -12.875155448913574
    10. '   ' → logprob: -12.875155448913574

Token 1836: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5442630648612976
    2. '               ' → logprob: -0.9192630648612976
    3. ':' → logprob: -4.919262886047363
    4. '```' → logprob: -5.294262886047363
    5. '):
' → logprob: -5.669262886047363
    6. '           ' → logprob: -5.794262886047363
    7. '                   ' → logprob: -7.419262886047363
    8. '                       ' → logprob: -8.169262886047363
    9. ' and' → logprob: -8.419262886047363
    10. '==' → logprob: -8.919262886047363

Token 1837: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011196601204574108
    2. '```' → logprob: -4.511196613311768
    3. '``' → logprob: -10.01119613647461
    4. '           ' → logprob: -10.13619613647461
    5. '                   ' → logprob: -10.51119613647461
    6. '                       ' → logprob: -11.01119613647461
    7. '                               ' → logprob: -12.26119613647461
    8. '              ' → logprob: -12.38619613647461
    9. 'continue' → logprob: -12.63619613647461
    10. 'and' → logprob: -12.88619613647461

Token 1838: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10650360584259033
    2. 'continue' (adapté à ' continue') → logprob: -2.606503486633301
    3. '```' → logprob: -3.731503486633301
    4. ' continue' → logprob: -5.981503486633301
    5. '                   ' → logprob: -8.4815034866333
    6. '``' → logprob: -8.6065034866333
    7. '           ' → logprob: -8.7315034866333
    8. '   ' → logprob: -9.6065034866333
    9. 'None' → logprob: -9.9815034866333
    10. '                               ' → logprob: -10.7315034866333

Token 1839: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49743613600730896
    2. '```' → logprob: -0.9974361658096313
    3. '                       ' → logprob: -4.497436046600342
    4. '                               ' → logprob: -5.247436046600342
    5. '           ' → logprob: -5.997436046600342
    6. '``' → logprob: -6.372436046600342
    7. '                   ' → logprob: -6.622436046600342
    8. '                           ' → logprob: -7.372436046600342
    9. ' continue' → logprob: -8.4974365234375
    10. 'continue' → logprob: -8.6224365234375

Token 1840: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.024950237944722176
    2. '               ' → logprob: -4.27495002746582
    3. '``' → logprob: -5.39995002746582
    4. '                               ' → logprob: -5.64995002746582
    5. '                   ' → logprob: -7.14995002746582
    6. '                       ' → logprob: -7.39995002746582
    7. '           ' → logprob: -7.89995002746582
    8. ' if' → logprob: -8.27495002746582
    9. '                           ' → logprob: -8.64995002746582
    10. 'if' → logprob: -9.14995002746582

Token 1841: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5780454874038696
    2. '               ' → logprob: -1.4530454874038696
    3. ' if' → logprob: -2.32804536819458
    4. 'if' (adapté à ' if') → logprob: -2.57804536819458
    5. 'continue' → logprob: -4.45304536819458
    6. ' continue' → logprob: -4.82804536819458
    7. '```' → logprob: -5.20304536819458
    8. '                   ' → logprob: -5.82804536819458
    9. '                       ' → logprob: -6.82804536819458
    10. '                           ' → logprob: -7.07804536819458

Token 1842: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2519380748271942
    2. 'm' → logprob: -1.5019381046295166
    3. '   ' → logprob: -12.876937866210938
    4. '(m' → logprob: -12.876937866210938
    5. '           ' → logprob: -13.251937866210938
    6. '	m' → logprob: -15.126937866210938
    7. ' ' → logprob: -15.251937866210938
    8. '               ' → logprob: -15.376937866210938
    9. ' ' → logprob: -15.376937866210938
    10. '                   ' → logprob: -15.689437866210938

Token 1843: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020587200298905373
    2. 'is' → logprob: -3.895587205886841
    3. ' in' → logprob: -10.270586967468262
    4. 'in' → logprob: -11.645586967468262
    5. '```' → logprob: -13.645586967468262
    6. ')' → logprob: -15.770586967468262
    7. '_is' → logprob: -16.520587921142578
    8. '           ' → logprob: -16.520587921142578
    9. '_' → logprob: -16.895587921142578
    10. '            ' → logprob: -17.020587921142578

Token 1844: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029905755072832108
    2. 'not' → logprob: -3.5299057960510254
    3. ' None' → logprob: -9.404905319213867
    4. 'None' → logprob: -9.529905319213867
    5. 'Not' → logprob: -16.029905319213867
    6. '_not' → logprob: -16.154905319213867
    7. '	not' → logprob: -17.904905319213867
    8. 'none' → logprob: -18.029905319213867
    9. ' none' → logprob: -18.654905319213867
    10. '=None' → logprob: -18.654905319213867

Token 1845: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.021506553515791893
    2. 'not' → logprob: -4.0215067863464355
    3. ' None' → logprob: -5.7715067863464355
    4. ' not' → logprob: -8.396506309509277
    5. 'Not' → logprob: -11.771506309509277
    6. '_None' → logprob: -14.146506309509277
    7. '```' → logprob: -14.521506309509277
    8. 'none' → logprob: -14.521506309509277
    9. '(None' → logprob: -15.271506309509277
    10. '   ' → logprob: -15.521506309509277

Token 1846: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2782011032104492
    2. ' not' → logprob: -2.278201103210449
    3. ' and' → logprob: -2.778201103210449
    4. '               ' → logprob: -3.653201103210449
    5. 'in' → logprob: -3.778201103210449
    6. 'and' → logprob: -4.403201103210449
    7. '           ' → logprob: -4.903201103210449
    8. 'not' → logprob: -5.153201103210449
    9. '            ' → logprob: -5.653201103210449
    10. '```' → logprob: -8.02820110321045

Token 1847: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889188081026077
    2. ' m' → logprob: -2.5788919925689697
    3. '   ' → logprob: -13.70389175415039
    4. ' ' → logprob: -15.70389175415039
    5. '  ' → logprob: -15.82889175415039
    6. '	m' → logprob: -16.20389175415039
    7. '(m' → logprob: -16.20389175415039
    8. '    ' → logprob: -16.32889175415039
    9. 'chosen' → logprob: -16.57889175415039
    10. ' ' → logprob: -16.82889175415039

Token 1848: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859020933508873
    2. 'in' → logprob: -3.0485901832580566
    3. ' not' → logprob: -13.298590660095215
    4. 'not' → logprob: -14.423590660095215
    5. '```' → logprob: -15.173590660095215
    6. ')' → logprob: -16.0485897064209
    7. '_in' → logprob: -16.1735897064209
    8. '           ' → logprob: -17.1735897064209
    9. 'import' → logprob: -17.1735897064209
    10. 's' → logprob: -17.2985897064209

Token 1849: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -7.266944157890975e-05
    2. ' chosen' → logprob: -9.625072479248047
    3. 'selected' → logprob: -12.375072479248047
    4. 'used' → logprob: -13.750072479248047
    5. '```' → logprob: -15.125072479248047
    6. 'None' → logprob: -15.500072479248047
    7. '
' → logprob: -15.750072479248047
    8. 'ch' → logprob: -15.750072479248047
    9. '{' → logprob: -16.250072479248047
    10. 'chos' → logprob: -16.500072479248047

Token 1850: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.010206125676631927
    2. 'mages' → logprob: -4.63520622253418
    3. '_' → logprob: -7.88520622253418
    4. '_part' → logprob: -10.13520622253418
    5. '_s' → logprob: -11.51020622253418
    6. 'm' → logprob: -11.76020622253418
    7. '_p' → logprob: -12.88520622253418
    8. 'part' → logprob: -13.01020622253418
    9. '_
' → logprob: -13.26020622253418
    10. '_w' → logprob: -13.26020622253418

Token 1851: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.022727858275175095
    2. 'mages' → logprob: -4.022727966308594
    3. '_' → logprob: -5.647727966308594
    4. 'ges' → logprob: -8.022727966308594
    5. 's' → logprob: -8.897727966308594
    6. 'm' → logprob: -9.522727966308594
    7. '_m' → logprob: -9.522727966308594
    8. 'agers' → logprob: -9.772727966308594
    9. '_agents' → logprob: -10.147727966308594
    10. '
' → logprob: -10.647727966308594

Token 1852: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25610238313674927
    2. ':
' → logprob: -1.5061023235321045
    3. '```' → logprob: -6.006102561950684
    4. ':' → logprob: -7.131102561950684
    5. '           ' → logprob: -8.006102561950684
    6. '):
' → logprob: -8.756102561950684
    7. 'continue' → logprob: -9.006102561950684
    8. ' continues' → logprob: -9.256102561950684
    9. '              ' → logprob: -9.881102561950684
    10. ' continue' → logprob: -10.131102561950684

Token 1853: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011213806457817554
    2. ' continue' → logprob: -4.636213779449463
    3. 'continue' → logprob: -6.761213779449463
    4. '```' → logprob: -8.386214256286621
    5. '           ' → logprob: -10.761214256286621
    6. '                               ' → logprob: -11.636214256286621
    7. '                   ' → logprob: -12.011214256286621
    8. ' continues' → logprob: -12.011214256286621
    9. 'Continue' → logprob: -12.261214256286621
    10. ' continued' → logprob: -12.511214256286621

Token 1854: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.11419297754764557
    2. 'continue' (adapté à ' continue') → logprob: -2.8641929626464844
    3. '               ' → logprob: -2.9891929626464844
    4. '```' → logprob: -7.614192962646484
    5. 'Continue' → logprob: -11.239192962646484
    6. '           ' → logprob: -11.239192962646484
    7. '                   ' → logprob: -11.989192962646484
    8. '``' → logprob: -12.114192962646484
    9. '_continue' → logprob: -12.489192962646484
    10. '   ' → logprob: -12.614192962646484

Token 1855: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014715510420501232
    2. '               ' → logprob: -4.514715671539307
    3. '```' → logprob: -6.264715671539307
    4. '[' → logprob: -7.514715671539307
    5. '       ' → logprob: -7.889715671539307
    6. '                       ' → logprob: -8.014715194702148
    7. '<|end|>' → logprob: -9.139715194702148
    8. ' ' → logprob: -9.764715194702148
    9. '          ' → logprob: -9.764715194702148
    10. '                   ' → logprob: -10.264715194702148

Token 1856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20500348508358002
    2. '```' → logprob: -1.7050034999847412
    3. '               ' → logprob: -6.455003261566162
    4. '``' → logprob: -6.830003261566162
    5. '[' → logprob: -7.830003261566162
    6. ' ' → logprob: -9.08000373840332
    7. '          ' → logprob: -9.20500373840332
    8. '       ' → logprob: -9.20500373840332
    9. '                       ' → logprob: -9.83000373840332
    10. ' ```' → logprob: -9.83000373840332

Token 1857: ' chosen' (ID: 16180)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01151283923536539
    2. '               ' → logprob: -5.011512756347656
    3. 'chosen' (adapté à ' chosen') → logprob: -5.636512756347656
    4. '       ' → logprob: -7.511512756347656
    5. ' chosen' → logprob: -7.761512756347656
    6. '   ' → logprob: -9.136512756347656
    7. '```' → logprob: -9.136512756347656
    8. 'selected' → logprob: -10.886512756347656
    9. '``' → logprob: -12.636512756347656
    10. '                   ' → logprob: -13.261512756347656

Token 1858: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02056022174656391
    2. '_part' → logprob: -3.8955602645874023
    3. '_h' → logprob: -12.395560264587402
    4. 'heroes' → logprob: -13.020560264587402
    5. 'part' → logprob: -13.145560264587402
    6. '_party' → logprob: -13.520560264587402
    7. '   ' → logprob: -13.645560264587402
    8. '```' → logprob: -13.895560264587402
    9. '_parts' → logprob: -14.020560264587402
    10. '_helpers' → logprob: -14.020560264587402

Token 1859: 'heroes' (ID: 103812)
  Prédit: 'heroes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heroes' → logprob: -0.05376641824841499
    2. '_' → logprob: -3.0537664890289307
    3. '_part' → logprob: -5.428766250610352
    4. 'part' → logprob: -7.178766250610352
    5. 'hero' → logprob: -12.678766250610352
    6. 'her' → logprob: -12.803766250610352
    7. ' heroes' → logprob: -13.303766250610352
    8. '_h' → logprob: -13.553766250610352
    9. '_party' → logprob: -13.678766250610352
    10. '```' → logprob: -13.928766250610352

Token 1860: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.004104046616703272
    2. '.' → logprob: -5.504104137420654
    3. ' .' → logprob: -11.004103660583496
    4. '           ' → logprob: -12.004103660583496
    5. '.setdefault' → logprob: -14.504103660583496
    6. '.Add' → logprob: -14.504103660583496
    7. '   ' → logprob: -14.504103660583496
    8. '       ' → logprob: -15.254103660583496
    9. '.append' → logprob: -15.504103660583496
    10. '```' → logprob: -15.879103660583496

Token 1861: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.02095581777393818
    2. 'h' → logprob: -4.395956039428711
    3. '(' → logprob: -5.270956039428711
    4. ' h' → logprob: -6.270956039428711
    5. ' (' → logprob: -6.645956039428711
    6. '(p' → logprob: -9.520956039428711
    7. '(
' → logprob: -11.895956039428711
    8. 'p' → logprob: -14.645956039428711
    9. ' ' → logprob: -15.020956039428711
    10. '   ' → logprob: -15.395956039428711

Token 1862: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02122405357658863
    2. ')' → logprob: -4.146224021911621
    3. ')
' → logprob: -5.646224021911621
    4. '```' → logprob: -6.896224021911621
    5. '               ' → logprob: -7.646224021911621
    6. ',' → logprob: -9.896224021911621
    7. '``' → logprob: -10.646224021911621
    8. '       ' → logprob: -11.021224021911621
    9. '            
' → logprob: -11.396224021911621
    10. '          ' → logprob: -11.521224021911621

Token 1863: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008882110938429832
    2. '```' → logprob: -4.88388204574585
    3. '               ' → logprob: -7.00888204574585
    4. ',' → logprob: -9.383882522583008
    5. '                   ' → logprob: -9.758882522583008
    6. '``' → logprob: -10.258882522583008
    7. '                       ' → logprob: -10.383882522583008
    8. '            ' → logprob: -10.383882522583008
    9. '          ' → logprob: -10.633882522583008
    10. '                           ' → logprob: -10.758882522583008

Token 1864: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03138386830687523
    2. '               ' → logprob: -4.156383991241455
    3. ' if' → logprob: -4.906383991241455
    4. 'if' (adapté à ' if') → logprob: -5.906383991241455
    5. '                   ' → logprob: -6.156383991241455
    6. '```' → logprob: -6.281383991241455
    7. '            ' → logprob: -7.156383991241455
    8. '             ' → logprob: -9.406383514404297
    9. '                       ' → logprob: -9.781383514404297
    10. '          ' → logprob: -10.156383514404297

Token 1865: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0263022743165493
    2. 'w' → logprob: -3.6513023376464844
    3. ' ' → logprob: -13.401302337646484
    4. '(w' → logprob: -15.776302337646484
    5. '```' → logprob: -16.151302337646484
    6. '	w' → logprob: -16.276302337646484
    7. '‌' → logprob: -17.526302337646484
    8. '_w' → logprob: -17.651302337646484
    9. ' ' → logprob: -17.651302337646484
    10. 'space' → logprob: -17.901302337646484

Token 1866: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0052495296113193035
    2. 'is' → logprob: -5.255249500274658
    3. '           ' → logprob: -11.505249977111816
    4. '               ' → logprob: -13.130249977111816
    5. '            ' → logprob: -13.880249977111816
    6. '```' → logprob: -13.880249977111816
    7. '_' → logprob: -14.630249977111816
    8. ' not' → logprob: -14.755249977111816
    9. 'not' → logprob: -14.880249977111816
    10. '`' → logprob: -15.880249977111816

Token 1867: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07896469533443451
    2. 'not' → logprob: -2.5789647102355957
    3. 'None' → logprob: -9.828964233398438
    4. ' None' → logprob: -10.953964233398438
    5. 'Not' → logprob: -13.203964233398438
    6. '_not' → logprob: -13.578964233398438
    7. '	not' → logprob: -16.078964233398438
    8. ' is' → logprob: -16.078964233398438
    9. '=None' → logprob: -17.328964233398438
    10. '               ' → logprob: -17.328964233398438

Token 1868: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4834164083003998
    2. 'None' → logprob: -1.2334164381027222
    3. ' not' → logprob: -2.4834163188934326
    4. ' None' → logprob: -4.858416557312012
    5. 'Not' → logprob: -7.233416557312012
    6. '_not' → logprob: -9.483416557312012
    7. '   ' → logprob: -12.483416557312012
    8. ' ' → logprob: -13.108416557312012
    9. '_None' → logprob: -13.358416557312012
    10. '	not' → logprob: -13.983416557312012

Token 1869: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038693982060067356
    2. '```' → logprob: -8.375387191772461
    3. ':
' → logprob: -9.125387191772461
    4. '           ' → logprob: -11.375387191772461
    5. ':' → logprob: -11.375387191772461
    6. '):
' → logprob: -11.500387191772461
    7. '              ' → logprob: -12.000387191772461
    8. '``' → logprob: -13.375387191772461
    9. '                   ' → logprob: -13.875387191772461
    10. '	           ' → logprob: -14.000387191772461

Token 1870: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022226988803595304
    2. 'chosen' → logprob: -6.502222537994385
    3. ' chosen' → logprob: -7.627222537994385
    4. '```' → logprob: -9.002223014831543
    5. '           ' → logprob: -9.627223014831543
    6. '   ' → logprob: -10.752223014831543
    7. '``' → logprob: -11.502223014831543
    8. '                   ' → logprob: -12.002223014831543
    9. '              ' → logprob: -12.752223014831543
    10. 'selected' → logprob: -13.752223014831543

Token 1871: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.5019881725311279
    2. '               ' → logprob: -1.001988172531128
    3. ' chosen' → logprob: -3.876988172531128
    4. '           ' → logprob: -5.376988410949707
    5. '```' → logprob: -6.626988410949707
    6. '                   ' → logprob: -8.001988410949707
    7. '   ' → logprob: -8.376988410949707
    8. '``' → logprob: -8.876988410949707
    9. '              ' → logprob: -9.626988410949707
    10. '             ' → logprob: -10.251988410949707

Token 1872: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -6.2729995988775045e-06
    2. 'war' → logprob: -13.125006675720215
    3. '_' → logprob: -13.250006675720215
    4. ' _' → logprob: -13.750006675720215
    5. '```' → logprob: -14.875006675720215
    6. '   ' → logprob: -15.250006675720215
    7. 'War' → logprob: -16.1250057220459
    8. '_workers' → logprob: -16.2500057220459
    9. ' warriors' → logprob: -16.2500057220459
    10. '._' → logprob: -16.5000057220459

Token 1873: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.014449776150286198
    2. 'war' → logprob: -4.639449596405029
    3. '_w' → logprob: -5.639449596405029
    4. 'arr' → logprob: -7.764449596405029
    5. 'arri' → logprob: -7.889449596405029
    6. 'ari' → logprob: -8.889450073242188
    7. '_ar' → logprob: -9.389450073242188
    8. 'w' → logprob: -10.389450073242188
    9. '   ' → logprob: -10.514450073242188
    10. '_arr' → logprob: -11.264450073242188

Token 1874: 'riors' (ID: 46128)
  Prédit: 'riors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riors' → logprob: -0.40644025802612305
    2. 'ar' → logprob: -1.156440258026123
    3. 'arri' → logprob: -5.031440258026123
    4. 'arr' → logprob: -5.656440258026123
    5. 'rior' → logprob: -5.781440258026123
    6. 'or' → logprob: -6.031440258026123
    7. 'iors' → logprob: -6.656440258026123
    8. '```' → logprob: -7.156440258026123
    9. '``' → logprob: -7.906440258026123
    10. 'r' → logprob: -8.281440734863281

Token 1875: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003408263437449932
    2. '.' → logprob: -8.000340461730957
    3. ' .' → logprob: -12.250340461730957
    4. 'add' → logprob: -15.125340461730957
    5. '.Add' → logprob: -15.375340461730957
    6. ' add' → logprob: -17.000341415405273
    7. '_add' → logprob: -17.250341415405273
    8. '           ' → logprob: -18.000341415405273
    9. ')add' → logprob: -18.375341415405273
    10. '.append' → logprob: -18.500341415405273

Token 1876: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.002835780382156372
    2. 'w' → logprob: -6.127835750579834
    3. ' w' → logprob: -7.877835750579834
    4. ' (' → logprob: -8.252836227416992
    5. '{' → logprob: -12.002836227416992
    6. '(' → logprob: -12.752836227416992
    7. '	w' → logprob: -13.502836227416992
    8. ' {' → logprob: -16.127836227416992
    9. '<w' → logprob: -16.502836227416992
    10. '[w' → logprob: -16.502836227416992

Token 1877: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16032302379608154
    2. ')' → logprob: -2.535323143005371
    3. '               ' → logprob: -3.285323143005371
    4. ')
' → logprob: -3.660323143005371
    5. 'w' → logprob: -5.785323143005371
    6. '(w' → logprob: -7.285323143005371
    7. '
' → logprob: -7.410323143005371
    8. '```' → logprob: -7.660323143005371
    9. '                   ' → logprob: -7.910323143005371
    10. '       ' → logprob: -9.160323143005371

Token 1878: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1803278923034668
    2. '           ' → logprob: -1.8053278923034668
    3. '```' → logprob: -7.805327892303467
    4. '                   ' → logprob: -9.805328369140625
    5. '              ' → logprob: -10.305328369140625
    6. '                
' → logprob: -10.805328369140625
    7. '          ' → logprob: -11.305328369140625
    8. '            
' → logprob: -11.430328369140625
    9. '            ' → logprob: -11.805328369140625
    10. '                ' → logprob: -12.055328369140625

Token 1879: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22195535898208618
    2. '               ' → logprob: -1.8469552993774414
    3. ' if' → logprob: -3.8469552993774414
    4. '                   ' → logprob: -4.346955299377441
    5. '```' → logprob: -6.346955299377441
    6. '                       ' → logprob: -6.471955299377441
    7. '                           ' → logprob: -7.221955299377441
    8. '            ' → logprob: -7.346955299377441
    9. '                               ' → logprob: -7.596955299377441
    10. 'if' (adapté à ' if') → logprob: -7.971955299377441

Token 1880: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.027240507304668427
    2. ' m' → logprob: -3.902240514755249
    3. 'c' → logprob: -5.27724027633667
    4. ' w' → logprob: -6.65224027633667
    5. 'm' → logprob: -8.527240753173828
    6. 'w' → logprob: -10.652240753173828
    7. ' ' → logprob: -10.902240753173828
    8. '```' → logprob: -11.777240753173828
    9. ' not' → logprob: -12.277240753173828
    10. '(c' → logprob: -12.277240753173828

Token 1881: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07892052084207535
    2. 'is' → logprob: -2.578920602798462
    3. '```' → logprob: -10.828920364379883
    4. '               ' → logprob: -12.078920364379883
    5. '           ' → logprob: -13.078920364379883
    6. 'not' → logprob: -14.078920364379883
    7. ')' → logprob: -14.328920364379883
    8. '            ' → logprob: -14.953920364379883
    9. '``' → logprob: -15.453920364379883
    10. 'in' → logprob: -15.703920364379883

Token 1882: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.019079361110925674
    2. 'not' → logprob: -4.019079208374023
    3. 'None' → logprob: -7.394079208374023
    4. ' None' → logprob: -8.144079208374023
    5. 'Not' → logprob: -10.769079208374023
    6. '_not' → logprob: -13.019079208374023
    7. '	not' → logprob: -16.144079208374023
    8. ' Not' → logprob: -16.769079208374023
    9. '(not' → logprob: -17.019079208374023
    10. ' ' → logprob: -17.019079208374023

Token 1883: ' None' (ID: 4662)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3189704120159149
    2. 'not' → logprob: -1.5689704418182373
    3. 'None' → logprob: -2.8189704418182373
    4. ' None' → logprob: -5.318970203399658
    5. 'Not' → logprob: -8.318970680236816
    6. '_not' → logprob: -10.318970680236816
    7. '	not' → logprob: -15.068970680236816
    8. '_None' → logprob: -15.318970680236816
    9. '```' → logprob: -15.568970680236816
    10. '_none' → logprob: -15.693970680236816

Token 1884: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26819390058517456
    2. ' is' → logprob: -1.5181939601898193
    3. ':
' → logprob: -5.14319372177124
    4. '           ' → logprob: -5.39319372177124
    5. '):
' → logprob: -6.39319372177124
    6. '```' → logprob: -6.89319372177124
    7. ':' → logprob: -7.14319372177124
    8. ' not' → logprob: -7.39319372177124
    9. ')' → logprob: -7.76819372177124
    10. 'not' → logprob: -7.89319372177124

Token 1885: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038317868020385504
    2. '```' → logprob: -5.87883186340332
    3. '           ' → logprob: -7.12883186340332
    4. '                ' → logprob: -9.25383186340332
    5. '            ' → logprob: -10.50383186340332
    6. '                   ' → logprob: -10.50383186340332
    7. '``' → logprob: -10.50383186340332
    8. '              ' → logprob: -10.87883186340332
    9. ' None' → logprob: -11.37883186340332
    10. 'None' → logprob: -12.37883186340332

Token 1886: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' (adapté à ' chosen') → logprob: -0.2105661928653717
    2. ' chosen' → logprob: -1.7105661630630493
    3. '               ' → logprob: -4.71056604385376
    4. '           ' → logprob: -9.210566520690918
    5. '```' → logprob: -12.585566520690918
    6. '              ' → logprob: -13.085566520690918
    7. '                   ' → logprob: -13.585566520690918
    8. 'selected' → logprob: -13.710566520690918
    9. '``' → logprob: -13.710566520690918
    10. '   ' → logprob: -13.960566520690918

Token 1887: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.0002319071936653927
    2. 'cler' → logprob: -8.500231742858887
    3. '_c' → logprob: -10.875231742858887
    4. '_part' → logprob: -12.125231742858887
    5. '_cre' → logprob: -12.875231742858887
    6. '_' → logprob: -13.750231742858887
    7. ' cler' → logprob: -15.750231742858887
    8. '_cli' → logprob: -16.875232696533203
    9. '_clear' → logprob: -17.125232696533203
    10. '_claim' → logprob: -17.500232696533203

Token 1888: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.034400638192892075
    2. 'ics' → logprob: -3.409400701522827
    3. 'rics' → logprob: -7.409400463104248
    4. ' er' → logprob: -10.534400939941406
    5. 'eries' → logprob: -11.034400939941406
    6. 'ic' → logprob: -11.034400939941406
    7. 'el' → logprob: -11.784400939941406
    8. 'r' → logprob: -12.034400939941406
    9. 'erl' → logprob: -12.034400939941406
    10. '```' → logprob: -12.034400939941406

Token 1889: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -6.885492621222511e-05
    2. 'ic' → logprob: -10.000068664550781
    3. 's' → logprob: -12.125068664550781
    4. 'ils' → logprob: -12.500068664550781
    5. 'ifs' → logprob: -13.000068664550781
    6. '
' → logprob: -13.125068664550781
    7. 'cs' → logprob: -13.125068664550781
    8. 'i' → logprob: -14.000068664550781
    9. 'rics' → logprob: -14.250068664550781
    10. '```' → logprob: -14.375068664550781

Token 1890: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -12.375009536743164
    3. 'add' → logprob: -12.375009536743164
    4. '           ' → logprob: -14.250009536743164
    5. ' .' → logprob: -16.250009536743164
    6. '               ' → logprob: -16.375009536743164
    7. '.Add' → logprob: -17.750009536743164
    8. '_add' → logprob: -18.000009536743164
    9. '.append' → logprob: -18.250009536743164
    10. '```' → logprob: -19.000009536743164

Token 1891: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1008324846625328
    2. '(c' → logprob: -2.350832462310791
    3. '{' → logprob: -7.600832462310791
    4. ' c' → logprob: -9.97583293914795
    5. 'add' → logprob: -9.97583293914795
    6. 'set' → logprob: -10.60083293914795
    7. '[c' → logprob: -12.47583293914795
    8. '	c' → logprob: -13.60083293914795
    9. '$c' → logprob: -14.47583293914795
    10. '.add' → logprob: -14.85083293914795

Token 1892: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09419752657413483
    2. '           ' → logprob: -2.7191975116729736
    3. '.add' → logprob: -4.219197750091553
    4. 'add' → logprob: -4.844197750091553
    5. '```' → logprob: -7.719197750091553
    6. '(add' → logprob: -8.719197273254395
    7. ' add' → logprob: -8.969197273254395
    8. '              ' → logprob: -9.094197273254395
    9. '                   ' → logprob: -9.219197273254395
    10. ')add' → logprob: -9.219197273254395

Token 1893: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045531194657087326
    2. '           ' → logprob: -3.9205312728881836
    3. '                       ' → logprob: -4.670531272888184
    4. '```' → logprob: -4.920531272888184
    5. '                   ' → logprob: -5.295531272888184
    6. ' if' → logprob: -6.420531272888184
    7. '                           ' → logprob: -7.545531272888184
    8. '                               ' → logprob: -8.045531272888184
    9. '``' → logprob: -8.795531272888184
    10. 'if' → logprob: -8.795531272888184

Token 1894: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.283512145280838
    2. '           ' → logprob: -1.6585121154785156
    3. '                   ' → logprob: -3.5335121154785156
    4. ' if' → logprob: -4.158512115478516
    5. 'if' (adapté à ' if') → logprob: -5.283512115478516
    6. '```' → logprob: -5.658512115478516
    7. '                       ' → logprob: -7.033512115478516
    8. '``' → logprob: -7.533512115478516
    9. '              ' → logprob: -7.783512115478516
    10. '                ' → logprob: -7.908512115478516

Token 1895: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.009762583300471306
    2. 'm' → logprob: -4.634762763977051
    3. '(m' → logprob: -13.00976276397705
    4. ' not' → logprob: -13.63476276397705
    5. '```' → logprob: -14.13476276397705
    6. ' ' → logprob: -14.25976276397705
    7. '	m' → logprob: -14.75976276397705
    8. '   ' → logprob: -15.13476276397705
    9. ' p' → logprob: -16.134761810302734
    10. '[m' → logprob: -16.259761810302734

Token 1896: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011049704626202583
    2. 'is' → logprob: -4.511049747467041
    3. '               ' → logprob: -14.261049270629883
    4. '           ' → logprob: -14.761049270629883
    5. '            ' → logprob: -15.386049270629883
    6. '                ' → logprob: -15.636049270629883
    7. '```' → logprob: -15.886049270629883
    8. '        ' → logprob: -16.511049270629883
    9. '              ' → logprob: -17.136049270629883
    10. '_' → logprob: -17.261049270629883

Token 1897: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17977400124073029
    2. 'not' → logprob: -1.8047740459442139
    3. 'None' → logprob: -11.054774284362793
    4. 'Not' → logprob: -12.179774284362793
    5. '```' → logprob: -13.554774284362793
    6. ' None' → logprob: -13.804774284362793
    7. '_not' → logprob: -14.054774284362793
    8. 'n' → logprob: -14.054774284362793
    9. '	not' → logprob: -14.554774284362793
    10. '...' → logprob: -14.679774284362793

Token 1898: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20349884033203125
    2. ' not' → logprob: -1.7034988403320312
    3. 'None' → logprob: -6.328498840332031
    4. 'Not' → logprob: -8.203498840332031
    5. ' None' → logprob: -10.828498840332031
    6. '_not' → logprob: -12.578498840332031
    7. '	not' → logprob: -14.453498840332031
    8. '   ' → logprob: -15.078498840332031
    9. 'chosen' → logprob: -15.828498840332031
    10. '```' → logprob: -15.828498840332031

Token 1899: ':
' (ID: 734)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.5326102375984192
    2. '               ' → logprob: -0.9076102375984192
    3. '.' → logprob: -4.9076104164123535
    4. '           ' → logprob: -6.9076104164123535
    5. ':
' → logprob: -7.7826104164123535
    6. '```' → logprob: -8.907609939575195
    7. '.Add' → logprob: -9.157609939575195
    8. '.append' → logprob: -9.282609939575195
    9. ' .' → logprob: -9.657609939575195
    10. '              ' → logprob: -9.782609939575195

Token 1900: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020399168133735657
    2. '           ' → logprob: -4.02039909362793
    3. '```' → logprob: -6.14539909362793
    4. '              ' → logprob: -10.39539909362793
    5. '``' → logprob: -10.52039909362793
    6. '       ' → logprob: -11.39539909362793
    7. '                   ' → logprob: -11.39539909362793
    8. '            ' → logprob: -11.77039909362793
    9. '          ' → logprob: -12.27039909362793
    10. '   ' → logprob: -12.39539909362793

Token 1901: ' chosen' (ID: 16180)
  Prédit: ' chosen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chosen' → logprob: -0.03942121937870979
    2. 'chosen' (adapté à ' chosen') → logprob: -3.539421319961548
    3. '               ' → logprob: -4.664421081542969
    4. ' selected' → logprob: -9.789421081542969
    5. '           ' → logprob: -9.914421081542969
    6. '```' → logprob: -10.039421081542969
    7. '   ' → logprob: -11.539421081542969
    8. '              ' → logprob: -11.789421081542969
    9. '``' → logprob: -11.789421081542969
    10. ' cho' → logprob: -12.164421081542969

Token 1902: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.10272608697414398
    2. '_w' → logprob: -2.6027259826660156
    3. '_part' → logprob: -3.9777259826660156
    4. 'mages' → logprob: -5.602725982666016
    5. '_' → logprob: -7.227725982666016
    6. 'part' → logprob: -8.352725982666016
    7. '_cl' → logprob: -9.102725982666016
    8. 'war' → logprob: -11.227725982666016
    9. '_ma' → logprob: -11.352725982666016
    10. 'm' → logprob: -11.352725982666016

Token 1903: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.7607868313789368
    2. 'agers' → logprob: -1.510786771774292
    3. '_' → logprob: -1.760786771774292
    4. '_w' → logprob: -2.885786771774292
    5. 'gers' → logprob: -3.510786771774292
    6. 'izers' → logprob: -4.260787010192871
    7. 'azers' → logprob: -5.135787010192871
    8. '_p' → logprob: -5.635787010192871
    9. 'urses' → logprob: -5.635787010192871
    10. 'mages' → logprob: -5.760787010192871

Token 1904: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019913245923817158
    2. '.' → logprob: -6.251991271972656
    3. '           ' → logprob: -10.126991271972656
    4. '               ' → logprob: -10.876991271972656
    5. 'add' → logprob: -13.376991271972656
    6. ' .' → logprob: -13.376991271972656
    7. '.Add' → logprob: -14.751991271972656
    8. '   ' → logprob: -16.126991271972656
    9. '                   ' → logprob: -16.626991271972656
    10. '```' → logprob: -16.751991271972656

Token 1905: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00010866894444916397
    2. 'm' → logprob: -9.50010871887207
    3. '{' → logprob: -10.37510871887207
    4. ' (' → logprob: -13.87510871887207
    5. '           ' → logprob: -15.12510871887207
    6. '   ' → logprob: -15.25010871887207
    7. ' m' → logprob: -15.75010871887207
    8. '       ' → logprob: -15.75010871887207
    9. 'add' → logprob: -16.00010871887207
    10. '               ' → logprob: -16.00010871887207

Token 1906: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00086012709653005
    2. '               ' → logprob: -8.250860214233398
    3. '       ' → logprob: -8.375860214233398
    4. '
' → logprob: -8.625860214233398
    5. '```' → logprob: -9.500860214233398
    6. ')' → logprob: -10.125860214233398
    7. '   ' → logprob: -10.875860214233398
    8. '                   ' → logprob: -11.375860214233398
    9. ')
' → logprob: -11.375860214233398
    10. ',' → logprob: -12.000860214233398

Token 1907: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029902637004852295
    2. '       ' → logprob: -4.279902458190918
    3. '```' → logprob: -5.279902458190918
    4. '``' → logprob: -5.529902458190918
    5. '		' → logprob: -6.154902458190918
    6. '   ' → logprob: -6.404902458190918
    7. '               ' → logprob: -6.654902458190918
    8. 'chosen' → logprob: -7.279902458190918
    9. '	' → logprob: -8.154902458190918
    10. ' chosen' → logprob: -9.279902458190918

Token 1908: ' chosen' (ID: 16180)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03855880722403526
    2. '       ' → logprob: -3.4135587215423584
    3. 'chosen' (adapté à ' chosen') → logprob: -5.9135589599609375
    4. '   ' → logprob: -6.2885589599609375
    5. 'max' → logprob: -9.163558959960938
    6. '``' → logprob: -9.413558959960938
    7. '```' → logprob: -9.538558959960938
    8. ' chosen' → logprob: -10.038558959960938
    9. '               ' → logprob: -11.038558959960938
    10. '		' → logprob: -12.288558959960938

Token 1909: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -7.696077227592468e-05
    2. '_' → logprob: -9.625077247619629
    3. 'part' → logprob: -12.375077247619629
    4. '_parts' → logprob: -13.125077247619629
    5. 's' → logprob: -13.750077247619629
    6. '```' → logprob: -14.000077247619629
    7. '_party' → logprob: -14.125077247619629
    8. '_p' → logprob: -15.000077247619629
    9. 'Part' → logprob: -15.375077247619629
    10. '_tokens' → logprob: -15.500077247619629

Token 1910: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.00020592445798683912
    2. '_part' → logprob: -8.500205993652344
    3. '_' → logprob: -14.250205993652344
    4. '```' → logprob: -14.375205993652344
    5. 'part' → logprob: -15.250205993652344
    6. 'i' → logprob: -15.500205993652344
    7. '[' → logprob: -15.500205993652344
    8. '   ' → logprob: -16.375205993652344
    9. ' ies' → logprob: -16.750205993652344
    10. '
' → logprob: -16.875205993652344

Token 1911: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014191943046171218
    2. '.' → logprob: -8.875142097473145
    3. '.app' → logprob: -14.500142097473145
    4. '.add' → logprob: -14.750142097473145
    5. '_append' → logprob: -14.875142097473145
    6. 'append' → logprob: -15.000142097473145
    7. ' .' → logprob: -16.000141143798828
    8. '.Append' → logprob: -16.750141143798828
    9. '.setdefault' → logprob: -16.750141143798828
    10. '.ap' → logprob: -17.500141143798828

Token 1912: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0013364320620894432
    2. '((' → logprob: -6.751336574554443
    3. 'p' → logprob: -8.876336097717285
    4. '(' → logprob: -11.001336097717285
    5. ' (' → logprob: -11.626336097717285
    6. ' p' → logprob: -14.376336097717285
    7. '   ' → logprob: -15.626336097717285
    8. '(
' → logprob: -16.1263370513916
    9. '[p' → logprob: -16.8763370513916
    10. '```' → logprob: -17.1263370513916

Token 1913: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07721994072198868
    2. '<|end|>' → logprob: -2.9522199630737305
    3. '
' → logprob: -4.7022199630737305
    4. ')' → logprob: -5.3272199630737305
    5. '<|end|>' → logprob: -5.3272199630737305
    6. '       ' → logprob: -6.3272199630737305
    7. '               ' → logprob: -7.8272199630737305
    8. ',' → logprob: -8.32721996307373
    9. ')
' → logprob: -8.70221996307373
    10. '            
' → logprob: -9.20221996307373

Token 1914: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03253787010908127
    2. '           ' → logprob: -3.5325379371643066
    3. '
' → logprob: -5.907537937164307
    4. '        
' → logprob: -10.782537460327148
    5. '   ' → logprob: -10.907537460327148
    6. '<|end|>' → logprob: -11.657537460327148
    7. '```' → logprob: -11.907537460327148
    8. 'max' → logprob: -12.282537460327148
    9. '
' → logprob: -13.157537460327148
    10. ',' → logprob: -14.157537460327148

Token 1915: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0680944100022316
    2. '       ' → logprob: -2.818094491958618
    3. 'max' (adapté à ' max') → logprob: -5.193094253540039
    4. '
' → logprob: -7.693094253540039
    5. '   ' → logprob: -9.568094253540039
    6. ' max' → logprob: -11.443094253540039
    7. '               ' → logprob: -12.193094253540039
    8. '                   ' → logprob: -12.693094253540039
    9. '(max' → logprob: -13.443094253540039
    10. '                           ' → logprob: -13.443094253540039

Token 1916: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0004456852038856596
    2. '_' → logprob: -7.75044584274292
    3. ' _' → logprob: -12.125445365905762
    4. '_part' → logprob: -12.875445365905762
    5. '\' → logprob: -13.250445365905762
    6. ')_' → logprob: -13.750445365905762
    7. '```' → logprob: -13.750445365905762
    8. '_counts' → logprob: -14.125445365905762
    9. '_c' → logprob: -15.125445365905762
    10. '_code' → logprob: -15.250445365905762

Token 1917: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25193899869918823
    2. ' +=' → logprob: -1.501939058303833
    3. '+' → logprob: -11.876938819885254
    4. '=' → logprob: -12.876938819885254
    5. ']+=' → logprob: -16.12693977355957
    6. '   ' → logprob: -16.62693977355957
    7. '+="' → logprob: -16.62693977355957
    8. '+=(' → logprob: -17.37693977355957
    9. ' =' → logprob: -17.50193977355957
    10. '+='' → logprob: -17.50193977355957

Token 1918: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -20.62747573852539
    4. '```' → logprob: -20.75247573852539
    5. '   ' → logprob: -22.87747573852539
    6. '+' → logprob: -22.87747573852539
    7. '0' → logprob: -23.25247573852539
    8. '<|end|>' → logprob: -24.00247573852539
    9. '۱' → logprob: -24.12747573852539
    10. '6' → logprob: -24.50247573852539

Token 1919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -20.625
    4. '１' → logprob: -22.875
    5. '۱' → logprob: -23.0
    6. '   ' → logprob: -23.25
    7. '+' → logprob: -23.375
    8. '
' → logprob: -23.625
    9. '``' → logprob: -24.5
    10. '!' → logprob: -24.5

Token 1920: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05501069128513336
    2. '<|end|>' → logprob: -3.6800107955932617
    3. '       ' → logprob: -3.8050107955932617
    4. '

' → logprob: -5.180010795593262
    5. '<|end|>' → logprob: -8.680010795593262
    6. '        
' → logprob: -9.180010795593262
    7. '```' → logprob: -9.805010795593262
    8. '
' → logprob: -10.555010795593262
    9. '


' → logprob: -11.055010795593262
    10. '
        
' → logprob: -11.680010795593262

Token 1921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3145412802696228
    2. '
' → logprob: -1.3145413398742676
    3. '        
' → logprob: -6.814541339874268
    4. '

' → logprob: -9.81454086303711
    5. '   ' → logprob: -9.81454086303711
    6. '```' → logprob: -10.43954086303711
    7. '<|end|>' → logprob: -11.43954086303711
    8. '    
' → logprob: -11.68954086303711
    9. '           ' → logprob: -11.81454086303711
    10. '
' → logprob: -12.18954086303711

Token 1922: ' missing' (ID: 12486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04792613908648491
    2. 'missing' (adapté à ' missing') → logprob: -3.547926187515259
    3. '
' → logprob: -4.04792594909668
    4. ' missing' → logprob: -8.67292594909668
    5. '        
' → logprob: -8.79792594909668
    6. '   ' → logprob: -9.29792594909668
    7. '```' → logprob: -9.92292594909668
    8. 'miss' → logprob: -10.42292594909668
    9. '#' → logprob: -10.92292594909668
    10. '           ' → logprob: -11.79792594909668

Token 1923: '_w' (ID: 3567)
  Prédit: '_W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.01909503899514675
    2. '_' → logprob: -4.269094944000244
    3. '_counts' → logprob: -5.769094944000244
    4. '_parts' → logprob: -7.269094944000244
    5. '_w' → logprob: -7.894094944000244
    6. '_part' → logprob: -8.269095420837402
    7. '_spaces' → logprob: -9.519095420837402
    8. '_count' → logprob: -9.644095420837402
    9. '_missing' → logprob: -10.019095420837402
    10. '_M' → logprob: -10.519095420837402

Token 1924: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35112109780311584
    2. '=' → logprob: -1.2261210680007935
    3. '_count' → logprob: -6.601120948791504
    4. 'ith' → logprob: -7.476120948791504
    5. '_out' → logprob: -8.851120948791504
    6. '_counts' → logprob: -9.101120948791504
    7. '_' → logprob: -9.226120948791504
    8. 'ar' → logprob: -9.351120948791504
    9. '   ' → logprob: -10.101120948791504
    10. '_parts' → logprob: -10.226120948791504

Token 1925: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10145232081413269
    2. '0' → logprob: -2.351452350616455
    3. ' sum' → logprob: -6.726452350616455
    4. 'len' → logprob: -10.226451873779297
    5. '=sum' → logprob: -12.101451873779297
    6. ' ' → logprob: -13.351451873779297
    7. '(sum' → logprob: -14.226451873779297
    8. 'chosen' → logprob: -14.851451873779297
    9. '```' → logprob: -14.976451873779297
    10. '=' → logprob: -15.226451873779297

Token 1926: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008124859305098653
    2. '(p' → logprob: -7.250812530517578
    3. '([' → logprob: -9.250812530517578
    4. '((' → logprob: -12.125812530517578
    5. '(
' → logprob: -14.250812530517578
    6. '(not' → logprob: -15.375812530517578
    7. '([(' → logprob: -15.875812530517578
    8. '1' → logprob: -16.500812530517578
    9. 'p' → logprob: -17.125812530517578
    10. ' (' → logprob: -17.500812530517578

Token 1927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.041332900524139404
    2. '(' → logprob: -3.291332960128784
    3. '[' → logprob: -6.416332721710205
    4. 'p' → logprob: -7.041332721710205
    5. '(p' → logprob: -7.541332721710205
    6. '[p' → logprob: -8.416333198547363
    7. '[(' → logprob: -11.291333198547363
    8. ' ' → logprob: -12.291333198547363
    9. '   ' → logprob: -12.416333198547363
    10. '([' → logprob: -13.916333198547363

Token 1928: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021093362011015415
    2. '1' → logprob: -6.377109527587891
    3. '(p' → logprob: -8.12710952758789
    4. 'for' → logprob: -10.62710952758789
    5. '=' → logprob: -10.75210952758789
    6. '[' → logprob: -11.00210952758789
    7. '   ' → logprob: -11.37710952758789
    8. '(
' → logprob: -11.62710952758789
    9. ' for' → logprob: -12.00210952758789
    10. 'p' → logprob: -12.00210952758789

Token 1929: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0018389179604128003
    2. '_,' → logprob: -7.001838684082031
    3. ' p' → logprob: -8.001838684082031
    4. 'party' → logprob: -8.126838684082031
    5. '(_,' → logprob: -8.626838684082031
    6. '(p' → logprob: -9.626838684082031
    7. 'part' → logprob: -11.251838684082031
    8. 'pp' → logprob: -11.376838684082031
    9. ' _,' → logprob: -12.126838684082031
    10. '_' → logprob: -12.251838684082031

Token 1930: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026352092623710632
    2. 'in' → logprob: -3.6513521671295166
    3. 'p' → logprob: -10.651351928710938
    4. ' ' → logprob: -11.651351928710938
    5. 'not' → logprob: -12.526351928710938
    6. '1' → logprob: -12.651351928710938
    7. ' p' → logprob: -13.151351928710938
    8. '(p' → logprob: -13.276351928710938
    9. '[p' → logprob: -13.401351928710938
    10. '   ' → logprob: -13.526351928710938

Token 1931: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.02880687080323696
    2. ' chosen' → logprob: -3.6538069248199463
    3. 'p' → logprob: -6.403806686401367
    4. '[' → logprob: -7.653806686401367
    5. '1' → logprob: -9.028806686401367
    6. ' p' → logprob: -9.653806686401367
    7. '[(' → logprob: -9.903806686401367
    8. '[p' → logprob: -10.153806686401367
    9. '(' → logprob: -10.778806686401367
    10. 'ch' → logprob: -10.778806686401367

Token 1932: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.5798717141151428
    2. ' in' → logprob: -1.204871654510498
    3. 'in' → logprob: -3.329871654510498
    4. '_party' → logprob: -3.454871654510498
    5. '_' → logprob: -3.954871654510498
    6. '_p' → logprob: -4.204871654510498
    7. 'p' → logprob: -4.579871654510498
    8. ' if' → logprob: -4.829871654510498
    9. 'part' → logprob: -4.954871654510498
    10. 'if' → logprob: -5.454871654510498

Token 1933: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0003600144700612873
    2. '[' → logprob: -8.250360488891602
    3. '```' → logprob: -10.000360488891602
    4. 's' → logprob: -11.000360488891602
    5. '
' → logprob: -11.625360488891602
    6. 'es' → logprob: -12.000360488891602
    7. '{' → logprob: -13.000360488891602
    8. '   ' → logprob: -13.250360488891602
    9. '[]' → logprob: -13.625360488891602
    10. '_part' → logprob: -13.625360488891602

Token 1934: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07890025526285172
    2. 'if' → logprob: -2.5789003372192383
    3. '   ' → logprob: -12.078900337219238
    4. '           ' → logprob: -12.578900337219238
    5. '       ' → logprob: -14.203900337219238
    6. '               ' → logprob: -15.453900337219238
    7. '          ' → logprob: -16.078899383544922
    8. ' ' → logprob: -16.453899383544922
    9. '                   ' → logprob: -16.953899383544922
    10. 'p' → logprob: -17.078899383544922

Token 1935: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043207798153162
    2. ' p' → logprob: -3.168207883834839
    3. '   ' → logprob: -8.668208122253418
    4. '    ' → logprob: -11.793208122253418
    5. '(p' → logprob: -12.168208122253418
    6. '_' → logprob: -12.293208122253418
    7. ' ' → logprob: -12.418208122253418
    8. '  ' → logprob: -12.793208122253418
    9. ' (' → logprob: -12.793208122253418
    10. '           ' → logprob: -13.293208122253418

Token 1936: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000561969296541065
    2. '   ' → logprob: -8.750561714172363
    3. ' [' → logprob: -9.125561714172363
    4. 'w' → logprob: -9.625561714172363
    5. '       ' → logprob: -10.000561714172363
    6. ')[' → logprob: -10.500561714172363
    7. ' in' → logprob: -10.875561714172363
    8. '
' → logprob: -11.250561714172363
    9. '           ' → logprob: -11.250561714172363
    10. ' if' → logprob: -11.250561714172363

Token 1937: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.478889215737581e-05
    2. '
' → logprob: -11.250054359436035
    3. '```' → logprob: -11.250054359436035
    4. '=' → logprob: -12.000054359436035
    5. '0' → logprob: -12.375054359436035
    6. '   ' → logprob: -12.500054359436035
    7. '``' → logprob: -12.500054359436035
    8. '[' → logprob: -12.500054359436035
    9. '2' → logprob: -13.750054359436035
    10. '`' → logprob: -13.875054359436035

Token 1938: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.021177712827920914
    2. 'is' → logprob: -3.8961777687072754
    3. ')' → logprob: -7.521177768707275
    4. '==' → logprob: -9.646177291870117
    5. ']' → logprob: -11.521177291870117
    6. ')is' → logprob: -11.521177291870117
    7. ']==' → logprob: -13.521177291870117
    8. ')==' → logprob: -13.646177291870117
    9. ' ==' → logprob: -13.896177291870117
    10. '[' → logprob: -13.896177291870117

Token 1939: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.034213677048683167
    2. 'is' → logprob: -3.4092137813568115
    3. '==' → logprob: -7.534213542938232
    4. ')' → logprob: -11.03421401977539
    5. 'None' → logprob: -11.78421401977539
    6. ' ==' → logprob: -12.53421401977539
    7. ' None' → logprob: -13.78421401977539
    8. '===' → logprob: -13.90921401977539
    9. '[' → logprob: -14.28421401977539
    10. '=' → logprob: -14.28421401977539

Token 1940: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018157554790377617
    2. ' None' → logprob: -4.018157482147217
    3. '=None' → logprob: -12.518157958984375
    4. '(None' → logprob: -13.143157958984375
    5. '_None' → logprob: -13.268157958984375
    6. ',None' → logprob: -15.768157958984375
    7. '   ' → logprob: -16.268157958984375
    8. '.None' → logprob: -17.018157958984375
    9. '0' → logprob: -17.768157958984375
    10. 'none' → logprob: -17.893157958984375

Token 1941: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1790250688791275
    2. ')
' → logprob: -1.9290250539779663
    3. ' or' → logprob: -4.054025173187256
    4. '       ' → logprob: -6.929025173187256
    5. 'or' → logprob: -8.304024696350098
    6. '           ' → logprob: -11.429024696350098
    7. '   ' → logprob: -11.804024696350098
    8. ')+' → logprob: -12.179024696350098
    9. '        ' → logprob: -12.304024696350098
    10. '          ' → logprob: -12.929024696350098

Token 1942: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2661970555782318
    2. '       ' → logprob: -1.5161970853805542
    3. '```' → logprob: -5.266197204589844
    4. ')
' → logprob: -5.891197204589844
    5. '<|end|>' → logprob: -6.141197204589844
    6. '        
' → logprob: -6.516197204589844
    7. ')' → logprob: -7.016197204589844
    8. '``' → logprob: -8.266197204589844
    9. 'missing' → logprob: -8.641197204589844
    10. 'w' → logprob: -8.766197204589844

Token 1943: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' (adapté à ' missing') → logprob: -0.002489214763045311
    2. ' missing' → logprob: -6.00248908996582
    3. '
' → logprob: -12.12748908996582
    4. '       ' → logprob: -12.12748908996582
    5. '_missing' → logprob: -13.50248908996582
    6. '```' → logprob: -14.37748908996582
    7. 'miss' → logprob: -15.25248908996582
    8. '        
' → logprob: -15.37748908996582
    9. 'm' → logprob: -16.62748908996582
    10. '``' → logprob: -16.87748908996582

Token 1944: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.14463630318641663
    2. '_w' → logprob: -2.019636392593384
    3. '_C' → logprob: -6.644636154174805
    4. '_p' → logprob: -8.144636154174805
    5. '_m' → logprob: -8.769636154174805
    6. '_' → logprob: -9.269636154174805
    7. ' =' → logprob: -10.019636154174805
    8. '=' → logprob: -10.394636154174805
    9. 'c' → logprob: -11.644636154174805
    10. 'w' → logprob: -12.019636154174805

Token 1945: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. ' +=' → logprob: -17.60020637512207
    4. '+=' → logprob: -17.60020637512207
    5. '=sum' → logprob: -17.85020637512207
    6. '＝' → logprob: -18.97520637512207
    7. '.=' → logprob: -20.35020637512207
    8. '==' → logprob: -20.60020637512207
    9. '   ' → logprob: -20.60020637512207
    10. ')' → logprob: -20.72520637512207

Token 1946: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2014133334159851
    2. ' sum' → logprob: -1.7014133930206299
    3. '(sum' → logprob: -18.326414108276367
    4. '.sum' → logprob: -18.701414108276367
    5. '	sum' → logprob: -19.201414108276367
    6. '0' → logprob: -19.326414108276367
    7. 'p' → logprob: -19.451414108276367
    8. '1' → logprob: -19.701414108276367
    9. ' ' → logprob: -19.701414108276367
    10. '=sum' → logprob: -19.826414108276367

Token 1947: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.375000953674316
    3. '(
' → logprob: -15.000000953674316
    4. 'for' → logprob: -17.000001907348633
    5. ' (' → logprob: -17.125001907348633
    6. '(p' → logprob: -18.500001907348633
    7. '((' → logprob: -21.000001907348633
    8. '(

' → logprob: -21.000001907348633
    9. '(for' → logprob: -21.500001907348633
    10. 'p' → logprob: -21.500001907348633

Token 1948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '
' → logprob: -17.625003814697266
    4. ' ' → logprob: -17.625003814697266
    5. 'p' → logprob: -19.000003814697266
    6. '(p' → logprob: -19.625003814697266
    7. '```' → logprob: -20.250003814697266
    8. '   ' → logprob: -20.375003814697266
    9. '

' → logprob: -20.625003814697266
    10. 'for' → logprob: -21.750003814697266

Token 1949: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12980197370052338
    2. 'for' → logprob: -2.1298019886016846
    3. ' for' → logprob: -6.1298017501831055
    4. '1' → logprob: -7.5048017501831055
    5. '(p' → logprob: -8.879801750183105
    6. '(for' → logprob: -13.129801750183105
    7. '(
' → logprob: -15.004801750183105
    8. ' ' → logprob: -15.379801750183105
    9. ' (' → logprob: -15.504801750183105
    10. '(lambda' → logprob: -15.754801750183105

Token 1950: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.615255839889869e-05
    2. ' p' → logprob: -9.250096321105957
    3. '(p' → logprob: -17.75009536743164
    4. '   ' → logprob: -18.87509536743164
    5. 'chosen' → logprob: -19.62509536743164
    6. ' ' → logprob: -20.00009536743164
    7. '[p' → logprob: -20.25009536743164
    8. '	p' → logprob: -20.62509536743164
    9. '  ' → logprob: -21.62509536743164
    10. '
' → logprob: -21.75009536743164

Token 1951: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08900076150894165
    2. 'in' → logprob: -2.464000701904297
    3. 'p' → logprob: -10.339000701904297
    4. ' ' → logprob: -11.964000701904297
    5. ' p' → logprob: -12.214000701904297
    6. '   ' → logprob: -12.339000701904297
    7. '  ' → logprob: -12.839000701904297
    8. '       ' → logprob: -13.339000701904297
    9. '    ' → logprob: -13.714000701904297
    10. ',' → logprob: -13.964000701904297

Token 1952: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.12771572172641754
    2. ' chosen' → logprob: -2.127715826034546
    3. 'p' → logprob: -7.252715587615967
    4. ' p' → logprob: -9.877716064453125
    5. 'selected' → logprob: -10.752716064453125
    6. ' selected' → logprob: -12.877716064453125
    7. '[' → logprob: -13.502716064453125
    8. '[p' → logprob: -14.252716064453125
    9. ' ' → logprob: -14.377716064453125
    10. 'c' → logprob: -15.127716064453125

Token 1953: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.02355443499982357
    2. '[' → logprob: -4.64855432510376
    3. 'part' → logprob: -4.77355432510376
    4. 'chosen' → logprob: -5.39855432510376
    5. '_parts' → logprob: -8.398554801940918
    6. '_ch' → logprob: -9.273554801940918
    7. '   ' → logprob: -9.898554801940918
    8. ' ' → logprob: -10.148554801940918
    9. '
' → logprob: -10.648554801940918
    10. 'in' → logprob: -10.773554801940918

Token 1954: 'ies' (ID: 566)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08925450593233109
    2. 's' → logprob: -3.71425461769104
    3. 'ies' → logprob: -4.089254379272461
    4. 'arts' → logprob: -4.214254379272461
    5. 'aries' → logprob: -5.339254379272461
    6. 'es' → logprob: -5.464254379272461
    7. '1' → logprob: -5.714254379272461
    8. '0' → logprob: -5.839254379272461
    9. 'ices' → logprob: -6.089254379272461
    10. '(' → logprob: -6.339254379272461

Token 1955: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.055106814950704575
    2. 'if' → logprob: -2.9301068782806396
    3. ' in' → logprob: -8.555107116699219
    4. '           ' → logprob: -11.805107116699219
    5. '        ' → logprob: -12.055107116699219
    6. '       ' → logprob: -12.805107116699219
    7. '          ' → logprob: -12.930107116699219
    8. '               ' → logprob: -13.430107116699219
    9. '            ' → logprob: -13.555107116699219
    10. 'in' → logprob: -13.805107116699219

Token 1956: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4746840298175812
    2. ' p' → logprob: -0.9746840000152588
    3. '(p' → logprob: -7.724684238433838
    4. ' (' → logprob: -9.22468376159668
    5. '(' → logprob: -10.47468376159668
    6. '1' → logprob: -11.09968376159668
    7. ' ' → logprob: -11.97468376159668
    8. '   ' → logprob: -12.09968376159668
    9. '[p' → logprob: -12.59968376159668
    10. '0' → logprob: -13.22468376159668

Token 1957: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.490809417096898e-05
    2. 'p' → logprob: -11.375055313110352
    3. '1' → logprob: -11.500055313110352
    4. '(' → logprob: -11.875055313110352
    5. '#' → logprob: -12.250055313110352
    6. '2' → logprob: -12.750055313110352
    7. '][' → logprob: -13.125055313110352
    8. '
' → logprob: -13.250055313110352
    9. '```' → logprob: -13.250055313110352
    10. 'is' → logprob: -13.500055313110352

Token 1958: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026489559561014175
    2. '1' → logprob: -3.651489496231079
    3. '0' → logprob: -9.6514892578125
    4. '3' → logprob: -9.6514892578125
    5. '[' → logprob: -10.2764892578125
    6. 'None' → logprob: -11.2764892578125
    7. '(' → logprob: -12.1514892578125
    8. '
' → logprob: -12.6514892578125
    9. '```' → logprob: -13.7764892578125
    10. '   ' → logprob: -14.0264892578125

Token 1959: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006722233723849058
    2. 'is' → logprob: -5.006722450256348
    3. ')' → logprob: -12.256722450256348
    4. ']' → logprob: -14.381722450256348
    5. '==' → logprob: -14.506722450256348
    6. 'None' → logprob: -14.631722450256348
    7. '()' → logprob: -15.756722450256348
    8. ')is' → logprob: -16.63172149658203
    9. '[' → logprob: -16.88172149658203
    10. ' ' → logprob: -17.00672149658203

Token 1960: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03806742653250694
    2. 'is' → logprob: -3.28806734085083
    3. 'None' → logprob: -11.163067817687988
    4. '==' → logprob: -11.913067817687988
    5. ' None' → logprob: -13.163067817687988
    6. ')' → logprob: -13.163067817687988
    7. '
' → logprob: -14.288067817687988
    8. '=None' → logprob: -15.413067817687988
    9. '```' → logprob: -15.663067817687988
    10. ')is' → logprob: -16.788066864013672

Token 1961: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.5048530030981055e-06
    2. ' None' → logprob: -13.500001907348633
    3. '(None' → logprob: -16.875001907348633
    4. '0' → logprob: -17.750001907348633
    5. '_None' → logprob: -17.750001907348633
    6. 'none' → logprob: -18.125001907348633
    7. '=None' → logprob: -18.125001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '
' → logprob: -19.750001907348633
    10. '.None' → logprob: -20.125001907348633

Token 1962: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762176513671875
    2. ')
' → logprob: -0.8262176513671875
    3. '       ' → logprob: -8.201217651367188
    4. ')
' → logprob: -13.201217651367188
    5. ')

' → logprob: -14.576217651367188
    6. '   ' → logprob: -14.576217651367188
    7. '           ' → logprob: -15.451217651367188
    8. '),' → logprob: -15.826217651367188
    9. ' )
' → logprob: -16.201217651367188
    10. '```' → logprob: -16.201217651367188

Token 1963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08058691024780273
    2. 'missing' → logprob: -2.5805869102478027
    3. ' missing' → logprob: -6.580586910247803
    4. '```' → logprob: -8.830587387084961
    5. '
' → logprob: -9.455587387084961
    6. '           ' → logprob: -10.080587387084961
    7. '   ' → logprob: -11.455587387084961
    8. '_missing' → logprob: -11.830587387084961
    9. '``' → logprob: -12.080587387084961
    10. ')' → logprob: -12.330587387084961

Token 1964: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' (adapté à ' missing') → logprob: -0.011149567551910877
    2. '       ' → logprob: -4.5111494064331055
    3. ' missing' → logprob: -9.636149406433105
    4. '```' → logprob: -11.011149406433105
    5. '
' → logprob: -11.136149406433105
    6. '           ' → logprob: -13.261149406433105
    7. '``' → logprob: -13.386149406433105
    8. '   ' → logprob: -14.636149406433105
    9. '        
' → logprob: -14.886149406433105
    10. 'miss' → logprob: -14.886149406433105

Token 1965: '_m' (ID: 1285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0409765243530273
    2. '_' → logprob: -1.2909765243530273
    3. '_c' → logprob: -1.7909765243530273
    4. '=' → logprob: -1.7909765243530273
    5. '_p' → logprob: -3.6659765243530273
    6. '(' → logprob: -5.915976524353027
    7. 'for' → logprob: -6.290976524353027
    8. '_s' → logprob: -6.790976524353027
    9. 's' → logprob: -6.915976524353027
    10. '_w' → logprob: -7.040976524353027

Token 1966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868747651576996
    2. ' =' → logprob: -1.136874794960022
    3. '=sum' → logprob: -12.51187515258789
    4. 'sum' → logprob: -17.88687515258789
    5. '==' → logprob: -18.26187515258789
    6. '＝' → logprob: -18.38687515258789
    7. '=s' → logprob: -18.51187515258789
    8. '   ' → logprob: -18.63687515258789
    9. ' ' → logprob: -19.01187515258789
    10. '>' → logprob: -19.26187515258789

Token 1967: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5759453177452087
    2. 'sum' → logprob: -0.8259453177452087
    3. '1' → logprob: -12.075944900512695
    4. '(sum' → logprob: -16.075944900512695
    5. ' ' → logprob: -16.950944900512695
    6. '0' → logprob: -17.575944900512695
    7. ' p' → logprob: -18.075944900512695
    8. '   ' → logprob: -18.450944900512695
    9. '.sum' → logprob: -18.450944900512695
    10. '=sum' → logprob: -18.450944900512695

Token 1968: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.547789674485102e-05
    2. '1' → logprob: -10.250035285949707
    3. '(
' → logprob: -17.250036239624023
    4. ' (' → logprob: -18.125036239624023
    5. '(p' → logprob: -19.500036239624023
    6. 'for' → logprob: -20.375036239624023
    7. ' ' → logprob: -20.750036239624023
    8. '
' → logprob: -21.250036239624023
    9. '(sum' → logprob: -21.250036239624023
    10. '   ' → logprob: -21.500036239624023

Token 1969: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'p' → logprob: -17.25
    3. 'sum' → logprob: -18.375
    4. ' ' → logprob: -18.5
    5. '(' → logprob: -19.875
    6. '(p' → logprob: -20.125
    7. '
' → logprob: -20.25
    8. '   ' → logprob: -21.25
    9. '```' → logprob: -22.375
    10. 'range' → logprob: -22.875

Token 1970: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018163522705435753
    2. ' for' → logprob: -4.018163681030273
    3. '1' → logprob: -11.518163681030273
    4. '(' → logprob: -12.893163681030273
    5. ')' → logprob: -14.768163681030273
    6. '
' → logprob: -15.268163681030273
    7. '(for' → logprob: -15.893163681030273
    8. '```' → logprob: -16.393163681030273
    9. '(p' → logprob: -16.518163681030273
    10. '	for' → logprob: -17.143163681030273

Token 1971: ' p' (ID: 275)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.4565390944480896
    2. 'p' → logprob: -1.3315391540527344
    3. '1' → logprob: -2.3315391540527344
    4. ' chosen' → logprob: -5.456539154052734
    5. ' p' → logprob: -7.456539154052734
    6. ' ' → logprob: -8.831539154052734
    7. 'selected' → logprob: -9.456539154052734
    8. '(p' → logprob: -9.581539154052734
    9. 'cho' → logprob: -10.706539154052734
    10. '
' → logprob: -10.956539154052734

Token 1972: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20341157913208008
    2. 'in' → logprob: -1.95341157913208
    3. 'for' → logprob: -3.32841157913208
    4. ' for' → logprob: -5.70341157913208
    5. '1' → logprob: -6.82841157913208
    6. ',' → logprob: -6.82841157913208
    7. '
' → logprob: -8.828411102294922
    8. '   ' → logprob: -8.828411102294922
    9. '```' → logprob: -9.078411102294922
    10. '3' → logprob: -9.453411102294922

Token 1973: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.005783023778349161
    2. ' chosen' → logprob: -5.3807830810546875
    3. 'p' → logprob: -6.8807830810546875
    4. ' p' → logprob: -10.255783081054688
    5. 'selected' → logprob: -10.880783081054688
    6. 'part' → logprob: -11.005783081054688
    7. '(p' → logprob: -11.380783081054688
    8. '[p' → logprob: -11.505783081054688
    9. '[' → logprob: -11.505783081054688
    10. '   ' → logprob: -11.755783081054688

Token 1974: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.16344518959522247
    2. '[' → logprob: -2.538445234298706
    3. 'part' → logprob: -2.788445234298706
    4. '3' → logprob: -4.663444995880127
    5. '_parts' → logprob: -8.163445472717285
    6. 'Part' → logprob: -9.413445472717285
    7. '_party' → logprob: -9.788445472717285
    8. '_PART' → logprob: -9.913445472717285
    9. '(' → logprob: -10.038445472717285
    10. '1' → logprob: -10.163445472717285

Token 1975: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0029794832225888968
    2. '[' → logprob: -5.877979278564453
    3. 's' → logprob: -9.627979278564453
    4. '[]' → logprob: -10.127979278564453
    5. '```' → logprob: -11.252979278564453
    6. 'ices' → logprob: -11.752979278564453
    7. 'es' → logprob: -12.002979278564453
    8. 'chosen' → logprob: -12.127979278564453
    9. 'cies' → logprob: -12.502979278564453
    10. 'icies' → logprob: -12.627979278564453

Token 1976: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3133462369441986
    2. ' if' → logprob: -1.313346266746521
    3. ')' → logprob: -9.438345909118652
    4. '==' → logprob: -13.813345909118652
    5. ' in' → logprob: -13.938345909118652
    6. '):
' → logprob: -14.813345909118652
    7. '   ' → logprob: -15.063345909118652
    8. '       ' → logprob: -15.063345909118652
    9. ' is' → logprob: -15.313345909118652
    10. 'is' → logprob: -15.438345909118652

Token 1977: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6326320767402649
    2. 'p' → logprob: -0.7576320767402649
    3. '(p' → logprob: -11.0076322555542
    4. '0' → logprob: -12.5076322555542
    5. ' (' → logprob: -12.6326322555542
    6. '   ' → logprob: -12.7576322555542
    7. '1' → logprob: -12.8826322555542
    8. '(' → logprob: -14.0076322555542
    9. ' ' → logprob: -14.0076322555542
    10. ' ' → logprob: -15.2576322555542

Token 1978: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005012444220483303
    2. ' is' → logprob: -6.255012512207031
    3. 'is' → logprob: -6.255012512207031
    4. '2' → logprob: -6.880012512207031
    5. '==' → logprob: -10.005012512207031
    6. 'None' → logprob: -10.130012512207031
    7. '3' → logprob: -10.630012512207031
    8. '```' → logprob: -11.880012512207031
    9. '=' → logprob: -12.380012512207031
    10. ' ' → logprob: -12.880012512207031

Token 1979: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00030686063109897077
    2. '2' → logprob: -8.500307083129883
    3. 'None' → logprob: -9.250307083129883
    4. '0' → logprob: -12.500307083129883
    5. '[' → logprob: -13.000307083129883
    6. '
' → logprob: -14.875307083129883
    7. ' ' → logprob: -15.125307083129883
    8. '```' → logprob: -15.250307083129883
    9. '   ' → logprob: -15.500307083129883
    10. '-' → logprob: -16.000307083129883

Token 1980: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.030187083408236504
    2. 'is' → logprob: -4.155187129974365
    3. ']' → logprob: -4.280187129974365
    4. '[' → logprob: -8.780186653137207
    5. ')' → logprob: -10.155186653137207
    6. '==' → logprob: -12.280186653137207
    7. 'None' → logprob: -12.530186653137207
    8. ' ' → logprob: -13.155186653137207
    9. '`' → logprob: -13.155186653137207
    10. '```' → logprob: -13.280186653137207

Token 1981: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06196970492601395
    2. 'is' → logprob: -2.811969757080078
    3. 'None' → logprob: -13.811969757080078
    4. '==' → logprob: -14.436969757080078
    5. ' None' → logprob: -15.811969757080078
    6. ')' → logprob: -15.936969757080078
    7. '```' → logprob: -15.936969757080078
    8. '=None' → logprob: -17.311969757080078
    9. '[' → logprob: -17.436969757080078
    10. ')is' → logprob: -18.311969757080078

Token 1982: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. '(None' → logprob: -16.87502098083496
    4. '_None' → logprob: -18.37502098083496
    5. '=None' → logprob: -19.37502098083496
    6. '   ' → logprob: -19.37502098083496
    7. '0' → logprob: -20.00002098083496
    8. 'none' → logprob: -20.25002098083496
    9. '.None' → logprob: -21.50002098083496
    10. ',None' → logprob: -22.50002098083496

Token 1983: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006987344822846353
    2. ')
' → logprob: -7.750698566436768
    3. '       ' → logprob: -8.250699043273926
    4. '   ' → logprob: -13.625699043273926
    5. ' )' → logprob: -13.625699043273926
    6. ')`' → logprob: -13.875699043273926
    7. ')

' → logprob: -14.250699043273926
    8. ')
' → logprob: -14.500699043273926
    9. '))' → logprob: -14.750699043273926
    10. '```' → logprob: -14.875699043273926

Token 1984: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5774188041687012
    2. '       ' → logprob: -0.8274188041687012
    3. '```' → logprob: -7.077418804168701
    4. '        
' → logprob: -7.952418804168701
    5. '<|end|>' → logprob: -8.82741928100586
    6. '
' → logprob: -9.32741928100586
    7. '

' → logprob: -11.45241928100586
    8. '``' → logprob: -12.07741928100586
    9. '           ' → logprob: -12.82741928100586
    10. '\
' → logprob: -12.95241928100586

Token 1985: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06412413716316223
    2. 'ex' → logprob: -3.56412410736084
    3. 'if' → logprob: -3.93912410736084
    4. 'adjust' → logprob: -5.06412410736084
    5. 'while' → logprob: -5.56412410736084
    6. 'reduce' → logprob: -6.31412410736084
    7. '```' → logprob: -7.06412410736084
    8. '#' (adapté à ' #') → logprob: -7.81412410736084
    9. '
' → logprob: -8.31412410736084
    10. 'over' → logprob: -8.93912410736084

Token 1986: ' If' (ID: 1843)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.787763237953186
    2. '       ' → logprob: -1.662763237953186
    3. 'ex' → logprob: -1.662763237953186
    4. 'if' → logprob: -2.4127631187438965
    5. 'adjust' → logprob: -3.5377631187438965
    6. 'reduce' → logprob: -3.6627631187438965
    7. '#' → logprob: -4.9127631187438965
    8. 'for' → logprob: -5.1627631187438965
    9. 'diff' → logprob: -5.2877631187438965
    10. 'extra' → logprob: -7.4127631187438965

Token 1987: ' missing' (ID: 12486)
  Prédit: ' missing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' missing' → logprob: -0.01667456328868866
    2. 'missing' → logprob: -4.141674518585205
    3. ' max' → logprob: -7.516674518585205
    4. 'max' → logprob: -9.516674995422363
    5. '   ' → logprob: -11.516674995422363
    6. ' abs' → logprob: -12.641674995422363
    7. ' chosen' → logprob: -12.641674995422363
    8. ' ' → logprob: -13.391674995422363
    9. 'abs' → logprob: -14.391674995422363
    10. ' maximum' → logprob: -14.641674995422363

Token 1988: ' >' (ID: 1424)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.002204855205491185
    2. 'w' → logprob: -6.752204895019531
    3. '_W' → logprob: -7.127204895019531
    4. 'W' → logprob: -9.002204895019531
    5. '>' → logprob: -10.252204895019531
    6. '_' → logprob: -10.377204895019531
    7. '   ' → logprob: -11.377204895019531
    8. ' >' → logprob: -11.752204895019531
    9. '```' → logprob: -12.252204895019531
    10. '>w' → logprob: -12.377204895019531

Token 1989: ' limits' (ID: 22406)
  Prédit: 'NW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NW' → logprob: -0.0037449754308909178
    2. 'N' → logprob: -6.503745079040527
    3. ' NW' → logprob: -6.878745079040527
    4. '[N' → logprob: -7.628745079040527
    5. '[' → logprob: -8.378745079040527
    6. '0' → logprob: -8.503745079040527
    7. 'max' → logprob: -8.628745079040527
    8. '(N' → logprob: -9.753745079040527
    9. '   ' → logprob: -11.253745079040527
    10. '_N' → logprob: -11.878745079040527

Token 1990: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03372350335121155
    2. ':' → logprob: -4.2837233543396
    3. ':
' → logprob: -4.4087233543396
    4. '>' → logprob: -5.6587233543396
    5. ' >' → logprob: -6.2837233543396
    6. ' and' → logprob: -6.6587233543396
    7. '           ' → logprob: -8.283723831176758
    8. ',' → logprob: -9.033723831176758
    9. 'and' → logprob: -9.158723831176758
    10. ' if' → logprob: -11.283723831176758

Token 1991: ' reduce' (ID: 10389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13818319141864777
    2. ' if' → logprob: -2.263183116912842
    3. 'if' → logprob: -4.138183116912842
    4. ' while' → logprob: -5.388183116912842
    5. 'while' → logprob: -6.388183116912842
    6. ' for' → logprob: -6.513183116912842
    7. '```' → logprob: -7.638183116912842
    8. 'for' → logprob: -7.763183116912842
    9. '           ' → logprob: -8.88818359375
    10. '        ' → logprob: -10.13818359375

Token 1992: ' parties' (ID: 13531)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8283401727676392
    2. 'while' → logprob: -0.9533401727676392
    3. ' max' → logprob: -2.5783400535583496
    4. 'max' → logprob: -2.7033400535583496
    5. '       ' → logprob: -4.20334005355835
    6. ' if' → logprob: -5.32834005355835
    7. 'count' → logprob: -5.57834005355835
    8. '
' → logprob: -6.20334005355835
    9. 'if' → logprob: -6.32834005355835
    10. ' result' → logprob: -6.57834005355835

Token 1993: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0322989784181118
    2. 'while' → logprob: -3.657299041748047
    3. '
' → logprob: -5.532299041748047
    4. ' while' → logprob: -6.282299041748047
    5. '```' → logprob: -10.032299041748047
    6. 'if' → logprob: -10.032299041748047
    7. ' if' → logprob: -10.907299041748047
    8. '   ' → logprob: -11.032299041748047
    9. '        
' → logprob: -11.282299041748047
    10. '           ' → logprob: -12.157299041748047

Token 1994: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009538597078062594
    2. '
' → logprob: -7.750953674316406
    3. ' if' → logprob: -8.500953674316406
    4. ' while' → logprob: -9.125953674316406
    5. 'while' → logprob: -9.250953674316406
    6. ',' → logprob: -10.125953674316406
    7. '        
' → logprob: -10.625953674316406
    8. '<|end|>' → logprob: -11.000953674316406
    9. '```' → logprob: -11.750953674316406
    10. 'if' → logprob: -11.875953674316406

Token 1995: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015921075828373432
    2. 'while' → logprob: -6.75159215927124
    3. ' while' → logprob: -8.376591682434082
    4. '
' → logprob: -9.126591682434082
    5. ' if' → logprob: -10.501591682434082
    6. '```' → logprob: -11.001591682434082
    7. 'if' → logprob: -11.626591682434082
    8. 'for' → logprob: -11.751591682434082
    9. ' for' → logprob: -11.876591682434082
    10. ',' → logprob: -12.501591682434082

Token 1996: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05341716855764389
    2. 'while' → logprob: -3.553417205810547
    3. ' while' → logprob: -3.803417205810547
    4. ' if' → logprob: -7.428417205810547
    5. 'if' → logprob: -8.803417205810547
    6. '
' → logprob: -8.803417205810547
    7. '```' → logprob: -9.553417205810547
    8. ' for' → logprob: -9.803417205810547
    9. 'for' → logprob: -10.053417205810547
    10. '        
' → logprob: -11.428417205810547

Token 1997: ' Each' (ID: 11555)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.27796927094459534
    2. '       ' → logprob: -1.527969241142273
    3. 'if' → logprob: -4.1529693603515625
    4. ' while' → logprob: -5.0279693603515625
    5. 'reduce' → logprob: -6.6529693603515625
    6. 'for' → logprob: -7.2779693603515625
    7. ' if' → logprob: -7.4029693603515625
    8. 'adjust' → logprob: -7.9029693603515625
    9. 'ex' → logprob: -8.902969360351562
    10. 'diff' → logprob: -9.277969360351562

Token 1998: ' missing' (ID: 12486)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.269649863243103
    2. ' missing' → logprob: -1.769649863243103
    3. 'if' → logprob: -2.0196499824523926
    4. 'missing' → logprob: -2.0196499824523926
    5. ' of' → logprob: -2.5196499824523926
    6. 'while' → logprob: -3.3946499824523926
    7. ' for' → logprob: -3.3946499824523926
    8. 'for' → logprob: -3.3946499824523926
    9. '_missing' → logprob: -3.7696499824523926
    10. '#' → logprob: -4.269649982452393

Token 1999: ' party' (ID: 7362)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.3232658803462982
    2. '_' → logprob: -1.6982659101486206
    3. '_W' → logprob: -2.698265790939331
    4. '>' → logprob: -4.69826602935791
    5. '_party' → logprob: -4.82326602935791
    6. '_missing' → logprob: -5.82326602935791
    7. ' >' → logprob: -6.69826602935791
    8. 'missing' → logprob: -7.32326602935791
    9. ' =' → logprob: -7.57326602935791
    10. '_part' → logprob: -7.94826602935791

Token 2000: ' over' (ID: 1072)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -2.0674824714660645
    2. '_missing' → logprob: -2.0674824714660645
    3. ' =' → logprob: -2.3174824714660645
    4. '_w' → logprob: -2.6924824714660645
    5. '_ex' → logprob: -2.6924824714660645
    6. 'with' → logprob: -2.6924824714660645
    7. ' that' → logprob: -2.6924824714660645
    8. ' with' → logprob: -2.9424824714660645
    9. ' exceeding' → logprob: -3.1924824714660645
    10. ' missing' → logprob: -3.6924824714660645

Token 2001: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.9008499979972839
    2. 'max' → logprob: -2.5258500576019287
    3. ' limit' → logprob: -2.6508500576019287
    4. 'the' → logprob: -2.9008500576019287
    5. '`' → logprob: -3.1508500576019287
    6. '#' → logprob: -3.2758500576019287
    7. 'limits' → logprob: -3.2758500576019287
    8. ' the' → logprob: -3.5258500576019287
    9. ' limits' → logprob: -3.6508500576019287
    10. 'N' → logprob: -3.6508500576019287

Token 2002: ' reduce' (ID: 10389)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5719889402389526
    2. '       ' → logprob: -1.9469889402389526
    3. '>' → logprob: -2.446989059448242
    4. '```' → logprob: -2.946989059448242
    5. ' -=' → logprob: -3.196989059448242
    6. '#' → logprob: -3.946989059448242
    7. '-=' → logprob: -3.946989059448242
    8. ' -' → logprob: -4.321989059448242
    9. 'if' → logprob: -4.821989059448242
    10. '           ' → logprob: -4.946989059448242

Token 2003: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6497065424919128
    2. ' max' → logprob: -1.5247066020965576
    3. 'by' → logprob: -2.0247066020965576
    4. '1' → logprob: -2.3997066020965576
    5. ' by' → logprob: -3.6497066020965576
    6. ' ' → logprob: -5.2747063636779785
    7. ' one' → logprob: -6.3997063636779785
    8. 'one' → logprob: -6.6497063636779785
    9. 'count' → logprob: -7.1497063636779785
    10. '(max' → logprob: -7.1497063636779785

Token 2004: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00018101456225849688
    2. '_part' → logprob: -9.000181198120117
    3. '_' → logprob: -10.250181198120117
    4. 'count' → logprob: -10.875181198120117
    5. '\' → logprob: -13.875181198120117
    6. 'part' → logprob: -14.000181198120117
    7. '_
' → logprob: -14.625181198120117
    8. '```' → logprob: -15.500181198120117
    9. '(
' → logprob: -15.750181198120117
    10. '(' → logprob: -15.750181198120117

Token 2005: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10031654685735703
    2. 'while' → logprob: -2.4753165245056152
    3. '
' → logprob: -4.600316524505615
    4. ' while' → logprob: -7.225316524505615
    5. 'for' → logprob: -8.975317001342773
    6. '```' → logprob: -9.100317001342773
    7. '   ' → logprob: -9.475317001342773
    8. 'if' → logprob: -10.225317001342773
    9. '           ' → logprob: -10.225317001342773
    10. '        
' → logprob: -10.350317001342773

Token 2006: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26533299684524536
    2. 'missing' → logprob: -2.1403329372406006
    3. '(m' → logprob: -3.0153329372406006
    4. ' missing' → logprob: -3.2653329372406006
    5. ' (' → logprob: -4.39033317565918
    6. ' ' → logprob: -4.39033317565918
    7. '(max' → logprob: -6.89033317565918
    8. 'max' → logprob: -7.51533317565918
    9. '(min' → logprob: -7.51533317565918
    10. '(' → logprob: -7.76533317565918

Token 2007: '1' (ID: 16)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.4962558150291443
    2. '(m' → logprob: -2.121255874633789
    3. 'max' → logprob: -2.121255874633789
    4. '(max' → logprob: -2.621255874633789
    5. '1' → logprob: -2.871255874633789
    6. '(min' → logprob: -4.371255874633789
    7. ' missing' → logprob: -5.621255874633789
    8. 'min' → logprob: -5.871255874633789
    9. '(' → logprob: -6.996255874633789
    10. ' max' → logprob: -6.996255874633789

Token 2008: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02003888040781021
    2. 'while' → logprob: -4.520039081573486
    3. 'if' → logprob: -5.270039081573486
    4. 'for' → logprob: -5.645039081573486
    5. '```' → logprob: -9.395038604736328
    6. '
' → logprob: -9.895038604736328
    7. '        
' → logprob: -10.395038604736328
    8. 'max' → logprob: -10.770038604736328
    9. 'missing' → logprob: -10.770038604736328
    10. ' if' → logprob: -11.020038604736328

Token 2009: 'simple' (ID: 44183)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9170525074005127
    2. ')' → logprob: -1.1670525074005127
    3. '       ' → logprob: -1.5420525074005127
    4. '
' → logprob: -3.2920525074005127
    5. '```' → logprob: -4.542052268981934
    6. 'for' → logprob: -5.292052268981934
    7. 'if' → logprob: -5.542052268981934
    8. '           ' → logprob: -5.917052268981934
    9. '\n' → logprob: -6.042052268981934
    10. ' if' → logprob: -6.042052268981934

Token 2010: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9681645631790161
    2. ' if' → logprob: -0.9681645631790161
    3. 'if' → logprob: -1.8431645631790161
    4. '       ' → logprob: -3.8431644439697266
    5. ')' → logprob: -4.093164443969727
    6. '```' → logprob: -4.093164443969727
    7. ')
' → logprob: -4.593164443969727
    8. '           ' → logprob: -5.593164443969727
    9. '``' → logprob: -6.093164443969727
    10. 'elif' → logprob: -6.093164443969727

Token 2011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10891729593276978
    2. '
' → logprob: -2.483917236328125
    3. '```' → logprob: -3.983917236328125
    4. '``' → logprob: -7.483917236328125
    5. '        
' → logprob: -8.233917236328125
    6. 'if' → logprob: -8.858917236328125
    7. 'while' → logprob: -9.983917236328125
    8. ' if' → logprob: -10.233917236328125
    9. 'for' → logprob: -10.858917236328125
    10. '
' → logprob: -10.983917236328125

Token 2012: ' reduce' (ID: 10389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028701385017484426
    2. '
' → logprob: -6.127870082855225
    3. 'if' → logprob: -8.252870559692383
    4. 'while' → logprob: -8.252870559692383
    5. '```' → logprob: -9.002870559692383
    6. '        
' → logprob: -10.877870559692383
    7. 'for' → logprob: -11.877870559692383
    8. '``' → logprob: -12.252870559692383
    9. '   ' → logprob: -12.502870559692383
    10. '           ' → logprob: -12.877870559692383

Token 2013: ' =' (ID: 314)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.48672422766685486
    2. '_' → logprob: -1.8617242574691772
    3. '_count' → logprob: -1.8617242574691772
    4. '_by' → logprob: -3.3617241382598877
    5. '_amt' → logprob: -3.7367241382598877
    6. ' =' → logprob: -4.236724376678467
    7. '_cnt' → logprob: -7.361724376678467
    8. '=' → logprob: -7.611724376678467
    9. '_num' → logprob: -9.486723899841309
    10. 'amount' → logprob: -9.736723899841309

Token 2014: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005475059617310762
    2. ' max' → logprob: -5.755475044250488
    3. '0' → logprob: -6.130475044250488
    4. '(max' → logprob: -9.380475044250488
    5. '       ' → logprob: -10.505475044250488
    6. 'min' → logprob: -13.130475044250488
    7. '           ' → logprob: -13.630475044250488
    8. ' ' → logprob: -13.880475044250488
    9. 'missing' → logprob: -14.130475044250488
    10. '   ' → logprob: -14.380475044250488

Token 2015: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001414426224073395
    2. '(max' → logprob: -9.500141143798828
    3. '0' → logprob: -10.000141143798828
    4. ' max' → logprob: -11.000141143798828
    5. 'missing' → logprob: -12.375141143798828
    6. 'min' → logprob: -16.000141143798828
    7. '(' → logprob: -17.625141143798828
    8. '   ' → logprob: -18.000141143798828
    9. '[max' → logprob: -18.000141143798828
    10. 'sum' → logprob: -18.125141143798828

Token 2016: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8904207944869995
    2. '
' → logprob: -1.1404207944869995
    3. 'if' → logprob: -1.5154207944869995
    4. ' if' → logprob: -3.390420913696289
    5. '+' → logprob: -5.140420913696289
    6. '+
' → logprob: -5.265420913696289
    7. ' +' → logprob: -5.890420913696289
    8. 'for' → logprob: -7.140420913696289
    9. ' +=' → logprob: -7.765420913696289
    10. '   ' → logprob: -8.015420913696289

Token 2017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045602377504110336
    2. '
' → logprob: -3.795602321624756
    3. ' if' → logprob: -4.045602321624756
    4. 'if' → logprob: -5.420602321624756
    5. 'for' → logprob: -9.670602798461914
    6. '        
' → logprob: -10.795602798461914
    7. '   ' → logprob: -11.170602798461914
    8. '```' → logprob: -11.170602798461914
    9. ' +=' → logprob: -11.420602798461914
    10. '        ' → logprob: -11.545602798461914

Token 2018: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011258482001721859
    2. '       ' → logprob: -4.636258602142334
    3. '
' → logprob: -7.261258602142334
    4. ' if' → logprob: -7.636258602142334
    5. 'reduce' → logprob: -8.386258125305176
    6. 'for' → logprob: -10.136258125305176
    7. 'missing' → logprob: -10.261258125305176
    8. 'while' → logprob: -12.011258125305176
    9. 'max' → logprob: -13.011258125305176
    10. '```' → logprob: -13.261258125305176

Token 2019: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.03390501067042351
    2. ' missing' → logprob: -3.408905029296875
    3. '   ' → logprob: -8.283905029296875
    4. 'miss' → logprob: -12.533905029296875
    5. '    ' → logprob: -13.908905029296875
    6. '  ' → logprob: -14.283905029296875
    7. ' ' → logprob: -14.783905029296875
    8. '_missing' → logprob: -15.408905029296875
    9. '       ' → logprob: -15.658905029296875
    10. 'max' → logprob: -15.658905029296875

Token 2020: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.006176563911139965
    2. '_W' → logprob: -5.131176471710205
    3. 'w' → logprob: -8.506176948547363
    4. 'W' → logprob: -10.256176948547363
    5. '>' → logprob: -12.506176948547363
    6. '_' → logprob: -13.506176948547363
    7. '<w' → logprob: -13.631176948547363
    8. '```' → logprob: -14.631176948547363
    9. '
' → logprob: -14.881176948547363
    10. '_c' → logprob: -14.881176948547363

Token 2021: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3868763744831085
    2. '>' → logprob: -1.1368763446807861
    3. '>w' → logprob: -13.011876106262207
    4. '   ' → logprob: -13.761876106262207
    5. '>
' → logprob: -14.636876106262207
    6. ' >
' → logprob: -14.761876106262207
    7. '>N' → logprob: -14.886876106262207
    8. ' ' → logprob: -15.636876106262207
    9. ' ' → logprob: -16.386877059936523
    10. ')' → logprob: -16.386877059936523

Token 2022: ' NW' (ID: 58124)
  Prédit: 'NW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NW' → logprob: -1.5690089639974758e-05
    2. ' NW' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.375015258789062
    4. 'N' → logprob: -16.000015258789062
    5. 'nw' → logprob: -16.125015258789062
    6. '       ' → logprob: -18.625015258789062
    7. '0' → logprob: -18.750015258789062
    8. ' ' → logprob: -19.125015258789062
    9. '`' → logprob: -19.875015258789062
    10. '  ' → logprob: -20.125015258789062

Token 2023: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03659387305378914
    2. ':' → logprob: -4.036593914031982
    3. '           ' → logprob: -4.286593914031982
    4. '       ' → logprob: -5.411593914031982
    5. '):
' → logprob: -11.411593437194824
    6. '   ' → logprob: -11.661593437194824
    7. '        ' → logprob: -11.911593437194824
    8. ' and' → logprob: -11.911593437194824
    9. '               ' → logprob: -12.411593437194824
    10. ':
' → logprob: -12.786593437194824

Token 2024: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00834435410797596
    2. 'reduce' → logprob: -5.0083441734313965
    3. '       ' → logprob: -6.5083441734313965
    4. ' reduce' → logprob: -9.758344650268555
    5. '   ' → logprob: -10.258344650268555
    6. '               ' → logprob: -10.758344650268555
    7. '```' → logprob: -11.008344650268555
    8. '                   ' → logprob: -13.133344650268555
    9. '``' → logprob: -13.883344650268555
    10. '.reduce' → logprob: -14.383344650268555

Token 2025: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.020925696939229965
    2. '           ' → logprob: -3.895925760269165
    3. ' reduce' → logprob: -8.395925521850586
    4. '       ' → logprob: -9.520925521850586
    5. '```' → logprob: -10.270925521850586
    6. '               ' → logprob: -10.645925521850586
    7. '   ' → logprob: -11.020925521850586
    8. '``' → logprob: -12.145925521850586
    9. 'redu' → logprob: -13.520925521850586
    10. '                   ' → logprob: -14.145925521850586

Token 2026: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8146926760673523
    2. '+=' → logprob: -1.064692735671997
    3. '=' → logprob: -1.564692735671997
    4. ' =' → logprob: -5.814692497253418
    5. '   ' → logprob: -9.064692497253418
    6. '           ' → logprob: -9.189692497253418
    7. '       ' → logprob: -10.689692497253418
    8. '+=(' → logprob: -12.189692497253418
    9. '        ' → logprob: -13.314692497253418
    10. '```' → logprob: -13.439692497253418

Token 2027: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.0013954727910459042
    2. ' missing' → logprob: -6.6263957023620605
    3. '(m' → logprob: -9.876395225524902
    4. 'miss' → logprob: -11.126395225524902
    5. '   ' → logprob: -13.376395225524902
    6. ' (' → logprob: -14.376395225524902
    7. '           ' → logprob: -14.376395225524902
    8. '       ' → logprob: -15.251395225524902
    9. '(' → logprob: -15.501395225524902
    10. '```' → logprob: -16.50139617919922

Token 2028: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.1186566047836095e-05
    2. 'w' → logprob: -10.500031471252441
    3. '_W' → logprob: -13.000031471252441
    4. '```' → logprob: -13.875031471252441
    5. '`' → logprob: -16.250030517578125
    6. '\' → logprob: -16.250030517578125
    7. 'W' → logprob: -16.500030517578125
    8. '   ' → logprob: -16.750030517578125
    9. '
' → logprob: -17.500030517578125
    10. ' _' → logprob: -17.625030517578125

Token 2029: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3134327530860901
    2. '-' → logprob: -1.3134326934814453
    3. '-N' → logprob: -8.688432693481445
    4. '-W' → logprob: -13.813432693481445
    5. ' ' → logprob: -14.313432693481445
    6. '   ' → logprob: -14.563432693481445
    7. '           ' → logprob: -15.563432693481445
    8. ' ' → logprob: -16.813432693481445
    9. '       ' → logprob: -17.688432693481445
    10. '  ' → logprob: -18.063432693481445

Token 2030: ' NW' (ID: 58124)
  Prédit: 'NW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NW' → logprob: -2.339278580620885e-06
    2. ' NW' → logprob: -13.000001907348633
    3. 'N' → logprob: -19.000001907348633
    4. '   ' → logprob: -19.250001907348633
    5. 'nw' → logprob: -19.875001907348633
    6. '       ' → logprob: -20.250001907348633
    7. 'NX' → logprob: -21.125001907348633
    8. '```' → logprob: -21.500001907348633
    9. 'ND' → logprob: -21.625001907348633
    10. 'NZ' → logprob: -21.875001907348633

Token 2031: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006861124187707901
    2. '```' → logprob: -5.381861209869385
    3. 'if' → logprob: -6.881861209869385
    4. '<|end|>' → logprob: -7.506861209869385
    5. ' if' → logprob: -7.631861209869385
    6. '``' → logprob: -9.131860733032227
    7. '           ' → logprob: -11.006860733032227
    8. '
' → logprob: -11.631860733032227
    9. '\' → logprob: -11.631860733032227
    10. ')
' → logprob: -12.006860733032227

Token 2032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007013569120317698
    2. 'if' → logprob: -7.375701427459717
    3. '```' → logprob: -9.625700950622559
    4. ' if' → logprob: -12.000700950622559
    5. '           ' → logprob: -13.125700950622559
    6. '
' → logprob: -15.625700950622559
    7. '``' → logprob: -16.000701904296875
    8. '   ' → logprob: -16.500701904296875
    9. 'If' → logprob: -17.125701904296875
    10. '<|end|>' → logprob: -17.500701904296875

Token 2033: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1298387199640274
    2. 'if' (adapté à ' if') → logprob: -2.129838705062866
    3. ' if' → logprob: -6.004838943481445
    4. '```' → logprob: -7.754838943481445
    5. '           ' → logprob: -12.129838943481445
    6. '``' → logprob: -12.379838943481445
    7. 'If' → logprob: -15.129838943481445
    8. '
' → logprob: -15.254838943481445
    9. '   ' → logprob: -15.254838943481445
    10. '	if' → logprob: -15.629838943481445

Token 2034: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.126929372549057
    2. ' missing' → logprob: -2.12692928314209
    3. 'miss' → logprob: -14.25192928314209
    4. '   ' → logprob: -14.75192928314209
    5. '_missing' → logprob: -15.62692928314209
    6. ' ' → logprob: -17.501930236816406
    7. 'Missing' → logprob: -18.251930236816406
    8. '       ' → logprob: -18.501930236816406
    9. 'm' → logprob: -18.626930236816406
    10. ' missed' → logprob: -19.001930236816406

Token 2035: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.0206720617134124e-05
    2. 'c' → logprob: -11.62501049041748
    3. '_m' → logprob: -14.25001049041748
    4. '_C' → logprob: -14.75001049041748
    5. '_' → logprob: -16.250009536743164
    6. 'C' → logprob: -16.500009536743164
    7. '_n' → logprob: -17.875009536743164
    8. ' _' → logprob: -18.000009536743164
    9. ' c' → logprob: -18.000009536743164
    10. '```' → logprob: -18.125009536743164

Token 2036: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.023247340694069862
    2. '>' → logprob: -3.773247241973877
    3. ' ' → logprob: -14.148247718811035
    4. '>C' → logprob: -14.773247718811035
    5. '           ' → logprob: -15.523247718811035
    6. '   ' → logprob: -15.523247718811035
    7. '       ' → logprob: -16.02324676513672
    8. '  ' → logprob: -16.64824676513672
    9. '        ' → logprob: -16.64824676513672
    10. ' >
' → logprob: -17.39824676513672

Token 2037: ' NC' (ID: 28895)
  Prédit: 'NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NC' → logprob: -0.0007100477814674377
    2. ' NC' → logprob: -7.2507100105285645
    3. 'N' → logprob: -16.875709533691406
    4. '   ' → logprob: -18.375709533691406
    5. 'nc' → logprob: -18.500709533691406
    6. 'Nc' → logprob: -18.875709533691406
    7. '_nc' → logprob: -19.625709533691406
    8. '       ' → logprob: -20.500709533691406
    9. ' ' → logprob: -21.000709533691406
    10. '```' → logprob: -22.125709533691406

Token 2038: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16292865574359894
    2. ':
' → logprob: -2.412928581237793
    3. '>' → logprob: -3.287928581237793
    4. ':' → logprob: -3.912928581237793
    5. ' >' → logprob: -6.162928581237793
    6. '       ' → logprob: -8.037928581237793
    7. '          ' → logprob: -8.037928581237793
    8. '```' → logprob: -8.412928581237793
    9. '<|end|>' → logprob: -9.412928581237793
    10. '        ' → logprob: -9.662928581237793

Token 2039: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013047587708570063
    2. '```' → logprob: -9.875130653381348
    3. '               ' → logprob: -10.250130653381348
    4. '                           ' → logprob: -11.000130653381348
    5. '       ' → logprob: -11.375130653381348
    6. '                       ' → logprob: -12.250130653381348
    7. '                   ' → logprob: -12.750130653381348
    8. '``' → logprob: -12.875130653381348
    9. '          ' → logprob: -13.125130653381348
    10. '         ' → logprob: -14.500130653381348

Token 2040: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.5789449214935303
    2. '           ' → logprob: -0.8289449214935303
    3. '       ' → logprob: -7.078945159912109
    4. 'missing' → logprob: -7.453945159912109
    5. '```' → logprob: -7.453945159912109
    6. '               ' → logprob: -8.45394515991211
    7. ' reduce' → logprob: -8.70394515991211
    8. '   ' → logprob: -8.82894515991211
    9. '``' → logprob: -9.20394515991211
    10. 'replace' → logprob: -9.32894515991211

Token 2041: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04605109989643097
    2. ' +=' → logprob: -3.171051025390625
    3. '           ' → logprob: -5.921051025390625
    4. '       ' → logprob: -9.171051025390625
    5. '```' → logprob: -9.296051025390625
    6. '          ' → logprob: -9.921051025390625
    7. '            ' → logprob: -10.171051025390625
    8. '        ' → logprob: -11.046051025390625
    9. '   ' → logprob: -11.546051025390625
    10. '=' → logprob: -11.546051025390625

Token 2042: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.0007105246186256409
    2. ' missing' → logprob: -7.250710487365723
    3. 'miss' → logprob: -15.000710487365723
    4. '(m' → logprob: -15.250710487365723
    5. '   ' → logprob: -17.50071144104004
    6. '
' → logprob: -18.12571144104004
    7. '(' → logprob: -18.50071144104004
    8. ' (' → logprob: -18.87571144104004
    9. '_missing' → logprob: -19.12571144104004
    10. 'm' → logprob: -19.12571144104004

Token 2043: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0006445261533372104
    2. 'c' → logprob: -8.12564468383789
    3. '_m' → logprob: -8.50064468383789
    4. 'C' → logprob: -9.37564468383789
    5. '_C' → logprob: -10.12564468383789
    6. 'missing' → logprob: -11.25064468383789
    7. ' ' → logprob: -13.25064468383789
    8. '   ' → logprob: -13.62564468383789
    9. 'm' → logprob: -13.87564468383789
    10. '  ' → logprob: -14.37564468383789

Token 2044: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02975442260503769
    2. '-' → logprob: -3.529754400253296
    3. '   ' → logprob: -13.154754638671875
    4. ' ' → logprob: -14.029754638671875
    5. '       ' → logprob: -14.279754638671875
    6. '           ' → logprob: -14.654754638671875
    7. '  ' → logprob: -16.904754638671875
    8. '    ' → logprob: -17.279754638671875
    9. '        ' → logprob: -17.404754638671875
    10. ' ' → logprob: -17.404754638671875

Token 2045: ' NC' (ID: 28895)
  Prédit: 'NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NC' → logprob: -0.0031777136027812958
    2. ' NC' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.628177642822266
    4. '   ' → logprob: -18.503177642822266
    5. '_nc' → logprob: -20.253177642822266
    6. 'NM' → logprob: -20.378177642822266
    7. 'nc' → logprob: -20.503177642822266
    8. ' ' → logprob: -20.628177642822266
    9. '
' → logprob: -20.628177642822266
    10. 'N' → logprob: -21.003177642822266

Token 2046: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01270376518368721
    2. ' if' → logprob: -4.512703895568848
    3. 'if' → logprob: -6.512703895568848
    4. '```' → logprob: -9.262703895568848
    5. '           ' → logprob: -10.512703895568848
    6. '<|end|>' → logprob: -10.887703895568848
    7. '#' → logprob: -11.637703895568848
    8. '   ' → logprob: -12.512703895568848
    9. 'If' → logprob: -12.887703895568848
    10. '``' → logprob: -13.137703895568848

Token 2047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005624461336992681
    2. 'if' → logprob: -7.75056266784668
    3. '```' → logprob: -9.00056266784668
    4. '           ' → logprob: -12.37556266784668
    5. '``' → logprob: -13.00056266784668
    6. ' if' → logprob: -13.62556266784668
    7. '#' → logprob: -15.12556266784668
    8. '
' → logprob: -16.25056266784668
    9. '   ' → logprob: -16.37556266784668
    10. 'from' → logprob: -16.50056266784668

Token 2048: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04954905807971954
    2. 'if' (adapté à ' if') → logprob: -3.049549102783203
    3. ' if' → logprob: -7.674549102783203
    4. '```' → logprob: -7.674549102783203
    5. '``' → logprob: -10.674549102783203
    6. '           ' → logprob: -12.299549102783203
    7. '#' → logprob: -13.049549102783203
    8. '   ' → logprob: -13.799549102783203
    9. '
' → logprob: -14.174549102783203
    10. 'If' → logprob: -15.049549102783203

Token 2049: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.004124230705201626
    2. ' missing' → logprob: -5.504124164581299
    3. '   ' → logprob: -10.129124641418457
    4. '           ' → logprob: -13.379124641418457
    5. '       ' → logprob: -13.379124641418457
    6. '(m' → logprob: -13.754124641418457
    7. 'miss' → logprob: -13.879124641418457
    8. '(' → logprob: -15.379124641418457
    9. ' (' → logprob: -15.379124641418457
    10. '_missing' → logprob: -15.879124641418457

Token 2050: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0018031037179753184
    2. 'm' → logprob: -6.626802921295166
    3. 'M' → logprob: -8.001803398132324
    4. '_M' → logprob: -8.876803398132324
    5. '   ' → logprob: -13.376803398132324
    6. '```' → logprob: -15.001803398132324
    7. '  ' → logprob: -16.251802444458008
    8. '_c' → logprob: -16.376802444458008
    9. '
' → logprob: -16.376802444458008
    10. ' ' → logprob: -16.876802444458008

Token 2051: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03804459050297737
    2. '>' → logprob: -3.2880446910858154
    3. '>M' → logprob: -13.788044929504395
    4. ' ' → logprob: -13.913044929504395
    5. '           ' → logprob: -14.788044929504395
    6. '   ' → logprob: -15.663044929504395
    7. '>N' → logprob: -16.163043975830078
    8. '  ' → logprob: -16.288043975830078
    9. ' ' → logprob: -16.413043975830078
    10. '>C' → logprob: -16.413043975830078

Token 2052: ' NM' (ID: 59722)
  Prédit: 'NM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NM' → logprob: -0.00020354038861114532
    2. ' NM' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.75020408630371
    4. 'NC' → logprob: -18.87520408630371
    5. 'nm' → logprob: -19.25020408630371
    6. 'Nm' → logprob: -19.87520408630371
    7. ' ' → logprob: -20.00020408630371
    8. 'N' → logprob: -20.25020408630371
    9. '  ' → logprob: -21.00020408630371
    10. '0' → logprob: -22.37520408630371

Token 2053: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6309674382209778
    2. ':
' → logprob: -1.255967378616333
    3. '           ' → logprob: -2.380967378616333
    4. ' >' → logprob: -2.630967378616333
    5. ':' → logprob: -4.005967617034912
    6. '       ' → logprob: -8.755967140197754
    7. '          ' → logprob: -9.130967140197754
    8. '   ' → logprob: -10.380967140197754
    9. '>
' → logprob: -10.380967140197754
    10. '):
' → logprob: -11.255967140197754

Token 2054: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2559574842453003
    2. '       ' → logprob: -1.5059574842453003
    3. 'reduce' → logprob: -6.38095760345459
    4. ' reduce' → logprob: -7.75595760345459
    5. '+' → logprob: -7.88095760345459
    6. '   ' → logprob: -8.25595760345459
    7. '               ' → logprob: -8.38095760345459
    8. '>' → logprob: -8.50595760345459
    9. ' +=' → logprob: -8.63095760345459
    10. '+=' → logprob: -8.75595760345459

Token 2055: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.3359736502170563
    2. '           ' → logprob: -1.9609736204147339
    3. ' reduce' → logprob: -1.9609736204147339
    4. '+=' → logprob: -6.210973739624023
    5. ' +=' → logprob: -7.085973739624023
    6. '   ' → logprob: -8.460973739624023
    7. '       ' → logprob: -8.460973739624023
    8. '               ' → logprob: -8.960973739624023
    9. '>' → logprob: -9.210973739624023
    10. '+' → logprob: -9.460973739624023

Token 2056: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7291425466537476
    2. '+=' → logprob: -0.7291425466537476
    3. ' -=' → logprob: -4.229142665863037
    4. '>' → logprob: -4.354142665863037
    5. '=' → logprob: -5.354142665863037
    6. '-=' → logprob: -6.854142665863037
    7. '-' → logprob: -7.479142665863037
    8. ' >' → logprob: -7.604142665863037
    9. '           ' → logprob: -8.104142189025879
    10. '       ' → logprob: -8.854142189025879

Token 2057: ' missing' (ID: 12486)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.007624730467796326
    2. ' missing' → logprob: -4.882624626159668
    3. 'max' → logprob: -11.507624626159668
    4. 'reduce' → logprob: -12.882624626159668
    5. '0' → logprob: -13.007624626159668
    6. 'miss' → logprob: -13.382624626159668
    7. '   ' → logprob: -13.507624626159668
    8. ' ' → logprob: -15.507624626159668
    9. '       ' → logprob: -15.757624626159668
    10. '(m' → logprob: -16.382625579833984

Token 2058: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.06967561691999435
    2. '_w' → logprob: -3.3196756839752197
    3. '_c' → logprob: -3.5696756839752197
    4. 'm' → logprob: -6.319675445556641
    5. 'c' → logprob: -7.694675445556641
    6. 'w' → logprob: -7.944675445556641
    7. 'M' → logprob: -8.69467544555664
    8. '-' → logprob: -9.56967544555664
    9. ' -' → logprob: -10.31967544555664
    10. 'W' → logprob: -10.44467544555664

Token 2059: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029805459082126617
    2. '-' → logprob: -3.5298054218292236
    3. '-re' → logprob: -10.654805183410645
    4. ' -
' → logprob: -10.904805183410645
    5. '```' → logprob: -12.904805183410645
    6. '<|end|>' → logprob: -13.529805183410645
    7. ' ' → logprob: -13.529805183410645
    8. '-
' → logprob: -13.779805183410645
    9. '+' → logprob: -14.154805183410645
    10. '   ' → logprob: -14.154805183410645

Token 2060: ' NM' (ID: 59722)
  Prédit: 'NC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NC' → logprob: -0.20491403341293335
    2. 'max' → logprob: -2.204914093017578
    3. 'NM' → logprob: -2.954914093017578
    4. 'missing' → logprob: -4.829914093017578
    5. 'NW' → logprob: -5.954914093017578
    6. '(max' → logprob: -6.204914093017578
    7. '0' → logprob: -6.329914093017578
    8. '(' → logprob: -6.454914093017578
    9. '(N' → logprob: -6.704914093017578
    10. 'min' → logprob: -6.704914093017578

Token 2061: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10073462128639221
    2. '
' → logprob: -2.3507347106933594
    3. 'print' → logprob: -8.22573471069336
    4. '        
' → logprob: -9.47573471069336
    5. '<|end|>' → logprob: -9.85073471069336
    6. '```' → logprob: -10.60073471069336
    7. '
' → logprob: -10.85073471069336
    8. 'max' → logprob: -10.97573471069336
    9. '           ' → logprob: -10.97573471069336
    10. '   ' → logprob: -11.97573471069336

Token 2062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01968734711408615
    2. 'print' → logprob: -4.144687175750732
    3. '
' → logprob: -5.644687175750732
    4. '   ' → logprob: -9.89468765258789
    5. '```' → logprob: -10.14468765258789
    6. ' print' → logprob: -11.64468765258789
    7. '        
' → logprob: -12.64468765258789
    8. '           ' → logprob: -12.76968765258789
    9. 'return' → logprob: -13.26968765258789
    10. 'max' → logprob: -13.64468765258789

Token 2063: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2017340362071991
    2. '       ' → logprob: -1.7017340660095215
    3. 'max' → logprob: -8.576733589172363
    4. '
' → logprob: -10.076733589172363
    5. ' print' → logprob: -10.201733589172363
    6. '```' → logprob: -10.451733589172363
    7. 'if' → logprob: -10.826733589172363
    8. '   ' → logprob: -13.326733589172363
    9. '``' → logprob: -13.826733589172363
    10. 'return' → logprob: -14.576733589172363

Token 2064: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6341539025306702
    2. '=' → logprob: -0.7591539025306702
    3. ' -=' → logprob: -7.384153842926025
    4. '```' → logprob: -7.384153842926025
    5. '=max' → logprob: -8.509154319763184
    6. '       ' → logprob: -9.884154319763184
    7. '-' → logprob: -11.134154319763184
    8. '   ' → logprob: -11.259154319763184
    9. '-=' → logprob: -11.634154319763184
    10. ' +=' → logprob: -12.384154319763184

Token 2065: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.251935750246048
    2. 'max' → logprob: -1.5019357204437256
    3. '       ' → logprob: -13.001935958862305
    4. '   ' → logprob: -13.251935958862305
    5. 'str' → logprob: -14.251935958862305
    6. '(max' → logprob: -14.626935958862305
    7. ' str' → logprob: -14.876935958862305
    8. ' ' → logprob: -15.251935958862305
    9. ' min' → logprob: -15.376935958862305
    10. '	max' → logprob: -15.501935958862305

Token 2066: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0001999642699956894
    2. '_part' → logprob: -8.750200271606445
    3. '(' → logprob: -10.625200271606445
    4. '\' → logprob: -12.500200271606445
    5. '(_' → logprob: -12.500200271606445
    6. 'count' → logprob: -13.000200271606445
    7. '_result' → logprob: -13.625200271606445
    8. '   ' → logprob: -13.875200271606445
    9. '(count' → logprob: -13.875200271606445
    10. '(
' → logprob: -14.000200271606445

Token 2067: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17214280366897583
    2. '
' → logprob: -1.922142744064331
    3. ' -' → logprob: -5.42214298248291
    4. '```' → logprob: -6.04714298248291
    5. 'print' → logprob: -6.17214298248291
    6. '-' → logprob: -6.42214298248291
    7. '   ' → logprob: -7.67214298248291
    8. ')
' → logprob: -9.04714298248291
    9. '        
' → logprob: -9.42214298248291
    10. '``' → logprob: -9.42214298248291

Token 2068: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -2.935296834039036e-06
    2. ' reduce' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.625003814697266
    4. 'replace' → logprob: -20.875003814697266
    5. 'remove' → logprob: -21.250003814697266
    6. 'redu' → logprob: -21.500003814697266
    7. 'increase' → logprob: -22.125003814697266
    8. 'resolve' → logprob: -22.625003814697266
    9. '_reduce' → logprob: -23.625003814697266
    10. '```' → logprob: -23.750003814697266

Token 2069: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019197478890419006
    2. '
' → logprob: -4.394197463989258
    3. 'print' → logprob: -5.019197463989258
    4. '```' → logprob: -10.519197463989258
    5. ' print' → logprob: -11.394197463989258
    6. '   ' → logprob: -11.394197463989258
    7. '
' → logprob: -13.269197463989258
    8. '           ' → logprob: -14.144197463989258
    9. '``' → logprob: -14.269197463989258
    10. '        
' → logprob: -14.519197463989258

Token 2070: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009574398398399353
    2. 'print' → logprob: -5.2595744132995605
    3. '
' → logprob: -5.5095744132995605
    4. '```' → logprob: -8.884573936462402
    5. '<|end|>' → logprob: -10.384573936462402
    6. '   ' → logprob: -10.509573936462402
    7. ',' → logprob: -10.634573936462402
    8. ' print' → logprob: -10.759573936462402
    9. ')
' → logprob: -12.009573936462402
    10. '        
' → logprob: -12.009573936462402

Token 2071: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5764191150665283
    2. 'print' → logprob: -0.8264191150665283
    3. ' print' → logprob: -7.701418876647949
    4. '
' → logprob: -11.07641887664795
    5. '```' → logprob: -11.82641887664795
    6. '   ' → logprob: -12.57641887664795
    7. ',' → logprob: -14.95141887664795
    8. 'if' (adapté à ' if') → logprob: -15.20141887664795
    9. '        
' → logprob: -15.45141887664795
    10. '``' → logprob: -15.82641887664795

Token 2072: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0019301822176203132
    2. ' result' → logprob: -6.251930236816406
    3. '       ' → logprob: -13.626930236816406
    4. '0' → logprob: -15.001930236816406
    5. '   ' → logprob: -17.751930236816406
    6. '(result' → logprob: -18.626930236816406
    7. '
' → logprob: -18.751930236816406
    8. '_result' → logprob: -19.001930236816406
    9. '	result' → logprob: -19.251930236816406
    10. '           ' → logprob: -19.501930236816406

Token 2073: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.33653417229652405
    2. ' <' → logprob: -1.4615341424942017
    3. '<=' → logprob: -3.211534261703491
    4. ' <=' → logprob: -4.586534023284912
    5. '>' → logprob: -6.461534023284912
    6. '>=' → logprob: -6.836534023284912
    7. '==' → logprob: -8.08653450012207
    8. ' ==' → logprob: -8.83653450012207
    9. ' >=' → logprob: -9.08653450012207
    10. ' >' → logprob: -9.46153450012207

Token 2074: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '       ' → logprob: -13.12500286102295
    3. ' ' → logprob: -15.37500286102295
    4. '   ' → logprob: -15.75000286102295
    5. '```' → logprob: -16.500001907348633
    6. '           ' → logprob: -17.375001907348633
    7. '=' → logprob: -18.250001907348633
    8. '
' → logprob: -19.000001907348633
    9. '``' → logprob: -19.875001907348633
    10. '۰' → logprob: -20.125001907348633

Token 2075: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '=' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '
' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '۰' → logprob: -18.875001907348633
    8. '０' → logprob: -19.125001907348633
    9. 'zero' → logprob: -19.750001907348633
    10. '1' → logprob: -20.000001907348633

Token 2076: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5124496817588806
    2. ':' → logprob: -1.1374497413635254
    3. '           ' → logprob: -3.3874497413635254
    4. '       ' → logprob: -3.8874497413635254
    5. '=' → logprob: -3.8874497413635254
    6. 'result' → logprob: -5.637449741363525
    7. '):
' → logprob: -7.762449741363525
    8. '=result' → logprob: -8.012449264526367
    9. ' =' → logprob: -8.387449264526367
    10. '0' → logprob: -8.512449264526367

Token 2077: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016099588247016072
    2. 'result' → logprob: -6.751609802246094
    3. '       ' → logprob: -7.876609802246094
    4. '```' → logprob: -11.126609802246094
    5. ' result' → logprob: -11.376609802246094
    6. '               ' → logprob: -11.376609802246094
    7. 'print' → logprob: -11.626609802246094
    8. '   ' → logprob: -12.501609802246094
    9. '0' → logprob: -12.876609802246094
    10. '	       ' → logprob: -13.126609802246094

Token 2078: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0511481873691082
    2. '0' → logprob: -3.0511481761932373
    3. '       ' → logprob: -6.426148414611816
    4. ' result' → logprob: -7.426148414611816
    5. '           ' → logprob: -8.051148414611816
    6. 'print' → logprob: -11.676148414611816
    7. '   ' → logprob: -12.426148414611816
    8. '```' → logprob: -12.551148414611816
    9. '	result' → logprob: -12.801148414611816
    10. '
' → logprob: -13.301148414611816

Token 2079: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '0' → logprob: -17.878177642822266
    4. '=result' → logprob: -18.753177642822266
    5. '```' → logprob: -18.878177642822266
    6. 'result' → logprob: -19.003177642822266
    7. '   ' → logprob: -19.128177642822266
    8. '+=' → logprob: -19.628177642822266
    9. '=
' → logprob: -19.753177642822266
    10. '       ' → logprob: -20.503177642822266

Token 2080: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.000003814697266
    4. '```' → logprob: -20.375003814697266
    5. '00' → logprob: -20.625003814697266
    6. '
' → logprob: -21.250003814697266
    7. '000' → logprob: -21.750003814697266
    8. '۰' → logprob: -22.125003814697266
    9. '=' → logprob: -22.250003814697266
    10. '`' → logprob: -22.625003814697266

Token 2081: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -19.125
    5. '000' → logprob: -19.375
    6. '00' → logprob: -20.0
    7. '=' → logprob: -20.25
    8. '۰' → logprob: -20.375
    9. '``' → logprob: -20.75
    10. '
' → logprob: -21.75

Token 2082: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005628037615679204
    2. '
' → logprob: -7.87556266784668
    3. '        
' → logprob: -9.00056266784668
    4. 'print' → logprob: -10.50056266784668
    5. '   ' → logprob: -10.87556266784668
    6. '    
' → logprob: -12.25056266784668
    7. '<|end|>' → logprob: -12.75056266784668
    8. '```' → logprob: -13.37556266784668
    9. '           ' → logprob: -13.75056266784668
    10. '  
' → logprob: -14.12556266784668

Token 2083: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028677580412477255
    2. 'print' → logprob: -6.127867698669434
    3. '   ' → logprob: -7.502867698669434
    4. '```' → logprob: -9.127867698669434
    5. '
' → logprob: -11.377867698669434
    6. ' print' → logprob: -11.627867698669434
    7. '        
' → logprob: -14.002867698669434
    8. '``' → logprob: -14.877867698669434
    9. '           ' → logprob: -15.127867698669434
    10. '    
' → logprob: -15.627867698669434

Token 2084: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07925073802471161
    2. '       ' → logprob: -2.5792508125305176
    3. '```' → logprob: -8.20425033569336
    4. '   ' → logprob: -9.82925033569336
    5. ' print' → logprob: -10.32925033569336
    6. '``' → logprob: -14.32925033569336
    7. '`' → logprob: -15.82925033569336
    8. '	print' → logprob: -16.95425033569336
    9. '        
' → logprob: -17.07925033569336
    10. 'printf' → logprob: -17.57925033569336

Token 2085: '(result' (ID: 8111)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.25297561287879944
    2. '(result' → logprob: -1.502975583076477
    3. 'max' → logprob: -7.2529754638671875
    4. 'result' → logprob: -8.002975463867188
    5. '(' → logprob: -12.752975463867188
    6. ' max' → logprob: -15.127975463867188
    7. '(f' → logprob: -15.752975463867188
    8. ' result' → logprob: -17.377975463867188
    9. ' (' → logprob: -17.502975463867188
    10. '(len' → logprob: -17.627975463867188

Token 2086: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2087: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2088: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8434877991676331
    2. ' __' → logprob: -1.3434877395629883
    3. '```' → logprob: -2.2184877395629883
    4. 'main' → logprob: -2.5934877395629883
    5. ' main' → logprob: -2.7184877395629883
    6. '_' → logprob: -3.3434877395629883
    7. '_main' → logprob: -4.968487739562988
    8. ' _' → logprob: -5.843487739562988
    9. ''' → logprob: -6.343487739562988
    10. '`' → logprob: -6.718487739562988

Token 2089: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029391907155513763
    2. '==' → logprob: -6.252939224243164
    3. '```' → logprob: -7.627939224243164
    4. ' ==' → logprob: -7.877939224243164
    5. '=="' → logprob: -9.377939224243164
    6. '__.__' → logprob: -11.127939224243164
    7. '__":
' → logprob: -11.627939224243164
    8. '=='' → logprob: -12.002939224243164
    9. ' __' → logprob: -12.002939224243164
    10. 'if' → logprob: -12.377939224243164

Token 2090: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010068230039905757
    2. '__.__' → logprob: -9.625101089477539
    3. '__.' → logprob: -11.750101089477539
    4. '__('' → logprob: -11.875101089477539
    5. '==' → logprob: -12.000101089477539
    6. '```' → logprob: -12.500101089477539
    7. '=="' → logprob: -13.000101089477539
    8. '__":
' → logprob: -13.000101089477539
    9. '__("' → logprob: -13.375101089477539
    10. '___' → logprob: -14.375101089477539

Token 2091: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2834830582141876
    2. ' ==' → logprob: -1.9084830284118652
    3. '==' → logprob: -2.5334830284118652
    4. '=="' → logprob: -4.033483028411865
    5. '=='' → logprob: -7.158483028411865
    6. '()==' → logprob: -8.408483505249023
    7. '__.__' → logprob: -9.158483505249023
    8. '()' → logprob: -9.283483505249023
    9. '__":
' → logprob: -9.408483505249023
    10. '()=="' → logprob: -9.908483505249023

Token 2092: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003181040519848466
    2. ''' → logprob: -5.753180980682373
    3. '__' → logprob: -13.128181457519531
    4. ' "__' → logprob: -13.628181457519531
    5. '   ' → logprob: -16.50318145751953
    6. ''"' → logprob: -17.62818145751953
    7. '"name' → logprob: -18.25318145751953
    8. ' '__' → logprob: -18.50318145751953
    9. '"user' → logprob: -18.75318145751953
    10. '"'' → logprob: -19.12818145751953

Token 2093: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006233671214431524
    2. '__' → logprob: -5.1312336921691895
    3. '"' → logprob: -8.381233215332031
    4. 'name' → logprob: -10.006233215332031
    5. '__":
' → logprob: -10.881233215332031
    6. ''' → logprob: -11.881233215332031
    7. '```' → logprob: -13.256233215332031
    8. ' main' → logprob: -13.881233215332031
    9. '__':
' → logprob: -14.381233215332031
    10. '_main' → logprob: -15.006233215332031

Token 2094: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.017905360087752342
    2. '__' → logprob: -4.142905235290527
    3. '__':
' → logprob: -6.517905235290527
    4. '():
' → logprob: -7.892905235290527
    5. '__()
' → logprob: -12.267905235290527
    6. '__:' → logprob: -12.392905235290527
    7. '__["' → logprob: -13.017905235290527
    8. '==' → logprob: -13.767905235290527
    9. '_' → logprob: -14.017905235290527
    10. '__
' → logprob: -14.142905235290527

Token 2095: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07911042869091034
    2. 'main' → logprob: -2.5791103839874268
    3. '	main' → logprob: -9.204110145568848
    4. ' main' → logprob: -9.454110145568848
    5. '```' → logprob: -10.329110145568848
    6. '_main' → logprob: -12.454110145568848
    7. '(main' → logprob: -12.954110145568848
    8. '``' → logprob: -13.954110145568848
    9. '    
' → logprob: -13.954110145568848
    10. '   ' → logprob: -15.704110145568848

Token 2096: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -18.375
    4. '_main' → logprob: -21.125
    5. '(main' → logprob: -21.875
    6. '.main' → logprob: -22.875
    7. '   ' → logprob: -23.5
    8. 'Main' → logprob: -24.5
    9. 'mainwindow' → logprob: -24.75
    10. '/main' → logprob: -25.125

Token 2097: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2095
Tokens correctement prédits (1ère position, stricte): 695
Tokens correctement prédits (1ère position, avec adaptation): 735
Tokens correctement prédits (top 10): 1466
Précision stricte (1ère position): 33.17%
Précision adaptée (1ère position): 35.08%
Précision (top 10): 69.98%
================================================================================
