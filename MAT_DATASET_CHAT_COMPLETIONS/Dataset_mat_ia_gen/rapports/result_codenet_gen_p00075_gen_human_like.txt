================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
students = []
try:
    while True:
        line = input()
        if not line:
            break
        s, w, h = line.split(',')
        s = int(s)
        w = float(w)
        h = float(h)
        students.append((s, w, h))
except EOFError:
    pass

for s, w, h in students:
    bmi = w / (h ** 2)
    if bmi >= 25:
        print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'students' (ID: 76574)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' []
' (ID: 8911)
  → Token d'amorce (pas de prédiction)

Token 3: 'try' (ID: 1806)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008451257599517703
    2. '.append' → logprob: -7.375844955444336
    3. '[' → logprob: -8.875844955444336
    4. '=' → logprob: -10.250844955444336
    5. 'students' → logprob: -11.375844955444336
    6. '.=' → logprob: -11.625844955444336
    7. 's' → logprob: -12.500844955444336
    8. '```' → logprob: -12.875844955444336
    9. '[:]' → logprob: -12.875844955444336
    10. '.students' → logprob: -13.125844955444336

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011760921915993094
    2. ':
' → logprob: -9.750117301940918
    3. ' :' → logprob: -9.875117301940918
    4. '[' → logprob: -13.750117301940918
    5. '':' → logprob: -13.750117301940918
    6. '[:]' → logprob: -14.375117301940918
    7. '":' → logprob: -14.625117301940918
    8. ' except' → logprob: -14.625117301940918
    9. ':**' → logprob: -14.750117301940918
    10. '`:' → logprob: -15.000117301940918

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06301195919513702
    2. '   ' → logprob: -2.938011884689331
    3. ' :' → logprob: -4.93801212310791
    4. ' ' → logprob: -8.31301212310791
    5. ':
' → logprob: -8.43801212310791
    6. '    ' → logprob: -8.56301212310791
    7. '[' → logprob: -9.56301212310791
    8. ' (' → logprob: -10.18801212310791
    9. '```' → logprob: -10.18801212310791
    10. ' except' → logprob: -10.81301212310791

Token 6: ' while' (ID: 2049)
  Prédit: ' students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' students' → logprob: -0.4971478283405304
    2. '   ' → logprob: -0.997147798538208
    3. 'students' → logprob: -4.372148036956787
    4. '    ' → logprob: -5.122148036956787
    5. ' student' → logprob: -6.997148036956787
    6. ' objects' → logprob: -7.872148036956787
    7. ' exams' → logprob: -8.372147560119629
    8. ' data' → logprob: -8.497147560119629
    9. ':' → logprob: -8.622147560119629
    10. ' ' → logprob: -8.747147560119629

Token 7: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0765053927898407
    2. ' ' → logprob: -2.701505422592163
    3. ' students' → logprob: -5.201505184173584
    4. ' not' → logprob: -7.326505184173584
    5. 'True' → logprob: -8.326505661010742
    6. ' len' → logprob: -9.326505661010742
    7. 'students' → logprob: -11.326505661010742
    8. ' student' → logprob: -11.451505661010742
    9. '_' → logprob: -12.076505661010742
    10. ' input' → logprob: -12.576505661010742

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005146674811840057
    2. '():' → logprob: -8.62551498413086
    3. '):' → logprob: -9.00051498413086
    4. ':
' → logprob: -9.12551498413086
    5. '       ' → logprob: -9.75051498413086
    6. '   ' → logprob: -10.87551498413086
    7. ' :' → logprob: -11.37551498413086
    8. '':' → logprob: -13.00051498413086
    9. '`:' → logprob: -13.25051498413086
    10. ':**' → logprob: -13.25051498413086

Token 9: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04180244356393814
    2. '   ' → logprob: -3.291802406311035
    3. ' students' → logprob: -7.041802406311035
    4. 'students' → logprob: -7.541802406311035
    5. 'input' → logprob: -7.916802406311035
    6. '```' → logprob: -7.916802406311035
    7. '<|end|>' → logprob: -8.416802406311035
    8. ' student' → logprob: -8.541802406311035
    9. ' input' → logprob: -8.791802406311035
    10. '    
' → logprob: -9.041802406311035

Token 10: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6181443929672241
    2. ' line' → logprob: -1.6181443929672241
    3. ' student' → logprob: -1.8681443929672241
    4. ' data' → logprob: -3.8681445121765137
    5. ' students' → logprob: -3.8681445121765137
    6. 'student' → logprob: -3.9931445121765137
    7. '           ' → logprob: -4.493144512176514
    8. 'students' → logprob: -4.743144512176514
    9. 'data' → logprob: -4.993144512176514
    10. '```' → logprob: -5.243144512176514

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004087543580681086
    2. '=' → logprob: -5.504087448120117
    3. ' ' → logprob: -12.004087448120117
    4. 's' → logprob: -13.254087448120117
    5. '_' → logprob: -14.504087448120117
    6. ')' → logprob: -16.004087448120117
    7. ' +=' → logprob: -16.129087448120117
    8. '.' → logprob: -16.129087448120117
    9. '=line' → logprob: -16.504087448120117
    10. '    ' → logprob: -16.879087448120117

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07889353483915329
    2. 'input' → logprob: -2.5788934230804443
    3. '   ' → logprob: -12.828893661499023
    4. '=input' → logprob: -15.078893661499023
    5. ' ' → logprob: -15.578893661499023
    6. '```' → logprob: -15.828893661499023
    7. '(input' → logprob: -15.953893661499023
    8. '	input' → logprob: -16.453893661499023
    9. '<input' → logprob: -16.453893661499023
    10. '_input' → logprob: -16.703893661499023

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01951013132929802
    2. '()' → logprob: -4.144510269165039
    3. '('' → logprob: -5.769510269165039
    4. '("("' → logprob: -8.394510269165039
    5. '("")' → logprob: -9.894510269165039
    6. '("' → logprob: -10.519510269165039
    7. '```' → logprob: -11.519510269165039
    8. '(
' → logprob: -11.519510269165039
    9. ')' → logprob: -12.019510269165039
    10. '(`' → logprob: -12.644510269165039

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5196124315261841
    2. '        
' → logprob: -2.2696123123168945
    3. '<|end|>' → logprob: -3.0196123123168945
    4. '.strip' → logprob: -3.2696123123168945
    5. '
' → logprob: -3.2696123123168945
    6. '\n' → logprob: -3.3946123123168945
    7. ' ' → logprob: -4.1446123123168945
    8. '  
' → logprob: -4.1446123123168945
    9. ' if' → logprob: -4.1446123123168945
    10. '        ' → logprob: -4.2696123123168945

Token 15: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25834572315216064
    2. ' students' → logprob: -2.133345603942871
    3. '       ' → logprob: -2.633345603942871
    4. 'students' → logprob: -4.008345603942871
    5. '.students' → logprob: -4.633345603942871
    6. '   ' → logprob: -6.258345603942871
    7. 'if' (adapté à ' if') → logprob: -6.508345603942871
    8. '           ' → logprob: -7.133345603942871
    9. '```' → logprob: -7.258345603942871
    10. '.split' → logprob: -7.258345603942871

Token 16: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02665334939956665
    2. ' line' → logprob: -3.651653289794922
    3. ' ' → logprob: -8.651653289794922
    4. 'not' → logprob: -8.776653289794922
    5. ' len' → logprob: -11.276653289794922
    6. 'line' → logprob: -11.776653289794922
    7. ' ' → logprob: -13.526653289794922
    8. '[line' → logprob: -14.651653289794922
    9. '(line' → logprob: -14.901653289794922
    10. '	line' → logprob: -15.401653289794922

Token 17: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00046546570956707
    2. 'line' → logprob: -7.750465393066406
    3. ' ' → logprob: -10.500465393066406
    4. '	line' → logprob: -12.000465393066406
    5. ' lin' → logprob: -15.250465393066406
    6. '(line' → logprob: -15.250465393066406
    7. ' ' → logprob: -16.125465393066406
    8. '#line' → logprob: -16.500465393066406
    9. '=line' → logprob: -16.500465393066406
    10. '  ' → logprob: -16.750465393066406

Token 18: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28765788674354553
    2. '.strip' → logprob: -1.5376578569412231
    3. ':' → logprob: -4.162657737731934
    4. '.startswith' → logprob: -4.412657737731934
    5. ' .' → logprob: -5.037657737731934
    6. '.endswith' → logprob: -8.162657737731934
    7. '.rstrip' → logprob: -8.537657737731934
    8. '.readline' → logprob: -9.037657737731934
    9. ' or' → logprob: -9.287657737731934
    10. '.split' → logprob: -10.037657737731934

Token 19: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020925651770085096
    2. '       ' → logprob: -6.877092361450195
    3. ' break' → logprob: -8.252092361450195
    4. ' ' → logprob: -8.627092361450195
    5. '   ' → logprob: -8.627092361450195
    6. ':' → logprob: -9.002092361450195
    7. '            ' → logprob: -9.377092361450195
    8. ' :' → logprob: -10.002092361450195
    9. ' ' → logprob: -10.252092361450195
    10. '               ' → logprob: -10.877092361450195

Token 20: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09477411955595016
    2. '           ' → logprob: -2.469774007797241
    3. 'break' (adapté à ' break') → logprob: -5.46977424621582
    4. ' ' → logprob: -7.09477424621582
    5. '       ' → logprob: -8.21977424621582
    6. '   ' → logprob: -8.46977424621582
    7. '	break' → logprob: -9.09477424621582
    8. '_break' → logprob: -9.96977424621582
    9. ' ' → logprob: -10.34477424621582
    10. '               ' → logprob: -10.34477424621582

Token 21: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007068770471960306
    2. '<|end|>' → logprob: -5.882068634033203
    3. ')' → logprob: -6.007068634033203
    4. '\n' → logprob: -8.007068634033203
    5. '
' → logprob: -8.382068634033203
    6. '   ' → logprob: -8.382068634033203
    7. '<|end|>' → logprob: -8.632068634033203
    8. '\' → logprob: -8.632068634033203
    9. '```' → logprob: -9.007068634033203
    10. '        
' → logprob: -9.257068634033203

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003401213325560093
    2. ')' → logprob: -6.128401279449463
    3. '   ' → logprob: -7.753401279449463
    4. '           ' → logprob: -8.378400802612305
    5. '\' → logprob: -9.003400802612305
    6. '<|end|>' → logprob: -9.253400802612305
    7. '```' → logprob: -9.253400802612305
    8. '\n' → logprob: -10.378400802612305
    9. '<|end|>' → logprob: -10.628400802612305
    10. ',' → logprob: -10.753400802612305

Token 23: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6436542868614197
    2. 'students' → logprob: -1.0186543464660645
    3. ' students' → logprob: -2.2686543464660645
    4. '.students' → logprob: -5.0186543464660645
    5. '   ' → logprob: -5.8936543464660645
    6. '```' → logprob: -8.268653869628906
    7. '_students' → logprob: -8.768653869628906
    8. '           ' → logprob: -10.018653869628906
    9. 'student' → logprob: -10.268653869628906
    10. '<|end|>' → logprob: -10.518653869628906

Token 24: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0012478509452193975
    2. 'students' → logprob: -6.751247882843018
    3. 'udents' → logprob: -9.75124740600586
    4. 'tu' → logprob: -11.25124740600586
    5. '.students' → logprob: -12.37624740600586
    6. ' =' → logprob: -14.25124740600586
    7. '_students' → logprob: -14.87624740600586
    8. '.' → logprob: -15.50124740600586
    9. '   ' → logprob: -15.62624740600586
    10. 's' → logprob: -15.75124740600586

Token 25: ' w' (ID: 286)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.9782022833824158
    2. '=' → logprob: -1.3532023429870605
    3. ' =' → logprob: -2.2282023429870605
    4. ' ' → logprob: -2.4782023429870605
    5. 't' → logprob: -2.6032023429870605
    6. 'space' → logprob: -4.6032023429870605
    7. ' p' → logprob: -4.7282023429870605
    8. 'score' → logprob: -4.9782023429870605
    9. 's' → logprob: -5.1032023429870605
    10. 'name' → logprob: -5.3532023429870605

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11456192284822464
    2. '=' → logprob: -2.2395620346069336
    3. ',' → logprob: -6.364562034606934
    4. ' ' → logprob: -11.739562034606934
    5. ')' → logprob: -12.614562034606934
    6. '.' → logprob: -13.489562034606934
    7. ' ,' → logprob: -13.989562034606934
    8. '_' → logprob: -14.489562034606934
    9. '  ' → logprob: -14.489562034606934
    10. ' =
' → logprob: -14.739562034606934

Token 27: ' h' (ID: 312)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3832436800003052
    2. ' int' → logprob: -1.3832436800003052
    3. ' =' → logprob: -1.8832436800003052
    4. ' p' → logprob: -2.0082435607910156
    5. ' t' → logprob: -2.3832435607910156
    6. 'score' → logprob: -3.6332435607910156
    7. ' score' → logprob: -4.008243560791016
    8. '=' → logprob: -4.383243560791016
    9. ' d' → logprob: -4.383243560791016
    10. 'p' → logprob: -4.758243560791016

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023384541273117
    2. '=' → logprob: -2.350233793258667
    3. ',' → logprob: -10.600234031677246
    4. ' ' → logprob: -13.725234031677246
    5. ' ,' → logprob: -14.725234031677246
    6. ')' → logprob: -15.100234031677246
    7. '=line' → logprob: -15.975234031677246
    8. ' =
' → logprob: -16.35023307800293
    9. '=

' → logprob: -16.97523307800293
    10. ' =
' → logprob: -16.97523307800293

Token 29: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.14313456416130066
    2. ' line' → logprob: -2.018134593963623
    3. 'map' → logprob: -8.018134117126465
    4. ' map' → logprob: -9.143134117126465
    5. '=line' → logprob: -11.768134117126465
    6. '[line' → logprob: -12.018134117126465
    7. '(line' → logprob: -12.268134117126465
    8. '	line' → logprob: -12.893134117126465
    9. '   ' → logprob: -14.768134117126465
    10. 'lin' → logprob: -15.143134117126465

Token 30: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.3875867426395416
    2. '.' → logprob: -1.1375867128372192
    3. '.strip' → logprob: -7.26258659362793
    4. 'split' → logprob: -11.88758659362793
    5. ' .' → logprob: -12.51258659362793
    6. '.rstrip' → logprob: -13.38758659362793
    7. '().' → logprob: -14.26258659362793
    8. '.readline' → logprob: -14.63758659362793
    9. ' split' → logprob: -14.88758659362793
    10. '.Split' → logprob: -15.13758659362793

Token 31: '(',')
' (ID: 161318)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5514911413192749
    2. '()' → logprob: -0.9264911413192749
    3. '("("' → logprob: -3.8014912605285645
    4. '(' → logprob: -5.3014912605285645
    5. '("' → logprob: -7.8014912605285645
    6. ''' → logprob: -8.926490783691406
    7. '(',' → logprob: -10.301490783691406
    8. '"' → logprob: -11.176490783691406
    9. '()
' → logprob: -11.801490783691406
    10. '('(' → logprob: -11.926490783691406

Token 32: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6968967318534851
    2. '       ' → logprob: -1.4468967914581299
    3. '        ' → logprob: -2.32189679145813
    4. '        
' → logprob: -2.57189679145813
    5. ')' → logprob: -3.82189679145813
    6. '<|end|>' → logprob: -4.071896553039551
    7. ' \' → logprob: -5.071896553039551
    8. ' )' → logprob: -5.196896553039551
    9. '\n' → logprob: -5.196896553039551
    10. '\' → logprob: -5.321896553039551

Token 33: ' s' (ID: 265)
  Prédit: ' students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' students' → logprob: -0.529301106929779
    2. 'students' → logprob: -2.279301166534424
    3. ' ' → logprob: -2.404301166534424
    4. '<|end|>' → logprob: -2.529301166534424
    5. ' s' → logprob: -3.029301166534424
    6. 's' (adapté à ' s') → logprob: -3.779301166534424
    7. ' 
' → logprob: -4.154301166534424
    8. ' )' → logprob: -4.154301166534424
    9. ')' → logprob: -4.529301166534424
    10. ' ' → logprob: -5.029301166534424

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4558853507041931
    2. '=' → logprob: -1.330885410308838
    3. '.' → logprob: -2.705885410308838
    4. 's' → logprob: -3.830885410308838
    5. ',' → logprob: -5.455885410308838
    6. 'udents' → logprob: -6.080885410308838
    7. '.append' → logprob: -6.205885410308838
    8. '.strip' → logprob: -6.455885410308838
    9. '_students' → logprob: -6.705885410308838
    10. 'students' → logprob: -7.830885410308838

Token 35: ' int' (ID: 677)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41582268476486206
    2. ' s' → logprob: -1.6658227443695068
    3. 'int' → logprob: -2.290822744369507
    4. ' int' → logprob: -3.290822744369507
    5. 'float' → logprob: -4.665822505950928
    6. ' float' → logprob: -5.790822505950928
    7. 'str' → logprob: -8.540822982788086
    8. ' str' → logprob: -10.478322982788086
    9. ' ' → logprob: -12.040822982788086
    10. '`s' → logprob: -12.103322982788086

Token 36: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005239087622612715
    2. '(' → logprob: -5.255239009857178
    3. 's' → logprob: -12.255239486694336
    4. '(
' → logprob: -15.505239486694336
    5. '('' → logprob: -16.380239486694336
    6. '(

' → logprob: -16.505239486694336
    7. ' (' → logprob: -16.630239486694336
    8. '(ss' → logprob: -17.380239486694336
    9. '()' → logprob: -17.630239486694336
    10. '((' → logprob: -17.755239486694336

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.526570384972729e-05
    2. ' )' → logprob: -10.500055313110352
    3. ')
' → logprob: -11.000055313110352
    4. '.strip' → logprob: -12.625055313110352
    5. '),' → logprob: -13.500055313110352
    6. '       ' → logprob: -13.625055313110352
    7. ',' → logprob: -14.250055313110352
    8. ')#' → logprob: -14.250055313110352
    9. ' ' → logprob: -14.375055313110352
    10. '<|end|>' → logprob: -14.500055313110352

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0381661131978035
    2. ' w' → logprob: -3.413166046142578
    3. ' ' → logprob: -5.538166046142578
    4. '<|end|>' → logprob: -8.413166046142578
    5. '	w' → logprob: -9.788166046142578
    6. ' 
' → logprob: -9.913166046142578
    7. ' ' → logprob: -10.038166046142578
    8. ' 

' → logprob: -10.413166046142578
    9. ',' → logprob: -10.413166046142578
    10. ',w' → logprob: -10.538166046142578

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692396879196167
    2. ' =' → logprob: -1.1369240283966064
    3. '=int' → logprob: -10.011923789978027
    4. ',' → logprob: -12.011923789978027
    5. ')' → logprob: -14.011923789978027
    6. '<|end|>' → logprob: -15.011923789978027
    7. ' ' → logprob: -15.511923789978027
    8. '<|end|>' → logprob: -15.761923789978027
    9. '＝' → logprob: -16.011924743652344
    10. 'int' → logprob: -16.386924743652344

Token 41: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.033571358770132065
    2. ' int' → logprob: -3.533571243286133
    3. 'float' → logprob: -5.658571243286133
    4. ' float' → logprob: -8.033571243286133
    5. '=int' → logprob: -14.533571243286133
    6. ' ' → logprob: -15.158571243286133
    7. '(int' → logprob: -15.783571243286133
    8. '	int' → logprob: -15.783571243286133
    9. '[int' → logprob: -15.908571243286133
    10. '   ' → logprob: -16.033571243286133

Token 42: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0025869545061141253
    2. '(h' → logprob: -6.002586841583252
    3. '(' → logprob: -9.12758731842041
    4. ' (' → logprob: -13.00258731842041
    5. 'w' → logprob: -15.37758731842041
    6. '(
' → logprob: -17.627586364746094
    7. ')' → logprob: -18.002586364746094
    8. '(s' → logprob: -18.627586364746094
    9. 'h' → logprob: -19.002586364746094
    10. '	w' → logprob: -19.002586364746094

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009328982559964061
    2. ')
' → logprob: -7.000932693481445
    3. ' )' → logprob: -11.375932693481445
    4. ')

' → logprob: -12.250932693481445
    5. '),' → logprob: -13.500932693481445
    6. ',' → logprob: -13.750932693481445
    7. '<|end|>' → logprob: -14.000932693481445
    8. '   ' → logprob: -14.500932693481445
    9. ')
' → logprob: -15.125932693481445
    10. '       ' → logprob: -15.625932693481445

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05896199122071266
    2. '<|end|>' → logprob: -2.933962106704712
    3. '<|end|>' → logprob: -7.058961868286133
    4. ',' → logprob: -7.183961868286133
    5. ' ' → logprob: -7.308961868286133
    6. ')' → logprob: -7.558961868286133
    7. '
' → logprob: -8.308961868286133
    8. 'w' → logprob: -8.558961868286133
    9. '        
' → logprob: -8.683961868286133
    10. '	' → logprob: -9.308961868286133

Token 45: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.02641361951828003
    2. ' h' → logprob: -3.651413679122925
    3. ',' → logprob: -9.901413917541504
    4. ')' → logprob: -11.151413917541504
    5. 'float' → logprob: -11.526413917541504
    6. ' ' → logprob: -11.776413917541504
    7. ',h' → logprob: -11.776413917541504
    8. '	h' → logprob: -12.401413917541504
    9. '   ' → logprob: -12.776413917541504
    10. ' float' → logprob: -12.901413917541504

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018159663304686546
    2. ' =' → logprob: -4.018159866333008
    3. '=float' → logprob: -11.893159866333008
    4. ')' → logprob: -13.643159866333008
    5. '=int' → logprob: -14.018159866333008
    6. ',' → logprob: -15.393159866333008
    7. ' ' → logprob: -15.393159866333008
    8. '=
' → logprob: -16.393159866333008
    9. '=

' → logprob: -16.393159866333008
    10. '(' → logprob: -16.768159866333008

Token 47: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.062050480395555496
    2. ' float' → logprob: -2.8120505809783936
    3. 'int' → logprob: -9.687050819396973
    4. '=float' → logprob: -11.187050819396973
    5. ' int' → logprob: -12.937050819396973
    6. '(float' → logprob: -13.812050819396973
    7. '	float' → logprob: -14.062050819396973
    8. '<float' → logprob: -14.687050819396973
    9. '.float' → logprob: -14.687050819396973
    10. ',float' → logprob: -14.687050819396973

Token 48: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. 'h' → logprob: -14.500036239624023
    4. ' (' → logprob: -15.750036239624023
    5. ')' → logprob: -16.750036239624023
    6. ' h' → logprob: -18.125036239624023
    7. '	h' → logprob: -18.750036239624023
    8. '(
' → logprob: -19.250036239624023
    9. '(H' → logprob: -19.375036239624023
    10. '/h' → logprob: -19.375036239624023

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004641829989850521
    2. ')
' → logprob: -5.379642009735107
    3. ')
' → logprob: -10.87964153289795
    4. '       ' → logprob: -13.87964153289795
    5. ' )' → logprob: -14.50464153289795
    6. ')

' → logprob: -14.75464153289795
    7. '))' → logprob: -15.00464153289795
    8. ')`' → logprob: -15.87964153289795
    9. '   ' → logprob: -16.254642486572266
    10. '）' → logprob: -16.879642486572266

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017027731984853745
    2. ')' → logprob: -4.142027854919434
    3. '<|end|>' → logprob: -7.642027854919434
    4. '   ' → logprob: -9.142027854919434
    5. ',' → logprob: -9.142027854919434
    6. '	' → logprob: -9.767027854919434
    7. '),' → logprob: -10.017027854919434
    8. '        
' → logprob: -10.017027854919434
    9. '	   ' → logprob: -10.767027854919434
    10. 'except' → logprob: -10.892027854919434

Token 51: ' students' (ID: 4501)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32208797335624695
    2. 'students' (adapté à ' students') → logprob: -1.5720880031585693
    3. ' students' → logprob: -2.8220880031585693
    4. '   ' → logprob: -5.19708776473999
    5. ' student' → logprob: -7.19708776473999
    6. 'student' → logprob: -7.19708776473999
    7. '.students' → logprob: -7.94708776473999
    8. ')' → logprob: -8.197088241577148
    9. '           ' → logprob: -9.197088241577148
    10. ' ' → logprob: -9.697088241577148

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014168208464980125
    2. '.' → logprob: -4.2641682624816895
    3. '.setdefault' → logprob: -13.514167785644531
    4. '.extend' → logprob: -14.014167785644531
    5. '.add' → logprob: -14.139167785644531
    6. 'append' → logprob: -14.264167785644531
    7. '.Append' → logprob: -15.014167785644531
    8. '.app' → logprob: -15.264167785644531
    9. '.push' → logprob: -15.514167785644531
    10. ' .' → logprob: -16.01416778564453

Token 53: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011159272398799658
    2. '(' → logprob: -7.251115798950195
    3. '({'' → logprob: -8.501115798950195
    4. '([' → logprob: -8.876115798950195
    5. '(s' → logprob: -10.251115798950195
    6. '(('' → logprob: -11.251115798950195
    7. '({"' → logprob: -12.126115798950195
    8. '({' → logprob: -12.626115798950195
    9. '(([' → logprob: -12.751115798950195
    10. '({
' → logprob: -14.126115798950195

Token 54: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4140441635390744e-05
    2. ' s' → logprob: -11.375014305114746
    3. ''s' → logprob: -13.750014305114746
    4. '   ' → logprob: -13.875014305114746
    5. '`s' → logprob: -15.500014305114746
    6. '(s' → logprob: -16.00001335144043
    7. ')' → logprob: -16.87501335144043
    8. ' ' → logprob: -17.12501335144043
    9. '	s' → logprob: -17.25001335144043
    10. '  ' → logprob: -17.37501335144043

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',w' → logprob: -12.625007629394531
    4. ',
' → logprob: -16.12500762939453
    5. ',s' → logprob: -16.25000762939453
    6. ',

' → logprob: -18.50000762939453
    7. ',h' → logprob: -19.25000762939453
    8. ')' → logprob: -19.37500762939453
    9. ',,' → logprob: -19.37500762939453
    10. 'w' → logprob: -19.50000762939453

Token 56: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6328228116035461
    2. 'w' → logprob: -0.7578228116035461
    3. ' ' → logprob: -9.38282299041748
    4. ' ' → logprob: -10.38282299041748
    5. 'h' → logprob: -10.63282299041748
    6. ''' → logprob: -10.88282299041748
    7. ' h' → logprob: -11.25782299041748
    8. ')' → logprob: -11.38282299041748
    9. '"' → logprob: -11.75782299041748
    10. ' '' → logprob: -12.00782299041748

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ',h' → logprob: -12.25001049041748
    3. ' ,' → logprob: -12.37501049041748
    4. ')' → logprob: -13.37501049041748
    5. ',
' → logprob: -16.000011444091797
    6. '))' → logprob: -16.000011444091797
    7. ',

' → logprob: -16.625011444091797
    8. ',)' → logprob: -17.375011444091797
    9. '),' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.250011444091797

Token 58: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20145094394683838
    2. ' h' → logprob: -1.7014509439468384
    3. ' ' → logprob: -11.201451301574707
    4. ')' → logprob: -11.201451301574707
    5. ' 
' → logprob: -12.326451301574707
    6. ' )' → logprob: -12.826451301574707
    7. ' ' → logprob: -14.451451301574707
    8. '	h' → logprob: -14.701451301574707
    9. '    ' → logprob: -15.513951301574707
    10. ''' → logprob: -15.701451301574707

Token 59: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003611474297940731
    2. ')' → logprob: -5.7536115646362305
    3. '))
' → logprob: -7.7536115646362305
    4. ')))' → logprob: -12.87861156463623
    5. ')
' → logprob: -14.50361156463623
    6. '))

' → logprob: -14.87861156463623
    7. ' ))' → logprob: -14.87861156463623
    8. '),' → logprob: -15.50361156463623
    9. '))
' → logprob: -15.62861156463623
    10. '   ' → logprob: -15.87861156463623

Token 60: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.03817276656627655
    2. ' except' → logprob: -3.413172721862793
    3. '
' → logprob: -6.163172721862793
    4. '   ' → logprob: -6.538172721862793
    5. '	except' → logprob: -7.538172721862793
    6. '\n' → logprob: -8.788172721862793
    7. '    
' → logprob: -9.163172721862793
    8. '```' → logprob: -9.413172721862793
    9. '<|end|>' → logprob: -10.663172721862793
    10. ')' → logprob: -11.538172721862793

Token 61: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.0007115975022315979
    2. 'EOF' → logprob: -7.250711441040039
    3. ' Exception' → logprob: -13.875711441040039
    4. ' ' → logprob: -14.500711441040039
    5. ' Keyboard' → logprob: -16.75071144104004
    6. ' Stop' → logprob: -16.75071144104004
    7. ' (' → logprob: -17.25071144104004
    8. ' ' → logprob: -17.25071144104004
    9. '(' → logprob: -17.87571144104004
    10. ' End' → logprob: -18.50071144104004

Token 62: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.125
    3. 'error' → logprob: -17.25
    4. 'Er' → logprob: -18.75
    5. 'Erro' → logprob: -19.125
    6. ' Error' → logprob: -19.5
    7. '	Error' → logprob: -20.125
    8. 'E' → logprob: -20.375
    9. 'EOF' → logprob: -20.75
    10. '```' → logprob: -21.0

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.813969957875088e-05
    2. ':
' → logprob: -9.750067710876465
    3. '):' → logprob: -12.125067710876465
    4. ':**' → logprob: -13.500067710876465
    5. ' :' → logprob: -14.000067710876465
    6. '<|end|>' → logprob: -14.250067710876465
    7. ':return' → logprob: -15.250067710876465
    8. '   ' → logprob: -15.250067710876465
    9. '>:' → logprob: -15.750067710876465
    10. '():' → logprob: -15.750067710876465

Token 64: '   ' (ID: 271)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.13178208470344543
    2. '   ' → logprob: -2.131782054901123
    3. 'pass' → logprob: -5.381782054901123
    4. '	pass' → logprob: -8.506782531738281
    5. ' None' → logprob: -11.006782531738281
    6. ' ' → logprob: -12.131782531738281
    7. '    ' → logprob: -12.631782531738281
    8. ' break' → logprob: -12.881782531738281
    9. ' ' → logprob: -13.131782531738281
    10. '    
' → logprob: -13.131782531738281

Token 65: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.3132985532283783
    2. 'pass' (adapté à ' pass') → logprob: -1.3132985830307007
    3. '   ' → logprob: -10.438298225402832
    4. '	pass' → logprob: -12.938298225402832
    5. 'pas' → logprob: -13.313298225402832
    6. ' None' → logprob: -13.438298225402832
    7. ' pas' → logprob: -14.438298225402832
    8. ' ' → logprob: -14.938298225402832
    9. 'None' → logprob: -14.938298225402832
    10. 'Pass' → logprob: -15.188298225402832

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3108796775341034
    2. '\n' → logprob: -2.060879707336426
    3. '<|end|>' → logprob: -2.935879707336426
    4. 'n' → logprob: -3.935879707336426
    5. '#' → logprob: -3.935879707336426
    6. '[' → logprob: -4.435879707336426
    7. 'for' → logprob: -4.810879707336426
    8. '' → logprob: -5.185879707336426
    9. 'newline' → logprob: -5.685879707336426
    10. '```' → logprob: -6.060879707336426

Token 67: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7872635126113892
    2. 'n' → logprob: -1.7872635126113892
    3. 'max' → logprob: -1.9122635126113892
    4. 'students' → logprob: -2.2872633934020996
    5. '
' → logprob: -3.4122633934020996
    6. 'total' → logprob: -3.7872633934020996
    7. 'm' → logprob: -4.2872633934021
    8. 'result' → logprob: -5.0372633934021
    9. 'results' → logprob: -5.4122633934021
    10. 'weights' → logprob: -5.4122633934021

Token 68: ' s' (ID: 265)
  Prédit: ' student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.0867091715335846
    2. ' s' → logprob: -2.5867092609405518
    3. ' ' → logprob: -5.336709022521973
    4. 'student' → logprob: -6.211709022521973
    5. 's' → logprob: -7.836709022521973
    6. ' stud' → logprob: -7.836709022521973
    7. ' i' → logprob: -10.211709022521973
    8. '	s' → logprob: -10.461709022521973
    9. ' students' → logprob: -10.836709022521973
    10. ' _' → logprob: -11.086709022521973

Token 69: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6050541996955872
    2. ',' → logprob: -0.8550541996955872
    3. 'in' → logprob: -3.7300541400909424
    4. '_' → logprob: -6.6050543785095215
    5. ' ,' → logprob: -6.6050543785095215
    6. '_in' → logprob: -7.1050543785095215
    7. ',_' → logprob: -7.8550543785095215
    8. '_,' → logprob: -8.855053901672363
    9. 's' → logprob: -9.105053901672363
    10. ',s' → logprob: -9.605053901672363

Token 70: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026307035237550735
    2. ' w' → logprob: -3.6513071060180664
    3. ',' → logprob: -12.401307106018066
    4. ',w' → logprob: -14.026307106018066
    5. '_,' → logprob: -14.651307106018066
    6. ' ' → logprob: -14.776307106018066
    7. '	w' → logprob: -14.901307106018066
    8. '  ' → logprob: -15.276307106018066
    9. '```' → logprob: -15.651307106018066
    10. '   ' → logprob: -16.02630615234375

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027933192905038595
    2. ' in' → logprob: -8.375279426574707
    3. ' ,' → logprob: -10.625279426574707
    4. ',h' → logprob: -11.000279426574707
    5. ',height' → logprob: -12.500279426574707
    6. 'in' → logprob: -12.875279426574707
    7. '<|end|>' → logprob: -14.625279426574707
    8. ',w' → logprob: -15.250279426574707
    9. ',_' → logprob: -15.375279426574707
    10. '```' → logprob: -16.37527847290039

Token 72: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009115827269852161
    2. ' h' → logprob: -7.000911712646484
    3. ' ' → logprob: -18.250911712646484
    4. '   ' → logprob: -19.000911712646484
    5. '	h' → logprob: -19.125911712646484
    6. '  ' → logprob: -19.375911712646484
    7. '_h' → logprob: -19.750911712646484
    8. 'height' → logprob: -20.625911712646484
    9. '    ' → logprob: -20.750911712646484
    10. 'w' → logprob: -20.750911712646484

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08898810297250748
    2. 'in' → logprob: -2.4639880657196045
    3. ',' → logprob: -10.588988304138184
    4. 's' → logprob: -11.713988304138184
    5. ':' → logprob: -11.713988304138184
    6. '	in' → logprob: -13.088988304138184
    7. ' ' → logprob: -13.713988304138184
    8. '  ' → logprob: -14.213988304138184
    9. '   ' → logprob: -14.338988304138184
    10. ' i' → logprob: -14.463988304138184

Token 74: ' students' (ID: 4501)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'students' → logprob: -0.06196802109479904
    2. ' students' → logprob: -2.8119680881500244
    3. '.students' → logprob: -15.686967849731445
    4. '_students' → logprob: -16.686967849731445
    5. 'student' → logprob: -17.061967849731445
    6. 'st' → logprob: -18.061967849731445
    7. '   ' → logprob: -18.186967849731445
    8. ' ' → logprob: -18.311967849731445
    9. 'udents' → logprob: -18.811967849731445
    10. 'sorted' → logprob: -18.936967849731445

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.417976379045285e-05
    2. ':
' → logprob: -10.125043869018555
    3. ',' → logprob: -13.500043869018555
    4. '<|end|>' → logprob: -14.000043869018555
    5. ':**' → logprob: -14.625043869018555
    6. '):' → logprob: -14.875043869018555
    7. ' :' → logprob: -15.375043869018555
    8. '=' → logprob: -15.750043869018555
    9. ':

' → logprob: -16.375043869018555
    10. '[' → logprob: -16.625043869018555

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001308809849433601
    2. ' print' → logprob: -6.751308917999268
    3. 'print' → logprob: -9.50130844116211
    4. ' if' → logprob: -10.75130844116211
    5. '<|end|>' → logprob: -11.00130844116211
    6. '```' → logprob: -11.37630844116211
    7. '\' → logprob: -12.62630844116211
    8. '	print' → logprob: -12.87630844116211
    9. '    
' → logprob: -13.25130844116211
    10. '   ' → logprob: -13.25130844116211

Token 77: ' bmi' (ID: 186346)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03928987681865692
    2. 'print' → logprob: -3.789289951324463
    3. '   ' → logprob: -4.664289951324463
    4. ' if' → logprob: -5.164289951324463
    5. '    ' → logprob: -7.914289951324463
    6. ' weight' → logprob: -8.664289474487305
    7. ' bmi' → logprob: -9.664289474487305
    8. 'if' → logprob: -10.289289474487305
    9. '```' → logprob: -10.289289474487305
    10. ' area' → logprob: -11.164289474487305

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894262462854385
    2. '=' → logprob: -2.463942527770996
    3. '_' → logprob: -14.088942527770996
    4. ' ' → logprob: -14.588942527770996
    5. ' ' → logprob: -15.088942527770996
    6. ')' → logprob: -15.463942527770996
    7. 's' → logprob: -15.588942527770996
    8. '＝' → logprob: -15.588942527770996
    9. '```' → logprob: -16.088943481445312
    10. 'calc' → logprob: -16.463943481445312

Token 79: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026386799290776253
    2. ' w' → logprob: -3.6513867378234863
    3. 'round' → logprob: -9.776387214660645
    4. '   ' → logprob: -11.151387214660645
    5. ' round' → logprob: -11.401387214660645
    6. 's' → logprob: -13.651387214660645
    7. 'weight' → logprob: -14.151387214660645
    8. ' ' → logprob: -14.526387214660645
    9. '	w' → logprob: -14.526387214660645
    10. '(w' → logprob: -14.901387214660645

Token 80: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.12781988084316254
    2. ' /' → logprob: -2.127819776535034
    3. '/(' → logprob: -7.127820014953613
    4. '/h' → logprob: -9.377820014953613
    5. ' /(' → logprob: -12.752820014953613
    6. ' ' → logprob: -15.252820014953613
    7. '*' → logprob: -15.377820014953613
    8. '/
' → logprob: -15.752820014953613
    9. '/p' → logprob: -16.377819061279297
    10. 'h' → logprob: -16.377819061279297

Token 81: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00020187153131701052
    2. ' (' → logprob: -9.125202178955078
    3. '(' → logprob: -9.750202178955078
    4. 'h' → logprob: -10.875202178955078
    5. '((' → logprob: -11.125202178955078
    6. ' h' → logprob: -14.500202178955078
    7. '(height' → logprob: -16.000202178955078
    8. '(round' → logprob: -16.250202178955078
    9. '(w' → logprob: -16.875202178955078
    10. '(abs' → logprob: -17.250202178955078

Token 82: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.34915927052497864
    2. 'h' → logprob: -1.2241592407226562
    3. ' (' → logprob: -7.724159240722656
    4. '(' → logprob: -8.974159240722656
    5. ' h' → logprob: -9.099159240722656
    6. '((' → logprob: -10.724159240722656
    7. '	h' → logprob: -12.724159240722656
    8. '   ' → logprob: -13.724159240722656
    9. '(height' → logprob: -13.724159240722656
    10. '_h' → logprob: -13.974159240722656

Token 83: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5681353807449341
    2. '/' → logprob: -1.443135380744934
    3. '*' → logprob: -2.1931352615356445
    4. ' **' → logprob: -3.1931352615356445
    5. ' *' → logprob: -3.1931352615356445
    6. '*h' → logprob: -5.9431352615356445
    7. ' /' → logprob: -7.0681352615356445
    8. ')**' → logprob: -10.568135261535645
    9. ' ' → logprob: -10.693135261535645
    10. 'h' → logprob: -11.193135261535645

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017061287071555853
    2. ' ' → logprob: -6.376706123352051
    3. '  ' → logprob: -13.87670612335205
    4. '   ' → logprob: -13.87670612335205
    5. '²' → logprob: -14.93920612335205
    6. ')' → logprob: -14.93920612335205
    7. ' ' → logprob: -15.68920612335205
    8. '    ' → logprob: -15.81420612335205
    9. '=' → logprob: -16.376707077026367
    10. '(' → logprob: -16.626707077026367

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. '²' → logprob: -15.187541007995605
    4. '  ' → logprob: -15.500041007995605
    5. '   ' → logprob: -15.937541007995605
    6. '２' → logprob: -16.125041961669922
    7. '3' → logprob: -16.562541961669922
    8. '```' → logprob: -16.687541961669922
    9. ' ' → logprob: -17.000041961669922
    10. '

' → logprob: -17.062541961669922

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42970213294029236
    2. ')
' → logprob: -1.0547021627426147
    3. ')
' → logprob: -7.304702281951904
    4. '   ' → logprob: -8.179701805114746
    5. ' )
' → logprob: -10.554701805114746
    6. ' )' → logprob: -11.179701805114746
    7. ')

' → logprob: -12.304701805114746
    8. ' ' → logprob: -14.804701805114746
    9. ')`' → logprob: -14.804701805114746
    10. '),' → logprob: -15.179701805114746

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002038083504885435
    2. '    
' → logprob: -7.25203800201416
    3. 'print' → logprob: -7.37703800201416
    4. '
' → logprob: -8.37703800201416
    5. '<|end|>' → logprob: -8.75203800201416
    6. 'if' → logprob: -9.75203800201416
    7. ' if' → logprob: -9.87703800201416
    8. ')' → logprob: -9.87703800201416
    9. ',' → logprob: -10.25203800201416
    10. '    ' → logprob: -11.25203800201416

Token 88: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12594576179981232
    2. 'if' (adapté à ' if') → logprob: -2.375945806503296
    3. '   ' → logprob: -4.000945568084717
    4. ' if' → logprob: -5.750945568084717
    5. ' print' → logprob: -5.875945568084717
    6. 'status' → logprob: -7.625945568084717
    7. 'result' → logprob: -7.875945568084717
    8. 'b' → logprob: -8.750946044921875
    9. 'category' → logprob: -10.625946044921875
    10. 'grade' → logprob: -11.625946044921875

Token 89: ' bmi' (ID: 186346)
  Prédit: ' bmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bmi' → logprob: -0.025358842685818672
    2. 'b' → logprob: -3.7753589153289795
    3. '18' → logprob: -7.2753586769104
    4. ' ' → logprob: -7.7753586769104
    5. '   ' → logprob: -8.400359153747559
    6. 's' → logprob: -8.400359153747559
    7. ' b' → logprob: -8.900359153747559
    8. '    ' → logprob: -9.150359153747559
    9. ' bm' → logprob: -9.775359153747559
    10. '25' → logprob: -10.025359153747559

Token 90: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2609679698944092
    2. '<' → logprob: -2.135967969894409
    3. ' >=' → logprob: -2.260967969894409
    4. '>=' → logprob: -5.010968208312988
    5. ' >' → logprob: -8.135968208312988
    6. ' ' → logprob: -9.010968208312988
    7. '>' → logprob: -9.135968208312988
    8. ' <=' → logprob: -9.635968208312988
    9. '   ' → logprob: -10.760968208312988
    10. '<=' → logprob: -11.448468208312988

Token 91: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.6029903292655945
    2. '25' → logprob: -1.1029903888702393
    3. '18' → logprob: -2.8529903888702393
    4. ' ' → logprob: -3.7279903888702393
    5. '35' → logprob: -3.8529903888702393
    6. '40' → logprob: -5.35299015045166
    7. '28' → logprob: -5.60299015045166
    8. '23' → logprob: -5.97799015045166
    9. '22' → logprob: -6.47799015045166
    10. '20' → logprob: -6.72799015045166

Token 92: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.5483313202857971
    2. '30' → logprob: -1.2983312606811523
    3. '35' → logprob: -2.2983312606811523
    4. '18' → logprob: -3.4233312606811523
    5. '40' → logprob: -5.298331260681152
    6. '28' → logprob: -5.673331260681152
    7. '23' → logprob: -6.048331260681152
    8. '24' → logprob: -6.298331260681152
    9. '27' → logprob: -7.173331260681152
    10. '22' → logprob: -7.173331260681152

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023563832510262728
    2. ':
' → logprob: -6.12735652923584
    3. ' and' → logprob: -9.50235652923584
    4. ' :' → logprob: -10.00235652923584
    5. '   ' → logprob: -10.50235652923584
    6. '.' → logprob: -11.37735652923584
    7. ':
' → logprob: -12.87735652923584
    8. ' :
' → logprob: -13.62735652923584
    9. ':return' → logprob: -13.62735652923584
    10. '0' → logprob: -13.75235652923584

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006136157549917698
    2. ' print' → logprob: -5.881135940551758
    3. '   ' → logprob: -6.381135940551758
    4. 'print' → logprob: -6.506135940551758
    5. '        
' → logprob: -10.256135940551758
    6. '           ' → logprob: -11.131135940551758
    7. '     ' → logprob: -11.756135940551758
    8. '    
' → logprob: -11.756135940551758
    9. '      ' → logprob: -11.756135940551758
    10. '    ' → logprob: -11.881135940551758

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3606814444065094
    2. '   ' → logprob: -1.235681414604187
    3. ' print' → logprob: -4.485681533813477
    4. '       ' → logprob: -7.235681533813477
    5. '	print' → logprob: -10.110681533813477
    6. '  ' → logprob: -10.235681533813477
    7. ' ' → logprob: -10.735681533813477
    8. 'continue' → logprob: -10.985681533813477
    9. '    ' → logprob: -11.235681533813477
    10. '           ' → logprob: -11.485681533813477

Token 96: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10527045279741287
    2. '(f' → logprob: -2.7302703857421875
    3. '("' → logprob: -3.7302703857421875
    4. '(' → logprob: -5.1052703857421875
    5. '('' → logprob: -5.6052703857421875
    6. 's' → logprob: -7.2302703857421875
    7. '("{}' → logprob: -9.355270385742188
    8. '((' → logprob: -10.605270385742188
    9. '()' → logprob: -10.855270385742188
    10. '(str' → logprob: -10.980270385742188

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.478532612323761
    2. ',' → logprob: -0.978532612323761
    3. ',"' → logprob: -5.853532791137695
    4. ' )' → logprob: -7.978532791137695
    5. ',",' → logprob: -8.603532791137695
    6. ' ,' → logprob: -8.728532791137695
    7. ',end' → logprob: -8.728532791137695
    8. '")' → logprob: -9.103532791137695
    9. ','' → logprob: -9.353532791137695
    10. '"' → logprob: -9.478532791137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 43.16%
Précision adaptée (1ère position): 46.32%
Précision (top 10): 88.42%
================================================================================
