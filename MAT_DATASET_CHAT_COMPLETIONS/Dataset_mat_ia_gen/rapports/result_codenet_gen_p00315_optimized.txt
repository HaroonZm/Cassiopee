================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

C,N=map(int,input().split())
image=[list(map(int,list(input().rstrip()))) for _ in range(N)]

def is_symmetric(img):
    half = N//2
    for r in range(half):
        if img[r]!=img[N-1-r]:
            return False
    for r in range(N):
        for c in range(half):
            if img[r][c]!=img[r][N-1-c]:
                return False
    return True

count=0
if is_symmetric(image):
    count+=1

for _ in range(C-1):
    D=int(input())
    for __ in range(D):
        r,c=map(int,input().split())
        r-=1; c-=1
        image[r][c]^=1
    if is_symmetric(image):
        count+=1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000520981615409255
    2. '[' → logprob: -8.875520706176758
    3. ' .' → logprob: -8.875520706176758
    4. '.readline' → logprob: -8.875520706176758
    5. '.
' → logprob: -10.625520706176758
    6. '.setdefault' → logprob: -11.500520706176758
    7. '.get' → logprob: -11.750520706176758
    8. '.stdin' → logprob: -12.125520706176758
    9. '.

' → logprob: -12.250520706176758
    10. '.[' → logprob: -12.375520706176758

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1151965782046318
    2. '.readline' → logprob: -2.240196466445923
    3. '.read' → logprob: -6.115196704864502
    4. '.Read' → logprob: -10.240196228027344
    5. '```' → logprob: -10.490196228027344
    6. '.
' → logprob: -11.115196228027344
    7. '.get' → logprob: -11.240196228027344
    8. '[' → logprob: -11.615196228027344
    9. '<|end|>' → logprob: -11.865196228027344
    10. '.readlines' → logprob: -12.115196228027344

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024233611300587654
    2. '(' → logprob: -3.89923357963562
    3. '().' → logprob: -6.149233818054199
    4. '()
' → logprob: -7.149233818054199
    5. '(
' → logprob: -7.899233818054199
    6. '()\' → logprob: -9.0242338180542
    7. '()

' → logprob: -9.6492338180542
    8. '(

' → logprob: -10.0242338180542
    9. ' ()' → logprob: -10.1492338180542
    10. '
' → logprob: -10.7742338180542

Token 8: 'C' (ID: 34)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5762377381324768
    2. '()' → logprob: -0.8262377381324768
    3. '().' → logprob: -9.201237678527832
    4. '(
' → logprob: -9.451237678527832
    5. '()
' → logprob: -10.326237678527832
    6. ')' → logprob: -11.076237678527832
    7. '#' → logprob: -11.701237678527832
    8. '()

' → logprob: -11.826237678527832
    9. 'a' → logprob: -11.951237678527832
    10. 'def' → logprob: -11.951237678527832

Token 9: ',N' (ID: 49539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7439173460006714
    2. 'ount' → logprob: -1.2439173460006714
    3. '=' → logprob: -2.243917465209961
    4. 'ounter' → logprob: -2.368917465209961
    5. '=int' → logprob: -4.118917465209961
    6. 'h' → logprob: -5.118917465209961
    7. 'OUNT' → logprob: -6.118917465209961
    8. 'ode' → logprob: -6.243917465209961
    9. '=input' → logprob: -6.618917465209961
    10. '[' → logprob: -6.993917465209961

Token 10: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016862353309988976
    2. ' =' → logprob: -4.141862392425537
    3. ',' → logprob: -7.141862392425537
    4. '=input' → logprob: -11.266861915588379
    5. '=int' → logprob: -11.266861915588379
    6. ' ' → logprob: -12.766861915588379
    7. '=list' → logprob: -13.391861915588379
    8. '_' → logprob: -13.516861915588379
    9. '=[]' → logprob: -13.891861915588379
    10. '=

' → logprob: -14.391861915588379

Token 11: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3870002329349518
    2. ' map' → logprob: -1.1370002031326294
    3. 'list' → logprob: -10.38700008392334
    4. ' ' → logprob: -10.63700008392334
    5. '0' → logprob: -10.76200008392334
    6. ' list' → logprob: -11.63700008392334
    7. 'int' → logprob: -11.76200008392334
    8. '	map' → logprob: -11.76200008392334
    9. 'input' → logprob: -11.88700008392334
    10. '[' → logprob: -11.88700008392334

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.026627568528056145
    2. '(' → logprob: -3.651627540588379
    3. '(str' → logprob: -8.901627540588379
    4. 'int' → logprob: -10.151627540588379
    5. '(list' → logprob: -10.401627540588379
    6. '(tuple' → logprob: -10.401627540588379
    7. '(lambda' → logprob: -10.651627540588379
    8. '(input' → logprob: -10.651627540588379
    9. '[int' → logprob: -10.776627540588379
    10. '<int' → logprob: -11.776627540588379

Token 13: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2558651864528656
    2. ',input' → logprob: -1.505865216255188
    3. ',int' → logprob: -6.130865097045898
    4. '(' → logprob: -7.130865097045898
    5. ',(' → logprob: -8.005865097045898
    6. ')' → logprob: -9.005865097045898
    7. '(input' → logprob: -9.255865097045898
    8. ',line' → logprob: -9.380865097045898
    9. ',user' → logprob: -9.755865097045898
    10. ',list' → logprob: -10.505865097045898

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5865047574043274
    2. '())' → logprob: -0.8365047574043274
    3. '()' → logprob: -4.586504936218262
    4. ')' → logprob: -8.336504936218262
    5. '(' → logprob: -10.711504936218262
    6. ' ())' → logprob: -11.211504936218262
    7. '()))' → logprob: -11.336504936218262
    8. '());' → logprob: -11.586504936218262
    9. '();)' → logprob: -11.586504936218262
    10. '()),' → logprob: -12.711504936218262

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009873192757368088
    2. 'strip' → logprob: -7.000987529754639
    3. 'rstrip' → logprob: -9.50098705291748
    4. ' split' → logprob: -14.12598705291748
    5. ')' → logprob: -15.62598705291748
    6. '(split' → logprob: -15.87598705291748
    7. 'spl' → logprob: -16.125988006591797
    8. 'rs' → logprob: -17.750988006591797
    9. '```' → logprob: -18.250988006591797
    10. 'read' → logprob: -18.375988006591797

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002217584289610386
    2. '())' → logprob: -6.252217769622803
    3. '))' → logprob: -8.377217292785645
    4. '()' → logprob: -10.377217292785645
    5. '`)' → logprob: -11.502217292785645
    6. '),' → logprob: -12.377217292785645
    7. '')' → logprob: -12.627217292785645
    8. '(' → logprob: -13.127217292785645
    9. ')")' → logprob: -13.252217292785645
    10. ')`' → logprob: -13.377217292785645

Token 17: 'image' (ID: 3365)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.0632966756820679
    2. 'lst' → logprob: -1.9382966756820679
    3. 'dp' → logprob: -2.0632967948913574
    4. 'arr' → logprob: -2.4382967948913574
    5. 'd' → logprob: -3.8132967948913574
    6. 'bags' → logprob: -4.813296794891357
    7. 'data' → logprob: -4.813296794891357
    8. 'A' → logprob: -4.813296794891357
    9. 'packages' → logprob: -4.813296794891357
    10. 'plans' → logprob: -4.813296794891357

Token 18: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03490786254405975
    2. 's' → logprob: -4.034907817840576
    3. '_' → logprob: -4.659907817840576
    4. '=' → logprob: -5.534907817840576
    5. '.' → logprob: -7.034907817840576
    6. '[
' → logprob: -7.659907817840576
    7. ')' → logprob: -8.034908294677734
    8. '[s' → logprob: -8.284908294677734
    9. ' =' → logprob: -8.409908294677734
    10. '[]' → logprob: -8.909908294677734

Token 19: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000724229437764734
    2. ' list' → logprob: -8.125723838806152
    3. '[list' → logprob: -8.375723838806152
    4. '[]' → logprob: -9.875723838806152
    5. '[int' → logprob: -9.875723838806152
    6. 'int' → logprob: -10.125723838806152
    7. '[' → logprob: -11.125723838806152
    8. 'input' → logprob: -11.250723838806152
    9. 'map' → logprob: -11.500723838806152
    10. 'tuple' → logprob: -11.875723838806152

Token 20: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009342094417661428
    2. '(' → logprob: -7.00093412399292
    3. '(int' → logprob: -10.875934600830078
    4. 'map' → logprob: -13.750934600830078
    5. '(input' → logprob: -14.125934600830078
    6. '()' → logprob: -14.125934600830078
    7. ' map' → logprob: -14.750934600830078
    8. '(
' → logprob: -15.125934600830078
    9. '	map' → logprob: -15.500934600830078
    10. '(m' → logprob: -16.375934600830078

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.843177233240567e-05
    2. '(' → logprob: -11.500018119812012
    3. 'int' → logprob: -13.125018119812012
    4. ',int' → logprob: -13.500018119812012
    5. '(lambda' → logprob: -13.750018119812012
    6. '<int' → logprob: -13.875018119812012
    7. '[int' → logprob: -14.250018119812012
    8. '=int' → logprob: -14.375018119812012
    9. ' (' → logprob: -14.750018119812012
    10. ' int' → logprob: -15.125018119812012

Token 22: ',list' (ID: 162011)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6439220309257507
    2. '(input' → logprob: -0.7689220309257507
    3. ',' → logprob: -5.143921852111816
    4. '(' → logprob: -5.643921852111816
    5. 'input' → logprob: -6.643921852111816
    6. ')' → logprob: -8.393921852111816
    7. '=input' → logprob: -9.393921852111816
    8. ' input' → logprob: -9.768921852111816
    9. ',int' → logprob: -10.018921852111816
    10. ' ,' → logprob: -10.143921852111816

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00012689977302215993
    2. 'input' → logprob: -9.125126838684082
    3. '(' → logprob: -11.125126838684082
    4. '(str' → logprob: -13.375126838684082
    5. ' input' → logprob: -14.500126838684082
    6. '=input' → logprob: -14.625126838684082
    7. ',input' → logprob: -15.000126838684082
    8. '<input' → logprob: -15.500126838684082
    9. '[input' → logprob: -17.7501277923584
    10. '(bin' → logprob: -18.5001277923584

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001645644661039114
    2. '())))' → logprob: -8.875164985656738
    3. '()' → logprob: -10.875164985656738
    4. '()))' → logprob: -12.250164985656738
    5. 'strip' → logprob: -14.625164985656738
    6. '()[' → logprob: -15.875164985656738
    7. '.strip' → logprob: -16.375164031982422
    8. '(' → logprob: -16.500164031982422
    9. '(strip' → logprob: -16.625164031982422
    10. '())' → logprob: -16.875164031982422

Token 25: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023247109726071358
    2. 'rstrip' → logprob: -3.773247003555298
    3. ' strip' → logprob: -13.898246765136719
    4. '.strip' → logprob: -15.148246765136719
    5. '().' → logprob: -15.523246765136719
    6. 'read' → logprob: -16.52324676513672
    7. '.rstrip' → logprob: -16.64824676513672
    8. '_strip' → logprob: -16.89824676513672
    9. 'str' → logprob: -17.02324676513672
    10. 'split' → logprob: -17.14824676513672

Token 26: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.012073373422026634
    2. '()))' → logprob: -5.012073516845703
    3. '()' → logprob: -5.387073516845703
    4. ')))' → logprob: -8.262073516845703
    5. '('\' → logprob: -8.512073516845703
    6. '())' → logprob: -9.012073516845703
    7. '')))' → logprob: -9.637073516845703
    8. '().' → logprob: -10.137073516845703
    9. '())))
' → logprob: -10.262073516845703
    10. '()\' → logprob: -10.887073516845703

Token 27: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32958105206489563
    2. 'for' → logprob: -1.9545810222625732
    3. ')]' → logprob: -2.9545810222625732
    4. ' for' → logprob: -2.9545810222625732
    5. ']' → logprob: -3.5795810222625732
    6. '[' → logprob: -5.204581260681152
    7. '[C' → logprob: -7.579581260681152
    8. '[i' → logprob: -8.829581260681152
    9. '))' → logprob: -9.079581260681152
    10. '()' → logprob: -9.329581260681152

Token 28: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08078913390636444
    2. '_' → logprob: -2.955789089202881
    3. ' _' → logprob: -3.830789089202881
    4. 'range' → logprob: -5.580789089202881
    5. ' ' → logprob: -9.705789566040039
    6. '_range' → logprob: -10.580789566040039
    7. '	range' → logprob: -11.205789566040039
    8. ' in' → logprob: -12.330789566040039
    9. '(range' → logprob: -12.830789566040039
    10. ' i' → logprob: -13.205789566040039

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00301323807798326
    2. 'in' → logprob: -5.8780131340026855
    3. 'range' → logprob: -8.628013610839844
    4. ' range' → logprob: -11.628013610839844
    5. ' ' → logprob: -12.003013610839844
    6. '_' → logprob: -12.628013610839844
    7. 'i' → logprob: -13.253013610839844
    8. '<|end|>' → logprob: -13.378013610839844
    9. '<|end|>' → logprob: -13.878013610839844
    10. ')' → logprob: -13.878013610839844

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023226479243021458
    2. ' range' → logprob: -8.375232696533203
    3. 'image' → logprob: -14.375232696533203
    4. '(range' → logprob: -14.875232696533203
    5. 'r' → logprob: -15.375232696533203
    6. '[' → logprob: -15.500232696533203
    7. 'rang' → logprob: -16.375232696533203
    8. 'ran' → logprob: -16.750232696533203
    9. '```' → logprob: -17.000232696533203
    10. '	range' → logprob: -17.000232696533203

Token 31: '(N' (ID: 10564)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.6948051452636719
    2. '(N' → logprob: -0.6948051452636719
    3. '(' → logprob: -6.444805145263672
    4. 'C' → logprob: -10.069805145263672
    5. 'N' → logprob: -10.819805145263672
    6. '(n' → logprob: -13.444805145263672
    7. '(
' → logprob: -13.569805145263672
    8. ' (' → logprob: -13.819805145263672
    9. '(M' → logprob: -15.194805145263672
    10. ' C' → logprob: -15.319805145263672

Token 32: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004921489744447172
    2. ')' → logprob: -7.750492095947266
    3. ']' → logprob: -9.875492095947266
    4. ')])' → logprob: -12.500492095947266
    5. '])]' → logprob: -13.375492095947266
    6. '))' → logprob: -13.750492095947266
    7. '')]' → logprob: -14.000492095947266
    8. ')],' → logprob: -14.375492095947266
    9. ')][' → logprob: -14.875492095947266
    10. ')]
' → logprob: -15.125492095947266

Token 33: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2868213653564453
    2. 'dp' → logprob: -2.0368213653564453
    3. '
' → logprob: -3.7868213653564453
    4. 'def' → logprob: -3.9118213653564453
    5. 'd' → logprob: -4.161821365356445
    6. 'result' → logprob: -4.286821365356445
    7. '```' → logprob: -4.911821365356445
    8. 'max' → logprob: -4.911821365356445
    9. '#' → logprob: -5.786821365356445
    10. ' for' → logprob: -5.911821365356445

Token 34: ' is' (ID: 382)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8727397918701172
    2. ' check' → logprob: -1.7477397918701172
    3. ' dfs' → logprob: -2.497739791870117
    4. ' find' → logprob: -3.122739791870117
    5. ' solution' → logprob: -3.622739791870117
    6. ' main' → logprob: -3.747739791870117
    7. ' paint' → logprob: -3.872739791870117
    8. ' reverse' → logprob: -3.997739791870117
    9. ' ' → logprob: -3.997739791870117
    10. ' bfs' → logprob: -4.122739791870117

Token 35: '_s' (ID: 1278)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.9459785223007202
    2. '_square' → logprob: -1.9459785223007202
    3. '_in' → logprob: -2.4459786415100098
    4. '_possible' → logprob: -2.4459786415100098
    5. '_black' → logprob: -2.5709786415100098
    6. '_connected' → logprob: -3.4459786415100098
    7. '_white' → logprob: -3.9459786415100098
    8. '_mon' → logprob: -4.19597864151001
    9. '_' → logprob: -4.44597864151001
    10. '_s' → logprob: -4.44597864151001

Token 36: 'ymmetric' (ID: 49964)
  Prédit: 'quare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quare' → logprob: -0.02498999610543251
    2. 'afe' → logprob: -4.024990081787109
    3. 'olved' → logprob: -6.399990081787109
    4. 'ame' → logprob: -6.774990081787109
    5. 'olve' → logprob: -7.399990081787109
    6. 'olid' → logprob: -8.02499008178711
    7. 'ur' → logprob: -8.02499008178711
    8. 'quared' → logprob: -8.02499008178711
    9. 'q' → logprob: -8.27499008178711
    10. 'e' → logprob: -8.52499008178711

Token 37: '(img' (ID: 22813)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3062145709991455
    2. '(x' → logprob: -2.0562145709991455
    3. '(i' → logprob: -2.9312145709991455
    4. '(row' → logprob: -3.4312145709991455
    5. '(image' → logprob: -4.056214332580566
    6. '(a' → logprob: -4.556214332580566
    7. '(line' → logprob: -4.681214332580566
    8. '(y' → logprob: -5.681214332580566
    9. '(_' → logprob: -6.431214332580566
    10. '((' → logprob: -6.806214332580566

Token 38: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5263160467147827
    2. '):' → logprob: -0.9013160467147827
    3. ')' → logprob: -7.026316165924072
    4. ' ,' → logprob: -7.651316165924072
    5. ',row' → logprob: -8.276315689086914
    6. ',i' → logprob: -8.401315689086914
    7. ',img' → logprob: -8.526315689086914
    8. ' ):' → logprob: -9.151315689086914
    9. ',size' → logprob: -9.151315689086914
    10. ',p' → logprob: -9.151315689086914

Token 39: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10264530032873154
    2. ':' → logprob: -2.7276453971862793
    3. '   ' → logprob: -3.6026453971862793
    4. '():' → logprob: -6.852645397186279
    5. '(i' → logprob: -7.352645397186279
    6. '_' → logprob: -8.227644920349121
    7. ' :' → logprob: -8.352644920349121
    8. '(n' → logprob: -8.352644920349121
    9. '(
' → logprob: -8.477644920349121
    10. '(:' → logprob: -8.477644920349121

Token 40: ' half' (ID: 6375)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.648366391658783
    2. ' for' → logprob: -1.3983664512634277
    3. ' N' → logprob: -2.6483664512634277
    4. '   ' → logprob: -2.6483664512634277
    5. 'n' → logprob: -2.8983664512634277
    6. ' return' → logprob: -4.023366451263428
    7. ' size' → logprob: -5.148366451263428
    8. ' 
' → logprob: -5.523366451263428
    9. 'for' → logprob: -6.773366451263428
    10. '    ' → logprob: -6.773366451263428

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18421503901481628
    2. '=len' → logprob: -2.3092150688171387
    3. '_len' → logprob: -2.8092150688171387
    4. ' =' → logprob: -5.809215068817139
    5. '_' → logprob: -6.434215068817139
    6. '=int' → logprob: -7.059215068817139
    7. '_=' → logprob: -7.309215068817139
    8. '=_' → logprob: -7.434215068817139
    9. '_n' → logprob: -7.809215068817139
    10. '_length' → logprob: -7.934215068817139

Token 42: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1602621078491211
    2. ' len' → logprob: -1.910262107849121
    3. ' C' → logprob: -11.535262107849121
    4. '(len' → logprob: -11.785262107849121
    5. 'N' → logprob: -12.035262107849121
    6. ' N' → logprob: -12.035262107849121
    7. 'C' → logprob: -12.660262107849121
    8. ' ' → logprob: -13.535262107849121
    9. '[len' → logprob: -13.535262107849121
    10. '	len' → logprob: -13.535262107849121

Token 43: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16089308261871338
    2. ' //' → logprob: -1.9108930826187134
    3. '   ' → logprob: -7.785892963409424
    4. ' ' → logprob: -8.535893440246582
    5. '```' → logprob: -10.660893440246582
    6. '2' → logprob: -11.535893440246582
    7. ' ' → logprob: -12.160893440246582
    8. '
' → logprob: -12.410893440246582
    9. '>>' → logprob: -12.785893440246582
    10. '`' → logprob: -12.910893440246582

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '```' → logprob: -14.625011444091797
    4. '=' → logprob: -17.375011444091797
    5. '4' → logprob: -17.500011444091797
    6. '3' → logprob: -17.812511444091797
    7. '1' → logprob: -17.875011444091797
    8. '   ' → logprob: -17.937511444091797
    9. '२' → logprob: -18.125011444091797
    10. '(' → logprob: -18.250011444091797

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04031758010387421
    2. '<|end|>' → logprob: -3.2903175354003906
    3. '<|end|>' → logprob: -7.665317535400391
    4. ' for' → logprob: -7.665317535400391
    5. '   ' → logprob: -8.16531753540039
    6. ' ' → logprob: -8.91531753540039
    7. ' 
' → logprob: -8.91531753540039
    8. '
' → logprob: -8.91531753540039
    9. 'for' → logprob: -9.16531753540039
    10. '\n' → logprob: -9.29031753540039

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11636842787265778
    2. '
' → logprob: -2.741368532180786
    3. '<|end|>' → logprob: -3.741368532180786
    4. ' for' → logprob: -4.241368293762207
    5. ' ' → logprob: -6.241368293762207
    6. '    
' → logprob: -6.366368293762207
    7. 'for' → logprob: -7.241368293762207
    8. '  
' → logprob: -7.241368293762207
    9. ' 
' → logprob: -7.491368293762207
    10. '    ' → logprob: -7.741368293762207

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4980311393737793
    2. ' for' → logprob: -0.9980311393737793
    3. '   ' → logprob: -3.7480311393737793
    4. 'return' → logprob: -10.248031616210938
    5. '
' → logprob: -10.498031616210938
    6. '	for' → logprob: -11.373031616210938
    7. '```' → logprob: -11.373031616210938
    8. '    
' → logprob: -11.748031616210938
    9. ' return' → logprob: -11.998031616210938
    10. '  ' → logprob: -13.623031616210938

Token 48: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010529398918151855
    2. 'i' → logprob: -4.635529518127441
    3. ' row' → logprob: -8.385529518127441
    4. ' range' → logprob: -8.635529518127441
    5. ' _' → logprob: -8.760529518127441
    6. ' y' → logprob: -10.010529518127441
    7. ' ' → logprob: -10.135529518127441
    8. ' r' → logprob: -10.385529518127441
    9. ' j' → logprob: -10.510529518127441
    10. '_' → logprob: -10.635529518127441

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006841110996901989
    2. 'in' → logprob: -5.00684118270874
    3. ' ' → logprob: -9.756840705871582
    4. ',' → logprob: -9.881840705871582
    5. '	in' → logprob: -12.881840705871582
    6. ' ,' → logprob: -12.881840705871582
    7. '<|end|>' → logprob: -13.006840705871582
    8. '   ' → logprob: -13.381840705871582
    9. '  ' → logprob: -13.881840705871582
    10. 'In' → logprob: -14.006840705871582

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018151231110095978
    2. 'range' → logprob: -4.01815128326416
    3. '	range' → logprob: -15.01815128326416
    4. ' ' → logprob: -15.39315128326416
    5. ' image' → logprob: -15.64315128326416
    6. ' img' → logprob: -15.64315128326416
    7. '(range' → logprob: -15.64315128326416
    8. 'img' → logprob: -16.018150329589844
    9. 'image' → logprob: -17.018150329589844
    10. ' ' → logprob: -17.268150329589844

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031953046564012766
    2. '(N' → logprob: -5.753195285797119
    3. '(C' → logprob: -11.253195762634277
    4. '(H' → logprob: -13.128195762634277
    5. ' (' → logprob: -13.878195762634277
    6. '(len' → logprob: -14.128195762634277
    7. '(h' → logprob: -15.003195762634277
    8. 'half' → logprob: -15.503195762634277
    9. '(n' → logprob: -15.753195762634277
    10. ' half' → logprob: -16.37819480895996

Token 52: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0013789254007861018
    2. 'N' → logprob: -6.626379013061523
    3. ' half' → logprob: -10.251379013061523
    4. 'hal' → logprob: -11.251379013061523
    5. 'C' → logprob: -12.501379013061523
    6. ' N' → logprob: -15.376379013061523
    7. ')' → logprob: -15.501379013061523
    8. 'halb' → logprob: -16.751379013061523
    9. 'len' → logprob: -16.751379013061523
    10. '0' → logprob: -16.876379013061523

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023712890222668648
    2. '):
' → logprob: -4.023713111877441
    3. '+' → logprob: -5.273713111877441
    4. '//' → logprob: -8.898713111877441
    5. '   ' → logprob: -9.273713111877441
    6. ' +' → logprob: -9.648713111877441
    7. ' ):' → logprob: -9.648713111877441
    8. ')' → logprob: -10.023713111877441
    9. '):
' → logprob: -12.273713111877441
    10. ' //' → logprob: -12.523713111877441

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012614079751074314
    2. '<|end|>' → logprob: -5.2626142501831055
    3. '   ' → logprob: -5.6376142501831055
    4. '    ' → logprob: -6.3876142501831055
    5. ' for' → logprob: -6.7626142501831055
    6. ' ' → logprob: -7.6376142501831055
    7. ':' → logprob: -9.762614250183105
    8. ',' → logprob: -9.762614250183105
    9. '<|end|>' → logprob: -10.012614250183105
    10. '        ' → logprob: -10.012614250183105

Token 55: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05263867974281311
    2. 'for' → logprob: -3.5526387691497803
    3. '       ' → logprob: -4.302638530731201
    4. '   ' → logprob: -5.552638530731201
    5. ' if' → logprob: -5.677638530731201
    6. 'if' (adapté à ' if') → logprob: -7.177638530731201
    7. '    ' → logprob: -7.427638530731201
    8. ' ' → logprob: -7.802638530731201
    9. '	for' → logprob: -11.05263900756836
    10. '     ' → logprob: -13.17763900756836

Token 56: ' img' (ID: 9515)
  Prédit: ' img'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' img' → logprob: -0.21212588250637054
    2. 'img' → logprob: -1.7121258974075317
    3. ' image' → logprob: -4.837125778198242
    4. 'image' → logprob: -6.462125778198242
    5. ' not' → logprob: -6.962125778198242
    6. 'not' → logprob: -9.462125778198242
    7. '	img' → logprob: -9.712125778198242
    8. '   ' → logprob: -10.587125778198242
    9. '(img' → logprob: -10.587125778198242
    10. '<img' → logprob: -11.337125778198242

Token 57: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00010092071170220152
    2. '[' → logprob: -9.250101089477539
    3. '[row' → logprob: -13.000101089477539
    4. '[N' → logprob: -13.875101089477539
    5. ' [' → logprob: -14.625101089477539
    6. '[-' → logprob: -15.125101089477539
    7. '][' → logprob: -15.750101089477539
    8. '[n' → logprob: -16.50010108947754
    9. '[len' → logprob: -16.50010108947754
    10. 'r' → logprob: -16.62510108947754

Token 58: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.2551945149898529
    2. ']' → logprob: -1.5051945447921753
    3. '][' → logprob: -5.755194664001465
    4. '!=' → logprob: -10.130194664001465
    5. ']==' → logprob: -10.380194664001465
    6. ')!=' → logprob: -11.630194664001465
    7. '][-' → logprob: -12.130194664001465
    8. ']!='' → logprob: -12.880194664001465
    9. '][:' → logprob: -13.380194664001465
    10. ' ]' → logprob: -13.380194664001465

Token 59: 'img' (ID: 3514)
  Prédit: 'img'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'img' → logprob: -0.0005800772923976183
    2. ' img' → logprob: -7.750580310821533
    3. '[' → logprob: -9.500579833984375
    4. 'list' → logprob: -9.750579833984375
    5. '<img' → logprob: -12.500579833984375
    6. '	img' → logprob: -12.625579833984375
    7. '[::-' → logprob: -13.125579833984375
    8. '(img' → logprob: -13.375579833984375
    9. '/img' → logprob: -13.875579833984375
    10. 'image' → logprob: -13.875579833984375

Token 60: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.057959504425525665
    2. '[-' → logprob: -2.93295955657959
    3. '[' → logprob: -5.80795955657959
    4. 'N' → logprob: -10.05795955657959
    5. '[n' → logprob: -11.18295955657959
    6. '   ' → logprob: -13.30795955657959
    7. '[C' → logprob: -13.55795955657959
    8. ' ' → logprob: -14.05795955657959
    9. '[
' → logprob: -14.30795955657959
    10. '[r' → logprob: -14.43295955657959

Token 61: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013487246818840504
    2. '-r' → logprob: -4.388487339019775
    3. ' -' → logprob: -7.013487339019775
    4. '1' → logprob: -9.513486862182617
    5. 'r' → logprob: -13.013486862182617
    6. ' ' → logprob: -14.388486862182617
    7. '-(' → logprob: -15.263486862182617
    8. '−' → logprob: -16.263486862182617
    9. '   ' → logprob: -16.763486862182617
    10. '-row' → logprob: -17.263486862182617

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2522631585597992
    2. 'r' → logprob: -1.5022631883621216
    3. ' r' → logprob: -8.752263069152832
    4. '-' → logprob: -9.252263069152832
    5. ' ' → logprob: -9.752263069152832
    6. '{' → logprob: -12.877263069152832
    7. '   ' → logprob: -12.939763069152832
    8. '	r' → logprob: -13.564763069152832
    9. '  ' → logprob: -13.564763069152832
    10. '[r' → logprob: -13.689763069152832

Token 63: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.13100554049015045
    2. '-' → logprob: -2.1310055255889893
    3. ' -' → logprob: -5.506005764007568
    4. 'r' → logprob: -12.13100528717041
    5. ' ' → logprob: -15.00600528717041
    6. ' r' → logprob: -15.25600528717041
    7. '-
' → logprob: -15.38100528717041
    8. '-row' → logprob: -15.50600528717041
    9. '-R' → logprob: -16.631006240844727
    10. '-risk' → logprob: -16.756006240844727

Token 64: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03064419887959957
    2. ']:
' → logprob: -3.905644178390503
    3. ']' → logprob: -4.655644416809082
    4. ']:
' → logprob: -8.280644416809082
    5. '):' → logprob: -9.405644416809082
    6. ']):' → logprob: -9.655644416809082
    7. ':' → logprob: -9.905644416809082
    8. ' ]' → logprob: -10.655644416809082
    9. '   ' → logprob: -11.030644416809082
    10. '       ' → logprob: -11.905644416809082

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18032710254192352
    2. ':return' → logprob: -2.4303271770477295
    3. ':' → logprob: -2.6803271770477295
    4. '       ' → logprob: -5.43032693862915
    5. ':
' → logprob: -6.05532693862915
    6. ' return' → logprob: -6.80532693862915
    7. 'return' → logprob: -8.430327415466309
    8. '               ' → logprob: -9.805327415466309
    9. ' :' → logprob: -9.930327415466309
    10. '		' → logprob: -9.930327415466309

Token 66: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1253325194120407
    2. 'return' (adapté à ' return') → logprob: -2.2503325939178467
    3. '       ' → logprob: -4.500332355499268
    4. '               ' → logprob: -7.500332355499268
    5. '           ' → logprob: -7.750332355499268
    6. ':return' → logprob: -9.000332832336426
    7. '	return' → logprob: -9.250332832336426
    8. '   ' → logprob: -9.500332832336426
    9. ' ' → logprob: -11.125332832336426
    10. ' ' → logprob: -11.500332832336426

Token 67: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014165272004902363
    2. ' False' → logprob: -4.26416540145874
    3. 'True' → logprob: -13.514164924621582
    4. ' ' → logprob: -15.139164924621582
    5. ' True' → logprob: -17.0141658782959
    6. '   ' → logprob: -17.3891658782959
    7. 'None' → logprob: -17.5141658782959
    8. 'F' → logprob: -17.8891658782959
    9. '  ' → logprob: -18.2641658782959
    10. '0' → logprob: -18.3891658782959

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002112074289470911
    2. '
' → logprob: -7.002111911773682
    3. '	return' → logprob: -7.877111911773682
    4. '    
' → logprob: -8.25211238861084
    5. '<|end|>' → logprob: -8.25211238861084
    6. ' return' → logprob: -9.25211238861084
    7. 'return' → logprob: -9.62711238861084
    8. '  
' → logprob: -10.87711238861084
    9. ':return' → logprob: -10.87711238861084
    10. ' 
' → logprob: -11.00211238861084

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005871102912351489
    2. ' return' → logprob: -8.375587463378906
    3. '	return' → logprob: -8.750587463378906
    4. 'return' → logprob: -9.250587463378906
    5. '<|end|>' → logprob: -10.375587463378906
    6. '    
' → logprob: -11.125587463378906
    7. '
' → logprob: -11.250587463378906
    8. '       ' → logprob: -11.625587463378906
    9. ':return' → logprob: -11.750587463378906
    10. '   ' → logprob: -12.125587463378906

Token 70: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042824652045965195
    2. 'return' → logprob: -5.879282474517822
    3. ' return' → logprob: -6.629282474517822
    4. '	return' → logprob: -9.004281997680664
    5. ' ' → logprob: -11.254281997680664
    6. '       ' → logprob: -12.004281997680664
    7. '  ' → logprob: -12.379281997680664
    8. '<|end|>' → logprob: -12.379281997680664
    9. ':return' → logprob: -13.504281997680664
    10. 'eturn' → logprob: -14.379281997680664

Token 71: ' r' (ID: 428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4477764964103699
    2. ' c' → logprob: -1.0727765560150146
    3. 'r' → logprob: -4.5727763175964355
    4. 'i' → logprob: -5.9477763175964355
    5. ' r' → logprob: -5.9477763175964355
    6. ' i' → logprob: -6.1977763175964355
    7. ' range' → logprob: -7.9477763175964355
    8. ' col' → logprob: -8.322776794433594
    9. 'range' → logprob: -8.322776794433594
    10. 'col' → logprob: -9.322776794433594

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22594647109508514
    2. 'in' → logprob: -1.6009464263916016
    3. '   ' → logprob: -7.850946426391602
    4. ' ' → logprob: -9.725946426391602
    5. ',' → logprob: -10.725946426391602
    6. 'import' → logprob: -11.350946426391602
    7. '=' → logprob: -11.600946426391602
    8. '+' → logprob: -11.600946426391602
    9. '	in' → logprob: -12.163446426391602
    10. '  ' → logprob: -12.475946426391602

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08950183540582657
    2. ' range' → logprob: -2.4645018577575684
    3. 'half' → logprob: -7.589501857757568
    4. ' half' → logprob: -10.71450138092041
    5. '(range' → logprob: -11.08950138092041
    6. ' ' → logprob: -12.33950138092041
    7. '	range' → logprob: -13.08950138092041
    8. '[' → logprob: -13.08950138092041
    9. '   ' → logprob: -13.21450138092041
    10. ' in' → logprob: -13.65200138092041

Token 74: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009955333080142736
    2. '(N' → logprob: -7.000995635986328
    3. 'half' → logprob: -10.125995635986328
    4. '(C' → logprob: -10.250995635986328
    5. '(range' → logprob: -12.875995635986328
    6. '(r' → logprob: -13.250995635986328
    7. 'range' → logprob: -14.125995635986328
    8. 'C' → logprob: -14.250995635986328
    9. '(n' → logprob: -14.375995635986328
    10. '((' → logprob: -14.625995635986328

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5332444310188293
    2. '//' → logprob: -1.6582443714141846
    3. '):
' → logprob: -2.0332443714141846
    4. 'half' → logprob: -3.5332443714141846
    5. '   ' → logprob: -4.033244609832764
    6. '-' → logprob: -4.033244609832764
    7. '2' → logprob: -4.658244609832764
    8. '-half' → logprob: -5.408244609832764
    9. '1' → logprob: -6.283244609832764
    10. ' ' → logprob: -6.533244609832764

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07482405751943588
    2. '   ' → logprob: -2.949824094772339
    3. ' for' → logprob: -3.949824094772339
    4. '	for' → logprob: -9.199824333190918
    5. 'for' → logprob: -9.199824333190918
    6. '	   ' → logprob: -9.449824333190918
    7. '	' → logprob: -9.574824333190918
    8. '<|end|>' → logprob: -9.824824333190918
    9. ' ' → logprob: -10.199824333190918
    10. ',' → logprob: -11.824824333190918

Token 77: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.08323335647583
    2. 'for' (adapté à ' for') → logprob: -1.08323335647583
    3. '       ' → logprob: -1.70823335647583
    4. ' for' → logprob: -1.95823335647583
    5. '	for' → logprob: -7.83323335647583
    6. ' ' → logprob: -8.208232879638672
    7. '           ' → logprob: -11.708232879638672
    8. '   ' → logprob: -11.958232879638672
    9. 'if' → logprob: -12.333232879638672
    10. '     ' → logprob: -12.708232879638672

Token 78: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023294508457183838
    2. ' c' → logprob: -3.773294448852539
    3. 'i' → logprob: -10.023294448852539
    4. '   ' → logprob: -12.898294448852539
    5. '	c' → logprob: -14.273294448852539
    6. ' i' → logprob: -14.398294448852539
    7. ' ' → logprob: -15.523294448852539
    8. '(c' → logprob: -16.02329444885254
    9. 'l' → logprob: -16.27329444885254
    10. 'x' → logprob: -16.39829444885254

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034084875136613846
    2. 'in' → logprob: -3.4090847969055176
    3. '(' → logprob: -8.909085273742676
    4. '   ' → logprob: -8.909085273742676
    5. ' ' → logprob: -9.659085273742676
    6. '       ' → logprob: -10.284085273742676
    7. 'range' → logprob: -10.909085273742676
    8. '(range' → logprob: -11.409085273742676
    9. ' range' → logprob: -11.909085273742676
    10. '+' → logprob: -12.034085273742676

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16061168909072876
    2. ' range' → logprob: -1.910611629486084
    3. '(range' → logprob: -8.035612106323242
    4. 'half' → logprob: -10.035612106323242
    5. ' half' → logprob: -11.285612106323242
    6. '(' → logprob: -12.410612106323242
    7. '   ' → logprob: -14.035612106323242
    8. ' ' → logprob: -14.160612106323242
    9. '	range' → logprob: -14.660612106323242
    10. ' xrange' → logprob: -15.035612106323242

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693885087966919
    2. '(N' → logprob: -0.693885087966919
    3. '(range' → logprob: -8.06888484954834
    4. '(C' → logprob: -8.56888484954834
    5. 'range' → logprob: -8.81888484954834
    6. 'half' → logprob: -10.06888484954834
    7. 'N' → logprob: -11.06888484954834
    8. '   ' → logprob: -12.06888484954834
    9. '((' → logprob: -12.19388484954834
    10. ' range' → logprob: -12.56888484954834

Token 82: 'half' (ID: 52836)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4840260148048401
    2. 'half' → logprob: -0.9840260148048401
    3. 'C' → logprob: -5.109025955200195
    4. ' half' → logprob: -6.734025955200195
    5. 'range' → logprob: -7.234025955200195
    6. '(' → logprob: -7.359025955200195
    7. '(N' → logprob: -7.359025955200195
    8. ' N' → logprob: -7.609025955200195
    9. ')' → logprob: -10.359025955200195
    10. '1' → logprob: -10.359025955200195

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002765882993116975
    2. '+' → logprob: -6.252765655517578
    3. '):
' → logprob: -7.252765655517578
    4. '   ' → logprob: -10.002765655517578
    5. ':' → logprob: -10.627765655517578
    6. ')' → logprob: -10.752765655517578
    7. ' ):' → logprob: -11.252765655517578
    8. '<|end|>' → logprob: -12.627765655517578
    9. '       ' → logprob: -12.752765655517578
    10. '):

' → logprob: -13.127765655517578

Token 84: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32253405451774597
    2. '           ' → logprob: -1.3225340843200684
    3. '<|end|>' → logprob: -5.072534084320068
    4. ' if' → logprob: -6.947534084320068
    5. '               ' → logprob: -7.447534084320068
    6. '   ' → logprob: -7.697534084320068
    7. ' ' → logprob: -8.44753360748291
    8. '<|end|>' → logprob: -8.69753360748291
    9. '	       ' → logprob: -8.94753360748291
    10. ':' → logprob: -9.69753360748291

Token 85: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1393035650253296
    2. '           ' → logprob: -1.5143035650253296
    3. '               ' → logprob: -1.7643035650253296
    4. ' if' → logprob: -1.8893035650253296
    5. '       ' → logprob: -2.014303684234619
    6. '   ' → logprob: -6.514303684234619
    7. '	if' → logprob: -6.639303684234619
    8. '```' → logprob: -7.889303684234619
    9. '	       ' → logprob: -8.389303207397461
    10. '	           ' → logprob: -9.139303207397461

Token 86: ' img' (ID: 9515)
  Prédit: 'img'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'img' → logprob: -0.20165082812309265
    2. ' img' → logprob: -1.701650857925415
    3. 'image' → logprob: -9.451650619506836
    4. '           ' → logprob: -9.576650619506836
    5. '	img' → logprob: -10.576650619506836
    6. '               ' → logprob: -10.701650619506836
    7. ' image' → logprob: -11.076650619506836
    8. '   ' → logprob: -11.576650619506836
    9. '(img' → logprob: -11.826650619506836
    10. '<img' → logprob: -12.826650619506836

Token 87: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.380904672667384e-05
    2. '[' → logprob: -10.750033378601074
    3. '[row' → logprob: -12.875033378601074
    4. 'r' → logprob: -13.250033378601074
    5. '[c' → logprob: -13.625033378601074
    6. '[N' → logprob: -13.875033378601074
    7. ' [' → logprob: -13.875033378601074
    8. '[s' → logprob: -14.000033378601074
    9. '   ' → logprob: -14.125033378601074
    10. '[i' → logprob: -14.250033378601074

Token 88: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.20160707831382751
    2. '][' → logprob: -1.70160710811615
    3. '[' → logprob: -9.326606750488281
    4. ' [' → logprob: -9.826606750488281
    5. '[C' → logprob: -11.201606750488281
    6. 'c' → logprob: -11.951606750488281
    7. '[N' → logprob: -11.951606750488281
    8. ' ][' → logprob: -11.951606750488281
    9. '>[' → logprob: -12.201606750488281
    10. '   ' → logprob: -12.576606750488281

Token 89: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.8325677703833207e-05
    2. ' c' → logprob: -11.125028610229492
    3. 'N' → logprob: -12.000028610229492
    4. '[c' → logprob: -12.375028610229492
    5. '   ' → logprob: -13.875028610229492
    6. ')c' → logprob: -14.625028610229492
    7. '           ' → logprob: -14.875028610229492
    8. '```' → logprob: -15.500028610229492
    9. '(c' → logprob: -15.625028610229492
    10. '	c' → logprob: -15.875028610229492

Token 90: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.011054305359721184
    2. ']' → logprob: -4.511054515838623
    3. ' ]' → logprob: -12.261054039001465
    4. '!=' → logprob: -14.011054039001465
    5. ']==' → logprob: -15.261054039001465
    6. '"]' → logprob: -15.261054039001465
    7. ']!='' → logprob: -15.886054039001465
    8. ']!' → logprob: -16.13605499267578
    9. ')!=' → logprob: -16.26105499267578
    10. '']' → logprob: -17.01105499267578

Token 91: 'img' (ID: 3514)
  Prédit: 'img'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'img' → logprob: -9.019237768370658e-05
    2. ' img' → logprob: -9.500090599060059
    3. '   ' → logprob: -12.250090599060059
    4. '	img' → logprob: -12.250090599060059
    5. '           ' → logprob: -12.500090599060059
    6. '       ' → logprob: -13.500090599060059
    7. 'image' → logprob: -15.375090599060059
    8. '               ' → logprob: -15.750090599060059
    9. '  ' → logprob: -16.500089645385742
    10. ' ' → logprob: -16.625089645385742

Token 92: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.822646693966817e-06
    2. 'r' → logprob: -11.875007629394531
    3. '[' → logprob: -15.000007629394531
    4. '[N' → logprob: -15.750007629394531
    5. '```' → logprob: -16.25000762939453
    6. '1' → logprob: -16.75000762939453
    7. '[row' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.87500762939453
    9. '[
' → logprob: -18.00000762939453
    10. '`' → logprob: -18.12500762939453

Token 93: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.5243861079216003
    2. '][' → logprob: -0.8993861079216003
    3. 'N' → logprob: -7.524385929107666
    4. '-' → logprob: -8.774386405944824
    5. '[-' → logprob: -8.774386405944824
    6. '[' → logprob: -9.149386405944824
    7. ']' → logprob: -9.399386405944824
    8. '][-' → logprob: -9.899386405944824
    9. ']-' → logprob: -10.274386405944824
    10. ')[' → logprob: -10.524386405944824

Token 94: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009840256534516811
    2. '-' → logprob: -4.634840488433838
    3. ' N' → logprob: -10.63484001159668
    4. '1' → logprob: -10.88484001159668
    5. '-N' → logprob: -10.88484001159668
    6. ' -' → logprob: -12.00984001159668
    7. '(N' → logprob: -12.50984001159668
    8. '[N' → logprob: -13.13484001159668
    9. ']' → logprob: -13.38484001159668
    10. ')' → logprob: -13.50984001159668

Token 95: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012998805614188313
    2. '1' → logprob: -7.001299858093262
    3. ' -' → logprob: -7.876299858093262
    4. ']-' → logprob: -12.501299858093262
    5. '-c' → logprob: -13.251299858093262
    6. '   ' → logprob: -13.876299858093262
    7. '−' → logprob: -14.001299858093262
    8. ' ' → logprob: -14.751299858093262
    9. ']' → logprob: -15.251299858093262
    10. 'c' → logprob: -16.376300811767578

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001717166742309928
    2. '-' → logprob: -9.125171661376953
    3. 'c' → logprob: -10.250171661376953
    4. ' ' → logprob: -10.750171661376953
    5. '   ' → logprob: -13.750171661376953
    6. ' c' → logprob: -13.750171661376953
    7. 'r' → logprob: -14.250171661376953
    8. '```' → logprob: -14.250171661376953
    9. ' -' → logprob: -15.000171661376953
    10. ']' → logprob: -15.062671661376953

Token 97: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.02072032168507576
    2. '-' → logprob: -3.8957202434539795
    3. ' -' → logprob: -8.895720481872559
    4. 'c' → logprob: -10.145720481872559
    5. ']' → logprob: -14.145720481872559
    6. ']-' → logprob: -14.895720481872559
    7. '-r' → logprob: -15.020720481872559
    8. '```' → logprob: -15.395720481872559
    9. '	c' → logprob: -16.020719528198242
    10. '-n' → logprob: -16.770719528198242

Token 98: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.015567016787827015
    2. ']' → logprob: -4.265566825866699
    3. '):' → logprob: -6.890566825866699
    4. ']:
' → logprob: -8.2655668258667
    5. ']):' → logprob: -9.3905668258667
    6. ':' → logprob: -10.6405668258667
    7. ')' → logprob: -11.8905668258667
    8. ']:
' → logprob: -12.7655668258667
    9. '])' → logprob: -13.0155668258667
    10. ' ]' → logprob: -13.2655668258667

Token 99: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012735074386000633
    2. '           ' → logprob: -4.762734889984131
    3. ':return' → logprob: -5.637734889984131
    4. ' return' → logprob: -8.387735366821289
    5. 'return' → logprob: -9.137735366821289
    6. ':' → logprob: -9.512735366821289
    7. '                   ' → logprob: -10.512735366821289
    8. '       ' → logprob: -10.887735366821289
    9. ':
' → logprob: -11.012735366821289
    10. '              ' → logprob: -11.012735366821289

Token 100: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7604212164878845
    2. 'return' (adapté à ' return') → logprob: -1.2604212760925293
    3. '               ' → logprob: -2.0104212760925293
    4. '                   ' → logprob: -2.2604212760925293
    5. '           ' → logprob: -4.760421276092529
    6. ':return' → logprob: -6.885421276092529
    7. '   ' → logprob: -8.135420799255371
    8. '	return' → logprob: -8.135420799255371
    9. '                       ' → logprob: -8.635420799255371
    10. '                ' → logprob: -9.635420799255371

Token 101: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. 'True' → logprob: -20.00002670288086
    4. '(False' → logprob: -21.12502670288086
    5. 'F' → logprob: -22.62502670288086
    6. '=False' → logprob: -23.25002670288086
    7. '_false' → logprob: -23.75002670288086
    8. '.False' → logprob: -24.00002670288086
    9. 'false' → logprob: -24.87502670288086
    10. 'FALSE' → logprob: -25.12502670288086

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032403396908193827
    2. '    
' → logprob: -6.37824010848999
    3. '	return' → logprob: -7.37824010848999
    4. '       ' → logprob: -7.75324010848999
    5. ':return' → logprob: -9.003240585327148
    6. '
' → logprob: -9.253240585327148
    7. ' return' → logprob: -9.253240585327148
    8. 'return' → logprob: -9.753240585327148
    9. '        
' → logprob: -10.503240585327148
    10. '<|end|>' → logprob: -10.753240585327148

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013472576392814517
    2. '       ' → logprob: -7.751347064971924
    3. ' return' → logprob: -8.001347541809082
    4. 'return' → logprob: -8.126347541809082
    5. '    
' → logprob: -9.001347541809082
    6. '	return' → logprob: -9.251347541809082
    7. ':return' → logprob: -10.751347541809082
    8. '        
' → logprob: -11.126347541809082
    9. '   ' → logprob: -11.751347541809082
    10. '
' → logprob: -12.376347541809082

Token 104: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2653673589229584
    2. ' return' → logprob: -1.6403673887252808
    3. 'return' (adapté à ' return') → logprob: -3.640367269515991
    4. ' 
' → logprob: -5.51536750793457
    5. '    
' → logprob: -6.14036750793457
    6. ':return' → logprob: -6.14036750793457
    7. '	return' → logprob: -6.76536750793457
    8. '
' → logprob: -6.76536750793457
    9. ' ' → logprob: -7.39036750793457
    10. '  ' → logprob: -7.64036750793457

Token 105: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868711292743683
    2. ' True' → logprob: -1.136871099472046
    3. '(True' → logprob: -16.511871337890625
    4. ' ' → logprob: -18.261871337890625
    5. ' ' → logprob: -18.761871337890625
    6. 'False' → logprob: -19.136871337890625
    7. '=True' → logprob: -20.761871337890625
    8. 'Tr' → logprob: -20.761871337890625
    9. ' Tru' → logprob: -20.886871337890625
    10. '   ' → logprob: -22.011871337890625

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'count' (ID: 5420)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.547302782535553
    2. 'if' → logprob: -1.6723027229309082
    3. 'for' → logprob: -1.7973027229309082
    4. 'while' → logprob: -3.297302722930908
    5. 'result' → logprob: -4.297302722930908
    6. 'answer' → logprob: -5.797302722930908
    7. 'count' → logprob: -6.297302722930908
    8. 'flip' → logprob: -6.547302722930908
    9. 'res' → logprob: -7.172302722930908
    10. 'M' → logprob: -7.297302722930908

Token 108: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07616124302148819
    2. '=' → logprob: -2.9511611461639404
    3. ' =' → logprob: -4.3261613845825195
    4. ' ' → logprob: -5.7011613845825195
    5. ' +=' → logprob: -6.2011613845825195
    6. '<|end|>' → logprob: -7.0761613845825195
    7. ' (' → logprob: -7.9511613845825195
    8. '+=' → logprob: -8.07616138458252
    9. '+' → logprob: -8.07616138458252
    10. ')' → logprob: -8.70116138458252

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001475220051361248
    2. ' ' → logprob: -8.875147819519043
    3. 'C' → logprob: -13.000147819519043
    4. '1' → logprob: -13.000147819519043
    5. 'sum' → logprob: -13.375147819519043
    6. 'int' → logprob: -15.000147819519043
    7. '4' → logprob: -15.687647819519043
    8. '2' → logprob: -15.750147819519043
    9. 'N' → logprob: -16.187646865844727
    10. '3' → logprob: -16.312646865844727

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11554752290248871
    2. ' for' → logprob: -2.6155474185943604
    3. '
' → logprob: -3.3655474185943604
    4. '<|end|>' → logprob: -6.6155476570129395
    5. ' 
' → logprob: -9.865547180175781
    6. 'if' → logprob: -11.115547180175781
    7. '\n' → logprob: -11.490547180175781
    8. 'range' → logprob: -12.115547180175781
    9. '```' → logprob: -12.115547180175781
    10. '<|end|>' → logprob: -12.865547180175781

Token 112: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16995160281658173
    2. ' C' → logprob: -1.9199515581130981
    3. 'C' → logprob: -5.419951438903809
    4. ' not' → logprob: -6.044951438903809
    5. 'is' → logprob: -6.294951438903809
    6. ' count' → logprob: -7.544951438903809
    7. ' (' → logprob: -8.544951438903809
    8. ' N' → logprob: -9.419951438903809
    9. ' ' → logprob: -9.669951438903809
    10. 'count' → logprob: -10.419951438903809

Token 113: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0006562008056789637
    2. '_' → logprob: -7.3756561279296875
    3. '_sym' → logprob: -10.500656127929688
    4. ' _' → logprob: -13.375656127929688
    5. 's' → logprob: -15.750656127929688
    6. '_possible' → logprob: -16.875656127929688
    7. ' symmetric' → logprob: -17.000656127929688
    8. '_pres' → logprob: -17.125656127929688
    9. '_c' → logprob: -17.250656127929688
    10. '__' → logprob: -17.250656127929688

Token 114: 'ymmetric' (ID: 49964)
  Prédit: 'ymmetric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ymmetric' → logprob: -0.0008188001229427755
    2. 'ym' → logprob: -7.375818729400635
    3. '```' → logprob: -10.000819206237793
    4. 'm' → logprob: -10.625819206237793
    5. 's' → logprob: -10.750819206237793
    6. 'ymm' → logprob: -10.875819206237793
    7. 'y' → logprob: -10.875819206237793
    8. 'em' → logprob: -11.250819206237793
    9. 'e' → logprob: -11.625819206237793
    10. 'ys' → logprob: -11.875819206237793

Token 115: '(image' (ID: 19974)
  Prédit: '(image'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(image' → logprob: -0.010805276222527027
    2. '(' → logprob: -4.635805130004883
    3. ' (' → logprob: -6.885805130004883
    4. '(
' → logprob: -11.885805130004883
    5. '(im' → logprob: -11.885805130004883
    6. '(img' → logprob: -12.510805130004883
    7. '(

' → logprob: -13.260805130004883
    8. 'image' → logprob: -13.385805130004883
    9. '(images' → logprob: -13.510805130004883
    10. '(Image' → logprob: -14.260805130004883

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024160840548574924
    2. ')' → logprob: -6.377416133880615
    3. ':' → logprob: -7.752416133880615
    4. '):
' → logprob: -8.377415657043457
    5. ' ):' → logprob: -10.127415657043457
    6. '():' → logprob: -11.877415657043457
    7. ':)' → logprob: -13.002415657043457
    8. '):

' → logprob: -13.877415657043457
    9. ')==' → logprob: -14.127415657043457
    10. ' and' → logprob: -14.377415657043457

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1889197826385498
    2. ' count' → logprob: -2.06391978263855
    3. 'count' → logprob: -3.68891978263855
    4. '
' → logprob: -4.188920021057129
    5. '	count' → logprob: -5.688920021057129
    6. '```' → logprob: -7.563920021057129
    7. '    
' → logprob: -7.688920021057129
    8. '\n' → logprob: -8.313920021057129
    9. ' print' → logprob: -8.813920021057129
    10. '``' → logprob: -9.938920021057129

Token 118: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.008860964328050613
    2. 'print' → logprob: -5.508861064910889
    3. ' count' → logprob: -5.758861064910889
    4. '   ' → logprob: -6.508861064910889
    5. 'for' → logprob: -9.50886058807373
    6. '
' → logprob: -11.00886058807373
    7. ' print' → logprob: -11.00886058807373
    8. ' for' → logprob: -11.88386058807373
    9. '	count' → logprob: -12.63386058807373
    10. '```' → logprob: -12.63386058807373

Token 119: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.015324840322136879
    2. '=' → logprob: -4.76532506942749
    3. ' +=' → logprob: -5.01532506942749
    4. '+' → logprob: -10.390324592590332
    5. ' =' → logprob: -10.890324592590332
    6. ']+=' → logprob: -13.515324592590332
    7. '+='' → logprob: -14.890324592590332
    8. '+="' → logprob: -15.140324592590332
    9. '+=(' → logprob: -15.390324592590332
    10. '-=' → logprob: -15.890324592590332

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005567280459217727
    2. 'C' → logprob: -7.625556945800781
    3. ' ' → logprob: -10.500556945800781
    4. '2' → logprob: -10.625556945800781
    5. 'N' → logprob: -12.625556945800781
    6. '0' → logprob: -12.875556945800781
    7. '3' → logprob: -12.875556945800781
    8. '4' → logprob: -13.000556945800781
    9. ' C' → logprob: -13.250556945800781
    10. '10' → logprob: -13.500556945800781

Token 121: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04935118928551674
    2. 'print' → logprob: -3.049351215362549
    3. 'else' → logprob: -7.924351215362549
    4. ' for' → logprob: -8.67435073852539
    5. 'while' → logprob: -9.42435073852539
    6. '
' → logprob: -9.92435073852539
    7. '   ' → logprob: -11.29935073852539
    8. 'answer' → logprob: -11.29935073852539
    9. '```' → logprob: -11.67435073852539
    10. 'row' → logprob: -11.92435073852539

Token 122: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005961624556221068
    2. 'while' → logprob: -8.750596046447754
    3. 'Q' → logprob: -9.125596046447754
    4. 'K' → logprob: -9.500596046447754
    5. 'M' → logprob: -9.750596046447754
    6. 'def' → logprob: -10.375596046447754
    7. 'from' → logprob: -10.625596046447754
    8. 'row' → logprob: -11.125596046447754
    9. 'print' → logprob: -11.125596046447754
    10. 'color' → logprob: -11.875596046447754

Token 123: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.28474345803260803
    2. ' i' → logprob: -1.4097434282302856
    3. '_' → logprob: -5.784743309020996
    4. ' ' → logprob: -8.284743309020996
    5. 'i' → logprob: -9.659743309020996
    6. '_i' → logprob: -9.659743309020996
    7. ' r' → logprob: -10.284743309020996
    8. ' idx' → logprob: -10.659743309020996
    9. ' row' → logprob: -11.034743309020996
    10. ' color' → logprob: -11.784743309020996

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006352011580020189
    2. 'in' → logprob: -5.131351947784424
    3. ' i' → logprob: -8.631352424621582
    4. ' ' → logprob: -8.631352424621582
    5. 'range' → logprob: -10.881352424621582
    6. ' _' → logprob: -11.631352424621582
    7. '  ' → logprob: -11.631352424621582
    8. 's' → logprob: -11.881352424621582
    9. 'space' → logprob: -12.131352424621582
    10. ' ' → logprob: -12.131352424621582

Token 125: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008623555302619934
    2. ' range' → logprob: -4.7586236000061035
    3. '(range' → logprob: -13.008623123168945
    4. '_' → logprob: -13.633623123168945
    5. 'rang' → logprob: -14.133623123168945
    6. '	range' → logprob: -14.133623123168945
    7. 'ange' → logprob: -14.258623123168945
    8. 'image' → logprob: -14.258623123168945
    9. ' ' → logprob: -14.508623123168945
    10. 'r' → logprob: -14.758623123168945

Token 126: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0028737038373947144
    2. '(' → logprob: -5.87787389755249
    3. ' (' → logprob: -10.002873420715332
    4. '(N' → logprob: -11.502873420715332
    5. ' C' → logprob: -12.002873420715332
    6. '(int' → logprob: -13.252873420715332
    7. 'C' → logprob: -13.502873420715332
    8. '(
' → logprob: -13.752873420715332
    9. '((' → logprob: -14.252873420715332
    10. '(c' → logprob: -14.877873420715332

Token 127: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41955769062042236
    2. '-' → logprob: -1.1695576906204224
    3. ' ):' → logprob: -3.919557571411133
    4. ' -' → logprob: -4.419557571411133
    5. ')' → logprob: -8.544557571411133
    6. '):
' → logprob: -10.294557571411133
    7. '+' → logprob: -11.544557571411133
    8. ' )' → logprob: -11.544557571411133
    9. ',' → logprob: -12.044557571411133
    10. '1' → logprob: -12.294557571411133

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -14.750075340270996
    4. ')' → logprob: -16.875076293945312
    5. '   ' → logprob: -17.625076293945312
    6. '１' → logprob: -17.875076293945312
    7. 'count' → logprob: -18.125076293945312
    8. '```' → logprob: -18.250076293945312
    9. '  ' → logprob: -18.437576293945312
    10. 'N' → logprob: -18.875076293945312

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03225696086883545
    2. ' ):' → logprob: -3.782257080078125
    3. '):
' → logprob: -4.782257080078125
    4. ':' → logprob: -7.907257080078125
    5. ' ):
' → logprob: -9.032257080078125
    6. ')' → logprob: -9.532257080078125
    7. ' :' → logprob: -11.282257080078125
    8. ',' → logprob: -11.657257080078125
    9. ' )' → logprob: -12.032257080078125
    10. '):
' → logprob: -12.907257080078125

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010437761375214905
    2. 'n' → logprob: -11.000103950500488
    3. '>' → logprob: -11.375103950500488
    4. '   ' → logprob: -11.500103950500488
    5. '    
' → logprob: -11.875103950500488
    6. ' image' → logprob: -12.125103950500488
    7. ' ind' → logprob: -12.375103950500488
    8. ',' → logprob: -12.625103950500488
    9. 'x' → logprob: -12.625103950500488
    10. '
' → logprob: -12.812603950500488

Token 131: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4658086597919464
    2. 'input' → logprob: -2.215808629989624
    3. ' input' → logprob: -2.340808629989624
    4. ' image' → logprob: -3.215808629989624
    5. 'N' → logprob: -3.465808629989624
    6. '_' → logprob: -3.840808629989624
    7. 'image' → logprob: -4.090808868408203
    8. ' N' → logprob: -4.840808868408203
    9. ' new' → logprob: -5.340808868408203
    10. 'n' → logprob: -5.340808868408203

Token 132: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6550927758216858
    2. ' =' → logprob: -1.030092716217041
    3. ',' → logprob: -3.280092716217041
    4. '=int' → logprob: -3.530092716217041
    5. '=input' → logprob: -3.655092716217041
    6. 'ata' → logprob: -5.030092716217041
    7. '=image' → logprob: -5.030092716217041
    8. '=[]' → logprob: -5.905092716217041
    9. ',i' → logprob: -6.280092716217041
    10. ' ' → logprob: -6.405092716217041

Token 133: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.2113979209971149e-05
    2. 'input' → logprob: -11.375012397766113
    3. '(' → logprob: -14.500012397766113
    4. '=input' → logprob: -17.375011444091797
    5. '(sys' → logprob: -18.125011444091797
    6. ' input' → logprob: -18.125011444091797
    7. '(int' → logprob: -18.500011444091797
    8. ' (' → logprob: -18.500011444091797
    9. '(
' → logprob: -18.750011444091797
    10. ',input' → logprob: -18.750011444091797

Token 134: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014152461662888527
    2. '()' → logprob: -4.514152526855469
    3. '())
' → logprob: -6.014152526855469
    4. ')' → logprob: -7.389152526855469
    5. '().' → logprob: -11.389152526855469
    6. '())

' → logprob: -11.764152526855469
    7. '())
' → logprob: -12.014152526855469
    8. '()
' → logprob: -12.014152526855469
    9. '();)' → logprob: -13.264152526855469
    10. '(' → logprob: -13.389152526855469

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014026345685124397
    2. ' for' → logprob: -5.764026165008545
    3. ' image' → logprob: -5.764026165008545
    4. 'image' → logprob: -5.889026165008545
    5. 'for' → logprob: -6.389026165008545
    6. ' new' → logprob: -7.389026165008545
    7. ' if' → logprob: -7.639026165008545
    8. 'new' → logprob: -8.139026641845703
    9. 'if' → logprob: -8.389026641845703
    10. '    
' → logprob: -8.514026641845703

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8801566958427429
    2. 'new' → logprob: -1.6301567554473877
    3. 'temp' → logprob: -2.3801567554473877
    4. 'image' → logprob: -2.6301567554473877
    5. ' for' → logprob: -2.8801567554473877
    6. 'if' → logprob: -3.1301567554473877
    7. ' new' → logprob: -3.6301567554473877
    8. 'rot' → logprob: -3.6301567554473877
    9. 'tmp' → logprob: -3.8801567554473877
    10. 'row' → logprob: -4.505156517028809

Token 137: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08043555915355682
    2. ' r' → logprob: -3.0804355144500732
    3. ' i' → logprob: -4.205435752868652
    4. '_' → logprob: -4.580435752868652
    5. 'r' → logprob: -5.330435752868652
    6. ' d' → logprob: -7.830435752868652
    7. 'i' → logprob: -8.830435752868652
    8. '_i' → logprob: -8.830435752868652
    9. ' __' → logprob: -9.080435752868652
    10. ' ' → logprob: -9.080435752868652

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0053886184468865395
    2. 'in' → logprob: -5.2553887367248535
    3. '_' → logprob: -9.255388259887695
    4. ' ' → logprob: -10.380388259887695
    5. 'r' → logprob: -11.505388259887695
    6. ' i' → logprob: -12.130388259887695
    7. ',' → logprob: -12.755388259887695
    8. ' _' → logprob: -12.880388259887695
    9. 'range' → logprob: -13.255388259887695
    10. 'd' → logprob: -13.630388259887695

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026311330497264862
    2. ' range' → logprob: -3.6513113975524902
    3. 'r' → logprob: -12.526310920715332
    4. '_' → logprob: -13.651310920715332
    5. 'rang' → logprob: -14.026310920715332
    6. '	range' → logprob: -14.026310920715332
    7. ' ' → logprob: -14.151310920715332
    8. '[' → logprob: -14.401310920715332
    9. '(range' → logprob: -14.401310920715332
    10. 're' → logprob: -14.901310920715332

Token 140: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.02535013109445572
    2. '(N' → logprob: -3.7753500938415527
    3. '(' → logprob: -6.650350093841553
    4. 'D' → logprob: -7.400350093841553
    5. 'N' → logprob: -10.275350570678711
    6. ' D' → logprob: -10.275350570678711
    7. '(C' → logprob: -10.275350570678711
    8. ' (' → logprob: -10.400350570678711
    9. '((' → logprob: -11.275350570678711
    10. '	D' → logprob: -11.275350570678711

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14309914410114288
    2. '):
' → logprob: -2.018099069595337
    3. ')' → logprob: -8.893098831176758
    4. '+' → logprob: -9.518098831176758
    5. ' ):' → logprob: -9.518098831176758
    6. '   ' → logprob: -9.768098831176758
    7. ':' → logprob: -10.518098831176758
    8. '):
' → logprob: -10.893098831176758
    9. ' ):
' → logprob: -11.643098831176758
    10. '*' → logprob: -12.143098831176758

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3927004337310791
    2. '   ' → logprob: -1.142700433731079
    3. ' image' → logprob: -5.8927001953125
    4. 'image' → logprob: -6.0177001953125
    5. 'a' → logprob: -9.5177001953125
    6. 'input' → logprob: -9.5802001953125
    7. '	image' → logprob: -10.0177001953125
    8. 'r' → logprob: -10.5802001953125
    9. ' code' → logprob: -10.7052001953125
    10. 'x' → logprob: -10.8302001953125

Token 143: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6760760545730591
    2. 'r' (adapté à ' r') → logprob: -1.551076054573059
    3. 'x' → logprob: -2.3010759353637695
    4. 'image' → logprob: -3.9260759353637695
    5. '_' → logprob: -4.1760759353637695
    6. ' r' → logprob: -4.1760759353637695
    7. ' image' → logprob: -4.1760759353637695
    8. '       ' → logprob: -4.3010759353637695
    9. ' x' → logprob: -4.4260759353637695
    10. 'line' → logprob: -4.8010759353637695

Token 144: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.1955767273902893
    2. ',' → logprob: -1.9455766677856445
    3. ' =' → logprob: -4.5705766677856445
    4. ',s' → logprob: -5.5705766677856445
    5. '=int' → logprob: -5.8205766677856445
    6. '=' → logprob: -5.9455766677856445
    7. ',w' → logprob: -6.3205766677856445
    8. ',n' → logprob: -6.5705766677856445
    9. ',a' → logprob: -6.6955766677856445
    10. ' ,' → logprob: -6.6955766677856445

Token 145: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5790886878967285
    2. ',x' → logprob: -1.5790886878967285
    3. ',v' → logprob: -1.8290886878967285
    4. '=' → logprob: -1.8290886878967285
    5. ',d' → logprob: -2.0790886878967285
    6. ' =' → logprob: -2.8290886878967285
    7. ',c' → logprob: -3.9540886878967285
    8. ',n' → logprob: -4.3290886878967285
    9. ',i' → logprob: -4.3290886878967285
    10. ',k' → logprob: -4.8290886878967285

Token 146: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009130131802521646
    2. ' map' → logprob: -7.000913143157959
    3. '	map' → logprob: -13.7509126663208
    4. 'list' → logprob: -15.5009126663208
    5. '(map' → logprob: -16.625913619995117
    6. '0' → logprob: -17.000913619995117
    7. '[' → logprob: -17.250913619995117
    8. 'm' → logprob: -17.250913619995117
    9. '
' → logprob: -17.500913619995117
    10. '    ' → logprob: -17.750913619995117

Token 147: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001394161517964676
    2. '(' → logprob: -9.125139236450195
    3. 'int' → logprob: -11.125139236450195
    4. '<int' → logprob: -11.875139236450195
    5. ',int' → logprob: -12.625139236450195
    6. '[int' → logprob: -13.250139236450195
    7. '=int' → logprob: -13.625139236450195
    8. '(lambda' → logprob: -14.125139236450195
    9. ' (' → logprob: -14.500139236450195
    10. '(
' → logprob: -15.125139236450195

Token 148: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0024881421122699976
    2. ',int' → logprob: -6.377488136291504
    3. ',' → logprob: -7.252488136291504
    4. '(input' → logprob: -9.627488136291504
    5. 'input' → logprob: -12.002488136291504
    6. ',(' → logprob: -13.752488136291504
    7. ',list' → logprob: -13.877488136291504
    8. ' ,' → logprob: -14.252488136291504
    9. '(int' → logprob: -14.252488136291504
    10. '(' → logprob: -14.252488136291504

Token 149: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.500000953674316
    3. '.' → logprob: -17.0
    4. '.split' → logprob: -17.875
    5. ' ().' → logprob: -17.875
    6. ')' → logprob: -18.0
    7. '(' → logprob: -18.0
    8. '())' → logprob: -19.75
    9. '().__' → logprob: -20.125
    10. '   ' → logprob: -20.125

Token 150: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.5
    3. ' split' → logprob: -17.125
    4. 'spl' → logprob: -17.625
    5. 'strip' → logprob: -18.0
    6. '(split' → logprob: -18.875
    7. 'plit' → logprob: -20.875
    8. '.split' → logprob: -21.0
    9. 's' → logprob: -22.875
    10. 'skip' → logprob: -23.5

Token 151: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04763748496770859
    2. '())' → logprob: -3.297637462615967
    3. '()' → logprob: -4.672637462615967
    4. '(' → logprob: -9.172637939453125
    5. ')
' → logprob: -9.922637939453125
    6. '))' → logprob: -10.797637939453125
    7. '())
' → logprob: -11.297637939453125
    8. ' )' → logprob: -12.672637939453125
    9. ')`' → logprob: -12.797637939453125
    10. '(),' → logprob: -13.422637939453125

Token 152: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06796911358833313
    2. '       ' → logprob: -3.4429690837860107
    3. '	image' → logprob: -3.9429690837860107
    4. 'image' → logprob: -4.81796932220459
    5. '	   ' → logprob: -6.31796932220459
    6. '   ' → logprob: -6.81796932220459
    7. ' image' → logprob: -7.06796932220459
    8. '[' → logprob: -7.81796932220459
    9. '<|end|>' → logprob: -7.81796932220459
    10. '    
' → logprob: -8.31796932220459

Token 153: ' r' (ID: 428)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' → logprob: -0.17683152854442596
    2. '       ' → logprob: -2.5518314838409424
    3. '   ' → logprob: -3.1768314838409424
    4. ' image' → logprob: -3.3018314838409424
    5. 'r' (adapté à ' r') → logprob: -5.3018317222595215
    6. ' r' → logprob: -8.301831245422363
    7. ' ' → logprob: -8.551831245422363
    8. '	image' → logprob: -9.176831245422363
    9. '           ' → logprob: -10.676831245422363
    10. '  ' → logprob: -10.801831245422363

Token 154: '-=' (ID: 77519)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20308148860931396
    2. '-=' → logprob: -1.703081488609314
    3. ' -=' → logprob: -6.4530816078186035
    4. ' -' → logprob: -10.453081130981445
    5. '=' → logprob: -11.328081130981445
    6. ',' → logprob: -11.578081130981445
    7. '[' → logprob: -11.953081130981445
    8. '	' → logprob: -12.328081130981445
    9. '<|end|>' → logprob: -12.328081130981445
    10. 's' → logprob: -12.578081130981445

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.0
    4. '<|end|>' → logprob: -18.125
    5. '```' → logprob: -19.0
    6. '１' → logprob: -19.875
    7. '2' → logprob: -20.3125
    8. '0' → logprob: -20.6875
    9. 'r' → logprob: -20.75
    10. '۱' → logprob: -20.8125

Token 156: ';' (ID: 26)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5599653124809265
    2. '       ' → logprob: -1.5599653720855713
    3. '   ' → logprob: -2.4349653720855713
    4. ',c' → logprob: -2.6849653720855713
    5. 'c' → logprob: -3.4349653720855713
    6. '	c' → logprob: -4.559965133666992
    7. '<|end|>' → logprob: -5.184965133666992
    8. ' c' → logprob: -5.309965133666992
    9. '           ' → logprob: -6.684965133666992
    10. '
' → logprob: -6.809965133666992

Token 157: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010211274639004841
    2. ' c' → logprob: -9.250102043151855
    3. '   ' → logprob: -12.125102043151855
    4. '       ' → logprob: -14.625102043151855
    5. '	c' → logprob: -17.000102996826172
    6. ' ' → logprob: -17.500102996826172
    7. '  ' → logprob: -18.000102996826172
    8. '           ' → logprob: -19.000102996826172
    9. ' ' → logprob: -19.375102996826172
    10. '    ' → logprob: -20.250102996826172

Token 158: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.09792394936084747
    2. '-' → logprob: -2.472923994064331
    3. ' -=' → logprob: -4.722923755645752
    4. '<|end|>' → logprob: -10.22292423248291
    5. '--' → logprob: -11.47292423248291
    6. ' -' → logprob: -13.22292423248291
    7. '–' → logprob: -13.22292423248291
    8. '=' → logprob: -13.59792423248291
    9. '<|end|>' → logprob: -14.09792423248291
    10. '--;' → logprob: -14.59792423248291

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '```' → logprob: -16.750003814697266
    6. '       ' → logprob: -17.937503814697266
    7. '0' → logprob: -18.125003814697266
    8. '-' → logprob: -18.437503814697266
    9. '           ' → logprob: -18.937503814697266
    10. '  ' → logprob: -19.000003814697266

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1023900955915451
    2. 'image' → logprob: -2.3523900508880615
    3. ' image' → logprob: -6.852390289306641
    4. '       ' → logprob: -6.977390289306641
    5. '	image' → logprob: -9.10239028930664
    6. '    
' → logprob: -10.47739028930664
    7. '   ' → logprob: -10.97739028930664
    8. '        
' → logprob: -11.97739028930664
    9. '```' → logprob: -12.35239028930664
    10. '
' → logprob: -12.72739028930664

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024816039949655533
    2. 'image' → logprob: -6.502481460571289
    3. '   ' → logprob: -7.002481460571289
    4. ' image' → logprob: -9.627481460571289
    5. '           ' → logprob: -14.002481460571289
    6. '	image' → logprob: -14.627481460571289
    7. '```' → logprob: -14.752481460571289
    8. '        
' → logprob: -14.752481460571289
    9. '	   ' → logprob: -15.002481460571289
    10. '	' → logprob: -15.252481460571289

Token 162: ' image' (ID: 3621)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'image' (adapté à ' image') → logprob: -1.1517960956552997e-05
    2. '       ' → logprob: -12.000011444091797
    3. '           ' → logprob: -12.875011444091797
    4. ' image' → logprob: -13.000011444091797
    5. '   ' → logprob: -15.375011444091797
    6. '	image' → logprob: -15.625011444091797
    7. 'if' → logprob: -17.000011444091797
    8. ' ' → logprob: -19.375011444091797
    9. 'img' → logprob: -19.750011444091797
    10. '        
' → logprob: -19.750011444091797

Token 163: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.000239536224398762
    2. '[c' → logprob: -8.375239372253418
    3. '[' → logprob: -11.875239372253418
    4. '[row' → logprob: -14.250239372253418
    5. '[t' → logprob: -15.000239372253418
    6. '\[' → logprob: -15.000239372253418
    7. 'r' → logprob: -15.375239372253418
    8. '[p' → logprob: -15.875239372253418
    9. '][' → logprob: -16.250240325927734
    10. '[[' → logprob: -17.125240325927734

Token 164: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015359772078227252
    2. '[c' → logprob: -9.250153541564941
    3. ']' → logprob: -9.875153541564941
    4. '[' → logprob: -13.000153541564941
    5. ' ][' → logprob: -13.500153541564941
    6. '"][' → logprob: -14.375153541564941
    7. ']=' → logprob: -15.000153541564941
    8. ']][' → logprob: -15.250153541564941
    9. '].' → logprob: -15.625153541564941
    10. ''][' → logprob: -15.750153541564941

Token 165: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.306760805164231e-05
    2. ' c' → logprob: -12.12501335144043
    3. '1' → logprob: -12.87501335144043
    4. '   ' → logprob: -13.62501335144043
    5. '           ' → logprob: -13.75001335144043
    6. 'N' → logprob: -14.00001335144043
    7. '       ' → logprob: -14.25001335144043
    8. '(c' → logprob: -14.75001335144043
    9. '[c' → logprob: -15.62501335144043
    10. ')c' → logprob: -15.62501335144043

Token 166: ']^' (ID: 144683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01184014417231083
    2. ' =' → logprob: -5.511840343475342
    3. '^' → logprob: -5.511840343475342
    4. ' ^=' → logprob: -5.636840343475342
    5. ')=' → logprob: -9.886839866638184
    6. ')' → logprob: -10.386839866638184
    7. ']=' → logprob: -10.761839866638184
    8. '=int' → logprob: -12.261839866638184
    9. '*=' → logprob: -12.386839866638184
    10. '1' → logprob: -12.511839866638184

Token 167: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.15310683415737e-05
    2. '1' → logprob: -10.750021934509277
    3. '=
' → logprob: -18.25002098083496
    4. '=True' → logprob: -19.25002098083496
    5. '=

' → logprob: -19.37502098083496
    6. '=int' → logprob: -21.50002098083496
    7. '='' → logprob: -21.50002098083496
    8. '=}' → logprob: -22.12502098083496
    9. '=`' → logprob: -22.25002098083496
    10. ' =' → logprob: -22.25002098083496

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '255' → logprob: -17.625001907348633
    5. '１' → logprob: -18.500001907348633
    6. '       ' → logprob: -19.250001907348633
    7. '۱' → logprob: -19.812501907348633
    8. '  ' → logprob: -20.187501907348633
    9. '-' → logprob: -20.437501907348633
    10. '१' → logprob: -20.562501907348633

Token 169: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002905920147895813
    2. 'if' → logprob: -6.12790584564209
    3. ' if' → logprob: -7.50290584564209
    4. '
' → logprob: -9.62790584564209
    5. '```' → logprob: -10.00290584564209
    6. ' ' → logprob: -10.25290584564209
    7. '    
' → logprob: -11.62790584564209
    8. '<|end|>' → logprob: -12.25290584564209
    9. '       ' → logprob: -12.75290584564209
    10. '  ' → logprob: -13.50290584564209

Token 171: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00021033499797340482
    2. '   ' → logprob: -8.750210762023926
    3. 'print' → logprob: -10.625210762023926
    4. ' if' → logprob: -10.750210762023926
    5. '```' → logprob: -12.250210762023926
    6. '
' → logprob: -14.125210762023926
    7. 'count' → logprob: -14.750210762023926
    8. '    
' → logprob: -16.62520980834961
    9. '``' → logprob: -16.87520980834961
    10. '`' → logprob: -18.37520980834961

Token 172: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003178901970386505
    2. 'is' → logprob: -5.75317907333374
    3. ' not' → logprob: -14.628178596496582
    4. ' ' → logprob: -14.878178596496582
    5. ' ' → logprob: -14.878178596496582
    6. 'not' → logprob: -17.6281795501709
    7. '	is' → logprob: -18.2531795501709
    8. '(is' → logprob: -19.5031795501709
    9. ' image' → logprob: -20.4406795501709
    10. '  ' → logprob: -20.8781795501709

Token 173: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.75000286102295
    3. 's' → logprob: -13.75000286102295
    4. ' _' → logprob: -15.00000286102295
    5. '_sym' → logprob: -15.00000286102295
    6. ' symmetric' → logprob: -17.750003814697266
    7. 'sym' → logprob: -18.250003814697266
    8. 'is' → logprob: -18.875003814697266
    9. '```' → logprob: -19.625003814697266
    10. ' ' → logprob: -20.500003814697266

Token 174: 'ymmetric' (ID: 49964)
  Prédit: 'ymmetric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ymmetric' → logprob: -0.00033999193692579865
    2. 's' → logprob: -8.875340461730957
    3. 'ym' → logprob: -9.375340461730957
    4. '```' → logprob: -10.500340461730957
    5. 'ymm' → logprob: -10.750340461730957
    6. 'm' → logprob: -11.000340461730957
    7. 'metric' → logprob: -11.375340461730957
    8. 'y' → logprob: -11.500340461730957
    9. '``' → logprob: -12.250340461730957
    10. '   ' → logprob: -12.500340461730957

Token 175: '(image' (ID: 19974)
  Prédit: '(image'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(image' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -15.250008583068848
    4. '(images' → logprob: -16.00000762939453
    5. '(img' → logprob: -18.37500762939453
    6. ',image' → logprob: -18.87500762939453
    7. '=image' → logprob: -19.00000762939453
    8. 'image' → logprob: -19.00000762939453
    9. '(im' → logprob: -19.12500762939453
    10. ' image' → logprob: -19.12500762939453

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04873361065983772
    2. '):
' → logprob: -3.048733711242676
    3. ')' → logprob: -9.048733711242676
    4. ':' → logprob: -10.548733711242676
    5. '):
' → logprob: -14.048733711242676
    6. ':
' → logprob: -14.548733711242676
    7. ' ):' → logprob: -14.798733711242676
    8. '):

' → logprob: -15.673733711242676
    9. ')==' → logprob: -15.673733711242676
    10. '   ' → logprob: -16.42373275756836

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015918228775262833
    2. '   ' → logprob: -4.390918254852295
    3. ' count' → logprob: -6.390918254852295
    4. 'count' → logprob: -6.890918254852295
    5. '
' → logprob: -7.390918254852295
    6. '	count' → logprob: -10.140917778015137
    7. '```' → logprob: -11.015917778015137
    8. '[count' → logprob: -11.890917778015137
    9. ',count' → logprob: -12.140917778015137
    10. '(count' → logprob: -12.765917778015137

Token 178: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0001370320824207738
    2. ' count' → logprob: -9.000137329101562
    3. '   ' → logprob: -11.250137329101562
    4. '       ' → logprob: -14.875137329101562
    5. '
' → logprob: -16.250137329101562
    6. '	count' → logprob: -16.500137329101562
    7. ' ' → logprob: -19.125137329101562
    8. '  ' → logprob: -19.875137329101562
    9. '_count' → logprob: -20.250137329101562
    10. '           ' → logprob: -20.250137329101562

Token 179: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00012070851516909897
    2. '+' → logprob: -9.125121116638184
    3. ']+=' → logprob: -11.625121116638184
    4. ' +=' → logprob: -13.875121116638184
    5. '```' → logprob: -14.250121116638184
    6. '+="' → logprob: -14.500121116638184
    7. '+=(' → logprob: -15.125121116638184
    8. '+='' → logprob: -15.125121116638184
    9. '++' → logprob: -16.375120162963867
    10. '[' → logprob: -18.000120162963867

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '１' → logprob: -19.0
    4. 'count' → logprob: -19.75
    5. '۱' → logprob: -19.8125
    6. '```' → logprob: -20.0
    7. '<|end|>' → logprob: -20.375
    8. '१' → logprob: -20.8125
    9. '১' → logprob: -21.0625
    10. '   ' → logprob: -21.25

Token 181: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006738699972629547
    2. '
' → logprob: -5.006738662719727
    3. ' print' → logprob: -11.131738662719727
    4. '<|end|>' → logprob: -12.381738662719727
    5. '
' → logprob: -13.756738662719727
    6. '

' → logprob: -13.881738662719727
    7. '```' → logprob: -14.131738662719727
    8. '    
' → logprob: -14.131738662719727
    9. '(print' → logprob: -15.381738662719727
    10. ' 
' → logprob: -15.506738662719727

Token 182: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.875
    3. ' print' → logprob: -15.875
    4. '```' → logprob: -20.375
    5. '(print' → logprob: -21.625
    6. '#print' → logprob: -21.75
    7. '
' → logprob: -23.625
    8. '  
' → logprob: -23.75
    9. '-print' → logprob: -23.75
    10. '\' → logprob: -24.0

Token 183: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.04858918860554695
    2. '(' → logprob: -3.0485892295837402
    3. '(c' → logprob: -15.048588752746582
    4. ' (' → logprob: -15.048588752746582
    5. '('' → logprob: -15.298588752746582
    6. '((' → logprob: -15.423588752746582
    7. '(cnt' → logprob: -15.548588752746582
    8. '(`' → logprob: -16.0485897064209
    9. '(
' → logprob: -16.2985897064209
    10. '(f' → logprob: -16.5485897064209

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. ')`' → logprob: -16.5
    4. ')
' → logprob: -19.0
    5. '),' → logprob: -19.75
    6. '))' → logprob: -19.75
    7. '```' → logprob: -20.0
    8. ')}' → logprob: -20.125
    9. ')#' → logprob: -20.25
    10. ')**' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 182
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 159
Précision stricte (1ère position): 51.10%
Précision adaptée (1ère position): 54.95%
Précision (top 10): 87.36%
================================================================================
