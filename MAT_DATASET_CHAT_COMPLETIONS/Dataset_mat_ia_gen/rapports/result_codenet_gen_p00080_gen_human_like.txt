================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    q = input()
    if q == '-1':
        break
    q = int(q)
    x = q / 2
    while True:
        diff = x**3 - q
        if abs(diff) < 0.00001 * q:
            break
        x = x - diff / (3 * x**2)
    print("{:.6f}".format(x))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. ' ' → logprob: -4.241925239562988
    4. '    ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24820508062839508
    2. '    ' → logprob: -1.8732050657272339
    3. '```' → logprob: -3.9982051849365234
    4. ' ' → logprob: -4.123205184936523
    5. '       ' → logprob: -4.123205184936523
    6. '    
' → logprob: -5.998205184936523
    7. '  ' → logprob: -6.373205184936523
    8. '\' → logprob: -6.498205184936523
    9. '\n' → logprob: -6.748205184936523
    10. '\t' → logprob: -6.748205184936523

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005587687250226736
    2. '.' → logprob: -6.005587577819824
    3. ':' → logprob: -6.255587577819824
    4. '=' → logprob: -8.255587577819824
    5. 'ue' → logprob: -8.380587577819824
    6. ' =' → logprob: -8.755587577819824
    7. '[' → logprob: -8.880587577819824
    8. 'uer' → logprob: -9.380587577819824
    9. '_' → logprob: -9.880587577819824
    10. '(' → logprob: -10.255587577819824

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.43960657715797424
    2. 'input' → logprob: -1.0646065473556519
    3. ' queue' → logprob: -5.564606666564941
    4. ' int' → logprob: -6.189606666564941
    5. ' q' → logprob: -6.314606666564941
    6. 'int' → logprob: -6.564606666564941
    7. 'q' → logprob: -7.814606666564941
    8. 'queue' → logprob: -7.939606666564941
    9. 'get' → logprob: -9.314606666564941
    10. ' get' → logprob: -9.439606666564941

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007254178053699434
    2. '('' → logprob: -8.000725746154785
    3. '("("' → logprob: -8.375725746154785
    4. ''' → logprob: -9.500725746154785
    5. ' (' → logprob: -11.125725746154785
    6. '(
' → logprob: -11.125725746154785
    7. '"' → logprob: -11.250725746154785
    8. '```' → logprob: -11.500725746154785
    9. ' ' → logprob: -11.750725746154785
    10. '`' → logprob: -12.250725746154785

Token 8: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4579697251319885
    2. '<|end|>' → logprob: -1.9579696655273438
    3. ' if' → logprob: -2.0829696655273438
    4. ')' → logprob: -4.082969665527344
    5. ' ==' → logprob: -4.332969665527344
    6. ',' → logprob: -4.457969665527344
    7. '   ' → logprob: -4.457969665527344
    8. ':' → logprob: -4.832969665527344
    9. ' =' → logprob: -4.957969665527344
    10. 'if' → logprob: -4.957969665527344

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3595069944858551
    2. ' ' → logprob: -1.7345069646835327
    3. '   ' → logprob: -2.4845070838928223
    4. 'if' (adapté à ' if') → logprob: -3.9845070838928223
    5. '    ' → logprob: -4.484507083892822
    6. '<|end|>' → logprob: -5.359507083892822
    7. '```' → logprob: -6.484507083892822
    8. '  ' → logprob: -6.609507083892822
    9. 'i' → logprob: -6.984507083892822
    10. ' i' → logprob: -7.484507083892822

Token 10: ' q' (ID: 2335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5472334027290344
    2. ' q' → logprob: -0.9222334027290344
    3. ' not' → logprob: -3.7972333431243896
    4. '  ' → logprob: -6.672233581542969
    5. 'q' → logprob: -9.672233581542969
    6. 'not' → logprob: -11.547233581542969
    7. ' len' → logprob: -11.797233581542969
    8. ' ' → logprob: -11.797233581542969
    9. ' (' → logprob: -12.547233581542969
    10. '   ' → logprob: -12.672233581542969

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016522491350769997
    2. '==' → logprob: -4.391522407531738
    3. '.' → logprob: -6.641522407531738
    4. ' ' → logprob: -6.891522407531738
    5. ' !=' → logprob: -7.516522407531738
    6. ' .' → logprob: -7.891522407531738
    7. ':' → logprob: -9.141522407531738
    8. '.strip' → logprob: -9.141522407531738
    9. '.startswith' → logprob: -9.141522407531738
    10. ')' → logprob: -9.516522407531738

Token 12: ' '-' (ID: 17489)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2523646950721741
    2. ''' → logprob: -1.5023646354675293
    3. ' "' → logprob: -8.377365112304688
    4. ' '' → logprob: -8.752365112304688
    5. ' ' → logprob: -10.752365112304688
    6. '""' → logprob: -12.377365112304688
    7. '''' → logprob: -12.377365112304688
    8. ''a' → logprob: -12.877365112304688
    9. '`' → logprob: -13.252365112304688
    10. ' a' → logprob: -13.939865112304688

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09300599247217178
    2. '-' → logprob: -2.593005895614624
    3. 'q' → logprob: -4.468006134033203
    4. 'h' → logprob: -7.843006134033203
    5. ' ' → logprob: -7.968006134033203
    6. 'quit' → logprob: -8.468006134033203
    7. 'e' → logprob: -9.093006134033203
    8. 'exit' → logprob: -9.093006134033203
    9. '-ex' → logprob: -9.218006134033203
    10. 'c' → logprob: -9.218006134033203

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.011293021030724049
    2. ''' → logprob: -4.511292934417725
    3. '':
' → logprob: -9.261293411254883
    4. ':' → logprob: -9.886293411254883
    5. '":' → logprob: -10.136293411254883
    6. ' ':' → logprob: -10.136293411254883
    7. ' '' → logprob: -12.011293411254883
    8. '':
' → logprob: -12.136293411254883
    9. '"' → logprob: -12.636293411254883
    10. ''):' → logprob: -13.636293411254883

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001269993488676846
    2. ' break' → logprob: -7.001269817352295
    3. ':' → logprob: -9.001270294189453
    4. '        ' → logprob: -9.876270294189453
    5. '    ' → logprob: -10.126270294189453
    6. '   ' → logprob: -10.501270294189453
    7. ' ' → logprob: -10.751270294189453
    8. '        
' → logprob: -11.001270294189453
    9. '      ' → logprob: -11.001270294189453
    10. '<|end|>' → logprob: -11.501270294189453

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.42934131622314453
    2. '       ' → logprob: -1.0543413162231445
    3. 'break' (adapté à ' break') → logprob: -7.8043413162231445
    4. '   ' → logprob: -9.054341316223145
    5. '           ' → logprob: -9.804341316223145
    6. '	break' → logprob: -10.429341316223145
    7. ' ' → logprob: -11.804341316223145
    8. '    ' → logprob: -12.429341316223145
    9. '\n' → logprob: -12.429341316223145
    10. '_break' → logprob: -12.679341316223145

Token 17: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.519142210483551
    2. '   ' → logprob: -1.6441421508789062
    3. '    
' → logprob: -3.2691421508789062
    4. '
' → logprob: -3.3941421508789062
    5. '<|end|>' → logprob: -3.5191421508789062
    6. '\n' → logprob: -3.6441421508789062
    7. ')' → logprob: -3.7691421508789062
    8. ' ' → logprob: -4.019142150878906
    9. '  
' → logprob: -4.644142150878906
    10. '\' → logprob: -5.269142150878906

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9393647313117981
    2. ' ' → logprob: -1.3143646717071533
    3. ':' → logprob: -2.1893646717071533
    4. '\n' → logprob: -3.0643646717071533
    5. 'print' → logprob: -3.3143646717071533
    6. '    
' → logprob: -3.4393646717071533
    7. '\' → logprob: -3.9393646717071533
    8. '
' → logprob: -4.314364910125732
    9. ')' → logprob: -4.439364910125732
    10. '#' → logprob: -4.564364910125732

Token 19: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11386825144290924
    2. 'print' → logprob: -3.613868236541748
    3. '\n' → logprob: -3.988868236541748
    4. ' ' → logprob: -4.363868236541748
    5. '    
' → logprob: -4.613868236541748
    6. '(' → logprob: -5.113868236541748
    7. ' print' → logprob: -5.488868236541748
    8. ')' → logprob: -5.488868236541748
    9. '[' → logprob: -5.738868236541748
    10. 'n' → logprob: -5.988868236541748

Token 20: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' int' (ID: 677)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6103014349937439
    2. ' int' → logprob: -1.1103014945983887
    3. 'int' → logprob: -2.6103014945983887
    4. 'q' → logprob: -3.2353014945983887
    5. ' list' → logprob: -4.735301494598389
    6. ' ' → logprob: -6.360301494598389
    7. 'list' → logprob: -6.610301494598389
    8. ' float' → logprob: -6.610301494598389
    9. 'float' → logprob: -8.23530101776123
    10. '[int' → logprob: -8.86030101776123

Token 22: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.2520252764225006
    2. '(' → logprob: -1.5020252466201782
    3. '(input' → logprob: -10.002025604248047
    4. '('' → logprob: -11.627025604248047
    5. '("("' → logprob: -11.627025604248047
    6. ' (' → logprob: -12.002025604248047
    7. '()' → logprob: -12.127025604248047
    8. '((' → logprob: -12.627025604248047
    9. '(open' → logprob: -13.252025604248047
    10. '(x' → logprob: -13.502025604248047

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2020991056924686e-05
    2. ' )' → logprob: -10.875032424926758
    3. '+' → logprob: -11.750032424926758
    4. ')
' → logprob: -13.375032424926758
    5. '   ' → logprob: -13.875032424926758
    6. '))' → logprob: -14.125032424926758
    7. '')' → logprob: -15.000032424926758
    8. ' ' → logprob: -15.500032424926758
    9. '`)' → logprob: -15.500032424926758
    10. ')+' → logprob: -15.625032424926758

Token 24: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.14704167842865
    2. ' ' → logprob: -1.89704167842865
    3. '   ' → logprob: -2.0220417976379395
    4. '<|end|>' → logprob: -2.5220417976379395
    5. '\n' → logprob: -3.1470417976379395
    6. ':' → logprob: -3.1470417976379395
    7. ')' → logprob: -3.3970417976379395
    8. '[' → logprob: -3.3970417976379395
    9. '\' → logprob: -3.5220417976379395
    10. ' if' → logprob: -3.5220417976379395

Token 25: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3912760615348816
    2. ' ' → logprob: -2.0162761211395264
    3. ' if' → logprob: -2.0162761211395264
    4. '[' → logprob: -4.516275882720947
    5. 'if' → logprob: -4.516275882720947
    6. '+' → logprob: -4.891275882720947
    7. ')' → logprob: -5.266275882720947
    8. '<|end|>' → logprob: -5.641275882720947
    9. ',' → logprob: -5.766275882720947
    10. ':' → logprob: -6.141275882720947

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.991247296333313
    2. ' +=' → logprob: -0.991247296333313
    3. '+=' → logprob: -2.7412471771240234
    4. '=' → logprob: -2.7412471771240234
    5. ' %' → logprob: -3.2412471771240234
    6. '**' → logprob: -3.4912471771240234
    7. '%' → logprob: -3.6162471771240234
    8. ' %=' → logprob: -4.616247177124023
    9. '+' → logprob: -5.366247177124023
    10. ',' → logprob: -5.616247177124023

Token 27: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.047532226890325546
    2. 'q' → logprob: -3.797532320022583
    3. ' ' → logprob: -4.422532081604004
    4. '0' → logprob: -5.547532081604004
    5. ' int' → logprob: -5.922532081604004
    6. ' input' → logprob: -6.422532081604004
    7. '1' → logprob: -6.922532081604004
    8. '2' → logprob: -7.547532081604004
    9. '10' → logprob: -8.297532081604004
    10. 'int' → logprob: -8.297532081604004

Token 28: ' /' (ID: 820)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.45690783858299255
    2. '%' → logprob: -1.331907868385315
    3. '+' → logprob: -2.5819077491760254
    4. ' +' → logprob: -4.581907749176025
    5. '*' → logprob: -5.206907749176025
    6. '**' → logprob: -5.581907749176025
    7. ' **' → logprob: -5.706907749176025
    8. ' *' → logprob: -5.706907749176025
    9. '>' → logprob: -8.581908226013184
    10. ' ' → logprob: -8.706908226013184

Token 29: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12146203964948654
    2. '10' → logprob: -3.371462106704712
    3. '3' → logprob: -3.496462106704712
    4. ' ' → logprob: -4.371461868286133
    5. '5' → logprob: -4.496461868286133
    6. '100' → logprob: -4.496461868286133
    7. '4' → logprob: -5.121461868286133
    8. '1' → logprob: -5.746461868286133
    9. '6' → logprob: -6.996461868286133
    10. '7' → logprob: -6.996461868286133

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24882932007312775
    2. '10' → logprob: -2.6238293647766113
    3. '3' → logprob: -2.8738293647766113
    4. '5' → logprob: -3.7488293647766113
    5. '100' → logprob: -3.7488293647766113
    6. '4' → logprob: -4.123829364776611
    7. '1' → logprob: -5.373829364776611
    8. '7' → logprob: -5.498829364776611
    9. ' ' → logprob: -5.998829364776611
    10. '6' → logprob: -6.123829364776611

Token 31: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4231637418270111
    2. '*' → logprob: -2.298163652420044
    3. '
' → logprob: -2.298163652420044
    4. '**' → logprob: -2.548163652420044
    5. ')' → logprob: -4.548163890838623
    6. '\n' → logprob: -4.673163890838623
    7. '<|end|>' → logprob: -4.798163890838623
    8. '.' → logprob: -5.048163890838623
    9. ' ' → logprob: -5.173163890838623
    10. ',' → logprob: -6.048163890838623

Token 32: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.982596218585968
    2. '*' → logprob: -1.9825961589813232
    3. '+' → logprob: -2.6075961589813232
    4. '\n' → logprob: -2.7325961589813232
    5. '<|end|>' → logprob: -2.9825961589813232
    6. '.' → logprob: -3.1075961589813232
    7. '   ' → logprob: -3.1075961589813232
    8. ')' → logprob: -3.4825961589813232
    9. ' ' → logprob: -3.7325961589813232
    10. '  
' → logprob: -3.8575961589813232

Token 33: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6824710965156555
    2. '+' → logprob: -2.4324710369110107
    3. ' if' → logprob: -2.5574710369110107
    4. ' ' → logprob: -2.5574710369110107
    5. 'if' → logprob: -3.0574710369110107
    6. '.' → logprob: -3.1824710369110107
    7. '*' → logprob: -3.3074710369110107
    8. 'print' → logprob: -3.5574710369110107
    9. ')' → logprob: -3.9324710369110107
    10. '**' → logprob: -4.43247127532959

Token 34: ' True' (ID: 6432)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020873278379440308
    2. 'x' → logprob: -4.645873069763184
    3. ' q' → logprob: -4.645873069763184
    4. ' ' → logprob: -7.145873069763184
    5. ' int' → logprob: -8.270873069763184
    6. 'q' → logprob: -9.520873069763184
    7. 'int' → logprob: -9.520873069763184
    8. ' not' → logprob: -9.895873069763184
    9. ' True' → logprob: -10.020873069763184
    10. ' (' → logprob: -10.395873069763184

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004403651691973209
    2. '<|end|>' → logprob: -6.004403591156006
    3. ':
' → logprob: -6.754403591156006
    4. '       ' → logprob: -7.879403591156006
    5. '   ' → logprob: -8.379404067993164
    6. ',' → logprob: -10.129404067993164
    7. '<|end|>' → logprob: -10.379404067993164
    8. '):' → logprob: -10.879404067993164
    9. ')' → logprob: -11.254404067993164
    10. '[' → logprob: -11.629404067993164

Token 36: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10118215531110764
    2. '    ' → logprob: -3.101182222366333
    3. '       ' → logprob: -3.976182222366333
    4. ' ' → logprob: -4.476181983947754
    5. '<|end|>' → logprob: -4.601181983947754
    6. ' x' → logprob: -5.726181983947754
    7. ' 
' → logprob: -6.101181983947754
    8. '    
' → logprob: -6.101181983947754
    9. ' if' → logprob: -6.976181983947754
    10. '  ' → logprob: -6.976181983947754

Token 37: ' diff' (ID: 8868)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.40579450130462646
    2. ' if' → logprob: -2.030794620513916
    3. '   ' → logprob: -2.155794620513916
    4. '    ' → logprob: -3.030794620513916
    5. 'x' → logprob: -3.655794620513916
    6. ' ' → logprob: -6.155794620513916
    7. '       ' → logprob: -6.280794620513916
    8. ' n' → logprob: -6.280794620513916
    9. 'n' → logprob: -6.530794620513916
    10. ' q' → logprob: -7.030794620513916

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014350008219480515
    2. '=' → logprob: -4.264349937438965
    3. '_' → logprob: -10.014349937438965
    4. ' >' → logprob: -10.639349937438965
    5. ' ' → logprob: -10.764349937438965
    6. '  ' → logprob: -11.014349937438965
    7. ' >=' → logprob: -11.139349937438965
    8. ' ==' → logprob: -11.389349937438965
    9. ' <=' → logprob: -11.389349937438965
    10. '   ' → logprob: -11.389349937438965

Token 39: ' x' (ID: 1215)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.9454970955848694
    2. ' x' → logprob: -1.4454970359802246
    3. 'abs' → logprob: -1.4454970359802246
    4. 'x' → logprob: -2.3204970359802246
    5. ' q' → logprob: -4.445497035980225
    6. 'int' → logprob: -4.945497035980225
    7. ' (' → logprob: -4.945497035980225
    8. 'q' → logprob: -5.195497035980225
    9. '(abs' → logprob: -5.945497035980225
    10. ' ' → logprob: -6.070497035980225

Token 40: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6569145321846008
    2. '*' → logprob: -0.7819145321846008
    3. ' *' → logprob: -4.156914710998535
    4. '*x' → logprob: -4.906914710998535
    5. ' **' → logprob: -7.031914710998535
    6. '-' → logprob: -10.656914710998535
    7. ' ' → logprob: -10.906914710998535
    8. 'x' → logprob: -11.906914710998535
    9. ' -' → logprob: -11.906914710998535
    10. '=' → logprob: -12.031914710998535

Token 41: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015387886669486761
    2. ' ' → logprob: -6.5015387535095215
    3. '   ' → logprob: -11.50153923034668
    4. '  ' → logprob: -12.12653923034668
    5. '**' → logprob: -12.25153923034668
    6. '3' → logprob: -12.37653923034668
    7. ' ' → logprob: -12.75153923034668
    8. '-' → logprob: -13.25153923034668
    9. '```' → logprob: -13.87653923034668
    10. '²' → logprob: -14.06403923034668

Token 42: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006020633969455957
    2. '-' → logprob: -5.131020545959473
    3. '<|end|>' → logprob: -10.256020545959473
    4. ' ' → logprob: -10.881020545959473
    5. ' ' → logprob: -11.381020545959473
    6. '+' → logprob: -11.881020545959473
    7. ' +' → logprob: -12.006020545959473
    8. '   ' → logprob: -12.756020545959473
    9. '    ' → logprob: -12.881020545959473
    10. '        ' → logprob: -13.381020545959473

Token 43: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14718283712863922
    2. ' q' → logprob: -2.0221829414367676
    3. '3' → logprob: -6.272182941436768
    4. ' ' → logprob: -6.647182941436768
    5. 'x' → logprob: -7.272182941436768
    6. '2' → logprob: -8.52218246459961
    7. '6' → logprob: -9.52218246459961
    8. ' x' → logprob: -9.64718246459961
    9. '1' → logprob: -9.89718246459961
    10. '	q' → logprob: -10.14718246459961

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21580682694911957
    2. '   ' → logprob: -2.840806722640991
    3. '       ' → logprob: -3.215806722640991
    4. 'if' (adapté à ' if') → logprob: -3.465806722640991
    5. ' abs' → logprob: -3.590806722640991
    6. 'abs' → logprob: -4.34080696105957
    7. '<|end|>' → logprob: -4.34080696105957
    8. ' ' → logprob: -5.46580696105957
    9. '    ' → logprob: -6.71580696105957
    10. 's' → logprob: -7.34080696105957

Token 47: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.01023432519286871
    2. ' ' → logprob: -5.010234355926514
    3. 'abs' → logprob: -5.760234355926514
    4. ' diff' → logprob: -8.260233879089355
    5. '  ' → logprob: -9.635233879089355
    6. 'diff' → logprob: -11.135233879089355
    7. '(abs' → logprob: -11.760233879089355
    8. ' ' → logprob: -12.385233879089355
    9. '   ' → logprob: -12.510233879089355
    10. '0' → logprob: -13.260233879089355

Token 48: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.004079828038811684
    2. '(' → logprob: -5.504079818725586
    3. ' (' → logprob: -14.004079818725586
    4. '(d' → logprob: -15.504079818725586
    5. '	diff' → logprob: -16.254079818725586
    6. ' diff' → logprob: -16.504079818725586
    7. 'diff' → logprob: -16.754079818725586
    8. ' ' → logprob: -17.379079818725586
    9. '(div' → logprob: -17.629079818725586
    10. '(
' → logprob: -17.754079818725586

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000600572966504842
    2. ')<' → logprob: -7.500600337982178
    3. ')<=' → logprob: -10.750600814819336
    4. ' )' → logprob: -11.000600814819336
    5. ' <' → logprob: -12.750600814819336
    6. '<' → logprob: -13.125600814819336
    7. ')>' → logprob: -13.375600814819336
    8. ')>=' → logprob: -13.875600814819336
    9. '/' → logprob: -14.750600814819336
    10. '）' → logprob: -14.750600814819336

Token 50: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11045292764902115
    2. '<' → logprob: -2.360452890396118
    3. ' <=' → logprob: -4.860453128814697
    4. ')' → logprob: -6.735453128814697
    5. '<=' → logprob: -6.985453128814697
    6. ' ' → logprob: -8.485452651977539
    7. '>' → logprob: -10.610452651977539
    8. ')<' → logprob: -10.985452651977539
    9. ')<=' → logprob: -11.110452651977539
    10. '<|end|>' → logprob: -11.360452651977539

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0251145102083683
    2. '0' → logprob: -4.4001145362854
    3. '1' → logprob: -4.4001145362854
    4. '10' → logprob: -8.525114059448242
    5. '=' → logprob: -10.150114059448242
    6. '>' → logprob: -12.775114059448242
    7. '  ' → logprob: -13.650114059448242
    8. ' (' → logprob: -13.712614059448242
    9. '(' → logprob: -14.150114059448242
    10. ' q' → logprob: -14.150114059448242

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4062754511833191
    2. '1' → logprob: -1.1562755107879639
    3. '10' → logprob: -4.531275272369385
    4. ' ' → logprob: -4.781275272369385
    5. '(' → logprob: -11.406275749206543
    6. 'e' → logprob: -12.031275749206543
    7. '5' → logprob: -12.093775749206543
    8. '-' → logprob: -12.093775749206543
    9. '.' → logprob: -12.156275749206543
    10. '   ' → logprob: -12.218775749206543

Token 53: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.180258191714529e-06
    2. ' .' → logprob: -13.000008583068848
    3. '1' → logprob: -13.250008583068848
    4. '001' → logprob: -13.500008583068848
    5. '**' → logprob: -14.625008583068848
    6. '000' → logprob: -15.000008583068848
    7. 'e' → logprob: -15.125008583068848
    8. '`.' → logprob: -15.125008583068848
    9. '0' → logprob: -15.750008583068848
    10. '```' → logprob: -15.750008583068848

Token 54: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1787065714597702
    2. '1' → logprob: -2.553706645965576
    3. '-' → logprob: -3.053706645965576
    4. '001' → logprob: -3.803706645965576
    5. '6' → logprob: -4.428706645965576
    6. '5' → logprob: -6.553706645965576
    7. '7' → logprob: -7.428706645965576
    8. '01' → logprob: -7.428706645965576
    9. '9' → logprob: -7.678706645965576
    10. '0' → logprob: -8.053706169128418

Token 55: '01' (ID: 2290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08684644848108292
    2. '001' → logprob: -2.961846351623535
    3. '01' → logprob: -3.586846351623535
    4. '000' → logprob: -5.586846351623535
    5. '5' → logprob: -12.086846351623535
    6. '005' → logprob: -12.211846351623535
    7. '05' → logprob: -12.461846351623535
    8. '```' → logprob: -13.336846351623535
    9. '2' → logprob: -13.399346351623535
    10. '00' → logprob: -13.711846351623535

Token 56: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007227989844977856
    2. ' :' → logprob: -7.625722885131836
    3. ':
' → logprob: -9.125722885131836
    4. ' or' → logprob: -9.250722885131836
    5. ' and' → logprob: -11.625722885131836
    6. ':return' → logprob: -11.750722885131836
    7. '):' → logprob: -12.625722885131836
    8. ',' → logprob: -12.750722885131836
    9. '   ' → logprob: -12.875722885131836
    10. '       ' → logprob: -13.500722885131836

Token 57: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6660188436508179
    2. ' q' → logprob: -0.7910188436508179
    3. 'abs' → logprob: -4.416018962860107
    4. ' abs' → logprob: -4.541018962860107
    5. 'x' → logprob: -5.291018962860107
    6. ' x' → logprob: -6.041018962860107
    7. '3' → logprob: -7.166018962860107
    8. ' ' → logprob: -7.666018962860107
    9. ' max' → logprob: -8.16601848602295
    10. '1' → logprob: -8.66601848602295

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006114243995398283
    2. ':
' → logprob: -5.2561140060424805
    3. '       ' → logprob: -7.3811140060424805
    4. ' or' → logprob: -8.88111400604248
    5. '   ' → logprob: -10.63111400604248
    6. ',' → logprob: -10.75611400604248
    7. ' and' → logprob: -11.00611400604248
    8. ':return' → logprob: -11.13111400604248
    9. '<|end|>' → logprob: -11.38111400604248
    10. '):' → logprob: -11.88111400604248

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04898722842335701
    2. '       ' → logprob: -3.0489871501922607
    3. ' break' → logprob: -8.92398738861084
    4. '   ' → logprob: -9.67398738861084
    5. '    ' → logprob: -9.92398738861084
    6. '        ' → logprob: -10.54898738861084
    7. '            ' → logprob: -10.67398738861084
    8. '     ' → logprob: -11.54898738861084
    9. '               ' → logprob: -11.67398738861084
    10. ':' → logprob: -11.79898738861084

Token 60: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08090469241142273
    2. ' break' → logprob: -3.205904722213745
    3. '           ' → logprob: -3.455904722213745
    4. 'break' (adapté à ' break') → logprob: -5.705904483795166
    5. '\n' → logprob: -7.205904483795166
    6. '   ' → logprob: -7.830904483795166
    7. '
' → logprob: -8.330904960632324
    8. '	break' → logprob: -8.580904960632324
    9. '               ' → logprob: -8.705904960632324
    10. '        
' → logprob: -9.330904960632324

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0480810403823853
    2. '       ' → logprob: -1.0480810403823853
    3. '<|end|>' → logprob: -1.5480810403823853
    4. '   ' → logprob: -2.7980809211730957
    5. '    
' → logprob: -4.923080921173096
    6. '\n' → logprob: -5.548080921173096
    7. '        
' → logprob: -5.673080921173096
    8. ')' → logprob: -5.923080921173096
    9. '<|end|>' → logprob: -6.423080921173096
    10. 'x' → logprob: -7.048080921173096

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28440526127815247
    2. '       ' → logprob: -1.53440523147583
    3. '<|end|>' → logprob: -3.78440523147583
    4. '   ' → logprob: -4.78440523147583
    5. '    
' → logprob: -8.409405708312988
    6. '        
' → logprob: -8.784405708312988
    7. '```' → logprob: -8.909405708312988
    8. '<|end|>' → logprob: -9.159405708312988
    9. 'x' → logprob: -9.534405708312988
    10. ' x' → logprob: -10.159405708312988

Token 63: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7633715867996216
    2. '       ' → logprob: -1.1383715867996216
    3. '    ' → logprob: -2.263371467590332
    4. '        ' → logprob: -3.263371467590332
    5. ' if' → logprob: -3.638371467590332
    6. '   ' → logprob: -4.013371467590332
    7. ' ' → logprob: -4.888371467590332
    8. 'x' (adapté à ' x') → logprob: -5.013371467590332
    9. ' elif' → logprob: -5.513371467590332
    10. '     ' → logprob: -6.513371467590332

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20835478603839874
    2. ' =' → logprob: -2.2083547115325928
    3. ' -=' → logprob: -2.7083547115325928
    4. '-=' → logprob: -4.583354949951172
    5. '-' → logprob: -7.708354949951172
    6. '*=' → logprob: -8.208354949951172
    7. ' *=' → logprob: -8.333354949951172
    8. ' -' → logprob: -9.208354949951172
    9. '+=' → logprob: -9.208354949951172
    10. ' +=' → logprob: -9.833354949951172

Token 65: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7082675695419312
    2. ' x' → logprob: -1.0832675695419312
    3. '(' → logprob: -2.4582676887512207
    4. ' (' → logprob: -2.7082676887512207
    5. '(x' → logprob: -4.333267688751221
    6. '((' → logprob: -5.958267688751221
    7. ' ((' → logprob: -7.583267688751221
    8. ' ' → logprob: -8.083267211914062
    9. '2' → logprob: -9.458267211914062
    10. '(((' → logprob: -10.083267211914062

Token 66: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22561898827552795
    2. ' -' → logprob: -1.6006189584732056
    3. '+' → logprob: -8.725619316101074
    4. ' +' → logprob: -11.100619316101074
    5. '_' → logprob: -12.225619316101074
    6. '-(' → logprob: -12.225619316101074
    7. '−' → logprob: -12.475619316101074
    8. '/' → logprob: -12.600619316101074
    9. ' ' → logprob: -12.725619316101074
    10. ' ' → logprob: -13.725619316101074

Token 67: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.47151389718055725
    2. 'diff' → logprob: -1.2215138673782349
    3. '(diff' → logprob: -2.5965139865875244
    4. ' (' → logprob: -5.221513748168945
    5. '(' → logprob: -7.346513748168945
    6. '	diff' → logprob: -8.096513748168945
    7. '((' → logprob: -9.471513748168945
    8. ' int' → logprob: -10.096513748168945
    9. ' ((' → logprob: -10.221513748168945
    10. '1' → logprob: -10.346513748168945

Token 68: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.37906408309936523
    2. ' /' → logprob: -1.6290640830993652
    3. '/(' → logprob: -2.1290640830993652
    4. ' /(' → logprob: -8.379064559936523
    5. '/
' → logprob: -8.879064559936523
    6. '   ' → logprob: -11.129064559936523
    7. ' /
' → logprob: -11.129064559936523
    8. '/x' → logprob: -11.379064559936523
    9. ' ' → logprob: -11.879064559936523
    10. ' ' → logprob: -13.254064559936523

Token 69: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.350386295001954e-05
    2. '(
' → logprob: -10.250073432922363
    3. ' (' → logprob: -10.750073432922363
    4. '3' → logprob: -11.125073432922363
    5. '((' → logprob: -14.000073432922363
    6. ' ' → logprob: -15.125073432922363
    7. '(

' → logprob: -15.625073432922363
    8. '(int' → logprob: -15.750073432922363
    9. '   ' → logprob: -16.00007438659668
    10. '\
' → logprob: -16.62507438659668

Token 70: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.026715682819485664
    2. '(' → logprob: -3.6517157554626465
    3. ' ' → logprob: -8.026715278625488
    4. '   ' → logprob: -10.151715278625488
    5. ' (' → logprob: -10.401715278625488
    6. '(
' → logprob: -12.026715278625488
    7. '  ' → logprob: -12.651715278625488
    8. '
' → logprob: -12.776715278625488
    9. '\
' → logprob: -13.901715278625488
    10. ')' → logprob: -14.026715278625488

Token 71: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01227417029440403
    2. '*' → logprob: -4.887274265289307
    3. '*x' → logprob: -5.387274265289307
    4. '*(' → logprob: -9.512273788452148
    5. '*q' → logprob: -12.387273788452148
    6. '   ' → logprob: -13.262273788452148
    7. ' ' → logprob: -13.512273788452148
    8. '*object' → logprob: -15.137273788452148
    9. '```' → logprob: -15.762273788452148
    10. '<|end|>' → logprob: -15.887273788452148

Token 72: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.025031039491295815
    2. ' x' → logprob: -3.900031089782715
    3. '(x' → logprob: -5.650031089782715
    4. ' (' → logprob: -7.150031089782715
    5. '(' → logprob: -9.525031089782715
    6. '   ' → logprob: -10.275031089782715
    7. '*x' → logprob: -10.525031089782715
    8. '<|end|>' → logprob: -11.025031089782715
    9. ' ' → logprob: -11.275031089782715
    10. ')' → logprob: -12.775031089782715

Token 73: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -5.717296517104842e-05
    2. '*' → logprob: -10.125057220458984
    3. ' **' → logprob: -11.000057220458984
    4. '```' → logprob: -15.875057220458984
    5. '2' → logprob: -16.000057220458984
    6. '*x' → logprob: -17.375057220458984
    7. '²' → logprob: -17.875057220458984
    8. '^' → logprob: -18.000057220458984
    9. ' ' → logprob: -18.125057220458984
    10. '**
' → logprob: -18.250057220458984

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.87501335144043
    3. '**' → logprob: -12.00001335144043
    4. '²' → logprob: -15.00001335144043
    5. '```' → logprob: -16.50001335144043
    6. ')' → logprob: -16.75001335144043
    7. '^' → logprob: -17.37501335144043
    8. '
' → logprob: -18.25001335144043
    9. '   ' → logprob: -18.37501335144043
    10. '    ' → logprob: -18.75001335144043

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067240106873214245
    2. ')
' → logprob: -5.006723880767822
    3. ' )' → logprob: -12.38172435760498
    4. ')

' → logprob: -13.00672435760498
    5. ')
' → logprob: -13.63172435760498
    6. '<|end|>' → logprob: -15.00672435760498
    7. '   ' → logprob: -15.13172435760498
    8. ' )
' → logprob: -15.50672435760498
    9. ')#' → logprob: -17.381723403930664
    10. '```' → logprob: -17.631723403930664

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023536499589681625
    2. ' print' → logprob: -4.148536682128906
    3. '   ' → logprob: -4.898536682128906
    4. '```' → logprob: -11.273536682128906
    5. '
' → logprob: -13.148536682128906
    6. '	print' → logprob: -14.398536682128906
    7. '    
' → logprob: -14.898536682128906
    8. '<|end|>' → logprob: -15.523536682128906
    9. ' ' → logprob: -15.648536682128906
    10. '(print' → logprob: -15.648536682128906

Token 78: '("{' (ID: 29673)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7521404027938843
    2. '(round' → logprob: -1.0021404027938843
    3. '(int' → logprob: -2.002140522003174
    4. '(' → logprob: -4.127140522003174
    5. '(f' → logprob: -4.627140522003174
    6. '('{' → logprob: -8.752140045166016
    7. '(format' → logprob: -9.252140045166016
    8. '("{' → logprob: -9.377140045166016
    9. '('' → logprob: -9.752140045166016
    10. 'round' → logprob: -9.877140045166016

Token 79: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.00827743485569954
    2. '0' → logprob: -5.008277416229248
    3. ':' → logprob: -6.508277416229248
    4. '.' → logprob: -9.758277893066406
    5. '}' → logprob: -12.383277893066406
    6. ':x' → logprob: -12.633277893066406
    7. 'x' → logprob: -13.758277893066406
    8. 'value' → logprob: -14.133277893066406
    9. '}".' → logprob: -14.508277893066406
    10. ':+' → logprob: -15.133277893066406

Token 80: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1038360521197319
    2. '6' → logprob: -2.4788360595703125
    3. '4' → logprob: -5.2288360595703125
    4. '7' → logprob: -5.4788360595703125
    5. '3' → logprob: -6.1038360595703125
    6. '8' → logprob: -6.8538360595703125
    7. '10' → logprob: -7.1038360595703125
    8. '9' → logprob: -7.4788360595703125
    9. '2' → logprob: -8.478836059570312
    10. '15' → logprob: -9.228836059570312

Token 81: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2664456789934775e-06
    2. 'e' → logprob: -14.500000953674316
    3. 'g' → logprob: -15.000000953674316
    4. '}' → logprob: -15.625000953674316
    5. '%' → logprob: -16.625001907348633
    6. ' f' → logprob: -16.625001907348633
    7. '```' → logprob: -16.625001907348633
    8. '
' → logprob: -17.500001907348633
    9. '	f' → logprob: -18.500001907348633
    10. '"' → logprob: -18.875001907348633

Token 82: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.00013905855303164572
    2. '}' → logprob: -9.250139236450195
    3. '}")' → logprob: -10.750139236450195
    4. '".' → logprob: -11.375139236450195
    5. '}"' → logprob: -12.125139236450195
    6. '}'.' → logprob: -12.625139236450195
    7. '}.' → logprob: -14.750139236450195
    8. '}",' → logprob: -15.500139236450195
    9. '"}' → logprob: -15.500139236450195
    10. ')' → logprob: -16.125139236450195

Token 83: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.5048530030981055e-06
    2. ' format' → logprob: -14.125001907348633
    3. '	format' → logprob: -14.500001907348633
    4. '(format' → logprob: -16.125001907348633
    5. '.format' → logprob: -17.875001907348633
    6. 'ormat' → logprob: -17.875001907348633
    7. 'forma' → logprob: -18.250001907348633
    8. 'form' → logprob: -18.375001907348633
    9. '=format' → logprob: -18.500001907348633
    10. '6' → logprob: -18.500001907348633

Token 84: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0018528391374275088
    2. '(' → logprob: -6.376852989196777
    3. ')' → logprob: -9.251852989196777
    4. ')(' → logprob: -11.001852989196777
    5. ')x' → logprob: -11.251852989196777
    6. ' (' → logprob: -11.626852989196777
    7. '<|end|>' → logprob: -11.876852989196777
    8. '(abs' → logprob: -13.126852989196777
    9. '(
' → logprob: -13.626852989196777
    10. ' x' → logprob: -13.751852989196777

Token 85: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1002146452665329
    2. ')' → logprob: -2.350214719772339
    3. ')))' → logprob: -12.475214958190918
    4. '))
' → logprob: -12.600214958190918
    5. ' ))' → logprob: -15.225214958190918
    6. ')
' → logprob: -15.475214958190918
    7. ' )' → logprob: -16.2252140045166
    8. ')}' → logprob: -16.3502140045166
    9. ')")' → logprob: -17.2252140045166
    10. ''))' → logprob: -17.3502140045166


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 45.78%
Précision adaptée (1ère position): 46.99%
Précision (top 10): 84.34%
================================================================================
