================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def decimal_to_binary_limited(n):
    """
    Convert a decimal number to binary string with constraints:
    - Integer part: max 8 bits
    - Fractional part: max 4 bits
    If conversion does not fit in these constraints, return 'NA'.
    """
    # Split integer and fractional parts
    integer_part = int(n)
    fractional_part = abs(n - integer_part)

    # Convert integer part to binary without leading '0b'
    int_bin = bin(integer_part)[2:]

    # Check integer part length constraint
    if len(int_bin) > 8:
        return "NA"

    # Pad integer part to 8 bits with leading zeros
    int_bin = int_bin.zfill(8)

    # Convert fractional part to binary with 4 fractional bits max
    frac_bin = []
    frac = fractional_part
    for _ in range(4):
        frac *= 2
        bit = int(frac)
        frac_bin.append(str(bit))
        frac -= bit

    # Check if fractional part is exact within 4 bits: frac should be 0
    # If not, output 'NA'
    if frac > 0.0000001:  # small tolerance for floating-point imprecision
        return "NA"

    frac_bin_str = "".join(frac_bin)

    return int_bin + "." + frac_bin_str


def main():
    import sys

    for line in sys.stdin:
        line = line.strip()
        if line == "":
            continue

        # Parse input number as float
        try:
            n = float(line)
        except ValueError:
            # invalid input line, skip
            continue

        # Stop input on negative number
        if n < 0:
            break

        # Convert and print result
        result = decimal_to_binary_limited(n)
        print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' decimal' (ID: 26964)
  → Token d'amorce (pas de prédiction)

Token 2: '_to' (ID: 5089)
  → Token d'amorce (pas de prédiction)

Token 3: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -0.18782342970371246
    2. '_string' → logprob: -2.062823534011841
    3. '_' → logprob: -4.062823295593262
    4. '_bin' → logprob: -4.937823295593262
    5. '_int' → logprob: -5.437823295593262
    6. '_str' → logprob: -5.687823295593262
    7. 'string' → logprob: -6.062823295593262
    8. '_hex' → logprob: -6.187823295593262
    9. '_float' → logprob: -6.437823295593262
    10. 'binary' → logprob: -6.687823295593262

Token 4: '_l' (ID: 1478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020641377195715904
    2. '_' → logprob: -7.002064228057861
    3. '(:' → logprob: -7.752064228057861
    4. '```' → logprob: -8.127063751220703
    5. '(_:' → logprob: -8.627063751220703
    6. '():' → logprob: -9.127063751220703
    7. '_:' → logprob: -10.502063751220703
    8. '(_' → logprob: -10.877063751220703
    9. ':' → logprob: -11.127063751220703
    10. '(x' → logprob: -11.627063751220703

Token 5: 'imited' (ID: 74176)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023500990122556686
    2. 'o' → logprob: -5.148500919342041
    3. 'i' → logprob: -5.398500919342041
    4. 'ist' → logprob: -5.398500919342041
    5. '(i' → logprob: -5.523500919342041
    6. 'f' → logprob: -6.898500919342041
    7. '(:' → logprob: -7.023500919342041
    8. '_' → logprob: -8.0235013961792
    9. '(_' → logprob: -8.1485013961792
    10. '(_:' → logprob: -8.2735013961792

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00302869058214128
    2. '_' → logprob: -6.628028869628906
    3. '(_:' → logprob: -7.628028869628906
    4. '(_' → logprob: -8.003028869628906
    5. '(:' → logprob: -8.253028869628906
    6. '```' → logprob: -8.878028869628906
    7. '():' → logprob: -9.378028869628906
    8. ' (' → logprob: -10.128028869628906
    9. '_:' → logprob: -10.253028869628906
    10. '_parent' → logprob: -10.253028869628906

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4809984862804413
    2. ',' → logprob: -0.9809985160827637
    3. ')' → logprob: -5.230998516082764
    4. ':' → logprob: -6.605998516082764
    5. ' ,' → logprob: -9.855998039245605
    6. ',n' → logprob: -10.605998039245605
    7. '```' → logprob: -10.605998039245605
    8. ' ' → logprob: -11.480998039245605
    9. '):
' → logprob: -11.730998039245605
    10. '[' → logprob: -11.855998039245605

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03188083693385124
    2. '   ' → logprob: -3.6568808555603027
    3. '```' → logprob: -5.281880855560303
    4. '():' → logprob: -9.281880378723145
    5. ':
' → logprob: -9.781880378723145
    6. ' :' → logprob: -9.906880378723145
    7. ' if' → logprob: -9.906880378723145
    8. '``' → logprob: -10.656880378723145
    9. '    
' → logprob: -10.781880378723145
    10. ' ' → logprob: -10.906880378723145

Token 9: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5831928849220276
    2. '   ' → logprob: -1.2081928253173828
    3. ''' → logprob: -2.958192825317383
    4. '`' → logprob: -3.708192825317383
    5. ' ' → logprob: -3.958192825317383
    6. '"' → logprob: -4.083192825317383
    7. ' if' → logprob: -4.458192825317383
    8. '    ' → logprob: -5.333192825317383
    9. '``' → logprob: -5.708192825317383
    10. '"""' → logprob: -6.458192825317383

Token 10: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9876567125320435
    2. '   ' → logprob: -1.6126567125320435
    3. ' Converts' → logprob: -1.6126567125320435
    4. 'Convert' → logprob: -2.987656593322754
    5. ' converts' → logprob: -3.237656593322754
    6. ' """' → logprob: -3.737656593322754
    7. ''''' → logprob: -3.862656593322754
    8. '"""
' → logprob: -3.987656593322754
    9. 'i' → logprob: -4.112656593322754
    10. 'c' → logprob: -4.487656593322754

Token 11: ' Convert' (ID: 15629)
  Prédit: 'Convert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Convert' (adapté à ' Convert') → logprob: -0.38777387142181396
    2. 'Con' → logprob: -1.137773871421814
    3. '"""' → logprob: -8.012773513793945
    4. 'C' → logprob: -8.387773513793945
    5. ' Converts' → logprob: -9.137773513793945
    6. '   ' → logprob: -9.762773513793945
    7. '"""
' → logprob: -9.762773513793945
    8. 'Returns' → logprob: -10.387773513793945
    9. 'Return' → logprob: -10.387773513793945
    10. ' Convert' → logprob: -10.762773513793945

Token 12: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11718865483999252
    2. ' n' → logprob: -2.6171886920928955
    3. ' the' → logprob: -3.9921886920928955
    4. ' decimal' → logprob: -4.742188453674316
    5. 'n' → logprob: -5.367188453674316
    6. ' an' → logprob: -5.867188453674316
    7. ' number' → logprob: -6.117188453674316
    8. 'decimal' → logprob: -8.367188453674316
    9. ' ' → logprob: -8.867188453674316
    10. ' to' → logprob: -9.367188453674316

Token 13: ' decimal' (ID: 26964)
  Prédit: ' decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decimal' → logprob: -0.28800857067108154
    2. ' number' → logprob: -1.7880085706710815
    3. 'decimal' → logprob: -3.038008689880371
    4. ' ' → logprob: -4.163008689880371
    5. 'n' → logprob: -4.913008689880371
    6. ' given' → logprob: -5.413008689880371
    7. ' n' → logprob: -5.538008689880371
    8. ' positive' → logprob: -6.663008689880371
    9. ' integer' → logprob: -6.913008689880371
    10. 'number' → logprob: -7.538008689880371

Token 14: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5281610488891602
    2. ' ' → logprob: -1.6531610488891602
    3. ' to' → logprob: -1.7781610488891602
    4. '_to' → logprob: -4.27816104888916
    5. ' _' → logprob: -4.77816104888916
    6. '   ' → logprob: -5.27816104888916
    7. ' number' → logprob: -5.40316104888916
    8. ' )' → logprob: -5.90316104888916
    9. '  ' → logprob: -6.15316104888916
    10. ''' → logprob: -6.40316104888916

Token 15: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04107127711176872
    2. 'to' → logprob: -3.9160711765289307
    3. '   ' → logprob: -4.29107141494751
    4. ' into' → logprob: -6.04107141494751
    5. ' ' → logprob: -6.41607141494751
    6. '```' → logprob: -6.91607141494751
    7. ''' → logprob: -7.41607141494751
    8. '  ' → logprob: -8.041070938110352
    9. '_to' → logprob: -8.666070938110352
    10. '    ' → logprob: -9.166070938110352

Token 16: ' binary' (ID: 15600)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9800435304641724
    2. ' its' → logprob: -1.1050435304641724
    3. ' binary' → logprob: -1.2300435304641724
    4. 'a' → logprob: -7.980043411254883
    5. 'binary' → logprob: -8.105043411254883
    6. ' an' → logprob: -8.605043411254883
    7. ' ' → logprob: -8.730043411254883
    8. 'its' → logprob: -8.980043411254883
    9. '_binary' → logprob: -10.730043411254883
    10. ' the' → logprob: -10.980043411254883

Token 17: ' string' (ID: 1621)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7695410251617432
    2. '```' → logprob: -1.3945410251617432
    3. ' with' → logprob: -2.394541025161743
    4. ',' → logprob: -2.519541025161743
    5. ' ' → logprob: -4.144540786743164
    6. '.' → logprob: -4.644540786743164
    7. '"""' → logprob: -5.019540786743164
    8. ' (' → logprob: -5.019540786743164
    9. 'string' → logprob: -5.269540786743164
    10. '`' → logprob: -5.394540786743164

Token 18: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25828975439071655
    2. ',' → logprob: -2.5082898139953613
    3. '```' → logprob: -2.8832898139953613
    4. ' with' → logprob: -3.1332898139953613
    5. '.' → logprob: -3.8832898139953613
    6. '`' → logprob: -6.008289813995361
    7. ':' → logprob: -6.008289813995361
    8. ' without' → logprob: -6.383289813995361
    9. ' and' → logprob: -6.383289813995361
    10. ' ' → logprob: -6.383289813995361

Token 19: ' constraints' (ID: 31060)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.49818459153175354
    2. ' limited' → logprob: -1.1231845617294312
    3. ' up' → logprob: -4.123184680938721
    4. 'a' → logprob: -4.248184680938721
    5. ' limitation' → logprob: -4.998184680938721
    6. 'limited' → logprob: -5.123184680938721
    7. ' the' → logprob: -5.248184680938721
    8. ' limit' → logprob: -5.248184680938721
    9. 'out' → logprob: -5.998184680938721
    10. ' an' → logprob: -6.123184680938721

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9067100882530212
    2. '```' → logprob: -0.9067100882530212
    3. '   ' → logprob: -3.031710147857666
    4. '.' → logprob: -3.531710147857666
    5. '(' → logprob: -3.781710147857666
    6. ' (' → logprob: -4.031710147857666
    7. 'def' → logprob: -4.531710147857666
    8. ',' → logprob: -4.656710147857666
    9. ' that' → logprob: -5.031710147857666
    10. '(n' → logprob: -5.406710147857666

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7796465754508972
    2. '   ' → logprob: -1.404646635055542
    3. ' )' → logprob: -2.654646635055542
    4. ')' → logprob: -3.154646635055542
    5. '```' → logprob: -3.154646635055542
    6. ' """' → logprob: -3.279646635055542
    7. '"""' → logprob: -3.404646635055542
    8. ' """
' → logprob: -3.904646635055542
    9. '    ' → logprob: -4.279646396636963
    10. ''' → logprob: -4.904646396636963

Token 22: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12149908393621445
    2. '"""' → logprob: -3.2464990615844727
    3. ' """
' → logprob: -4.121499061584473
    4. ' """' → logprob: -4.746499061584473
    5. ' if' → logprob: -4.996499061584473
    6. '"""
' → logprob: -5.121499061584473
    7. ' ' → logprob: -5.246499061584473
    8. ' The' → logprob: -5.371499061584473
    9. ' only' → logprob: -5.371499061584473
    10. ' Maximum' → logprob: -5.746499061584473

Token 23: ' Integer' (ID: 6611)
  Prédit: ' The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.619627058506012
    2. 'The' → logprob: -2.244626998901367
    3. ' no' → logprob: -3.244626998901367
    4. ' No' → logprob: -3.369626998901367
    5. ' length' → logprob: -3.494626998901367
    6. ' the' → logprob: -3.619626998901367
    7. ' binary' → logprob: -3.619626998901367
    8. ' maximum' → logprob: -3.744626998901367
    9. ' max' → logprob: -3.994626998901367
    10. ' Maximum' → logprob: -3.994626998901367

Token 24: ' part' (ID: 997)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.8623208999633789
    2. ' input' → logprob: -1.487320899963379
    3. ' ' → logprob: -1.862320899963379
    4. '   ' → logprob: -3.862320899963379
    5. ' only' → logprob: -3.987320899963379
    6. '```' → logprob: -4.112320899963379
    7. ',' → logprob: -4.237320899963379
    8. ' to' → logprob: -4.237320899963379
    9. 's' → logprob: -4.737320899963379
    10. 'inputs' → logprob: -4.862320899963379

Token 25: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9547494053840637
    2. ' must' → logprob: -1.829749345779419
    3. ' is' → logprob: -2.079749345779419
    4. ' =' → logprob: -3.079749345779419
    5. ' can' → logprob: -3.079749345779419
    6. ',' → logprob: -3.454749345779419
    7. '   ' → logprob: -3.454749345779419
    8. ' converted' → logprob: -3.829749345779419
    9. '=' → logprob: -3.954749345779419
    10. ' only' → logprob: -4.204749584197998

Token 26: ' max' (ID: 2999)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.8585641980171204
    2. ' maximum' → logprob: -2.3585641384124756
    3. '1' → logprob: -2.6085641384124756
    4. ' no' → logprob: -2.7335641384124756
    5. ' max' → logprob: -2.9835641384124756
    6. ' at' → logprob: -3.3585641384124756
    7. '4' → logprob: -3.6085641384124756
    8. ' ' → logprob: -3.7335641384124756
    9. '5' → logprob: -3.8585641384124756
    10. '8' → logprob: -3.8585641384124756

Token 27: ' ' (ID: 220)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.15635035932064056
    2. ' ' → logprob: -2.4063503742218018
    3. ' of' → logprob: -4.156350135803223
    4. 'length' → logprob: -4.656350135803223
    5. '4' → logprob: -5.031350135803223
    6. '3' → logprob: -5.406350135803223
    7. '10' → logprob: -6.156350135803223
    8. '32' → logprob: -6.281350135803223
    9. '6' → logprob: -6.656350135803223
    10. '5' → logprob: -6.656350135803223

Token 28: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.6033112406730652
    2. '10' → logprob: -1.85331130027771
    3. '7' → logprob: -2.22831130027771
    4. '6' → logprob: -2.35331130027771
    5. '5' → logprob: -3.47831130027771
    6. '16' → logprob: -3.85331130027771
    7. '4' → logprob: -4.228311061859131
    8. '9' → logprob: -4.728311061859131
    9. '12' → logprob: -5.103311061859131
    10. '15' → logprob: -5.478311061859131

Token 29: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.0347561240196228
    2. 'bits' → logprob: -3.5347561836242676
    3. ' digits' → logprob: -5.784756183624268
    4. '_bits' → logprob: -7.159756183624268
    5. ' bit' → logprob: -8.28475570678711
    6. '-b' → logprob: -8.53475570678711
    7. ' characters' → logprob: -8.53475570678711
    8. '-bit' → logprob: -8.90975570678711
    9. '0' → logprob: -9.90975570678711
    10. 'bit' → logprob: -10.03475570678711

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11153004318475723
    2. '\n' → logprob: -2.611530065536499
    3. '
' → logprob: -3.736530065536499
    4. '"""
' → logprob: -5.98652982711792
    5. '\' → logprob: -6.86152982711792
    6. '    
' → logprob: -7.23652982711792
    7. '"""' → logprob: -7.23652982711792
    8. ')' → logprob: -7.23652982711792
    9. 'def' → logprob: -7.36152982711792
    10. ',' → logprob: -7.73652982711792

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5484710931777954
    2. '\n' → logprob: -1.9234710931777954
    3. '```' → logprob: -2.298470973968506
    4. '"""' → logprob: -3.048470973968506
    5. '"""
' → logprob: -3.173470973968506
    6. ')' → logprob: -3.798470973968506
    7. '\' → logprob: -3.798470973968506
    8. '
' → logprob: -4.048470973968506
    9. '``' → logprob: -5.548470973968506
    10. '.' → logprob: -5.673470973968506

Token 32: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036920562386512756
    2. '\n' → logprob: -4.036920547485352
    3. '"""
' → logprob: -4.911920547485352
    4. '"""' → logprob: -5.536920547485352
    5. '
' → logprob: -6.036920547485352
    6. '```' → logprob: -6.161920547485352
    7. ' ' → logprob: -7.661920547485352
    8. '\' → logprob: -8.036920547485352
    9. '.' → logprob: -8.161920547485352
    10. '"' → logprob: -8.161920547485352

Token 33: ' Fraction' (ID: 112108)
  Prédit: ' fractional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractional' → logprob: -0.19866201281547546
    2. 'fraction' → logprob: -2.948662042617798
    3. ' fraction' → logprob: -3.198662042617798
    4. 'Fraction' → logprob: -3.323662042617798
    5. ' Fraction' → logprob: -3.448662042617798
    6. 'F' → logprob: -5.698661804199219
    7. 'f' → logprob: -6.136161804199219
    8. ' ' → logprob: -6.136161804199219
    9. '.' → logprob: -6.323661804199219
    10. ' F' → logprob: -6.636161804199219

Token 34: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.12111242115497589
    2. '_' → logprob: -2.24611234664917
    3. '_part' → logprob: -5.87111234664917
    4. 'a' → logprob: -5.99611234664917
    5. ' part' → logprob: -6.12111234664917
    6. '   ' → logprob: -7.74611234664917
    7. ' ' → logprob: -9.496112823486328
    8. ' _' → logprob: -9.621112823486328
    9. '  ' → logprob: -10.246112823486328
    10. '_parts' → logprob: -10.746112823486328

Token 35: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.40588298439979553
    2. ' _' → logprob: -1.9058829545974731
    3. '_' → logprob: -2.2808830738067627
    4. ' ' → logprob: -2.7808830738067627
    5. '_part' → logprob: -4.530882835388184
    6. ' parts' → logprob: -4.655882835388184
    7. '_parts' → logprob: -8.905882835388184
    8. '部分' → logprob: -9.530882835388184
    9. '  ' → logprob: -9.780882835388184
    10. 'part' → logprob: -10.405882835388184

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25660356879234314
    2. ' :' → logprob: -1.5066035985946655
    3. ' max' → logprob: -6.006603717803955
    4. '   ' → logprob: -7.131603717803955
    5. ' (' → logprob: -8.006603240966797
    6. ' ' → logprob: -8.256603240966797
    7. '_max' → logprob: -8.756603240966797
    8. 'max' → logprob: -8.881603240966797
    9. ':max' → logprob: -9.631603240966797
    10. ' =' → logprob: -9.631603240966797

Token 37: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.016511352732777596
    2. ' up' → logprob: -4.6415114402771
    3. 'max' → logprob: -5.7665114402771
    4. ' ' → logprob: -5.8915114402771
    5. ' maximum' → logprob: -7.2665114402771
    6. ' a' → logprob: -9.766510963439941
    7. 'up' → logprob: -11.016510963439941
    8. ' space' → logprob: -11.391510963439941
    9. '4' → logprob: -11.516510963439941
    10. '3' → logprob: -12.391510963439941

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025539683178067207
    2. '4' → logprob: -4.650539875030518
    3. '8' → logprob: -4.775539875030518
    4. '6' → logprob: -5.900539875030518
    5. '5' → logprob: -6.150539875030518
    6. '7' → logprob: -7.025539875030518
    7. '16' → logprob: -7.150539875030518
    8. '12' → logprob: -8.40053939819336
    9. '3' → logprob: -9.02553939819336
    10. '9' → logprob: -9.15053939819336

Token 39: '4' (ID: 19)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.11791790276765823
    2. '6' → logprob: -3.117918014526367
    3. '10' → logprob: -3.867918014526367
    4. '5' → logprob: -4.367918014526367
    5. '4' → logprob: -4.492918014526367
    6. '23' → logprob: -4.867918014526367
    7. '16' → logprob: -5.117918014526367
    8. '7' → logprob: -5.242918014526367
    9. '12' → logprob: -6.242918014526367
    10. '1' → logprob: -7.242918014526367

Token 40: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.000822495436295867
    2. 'bits' → logprob: -7.5008225440979
    3. '_bits' → logprob: -8.625822067260742
    4. ' ' → logprob: -10.125822067260742
    5. ' digits' → logprob: -10.625822067260742
    6. ' spaces' → logprob: -11.875822067260742
    7. ' bit' → logprob: -12.750822067260742
    8. ' )' → logprob: -13.250822067260742
    9. ' tokens' → logprob: -13.250822067260742
    10. '_BITS' → logprob: -13.250822067260742

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18238762021064758
    2. '\n' → logprob: -2.057387590408325
    3. '```' → logprob: -4.182387828826904
    4. '
' → logprob: -4.557387828826904
    5. '"""
' → logprob: -4.807387828826904
    6. '"""' → logprob: -6.307387828826904
    7. '``' → logprob: -7.057387828826904
    8. '\' → logprob: -7.557387828826904
    9. ')' → logprob: -8.057387351989746
    10. '  
' → logprob: -8.307387351989746

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11509490013122559
    2. '```' → logprob: -2.9900949001312256
    3. '"""' → logprob: -3.4900949001312256
    4. '"""
' → logprob: -3.7400949001312256
    5. '\n' → logprob: -6.990095138549805
    6. '
' → logprob: -7.115095138549805
    7. ')' → logprob: -7.490095138549805
    8. '"' → logprob: -7.490095138549805
    9. '``' → logprob: -7.615095138549805
    10. ' """
' → logprob: -8.615095138549805

Token 43: ' If' (ID: 1843)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4531463384628296
    2. '   ' → logprob: -1.0781463384628296
    3. '```' → logprob: -3.953146457672119
    4. '"""
' → logprob: -5.828146457672119
    5. '"' → logprob: -6.703146457672119
    6. '""' → logprob: -7.828146457672119
    7. ')' → logprob: -9.078145980834961
    8. ''''' → logprob: -9.578145980834961
    9. '`' → logprob: -9.828145980834961
    10. ' """' → logprob: -10.078145980834961

Token 44: ' conversion' (ID: 22165)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07408757507801056
    2. ' the' → logprob: -2.699087619781494
    3. 'n' → logprob: -6.074087619781494
    4. ' not' → logprob: -7.199087619781494
    5. ' a' → logprob: -7.699087619781494
    6. 'the' → logprob: -8.574087142944336
    7. ' isinstance' → logprob: -8.574087142944336
    8. ' an' → logprob: -9.949087142944336
    9. ' input' → logprob: -10.574087142944336
    10. ' ' → logprob: -10.574087142944336

Token 45: ' does' (ID: 2226)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.623213529586792
    2. ' is' → logprob: -1.248213529586792
    3. '_' → logprob: -3.873213529586792
    4. '```' → logprob: -4.248213768005371
    5. ' _' → logprob: -4.623213768005371
    6. ' returns' → logprob: -4.623213768005371
    7. ' successful' → logprob: -4.748213768005371
    8. ' fails' → logprob: -4.873213768005371
    9. ' exceeds' → logprob: -4.873213768005371
    10. ' continues' → logprob: -4.873213768005371

Token 46: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08957028388977051
    2. 'n' → logprob: -2.5895702838897705
    3. 'n't' → logprob: -4.839570045471191
    4. 'not' → logprob: -6.089570045471191
    5. ' n' → logprob: -7.839570045471191
    6. ' no' → logprob: -11.464570045471191
    7. ' ' → logprob: -11.714570045471191
    8. '_not' → logprob: -11.839570045471191
    9. ' n't' → logprob: -11.964570045471191
    10. ' space' → logprob: -12.214570045471191

Token 47: ' fit' (ID: 5769)
  Prédit: ' fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fit' → logprob: -0.07989312708377838
    2. ' meet' → logprob: -3.079893112182617
    3. ' satisfy' → logprob: -4.454893112182617
    4. 'fit' → logprob: -4.579893112182617
    5. 'meet' → logprob: -6.454893112182617
    6. ' exceed' → logprob: -6.454893112182617
    7. ' succeed' → logprob: -6.579893112182617
    8. ' complete' → logprob: -6.954893112182617
    9. ' work' → logprob: -7.329893112182617
    10. ' possible' → logprob: -7.954893112182617

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8636006712913513
    2. ',' → logprob: -0.9886006712913513
    3. ' the' → logprob: -2.738600730895996
    4. 'in' → logprob: -3.238600730895996
    5. ' into' → logprob: -3.613600730895996
    6. ' return' → logprob: -4.363600730895996
    7. ' a' → logprob: -4.363600730895996
    8. '   ' → logprob: -4.488600730895996
    9. '_' → logprob: -4.863600730895996
    10. ' ,' → logprob: -5.488600730895996

Token 49: ' these' (ID: 1879)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06918440014123917
    2. ' ' → logprob: -3.4441843032836914
    3. 'the' → logprob: -3.8191843032836914
    4. ' these' → logprob: -4.944184303283691
    5. ' constraints' → logprob: -6.319184303283691
    6. ' given' → logprob: -6.569184303283691
    7. '8' → logprob: -6.819184303283691
    8. ' specified' → logprob: -7.444184303283691
    9. ' allotted' → logprob: -8.819184303283691
    10. ' an' → logprob: -9.194184303283691

Token 50: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.18514734506607056
    2. ',' → logprob: -2.185147285461426
    3. ' limits' → logprob: -3.435147285461426
    4. ' return' → logprob: -5.560147285461426
    5. ' bits' → logprob: -5.685147285461426
    6. '   ' → logprob: -5.810147285461426
    7. ' ,' → logprob: -6.185147285461426
    8. ' ' → logprob: -6.560147285461426
    9. ' limitations' → logprob: -6.560147285461426
    10. ''' → logprob: -6.560147285461426

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02217278443276882
    2. ' return' → logprob: -3.897172689437866
    3. '   ' → logprob: -7.522172927856445
    4. ':' → logprob: -8.272172927856445
    5. ':return' → logprob: -8.397172927856445
    6. 'return' → logprob: -8.522172927856445
    7. ' ,' → logprob: -9.272172927856445
    8. '```' → logprob: -9.522172927856445
    9. ',
' → logprob: -10.022172927856445
    10. ' raise' → logprob: -10.022172927856445

Token 52: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.056209903210401535
    2. ' raise' → logprob: -3.5562098026275635
    3. '   ' → logprob: -4.306210041046143
    4. '    ' → logprob: -4.431210041046143
    5. 'return' → logprob: -7.806210041046143
    6. ' ' → logprob: -9.931209564208984
    7. ' returns' → logprob: -9.931209564208984
    8. ' the' → logprob: -10.181209564208984
    9. '```' → logprob: -10.306209564208984
    10. ' a' → logprob: -10.806209564208984

Token 53: ' '' (ID: 461)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.08209733664989471
    2. '"' → logprob: -2.957097291946411
    3. ' "' → logprob: -4.58209753036499
    4. ''' → logprob: -5.08209753036499
    5. ' '' → logprob: -5.45709753036499
    6. 'None' → logprob: -5.83209753036499
    7. ' ""' → logprob: -7.20709753036499
    8. ' ' → logprob: -7.20709753036499
    9. ' an' → logprob: -7.58209753036499
    10. '""' → logprob: -8.207097053527832

Token 54: 'NA' (ID: 9555)
  Prédit: 'Error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.166477918624878
    2. 'Overflow' → logprob: -2.041477918624878
    3. 'Invalid' → logprob: -2.666477918624878
    4. 'ERROR' → logprob: -2.791477918624878
    5. ' Overflow' → logprob: -2.791477918624878
    6. ' Error' → logprob: -3.166477918624878
    7. ' overflow' → logprob: -3.291477918624878
    8. 'N' → logprob: -3.416477918624878
    9. ' ERROR' → logprob: -3.541477918624878
    10. 'Cannot' → logprob: -3.541477918624878

Token 55: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014251177199184895
    2. ''''' → logprob: -7.001425266265869
    3. '"' → logprob: -8.126424789428711
    4. '"""' → logprob: -8.626424789428711
    5. '')' → logprob: -10.876424789428711
    6. '"'' → logprob: -11.501424789428711
    7. ''"' → logprob: -12.251424789428711
    8. '''' → logprob: -13.001424789428711
    9. '```' → logprob: -14.126424789428711
    10. ''
' → logprob: -14.501424789428711

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44743141531944275
    2. '```' → logprob: -1.6974314451217651
    3. '"""' → logprob: -1.9474314451217651
    4. '"' → logprob: -3.6974313259124756
    5. '"""
' → logprob: -5.697431564331055
    6. '`' → logprob: -6.447431564331055
    7. '
' → logprob: -6.572431564331055
    8. '    ' → logprob: -7.197431564331055
    9. ')' → logprob: -7.572431564331055
    10. '``' → logprob: -7.697431564331055

Token 57: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23427630960941315
    2. '```' → logprob: -1.859276294708252
    3. '
' → logprob: -3.609276294708252
    4. '"""' → logprob: -4.359276294708252
    5. '\n' → logprob: -4.734276294708252
    6. '    
' → logprob: -6.734276294708252
    7. 'n' → logprob: -6.859276294708252
    8. ')' → logprob: -7.609276294708252
    9. '"' → logprob: -7.859276294708252
    10. '``' → logprob: -8.10927677154541

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02730141580104828
    2. '```' → logprob: -4.27730131149292
    3. '
' → logprob: -5.15230131149292
    4. 'n' → logprob: -5.90230131149292
    5. '    
' → logprob: -6.77730131149292
    6. '\n' → logprob: -6.77730131149292
    7. ' 
' → logprob: -7.52730131149292
    8. ' if' → logprob: -8.152301788330078
    9. 'newline' → logprob: -8.527301788330078
    10. ' indentation' → logprob: -8.902301788330078

Token 59: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5582566857337952
    2. ' if' → logprob: -1.9332566261291504
    3. 'result' → logprob: -2.6832566261291504
    4. ' result' → logprob: -3.0582566261291504
    5. ' max' → logprob: -3.0582566261291504
    6. 'n' → logprob: -3.9332566261291504
    7. 'if' → logprob: -3.9332566261291504
    8. 'max' → logprob: -4.18325662612915
    9. ' integer' → logprob: -4.55825662612915
    10. '```' → logprob: -4.55825662612915

Token 60: ' Split' (ID: 44687)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5066468715667725
    2. ' max' → logprob: -1.5066468715667725
    3. ' integer' → logprob: -1.6316468715667725
    4. 'max' → logprob: -2.2566468715667725
    5. 'integer' → logprob: -2.5066468715667725
    6. 'if' → logprob: -2.6316468715667725
    7. '   ' → logprob: -3.6316468715667725
    8. '```' → logprob: -4.131647109985352
    9. 'def' → logprob: -4.256647109985352
    10. 'int' → logprob: -4.381647109985352

Token 61: ' integer' (ID: 16336)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05961718410253525
    2. ' number' → logprob: -3.434617280960083
    3. 'n' → logprob: -3.809617280960083
    4. 'number' → logprob: -7.309617042541504
    5. ' the' → logprob: -7.684617042541504
    6. ' decimal' → logprob: -7.684617042541504
    7. '	n' → logprob: -8.309617042541504
    8. ' num' → logprob: -8.434617042541504
    9. ' integer' → logprob: -8.559617042541504
    10. ' code' → logprob: -8.684617042541504

Token 62: ' and' (ID: 326)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0019633667543530464
    2. '_' → logprob: -6.376963138580322
    3. '_parts' → logprob: -8.75196361541748
    4. 'part' → logprob: -10.37696361541748
    5. ',' → logprob: -10.75196361541748
    6. '_value' → logprob: -11.50196361541748
    7. '_,' → logprob: -11.75196361541748
    8. '```' → logprob: -12.25196361541748
    9. '_and' → logprob: -12.62696361541748
    10. '   ' → logprob: -12.75196361541748

Token 63: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.07948847860097885
    2. ' fractional' → logprob: -2.579488515853882
    3. ' fraction' → logprob: -7.454488277435303
    4. 'decimal' → logprob: -11.079488754272461
    5. ' decimal' → logprob: -13.204488754272461
    6. '_fraction' → logprob: -13.454488754272461
    7. 'float' → logprob: -15.329488754272461
    8. 'Fraction' → logprob: -15.454488754272461
    9. 'frac' → logprob: -15.954488754272461
    10. '```' → logprob: -16.20448875427246

Token 64: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.0150717496871948
    2. ' part' → logprob: -1.1400717496871948
    3. 'part' → logprob: -1.3900717496871948
    4. 'parts' → logprob: -3.5150718688964844
    5. '_part' → logprob: -3.5150718688964844
    6. '_parts' → logprob: -4.765071868896484
    7. '_' → logprob: -7.390071868896484
    8. '	part' → logprob: -9.890071868896484
    9. '```' → logprob: -11.140071868896484
    10. ' partes' → logprob: -11.140071868896484

Token 65: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6869894862174988
    2. '\n' → logprob: -1.3119895458221436
    3. '   ' → logprob: -1.8119895458221436
    4. '
' → logprob: -3.0619895458221436
    5. '```' → logprob: -4.8119893074035645
    6. '\' → logprob: -5.8119893074035645
    7. '    
' → logprob: -6.0619893074035645
    8. 'newline' → logprob: -6.1869893074035645
    9. '`' → logprob: -8.061989784240723
    10. '<|end|>' → logprob: -8.436989784240723

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052899789065122604
    2. 'n' → logprob: -3.5528998374938965
    3. '```' → logprob: -4.8028998374938965
    4. '\n' → logprob: -5.4278998374938965
    5. '
' → logprob: -5.6778998374938965
    6. '    
' → logprob: -5.9278998374938965
    7. ' n' → logprob: -6.3028998374938965
    8. '`' → logprob: -7.5528998374938965
    9. '\' → logprob: -8.302899360656738
    10. ' 
' → logprob: -8.427899360656738

Token 67: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.6355655789375305
    2. 'integer' (adapté à ' integer') → logprob: -2.1355655193328857
    3. ' n' → logprob: -2.2605655193328857
    4. 'n' → logprob: -2.6355655193328857
    5. ' i' → logprob: -3.0105655193328857
    6. '   ' → logprob: -3.1355655193328857
    7. '```' → logprob: -3.7605655193328857
    8. ' int' → logprob: -3.8855655193328857
    9. ' ' → logprob: -4.760565757751465
    10. 'int' → logprob: -4.885565757751465

Token 68: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0007237526006065309
    2. '_' → logprob: -8.000723838806152
    3. ',' → logprob: -8.250723838806152
    4. '_parts' → logprob: -9.625723838806152
    5. 'part' → logprob: -10.750723838806152
    6. '_,' → logprob: -11.500723838806152
    7. '_str' → logprob: -11.500723838806152
    8. '_port' → logprob: -11.500723838806152
    9. '_par' → logprob: -13.250723838806152
    10. '_value' → logprob: -13.625723838806152

Token 69: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.524491548538208
    2. ' =' → logprob: -1.024491548538208
    3. '=' → logprob: -3.024491548538208
    4. ' ,' → logprob: -7.774491310119629
    5. '=int' → logprob: -9.274491310119629
    6. '   ' → logprob: -10.149491310119629
    7. ' ' → logprob: -11.899491310119629
    8. ')' → logprob: -12.274491310119629
    9. ',int' → logprob: -12.399491310119629
    10. '```' → logprob: -13.399491310119629

Token 70: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03083139844238758
    2. 'int' → logprob: -3.9058313369750977
    3. ' n' → logprob: -4.655831336975098
    4. 'n' → logprob: -7.905831336975098
    5. ' str' → logprob: -8.530831336975098
    6. ' ' → logprob: -9.405831336975098
    7. ' abs' → logprob: -10.530831336975098
    8. '   ' → logprob: -10.530831336975098
    9. 'str' → logprob: -11.405831336975098
    10. '  ' → logprob: -12.155831336975098

Token 71: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07758159935474396
    2. '(' → logprob: -2.7025816440582275
    3. '(abs' → logprob: -4.952581405639648
    4. '(round' → logprob: -8.327581405639648
    5. '(float' → logprob: -8.827581405639648
    6. '(math' → logprob: -9.702581405639648
    7. '(str' → logprob: -10.077581405639648
    8. '((' → logprob: -11.202581405639648
    9. '(int' → logprob: -11.452581405639648
    10. 'n' → logprob: -11.702581405639648

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001375089050270617
    2. ' )' → logprob: -9.500137329101562
    3. '))' → logprob: -11.125137329101562
    4. '//' → logprob: -11.500137329101562
    5. ')//' → logprob: -11.500137329101562
    6. '.split' → logprob: -12.250137329101562
    7. ')

' → logprob: -12.500137329101562
    8. ')
' → logprob: -12.625137329101562
    9. ')**' → logprob: -12.875137329101562
    10. '**' → logprob: -13.000137329101562

Token 73: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7621854543685913
    2. '<|end|>' → logprob: -1.5121854543685913
    3. '```' → logprob: -2.262185573577881
    4. '   ' → logprob: -2.387185573577881
    5. '    
' → logprob: -2.887185573577881
    6. '<|end|>' → logprob: -3.887185573577881
    7. '  
' → logprob: -5.137185573577881
    8. ' 
' → logprob: -5.262185573577881
    9. '   
' → logprob: -5.637185573577881
    10. '#' → logprob: -5.637185573577881

Token 74: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.3426591455936432
    2. ' fractional' → logprob: -1.7176591157913208
    3. ' fraction' → logprob: -3.0926592350006104
    4. '   ' → logprob: -3.9676592350006104
    5. '.' → logprob: -4.217658996582031
    6. ' frac' → logprob: -4.967658996582031
    7. 'frac' → logprob: -5.592658996582031
    8. ' remainder' → logprob: -5.592658996582031
    9. '```' → logprob: -5.592658996582031
    10. 'decimal' → logprob: -6.217658996582031

Token 75: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.001988471020013094
    2. '_' → logprob: -6.376988410949707
    3. '_parts' → logprob: -8.251988410949707
    4. ' _' → logprob: -11.876988410949707
    5. '_str' → logprob: -12.501988410949707
    6. '_value' → logprob: -13.126988410949707
    7. '_fraction' → logprob: -13.251988410949707
    8. '_piece' → logprob: -13.876988410949707
    9. '_p' → logprob: -14.126988410949707
    10. '_amount' → logprob: -14.126988410949707

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022463142871857
    2. '=' → logprob: -1.9102246761322021
    3. '=n' → logprob: -16.03522491455078
    4. '＝' → logprob: -16.78522491455078
    5. '=float' → logprob: -17.03522491455078
    6. '=int' → logprob: -17.16022491455078
    7. ')' → logprob: -17.78522491455078
    8. ' ' → logprob: -18.03522491455078
    9. 's' → logprob: -18.16022491455078
    10. '_=' → logprob: -18.41022491455078

Token 77: ' abs' (ID: 8443)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048590321093797684
    2. 'n' → logprob: -3.0485904216766357
    3. '	n' → logprob: -13.923590660095215
    4. 'abs' → logprob: -14.298590660095215
    5. 'float' → logprob: -14.548590660095215
    6. 'round' → logprob: -15.173590660095215
    7. ' abs' → logprob: -15.423590660095215
    8. ' float' → logprob: -15.798590660095215
    9. ' round' → logprob: -16.4235897064209
    10. '<|end|>' → logprob: -16.6735897064209

Token 78: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0031797364354133606
    2. '(' → logprob: -5.753179550170898
    3. 'n' → logprob: -13.253179550170898
    4. '((' → logprob: -16.6281795501709
    5. '(round' → logprob: -16.6281795501709
    6. '(
' → logprob: -16.8781795501709
    7. '(float' → logprob: -16.8781795501709
    8. ' (' → logprob: -17.0031795501709
    9. '(num' → logprob: -17.2531795501709
    10. '(decimal' → logprob: -18.1281795501709

Token 79: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8128463625907898
    2. '-' → logprob: -1.0628464221954346
    3. ' -' → logprob: -1.5628464221954346
    4. ' ' → logprob: -7.4378461837768555
    5. '-n' → logprob: -8.187846183776855
    6. '%' → logprob: -8.437846183776855
    7. ' )' → logprob: -8.562846183776855
    8. '   ' → logprob: -9.937846183776855
    9. '*' → logprob: -11.812846183776855
    10. '-p' → logprob: -12.187846183776855

Token 80: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.38690268993377686
    2. 'integer' → logprob: -1.1369026899337769
    3. 'int' → logprob: -11.511902809143066
    4. '   ' → logprob: -12.011902809143066
    5. ' ' → logprob: -12.136902809143066
    6. '(integer' → logprob: -12.261902809143066
    7. '  ' → logprob: -12.886902809143066
    8. ' int' → logprob: -13.261902809143066
    9. '    ' → logprob: -14.886902809143066
    10. ')' → logprob: -16.01190185546875

Token 81: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.0006445261533372104
    2. '_' → logprob: -7.750644683837891
    3. ')' → logprob: -9.62564468383789
    4. '_)' → logprob: -9.87564468383789
    5. '_parts' → logprob: -10.12564468383789
    6. '_p' → logprob: -11.00064468383789
    7. ')_' → logprob: -11.00064468383789
    8. '._' → logprob: -11.25064468383789
    9. '_PART' → logprob: -13.12564468383789
    10. '_pt' → logprob: -13.37564468383789

Token 82: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '))' → logprob: -13.37500286102295
    3. ' )' → logprob: -14.75000286102295
    4. ')*' → logprob: -15.62500286102295
    5. '*' → logprob: -15.87500286102295
    6. ')
' → logprob: -16.000003814697266
    7. ')**' → logprob: -16.250003814697266
    8. '`)' → logprob: -16.500003814697266
    9. ')`' → logprob: -16.625003814697266
    10. '0' → logprob: -16.750003814697266

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02171526663005352
    2. '\n' → logprob: -4.77171516418457
    3. '   ' → logprob: -5.52171516418457
    4. '    
' → logprob: -6.02171516418457
    5. '```' → logprob: -6.02171516418457
    6. 'n' → logprob: -6.52171516418457
    7. ' 
' → logprob: -6.64671516418457
    8. '\' → logprob: -7.39671516418457
    9. '   
' → logprob: -8.14671516418457
    10. '  
' → logprob: -8.89671516418457

Token 84: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8680335283279419
    2. '
' → logprob: -1.493033528327942
    3. 'result' → logprob: -2.4930334091186523
    4. 'binary' → logprob: -2.8680334091186523
    5. ' binary' → logprob: -2.8680334091186523
    6. ' result' → logprob: -2.9930334091186523
    7. ' if' → logprob: -3.3680334091186523
    8. '    
' → logprob: -3.8680334091186523
    9. 'b' → logprob: -4.118033409118652
    10. '```' → logprob: -4.618033409118652

Token 85: ' Convert' (ID: 15629)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.1371610164642334
    2. 'if' → logprob: -1.3871610164642334
    3. '#' → logprob: -1.5121610164642334
    4. ' binary' → logprob: -3.1371610164642334
    5. 'integer' → logprob: -3.1371610164642334
    6. ' if' → logprob: -3.3871610164642334
    7. 'result' → logprob: -3.3871610164642334
    8. ' integer' → logprob: -4.0121612548828125
    9. 'max' → logprob: -4.7621612548828125
    10. 'bits' → logprob: -4.8871612548828125

Token 86: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.06525038927793503
    2. 'integer' → logprob: -3.8152503967285156
    3. ' i' → logprob: -4.190250396728516
    4. ' binary' → logprob: -4.565250396728516
    5. ' ' → logprob: -5.065250396728516
    6. ' int' → logprob: -6.190250396728516
    7. ' if' → logprob: -6.190250396728516
    8. ' `' → logprob: -7.190250396728516
    9. '   ' → logprob: -7.440250396728516
    10. ' def' → logprob: -7.690250396728516

Token 87: ' part' (ID: 997)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1209803894162178
    2. '_part' → logprob: -2.2459805011749268
    3. '_bits' → logprob: -5.870980262756348
    4. '_to' → logprob: -5.995980262756348
    5. '_string' → logprob: -7.745980262756348
    6. '_bit' → logprob: -7.745980262756348
    7. '_binary' → logprob: -7.745980262756348
    8. '_parts' → logprob: -8.245980262756348
    9. '_bin' → logprob: -8.370980262756348
    10. '_value' → logprob: -8.620980262756348

Token 88: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15113981068134308
    2. ' to' → logprob: -2.526139736175537
    3. ' if' → logprob: -3.651139736175537
    4. '```' → logprob: -5.026139736175537
    5. ' ' → logprob: -5.151139736175537
    6. '_' → logprob: -5.151139736175537
    7. '_binary' → logprob: -5.776139736175537
    8. ''s' → logprob: -6.276139736175537
    9. '  ' → logprob: -6.651139736175537
    10. '_to' → logprob: -7.151139736175537

Token 89: ' binary' (ID: 15600)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.9671218395233154
    2. ' binary' → logprob: -1.0921218395233154
    3. 'bin' → logprob: -1.3421218395233154
    4. 'binary' → logprob: -4.2171220779418945
    5. 'b' → logprob: -4.8421220779418945
    6. '```' → logprob: -9.342122077941895
    7. ' b' → logprob: -9.717122077941895
    8. ' a' → logprob: -9.967122077941895
    9. '_bin' → logprob: -10.217122077941895
    10. ' format' → logprob: -10.342122077941895

Token 90: ' without' (ID: 2935)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0917296409606934
    2. '   ' → logprob: -1.3417296409606934
    3. '```' → logprob: -1.9667296409606934
    4. '    
' → logprob: -2.7167296409606934
    5. ' i' → logprob: -3.7167296409606934
    6. '\n' → logprob: -3.9667296409606934
    7. ' if' → logprob: -3.9667296409606934
    8. '`' → logprob: -3.9667296409606934
    9. ' 
' → logprob: -4.091729640960693
    10. ''s' → logprob: -4.216729640960693

Token 91: ' leading' (ID: 8117)
  Prédit: ' using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' using' → logprob: -0.21952885389328003
    2. ' exceeding' → logprob: -2.094528913497925
    3. ' leading' → logprob: -2.969528913497925
    4. 'using' → logprob: -5.844528675079346
    5. ' overflow' → logprob: -5.969528675079346
    6. ' spaces' → logprob: -5.969528675079346
    7. 'b' → logprob: -6.219528675079346
    8. ' bin' → logprob: -6.594528675079346
    9. ' losing' → logprob: -6.969528675079346
    10. ' breaking' → logprob: -7.094528675079346

Token 92: ' '' (ID: 461)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.13830403983592987
    2. '0' → logprob: -2.5133039951324463
    3. 'zeros' → logprob: -3.8883039951324463
    4. '_' → logprob: -4.263304233551025
    5. ' ' → logprob: -4.763304233551025
    6. '1' → logprob: -6.138304233551025
    7. ' zero' → logprob: -7.013304233551025
    8. 'zero' → logprob: -7.638304233551025
    9. 's' → logprob: -8.013303756713867
    10. ' '' → logprob: -8.513303756713867

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000596043246332556
    2. 'b' → logprob: -7.750596046447754
    3. '1' → logprob: -8.750596046447754
    4. ''' → logprob: -12.125596046447754
    5. ' ' → logprob: -13.625596046447754
    6. ''s' → logprob: -16.000595092773438
    7. 'x' → logprob: -16.750595092773438
    8. 'bin' → logprob: -16.750595092773438
    9. 'ob' → logprob: -17.875595092773438
    10. 'o' → logprob: -18.125595092773438

Token 94: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.641841820150148e-05
    2. 's' → logprob: -10.62502670288086
    3. ''' → logprob: -13.75002670288086
    4. ''s' → logprob: -14.62502670288086
    5. '1' → logprob: -15.37502670288086
    6. ''b' → logprob: -15.62502670288086
    7. '0' → logprob: -15.87502670288086
    8. 'x' → logprob: -17.87502670288086
    9. ' b' → logprob: -18.25002670288086
    10. '')' → logprob: -18.75002670288086

Token 95: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007834688760340214
    2. '')' → logprob: -5.6328349113464355
    3. 'b' → logprob: -6.2578349113464355
    4. 'format' → logprob: -7.2578349113464355
    5. 'bin' → logprob: -7.5078349113464355
    6. 's' → logprob: -8.257834434509277
    7. ''''' → logprob: -8.257834434509277
    8. '1' → logprob: -8.757834434509277
    9. ''s' → logprob: -9.757834434509277
    10. ''{' → logprob: -10.007834434509277

Token 96: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8398880958557129
    2. ' i' → logprob: -1.464888095855713
    3. ' ' → logprob: -2.089888095855713
    4. ' 
' → logprob: -2.214888095855713
    5. 'b' → logprob: -3.589888095855713
    6. 's' → logprob: -3.714888095855713
    7. '```' → logprob: -4.839888095855713
    8. '   ' → logprob: -4.964888095855713
    9. ' ```' → logprob: -4.964888095855713
    10. '1' → logprob: -5.714888095855713

Token 97: ' int' (ID: 677)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7743281126022339
    2. 'i' → logprob: -1.1493281126022339
    3. ' i' → logprob: -2.8993282318115234
    4. 'integer' → logprob: -3.3993282318115234
    5. ' integer' → logprob: -3.6493282318115234
    6. 'bin' → logprob: -3.7743282318115234
    7. ' bin' → logprob: -3.7743282318115234
    8. 'binary' → logprob: -3.7743282318115234
    9. ' binary' → logprob: -4.274328231811523
    10. 'int' (adapté à ' int') → logprob: -4.399328231811523

Token 98: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.10103131830692291
    2. '_binary' → logprob: -2.3510313034057617
    3. '_str' → logprob: -7.851031303405762
    4. '_bits' → logprob: -8.726031303405762
    5. '_b' → logprob: -8.726031303405762
    6. '_' → logprob: -10.351031303405762
    7. '_string' → logprob: -10.601031303405762
    8. '_repr' → logprob: -10.976031303405762
    9. '_part' → logprob: -11.726031303405762
    10. '_val' → logprob: -11.851031303405762

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5062891840934753
    2. '_str' → logprob: -1.1312892436981201
    3. '_string' → logprob: -4.006289005279541
    4. '=' → logprob: -4.006289005279541
    5. '_' → logprob: -4.131289005279541
    6. 'ary' → logprob: -4.506289005279541
    7. 'ar' → logprob: -5.506289005279541
    8. '_repr' → logprob: -5.756289005279541
    9. 'str' → logprob: -6.631289005279541
    10. '```' → logprob: -7.131289005279541

Token 100: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.07221066206693649
    2. ' bin' → logprob: -2.6972105503082275
    3. 'format' → logprob: -6.322210788726807
    4. ' format' → logprob: -7.697210788726807
    5. '(bin' → logprob: -12.197210311889648
    6. '   ' → logprob: -12.572210311889648
    7. ' ' → logprob: -12.572210311889648
    8. 'f' → logprob: -13.072210311889648
    9. 'b' → logprob: -13.322210311889648
    10. '```' → logprob: -13.572210311889648

Token 101: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.00030424181022681296
    2. '(' → logprob: -8.625304222106934
    3. 'integer' → logprob: -9.000304222106934
    4. '(int' → logprob: -14.875304222106934
    5. '(n' → logprob: -15.375304222106934
    6. ' integer' → logprob: -15.625304222106934
    7. ' (' → logprob: -15.625304222106934
    8. '(abs' → logprob: -16.12530517578125
    9. '(in' → logprob: -16.50030517578125
    10. '(Integer' → logprob: -17.12530517578125

Token 102: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -10.125081062316895
    3. 'part' → logprob: -10.750081062316895
    4. ')' → logprob: -11.750081062316895
    5. '(n' → logprob: -12.250081062316895
    6. '(integer' → logprob: -13.250081062316895
    7. '_parts' → logprob: -13.375081062316895
    8. '(part' → logprob: -13.750081062316895
    9. 'Part' → logprob: -14.750081062316895
    10. ')(' → logprob: -15.000081062316895

Token 103: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.01186241302639246
    2. ')' → logprob: -4.886862277984619
    3. '[' → logprob: -6.386862277984619
    4. '())[' → logprob: -6.636862277984619
    5. ').' → logprob: -7.136862277984619
    6. '(' → logprob: -8.261862754821777
    7. '(integer' → logprob: -9.136862754821777
    8. '()[' → logprob: -10.761862754821777
    9. '   ' → logprob: -10.886862754821777
    10. ' )[' → logprob: -10.886862754821777

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -13.500005722045898
    3. ' ' → logprob: -14.125005722045898
    4. ')' → logprob: -14.250005722045898
    5. '3' → logprob: -14.625005722045898
    6. ':' → logprob: -14.625005722045898
    7. '][' → logprob: -15.250005722045898
    8. '

' → logprob: -15.375005722045898
    9. ')[' → logprob: -15.375005722045898
    10. '1' → logprob: -15.625005722045898

Token 105: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.08947437256574631
    2. ']' → logprob: -2.4644744396209717
    3. ' ]' → logprob: -8.58947467803955
    4. ':' → logprob: -8.96447467803955
    5. ' :]' → logprob: -9.08947467803955
    6. ':].' → logprob: -9.46447467803955
    7. '<|end|>' → logprob: -11.83947467803955
    8. ':],' → logprob: -12.08947467803955
    9. ':]
' → logprob: -12.58947467803955
    10. '()]' → logprob: -12.83947467803955

Token 106: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46576371788978577
    2. '   ' → logprob: -1.3407636880874634
    3. '<|end|>' → logprob: -3.215763807296753
    4. ' if' → logprob: -3.340763807296753
    5. 'if' → logprob: -4.090763568878174
    6. '\n' → logprob: -5.215763568878174
    7. '    
' → logprob: -5.215763568878174
    8. ' 
' → logprob: -6.090763568878174
    9. '  
' → logprob: -6.840763568878174
    10. '```' → logprob: -6.965763568878174

Token 107: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032758232206106186
    2. ' if' → logprob: -4.1577582359313965
    3. 'if' → logprob: -4.4077582359313965
    4. '    
' → logprob: -6.7827582359313965
    5. '    ' → logprob: -6.9077582359313965
    6. '<|end|>' → logprob: -7.4077582359313965
    7. ' ' → logprob: -7.6577582359313965
    8. ' 
' → logprob: -8.157757759094238
    9. '
' → logprob: -8.282757759094238
    10. '```' → logprob: -8.407757759094238

Token 108: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4742482900619507
    2. ' if' → logprob: -0.9742482900619507
    3. '```' → logprob: -9.224247932434082
    4. '   ' → logprob: -9.724247932434082
    5. 'If' → logprob: -11.599247932434082
    6. '#' → logprob: -12.974247932434082
    7. ' #' → logprob: -14.724247932434082
    8. '``' → logprob: -15.349247932434082
    9. ' If' → logprob: -15.474247932434082
    10. 'Check' → logprob: -16.4742488861084

Token 109: ' integer' (ID: 16336)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0037952077109366655
    2. ' len' → logprob: -5.628795146942139
    3. 'if' → logprob: -9.003795623779297
    4. ' for' → logprob: -9.753795623779297
    5. ' ' → logprob: -12.128795623779297
    6. 'len' → logprob: -12.878795623779297
    7. ' length' → logprob: -13.378795623779297
    8. ' the' → logprob: -13.503795623779297
    9. ' i' → logprob: -13.753795623779297
    10. '_len' → logprob: -14.628795623779297

Token 110: ' part' (ID: 997)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03775041177868843
    2. '_len' → logprob: -4.537750244140625
    3. 'if' → logprob: -4.912750244140625
    4. ' len' → logprob: -5.537750244140625
    5. '_length' → logprob: -5.537750244140625
    6. '   ' → logprob: -5.662750244140625
    7. ' length' → logprob: -5.912750244140625
    8. ' ' → logprob: -6.162750244140625
    9. '_' → logprob: -7.287750244140625
    10. 'len' → logprob: -7.412750244140625

Token 111: ' length' (ID: 5517)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.052149415016174316
    2. '   ' → logprob: -3.1771492958068848
    3. 'if' → logprob: -5.177149295806885
    4. ''s' → logprob: -7.177149295806885
    5. ' ' → logprob: -7.677149295806885
    6. '<|end|>' → logprob: -7.802149295806885
    7. '_' → logprob: -8.177149772644043
    8. '_length' → logprob: -8.302149772644043
    9. '```' → logprob: -8.427149772644043
    10. ' for' → logprob: -8.677149772644043

Token 112: ' constraint' (ID: 44762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007414362858980894
    2. ' if' → logprob: -5.3824143409729
    3. 'if' → logprob: -6.7574143409729
    4. '<|end|>' → logprob: -7.2574143409729
    5. '```' → logprob: -8.007414817810059
    6. '>' → logprob: -8.507414817810059
    7. ' <=' → logprob: -9.507414817810059
    8. '<|end|>' → logprob: -9.757414817810059
    9. ')' → logprob: -10.382414817810059
    10. ' >' → logprob: -10.757414817810059

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021919962018728256
    2. 'if' → logprob: -4.5219197273254395
    3. ' if' → logprob: -4.6469197273254395
    4. '
' → logprob: -7.7719197273254395
    5. '```' → logprob: -7.8969197273254395
    6. '<|end|>' → logprob: -8.396920204162598
    7. '    
' → logprob: -9.021920204162598
    8. '<|end|>' → logprob: -10.896920204162598
    9. 'If' → logprob: -11.271920204162598
    10. '  
' → logprob: -11.521920204162598

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036436687223613262
    2. ' if' → logprob: -6.25364351272583
    3. 'if' → logprob: -6.37864351272583
    4. '```' → logprob: -11.378643989562988
    5. ' ' → logprob: -13.503643989562988
    6. '    ' → logprob: -13.878643989562988
    7. '  ' → logprob: -14.253643989562988
    8. '    
' → logprob: -14.253643989562988
    9. '       ' → logprob: -14.753643989562988
    10. 'If' → logprob: -15.253643989562988

Token 115: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3601500988006592
    2. ' if' → logprob: -1.2351500988006592
    3. 'if' (adapté à ' if') → logprob: -4.485150337219238
    4. '```' → logprob: -8.860150337219238
    5. '    ' → logprob: -9.610150337219238
    6. '[' → logprob: -10.110150337219238
    7. ' ' → logprob: -10.735150337219238
    8. 'i' → logprob: -11.360150337219238
    9. ' 
' → logprob: -11.610150337219238
    10. '4' → logprob: -11.860150337219238

Token 116: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.000553151941858232
    2. 'len' → logprob: -7.500553131103516
    3. '(len' → logprob: -15.625553131103516
    4. '	len' → logprob: -19.500553131103516
    5. ' not' → logprob: -19.875553131103516
    6. ' ' → logprob: -20.125553131103516
    7. ' ' → logprob: -20.125553131103516
    8. '=len' → logprob: -20.750553131103516
    9. '[len' → logprob: -21.000553131103516
    10. '   ' → logprob: -22.750553131103516

Token 117: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006884680595248938
    2. '(' → logprob: -5.006884574890137
    3. ' (' → logprob: -8.756884574890137
    4. '(integer' → logprob: -11.881884574890137
    5. '(in' → logprob: -12.881884574890137
    6. '(i' → logprob: -13.881884574890137
    7. '(s' → logprob: -15.256884574890137
    8. '(intent' → logprob: -15.506884574890137
    9. '(uint' → logprob: -16.256885528564453
    10. '(ind' → logprob: -16.631885528564453

Token 118: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -3.128163257315464e-07
    2. '(bin' → logprob: -15.875
    3. '(_' → logprob: -16.875
    4. ')' → logprob: -16.875
    5. ')_' → logprob: -17.875
    6. '_bins' → logprob: -18.375
    7. '_BIN' → logprob: -18.875
    8. '_bit' → logprob: -19.125
    9. '_part' → logprob: -19.125
    10. '```' → logprob: -19.125

Token 119: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.024164721369743347
    2. '>' → logprob: -4.27416467666626
    3. ')' → logprob: -4.64916467666626
    4. ' )' → logprob: -8.274165153503418
    5. ')>' → logprob: -9.149165153503418
    6. ' ' → logprob: -11.524165153503418
    7. ' >=' → logprob: -11.774165153503418
    8. '()>' → logprob: -14.274165153503418
    9. '    ' → logprob: -14.649165153503418
    10. '   ' → logprob: -14.899165153503418

Token 120: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.038050562143325806
    2. '>' → logprob: -3.288050651550293
    3. ' ' → logprob: -12.538050651550293
    4. ' <=' → logprob: -13.163050651550293
    5. '()>' → logprob: -13.663050651550293
    6. ')' → logprob: -14.038050651550293
    7. ' ' → logprob: -14.788050651550293
    8. ')>' → logprob: -15.413050651550293
    9. ' >=' → logprob: -15.538050651550293
    10. ' greater' → logprob: -15.788050651550293

Token 121: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.5759396553039551
    2. ' ' → logprob: -0.8259396553039551
    3. ' ' → logprob: -16.325939178466797
    4. '  ' → logprob: -16.950939178466797
    5. '```' → logprob: -17.325939178466797
    6. '"' → logprob: -18.138439178466797
    7. '=' → logprob: -18.263439178466797
    8. '   ' → logprob: -18.638439178466797
    9. 'eight' → logprob: -18.638439178466797
    10. '`' → logprob: -18.888439178466797

Token 122: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. ''' → logprob: -15.625051498413086
    4. '"' → logprob: -16.750051498413086
    5. '```' → logprob: -17.750051498413086
    6. '`' → logprob: -18.250051498413086
    7. 'eight' → logprob: -18.250051498413086
    8. '   ' → logprob: -18.375051498413086
    9. '８' → logprob: -18.500051498413086
    10. '  ' → logprob: -19.250051498413086

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08564888685941696
    2. '):' → logprob: -2.585648775100708
    3. ' or' → logprob: -5.960649013519287
    4. ' :' → logprob: -6.085649013519287
    5. ')' → logprob: -6.835649013519287
    6. ' ):' → logprob: -7.335649013519287
    7. ':return' → logprob: -9.585648536682129
    8. ':
' → logprob: -10.210648536682129
    9. '   ' → logprob: -11.585648536682129
    10. ' )' → logprob: -11.710648536682129

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03789160028100014
    2. ' return' → logprob: -3.5378916263580322
    3. 'return' → logprob: -5.162891387939453
    4. '   ' → logprob: -6.162891387939453
    5. '
' → logprob: -8.912891387939453
    6. ' 
' → logprob: -10.412891387939453
    7. '	return' → logprob: -10.537891387939453
    8. '```' → logprob: -10.787891387939453
    9. '\n' → logprob: -10.787891387939453
    10. '        
' → logprob: -12.162891387939453

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8347297310829163
    2. ' return' → logprob: -0.9597297310829163
    3. '       ' → logprob: -1.7097296714782715
    4. '   ' → logprob: -6.4597296714782715
    5. '	return' → logprob: -7.8347296714782715
    6. ' ' → logprob: -9.83473014831543
    7. '	' → logprob: -10.83473014831543
    8. '```' → logprob: -11.08473014831543
    9. ':return' → logprob: -11.83473014831543
    10. '	   ' → logprob: -11.83473014831543

Token 126: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00121607119217515
    2. ' '' → logprob: -6.751215934753418
    3. '"' → logprob: -10.001215934753418
    4. ''"' → logprob: -15.126215934753418
    5. ' "' → logprob: -16.001216888427734
    6. '"'' → logprob: -16.376216888427734
    7. ''A' → logprob: -17.126216888427734
    8. 'NA' → logprob: -17.876216888427734
    9. ' ' → logprob: -18.626216888427734
    10. ''N' → logprob: -18.751216888427734

Token 127: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -1.0280383548888494e-06
    2. 'N' → logprob: -14.000000953674316
    3. ' NA' → logprob: -16.625001907348633
    4. ''' → logprob: -17.250001907348633
    5. '"' → logprob: -18.625001907348633
    6. 'Na' → logprob: -22.750001907348633
    7. '"N' → logprob: -23.000001907348633
    8. ''N' → logprob: -23.000001907348633
    9. '
' → logprob: -23.875001907348633
    10. '   ' → logprob: -24.000001907348633

Token 128: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.598092684522271e-05
    2. '   ' → logprob: -10.250056266784668
    3. ')"' → logprob: -12.125056266784668
    4. '"
' → logprob: -12.250056266784668
    5. '")' → logprob: -12.250056266784668
    6. ')' → logprob: -12.500056266784668
    7. '```' → logprob: -14.625056266784668
    8. ' "' → logprob: -14.750056266784668
    9. '"`' → logprob: -15.375056266784668
    10. '"

' → logprob: -15.500056266784668

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059091001749038696
    2. '
' → logprob: -3.684091091156006
    3. '    
' → logprob: -3.684091091156006
    4. '#' → logprob: -6.184091091156006
    5. '```' → logprob: -6.559091091156006
    6. '    ' → logprob: -6.809091091156006
    7. ' 
' → logprob: -7.684091091156006
    8. 'n' → logprob: -7.809091091156006
    9. '  
' → logprob: -8.309090614318848
    10. '  ' → logprob: -8.434090614318848

Token 130: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2550384998321533
    2. 'result' → logprob: -1.2550384998321533
    3. 'fraction' → logprob: -1.6300384998321533
    4. '   ' → logprob: -1.8800384998321533
    5. 'frac' → logprob: -3.5050384998321533
    6. 'binary' → logprob: -4.130038261413574
    7. 'res' → logprob: -4.255038261413574
    8. 'bin' → logprob: -5.130038261413574
    9. 'if' → logprob: -5.630038261413574
    10. 'f' → logprob: -5.630038261413574

Token 131: ' Pad' (ID: 28504)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0841635465621948
    2. 'frac' → logprob: -1.0841635465621948
    3. 'fraction' → logprob: -1.2091635465621948
    4. 'binary' → logprob: -4.709163665771484
    5. 'result' → logprob: -4.709163665771484
    6. 'Convert' → logprob: -5.584163665771484
    7. 'bin' → logprob: -6.959163665771484
    8. 'res' → logprob: -7.584163665771484
    9. ' frac' → logprob: -7.709163665771484
    10. 'bits' → logprob: -8.459163665771484

Token 132: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.46600595116615295
    2. ' int' → logprob: -1.0910059213638306
    3. '(int' → logprob: -3.59100604057312
    4. '(' → logprob: -4.966005802154541
    5. ' ' → logprob: -7.341005802154541
    6. '   ' → logprob: -7.841005802154541
    7. '	int' → logprob: -7.966005802154541
    8. ' with' → logprob: -8.7160062789917
    9. '0' → logprob: -9.2160062789917
    10. ' the' → logprob: -9.2160062789917

Token 133: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.004722157027572393
    2. '_bin' → logprob: -5.7547221183776855
    3. 'part' → logprob: -7.0047221183776855
    4. 'int' → logprob: -8.504722595214844
    5. ' part' → logprob: -8.879722595214844
    6. '_parts' → logprob: -9.129722595214844
    7. '_' → logprob: -10.379722595214844
    8. '_int' → logprob: -10.379722595214844
    9. 'bin' → logprob: -10.629722595214844
    10. '```' → logprob: -10.754722595214844

Token 134: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5196294188499451
    2. 'int' → logprob: -1.6446294784545898
    3. ' with' → logprob: -2.14462947845459
    4. ' =' → logprob: -3.01962947845459
    5. 'with' → logprob: -3.89462947845459
    6. '   ' → logprob: -4.39462947845459
    7. '=int' → logprob: -4.64462947845459
    8. 'left' → logprob: -6.89462947845459
    9. ' int' → logprob: -6.89462947845459
    10. '_int' → logprob: -7.51962947845459

Token 135: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47465118765830994
    2. '8' → logprob: -0.9746512174606323
    3. ' eight' → logprob: -7.599651336669922
    4. 'eight' → logprob: -10.224651336669922
    5. ''' → logprob: -11.474651336669922
    6. ' the' → logprob: -11.724651336669922
    7. ' fill' → logprob: -12.099651336669922
    8. ' '' → logprob: -12.724651336669922
    9. ' make' → logprob: -13.474651336669922
    10. ' length' → logprob: -13.474651336669922

Token 136: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0007113590254448354
    2. ' ' → logprob: -7.250711441040039
    3. 'eight' → logprob: -14.250711441040039
    4. 'length' → logprob: -15.375711441040039
    5. ' eight' → logprob: -15.875711441040039
    6. 'the' → logprob: -15.875711441040039
    7. ' the' → logprob: -16.25071144104004
    8. 'left' → logprob: -16.62571144104004
    9. '  ' → logprob: -18.12571144104004
    10. '۸' → logprob: -18.37571144104004

Token 137: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.38393324613571167
    2. '_bits' → logprob: -1.6339333057403564
    3. 'bits' → logprob: -3.2589333057403564
    4. ' ' → logprob: -3.2589333057403564
    5. ' zeros' → logprob: -3.5089333057403564
    6. '0' → logprob: -5.508933067321777
    7. ' with' → logprob: -5.758933067321777
    8. ' int' → logprob: -6.258933067321777
    9. '_' → logprob: -6.758933067321777
    10. ' '' → logprob: -6.883933067321777

Token 138: ' with' (ID: 483)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4298255443572998
    2. '   ' → logprob: -1.1798255443572998
    3. ' int' → logprob: -3.1798255443573
    4. '    
' → logprob: -8.304825782775879
    5. '
' → logprob: -10.304825782775879
    6. ',int' → logprob: -10.429825782775879
    7. '    ' → logprob: -10.554825782775879
    8. 'return' → logprob: -10.929825782775879
    9. '_int' → logprob: -11.179825782775879
    10. ',' → logprob: -11.304825782775879

Token 139: ' leading' (ID: 8117)
  Prédit: ' leading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.32332828640937805
    2. '0' → logprob: -2.0733282566070557
    3. ''' → logprob: -2.3233282566070557
    4. ' zeros' → logprob: -3.3233282566070557
    5. 'leading' → logprob: -4.573328495025635
    6. ' '' → logprob: -5.323328495025635
    7. ' ' → logprob: -7.323328495025635
    8. 'zeros' → logprob: -7.448328495025635
    9. '`' → logprob: -10.823328018188477
    10. ' zero' → logprob: -11.073328018188477

Token 140: ' zeros' (ID: 42274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22286762297153473
    2. ' zeros' → logprob: -1.7228676080703735
    3. ' ' → logprob: -4.097867488861084
    4. 'zeros' → logprob: -5.847867488861084
    5. ''' → logprob: -7.097867488861084
    6. '_' → logprob: -7.222867488861084
    7. ' '' → logprob: -9.222867965698242
    8. ' zero' → logprob: -9.722867965698242
    9. 'zero' → logprob: -11.597867965698242
    10. '"' → logprob: -13.472867965698242

Token 141: '
' (ID: 198)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3952641785144806
    2. '   ' → logprob: -1.1452641487121582
    3. '
' → logprob: -5.145264148712158
    4. ' int' → logprob: -6.645264148712158
    5. '    
' → logprob: -7.270264148712158
    6. ',' → logprob: -8.645264625549316
    7. ',int' → logprob: -8.770264625549316
    8. '_int' → logprob: -10.645264625549316
    9. '[int' → logprob: -10.645264625549316
    10. '(int' → logprob: -10.770264625549316

Token 142: '   ' (ID: 271)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12899057567119598
    2. '   ' → logprob: -2.128990650177002
    3. ' int' → logprob: -6.253990650177002
    4. '    
' → logprob: -10.378990173339844
    5. '_int' → logprob: -10.628990173339844
    6. ',int' → logprob: -11.378990173339844
    7. '    ' → logprob: -11.378990173339844
    8. '[int' → logprob: -11.628990173339844
    9. '  ' → logprob: -11.753990173339844
    10. '
' → logprob: -11.878990173339844

Token 143: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.002477081725373864
    2. ' int' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.127476692199707
    4. 'integer' → logprob: -14.502476692199707
    5. 'return' → logprob: -16.127477645874023
    6. ' ' → logprob: -17.252477645874023
    7. ' integer' → logprob: -17.502477645874023
    8. '`' → logprob: -17.752477645874023
    9. '```' → logprob: -18.377477645874023
    10. '_int' → logprob: -18.877477645874023

Token 144: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.125004768371582
    3. '_pad' → logprob: -13.375004768371582
    4. '_bins' → logprob: -15.000004768371582
    5. ' _' → logprob: -15.125004768371582
    6. '_bit' → logprob: -16.0000057220459
    7. '_b' → logprob: -16.2500057220459
    8. '_part' → logprob: -16.3750057220459
    9. '_BIN' → logprob: -16.7500057220459
    10. '_pin' → logprob: -16.8750057220459

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. ' ' → logprob: -14.950940132141113
    4. '.=' → logprob: -16.825939178466797
    5. '.' → logprob: -16.950939178466797
    6. '='' → logprob: -17.325939178466797
    7. '=}' → logprob: -17.575939178466797
    8. '=

' → logprob: -17.700939178466797
    9. ')' → logprob: -17.825939178466797
    10. '＝' → logprob: -18.075939178466797

Token 146: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18772128224372864
    2. 'int' → logprob: -1.8127212524414062
    3. ''' → logprob: -5.562721252441406
    4. ' '' → logprob: -5.687721252441406
    5. ' integer' → logprob: -8.312721252441406
    6. ''int' → logprob: -8.437721252441406
    7. ' ' → logprob: -9.312721252441406
    8. '"' → logprob: -9.687721252441406
    9. 'integer' → logprob: -10.062721252441406
    10. ' "' → logprob: -11.312721252441406

Token 147: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -1.9027791495318525e-05
    2. 'int' → logprob: -11.125019073486328
    3. 'bin' → logprob: -13.500019073486328
    4. '_pad' → logprob: -13.750019073486328
    5. '(' → logprob: -14.750019073486328
    6. '_BIN' → logprob: -15.625019073486328
    7. '_part' → logprob: -15.750019073486328
    8. '(int' → logprob: -15.875019073486328
    9. '(bin' → logprob: -16.000019073486328
    10. '```' → logprob: -16.125019073486328

Token 148: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.0007298283162526786
    2. '.r' → logprob: -7.250730037689209
    3. '.' → logprob: -10.87572956085205
    4. 'z' → logprob: -14.50072956085205
    5. 'r' → logprob: -15.12572956085205
    6. ' .' → logprob: -16.000730514526367
    7. ' z' → logprob: -17.125730514526367
    8. ').' → logprob: -19.000730514526367
    9. '	z' → logprob: -19.750730514526367
    10. '   ' → logprob: -20.000730514526367

Token 149: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -8.41866585687967e-06
    2. 'f' → logprob: -11.750008583068848
    3. 'filled' → logprob: -14.750008583068848
    4. '_fill' → logprob: -16.87500762939453
    5. '-fill' → logprob: -17.75000762939453
    6. 'file' → logprob: -19.00000762939453
    7. '.fill' → logprob: -19.12500762939453
    8. 'l' → logprob: -19.37500762939453
    9. 'fills' → logprob: -19.62500762939453
    10. ' fill' → logprob: -19.62500762939453

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '8' → logprob: -14.500000953674316
    3. ' (' → logprob: -18.0
    4. '(
' → logprob: -19.125
    5. '('' → logprob: -19.875
    6. '((' → logprob: -20.125
    7. '(

' → logprob: -21.375
    8. '()' → logprob: -22.625
    9. '```' → logprob: -23.0
    10. ')(' → logprob: -23.0

Token 151: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -20.000001907348633
    5. '８' → logprob: -20.750001907348633
    6. '08' → logprob: -20.875001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '۸' → logprob: -21.500001907348633
    9. '(' → logprob: -21.750001907348633
    10. '
' → logprob: -22.000001907348633

Token 152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -16.625001907348633
    4. ')
' → logprob: -17.125001907348633
    5. '()' → logprob: -17.375001907348633
    6. ')`' → logprob: -17.375001907348633
    7. '')' → logprob: -18.250001907348633
    8. '())' → logprob: -18.625001907348633
    9. '),' → logprob: -19.000001907348633
    10. '0' → logprob: -19.250001907348633

Token 153: '   ' (ID: 271)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.6871870756149292
    2. '   ' → logprob: -0.8121870756149292
    3. 'fraction' → logprob: -4.062187194824219
    4. 'bin' → logprob: -4.562187194824219
    5. 'result' → logprob: -4.937187194824219
    6. 'f' → logprob: -5.187187194824219
    7. 'fr' → logprob: -5.437187194824219
    8. '#' → logprob: -5.937187194824219
    9. 'fract' → logprob: -6.562187194824219
    10. 'res' → logprob: -6.562187194824219

Token 154: ' #' (ID: 1069)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.02696925215423107
    2. 'fraction' → logprob: -3.7769691944122314
    3. 'result' → logprob: -6.1519694328308105
    4. 'binary' → logprob: -7.7769694328308105
    5. '#' (adapté à ' #') → logprob: -7.7769694328308105
    6. 'fract' → logprob: -8.276968955993652
    7. 'f' → logprob: -9.026968955993652
    8. 'bin' → logprob: -9.026968955993652
    9. 'fr' → logprob: -9.151968955993652
    10. 'frag' → logprob: -9.776968955993652

Token 155: ' Convert' (ID: 15629)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.45147445797920227
    2. 'fraction' → logprob: -1.0764744281768799
    3. '#' → logprob: -4.701474666595459
    4. 'binary' → logprob: -4.951474666595459
    5. ' frac' → logprob: -5.701474666595459
    6. 'result' → logprob: -6.326474666595459
    7. 'bin' → logprob: -7.701474666595459
    8. 'fr' → logprob: -8.9514741897583
    9. 'fract' → logprob: -8.9514741897583
    10. 'if' → logprob: -9.2014741897583

Token 156: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.06360355764627457
    2. 'frac' → logprob: -3.438603639602661
    3. ' fractional' → logprob: -3.813603639602661
    4. ' frac' → logprob: -5.438603401184082
    5. ' fraction' → logprob: -5.938603401184082
    6. 'result' → logprob: -8.563603401184082
    7. 'fract' → logprob: -9.938603401184082
    8. '_fraction' → logprob: -10.063603401184082
    9. 'f' → logprob: -10.313603401184082
    10. ' result' → logprob: -10.438603401184082

Token 157: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.049850448966026306
    2. '_' → logprob: -3.0498504638671875
    3. '_bits' → logprob: -7.5498504638671875
    4. '_parts' → logprob: -8.299850463867188
    5. 'part' → logprob: -8.424850463867188
    6. '_bin' → logprob: -9.174850463867188
    7. '_fraction' → logprob: -9.549850463867188
    8. ' part' → logprob: -10.049850463867188
    9. ' =' → logprob: -10.924850463867188
    10. ' _' → logprob: -12.299850463867188

Token 158: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6790668368339539
    2. ' =' → logprob: -0.8040668368339539
    3. 'to' → logprob: -4.3040666580200195
    4. '_bin' → logprob: -4.8040666580200195
    5. '_binary' → logprob: -5.3040666580200195
    6. '_bits' → logprob: -5.4290666580200195
    7. '_to' → logprob: -5.8040666580200195
    8. ' to' → logprob: -5.9290666580200195
    9. 'binary' → logprob: -6.4290666580200195
    10. '_' → logprob: -6.9290666580200195

Token 159: ' binary' (ID: 15600)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -1.2011899948120117
    2. '''' → logprob: -1.3261899948120117
    3. 'binary' → logprob: -1.8261899948120117
    4. '""' → logprob: -2.2011899948120117
    5. ' binary' → logprob: -2.5761899948120117
    6. ' fractional' → logprob: -3.7011899948120117
    7. ' ''' → logprob: -4.326189994812012
    8. ''' → logprob: -4.451189994812012
    9. ' ""' → logprob: -4.701189994812012
    10. '"' → logprob: -4.826189994812012

Token 160: ' with' (ID: 483)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0233627557754517
    2. '   ' → logprob: -1.5233627557754517
    3. 'fraction' → logprob: -1.5233627557754517
    4. ':' → logprob: -3.273362636566162
    5. '_fraction' → logprob: -3.273362636566162
    6. ' fractional' → logprob: -3.648362636566162
    7. ' fraction' → logprob: -3.898362636566162
    8. ',' → logprob: -4.273362636566162
    9. 'result' → logprob: -4.398362636566162
    10. 'decimal' → logprob: -4.898362636566162

Token 161: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7900232076644897
    2. 'fraction' → logprob: -2.0400233268737793
    3. ' precision' → logprob: -2.4150233268737793
    4. ' fractional' → logprob: -2.5400233268737793
    5. ' four' → logprob: -2.7900233268737793
    6. ' ' → logprob: -3.1650233268737793
    7. ' up' → logprob: -3.4150233268737793
    8. ' limited' → logprob: -3.6650233268737793
    9. 'precision' → logprob: -3.7900233268737793
    10. ' fraction' → logprob: -4.540023326873779

Token 162: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11800689250230789
    2. 'precision' → logprob: -2.993006944656372
    3. 'fraction' → logprob: -3.493006944656372
    4. 'limit' → logprob: -4.368006706237793
    5. 'max' → logprob: -5.368006706237793
    6. ' precision' → logprob: -5.618006706237793
    7. 'limited' → logprob: -6.118006706237793
    8. 'a' → logprob: -6.118006706237793
    9. 'up' → logprob: -6.618006706237793
    10. ' up' → logprob: -7.243006706237793

Token 163: ' fractional' (ID: 136350)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.03457464650273323
    2. '_bits' → logprob: -3.7845747470855713
    3. 'bits' → logprob: -5.159574508666992
    4. ' ' → logprob: -6.659574508666992
    5. ' digits' → logprob: -6.784574508666992
    6. ' spaces' → logprob: -7.284574508666992
    7. '_' → logprob: -7.284574508666992
    8. ' bit' → logprob: -7.784574508666992
    9. ' places' → logprob: -8.034574508666992
    10. '<|end|>' → logprob: -9.034574508666992

Token 164: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.4932263195514679
    2. 'bits' → logprob: -0.9932262897491455
    3. '_bits' → logprob: -4.368226528167725
    4. ' digits' → logprob: -5.743226528167725
    5. 'digits' → logprob: -5.868226528167725
    6. ' places' → logprob: -9.368226051330566
    7. '_digits' → logprob: -9.493226051330566
    8. 'places' → logprob: -10.118226051330566
    9. '_' → logprob: -11.243226051330566
    10. '_places' → logprob: -11.243226051330566

Token 165: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06542269885540009
    2. 'fraction' → logprob: -3.440422773361206
    3. '.' → logprob: -4.815422534942627
    4. ':' → logprob: -5.565422534942627
    5. 'frac' → logprob: -5.690422534942627
    6. ',' → logprob: -5.940422534942627
    7. ' fractional' → logprob: -6.065422534942627
    8. '
' → logprob: -6.440422534942627
    9. ' frac' → logprob: -6.690422534942627
    10. '```' → logprob: -6.815422534942627

Token 166: '
' (ID: 198)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.476940393447876
    2. ' fractional' → logprob: -1.851940393447876
    3. '.' → logprob: -2.351940393447876
    4. '   ' → logprob: -2.726940393447876
    5. ' fraction' → logprob: -3.476940393447876
    6. ' frac' → logprob: -4.976940155029297
    7. '_fraction' → logprob: -5.101940155029297
    8. 'result' → logprob: -5.726940155029297
    9. '
' → logprob: -6.101940155029297
    10. 'f' → logprob: -6.351940155029297

Token 167: '   ' (ID: 271)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.028904380276799202
    2. 'fraction' → logprob: -3.778904438018799
    3. ' frac' → logprob: -5.903904438018799
    4. '   ' → logprob: -6.028904438018799
    5. 'result' → logprob: -9.02890396118164
    6. 'fract' → logprob: -9.15390396118164
    7. 'fr' → logprob: -9.40390396118164
    8. 'bin' → logprob: -9.77890396118164
    9. 'f' → logprob: -10.15390396118164
    10. ' fractional' → logprob: -10.65390396118164

Token 168: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.011099467054009438
    2. 'fraction' → logprob: -4.511099338531494
    3. ' frac' → logprob: -10.636099815368652
    4. 'fract' → logprob: -11.386099815368652
    5. 'frag' → logprob: -11.636099815368652
    6. 'fra' → logprob: -12.886099815368652
    7. 'fr' → logprob: -13.261099815368652
    8. 'result' → logprob: -13.511099815368652
    9. 'bits' → logprob: -14.761099815368652
    10. '_frac' → logprob: -15.136099815368652

Token 169: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.001049838843755424
    2. '_bits' → logprob: -7.626049995422363
    3. '_binary' → logprob: -7.751049995422363
    4. 'bin' → logprob: -9.126049995422363
    5. '_str' → logprob: -11.626049995422363
    6. '_bins' → logprob: -12.376049995422363
    7. '_parts' → logprob: -13.001049995422363
    8. '_part' → logprob: -13.126049995422363
    9. '_' → logprob: -13.376049995422363
    10. 'binary' → logprob: -14.376049995422363

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014162540435791
    2. '=' → logprob: -1.701416254043579
    3. '=""' → logprob: -13.826416015625
    4. '=''' → logprob: -14.076416015625
    5. ' ' → logprob: -15.201416015625
    6. 's' → logprob: -15.201416015625
    7. ',' → logprob: -15.451416015625
    8. '   ' → logprob: -16.076416015625
    9. '=[]' → logprob: -16.451416015625
    10. '>' → logprob: -16.576416015625

Token 171: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.1277071088552475
    2. '''' → logprob: -2.127707004547119
    3. ' ""' → logprob: -7.752707004547119
    4. ' ''' → logprob: -8.627707481384277
    5. '"' → logprob: -8.752707481384277
    6. '[]' → logprob: -11.752707481384277
    7. '''
' → logprob: -12.752707481384277
    8. ''' → logprob: -14.127707481384277
    9. ' []' → logprob: -14.877707481384277
    10. '"",' → logprob: -16.25270652770996

Token 172: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9323118925094604
    2. 'for' → logprob: -1.3073118925094604
    3. 'fraction' → logprob: -1.4323118925094604
    4. 'frac' → logprob: -3.18231201171875
    5. ' frac' → logprob: -4.30731201171875
    6. 'f' → logprob: -4.30731201171875
    7. ' fraction' → logprob: -5.18231201171875
    8. 'count' → logprob: -5.55731201171875
    9. '   ' → logprob: -5.55731201171875
    10. ' fractional' → logprob: -6.05731201171875

Token 173: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.8238393664360046
    2. 'for' → logprob: -1.1988394260406494
    3. 'fraction' → logprob: -1.4488394260406494
    4. 'f' → logprob: -3.8238394260406494
    5. ' for' → logprob: -6.94883918762207
    6. '   ' → logprob: -7.19883918762207
    7. 'temp' → logprob: -7.82383918762207
    8. ' frac' → logprob: -7.94883918762207
    9. 'fract' → logprob: -8.44883918762207
    10. 'value' → logprob: -9.44883918762207

Token 174: ' =' (ID: 314)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.25803834199905396
    2. '_fraction' → logprob: -1.6330382823944092
    3. '_' → logprob: -4.883038520812988
    4. '   ' → logprob: -5.258038520812988
    5. ' =' → logprob: -5.383038520812988
    6. '=' → logprob: -6.008038520812988
    7. 'tion' → logprob: -6.133038520812988
    8. 'part' → logprob: -6.133038520812988
    9. 'ion' → logprob: -7.008038520812988
    10. '_value' → logprob: -7.008038520812988

Token 175: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.006717863027006388
    2. ' fractional' → logprob: -5.006717681884766
    3. ' fraction' → logprob: -13.256717681884766
    4. 'fra' → logprob: -14.881717681884766
    5. '   ' → logprob: -15.756717681884766
    6. '_fraction' → logprob: -16.631717681884766
    7. 'floating' → logprob: -16.631717681884766
    8. 'Fraction' → logprob: -16.631717681884766
    9. 'frac' → logprob: -17.756717681884766
    10. ' ' → logprob: -18.381717681884766

Token 176: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. 'part' → logprob: -15.75
    4. '_parts' → logprob: -17.5
    5. '_value' → logprob: -18.875
    6. '_point' → logprob: -19.0
    7. ' _' → logprob: -19.75
    8. ' part' → logprob: -20.25
    9. '   ' → logprob: -20.25
    10. '_p' → logprob: -20.25

Token 177: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22984181344509125
    2. '*' → logprob: -1.6048418283462524
    3. '
' → logprob: -6.479841709136963
    4. '<|end|>' → logprob: -6.854841709136963
    5. ' ' → logprob: -7.979841709136963
    6. '   ' → logprob: -7.979841709136963
    7. ' for' → logprob: -8.604842185974121
    8. ')' → logprob: -8.854842185974121
    9. 'for' → logprob: -9.104842185974121
    10. '<|end|>' → logprob: -9.354842185974121

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31609100103378296
    2. ' for' → logprob: -1.5660910606384277
    3. 'for' → logprob: -2.8160910606384277
    4. '    
' → logprob: -6.691091060638428
    5. ' 
' → logprob: -8.31609058380127
    6. '    ' → logprob: -8.56609058380127
    7. ' ' → logprob: -8.69109058380127
    8. '	for' → logprob: -8.69109058380127
    9. '
' → logprob: -9.31609058380127
    10. '  
' → logprob: -10.19109058380127

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08968809247016907
    2. 'for' (adapté à ' for') → logprob: -2.4646880626678467
    3. ' ' → logprob: -7.964688301086426
    4. '    ' → logprob: -8.839688301086426
    5. ' 
' → logprob: -9.214688301086426
    6. '   ' → logprob: -9.714688301086426
    7. ' while' → logprob: -10.089688301086426
    8. '    
' → logprob: -10.464688301086426
    9. '     
' → logprob: -11.214688301086426
    10. 'while' → logprob: -12.214688301086426

Token 180: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.013048466295003891
    2. '_' → logprob: -4.3880486488342285
    3. ' i' → logprob: -7.6380486488342285
    4. ' range' → logprob: -11.01304817199707
    5. 'i' → logprob: -11.38804817199707
    6. '_range' → logprob: -11.76304817199707
    7. '_i' → logprob: -12.01304817199707
    8. ' ' → logprob: -12.13804817199707
    9. 'range' → logprob: -12.38804817199707
    10. ' in' → logprob: -12.51304817199707

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011877299984917045
    2. 'in' → logprob: -7.001187801361084
    3. 'range' → logprob: -8.251187324523926
    4. ' range' → logprob: -11.876187324523926
    5. ' ' → logprob: -12.001187324523926
    6. '  ' → logprob: -13.501187324523926
    7. '    ' → logprob: -15.626187324523926
    8. '   ' → logprob: -16.001188278198242
    9. '<|end|>' → logprob: -16.001188278198242
    10. 'i' → logprob: -16.626188278198242

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020461321400944144
    2. ' range' → logprob: -8.500205039978027
    3. '[' → logprob: -14.750205039978027
    4. ' ' → logprob: -15.250205039978027
    5. '   ' → logprob: -15.750205039978027
    6. '(range' → logprob: -16.62520408630371
    7. '	range' → logprob: -16.75020408630371
    8. '  ' → logprob: -17.50020408630371
    9. '```' → logprob: -18.00020408630371
    10. '    ' → logprob: -18.12520408630371

Token 183: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014364466071128845
    2. ' ' → logprob: -4.264364242553711
    3. '(' → logprob: -8.514364242553711
    4. ' (' → logprob: -15.639364242553711
    5. '   ' → logprob: -17.20186424255371
    6. '8' → logprob: -17.51436424255371
    7. '6' → logprob: -17.76436424255371
    8. '16' → logprob: -18.20186424255371
    9. ' ' → logprob: -18.45186424255371
    10. '5' → logprob: -18.57686424255371

Token 184: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '```' → logprob: -20.562501907348633
    5. '' → logprob: -20.625001907348633
    6. '４' → logprob: -21.125001907348633
    7. ')' → logprob: -21.312501907348633
    8. '۴' → logprob: -21.375001907348633
    9. '5' → logprob: -21.687501907348633
    10. '04' → logprob: -21.875001907348633

Token 185: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6330808997154236
    2. '):' → logprob: -0.7580808997154236
    3. '   ' → logprob: -8.88308048248291
    4. ' ):
' → logprob: -9.13308048248291
    5. ':' → logprob: -9.38308048248291
    6. ')' → logprob: -9.50808048248291
    7. ' ):' → logprob: -9.75808048248291
    8. '):
' → logprob: -11.63308048248291
    9. ':
' → logprob: -12.38308048248291
    10. '):

' → logprob: -13.00808048248291

Token 186: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12934653460979462
    2. 'frac' → logprob: -2.2543466091156006
    3. '       ' → logprob: -4.7543463706970215
    4. ' frac' → logprob: -4.8793463706970215
    5. 'fraction' → logprob: -10.12934684753418
    6. 'fract' → logprob: -10.62934684753418
    7. '   ' → logprob: -10.75434684753418
    8. '```' → logprob: -11.00434684753418
    9. '    
' → logprob: -11.25434684753418
    10. '    ' → logprob: -11.50434684753418

Token 187: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.0005809116992168128
    2. ' frac' → logprob: -7.500580787658691
    3. '   ' → logprob: -10.750580787658691
    4. 'fract' → logprob: -12.625580787658691
    5. 'fraction' → logprob: -13.500580787658691
    6. 'frag' → logprob: -14.625580787658691
    7. '    
' → logprob: -14.875580787658691
    8. 'fra' → logprob: -15.000580787658691
    9. 'fr' → logprob: -15.125580787658691
    10. '       ' → logprob: -16.000581741333008

Token 188: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0703113004565239
    2. ' *=' → logprob: -2.6953113079071045
    3. '=' → logprob: -8.570311546325684
    4. '\' → logprob: -9.695311546325684
    5. ' <<=' → logprob: -9.945311546325684
    6. '*' → logprob: -10.695311546325684
    7. ' ' → logprob: -10.695311546325684
    8. '	' → logprob: -11.320311546325684
    9. '```' → logprob: -11.820311546325684
    10. '   ' → logprob: -12.195311546325684

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.000096321105957
    4. '```' → logprob: -17.750097274780273
    5. '  ' → logprob: -18.750097274780273
    6. '`' → logprob: -19.000097274780273
    7. '0' → logprob: -19.000097274780273
    8. '۲' → logprob: -19.562597274780273
    9. '20' → logprob: -19.625097274780273
    10. '２' → logprob: -19.750097274780273

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.125003814697266
    4. '```' → logprob: -17.125003814697266
    5. '0' → logprob: -18.187503814697266
    6. '۲' → logprob: -18.875003814697266
    7. '２' → logprob: -19.062503814697266
    8. '  ' → logprob: -19.187503814697266
    9. '`' → logprob: -19.562503814697266
    10. '20' → logprob: -19.812503814697266

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13025008141994476
    2. '       ' → logprob: -3.1302499771118164
    3. 'if' → logprob: -3.8802499771118164
    4. ' if' → logprob: -4.005249977111816
    5. '<|end|>' → logprob: -4.630249977111816
    6. '   ' → logprob: -5.130249977111816
    7. '  
' → logprob: -5.255249977111816
    8. ',' → logprob: -5.630249977111816
    9. '#' → logprob: -5.755249977111816
    10. ',
' → logprob: -5.880249977111816

Token 192: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2752990126609802
    2. '       ' → logprob: -1.900299072265625
    3. 'if' → logprob: -2.400299072265625
    4. '   ' → logprob: -8.275299072265625
    5. ',' → logprob: -10.400299072265625
    6. '0' → logprob: -11.025299072265625
    7. '<|end|>' → logprob: -11.150299072265625
    8. ' ' → logprob: -11.525299072265625
    9. 'digit' → logprob: -11.525299072265625
    10. '	if' → logprob: -11.650299072265625

Token 193: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.25772884488105774
    2. 'if' → logprob: -1.5077288150787354
    3. 'digit' → logprob: -5.2577290534973145
    4. ' if' → logprob: -8.007728576660156
    5. ' bit' → logprob: -8.507728576660156
    6. '       ' → logprob: -11.257728576660156
    7. 'int' → logprob: -11.882728576660156
    8. 'b' → logprob: -11.882728576660156
    9. 'fraction' → logprob: -12.632728576660156
    10. 'whole' → logprob: -13.007728576660156

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575976550579071
    2. ' =' → logprob: -0.825976550579071
    3. 's' → logprob: -10.950976371765137
    4. '=int' → logprob: -11.700976371765137
    5. '_' → logprob: -12.325976371765137
    6. ',' → logprob: -12.450976371765137
    7. '='' → logprob: -14.700976371765137
    8. ')' → logprob: -15.075976371765137
    9. ' ' → logprob: -15.075976371765137
    10. '	' → logprob: -15.575976371765137

Token 195: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4756794273853302
    2. ' int' → logprob: -1.1006793975830078
    3. '1' → logprob: -3.100679397583008
    4. ' ' → logprob: -7.600679397583008
    5. ''' → logprob: -9.100679397583008
    6. 'str' → logprob: -9.100679397583008
    7. '0' → logprob: -9.850679397583008
    8. ' '' → logprob: -9.975679397583008
    9. ' str' → logprob: -10.725679397583008
    10. '"' → logprob: -11.475679397583008

Token 196: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -11.000024795532227
    3. 'frac' → logprob: -11.750024795532227
    4. '(frm' → logprob: -16.125024795532227
    5. ' frac' → logprob: -16.250024795532227
    6. '(f' → logprob: -17.125024795532227
    7. '(freq' → logprob: -17.625024795532227
    8. '()' → logprob: -17.625024795532227
    9. '(fe' → logprob: -17.750024795532227
    10. '((' → logprob: -18.250024795532227

Token 197: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0002560945285949856
    2. 'act' → logprob: -8.750256538391113
    3. 'frac' → logprob: -10.500256538391113
    4. ')' → logprob: -10.875256538391113
    5. 'action' → logprob: -10.875256538391113
    6. 'acc' → logprob: -11.750256538391113
    7. 'ag' → logprob: -12.250256538391113
    8. 'c' → logprob: -12.875256538391113
    9. '   ' → logprob: -13.375256538391113
    10. '```' → logprob: -13.500256538391113

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012648787815123796
    2. ')
' → logprob: -6.876265048980713
    3. '>=' → logprob: -9.251264572143555
    4. '>' → logprob: -9.751264572143555
    5. ')>=' → logprob: -11.001264572143555
    6. ')>' → logprob: -11.126264572143555
    7. '[' → logprob: -11.126264572143555
    8. ' >=' → logprob: -12.251264572143555
    9. '<|end|>' → logprob: -12.376264572143555
    10. ')

' → logprob: -12.501264572143555

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7157071828842163
    2. 'frac' → logprob: -0.7157071828842163
    3. ' frac' → logprob: -5.590707302093506
    4. 'if' → logprob: -5.590707302093506
    5. ' if' → logprob: -5.715707302093506
    6. '   ' → logprob: -5.840707302093506
    7. '.' → logprob: -6.215707302093506
    8. '<|end|>' → logprob: -6.715707302093506
    9. '        
' → logprob: -6.840707302093506
    10. ')' → logprob: -7.090707302093506

Token 200: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.5777921676635742
    2. ' frac' → logprob: -0.8277921676635742
    3. 'if' → logprob: -7.452792167663574
    4. ' if' → logprob: -7.577792167663574
    5. 'fraction' → logprob: -7.952792167663574
    6. 'fr' → logprob: -9.327792167663574
    7. 'fract' → logprob: -9.890292167663574
    8. '_frac' → logprob: -10.515292167663574
    9. '   ' → logprob: -10.577792167663574
    10. ' ' → logprob: -10.577792167663574

Token 201: '_bin' (ID: 53631)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3696640133857727
    2. ' -=' → logprob: -1.244663953781128
    3. '=' → logprob: -3.994663953781128
    4. '-' → logprob: -5.994664192199707
    5. ')' → logprob: -10.744664192199707
    6. '%=' → logprob: -10.994664192199707
    7. ' =' → logprob: -11.119664192199707
    8. '.' → logprob: -12.119664192199707
    9. '*=' → logprob: -12.369664192199707
    10. ' -' → logprob: -12.494664192199707

Token 202: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021033499797340482
    2. '.' → logprob: -8.500210762023926
    3. 'append' → logprob: -12.000210762023926
    4. '.app' → logprob: -15.000210762023926
    5. '.ap' → logprob: -15.500210762023926
    6. ' .' → logprob: -16.75020980834961
    7. ' append' → logprob: -17.37520980834961
    8. '.Append' → logprob: -17.37520980834961
    9. '.push' → logprob: -17.37520980834961
    10. 'Append' → logprob: -17.87520980834961

Token 203: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00023631771910004318
    2. '(bit' → logprob: -9.125236511230469
    3. 'str' → logprob: -9.500236511230469
    4. '(' → logprob: -9.875236511230469
    5. '('' → logprob: -14.750236511230469
    6. 'bit' → logprob: -14.875236511230469
    7. '(bin' → logprob: -16.00023651123047
    8. '(chr' → logprob: -16.12523651123047
    9. ' str' → logprob: -16.75023651123047
    10. '((' → logprob: -17.50023651123047

Token 204: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -8.2994620242971e-06
    2. 'bit' → logprob: -11.750008583068848
    3. '(' → logprob: -15.000008583068848
    4. ' bit' → logprob: -17.50000762939453
    5. '(Bit' → logprob: -19.00000762939453
    6. '(bits' → logprob: -19.37500762939453
    7. ')' → logprob: -20.12500762939453
    8. '.bit' → logprob: -20.25000762939453
    9. '(bin' → logprob: -20.62500762939453
    10. '(
' → logprob: -20.87500762939453

Token 205: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2423073649406433
    2. '))' → logprob: -1.992307424545288
    3. ')
' → logprob: -2.742307424545288
    4. '))
' → logprob: -4.242307186126709
    5. ')

' → logprob: -13.242307662963867
    6. ' )' → logprob: -13.367307662963867
    7. ')
' → logprob: -13.617307662963867
    8. ')))' → logprob: -13.867307662963867
    9. ' )
' → logprob: -13.992307662963867
    10. '))

' → logprob: -14.617307662963867

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02052892930805683
    2. 'frac' → logprob: -4.270528793334961
    3. ' if' → logprob: -6.145528793334961
    4. ' frac' → logprob: -6.145528793334961
    5. '   ' → logprob: -6.395528793334961
    6. 'if' → logprob: -8.270528793334961
    7. '_frac' → logprob: -10.020528793334961
    8. '        
' → logprob: -10.895528793334961
    9. ' ' → logprob: -11.145528793334961
    10. '```' → logprob: -11.895528793334961

Token 207: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.000116655595775228
    2. ' frac' → logprob: -9.125116348266602
    3. '   ' → logprob: -12.250116348266602
    4. 'if' → logprob: -13.500116348266602
    5. '       ' → logprob: -14.375116348266602
    6. 'fract' → logprob: -15.000116348266602
    7. 'fraction' → logprob: -15.750116348266602
    8. '    
' → logprob: -15.750116348266602
    9. '_frac' → logprob: -16.5001163482666
    10. 'frag' → logprob: -16.7501163482666

Token 208: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03170497342944145
    2. ' -=' → logprob: -3.531704902648926
    3. '=' → logprob: -6.281704902648926
    4. '-' → logprob: -9.906704902648926
    5. '%=' → logprob: -10.406704902648926
    6. ' =' → logprob: -13.781704902648926
    7. '*=' → logprob: -15.406704902648926
    8. ' -' → logprob: -15.531704902648926
    9. ' %=' → logprob: -15.656704902648926
    10. '%' → logprob: -15.781704902648926

Token 209: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.676292231422849e-05
    2. ' bit' → logprob: -11.000017166137695
    3. 'int' → logprob: -17.125017166137695
    4. 'float' → logprob: -18.000017166137695
    5. '(bit' → logprob: -19.875017166137695
    6. 'bits' → logprob: -21.875017166137695
    7. 'bot' → logprob: -22.500017166137695
    8. 'bitr' → logprob: -22.625017166137695
    9. 'frac' → logprob: -22.625017166137695
    10. '0' → logprob: -23.375017166137695

Token 210: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2663346529006958
    2. '
' → logprob: -1.7663346529006958
    3. ' if' → logprob: -3.0163345336914062
    4. '    
' → logprob: -5.391334533691406
    5. 'if' → logprob: -5.766334533691406
    6. ' ' → logprob: -6.641334533691406
    7. '  
' → logprob: -6.641334533691406
    8. '

' → logprob: -6.891334533691406
    9. '       ' → logprob: -7.141334533691406
    10. ' 
' → logprob: -7.516334533691406

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0934564545750618
    2. ' if' → logprob: -2.468456506729126
    3. '       ' → logprob: -6.468456268310547
    4. '    
' → logprob: -7.093456268310547
    5. '
' → logprob: -7.218456268310547
    6. 'if' → logprob: -7.343456268310547
    7. ' ' → logprob: -7.843456268310547
    8. '  
' → logprob: -9.343456268310547
    9. '    ' → logprob: -9.718456268310547
    10. '  ' → logprob: -9.718456268310547

Token 212: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.072882279753685
    2. '#' (adapté à ' #') → logprob: -3.1978821754455566
    3. ' if' → logprob: -4.197882175445557
    4. '   ' → logprob: -4.822882175445557
    5. 'fraction' → logprob: -5.822882175445557
    6. 'binary' → logprob: -6.697882175445557
    7. 'result' → logprob: -6.947882175445557
    8. ' #' → logprob: -7.822882175445557
    9. 'frac' → logprob: -8.197882652282715
    10. 'return' → logprob: -8.322882652282715

Token 213: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12410435825586319
    2. '#' → logprob: -2.7491042613983154
    3. 'frac' → logprob: -3.4991042613983154
    4. 'fraction' → logprob: -4.6241044998168945
    5. 'binary' → logprob: -4.7491044998168945
    6. 'result' → logprob: -5.9991044998168945
    7. 'Check' → logprob: -7.9991044998168945
    8. 'If' → logprob: -8.374104499816895
    9. ' if' → logprob: -8.749104499816895
    10. 'bin' → logprob: -8.999104499816895

Token 214: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.454836905002594
    2. 'if' → logprob: -1.2048368453979492
    3. ' any' → logprob: -3.579836845397949
    4. ' frac' → logprob: -4.329836845397949
    5. 'frac' → logprob: -4.954836845397949
    6. ' all' → logprob: -5.079836845397949
    7. ' ' → logprob: -5.454836845397949
    8. 'any' → logprob: -6.579836845397949
    9. ' not' → logprob: -6.704836845397949
    10. ''' → logprob: -6.954836845397949

Token 215: ' fractional' (ID: 136350)
  Prédit: ' frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' frac' → logprob: -0.25500211119651794
    2. 'frac' → logprob: -1.6300021409988403
    3. ' any' → logprob: -3.755002021789551
    4. ' abs' → logprob: -6.130002021789551
    5. 'any' → logprob: -6.255002021789551
    6. 'abs' → logprob: -7.630002021789551
    7. ' all' → logprob: -7.755002021789551
    8. 'fraction' → logprob: -9.13000202178955
    9. ' ' → logprob: -9.25500202178955
    10. ''' → logprob: -9.63000202178955

Token 216: ' part' (ID: 997)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -1.2066539525985718
    2. ' part' → logprob: -1.3316539525985718
    3. 'part' → logprob: -1.5816539525985718
    4. '_part' → logprob: -1.8316539525985718
    5. ' frac' → logprob: -3.9566540718078613
    6. '_' → logprob: -4.206654071807861
    7. ' ' → logprob: -5.081654071807861
    8. 'fraction' → logprob: -5.206654071807861
    9. '_frac' → logprob: -5.331654071807861
    10. '   ' → logprob: -5.831654071807861

Token 217: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6476593613624573
    2. ' ==' → logprob: -2.1476593017578125
    3. ' is' → logprob: -2.3976593017578125
    4. ' has' → logprob: -3.0226593017578125
    5. '.count' → logprob: -3.2726593017578125
    6. 'has' → logprob: -3.7726593017578125
    7. 'is' → logprob: -4.0226593017578125
    8. '.strip' → logprob: -4.0226593017578125
    9. ' contains' → logprob: -4.1476593017578125
    10. ' and' → logprob: -4.5226593017578125

Token 218: ' exact' (ID: 6354)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.357643485069275
    2. '0' → logprob: -1.607643485069275
    3. ' not' → logprob: -1.607643485069275
    4. ' all' → logprob: -2.7326436042785645
    5. ''' → logprob: -2.7326436042785645
    6. 'zero' → logprob: -3.1076436042785645
    7. 'non' → logprob: -3.1076436042785645
    8. ' ' → logprob: -3.2326436042785645
    9. ' non' → logprob: -3.8576436042785645
    10. 'all' → logprob: -4.2326436042785645

Token 219: ' within' (ID: 3518)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2869768738746643
    2. 'and' → logprob: -1.5369768142700195
    3. 'ly' → logprob: -3.4119768142700195
    4. ' ' → logprob: -7.4119768142700195
    5. ' or' → logprob: -8.53697681427002
    6. ' if' → logprob: -9.03697681427002
    7. 'if' → logprob: -9.28697681427002
    8. '=' → logprob: -9.28697681427002
    9. ' zero' → logprob: -9.28697681427002
    10. ' after' → logprob: -9.53697681427002

Token 220: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04270133748650551
    2. ' ' → logprob: -4.042701244354248
    3. 'frac' → logprob: -4.042701244354248
    4. '1' → logprob: -5.792701244354248
    5. '0' → logprob: -6.667701244354248
    6. 'len' → logprob: -7.042701244354248
    7. ''' → logprob: -7.667701244354248
    8. 'fraction' → logprob: -8.417701721191406
    9. ' frac' → logprob: -8.917701721191406
    10. '5' → logprob: -9.167701721191406

Token 221: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00017040544480551034
    2. ' ' → logprob: -9.500170707702637
    3. '0' → logprob: -10.375170707702637
    4. 'frac' → logprob: -11.125170707702637
    5. 'len' → logprob: -11.250170707702637
    6. '5' → logprob: -11.500170707702637
    7. '1' → logprob: -11.750170707702637
    8. 'four' → logprob: -12.375170707702637
    9. 'fraction' → logprob: -12.375170707702637
    10. 't' → logprob: -13.375170707702637

Token 222: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.16047371923923492
    2. ' bits' → logprob: -1.9104737043380737
    3. '_bits' → logprob: -8.410473823547363
    4. 'digits' → logprob: -12.160473823547363
    5. 'fraction' → logprob: -12.410473823547363
    6. 'bit' → logprob: -12.535473823547363
    7. ' ' → logprob: -13.160473823547363
    8. ' digits' → logprob: -13.410473823547363
    9. ' fractional' → logprob: -13.785473823547363
    10. '.bits' → logprob: -13.785473823547363

Token 223: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1773749738931656
    2. ' if' → logprob: -1.9273749589920044
    3. 'if' → logprob: -4.177374839782715
    4. ' and' → logprob: -6.552374839782715
    5. 'and' → logprob: -9.427374839782715
    6. ' or' → logprob: -9.927374839782715
    7. '    ' → logprob: -10.052374839782715
    8. '    
' → logprob: -10.927374839782715
    9. ' ' → logprob: -11.427374839782715
    10. '```' → logprob: -11.552374839782715

Token 224: ' frac' (ID: 72308)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007627211511135101
    2. 'if' → logprob: -5.132627010345459
    3. '   ' → logprob: -6.382627010345459
    4. ' ' → logprob: -12.757627487182617
    5. '    ' → logprob: -13.882627487182617
    6. '```' → logprob: -13.882627487182617
    7. ' ' → logprob: -15.007627487182617
    8. ' for' → logprob: -15.132627487182617
    9. 'If' → logprob: -15.507627487182617
    10. ' return' → logprob: -15.507627487182617

Token 225: ' should' (ID: 1757)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4651341140270233
    2. '!=' → logprob: -1.9651341438293457
    3. ' ==' → logprob: -2.3401341438293457
    4. '>' → logprob: -2.8401341438293457
    5. ' !=' → logprob: -2.8401341438293457
    6. ' >' → logprob: -4.090134143829346
    7. '*' → logprob: -6.840134143829346
    8. '>=' → logprob: -8.215133666992188
    9. '=' → logprob: -9.090133666992188
    10. '_remaining' → logprob: -9.340133666992188

Token 226: ' be' (ID: 413)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018766338005661964
    2. ' be' → logprob: -4.393766403198242
    3. ' ==' → logprob: -5.768766403198242
    4. 'be' → logprob: -5.893766403198242
    5. '=' → logprob: -8.768766403198242
    6. ')==' → logprob: -9.268766403198242
    7. '0' → logprob: -10.518766403198242
    8. 'abs' → logprob: -10.768766403198242
    9. ']==' → logprob: -11.643766403198242
    10. 'equal' → logprob: -12.018766403198242

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'zero' → logprob: -16.375085830688477
    4. 'exact' → logprob: -16.375085830688477
    5. '==' → logprob: -17.750085830688477
    6. 'abs' → logprob: -18.000085830688477
    7. '000' → logprob: -18.750085830688477
    8. 'close' → logprob: -18.875085830688477
    9. ' zero' → logprob: -19.125085830688477
    10. '1' → logprob: -19.625085830688477

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011069540778407827
    2. ' ' → logprob: -9.125110626220703
    3. 'abs' → logprob: -14.625110626220703
    4. 'exact' → logprob: -14.625110626220703
    5. 'zero' → logprob: -14.875110626220703
    6. 'close' → logprob: -15.625110626220703
    7. '==' → logprob: -15.625110626220703
    8. '<' → logprob: -17.250110626220703
    9. '1' → logprob: -18.000110626220703
    10. 'less' → logprob: -18.125110626220703

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09074312448501587
    2. ' if' → logprob: -2.715743064880371
    3. 'if' → logprob: -4.215743064880371
    4. '==' → logprob: -6.090743064880371
    5. ' ==' → logprob: -6.465743064880371
    6. ' and' → logprob: -7.215743064880371
    7. '>' → logprob: -8.340743064880371
    8. ' or' → logprob: -8.590743064880371
    9. 'and' → logprob: -8.965743064880371
    10. ' ' → logprob: -9.215743064880371

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03916814923286438
    2. ' if' → logprob: -3.289168119430542
    3. 'if' → logprob: -6.789168357849121
    4. '       ' → logprob: -16.539167404174805
    5. '    ' → logprob: -17.039167404174805
    6. '```' → logprob: -17.164167404174805
    7. '    
' → logprob: -18.039167404174805
    8. '	if' → logprob: -18.289167404174805
    9. '   ' → logprob: -18.289167404174805
    10. ' ' → logprob: -18.289167404174805

Token 231: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20343783497810364
    2. ' if' → logprob: -1.7034378051757812
    3. '   ' → logprob: -6.203437805175781
    4. ' ' → logprob: -17.57843780517578
    5. '```' → logprob: -18.20343780517578
    6. 'import' → logprob: -18.45343780517578
    7. 'If' → logprob: -18.45343780517578
    8. '	if' → logprob: -18.82843780517578
    9. '  ' → logprob: -19.70343780517578
    10. '    ' → logprob: -20.07843780517578

Token 232: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48096925020217896
    2. 'if' → logprob: -0.980969250202179
    3. '   ' → logprob: -4.980969429016113
    4. 'If' → logprob: -14.355969429016113
    5. ' ' → logprob: -15.480969429016113
    6. '    ' → logprob: -15.605969429016113
    7. '```' → logprob: -16.605968475341797
    8. '	if' → logprob: -17.230968475341797
    9. '  ' → logprob: -17.605968475341797
    10. ' If' → logprob: -18.105968475341797

Token 233: ' not' (ID: 625)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.28223541378974915
    2. ' frac' → logprob: -1.4072353839874268
    3. ' abs' → logprob: -7.282235622406006
    4. 'abs' → logprob: -8.032235145568848
    5. ' ' → logprob: -10.282235145568848
    6. 'fr' → logprob: -11.282235145568848
    7. 'fraction' → logprob: -12.282235145568848
    8. ' not' → logprob: -12.657235145568848
    9. 'round' → logprob: -12.782235145568848
    10. '   ' → logprob: -12.782235145568848

Token 234: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.571893572807312
    2. '   ' → logprob: -1.446893572807312
    3. '       ' → logprob: -1.696893572807312
    4. '    ' → logprob: -4.446893692016602
    5. 'return' → logprob: -5.696893692016602
    6. ',' → logprob: -7.696893692016602
    7. ':' → logprob: -7.821893692016602
    8. ':return' → logprob: -8.446893692016602
    9. '  ' → logprob: -8.696893692016602
    10. ' ' → logprob: -9.071893692016602

Token 235: ' output' (ID: 4733)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13834139704704285
    2. ' return' → logprob: -2.6383414268493652
    3. '       ' → logprob: -2.8883414268493652
    4. '   ' → logprob: -6.263341426849365
    5. 'if' → logprob: -9.263340950012207
    6. ' if' → logprob: -10.388340950012207
    7. ' ' → logprob: -11.888340950012207
    8. '	return' → logprob: -12.638340950012207
    9. '           ' → logprob: -12.888340950012207
    10. '  ' → logprob: -13.138340950012207

Token 236: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00690824817866087
    2. ' "' → logprob: -5.256908416748047
    3. '   ' → logprob: -7.006908416748047
    4. ''' → logprob: -7.381908416748047
    5. 'return' → logprob: -9.631908416748047
    6. ' return' → logprob: -9.756908416748047
    7. '       ' → logprob: -12.006908416748047
    8. ' '' → logprob: -12.756908416748047
    9. '`' → logprob: -13.006908416748047
    10. 'NA' → logprob: -13.006908416748047

Token 237: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.0015110508538782597
    2. '"' → logprob: -6.501511096954346
    3. ''' → logprob: -12.001510620117188
    4. ' NA' → logprob: -12.876510620117188
    5. '   ' → logprob: -17.751510620117188
    6. '`' → logprob: -18.001510620117188
    7. '"N' → logprob: -18.501510620117188
    8. '```' → logprob: -18.501510620117188
    9. ' "' → logprob: -18.751510620117188
    10. 'N' → logprob: -19.126510620117188

Token 238: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1602540910243988
    2. '       ' → logprob: -1.9102541208267212
    3. 'return' → logprob: -11.53525447845459
    4. ')' → logprob: -11.78525447845459
    5. ' return' → logprob: -12.53525447845459
    6. '
' → logprob: -13.28525447845459
    7. '```' → logprob: -13.28525447845459
    8. '           ' → logprob: -13.53525447845459
    9. ',' → logprob: -13.53525447845459
    10. '    ' → logprob: -14.03525447845459

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.054500666621607e-06
    2. ' if' → logprob: -13.62500286102295
    3. 'if' → logprob: -13.75000286102295
    4. '```' → logprob: -14.62500286102295
    5. '    
' → logprob: -16.125003814697266
    6. '
' → logprob: -16.875003814697266
    7. '       ' → logprob: -18.500003814697266
    8. '   ' → logprob: -20.250003814697266
    9. '    ' → logprob: -20.625003814697266
    10. ',' → logprob: -20.750003814697266

Token 240: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8619967103004456
    2. 'if' (adapté à ' if') → logprob: -0.8619967103004456
    3. ' if' → logprob: -1.8619966506958008
    4. '```' → logprob: -13.2369966506958
    5. 'If' → logprob: -17.111997604370117
    6. '	if' → logprob: -17.361997604370117
    7. ' ' → logprob: -17.986997604370117
    8. '    
' → logprob: -18.861997604370117
    9. '
' → logprob: -18.861997604370117
    10. '``' → logprob: -18.986997604370117

Token 241: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.3163667917251587
    2. ' frac' → logprob: -1.3163667917251587
    3. 'abs' → logprob: -6.566366672515869
    4. 'round' → logprob: -7.191366672515869
    5. ' abs' → logprob: -7.191366672515869
    6. ' round' → logprob: -8.691367149353027
    7. 'fraction' → logprob: -11.941367149353027
    8. 'fr' → logprob: -12.066367149353027
    9. ' ' → logprob: -13.441367149353027
    10. 'not' → logprob: -14.066367149353027

Token 242: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18674835562705994
    2. '>' → logprob: -1.9367483854293823
    3. ' !=' → logprob: -3.6867482662200928
    4. ' >' → logprob: -6.811748504638672
    5. '!==' → logprob: -12.061748504638672
    6. '()!=' → logprob: -12.311748504638672
    7. ')!=' → logprob: -12.436748504638672
    8. '!' → logprob: -13.811748504638672
    9. ')' → logprob: -14.311748504638672
    10. '==' → logprob: -14.436748504638672

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07006002962589264
    2. '1' → logprob: -2.6950600147247314
    3. ' ' → logprob: -9.070059776306152
    4. '10' → logprob: -11.695059776306152
    5. '2' → logprob: -15.945059776306152
    6. '(' → logprob: -17.07006072998047
    7. '5' → logprob: -17.07006072998047
    8. '```' → logprob: -17.32006072998047
    9. '   ' → logprob: -17.44506072998047
    10. '4' → logprob: -17.94506072998047

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10023697465658188
    2. '1' → logprob: -2.3502368927001953
    3. '10' → logprob: -10.850236892700195
    4. ' ' → logprob: -11.475236892700195
    5. '(' → logprob: -15.850236892700195
    6. '2' → logprob: -16.475236892700195
    7. '```' → logprob: -16.600236892700195
    8. '-' → logprob: -17.412736892700195
    9. '5' → logprob: -17.475236892700195
    10. '   ' → logprob: -17.537736892700195

Token 245: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5621628165245056
    2. ':
' → logprob: -1.5621628761291504
    3. '.' → logprob: -1.6871628761291504
    4. '   ' → logprob: -3.8121628761291504
    5. ' :' → logprob: -5.06216287612915
    6. ' :
' → logprob: -5.43716287612915
    7. ':return' → logprob: -7.06216287612915
    8. '       ' → logprob: -7.18716287612915
    9. '    ' → logprob: -8.437162399291992
    10. '+' → logprob: -8.437162399291992

Token 246: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.11575745791196823
    2. '0' → logprob: -2.240757465362549
    3. '001' → logprob: -5.990757465362549
    4. '01' → logprob: -8.61575698852539
    5. '5' → logprob: -9.24075698852539
    6. '1' → logprob: -9.49075698852539
    7. '05' → logprob: -11.11575698852539
    8. '005' → logprob: -11.24075698852539
    9. 'zero' → logprob: -11.36575698852539
    10. '```' → logprob: -11.99075698852539

Token 247: '000' (ID: 1302)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1296553760766983
    2. '01' → logprob: -2.254655361175537
    3. '001' → logprob: -4.254655361175537
    4. '000' → logprob: -6.004655361175537
    5. '05' → logprob: -10.754655838012695
    6. '005' → logprob: -13.254655838012695
    7. '5' → logprob: -13.379655838012695
    8. '09' → logprob: -14.379655838012695
    9. '009' → logprob: -14.504655838012695
    10. '```' → logprob: -14.504655838012695

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007741966750472784
    2. '01' → logprob: -4.882741928100586
    3. '001' → logprob: -9.007741928100586
    4. '000' → logprob: -11.507741928100586
    5. '05' → logprob: -13.132741928100586
    6. '```' → logprob: -14.132741928100586
    7. '5' → logprob: -15.007741928100586
    8. '0' → logprob: -16.257741928100586
    9. '005' → logprob: -16.507741928100586
    10. '``' → logprob: -17.257741928100586

Token 249: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023399097844958305
    2. ' :' → logprob: -4.0233988761901855
    3. ':
' → logprob: -5.6483988761901855
    4. ':return' → logprob: -7.1483988761901855
    5. '       ' → logprob: -7.6483988761901855
    6. '   ' → logprob: -8.398399353027344
    7. ' :
' → logprob: -8.648399353027344
    8. '    ' → logprob: -11.023399353027344
    9. '):' → logprob: -11.273399353027344
    10. ' return' → logprob: -11.523399353027344

Token 250: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019307781476527452
    2. ' return' → logprob: -6.5019307136535645
    3. 'return' → logprob: -7.8769307136535645
    4. '   ' → logprob: -10.001931190490723
    5. '	return' → logprob: -12.876931190490723
    6. '	   ' → logprob: -15.126931190490723
    7. '	' → logprob: -15.251931190490723
    8. '
' → logprob: -15.501931190490723
    9. '           ' → logprob: -15.876931190490723
    10. '```' → logprob: -16.376930236816406

Token 251: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018670979887247086
    2. 'return' → logprob: -4.018671035766602
    3. ' return' → logprob: -7.768671035766602
    4. '   ' → logprob: -9.268671035766602
    5. '
' → logprob: -13.143671035766602
    6. '	return' → logprob: -13.893671035766602
    7. '           ' → logprob: -14.143671035766602
    8. '```' → logprob: -16.0186710357666
    9. '      ' → logprob: -16.3936710357666
    10. '     ' → logprob: -16.8936710357666

Token 252: ' small' (ID: 3291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28381243348121643
    2. ' return' → logprob: -1.533812403678894
    3. 'return' → logprob: -3.5338125228881836
    4. '   ' → logprob: -6.158812522888184
    5. '	return' → logprob: -10.158812522888184
    6. '    ' → logprob: -11.283812522888184
    7. '      ' → logprob: -12.283812522888184
    8. '```' → logprob: -12.283812522888184
    9. '           ' → logprob: -12.533812522888184
    10. ' ' → logprob: -12.783812522888184

Token 253: ' tolerance' (ID: 46581)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.9141647219657898
    2. ' tolerance' → logprob: -1.4141647815704346
    3. 'threshold' → logprob: -1.7891647815704346
    4. ' epsilon' → logprob: -2.2891647815704346
    5. 'epsilon' → logprob: -2.7891647815704346
    6. 't' → logprob: -4.5391645431518555
    7. ' margin' → logprob: -4.9141645431518555
    8. '_threshold' → logprob: -6.0391645431518555
    9. 'margin' → logprob: -6.6641645431518555
    10. '<|end|>' → logprob: -7.0391645431518555

Token 254: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012824952136725187
    2. ':' → logprob: -7.126282691955566
    3. '   ' → logprob: -8.251282691955566
    4. ':
' → logprob: -9.501282691955566
    5. ':return' → logprob: -9.501282691955566
    6. ' return' → logprob: -10.001282691955566
    7. '           ' → logprob: -11.626282691955566
    8. 'return' → logprob: -12.126282691955566
    9. '      ' → logprob: -13.501282691955566
    10. '):
' → logprob: -14.126282691955566

Token 255: ' floating' (ID: 35887)
  Prédit: 'floating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floating' → logprob: -0.08375788480043411
    2. 'float' → logprob: -2.5837578773498535
    3. ' floating' → logprob: -5.3337578773498535
    4. ' float' → logprob: -11.083758354187012
    5. 'flo' → logprob: -11.708758354187012
    6. '浮' → logprob: -13.458758354187012
    7. 'precision' → logprob: -13.458758354187012
    8. 'round' → logprob: -13.583758354187012
    9. 'fp' → logprob: -13.708758354187012
    10. 'fraction' → logprob: -14.708758354187012

Token 256: '-point' (ID: 37909)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0012107107322663069
    2. '-point' → logprob: -7.001210689544678
    3. ' point' → logprob: -8.501211166381836
    4. 'errors' → logprob: -10.126211166381836
    5. 'precision' → logprob: -10.376211166381836
    6. 'error' → logprob: -10.751211166381836
    7. '_point' → logprob: -13.626211166381836
    8. 'points' → logprob: -13.751211166381836
    9. 'Point' → logprob: -14.751211166381836
    10. ' errors' → logprob: -15.376211166381836

Token 257: ' im' (ID: 770)
  Prédit: 'errors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'errors' → logprob: -0.4098789095878601
    2. ' errors' → logprob: -1.7848789691925049
    3. 'error' → logprob: -1.9098789691925049
    4. ' error' → logprob: -4.284878730773926
    5. ' inaccuracies' → logprob: -5.909878730773926
    6. 'in' → logprob: -6.534878730773926
    7. ' in' → logprob: -6.784878730773926
    8. 'precision' → logprob: -7.534878730773926
    9. '   ' → logprob: -8.409878730773926
    10. ' im' → logprob: -9.409878730773926

Token 258: 'precision' (ID: 56937)
  Prédit: 'precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'precision' → logprob: -0.0004343645414337516
    2. 'prec' → logprob: -7.750434398651123
    3. 'accuracy' → logprob: -12.750433921813965
    4. 'exact' → logprob: -15.375433921813965
    5. 'p' → logprob: -15.750433921813965
    6. '_precision' → logprob: -16.00043487548828
    7. 'errors' → logprob: -16.50043487548828
    8. 'Precision' → logprob: -16.62543487548828
    9. 'error' → logprob: -16.75043487548828
    10. ' precision' → logprob: -17.25043487548828

Token 259: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00578658189624548
    2. ':' → logprob: -5.255786418914795
    3. ':
' → logprob: -7.630786418914795
    4. '   ' → logprob: -10.505786895751953
    5. ':return' → logprob: -10.505786895751953
    6. ' return' → logprob: -12.505786895751953
    7. 'return' → logprob: -12.880786895751953
    8. '           ' → logprob: -13.130786895751953
    9. '):
' → logprob: -14.005786895751953
    10. '      ' → logprob: -14.380786895751953

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010711929644457996
    2. '   ' → logprob: -10.000106811523438
    3. ' return' → logprob: -10.125106811523438
    4. 'return' → logprob: -10.750106811523438
    5. '           ' → logprob: -16.250106811523438
    6. '```' → logprob: -17.625106811523438
    7. '      ' → logprob: -18.125106811523438
    8. '     ' → logprob: -18.750106811523438
    9. '	return' → logprob: -18.875106811523438
    10. ' ' → logprob: -19.000106811523438

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009933913825079799
    2. '       ' → logprob: -7.250993251800537
    3. ' return' → logprob: -8.250993728637695
    4. '   ' → logprob: -10.750993728637695
    5. '	return' → logprob: -13.875993728637695
    6. '```' → logprob: -18.375993728637695
    7. ' ' → logprob: -19.000993728637695
    8. '{return' → logprob: -19.375993728637695
    9. '           ' → logprob: -20.625993728637695
    10. ':return' → logprob: -20.625993728637695

Token 262: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005632805987261236
    2. ' "' → logprob: -7.500563144683838
    3. ''' → logprob: -11.500563621520996
    4. ''"' → logprob: -16.00056266784668
    5. '"N' → logprob: -17.25056266784668
    6. '"A' → logprob: -17.87556266784668
    7. 'NA' → logprob: -17.87556266784668
    8. '"'' → logprob: -18.25056266784668
    9. '"No' → logprob: -19.50056266784668
    10. ' '' → logprob: -19.62556266784668

Token 263: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -9.253090865968261e-06
    2. ''' → logprob: -12.000009536743164
    3. '"' → logprob: -12.750009536743164
    4. ' NA' → logprob: -16.500009536743164
    5. 'N' → logprob: -18.375009536743164
    6. '\"' → logprob: -18.750009536743164
    7. ''"' → logprob: -21.625009536743164
    8. 'na' → logprob: -22.250009536743164
    9. '""' → logprob: -22.625009536743164
    10. '   ' → logprob: -22.750009536743164

Token 264: '"

' (ID: 2678)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08028694242238998
    2. ')' → logprob: -2.580286979675293
    3. '"' → logprob: -7.580286979675293
    4. '")' → logprob: -7.955286979675293
    5. '<|end|>' → logprob: -8.705286979675293
    6. '
' → logprob: -9.205286979675293
    7. ')return' → logprob: -9.330286979675293
    8. 'return' → logprob: -10.080286979675293
    9. '}' → logprob: -10.830286979675293
    10. '```' → logprob: -10.955286979675293

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006995850242674351
    2. 'return' → logprob: -5.256995677947998
    3. ' return' → logprob: -6.756995677947998
    4. '    
' → logprob: -8.006996154785156
    5. '```' → logprob: -9.631996154785156
    6. '
' → logprob: -10.006996154785156
    7. '"' → logprob: -10.256996154785156
    8. ')' → logprob: -11.006996154785156
    9. '  ' → logprob: -11.131996154785156
    10. ''' → logprob: -11.631996154785156

Token 266: ' frac' (ID: 72308)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015969875967130065
    2. ' return' → logprob: -7.126596927642822
    3. 'result' → logprob: -8.12659740447998
    4. 'fraction' → logprob: -8.12659740447998
    5. 'frac' (adapté à ' frac') → logprob: -8.75159740447998
    6. 'binary' → logprob: -11.25159740447998
    7. '   ' → logprob: -11.50159740447998
    8. ''.' → logprob: -12.37659740447998
    9. 'if' → logprob: -12.50159740447998
    10. '```' → logprob: -13.00159740447998

Token 267: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.0008910943870432675
    2. '_str' → logprob: -7.625891208648682
    3. '_binary' → logprob: -8.125890731811523
    4. '=' → logprob: -10.250890731811523
    5. 'bin' → logprob: -10.375890731811523
    6. '_bits' → logprob: -11.250890731811523
    7. '_' → logprob: -11.500890731811523
    8. ' =' → logprob: -12.375890731811523
    9. '_join' → logprob: -12.625890731811523
    10. '_bit' → logprob: -12.875890731811523

Token 268: '_str' (ID: 6182)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132646679878235
    2. ' =' → logprob: -1.3132646083831787
    3. '='' → logprob: -13.063264846801758
    4. ' ='' → logprob: -15.813264846801758
    5. '=''' → logprob: -16.063264846801758
    6. '"' → logprob: -16.188264846801758
    7. ' ' → logprob: -16.688264846801758
    8. '="' → logprob: -16.813264846801758
    9. ' ="' → logprob: -17.063264846801758
    10. '=""' → logprob: -17.688264846801758

Token 270: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.331685334444046
    2. '''.' → logprob: -1.3316853046417236
    3. ' "".' → logprob: -4.581685543060303
    4. ' ''.' → logprob: -4.831685543060303
    5. '""' → logprob: -10.581685066223145
    6. '''' → logprob: -11.331685066223145
    7. ''' → logprob: -12.081685066223145
    8. ' ' → logprob: -14.706685066223145
    9. '"",' → logprob: -15.081685066223145
    10. '".' → logprob: -16.08168601989746

Token 271: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. ' join' → logprob: -14.875000953674316
    3. '```' → logprob: -16.5
    4. '.join' → logprob: -16.625
    5. 'j' → logprob: -16.625
    6. '(join' → logprob: -17.75
    7. 'jo' → logprob: -18.25
    8. '.' → logprob: -19.125
    9. 'concat' → logprob: -19.25
    10. '''.' → logprob: -19.375

Token 272: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -4.961759259458631e-06
    2. 'frac' → logprob: -12.250004768371582
    3. '(freq' → logprob: -17.6250057220459
    4. '(str' → logprob: -18.1250057220459
    5. '(' → logprob: -18.5000057220459
    6. '(fe' → logprob: -18.5000057220459
    7. ' frac' → logprob: -18.5000057220459
    8. ' (' → logprob: -18.6250057220459
    9. '_frac' → logprob: -18.7500057220459
    10. 'fr' → logprob: -19.5000057220459

Token 273: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -9.729906196298543e-06
    2. 'ag' → logprob: -12.750009536743164
    3. 'act' → logprob: -13.375009536743164
    4. 'acs' → logprob: -13.375009536743164
    5. 'c' → logprob: -13.875009536743164
    6. 'frac' → logprob: -14.125009536743164
    7. 'acc' → logprob: -14.375009536743164
    8. 'action' → logprob: -14.375009536743164
    9. 'a' → logprob: -15.500009536743164
    10. 'ax' → logprob: -16.125009536743164

Token 274: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.00023727134976070374
    2. 'bin' → logprob: -8.375237464904785
    3. ')' → logprob: -12.875237464904785
    4. '(bin' → logprob: -13.625237464904785
    5. 'in' → logprob: -14.000237464904785
    6. '[' → logprob: -14.875237464904785
    7. '-bin' → logprob: -14.875237464904785
    8. '_bit' → logprob: -15.125237464904785
    9. 'b' → logprob: -15.875237464904785
    10. ' bin' → logprob: -16.00023651123047

Token 275: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003009041247423738
    2. ')
' → logprob: -8.500301361083984
    3. ')return' → logprob: -10.500301361083984
    4. '")' → logprob: -10.875301361083984
    5. '   ' → logprob: -11.000301361083984
    6. '<|end|>' → logprob: -11.875301361083984
    7. 'if' → logprob: -12.125301361083984
    8. 'return' → logprob: -12.375301361083984
    9. '
' → logprob: -13.000301361083984
    10. '.' → logprob: -13.125301361083984

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47753363847732544
    2. 'return' → logprob: -0.9775336384773254
    3. ' return' → logprob: -6.35253381729126
    4. 'if' → logprob: -6.47753381729126
    5. '    
' → logprob: -9.602533340454102
    6. '```' → logprob: -9.852533340454102
    7. '
' → logprob: -10.352533340454102
    8. '	return' → logprob: -11.602533340454102
    9. ' if' → logprob: -11.977533340454102
    10. ':return' → logprob: -14.227533340454102

Token 277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010447880253195763
    2. 'if' → logprob: -5.010447978973389
    3. '   ' → logprob: -5.760447978973389
    4. ' return' → logprob: -7.510447978973389
    5. ' if' → logprob: -10.63544750213623
    6. 'result' → logprob: -12.63544750213623
    7. '	return' → logprob: -14.51044750213623
    8. '    
' → logprob: -14.88544750213623
    9. ' ' → logprob: -16.385448455810547
    10. ':return' → logprob: -17.135448455810547

Token 278: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0948101133108139
    2. 'f' → logprob: -2.4698100090026855
    3. ' int' → logprob: -5.7198100090026855
    4. ' f' → logprob: -5.9698100090026855
    5. '   ' → logprob: -11.344810485839844
    6. ' ' → logprob: -12.594810485839844
    7. ' ' → logprob: -14.719810485839844
    8. '```' → logprob: -14.844810485839844
    9. '(int' → logprob: -14.969810485839844
    10. '  ' → logprob: -15.219810485839844

Token 279: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -9.491498531133402e-06
    2. '_part' → logprob: -12.125009536743164
    3. '_' → logprob: -12.875009536743164
    4. '_bit' → logprob: -15.125009536743164
    5. '_bins' → logprob: -15.375009536743164
    6. '```' → logprob: -15.500009536743164
    7. '_binary' → logprob: -15.750009536743164
    8. '_BIN' → logprob: -16.750009536743164
    9. 'bin' → logprob: -16.750009536743164
    10. '_b' → logprob: -16.875009536743164

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133207857608795
    2. ' +' → logprob: -1.3133207559585571
    3. '+'.' → logprob: -10.313321113586426
    4. '+"' → logprob: -11.188321113586426
    5. '+
' → logprob: -12.438321113586426
    6. '   ' → logprob: -13.688321113586426
    7. '+".' → logprob: -13.813321113586426
    8. '.' → logprob: -14.063321113586426
    9. ' +
' → logprob: -14.188321113586426
    10. '"+"' → logprob: -14.188321113586426

Token 281: ' "."' (ID: 50107)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.5763794779777527
    2. ''.' → logprob: -0.8263794779777527
    3. '("."' → logprob: -8.076379776000977
    4. '".' → logprob: -9.201379776000977
    5. '"' → logprob: -11.451379776000977
    6. ' "."' → logprob: -11.576379776000977
    7. '.' → logprob: -12.701379776000977
    8. '('.' → logprob: -12.826379776000977
    9. ' '.'' → logprob: -13.201379776000977
    10. '('.')' → logprob: -15.451379776000977

Token 282: ' +' (ID: 659)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -1.1279553291387856e-05
    2. ' frac' → logprob: -11.500011444091797
    3. 'frag' → logprob: -14.000011444091797
    4. '_frac' → logprob: -16.250011444091797
    5. 'fract' → logprob: -16.375011444091797
    6. 'fr' → logprob: -17.875011444091797
    7. 'fraction' → logprob: -18.125011444091797
    8. '```' → logprob: -18.750011444091797
    9. 'concat' → logprob: -18.875011444091797
    10. '+' → logprob: -18.875011444091797

Token 283: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -1.318681188422488e-05
    2. ' frac' → logprob: -11.25001335144043
    3. 'frag' → logprob: -16.00001335144043
    4. 'fract' → logprob: -19.75001335144043
    5. 'fr' → logprob: -19.87501335144043
    6. '   ' → logprob: -20.25001335144043
    7. '```' → logprob: -20.50001335144043
    8. '`' → logprob: -20.87501335144043
    9. 'fraction' → logprob: -20.87501335144043
    10. '_frac' → logprob: -21.25001335144043

Token 284: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.0009126556105911732
    2. 'bin' → logprob: -7.000912666320801
    3. 'Bin' → logprob: -15.2509126663208
    4. '```' → logprob: -15.8759126663208
    5. ' bin' → logprob: -16.250911712646484
    6. 'in' → logprob: -16.250911712646484
    7. 'n' → logprob: -16.375911712646484
    8. '_frac' → logprob: -16.625911712646484
    9. '_' → logprob: -16.875911712646484
    10. 'b' → logprob: -17.375911712646484

Token 285: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00035155098885297775
    2. '_bin' → logprob: -8.000351905822754
    3. 'str' → logprob: -11.250351905822754
    4. '_' → logprob: -14.000351905822754
    5. '"_' → logprob: -14.250351905822754
    6. '```' → logprob: -14.625351905822754
    7. '_st' → logprob: -15.250351905822754
    8. 'bin' → logprob: -16.000350952148438
    9. '_s' → logprob: -16.125350952148438
    10. 's' → logprob: -16.375350952148438

Token 286: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' main' (ID: 2758)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.3541228473186493
    2. ' binary' → logprob: -1.2291228771209717
    3. 'decimal' → logprob: -6.229122638702393
    4. ' limited' → logprob: -6.479122638702393
    5. ' decimal' → logprob: -7.229122638702393
    6. 'float' → logprob: -8.22912311553955
    7. 'fraction' → logprob: -8.47912311553955
    8. 'limited' → logprob: -8.60412311553955
    9. ' float' → logprob: -8.72912311553955
    10. ' main' → logprob: -8.97912311553955

Token 289: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004305500478949398
    2. '_' → logprob: -8.5004301071167
    3. '():
' → logprob: -8.8754301071167
    4. ' ():' → logprob: -9.6254301071167
    5. '()' → logprob: -11.6254301071167
    6. '(' → logprob: -12.3754301071167
    7. '()>' → logprob: -13.0004301071167
    8. '():
' → logprob: -13.0004301071167
    9. '():

' → logprob: -14.3754301071167
    10. '_:' → logprob: -14.5004301071167

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014700707048177719
    2. ' n' → logprob: -4.514700889587402
    3. 'n' → logprob: -5.764700889587402
    4. ' for' → logprob: -8.764700889587402
    5. '(n' → logprob: -9.764700889587402
    6. '    ' → logprob: -9.889700889587402
    7. ' import' → logprob: -9.889700889587402
    8. 'def' → logprob: -10.014700889587402
    9. ' user' → logprob: -10.389700889587402
    10. ' input' → logprob: -10.514700889587402

Token 291: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40605074167251587
    2. ' n' → logprob: -1.406050682067871
    3. '   ' → logprob: -3.156050682067871
    4. 'number' → logprob: -3.906050682067871
    5. ' number' → logprob: -4.406050682067871
    6. 'num' → logprob: -5.281050682067871
    7. ' num' → logprob: -6.031050682067871
    8. 'import' (adapté à ' import') → logprob: -7.156050682067871
    9. 'try' → logprob: -7.281050682067871
    10. ' while' → logprob: -7.281050682067871

Token 292: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02368355169892311
    2. ' sys' → logprob: -3.773683547973633
    3. 'math' → logprob: -7.773683547973633
    4. ' math' → logprob: -11.148683547973633
    5. 'random' → logprob: -13.398683547973633
    6. 'decimal' → logprob: -13.648683547973633
    7. '=sys' → logprob: -16.023683547973633
    8. 'float' → logprob: -17.523683547973633
    9. 'json' → logprob: -17.648683547973633
    10. '	sys' → logprob: -17.773683547973633

Token 293: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6280149221420288
    2. '   ' → logprob: -1.0030149221420288
    3. '    
' → logprob: -2.8780150413513184
    4. 'input' → logprob: -3.8780150413513184
    5. 'for' → logprob: -4.628015041351318
    6. ' for' → logprob: -6.128015041351318
    7. ' 
' → logprob: -6.128015041351318
    8. '  
' → logprob: -6.628015041351318
    9. '<|end|>' → logprob: -7.003015041351318
    10. ' line' → logprob: -7.128015041351318

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09519743919372559
    2. 'for' → logprob: -3.2201974391937256
    3. ' for' → logprob: -3.7201974391937256
    4. ' line' → logprob: -4.220197677612305
    5. 'line' → logprob: -5.595197677612305
    6. 'input' → logprob: -6.095197677612305
    7. ' lines' → logprob: -6.220197677612305
    8. 'n' → logprob: -6.470197677612305
    9. ' input' → logprob: -6.845197677612305
    10. ' n' → logprob: -7.595197677612305

Token 295: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03759278729557991
    2. 'args' → logprob: -4.287592887878418
    3. 'input' → logprob: -4.287592887878418
    4. 'n' → logprob: -5.787592887878418
    5. 'line' → logprob: -5.787592887878418
    6. 'if' → logprob: -6.287592887878418
    7. 'lines' → logprob: -7.037592887878418
    8. 'data' → logprob: -7.787592887878418
    9. ' for' → logprob: -9.662592887878418
    10. 'arg' → logprob: -10.412592887878418

Token 296: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -6.718606891809031e-05
    2. 'line' → logprob: -9.750066757202148
    3. ' arg' → logprob: -11.875066757202148
    4. '	line' → logprob: -13.750066757202148
    5. ' number' → logprob: -14.500066757202148
    6. ' num' → logprob: -15.875066757202148
    7. 'arg' → logprob: -16.12506675720215
    8. ' ' → logprob: -17.37506675720215
    9. ' n' → logprob: -17.62506675720215
    10. ' lin' → logprob: -18.00006675720215

Token 297: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015047440538182855
    2. 'in' → logprob: -6.501504898071289
    3. ' ' → logprob: -14.876504898071289
    4. 's' → logprob: -15.126504898071289
    5. 'import' → logprob: -15.126504898071289
    6. '   ' → logprob: -15.501504898071289
    7. '[' → logprob: -15.751504898071289
    8. '_in' → logprob: -15.876504898071289
    9. '_' → logprob: -16.00150489807129
    10. 'line' → logprob: -16.12650489807129

Token 298: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759412050247192
    2. 'sys' → logprob: -0.8259412050247192
    3. '=sys' → logprob: -13.70094108581543
    4. '	sys' → logprob: -14.70094108581543
    5. '(sys' → logprob: -15.07594108581543
    6. 'import' → logprob: -17.45094108581543
    7. 'stdin' → logprob: -18.07594108581543
    8. '_sys' → logprob: -19.20094108581543
    9. 'Sys' → logprob: -19.57594108581543
    10. '.sys' → logprob: -19.57594108581543

Token 299: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07154180109500885
    2. '.readline' → logprob: -2.8215417861938477
    3. '.' → logprob: -5.321541786193848
    4. 'in' → logprob: -5.821541786193848
    5. 'stdin' → logprob: -6.946541786193848
    6. '.stdout' → logprob: -8.196541786193848
    7. '.argv' → logprob: -9.071541786193848
    8. ' in' → logprob: -9.571541786193848
    9. 'import' → logprob: -9.821541786193848
    10. '.readlines' → logprob: -9.821541786193848

Token 300: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29648682475090027
    2. '.readline' → logprob: -1.4214868545532227
    3. ':' → logprob: -5.671486854553223
    4. '.rstrip' → logprob: -5.796486854553223
    5. '.strip' → logprob: -5.796486854553223
    6. ':
' → logprob: -6.296486854553223
    7. 'in' → logprob: -6.421486854553223
    8. '   ' → logprob: -7.296486854553223
    9. '.readlines' → logprob: -7.421486854553223
    10. '       ' → logprob: -8.046486854553223

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005956768058240414
    2. '   ' → logprob: -6.505956649780273
    3. '        
' → logprob: -6.505956649780273
    4. '<|end|>' → logprob: -7.380956649780273
    5. '    
' → logprob: -7.630956649780273
    6. '.strip' → logprob: -8.130956649780273
    7. ' line' → logprob: -8.130956649780273
    8. '.rstrip' → logprob: -8.255956649780273
    9. '```' → logprob: -8.380956649780273
    10. 'rstrip' → logprob: -9.130956649780273

Token 302: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.46652019023895264
    2. ' line' → logprob: -1.7165201902389526
    3. ' number' → logprob: -2.466520309448242
    4. '       ' → logprob: -2.841520309448242
    5. ' num' → logprob: -3.841520309448242
    6. 'n' → logprob: -4.091520309448242
    7. ' value' → logprob: -5.341520309448242
    8. 'line' (adapté à ' line') → logprob: -5.591520309448242
    9. 'num' → logprob: -6.341520309448242
    10. 'number' → logprob: -7.091520309448242

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2512286901473999
    2. ' =' → logprob: -1.7512286901474
    3. '=line' → logprob: -3.3762288093566895
    4. '.strip' → logprob: -4.2512288093566895
    5. '_strip' → logprob: -9.376228332519531
    6. '.rstrip' → logprob: -9.751228332519531
    7. 'strip' → logprob: -11.126228332519531
    8. 'rstrip' → logprob: -12.626228332519531
    9. '.readline' → logprob: -13.251228332519531
    10. '.=' → logprob: -13.501228332519531

Token 304: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07888978719711304
    2. ' line' → logprob: -2.578889846801758
    3. '=line' → logprob: -20.203889846801758
    4. '	line' → logprob: -21.453889846801758
    5. '(line' → logprob: -21.953889846801758
    6. 'Line' → logprob: -23.828889846801758
    7. '#line' → logprob: -24.328889846801758
    8. '_line' → logprob: -25.578889846801758
    9. '[line' → logprob: -25.703889846801758
    10. '.line' → logprob: -27.078889846801758

Token 305: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.001115211984142661
    2. '.rstrip' → logprob: -7.126115322113037
    3. 'strip' → logprob: -8.626114845275879
    4. '.' → logprob: -9.001114845275879
    5. 'rstrip' → logprob: -12.876114845275879
    6. ' strip' → logprob: -12.876114845275879
    7. '_strip' → logprob: -13.626114845275879
    8. '.readline' → logprob: -13.751114845275879
    9. '(strip' → logprob: -15.501114845275879
    10. '.replace' → logprob: -16.501115798950195

Token 306: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22354650497436523
    2. '()
' → logprob: -1.7235465049743652
    3. '       ' → logprob: -4.973546504974365
    4. '<|end|>' → logprob: -5.223546504974365
    5. ')' → logprob: -5.598546504974365
    6. '   ' → logprob: -6.348546504974365
    7. '())' → logprob: -6.473546504974365
    8. '<|end|>' → logprob: -7.473546504974365
    9. '
' → logprob: -8.098546981811523
    10. '():
' → logprob: -8.598546981811523

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039435770362615585
    2. ' if' → logprob: -3.664435863494873
    3. 'if' → logprob: -5.289435863494873
    4. '<|end|>' → logprob: -5.539435863494873
    5. '   ' → logprob: -5.664435863494873
    6. '        
' → logprob: -8.664435386657715
    7. '<|end|>' → logprob: -8.914435386657715
    8. '```' → logprob: -9.289435386657715
    9. ',' → logprob: -9.539435386657715
    10. '[' → logprob: -11.289435386657715

Token 308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.460291767027229e-05
    2. ' if' → logprob: -9.750094413757324
    3. 'try' → logprob: -10.250094413757324
    4. '   ' → logprob: -14.625094413757324
    5. '       ' → logprob: -14.875094413757324
    6. '```' → logprob: -16.75009536743164
    7. '
' → logprob: -19.50009536743164
    8. 'If' → logprob: -19.50009536743164
    9. '        
' → logprob: -20.25009536743164
    10. '	if' → logprob: -20.50009536743164

Token 309: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01455692108720541
    2. 'not' → logprob: -4.264556884765625
    3. ' line' → logprob: -7.889556884765625
    4. 'line' → logprob: -10.889556884765625
    5. ' ' → logprob: -18.014556884765625
    6. '	not' → logprob: -18.514556884765625
    7. '#line' → logprob: -19.764556884765625
    8. 'n't' → logprob: -20.139556884765625
    9. '```' → logprob: -20.264556884765625
    10. 'Not' → logprob: -20.264556884765625

Token 310: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759718418121338
    2. ' ==' → logprob: -0.8259718418121338
    3. '()==' → logprob: -11.325971603393555
    4. '.startswith' → logprob: -11.700971603393555
    5. '=='' → logprob: -12.575971603393555
    6. '=="' → logprob: -12.575971603393555
    7. ')==' → logprob: -13.450971603393555
    8. '===' → logprob: -13.825971603393555
    9. ':' → logprob: -14.200971603393555
    10. ']==' → logprob: -14.200971603393555

Token 311: ' "":
' (ID: 132826)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9310479760169983
    2. '""' → logprob: -0.9310479760169983
    3. '''' → logprob: -1.6810479164123535
    4. '"":' → logprob: -3.8060479164123535
    5. ''' → logprob: -5.8060479164123535
    6. ''ex' → logprob: -8.181048393249512
    7. ' ""' → logprob: -12.556048393249512
    8. ''end' → logprob: -13.556048393249512
    9. ' "":
' → logprob: -13.806048393249512
    10. '"""' → logprob: -13.806048393249512

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08933167904615402
    2. '       ' → logprob: -2.46433162689209
    3. 'break' → logprob: -9.08933162689209
    4. '	       ' → logprob: -9.71433162689209
    5. '<|end|>' → logprob: -10.21433162689209
    6. '   ' → logprob: -10.33933162689209
    7. ':' → logprob: -10.46433162689209
    8. '	   ' → logprob: -10.96433162689209
    9. ':
' → logprob: -11.08933162689209
    10. '		' → logprob: -11.08933162689209

Token 313: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.09400471299886703
    2. '       ' → logprob: -2.8440046310424805
    3. ' break' → logprob: -3.5940046310424805
    4. '           ' → logprob: -5.5940046310424805
    5. 'continue' (adapté à ' continue') → logprob: -8.21900463104248
    6. 'return' → logprob: -10.46900463104248
    7. '	break' → logprob: -11.09400463104248
    8. '               ' → logprob: -12.59400463104248
    9. '   ' → logprob: -13.21900463104248
    10. '```' → logprob: -13.59400463104248

Token 314: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017803760711103678
    2. '<|end|>' → logprob: -7.5017805099487305
    3. '        
' → logprob: -7.6267805099487305
    4. '
' → logprob: -8.12678050994873
    5. '   ' → logprob: -8.12678050994873
    6. '    
' → logprob: -9.87678050994873
    7. '```' → logprob: -10.37678050994873
    8. ',' → logprob: -11.12678050994873
    9. '<|end|>' → logprob: -11.75178050994873
    10. '  
' → logprob: -11.87678050994873

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011957057286053896
    2. '<|end|>' → logprob: -6.876195907592773
    3. '   ' → logprob: -9.751195907592773
    4. '```' → logprob: -10.126195907592773
    5. '        
' → logprob: -10.501195907592773
    6. '<|end|>' → logprob: -11.001195907592773
    7. ',' → logprob: -11.751195907592773
    8. 'token' → logprob: -13.126195907592773
    9. 'try' → logprob: -13.376195907592773
    10. '
' → logprob: -13.876195907592773

Token 316: ' #' (ID: 1069)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.004564818926155567
    2. 'n' → logprob: -5.5045647621154785
    3. 'num' → logprob: -7.7545647621154785
    4. 'number' → logprob: -10.004565238952637
    5. ' try' → logprob: -12.004565238952637
    6. '       ' → logprob: -12.504565238952637
    7. 'value' → logprob: -13.129565238952637
    8. '   ' → logprob: -15.879565238952637
    9. 'Try' → logprob: -16.12956428527832
    10. '```' → logprob: -16.37956428527832

Token 317: ' Parse' (ID: 26701)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -2.939851037808694e-05
    2. 'Try' → logprob: -11.250029563903809
    3. 'n' → logprob: -11.500029563903809
    4. ' try' → logprob: -12.500029563903809
    5. 'num' → logprob: -13.000029563903809
    6. 'number' → logprob: -15.875029563903809
    7. 'value' → logprob: -17.500028610229492
    8. '   ' → logprob: -17.625028610229492
    9. '       ' → logprob: -17.750028610229492
    10. '```' → logprob: -18.375028610229492

Token 318: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06905779242515564
    2. 'try' → logprob: -3.0690577030181885
    3. 'num' → logprob: -4.069057941436768
    4. 'number' → logprob: -6.569057941436768
    5. ' n' → logprob: -7.194057941436768
    6. 'float' → logprob: -7.319057941436768
    7. 'value' → logprob: -8.69405746459961
    8. '       ' → logprob: -9.06905746459961
    9. ' try' → logprob: -10.19405746459961
    10. '```' → logprob: -11.06905746459961

Token 319: ' number' (ID: 2086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5786510109901428
    2. 'n' → logprob: -0.9536510109901428
    3. ' n' → logprob: -3.203650951385498
    4. 'try' → logprob: -4.453650951385498
    5. 'num' → logprob: -7.703650951385498
    6. 'number' → logprob: -7.703650951385498
    7. 'value' → logprob: -8.203651428222656
    8. 'float' → logprob: -8.328651428222656
    9. ' try' → logprob: -8.828651428222656
    10. ' number' → logprob: -10.078651428222656

Token 320: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06442707777023315
    2. ' n' → logprob: -3.314427137374878
    3. 'n' → logprob: -3.814427137374878
    4. 'try' → logprob: -6.439426898956299
    5. ' =' → logprob: -7.189426898956299
    6. ' try' → logprob: -7.564426898956299
    7. ',' → logprob: -7.689426898956299
    8. '=' → logprob: -7.814426898956299
    9. ',n' → logprob: -9.439427375793457
    10. '=n' → logprob: -9.814427375793457

Token 321: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009117019944824278
    2. ' float' → logprob: -7.000911712646484
    3. 'int' → logprob: -16.250911712646484
    4. '       ' → logprob: -16.625911712646484
    5. '=float' → logprob: -17.500911712646484
    6. '   ' → logprob: -17.625911712646484
    7. 'decimal' → logprob: -18.250911712646484
    8. 'flo' → logprob: -19.250911712646484
    9. 'a' → logprob: -19.500911712646484
    10. '	float' → logprob: -19.750911712646484

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013822488486766815
    2. 'n' → logprob: -4.763822555541992
    3. 'try' → logprob: -5.888822555541992
    4. ' n' → logprob: -6.388822555541992
    5. ' try' → logprob: -8.263822555541992
    6. ',' → logprob: -8.763822555541992
    7. '=' → logprob: -9.638822555541992
    8. ',n' → logprob: -9.638822555541992
    9. '(n' → logprob: -9.638822555541992
    10. '        
' → logprob: -10.138822555541992

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014510874636471272
    2. 'n' → logprob: -4.8895111083984375
    3. 'try' → logprob: -5.7645111083984375
    4. ' n' → logprob: -6.0145111083984375
    5. 'number' → logprob: -7.2645111083984375
    6. ' try' → logprob: -8.264511108398438
    7. ' number' → logprob: -8.639511108398438
    8. 'num' → logprob: -8.889511108398438
    9. 'value' → logprob: -11.514511108398438
    10. 'float' → logprob: -12.264511108398438

Token 324: ' try' (ID: 2075)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2686839997768402
    2. 'num' → logprob: -1.5186840295791626
    3. 'try' (adapté à ' try') → logprob: -4.768683910369873
    4. ' n' → logprob: -5.393683910369873
    5. 'number' → logprob: -5.893683910369873
    6. ' num' → logprob: -7.393683910369873
    7. ' try' → logprob: -9.143684387207031
    8. ' number' → logprob: -9.768684387207031
    9. '       ' → logprob: -10.393684387207031
    10. 'value' → logprob: -11.643684387207031

Token 325: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012690930627286434
    2. ':
' → logprob: -4.387691020965576
    3. '           ' → logprob: -9.262690544128418
    4. '       ' → logprob: -10.137690544128418
    5. ' :' → logprob: -10.762690544128418
    6. '   ' → logprob: -11.387690544128418
    7. '{' → logprob: -12.512690544128418
    8. '        ' → logprob: -12.512690544128418
    9. '<|end|>' → logprob: -14.012690544128418
    10. ':

' → logprob: -14.137690544128418

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08083675056695938
    2. 'n' → logprob: -3.330836772918701
    3. ' n' → logprob: -3.455836772918701
    4. 'float' → logprob: -5.080836772918701
    5. ' float' → logprob: -6.205836772918701
    6. '       ' → logprob: -6.830836772918701
    7. ':' → logprob: -8.580836296081543
    8. '   ' → logprob: -9.080836296081543
    9. ':
' → logprob: -9.205836296081543
    10. 'num' → logprob: -9.205836296081543

Token 327: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.31948620080947876
    2. 'n' (adapté à ' n') → logprob: -1.319486141204834
    3. 'number' → logprob: -5.319486141204834
    4. ' n' → logprob: -7.319486141204834
    5. ' num' → logprob: -7.569486141204834
    6. 'value' → logprob: -9.319486618041992
    7. ' number' → logprob: -10.319486618041992
    8. 'x' → logprob: -12.694486618041992
    9. 'val' → logprob: -12.694486618041992
    10. 'f' → logprob: -13.819486618041992

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141655206680298
    2. '=' → logprob: -1.7014164924621582
    3. '=float' → logprob: -12.951416969299316
    4. ')' → logprob: -14.826416969299316
    5. '=int' → logprob: -15.701416969299316
    6. ' ' → logprob: -16.201416015625
    7. '=
' → logprob: -16.826416015625
    8. '＝' → logprob: -17.076416015625
    9. ' =
' → logprob: -17.076416015625
    10. ' =)' → logprob: -17.201416015625

Token 329: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006715370807796717
    2. ' float' → logprob: -5.006715297698975
    3. '	float' → logprob: -18.631715774536133
    4. '   ' → logprob: -19.506715774536133
    5. '=float' → logprob: -19.506715774536133
    6. 'int' → logprob: -20.131715774536133
    7. '(float' → logprob: -20.381715774536133
    8. 'flo' → logprob: -21.631715774536133
    9. ',float' → logprob: -22.881715774536133
    10. '<float' → logprob: -22.881715774536133

Token 330: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'line' → logprob: -20.0
    4. '=line' → logprob: -20.0
    5. '(Line' → logprob: -20.75
    6. '[line' → logprob: -20.75
    7. ' line' → logprob: -21.0
    8. '#line' → logprob: -21.25
    9. ' (' → logprob: -21.375
    10. ',line' → logprob: -21.5

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -17.000001907348633
    5. '))' → logprob: -17.125001907348633
    6. ')}' → logprob: -17.375001907348633
    7. ')return' → logprob: -17.500001907348633
    8. '),' → logprob: -17.875001907348633
    9. '[' → logprob: -18.125001907348633
    10. ')**' → logprob: -18.375001907348633

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029114440083503723
    2. 'except' → logprob: -4.029114246368408
    3. ' except' → logprob: -5.154114246368408
    4. '<|end|>' → logprob: -5.904114246368408
    5. ')' → logprob: -6.529114246368408
    6. '           ' → logprob: -7.404114246368408
    7. '<|end|>' → logprob: -8.529114723205566
    8. '#' → logprob: -10.404114723205566
    9. '	except' → logprob: -10.529114723205566
    10. ',' → logprob: -11.029114723205566

Token 333: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34765762090682983
    2. 'except' (adapté à ' except') → logprob: -1.8476576805114746
    3. ')' → logprob: -2.7226576805114746
    4. ' except' → logprob: -2.9726576805114746
    5. '           ' → logprob: -4.597657680511475
    6. '<|end|>' → logprob: -5.097657680511475
    7. '<|end|>' → logprob: -7.097657680511475
    8. '#' → logprob: -7.847657680511475
    9. '	except' → logprob: -8.097657203674316
    10. '.' → logprob: -8.097657203674316

Token 334: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.07211616635322571
    2. ' Value' → logprob: -2.8221161365509033
    3. '(Value' → logprob: -5.072116374969482
    4. '	Value' → logprob: -5.947116374969482
    5. '_Value' → logprob: -8.072115898132324
    6. '_value' → logprob: -8.072115898132324
    7. '.Value' → logprob: -8.072115898132324
    8. '<Value' → logprob: -8.822115898132324
    9. 'Exception' → logprob: -9.697115898132324
    10. '(Exception' → logprob: -10.572115898132324

Token 335: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.027017513290047646
    2. 'Value' → logprob: -3.652017593383789
    3. 'Exception' → logprob: -7.527017593383789
    4. '.Value' → logprob: -9.777017593383789
    5. 'Val' → logprob: -10.652017593383789
    6. '   ' → logprob: -11.527017593383789
    7. '[' → logprob: -11.652017593383789
    8. '(Value' → logprob: -11.777017593383789
    9. 'rror' → logprob: -11.902017593383789
    10. 'LError' → logprob: -11.902017593383789

Token 336: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007751675322651863
    2. ':
' → logprob: -4.88275146484375
    3. '           ' → logprob: -9.13275146484375
    4. '):' → logprob: -11.00775146484375
    5. '       ' → logprob: -12.38275146484375
    6. ':return' → logprob: -12.38275146484375
    7. ' as' → logprob: -12.50775146484375
    8. '   ' → logprob: -13.00775146484375
    9. '():' → logprob: -13.00775146484375
    10. '[' → logprob: -13.50775146484375

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001400952460244298
    2. ' continue' → logprob: -6.751400947570801
    3. 'continue' → logprob: -8.6264009475708
    4. '       ' → logprob: -10.1264009475708
    5. '               ' → logprob: -12.0014009475708
    6. '_continue' → logprob: -13.8764009475708
    7. '   ' → logprob: -14.1264009475708
    8. ' return' → logprob: -14.2514009475708
    9. '	       ' → logprob: -14.5014009475708
    10. 'return' → logprob: -14.6264009475708

Token 338: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3982231914997101
    2. 'continue' → logprob: -1.1482231616973877
    3. '       ' → logprob: -5.398223400115967
    4. ' continue' → logprob: -5.648223400115967
    5. 'print' → logprob: -5.773223400115967
    6. 'return' → logprob: -9.273222923278809
    7. '               ' → logprob: -11.023222923278809
    8. '   ' → logprob: -11.648222923278809
    9. ' print' → logprob: -12.523222923278809
    10. '```' → logprob: -12.648222923278809

Token 339: ' invalid' (ID: 15796)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7785751819610596
    2. 'print' → logprob: -0.9035751819610596
    3. ' continue' → logprob: -2.9035751819610596
    4. '           ' → logprob: -2.9035751819610596
    5. ' print' → logprob: -3.9035751819610596
    6. '       ' → logprob: -5.2785749435424805
    7. 'return' → logprob: -7.5285749435424805
    8. '   ' → logprob: -8.15357494354248
    9. ' return' → logprob: -10.65357494354248
    10. '```' → logprob: -11.02857494354248

Token 340: ' input' (ID: 3422)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3802444040775299
    2. 'input' → logprob: -1.8802443742752075
    3. ' input' → logprob: -2.880244493484497
    4. '       ' → logprob: -3.255244493484497
    5. '           ' → logprob: -3.505244493484497
    6. ' continue' → logprob: -4.005244255065918
    7. '	continue' → logprob: -5.130244255065918
    8. '   ' → logprob: -5.630244255065918
    9. ' line' → logprob: -6.255244255065918
    10. 'line' → logprob: -6.630244255065918

Token 341: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008489366737194359
    2. 'continue' → logprob: -7.375848770141602
    3. ' continue' → logprob: -8.875848770141602
    4. '       ' → logprob: -9.625848770141602
    5. '		' → logprob: -12.625848770141602
    6. '_continue' → logprob: -12.625848770141602
    7. '               ' → logprob: -13.125848770141602
    8. '	       ' → logprob: -13.375848770141602
    9. '```' → logprob: -13.375848770141602
    10. '
' → logprob: -14.000848770141602

Token 342: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022654302301816642
    2. 'continue' → logprob: -9.125226974487305
    3. '       ' → logprob: -9.375226974487305
    4. ' continue' → logprob: -10.500226974487305
    5. '               ' → logprob: -13.250226974487305
    6. '		' → logprob: -14.125226974487305
    7. '```' → logprob: -14.125226974487305
    8. ',' → logprob: -14.375226974487305
    9. '
' → logprob: -14.875226974487305
    10. '_continue' → logprob: -15.000226974487305

Token 343: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.538743257522583
    2. '           ' → logprob: -1.038743257522583
    3. ' continue' → logprob: -2.788743257522583
    4. '       ' → logprob: -7.038743019104004
    5. '               ' → logprob: -9.413743019104004
    6. '	continue' → logprob: -9.413743019104004
    7. '		' → logprob: -10.538743019104004
    8. '	       ' → logprob: -10.663743019104004
    9. '_continue' → logprob: -11.038743019104004
    10. '```' → logprob: -11.788743019104004

Token 344: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028278882382437587
    2. '       ' → logprob: -8.875283241271973
    3. 'continue' → logprob: -9.250283241271973
    4. '		' → logprob: -10.875283241271973
    5. ' continue' → logprob: -10.875283241271973
    6. '               ' → logprob: -12.125283241271973
    7. '	       ' → logprob: -13.500283241271973
    8. '	continue' → logprob: -14.500283241271973
    9. ',' → logprob: -14.625283241271973
    10. '<|end|>' → logprob: -14.750283241271973

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004732102679554373
    2. 'continue' → logprob: -8.000473022460938
    3. '       ' → logprob: -9.375473022460938
    4. ' continue' → logprob: -10.125473022460938
    5. '		' → logprob: -11.625473022460938
    6. '               ' → logprob: -13.000473022460938
    7. '	       ' → logprob: -14.625473022460938
    8. '   ' → logprob: -14.750473022460938
    9. '	continue' → logprob: -14.750473022460938
    10. '_continue' → logprob: -16.000473022460938

Token 346: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03374366834759712
    2. '           ' → logprob: -3.5337436199188232
    3. ' continue' → logprob: -5.533743858337402
    4. '               ' → logprob: -10.533743858337402
    5. '       ' → logprob: -13.158743858337402
    6. '```' → logprob: -13.158743858337402
    7. '	continue' → logprob: -13.283743858337402
    8. '		' → logprob: -13.533743858337402
    9. '_continue' → logprob: -14.908743858337402
    10. '   ' → logprob: -15.783743858337402

Token 347: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4621766209602356
    2. '<|end|>' → logprob: -1.2121765613555908
    3. '
' → logprob: -3.337176561355591
    4. '        
' → logprob: -4.21217679977417
    5. '<|end|>' → logprob: -4.71217679977417
    6. '   ' → logprob: -5.46217679977417
    7. '```' → logprob: -5.71217679977417
    8. '    
' → logprob: -5.83717679977417
    9. 'newline' → logprob: -7.08717679977417
    10. '  
' → logprob: -7.46217679977417

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004541200120002031
    2. '        
' → logprob: -5.754541397094727
    3. '<|end|>' → logprob: -6.754541397094727
    4. '<|end|>' → logprob: -9.629541397094727
    5. '   ' → logprob: -10.629541397094727
    6. 'n' → logprob: -10.629541397094727
    7. '```' → logprob: -10.754541397094727
    8. '    
' → logprob: -11.379541397094727
    9. '
' → logprob: -11.379541397094727
    10. '  
' → logprob: -12.129541397094727

Token 349: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02166801691055298
    2. 'output' → logprob: -4.896667957305908
    3. 'res' → logprob: -5.021667957305908
    4. ' result' → logprob: -5.896667957305908
    5. '       ' → logprob: -6.146667957305908
    6. 'binary' → logprob: -6.146667957305908
    7. 'bin' → logprob: -9.021668434143066
    8. ' output' → logprob: -9.771668434143066
    9. 'out' → logprob: -10.271668434143066
    10. 'b' → logprob: -10.271668434143066

Token 350: ' Stop' (ID: 22535)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.062452953308820724
    2. 'res' → logprob: -3.312453031539917
    3. 'output' → logprob: -4.437452793121338
    4. 'binary' → logprob: -4.687452793121338
    5. ' result' → logprob: -6.312452793121338
    6. ' res' → logprob: -7.812452793121338
    7. 'bin' → logprob: -8.187453269958496
    8. 'print' → logprob: -8.437453269958496
    9. 'out' → logprob: -9.187453269958496
    10. ' output' → logprob: -9.437453269958496

Token 351: ' input' (ID: 3422)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004255527164787054
    2. ' if' → logprob: -5.504255294799805
    3. '       ' → logprob: -8.879255294799805
    4. '<|end|>' → logprob: -11.379255294799805
    5. 'token' → logprob: -12.504255294799805
    6. '   ' → logprob: -12.629255294799805
    7. 'If' → logprob: -12.754255294799805
    8. '           ' → logprob: -12.879255294799805
    9. '<|end|>' → logprob: -13.379255294799805
    10. '        ' → logprob: -13.504255294799805

Token 352: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2756125330924988
    2. '       ' → logprob: -1.9006125926971436
    3. ' if' → logprob: -2.4006125926971436
    4. '<|end|>' → logprob: -8.525612831115723
    5. 'when' → logprob: -9.025612831115723
    6. '<|end|>' → logprob: -9.275612831115723
    7. 'If' → logprob: -9.400612831115723
    8. ' when' → logprob: -10.025612831115723
    9. '	if' → logprob: -10.150612831115723
    10. '   ' → logprob: -10.275612831115723

Token 353: ' negative' (ID: 12626)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4668857753276825
    2. 'line' → logprob: -1.2168858051300049
    3. ' n' → logprob: -3.091885805130005
    4. ' line' → logprob: -3.841885805130005
    5. '"' → logprob: -5.091885566711426
    6. 'if' → logprob: -6.466885566711426
    7. '0' → logprob: -7.341885566711426
    8. ''' → logprob: -7.966885566711426
    9. ''n' → logprob: -8.216885566711426
    10. 'negative' → logprob: -8.716885566711426

Token 354: ' number' (ID: 2086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8577819466590881
    2. 'n' → logprob: -1.6077818870544434
    3. 'number' → logprob: -1.6077818870544434
    4. ' if' → logprob: -2.1077818870544434
    5. 'numbers' → logprob: -3.8577818870544434
    6. ' number' → logprob: -4.232781887054443
    7. ' numbers' → logprob: -4.982781887054443
    8. '<|end|>' → logprob: -5.857781887054443
    9. ' n' → logprob: -6.107781887054443
    10. 'values' → logprob: -6.357781887054443

Token 355: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.463036435074173e-05
    2. '<|end|>' → logprob: -11.500024795532227
    3. ' if' → logprob: -11.875024795532227
    4. 'if' → logprob: -12.750024795532227
    5. '           ' → logprob: -13.500024795532227
    6. ',' → logprob: -13.625024795532227
    7. '	' → logprob: -14.375024795532227
    8. '   ' → logprob: -14.625024795532227
    9. '      ' → logprob: -15.125024795532227
    10. '	   ' → logprob: -15.625024795532227

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.045823566731997e-05
    2. '<|end|>' → logprob: -11.250020027160645
    3. 'if' → logprob: -12.750020027160645
    4. ' if' → logprob: -12.875020027160645
    5. '   ' → logprob: -14.000020027160645
    6. '           ' → logprob: -14.875020027160645
    7. ',' → logprob: -15.375020027160645
    8. '<|end|>' → logprob: -15.500020027160645
    9. '```' → logprob: -15.875020027160645
    10. '        
' → logprob: -16.00002098083496

Token 357: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06669894605875015
    2. 'if' (adapté à ' if') → logprob: -3.3166990280151367
    3. ' if' → logprob: -3.5666990280151367
    4. '   ' → logprob: -13.941699028015137
    5. '<|end|>' → logprob: -15.191699028015137
    6. '	if' → logprob: -15.691699028015137
    7. ' ' → logprob: -16.06669807434082
    8. '      ' → logprob: -16.19169807434082
    9. '           ' → logprob: -16.31669807434082
    10. 'If' → logprob: -17.44169807434082

Token 358: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023245595395565033
    2. ' n' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.398244857788086
    4. '	n' → logprob: -17.023244857788086
    5. '       ' → logprob: -18.898244857788086
    6. '<n' → logprob: -19.148244857788086
    7. '(n' → logprob: -19.648244857788086
    8. '0' → logprob: -21.023244857788086
    9. ')n' → logprob: -21.398244857788086
    10. '_n' → logprob: -21.898244857788086

Token 359: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00248338864184916
    2. '<' → logprob: -6.002483367919922
    3. '<|end|>' → logprob: -12.002483367919922
    4. ' ' → logprob: -14.127483367919922
    5. ' <",' → logprob: -15.877483367919922
    6. ' <=' → logprob: -16.002483367919922
    7. '()<' → logprob: -16.002483367919922
    8. '[' → logprob: -16.252483367919922
    9. '<int' → logprob: -16.627483367919922
    10. ')' → logprob: -16.877483367919922

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -18.87603187561035
    4. '۰' → logprob: -19.37603187561035
    5. '  ' → logprob: -20.12603187561035
    6. ' ' → logprob: -20.87603187561035
    7. '=' → logprob: -21.00103187561035
    8. '00' → logprob: -21.25103187561035
    9. 'zero' → logprob: -21.25103187561035
    10. 's' → logprob: -21.37603187561035

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -20.125001907348633
    4. '1' → logprob: -20.250001907348633
    5. 'zero' → logprob: -20.375001907348633
    6. '00' → logprob: -20.500001907348633
    7. '=' → logprob: -20.875001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '```' → logprob: -21.312501907348633
    10. '-' → logprob: -21.312501907348633

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45428985357284546
    2. ':
' → logprob: -1.0792899131774902
    3. '           ' → logprob: -4.20428991317749
    4. '       ' → logprob: -4.57928991317749
    5. ':return' → logprob: -10.704289436340332
    6. '():
' → logprob: -11.454289436340332
    7. '):
' → logprob: -11.579289436340332
    8. '   ' → logprob: -12.079289436340332
    9. ' :
' → logprob: -12.454289436340332
    10. ':
' → logprob: -12.454289436340332

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027697812765836716
    2. '       ' → logprob: -3.652697801589966
    3. 'break' → logprob: -6.652698040008545
    4. ' break' → logprob: -9.902697563171387
    5. 'return' → logprob: -11.402697563171387
    6. '               ' → logprob: -11.402697563171387
    7. '	       ' → logprob: -12.027697563171387
    8. '		' → logprob: -12.027697563171387
    9. '
' → logprob: -12.277697563171387
    10. '	break' → logprob: -12.277697563171387

Token 364: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.014255418442189693
    2. ' break' → logprob: -4.764255523681641
    3. '       ' → logprob: -5.264255523681641
    4. 'return' → logprob: -7.764255523681641
    5. '	break' → logprob: -11.01425552368164
    6. '           ' → logprob: -11.51425552368164
    7. ' return' → logprob: -14.63925552368164
    8. '_break' → logprob: -16.01425552368164
    9. '               ' → logprob: -16.13925552368164
    10. '   ' → logprob: -17.13925552368164

Token 365: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010303239338099957
    2. '        
' → logprob: -4.885303020477295
    3. '
' → logprob: -6.635303020477295
    4. '<|end|>' → logprob: -6.885303020477295
    5. '    
' → logprob: -9.010303497314453
    6. '```' → logprob: -9.385303497314453
    7. '   ' → logprob: -9.760303497314453
    8. '<|end|>' → logprob: -10.260303497314453
    9. '  
' → logprob: -11.010303497314453
    10. '           ' → logprob: -11.885303497314453

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001088066608645022
    2. 'print' → logprob: -7.7510881423950195
    3. '        
' → logprob: -8.37608814239502
    4. '   ' → logprob: -9.00108814239502
    5. '
' → logprob: -9.37608814239502
    6. '<|end|>' → logprob: -9.37608814239502
    7. '```' → logprob: -9.62608814239502
    8. '    
' → logprob: -10.37608814239502
    9. '<|end|>' → logprob: -11.62608814239502
    10. ' print' → logprob: -11.87608814239502

Token 367: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2165641486644745
    2. 'output' → logprob: -2.091564178466797
    3. 'print' → logprob: -3.091564178466797
    4. '       ' → logprob: -4.091564178466797
    5. 'binary' → logprob: -5.716564178466797
    6. 'res' → logprob: -6.091564178466797
    7. ' result' → logprob: -6.216564178466797
    8. ' output' → logprob: -7.216564178466797
    9. 'bin' → logprob: -8.091564178466797
    10. 'converted' → logprob: -8.716564178466797

Token 368: ' Convert' (ID: 15629)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12375745922327042
    2. 'binary' → logprob: -3.1237573623657227
    3. 'print' → logprob: -3.3737573623657227
    4. ' result' → logprob: -4.373757362365723
    5. 'output' → logprob: -4.748757362365723
    6. 'res' → logprob: -4.748757362365723
    7. 'converted' → logprob: -5.373757362365723
    8. 'bin' → logprob: -6.623757362365723
    9. ' binary' → logprob: -7.248757362365723
    10. ' res' → logprob: -7.373757362365723

Token 369: ' and' (ID: 326)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36730360984802246
    2. 'decimal' → logprob: -2.2423036098480225
    3. '_result' → logprob: -2.6173036098480225
    4. 'binary' → logprob: -3.3673036098480225
    5. 'print' → logprob: -3.4923036098480225
    6. 'n' → logprob: -4.492303848266602
    7. 'output' → logprob: -4.492303848266602
    8. '       ' → logprob: -4.617303848266602
    9. 'and' → logprob: -5.367303848266602
    10. '_output' → logprob: -5.617303848266602

Token 370: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00319375516846776
    2. ' print' → logprob: -5.7531938552856445
    3. '       ' → logprob: -11.253193855285645
    4. 'output' → logprob: -13.503193855285645
    5. '
' → logprob: -13.753193855285645
    6. '#print' → logprob: -15.503193855285645
    7. ' output' → logprob: -15.628193855285645
    8. '   ' → logprob: -16.253192901611328
    9. '_print' → logprob: -16.628192901611328
    10. '.print' → logprob: -17.003192901611328

Token 371: ' result' (ID: 1534)
  Prédit: '(decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -0.2630704343318939
    2. 'decimal' → logprob: -1.5130704641342163
    3. '       ' → logprob: -5.138070583343506
    4. '   ' → logprob: -6.013070583343506
    5. '(' → logprob: -6.138070583343506
    6. ' decimal' → logprob: -8.013070106506348
    7. 'print' → logprob: -8.763070106506348
    8. 'result' → logprob: -9.263070106506348
    9. '(convert' → logprob: -11.888070106506348
    10. '```' → logprob: -13.013070106506348

Token 372: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005097838002257049
    2. 'print' → logprob: -8.000510215759277
    3. '   ' → logprob: -9.125510215759277
    4. ' print' → logprob: -10.625510215759277
    5. '```' → logprob: -10.750510215759277
    6. 'result' → logprob: -11.125510215759277
    7. '        
' → logprob: -13.625510215759277
    8. ' result' → logprob: -13.750510215759277
    9. '<|end|>' → logprob: -14.625510215759277
    10. ',' → logprob: -14.875510215759277

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029438287019729614
    2. 'print' → logprob: -6.377943992614746
    3. '   ' → logprob: -7.377943992614746
    4. 'result' → logprob: -8.127943992614746
    5. ' print' → logprob: -8.627943992614746
    6. '```' → logprob: -9.502943992614746
    7. ' result' → logprob: -9.752943992614746
    8. 'output' → logprob: -13.502943992614746
    9. '<|end|>' → logprob: -13.502943992614746
    10. '``' → logprob: -13.877943992614746

Token 374: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0052634067833423615
    2. 'result' (adapté à ' result') → logprob: -5.505263328552246
    3. ' print' → logprob: -6.755263328552246
    4. ' result' → logprob: -11.005263328552246
    5. '       ' → logprob: -13.255263328552246
    6. 'res' → logprob: -14.005263328552246
    7. 'binary' → logprob: -16.005264282226562
    8. '   ' → logprob: -16.130264282226562
    9. 'output' → logprob: -16.380264282226562
    10. '```' → logprob: -17.755264282226562

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ')' → logprob: -16.224077224731445
    4. ' ' → logprob: -17.474077224731445
    5. '＝' → logprob: -17.599077224731445
    6. ' =)' → logprob: -17.724077224731445
    7. '   ' → logprob: -18.474077224731445
    8. '=

' → logprob: -18.474077224731445
    9. '=}' → logprob: -18.724077224731445
    10. 's' → logprob: -18.724077224731445

Token 376: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.0001234428636962548
    2. ' decimal' → logprob: -9.000123023986816
    3. '(decimal' → logprob: -18.375123977661133
    4. 'Decimal' → logprob: -21.500123977661133
    5. '   ' → logprob: -22.875123977661133
    6. 'dec' → logprob: -24.125123977661133
    7. '_decimal' → logprob: -24.125123977661133
    8. 'binary' → logprob: -24.375123977661133
    9. '`' → logprob: -25.375123977661133
    10. 'hex' → logprob: -25.625123977661133

Token 377: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_' → logprob: -19.125
    3. '_TO' → logprob: -20.125
    4. '_for' → logprob: -20.375
    5. 'To' → logprob: -20.375
    6. 'to' → logprob: -20.625
    7. ')_' → logprob: -20.75
    8. '_t' → logprob: -20.75
    9. '##_' → logprob: -20.75
    10. '```' → logprob: -20.875

Token 378: '_binary' (ID: 77551)
  Prédit: '_binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_binary' → logprob: -0.0020188093185424805
    2. 'binary' → logprob: -6.252018928527832
    3. 'decimal' → logprob: -9.752018928527832
    4. '_decimal' → logprob: -10.377018928527832
    5. '_' → logprob: -14.502018928527832
    6. '_BINARY' → logprob: -16.502017974853516
    7. '_bin' → logprob: -17.127017974853516
    8. ' binary' → logprob: -17.127017974853516
    9. '_python' → logprob: -17.127017974853516
    10. '_b' → logprob: -17.502017974853516

Token 379: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.625000953674316
    3. '_to' → logprob: -16.5
    4. ' _' → logprob: -16.75
    5. '```' → logprob: -17.25
    6. '_n' → logprob: -17.5
    7. '_low' → logprob: -18.125
    8. '"_' → logprob: -18.125
    9. '(_' → logprob: -18.75
    10. '
' → logprob: -18.875

Token 380: 'imited' (ID: 74176)
  Prédit: 'imited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imited' → logprob: -0.00026336227892898023
    2. 'limited' → logprob: -8.250263214111328
    3. '_l' → logprob: -14.375263214111328
    4. 'im' → logprob: -14.750263214111328
    5. 'ited' → logprob: -14.750263214111328
    6. '_im' → logprob: -15.375263214111328
    7. 'Limited' → logprob: -15.750263214111328
    8. '_' → logprob: -15.875263214111328
    9. 'm' → logprob: -16.125263214111328
    10. '(n' → logprob: -16.750263214111328

Token 381: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006274910410866141
    2. '(' → logprob: -7.375627517700195
    3. ' (' → logprob: -15.250627517700195
    4. '_' → logprob: -15.625627517700195
    5. '(int' → logprob: -16.125627517700195
    6. '(
' → logprob: -16.375627517700195
    7. '_(' → logprob: -16.875627517700195
    8. '(line' → logprob: -16.875627517700195
    9. '(float' → logprob: -17.250627517700195
    10. '(decimal' → logprob: -17.500627517700195

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05145871266722679
    2. ')
' → logprob: -3.0514585971832275
    3. '(n' → logprob: -5.926458835601807
    4. '(line' → logprob: -8.801458358764648
    5. ')n' → logprob: -10.801458358764648
    6. '   ' → logprob: -11.926458358764648
    7. ')

' → logprob: -11.926458358764648
    8. ')
' → logprob: -12.801458358764648
    9. ')`
' → logprob: -12.801458358764648
    10. '(result' → logprob: -13.176458358764648

Token 383: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1299770027399063
    2. '       ' → logprob: -2.129976987838745
    3. ' print' → logprob: -5.879977226257324
    4. '   ' → logprob: -8.379977226257324
    5. '(print' → logprob: -12.004977226257324
    6. '```' → logprob: -12.254977226257324
    7. '
' → logprob: -12.754977226257324
    8. '	print' → logprob: -13.129977226257324
    9. '        
' → logprob: -13.754977226257324
    10. '<|end|>' → logprob: -14.129977226257324

Token 384: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01442170049995184
    2. '       ' → logprob: -4.264421463012695
    3. ' print' → logprob: -8.264421463012695
    4. '   ' → logprob: -14.889421463012695
    5. '	print' → logprob: -15.889421463012695
    6. '```' → logprob: -16.264421463012695
    7. '(print' → logprob: -19.014421463012695
    8. ' ' → logprob: -19.139421463012695
    9. '           ' → logprob: -19.139421463012695
    10. 'if' → logprob: -19.264421463012695

Token 385: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. 'result' → logprob: -16.0
    4. '(results' → logprob: -18.125
    5. '=result' → logprob: -19.875
    6. '(f' → logprob: -20.375
    7. '(res' → logprob: -20.5
    8. '(resultado' → logprob: -21.125
    9. '[result' → logprob: -22.0
    10. ',result' → logprob: -22.125

Token 386: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -14.250001907348633
    3. '())' → logprob: -14.250001907348633
    4. ')`' → logprob: -15.625001907348633
    5. '))' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.500001907348633
    7. ' )' → logprob: -16.500001907348633
    8. '(' → logprob: -16.500001907348633
    9. '")' → logprob: -17.875001907348633
    10. ')
' → logprob: -18.125001907348633

Token 387: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.319370302458992e-06
    2. ' if' → logprob: -13.000005722045898
    3. 'main' → logprob: -13.000005722045898
    4. '```' → logprob: -14.250005722045898
    5. '#' → logprob: -16.5000057220459
    6. '<|end|>' → logprob: -18.7500057220459
    7. '\n' → logprob: -18.8750057220459
    8. '
' → logprob: -19.3750057220459
    9. '__' → logprob: -19.6250057220459
    10. 'If' → logprob: -20.1250057220459

Token 388: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31333455443382263
    2. '__' → logprob: -1.313334584236145
    3. '_' → logprob: -9.938334465026855
    4. '_name' → logprob: -11.188334465026855
    5. '___' → logprob: -11.938334465026855
    6. 'name' → logprob: -12.938334465026855
    7. ' ' → logprob: -14.563334465026855
    8. ' ' → logprob: -14.688334465026855
    9. 'Name' → logprob: -15.938334465026855
    10. ' _' → logprob: -16.063335418701172

Token 389: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0977390930056572
    2. '==' → logprob: -2.8477389812469482
    3. ' ==' → logprob: -3.4727389812469482
    4. '=="' → logprob: -5.597739219665527
    5. '=='' → logprob: -8.222739219665527
    6. ' __' → logprob: -9.847739219665527
    7. '__.__' → logprob: -10.722739219665527
    8. '[' → logprob: -11.097739219665527
    9. '.__' → logprob: -11.347739219665527
    10. '__.' → logprob: -11.722739219665527

Token 390: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.472211968386546e-05
    2. '==' → logprob: -9.625094413757324
    3. '__.__' → logprob: -10.875094413757324
    4. '=="' → logprob: -11.750094413757324
    5. ' ==' → logprob: -14.250094413757324
    6. '"' → logprob: -15.250094413757324
    7. '__["' → logprob: -15.250094413757324
    8. '__('' → logprob: -15.625094413757324
    9. '=='' → logprob: -15.875094413757324
    10. '___' → logprob: -16.62509536743164

Token 391: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.027178213000297546
    2. '==' → logprob: -3.6521782875061035
    3. ' ==' → logprob: -7.4021782875061035
    4. '=="' → logprob: -8.277177810668945
    5. '=='' → logprob: -12.152177810668945
    6. '__.__' → logprob: -12.277177810668945
    7. '=' → logprob: -14.152177810668945
    8. '___' → logprob: -14.152177810668945
    9. '===' → logprob: -14.277177810668945
    10. '"' → logprob: -15.027177810668945

Token 392: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02325887233018875
    2. ''' → logprob: -3.773258924484253
    3. '__' → logprob: -11.648259162902832
    4. ' "__' → logprob: -12.523259162902832
    5. ''"' → logprob: -14.773259162902832
    6. ' '__' → logprob: -16.023258209228516
    7. '"name' → logprob: -16.148258209228516
    8. '"user' → logprob: -16.148258209228516
    9. '"'' → logprob: -16.523258209228516
    10. '"_' → logprob: -17.023258209228516

Token 393: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001441303757019341
    2. 'name' → logprob: -7.001441478729248
    3. '__' → logprob: -8.25144100189209
    4. ''' → logprob: -8.62644100189209
    5. '"' → logprob: -9.50144100189209
    6. 'built' → logprob: -12.12644100189209
    7. '_main' → logprob: -13.25144100189209
    8. ''name' → logprob: -13.50144100189209
    9. 'm' → logprob: -13.87644100189209
    10. 'builtin' → logprob: -14.00144100189209

Token 394: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16050194203853607
    2. '__' → logprob: -1.9105019569396973
    3. '__':
' → logprob: -8.785501480102539
    4. '__.' → logprob: -9.535501480102539
    5. '__["' → logprob: -10.535501480102539
    6. '__.__' → logprob: -11.160501480102539
    7. '__:' → logprob: -11.785501480102539
    8. '__("' → logprob: -13.535501480102539
    9. '__",' → logprob: -13.910501480102539
    10. '"' → logprob: -14.035501480102539

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19728748500347137
    2. '"' → logprob: -2.8222875595092773
    3. '__' → logprob: -2.9472875595092773
    4. ' main' → logprob: -3.0722875595092773
    5. 'main' → logprob: -4.572287559509277
    6. ''' → logprob: -4.947287559509277
    7. ' __' → logprob: -6.447287559509277
    8. '    
' → logprob: -7.947287559509277
    9. 'if' → logprob: -8.072287559509277
    10. ' "__' → logprob: -8.572287559509277

Token 396: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0005637573776766658
    2. ' main' → logprob: -7.500563621520996
    3. '   ' → logprob: -11.500563621520996
    4. '	main' → logprob: -14.250563621520996
    5. ' ' → logprob: -20.000564575195312
    6. '  ' → logprob: -20.500564575195312
    7. '(main' → logprob: -21.250564575195312
    8. '_main' → logprob: -21.500564575195312
    9. '.main' → logprob: -21.750564575195312
    10. 'import' → logprob: -22.125564575195312

Token 397: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2525901794433594
    2. '<|end|>' → logprob: -1.7525901794433594
    3. '
' → logprob: -3.3775901794433594
    4. '\n' → logprob: -5.127590179443359
    5. '```' → logprob: -5.502590179443359
    6. ')' → logprob: -6.002590179443359
    7. '()
' → logprob: -6.877590179443359
    8. '(' → logprob: -7.252590179443359
    9. '<|end|>' → logprob: -7.252590179443359
    10. '#' → logprob: -8.25259017944336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 395
Tokens correctement prédits (1ère position, stricte): 146
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 301
Précision stricte (1ère position): 36.96%
Précision adaptée (1ère position): 41.52%
Précision (top 10): 76.20%
================================================================================
