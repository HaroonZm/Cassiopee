================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import permutations

def main():
    N = int(input())
    a = list(map(int, input().split()))
    w = list(map(int, input().split()))

    min_frustration = float('inf')
    for order in permutations(range(N)):
        total = 0
        for i in range(N):
            curr = order[i]
            right = order[(i+1)%N]
            left = order[(i-1)%N]
            if a[curr] == 0:  # right-handed
                if a[right] == 1:
                    total += w[curr]
            else:  # left-handed
                if a[left] == 0:
                    total += w[curr]
            if total >= min_frustration:
                break
        min_frustration = min(min_frustration, total)
    print(min_frustration)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1645996570587158
    2. 'product' → logprob: -1.4145996570587158
    3. 'per' → logprob: -1.7895996570587158
    4. 'count' → logprob: -2.039599657058716
    5. 'cycle' → logprob: -2.664599657058716
    6. 'group' → logprob: -3.289599657058716
    7. 'chain' → logprob: -3.414599657058716
    8. 'acc' → logprob: -6.039599418640137
    9. 'is' → logprob: -6.539599418640137
    10. 'zip' → logprob: -6.914599418640137

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.523948907968588e-05
    2. '\(' → logprob: -11.000035285949707
    3. '(
' → logprob: -12.000035285949707
    4. '.' → logprob: -12.500035285949707
    5. '```' → logprob: -13.500035285949707
    6. '`' → logprob: -13.875035285949707
    7. ''' → logprob: -14.000035285949707
    8. ' (' → logprob: -14.375035285949707
    9. '()' → logprob: -14.625035285949707
    10. 'a' → logprob: -14.875035285949707

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.017927029868588e-05
    2. '\(' → logprob: -9.750080108642578
    3. '(
' → logprob: -11.500080108642578
    4. '.' → logprob: -12.000080108642578
    5. '```' → logprob: -14.250080108642578
    6. ''' → logprob: -14.375080108642578
    7. 'a' → logprob: -14.375080108642578
    8. '(

' → logprob: -14.875080108642578
    9. ',' → logprob: -15.000080108642578
    10. '\' → logprob: -15.125080108642578

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6073901057243347
    2. ' permutations' → logprob: -0.8573901057243347
    3. ' factorial' → logprob: -4.2323899269104
    4. ' permutation' → logprob: -5.1073899269104
    5. ' perm' → logprob: -5.3573899269104
    6. ' generate' → logprob: -6.3573899269104
    7. ' ' → logprob: -7.1073899269104
    8. ' itertools' → logprob: -7.3573899269104
    9. ' space' → logprob: -7.6073899269104
    10. ' factor' → logprob: -7.8573899269104

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023290286771953106
    2. '():' → logprob: -7.002328872680664
    3. ':' → logprob: -7.127328872680664
    4. '(:' → logprob: -7.877328872680664
    5. ' (' → logprob: -9.752328872680664
    6. '(
' → logprob: -9.877328872680664
    7. '```' → logprob: -10.627328872680664
    8. '('' → logprob: -11.252328872680664
    9. '):' → logprob: -11.377328872680664
    10. '[' → logprob: -11.502328872680664

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011128113605082035
    2. '(' → logprob: -5.136127948760986
    3. 'for' → logprob: -6.636127948760986
    4. '[' → logprob: -6.886127948760986
    5. ' for' → logprob: -7.011127948760986
    6. 'a' → logprob: -7.761127948760986
    7. '    ' → logprob: -8.136128425598145
    8. 'print' → logprob: -8.136128425598145
    9. '```' → logprob: -8.511128425598145
    10. '    
' → logprob: -8.886128425598145

Token 9: ' N' (ID: 478)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31125932931900024
    2. 'for' → logprob: -1.5612592697143555
    3. ' ' → logprob: -4.1862592697143555
    4. 'n' → logprob: -4.8112592697143555
    5. ' n' → logprob: -5.1862592697143555
    6. 'per' → logprob: -5.8112592697143555
    7. ' items' → logprob: -5.8112592697143555
    8. 'a' → logprob: -6.0612592697143555
    9. '   ' → logprob: -6.0612592697143555
    10. 's' → logprob: -6.4362592697143555

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2311955690383911
    2. '=' → logprob: -1.6061955690383911
    3. ' ' → logprob: -5.981195449829102
    4. ',' → logprob: -6.106195449829102
    5. ')' → logprob: -7.856195449829102
    6. ' ,' → logprob: -8.356195449829102
    7. '.' → logprob: -9.231195449829102
    8. ' )' → logprob: -9.481195449829102
    9. '  ' → logprob: -9.606195449829102
    10. '=int' → logprob: -10.731195449829102

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03869311511516571
    2. 'int' → logprob: -3.5386931896209717
    3. ' ' → logprob: -4.788692951202393
    4. '3' → logprob: -7.788692951202393
    5. '5' → logprob: -9.28869342803955
    6. '4' → logprob: -10.66369342803955
    7. '10' → logprob: -10.91369342803955
    8. ' input' → logprob: -10.91369342803955
    9. 'input' → logprob: -12.91369342803955
    10. '6' → logprob: -13.03869342803955

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12740017473697662
    2. '(input' → logprob: -2.1274001598358154
    3. 'input' → logprob: -8.252400398254395
    4. '('' → logprob: -8.752400398254395
    5. '("' → logprob: -11.252400398254395
    6. ' (' → logprob: -11.502400398254395
    7. ''' → logprob: -11.877400398254395
    8. '()' → logprob: -12.002400398254395
    9. '(
' → logprob: -12.002400398254395
    10. ' input' → logprob: -12.377400398254395

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8211535215377808
    2. '())' → logprob: -0.8211535215377808
    3. '()' → logprob: -2.4461536407470703
    4. '(' → logprob: -3.5711536407470703
    5. '))' → logprob: -5.44615364074707
    6. '()))' → logprob: -7.19615364074707
    7. '(
' → logprob: -9.19615364074707
    8. '('' → logprob: -9.32115364074707
    9. '(""))' → logprob: -10.32115364074707
    10. '')' → logprob: -10.82115364074707

Token 14: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7914926409721375
    2. '   ' → logprob: -1.6664927005767822
    3. ' for' → logprob: -1.6664927005767822
    4. '    
' → logprob: -2.5414927005767822
    5. 'per' → logprob: -4.041492462158203
    6. '  
' → logprob: -4.791492462158203
    7. '   
' → logprob: -4.791492462158203
    8. '```' → logprob: -4.916492462158203
    9. '\' → logprob: -5.041492462158203
    10. '
' → logprob: -5.041492462158203

Token 15: ' a' (ID: 261)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.3212677836418152
    2. ' for' → logprob: -2.19626784324646
    3. ' items' → logprob: -3.19626784324646
    4. ' nums' → logprob: -3.57126784324646
    5. ' A' → logprob: -4.321267604827881
    6. 'for' → logprob: -4.446267604827881
    7. ' arr' → logprob: -4.571267604827881
    8. ' data' → logprob: -4.696267604827881
    9. 'numbers' → logprob: -5.071267604827881
    10. ' a' → logprob: -5.321267604827881

Token 16: ' =' (ID: 314)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.7094646096229553
    2. 'rray' → logprob: -0.7094646096229553
    3. ' =' → logprob: -4.7094645500183105
    4. 'r' → logprob: -5.4594645500183105
    5. '=' → logprob: -6.9594645500183105
    6. ' ' → logprob: -7.7094645500183105
    7. 's' → logprob: -7.9594645500183105
    8. '[' → logprob: -8.584465026855469
    9. '_' → logprob: -8.834465026855469
    10. ',' → logprob: -8.834465026855469

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.007391167804598808
    2. 'list' → logprob: -5.007390975952148
    3. ' [' → logprob: -7.507390975952148
    4. ' input' → logprob: -10.007390975952148
    5. ' []' → logprob: -10.132390975952148
    6. ' sorted' → logprob: -11.257390975952148
    7. ' ' → logprob: -11.507390975952148
    8. '[' → logprob: -12.257390975952148
    9. '[list' → logprob: -12.507390975952148
    10. ' permutations' → logprob: -12.632390975952148

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13963693380355835
    2. '(per' → logprob: -2.139636993408203
    3. '(range' → logprob: -4.764636993408203
    4. '(input' → logprob: -5.764636993408203
    5. '()' → logprob: -7.764636993408203
    6. '(int' → logprob: -8.514636993408203
    7. '(map' → logprob: -9.014636993408203
    8. '(a' → logprob: -10.014636993408203
    9. 'per' → logprob: -10.639636993408203
    10. '(data' → logprob: -11.264636993408203

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25508368015289307
    2. '(' → logprob: -1.755083680152893
    3. '(str' → logprob: -3.3800835609436035
    4. '(lambda' → logprob: -4.3800835609436035
    5. '(input' → logprob: -5.5050835609436035
    6. 'int' → logprob: -8.130084037780762
    7. '```' → logprob: -8.255084037780762
    8. '<|end|>' → logprob: -8.755084037780762
    9. '(eval' → logprob: -9.005084037780762
    10. '(
' → logprob: -9.130084037780762

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06058646738529205
    2. '(' → logprob: -3.810586452484131
    3. ',input' → logprob: -3.810586452484131
    4. ',' → logprob: -4.435586452484131
    5. ')' → logprob: -6.810586452484131
    6. 'input' → logprob: -7.560586452484131
    7. '))' → logprob: -8.060586929321289
    8. '),' → logprob: -8.560586929321289
    9. '=input' → logprob: -8.560586929321289
    10. '<|end|>' → logprob: -9.310586929321289

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06198001280426979
    2. ' input' → logprob: -2.8119800090789795
    3. '(input' → logprob: -11.436980247497559
    4. '=input' → logprob: -14.436980247497559
    5. ',input' → logprob: -14.561980247497559
    6. '	input' → logprob: -15.061980247497559
    7. ')' → logprob: -15.936980247497559
    8. '<input' → logprob: -16.811979293823242
    9. ' ' → logprob: -17.436979293823242
    10. '_input' → logprob: -18.061979293823242

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001126026691053994
    2. '()' → logprob: -9.500112533569336
    3. '()))' → logprob: -10.875112533569336
    4. '(' → logprob: -11.500112533569336
    5. '())' → logprob: -12.625112533569336
    6. '()));' → logprob: -13.625112533569336
    7. ')' → logprob: -13.875112533569336
    8. '())))' → logprob: -14.375112533569336
    9. ' ().' → logprob: -14.625112533569336
    10. '()
' → logprob: -14.875112533569336

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.637786231702194e-05
    2. 'strip' → logprob: -9.625086784362793
    3. ' split' → logprob: -11.000086784362793
    4. 'rstrip' → logprob: -12.875086784362793
    5. '(split' → logprob: -14.000086784362793
    6. 'spl' → logprob: -15.875086784362793
    7. ')' → logprob: -17.875085830688477
    8. ' strip' → logprob: -18.875085830688477
    9. 's' → logprob: -19.125085830688477
    10. '.split' → logprob: -19.125085830688477

Token 24: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10189402848482132
    2. '))' → logprob: -2.8518941402435303
    3. '())' → logprob: -4.101893901824951
    4. '()' → logprob: -4.226893901824951
    5. '(' → logprob: -5.351893901824951
    6. ')' → logprob: -5.851893901824951
    7. '())))' → logprob: -8.47689437866211
    8. '()))
' → logprob: -9.60189437866211
    9. ')))' → logprob: -9.60189437866211
    10. ''))' → logprob: -11.72689437866211

Token 25: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.898917555809021
    2. '   ' → logprob: -1.648917555809021
    3. ' for' → logprob: -1.648917555809021
    4. '
' → logprob: -2.1489176750183105
    5. '    
' → logprob: -3.2739176750183105
    6. '  
' → logprob: -4.1489176750183105
    7. ' 
' → logprob: -4.6489176750183105
    8. ')' → logprob: -5.1489176750183105
    9. '```' → logprob: -5.5239176750183105
    10. ' ' → logprob: -5.8989176750183105

Token 26: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5775089263916016
    2. ' for' → logprob: -0.8275089263916016
    3. '   ' → logprob: -7.702508926391602
    4. ' 
' → logprob: -8.327508926391602
    5. '```' → logprob: -8.702508926391602
    6. 'result' → logprob: -9.327508926391602
    7. 'b' → logprob: -9.577508926391602
    8. 'p' → logprob: -9.827508926391602
    9. '    
' → logprob: -9.952508926391602
    10. 'possible' → logprob: -10.202508926391602

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0317147970199585
    2. 'h' → logprob: -1.1567147970199585
    3. 'hile' → logprob: -1.1567147970199585
    4. 'e' → logprob: -5.281714916229248
    5. ' =' → logprob: -6.156714916229248
    6. '.' → logprob: -6.156714916229248
    7. 'a' → logprob: -6.406714916229248
    8. 'for' → logprob: -6.906714916229248
    9. 'hen' → logprob: -7.406714916229248
    10. ')' → logprob: -8.15671443939209

Token 28: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.4315263032913208
    2. ' [' → logprob: -1.8065263032913208
    3. '[]' → logprob: -1.8065263032913208
    4. 'len' → logprob: -2.9315261840820312
    5. ' list' → logprob: -3.0565261840820312
    6. 'list' → logprob: -3.1815261840820312
    7. 'a' → logprob: -3.1815261840820312
    8. '[' → logprob: -3.3065261840820312
    9. ' len' → logprob: -3.4315261840820312
    10. 'max' → logprob: -3.6815261840820312

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1496100276708603
    2. '(per' → logprob: -2.6496100425720215
    3. '(map' → logprob: -3.2746100425720215
    4. '(a' → logprob: -3.6496100425720215
    5. '(int' → logprob: -6.1496100425720215
    6. '()' → logprob: -7.1496100425720215
    7. '(range' → logprob: -7.1496100425720215
    8. '(
' → logprob: -9.024609565734863
    9. '((' → logprob: -9.149609565734863
    10. '(len' → logprob: -9.649609565734863

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010317635722458363
    2. '(' → logprob: -4.635317802429199
    3. 'int' → logprob: -8.8853178024292
    4. ')(' → logprob: -8.8853178024292
    5. '<int' → logprob: -9.6353178024292
    6. ')' → logprob: -9.8853178024292
    7. '=int' → logprob: -10.1353178024292
    8. ',int' → logprob: -10.2603178024292
    9. '```' → logprob: -10.6353178024292
    10. '<|end|>' → logprob: -11.0103178024292

Token 31: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1354658156633377
    2. '(' → logprob: -2.8854658603668213
    3. '(input' → logprob: -3.0104658603668213
    4. ',' → logprob: -4.385465621948242
    5. ',int' → logprob: -5.260465621948242
    6. '<int' → logprob: -6.760465621948242
    7. '```' → logprob: -7.010465621948242
    8. ',input' → logprob: -7.260465621948242
    9. 'int' → logprob: -7.635465621948242
    10. '=int' → logprob: -8.510465621948242

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.693162202835083
    2. ' input' → logprob: -0.693162202835083
    3. '(input' → logprob: -11.443161964416504
    4. 'int' → logprob: -12.693161964416504
    5. ',input' → logprob: -15.068161964416504
    6. '=input' → logprob: -15.693161964416504
    7. '[input' → logprob: -15.818161964416504
    8. '	input' → logprob: -15.943161964416504
    9. '<input' → logprob: -16.06816291809082
    10. ' ' → logprob: -16.44316291809082

Token 33: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.14329944550991058
    2. '(' → logprob: -2.7682993412017822
    3. '().' → logprob: -3.0182993412017822
    4. '()))' → logprob: -4.893299579620361
    5. '()' → logprob: -5.143299579620361
    6. '())' → logprob: -5.518299579620361
    7. '```' → logprob: -6.018299579620361
    8. '()(' → logprob: -7.643299579620361
    9. '(),' → logprob: -7.893299579620361
    10. '(input' → logprob: -8.518299102783203

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. '(split' → logprob: -14.500000953674316
    3. ' split' → logprob: -15.375000953674316
    4. 'plit' → logprob: -16.000001907348633
    5. 'spl' → logprob: -16.875001907348633
    6. ')' → logprob: -17.500001907348633
    7. 'rstrip' → logprob: -17.500001907348633
    8. '_split' → logprob: -17.875001907348633
    9. 'strip' → logprob: -18.000001907348633
    10. '.split' → logprob: -18.875001907348633

Token 35: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.024934886023402214
    2. '())' → logprob: -4.524934768676758
    3. '()' → logprob: -4.649934768676758
    4. '))' → logprob: -5.524934768676758
    5. '()))
' → logprob: -8.774934768676758
    6. ')' → logprob: -10.399934768676758
    7. '(' → logprob: -10.649934768676758
    8. '()));' → logprob: -10.899934768676758
    9. '()))

' → logprob: -11.899934768676758
    10. '())))' → logprob: -13.399934768676758

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26497817039489746
    2. 'result' → logprob: -2.2649781703948975
    3. 'total' → logprob: -2.7649781703948975
    4. 'for' → logprob: -4.264978408813477
    5. '    
' → logprob: -4.389978408813477
    6. 'answer' → logprob: -5.014978408813477
    7. 'res' → logprob: -5.139978408813477
    8. 'ans' → logprob: -5.264978408813477
    9. 'max' → logprob: -5.264978408813477
    10. 's' → logprob: -6.014978408813477

Token 37: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31597357988357544
    2. 'ans' → logprob: -1.9409735202789307
    3. 'answer' → logprob: -3.0659735202789307
    4. 'res' → logprob: -3.8159735202789307
    5. 'result' → logprob: -3.8159735202789307
    6. 'total' → logprob: -4.06597375869751
    7. 'best' → logprob: -4.56597375869751
    8. 's' → logprob: -5.31597375869751
    9. ' max' → logprob: -7.06597375869751
    10. 'sum' → logprob: -7.44097375869751

Token 38: '_fr' (ID: 20643)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22559215128421783
    2. '_sum' → logprob: -2.4755921363830566
    3. '_value' → logprob: -2.8505921363830566
    4. '_val' → logprob: -2.9755921363830566
    5. '_diff' → logprob: -5.100592136383057
    6. '_score' → logprob: -6.600592136383057
    7. '_per' → logprob: -8.100592613220215
    8. '_perm' → logprob: -8.600592613220215
    9. '(' → logprob: -9.225592613220215
    10. '_average' → logprob: -9.350592613220215

Token 39: 'ustr' (ID: 3073)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.103255495429039
    2. 'e' → logprob: -2.8532555103302
    3. 'ac' → logprob: -3.4782555103302
    4. 'om' → logprob: -5.728255271911621
    5. 'equ' → logprob: -6.228255271911621
    6. 'action' → logprob: -6.228255271911621
    7. 'a' → logprob: -6.728255271911621
    8. 'ag' → logprob: -8.728255271911621
    9. '=' → logprob: -8.853255271911621
    10. '```' → logprob: -9.353255271911621

Token 40: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00012201975914649665
    2. 'ations' → logprob: -10.2501220703125
    3. '=' → logprob: -10.5001220703125
    4. 'a' → logprob: -10.6251220703125
    5. 'ate' → logprob: -11.6251220703125
    6. '   ' → logprob: -12.3751220703125
    7. 'at' → logprob: -12.5001220703125
    8. 'atio' → logprob: -12.7501220703125
    9. ' =' → logprob: -13.2501220703125
    10. '```' → logprob: -13.3751220703125

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22548045217990875
    2. '=' → logprob: -1.6004804372787476
    3. '_' → logprob: -10.850480079650879
    4. ',' → logprob: -10.850480079650879
    5. ' ' → logprob: -11.225480079650879
    6. 's' → logprob: -12.100480079650879
    7. ')' → logprob: -13.225480079650879
    8. '_=' → logprob: -13.850480079650879
    9. '＝' → logprob: -13.975480079650879
    10. '_idx' → logprob: -14.350480079650879

Token 42: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6934604048728943
    2. 'float' → logprob: -0.6934604048728943
    3. '10' → logprob: -8.818460464477539
    4. ' None' → logprob: -9.068460464477539
    5. ' sum' → logprob: -11.443460464477539
    6. 'sum' → logprob: -11.568460464477539
    7. ' ' → logprob: -11.693460464477539
    8. 'None' → logprob: -11.943460464477539
    9. '100' → logprob: -13.068460464477539
    10. '1' → logprob: -13.068460464477539

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006399746518582106
    2. '(' → logprob: -5.131399631500244
    3. '('.')' → logprob: -8.756400108337402
    4. '('_' → logprob: -9.631400108337402
    5. '('='' → logprob: -9.881400108337402
    6. ''s' → logprob: -10.131400108337402
    7. '('.' → logprob: -10.131400108337402
    8. '.' → logprob: -10.881400108337402
    9. '("' → logprob: -11.006400108337402
    10. '('-' → logprob: -11.006400108337402

Token 44: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1875571544806007e-05
    2. 'i' → logprob: -11.375011444091797
    3. 'in' → logprob: -16.750011444091797
    4. ''i' → logprob: -16.875011444091797
    5. ' inf' → logprob: -16.875011444091797
    6. '.inf' → logprob: -17.125011444091797
    7. '-inf' → logprob: -17.500011444091797
    8. 'info' → logprob: -17.875011444091797
    9. '_inf' → logprob: -17.875011444091797
    10. ''' → logprob: -18.250011444091797

Token 45: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8126592193730175e-05
    2. ')
' → logprob: -10.1250581741333
    3. ' )' → logprob: -11.5000581741333
    4. '')' → logprob: -12.1250581741333
    5. '):' → logprob: -13.8750581741333
    6. '))' → logprob: -14.2500581741333
    7. ')
' → logprob: -14.6250581741333
    8. ')

' → logprob: -15.8750581741333
    9. '）' → logprob: -16.750057220458984
    10. ')**' → logprob: -16.875057220458984

Token 46: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1040973663330078
    2. '   ' → logprob: -1.3540973663330078
    3. '
' → logprob: -1.8540973663330078
    4. ' for' → logprob: -1.9790973663330078
    5. '    
' → logprob: -2.854097366333008
    6. '\n' → logprob: -3.354097366333008
    7. '\' → logprob: -5.104097366333008
    8. '  
' → logprob: -5.354097366333008
    9. '' → logprob: -5.479097366333008
    10. '   
' → logprob: -6.104097366333008

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19216905534267426
    2. ' for' → logprob: -1.8171690702438354
    3. '
' → logprob: -4.817169189453125
    4. '   ' → logprob: -6.567169189453125
    5. '    
' → logprob: -6.692169189453125
    6. ' 
' → logprob: -6.942169189453125
    7. '\n' → logprob: -7.817169189453125
    8. '   
' → logprob: -9.817169189453125
    9. '  
' → logprob: -9.942169189453125
    10. '\' → logprob: -10.192169189453125

Token 48: ' order' (ID: 2569)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.29457274079322815
    2. 'p' → logprob: -1.5445727109909058
    3. 'perm' → logprob: -3.4195728302001953
    4. ' perm' → logprob: -5.294572830200195
    5. ' ' → logprob: -6.294572830200195
    6. 'per' → logprob: -6.919572830200195
    7. '```' → logprob: -8.419572830200195
    8. '   ' → logprob: -8.669572830200195
    9. ' per' → logprob: -8.794572830200195
    10. '_' → logprob: -8.919572830200195

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.524314820766449
    2. 'in' → logprob: -0.899314820766449
    3. ' ' → logprob: -7.274314880371094
    4. 's' → logprob: -9.149314880371094
    5. '  ' → logprob: -9.399314880371094
    6. '_in' → logprob: -9.524314880371094
    7. '	in' → logprob: -10.149314880371094
    8. '_' → logprob: -10.274314880371094
    9. 'space' → logprob: -10.399314880371094
    10. ',' → logprob: -10.399314880371094

Token 50: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.393533855676651
    2. ' permutations' → logprob: -1.1435338258743286
    3. '(per' → logprob: -5.018533706665039
    4. '	per' → logprob: -11.143533706665039
    5. 'perm' → logprob: -12.018533706665039
    6. '.per' → logprob: -13.018533706665039
    7. '_per' → logprob: -13.268533706665039
    8. ' perm' → logprob: -14.268533706665039
    9. '(' → logprob: -14.393533706665039
    10. ' per' → logprob: -14.643533706665039

Token 51: '(range' (ID: 50017)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00023858259373810142
    2. '(' → logprob: -8.750238418579102
    3. '(range' → logprob: -10.000238418579102
    4. ' (' → logprob: -11.000238418579102
    5. '(len' → logprob: -11.625238418579102
    6. '((' → logprob: -12.625238418579102
    7. '(n' → logprob: -13.375238418579102
    8. '(N' → logprob: -13.375238418579102
    9. '```' → logprob: -14.125238418579102
    10. '(`' → logprob: -14.750238418579102

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011229529045522213
    2. '(len' → logprob: -7.376122951507568
    3. '(' → logprob: -7.626122951507568
    4. '(n' → logprob: -11.876123428344727
    5. 'len' → logprob: -13.501123428344727
    6. '   ' → logprob: -15.251123428344727
    7. '```' → logprob: -17.001123428344727
    8. 'N' → logprob: -17.126123428344727
    9. '(M' → logprob: -17.501123428344727
    10. ' (' → logprob: -17.501123428344727

Token 53: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.12037181109189987
    2. '):' → logprob: -2.3703718185424805
    3. '))' → logprob: -4.7453718185424805
    4. ')' → logprob: -5.4953718185424805
    5. '),' → logprob: -5.4953718185424805
    6. ')):
' → logprob: -5.8703718185424805
    7. ')):
' → logprob: -9.49537181854248
    8. '):
' → logprob: -9.62037181854248
    9. '>):' → logprob: -10.74537181854248
    10. '```' → logprob: -10.87037181854248

Token 54: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08303437381982803
    2. '       ' → logprob: -2.5830342769622803
    3. '):' → logprob: -6.083034515380859
    4. ':
' → logprob: -7.208034515380859
    5. '<|end|>' → logprob: -7.458034515380859
    6. ' :' → logprob: -8.95803451538086
    7. '   ' → logprob: -8.95803451538086
    8. '():' → logprob: -9.70803451538086
    9. '):
' → logprob: -10.08303451538086
    10. ',' → logprob: -10.08303451538086

Token 55: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2059042900800705
    2. 'fr' → logprob: -2.830904245376587
    3. 'sum' → logprob: -3.205904245376587
    4. ' frustration' → logprob: -3.580904245376587
    5. '   ' → logprob: -4.205904483795166
    6. 'total' (adapté à ' total') → logprob: -4.455904483795166
    7. 's' → logprob: -4.955904483795166
    8. 'current' → logprob: -5.705904483795166
    9. ' sum' → logprob: -5.830904483795166
    10. '           ' → logprob: -5.955904483795166

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08642548322677612
    2. '_fr' → logprob: -2.836425542831421
    3. '=' → logprob: -4.086425304412842
    4. '_' → logprob: -5.086425304412842
    5. '_frag' → logprob: -8.08642578125
    6. '_score' → logprob: -8.58642578125
    7. '_sum' → logprob: -8.71142578125
    8. '   ' → logprob: -8.96142578125
    9. '```' → logprob: -9.08642578125
    10. '_cost' → logprob: -9.96142578125

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3607136607170105
    2. ' ' → logprob: -1.2357137203216553
    3. ' sum' → logprob: -4.610713481903076
    4. 'sum' → logprob: -6.110713481903076
    5. '   ' → logprob: -11.485713958740234
    6. '  ' → logprob: -11.610713958740234
    7. ' ' → logprob: -13.485713958740234
    8. '	sum' → logprob: -13.985713958740234
    9. '(sum' → logprob: -14.110713958740234
    10. '[' → logprob: -14.235713958740234

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041789524257183075
    2. 'sum' → logprob: -5.504179000854492
    3. ' ' → logprob: -9.504179000854492
    4. ' sum' → logprob: -10.629179000854492
    5. '   ' → logprob: -13.504179000854492
    6. '  ' → logprob: -16.254179000854492
    7. 'abs' → logprob: -16.379179000854492
    8. '	sum' → logprob: -16.629179000854492
    9. '```' → logprob: -16.941679000854492
    10. '(sum' → logprob: -17.129179000854492

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8508226871490479
    2. '
' → logprob: -1.4758226871490479
    3. '   ' → logprob: -2.100822687149048
    4. ' for' → logprob: -2.475822687149048
    5. '<|end|>' → logprob: -2.475822687149048
    6. ' ' → logprob: -4.725822448730469
    7. 'for' → logprob: -4.850822448730469
    8. '    
' → logprob: -4.975822448730469
    9. '\n' → logprob: -5.350822448730469
    10. '	for' → logprob: -5.475822448730469

Token 61: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33407947421073914
    2. ' for' → logprob: -1.3340795040130615
    3. '       ' → logprob: -3.9590795040130615
    4. '   ' → logprob: -6.584079265594482
    5. ' ' → logprob: -9.58407974243164
    6. '	for' → logprob: -10.08407974243164
    7. '```' → logprob: -11.70907974243164
    8. 'range' → logprob: -12.45907974243164
    9. '  ' → logprob: -12.70907974243164
    10. '
' → logprob: -12.83407974243164

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02391415275633335
    2. ' range' → logprob: -4.273914337158203
    3. 'i' → logprob: -4.773914337158203
    4. 'range' → logprob: -7.398914337158203
    5. ' j' → logprob: -8.398914337158203
    6. ' ' → logprob: -8.523914337158203
    7. 'j' → logprob: -9.273914337158203
    8. ' idx' → logprob: -10.023914337158203
    9. '	i' → logprob: -11.523914337158203
    10. '(range' → logprob: -11.898914337158203

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013060812838375568
    2. 'in' → logprob: -4.638061046600342
    3. ',' → logprob: -5.763061046600342
    4. ' ' → logprob: -9.263060569763184
    5. ' ,' → logprob: -10.888060569763184
    6. '	in' → logprob: -11.513060569763184
    7. ')' → logprob: -12.138060569763184
    8. '  ' → logprob: -12.138060569763184
    9. '<|end|>' → logprob: -12.138060569763184
    10. '   ' → logprob: -12.388060569763184

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7266820073127747
    2. 'range' → logprob: -0.7266820073127747
    3. 'order' → logprob: -3.72668194770813
    4. ' order' → logprob: -4.726682186126709
    5. ' xrange' → logprob: -11.35168170928955
    6. ' ' → logprob: -11.47668170928955
    7. '	range' → logprob: -11.97668170928955
    8. '(range' → logprob: -12.22668170928955
    9. 'ange' → logprob: -12.97668170928955
    10. '   ' → logprob: -13.35168170928955

Token 65: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001000655465759337
    2. '(' → logprob: -7.001000881195068
    3. '(len' → logprob: -10.25100040435791
    4. 'N' → logprob: -10.25100040435791
    5. '   ' → logprob: -12.37600040435791
    6. '(n' → logprob: -12.37600040435791
    7. ' (' → logprob: -12.87600040435791
    8. '	N' → logprob: -13.00100040435791
    9. '(
' → logprob: -13.75100040435791
    10. ' N' → logprob: -13.75100040435791

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12795929610729218
    2. '):
' → logprob: -2.1279592514038086
    3. ')' → logprob: -7.752959251403809
    4. '       ' → logprob: -7.752959251403809
    5. '   ' → logprob: -9.127959251403809
    6. '):
' → logprob: -11.252959251403809
    7. '**' → logprob: -11.502959251403809
    8. ' ):' → logprob: -11.627959251403809
    9. ')):' → logprob: -12.252959251403809
    10. '):

' → logprob: -12.377959251403809

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4355996549129486
    2. '       ' → logprob: -1.435599684715271
    3. '+' → logprob: -2.6855995655059814
    4. ':' → logprob: -4.3105998039245605
    5. '               ' → logprob: -5.0605998039245605
    6. ' ' → logprob: -5.8105998039245605
    7. '   ' → logprob: -5.9355998039245605
    8. '<|end|>' → logprob: -5.9355998039245605
    9. '	       ' → logprob: -6.0605998039245605
    10. '*' → logprob: -6.0605998039245605

Token 68: ' curr' (ID: 10495)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.40264227986335754
    2. 'total' → logprob: -1.2776422500610352
    3. '               ' → logprob: -3.152642250061035
    4. '           ' → logprob: -5.027642250061035
    5. '(total' → logprob: -6.902642250061035
    6. '+' → logprob: -7.652642250061035
    7. ' ' → logprob: -7.777642250061035
    8. '<|end|>' → logprob: -8.027642250061035
    9. '```' → logprob: -8.652642250061035
    10. ')' → logprob: -8.652642250061035

Token 69: ' =' (ID: 314)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7971326112747192
    2. '_total' → logprob: -1.6721326112747192
    3. ' =' → logprob: -1.9221326112747192
    4. 't' → logprob: -3.0471324920654297
    5. '=' → logprob: -4.04713249206543
    6. 'a' → logprob: -4.17213249206543
    7. 'sum' → logprob: -4.29713249206543
    8. ']' → logprob: -4.29713249206543
    9. '           ' → logprob: -4.29713249206543
    10. ')' → logprob: -4.42213249206543

Token 70: ' order' (ID: 2569)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5818915963172913
    2. 'a' → logprob: -0.8318915963172913
    3. ' w' → logprob: -5.5818915367126465
    4. 'w' → logprob: -6.4568915367126465
    5. ' abs' → logprob: -8.706892013549805
    6. '   ' → logprob: -8.956892013549805
    7. ' ' → logprob: -9.331892013549805
    8. 'abs' → logprob: -9.831892013549805
    9. '    ' → logprob: -9.956892013549805
    10. '	a' → logprob: -10.706892013549805

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011760921915993094
    2. '[' → logprob: -9.375117301940918
    3. '.index' → logprob: -12.125117301940918
    4. '[j' → logprob: -12.500117301940918
    5. '[index' → logprob: -12.750117301940918
    6. '[I' → logprob: -12.750117301940918
    7. '```' → logprob: -13.000117301940918
    8. '[
' → logprob: -13.250117301940918
    9. 'index' → logprob: -13.500117301940918
    10. ')' → logprob: -13.500117301940918

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2353472113609314
    2. '])' → logprob: -1.6103472709655762
    3. '])
' → logprob: -5.235347270965576
    4. ']
' → logprob: -5.985347270965576
    5. '])]' → logprob: -7.360347270965576
    6. ')]' → logprob: -8.110346794128418
    7. ']*' → logprob: -8.235346794128418
    8. '])*' → logprob: -8.860346794128418
    9. ')' → logprob: -9.110346794128418
    10. '])
' → logprob: -9.110346794128418

Token 73: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1845283508300781
    2. ' *' → logprob: -1.3095283508300781
    3. '*' → logprob: -1.9345283508300781
    4. '           ' → logprob: -2.309528350830078
    5. '            
' → logprob: -3.309528350830078
    6. 'a' → logprob: -4.059528350830078
    7. '0' → logprob: -4.559528350830078
    8. ':' → logprob: -4.559528350830078
    9. '```' → logprob: -4.559528350830078
    10. '       ' → logprob: -4.684528350830078

Token 74: ' right' (ID: 1849)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5357178449630737
    2. ' total' → logprob: -1.1607178449630737
    3. '           ' → logprob: -2.5357179641723633
    4. '
' → logprob: -4.785717964172363
    5. '*' → logprob: -5.785717964172363
    6. '+' → logprob: -6.160717964172363
    7. ' *' → logprob: -6.160717964172363
    8. '            
' → logprob: -6.410717964172363
    9. ' +' → logprob: -7.160717964172363
    10. ' ' → logprob: -7.285717964172363

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7746041417121887
    2. '=' → logprob: -1.149604082107544
    3. ']' → logprob: -2.149604082107544
    4. ')' → logprob: -3.399604082107544
    5. '_' → logprob: -4.274604320526123
    6. '_sum' → logprob: -4.399604320526123
    7. '_idx' → logprob: -4.899604320526123
    8. ':' → logprob: -5.399604320526123
    9. ',' → logprob: -5.524604320526123
    10. '   ' → logprob: -6.024604320526123

Token 76: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -1.0485411882400513
    2. 'order' → logprob: -1.5485411882400513
    3. 'curr' → logprob: -2.5485410690307617
    4. 'N' → logprob: -2.7985410690307617
    5. 'a' → logprob: -2.9235410690307617
    6. ' N' → logprob: -3.0485410690307617
    7. ' curr' → logprob: -3.2985410690307617
    8. ' a' → logprob: -3.2985410690307617
    9. 'i' → logprob: -3.5485410690307617
    10. '0' → logprob: -3.6735410690307617

Token 77: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0893455296754837
    2. '[(' → logprob: -2.4643454551696777
    3. '[-' → logprob: -8.964345932006836
    4. '[' → logprob: -9.214345932006836
    5. '[N' → logprob: -9.339345932006836
    6. '[j' → logprob: -9.714345932006836
    7. '[min' → logprob: -11.589345932006836
    8. '(i' → logprob: -12.214345932006836
    9. '[
' → logprob: -12.339345932006836
    10. '.index' → logprob: -12.839345932006836

Token 78: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017034761607646942
    2. '(i' → logprob: -4.142034530639648
    3. ' i' → logprob: -7.267034530639648
    4. ' (' → logprob: -8.892034530639648
    5. '   ' → logprob: -9.517034530639648
    6. '(' → logprob: -11.267034530639648
    7. '0' → logprob: -11.267034530639648
    8. ')' → logprob: -11.267034530639648
    9. ' ' → logprob: -11.267034530639648
    10. ')i' → logprob: -11.892034530639648

Token 79: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06205316260457039
    2. ' +' → logprob: -2.8120532035827637
    3. '1' → logprob: -10.062052726745605
    4. '+i' → logprob: -11.062052726745605
    5. ' ' → logprob: -11.312052726745605
    6. '-' → logprob: -12.687052726745605
    7. ')' → logprob: -12.687052726745605
    8. ')+' → logprob: -13.312052726745605
    9. '0' → logprob: -13.312052726745605
    10. '2' → logprob: -14.062052726745605

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010080150241265073
    2. ' ' → logprob: -9.250101089477539
    3. ')' → logprob: -13.125101089477539
    4. '+' → logprob: -14.687601089477539
    5. '0' → logprob: -14.937601089477539
    6. '```' → logprob: -15.000101089477539
    7. '   ' → logprob: -15.187601089477539
    8. '2' → logprob: -15.625101089477539
    9. '>' → logprob: -15.625101089477539
    10. '<|end|>' → logprob: -15.812601089477539

Token 81: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07122579962015152
    2. ')%' → logprob: -2.696225881576538
    3. ')]' → logprob: -6.821225643157959
    4. ' )' → logprob: -8.696226119995117
    5. '%' → logprob: -11.071226119995117
    6. ']' → logprob: -12.321226119995117
    7. ']%' → logprob: -12.446226119995117
    8. ')])' → logprob: -12.946226119995117
    9. ' %' → logprob: -13.571226119995117
    10. ')`' → logprob: -14.446226119995117

Token 82: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002613358374219388
    2. ' N' → logprob: -8.250261306762695
    3. ' ' → logprob: -17.875261306762695
    4. '   ' → logprob: -18.125261306762695
    5. 'len' → logprob: -18.250261306762695
    6. '>N' → logprob: -18.750261306762695
    7. 'n' → logprob: -19.000261306762695
    8. '	N' → logprob: -19.125261306762695
    9. '  ' → logprob: -20.375261306762695
    10. '(N' → logprob: -20.375261306762695

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017259987071156502
    2. ')]' → logprob: -4.1422600746154785
    3. ']
' → logprob: -7.2672600746154785
    4. ' ]' → logprob: -8.26725959777832
    5. ']]' → logprob: -9.89225959777832
    6. ']
' → logprob: -10.01725959777832
    7. '])' → logprob: -10.01725959777832
    8. ')' → logprob: -10.26725959777832
    9. ']

' → logprob: -10.64225959777832
    10. '][' → logprob: -11.26725959777832

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03969977796077728
    2. '
' → logprob: -3.2896997928619385
    3. '            
' → logprob: -7.539699554443359
    4. ']' → logprob: -8.28969955444336
    5. '       ' → logprob: -8.78969955444336
    6. ')' → logprob: -8.91469955444336
    7. '<|end|>' → logprob: -8.91469955444336
    8. '  
' → logprob: -9.53969955444336
    9. '
' → logprob: -9.53969955444336
    10. '```' → logprob: -10.16469955444336

Token 85: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06486201286315918
    2. 'total' → logprob: -3.064862012863159
    3. ' total' → logprob: -4.314862251281738
    4. '
' → logprob: -6.689862251281738
    5. '       ' → logprob: -7.564862251281738
    6. ' ' → logprob: -8.314862251281738
    7. '               ' → logprob: -8.814862251281738
    8. '   ' → logprob: -9.064862251281738
    9. 'if' → logprob: -9.189862251281738
    10. '```' → logprob: -9.314862251281738

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328409910202026
    2. '=' → logprob: -1.313284158706665
    3. ' ' → logprob: -10.938283920288086
    4. ')' → logprob: -13.688283920288086
    5. '   ' → logprob: -14.313283920288086
    6. ',' → logprob: -14.313283920288086
    7. ']' → logprob: -14.813283920288086
    8. '    ' → logprob: -15.313283920288086
    9. '  ' → logprob: -15.438283920288086
    10. '_' → logprob: -15.938283920288086

Token 87: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.023444974794983864
    2. 'order' → logprob: -3.773444890975952
    3. '(order' → logprob: -8.648445129394531
    4. '<|end|>' → logprob: -11.398445129394531
    5. ' ' → logprob: -12.273445129394531
    6. '	order' → logprob: -12.648445129394531
    7. '$order' → logprob: -13.648445129394531
    8. ' ordem' → logprob: -14.773445129394531
    9. '(' → logprob: -14.773445129394531
    10. '    ' → logprob: -15.023445129394531

Token 88: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0010723463492468
    2. '[i' → logprob: -7.001072406768799
    3. '(i' → logprob: -9.00107192993164
    4. '[' → logprob: -11.12607192993164
    5. '       ' → logprob: -11.12607192993164
    6. '   ' → logprob: -13.37607192993164
    7. '((' → logprob: -13.75107192993164
    8. '           ' → logprob: -13.87607192993164
    9. '[
' → logprob: -13.87607192993164
    10. '[N' → logprob: -14.50107192993164

Token 89: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.833878508885391e-05
    2. ' i' → logprob: -11.000038146972656
    3. '(i' → logprob: -11.500038146972656
    4. '-' → logprob: -11.875038146972656
    5. ' ' → logprob: -13.125038146972656
    6. '   ' → logprob: -14.000038146972656
    7. '     ' → logprob: -14.500038146972656
    8. ' (' → logprob: -14.750038146972656
    9. 'N' → logprob: -15.750038146972656
    10. '  ' → logprob: -16.125038146972656

Token 90: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002672684146091342
    2. ' -' → logprob: -6.0026726722717285
    3. 'i' → logprob: -9.377673149108887
    4. '1' → logprob: -9.877673149108887
    5. '+' → logprob: -10.377673149108887
    6. ' ' → logprob: -11.627673149108887
    7. '(i' → logprob: -11.877673149108887
    8. '[i' → logprob: -13.002673149108887
    9. '   ' → logprob: -13.252673149108887
    10. '–' → logprob: -13.752673149108887

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005768624832853675
    2. '2' → logprob: -8.000576972961426
    3. ' ' → logprob: -8.500576972961426
    4. ')' → logprob: -11.375576972961426
    5. '```' → logprob: -11.375576972961426
    6. 'N' → logprob: -13.000576972961426
    7. '   ' → logprob: -13.125576972961426
    8. 'i' → logprob: -13.500576972961426
    9. '-' → logprob: -13.563076972961426
    10. '>' → logprob: -14.250576972961426

Token 92: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.004629838280379772
    2. ')' → logprob: -5.879629611968994
    3. ')]' → logprob: -6.379629611968994
    4. ']%' → logprob: -9.254630088806152
    5. ')i' → logprob: -11.504630088806152
    6. '%' → logprob: -11.629630088806152
    7. ' )' → logprob: -12.254630088806152
    8. ')])' → logprob: -12.254630088806152
    9. '   ' → logprob: -14.629630088806152
    10. ']' → logprob: -15.004630088806152

Token 93: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.128163257315464e-07
    2. ' N' → logprob: -15.5
    3. ')' → logprob: -16.875
    4. ']' → logprob: -18.25
    5. 'i' → logprob: -19.75
    6. '   ' → logprob: -20.0
    7. '<N' → logprob: -20.625
    8. '```' → logprob: -20.75
    9. '>N' → logprob: -20.75
    10. '	N' → logprob: -20.875

Token 94: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12464955449104309
    2. ']
' → logprob: -2.8746495246887207
    3. ')]' → logprob: -2.9996495246887207
    4. '])' → logprob: -4.749649524688721
    5. ']
' → logprob: -7.499649524688721
    6. ')]
' → logprob: -7.499649524688721
    7. ')' → logprob: -7.499649524688721
    8. '])
' → logprob: -7.999649524688721
    9. ']

' → logprob: -9.374650001525879
    10. ')])' → logprob: -9.874650001525879

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015980415046215057
    2. '
' → logprob: -4.890980243682861
    3. '<|end|>' → logprob: -5.515980243682861
    4. '            
' → logprob: -6.640980243682861
    5. '       ' → logprob: -7.140980243682861
    6. '<|end|>' → logprob: -7.765980243682861
    7. ')' → logprob: -8.01598072052002
    8. '```' → logprob: -8.26598072052002
    9. '               ' → logprob: -8.39098072052002
    10. '   ' → logprob: -8.64098072052002

Token 96: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44953691959381104
    2. 'total' → logprob: -1.074536919593811
    3. ' total' → logprob: -4.8245368003845215
    4. '
' → logprob: -4.9495368003845215
    5. '       ' → logprob: -6.5745368003845215
    6. '```' → logprob: -7.0745368003845215
    7. 'current' → logprob: -7.3245368003845215
    8. 'if' (adapté à ' if') → logprob: -7.3245368003845215
    9. '            
' → logprob: -7.5745368003845215
    10. 'fr' → logprob: -8.07453727722168

Token 97: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17676159739494324
    2. 'a' → logprob: -1.9267616271972656
    3. ' w' → logprob: -5.551761627197266
    4. ' (' → logprob: -5.801761627197266
    5. ' abs' → logprob: -5.801761627197266
    6. ' curr' → logprob: -6.176761627197266
    7. 'w' → logprob: -7.051761627197266
    8. ' right' → logprob: -7.301761627197266
    9. '(a' → logprob: -7.426761627197266
    10. 'curr' → logprob: -7.551761627197266

Token 98: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.00038944309926591814
    2. '[c' → logprob: -8.625389099121094
    3. '[' → logprob: -8.750389099121094
    4. '[left' → logprob: -11.125389099121094
    5. '[cur' → logprob: -11.375389099121094
    6. '[i' → logprob: -11.750389099121094
    7. '[right' → logprob: -11.750389099121094
    8. '[a' → logprob: -13.125389099121094
    9. '[min' → logprob: -14.000389099121094
    10. '[current' → logprob: -14.250389099121094

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10304442793130875
    2. ']==' → logprob: -2.7280445098876953
    3. '][' → logprob: -4.603044509887695
    4. ']!=' → logprob: -4.728044509887695
    5. '[' → logprob: -5.103044509887695
    6. ']>' → logprob: -5.603044509887695
    7. ']<' → logprob: -6.478044509887695
    8. '==' → logprob: -6.978044509887695
    9. '>' → logprob: -7.853044509887695
    10. '[i' → logprob: -8.603044509887695

Token 100: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0124918222427368
    2. '<' → logprob: -1.1374918222427368
    3. '>' → logprob: -1.6374918222427368
    4. '!=' → logprob: -2.2624917030334473
    5. ' ==' → logprob: -5.387491703033447
    6. ' <' → logprob: -5.637491703033447
    7. '[' → logprob: -5.887491703033447
    8. ' !=' → logprob: -6.137491703033447
    9. ' >' → logprob: -6.512491703033447
    10. '%' → logprob: -7.637491703033447

Token 101: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005721744149923325
    2. ' a' → logprob: -5.755721569061279
    3. '1' → logprob: -7.130721569061279
    4. 'right' → logprob: -7.380721569061279
    5. '0' → logprob: -8.005722045898438
    6. ' ' → logprob: -8.380722045898438
    7. 'order' → logprob: -8.630722045898438
    8. 'left' → logprob: -8.880722045898438
    9. 'w' → logprob: -9.130722045898438
    10. 'curr' → logprob: -10.255722045898438

Token 102: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013338132994249463
    2. '1' → logprob: -8.001334190368652
    3. 'right' → logprob: -8.376334190368652
    4. 'order' → logprob: -8.626334190368652
    5. 'w' → logprob: -8.751334190368652
    6. '0' → logprob: -8.876334190368652
    7. 'left' → logprob: -9.126334190368652
    8. ' a' → logprob: -9.126334190368652
    9. 'curr' → logprob: -10.751334190368652
    10. ' ' → logprob: -11.126334190368652

Token 103: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06651683151721954
    2. ' and' → logprob: -3.316516876220703
    3. ' or' → logprob: -3.941516876220703
    4. ':
' → logprob: -4.941516876220703
    5. 'and' → logprob: -7.191516876220703
    6. ' :' → logprob: -7.691516876220703
    7. '           ' → logprob: -9.316516876220703
    8. ' ' → logprob: -10.066516876220703
    9. ':return' → logprob: -10.191516876220703
    10. 'or' → logprob: -10.691516876220703

Token 104: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002785384887829423
    2. ' continue' → logprob: -7.1277852058410645
    3. '           ' → logprob: -7.2527852058410645
    4. 'continue' → logprob: -7.3777852058410645
    5. '```' → logprob: -8.127785682678223
    6. '<|end|>' → logprob: -9.377785682678223
    7. '                   ' → logprob: -9.877785682678223
    8. '
' → logprob: -10.252785682678223
    9. '   ' → logprob: -10.377785682678223
    10. ' total' → logprob: -10.627785682678223

Token 105: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22897352278232574
    2. 'continue' → logprob: -2.478973627090454
    3. 'total' → logprob: -2.478973627090454
    4. ' total' → logprob: -4.353973388671875
    5. '           ' → logprob: -4.603973388671875
    6. ' continue' → logprob: -4.603973388671875
    7. ' ' → logprob: -6.853973388671875
    8. '                   ' → logprob: -7.603973388671875
    9. '       ' → logprob: -7.728973388671875
    10. '```' → logprob: -7.978973388671875

Token 106: ' right' (ID: 1849)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.020723819732666
    2. 'continue' → logprob: -1.145723819732666
    3. ' continue' → logprob: -1.395723819732666
    4. ' total' → logprob: -3.645723819732666
    5. 'total' → logprob: -4.645723819732666
    6. '           ' → logprob: -4.645723819732666
    7. '#' → logprob: -5.020723819732666
    8. ' #' → logprob: -6.020723819732666
    9. 'Continue' → logprob: -6.145723819732666
    10. ' if' → logprob: -6.145723819732666

Token 107: '-handed' (ID: 77874)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5116969347000122
    2. ' and' → logprob: -1.3866969347000122
    3. '           ' → logprob: -3.1366968154907227
    4. 'and' → logprob: -3.3866968154907227
    5. ':' → logprob: -3.8866968154907227
    6. ')' → logprob: -4.511696815490723
    7. '<|end|>' → logprob: -4.761696815490723
    8. ' or' → logprob: -5.011696815490723
    9. '                   ' → logprob: -5.261696815490723
    10. 'continue' → logprob: -5.636696815490723

Token 108: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09561259299516678
    2. ' and' → logprob: -3.0956125259399414
    3. '           ' → logprob: -3.9706125259399414
    4. '<|end|>' → logprob: -4.845612525939941
    5. ':' → logprob: -5.095612525939941
    6. ':
' → logprob: -5.345612525939941
    7. ' or' → logprob: -5.845612525939941
    8. ',' → logprob: -6.845612525939941
    9. '                   ' → logprob: -7.220612525939941
    10. 'and' → logprob: -7.470612525939941

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08714543282985687
    2. ':' → logprob: -2.9621453285217285
    3. '           ' → logprob: -4.2121453285217285
    4. '<|end|>' → logprob: -4.9621453285217285
    5. ':
' → logprob: -5.5871453285217285
    6. ')' → logprob: -6.5871453285217285
    7. '+' → logprob: -7.4621453285217285
    8. '                   ' → logprob: -7.5871453285217285
    9. ' ' → logprob: -7.5871453285217285
    10. '                               ' → logprob: -7.8371453285217285

Token 110: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2351648062467575
    2. ' total' → logprob: -1.610164761543274
    3. '               ' → logprob: -5.735164642333984
    4. '                   ' → logprob: -6.235164642333984
    5. '           ' → logprob: -6.360164642333984
    6. 'if' (adapté à ' if') → logprob: -6.360164642333984
    7. ' if' → logprob: -7.485164642333984
    8. ' ' → logprob: -8.610164642333984
    9. '
' → logprob: -8.860164642333984
    10. '   ' → logprob: -9.860164642333984

Token 111: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0378239154815674
    2. ' w' → logprob: -1.2878239154815674
    3. 'a' → logprob: -1.4128239154815674
    4. 'w' → logprob: -2.5378239154815674
    5. ' right' → logprob: -3.7878239154815674
    6. 'right' → logprob: -4.787823677062988
    7. ' order' → logprob: -5.287823677062988
    8. ' ' → logprob: -5.662823677062988
    9. ' (' → logprob: -6.162823677062988
    10. 'order' → logprob: -6.287823677062988

Token 112: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.010896199382841587
    2. '[curr' → logprob: -4.7608962059021
    3. '[left' → logprob: -6.5108962059021
    4. '[' → logprob: -7.5108962059021
    5. 'right' → logprob: -8.510895729064941
    6. '[cur' → logprob: -10.885895729064941
    7. 'curr' → logprob: -11.510895729064941
    8. '[current' → logprob: -12.760895729064941
    9. '[a' → logprob: -13.760895729064941
    10. 'a' → logprob: -13.760895729064941

Token 113: ']' (ID: 60)
  Prédit: '[curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.21276167035102844
    2. '==' → logprob: -2.837761640548706
    3. ']==' → logprob: -3.462761640548706
    4. ']' → logprob: -3.587761640548706
    5. '[cur' → logprob: -3.962761640548706
    6. ')' → logprob: -3.962761640548706
    7. ' ==' → logprob: -3.962761640548706
    8. '[' → logprob: -4.587761878967285
    9. ')==' → logprob: -6.587761878967285
    10. '[current' → logprob: -6.712761878967285

Token 114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26921865344047546
    2. ' ==' → logprob: -1.5192186832427979
    3. '!=' → logprob: -5.519218444824219
    4. '<' → logprob: -5.644218444824219
    5. '[' → logprob: -5.769218444824219
    6. '>' → logprob: -5.894218444824219
    7. ' !=' → logprob: -6.894218444824219
    8. ' <' → logprob: -7.269218444824219
    9. ']==' → logprob: -8.019218444824219
    10. ' ' → logprob: -8.019218444824219

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6339596509933472
    2. ' ' → logprob: -1.0089596509933472
    3. '1' → logprob: -2.2589597702026367
    4. 'a' → logprob: -8.633959770202637
    5. ' a' → logprob: -10.008959770202637
    6. 'curr' → logprob: -10.008959770202637
    7. '   ' → logprob: -10.446459770202637
    8. ' -' → logprob: -10.633959770202637
    9. '  ' → logprob: -10.758959770202637
    10. ' curr' → logprob: -10.883959770202637

Token 116: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2021384835243225
    2. '1' → logprob: -1.7021384239196777
    3. ' ' → logprob: -7.577138423919678
    4. 'a' → logprob: -9.077138900756836
    5. '-' → logprob: -10.452138900756836
    6. '2' → logprob: -11.077138900756836
    7. 'right' → logprob: -11.577138900756836
    8. 'curr' → logprob: -11.889638900756836
    9. '   ' → logprob: -12.514638900756836
    10. 'left' → logprob: -12.577138900756836

Token 117: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4115661084651947
    2. ':' → logprob: -1.161566138267517
    3. 'and' → logprob: -3.9115660190582275
    4. ':
' → logprob: -6.286566257476807
    5. ' :' → logprob: -6.786566257476807
    6. ' ' → logprob: -7.661566257476807
    7. ' or' → logprob: -7.786566257476807
    8. '                   ' → logprob: -9.036565780639648
    9. '):' → logprob: -9.286565780639648
    10. '           ' → logprob: -9.536565780639648

Token 118: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3332209289073944
    2. '               ' → logprob: -1.3332209587097168
    3. '                       ' → logprob: -5.208220958709717
    4. ' and' → logprob: -5.833220958709717
    5. 'total' → logprob: -6.083220958709717
    6. ':' → logprob: -6.208220958709717
    7. '           ' → logprob: -6.208220958709717
    8. ':
' → logprob: -6.458220958709717
    9. '                    
' → logprob: -7.583220958709717
    10. '<|end|>' → logprob: -7.583220958709717

Token 119: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.17398464679718018
    2. ' total' → logprob: -2.0489845275878906
    3. '                   ' → logprob: -4.173984527587891
    4. '               ' → logprob: -4.548984527587891
    5. '                       ' → logprob: -6.548984527587891
    6. '           ' → logprob: -7.048984527587891
    7. ' ' → logprob: -7.423984527587891
    8. '
' → logprob: -7.673984527587891
    9. 'continue' → logprob: -7.673984527587891
    10. '   ' → logprob: -8.04898452758789

Token 120: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25359034538269043
    2. ' +=' → logprob: -1.5035903453826904
    3. '+' → logprob: -8.00359058380127
    4. '                   ' → logprob: -8.37859058380127
    5. '-=' → logprob: -8.62859058380127
    6. '               ' → logprob: -8.62859058380127
    7. ' -=' → logprob: -8.87859058380127
    8. '   ' → logprob: -8.87859058380127
    9. '           ' → logprob: -9.25359058380127
    10. ']+=' → logprob: -9.62859058380127

Token 121: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0030029003974050283
    2. ' w' → logprob: -6.128003120422363
    3. 'abs' → logprob: -8.378003120422363
    4. '1' → logprob: -9.128003120422363
    5. '0' → logprob: -9.128003120422363
    6. '   ' → logprob: -9.503003120422363
    7. '2' → logprob: -9.503003120422363
    8. 'min' → logprob: -10.128003120422363
    9. 'max' → logprob: -10.253003120422363
    10. ' ' → logprob: -10.878003120422363

Token 122: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.012996799312531948
    2. '[right' → logprob: -4.637996673583984
    3. '[left' → logprob: -6.637996673583984
    4. '[cur' → logprob: -6.762996673583984
    5. '[' → logprob: -8.012996673583984
    6. 'curr' → logprob: -8.137996673583984
    7. '[i' → logprob: -10.262996673583984
    8. '[c' → logprob: -10.387996673583984
    9. 'right' → logprob: -10.762996673583984
    10. ' [' → logprob: -11.012996673583984

Token 123: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11406684666872025
    2. '[' → logprob: -2.4890668392181396
    3. ')' → logprob: -4.614067077636719
    4. '+' → logprob: -6.114067077636719
    5. ' ]' → logprob: -6.364067077636719
    6. '[cur' → logprob: -6.489067077636719
    7. '[curr' → logprob: -6.614067077636719
    8. '//' → logprob: -6.614067077636719
    9. '<|end|>' → logprob: -6.739067077636719
    10. '*' → logprob: -7.239067077636719

Token 124: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5538100600242615
    2. '       ' → logprob: -1.1788101196289062
    3. '           ' → logprob: -2.6788101196289062
    4. ')' → logprob: -4.303810119628906
    5. '<|end|>' → logprob: -4.303810119628906
    6. 'else' → logprob: -4.928810119628906
    7. 'elif' → logprob: -5.303810119628906
    8. ' else' → logprob: -5.678810119628906
    9. '   ' → logprob: -6.303810119628906
    10. ' elif' → logprob: -7.428810119628906

Token 125: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11146563291549683
    2. 'if' → logprob: -3.4864656925201416
    3. 'elif' → logprob: -3.7364656925201416
    4. ' if' → logprob: -3.9864656925201416
    5. 'else' (adapté à ' else') → logprob: -4.1114654541015625
    6. ' else' → logprob: -4.9864654541015625
    7. '   ' → logprob: -5.9864654541015625
    8. ' elif' → logprob: -5.9864654541015625
    9. '           ' → logprob: -6.1114654541015625
    10. '               ' → logprob: -7.1114654541015625

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6454539895057678
    2. ' if' → logprob: -1.770453929901123
    3. '               ' → logprob: -1.895453929901123
    4. '       ' → logprob: -2.020453929901123
    5. 'if' → logprob: -4.395453929901123
    6. ':
' → logprob: -5.395453929901123
    7. '           ' → logprob: -5.895453929901123
    8. '   ' → logprob: -7.145453929901123
    9. '<|end|>' → logprob: -8.020454406738281
    10. ' ' → logprob: -8.270454406738281

Token 127: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42815101146698
    2. 'if' → logprob: -1.17815101146698
    3. '               ' → logprob: -3.6781511306762695
    4. '           ' → logprob: -4.5531511306762695
    5. '       ' → logprob: -5.4281511306762695
    6. '```' → logprob: -9.42815113067627
    7. '   ' → logprob: -9.55315113067627
    8. ' ' → logprob: -9.80315113067627
    9. '	if' → logprob: -11.55315113067627
    10. 'If' → logprob: -11.67815113067627

Token 128: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008619185537099838
    2. ' if' → logprob: -5.00861930847168
    3. '               ' → logprob: -6.38361930847168
    4. '           ' → logprob: -8.75861930847168
    5. '       ' → logprob: -10.25861930847168
    6. '   ' → logprob: -11.63361930847168
    7. '```' → logprob: -12.00861930847168
    8. ' ' → logprob: -12.75861930847168
    9. '#' → logprob: -14.38361930847168
    10. 'If' → logprob: -14.63361930847168

Token 129: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.7021093368530273
    2. 'left' → logprob: -1.5771093368530273
    3. 'a' → logprob: -2.8271093368530273
    4. '0' → logprob: -2.9521093368530273
    5. ' right' → logprob: -2.9521093368530273
    6. ' a' → logprob: -3.2021093368530273
    7. 'right' → logprob: -3.5771093368530273
    8. ' if' → logprob: -3.7021093368530273
    9. ' ' → logprob: -3.9521093368530273
    10. 'if' → logprob: -4.202109336853027

Token 130: '-handed' (ID: 77874)
  Prédit: '-handed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-handed' → logprob: -0.03195243328809738
    2. '_hand' → logprob: -4.406952381134033
    3. '   ' → logprob: -4.906952381134033
    4. ')' → logprob: -5.531952381134033
    5. 'hand' → logprob: -6.031952381134033
    6. '_h' → logprob: -6.656952381134033
    7. '_' → logprob: -7.031952381134033
    8. ' ' → logprob: -7.031952381134033
    9. ' ==' → logprob: -7.531952381134033
    10. '           ' → logprob: -7.906952381134033

Token 131: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05169885233044624
    2. 'if' → logprob: -3.551698923110962
    3. '           ' → logprob: -4.176698684692383
    4. ' if' → logprob: -5.176698684692383
    5. '       ' → logprob: -7.926698684692383
    6. '<|end|>' → logprob: -9.176698684692383
    7. '
' → logprob: -9.801698684692383
    8. '```' → logprob: -10.301698684692383
    9. 'If' → logprob: -10.426698684692383
    10. '   ' → logprob: -10.551698684692383

Token 132: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1990276426076889
    2. '           ' → logprob: -2.3240275382995605
    3. 'if' → logprob: -2.5740275382995605
    4. ' if' → logprob: -5.0740275382995605
    5. '       ' → logprob: -9.824028015136719
    6. '```' → logprob: -10.074028015136719
    7. '                   ' → logprob: -12.699028015136719
    8. '   ' → logprob: -13.074028015136719
    9. '             ' → logprob: -13.324028015136719
    10. 'If' → logprob: -13.699028015136719

Token 133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009201920591294765
    2. ' if' → logprob: -4.759202003479004
    3. '               ' → logprob: -7.634202003479004
    4. '                   ' → logprob: -9.884202003479004
    5. '           ' → logprob: -10.009202003479004
    6. '       ' → logprob: -13.134202003479004
    7. '   ' → logprob: -13.259202003479004
    8. ' ' → logprob: -13.509202003479004
    9. '```' → logprob: -14.384202003479004
    10. '	if' → logprob: -14.759202003479004

Token 134: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4741608500480652
    2. 'a' → logprob: -0.9741608500480652
    3. ' ' → logprob: -10.474161148071289
    4. '   ' → logprob: -11.099161148071289
    5. '    ' → logprob: -12.349161148071289
    6. ' ' → logprob: -12.411661148071289
    7. '(a' → logprob: -12.411661148071289
    8. '                   ' → logprob: -12.474161148071289
    9. '	a' → logprob: -12.661661148071289
    10. '```' → logprob: -12.786661148071289

Token 135: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.00043448375072330236
    2. '[right' → logprob: -8.375434875488281
    3. '[' → logprob: -8.625434875488281
    4. 'left' → logprob: -11.625434875488281
    5. '[(' → logprob: -11.750434875488281
    6. '[curr' → logprob: -13.125434875488281
    7. '```' → logprob: -13.125434875488281
    8. '(left' → logprob: -14.625434875488281
    9. ' [' → logprob: -14.625434875488281
    10. '   ' → logprob: -14.875434875488281

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0071625192649662495
    2. ']==' → logprob: -5.007162570953369
    3. ')' → logprob: -9.257162094116211
    4. '[curr' → logprob: -9.507162094116211
    5. '[left' → logprob: -9.632162094116211
    6. '[right' → logprob: -9.757162094116211
    7. '==' → logprob: -10.007162094116211
    8. '[' → logprob: -10.132162094116211
    9. ' ]' → logprob: -10.632162094116211
    10. '[cur' → logprob: -10.882162094116211

Token 137: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06719297170639038
    2. ' ==' → logprob: -2.817193031311035
    3. ']==' → logprob: -5.567193031311035
    4. ']' → logprob: -7.317193031311035
    5. '[' → logprob: -7.442193031311035
    6. '```' → logprob: -10.567193031311035
    7. ')' → logprob: -10.817193031311035
    8. ')==' → logprob: -10.817193031311035
    9. '0' → logprob: -10.942193031311035
    10. '[]' → logprob: -11.192193031311035

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11435821652412415
    2. ' ' → logprob: -2.2393581867218018
    3. '1' → logprob: -6.489358425140381
    4. '   ' → logprob: -11.864357948303223
    5. '2' → logprob: -13.176857948303223
    6. '  ' → logprob: -13.676857948303223
    7. '    ' → logprob: -14.114357948303223
    8. '<|end|>' → logprob: -14.676857948303223
    9. '=' → logprob: -14.989357948303223
    10. ' ' → logprob: -15.051857948303223

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038908147253096104
    2. '1' → logprob: -5.7538909912109375
    3. ' ' → logprob: -7.2538909912109375
    4. '   ' → logprob: -13.066390991210938
    5. '2' → logprob: -14.441390991210938
    6. '  ' → logprob: -15.253890991210938
    7. '۰' → logprob: -15.253890991210938
    8. '=' → logprob: -15.503890991210938
    9. '    ' → logprob: -15.691390991210938
    10. '...' → logprob: -16.503890991210938

Token 140: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.40946251153945923
    2. ':' → logprob: -1.4094624519348145
    3. '                   ' → logprob: -2.4094624519348145
    4. '               ' → logprob: -6.7844624519348145
    5. '):
' → logprob: -8.034462928771973
    6. '           ' → logprob: -9.034462928771973
    7. '<|end|>' → logprob: -9.159462928771973
    8. ',' → logprob: -10.159462928771973
    9. ' :
' → logprob: -10.534462928771973
    10. ':

' → logprob: -10.784462928771973

Token 141: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10627273470163345
    2. 'total' → logprob: -2.6062726974487305
    3. '               ' → logprob: -3.8562726974487305
    4. ' total' → logprob: -5.2312726974487305
    5. '                       ' → logprob: -7.9812726974487305
    6. '           ' → logprob: -9.73127269744873
    7. '   ' → logprob: -10.23127269744873
    8. '```' → logprob: -10.48127269744873
    9. '
' → logprob: -10.98127269744873
    10. '       ' → logprob: -11.10627269744873

Token 142: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.06868256628513336
    2. ' total' → logprob: -2.8186826705932617
    3. '                   ' → logprob: -5.693682670593262
    4. '               ' → logprob: -6.068682670593262
    5. '           ' → logprob: -7.193682670593262
    6. '       ' → logprob: -8.568682670593262
    7. '   ' → logprob: -10.193682670593262
    8. '                       ' → logprob: -11.068682670593262
    9. '	total' → logprob: -11.693682670593262
    10. ' ' → logprob: -12.943682670593262

Token 143: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1427203118801117
    2. '+=' → logprob: -2.0177202224731445
    3. ' -=' → logprob: -11.392720222473145
    4. '+' → logprob: -11.517720222473145
    5. ' ' → logprob: -12.267720222473145
    6. ' ' → logprob: -12.892720222473145
    7. ']+=' → logprob: -13.267720222473145
    8. '=' → logprob: -13.392720222473145
    9. '          ' → logprob: -13.392720222473145
    10. '            ' → logprob: -13.392720222473145

Token 144: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.47407880425453186
    2. 'w' → logprob: -0.9740787744522095
    3. ' ' → logprob: -14.349079132080078
    4. ' ' → logprob: -14.599079132080078
    5. '	w' → logprob: -15.099079132080078
    6. '                   ' → logprob: -16.724079132080078
    7. '+w' → logprob: -16.724079132080078
    8. '_w' → logprob: -16.849079132080078
    9. '```' → logprob: -17.099079132080078
    10. '
' → logprob: -17.349079132080078

Token 145: '[curr' (ID: 124310)
  Prédit: '[curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[curr' → logprob: -0.00044592362246476114
    2. 'curr' → logprob: -8.625446319580078
    3. '[left' → logprob: -8.750446319580078
    4. '[cur' → logprob: -9.250446319580078
    5. '[current' → logprob: -12.625446319580078
    6. '[' → logprob: -12.625446319580078
    7. 'left' → logprob: -13.500446319580078
    8. ' curr' → logprob: -13.500446319580078
    9. '[c' → logprob: -14.500446319580078
    10. ' [' → logprob: -14.750446319580078

Token 146: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007694525644183159
    2. ']' → logprob: -5.257694721221924
    3. ')
' → logprob: -6.132694721221924
    4. '])' → logprob: -9.257694244384766
    5. ')]' → logprob: -9.382694244384766
    6. ' )' → logprob: -10.882694244384766
    7. '       ' → logprob: -11.132694244384766
    8. ']
' → logprob: -11.257694244384766
    9. '```' → logprob: -11.382694244384766
    10. '）' → logprob: -11.757694244384766

Token 147: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01950147934257984
    2. '   ' → logprob: -4.519501686096191
    3. ')' → logprob: -6.019501686096191
    4. ' if' → logprob: -6.269501686096191
    5. '
' → logprob: -6.894501686096191
    6. '       ' → logprob: -7.019501686096191
    7. '    
' → logprob: -7.769501686096191
    8. '\n' → logprob: -8.019501686096191
    9. ' 
' → logprob: -8.144501686096191
    10. ')
' → logprob: -8.394501686096191

Token 148: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.584128737449646
    2. ' if' → logprob: -0.959128737449646
    3. 'if' (adapté à ' if') → logprob: -2.9591288566589355
    4. '       ' → logprob: -5.4591288566589355
    5. ' min' → logprob: -6.3341288566589355
    6. 'min' → logprob: -6.8341288566589355
    7. ')' → logprob: -9.709128379821777
    8. '```' → logprob: -10.334128379821777
    9. ' ' → logprob: -10.834128379821777
    10. '    ' → logprob: -10.959128379821777

Token 149: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0934920683503151
    2. ' a' → logprob: -2.968492031097412
    3. 'total' → logprob: -3.843492031097412
    4. 'a' → logprob: -5.343492031097412
    5. ' min' → logprob: -5.593492031097412
    6. ' w' → logprob: -6.218492031097412
    7. ' ' → logprob: -6.343492031097412
    8. ' not' → logprob: -6.968492031097412
    9. ' i' → logprob: -7.093492031097412
    10. ' curr' → logprob: -7.218492031097412

Token 150: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.41591939330101013
    2. ' >' → logprob: -1.4159194231033325
    3. '>' → logprob: -2.790919303894043
    4. '>=' → logprob: -3.415919303894043
    5. ' <' → logprob: -5.915919303894043
    6. '<' → logprob: -8.040919303894043
    7. ' ' → logprob: -8.540919303894043
    8. ')' → logprob: -9.790919303894043
    9. ' ' → logprob: -11.165919303894043
    10. ')>=' → logprob: -11.290919303894043

Token 151: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031777136027812958
    2. ' min' → logprob: -5.753177642822266
    3. '	min' → logprob: -16.753177642822266
    4. '   ' → logprob: -17.003177642822266
    5. '_min' → logprob: -18.878177642822266
    6. '```' → logprob: -19.253177642822266
    7. 'minimum' → logprob: -19.378177642822266
    8. ' ' → logprob: -19.753177642822266
    9. 'max' → logprob: -20.503177642822266
    10. '
' → logprob: -20.503177642822266

Token 152: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -14.00000286102295
    3. '_frag' → logprob: -14.00000286102295
    4. '_fl' → logprob: -15.25000286102295
    5. '```' → logprob: -15.50000286102295
    6. '_f' → logprob: -15.50000286102295
    7. 'fr' → logprob: -15.75000286102295
    8. '_fragment' → logprob: -16.250003814697266
    9. '(fr' → logprob: -16.250003814697266
    10. '_Fr' → logprob: -16.250003814697266

Token 153: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -6.432518421206623e-05
    2. 'astr' → logprob: -10.5000638961792
    3. 'ust' → logprob: -10.7500638961792
    4. 'str' → logprob: -11.5000638961792
    5. 'istration' → logprob: -13.3750638961792
    6. 'us' → logprob: -14.2500638961792
    7. 'ustra' → logprob: -14.6250638961792
    8. 'tration' → logprob: -15.0000638961792
    9. 'estr' → logprob: -15.1250638961792
    10. ' frustration' → logprob: -15.2500638961792

Token 154: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.0280383548888494e-06
    2. 'ration' → logprob: -14.375000953674316
    3. 'tion' → logprob: -16.250001907348633
    4. 't' → logprob: -16.625001907348633
    5. 'tration' → logprob: -16.875001907348633
    6. 'lation' → logprob: -17.250001907348633
    7. 'a' → logprob: -17.375001907348633
    8. 'ATION' → logprob: -18.250001907348633
    9. 'asion' → logprob: -18.250001907348633
    10. 'station' → logprob: -18.500001907348633

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07911692559719086
    2. ':
' → logprob: -2.5791168212890625
    3. '               ' → logprob: -9.829116821289062
    4. 'break' → logprob: -10.204116821289062
    5. ' :' → logprob: -10.329116821289062
    6. '       ' → logprob: -10.454116821289062
    7. '   ' → logprob: -11.079116821289062
    8. ' break' → logprob: -11.204116821289062
    9. '           ' → logprob: -11.329116821289062
    10. '):
' → logprob: -12.079116821289062

Token 156: '               ' (ID: 506)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.32290664315223694
    2. '               ' → logprob: -1.8229066133499146
    3. '           ' → logprob: -2.322906732559204
    4. ' break' → logprob: -4.197906494140625
    5. '       ' → logprob: -6.822906494140625
    6. '	break' → logprob: -9.072906494140625
    7. '```' → logprob: -9.322906494140625
    8. '   ' → logprob: -10.197906494140625
    9. '_break' → logprob: -10.197906494140625
    10. '                   ' → logprob: -11.697906494140625

Token 157: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0624372698366642
    2. ' break' → logprob: -2.8124372959136963
    3. '               ' → logprob: -7.812437057495117
    4. '                   ' → logprob: -10.312437057495117
    5. '           ' → logprob: -11.187437057495117
    6. '	break' → logprob: -11.312437057495117
    7. '       ' → logprob: -12.812437057495117
    8. '   ' → logprob: -13.187437057495117
    9. '_break' → logprob: -14.312437057495117
    10. '```' → logprob: -15.437437057495117

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3979508876800537
    2. '
' → logprob: -1.1479508876800537
    3. '   ' → logprob: -5.022951126098633
    4. '        
' → logprob: -6.147951126098633
    5. '<|end|>' → logprob: -6.772951126098633
    6. '    
' → logprob: -7.647951126098633
    7. '```' → logprob: -8.897951126098633
    8. '
' → logprob: -9.147951126098633
    9. '    ' → logprob: -9.647951126098633
    10. 'else' → logprob: -10.147951126098633

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45127832889556885
    2. '
' → logprob: -1.2012783288955688
    3. '   ' → logprob: -2.9512782096862793
    4. ')' → logprob: -6.451278209686279
    5. '<|end|>' → logprob: -6.451278209686279
    6. '        
' → logprob: -6.701278209686279
    7. 'else' → logprob: -6.826278209686279
    8. '```' → logprob: -6.951278209686279
    9. ' 
' → logprob: -7.326278209686279
    10. ' else' → logprob: -7.451278209686279

Token 160: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05594819784164429
    2. ' if' → logprob: -3.555948257446289
    3. '       ' → logprob: -4.430948257446289
    4. 'if' → logprob: -5.180948257446289
    5. 'else' → logprob: -5.680948257446289
    6. '
' → logprob: -5.930948257446289
    7. ' else' → logprob: -7.180948257446289
    8. '    
' → logprob: -7.805948257446289
    9. '  ' → logprob: -8.180948257446289
    10. '    ' → logprob: -8.305948257446289

Token 161: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -4.394135612528771e-05
    2. '_f' → logprob: -10.625043869018555
    3. '_frag' → logprob: -11.625043869018555
    4. '_' → logprob: -12.125043869018555
    5. '_fragment' → logprob: -13.250043869018555
    6. 'fr' → logprob: -13.750043869018555
    7. ' frustration' → logprob: -15.375043869018555
    8. '_for' → logprob: -15.500043869018555
    9. '_Fr' → logprob: -15.625043869018555
    10. '_gr' → logprob: -15.875043869018555

Token 162: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.0032705222256481647
    2. 'ust' → logprob: -6.253270626068115
    3. 'str' → logprob: -7.003270626068115
    4. 'astr' → logprob: -8.003270149230957
    5. 'istration' → logprob: -10.503270149230957
    6. 'tration' → logprob: -11.003270149230957
    7. 'u' → logprob: -11.753270149230957
    8. 'us' → logprob: -12.128270149230957
    9. 'ustra' → logprob: -12.503270149230957
    10. 'estr' → logprob: -12.628270149230957

Token 163: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0007372042746283114
    2. 'str' → logprob: -8.125737190246582
    3. 'st' → logprob: -8.500737190246582
    4. 'tration' → logprob: -10.125737190246582
    5. 'action' → logprob: -10.125737190246582
    6. 'station' → logprob: -10.500737190246582
    7. 'tion' → logprob: -10.625737190246582
    8. 't' → logprob: -11.000737190246582
    9. 'ration' → logprob: -11.500737190246582
    10. '#' → logprob: -11.750737190246582

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890047132968903
    2. '=' → logprob: -2.5789005756378174
    3. '=min' → logprob: -11.578900337219238
    4. '＝' → logprob: -14.703900337219238
    5. ' ' → logprob: -15.453900337219238
    6. ')' → logprob: -15.453900337219238
    7. 'min' → logprob: -16.453901290893555
    8. '   ' → logprob: -16.453901290893555
    9. '=max' → logprob: -16.828901290893555
    10. ',' → logprob: -16.828901290893555

Token 165: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3894914388656616
    2. 'min' → logprob: -1.1394914388656616
    3. ' total' → logprob: -6.639491558074951
    4. 'total' → logprob: -6.639491558074951
    5. '	min' → logprob: -14.389491081237793
    6. '(min' → logprob: -15.389491081237793
    7. '   ' → logprob: -15.639491081237793
    8. ' ' → logprob: -16.13949203491211
    9. ',min' → logprob: -16.63949203491211
    10. ' minimum' → logprob: -16.76449203491211

Token 166: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.12388952821493149
    2. '(' → logprob: -2.623889446258545
    3. '(total' → logprob: -3.123889446258545
    4. '(max' → logprob: -11.248889923095703
    5. ' (' → logprob: -13.748889923095703
    6. '(
' → logprob: -14.498889923095703
    7. 'total' → logprob: -14.998889923095703
    8. '(m' → logprob: -15.373889923095703
    9. 'min' → logprob: -15.498889923095703
    10. '(sum' → logprob: -15.748889923095703

Token 167: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -0.00031270162435248494
    2. 'fr' → logprob: -8.250312805175781
    3. ' frustration' → logprob: -11.000312805175781
    4. 'min' → logprob: -12.000312805175781
    5. '_frag' → logprob: -12.375312805175781
    6. '	fr' → logprob: -12.625312805175781
    7. 'total' → logprob: -12.875312805175781
    8. 'Fr' → logprob: -13.125312805175781
    9. '(min' → logprob: -13.250312805175781
    10. '_Fr' → logprob: -13.500312805175781

Token 168: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.023260269314050674
    2. 'str' → logprob: -4.148260116577148
    3. 'ust' → logprob: -5.398260116577148
    4. 'istration' → logprob: -6.898260116577148
    5. 'astr' → logprob: -7.023260116577148
    6. 'tration' → logprob: -7.648260116577148
    7. '_str' → logprob: -10.523260116577148
    8. 'estr' → logprob: -10.648260116577148
    9. 'ation' → logprob: -10.773260116577148
    10. '**' → logprob: -11.148260116577148

Token 169: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.8312570318812504e-05
    2. 'tion' → logprob: -11.625018119812012
    3. 'ration' → logprob: -12.625018119812012
    4. 't' → logprob: -14.000018119812012
    5. 'tration' → logprob: -14.000018119812012
    6. 'ion' → logprob: -14.250018119812012
    7. 'str' → logprob: -14.500018119812012
    8. 's' → logprob: -15.000018119812012
    9. 'st' → logprob: -15.000018119812012
    10. 'lation' → logprob: -15.000018119812012

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031869823578745127
    2. ',total' → logprob: -5.75318717956543
    3. 'total' → logprob: -12.25318717956543
    4. ' ,' → logprob: -12.37818717956543
    5. '(total' → logprob: -15.25318717956543
    6. ',min' → logprob: -16.87818717956543
    7. ',
' → logprob: -17.12818717956543
    8. ' total' → logprob: -17.37818717956543
    9. ')' → logprob: -17.62818717956543
    10. '   ' → logprob: -18.87818717956543

Token 171: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0485873706638813
    2. ' total' → logprob: -3.0485873222351074
    3. '   ' → logprob: -18.048587799072266
    4. '	total' → logprob: -18.173587799072266
    5. '(total' → logprob: -19.173587799072266
    6. '           ' → logprob: -19.423587799072266
    7. '       ' → logprob: -19.548587799072266
    8. 'tot' → logprob: -20.173587799072266
    9. '$total' → logprob: -20.173587799072266
    10. ',total' → logprob: -20.923587799072266

Token 172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012313035549595952
    2. ')
' → logprob: -6.7512311935424805
    3. '   ' → logprob: -10.12623119354248
    4. ')

' → logprob: -11.00123119354248
    5. ')return' → logprob: -13.50123119354248
    6. '
' → logprob: -13.62623119354248
    7. ' )' → logprob: -13.62623119354248
    8. ')
' → logprob: -15.87623119354248
    9. '))' → logprob: -16.376232147216797
    10. '```' → logprob: -16.501232147216797

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3336505591869354
    2. '
' → logprob: -1.4586505889892578
    3. 'print' → logprob: -3.083650588989258
    4. '    
' → logprob: -5.458650588989258
    5. '```' → logprob: -7.208650588989258
    6. '

' → logprob: -9.708650588989258
    7. '<|end|>' → logprob: -9.708650588989258
    8. ')' → logprob: -9.958650588989258
    9. '
' → logprob: -10.208650588989258
    10. '  
' → logprob: -10.208650588989258

Token 174: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20185494422912598
    2. '   ' → logprob: -1.701854944229126
    3. '    
' → logprob: -8.701854705810547
    4. '```' → logprob: -9.076854705810547
    5. '
' → logprob: -9.451854705810547
    6. ' print' → logprob: -9.701854705810547
    7. 'return' → logprob: -11.326854705810547
    8. '	print' → logprob: -13.076854705810547
    9. '  
' → logprob: -13.201854705810547
    10. ')' → logprob: -13.201854705810547

Token 175: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.014176084659993649
    2. '(' → logprob: -4.264175891876221
    3. '()' → logprob: -11.514176368713379
    4. '(max' → logprob: -13.889176368713379
    5. '('' → logprob: -14.764176368713379
    6. 'min' → logprob: -14.764176368713379
    7. '(
' → logprob: -15.514176368713379
    8. '(f' → logprob: -15.889176368713379
    9. '("("' → logprob: -15.889176368713379
    10. '(m' → logprob: -16.139175415039062

Token 176: '_fr' (ID: 20643)
  Prédit: '_fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fr' → logprob: -4.704065213445574e-05
    2. 'fr' → logprob: -10.375046730041504
    3. '(fr' → logprob: -11.875046730041504
    4. '(_' → logprob: -12.625046730041504
    5. '(min' → logprob: -13.250046730041504
    6. ' frustration' → logprob: -13.750046730041504
    7. '_frag' → logprob: -14.125046730041504
    8. '_fl' → logprob: -15.250046730041504
    9. '_FR' → logprob: -15.375046730041504
    10. '_f' → logprob: -15.375046730041504

Token 177: 'ustr' (ID: 3073)
  Prédit: 'ustr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustr' → logprob: -0.0033785225823521614
    2. 'str' → logprob: -5.753378391265869
    3. 'ust' → logprob: -8.878378868103027
    4. 'astr' → logprob: -10.878378868103027
    5. 'istration' → logprob: -10.878378868103027
    6. 'estr' → logprob: -11.253378868103027
    7. 'usr' → logprob: -13.253378868103027
    8. 'u' → logprob: -13.503378868103027
    9. '_str' → logprob: -13.628378868103027
    10. 'tration' → logprob: -14.128378868103027

Token 178: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00030388421146199107
    2. 'str' → logprob: -8.250304222106934
    3. 'tration' → logprob: -11.000304222106934
    4. 'tion' → logprob: -11.500304222106934
    5. 'ration' → logprob: -12.375304222106934
    6. 'st' → logprob: -13.125304222106934
    7. 'lation' → logprob: -13.500304222106934
    8. 'nation' → logprob: -13.625304222106934
    9. 'ustr' → logprob: -13.875304222106934
    10. 'a' → logprob: -14.125304222106934

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.750004768371582
    3. '())' → logprob: -14.375004768371582
    4. '()' → logprob: -14.625004768371582
    5. ' )' → logprob: -14.750004768371582
    6. ')

' → logprob: -17.000003814697266
    7. '')' → logprob: -17.375003814697266
    8. '```' → logprob: -17.875003814697266
    9. ')`' → logprob: -18.000003814697266
    10. '))' → logprob: -18.125003814697266

Token 180: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7098069787025452
    2. '<|end|>' → logprob: -1.0848069190979004
    3. '
' → logprob: -2.2098069190979004
    4. '\n' → logprob: -3.8348069190979004
    5. 'main' → logprob: -4.2098069190979
    6. '```' → logprob: -5.0848069190979
    7. '#' → logprob: -5.2098069190979
    8. ')' → logprob: -5.8348069190979
    9. '(main' → logprob: -5.9598069190979
    10. '<|end|>' → logprob: -6.7098069190979

Token 181: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.313302218914032
    2. ' __' → logprob: -1.3133022785186768
    3. '_' → logprob: -10.938302040100098
    4. '_name' → logprob: -11.688302040100098
    5. '___' → logprob: -11.813302040100098
    6. ' ' → logprob: -12.688302040100098
    7. 'name' → logprob: -12.813302040100098
    8. ' ' → logprob: -14.438302040100098
    9. '/__' → logprob: -15.438302040100098
    10. '____' → logprob: -16.563302993774414

Token 182: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05363322049379349
    2. ' __' → logprob: -3.053633213043213
    3. ' ==' → logprob: -5.678633213043213
    4. '.__' → logprob: -7.428633213043213
    5. '==' → logprob: -8.553633689880371
    6. '.name' → logprob: -8.678633689880371
    7. '.' → logprob: -8.678633689880371
    8. '_' → logprob: -8.928633689880371
    9. 'name' → logprob: -9.428633689880371
    10. '__.' → logprob: -9.553633689880371

Token 183: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.438573680294212e-06
    2. '==' → logprob: -12.375005722045898
    3. '__.__' → logprob: -13.875005722045898
    4. '__.' → logprob: -16.7500057220459
    5. ' ==' → logprob: -17.0000057220459
    6. 'name' → logprob: -17.2500057220459
    7. '_' → logprob: -17.3750057220459
    8. '____' → logprob: -17.6250057220459
    9. '___' → logprob: -17.8750057220459
    10. '__
' → logprob: -18.7500057220459

Token 184: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8342235684394836
    2. '==' → logprob: -0.9592235684394836
    3. ' ==' → logprob: -1.7092235088348389
    4. '=="' → logprob: -6.584223747253418
    5. '=='' → logprob: -9.334223747253418
    6. '_' → logprob: -9.584223747253418
    7. '=' → logprob: -10.709223747253418
    8. '___' → logprob: -12.459223747253418
    9. '==
' → logprob: -12.709223747253418
    10. '()==' → logprob: -12.834223747253418

Token 185: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02980499155819416
    2. ''' → logprob: -3.5298049449920654
    3. '__' → logprob: -9.904805183410645
    4. ' "__' → logprob: -12.404805183410645
    5. '"name' → logprob: -15.904805183410645
    6. '"user' → logprob: -16.154804229736328
    7. ' '__' → logprob: -16.654804229736328
    8. 'main' → logprob: -17.904804229736328
    9. '("__' → logprob: -18.029804229736328
    10. '"class' → logprob: -18.279804229736328

Token 186: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00023917861108202487
    2. '__' → logprob: -8.500239372253418
    3. 'name' → logprob: -10.250239372253418
    4. '_main' → logprob: -15.875239372253418
    5. '"' → logprob: -16.5002384185791
    6. 'm' → logprob: -17.5002384185791
    7. ' main' → logprob: -17.7502384185791
    8. '__':
' → logprob: -18.3752384185791
    9. ''' → logprob: -18.5002384185791
    10. '-main' → logprob: -18.7502384185791

Token 187: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.018198054283857346
    2. '__' → logprob: -4.018198013305664
    3. '__":
' → logprob: -10.393198013305664
    4. '__:' → logprob: -12.018198013305664
    5. '':' → logprob: -12.393198013305664
    6. '_' → logprob: -12.393198013305664
    7. ':' → logprob: -13.893198013305664
    8. '__.' → logprob: -14.518198013305664
    9. '('__' → logprob: -14.643198013305664
    10. '()' → logprob: -14.893198013305664

Token 188: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10624562203884125
    2. '   ' → logprob: -3.106245517730713
    3. ' main' → logprob: -3.356245517730713
    4. '	main' → logprob: -3.856245517730713
    5. ' ' → logprob: -12.231245994567871
    6. '_main' → logprob: -12.231245994567871
    7. '  ' → logprob: -12.856245994567871
    8. '(main' → logprob: -14.606245994567871
    9. '<|end|>' → logprob: -15.106245994567871
    10. '   ' → logprob: -15.356245994567871

Token 189: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -19.625
    4. '   ' → logprob: -23.0
    5. '_main' → logprob: -23.5
    6. '.main' → logprob: -25.0
    7. 'Main' → logprob: -25.25
    8. 'mainwindow' → logprob: -26.375
    9. '(main' → logprob: -26.5
    10. '  ' → logprob: -27.375

Token 190: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 47.34%
Précision adaptée (1ère position): 51.60%
Précision (top 10): 85.11%
================================================================================
