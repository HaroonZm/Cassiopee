================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PrimeStrategy:
    def is_prime(self, num: int) -> bool:
        raise NotImplementedError

    def next_prime(self, start: int) -> int:
        raise NotImplementedError

    def prev_prime(self, start: int) -> int:
        raise NotImplementedError


class SievePrimeStrategy(PrimeStrategy):
    def __init__(self, limit: int):
        self.limit = limit
        self.sieve = self._build_sieve(limit)

    def _build_sieve(self, limit: int) -> list[bool]:
        sieve = [True] * (limit + 1)
        sieve[0], sieve[1] = False, False
        for i in range(2, int(limit ** 0.5) + 1):
            if sieve[i]:
                for j in range(i * i, limit + 1, i):
                    sieve[j] = False
        return sieve

    def is_prime(self, num: int) -> bool:
        if num <= self.limit:
            return self.sieve[num]
        # For out-of-sieve queries, fallback to slower method
        if num < 2:
            return False
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                return False
        return True

    def next_prime(self, start: int) -> int:
        candidate = start + 1
        while True:
            if self.is_prime(candidate):
                return candidate
            candidate += 1

    def prev_prime(self, start: int) -> int:
        candidate = start - 1
        while candidate > 1:
            if self.is_prime(candidate):
                return candidate
            candidate -= 1
        raise ValueError("No prime smaller than given number")


class PrimeContext:
    def __init__(self, strategy: PrimeStrategy):
        self.strategy = strategy

    def find_nearest_primes(self, n: int) -> tuple[int, int]:
        prev_p = self.strategy.prev_prime(n)
        next_p = self.strategy.next_prime(n)
        return prev_p, next_p


class InputHandler:
    def __init__(self, context: PrimeContext):
        self.context = context

    def process_lines(self, lines: list[str]) -> list[str]:
        results = []
        for line in lines:
            line = line.strip()
            if not line:
                continue
            n = int(line)
            prev_p, next_p = self.context.find_nearest_primes(n)
            results.append(f"{prev_p} {next_p}")
        return results


def main():
    import sys
    MAX_LIMIT = 60000  # Just above max input to ensure next prime exists
    strategy = SievePrimeStrategy(MAX_LIMIT)
    context = PrimeContext(strategy)
    handler = InputHandler(context)

    input_lines = []
    count = 0
    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue
        input_lines.append(line)
        count += 1
        if count >= 50:
            break

    results = handler.process_lines(input_lines)
    for r in results:
        print(r)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Prime' (ID: 20134)
  → Token d'amorce (pas de prédiction)

Token 2: 'Strategy' (ID: 21488)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4414892792701721
    2. '(' → logprob: -1.0664892196655273
    3. '{' → logprob: -4.441489219665527
    4. '(:' → logprob: -7.316489219665527
    5. '.' → logprob: -8.691489219665527
    6. '():' → logprob: -10.316489219665527
    7. '```' → logprob: -11.191489219665527
    8. ' :' → logprob: -11.691489219665527
    9. '{:' → logprob: -12.066489219665527
    10. ':**' → logprob: -12.316489219665527

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3284517526626587
    2. '(' → logprob: -1.7034517526626587
    3. '```' → logprob: -2.953451633453369
    4. '.' → logprob: -3.703451633453369
    5. '   ' → logprob: -4.203451633453369
    6. ':
' → logprob: -5.578451633453369
    7. '(
' → logprob: -7.828451633453369
    8. ''' → logprob: -7.953451633453369
    9. '():' → logprob: -7.953451633453369
    10. '`' → logprob: -8.703452110290527

Token 5: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8104320168495178
    2. 'def' (adapté à ' def') → logprob: -1.935431957244873
    3. '   ' → logprob: -2.060431957244873
    4. '```' → logprob: -2.185431957244873
    5. '_' → logprob: -2.310431957244873
    6. ' ' → logprob: -4.310431957244873
    7. '\' → logprob: -4.435431957244873
    8. '`' → logprob: -4.685431957244873
    9. '    ' → logprob: -4.685431957244873
    10. ' 
' → logprob: -4.935431957244873

Token 6: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05755770206451416
    2. ' calculate' → logprob: -3.4325575828552246
    3. ' __' → logprob: -4.807557582855225
    4. ' ' → logprob: -6.307557582855225
    5. ' find' → logprob: -6.432557582855225
    6. 'calculate' → logprob: -6.557557582855225
    7. ' def' → logprob: -6.682557582855225
    8. '__' → logprob: -6.932557582855225
    9. '```' → logprob: -6.932557582855225
    10. ' get' → logprob: -7.182557582855225

Token 7: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.014383270405232906
    2. '_' → logprob: -4.514383316040039
    3. '_pal' → logprob: -6.889383316040039
    4. ' _' → logprob: -7.014383316040039
    5. ' ' → logprob: -7.639383316040039
    6. 'Prime' → logprob: -8.014383316040039
    7. '_pr' → logprob: -8.764383316040039
    8. '_Pr' → logprob: -9.139383316040039
    9. '   ' → logprob: -9.389383316040039
    10. 'prime' → logprob: -9.389383316040039

Token 8: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01861271634697914
    2. '(self' → logprob: -4.143612861633301
    3. ' (' → logprob: -6.393612861633301
    4. '(token' → logprob: -8.2686128616333
    5. '_' → logprob: -9.1436128616333
    6. ')' → logprob: -9.1436128616333
    7. '```' → logprob: -9.2686128616333
    8. '_token' → logprob: -9.7686128616333
    9. '("("' → logprob: -10.2686128616333
    10. '(s' → logprob: -10.2686128616333

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37983596324920654
    2. ')' → logprob: -1.8798359632492065
    3. '):' → logprob: -1.8798359632492065
    4. 'self' → logprob: -6.129836082458496
    5. 'token' → logprob: -6.254836082458496
    6. '_token' → logprob: -6.629836082458496
    7. '```' → logprob: -7.004836082458496
    8. '(' → logprob: -7.129836082458496
    9. '.' → logprob: -7.379836082458496
    10. '   ' → logprob: -7.504836082458496

Token 10: ' num' (ID: 2269)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0751960277557373
    2. ' number' → logprob: -1.5751960277557373
    3. 'n' → logprob: -1.7001960277557373
    4. ' self' → logprob: -2.0751960277557373
    5. 'self' → logprob: -2.8251960277557373
    6. 'number' → logprob: -2.9501960277557373
    7. ' num' → logprob: -3.7001960277557373
    8. 'num' → logprob: -4.950196266174316
    9. ' x' → logprob: -9.325196266174316
    10. ' ' → logprob: -10.700196266174316

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16728323698043823
    2. ')' → logprob: -1.917283296585083
    3. ':' → logprob: -5.167283058166504
    4. '):
' → logprob: -6.792283058166504
    5. '```' → logprob: -9.792283058166504
    6. '   ' → logprob: -10.042283058166504
    7. '(' → logprob: -11.167283058166504
    8. '():' → logprob: -11.167283058166504
    9. ',' → logprob: -11.417283058166504
    10. '       ' → logprob: -11.417283058166504

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.054971545934677124
    2. 'int' → logprob: -2.92997145652771
    3. ')' → logprob: -9.679971694946289
    4. ' ' → logprob: -11.304971694946289
    5. '   ' → logprob: -12.304971694946289
    6. ':int' → logprob: -13.054971694946289
    7. '(int' → logprob: -13.179971694946289
    8. '=int' → logprob: -13.554971694946289
    9. ' )' → logprob: -13.804971694946289
    10. '  ' → logprob: -14.054971694946289

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001539973309263587
    2. '):' → logprob: -6.501540184020996
    3. ')->' → logprob: -10.751540184020996
    4. '):
' → logprob: -11.751540184020996
    5. '   ' → logprob: -12.876540184020996
    6. '`)' → logprob: -12.876540184020996
    7. ' )' → logprob: -13.626540184020996
    8. ':' → logprob: -14.501540184020996
    9. '```' → logprob: -15.001540184020996
    10. ')>' → logprob: -15.126540184020996

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023850727826356888
    2. '):' → logprob: -3.898850679397583
    3. ')' → logprob: -6.148850917816162
    4. '():' → logprob: -7.398850917816162
    5. ':**' → logprob: -9.523850440979004
    6. '->' → logprob: -9.648850440979004
    7. ':return' → logprob: -9.648850440979004
    8. '(' → logprob: -9.773850440979004
    9. ':
' → logprob: -10.148850440979004
    10. '   ' → logprob: -10.398850440979004

Token 15: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.00866219773888588
    2. 'bool' → logprob: -4.758662223815918
    3. ' ' → logprob: -10.383662223815918
    4. ' int' → logprob: -12.133662223815918
    5. ' ' → logprob: -12.383662223815918
    6. '   ' → logprob: -13.133662223815918
    7. '	bool' → logprob: -13.883662223815918
    8. '    ' → logprob: -13.883662223815918
    9. 'int' → logprob: -14.133662223815918
    10. ' True' → logprob: -14.508662223815918

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035048185964114964
    2. '():' → logprob: -8.750350952148438
    3. '):' → logprob: -9.125350952148438
    4. ':**' → logprob: -9.625350952148438
    5. ':return' → logprob: -12.375350952148438
    6. ' :' → logprob: -12.750350952148438
    7. '':' → logprob: -13.000350952148438
    8. '```' → logprob: -14.000350952148438
    9. '`:' → logprob: -14.125350952148438
    10. ':
' → logprob: -14.125350952148438

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00862887967377901
    2. '\n' → logprob: -6.383628845214844
    3. '    ' → logprob: -6.508628845214844
    4. '   ' → logprob: -6.508628845214844
    5. '```' → logprob: -6.883628845214844
    6. ' ' → logprob: -7.258628845214844
    7. ':' → logprob: -7.383628845214844
    8. '\' → logprob: -8.133628845214844
    9. '        
' → logprob: -8.383628845214844
    10. ' 
' → logprob: -8.633628845214844

Token 18: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0854487270116806
    2. ' \' → logprob: -3.710448741912842
    3. '```' → logprob: -3.960448741912842
    4. '\n' → logprob: -4.585448741912842
    5. '   ' → logprob: -5.335448741912842
    6. '`' → logprob: -5.585448741912842
    7. ' ' → logprob: -5.710448741912842
    8. ' if' → logprob: -5.835448741912842
    9. '        ' → logprob: -5.960448741912842
    10. '\' → logprob: -5.960448741912842

Token 19: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.018159780651330948
    2. 'Not' → logprob: -4.018159866333008
    3. ' ' → logprob: -13.018159866333008
    4. ' not' → logprob: -13.143159866333008
    5. '(Not' → logprob: -13.643159866333008
    6. '_Not' → logprob: -13.768159866333008
    7. '@Not' → logprob: -14.393159866333008
    8. '_not' → logprob: -14.393159866333008
    9. '  ' → logprob: -14.518159866333008
    10. '   ' → logprob: -15.143159866333008

Token 20: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0013329789508134127
    2. 'implemented' → logprob: -6.626332759857178
    3. ' implemented' → logprob: -12.751333236694336
    4. 'Impl' → logprob: -13.626333236694336
    5. 'impl' → logprob: -13.876333236694336
    6. 'Implement' → logprob: -14.126333236694336
    7. 'Defined' → logprob: -15.376333236694336
    8. 'Abstract' → logprob: -15.751333236694336
    9. '```' → logprob: -15.751333236694336
    10. '   ' → logprob: -15.876333236694336

Token 21: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.5048530030981055e-06
    2. 'rror' → logprob: -14.875001907348633
    3. 'E' → logprob: -15.375001907348633
    4. 'Erro' → logprob: -15.500001907348633
    5. '   ' → logprob: -15.750001907348633
    6. 'Er' → logprob: -16.125001907348633
    7. '```' → logprob: -16.250001907348633
    8. 'Exception' → logprob: -16.375001907348633
    9. 'error' → logprob: -17.250001907348633
    10. '_Error' → logprob: -17.250001907348633

Token 22: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2676706314086914
    2. '\n' → logprob: -1.8926706314086914
    3. '
' → logprob: -1.8926706314086914
    4. '<|end|>' → logprob: -2.3926706314086914
    5. '```' → logprob: -2.5176706314086914
    6. '_' → logprob: -2.6426706314086914
    7. ' ' → logprob: -3.5176706314086914
    8. '' → logprob: -3.6426706314086914
    9. '.' → logprob: -3.6426706314086914
    10. '   ' → logprob: -3.7676706314086914

Token 23: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7089034914970398
    2. ' ' → logprob: -1.5839035511016846
    3. '   ' → logprob: -2.5839035511016846
    4. 'c' → logprob: -2.7089035511016846
    5. ' 
' → logprob: -2.8339035511016846
    6. '
' → logprob: -2.8339035511016846
    7. '_' → logprob: -4.4589033126831055
    8. '```' → logprob: -4.8339033126831055
    9. 'd' → logprob: -5.3339033126831055
    10. '\n' → logprob: -5.4589033126831055

Token 24: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38854125142097473
    2. 'class' → logprob: -1.2635412216186523
    3. 'def' (adapté à ' def') → logprob: -3.6385412216186523
    4. ' ' → logprob: -5.013541221618652
    5. '    ' → logprob: -6.513541221618652
    6. ' 
' → logprob: -6.638541221618652
    7. '    
' → logprob: -7.013541221618652
    8. '       ' → logprob: -7.263541221618652
    9. '```' → logprob: -7.513541221618652
    10. '  ' → logprob: -8.263541221618652

Token 25: ' next' (ID: 2613)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8775926828384399
    2. ' generate' → logprob: -1.75259268283844
    3. ' check' → logprob: -1.87759268283844
    4. ' find' → logprob: -2.7525925636291504
    5. ' test' → logprob: -3.0025925636291504
    6. ' get' → logprob: -3.1275925636291504
    7. ' evaluate' → logprob: -3.8775925636291504
    8. ' solve' → logprob: -4.00259256362915
    9. ' compute' → logprob: -4.62759256362915
    10. ' def' → logprob: -4.87759256362915

Token 26: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11452481895685196
    2. '_prime' → logprob: -2.2395248413085938
    3. '(' → logprob: -7.114524841308594
    4. '_space' → logprob: -7.864524841308594
    5. '_token' → logprob: -8.989524841308594
    6. '_(' → logprob: -10.114524841308594
    7. '_value' → logprob: -10.489524841308594
    8. '_self' → logprob: -10.614524841308594
    9. '_pal' → logprob: -10.739524841308594
    10. ' _' → logprob: -10.739524841308594

Token 27: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10026825219392776
    2. '(' → logprob: -2.3502683639526367
    3. 'self' → logprob: -10.600268363952637
    4. ' (' → logprob: -11.725268363952637
    5. '_self' → logprob: -12.100268363952637
    6. '_token' → logprob: -12.475268363952637
    7. '(
' → logprob: -12.475268363952637
    8. '_number' → logprob: -13.100268363952637
    9. '	self' → logprob: -13.350268363952637
    10. '_candidate' → logprob: -13.475268363952637

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018495087279006839
    2. ' ,' → logprob: -7.12684965133667
    3. 'self' → logprob: -7.12684965133667
    4. ')' → logprob: -8.501849174499512
    5. ' ' → logprob: -11.251849174499512
    6. '   ' → logprob: -12.001849174499512
    7. ',self' → logprob: -12.376849174499512
    8. ',num' → logprob: -12.626849174499512
    9. '_,' → logprob: -13.251849174499512
    10. '```' → logprob: -13.251849174499512

Token 29: ' start' (ID: 1604)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.31729021668434143
    2. ' self' → logprob: -1.567290186882019
    3. 'num' → logprob: -3.1922903060913086
    4. 'self' → logprob: -4.067290306091309
    5. ' n' → logprob: -5.567290306091309
    6. ' number' → logprob: -7.067290306091309
    7. 'n' → logprob: -8.692290306091309
    8. ' start' → logprob: -9.817290306091309
    9. ' current' → logprob: -9.942290306091309
    10. ' ' → logprob: -10.067290306091309

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1572825163602829
    2. '):' → logprob: -2.157282590866089
    3. ',' → logprob: -4.03228235244751
    4. ')' → logprob: -4.78228235244751
    5. '=' → logprob: -5.90728235244751
    6. ':int' → logprob: -8.282282829284668
    7. '):
' → logprob: -8.657282829284668
    8. '_number' → logprob: -9.032282829284668
    9. ' ):' → logprob: -9.407282829284668
    10. '   ' → logprob: -9.657282829284668

Token 31: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.35025712847709656
    2. 'int' → logprob: -1.225257158279419
    3. ' )' → logprob: -6.85025691986084
    4. ')' → logprob: -7.35025691986084
    5. ':int' → logprob: -10.47525691986084
    6. '=int' → logprob: -10.72525691986084
    7. 'self' → logprob: -11.10025691986084
    8. ' self' → logprob: -11.60025691986084
    9. ' ' → logprob: -11.60025691986084
    10. ' ' → logprob: -12.47525691986084

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026600535959005356
    2. '):' → logprob: -3.6516005992889404
    3. '):
' → logprob: -9.40160083770752
    4. ':' → logprob: -9.40160083770752
    5. '   ' → logprob: -10.02660083770752
    6. ',' → logprob: -10.15160083770752
    7. ' )' → logprob: -10.65160083770752
    8. ')->' → logprob: -10.90160083770752
    9. '       ' → logprob: -13.02660083770752
    10. ' ):' → logprob: -13.02660083770752

Token 33: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005882694851607084
    2. '):' → logprob: -5.880882740020752
    3. ' ->' → logprob: -6.380882740020752
    4. ')' → logprob: -7.255882740020752
    5. '->' → logprob: -7.880882740020752
    6. ')->' → logprob: -8.505882263183594
    7. '   ' → logprob: -10.630882263183594
    8. ' :' → logprob: -10.630882263183594
    9. '       ' → logprob: -11.130882263183594
    10. ':
' → logprob: -12.130882263183594

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.001555567141622305
    2. 'int' → logprob: -6.751555442810059
    3. ' ' → logprob: -7.876555442810059
    4. ' ' → logprob: -13.376555442810059
    5. ' Optional' → logprob: -14.001555442810059
    6. '[int' → logprob: -14.001555442810059
    7. ':int' → logprob: -14.501555442810059
    8. '	int' → logprob: -14.501555442810059
    9. '  ' → logprob: -14.876555442810059
    10. ' None' → logprob: -15.126555442810059

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010716310935094953
    2. '):' → logprob: -7.376071453094482
    3. ':
' → logprob: -8.50107192993164
    4. '       ' → logprob: -9.37607192993164
    5. '<|end|>' → logprob: -9.75107192993164
    6. '():' → logprob: -9.87607192993164
    7. '   ' → logprob: -11.25107192993164
    8. '(self' → logprob: -11.75107192993164
    9. ')' → logprob: -12.00107192993164
    10. ':**' → logprob: -12.25107192993164

Token 36: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1435348242521286
    2. '       ' → logprob: -2.1435348987579346
    3. '<|end|>' → logprob: -4.8935346603393555
    4. '    ' → logprob: -5.8935346603393555
    5. ' 
' → logprob: -6.5185346603393555
    6. '        ' → logprob: -6.8935346603393555
    7. '   ' → logprob: -7.0185346603393555
    8. '\n' → logprob: -7.1435346603393555
    9. '  ' → logprob: -7.6435346603393555
    10. '        
' → logprob: -8.393534660339355

Token 37: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02436624839901924
    2. ' pass' → logprob: -4.64936637878418
    3. ' raise' → logprob: -5.02436637878418
    4. 'pass' → logprob: -5.14936637878418
    5. 'raise' (adapté à ' raise') → logprob: -7.39936637878418
    6. '    ' → logprob: -8.02436637878418
    7. '        ' → logprob: -8.14936637878418
    8. '   ' → logprob: -8.27436637878418
    9. ' ' → logprob: -8.89936637878418
    10. '      ' → logprob: -9.02436637878418

Token 38: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.022443372756242752
    2. 'Not' → logprob: -3.8974432945251465
    3. ' ' → logprob: -6.5224432945251465
    4. '_Not' → logprob: -8.272443771362305
    5. '_not' → logprob: -9.772443771362305
    6. ' ' → logprob: -10.772443771362305
    7. '  ' → logprob: -11.022443771362305
    8. '@Not' → logprob: -11.147443771362305
    9. '_' → logprob: -11.522443771362305
    10. 'N' → logprob: -11.522443771362305

Token 39: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.2240714281797409
    2. 'ot' → logprob: -2.349071502685547
    3. 'Not' → logprob: -2.349071502685547
    4. '```' → logprob: -6.099071502685547
    5. 'Implement' → logprob: -6.599071502685547
    6. 'oted' → logprob: -6.724071502685547
    7. 'plement' → logprob: -6.974071502685547
    8. '   ' → logprob: -7.099071502685547
    9. 'Error' → logprob: -7.099071502685547
    10. 'Defined' → logprob: -7.349071502685547

Token 40: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00038920470979064703
    2. 'ot' → logprob: -8.250389099121094
    3. 'rror' → logprob: -10.125389099121094
    4. 't' → logprob: -10.375389099121094
    5. 'ed' → logprob: -10.625389099121094
    6. 'Not' → logprob: -11.250389099121094
    7. 'o' → logprob: -11.500389099121094
    8. 'Erro' → logprob: -13.250389099121094
    9. 'ort' → logprob: -13.625389099121094
    10. 'or' → logprob: -13.750389099121094

Token 41: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.804701566696167
    2. ' ' → logprob: -1.554701566696167
    3. '
' → logprob: -2.179701566696167
    4. 'n' → logprob: -2.804701566696167
    5. ' 
' → logprob: -3.054701566696167
    6. '\n' → logprob: -3.679701566696167
    7. 'class' → logprob: -3.679701566696167
    8. '' → logprob: -4.179701805114746
    9. '\' → logprob: -4.304701805114746
    10. '    
' → logprob: -4.929701805114746

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1878073364496231
    2. ' ' → logprob: -2.812807321548462
    3. ' 
' → logprob: -3.062807321548462
    4. 'class' → logprob: -3.687807321548462
    5. '    
' → logprob: -4.937807559967041
    6. 'n' → logprob: -5.187807559967041
    7. '
' → logprob: -5.187807559967041
    8. '\n' → logprob: -5.187807559967041
    9. 'd' → logprob: -5.687807559967041
    10. '    ' → logprob: -5.937807559967041

Token 43: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.026846367865800858
    2. '   ' → logprob: -3.776846408843994
    3. 'c' → logprob: -5.901846408843994
    4. '```' → logprob: -8.401845932006836
    5. ' ' → logprob: -8.651845932006836
    6. ' class' → logprob: -8.901845932006836
    7. '    ' → logprob: -9.401845932006836
    8. '    
' → logprob: -9.776845932006836
    9. 'd' → logprob: -10.026845932006836
    10. ' 
' → logprob: -10.401845932006836

Token 44: ' prev' (ID: 10258)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.3146499395370483
    2. ' next' → logprob: -1.5646499395370483
    3. ' previous' → logprob: -1.8146499395370483
    4. ' generate' → logprob: -2.689650058746338
    5. ' check' → logprob: -2.814650058746338
    6. ' prev' → logprob: -2.939650058746338
    7. ' get' → logprob: -3.189650058746338
    8. ' calculate' → logprob: -3.814650058746338
    9. 'def' → logprob: -4.439650058746338
    10. ' is' → logprob: -4.439650058746338

Token 45: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16065636277198792
    2. '_prime' → logprob: -1.9106563329696655
    3. 'ious' → logprob: -9.910655975341797
    4. '_i' → logprob: -10.035655975341797
    5. '_

' → logprob: -10.410655975341797
    6. '_e' → logprob: -10.410655975341797
    7. '_prior' → logprob: -10.410655975341797
    8. '```' → logprob: -10.535655975341797
    9. 'e' → logprob: -10.660655975341797
    10. '_pr' → logprob: -11.035655975341797

Token 46: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012373719364404678
    2. '(' → logprob: -6.751237392425537
    3. 'self' → logprob: -9.751236915588379
    4. ' (' → logprob: -13.001236915588379
    5. ')(' → logprob: -13.751236915588379
    6. '```' → logprob: -13.876236915588379
    7. '	self' → logprob: -14.251236915588379
    8. '_(' → logprob: -14.376236915588379
    9. ' self' → logprob: -14.501236915588379
    10. '   ' → logprob: -14.751236915588379

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005423080874606967
    2. 'self' → logprob: -7.875542163848877
    3. ' ,' → logprob: -8.875542640686035
    4. '(self' → logprob: -11.875542640686035
    5. '   ' → logprob: -12.000542640686035
    6. ',self' → logprob: -12.250542640686035
    7. '```' → logprob: -13.375542640686035
    8. ')' → logprob: -14.125542640686035
    9. '       ' → logprob: -14.375542640686035
    10. ' self' → logprob: -14.625542640686035

Token 48: ' start' (ID: 1604)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7395777106285095
    2. 'self' → logprob: -0.7395777106285095
    3. ' start' → logprob: -3.4895777702331543
    4. 'start' → logprob: -4.239577770233154
    5. 'num' → logprob: -8.489577293395996
    6. ' num' → logprob: -8.989577293395996
    7. ' ' → logprob: -9.864577293395996
    8. '   ' → logprob: -10.864577293395996
    9. '       ' → logprob: -11.364577293395996
    10. 'end' → logprob: -12.489577293395996

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003103446215391159
    2. ':int' → logprob: -6.253103256225586
    3. ' :' → logprob: -7.378103256225586
    4. ')' → logprob: -8.003103256225586
    5. '):' → logprob: -8.753103256225586
    6. ',' → logprob: -10.378103256225586
    7. '   ' → logprob: -11.253103256225586
    8. '<int' → logprob: -13.128103256225586
    9. '=' → logprob: -13.503103256225586
    10. '```' → logprob: -13.628103256225586

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22542992234230042
    2. 'int' → logprob: -1.600429892539978
    3. ':int' → logprob: -12.22542953491211
    4. ' ' → logprob: -12.60042953491211
    5. ')' → logprob: -12.97542953491211
    6. '[int' → logprob: -13.10042953491211
    7. '(int' → logprob: -13.35042953491211
    8. '	int' → logprob: -14.10042953491211
    9. '<int' → logprob: -14.35042953491211
    10. '=int' → logprob: -14.47542953491211

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013798571308143437
    2. ':' → logprob: -9.250138282775879
    3. ' )' → logprob: -10.875138282775879
    4. '   ' → logprob: -11.250138282775879
    5. '):' → logprob: -12.125138282775879
    6. '`)' → logprob: -12.500138282775879
    7. ' ' → logprob: -15.500138282775879
    8. ':int' → logprob: -15.750138282775879
    9. '```' → logprob: -15.750138282775879
    10. '  ' → logprob: -16.625137329101562

Token 52: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014516627416014671
    2. ' ->' → logprob: -4.639516830444336
    3. '->' → logprob: -5.764516830444336
    4. '):' → logprob: -7.014516830444336
    5. ' :' → logprob: -7.764516830444336
    6. '   ' → logprob: -9.264516830444336
    7. '       ' → logprob: -9.639516830444336
    8. ')->' → logprob: -10.139516830444336
    9. ')' → logprob: -10.389516830444336
    10. '>:' → logprob: -11.264516830444336

Token 53: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12705767154693604
    2. 'int' → logprob: -2.1270575523376465
    3. ' ' → logprob: -9.127058029174805
    4. ' ' → logprob: -12.002058029174805
    5. 'nt' → logprob: -13.002058029174805
    6. '[int' → logprob: -13.377058029174805
    7. '(int' → logprob: -13.877058029174805
    8. 'n' → logprob: -14.002058029174805
    9. '	int' → logprob: -14.002058029174805
    10. '  ' → logprob: -14.002058029174805

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017565040616318583
    2. '):' → logprob: -9.375175476074219
    3. ':
' → logprob: -9.875175476074219
    4. '       ' → logprob: -11.250175476074219
    5. '():' → logprob: -11.750175476074219
    6. '<|end|>' → logprob: -12.000175476074219
    7. ':return' → logprob: -12.375175476074219
    8. '>:' → logprob: -13.125175476074219
    9. '   ' → logprob: -13.500175476074219
    10. ' :' → logprob: -13.625175476074219

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011835616314783692
    2. ' raise' → logprob: -6.87618350982666
    3. 'raise' → logprob: -8.87618350982666
    4. '   ' → logprob: -12.00118350982666
    5. ' ' → logprob: -14.25118350982666
    6. '```' → logprob: -14.25118350982666
    7. '	raise' → logprob: -14.25118350982666
    8. '      ' → logprob: -14.62618350982666
    9. '<|end|>' → logprob: -15.00118350982666
    10. ' raises' → logprob: -15.12618350982666

Token 56: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16154351830482483
    2. ' raise' → logprob: -2.161543607711792
    3. 'raise' (adapté à ' raise') → logprob: -3.411543607711792
    4. '   ' → logprob: -7.786543369293213
    5. ' ' → logprob: -9.036543846130371
    6. ' None' → logprob: -9.411543846130371
    7. 'None' → logprob: -9.661543846130371
    8. '      ' → logprob: -9.661543846130371
    9. 'Not' → logprob: -10.286543846130371
    10. 'pass' → logprob: -10.286543846130371

Token 57: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.31347450613975525
    2. 'Not' → logprob: -1.3134745359420776
    3. '_Not' → logprob: -9.563474655151367
    4. 'Implemented' → logprob: -9.688474655151367
    5. '_not' → logprob: -10.313474655151367
    6. ' ' → logprob: -10.938474655151367
    7. '<|end|>' → logprob: -11.188474655151367
    8. '\Not' → logprob: -12.813474655151367
    9. '(Not' → logprob: -12.938474655151367
    10. '@Not' → logprob: -13.063474655151367

Token 58: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0030793175101280212
    2. 'Not' → logprob: -6.628079414367676
    3. 'ot' → logprob: -7.378079414367676
    4. 'plement' → logprob: -8.003079414367676
    5. 'o' → logprob: -8.503079414367676
    6. 'Defined' → logprob: -8.753079414367676
    7. '```' → logprob: -8.878079414367676
    8. 'Implement' → logprob: -9.628079414367676
    9. '   ' → logprob: -10.253079414367676
    10. 'implemented' → logprob: -10.628079414367676

Token 59: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.000763510703109e-05
    2. 'rror' → logprob: -10.250040054321289
    3. 'Erro' → logprob: -12.875040054321289
    4. 'Not' → logprob: -14.375040054321289
    5. 'Er' → logprob: -14.875040054321289
    6. '   ' → logprob: -15.375040054321289
    7. 'Implemented' → logprob: -15.875040054321289
    8. 'ed' → logprob: -15.875040054321289
    9. 'Err' → logprob: -16.37504005432129
    10. '       ' → logprob: -16.62504005432129

Token 60: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4960739016532898
    2. 'class' → logprob: -0.9960739016532898
    3. '```' → logprob: -5.1210737228393555
    4. '

' → logprob: -5.4960737228393555
    5. '\n' → logprob: -5.6210737228393555
    6. '<|end|>' → logprob: -6.1210737228393555
    7. ' 
' → logprob: -6.4960737228393555
    8. ' class' → logprob: -6.6210737228393555
    9. '   ' → logprob: -7.2460737228393555
    10. '' → logprob: -7.4960737228393555

Token 61: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06634850054979324
    2. 'c' → logprob: -2.8163485527038574
    3. '   ' → logprob: -6.441348552703857
    4. ' ' → logprob: -7.066348552703857
    5. '
' → logprob: -7.441348552703857
    6. ' class' → logprob: -8.3163480758667
    7. ' 
' → logprob: -8.5663480758667
    8. 'i' → logprob: -8.8163480758667
    9. 'd' → logprob: -9.0663480758667
    10. 'n' → logprob: -9.4413480758667

Token 62: ' S' (ID: 336)
  Prédit: ' Basic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Basic' → logprob: -0.19093267619609833
    2. ' Trial' → logprob: -2.4409327507019043
    3. ' S' → logprob: -3.4409327507019043
    4. ' Er' → logprob: -3.8159327507019043
    5. ' Default' → logprob: -4.815932750701904
    6. ' Br' → logprob: -5.065932750701904
    7. ' Simple' → logprob: -5.065932750701904
    8. ' Seg' → logprob: -5.565932750701904
    9. ' ' → logprob: -6.940932750701904
    10. ' Na' → logprob: -7.315932750701904

Token 63: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.3556585907936096
    2. 'imple' → logprob: -1.2306585311889648
    3. 't' → logprob: -5.855658531188965
    4. 'e' → logprob: -6.480658531188965
    5. 'qrt' → logprob: -7.480658531188965
    6. 'quare' → logprob: -7.980658531188965
    7. 'egment' → logprob: -8.230658531188965
    8. 'afe' → logprob: -8.605658531188965
    9. 'impl' → logprob: -8.605658531188965
    10. 'ingle' → logprob: -8.605658531188965

Token 64: 'Prime' (ID: 43017)
  Prédit: 'Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.570416271686554
    2. 'S' → logprob: -1.8204162120819092
    3. 'Based' → logprob: -2.195416212081909
    4. 'Of' → logprob: -2.820416212081909
    5. 'Strategy' → logprob: -2.945416212081909
    6. '-based' → logprob: -4.820416450500488
    7. '```' → logprob: -5.070416450500488
    8. 'E' → logprob: -5.195416450500488
    9. '(S' → logprob: -5.195416450500488
    10. 'Optimizer' → logprob: -6.320416450500488

Token 65: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.016265911981463432
    2. ':' → logprob: -4.141265869140625
    3. 'Optimizer' → logprob: -9.641265869140625
    4. ' :' → logprob: -10.766265869140625
    5. 'Solver' → logprob: -10.891265869140625
    6. '():' → logprob: -11.016265869140625
    7. '(' → logprob: -11.141265869140625
    8. 'Calculator' → logprob: -11.141265869140625
    9. 'Strategies' → logprob: -11.391265869140625
    10. 'Generator' → logprob: -11.641265869140625

Token 66: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.941161776310764e-05
    2. '(' → logprob: -11.250039100646973
    3. '():' → logprob: -11.500039100646973
    4. ':
' → logprob: -11.875039100646973
    5. ' :' → logprob: -12.250039100646973
    6. '(S' → logprob: -14.125039100646973
    7. ':def' → logprob: -14.375039100646973
    8. '(object' → logprob: -14.500039100646973
    9. ':**' → logprob: -14.750039100646973
    10. '):' → logprob: -14.875039100646973

Token 67: 'Prime' (ID: 43017)
  Prédit: 'Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.018128173425793648
    2. ' Prime' → logprob: -4.393128395080566
    3. '):' → logprob: -5.643128395080566
    4. ')' → logprob: -6.393128395080566
    5. 'object' → logprob: -8.768128395080566
    6. '   ' → logprob: -9.768128395080566
    7. '):
' → logprob: -10.018128395080566
    8. ' ):' → logprob: -10.393128395080566
    9. 'Prim' → logprob: -10.518128395080566
    10. '_prime' → logprob: -11.018128395080566

Token 68: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.00011164903844473884
    2. 'Strateg' → logprob: -9.75011157989502
    3. 'S' → logprob: -10.25011157989502
    4. 'Stra' → logprob: -11.87511157989502
    5. 'Strategies' → logprob: -12.50011157989502
    6. ' Strategy' → logprob: -13.00011157989502
    7. ' strategy' → logprob: -13.87511157989502
    8. 'Str' → logprob: -14.25011157989502
    9. 'Prime' → logprob: -14.25011157989502
    10. 'St' → logprob: -14.37511157989502

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008339279447682202
    2. ':' → logprob: -7.125833988189697
    3. ')' → logprob: -11.125833511352539
    4. '):
' → logprob: -11.375833511352539
    5. '>:' → logprob: -13.750833511352539
    6. '():' → logprob: -13.875833511352539
    7. ']:' → logprob: -15.000833511352539
    8. '}:' → logprob: -15.250833511352539
    9. ':)' → logprob: -15.375833511352539
    10. ' ):' → logprob: -16.00083351135254

Token 70: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03397715464234352
    2. '   ' → logprob: -3.6589772701263428
    3. ':
' → logprob: -5.408977031707764
    4. '
' → logprob: -6.283977031707764
    5. ' def' → logprob: -8.408977508544922
    6. '    
' → logprob: -8.533977508544922
    7. 'def' → logprob: -8.783977508544922
    8. ':def' → logprob: -8.783977508544922
    9. '<|end|>' → logprob: -8.908977508544922
    10. '    ' → logprob: -9.158977508544922

Token 71: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.004755734000355005
    2. ' import' → logprob: -5.75475549697876
    3. 'def' (adapté à ' def') → logprob: -7.00475549697876
    4. '    ' → logprob: -7.87975549697876
    5. '   ' → logprob: -9.004755973815918
    6. 'import' → logprob: -9.129755973815918
    7. ' ' → logprob: -10.879755973815918
    8. ' 
' → logprob: -11.254755973815918
    9. ' _' → logprob: -12.129755973815918
    10. ' de' → logprob: -12.504755973815918

Token 72: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002866092836484313
    2. ' _' → logprob: -6.752866268157959
    3. ' ' → logprob: -7.002866268157959
    4. ' def' → logprob: -7.752866268157959
    5. ' init' → logprob: -8.3778657913208
    6. ' ' → logprob: -10.6278657913208
    7. '__' → logprob: -10.6278657913208
    8. ' ```' → logprob: -11.1278657913208
    9. ' calculate' → logprob: -11.3778657913208
    10. ' generate' → logprob: -11.3778657913208

Token 73: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. 'ini' → logprob: -14.125001907348633
    3. 'inite' → logprob: -14.875001907348633
    4. 'i' → logprob: -15.750001907348633
    5. 'in' → logprob: -16.250001907348633
    6. ' init' → logprob: -16.500001907348633
    7. '   ' → logprob: -17.125001907348633
    8. 'nit' → logprob: -17.250001907348633
    9. '	init' → logprob: -17.250001907348633
    10. 'innit' → logprob: -17.625001907348633

Token 74: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07041707634925842
    2. '(self' → logprob: -2.6954171657562256
    3. '__' → logprob: -8.195417404174805
    4. '(' → logprob: -8.945417404174805
    5. ' (' → logprob: -10.695417404174805
    6. '_(' → logprob: -10.945417404174805
    7. '__(
' → logprob: -11.445417404174805
    8. ')(' → logprob: -11.945417404174805
    9. '```' → logprob: -11.945417404174805
    10. 'self' → logprob: -12.695417404174805

Token 75: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009134899592027068
    2. ' self' → logprob: -7.000913619995117
    3. '   ' → logprob: -14.125913619995117
    4. '       ' → logprob: -14.750913619995117
    5. ',' → logprob: -15.000913619995117
    6. ')' → logprob: -15.250913619995117
    7. '	self' → logprob: -16.000913619995117
    8. ' ' → logprob: -16.375913619995117
    9. '(self' → logprob: -16.875913619995117
    10. 's' → logprob: -17.375913619995117

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007609111489728093
    2. 'self' → logprob: -7.625761032104492
    3. ' ,' → logprob: -8.250761032104492
    4. '(self' → logprob: -12.125761032104492
    5. '):' → logprob: -13.250761032104492
    6. ',self' → logprob: -13.375761032104492
    7. '   ' → logprob: -14.000761032104492
    8. ')' → logprob: -14.125761032104492
    9. ' self' → logprob: -14.250761032104492
    10. ' (' → logprob: -15.000761032104492

Token 77: ' limit' (ID: 5967)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30087485909461975
    2. ' self' → logprob: -1.5508748292922974
    3. ' max' → logprob: -4.300874710083008
    4. 'max' → logprob: -4.300874710083008
    5. 'limit' → logprob: -4.300874710083008
    6. ' limit' → logprob: -5.050874710083008
    7. 'n' → logprob: -7.675874710083008
    8. ' n' → logprob: -9.300874710083008
    9. '   ' → logprob: -9.675874710083008
    10. ' ' → logprob: -10.800874710083008

Token 78: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6863040328025818
    2. '):' → logprob: -0.8113040328025818
    3. ':' → logprob: -3.1863040924072266
    4. ' ):' → logprob: -4.686304092407227
    5. ' =' → logprob: -7.436304092407227
    6. ')' → logprob: -7.811304092407227
    7. '=None' → logprob: -8.061304092407227
    8. '=int' → logprob: -8.311304092407227
    9. ',' → logprob: -9.436304092407227
    10. ')=' → logprob: -10.811304092407227

Token 79: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08085928857326508
    2. ' )' → logprob: -3.3308591842651367
    3. '100' → logprob: -3.7058591842651367
    4. ' int' → logprob: -4.955859184265137
    5. ')' → logprob: -5.580859184265137
    6. 'int' → logprob: -5.830859184265137
    7. '<|end|>' → logprob: -6.830859184265137
    8. '10' → logprob: -8.080859184265137
    9. '  ' → logprob: -8.330859184265137
    10. '400' → logprob: -8.830859184265137

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004844154173042625
    2. ' ):' → logprob: -8.375484466552734
    3. ':' → logprob: -8.875484466552734
    4. ')' → logprob: -9.125484466552734
    5. '=' → logprob: -12.875484466552734
    6. '):
' → logprob: -13.625484466552734
    7. ',' → logprob: -14.500484466552734
    8. '   ' → logprob: -14.875484466552734
    9. ' :' → logprob: -16.625484466552734
    10. '():' → logprob: -16.750484466552734

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001581639633513987
    2. ':' → logprob: -7.00158166885376
    3. '<|end|>' → logprob: -7.62658166885376
    4. ' self' → logprob: -9.751581192016602
    5. '<|end|>' → logprob: -10.126581192016602
    6. 'self' → logprob: -11.251581192016602
    7. '   ' → logprob: -11.501581192016602
    8. ',' → logprob: -11.626581192016602
    9. ':
' → logprob: -11.751581192016602
    10. '```' → logprob: -11.751581192016602

Token 82: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.705066442489624
    2. 'self' (adapté à ' self') → logprob: -0.705066442489624
    3. '       ' → logprob: -4.455066680908203
    4. 'import' → logprob: -8.455066680908203
    5. ' super' → logprob: -12.080066680908203
    6. ' import' → logprob: -12.455066680908203
    7. 'super' → logprob: -12.580066680908203
    8. '   ' → logprob: -13.455066680908203
    9. ' ' → logprob: -14.330066680908203
    10. '	self' → logprob: -14.705066680908203

Token 83: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.01239498145878315
    2. '.' → logprob: -4.762394905090332
    3. '.s' → logprob: -5.762394905090332
    4. '._' → logprob: -7.762394905090332
    5. 'limit' → logprob: -9.137394905090332
    6. ' .' → logprob: -9.762394905090332
    7. '_limit' → logprob: -11.262394905090332
    8. '   ' → logprob: -12.137394905090332
    9. '.l' → logprob: -13.012394905090332
    10. ' sieve' → logprob: -13.387394905090332

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022665798664093
    2. '=' → logprob: -1.9102267026901245
    3. ' ' → logprob: -13.535226821899414
    4. '   ' → logprob: -14.785226821899414
    5. '=int' → logprob: -15.285226821899414
    6. ',' → logprob: -15.910226821899414
    7. ')' → logprob: -16.410226821899414
    8. '  ' → logprob: -16.410226821899414
    9. '_' → logprob: -17.035226821899414
    10. ' =)' → logprob: -17.035226821899414

Token 85: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.018158959224820137
    2. 'limit' → logprob: -4.018158912658691
    3. '(limit' → logprob: -12.518158912658691
    4. ' ' → logprob: -13.018158912658691
    5. ' int' → logprob: -13.768158912658691
    6. 'int' → logprob: -14.643158912658691
    7. '    ' → logprob: -14.893158912658691
    8. '_limit' → logprob: -15.143158912658691
    9. ' ' → logprob: -15.268158912658691
    10. '100' → logprob: -15.393158912658691

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6768357157707214
    2. '       ' → logprob: -0.8018357157707214
    3. '<|end|>' → logprob: -3.176835775375366
    4. 'self' → logprob: -7.801835536956787
    5. ',' → logprob: -8.676836013793945
    6. ' 
' → logprob: -8.801836013793945
    7. '<|end|>' → logprob: -8.801836013793945
    8. '        
' → logprob: -9.426836013793945
    9. '```' → logprob: -9.426836013793945
    10. ' self' → logprob: -9.676836013793945

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790842175483704
    2. '
' → logprob: -0.8290842175483704
    3. 'self' → logprob: -6.454084396362305
    4. '<|end|>' → logprob: -7.579084396362305
    5. ' self' → logprob: -8.454084396362305
    6. '        
' → logprob: -8.704084396362305
    7. '  
' → logprob: -9.329084396362305
    8. '```' → logprob: -9.454084396362305
    9. '
' → logprob: -9.579084396362305
    10. '    
' → logprob: -9.579084396362305

Token 88: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.057786464691162
    2. 'self' (adapté à ' self') → logprob: -1.307786464691162
    3. ' self' → logprob: -2.182786464691162
    4. ' ' → logprob: -2.307786464691162
    5. ' [' → logprob: -2.682786464691162
    6. ' sieve' → logprob: -3.182786464691162
    7. '   ' → logprob: -4.307786464691162
    8. 's' → logprob: -4.557786464691162
    9. '"' → logprob: -5.057786464691162
    10. '1' → logprob: -5.307786464691162

Token 89: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17211580276489258
    2. '._' → logprob: -2.2971158027648926
    3. '.s' → logprob: -2.9221158027648926
    4. ' .' → logprob: -5.797115802764893
    5. '.is' → logprob: -8.172115325927734
    6. '.pr' → logprob: -9.672115325927734
    7. ' ' → logprob: -9.922115325927734
    8. ' sieve' → logprob: -10.172115325927734
    9. '.generated' → logprob: -10.422115325927734
    10. 's' → logprob: -10.797115325927734

Token 90: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.06236704811453819
    2. '_' → logprob: -3.0623669624328613
    3. 'ieved' → logprob: -5.312366962432861
    4. 'elf' → logprob: -6.062366962432861
    5. '   ' → logprob: -6.187366962432861
    6. '	' → logprob: -7.437366962432861
    7. 'ie' → logprob: -7.937366962432861
    8. 'ieves' → logprob: -7.937366962432861
    9. 'iev' → logprob: -8.43736743927002
    10. ' ' → logprob: -8.43736743927002

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004096093121916056
    2. '=' → logprob: -5.504096031188965
    3. ' ' → logprob: -11.379096031188965
    4. '[' → logprob: -13.004096031188965
    5. '<|end|>' → logprob: -13.754096031188965
    6. '  ' → logprob: -14.504096031188965
    7. '[:]' → logprob: -14.879096031188965
    8. 's' → logprob: -14.879096031188965
    9. ' =[' → logprob: -15.129096031188965
    10. ' =
' → logprob: -15.254096031188965

Token 92: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.10021734237670898
    2. '[' → logprob: -2.350217342376709
    3. '[self' → logprob: -12.100217819213867
    4. ' ' → logprob: -13.600217819213867
    5. '[s' → logprob: -13.600217819213867
    6. '[n' → logprob: -14.725217819213867
    7. '[a' → logprob: -14.975217819213867
    8. '   ' → logprob: -14.975217819213867
    9. '[start' → logprob: -15.475217819213867
    10. '[int' → logprob: -15.600217819213867

Token 93: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016133727505803108
    2. '._' → logprob: -4.391133785247803
    3. '[' → logprob: -6.391133785247803
    4. ' ' → logprob: -7.391133785247803
    5. '_' → logprob: -8.016133308410645
    6. '.s' → logprob: -8.391133308410645
    7. ' .' → logprob: -8.891133308410645
    8. '.create' → logprob: -9.266133308410645
    9. '.__' → logprob: -9.641133308410645
    10. '-' → logprob: -9.766133308410645

Token 94: 'build' (ID: 9242)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.4615746736526489
    2. 'generate' → logprob: -1.211574673652649
    3. 'build' → logprob: -3.0865745544433594
    4. 'initialize' → logprob: -4.211574554443359
    5. 'init' → logprob: -4.586574554443359
    6. 's' → logprob: -6.836574554443359
    7. 'compute' → logprob: -9.46157455444336
    8. 'make' → logprob: -9.58657455444336
    9. 'construct' → logprob: -10.21157455444336
    10. 'calculate' → logprob: -11.83657455444336

Token 95: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4293624460697174
    2. '_' → logprob: -1.054362416267395
    3. '(' → logprob: -7.9293622970581055
    4. 's' → logprob: -8.304362297058105
    5. ' _' → logprob: -11.304362297058105
    6. '_space' → logprob: -11.804362297058105
    7. 'S' → logprob: -12.179362297058105
    8. '_array' → logprob: -12.304362297058105
    9. '('_' → logprob: -13.054362297058105
    10. '```' → logprob: -13.054362297058105

Token 96: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0013265528250485659
    2. 'iev' → logprob: -7.376326560974121
    3. 'ive' → logprob: -8.001326560974121
    4. 'i' → logprob: -8.751326560974121
    5. 'ie' → logprob: -9.626326560974121
    6. ' ' → logprob: -10.501326560974121
    7. '   ' → logprob: -11.001326560974121
    8. '_' → logprob: -11.751326560974121
    9. ' i' → logprob: -11.751326560974121
    10. '1' → logprob: -11.876326560974121

Token 97: '(limit' (ID: 112473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10554144531488419
    2. '()' → logprob: -2.730541467666626
    3. '(limit' → logprob: -3.355541467666626
    4. '(self' → logprob: -10.355541229248047
    5. '(
' → logprob: -10.605541229248047
    6. '(start' → logprob: -11.855541229248047
    7. '(size' → logprob: -12.855541229248047
    8. '(max' → logprob: -12.980541229248047
    9. '(

' → logprob: -13.230541229248047
    10. ' (' → logprob: -13.730541229248047

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -14.375003814697266
    4. '()' → logprob: -14.750003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '<|end|>' → logprob: -17.375003814697266
    7. '())' → logprob: -17.625003814697266
    8. ' ' → logprob: -17.625003814697266
    9. '),' → logprob: -17.875003814697266
    10. ')

' → logprob: -18.000003814697266

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006331752520054579
    2. '   ' → logprob: -6.006331920623779
    3. 'def' → logprob: -6.631331920623779
    4. '    
' → logprob: -7.006331920623779
    5. '

' → logprob: -7.506331920623779
    6. '  
' → logprob: -7.631331920623779
    7. '<|end|>' → logprob: -8.506331443786621
    8. '```' → logprob: -8.881331443786621
    9. ' 
' → logprob: -9.756331443786621
    10. '\n' → logprob: -10.506331443786621

Token 100: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1273771971464157
    2. '
' → logprob: -2.1273772716522217
    3. ' def' → logprob: -8.1273775100708
    4. '   ' → logprob: -9.7523775100708
    5. '    
' → logprob: -9.7523775100708
    6. '	def' → logprob: -11.5023775100708
    7. '

' → logprob: -11.7523775100708
    8. '  
' → logprob: -11.7523775100708
    9. '```' → logprob: -12.7523775100708
    10. ' 
' → logprob: -13.0023775100708

Token 101: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.2561904788017273
    2. ' _' → logprob: -1.506190538406372
    3. '_' → logprob: -5.506190299987793
    4. '_b' → logprob: -8.756190299987793
    5. '_next' → logprob: -10.881190299987793
    6. ' ' → logprob: -12.131190299987793
    7. ' ' → logprob: -13.131190299987793
    8. '_s' → logprob: -13.381190299987793
    9. '   ' → logprob: -14.381190299987793
    10. '_find' → logprob: -14.756190299987793

Token 102: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.875000953674316
    3. ' build' → logprob: -15.250000953674316
    4. '_build' → logprob: -15.875000953674316
    5. '	build' → logprob: -20.0
    6. '(build' → logprob: -21.125
    7. '```' → logprob: -21.375
    8. ' ' → logprob: -21.5
    9. '   ' → logprob: -21.625
    10. '
' → logprob: -21.75

Token 103: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00015908108616713434
    2. '_' → logprob: -8.75015926361084
    3. 's' → logprob: -15.00015926361084
    4. ' _' → logprob: -15.37515926361084
    5. '_a' → logprob: -18.000158309936523
    6. '_
' → logprob: -18.625158309936523
    7. ' ' → logprob: -18.750158309936523
    8. '_self' → logprob: -19.625158309936523
    9. '_space' → logprob: -19.750158309936523
    10. '_suffix' → logprob: -19.750158309936523

Token 104: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.005958898924291134
    2. '_' → logprob: -5.1309590339660645
    3. 'ive' → logprob: -12.005958557128906
    4. 't' → logprob: -12.005958557128906
    5. 'i' → logprob: -12.755958557128906
    6. 'iev' → logprob: -12.755958557128906
    7. '_s' → logprob: -13.005958557128906
    8. '_i' → logprob: -13.505958557128906
    9. 'e' → logprob: -13.505958557128906
    10. 's' → logprob: -13.630958557128906

Token 105: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005240037105977535
    2. '(' → logprob: -5.255239963531494
    3. 'self' → logprob: -13.130240440368652
    4. '(
' → logprob: -13.130240440368652
    5. ' (' → logprob: -13.755240440368652
    6. '(s' → logprob: -14.380240440368652
    7. '(Self' → logprob: -14.755240440368652
    8. '   ' → logprob: -15.880240440368652
    9. '(sel' → logprob: -16.880239486694336
    10. ' self' → logprob: -17.005239486694336

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001766040368238464
    2. ' ,' → logprob: -9.000176429748535
    3. 'self' → logprob: -10.500176429748535
    4. '):' → logprob: -10.875176429748535
    5. '   ' → logprob: -12.875176429748535
    6. ')' → logprob: -13.375176429748535
    7. '       ' → logprob: -13.875176429748535
    8. ',
' → logprob: -15.250176429748535
    9. 'limit' → logprob: -15.625176429748535
    10. '):
' → logprob: -15.750176429748535

Token 107: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.17332659661769867
    2. 'self' → logprob: -2.5483264923095703
    3. ' limit' → logprob: -2.6733264923095703
    4. ' self' → logprob: -4.54832649230957
    5. 'n' → logprob: -7.54832649230957
    6. '   ' → logprob: -8.04832649230957
    7. ' n' → logprob: -8.29832649230957
    8. ')' → logprob: -9.04832649230957
    9. ' ' → logprob: -11.04832649230957
    10. 'max' → logprob: -11.17332649230957

Token 108: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1638980209827423
    2. ':' → logprob: -1.91389799118042
    3. ')' → logprob: -6.03889799118042
    4. '):
' → logprob: -6.78889799118042
    5. '   ' → logprob: -9.538898468017578
    6. ':int' → logprob: -10.163898468017578
    7. ' ):' → logprob: -10.913898468017578
    8. '       ' → logprob: -11.163898468017578
    9. '):
' → logprob: -12.538898468017578
    10. ' :' → logprob: -13.288898468017578

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2520110011100769
    2. ' int' → logprob: -1.5020110607147217
    3. ')' → logprob: -9.7520112991333
    4. 'self' → logprob: -11.6270112991333
    5. '   ' → logprob: -12.3770112991333
    6. '):
' → logprob: -12.6270112991333
    7. ' self' → logprob: -13.5020112991333
    8. '       ' → logprob: -13.6270112991333
    9. '):' → logprob: -13.8770112991333
    10. '(int' → logprob: -13.8770112991333

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048734527081251144
    2. '):' → logprob: -3.048734426498413
    3. '):
' → logprob: -9.173734664916992
    4. ')->' → logprob: -10.548734664916992
    5. ':' → logprob: -11.923734664916992
    6. ' )' → logprob: -12.173734664916992
    7. '   ' → logprob: -12.923734664916992
    8. '):
' → logprob: -13.423734664916992
    9. ' ):' → logprob: -13.798734664916992
    10. '):

' → logprob: -15.423734664916992

Token 111: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008048642775975168
    2. '):' → logprob: -7.875804901123047
    3. ':
' → logprob: -8.875804901123047
    4. '->' → logprob: -9.000804901123047
    5. ' ->' → logprob: -9.125804901123047
    6. ')' → logprob: -10.750804901123047
    7. ')->' → logprob: -11.000804901123047
    8. '():' → logprob: -12.375804901123047
    9. '):
' → logprob: -13.000804901123047
    10. ' :' → logprob: -13.125804901123047

Token 112: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011442353948950768
    2. 'List' → logprob: -4.636442184448242
    3. '[list' → logprob: -7.011442184448242
    4. ' list' → logprob: -7.386442184448242
    5. '[' → logprob: -9.261442184448242
    6. '[List' → logprob: -9.886442184448242
    7. '[]' → logprob: -11.636442184448242
    8. 'None' → logprob: -13.011442184448242
    9. '[]
' → logprob: -13.511442184448242
    10. 'byte' → logprob: -14.011442184448242

Token 113: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027944764122366905
    2. ':
' → logprob: -3.652944803237915
    3. '       ' → logprob: -6.777944564819336
    4. '[' → logprob: -8.152944564819336
    5. '):' → logprob: -9.402944564819336
    6. '   ' → logprob: -9.777944564819336
    7. '(self' → logprob: -10.527944564819336
    8. '):
' → logprob: -11.277944564819336
    9. '():' → logprob: -11.777944564819336
    10. ':
' → logprob: -12.027944564819336

Token 114: 'bool' (ID: 9037)
  Prédit: 'bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.759734732331708e-05
    2. ' bool' → logprob: -11.375017166137695
    3. 'int' → logprob: -12.250017166137695
    4. '   ' → logprob: -14.000017166137695
    5. '	bool' → logprob: -16.000017166137695
    6. '
' → logprob: -16.375017166137695
    7. '```' → logprob: -17.250017166137695
    8. ']' → logprob: -17.500017166137695
    9. '<bool' → logprob: -17.625017166137695
    10. 'b' → logprob: -18.000017166137695

Token 115: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.007824636995792389
    2. ']:
' → logprob: -4.882824420928955
    3. ']:
' → logprob: -8.632824897766113
    4. ']' → logprob: -10.257824897766113
    5. '):' → logprob: -13.132824897766113
    6. ':' → logprob: -13.757824897766113
    7. ' ]' → logprob: -14.132824897766113
    8. ']:

' → logprob: -14.257824897766113
    9. '   ' → logprob: -15.132824897766113
    10. '):
' → logprob: -15.757824897766113

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13932345807552338
    2. ':' → logprob: -2.2643234729766846
    3. ':
' → logprob: -4.3893232345581055
    4. '
' → logprob: -4.3893232345581055
    5. '   ' → logprob: -7.6393232345581055
    6. '        
' → logprob: -8.764323234558105
    7. '    
' → logprob: -9.139323234558105
    8. '):
' → logprob: -9.264323234558105
    9. '```' → logprob: -9.264323234558105
    10. 'n' → logprob: -9.389323234558105

Token 117: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.32513228058815
    2. 's' → logprob: -1.3251322507858276
    3. '       ' → logprob: -4.450132369995117
    4. '   ' → logprob: -9.200132369995117
    5. ' ' → logprob: -11.825132369995117
    6. '[s' → logprob: -13.075132369995117
    7. '
' → logprob: -13.450132369995117
    8. '	s' → logprob: -13.575132369995117
    9. '```' → logprob: -13.575132369995117
    10. '`s' → logprob: -13.700132369995117

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004621303640305996
    2. '=' → logprob: -5.379621505737305
    3. ':' → logprob: -15.129621505737305
    4. '[' → logprob: -15.379621505737305
    5. '   ' → logprob: -15.504621505737305
    6. 's' → logprob: -15.754621505737305
    7. ' ' → logprob: -16.504621505737305
    8. ' =[' → logprob: -16.504621505737305
    9. '	' → logprob: -17.504621505737305
    10. ']' → logprob: -17.629621505737305

Token 119: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20142094790935516
    2. ' [' → logprob: -1.7014209032058716
    3. ' ' → logprob: -12.451420783996582
    4. '   ' → logprob: -13.076420783996582
    5. '[self' → logprob: -14.576420783996582
    6. '[n' → logprob: -14.951420783996582
    7. '[start' → logprob: -15.826420783996582
    8. '[class' → logprob: -15.951420783996582
    9. '[name' → logprob: -16.5764217376709
    10. '[s' → logprob: -16.7014217376709

Token 120: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020652047533076257
    2. ' True' → logprob: -8.50020694732666
    3. 'False' → logprob: -12.75020694732666
    4. '(True' → logprob: -16.500205993652344
    5. '   ' → logprob: -17.875205993652344
    6. 'Tr' → logprob: -18.125205993652344
    7. '
' → logprob: -19.000205993652344
    8. '=True' → logprob: -21.625205993652344
    9. '.True' → logprob: -22.125205993652344
    10. ' False' → logprob: -22.750205993652344

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19542191922664642
    2. ' for' → logprob: -1.8204219341278076
    3. ',' → logprob: -4.3204216957092285
    4. ']*' → logprob: -6.8204216957092285
    5. ' ' → logprob: -7.8204216957092285
    6. 'for' → logprob: -7.8204216957092285
    7. ' ]' → logprob: -8.695422172546387
    8. ' if' → logprob: -9.320422172546387
    9. ']*(' → logprob: -9.570422172546387
    10. ')' → logprob: -11.445422172546387

Token 122: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07096410542726517
    2. ' for' → logprob: -2.9459640979766846
    3. ']' → logprob: -4.195964336395264
    4. ',
' → logprob: -8.570963859558105
    5. ' ,' → logprob: -8.695963859558105
    6. 'for' → logprob: -8.820963859558105
    7. ']*' → logprob: -9.070963859558105
    8. ' if' → logprob: -9.445963859558105
    9. ']+' → logprob: -10.070963859558105
    10. '[' → logprob: -10.195963859558105

Token 123: ' (' (ID: 350)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.0004446124075911939
    2. '(max' → logprob: -8.500444412231445
    3. ' (' → logprob: -8.750444412231445
    4. '(' → logprob: -9.750444412231445
    5. '(l' → logprob: -10.875444412231445
    6. '(index' → logprob: -14.250444412231445
    7. '(lambda' → logprob: -14.250444412231445
    8. '(end' → logprob: -14.750444412231445
    9. '(len' → logprob: -14.750444412231445
    10. '(order' → logprob: -15.000444412231445

Token 124: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0004497381451074034
    2. ' limit' → logprob: -7.7504496574401855
    3. '(limit' → logprob: -10.875450134277344
    4. '   ' → logprob: -16.375450134277344
    5. 'lim' → logprob: -16.750450134277344
    6. ' ' → logprob: -19.500450134277344
    7. '_limit' → logprob: -19.750450134277344
    8. '    ' → logprob: -19.875450134277344
    9. '-limit' → logprob: -19.875450134277344
    10. '.limit' → logprob: -20.250450134277344

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01416398212313652
    2. ' +' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.139163970947266
    4. '+
' → logprob: -15.889163970947266
    5. ' plus' → logprob: -17.514163970947266
    6. ' +
' → logprob: -17.639163970947266
    7. '   ' → logprob: -18.889163970947266
    8. ')' → logprob: -19.014163970947266
    9. '+)' → logprob: -19.139163970947266
    10. '1' → logprob: -19.389163970947266

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. '2' → logprob: -16.643150329589844
    4. '  ' → logprob: -17.143150329589844
    5. '```' → logprob: -17.518150329589844
    6. '   ' → logprob: -17.643150329589844
    7. '
' → logprob: -18.018150329589844
    8. ')' → logprob: -19.018150329589844
    9. ' ' → logprob: -19.018150329589844
    10. '۱' → logprob: -19.580650329589844

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.625011444091797
    4. '```' → logprob: -20.000011444091797
    5. '2' → logprob: -20.250011444091797
    6. '0' → logprob: -20.625011444091797
    7. '  ' → logprob: -20.875011444091797
    8. '{' → logprob: -21.250011444091797
    9. '
' → logprob: -21.437511444091797
    10. '7' → logprob: -21.937511444091797

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12701429426670074
    2. ')
' → logprob: -2.127014398574829
    3. '
' → logprob: -10.75201416015625
    4. '       ' → logprob: -10.87701416015625
    5. '<|end|>' → logprob: -11.00201416015625
    6. ')
' → logprob: -11.37701416015625
    7. ')

' → logprob: -12.12701416015625
    8. ' )' → logprob: -12.62701416015625
    9. ' )
' → logprob: -13.00201416015625
    10. ')\
' → logprob: -13.75201416015625

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11942798644304276
    2. 's' → logprob: -2.6194279193878174
    3. '
' → logprob: -4.6194281578063965
    4. '<|end|>' → logprob: -4.6194281578063965
    5. '        
' → logprob: -4.9944281578063965
    6. ' for' → logprob: -5.6194281578063965
    7. ' 
' → logprob: -5.8694281578063965
    8. 'for' → logprob: -6.1194281578063965
    9. ' ' → logprob: -6.2444281578063965
    10. ' sieve' → logprob: -6.8694281578063965

Token 130: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04542355239391327
    2. ' sieve' → logprob: -3.2954235076904297
    3. '       ' → logprob: -4.92042350769043
    4. ' ' → logprob: -10.79542350769043
    5. '   ' → logprob: -11.17042350769043
    6. 'for' → logprob: -11.54542350769043
    7. 'if' → logprob: -12.29542350769043
    8. '        
' → logprob: -12.79542350769043
    9. ' if' → logprob: -13.29542350769043
    10. '```' → logprob: -13.54542350769043

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -16.25
    3. ' [' → logprob: -16.5
    4. '```' → logprob: -18.125
    5. '[:' → logprob: -19.125
    6. ' ' → logprob: -20.125
    7. '\[' → logprob: -20.25
    8. '<|end|>' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. '<|end|>' → logprob: -22.0

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002639582962729037
    2. ' ' → logprob: -8.250264167785645
    3. ':' → logprob: -13.625264167785645
    4. '[' → logprob: -14.750264167785645
    5. '1' → logprob: -14.875264167785645
    6. '   ' → logprob: -15.625264167785645
    7. ')' → logprob: -15.875264167785645
    8. '  ' → logprob: -16.000263214111328
    9. ' :' → logprob: -16.375263214111328
    10. '2' → logprob: -16.625263214111328

Token 133: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008788274135440588
    2. ' ]' → logprob: -7.125878810882568
    3. ']=' → logprob: -9.625879287719727
    4. '],' → logprob: -12.500879287719727
    5. ' =' → logprob: -13.625879287719727
    6. ':' → logprob: -13.750879287719727
    7. '=' → logprob: -14.625879287719727
    8. ',' → logprob: -14.750879287719727
    9. ')' → logprob: -15.250879287719727
    10. ' ' → logprob: -15.250879287719727

Token 134: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.00030197695014066994
    2. 's' → logprob: -8.2503023147583
    3. ' ' → logprob: -10.3753023147583
    4. '	s' → logprob: -12.5003023147583
    5. ' ' → logprob: -12.7503023147583
    6. '<|end|>' → logprob: -13.8753023147583
    7. ' False' → logprob: -14.3753023147583
    8. ' s' → logprob: -14.6253023147583
    9. ' 
' → logprob: -15.1253023147583
    10. '(s' → logprob: -16.125301361083984

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03689311072230339
    2. ' =' → logprob: -3.411893129348755
    3. '<|end|>' → logprob: -5.911892890930176
    4. '=' → logprob: -8.536892890930176
    5. '[
' → logprob: -8.661892890930176
    6. '[]' → logprob: -10.661892890930176
    7. '<|end|>' → logprob: -10.786892890930176
    8. ' ' → logprob: -10.786892890930176
    9. ' [' → logprob: -11.286892890930176
    10. '1' → logprob: -11.411892890930176

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015052208909764886
    2. ' ' → logprob: -6.501505374908447
    3. 'False' → logprob: -13.001504898071289
    4. '[' → logprob: -15.751504898071289
    5. ' False' → logprob: -16.12650489807129
    6. 'True' → logprob: -16.87650489807129
    7. '  ' → logprob: -17.12650489807129
    8. '
' → logprob: -17.25150489807129
    9. ' True' → logprob: -17.93900489807129
    10. '   ' → logprob: -18.00150489807129

Token 137: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040447067469358444
    2. '=' → logprob: -3.4154469966888428
    3. ']' → logprob: -5.040447235107422
    4. ' ]' → logprob: -9.040447235107422
    5. ']=' → logprob: -9.165447235107422
    6. ' ' → logprob: -10.540447235107422
    7. '=False' → logprob: -10.665447235107422
    8. '<|end|>' → logprob: -11.040447235107422
    9. ')' → logprob: -11.415447235107422
    10. 'False' → logprob: -13.165447235107422

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889606058597565
    2. '=' → logprob: -2.5788960456848145
    3. ' =
' → logprob: -13.078896522521973
    4. ' ' → logprob: -13.078896522521973
    5. '=False' → logprob: -13.203896522521973
    6. '=
' → logprob: -16.328895568847656
    7. 'False' → logprob: -16.578895568847656
    8. ' =[' → logprob: -16.828895568847656
    9. '[' → logprob: -17.203895568847656
    10. '=True' → logprob: -17.328895568847656

Token 139: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4740772247314453
    2. ' False' → logprob: -0.9740772247314453
    3. '(False' → logprob: -15.349077224731445
    4. '[' → logprob: -17.974077224731445
    5. '=False' → logprob: -18.849077224731445
    6. '.False' → logprob: -19.724077224731445
    7. 'F' → logprob: -20.099077224731445
    8. '
' → logprob: -20.474077224731445
    9. '   ' → logprob: -20.974077224731445
    10. '_false' → logprob: -20.974077224731445

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006155712064355612
    2. '<|end|>' → logprob: -5.256155490875244
    3. ',
' → logprob: -7.256155490875244
    4. ' ,' → logprob: -9.006155967712402
    5. ',None' → logprob: -9.631155967712402
    6. '<|end|>' → logprob: -11.506155967712402
    7. '
' → logprob: -12.381155967712402
    8. ',true' → logprob: -12.506155967712402
    9. ',\
' → logprob: -13.381155967712402
    10. ',List' → logprob: -13.881155967712402

Token 141: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.10020710527896881
    2. 'False' → logprob: -2.3502070903778076
    3. '(False' → logprob: -14.725207328796387
    4. '=False' → logprob: -17.10020637512207
    5. '.False' → logprob: -17.60020637512207
    6. ' True' → logprob: -17.97520637512207
    7. ' ' → logprob: -19.10020637512207
    8. ' ' → logprob: -19.35020637512207
    9. '_false' → logprob: -19.47520637512207
    10. '   ' → logprob: -20.47520637512207

Token 142: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006567468401044607
    2. '<|end|>' → logprob: -5.381567478179932
    3. ' for' → logprob: -7.006567478179932
    4. '       ' → logprob: -7.131567478179932
    5. 'for' → logprob: -9.381567001342773
    6. '
' → logprob: -9.381567001342773
    7. '<|end|>' → logprob: -10.506567001342773
    8. ' 
' → logprob: -11.006567001342773
    9. '  
' → logprob: -11.881567001342773
    10. '        
' → logprob: -12.506567001342773

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39708253741264343
    2. '
' → logprob: -1.3970825672149658
    3. ' for' → logprob: -3.022082567214966
    4. '<|end|>' → logprob: -3.522082567214966
    5. 'for' → logprob: -6.772082328796387
    6. ',' → logprob: -7.897082328796387
    7. '<|end|>' → logprob: -8.897082328796387
    8. '	for' → logprob: -9.272082328796387
    9. ' 
' → logprob: -9.772082328796387
    10. '
' → logprob: -9.772082328796387

Token 144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1606454998254776
    2. ' for' → logprob: -1.9106454849243164
    3. '       ' → logprob: -7.785645484924316
    4. '   ' → logprob: -12.535645484924316
    5. '	for' → logprob: -14.285645484924316
    6. 'import' → logprob: -14.535645484924316
    7. 'p' → logprob: -14.535645484924316
    8. ' ' → logprob: -15.910645484924316
    9. 'i' → logprob: -16.285646438598633
    10. ' i' → logprob: -17.035646438598633

Token 145: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008402384701184928
    2. ' p' → logprob: -7.625840187072754
    3. 'i' → logprob: -8.000840187072754
    4. ' number' → logprob: -11.750840187072754
    5. '	i' → logprob: -12.875840187072754
    6. ' num' → logprob: -13.000840187072754
    7. ' ' → logprob: -13.250840187072754
    8. '   ' → logprob: -14.375840187072754
    9. 'p' → logprob: -14.375840187072754
    10. ' current' → logprob: -14.750840187072754

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0062850830145180225
    2. 'in' → logprob: -5.506285190582275
    3. ' ' → logprob: -6.131285190582275
    4. ' i' → logprob: -11.881284713745117
    5. '2' → logprob: -12.131284713745117
    6. ',' → logprob: -12.756284713745117
    7. '  ' → logprob: -12.881284713745117
    8. '   ' → logprob: -12.881284713745117
    9. '	in' → logprob: -13.006284713745117
    10. 'range' → logprob: -13.631284713745117

Token 147: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0019293478690087795
    2. 'range' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.25192928314209
    4. '	range' → logprob: -16.251930236816406
    5. '(range' → logprob: -18.501930236816406
    6. '  ' → logprob: -19.001930236816406
    7. '   ' → logprob: -19.501930236816406
    8. ' xrange' → logprob: -19.876930236816406
    9. '2' → logprob: -20.001930236816406
    10. '.range' → logprob: -20.626930236816406

Token 148: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.574251918005757e-05
    2. '2' → logprob: -9.875055313110352
    3. ' (' → logprob: -13.000055313110352
    4. ' ' → logprob: -13.125055313110352
    5. '(
' → logprob: -16.87505531311035
    6. '   ' → logprob: -19.75005531311035
    7. '  ' → logprob: -20.75005531311035
    8. '
' → logprob: -21.00005531311035
    9. '```' → logprob: -21.37505531311035
    10. '[' → logprob: -21.75005531311035

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.250019073486328
    4. '
' → logprob: -16.750019073486328
    5. '(' → logprob: -18.000019073486328
    6. '  ' → logprob: -18.375019073486328
    7. '۲' → logprob: -18.750019073486328
    8. '```' → logprob: -19.125019073486328
    9. '２' → logprob: -19.250019073486328
    10. '    ' → logprob: -20.125019073486328

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008073674980551004
    2. ' ,' → logprob: -7.125807285308838
    3. ',int' → logprob: -12.875807762145996
    4. ' ' → logprob: -15.375807762145996
    5. ',
' → logprob: -16.87580680847168
    6. ',len' → logprob: -17.62580680847168
    7. '‌,' → logprob: -18.12580680847168
    8. ' ,
' → logprob: -19.00080680847168
    9. '   ' → logprob: -19.12580680847168
    10. ',i' → logprob: -19.25080680847168

Token 151: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07891006022691727
    2. 'int' → logprob: -2.5789101123809814
    3. '   ' → logprob: -11.453909873962402
    4. ' ' → logprob: -12.453909873962402
    5. '(int' → logprob: -12.578909873962402
    6. '	int' → logprob: -14.203909873962402
    7. '    ' → logprob: -14.203909873962402
    8. ' limit' → logprob: -14.828909873962402
    9. '  ' → logprob: -15.078909873962402
    10. ' (' → logprob: -16.07891082763672

Token 152: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.500012397766113
    3. '((' → logprob: -13.250012397766113
    4. 'limit' → logprob: -15.875012397766113
    5. '(
' → logprob: -16.750011444091797
    6. ' limit' → logprob: -17.250011444091797
    7. '(len' → logprob: -17.375011444091797
    8. '(s' → logprob: -18.125011444091797
    9. ' (' → logprob: -18.500011444091797
    10. '(pow' → logprob: -18.625011444091797

Token 153: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007606747094541788
    2. ' **' → logprob: -4.8826069831848145
    3. '(' → logprob: -15.132606506347656
    4. ' ' → logprob: -15.257606506347656
    5. ' (' → logprob: -16.132606506347656
    6. '(**' → logprob: -18.257606506347656
    7. '*' → logprob: -18.382606506347656
    8. '(limit' → logprob: -18.757606506347656
    9. '   ' → logprob: -18.882606506347656
    10. ')' → logprob: -18.882606506347656

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '(' → logprob: -16.375804901123047
    4. '.' → logprob: -17.250804901123047
    5. ' ' → logprob: -17.625804901123047
    6. '   ' → logprob: -18.125804901123047
    7. '  ' → logprob: -20.000804901123047
    8. '    ' → logprob: -20.625804901123047
    9. '
' → logprob: -20.625804901123047
    10. '2' → logprob: -20.625804901123047

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '(' → logprob: -17.12500762939453
    4. '.' → logprob: -17.62500762939453
    5. '   ' → logprob: -18.25000762939453
    6. ' ' → logprob: -19.62500762939453
    7. '2' → logprob: -20.37500762939453
    8. '

' → logprob: -20.50000762939453
    9. '  ' → logprob: -20.50000762939453
    10. '    ' → logprob: -20.87500762939453

Token 156: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8444881536415778e-05
    2. '0' → logprob: -10.625028610229492
    3. '5' → logprob: -13.125028610229492
    4. '2' → logprob: -14.000028610229492
    5. '1' → logprob: -14.500028610229492
    6. '3' → logprob: -15.625028610229492
    7. ' .' → logprob: -15.875028610229492
    8. '   ' → logprob: -17.000028610229492
    9. '```' → logprob: -17.000028610229492
    10. '6' → logprob: -17.250028610229492

Token 157: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -15.062501907348633
    3. '.' → logprob: -15.375001907348633
    4. '0' → logprob: -16.250001907348633
    5. '4' → logprob: -16.312501907348633
    6. '
' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.562501907348633
    8. '"' → logprob: -16.562501907348633
    9. '**' → logprob: -16.875001907348633
    10. '

' → logprob: -17.000001907348633

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001686962554231286
    2. ')+' → logprob: -6.501687049865723
    3. ' )' → logprob: -8.626687049865723
    4. '+' → logprob: -12.626687049865723
    5. ' +' → logprob: -13.876687049865723
    6. '   ' → logprob: -15.376687049865723
    7. '```' → logprob: -15.376687049865723
    8. '()' → logprob: -15.501687049865723
    9. ' ' → logprob: -15.501687049865723
    10. ']' → logprob: -16.751686096191406

Token 159: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3433346450328827
    2. '+' → logprob: -1.343334674835205
    3. ')' → logprob: -3.593334674835205
    4. ')+' → logprob: -6.218334674835205
    5. ' ' → logprob: -9.343334197998047
    6. ' )' → logprob: -11.218334197998047
    7. '   ' → logprob: -11.468334197998047
    8. '()' → logprob: -11.718334197998047
    9. ']' → logprob: -13.468334197998047
    10. ']+' → logprob: -13.843334197998047

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.001502990722656
    4. '  ' → logprob: -16.251502990722656
    5. '
' → logprob: -17.251502990722656
    6. '```' → logprob: -17.251502990722656
    7. ')' → logprob: -17.751502990722656
    8. '2' → logprob: -17.876502990722656
    9. '    ' → logprob: -18.126502990722656
    10. '(' → logprob: -18.376502990722656

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.6251802444458
    4. '  ' → logprob: -17.000179290771484
    5. '
' → logprob: -17.375179290771484
    6. '```' → logprob: -18.000179290771484
    7. '2' → logprob: -18.500179290771484
    8. ')' → logprob: -18.875179290771484
    9. '    ' → logprob: -18.937679290771484
    10. '

' → logprob: -19.937679290771484

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0682869404554367
    2. '):
' → logprob: -3.193286895751953
    3. ':' → logprob: -3.693286895751953
    4. ':
' → logprob: -9.818286895751953
    5. ')' → logprob: -11.693286895751953
    6. ' ):' → logprob: -12.068286895751953
    7. '   ' → logprob: -12.693286895751953
    8. '):
' → logprob: -12.693286895751953
    9. '       ' → logprob: -12.818286895751953
    10. ',' → logprob: -13.818286895751953

Token 163: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023788906633853912
    2. '       ' → logprob: -4.398788928985596
    3. ':
' → logprob: -5.273788928985596
    4. '           ' → logprob: -5.398788928985596
    5. '   ' → logprob: -6.773788928985596
    6. ',' → logprob: -9.273788452148438
    7. ' if' → logprob: -9.398788452148438
    8. '<|end|>' → logprob: -9.648788452148438
    9. '):' → logprob: -9.773788452148438
    10. '):
' → logprob: -10.398788452148438

Token 164: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2249307632446289
    2. '           ' → logprob: -2.599930763244629
    3. 'if' (adapté à ' if') → logprob: -2.724930763244629
    4. ':' → logprob: -3.724930763244629
    5. ' ' → logprob: -4.474930763244629
    6. '   ' → logprob: -4.724930763244629
    7. '    ' → logprob: -5.474930763244629
    8. '       ' → logprob: -5.599930763244629
    9. ':
' → logprob: -5.724930763244629
    10. '
' → logprob: -6.974930763244629

Token 165: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.04862244799733162
    2. 's' → logprob: -3.0486223697662354
    3. '	s' → logprob: -10.798622131347656
    4. ' ' → logprob: -11.673622131347656
    5. ' not' → logprob: -13.298622131347656
    6. ' ' → logprob: -13.673622131347656
    7. '   ' → logprob: -14.298622131347656
    8. 'sie' → logprob: -15.048622131347656
    9. '```' → logprob: -15.048622131347656
    10. 'not' → logprob: -15.173622131347656

Token 166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.061676347395405e-05
    2. '[' → logprob: -10.00005054473877
    3. ' [' → logprob: -12.25005054473877
    4. '[
' → logprob: -16.125051498413086
    5. '[I' → logprob: -16.625051498413086
    6. '   ' → logprob: -17.125051498413086
    7. '```' → logprob: -18.250051498413086
    8. 'i' → logprob: -18.875051498413086
    9. '[s' → logprob: -19.125051498413086
    10. ' ' → logprob: -19.250051498413086

Token 167: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00930219329893589
    2. ']:
' → logprob: -5.134302139282227
    3. ']' → logprob: -5.759302139282227
    4. ':' → logprob: -8.884302139282227
    5. ' ]' → logprob: -10.259302139282227
    6. ']==' → logprob: -10.509302139282227
    7. ']=' → logprob: -12.384302139282227
    8. ']:

' → logprob: -13.009302139282227
    9. ']:
' → logprob: -13.134302139282227
    10. '):' → logprob: -13.884302139282227

Token 168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009128324687480927
    2. ':' → logprob: -5.259128093719482
    3. ':
' → logprob: -5.884128093719482
    4. '           ' → logprob: -7.759128093719482
    5. ' for' → logprob: -8.00912857055664
    6. '<|end|>' → logprob: -9.50912857055664
    7. '                
' → logprob: -10.00912857055664
    8. ',' → logprob: -10.00912857055664
    9. 'for' → logprob: -10.25912857055664
    10. '       ' → logprob: -10.88412857055664

Token 169: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0009983942145481706
    2. '               ' → logprob: -7.500998497009277
    3. 'for' (adapté à ' for') → logprob: -7.875998497009277
    4. ' ' → logprob: -10.750998497009277
    5. '           ' → logprob: -11.000998497009277
    6. ' ' → logprob: -11.250998497009277
    7. '
' → logprob: -12.500998497009277
    8. '   ' → logprob: -12.500998497009277
    9. '                ' → logprob: -13.000998497009277
    10. ' j' → logprob: -14.125998497009277

Token 170: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.005235648714005947
    2. 'j' → logprob: -5.25523567199707
    3. '	j' → logprob: -13.38023567199707
    4. ' multiple' → logprob: -15.63023567199707
    5. ' ' → logprob: -16.13023567199707
    6. '*j' → logprob: -16.75523567199707
    7. '   ' → logprob: -17.00523567199707
    8. ' multiples' → logprob: -17.50523567199707
    9. '```' → logprob: -18.00523567199707
    10. '$j' → logprob: -18.63023567199707

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02057996205985546
    2. 'in' → logprob: -3.8955800533294678
    3. '=' → logprob: -11.145580291748047
    4. ' ' → logprob: -11.645580291748047
    5. '	in' → logprob: -11.895580291748047
    6. ' i' → logprob: -12.770580291748047
    7. ' =' → logprob: -13.895580291748047
    8. 'n' → logprob: -14.395580291748047
    9. '<|end|>' → logprob: -15.020580291748047
    10. 'In' → logprob: -15.020580291748047

Token 172: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931709051132202
    2. 'range' → logprob: -0.6931709051132202
    3. '   ' → logprob: -11.068170547485352
    4. ' ' → logprob: -12.443170547485352
    5. '	range' → logprob: -13.443170547485352
    6. '  ' → logprob: -13.818170547485352
    7. '(range' → logprob: -14.068170547485352
    8. '    ' → logprob: -14.193170547485352
    9. 'r' → logprob: -16.81817054748535
    10. '     ' → logprob: -17.44317054748535

Token 173: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.613945101387799e-05
    2. '(' → logprob: -9.375085830688477
    3. ' i' → logprob: -14.875085830688477
    4. ' (' → logprob: -15.000085830688477
    5. '(
' → logprob: -15.375085830688477
    6. 'i' → logprob: -15.625085830688477
    7. '   ' → logprob: -15.875085830688477
    8. '	i' → logprob: -17.875085830688477
    9. '(j' → logprob: -18.250085830688477
    10. '(I' → logprob: -19.000085830688477

Token 174: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3137820065021515
    2. '*i' → logprob: -1.313781976699829
    3. ' *' → logprob: -7.563782215118408
    4. 'i' → logprob: -14.31378173828125
    5. '*j' → logprob: -14.56378173828125
    6. '**' → logprob: -16.31378173828125
    7. '*
' → logprob: -17.43878173828125
    8. ' ' → logprob: -17.43878173828125
    9. '2' → logprob: -18.43878173828125
    10. '*,' → logprob: -18.56378173828125

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001434690784662962
    2. ' i' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.375143051147461
    4. '2' → logprob: -13.500143051147461
    5. ' ' → logprob: -15.000143051147461
    6. 'j' → logprob: -15.625143051147461
    7. '	i' → logprob: -16.37514305114746
    8. '  ' → logprob: -16.50014305114746
    9. '
' → logprob: -18.12514305114746
    10. '    ' → logprob: -18.75014305114746

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ' ,' → logprob: -9.875051498413086
    3. ',len' → logprob: -16.625051498413086
    4. 'limit' → logprob: -16.750051498413086
    5. ',
' → logprob: -17.000051498413086
    6. '(limit' → logprob: -18.875051498413086
    7. '

' → logprob: -19.500051498413086
    8. '
' → logprob: -20.000051498413086
    9. '   ' → logprob: -20.125051498413086
    10. ' limit' → logprob: -20.250051498413086

Token 177: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.31332698464393616
    2. ' limit' → logprob: -1.3133269548416138
    3. '(limit' → logprob: -9.938326835632324
    4. '    ' → logprob: -11.938326835632324
    5. '   ' → logprob: -12.063326835632324
    6. ' ' → logprob: -13.688326835632324
    7. '
' → logprob: -13.688326835632324
    8. '.limit' → logprob: -14.063326835632324
    9. '_limit' → logprob: -14.563326835632324
    10. 'lim' → logprob: -15.563326835632324

Token 178: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859565943479538
    2. ' +' → logprob: -3.048595666885376
    3. ',' → logprob: -12.048595428466797
    4. '   ' → logprob: -13.423595428466797
    5. '
' → logprob: -15.298595428466797
    6. '+
' → logprob: -15.423595428466797
    7. ' ' → logprob: -15.548595428466797
    8. ' ,' → logprob: -16.048595428466797
    9. '+,' → logprob: -16.923595428466797
    10. '1' → logprob: -17.298595428466797

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.625021934509277
    4. '
' → logprob: -16.62502098083496
    5. ',' → logprob: -17.75002098083496
    6. ')' → logprob: -18.25002098083496
    7. '  ' → logprob: -18.62502098083496
    8. '```' → logprob: -18.87502098083496
    9. '    ' → logprob: -19.75002098083496
    10. '     ' → logprob: -20.00002098083496

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.625009536743164
    4. '
' → logprob: -18.625009536743164
    5. ',' → logprob: -19.000009536743164
    6. '  ' → logprob: -19.375009536743164
    7. ')' → logprob: -20.375009536743164
    8. '    ' → logprob: -20.750009536743164
    9. '

' → logprob: -20.750009536743164
    10. '```' → logprob: -21.000009536743164

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006998073076829314
    2. ',i' → logprob: -7.500699996948242
    3. ' ,' → logprob: -9.125699996948242
    4. ',j' → logprob: -11.000699996948242
    5. '               ' → logprob: -11.625699996948242
    6. '                   ' → logprob: -11.625699996948242
    7. ',
' → logprob: -13.625699996948242
    8. '```' → logprob: -14.750699996948242
    9. '           ' → logprob: -15.375699996948242
    10. ':i' → logprob: -15.500699996948242

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1602257490158081
    2. ' i' → logprob: -1.910225749015808
    3. '	i' → logprob: -13.785225868225098
    4. ')i' → logprob: -15.785225868225098
    5. ')' → logprob: -16.41022491455078
    6. '   ' → logprob: -16.41022491455078
    7. '                   ' → logprob: -16.91022491455078
    8. ' ' → logprob: -17.28522491455078
    9. ',i' → logprob: -17.53522491455078
    10. ' ' → logprob: -17.66022491455078

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14274325966835022
    2. '):
' → logprob: -2.0177433490753174
    3. ')' → logprob: -10.642743110656738
    4. '*i' → logprob: -11.142743110656738
    5. ' ):' → logprob: -11.517743110656738
    6. '):
' → logprob: -11.892743110656738
    7. '[i' → logprob: -13.017743110656738
    8. ',' → logprob: -13.017743110656738
    9. 'i' → logprob: -13.517743110656738
    10. ':' → logprob: -13.642743110656738

Token 184: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08258961141109467
    2. 's' → logprob: -2.707589626312256
    3. ' sieve' → logprob: -4.582589626312256
    4. '                       ' → logprob: -6.207589626312256
    5. '               ' → logprob: -8.582589149475098
    6. '           ' → logprob: -10.082589149475098
    7. '                           ' → logprob: -10.332589149475098
    8. '                    
' → logprob: -10.332589149475098
    9. '                  ' → logprob: -11.457589149475098
    10. '                    ' → logprob: -12.207589149475098

Token 185: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0037996075116097927
    2. ' sieve' → logprob: -5.6287994384765625
    3. '                   ' → logprob: -9.128799438476562
    4. '                       ' → logprob: -9.628799438476562
    5. '   ' → logprob: -12.003799438476562
    6. ' ' → logprob: -12.628799438476562
    7. '               ' → logprob: -12.753799438476562
    8. '       ' → logprob: -13.253799438476562
    9. '           ' → logprob: -13.503799438476562
    10. '  ' → logprob: -13.628799438476562

Token 186: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012928384239785373
    2. '[' → logprob: -9.000129699707031
    3. '[
' → logprob: -13.500129699707031
    4. '```' → logprob: -13.500129699707031
    5. '[js' → logprob: -14.125129699707031
    6. '][' → logprob: -14.625129699707031
    7. '[J' → logprob: -14.625129699707031
    8. '
' → logprob: -15.000129699707031
    9. '[i' → logprob: -15.250129699707031
    10. 'j' → logprob: -15.375129699707031

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002922022540587932
    2. ' ]' → logprob: -8.37529182434082
    3. ']=' → logprob: -9.75029182434082
    4. '=' → logprob: -12.87529182434082
    5. ']
' → logprob: -14.25029182434082
    6. ' =' → logprob: -15.75029182434082
    7. ')' → logprob: -17.12529182434082
    8. ' ' → logprob: -17.25029182434082
    9. ']

' → logprob: -18.75029182434082
    10. '
' → logprob: -19.12529182434082

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061991218477487564
    2. ' =' → logprob: -2.8119912147521973
    3. '=False' → logprob: -10.686991691589355
    4. ']' → logprob: -15.061991691589355
    5. ']=' → logprob: -15.561991691589355
    6. 'False' → logprob: -15.686991691589355
    7. ' ' → logprob: -17.18699073791504
    8. ' False' → logprob: -17.18699073791504
    9. ')' → logprob: -17.31199073791504
    10. '=True' → logprob: -17.43699073791504

Token 189: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0024756586644798517
    2. ' False' → logprob: -6.002475738525391
    3. '(False' → logprob: -20.25247573852539
    4. '=False' → logprob: -21.37747573852539
    5. '.False' → logprob: -22.25247573852539
    6. '_false' → logprob: -23.37747573852539
    7. 'false' → logprob: -23.62747573852539
    8. '   ' → logprob: -25.37747573852539
    9. 'F' → logprob: -25.87747573852539
    10. 'True' → logprob: -26.25247573852539

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04345790296792984
    2. '
' → logprob: -3.2934579849243164
    3. 'return' → logprob: -5.543457984924316
    4. ' return' → logprob: -7.043457984924316
    5. '        
' → logprob: -8.293457984924316
    6. '    
' → logprob: -9.418457984924316
    7. '<|end|>' → logprob: -9.668457984924316
    8. '   ' → logprob: -10.043457984924316
    9. '  
' → logprob: -10.293457984924316
    10. '	' → logprob: -10.293457984924316

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007763731759041548
    2. 'return' → logprob: -5.757763862609863
    3. '
' → logprob: -6.132763862609863
    4. ' return' → logprob: -6.257763862609863
    5. '<|end|>' → logprob: -8.757763862609863
    6. '        
' → logprob: -9.132763862609863
    7. '	return' → logprob: -9.632763862609863
    8. '   ' → logprob: -10.257763862609863
    9. '	' → logprob: -10.632763862609863
    10. '    
' → logprob: -10.757763862609863

Token 192: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1027158722281456
    2. 'return' (adapté à ' return') → logprob: -2.3527159690856934
    3. ' return' → logprob: -6.227715969085693
    4. '   ' → logprob: -7.727715969085693
    5. '	return' → logprob: -9.977715492248535
    6. '
' → logprob: -10.727715492248535
    7. '	' → logprob: -11.102715492248535
    8. '           ' → logprob: -12.977715492248535
    9. '        
' → logprob: -13.477715492248535
    10. ' ' → logprob: -13.602715492248535

Token 193: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10021066665649414
    2. ' sieve' → logprob: -2.350210666656494
    3. 'sie' → logprob: -12.725210189819336
    4. '	s' → logprob: -14.975210189819336
    5. 'se' → logprob: -15.850210189819336
    6. '[s' → logprob: -15.975210189819336
    7. ' ' → logprob: -16.225210189819336
    8. 'self' → logprob: -16.225210189819336
    9. ' ' → logprob: -16.725210189819336
    10. '```' → logprob: -16.975210189819336

Token 194: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11819184571504593
    2. '<|end|>' → logprob: -3.118191957473755
    3. '   ' → logprob: -3.243191957473755
    4. 'def' → logprob: -4.118191719055176
    5. '    
' → logprob: -4.743191719055176
    6. '  
' → logprob: -6.618191719055176
    7. '

' → logprob: -6.993191719055176
    8. '<|end|>' → logprob: -8.243191719055176
    9. ' def' → logprob: -8.368191719055176
    10. '```' → logprob: -8.868191719055176

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04199026897549629
    2. 'def' → logprob: -3.291990280151367
    3. '
' → logprob: -6.166990280151367
    4. '    
' → logprob: -6.666990280151367
    5. ' def' → logprob: -7.541990280151367
    6. '```' → logprob: -11.291990280151367
    7. '  
' → logprob: -11.541990280151367
    8. '        
' → logprob: -12.291990280151367
    9. ' 
' → logprob: -12.416990280151367
    10. '	def' → logprob: -12.791990280151367

Token 196: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015062900492921472
    2. ' def' → logprob: -6.751506328582764
    3. '   ' → logprob: -8.001505851745605
    4. '
' → logprob: -14.126505851745605
    5. '    
' → logprob: -15.626505851745605
    6. ' ' → logprob: -16.001506805419922
    7. '	def' → logprob: -16.126506805419922
    8. '

' → logprob: -18.001506805419922
    9. '  ' → logprob: -18.376506805419922
    10. '```' → logprob: -18.626506805419922

Token 197: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06205742433667183
    2. 'is' → logprob: -2.8120574951171875
    3. ' ' → logprob: -10.187057495117188
    4. ' def' → logprob: -10.687057495117188
    5. 'def' → logprob: -10.937057495117188
    6. '   ' → logprob: -12.562057495117188
    7. ' next' → logprob: -12.812057495117188
    8. 'next' → logprob: -13.687057495117188
    9. '
' → logprob: -14.312057495117188
    10. '  ' → logprob: -14.437057495117188

Token 198: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.023314308375120163
    2. '_' → logprob: -3.7733142375946045
    3. ' _' → logprob: -9.648314476013184
    4. '_pr' → logprob: -14.023314476013184
    5. ''_' → logprob: -14.273314476013184
    6. '_pal' → logprob: -14.773314476013184
    7. '_primary' → logprob: -15.023314476013184
    8. ')_' → logprob: -15.023314476013184
    9. '_prior' → logprob: -15.898314476013184
    10. '}_' → logprob: -15.898314476013184

Token 199: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008617054671049118
    2. '(' → logprob: -4.758616924285889
    3. '(
' → logprob: -13.258617401123047
    4. ' (' → logprob: -15.133617401123047
    5. 'self' → logprob: -15.508617401123047
    6. '(s' → logprob: -15.883617401123047
    7. '(sel' → logprob: -16.383617401123047
    8. '   ' → logprob: -17.383617401123047
    9. '(Self' → logprob: -17.633617401123047
    10. ' ' → logprob: -18.133617401123047

Token 200: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000768413650803268
    2. '(' → logprob: -7.250768184661865
    3. 'self' → logprob: -10.875768661499023
    4. ')' → logprob: -11.125768661499023
    5. ',' → logprob: -11.500768661499023
    6. ' (' → logprob: -11.500768661499023
    7. '(
' → logprob: -13.250768661499023
    8. ')(' → logprob: -13.500768661499023
    9. '   ' → logprob: -15.000768661499023
    10. ',self' → logprob: -15.375768661499023

Token 201: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3139277398586273
    2. 'num' → logprob: -1.3139277696609497
    3. ' self' → logprob: -7.93892765045166
    4. 'self' → logprob: -8.81392765045166
    5. ' n' → logprob: -9.68892765045166
    6. ' start' → logprob: -9.93892765045166
    7. 'n' → logprob: -10.43892765045166
    8. ' number' → logprob: -11.56392765045166
    9. 'start' → logprob: -11.68892765045166
    10. 'number' → logprob: -12.93892765045166

Token 202: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2036123275756836
    2. '):' → logprob: -2.0786123275756836
    3. ':' → logprob: -3.0786123275756836
    4. ' )' → logprob: -5.203612327575684
    5. '   ' → logprob: -5.703612327575684
    6. '):
' → logprob: -5.953612327575684
    7. ' ):' → logprob: -7.203612327575684
    8. ',' → logprob: -7.578612327575684
    9. '       ' → logprob: -8.703612327575684
    10. ' ' → logprob: -9.703612327575684

Token 203: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.29116731882095337
    2. ' num' → logprob: -1.9161672592163086
    3. 'int' → logprob: -2.4161672592163086
    4. 'num' → logprob: -4.666167259216309
    5. ')' → logprob: -5.666167259216309
    6. ' ' → logprob: -5.791167259216309
    7. ' )' → logprob: -8.541167259216309
    8. '   ' → logprob: -10.916167259216309
    9. '(int' → logprob: -11.416167259216309
    10. ':int' → logprob: -11.541167259216309

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7292167184641585e-05
    2. '):' → logprob: -10.000057220458984
    3. ' )' → logprob: -11.375057220458984
    4. '   ' → logprob: -15.375057220458984
    5. '):
' → logprob: -17.125057220458984
    6. ':' → logprob: -17.500057220458984
    7. ')->' → logprob: -17.625057220458984
    8. ' ):' → logprob: -18.625057220458984
    9. '       ' → logprob: -18.875057220458984
    10. '`)' → logprob: -19.125057220458984

Token 205: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006100027821958065
    2. '):' → logprob: -5.256100177764893
    3. ')' → logprob: -7.381100177764893
    4. '   ' → logprob: -9.631099700927734
    5. ' :' → logprob: -9.881099700927734
    6. '       ' → logprob: -9.881099700927734
    7. ' ->' → logprob: -10.381099700927734
    8. ':return' → logprob: -11.631099700927734
    9. ')->' → logprob: -11.756099700927734
    10. '):
' → logprob: -11.881099700927734

Token 206: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.01163444947451353
    2. 'bool' → logprob: -5.011634349822998
    3. ' int' → logprob: -5.761634349822998
    4. ' True' → logprob: -6.886634349822998
    5. ' num' → logprob: -7.511634349822998
    6. 'int' → logprob: -9.761634826660156
    7. ' self' → logprob: -10.011634826660156
    8. ' ' → logprob: -10.511634826660156
    9. 'num' → logprob: -10.511634826660156
    10. 'True' → logprob: -11.011634826660156

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027947761118412018
    2. '):' → logprob: -6.5027947425842285
    3. ':
' → logprob: -7.1277947425842285
    4. '       ' → logprob: -8.127795219421387
    5. '):
' → logprob: -9.502795219421387
    6. ')' → logprob: -10.752795219421387
    7. '   ' → logprob: -10.752795219421387
    8. ':return' → logprob: -11.002795219421387
    9. '<|end|>' → logprob: -11.127795219421387
    10. ',' → logprob: -11.377795219421387

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18131622672080994
    2. ' return' → logprob: -1.8063162565231323
    3. 'return' → logprob: -6.556316375732422
    4. ' 
' → logprob: -10.181316375732422
    5. ' if' → logprob: -10.681316375732422
    6. '
' → logprob: -10.681316375732422
    7. '   ' → logprob: -10.681316375732422
    8. ':' → logprob: -11.431316375732422
    9. ' ' → logprob: -11.931316375732422
    10. '    ' → logprob: -12.181316375732422

Token 209: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27794572710990906
    2. ' return' → logprob: -2.0279457569122314
    3. 'return' → logprob: -2.7779457569122314
    4. 'if' (adapté à ' if') → logprob: -3.0279457569122314
    5. '       ' → logprob: -7.652945518493652
    6. '0' → logprob: -14.402945518493652
    7. '   ' → logprob: -16.02794647216797
    8. ' ' → logprob: -17.65294647216797
    9. 'num' → logprob: -18.40294647216797
    10. '	return' → logprob: -18.52794647216797

Token 210: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7340893149375916
    2. 'num' → logprob: -1.4840893745422363
    3. ' ' → logprob: -1.8590893745422363
    4. '0' → logprob: -1.9840893745422363
    5. ' not' → logprob: -11.984088897705078
    6. '1' → logprob: -12.109088897705078
    7. '	num' → logprob: -12.109088897705078
    8. '(num' → logprob: -12.109088897705078
    9. '   ' → logprob: -12.734088897705078
    10. '<num' → logprob: -13.484088897705078

Token 211: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8012459874153137
    2. ' <' → logprob: -0.9262459874153137
    3. ' >' → logprob: -2.801245927810669
    4. ' <=' → logprob: -3.176245927810669
    5. '>' → logprob: -3.426245927810669
    6. '<=' → logprob: -3.926245927810669
    7. '>=' → logprob: -8.30124568939209
    8. ' >=' → logprob: -8.67624568939209
    9. ' ' → logprob: -9.67624568939209
    10. '   ' → logprob: -13.05124568939209

Token 212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03841106593608856
    2. ' self' → logprob: -3.2884111404418945
    3. '0' → logprob: -7.9134111404418945
    4. ' ' → logprob: -12.663411140441895
    5. '1' → logprob: -15.413411140441895
    6. '(self' → logprob: -16.288410186767578
    7. '   ' → logprob: -16.538410186767578
    8. 's' → logprob: -16.913410186767578
    9. '	self' → logprob: -16.913410186767578
    10. '
' → logprob: -17.538410186767578

Token 213: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -1.5048530030981055e-06
    2. 'limit' → logprob: -13.500001907348633
    3. '.' → logprob: -16.125001907348633
    4. '.l' → logprob: -17.000001907348633
    5. ' limit' → logprob: -18.750001907348633
    6. ' .' → logprob: -19.125001907348633
    7. 'Limit' → logprob: -19.250001907348633
    8. '(limit' → logprob: -20.875001907348633
    9. '-limit' → logprob: -21.000001907348633
    10. '_limit' → logprob: -21.125001907348633

Token 214: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02456355094909668
    2. 'and' → logprob: -4.399563789367676
    3. ':
' → logprob: -4.774563789367676
    4. ':' → logprob: -5.649563789367676
    5. ':return' → logprob: -11.399563789367676
    6. '       ' → logprob: -13.149563789367676
    7. '	and' → logprob: -13.274563789367676
    8. ' ' → logprob: -13.274563789367676
    9. '):
' → logprob: -13.399563789367676
    10. '           ' → logprob: -14.274563789367676

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011897279880940914
    2. ' and' → logprob: -5.386897087097168
    3. ' return' → logprob: -5.636897087097168
    4. 'return' → logprob: -6.011897087097168
    5. '
' → logprob: -7.511897087097168
    6. ':
' → logprob: -8.011897087097168
    7. ':return' → logprob: -9.136897087097168
    8. ':' → logprob: -9.761897087097168
    9. ' 
' → logprob: -9.761897087097168
    10. '       ' → logprob: -10.136897087097168

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3138187825679779
    2. ' return' → logprob: -1.3138188123703003
    3. '
' → logprob: -7.93881893157959
    4. '           ' → logprob: -9.18881893157959
    5. '       ' → logprob: -9.43881893157959
    6. ' 
' → logprob: -11.31381893157959
    7. '	return' → logprob: -13.06381893157959
    8. ':return' → logprob: -13.06381893157959
    9. '   ' → logprob: -14.18881893157959
    10. '{return' → logprob: -14.68881893157959

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326186656951904
    2. ' self' → logprob: -1.313261866569519
    3. '       ' → logprob: -15.938261985778809
    4. '           ' → logprob: -16.688261032104492
    5. ' True' → logprob: -18.688261032104492
    6. '	self' → logprob: -18.813261032104492
    7. 'True' → logprob: -18.938261032104492
    8. '(self' → logprob: -18.938261032104492
    9. '
' → logprob: -19.313261032104492
    10. 's' → logprob: -19.313261032104492

Token 218: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.005254156421869993
    2. '.' → logprob: -5.25525426864624
    3. ' .' → logprob: -11.005253791809082
    4. 's' → logprob: -12.505253791809082
    5. '.is' → logprob: -18.3802547454834
    6. '.squeeze' → logprob: -18.3802547454834
    7. '.S' → logprob: -18.6302547454834
    8. '.se' → logprob: -18.6302547454834
    9. '	s' → logprob: -19.0052547454834
    10. '..' → logprob: -19.2552547454834

Token 219: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0001721934968372807
    2. '   ' → logprob: -10.12517261505127
    3. 'elve' → logprob: -10.75017261505127
    4. '[' → logprob: -10.87517261505127
    5. 'ive' → logprob: -11.00017261505127
    6. 'eve' → logprob: -11.37517261505127
    7. 'elf' → logprob: -11.50017261505127
    8. ' ' → logprob: -11.87517261505127
    9. '.' → logprob: -11.87517261505127
    10. 'iev' → logprob: -11.87517261505127

Token 220: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -1.9361264946837764e-07
    2. 'num' → logprob: -16.125
    3. '[' → logprob: -18.625
    4. '[number' → logprob: -19.625
    5. ' [' → logprob: -19.75
    6. '[
' → logprob: -20.625
    7. '[n' → logprob: -20.625
    8. '   ' → logprob: -21.0
    9. '(num' → logprob: -21.875
    10. ' num' → logprob: -22.25

Token 221: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006750900764018297
    2. ']
' → logprob: -5.00675106048584
    3. ' ]' → logprob: -10.38175106048584
    4. '       ' → logprob: -13.63175106048584
    5. ']

' → logprob: -13.63175106048584
    6. ']
' → logprob: -14.25675106048584
    7. ' ]
' → logprob: -14.38175106048584
    8. ']==' → logprob: -14.75675106048584
    9. '
' → logprob: -15.38175106048584
    10. '   ' → logprob: -15.50675106048584

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9743012671824545e-05
    2. 'return' → logprob: -11.375020027160645
    3. '
' → logprob: -12.750020027160645
    4. '        
' → logprob: -13.375020027160645
    5. 'else' → logprob: -13.625020027160645
    6. '	' → logprob: -13.750020027160645
    7. '           ' → logprob: -14.500020027160645
    8. ' else' → logprob: -15.000020027160645
    9. ' return' → logprob: -15.375020027160645
    10. '        ' → logprob: -15.750020027160645

Token 223: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4779852032661438
    2. '       ' → logprob: -1.227985143661499
    3. 'else' → logprob: -2.477985143661499
    4. ' else' → logprob: -6.852985382080078
    5. '#' (adapté à ' #') → logprob: -7.102985382080078
    6. ' return' → logprob: -7.227985382080078
    7. '   ' → logprob: -8.477985382080078
    8. '
' → logprob: -8.477985382080078
    9. 'raise' → logprob: -9.102985382080078
    10. '        
' → logprob: -10.727985382080078

Token 224: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9079291224479675
    2. 'return' → logprob: -0.9079291224479675
    3. 'else' → logprob: -2.0329291820526123
    4. ' #' → logprob: -4.032928943634033
    5. ' return' → logprob: -4.032928943634033
    6. ' else' → logprob: -4.157928943634033
    7. 'raise' → logprob: -4.907928943634033
    8. ' raise' → logprob: -6.532928943634033
    9. '       ' → logprob: -6.657928943634033
    10. '   ' → logprob: -7.782928943634033

Token 225: ' out' (ID: 842)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.055667705833911896
    2. 'num' → logprob: -3.0556676387786865
    3. ' larger' → logprob: -5.180667877197266
    4. ' numbers' → logprob: -6.680667877197266
    5. ' nums' → logprob: -10.055667877197266
    6. ' True' → logprob: -10.680667877197266
    7. 'numbers' → logprob: -11.055667877197266
    8. ' n' → logprob: -11.055667877197266
    9. 'nums' → logprob: -11.430667877197266
    10. 'n' → logprob: -11.680667877197266

Token 226: '-of' (ID: 13108)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.18842798471450806
    2. ' of' → logprob: -2.8134279251098633
    3. 'of' → logprob: -3.0634279251098633
    4. '_of' → logprob: -3.3134279251098633
    5. '-of' → logprob: -4.188427925109863
    6. '       ' → logprob: -4.688427925109863
    7. '   ' → logprob: -5.813427925109863
    8. 'Of' → logprob: -7.313427925109863
    9. '           ' → logprob: -9.063427925109863
    10. '      ' → logprob: -9.563427925109863

Token 227: '-s' (ID: 2011)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033976804465055466
    2. 'limit' → logprob: -3.5339767932891846
    3. '-range' → logprob: -6.033977031707764
    4. 'bound' → logprob: -7.283977031707764
    5. 's' → logprob: -7.533977031707764
    6. '-bound' → logprob: -8.533976554870605
    7. 'bounds' → logprob: -8.908976554870605
    8. ' range' → logprob: -8.908976554870605
    9. '-limit' → logprob: -9.408976554870605
    10. 'limits' → logprob: -11.033976554870605

Token 228: 'ieve' (ID: 3703)
  Prédit: 'cope'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cope' → logprob: -0.04119322448968887
    2. 'e' → logprob: -4.041193008422852
    3. 'range' → logprob: -4.791193008422852
    4. 'ieve' → logprob: -5.416193008422852
    5. 't' → logprob: -5.416193008422852
    6. 'elf' → logprob: -6.541193008422852
    7. 'ize' → logprob: -6.666193008422852
    8. 'earch' → logprob: -7.791193008422852
    9. '   ' → logprob: -7.916193008422852
    10. 'scope' → logprob: -8.791193008422852

Token 229: ' queries' (ID: 32122)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.08024325966835022
    2. 'num' → logprob: -3.2052433490753174
    3. 'numbers' → logprob: -4.455243110656738
    4. ' num' → logprob: -4.830243110656738
    5. ' checks' → logprob: -5.330243110656738
    6. 'nums' → logprob: -5.580243110656738
    7. ' cases' → logprob: -5.705243110656738
    8. ' nums' → logprob: -6.580243110656738
    9. ' number' → logprob: -7.330243110656738
    10. ' check' → logprob: -7.455243110656738

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2022303342819214
    2. '       ' → logprob: -2.077230453491211
    3. ':' → logprob: -2.952230453491211
    4. ':
' → logprob: -5.702230453491211
    5. ' return' → logprob: -6.952230453491211
    6. 'return' → logprob: -8.077230453491211
    7. ' ,' → logprob: -8.952230453491211
    8. ' else' → logprob: -8.952230453491211
    9. ' if' → logprob: -8.952230453491211
    10. ' we' → logprob: -9.202230453491211

Token 231: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5022185444831848
    2. 'import' → logprob: -1.62721848487854
    3. '       ' → logprob: -2.75221848487854
    4. ' return' → logprob: -2.75221848487854
    5. 'for' → logprob: -3.25221848487854
    6. ' for' → logprob: -4.502218723297119
    7. ' import' → logprob: -5.002218723297119
    8. '#' → logprob: -5.127218723297119
    9. 'if' → logprob: -5.877218723297119
    10. ' #' → logprob: -6.877218723297119

Token 232: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0055861445143818855
    2. '       ' → logprob: -5.75558614730835
    3. 'to' → logprob: -6.63058614730835
    4. ':' → logprob: -7.25558614730835
    5. '           ' → logprob: -9.255585670471191
    6. '   ' → logprob: -9.380585670471191
    7. '        ' → logprob: -9.630585670471191
    8. ' if' → logprob: -10.505585670471191
    9. '    ' → logprob: -11.130585670471191
    10. ',' → logprob: -11.255585670471191

Token 233: ' slower' (ID: 54189)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01414317637681961
    2. 'all' → logprob: -5.014142990112305
    3. 'def' → logprob: -5.514142990112305
    4. ' self' → logprob: -6.014142990112305
    5. 'is' → logprob: -8.139142990112305
    6. 'False' → logprob: -8.389142990112305
    7. '   ' → logprob: -8.889142990112305
    8. ' all' → logprob: -9.389142990112305
    9. 'any' → logprob: -9.639142990112305
    10. 'import' → logprob: -11.014142990112305

Token 234: ' method' (ID: 2595)
  Prédit: ' method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' method' → logprob: -0.09381338208913803
    2. ' primal' → logprob: -3.593813419342041
    3. ' check' → logprob: -4.468813419342041
    4. 'prime' → logprob: -4.593813419342041
    5. ' prime' → logprob: -4.843813419342041
    6. 'is' → logprob: -4.968813419342041
    7. 'method' → logprob: -4.968813419342041
    8. ' if' → logprob: -6.218813419342041
    9. ' code' → logprob: -6.218813419342041
    10. ' methods' → logprob: -6.218813419342041

Token 235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013102341443300247
    2. '
' → logprob: -4.6381025314331055
    3. '        
' → logprob: -6.1381025314331055
    4. '    
' → logprob: -8.263102531433105
    5. 'return' → logprob: -8.638102531433105
    6. '   ' → logprob: -9.138102531433105
    7. ' 
' → logprob: -9.138102531433105
    8. ' return' → logprob: -9.388102531433105
    9. '  
' → logprob: -9.513102531433105
    10. 'import' → logprob: -9.638102531433105

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015098588773980737
    2. '   ' → logprob: -8.126509666442871
    3. 'return' → logprob: -8.126509666442871
    4. 'import' → logprob: -8.251509666442871
    5. '
' → logprob: -8.626509666442871
    6. '        
' → logprob: -9.126509666442871
    7. ' if' → logprob: -9.376509666442871
    8. ' return' → logprob: -9.501509666442871
    9. ' for' → logprob: -9.751509666442871
    10. ' else' → logprob: -10.001509666442871

Token 237: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2177080661058426
    2. 'for' → logprob: -2.217708110809326
    3. 'return' → logprob: -2.467708110809326
    4. 'import' → logprob: -6.717708110809326
    5. '       ' → logprob: -7.717708110809326
    6. 'from' → logprob: -8.592707633972168
    7. '   ' → logprob: -9.092707633972168
    8. 'def' → logprob: -11.217707633972168
    9. 'i' → logprob: -11.342707633972168
    10. ' if' → logprob: -11.592707633972168

Token 238: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.2016243189573288
    2. 'num' → logprob: -1.7016242742538452
    3. ' self' → logprob: -8.951623916625977
    4. 'self' → logprob: -9.576623916625977
    5. '	num' → logprob: -12.576623916625977
    6. '   ' → logprob: -12.826623916625977
    7. ' ' → logprob: -12.951623916625977
    8. '(num' → logprob: -13.826623916625977
    9. 'n' → logprob: -14.826623916625977
    10. ' all' → logprob: -15.076623916625977

Token 239: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31331440806388855
    2. '<' → logprob: -1.313314437866211
    3. '<=' → logprob: -10.438314437866211
    4. ' <=' → logprob: -10.938314437866211
    5. '%' → logprob: -12.938314437866211
    6. '>' → logprob: -14.438314437866211
    7. ' ' → logprob: -14.813314437866211
    8. '<n' → logprob: -14.938314437866211
    9. '<num' → logprob: -15.313314437866211
    10. ' >' → logprob: -15.813314437866211

Token 240: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11386623233556747
    2. ' ' → logprob: -2.2388663291931152
    3. '=' → logprob: -7.613866329193115
    4. '0' → logprob: -7.613866329193115
    5. 'self' → logprob: -10.113865852355957
    6. ' =' → logprob: -12.113865852355957
    7. ' self' → logprob: -12.363865852355957
    8. '   ' → logprob: -13.113865852355957
    9. '(' → logprob: -13.988865852355957
    10. '1' → logprob: -14.738865852355957

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015085970517247915
    2. '0' → logprob: -9.375150680541992
    3. ' ' → logprob: -9.875150680541992
    4. '=' → logprob: -11.375150680541992
    5. 'self' → logprob: -13.250150680541992
    6. '   ' → logprob: -14.875150680541992
    7. '

' → logprob: -15.000150680541992
    8. '(' → logprob: -15.250150680541992
    9. ' =' → logprob: -16.750150680541992
    10. '
' → logprob: -16.937650680541992

Token 242: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1633218675851822
    2. ':' → logprob: -1.913321852684021
    3. '       ' → logprob: -6.0383219718933105
    4. '           ' → logprob: -7.9133219718933105
    5. ' or' → logprob: -8.163321495056152
    6. ':return' → logprob: -10.163321495056152
    7. 'return' → logprob: -12.038321495056152
    8. ':
' → logprob: -12.413321495056152
    9. '   ' → logprob: -13.163321495056152
    10. '):
' → logprob: -13.163321495056152

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000661684141959995
    2. ':
' → logprob: -8.500661849975586
    3. ' return' → logprob: -8.500661849975586
    4. 'return' → logprob: -8.750661849975586
    5. ':' → logprob: -9.750661849975586
    6. '       ' → logprob: -11.250661849975586
    7. '
' → logprob: -11.250661849975586
    8. ':return' → logprob: -12.125661849975586
    9. '	       ' → logprob: -13.625661849975586
    10. '            
' → logprob: -13.750661849975586

Token 244: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4294591248035431
    2. ' return' → logprob: -1.1794590950012207
    3. '           ' → logprob: -3.1794590950012207
    4. '       ' → logprob: -10.304459571838379
    5. '
' → logprob: -10.929459571838379
    6. '   ' → logprob: -11.179459571838379
    7. '               ' → logprob: -12.054459571838379
    8. '	return' → logprob: -12.054459571838379
    9. ':return' → logprob: -12.304459571838379
    10. '{return' → logprob: -13.554459571838379

Token 245: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2014133334159851
    2. ' False' → logprob: -1.7014133930206299
    3. '(False' → logprob: -17.576414108276367
    4. '=False' → logprob: -19.826414108276367
    5. 'false' → logprob: -21.326414108276367
    6. '   ' → logprob: -21.451414108276367
    7. 'True' → logprob: -21.576414108276367
    8. ' false' → logprob: -21.701414108276367
    9. ' True' → logprob: -21.951414108276367
    10. '_false' → logprob: -21.951414108276367

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1814509630203247
    2. '       ' → logprob: -1.8064509630203247
    3. '        
' → logprob: -6.556450843811035
    4. 'return' → logprob: -9.806450843811035
    5. 'import' → logprob: -9.931450843811035
    6. ' 
' → logprob: -10.431450843811035
    7. '
' → logprob: -10.556450843811035
    8. '
        
' → logprob: -10.681450843811035
    9. '<|end|>' → logprob: -11.181450843811035
    10. '  
' → logprob: -11.181450843811035

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0627891942858696
    2. '
' → logprob: -2.81278920173645
    3. '        
' → logprob: -7.562788963317871
    4. 'import' → logprob: -9.562788963317871
    5. 'return' → logprob: -9.812788963317871
    6. ' 
' → logprob: -10.437788963317871
    7. '  
' → logprob: -10.812788963317871
    8. '    
' → logprob: -10.812788963317871
    9. ' for' → logprob: -10.937788963317871
    10. ',' → logprob: -11.312788963317871

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.213347390294075
    2. ' for' → logprob: -1.9633474349975586
    3. '       ' → logprob: -2.9633474349975586
    4. 'import' → logprob: -10.088347434997559
    5. '   ' → logprob: -10.713347434997559
    6. 'if' → logprob: -11.338347434997559
    7. 'i' → logprob: -12.463347434997559
    8. 'k' → logprob: -13.213347434997559
    9. '	for' → logprob: -13.338347434997559
    10. '
' → logprob: -13.588347434997559

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004425012972205877
    2. 'k' → logprob: -6.129425048828125
    3. ' i' → logprob: -6.129425048828125
    4. 'x' → logprob: -10.879425048828125
    5. 'p' → logprob: -11.254425048828125
    6. 'd' → logprob: -11.379425048828125
    7. 'div' → logprob: -11.879425048828125
    8. 'factor' → logprob: -12.004425048828125
    9. ' k' → logprob: -13.379425048828125
    10. 'n' → logprob: -15.004425048828125

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007142199319787323
    2. 'in' → logprob: -7.250714302062988
    3. ' ' → logprob: -13.750714302062988
    4. '	in' → logprob: -14.250714302062988
    5. '   ' → logprob: -14.375714302062988
    6. '    ' → logprob: -15.000714302062988
    7. '<|end|>' → logprob: -15.250714302062988
    8. ' i' → logprob: -15.375714302062988
    9. '2' → logprob: -15.500714302062988
    10. '<|end|>' → logprob: -16.000713348388672

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740888178348541
    2. ' range' → logprob: -0.9740887880325317
    3. '	range' → logprob: -11.599088668823242
    4. '   ' → logprob: -13.099088668823242
    5. ' ' → logprob: -14.849088668823242
    6. '(range' → logprob: -16.349088668823242
    7. '  ' → logprob: -16.474088668823242
    8. '2' → logprob: -17.349088668823242
    9. '    ' → logprob: -17.599088668823242
    10. '```' → logprob: -17.974088668823242

Token 252: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05521601438522339
    2. '(' → logprob: -2.930216073989868
    3. '   ' → logprob: -8.680215835571289
    4. ' ' → logprob: -8.930215835571289
    5. '       ' → logprob: -10.805215835571289
    6. ',' → logprob: -12.430215835571289
    7. '```' → logprob: -12.805215835571289
    8. '
' → logprob: -13.555215835571289
    9. ' (' → logprob: -14.180215835571289
    10. '...' → logprob: -14.430215835571289

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010688089241739362
    2. ' ' → logprob: -9.625106811523438
    3. '   ' → logprob: -10.250106811523438
    4. '(' → logprob: -12.875106811523438
    5. '       ' → logprob: -13.000106811523438
    6. ')' → logprob: -15.625106811523438
    7. '    ' → logprob: -16.250106811523438
    8. '           ' → logprob: -16.375106811523438
    9. '۲' → logprob: -16.750106811523438
    10. '```' → logprob: -16.750106811523438

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003500050224829465
    2. ',int' → logprob: -8.000349998474121
    3. ' ,' → logprob: -11.625349998474121
    4. 'int' → logprob: -13.250349998474121
    5. '       ' → logprob: -13.375349998474121
    6. ',
' → logprob: -14.250349998474121
    7. '   ' → logprob: -14.375349998474121
    8. ',num' → logprob: -14.500349998474121
    9. ',i' → logprob: -15.750349998474121
    10. '           ' → logprob: -15.875349998474121

Token 255: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011097457259893417
    2. ' int' → logprob: -4.511097431182861
    3. '       ' → logprob: -10.88609790802002
    4. '(int' → logprob: -11.38609790802002
    5. '   ' → logprob: -11.63609790802002
    6. '	int' → logprob: -11.88609790802002
    7. ',int' → logprob: -12.76109790802002
    8. '=int' → logprob: -15.26109790802002
    9. '    ' → logprob: -15.63609790802002
    10. '[int' → logprob: -15.76109790802002

Token 256: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.002539632609114051
    2. '(int' → logprob: -6.00253963470459
    3. 'num' → logprob: -10.00253963470459
    4. '(' → logprob: -11.12753963470459
    5. ' num' → logprob: -12.87753963470459
    6. '	num' → logprob: -14.75253963470459
    7. 'int' → logprob: -15.25253963470459
    8. ' (' → logprob: -15.37753963470459
    9. ',num' → logprob: -15.50253963470459
    10. '((' → logprob: -15.87753963470459

Token 257: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.38094279170036316
    2. ' **' → logprob: -1.2559428215026855
    3. '(num' → logprob: -3.5059428215026855
    4. '(' → logprob: -6.5059428215026855
    5. ' (' → logprob: -8.380942344665527
    6. ' ' → logprob: -9.380942344665527
    7. '(int' → logprob: -9.755942344665527
    8. '   ' → logprob: -10.880942344665527
    9. 'num' → logprob: -11.005942344665527
    10. '(**' → logprob: -11.130942344665527

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015128388768061996
    2. ' ' → logprob: -6.5015130043029785
    3. '(' → logprob: -11.50151252746582
    4. '   ' → logprob: -15.50151252746582
    5. ' (' → logprob: -15.62651252746582
    6. ' ' → logprob: -17.25151252746582
    7. '.' → logprob: -18.00151252746582
    8. '  ' → logprob: -18.25151252746582
    9. '    ' → logprob: -18.62651252746582
    10. '{' → logprob: -19.37651252746582

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '.' → logprob: -15.00001049041748
    4. '   ' → logprob: -15.25001049041748
    5. '(' → logprob: -16.000011444091797
    6. ' ' → logprob: -17.812511444091797
    7. '    ' → logprob: -18.250011444091797
    8. '  ' → logprob: -18.500011444091797
    9. '```' → logprob: -18.625011444091797
    10. '
' → logprob: -18.875011444091797

Token 260: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.375001907348633
    3. '2' → logprob: -14.500001907348633
    4. '1' → logprob: -15.500001907348633
    5. '```' → logprob: -17.125001907348633
    6. '3' → logprob: -17.500001907348633
    7. ' .' → logprob: -17.625001907348633
    8. '5' → logprob: -18.000001907348633
    9. '6' → logprob: -18.500001907348633
    10. '.
' → logprob: -19.000001907348633

Token 261: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -12.437508583068848
    3. '4' → logprob: -14.375008583068848
    4. '0' → logprob: -14.500008583068848
    5. '```' → logprob: -14.687508583068848
    6. '05' → logprob: -15.187508583068848
    7. '
' → logprob: -15.437508583068848
    8. '``' → logprob: -15.437508583068848
    9. '   ' → logprob: -15.625008583068848
    10. '6' → logprob: -15.812508583068848

Token 262: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2574198246002197
    2. ')' → logprob: -1.5074198246002197
    3. '())' → logprob: -5.382419586181641
    4. '()+' → logprob: -7.382419586181641
    5. ')+' → logprob: -8.38241958618164
    6. ' ()' → logprob: -11.13241958618164
    7. ' )' → logprob: -12.13241958618164
    8. '().' → logprob: -13.00741958618164
    9. '   ' → logprob: -13.13241958618164
    10. '+' → logprob: -14.25741958618164

Token 263: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2649941146373749
    2. '+' → logprob: -2.1399941444396973
    3. ')' → logprob: -2.2649941444396973
    4. ')+' → logprob: -4.639994144439697
    5. '()' → logprob: -6.764994144439697
    6. '   ' → logprob: -8.014993667602539
    7. '()+' → logprob: -9.764993667602539
    8. ' ' → logprob: -10.014993667602539
    9. ' )' → logprob: -10.139993667602539
    10. '    ' → logprob: -12.514993667602539

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011803467059507966
    2. ' ' → logprob: -6.751180171966553
    3. '(' → logprob: -12.376180648803711
    4. '   ' → logprob: -13.126180648803711
    5. '
' → logprob: -13.376180648803711
    6. ')' → logprob: -14.126180648803711
    7. '(
' → logprob: -14.251180648803711
    8. '```' → logprob: -14.751180648803711
    9. '  ' → logprob: -15.126180648803711
    10. '    ' → logprob: -16.50118064880371

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.625075340270996
    4. '  ' → logprob: -16.750076293945312
    5. '
' → logprob: -17.250076293945312
    6. '    ' → logprob: -17.625076293945312
    7. '```' → logprob: -18.500076293945312
    8. ')' → logprob: -18.875076293945312
    9. '2' → logprob: -19.250076293945312
    10. '(' → logprob: -19.375076293945312

Token 266: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05534810572862625
    2. '):' → logprob: -2.9303481578826904
    3. '       ' → logprob: -8.68034839630127
    4. ':' → logprob: -8.93034839630127
    5. ':
' → logprob: -9.93034839630127
    6. '):
' → logprob: -10.30534839630127
    7. ',' → logprob: -10.43034839630127
    8. '   ' → logprob: -11.05534839630127
    9. '           ' → logprob: -11.18034839630127
    10. '():
' → logprob: -11.80534839630127

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01014076080173254
    2. ' if' → logprob: -5.635140895843506
    3. '       ' → logprob: -5.760140895843506
    4. ':' → logprob: -5.885140895843506
    5. ':
' → logprob: -8.885140419006348
    6. 'if' → logprob: -9.135140419006348
    7. ',' → logprob: -9.635140419006348
    8. '	       ' → logprob: -10.010140419006348
    9. '   ' → logprob: -10.135140419006348
    10. '        ' → logprob: -10.260140419006348

Token 268: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06308303028345108
    2. '           ' → logprob: -3.1880829334259033
    3. 'if' (adapté à ' if') → logprob: -3.9380829334259033
    4. '       ' → logprob: -8.313082695007324
    5. '               ' → logprob: -9.063082695007324
    6. '   ' → logprob: -11.313082695007324
    7. ' ' → logprob: -11.688082695007324
    8. '	       ' → logprob: -11.813082695007324
    9. '	if' → logprob: -13.438082695007324
    10. '        ' → logprob: -13.938082695007324

Token 269: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5759456157684326
    2. 'num' → logprob: -0.8259456157684326
    3. '(num' → logprob: -12.200945854187012
    4. '	num' → logprob: -13.950945854187012
    5. ' ' → logprob: -17.700944900512695
    6. '   ' → logprob: -17.700944900512695
    7. '<num' → logprob: -17.700944900512695
    8. 'n' → logprob: -18.200944900512695
    9. ',num' → logprob: -18.325944900512695
    10. '_num' → logprob: -18.325944900512695

Token 270: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.485430508852005
    2. ' %' → logprob: -0.9854304790496826
    3. '%i' → logprob: -4.485430717468262
    4. ' ' → logprob: -11.610430717468262
    5. ' %
' → logprob: -12.860430717468262
    6. '%
' → logprob: -13.235430717468262
    7. ' ' → logprob: -13.860430717468262
    8. '%n' → logprob: -14.610430717468262
    9. '%d' → logprob: -14.735430717468262
    10. '%e' → logprob: -14.860430717468262

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020893067121506
    2. ' i' → logprob: -2.3502089977264404
    3. '	i' → logprob: -13.10020923614502
    4. '   ' → logprob: -15.97520923614502
    5. ' ' → logprob: -16.100208282470703
    6. '  ' → logprob: -18.225208282470703
    7. '*i' → logprob: -19.225208282470703
    8. '    ' → logprob: -19.475208282470703
    9. ' ' → logprob: -19.600208282470703
    10. '
' → logprob: -19.850208282470703

Token 272: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931705474853516
    2. ' ==' → logprob: -0.6931705474853516
    3. '=' → logprob: -11.568170547485352
    4. ')==' → logprob: -12.443170547485352
    5. '===' → logprob: -12.443170547485352
    6. '==
' → logprob: -13.318170547485352
    7. '0' → logprob: -13.568170547485352
    8. ']==' → logprob: -13.693170547485352
    9. ' ' → logprob: -14.443170547485352
    10. ')' → logprob: -14.943170547485352

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '
' → logprob: -18.753177642822266
    4. '   ' → logprob: -18.878177642822266
    5. ' ' → logprob: -20.253177642822266
    6. '  ' → logprob: -20.628177642822266
    7. '۰' → logprob: -20.628177642822266
    8. '<|end|>' → logprob: -21.128177642822266
    9. ' 
' → logprob: -21.878177642822266
    10. '```' → logprob: -22.503177642822266

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '
' → logprob: -20.125085830688477
    4. '۰' → logprob: -20.750085830688477
    5. '   ' → logprob: -20.750085830688477
    6. '  ' → logprob: -21.500085830688477
    7. '  ' → logprob: -22.687585830688477
    8. '```' → logprob: -22.750085830688477
    9. '٠' → logprob: -22.812585830688477
    10. ' ' → logprob: -23.187585830688477

Token 275: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47797808051109314
    2. ':' → logprob: -1.6029781103134155
    3. '               ' → logprob: -1.7279781103134155
    4. ':return' → logprob: -7.477978229522705
    5. '           ' → logprob: -7.977978229522705
    6. '):
' → logprob: -10.227977752685547
    7. 'return' → logprob: -10.852977752685547
    8. '                   ' → logprob: -11.602977752685547
    9. '       ' → logprob: -11.727977752685547
    10. ':
' → logprob: -11.977977752685547

Token 276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000563638168387115
    2. '           ' → logprob: -8.000563621520996
    3. 'return' → logprob: -9.250563621520996
    4. ' return' → logprob: -9.375563621520996
    5. '                   ' → logprob: -10.750563621520996
    6. '   ' → logprob: -11.875563621520996
    7. ':return' → logprob: -12.375563621520996
    8. '              ' → logprob: -12.625563621520996
    9. '                
' → logprob: -13.375563621520996
    10. '       ' → logprob: -13.375563621520996

Token 277: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2522963285446167
    2. 'return' (adapté à ' return') → logprob: -1.5022963285446167
    3. '                   ' → logprob: -8.002296447753906
    4. '               ' → logprob: -10.377296447753906
    5. '   ' → logprob: -14.877296447753906
    6. '	return' → logprob: -15.127296447753906
    7. ':return' → logprob: -15.627296447753906
    8. '                       ' → logprob: -15.752296447753906
    9. '           ' → logprob: -16.002296447753906
    10. '
' → logprob: -16.252296447753906

Token 278: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. 'True' → logprob: -21.251928329467773
    4. '(False' → logprob: -22.126928329467773
    5. '=False' → logprob: -23.626928329467773
    6. 'false' → logprob: -24.126928329467773
    7. '_false' → logprob: -24.376928329467773
    8. '.False' → logprob: -25.501928329467773
    9. 'F' → logprob: -26.001928329467773
    10. 'FALSE' → logprob: -26.626928329467773

Token 279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.253713218029588e-05
    2. 'return' → logprob: -10.125062942504883
    3. '
' → logprob: -11.625062942504883
    4. ' return' → logprob: -12.000062942504883
    5. '   ' → logprob: -12.625062942504883
    6. '	' → logprob: -13.000062942504883
    7. '           ' → logprob: -14.625062942504883
    8. '	return' → logprob: -14.625062942504883
    9. '<|end|>' → logprob: -14.750062942504883
    10. '      ' → logprob: -16.000062942504883

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038169484469108284
    2. 'return' → logprob: -8.125381469726562
    3. ' return' → logprob: -10.375381469726562
    4. '
' → logprob: -10.375381469726562
    5. '   ' → logprob: -10.750381469726562
    6. '           ' → logprob: -14.375381469726562
    7. '	return' → logprob: -14.500381469726562
    8. '<|end|>' → logprob: -15.500381469726562
    9. '	' → logprob: -15.625381469726562
    10. '```' → logprob: -15.875381469726562

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.24547022581100464
    2. '       ' → logprob: -1.7454702854156494
    3. ' return' → logprob: -3.2454702854156494
    4. '   ' → logprob: -5.62047004699707
    5. '
' → logprob: -7.74547004699707
    6. '	return' → logprob: -9.49547004699707
    7. '{return' → logprob: -12.24547004699707
    8. ':return' → logprob: -12.62047004699707
    9. '           ' → logprob: -12.74547004699707
    10. '        
' → logprob: -13.24547004699707

Token 282: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.750709533691406
    4. '       ' → logprob: -20.750709533691406
    5. 'true' → logprob: -20.750709533691406
    6. 'False' → logprob: -21.875709533691406
    7. '(True' → logprob: -22.500709533691406
    8. ' ' → logprob: -24.500709533691406
    9. '_true' → logprob: -24.500709533691406
    10. '=True' → logprob: -24.625709533691406

Token 283: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.727384090423584
    2. '<|end|>' → logprob: -1.102384090423584
    3. '```' → logprob: -1.977384090423584
    4. '
' → logprob: -3.602384090423584
    5. '    
' → logprob: -4.602384090423584
    6. 'def' → logprob: -5.727384090423584
    7. '<|end|>' → logprob: -5.977384090423584
    8. '  
' → logprob: -7.352384090423584
    9. ' 
' → logprob: -7.477384090423584
    10. ' def' → logprob: -7.602384090423584

Token 284: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10920440405607224
    2. '   ' → logprob: -2.4842042922973633
    3. ' def' → logprob: -4.234204292297363
    4. '
' → logprob: -5.359204292297363
    5. '```' → logprob: -7.109204292297363
    6. '    
' → logprob: -10.359204292297363
    7. '	def' → logprob: -11.859204292297363
    8. ' ' → logprob: -13.109204292297363
    9. '<|end|>' → logprob: -13.859204292297363
    10. ':def' → logprob: -14.109204292297363

Token 285: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00013131031300872564
    2. ' def' → logprob: -9.000131607055664
    3. '   ' → logprob: -11.750131607055664
    4. '
' → logprob: -18.500131607055664
    5. '	def' → logprob: -18.625131607055664
    6. '```' → logprob: -18.625131607055664
    7. ' ' → logprob: -20.500131607055664
    8. '    
' → logprob: -20.625131607055664
    9. '  ' → logprob: -21.750131607055664
    10. ':def' → logprob: -22.125131607055664

Token 286: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0620955228805542
    2. 'next' → logprob: -2.8120956420898438
    3. ' def' → logprob: -9.062095642089844
    4. 'def' → logprob: -11.437095642089844
    5. '_next' → logprob: -15.187095642089844
    6. ' prev' → logprob: -15.437095642089844
    7. 'prev' → logprob: -16.187095642089844
    8. ' nex' → logprob: -16.187095642089844
    9. '.next' → logprob: -16.312095642089844
    10. 'n' → logprob: -16.562095642089844

Token 287: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.000775442982558161
    2. '_' → logprob: -7.375775337219238
    3. ' _' → logprob: -10.125775337219238
    4. ''_' → logprob: -10.750775337219238
    5. '_next' → logprob: -11.125775337219238
    6. '_p' → logprob: -11.250775337219238
    7. '```' → logprob: -11.250775337219238
    8. ')_' → logprob: -11.500775337219238
    9. '}_' → logprob: -12.000775337219238
    10. '   ' → logprob: -12.125775337219238

Token 288: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. 'self' → logprob: -17.75
    4. '   ' → logprob: -19.5
    5. '(
' → logprob: -20.25
    6. ' (' → logprob: -20.625
    7. '       ' → logprob: -21.125
    8. '(Self' → logprob: -22.375
    9. 'def' → logprob: -22.625
    10. '	self' → logprob: -22.875

Token 289: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007299474673345685
    2. ',' → logprob: -7.750730037689209
    3. 'self' → logprob: -8.50072956085205
    4. '       ' → logprob: -9.87572956085205
    5. '   ' → logprob: -11.25072956085205
    6. ' self' → logprob: -11.62572956085205
    7. ' (' → logprob: -11.62572956085205
    8. '(' → logprob: -12.12572956085205
    9. ',self' → logprob: -12.12572956085205
    10. ')' → logprob: -14.25072956085205

Token 290: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5374552607536316
    2. ' self' → logprob: -0.9124552607536316
    3. ' start' → logprob: -4.787455081939697
    4. 'start' → logprob: -5.162455081939697
    5. '       ' → logprob: -9.037455558776855
    6. '   ' → logprob: -10.537455558776855
    7. '(self' → logprob: -11.287455558776855
    8. ' ' → logprob: -12.662455558776855
    9. 'num' → logprob: -12.787455558776855
    10. ' num' → logprob: -13.912455558776855

Token 291: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43963783979415894
    2. ':' → logprob: -1.8146378993988037
    3. '+' → logprob: -1.9396378993988037
    4. ' +' → logprob: -3.1896378993988037
    5. '   ' → logprob: -5.314637660980225
    6. '(self' → logprob: -6.689637660980225
    7. '       ' → logprob: -7.064637660980225
    8. '):' → logprob: -8.689638137817383
    9. 'self' → logprob: -8.689638137817383
    10. ' ,' → logprob: -9.064638137817383

Token 292: ' int' (ID: 677)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6437539458274841
    2. ' self' → logprob: -1.393754005432129
    3. 'int' → logprob: -1.768754005432129
    4. ' int' → logprob: -2.893754005432129
    5. '   ' → logprob: -7.643754005432129
    6. ',' → logprob: -9.768754005432129
    7. ')' → logprob: -10.393754005432129
    8. '       ' → logprob: -10.643754005432129
    9. '(self' → logprob: -11.893754005432129
    10. ' ' → logprob: -12.143754005432129

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012911251746118069
    2. '):' → logprob: -4.512911319732666
    3. '):
' → logprob: -6.512911319732666
    4. '   ' → logprob: -8.887910842895508
    5. ' )' → logprob: -8.887910842895508
    6. ':' → logprob: -9.387910842895508
    7. '       ' → logprob: -12.387910842895508
    8. ' ):' → logprob: -12.512910842895508
    9. '):
' → logprob: -12.887910842895508
    10. ',' → logprob: -12.887910842895508

Token 294: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008663617074489594
    2. '       ' → logprob: -5.508663654327393
    3. ':
' → logprob: -6.008663654327393
    4. '(self' → logprob: -6.383663654327393
    5. '   ' → logprob: -8.133663177490234
    6. '(' → logprob: -10.133663177490234
    7. ',' → logprob: -10.633663177490234
    8. ' :' → logprob: -11.133663177490234
    9. ':self' → logprob: -11.508663177490234
    10. '):' → logprob: -11.758663177490234

Token 295: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6457871198654175
    2. 'int' → logprob: -0.7707871198654175
    3. ' start' → logprob: -4.770787239074707
    4. 'start' → logprob: -5.395787239074707
    5. '(int' → logprob: -10.145787239074707
    6. ' max' → logprob: -10.645787239074707
    7. '(start' → logprob: -11.770787239074707
    8. 'max' → logprob: -11.895787239074707
    9. ' Optional' → logprob: -12.770787239074707
    10. ' (' → logprob: -13.645787239074707

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.842652440071106
    2. ':
' → logprob: -0.967652440071106
    3. '       ' → logprob: -1.717652440071106
    4. '   ' → logprob: -4.717652320861816
    5. '):
' → logprob: -7.467652320861816
    6. ',' → logprob: -8.967652320861816
    7. '```' → logprob: -9.092652320861816
    8. '(self' → logprob: -10.467652320861816
    9. ':
' → logprob: -10.842652320861816
    10. '        
' → logprob: -11.217652320861816

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005753128207288682
    2. '   ' → logprob: -8.375575065612793
    3. 'n' → logprob: -8.625575065612793
    4. ' for' → logprob: -10.250575065612793
    5. 'i' → logprob: -10.500575065612793
    6. 'num' → logprob: -11.000575065612793
    7. 'current' → logprob: -11.000575065612793
    8. 'next' → logprob: -11.125575065612793
    9. 'for' → logprob: -11.375575065612793
    10. 'start' → logprob: -11.625575065612793

Token 298: ' candidate' (ID: 17098)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06379426270723343
    2. ' for' → logprob: -3.3137943744659424
    3. '       ' → logprob: -4.813794136047363
    4. 'start' → logprob: -5.063794136047363
    5. 'n' → logprob: -5.188794136047363
    6. 'i' → logprob: -6.188794136047363
    7. 'num' → logprob: -6.563794136047363
    8. 'current' → logprob: -7.188794136047363
    9. 'next' → logprob: -7.563794136047363
    10. 'candidate' (adapté à ' candidate') → logprob: -8.438794136047363

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. '=start' → logprob: -15.350207328796387
    4. ' ' → logprob: -16.35020637512207
    5. '   ' → logprob: -17.47520637512207
    6. ' +=' → logprob: -18.35020637512207
    7. '+=' → logprob: -18.60020637512207
    8. 's' → logprob: -18.72520637512207
    9. '＝' → logprob: -18.72520637512207
    10. ':' → logprob: -19.10020637512207

Token 300: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4841553568840027
    2. ' max' → logprob: -1.7341554164886475
    3. 'max' → logprob: -1.7341554164886475
    4. ' start' → logprob: -3.4841554164886475
    5. '
' → logprob: -13.109155654907227
    6. '	start' → logprob: -13.984155654907227
    7. '	max' → logprob: -14.359155654907227
    8. '   ' → logprob: -15.359155654907227
    9. '(max' → logprob: -15.359155654907227
    10. '(start' → logprob: -15.984155654907227

Token 301: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08112994581460953
    2. ' +' → logprob: -2.581130027770996
    3. ' if' → logprob: -6.331130027770996
    4. 'if' → logprob: -8.331130027770996
    5. '+
' → logprob: -8.831130027770996
    6. '
' → logprob: -9.831130027770996
    7. '   ' → logprob: -11.956130027770996
    8. ' +
' → logprob: -12.331130027770996
    9. '+=' → logprob: -12.956130027770996
    10. '       ' → logprob: -14.081130027770996

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.8750057220459
    4. '
' → logprob: -20.2500057220459
    5. '0' → logprob: -22.5000057220459
    6. '```' → logprob: -22.5000057220459
    7. '  ' → logprob: -22.7500057220459
    8. '１' → logprob: -22.8750057220459
    9. '۱' → logprob: -23.6875057220459
    10. '`' → logprob: -23.8750057220459

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -20.625
    4. '   ' → logprob: -21.375
    5. '```' → logprob: -22.375
    6. '0' → logprob: -22.5
    7. '۱' → logprob: -22.6875
    8. '１' → logprob: -23.0
    9. '``' → logprob: -23.6875
    10. '१' → logprob: -23.875

Token 304: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1318051666021347
    2. '
' → logprob: -2.131805181503296
    3. 'while' → logprob: -5.881804943084717
    4. ' while' → logprob: -6.506804943084717
    5. '<|end|>' → logprob: -7.881804943084717
    6. '        
' → logprob: -9.881805419921875
    7. '
' → logprob: -10.006805419921875
    8. '  
' → logprob: -10.381805419921875
    9. '```' → logprob: -11.131805419921875
    10. '	while' → logprob: -11.381805419921875

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058088707737624645
    2. ' while' → logprob: -5.6308088302612305
    3. 'while' → logprob: -6.6308088302612305
    4. '<|end|>' → logprob: -7.2558088302612305
    5. '
' → logprob: -9.00580883026123
    6. '	while' → logprob: -10.63080883026123
    7. '```' → logprob: -11.88080883026123
    8. '        
' → logprob: -12.13080883026123
    9. '   ' → logprob: -12.13080883026123
    10. '           ' → logprob: -13.00580883026123

Token 306: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16469183564186096
    2. ' while' → logprob: -1.9146918058395386
    3. '       ' → logprob: -5.414691925048828
    4. '	while' → logprob: -11.914691925048828
    5. '   ' → logprob: -15.664691925048828
    6. '
' → logprob: -16.789691925048828
    7. 'While' → logprob: -16.789691925048828
    8. '```' → logprob: -17.914691925048828
    9. 'if' → logprob: -19.914691925048828
    10. ' While' → logprob: -19.914691925048828

Token 307: ' True' (ID: 6432)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.47415730357170105
    2. ' candidate' → logprob: -0.9741573333740234
    3. '(candidate' → logprob: -10.224157333374023
    4. ' not' → logprob: -10.474157333374023
    5. 'not' → logprob: -11.474157333374023
    6. '_candidate' → logprob: -12.974157333374023
    7. ' candidat' → logprob: -13.974157333374023
    8. 'True' → logprob: -14.099157333374023
    9. 'Candidate' → logprob: -14.724157333374023
    10. 'andidate' → logprob: -15.099157333374023

Token 308: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2109353095293045
    2. ':' → logprob: -1.710935354232788
    3. '       ' → logprob: -5.085935115814209
    4. '           ' → logprob: -5.835935115814209
    5. ' and' → logprob: -8.585935592651367
    6. ',' → logprob: -9.460935592651367
    7. '):
' → logprob: -10.585935592651367
    8. ':

' → logprob: -11.085935592651367
    9. '   ' → logprob: -11.210935592651367
    10. '<|end|>' → logprob: -11.460935592651367

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031310133635997772
    2. '
' → logprob: -6.128130912780762
    3. ' if' → logprob: -7.628130912780762
    4. ' 
' → logprob: -8.878130912780762
    5. '\n' → logprob: -9.128130912780762
    6. '\' → logprob: -10.128130912780762
    7. ':
' → logprob: -10.253130912780762
    8. 'if' → logprob: -10.628130912780762
    9. '       ' → logprob: -10.878130912780762
    10. '```' → logprob: -11.003130912780762

Token 310: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33439233899116516
    2. '           ' → logprob: -1.8343923091888428
    3. 'if' (adapté à ' if') → logprob: -2.0843923091888428
    4. '
' → logprob: -8.959392547607422
    5. '       ' → logprob: -13.834392547607422
    6. '   ' → logprob: -13.834392547607422
    7. '            
' → logprob: -14.084392547607422
    8. ' 
' → logprob: -14.584392547607422
    9. '          ' → logprob: -14.834392547607422
    10. '```' → logprob: -15.209392547607422

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142309367656708
    2. ' self' → logprob: -1.7014230489730835
    3. '           ' → logprob: -11.826422691345215
    4. '(self' → logprob: -13.576422691345215
    5. ' not' → logprob: -14.451422691345215
    6. 'not' → logprob: -15.201422691345215
    7. 'candidate' → logprob: -15.326422691345215
    8. '	self' → logprob: -16.57642364501953
    9. '               ' → logprob: -17.57642364501953
    10. 'Self' → logprob: -17.70142364501953

Token 312: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00020687808864749968
    2. 'is' → logprob: -8.62520694732666
    3. '.' → logprob: -10.87520694732666
    4. '.s' → logprob: -12.00020694732666
    5. ' .' → logprob: -13.87520694732666
    6. 's' → logprob: -15.12520694732666
    7. ').' → logprob: -15.12520694732666
    8. '.next' → logprob: -15.25020694732666
    9. '_.' → logprob: -16.250205993652344
    10. '   ' → logprob: -16.250205993652344

Token 313: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.750001907348633
    3. ' _' → logprob: -15.375001907348633
    4. 'prime' → logprob: -16.125001907348633
    5. '
' → logprob: -19.125001907348633
    6. '_
' → logprob: -19.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. '_candidate' → logprob: -20.250001907348633
    9. '_pal' → logprob: -20.250001907348633
    10. '\' → logprob: -20.375001907348633

Token 314: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -4.310693111619912e-05
    2. '(' → logprob: -10.125042915344238
    3. 'candidate' → logprob: -13.125042915344238
    4. ' (' → logprob: -14.250042915344238
    5. '(c' → logprob: -15.750042915344238
    6. ' candidate' → logprob: -16.500043869018555
    7. '(
' → logprob: -16.500043869018555
    8. '           ' → logprob: -20.000043869018555
    9. '_candidate' → logprob: -20.000043869018555
    10. '((' → logprob: -21.125043869018555

Token 315: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048611659556627274
    2. '):' → logprob: -3.048611640930176
    3. ':' → logprob: -11.798611640930176
    4. ' ):
' → logprob: -12.048611640930176
    5. '           ' → logprob: -12.423611640930176
    6. '):
' → logprob: -12.798611640930176
    7. ')' → logprob: -13.173611640930176
    8. '):

' → logprob: -13.923611640930176
    9. ':
' → logprob: -14.173611640930176
    10. ' ):' → logprob: -14.923611640930176

Token 316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000284696085145697
    2. ' return' → logprob: -8.625285148620605
    3. ':
' → logprob: -10.375285148620605
    4. 'return' → logprob: -10.500285148620605
    5. '           ' → logprob: -11.250285148620605
    6. '
' → logprob: -11.375285148620605
    7. ':return' → logprob: -11.500285148620605
    8. ':' → logprob: -12.500285148620605
    9. '                   ' → logprob: -12.625285148620605
    10. '                
' → logprob: -13.750285148620605

Token 317: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5821969509124756
    2. ' return' → logprob: -0.8321969509124756
    3. '               ' → logprob: -5.332197189331055
    4. '                   ' → logprob: -6.582197189331055
    5. '
' → logprob: -11.332197189331055
    6. '           ' → logprob: -12.082197189331055
    7. '	return' → logprob: -13.832197189331055
    8. '   ' → logprob: -14.832197189331055
    9. '{return' → logprob: -15.207197189331055
    10. ':return' → logprob: -15.457197189331055

Token 318: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.07888978719711304
    2. ' candidate' → logprob: -2.578889846801758
    3. '(candidate' → logprob: -17.828889846801758
    4. '_candidate' → logprob: -17.953889846801758
    5. ' candidat' → logprob: -18.703889846801758
    6. 'Candidate' → logprob: -19.203889846801758
    7. 'cand' → logprob: -19.703889846801758
    8. '           ' → logprob: -19.828889846801758
    9. ' candidato' → logprob: -20.453889846801758
    10. 'c' → logprob: -20.828889846801758

Token 319: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.4849443838757e-06
    2. '            
' → logprob: -13.250004768371582
    3. '       ' → logprob: -13.500004768371582
    4. '   ' → logprob: -14.750004768371582
    5. 'candidate' → logprob: -15.250004768371582
    6. '
' → logprob: -16.000003814697266
    7. '          ' → logprob: -16.000003814697266
    8. '		' → logprob: -16.625003814697266
    9. '               ' → logprob: -16.625003814697266
    10. 'else' → logprob: -16.625003814697266

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.128163257315464e-07
    2. '       ' → logprob: -16.5
    3. '          ' → logprob: -16.625
    4. '            
' → logprob: -17.5
    5. '		' → logprob: -18.25
    6. '   ' → logprob: -18.5
    7. ',' → logprob: -18.75
    8. '               ' → logprob: -18.875
    9. '         ' → logprob: -19.375
    10. '#' → logprob: -19.75

Token 321: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.10775312036275864
    2. '           ' → logprob: -2.857753038406372
    3. ' candidate' → logprob: -3.107753038406372
    4. '   ' → logprob: -10.732752799987793
    5. '(candidate' → logprob: -10.982752799987793
    6. 'c' → logprob: -11.982752799987793
    7. '
' → logprob: -13.232752799987793
    8. '               ' → logprob: -13.357752799987793
    9. '_candidate' → logprob: -13.607752799987793
    10. ' candidat' → logprob: -14.357752799987793

Token 322: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03804171830415726
    2. ' +=' → logprob: -3.288041830062866
    3. '+' → logprob: -15.413042068481445
    4. ']+=' → logprob: -17.538042068481445
    5. '=' → logprob: -18.163042068481445
    6. '```' → logprob: -19.538042068481445
    7. '+=(' → logprob: -19.788042068481445
    8. '+="' → logprob: -20.163042068481445
    9. '+='' → logprob: -20.538042068481445
    10. '   ' → logprob: -21.288042068481445

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -21.875017166137695
    4. '```' → logprob: -21.875017166137695
    5. ' ' → logprob: -22.375017166137695
    6. '
' → logprob: -22.625017166137695
    7. '۱' → logprob: -22.875017166137695
    8. '１' → logprob: -23.000017166137695
    9. '  ' → logprob: -24.187517166137695
    10. '१' → logprob: -24.687517166137695

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -22.75
    4. '
' → logprob: -22.75
    5. '```' → logprob: -23.0
    6. '１' → logprob: -23.125
    7. '۱' → logprob: -23.125
    8. '2' → logprob: -23.875
    9. '१' → logprob: -24.5
    10. '' → logprob: -24.9375

Token 325: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05032837390899658
    2. 'def' → logprob: -3.050328254699707
    3. '
' → logprob: -7.175328254699707
    4. ' def' → logprob: -7.800328254699707
    5. '    
' → logprob: -7.925328254699707
    6. '```' → logprob: -9.050328254699707
    7. '<|end|>' → logprob: -9.800328254699707
    8. '        
' → logprob: -12.050328254699707
    9. '  ' → logprob: -12.050328254699707
    10. '	def' → logprob: -12.425328254699707

Token 327: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005894906935282052
    2. ' def' → logprob: -7.750589370727539
    3. '   ' → logprob: -8.750589370727539
    4. '```' → logprob: -16.00058937072754
    5. '    
' → logprob: -16.12558937072754
    6. '	def' → logprob: -16.37558937072754
    7. '
' → logprob: -16.62558937072754
    8. '  ' → logprob: -18.00058937072754
    9. ' ' → logprob: -18.75058937072754
    10. '

' → logprob: -19.62558937072754

Token 328: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00029995047952979803
    2. ' prev' → logprob: -8.125300407409668
    3. 'def' → logprob: -12.875300407409668
    4. 'previous' → logprob: -14.750300407409668
    5. '_prev' → logprob: -15.125300407409668
    6. '.prev' → logprob: -15.625300407409668
    7. '	prev' → logprob: -15.625300407409668
    8. '   ' → logprob: -15.875300407409668
    9. 'pre' → logprob: -16.75029945373535
    10. 'Prev' → logprob: -16.87529945373535

Token 329: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.578184497309849e-05
    2. '_' → logprob: -9.500085830688477
    3. ''_' → logprob: -12.750085830688477
    4. '_p' → logprob: -13.750085830688477
    5. '_prev' → logprob: -14.000085830688477
    6. '_prior' → logprob: -14.125085830688477
    7. '_pr' → logprob: -14.250085830688477
    8. ' _' → logprob: -14.500085830688477
    9. '_previous' → logprob: -14.750085830688477
    10. '```' → logprob: -14.750085830688477

Token 330: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5928495486150496e-05
    2. 'self' → logprob: -11.500016212463379
    3. '(' → logprob: -12.125016212463379
    4. '   ' → logprob: -15.750016212463379
    5. ' (' → logprob: -16.625015258789062
    6. '       ' → logprob: -17.000015258789062
    7. ' self' → logprob: -17.125015258789062
    8. 'def' → logprob: -17.875015258789062
    9. '(
' → logprob: -18.500015258789062
    10. '(s' → logprob: -19.500015258789062

Token 331: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00041339205927215517
    2. 'self' → logprob: -8.000412940979004
    3. ',' → logprob: -10.625412940979004
    4. '   ' → logprob: -10.750412940979004
    5. '       ' → logprob: -11.125412940979004
    6. ' (' → logprob: -11.625412940979004
    7. ' self' → logprob: -12.625412940979004
    8. '(' → logprob: -13.000412940979004
    9. ')' → logprob: -14.000412940979004
    10. '
' → logprob: -14.000412940979004

Token 332: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.7028627395629883
    2. 'start' → logprob: -0.7028627395629883
    3. 'self' → logprob: -4.952862739562988
    4. ' self' → logprob: -5.952862739562988
    5. '   ' → logprob: -12.952862739562988
    6. ' ' → logprob: -13.202862739562988
    7. '       ' → logprob: -13.327862739562988
    8. 'def' → logprob: -14.702862739562988
    9. '	start' → logprob: -15.952862739562988
    10. 'end' → logprob: -16.327861785888672

Token 333: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00229620561003685
    2. '-' → logprob: -6.877295970916748
    3. ' -' → logprob: -7.002295970916748
    4. '   ' → logprob: -8.877296447753906
    5. ' :' → logprob: -9.252296447753906
    6. '       ' → logprob: -9.752296447753906
    7. '):' → logprob: -11.002296447753906
    8. ')' → logprob: -11.377296447753906
    9. ',' → logprob: -11.752296447753906
    10. 'self' → logprob: -12.377296447753906

Token 334: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12695635855197906
    2. ' int' → logprob: -2.1269564628601074
    3. '1' → logprob: -10.62695598602295
    4. ' ' → logprob: -13.75195598602295
    5. '       ' → logprob: -13.87695598602295
    6. '   ' → logprob: -14.25195598602295
    7. '(int' → logprob: -14.62695598602295
    8. ':int' → logprob: -15.00195598602295
    9. '<int' → logprob: -15.25195598602295
    10. ')' → logprob: -15.87695598602295

Token 335: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6869505643844604
    2. '):' → logprob: -1.1869505643844604
    3. '-' → logprob: -2.18695068359375
    4. ')' → logprob: -2.93695068359375
    5. ' -' → logprob: -4.06195068359375
    6. ':' → logprob: -5.31195068359375
    7. '   ' → logprob: -5.81195068359375
    8. '       ' → logprob: -7.43695068359375
    9. ' ):' → logprob: -8.06195068359375
    10. ' ):
' → logprob: -8.18695068359375

Token 336: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004049322451464832
    2. '       ' → logprob: -8.250405311584473
    3. ':
' → logprob: -10.125405311584473
    4. '   ' → logprob: -10.375405311584473
    5. ' :' → logprob: -10.375405311584473
    6. ':int' → logprob: -10.500405311584473
    7. '=' → logprob: -11.750405311584473
    8. 'int' → logprob: -12.875405311584473
    9. '-' → logprob: -14.500405311584473
    10. ' =' → logprob: -14.625405311584473

Token 337: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023248974233865738
    2. ' int' → logprob: -3.7732489109039307
    3. 'start' → logprob: -12.898248672485352
    4. '(int' → logprob: -14.648248672485352
    5. ' start' → logprob: -14.773248672485352
    6. '   ' → logprob: -16.14824867248535
    7. '
' → logprob: -18.14824867248535
    8. '       ' → logprob: -18.27324867248535
    9. ' ' → logprob: -18.52324867248535
    10. 'def' → logprob: -18.77324867248535

Token 338: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2284824550151825
    2. ':' → logprob: -1.9784824848175049
    3. ':
' → logprob: -2.728482484817505
    4. '   ' → logprob: -7.728482246398926
    5. '):
' → logprob: -9.228482246398926
    6. '           ' → logprob: -10.728482246398926
    7. ',' → logprob: -10.853482246398926
    8. '        ' → logprob: -11.353482246398926
    9. ' :
' → logprob: -11.478482246398926
    10. ' :' → logprob: -11.603482246398926

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08390576392412186
    2. 'candidate' → logprob: -2.8339056968688965
    3. ' candidate' → logprob: -3.8339056968688965
    4. 'prev' → logprob: -10.833906173706055
    5. '_candidate' → logprob: -10.958906173706055
    6. '   ' → logprob: -11.208906173706055
    7. ' if' → logprob: -12.083906173706055
    8. ' prev' → logprob: -12.583906173706055
    9. 'if' → logprob: -12.833906173706055
    10. ' previous' → logprob: -13.333906173706055

Token 340: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.003004565602168441
    2. '       ' → logprob: -6.503004550933838
    3. ' candidate' → logprob: -6.503004550933838
    4. 'if' → logprob: -14.628005027770996
    5. 'for' → logprob: -14.753005027770996
    6. '_candidate' → logprob: -15.003005027770996
    7. '(candidate' → logprob: -15.378005027770996
    8. 'prev' → logprob: -15.753005027770996
    9. '```' → logprob: -15.878005027770996
    10. '   ' → logprob: -15.878005027770996

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395956993103
    2. ' =' → logprob: -0.8259395956993103
    3. '=start' → logprob: -15.700939178466797
    4. '＝' → logprob: -18.075939178466797
    5. ' ' → logprob: -19.075939178466797
    6. '.=' → logprob: -19.075939178466797
    7. '=int' → logprob: -19.575939178466797
    8. '=end' → logprob: -20.075939178466797
    9. '-=' → logprob: -20.575939178466797
    10. '=cut' → logprob: -20.700939178466797

Token 342: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.048587486147880554
    2. ' start' → logprob: -3.0485875606536865
    3. '[start' → logprob: -16.423587799072266
    4. '	start' → logprob: -17.798587799072266
    5. '=start' → logprob: -19.173587799072266
    6. '       ' → logprob: -19.298587799072266
    7. '(start' → logprob: -19.423587799072266
    8. '   ' → logprob: -19.548587799072266
    9. ':start' → logprob: -21.548587799072266
    10. ' ' → logprob: -22.048587799072266

Token 343: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759397745132446
    2. '-' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.950940132141113
    4. '   ' → logprob: -16.825939178466797
    5. '       ' → logprob: -16.950939178466797
    6. '1' → logprob: -17.325939178466797
    7. '
' → logprob: -17.700939178466797
    8. ' ' → logprob: -18.200939178466797
    9. '-
' → logprob: -18.575939178466797
    10. '()-' → logprob: -19.200939178466797

Token 344: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -19.8750057220459
    4. '۱' → logprob: -20.2500057220459
    5. '
' → logprob: -20.8750057220459
    6. '   ' → logprob: -21.7500057220459
    7. '<|end|>' → logprob: -22.0625057220459
    8. '１' → logprob: -22.1250057220459
    9. '       ' → logprob: -22.3125057220459
    10. '১' → logprob: -22.3750057220459

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -20.375
    4. '۱' → logprob: -20.625
    5. '
' → logprob: -22.0
    6. '   ' → logprob: -22.375
    7. '१' → logprob: -22.375
    8. '１' → logprob: -22.625
    9. '১' → logprob: -22.75
    10. '-' → logprob: -23.25

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05971207842230797
    2. '<|end|>' → logprob: -3.6847121715545654
    3. ' while' → logprob: -4.309711933135986
    4. 'while' → logprob: -4.434711933135986
    5. '
' → logprob: -5.059711933135986
    6. '	while' → logprob: -7.309711933135986
    7. '        
' → logprob: -8.934712409973145
    8. '   ' → logprob: -9.059712409973145
    9. '	' → logprob: -9.684712409973145
    10. '<|end|>' → logprob: -10.184712409973145

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23975138366222382
    2. 'while' → logprob: -1.8647513389587402
    3. ' while' → logprob: -2.8647513389587402
    4. '	while' → logprob: -7.48975133895874
    5. '
' → logprob: -8.114751815795898
    6. '<|end|>' → logprob: -8.114751815795898
    7. '   ' → logprob: -10.239751815795898
    8. '        
' → logprob: -11.239751815795898
    9. '```' → logprob: -12.114751815795898
    10. '	' → logprob: -12.239751815795898

Token 348: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.038899876177310944
    2. ' while' → logprob: -3.2888998985290527
    3. '       ' → logprob: -7.163899898529053
    4. '	while' → logprob: -9.663899421691895
    5. '
' → logprob: -11.288899421691895
    6. '<|end|>' → logprob: -12.413899421691895
    7. '   ' → logprob: -13.538899421691895
    8. 'While' → logprob: -14.038899421691895
    9. '        
' → logprob: -14.663899421691895
    10. '>' → logprob: -15.163899421691895

Token 349: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.07889000326395035
    2. ' candidate' → logprob: -2.578890085220337
    3. '(candidate' → logprob: -15.953889846801758
    4. 'True' → logprob: -17.078889846801758
    5. '   ' → logprob: -17.578889846801758
    6. '       ' → logprob: -18.078889846801758
    7. '_candidate' → logprob: -18.828889846801758
    8. ' True' → logprob: -19.328889846801758
    9. '     ' → logprob: -19.578889846801758
    10. '候' → logprob: -19.578889846801758

Token 350: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0072647822089493275
    2. ' >' → logprob: -5.507264614105225
    3. '>=' → logprob: -5.757264614105225
    4. ' >=' → logprob: -10.757265090942383
    5. '&gt' → logprob: -15.757265090942383
    6. '>
' → logprob: -17.132265090942383
    7. '   ' → logprob: -17.257265090942383
    8. 'and' → logprob: -17.882265090942383
    9. ' ' → logprob: -18.382265090942383
    10. '()>' → logprob: -18.507265090942383

Token 351: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.625027656555176
    3. '=' → logprob: -12.625027656555176
    4. '0' → logprob: -17.50002670288086
    5. '
' → logprob: -17.50002670288086
    6. '   ' → logprob: -18.62502670288086
    7. '１' → logprob: -19.62502670288086
    8. '_' → logprob: -20.25002670288086
    9. '۱' → logprob: -20.37502670288086
    10. '    ' → logprob: -20.75002670288086

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '=' → logprob: -16.0
    4. '0' → logprob: -18.375
    5. '１' → logprob: -20.125
    6. '_' → logprob: -21.125
    7. '   ' → logprob: -21.5
    8. '2' → logprob: -21.625
    9. '

' → logprob: -21.625
    10. '۱' → logprob: -22.125

Token 353: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4321681261062622
    2. ':' → logprob: -1.0571681261062622
    3. ' and' → logprob: -6.307168006896973
    4. '           ' → logprob: -6.682168006896973
    5. '       ' → logprob: -8.182168006896973
    6. 'and' → logprob: -10.307168006896973
    7. ':
' → logprob: -11.182168006896973
    8. '   ' → logprob: -11.307168006896973
    9. ':

' → logprob: -11.307168006896973
    10. ' :
' → logprob: -11.307168006896973

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.074907287256792e-05
    2. ' if' → logprob: -10.12506103515625
    3. '<|end|>' → logprob: -12.00006103515625
    4. '       ' → logprob: -12.12506103515625
    5. '	       ' → logprob: -13.50006103515625
    6. ' and' → logprob: -13.75006103515625
    7. 'if' → logprob: -13.75006103515625
    8. ':
' → logprob: -13.75006103515625
    9. '
' → logprob: -14.00006103515625
    10. '```' → logprob: -14.00006103515625

Token 355: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7446009516716003
    2. 'if' (adapté à ' if') → logprob: -0.7446009516716003
    3. ' if' → logprob: -2.994601011276245
    4. '   ' → logprob: -9.369601249694824
    5. '       ' → logprob: -11.744601249694824
    6. '	if' → logprob: -14.244601249694824
    7. 'If' → logprob: -14.619601249694824
    8. ' ' → logprob: -15.119601249694824
    9. '	       ' → logprob: -15.119601249694824
    10. '               ' → logprob: -15.494601249694824

Token 356: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47407954931259155
    2. 'self' → logprob: -0.9740795493125916
    3. '           ' → logprob: -13.099079132080078
    4. '(self' → logprob: -14.849079132080078
    5. '	self' → logprob: -16.474079132080078
    6. '   ' → logprob: -17.599079132080078
    7. '[self' → logprob: -17.599079132080078
    8. '               ' → logprob: -18.224079132080078
    9. 'Self' → logprob: -18.474079132080078
    10. '
' → logprob: -18.974079132080078

Token 357: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00021295747137628496
    2. '.' → logprob: -8.500212669372559
    3. 'is' → logprob: -11.625212669372559
    4. ' .' → logprob: -14.875212669372559
    5. '.s' → logprob: -16.125213623046875
    6. '.prev' → logprob: -17.875213623046875
    7. '.isnan' → logprob: -18.375213623046875
    8. '.
' → logprob: -18.375213623046875
    9. ').' → logprob: -18.500213623046875
    10. ' is' → logprob: -18.750213623046875

Token 358: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.339278580620885e-06
    2. 'prime' → logprob: -13.000001907348633
    3. '_' → logprob: -18.500001907348633
    4. 'Prime' → logprob: -19.250001907348633
    5. ' prime' → logprob: -19.875001907348633
    6. '_candidate' → logprob: -20.375001907348633
    7. ' _' → logprob: -20.875001907348633
    8. '```' → logprob: -21.000001907348633
    9. '\' → logprob: -21.375001907348633
    10. '_primary' → logprob: -21.500001907348633

Token 359: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.125000953674316
    3. 'candidate' → logprob: -14.625000953674316
    4. ' (' → logprob: -17.375001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '(c' → logprob: -20.125001907348633
    7. ' candidate' → logprob: -20.250001907348633
    8. 'cand' → logprob: -22.375001907348633
    9. '(cipher' → logprob: -22.625001907348633
    10. '           ' → logprob: -22.875001907348633

Token 360: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16025835275650024
    2. '):' → logprob: -1.9102582931518555
    3. '           ' → logprob: -11.160258293151855
    4. '):

' → logprob: -12.160258293151855
    5. '               ' → logprob: -12.285258293151855
    6. ')' → logprob: -12.410258293151855
    7. '):
' → logprob: -12.660258293151855
    8. ':' → logprob: -13.410258293151855
    9. ' ):
' → logprob: -14.535258293151855
    10. '       ' → logprob: -14.910258293151855

Token 361: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.12127808178775e-05
    2. ' return' → logprob: -10.250051498413086
    3. 'return' → logprob: -11.375051498413086
    4. '           ' → logprob: -12.875051498413086
    5. ':return' → logprob: -14.250051498413086
    6. '              ' → logprob: -14.750051498413086
    7. '                ' → logprob: -16.375051498413086
    8. '                
' → logprob: -16.375051498413086
    9. ':
' → logprob: -16.625051498413086
    10. '
' → logprob: -16.875051498413086

Token 362: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3004518747329712
    2. 'return' (adapté à ' return') → logprob: -1.5504518747329712
    3. '               ' → logprob: -3.0504517555236816
    4. '	return' → logprob: -10.92545223236084
    5. '           ' → logprob: -12.55045223236084
    6. '   ' → logprob: -13.17545223236084
    7. ':return' → logprob: -13.30045223236084
    8. '
' → logprob: -14.42545223236084
    9. '                   ' → logprob: -14.55045223236084
    10. ' ' → logprob: -15.55045223236084

Token 363: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.10020667314529419
    2. ' candidate' → logprob: -2.3502066135406494
    3. '(candidate' → logprob: -16.97520637512207
    4. ' candidat' → logprob: -17.47520637512207
    5. 'c' → logprob: -18.35020637512207
    6. '_candidate' → logprob: -19.22520637512207
    7. ' candidato' → logprob: -19.35020637512207
    8. '           ' → logprob: -19.47520637512207
    9. 'Candidate' → logprob: -20.47520637512207
    10. 'cand' → logprob: -20.97520637512207

Token 364: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.73314929776825e-05
    2. '
' → logprob: -10.12508773803711
    3. 'candidate' → logprob: -10.62508773803711
    4. '       ' → logprob: -11.12508773803711
    5. '            
' → logprob: -12.50008773803711
    6. '               ' → logprob: -13.50008773803711
    7. '		' → logprob: -14.12508773803711
    8. '   ' → logprob: -14.37508773803711
    9. ' candidate' → logprob: -14.50008773803711
    10. '          ' → logprob: -14.87508773803711

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.266944157890975e-05
    2. '       ' → logprob: -10.000072479248047
    3. 'candidate' → logprob: -11.250072479248047
    4. '
' → logprob: -11.750072479248047
    5. '            
' → logprob: -12.625072479248047
    6. '   ' → logprob: -14.000072479248047
    7. '               ' → logprob: -14.375072479248047
    8. '		' → logprob: -14.500072479248047
    9. '          ' → logprob: -15.000072479248047
    10. ' candidate' → logprob: -15.500072479248047

Token 366: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.014173506759107113
    2. ' candidate' → logprob: -4.26417350769043
    3. '           ' → logprob: -11.51417350769043
    4. '(candidate' → logprob: -17.26417350769043
    5. '_candidate' → logprob: -18.51417350769043
    6. '               ' → logprob: -19.01417350769043
    7. '       ' → logprob: -19.38917350769043
    8. ' candidat' → logprob: -19.38917350769043
    9. '   ' → logprob: -19.63917350769043
    10. ' candidato' → logprob: -19.88917350769043

Token 367: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.009318843483924866
    2. '-' → logprob: -4.759318828582764
    3. ' -=' → logprob: -7.259318828582764
    4. '+=' → logprob: -15.384319305419922
    5. ' -' → logprob: -16.259319305419922
    6. '=' → logprob: -16.509319305419922
    7. '   ' → logprob: -17.134319305419922
    8. '```' → logprob: -19.009319305419922
    9. ')-' → logprob: -19.884319305419922
    10. '()-' → logprob: -20.134319305419922

Token 368: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۱' → logprob: -20.87506675720215
    4. '<|end|>' → logprob: -20.87506675720215
    5. '
' → logprob: -21.25006675720215
    6. '   ' → logprob: -21.25006675720215
    7. '１' → logprob: -21.37506675720215
    8. '```' → logprob: -21.37506675720215
    9. ' ' → logprob: -21.62506675720215
    10. '  ' → logprob: -22.87506675720215

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -20.5
    4. '۱' → logprob: -21.5
    5. '<|end|>' → logprob: -22.25
    6. '   ' → logprob: -22.5625
    7. '2' → logprob: -23.125
    8. '
' → logprob: -23.25
    9. '১' → logprob: -23.4375
    10. '１' → logprob: -23.5

Token 370: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3321899175643921
    2. '       ' → logprob: -1.832189917564392
    3. '<|end|>' → logprob: -2.2071900367736816
    4. 'return' → logprob: -4.582190036773682
    5. '
' → logprob: -7.457190036773682
    6. '```' → logprob: -7.707190036773682
    7. ' return' → logprob: -7.957190036773682
    8. '<|end|>' → logprob: -8.707189559936523
    9. '0' → logprob: -9.082189559936523
    10. '        
' → logprob: -9.207189559936523

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053805962204933167
    2. 'return' → logprob: -3.4288060665130615
    3. '<|end|>' → logprob: -4.178805828094482
    4. '
' → logprob: -5.678805828094482
    5. ' return' → logprob: -6.928805828094482
    6. '   ' → logprob: -10.80380630493164
    7. ':return' → logprob: -10.80380630493164
    8. '0' → logprob: -11.05380630493164
    9. '	' → logprob: -11.05380630493164
    10. '```' → logprob: -11.17880630493164

Token 372: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04195209592580795
    2. 'raise' (adapté à ' raise') → logprob: -3.291952133178711
    3. '       ' → logprob: -5.916952133178711
    4. 'None' → logprob: -7.041952133178711
    5. ' return' → logprob: -8.541952133178711
    6. ' raise' → logprob: -9.041952133178711
    7. '
' → logprob: -12.041952133178711
    8. '0' → logprob: -12.291952133178711
    9. '#' → logprob: -13.041952133178711
    10. '   ' → logprob: -13.666952133178711

Token 373: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.04859509319067001
    2. 'Value' → logprob: -3.0485951900482178
    3. '(Value' → logprob: -13.048595428466797
    4. '_Value' → logprob: -13.673595428466797
    5. ' ' → logprob: -13.798595428466797
    6. '	Value' → logprob: -13.923595428466797
    7. '_value' → logprob: -14.173595428466797
    8. ' Stop' → logprob: -14.423595428466797
    9. '<Value' → logprob: -14.423595428466797
    10. '.Value' → logprob: -15.173595428466797

Token 374: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.5504363775253296
    2. 'Error' → logprob: -0.9254363775253296
    3. 'alue' → logprob: -4.050436496734619
    4. 'ror' → logprob: -5.300436496734619
    5. 'l' → logprob: -6.050436496734619
    6. 'al' → logprob: -6.925436496734619
    7. '   ' → logprob: -7.925436496734619
    8. 'r' → logprob: -8.050436019897461
    9. 'error' → logprob: -9.175436019897461
    10. 'Value' → logprob: -9.550436019897461

Token 375: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -9.388769103679806e-05
    2. '(' → logprob: -9.750093460083008
    3. '('' → logprob: -10.250093460083008
    4. '(f' → logprob: -16.375093460083008
    5. '(
' → logprob: -17.375093460083008
    6. '("'' → logprob: -18.250093460083008
    7. '("")' → logprob: -20.375093460083008
    8. '()' → logprob: -21.000093460083008
    9. '"' → logprob: -21.125093460083008
    10. '(

' → logprob: -21.375093460083008

Token 376: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0007280402351170778
    2. '"No' → logprob: -7.500728130340576
    3. 'There' → logprob: -8.750727653503418
    4. ' No' → logprob: -11.875727653503418
    5. 'Previous' → logprob: -11.875727653503418
    6. 'Prev' → logprob: -13.875727653503418
    7. '"' → logprob: -14.375727653503418
    8. '"There' → logprob: -15.000727653503418
    9. 'no' → logprob: -15.500727653503418
    10. '>No' → logprob: -15.625727653503418

Token 377: ' prime' (ID: 9197)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' previous' → logprob: -0.29161664843559265
    2. ' prime' → logprob: -1.416616678237915
    3. 'previous' → logprob: -4.916616439819336
    4. ' smaller' → logprob: -6.541616439819336
    5. 'prime' → logprob: -7.541616439819336
    6. 'prev' → logprob: -8.166616439819336
    7. ' prev' → logprob: -8.166616439819336
    8. ' preceding' → logprob: -9.041616439819336
    9. ' more' → logprob: -9.416616439819336
    10. 'Previous' → logprob: -9.416616439819336

Token 378: ' smaller' (ID: 13679)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.1601109802722931
    2. 'number' → logprob: -3.4101109504699707
    3. ' found' → logprob: -3.5351109504699707
    4. 's' → logprob: -3.7851109504699707
    5. ' prime' → logprob: -3.7851109504699707
    6. 'prime' → logprob: -4.285110950469971
    7. ' before' → logprob: -4.910110950469971
    8. ' less' → logprob: -5.160110950469971
    9. 'found' → logprob: -5.410110950469971
    10. ' numbers' → logprob: -5.910110950469971

Token 379: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.061975300312042236
    2. 'than' → logprob: -2.8119752407073975
    3. '_than' → logprob: -11.936975479125977
    4. ' ' → logprob: -14.061975479125977
    5. 'Than' → logprob: -15.186975479125977
    6. '   ' → logprob: -16.936975479125977
    7. '1' → logprob: -18.311975479125977
    8. '  ' → logprob: -18.686975479125977
    9. 'thane' → logprob: -18.811975479125977
    10. '       ' → logprob: -18.936975479125977

Token 380: ' given' (ID: 4335)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.36636120080947876
    2. ' start' → logprob: -1.616361141204834
    3. '2' → logprob: -2.366361141204834
    4. ' ' → logprob: -4.866361141204834
    5. ' the' → logprob: -5.741361141204834
    6. 'the' → logprob: -6.616361141204834
    7. ' given' → logprob: -6.616361141204834
    8. 'given' → logprob: -7.616361141204834
    9. '1' → logprob: -9.491361618041992
    10. ' this' → logprob: -10.616361618041992

Token 381: ' number' (ID: 2086)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.1786474585533142
    2. 'start' → logprob: -2.553647518157959
    3. ' number' → logprob: -2.553647518157959
    4. ' value' → logprob: -5.053647518157959
    5. 'number' → logprob: -7.178647518157959
    6. ' ' → logprob: -7.803647518157959
    7. 'value' → logprob: -8.0536470413208
    8. ')' → logprob: -10.1786470413208
    9. ' argument' → logprob: -10.5536470413208
    10. ' input' → logprob: -10.8036470413208

Token 382: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007554574403911829
    2. ' found' → logprob: -5.257554531097412
    3. ' exists' → logprob: -7.007554531097412
    4. '.")' → logprob: -7.632554531097412
    5. ')")' → logprob: -8.13255500793457
    6. ' was' → logprob: -8.63255500793457
    7. ')' → logprob: -9.13255500793457
    8. '"' → logprob: -9.50755500793457
    9. 'found' → logprob: -9.75755500793457
    10. ' ")' → logprob: -10.13255500793457

Token 383: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.3596853831550106e-05
    2. '```' → logprob: -10.750053405761719
    3. '<|end|>' → logprob: -11.125053405761719
    4. '#' → logprob: -11.625053405761719
    5. ' class' → logprob: -12.250053405761719
    6. '<class' → logprob: -13.875053405761719
    7. 'import' → logprob: -14.500053405761719
    8. '"class' → logprob: -14.625053405761719
    9. '[' → logprob: -14.750053405761719
    10. 'def' → logprob: -14.875053405761719

Token 384: ' Prime' (ID: 20134)
  Prédit: ' Trial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Trial' → logprob: -1.43430757522583
    2. 'Prime' → logprob: -1.80930757522583
    3. 'Trial' → logprob: -1.80930757522583
    4. ' Prime' → logprob: -2.18430757522583
    5. 'Segment' → logprob: -2.93430757522583
    6. ' Miller' → logprob: -3.05930757522583
    7. 'Na' → logprob: -3.43430757522583
    8. 'Dynamic' → logprob: -3.55930757522583
    9. ' Na' → logprob: -3.93430757522583
    10. ' Seg' → logprob: -4.68430757522583

Token 385: 'Context' (ID: 2522)
  Prédit: 'Generator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -0.5187770128250122
    2. 'Finder' → logprob: -1.7687770128250122
    3. 'Iterator' → logprob: -2.2687768936157227
    4. 'Calculator' → logprob: -2.5187768936157227
    5. 'Checker' → logprob: -4.768776893615723
    6. 'Factory' → logprob: -4.768776893615723
    7. 'Number' → logprob: -4.893776893615723
    8. 'Manager' → logprob: -5.018776893615723
    9. 'Cache' → logprob: -5.143776893615723
    10. 'Strategy' → logprob: -6.393776893615723

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003413031517993659
    2. ':
' → logprob: -8.000341415405273
    3. '(' → logprob: -12.500341415405273
    4. '(object' → logprob: -14.375341415405273
    5. ':

' → logprob: -14.375341415405273
    6. '():' → logprob: -15.125341415405273
    7. ' :' → logprob: -15.250341415405273
    8. '(PR' → logprob: -16.375341415405273
    9. ':
' → logprob: -16.500341415405273
    10. ':def' → logprob: -16.625341415405273

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00920144747942686
    2. 'class' → logprob: -5.259201526641846
    3. ' def' → logprob: -6.259201526641846
    4. 'def' → logprob: -6.259201526641846
    5. ' class' → logprob: -9.884201049804688
    6. ':' → logprob: -10.134201049804688
    7. '    ' → logprob: -11.259201049804688
    8. ':
' → logprob: -11.384201049804688
    9. '    
' → logprob: -11.759201049804688
    10. '```' → logprob: -12.259201049804688

Token 388: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10115855187177658
    2. ' def' → logprob: -2.351158618927002
    3. 'class' → logprob: -7.101158618927002
    4. '   ' → logprob: -8.976158142089844
    5. 'strategy' → logprob: -15.226158142089844
    6. '```' → logprob: -15.476158142089844
    7. ' ' → logprob: -15.601158142089844
    8. 'strateg' → logprob: -15.851158142089844
    9. '	def' → logprob: -15.851158142089844
    10. ' strategy' → logprob: -16.851158142089844

Token 389: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.4746246039867401
    2. '__' → logprob: -0.9746246337890625
    3. ' __' → logprob: -8.349624633789062
    4. '_init' → logprob: -8.474624633789062
    5. 'def' → logprob: -9.349624633789062
    6. '```' → logprob: -12.099624633789062
    7. ' init' → logprob: -13.099624633789062
    8. '__
' → logprob: -13.099624633789062
    9. '`' → logprob: -13.724624633789062
    10. '___' → logprob: -13.724624633789062

Token 390: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.25
    3. 'def' → logprob: -17.875
    4. '	init' → logprob: -19.5
    5. '   ' → logprob: -19.625
    6. '(init' → logprob: -19.875
    7. '
' → logprob: -20.0
    8. '_init' → logprob: -20.125
    9. 'call' → logprob: -20.25
    10. 'inite' → logprob: -20.625

Token 391: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0026204893365502357
    2. '__' → logprob: -6.002620697021484
    3. '__(
' → logprob: -8.877620697021484
    4. '(self' → logprob: -12.752620697021484
    5. '__((' → logprob: -13.252620697021484
    6. '__('' → logprob: -15.377620697021484
    7. '___' → logprob: -15.627620697021484
    8. '_(' → logprob: -15.627620697021484
    9. '__("' → logprob: -16.627620697021484
    10. '(' → logprob: -17.002620697021484

Token 392: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2471589798224159e-05
    2. '
' → logprob: -12.000012397766113
    3. ' self' → logprob: -13.000012397766113
    4. 'strategy' → logprob: -13.000012397766113
    5. '   ' → logprob: -13.500012397766113
    6. '(self' → logprob: -15.500012397766113
    7. ',' → logprob: -17.00001335144043
    8. 'strateg' → logprob: -17.25001335144043
    9. '       ' → logprob: -17.37501335144043
    10. '0' → logprob: -17.37501335144043

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07135835289955139
    2. 'self' → logprob: -2.9463584423065186
    3. '__(' → logprob: -4.9463582038879395
    4. '__,' → logprob: -5.4463582038879395
    5. '(self' → logprob: -5.4463582038879395
    6. '__(
' → logprob: -8.446358680725098
    7. ',self' → logprob: -8.946358680725098
    8. ' self' → logprob: -9.446358680725098
    9. '__' → logprob: -9.696358680725098
    10. '_,' → logprob: -9.946358680725098

Token 394: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.017142221331596375
    2. ' strategy' → logprob: -4.392142295837402
    3. 'self' → logprob: -5.517142295837402
    4. '   ' → logprob: -8.017142295837402
    5. 'prime' → logprob: -8.892142295837402
    6. 'strateg' → logprob: -9.767142295837402
    7. ' self' → logprob: -10.892142295837402
    8. ' ' → logprob: -11.017142295837402
    9. '(strategy' → logprob: -11.267142295837402
    10. 'limit' → logprob: -11.642142295837402

Token 395: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002052120165899396
    2. '):' → logprob: -6.252052307128906
    3. '=None' → logprob: -9.252052307128906
    4. ')' → logprob: -11.502052307128906
    5. '):
' → logprob: -12.002052307128906
    6. '=' → logprob: -12.252052307128906
    7. ' ):' → logprob: -12.627052307128906
    8. ' :' → logprob: -12.752052307128906
    9. '<|end|>' → logprob: -16.002052307128906
    10. ' =' → logprob: -16.252052307128906

Token 396: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.31326326727867126
    2. ' Prime' → logprob: -1.3132632970809937
    3. ' prime' → logprob: -13.938262939453125
    4. '_prime' → logprob: -14.938262939453125
    5. 'prime' → logprob: -15.563262939453125
    6. 'Prim' → logprob: -17.313262939453125
    7. ' ' → logprob: -17.438262939453125
    8. 'Primitive' → logprob: -17.563262939453125
    9. '   ' → logprob: -18.688262939453125
    10. 'Primer' → logprob: -19.313262939453125

Token 397: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.9361264946837764e-07
    2. 'Strateg' → logprob: -16.75
    3. ' Strategy' → logprob: -18.125
    4. '_strategy' → logprob: -18.25
    5. 'strategy' → logprob: -18.375
    6. '   ' → logprob: -19.0
    7. ')' → logprob: -19.5
    8. ' strategy' → logprob: -20.0
    9. ' ' → logprob: -20.125
    10. 'Strategies' → logprob: -20.625

Token 398: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5046152472496033
    2. '):
' → logprob: -1.004615306854248
    3. ')' → logprob: -3.504615306854248
    4. ':' → logprob: -11.62961483001709
    5. '):
' → logprob: -12.12961483001709
    6. '):

' → logprob: -13.00461483001709
    7. ')->' → logprob: -14.87961483001709
    8. ' ):' → logprob: -15.12961483001709
    9. ' ):
' → logprob: -15.50461483001709
    10. '=None' → logprob: -15.87961483001709

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007276826072484255
    2. 'self' → logprob: -8.000727653503418
    3. '   ' → logprob: -8.125727653503418
    4. ' self' → logprob: -9.625727653503418
    5. ',' → logprob: -11.375727653503418
    6. ')' → logprob: -11.625727653503418
    7. '```' → logprob: -12.500727653503418
    8. '<|end|>' → logprob: -13.625727653503418
    9. ' ' → logprob: -13.875727653503418
    10. '):
' → logprob: -14.500727653503418

Token 400: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0033806648571044207
    2. ' self' → logprob: -5.75338077545166
    3. '       ' → logprob: -8.50338077545166
    4. '   ' → logprob: -16.878379821777344
    5. '	self' → logprob: -17.378379821777344
    6. '
' → logprob: -18.503379821777344
    7. '        
' → logprob: -20.003379821777344
    8. '(self' → logprob: -20.253379821777344
    9. '        ' → logprob: -20.878379821777344
    10. '     ' → logprob: -21.003379821777344

Token 401: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.04913024231791496
    2. '.' → logprob: -3.0491302013397217
    3. 'strategy' → logprob: -8.2991304397583
    4. ' .' → logprob: -8.2991304397583
    5. '.str' → logprob: -10.1741304397583
    6. ' strategy' → logprob: -12.6741304397583
    7. '._' → logprob: -13.5491304397583
    8. '_strategy' → logprob: -13.9241304397583
    9. '(strategy' → logprob: -14.2991304397583
    10. '   ' → logprob: -15.2991304397583

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688886165618896
    2. ' =' → logprob: -1.136888861656189
    3. '_strategy' → logprob: -11.51188850402832
    4. '   ' → logprob: -13.13688850402832
    5. ' ' → logprob: -13.38688850402832
    6. '.strategy' → logprob: -13.63688850402832
    7. '.' → logprob: -14.26188850402832
    8. '=str' → logprob: -14.38688850402832
    9. 'strategy' → logprob: -14.51188850402832
    10. '(strategy' → logprob: -15.13688850402832

Token 403: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.006715728435665369
    2. 'strategy' → logprob: -5.006715774536133
    3. '(strategy' → logprob: -14.881715774536133
    4. 'strateg' → logprob: -17.381715774536133
    5. '_strategy' → logprob: -18.881715774536133
    6. '.strategy' → logprob: -19.381715774536133
    7. ' strategi' → logprob: -19.631715774536133
    8. ' strategie' → logprob: -20.256715774536133
    9. 'strategie' → logprob: -20.381715774536133
    10. ' strategies' → logprob: -20.381715774536133

Token 404: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28522780537605286
    2. '   ' → logprob: -1.5352277755737305
    3. '    
' → logprob: -3.6602277755737305
    4. '<|end|>' → logprob: -5.1602277755737305
    5. 'def' → logprob: -7.9102277755737305
    6. '  
' → logprob: -8.03522777557373
    7. '

' → logprob: -8.66022777557373
    8. '        
' → logprob: -8.91022777557373
    9. '<|end|>' → logprob: -9.41022777557373
    10. ' 
' → logprob: -9.53522777557373

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07999525219202042
    2. 'def' → logprob: -2.5799951553344727
    3. ' def' → logprob: -6.829995155334473
    4. '    
' → logprob: -10.954995155334473
    5. '
' → logprob: -12.329995155334473
    6. '<|end|>' → logprob: -14.329995155334473
    7. '	def' → logprob: -14.454995155334473
    8. ' ' → logprob: -15.079995155334473
    9. '```' → logprob: -15.079995155334473
    10. '        
' → logprob: -15.954995155334473

Token 406: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023247458040714264
    2. ' def' → logprob: -3.773247480392456
    3. '   ' → logprob: -13.148247718811035
    4. '	def' → logprob: -18.39824676513672
    5. 'de' → logprob: -18.64824676513672
    6. '
' → logprob: -18.89824676513672
    7. ' ' → logprob: -19.02324676513672
    8. '```' → logprob: -20.39824676513672
    9. '  ' → logprob: -20.52324676513672
    10. 'self' → logprob: -20.77324676513672

Token 407: ' find' (ID: 1646)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2254716157913208
    2. ' is' → logprob: -1.6004716157913208
    3. 'next' → logprob: -11.225471496582031
    4. ' ' → logprob: -11.725471496582031
    5. 'def' → logprob: -11.850471496582031
    6. 'set' → logprob: -12.100471496582031
    7. ' next' → logprob: -12.225471496582031
    8. '   ' → logprob: -12.350471496582031
    9. 'has' → logprob: -12.850471496582031
    10. '_is' → logprob: -12.850471496582031

Token 408: '_ne' (ID: 35498)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.004205544013530016
    2. '_prime' → logprob: -6.129205703735352
    3. '_' → logprob: -6.504205703735352
    4. '_previous' → logprob: -8.629205703735352
    5. '_prev' → logprob: -8.879205703735352
    6. '_first' → logprob: -9.129205703735352
    7. '_ne' → logprob: -10.879205703735352
    8. '_last' → logprob: -11.254205703735352
    9. '(self' → logprob: -11.379205703735352
    10. '_max' → logprob: -11.504205703735352

Token 409: 'arest' (ID: 21325)
  Prédit: 'xt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.909333023941144e-05
    2. 'arest' → logprob: -10.375068664550781
    3. 'ext' → logprob: -10.625068664550781
    4. 'x' → logprob: -12.750068664550781
    5. '_xt' → logprob: -12.875068664550781
    6. '_ext' → logprob: -13.625068664550781
    7. 'w' → logprob: -13.750068664550781
    8. '   ' → logprob: -13.875068664550781
    9. 'ar' → logprob: -14.000068664550781
    10. '```' → logprob: -14.250068664550781

Token 410: '_pr' (ID: 18177)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0027110804803669453
    2. '_' → logprob: -6.002711296081543
    3. '(self' → logprob: -8.502711296081543
    4. '(' → logprob: -11.377711296081543
    5. '_pr' → logprob: -12.002711296081543
    6. 'prime' → logprob: -12.752711296081543
    7. '```' → logprob: -12.752711296081543
    8. '_(' → logprob: -13.377711296081543
    9. 'self' → logprob: -13.377711296081543
    10. '_self' → logprob: -13.502711296081543

Token 411: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -9.162282367469743e-05
    2. 'imes' → logprob: -10.375091552734375
    3. '_' → logprob: -11.125091552734375
    4. 'ome' → logprob: -11.875091552734375
    5. '
' → logprob: -12.250091552734375
    6. '#' → logprob: -12.375091552734375
    7. '   ' → logprob: -12.500091552734375
    8. '```' → logprob: -13.000091552734375
    9. '-ime' → logprob: -13.250091552734375
    10. 'me' → logprob: -13.375091552734375

Token 412: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -10.375031471252441
    3. ' (' → logprob: -16.875030517578125
    4. 'self' → logprob: -17.000030517578125
    5. '(
' → logprob: -18.250030517578125
    6. '(s' → logprob: -19.125030517578125
    7. '(sel' → logprob: -19.250030517578125
    8. '(Self' → logprob: -20.250030517578125
    9. '(se' → logprob: -20.375030517578125
    10. ' self' → logprob: -21.000030517578125

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020045305136591196
    2. 'self' → logprob: -6.877004623413086
    3. '(self' → logprob: -7.252004623413086
    4. ' ,' → logprob: -8.502004623413086
    5. ',self' → logprob: -9.877004623413086
    6. '_,' → logprob: -13.252004623413086
    7. ',num' → logprob: -13.752004623413086
    8. ' self' → logprob: -14.252004623413086
    9. ',s' → logprob: -14.502004623413086
    10. ' (' → logprob: -14.502004623413086

Token 414: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.40016135573387146
    2. 'self' → logprob: -2.2751612663269043
    3. 'number' → logprob: -2.5251612663269043
    4. ' num' → logprob: -2.6501612663269043
    5. ' number' → logprob: -2.9001612663269043
    6. ' self' → logprob: -4.650161266326904
    7. 'n' → logprob: -4.650161266326904
    8. ' n' → logprob: -6.275161266326904
    9. '       ' → logprob: -8.900161743164062
    10. '   ' → logprob: -9.025161743164062

Token 415: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006274910410866141
    2. '):' → logprob: -7.500627517700195
    3. ',' → logprob: -10.500627517700195
    4. ')' → logprob: -10.875627517700195
    5. '):
' → logprob: -11.000627517700195
    6. ':int' → logprob: -11.625627517700195
    7. '   ' → logprob: -13.375627517700195
    8. ' :' → logprob: -14.375627517700195
    9. ' ):' → logprob: -15.875627517700195
    10. '       ' → logprob: -16.375627517700195

Token 416: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006168863270431757
    2. ' int' → logprob: -5.256168842315674
    3. 'self' → logprob: -7.006168842315674
    4. ')' → logprob: -10.881169319152832
    5. ' self' → logprob: -12.006169319152832
    6. '   ' → logprob: -12.881169319152832
    7. '(int' → logprob: -14.881169319152832
    8. '       ' → logprob: -15.381169319152832
    9. 'n' → logprob: -16.506168365478516
    10. ':int' → logprob: -17.131168365478516

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006780738476663828
    2. '):' → logprob: -5.006780624389648
    3. '):
' → logprob: -10.006780624389648
    4. '   ' → logprob: -11.131780624389648
    5. ' )' → logprob: -13.131780624389648
    6. ':' → logprob: -13.756780624389648
    7. '       ' → logprob: -13.881780624389648
    8. '):
' → logprob: -14.131780624389648
    9. ')->' → logprob: -15.131780624389648
    10. ',' → logprob: -15.381780624389648

Token 418: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.44852831959724426
    2. ':' → logprob: -1.6985282897949219
    3. ' ->' → logprob: -2.573528289794922
    4. '->' → logprob: -2.698528289794922
    5. '(' → logprob: -4.198528289794922
    6. ')' → logprob: -4.323528289794922
    7. ')->' → logprob: -6.073528289794922
    8. '):' → logprob: -6.448528289794922
    9. '   ' → logprob: -7.448528289794922
    10. '       ' → logprob: -7.448528289794922

Token 419: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.020597713068127632
    2. ' tuple' → logprob: -4.0205979347229
    3. '(tuple' → logprob: -6.0205979347229
    4. 'dict' → logprob: -12.020597457885742
    5. 'Tuple' → logprob: -12.395597457885742
    6. '(dict' → logprob: -13.020597457885742
    7. ' (' → logprob: -13.270597457885742
    8. '(' → logprob: -13.520597457885742
    9. 'list' → logprob: -14.770597457885742
    10. '   ' → logprob: -15.770597457885742

Token 420: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.7372048862162046e-05
    2. '(int' → logprob: -10.875027656555176
    3. '[' → logprob: -12.000027656555176
    4. '[
' → logprob: -13.375027656555176
    5. '|' → logprob: -14.625027656555176
    6. '   ' → logprob: -16.25002670288086
    7. '[in' → logprob: -17.00002670288086
    8. '[Int' → logprob: -17.37502670288086
    9. '<int' → logprob: -17.50002670288086
    10. ':
' → logprob: -17.50002670288086

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ',int' → logprob: -8.625182151794434
    3. 'int' → logprob: -13.750182151794434
    4. ',
' → logprob: -14.125182151794434
    5. ' ,' → logprob: -14.375182151794434
    6. '[int' → logprob: -17.375181198120117
    7. ']int' → logprob: -17.750181198120117
    8. ',bool' → logprob: -18.125181198120117
    9. '   ' → logprob: -18.625181198120117
    10. ' int' → logprob: -19.625181198120117

Token 422: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007461408386006951
    2. ' int' → logprob: -7.250746250152588
    3. '   ' → logprob: -11.00074577331543
    4. 'Optional' → logprob: -11.12574577331543
    5. '[int' → logprob: -13.00074577331543
    6. '	int' → logprob: -14.00074577331543
    7. ']int' → logprob: -15.00074577331543
    8. '...' → logprob: -15.00074577331543
    9. ' ' → logprob: -15.25074577331543
    10. '    ' → logprob: -15.37574577331543

Token 423: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.591245174407959
    2. ']:' → logprob: -0.841245174407959
    3. '):
' → logprob: -4.841245174407959
    4. ']:
' → logprob: -5.216245174407959
    5. ':' → logprob: -7.466245174407959
    6. ',' → logprob: -8.091245651245117
    7. ']' → logprob: -8.091245651245117
    8. ']:
' → logprob: -8.341245651245117
    9. '):
' → logprob: -8.466245651245117
    10. ')' → logprob: -8.716245651245117

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008523935684934258
    2. 'prev' → logprob: -7.625852584838867
    3. 'start' → logprob: -8.500852584838867
    4. 'left' → logprob: -10.000852584838867
    5. '```' → logprob: -10.375852584838867
    6. 'next' → logprob: -11.000852584838867
    7. ' prev' → logprob: -11.125852584838867
    8. ' start' → logprob: -11.875852584838867
    9. '   ' → logprob: -12.000852584838867
    10. 'previous' → logprob: -12.250852584838867

Token 425: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.08109531551599503
    2. '       ' → logprob: -2.8310952186584473
    3. ' prev' → logprob: -4.831095218658447
    4. 'previous' → logprob: -5.206095218658447
    5. 'try' → logprob: -6.081095218658447
    6. 'lower' → logprob: -6.331095218658447
    7. 'if' → logprob: -8.081095695495605
    8. 'next' → logprob: -8.206095695495605
    9. ' previous' → logprob: -8.581095695495605
    10. 'return' → logprob: -8.706095695495605

Token 426: '_p' (ID: 1359)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.12876839935779572
    2. '_' → logprob: -2.2537684440612793
    3. '_,' → logprob: -5.378768444061279
    4. ' =' → logprob: -5.503768444061279
    5. '_p' → logprob: -6.253768444061279
    6. '=' → logprob: -6.378768444061279
    7. '_pr' → logprob: -6.378768444061279
    8. ',' → logprob: -6.503768444061279
    9. ',_' → logprob: -9.378767967224121
    10. '_=' → logprob: -9.378767967224121

Token 427: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2862624526023865
    2. ' =' → logprob: -1.9112625122070312
    3. ',' → logprob: -3.1612625122070312
    4. '_prime' → logprob: -3.2862625122070312
    5. '=' → logprob: -4.036262512207031
    6. ',r' → logprob: -7.411262512207031
    7. '   ' → logprob: -7.661262512207031
    8. 'prime' → logprob: -7.786262512207031
    9. 'rim' → logprob: -7.911262512207031
    10. 'rev' → logprob: -8.161262512207031

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061985500156879425
    2. ' self' → logprob: -2.811985492706299
    3. 'None' → logprob: -11.311985969543457
    4. ' None' → logprob: -13.061985969543457
    5. '       ' → logprob: -13.436985969543457
    6. '0' → logprob: -14.311985969543457
    7. '(self' → logprob: -14.311985969543457
    8. '
' → logprob: -14.936985969543457
    9. '	self' → logprob: -15.186985969543457
    10. '   ' → logprob: -17.06198501586914

Token 429: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.0009183663059957325
    2. 'strategy' → logprob: -7.000918388366699
    3. '.' → logprob: -12.5009183883667
    4. ' strategy' → logprob: -13.5009183883667
    5. '.str' → logprob: -13.8759183883667
    6. ' .' → logprob: -15.1259183883667
    7. '   ' → logprob: -15.6259183883667
    8. '(strategy' → logprob: -16.000917434692383
    9. '.prev' → logprob: -16.000917434692383
    10. '_strategy' → logprob: -16.125917434692383

Token 430: '.prev' (ID: 54166)
  Prédit: '.prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prev' → logprob: -0.012772027403116226
    2. 'prev' → logprob: -4.387772083282471
    3. '_prev' → logprob: -8.762771606445312
    4. '.' → logprob: -10.012771606445312
    5. '.pr' → logprob: -10.637771606445312
    6. '	prev' → logprob: -12.012771606445312
    7. ' .' → logprob: -12.137771606445312
    8. '_.' → logprob: -12.512771606445312
    9. '.previous' → logprob: -12.512771606445312
    10. ' prev' → logprob: -12.512771606445312

Token 431: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.125
    3. '_p' → logprob: -17.125
    4. 'prime' → logprob: -17.125
    5. '_prev' → logprob: -17.875
    6. 'Prime' → logprob: -19.5
    7. '_prior' → logprob: -19.625
    8. '_pr' → logprob: -19.875
    9. ' prime' → logprob: -20.875
    10. ' Prime' → logprob: -21.25

Token 432: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.6087021473795176e-05
    2. '(' → logprob: -10.000045776367188
    3. '(
' → logprob: -15.000045776367188
    4. ' (' → logprob: -15.375045776367188
    5. 'n' → logprob: -17.375045776367188
    6. '(max' → logprob: -18.875045776367188
    7. '((' → logprob: -19.625045776367188
    8. '(self' → logprob: -20.000045776367188
    9. ' n' → logprob: -20.250045776367188
    10. '(num' → logprob: -20.500045776367188

Token 433: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.28284522891044617
    2. ')' → logprob: -1.4078452587127686
    3. '       ' → logprob: -7.2828450202941895
    4. '),' → logprob: -7.7828450202941895
    5. ',' → logprob: -7.9078450202941895
    6. ' )
' → logprob: -9.157845497131348
    7. ')
' → logprob: -10.282845497131348
    8. ')

' → logprob: -10.907845497131348
    9. ')n' → logprob: -11.032845497131348
    10. '   ' → logprob: -11.157845497131348

Token 434: '       ' (ID: 309)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7020121216773987
    2. 'next' → logprob: -1.077012062072754
    3. '       ' → logprob: -2.702012062072754
    4. '
' → logprob: -3.202012062072754
    5. ',' → logprob: -3.452012062072754
    6. ' 
' → logprob: -4.327012062072754
    7. ',next' → logprob: -5.577012062072754
    8. '        
' → logprob: -5.827012062072754
    9. '.next' → logprob: -7.202012062072754
    10. '_next' → logprob: -7.202012062072754

Token 435: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.01105206273496151
    2. ' next' → logprob: -4.511052131652832
    3. 'try' → logprob: -13.386052131652832
    4. '
' → logprob: -13.636052131652832
    5. '       ' → logprob: -14.636052131652832
    6. '	next' → logprob: -14.761052131652832
    7. '.next' → logprob: -15.761052131652832
    8. ' nxt' → logprob: -15.886052131652832
    9. '_next' → logprob: -16.011051177978516
    10. ' try' → logprob: -16.886051177978516

Token 436: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. '_prime' → logprob: -16.875
    4. '```' → logprob: -17.125
    5. ' _' → logprob: -17.375
    6. '}_' → logprob: -17.75
    7. '"_' → logprob: -18.375
    8. '=_' → logprob: -18.375
    9. ''_' → logprob: -18.75
    10. ')_' → logprob: -19.0

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38696959614753723
    2. '=' → logprob: -1.1369695663452148
    3. '(' → logprob: -9.261969566345215
    4. ' ' → logprob: -13.761969566345215
    5. '_' → logprob: -13.886969566345215
    6. ')' → logprob: -14.386969566345215
    7. ' (' → logprob: -15.136969566345215
    8. ',' → logprob: -15.136969566345215
    9. '_p' → logprob: -15.761969566345215
    10. '(self' → logprob: -16.51197052001953

Token 438: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.018151817843317986
    2. 'self' → logprob: -4.018151760101318
    3. '(self' → logprob: -13.268152236938477
    4. '	self' → logprob: -16.143152236938477
    5. ' ' → logprob: -17.393152236938477
    6. ' ' → logprob: -17.768152236938477
    7. '=self' → logprob: -18.268152236938477
    8. '       ' → logprob: -18.643152236938477
    9. '[self' → logprob: -19.143152236938477
    10. '   ' → logprob: -21.268152236938477

Token 439: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.0037066121585667133
    2. 'strategy' → logprob: -5.628706455230713
    3. '.' → logprob: -9.378706932067871
    4. ' .' → logprob: -11.628706932067871
    5. ' strategy' → logprob: -12.003706932067871
    6. '_strategy' → logprob: -12.878706932067871
    7. '.str' → logprob: -13.003706932067871
    8. 'strateg' → logprob: -14.378706932067871
    9. '(strategy' → logprob: -14.503706932067871
    10. '.
' → logprob: -15.003706932067871

Token 440: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -2.9875325708417222e-05
    2. '.prev' → logprob: -10.500029563903809
    3. '.' → logprob: -13.625029563903809
    4. 'next' → logprob: -14.000029563903809
    5. ' .' → logprob: -15.500029563903809
    6. '.previous' → logprob: -17.500030517578125
    7. '.pr' → logprob: -19.000030517578125
    8. '._' → logprob: -19.250030517578125
    9. '_next' → logprob: -19.500030517578125
    10. ' next' → logprob: -20.000030517578125

Token 441: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.9361264946837764e-07
    2. 'prime' → logprob: -16.125
    3. '```' → logprob: -18.125
    4. '_p' → logprob: -18.25
    5. 'Prime' → logprob: -18.25
    6. '_' → logprob: -18.5
    7. ''_' → logprob: -20.375
    8. ' prime' → logprob: -21.125
    9. ' Prime' → logprob: -21.25
    10. ' _' → logprob: -21.25

Token 442: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -15.500027656555176
    4. ' (' → logprob: -17.125028610229492
    5. 'n' → logprob: -17.375028610229492
    6. '((' → logprob: -19.250028610229492
    7. '(self' → logprob: -19.375028610229492
    8. '(

' → logprob: -20.000028610229492
    9. '(next' → logprob: -20.500028610229492
    10. '()' → logprob: -20.500028610229492

Token 443: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001197370933368802
    2. ')
' → logprob: -6.751197338104248
    3. ' )' → logprob: -10.626197814941406
    4. '       ' → logprob: -13.376197814941406
    5. ' )
' → logprob: -15.251197814941406
    6. ')
' → logprob: -15.251197814941406
    7. '   ' → logprob: -15.376197814941406
    8. ')n' → logprob: -15.876197814941406
    9. '(' → logprob: -16.251197814941406
    10. '))' → logprob: -16.626197814941406

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004388933070003986
    2. 'return' → logprob: -5.754388809204102
    3. ' return' → logprob: -6.754388809204102
    4. '
' → logprob: -10.629388809204102
    5. '	return' → logprob: -11.629388809204102
    6. '	' → logprob: -12.129388809204102
    7. '   ' → logprob: -12.379388809204102
    8. '<|end|>' → logprob: -14.254388809204102
    9. '```' → logprob: -15.129388809204102
    10. ' ' → logprob: -15.754388809204102

Token 445: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14751018583774567
    2. 'return' (adapté à ' return') → logprob: -2.147510290145874
    3. ' return' → logprob: -3.897510290145874
    4. '	return' → logprob: -9.522510528564453
    5. '   ' → logprob: -13.272510528564453
    6. '
' → logprob: -13.522510528564453
    7. '	' → logprob: -13.522510528564453
    8. ' ' → logprob: -14.397510528564453
    9. '      ' → logprob: -15.272510528564453
    10. '	   ' → logprob: -15.397510528564453

Token 446: ' prev' (ID: 10258)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.04868887737393379
    2. ' (' → logprob: -3.0486888885498047
    3. 'prev' → logprob: -9.673688888549805
    4. ' prev' → logprob: -10.173688888549805
    5. '(previous' → logprob: -15.048688888549805
    6. '	prev' → logprob: -16.923688888549805
    7. '(pre' → logprob: -17.048688888549805
    8. '(
' → logprob: -17.798688888549805
    9. '(' → logprob: -18.048688888549805
    10. '   ' → logprob: -18.048688888549805

Token 447: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -15.000000953674316
    3. 'p' → logprob: -16.000001907348633
    4. ',' → logprob: -16.125001907348633
    5. '}_' → logprob: -16.500001907348633
    6. '"_' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. '\' → logprob: -16.750001907348633
    9. '
' → logprob: -17.000001907348633
    10. ' _' → logprob: -17.125001907348633

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017517358355689794
    2. ',next' → logprob: -8.750175476074219
    3. ' ,' → logprob: -11.625175476074219
    4. ',n' → logprob: -12.500175476074219
    5. ',
' → logprob: -12.875175476074219
    6. ',p' → logprob: -14.750175476074219
    7. ',new' → logprob: -15.500175476074219
    8. '‌,' → logprob: -15.500175476074219
    9. ',\
' → logprob: -15.875175476074219
    10. ',None' → logprob: -16.75017547607422

Token 449: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0015070053050294518
    2. 'next' → logprob: -6.501506805419922
    3. ' ' → logprob: -12.626506805419922
    4. '(next' → logprob: -13.751506805419922
    5. '[next' → logprob: -15.251506805419922
    6. '	next' → logprob: -16.126506805419922
    7. '.next' → logprob: -16.751506805419922
    8. '_next' → logprob: -18.126506805419922
    9. ',next' → logprob: -18.126506805419922
    10. ' nex' → logprob: -18.626506805419922

Token 450: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.500005722045898
    3. '+' → logprob: -13.500005722045898
    4. 'p' → logprob: -14.250005722045898
    5. ' _' → logprob: -15.375005722045898
    6. ')' → logprob: -17.3750057220459
    7. '.' → logprob: -17.6250057220459
    8. '   ' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.1250057220459
    10. '_next' → logprob: -18.1250057220459

Token 451: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10558874160051346
    2. 'strategy' → logprob: -2.855588674545288
    3. 'def' → logprob: -3.480588674545288
    4. 'prime' → logprob: -5.605588912963867
    5. 'context' → logprob: -5.855588912963867
    6. 'class' → logprob: -5.980588912963867
    7. 'ps' → logprob: -6.480588912963867
    8. 'from' → logprob: -7.980588912963867
    9. 'p' → logprob: -8.105588912963867
    10. 's' → logprob: -8.855588912963867

Token 453: ' Input' (ID: 10090)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -1.087188959121704
    2. ' Prime' → logprob: -1.837188959121704
    3. 'Test' → logprob: -2.712188959121704
    4. ' Test' → logprob: -3.212188959121704
    5. ' Custom' → logprob: -3.337188959121704
    6. ' Advanced' → logprob: -3.462188959121704
    7. 'Custom' → logprob: -3.712188959121704
    8. ' Lazy' → logprob: -3.837188959121704
    9. 'Simple' → logprob: -4.087188720703125
    10. 'Pr' → logprob: -4.087188720703125

Token 454: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.16421721875667572
    2. 'Processor' → logprob: -3.164217233657837
    3. 'Validator' → logprob: -3.164217233657837
    4. 'Parser' → logprob: -3.414217233657837
    5. 'Reader' → logprob: -3.539217233657837
    6. 'Provider' → logprob: -6.039216995239258
    7. 'Output' → logprob: -7.289216995239258
    8. 'Manager' → logprob: -7.414216995239258
    9. 'Number' → logprob: -7.414216995239258
    10. 'Collector' → logprob: -9.164216995239258

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028083212673664093
    2. ':
' → logprob: -5.877808094024658
    3. ':def' → logprob: -13.877808570861816
    4. ':

' → logprob: -14.377808570861816
    5. '):' → logprob: -14.627808570861816
    6. ' :' → logprob: -14.627808570861816
    7. '<|end|>' → logprob: -15.502808570861816
    8. '():' → logprob: -15.502808570861816
    9. ':
' → logprob: -16.1278076171875
    10. '(' → logprob: -16.3778076171875

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024025145103223622
    2. ' def' → logprob: -8.500240325927734
    3. 'def' → logprob: -10.375240325927734
    4. ':
' → logprob: -13.000240325927734
    5. ',' → logprob: -14.250240325927734
    6. ':' → logprob: -14.250240325927734
    7. '<|end|>' → logprob: -14.875240325927734
    8. '    
' → logprob: -15.000240325927734
    9. '):
' → logprob: -15.125240325927734
    10. 'class' → logprob: -15.250240325927734

Token 457: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0799754410982132
    2. 'def' (adapté à ' def') → logprob: -2.5799753665924072
    3. '   ' → logprob: -6.829975605010986
    4. 'class' → logprob: -12.454975128173828
    5. ' class' → logprob: -15.704975128173828
    6. '	def' → logprob: -17.079975128173828
    7. '```' → logprob: -17.454975128173828
    8. ':def' → logprob: -18.329975128173828
    9. 'import' → logprob: -18.454975128173828
    10. '
' → logprob: -19.079975128173828

Token 458: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22805500030517578
    2. ' __' → logprob: -2.103055000305176
    3. 'def' → logprob: -2.603055000305176
    4. ' init' → logprob: -6.103055000305176
    5. '__' → logprob: -6.353055000305176
    6. 'staticmethod' → logprob: -6.478055000305176
    7. 'init' → logprob: -6.603055000305176
    8. ' handle' → logprob: -7.853055000305176
    9. ' ' → logprob: -8.853055000305176
    10. 'handle' → logprob: -9.728055000305176

Token 459: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'new' → logprob: -15.25
    3. '__' → logprob: -16.75
    4. ' init' → logprob: -17.0
    5. 'int' → logprob: -18.125
    6. 'ini' → logprob: -18.375
    7. 'def' → logprob: -18.875
    8. 'in' → logprob: -19.0
    9. 'Init' → logprob: -19.75
    10. 'call' → logprob: -19.75

Token 460: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.036945607513189316
    2. '__(' → logprob: -3.4119455814361572
    3. '(' → logprob: -6.536945819854736
    4. ' (' → logprob: -6.661945819854736
    5. 'self' → logprob: -8.661945343017578
    6. '__(
' → logprob: -8.786945343017578
    7. ')(' → logprob: -9.536945343017578
    8. '   ' → logprob: -10.036945343017578
    9. '<|end|>' → logprob: -10.911945343017578
    10. '(
' → logprob: -11.286945343017578

Token 461: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004481885116547346
    2. ')' → logprob: -7.875448226928711
    3. ' self' → logprob: -10.125448226928711
    4. '):
' → logprob: -11.000448226928711
    5. '
' → logprob: -11.625448226928711
    6. '   ' → logprob: -14.250448226928711
    7. '(self' → logprob: -14.375448226928711
    8. 'strategy' → logprob: -14.875448226928711
    9. ')(' → logprob: -15.875448226928711
    10. '       ' → logprob: -16.25044822692871

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009056262206286192
    2. '):
' → logprob: -7.625905513763428
    3. '):' → logprob: -8.000905990600586
    4. 'self' → logprob: -9.500905990600586
    5. ')' → logprob: -13.000905990600586
    6. ',
' → logprob: -13.625905990600586
    7. ',self' → logprob: -14.000905990600586
    8. ' ,' → logprob: -14.125905990600586
    9. '   ' → logprob: -14.375905990600586
    10. '
' → logprob: -14.875905990600586

Token 463: ' context' (ID: 3814)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.3364962637424469
    2. ' strategy' → logprob: -1.3364962339401245
    3. 'limit' → logprob: -4.586496353149414
    4. 'prime' → logprob: -4.836496353149414
    5. ' limit' → logprob: -6.461496353149414
    6. 'input' → logprob: -6.586496353149414
    7. ' prime' → logprob: -7.586496353149414
    8. ' input' → logprob: -7.961496353149414
    9. 'max' → logprob: -8.086496353149414
    10. ')' → logprob: -8.586496353149414

Token 464: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4326677620410919
    2. '):' → logprob: -1.0576677322387695
    3. ',' → logprob: -6.0576677322387695
    4. '):
' → logprob: -6.6826677322387695
    5. ' ):' → logprob: -8.18266773223877
    6. ')' → logprob: -9.80766773223877
    7. ' :' → logprob: -11.18266773223877
    8. '   ' → logprob: -12.05766773223877
    9. '}:' → logprob: -12.68266773223877
    10. '  ' → logprob: -13.30766773223877

Token 465: ' Prime' (ID: 20134)
  Prédit: ' Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.25193214416503906
    2. 'Prime' → logprob: -1.501932144165039
    3. ' prime' → logprob: -13.376932144165039
    4. '_prime' → logprob: -13.626932144165039
    5. ')' → logprob: -16.12693214416504
    6. 'prime' → logprob: -16.37693214416504
    7. ' PRIME' → logprob: -18.75193214416504
    8. 'Primitive' → logprob: -18.87693214416504
    9. '_Pr' → logprob: -18.87693214416504
    10. 'Prim' → logprob: -19.00193214416504

Token 466: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: -2.935296834039036e-06
    2. 'context' → logprob: -12.87500286102295
    3. 'Strategy' → logprob: -15.25000286102295
    4. '	Context' → logprob: -17.000003814697266
    5. '_context' → logprob: -17.625003814697266
    6. '_Context' → logprob: -18.625003814697266
    7. ' context' → logprob: -19.125003814697266
    8. ')' → logprob: -19.625003814697266
    9. 'Con' → logprob: -19.750003814697266
    10. ' Context' → logprob: -20.250003814697266

Token 467: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760660767555237
    2. '):' → logprob: -0.8260660767555237
    3. ',' → logprob: -9.826066017150879
    4. ')' → logprob: -10.451066017150879
    5. '   ' → logprob: -10.951066017150879
    6. '):
' → logprob: -10.951066017150879
    7. '       ' → logprob: -12.201066017150879
    8. ':' → logprob: -13.201066017150879
    9. '):

' → logprob: -13.701066017150879
    10. ' ):' → logprob: -15.951066017150879

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12422618269920349
    2. '   ' → logprob: -2.7492260932922363
    3. 'self' → logprob: -2.9992260932922363
    4. ' self' → logprob: -5.999226093292236
    5. 'def' → logprob: -7.874226093292236
    6. ' def' → logprob: -9.499226570129395
    7. '	self' → logprob: -10.249226570129395
    8. '
' → logprob: -10.624226570129395
    9. ' ' → logprob: -12.499226570129395
    10. ',' → logprob: -12.999226570129395

Token 469: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006937315920367837
    2. '       ' → logprob: -7.7506937980651855
    3. ' self' → logprob: -8.250693321228027
    4. '   ' → logprob: -13.500693321228027
    5. '	self' → logprob: -14.500693321228027
    6. '
' → logprob: -17.000694274902344
    7. 's' → logprob: -18.875694274902344
    8. '	' → logprob: -19.000694274902344
    9. 'def' → logprob: -19.875694274902344
    10. '        
' → logprob: -19.875694274902344

Token 470: '.context' (ID: 14007)
  Prédit: '.context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.context' → logprob: -0.0013340517180040479
    2. '.' → logprob: -6.751334190368652
    3. 'context' → logprob: -8.751334190368652
    4. ' context' → logprob: -12.876334190368652
    5. ' .' → logprob: -13.376334190368652
    6. '.input' → logprob: -14.501334190368652
    7. '=context' → logprob: -15.126334190368652
    8. '"context' → logprob: -15.251334190368652
    9. '<context' → logprob: -16.001333236694336
    10. '	context' → logprob: -16.501333236694336

Token 471: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12023831158876419
    2. '.context' → logprob: -2.6202383041381836
    3. '=' → logprob: -3.4952383041381836
    4. ' =' → logprob: -5.245238304138184
    5. '=context' → logprob: -5.745238304138184
    6. '   ' → logprob: -7.245238304138184
    7. '_context' → logprob: -8.620238304138184
    8. ',' → logprob: -8.870238304138184
    9. '       ' → logprob: -8.995238304138184
    10. 'context' → logprob: -9.245238304138184

Token 472: ' context' (ID: 3814)
  Prédit: ' context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' context' → logprob: -0.0788901224732399
    2. 'context' → logprob: -2.578890085220337
    3. '	context' → logprob: -15.703889846801758
    4. '=context' → logprob: -15.828889846801758
    5. '(context' → logprob: -16.828889846801758
    6. '<context' → logprob: -17.953889846801758
    7. '_context' → logprob: -18.453889846801758
    8. '"context' → logprob: -18.703889846801758
    9. '.context' → logprob: -19.453889846801758
    10. ' contexto' → logprob: -19.703889846801758

Token 473: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20177514851093292
    2. '
' → logprob: -1.7017751932144165
    3. '    
' → logprob: -8.326775550842285
    4. '<|end|>' → logprob: -9.451775550842285
    5. 'def' → logprob: -11.201775550842285
    6. '

' → logprob: -11.826775550842285
    7. '<|end|>' → logprob: -12.201775550842285
    8. ' def' → logprob: -12.951775550842285
    9. '```' → logprob: -12.951775550842285
    10. '
' → logprob: -13.076775550842285

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06408802419900894
    2. 'def' → logprob: -2.8140881061553955
    3. ' def' → logprob: -6.189087867736816
    4. '
' → logprob: -10.314087867736816
    5. '	def' → logprob: -10.564087867736816
    6. '    
' → logprob: -11.939087867736816
    7. '<|end|>' → logprob: -14.939087867736816
    8. '        
' → logprob: -15.939087867736816
    9. '```' → logprob: -15.939087867736816
    10. ' ' → logprob: -16.564088821411133

Token 475: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.165027217415627e-05
    2. ' def' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. '	def' → logprob: -21.62502098083496
    5. 'de' → logprob: -22.00002098083496
    6. '
' → logprob: -22.12502098083496
    7. ' ' → logprob: -24.37502098083496
    8. '```' → logprob: -25.12502098083496
    9. 'class' → logprob: -25.25002098083496
    10. 'd' → logprob: -25.37502098083496

Token 476: ' process' (ID: 2273)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.338527649641037
    2. ' handle' → logprob: -2.0885276794433594
    3. 'process' → logprob: -2.3385276794433594
    4. ' process' → logprob: -3.3385276794433594
    5. 'read' → logprob: -4.463527679443359
    6. 'get' → logprob: -4.588527679443359
    7. ' get' → logprob: -4.963527679443359
    8. ' read' → logprob: -6.088527679443359
    9. 'run' → logprob: -8.33852767944336
    10. ' run' → logprob: -9.58852767944336

Token 477: '_lines' (ID: 42980)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.6107693910598755
    2. '(self' → logprob: -0.8607693910598755
    3. '_number' → logprob: -3.610769271850586
    4. '(' → logprob: -5.360769271850586
    5. '_' → logprob: -6.735769271850586
    6. '_line' → logprob: -7.110769271850586
    7. '_(' → logprob: -8.610769271850586
    8. '_numbers' → logprob: -8.985769271850586
    9. '_query' → logprob: -9.610769271850586
    10. '_value' → logprob: -9.860769271850586

Token 478: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020747410599142313
    2. '(' → logprob: -8.500207901000977
    3. ' (' → logprob: -12.500207901000977
    4. 'self' → logprob: -15.750207901000977
    5. '   ' → logprob: -16.250207901000977
    6. '(
' → logprob: -17.250207901000977
    7. ' self' → logprob: -19.500207901000977
    8. '       ' → logprob: -19.500207901000977
    9. '(sel' → logprob: -19.500207901000977
    10. '(Self' → logprob: -19.875207901000977

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001729921787045896
    2. 'self' → logprob: -6.376729965209961
    3. '   ' → logprob: -11.126729965209961
    4. '       ' → logprob: -12.251729965209961
    5. ' ,' → logprob: -12.376729965209961
    6. '(self' → logprob: -13.376729965209961
    7. ',self' → logprob: -13.501729965209961
    8. ',
' → logprob: -14.626729965209961
    9. '           ' → logprob: -15.751729965209961
    10. ' self' → logprob: -16.25172996520996

Token 480: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5541447401046753
    2. ' lines' → logprob: -1.0541447401046753
    3. 'self' → logprob: -2.679144859313965
    4. ' self' → logprob: -4.804144859313965
    5. '   ' → logprob: -9.179144859313965
    6. 'Lines' → logprob: -12.054144859313965
    7. 'line' → logprob: -12.054144859313965
    8. 'input' → logprob: -12.429144859313965
    9. '       ' → logprob: -12.679144859313965
    10. '	lines' → logprob: -13.179144859313965

Token 481: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010646054288372397
    2. '):' → logprob: -7.001064777374268
    3. ')' → logprob: -9.75106430053711
    4. 'self' → logprob: -10.37606430053711
    5. '):
' → logprob: -10.50106430053711
    6. '   ' → logprob: -10.75106430053711
    7. '(self' → logprob: -11.62606430053711
    8. '       ' → logprob: -13.62606430053711
    9. ':self' → logprob: -13.75106430053711
    10. ' :' → logprob: -14.12606430053711

Token 482: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03313632681965828
    2. ' list' → logprob: -3.7831363677978516
    3. 'self' → logprob: -4.658136367797852
    4. ')' → logprob: -9.158136367797852
    5. 'iter' → logprob: -9.158136367797852
    6. '   ' → logprob: -9.908136367797852
    7. ' self' → logprob: -10.033136367797852
    8. 'List' → logprob: -10.158136367797852
    9. '       ' → logprob: -12.283136367797852
    10. 'Iterable' → logprob: -12.658136367797852

Token 483: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. '[int' → logprob: -17.625
    4. ')' → logprob: -18.25
    5. 'str' → logprob: -18.375
    6. '[
' → logprob: -19.125
    7. '
' → logprob: -19.25
    8. '   ' → logprob: -20.0
    9. '	str' → logprob: -20.75
    10. ':str' → logprob: -21.0

Token 484: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017791878199204803
    2. ')' → logprob: -6.376779079437256
    3. ']' → logprob: -10.251779556274414
    4. ']):
' → logprob: -10.501779556274414
    5. ']):' → logprob: -12.126779556274414
    6. '   ' → logprob: -12.501779556274414
    7. ' ])' → logprob: -12.751779556274414
    8. ''])' → logprob: -14.126779556274414
    9. '"])' → logprob: -15.251779556274414
    10. '`)' → logprob: -15.501779556274414

Token 485: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37520045042037964
    2. '->' → logprob: -1.3752005100250244
    3. ' ->' → logprob: -3.1252005100250244
    4. '(self' → logprob: -5.500200271606445
    5. ':
' → logprob: -5.625200271606445
    6. '   ' → logprob: -5.875200271606445
    7. '       ' → logprob: -6.125200271606445
    8. ')->' → logprob: -6.750200271606445
    9. ')' → logprob: -6.875200271606445
    10. '()->' → logprob: -8.000200271606445

Token 486: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014215215109288692
    2. ' list' → logprob: -4.264214992523193
    3. '   ' → logprob: -10.264215469360352
    4. 'None' → logprob: -11.514215469360352
    5. '[list' → logprob: -12.639215469360352
    6. ' None' → logprob: -12.764215469360352
    7. '       ' → logprob: -14.889215469360352
    8. '	list' → logprob: -16.13921546936035
    9. ' ' → logprob: -16.51421546936035
    10. 'tuple' → logprob: -17.01421546936035

Token 487: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.06198135390877724
    2. '[' → logprob: -2.811981439590454
    3. '[list' → logprob: -11.561981201171875
    4. '[
' → logprob: -13.061981201171875
    5. 'int' → logprob: -13.936981201171875
    6. '[(' → logprob: -14.311981201171875
    7. '   ' → logprob: -14.936981201171875
    8. ':' → logprob: -16.186981201171875
    9. '[Int' → logprob: -16.436981201171875
    10. '<int' → logprob: -17.811981201171875

Token 488: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.10172402113676071
    2. '):
' → logprob: -3.2267239093780518
    3. ']:' → logprob: -3.7267239093780518
    4. ']' → logprob: -4.101724147796631
    5. '   ' → logprob: -4.851724147796631
    6. '       ' → logprob: -5.101724147796631
    7. ':
' → logprob: -6.351724147796631
    8. ':' → logprob: -8.476723670959473
    9. ']:
' → logprob: -8.476723670959473
    10. '):' → logprob: -8.601723670959473

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037815470714122057
    2. 'result' → logprob: -6.003781318664551
    3. 'results' → logprob: -7.503781318664551
    4. ' result' → logprob: -7.878781318664551
    5. ' results' → logprob: -8.00378131866455
    6. 'output' → logprob: -10.62878131866455
    7. 'outputs' → logprob: -11.50378131866455
    8. ' output' → logprob: -12.62878131866455
    9. ' outputs' → logprob: -14.25378131866455
    10. 'responses' → logprob: -14.37878131866455

Token 490: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.4382224678993225
    2. ' results' → logprob: -1.1882224082946777
    3. '       ' → logprob: -3.4382224082946777
    4. 'result' → logprob: -4.188222408294678
    5. ' result' → logprob: -5.938222408294678
    6. 'output' → logprob: -9.438222885131836
    7. 'outputs' → logprob: -10.813222885131836
    8. ' output' → logprob: -11.438222885131836
    9. '   ' → logprob: -12.188222885131836
    10. 'responses' → logprob: -12.438222885131836

Token 491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759415030479431
    2. '=' → logprob: -0.8259415030479431
    3. ':' → logprob: -13.70094108581543
    4. '=[]' → logprob: -14.07594108581543
    5. ' ' → logprob: -16.45094108581543
    6. '[]' → logprob: -16.95094108581543
    7. '=[]
' → logprob: -17.20094108581543
    8. '   ' → logprob: -17.45094108581543
    9. ' ' → logprob: -18.07594108581543
    10. '	' → logprob: -18.32594108581543

Token 492: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004084335640072823
    2. '[]
' → logprob: -5.50408411026001
    3. ' []' → logprob: -12.254084587097168
    4. '[' → logprob: -13.754084587097168
    5. ' []
' → logprob: -17.00408363342285
    6. '[]

' → logprob: -17.00408363342285
    7. '[
' → logprob: -18.00408363342285
    8. '[]>' → logprob: -18.25408363342285
    9. '[]}' → logprob: -18.75408363342285
    10. '[]"' → logprob: -19.00408363342285

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006226073601283133
    2. ' for' → logprob: -7.875622749328613
    3. 'for' → logprob: -8.375622749328613
    4. '   ' → logprob: -11.500622749328613
    5. '	' → logprob: -14.500622749328613
    6. '
' → logprob: -14.750622749328613
    7. '	for' → logprob: -15.125622749328613
    8. '	   ' → logprob: -15.500622749328613
    9. '```' → logprob: -16.125621795654297
    10. '        
' → logprob: -16.250621795654297

Token 494: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007636678405106068
    2. ' for' → logprob: -5.007636547088623
    3. '       ' → logprob: -7.007636547088623
    4. '   ' → logprob: -11.257637023925781
    5. '
' → logprob: -13.257637023925781
    6. '	for' → logprob: -13.632637023925781
    7. ' ' → logprob: -17.00763702392578
    8. '	' → logprob: -18.13263702392578
    9. '```' → logprob: -18.25763702392578
    10. '    ' → logprob: -19.75763702392578

Token 495: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023245595395565033
    2. ' line' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.648244857788086
    4. '	line' → logprob: -17.273244857788086
    5. '(line' → logprob: -20.148244857788086
    6. ' ' → logprob: -20.398244857788086
    7. '       ' → logprob: -20.523244857788086
    8. '_line' → logprob: -20.523244857788086
    9. 'Line' → logprob: -21.273244857788086
    10. '=line' → logprob: -21.523244857788086

Token 496: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013270224444568157
    2. 'in' → logprob: -6.626327037811279
    3. '       ' → logprob: -15.001326560974121
    4. ' ' → logprob: -15.751326560974121
    5. '        ' → logprob: -15.751326560974121
    6. '	in' → logprob: -15.751326560974121
    7. '_in' → logprob: -16.501327514648438
    8. '   ' → logprob: -16.626327514648438
    9. '.strip' → logprob: -16.876327514648438
    10. 'line' → logprob: -16.876327514648438

Token 497: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07889143377542496
    2. ' lines' → logprob: -2.5788915157318115
    3. '(lines' → logprob: -14.32889175415039
    4. 'line' → logprob: -14.57889175415039
    5. '	lines' → logprob: -14.95389175415039
    6. '   ' → logprob: -15.70389175415039
    7. '.lines' → logprob: -17.45389175415039
    8. '_lines' → logprob: -17.57889175415039
    9. ' ' → logprob: -18.07889175415039
    10. 'Lines' → logprob: -18.70389175415039

Token 498: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3809988796710968
    2. ':' → logprob: -1.2559988498687744
    3. '           ' → logprob: -3.5059988498687744
    4. '       ' → logprob: -7.0059990882873535
    5. ',' → logprob: -7.2559990882873535
    6. '.strip' → logprob: -8.630998611450195
    7. '):
' → logprob: -8.755998611450195
    8. '.rstrip' → logprob: -11.255998611450195
    9. ':

' → logprob: -11.505998611450195
    10. '():
' → logprob: -11.755998611450195

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.23917081207037e-05
    2. 'line' → logprob: -12.000041961669922
    3. '            
' → logprob: -12.000041961669922
    4. ' stripped' → logprob: -12.125041961669922
    5. 'if' → logprob: -12.250041961669922
    6. ' if' → logprob: -12.375041961669922
    7. ' line' → logprob: -12.625041961669922
    8. 'strip' → logprob: -12.875041961669922
    9. '```' → logprob: -13.000041961669922
    10. '          ' → logprob: -13.125041961669922

Token 500: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8785123825073242
    2. 'line' (adapté à ' line') → logprob: -1.3785123825073242
    3. '           ' → logprob: -2.128512382507324
    4. 'try' → logprob: -2.128512382507324
    5. 'num' → logprob: -2.503512382507324
    6. 'number' → logprob: -5.253512382507324
    7. ' line' → logprob: -5.503512382507324
    8. ' n' → logprob: -6.628512382507324
    9. 'if' → logprob: -7.128512382507324
    10. ' try' → logprob: -8.003512382507324

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03821476548910141
    2. ' =' → logprob: -3.288214683532715
    3. '.strip' → logprob: -8.788214683532715
    4. '_strip' → logprob: -11.413214683532715
    5. '=line' → logprob: -11.788214683532715
    6. '.=' → logprob: -14.413214683532715
    7. 'strip' → logprob: -14.413214683532715
    8. '=
' → logprob: -14.913214683532715
    9. '=str' → logprob: -15.538214683532715
    10. '.' → logprob: -15.913214683532715

Token 502: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031777136027812958
    2. ' line' → logprob: -5.753177642822266
    3. '	line' → logprob: -20.378177642822266
    4. '(line' → logprob: -20.753177642822266
    5. '=line' → logprob: -21.128177642822266
    6. '
' → logprob: -21.378177642822266
    7. 'lin' → logprob: -21.753177642822266
    8. ' ' → logprob: -22.128177642822266
    9. '   ' → logprob: -22.253177642822266
    10. 'li' → logprob: -22.378177642822266

Token 503: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0005570820067077875
    2. '.' → logprob: -7.500556945800781
    3. '.rstrip' → logprob: -12.875556945800781
    4. 'strip' → logprob: -13.500556945800781
    5. '.trim' → logprob: -16.75055694580078
    6. ' .' → logprob: -16.87555694580078
    7. ' strip' → logprob: -18.25055694580078
    8. '.str' → logprob: -18.50055694580078
    9. '_strip' → logprob: -19.75055694580078
    10. '.
' → logprob: -20.12555694580078

Token 504: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035797808319330215
    2. '()
' → logprob: -3.5357978343963623
    3. '()' → logprob: -5.285797595977783
    4. '
' → logprob: -7.535797595977783
    5. ')' → logprob: -9.035798072814941
    6. ')
' → logprob: -9.035798072814941
    7. 'if' → logprob: -9.910798072814941
    8. '               ' → logprob: -10.660798072814941
    9. '            
' → logprob: -10.785798072814941
    10. '<|end|>' → logprob: -10.785798072814941

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015903194434940815
    2. 'if' → logprob: -6.626590251922607
    3. ' if' → logprob: -8.376590728759766
    4. '            
' → logprob: -10.626590728759766
    5. '
' → logprob: -12.126590728759766
    6. ',' → logprob: -13.001590728759766
    7. '       ' → logprob: -14.376590728759766
    8. '           
' → logprob: -15.251590728759766
    9. '		' → logprob: -15.376590728759766
    10. '        
' → logprob: -15.501590728759766

Token 506: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00024037064576987177
    2. '           ' → logprob: -8.500240325927734
    3. ' if' → logprob: -10.500240325927734
    4. 'try' → logprob: -11.625240325927734
    5. '
' → logprob: -15.250240325927734
    6. '```' → logprob: -16.000240325927734
    7. '       ' → logprob: -17.625240325927734
    8. 'If' → logprob: -18.250240325927734
    9. '            
' → logprob: -18.375240325927734
    10. 'num' → logprob: -18.500240325927734

Token 507: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.010016247630119324
    2. 'not' → logprob: -4.635016441345215
    3. ' line' → logprob: -8.510016441345215
    4. 'line' → logprob: -9.760016441345215
    5. ' no' → logprob: -14.760016441345215
    6. ' ' → logprob: -15.010016441345215
    7. 'n' → logprob: -16.3850154876709
    8. 'no' → logprob: -16.5100154876709
    9. ' n' → logprob: -16.7600154876709
    10. '	not' → logprob: -17.3850154876709

Token 508: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16022443771362305
    2. ' line' → logprob: -1.910224437713623
    3. ' ' → logprob: -15.410224914550781
    4. '	line' → logprob: -17.91022491455078
    5. 'lines' → logprob: -18.28522491455078
    6. 'li' → logprob: -18.66022491455078
    7. 'l' → logprob: -18.91022491455078
    8. 'lin' → logprob: -19.28522491455078
    9. '
' → logprob: -19.41022491455078
    10. '#line' → logprob: -19.66022491455078

Token 509: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4944014251232147
    2. ':
' → logprob: -0.9944014549255371
    3. ' or' → logprob: -4.494401454925537
    4. 'or' → logprob: -4.744401454925537
    5. ':return' → logprob: -9.494400978088379
    6. '<|end|>' → logprob: -9.619400978088379
    7. '.startswith' → logprob: -10.494400978088379
    8. 'continue' → logprob: -10.744400978088379
    9. '   ' → logprob: -11.244400978088379
    10. '.is' → logprob: -11.869400978088379

Token 510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002013932913541794
    2. ':' → logprob: -7.12701416015625
    3. ':
' → logprob: -7.12701416015625
    4. ' continue' → logprob: -8.75201416015625
    5. 'continue' → logprob: -9.00201416015625
    6. '           ' → logprob: -9.12701416015625
    7. ',' → logprob: -12.37701416015625
    8. ' or' → logprob: -12.75201416015625
    9. '   ' → logprob: -13.25201416015625
    10. ' continues' → logprob: -13.50201416015625

Token 511: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.039012011140584946
    2. ' continue' → logprob: -3.2890119552612305
    3. '               ' → logprob: -7.1640119552612305
    4. '           ' → logprob: -8.91401195526123
    5. '	continue' → logprob: -10.28901195526123
    6. '                   ' → logprob: -11.66401195526123
    7. '   ' → logprob: -11.66401195526123
    8. 'contin' → logprob: -12.66401195526123
    9. '_continue' → logprob: -12.91401195526123
    10. 'continu' → logprob: -13.16401195526123

Token 512: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003704933915287256
    2. 'try' → logprob: -8.875370025634766
    3. '            
' → logprob: -9.000370025634766
    4. ' try' → logprob: -9.375370025634766
    5. '
' → logprob: -11.250370025634766
    6. '       ' → logprob: -13.500370025634766
    7. '    
' → logprob: -13.500370025634766
    8. ',' → logprob: -13.875370025634766
    9. 'num' → logprob: -14.000370025634766
    10. 'n' → logprob: -14.125370025634766

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.3954463510308415e-05
    2. 'try' → logprob: -10.750054359436035
    3. '            
' → logprob: -11.000054359436035
    4. ' try' → logprob: -11.375054359436035
    5. '
' → logprob: -14.125054359436035
    6. '       ' → logprob: -14.750054359436035
    7. ',' → logprob: -14.875054359436035
    8. '```' → logprob: -15.000054359436035
    9. 'tokens' → logprob: -15.000054359436035
    10. '		' → logprob: -15.125054359436035

Token 514: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.05939681455492973
    2. 'num' → logprob: -3.059396743774414
    3. 'n' (adapté à ' n') → logprob: -5.059396743774414
    4. '           ' → logprob: -6.059396743774414
    5. 'number' → logprob: -6.684396743774414
    6. ' try' → logprob: -7.434396743774414
    7. '```' → logprob: -9.184396743774414
    8. '       ' → logprob: -9.559396743774414
    9. 'nums' → logprob: -11.559396743774414
    10. ' num' → logprob: -11.684396743774414

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740878641605377
    2. '=' → logprob: -0.9740878343582153
    3. '=int' → logprob: -11.474087715148926
    4. ' ' → logprob: -15.724087715148926
    5. '   ' → logprob: -16.224088668823242
    6. 'int' → logprob: -16.724088668823242
    7. '	' → logprob: -17.099088668823242
    8. ',' → logprob: -17.724088668823242
    9. '=
' → logprob: -18.224088668823242
    10. ' =
' → logprob: -18.349088668823242

Token 516: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01416350994259119
    2. ' int' → logprob: -4.264163494110107
    3. '(int' → logprob: -18.764163970947266
    4. '[int' → logprob: -20.014163970947266
    5. '=int' → logprob: -20.014163970947266
    6. '<int' → logprob: -20.139163970947266
    7. ':int' → logprob: -21.389163970947266
    8. '   ' → logprob: -21.639163970947266
    9. '           ' → logprob: -22.014163970947266
    10. '	int' → logprob: -22.139163970947266

Token 517: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -7.5649528298527e-05
    2. '(' → logprob: -9.500075340270996
    3. 'line' → logprob: -14.625075340270996
    4. '(
' → logprob: -15.375075340270996
    5. ' line' → logprob: -17.500076293945312
    6. ' (' → logprob: -19.000076293945312
    7. '(

' → logprob: -19.125076293945312
    8. '[line' → logprob: -19.125076293945312
    9. '=line' → logprob: -19.250076293945312
    10. '#line' → logprob: -19.875076293945312

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269480586051941
    2. ')
' → logprob: -2.126948118209839
    3. ')
' → logprob: -11.626948356628418
    4. ' )' → logprob: -12.126948356628418
    5. ' )
' → logprob: -13.126948356628418
    6. ')

' → logprob: -13.501948356628418
    7. '           ' → logprob: -13.501948356628418
    8. ')`
' → logprob: -15.001948356628418
    9. '       ' → logprob: -15.251948356628418
    10. ')`' → logprob: -16.0019474029541

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011497443774715066
    2. 'prev' → logprob: -6.876149654388428
    3. '       ' → logprob: -10.251150131225586
    4. '
' → logprob: -10.251150131225586
    5. ' prev' → logprob: -10.751150131225586
    6. '```' → logprob: -11.251150131225586
    7. 'try' → logprob: -12.376150131225586
    8. '            
' → logprob: -13.251150131225586
    9. '   ' → logprob: -14.001150131225586
    10. 'previous' → logprob: -14.251150131225586

Token 520: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.06599859893321991
    2. ' prev' → logprob: -3.1909985542297363
    3. '           ' → logprob: -4.190998554229736
    4. 'try' → logprob: -5.065998554229736
    5. ' try' → logprob: -6.940998554229736
    6. 'previous' → logprob: -9.690999031066895
    7. 'p' → logprob: -10.065999031066895
    8. '	prev' → logprob: -10.190999031066895
    9. 'pr' → logprob: -10.440999031066895
    10. '(prev' → logprob: -10.565999031066895

Token 521: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0005195511621423066
    2. ',' → logprob: -7.750519752502441
    3. '_,' → logprob: -9.500519752502441
    4. '_' → logprob: -11.750519752502441
    5. 'p' → logprob: -12.625519752502441
    6. ',p' → logprob: -13.375519752502441
    7. ',_' → logprob: -14.875519752502441
    8. ' ,' → logprob: -15.500519752502441
    9. '_n' → logprob: -15.750519752502441
    10. '```' → logprob: -15.875519752502441

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -15.62500286102295
    4. ',p' → logprob: -15.75000286102295
    5. ',next' → logprob: -16.125003814697266
    6. ',n' → logprob: -16.500003814697266
    7. '‌,' → logprob: -16.625003814697266
    8. 's' → logprob: -17.875003814697266
    9. ',result' → logprob: -17.875003814697266
    10. ',target' → logprob: -18.000003814697266

Token 523: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.014163747429847717
    2. 'next' → logprob: -4.264163970947266
    3. '	next' → logprob: -16.264163970947266
    4. '_next' → logprob: -16.639163970947266
    5. '(next' → logprob: -17.014163970947266
    6. ' nxt' → logprob: -17.264163970947266
    7. '.next' → logprob: -17.514163970947266
    8. '[next' → logprob: -18.014163970947266
    9. ',next' → logprob: -18.764163970947266
    10. ' nex' → logprob: -18.889163970947266

Token 524: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -7.553032628493384e-05
    2. '_' → logprob: -9.500075340270996
    3. ' _' → logprob: -14.875075340270996
    4. '```' → logprob: -16.750076293945312
    5. ')_' → logprob: -17.000076293945312
    6. '=' → logprob: -17.375076293945312
    7. '
' → logprob: -17.500076293945312
    8. 'p' → logprob: -17.750076293945312
    9. '_
' → logprob: -18.125076293945312
    10. ')' → logprob: -18.375076293945312

Token 525: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. ' ' → logprob: -18.001928329467773
    4. ',' → logprob: -18.501928329467773
    5. '=self' → logprob: -18.626928329467773
    6. ')' → logprob: -18.626928329467773
    7. '<|end|>' → logprob: -19.001928329467773
    8. '    ' → logprob: -19.876928329467773
    9. ' =
' → logprob: -19.876928329467773
    10. '        ' → logprob: -19.876928329467773

Token 526: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687121868133545
    2. ' self' → logprob: -1.1368712186813354
    3. '(self' → logprob: -16.261871337890625
    4. '
' → logprob: -17.136871337890625
    5. '=self' → logprob: -18.136871337890625
    6. '	self' → logprob: -18.386871337890625
    7. '           ' → logprob: -19.011871337890625
    8. 'Self' → logprob: -19.011871337890625
    9. '_self' → logprob: -19.011871337890625
    10. '[self' → logprob: -19.011871337890625

Token 527: '.context' (ID: 14007)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.03804917633533478
    2. '.context' → logprob: -3.2880492210388184
    3. ' context' → logprob: -12.16304874420166
    4. '<context' → logprob: -14.03804874420166
    5. '"context' → logprob: -14.66304874420166
    6. '_context' → logprob: -14.78804874420166
    7. '=context' → logprob: -14.78804874420166
    8. '	context' → logprob: -15.78804874420166
    9. '
' → logprob: -16.038049697875977
    10. 'strategy' → logprob: -16.413049697875977

Token 528: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0002920830447692424
    2. '.' → logprob: -8.25029182434082
    3. 'find' → logprob: -10.50029182434082
    4. '.findall' → logprob: -13.12529182434082
    5. ' .' → logprob: -14.87529182434082
    6. '.next' → logprob: -15.25029182434082
    7. '.
' → logprob: -15.75029182434082
    8. ').' → logprob: -16.25029182434082
    9. ' find' → logprob: -16.25029182434082
    10. '   ' → logprob: -16.25029182434082

Token 529: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -2.963691804325208e-05
    2. 'nearest' → logprob: -10.500029563903809
    3. '_n' → logprob: -14.375029563903809
    4. '(ne' → logprob: -14.500029563903809
    5. 'ne' → logprob: -14.625029563903809
    6. ' nearest' → logprob: -15.500029563903809
    7. '
' → logprob: -16.375030517578125
    8. '```' → logprob: -16.750030517578125
    9. '   ' → logprob: -17.500030517578125
    10. 'Nearest' → logprob: -17.625030517578125

Token 530: 'arest' (ID: 21325)
  Prédit: 'arest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arest' → logprob: -0.009838494472205639
    2. 'ar' → logprob: -4.759838581085205
    3. 'arst' → logprob: -6.759838581085205
    4. '       ' → logprob: -11.634838104248047
    5. '_p' → logprob: -11.884838104248047
    6. 'AREST' → logprob: -11.884838104248047
    7. 'nearest' → logprob: -12.009838104248047
    8. '   ' → logprob: -12.259838104248047
    9. 'ares' → logprob: -12.384838104248047
    10. 'rest' → logprob: -12.634838104248047

Token 531: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -3.1186566047836095e-05
    2. '_p' → logprob: -11.000031471252441
    3. 'pr' → logprob: -11.625031471252441
    4. '_' → logprob: -12.625031471252441
    5. '_prime' → logprob: -14.375031471252441
    6. '(pr' → logprob: -14.875031471252441
    7. '```' → logprob: -15.875031471252441
    8. 'p' → logprob: -15.875031471252441
    9. '
' → logprob: -16.125030517578125
    10. '_Pr' → logprob: -16.250030517578125

Token 532: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.012853709049522877
    2. 'mes' → logprob: -4.887853622436523
    3. 'ime' → logprob: -6.762853622436523
    4. '   ' → logprob: -7.887853622436523
    5. 't' → logprob: -8.075353622436523
    6. '(' → logprob: -8.137853622436523
    7. '```' → logprob: -8.325353622436523
    8. 'omes' → logprob: -8.450353622436523
    9. 's' → logprob: -8.575353622436523
    10. '
' → logprob: -8.575353622436523

Token 533: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001057698973454535
    2. '(' → logprob: -6.8760576248168945
    3. '(
' → logprob: -10.626057624816895
    4. ' (' → logprob: -15.376057624816895
    5. '((' → logprob: -15.501057624816895
    6. '
' → logprob: -15.751057624816895
    7. ',' → logprob: -17.87605857849121
    8. '           ' → logprob: -18.00105857849121
    9. '   ' → logprob: -18.12605857849121
    10. '       ' → logprob: -18.25105857849121

Token 534: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2748068571090698
    2. '           ' → logprob: -1.7748068571090698
    3. ')' → logprob: -2.6498069763183594
    4. ')
' → logprob: -9.52480697631836
    5. '       ' → logprob: -11.39980697631836
    6. '
' → logprob: -12.14980697631836
    7. ')

' → logprob: -12.64980697631836
    8. '               ' → logprob: -13.52480697631836
    9. ' )
' → logprob: -13.52480697631836
    10. '            
' → logprob: -14.14980697631836

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017644320614635944
    2. 'results' → logprob: -6.501764297485352
    3. ' results' → logprob: -8.251764297485352
    4. 'result' → logprob: -13.876764297485352
    5. '            
' → logprob: -16.12676429748535
    6. '
' → logprob: -16.62676429748535
    7. '       ' → logprob: -16.87676429748535
    8. '```' → logprob: -17.12676429748535
    9. '(results' → logprob: -17.37676429748535
    10. '	results' → logprob: -17.50176429748535

Token 536: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.2283361554145813
    2. '           ' → logprob: -1.9783360958099365
    3. ' results' → logprob: -2.7283360958099365
    4. 'result' → logprob: -7.603336334228516
    5. ' result' → logprob: -12.353336334228516
    6. 'output' → logprob: -12.603336334228516
    7. '
' → logprob: -13.103336334228516
    8. '            
' → logprob: -13.228336334228516
    9. '	results' → logprob: -13.228336334228516
    10. '```' → logprob: -13.228336334228516

Token 537: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026169343618676066
    2. '.' → logprob: -8.250261306762695
    3. '.app' → logprob: -15.500261306762695
    4. '.ap' → logprob: -16.125261306762695
    5. '.extend' → logprob: -17.125261306762695
    6. 'append' → logprob: -17.250261306762695
    7. ' .' → logprob: -18.000261306762695
    8. '.Append' → logprob: -18.500261306762695
    9. '.add' → logprob: -19.500261306762695
    10. '.push' → logprob: -20.250261306762695

Token 538: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.6656825866666622e-05
    2. '(' → logprob: -11.25002670288086
    3. 'f' → logprob: -11.37502670288086
    4. '   ' → logprob: -13.37502670288086
    5. ' (' → logprob: -15.12502670288086
    6. '           ' → logprob: -16.50002670288086
    7. '       ' → logprob: -16.62502670288086
    8. '(
' → logprob: -17.00002670288086
    9. '(str' → logprob: -17.12502670288086
    10. ' f' → logprob: -17.50002670288086

Token 539: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -1.9862216504407115e-05
    2. ''{' → logprob: -11.375020027160645
    3. '"' → logprob: -11.750020027160645
    4. ' "{' → logprob: -15.625020027160645
    5. '("{' → logprob: -15.875020027160645
    6. '{' → logprob: -16.125019073486328
    7. '   ' → logprob: -17.375019073486328
    8. 'f' → logprob: -17.875019073486328
    9. '"<' → logprob: -18.500019073486328
    10. '""' → logprob: -18.500019073486328

Token 540: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -4.127333340875339e-06
    2. 'n' → logprob: -13.125003814697266
    3. ' prev' → logprob: -13.250003814697266
    4. 'previous' → logprob: -15.750003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '	prev' → logprob: -17.000003814697266
    7. '(prev' → logprob: -17.625003814697266
    8. 'pre' → logprob: -18.000003814697266
    9. '.prev' → logprob: -18.625003814697266
    10. 'p' → logprob: -18.875003814697266

Token 541: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.872261317563243e-05
    2. '_' → logprob: -9.875059127807617
    3. ' _' → logprob: -12.250059127807617
    4. '}_' → logprob: -14.250059127807617
    5. ')_' → logprob: -15.375059127807617
    6. ')' → logprob: -15.750059127807617
    7. ' ' → logprob: -15.750059127807617
    8. '```' → logprob: -15.812559127807617
    9. '"_' → logprob: -15.937559127807617
    10. '
' → logprob: -16.312559127807617

Token 542: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00013369438238441944
    2. '},{' → logprob: -9.375133514404297
    3. ' {' → logprob: -10.375133514404297
    4. '},' → logprob: -11.750133514404297
    5. ' }' → logprob: -12.000133514404297
    6. '}{' → logprob: -13.000133514404297
    7. '{' → logprob: -14.250133514404297
    8. '}-{' → logprob: -16.250133514404297
    9. '}:{' → logprob: -16.500133514404297
    10. '"' → logprob: -16.500133514404297

Token 543: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0006290406454354525
    2. '{' → logprob: -7.37562894821167
    3. ' ' → logprob: -13.250629425048828
    4. ' {(' → logprob: -15.750629425048828
    5. '}' → logprob: -16.125629425048828
    6. ',{' → logprob: -16.125629425048828
    7. ',' → logprob: -16.250629425048828
    8. ' {'' → logprob: -16.750629425048828
    9. ' ' → logprob: -16.875629425048828
    10. '   ' → logprob: -17.000629425048828

Token 544: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.572941179503687e-05
    2. ' next' → logprob: -10.000045776367188
    3. '(next' → logprob: -16.375045776367188
    4. '[next' → logprob: -16.750045776367188
    5. '}' → logprob: -17.875045776367188
    6. '   ' → logprob: -18.000045776367188
    7. '{' → logprob: -18.250045776367188
    8. '	next' → logprob: -18.375045776367188
    9. 'n' → logprob: -18.500045776367188
    10. '.next' → logprob: -18.625045776367188

Token 545: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -12.625009536743164
    3. 'p' → logprob: -12.625009536743164
    4. '}' → logprob: -14.250009536743164
    5. ' _' → logprob: -14.250009536743164
    6. '}_' → logprob: -15.625009536743164
    7. 'space' → logprob: -15.750009536743164
    8. '+' → logprob: -15.875009536743164
    9. '_q' → logprob: -16.375009536743164
    10. '   ' → logprob: -16.437509536743164

Token 546: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00040815072134137154
    2. '")
' → logprob: -8.500408172607422
    3. '}")' → logprob: -8.500408172607422
    4. '}' → logprob: -14.500408172607422
    5. '")
' → logprob: -15.750408172607422
    6. '}")
' → logprob: -15.750408172607422
    7. '\n' → logprob: -16.250408172607422
    8. '"}' → logprob: -16.750408172607422
    9. ')")' → logprob: -16.750408172607422
    10. ')' → logprob: -16.750408172607422

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05028301849961281
    2. '
' → logprob: -3.0502829551696777
    3. 'return' → logprob: -6.675282955169678
    4. ' return' → logprob: -8.550283432006836
    5. '        
' → logprob: -9.800283432006836
    6. '<|end|>' → logprob: -9.800283432006836
    7. '
' → logprob: -10.425283432006836
    8. '	' → logprob: -10.550283432006836
    9. '	return' → logprob: -10.675283432006836
    10. '   ' → logprob: -11.300283432006836

Token 548: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1318834275007248
    2. 'return' (adapté à ' return') → logprob: -2.131883382797241
    3. ' return' → logprob: -5.38188362121582
    4. '   ' → logprob: -8.00688362121582
    5. '	return' → logprob: -11.63188362121582
    6. '
' → logprob: -14.25688362121582
    7. '      ' → logprob: -15.25688362121582
    8. '	' → logprob: -15.38188362121582
    9. ' ' → logprob: -15.50688362121582
    10. '           ' → logprob: -16.38188362121582

Token 549: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0024756586644798517
    2. ' results' → logprob: -6.002475738525391
    3. '	results' → logprob: -19.00247573852539
    4. '(results' → logprob: -20.37747573852539
    5. 'result' → logprob: -21.87747573852539
    6. '.results' → logprob: -23.25247573852539
    7. 'Results' → logprob: -25.00247573852539
    8. '_results' → logprob: -25.50247573852539
    9. '
' → logprob: -25.87747573852539
    10. '   ' → logprob: -26.25247573852539

Token 550: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10917778313159943
    2. 'def' → logprob: -2.359177827835083
    3. 'import' → logprob: -4.859177589416504
    4. '```' → logprob: -7.109177589416504
    5. '#' → logprob: -8.234177589416504
    6. ' if' → logprob: -10.359177589416504
    7. 'from' → logprob: -10.609177589416504
    8. 'class' → logprob: -10.984177589416504
    9. '<|end|>' → logprob: -11.359177589416504
    10. '
' → logprob: -13.109177589416504

Token 552: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6931516528129578
    2. 'main' → logprob: -0.6931516528129578
    3. ' run' → logprob: -12.943151473999023
    4. 'run' → logprob: -13.193151473999023
    5. '	main' → logprob: -17.068151473999023
    6. 'solve' → logprob: -17.318151473999023
    7. '_main' → logprob: -18.068151473999023
    8. 'example' → logprob: -18.318151473999023
    9. 'create' → logprob: -18.318151473999023
    10. ' solve' → logprob: -18.443151473999023

Token 553: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.579495235811919e-05
    2. '():
' → logprob: -9.37509536743164
    3. ' ():' → logprob: -11.75009536743164
    4. '()' → logprob: -12.75009536743164
    5. '():
' → logprob: -16.00009536743164
    6. '()>' → logprob: -18.00009536743164
    7. ':' → logprob: -18.87509536743164
    8. '():

' → logprob: -19.00009536743164
    9. '(":' → logprob: -19.37509536743164
    10. '()->' → logprob: -19.37509536743164

Token 554: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.27068522572517395
    2. ' import' → logprob: -2.0206851959228516
    3. '   ' → logprob: -2.2706851959228516
    4. 'limit' → logprob: -7.145685195922852
    5. ' limit' → logprob: -8.395685195922852
    6. ' lines' → logprob: -8.395685195922852
    7. 'lines' → logprob: -9.395685195922852
    8. 'input' → logprob: -12.645685195922852
    9. '	import' → logprob: -12.895685195922852
    10. 'strategy' → logprob: -12.895685195922852

Token 555: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.22046151757240295
    2. 'limit' → logprob: -1.9704614877700806
    3. ' import' → logprob: -3.09546160697937
    4. 'lines' → logprob: -5.095461368560791
    5. ' limit' → logprob: -5.595461368560791
    6. '   ' → logprob: -6.095461368560791
    7. ' lines' → logprob: -6.970461368560791
    8. 'strategy' → logprob: -9.97046184539795
    9. 's' → logprob: -10.22046184539795
    10. 'input' → logprob: -10.47046184539795

Token 556: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.20141607522964478
    2. 'sys' → logprob: -1.701416015625
    3. '=sys' → logprob: -13.076416015625
    4. '	sys' → logprob: -14.326416015625
    5. '(sys' → logprob: -16.826416015625
    6. ' argparse' → logprob: -18.451416015625
    7. '_sys' → logprob: -18.701416015625
    8. '.sys' → logprob: -19.826416015625
    9. 'os' → logprob: -20.576416015625
    10. '```' → logprob: -20.826416015625

Token 557: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004954327829182148
    2. '
' → logprob: -6.1299543380737305
    3. '    
' → logprob: -6.5049543380737305
    4. ' lines' → logprob: -7.5049543380737305
    5. 'limit' → logprob: -7.8799543380737305
    6. 'lines' → logprob: -8.25495433807373
    7. ' limit' → logprob: -9.87995433807373
    8. 'strategy' → logprob: -12.50495433807373
    9. '   ' → logprob: -12.75495433807373
    10. ',' → logprob: -12.75495433807373

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11935372650623322
    2. ' lines' → logprob: -2.744353771209717
    3. 'limit' → logprob: -3.619353771209717
    4. ' limit' → logprob: -4.619353771209717
    5. 'lines' → logprob: -4.619353771209717
    6. '    
' → logprob: -6.869353771209717
    7. '
' → logprob: -8.369353294372559
    8. '    ' → logprob: -9.369353294372559
    9. 'input' → logprob: -9.619353294372559
    10. ' if' → logprob: -9.744353294372559

Token 559: ' MAX' (ID: 16960)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.25102707743644714
    2. '   ' → logprob: -1.8760271072387695
    3. 'lines' → logprob: -3.0010271072387695
    4. ' limit' → logprob: -4.6260271072387695
    5. ' lines' → logprob: -4.7510271072387695
    6. 'input' → logprob: -8.62602710723877
    7. 'strategy' → logprob: -8.75102710723877
    8. 'LIMIT' → logprob: -9.75102710723877
    9. 'args' → logprob: -9.87602710723877
    10. 's' → logprob: -10.12602710723877

Token 560: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -0.0009344478603452444
    2. ' =' → logprob: -7.625934600830078
    3. '_NUMBER' → logprob: -8.500934600830078
    4. '_VALUE' → logprob: -9.625934600830078
    5. '=' → logprob: -10.000934600830078
    6. '_limit' → logprob: -10.375934600830078
    7. '_SIZE' → logprob: -10.750934600830078
    8. '_S' → logprob: -11.000934600830078
    9. '_' → logprob: -11.250934600830078
    10. '_N' → logprob: -11.375934600830078

Token 561: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020796209573746
    2. '=' → logprob: -2.350208044052124
    3. '   ' → logprob: -13.975208282470703
    4. '  ' → logprob: -15.600208282470703
    5. ' ' → logprob: -15.975208282470703
    6. ',' → logprob: -16.725208282470703
    7. ':' → logprob: -17.350208282470703
    8. '    ' → logprob: -17.350208282470703
    9. '```' → logprob: -18.475208282470703
    10. ' =
' → logprob: -18.600208282470703

Token 562: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3135319948196411
    2. '100' → logprob: -1.3135319948196411
    3. ' ' → logprob: -8.313531875610352
    4. '1' → logprob: -10.688531875610352
    5. '500' → logprob: -14.063531875610352
    6. '200' → logprob: -14.438531875610352
    7. '300' → logprob: -14.813531875610352
    8. '   ' → logprob: -15.813531875610352
    9. '2' → logprob: -15.938531875610352
    10. '  ' → logprob: -16.06353187561035

Token 563: '600' (ID: 6718)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16025926172733307
    2. '100' → logprob: -1.9102592468261719
    3. '1' → logprob: -10.410259246826172
    4. '500' → logprob: -13.410259246826172
    5. '200' → logprob: -13.410259246826172
    6. ' ' → logprob: -13.785259246826172
    7. '2' → logprob: -15.160259246826172
    8. '300' → logprob: -15.160259246826172
    9. 'int' → logprob: -16.285259246826172
    10. '_' → logprob: -16.285259246826172

Token 564: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03785785287618637
    2. '_' → logprob: -3.4128577709198
    3. '00' → logprob: -5.537858009338379
    4. '0' → logprob: -9.162858009338379
    5. '001' → logprob: -9.662858009338379
    6. '010' → logprob: -9.787858009338379
    7. '006' → logprob: -11.537858009338379
    8. '005' → logprob: -12.162858009338379
    9. '007' → logprob: -12.287858009338379
    10. '020' → logprob: -12.412858009338379

Token 565: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009329949505627155
    2. '
' → logprob: -4.759329795837402
    3. 'strategy' → logprob: -8.009329795837402
    4. ' strategy' → logprob: -8.759329795837402
    5. '    
' → logprob: -8.884329795837402
    6. 's' → logprob: -9.884329795837402
    7. '   ' → logprob: -11.884329795837402
    8. '
' → logprob: -11.884329795837402
    9. 'strateg' → logprob: -12.009329795837402
    10. ' sieve' → logprob: -12.384329795837402

Token 566: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31803518533706665
    2. '   ' → logprob: -1.3180351257324219
    3. 'strategy' → logprob: -5.693035125732422
    4. 's' → logprob: -7.318035125732422
    5. '    
' → logprob: -7.818035125732422
    6. '
' → logprob: -8.443035125732422
    7. ' strategy' → logprob: -10.818035125732422
    8. ' ' → logprob: -11.193035125732422
    9. '

' → logprob: -11.443035125732422
    10. 'prime' → logprob: -11.568035125732422

Token 567: ' Just' (ID: 6214)
  Prédit: ' strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.2946593165397644
    2. 'strategy' → logprob: -1.5446593761444092
    3. '   ' → logprob: -3.294659376144409
    4. 's' → logprob: -6.54465913772583
    5. ' sieve' → logprob: -6.54465913772583
    6. 'prime' → logprob: -7.41965913772583
    7. '
' → logprob: -7.91965913772583
    8. ' prime' → logprob: -7.91965913772583
    9. ' limit' → logprob: -9.419659614562988
    10. 'limit' → logprob: -9.794659614562988

Token 568: ' above' (ID: 5151)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11295285075902939
    2. 'an' → logprob: -2.612952947616577
    3. 'en' → logprob: -3.737952947616577
    4. ' a' → logprob: -5.362952709197998
    5. 'as' → logprob: -5.612952709197998
    6. ' an' → logprob: -7.487952709197998
    7. '   ' → logprob: -8.237953186035156
    8. 'to' → logprob: -8.862953186035156
    9. 'large' → logprob: -9.112953186035156
    10. 'some' → logprob: -9.487953186035156

Token 569: ' max' (ID: 2999)
  Prédit: '600'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '600' → logprob: -0.23240803182125092
    2. '500' → logprob: -1.607408046722412
    3. '590' → logprob: -6.232408046722412
    4. '550' → logprob: -6.732408046722412
    5. '10' → logprob: -6.732408046722412
    6. '300' → logprob: -7.232408046722412
    7. 'int' → logprob: -7.607408046722412
    8. 'max' → logprob: -7.857408046722412
    9. '100' → logprob: -8.357407569885254
    10. ' ' → logprob: -8.982407569885254

Token 570: ' input' (ID: 3422)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1094286441802979
    2. '(' → logprob: -1.3594286441802979
    3. '_number' → logprob: -2.109428644180298
    4. '_possible' → logprob: -2.859428644180298
    5. '   ' → logprob: -3.359428644180298
    6. 'input' → logprob: -3.484428644180298
    7. 'import' → logprob: -3.859428644180298
    8. '_n' → logprob: -3.859428644180298
    9. '_value' → logprob: -3.984428644180298
    10. 'number' → logprob: -4.234428405761719

Token 571: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06001095846295357
    2. '_value' → logprob: -3.6850109100341797
    3. ' =' → logprob: -4.43501091003418
    4. '    
' → logprob: -5.18501091003418
    5. '_limit' → logprob: -5.31001091003418
    6. '()' → logprob: -6.18501091003418
    7. '_number' → logprob: -6.18501091003418
    8. '=' → logprob: -6.31001091003418
    9. '_line' → logprob: -6.31001091003418
    10. '()
' → logprob: -7.06001091003418

Token 572: ' ensure' (ID: 6757)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.28888678550720215
    2. 'cover' → logprob: -2.538886785507202
    3. '600' → logprob: -2.538886785507202
    4. 'handle' → logprob: -3.163886785507202
    5. ' handle' → logprob: -4.038887023925781
    6. 'ensure' → logprob: -4.663887023925781
    7. ' accommodate' → logprob: -4.788887023925781
    8. ' support' → logprob: -5.913887023925781
    9. 'support' → logprob: -5.913887023925781
    10. 'ac' → logprob: -6.038887023925781

Token 573: ' next' (ID: 2613)
  Prédit: '600'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '600' → logprob: -0.38388532400131226
    2. 'MAX' → logprob: -2.133885383605957
    3. 'next' → logprob: -2.758885383605957
    4. ' coverage' → logprob: -3.258885383605957
    5. ' MAX' → logprob: -4.008885383605957
    6. ' next' → logprob: -4.133885383605957
    7. 's' → logprob: -4.258885383605957
    8. 'coverage' → logprob: -4.383885383605957
    9. 'correct' → logprob: -5.008885383605957
    10. 'safe' → logprob: -5.508885383605957

Token 574: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.1721985936164856
    2. '_p' → logprob: -2.172198534011841
    3. '_token' → logprob: -4.04719877243042
    4. '_' → logprob: -4.54719877243042
    5. 'prime' → logprob: -4.92219877243042
    6. 'and' → logprob: -6.54719877243042
    7. 'token' → logprob: -6.54719877243042
    8. '<|end|>' → logprob: -6.79719877243042
    9. '_tokens' → logprob: -7.29719877243042
    10. '   ' → logprob: -7.54719877243042

Token 575: ' exists' (ID: 13031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6087092757225037
    2. ' and' → logprob: -1.4837093353271484
    3. '=' → logprob: -3.3587093353271484
    4. 'and' → logprob: -3.3587093353271484
    5. 'def' → logprob: -3.7337093353271484
    6. '_' → logprob: -3.7337093353271484
    7. '   ' → logprob: -4.233709335327148
    8. '_possible' → logprob: -4.358709335327148
    9. '_prime' → logprob: -4.608709335327148
    10. '_candidate' → logprob: -4.608709335327148

Token 576: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00540616549551487
    2. '
' → logprob: -5.380406379699707
    3. '    
' → logprob: -7.630406379699707
    4. 'strategy' → logprob: -8.630406379699707
    5. 's' → logprob: -9.755406379699707
    6. ' strategy' → logprob: -10.130406379699707
    7. '   ' → logprob: -12.130406379699707
    8. '
' → logprob: -12.505406379699707
    9. 'strateg' → logprob: -12.505406379699707
    10. 'context' → logprob: -12.880406379699707

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007617156486958265
    2. '
' → logprob: -5.507616996765137
    3. 's' → logprob: -6.882616996765137
    4. ' strategy' → logprob: -6.882616996765137
    5. 'strategy' → logprob: -6.882616996765137
    6. '    
' → logprob: -8.257616996765137
    7. ' sieve' → logprob: -9.382616996765137
    8. 'prime' → logprob: -10.507616996765137
    9. '   ' → logprob: -11.132616996765137
    10. ' s' → logprob: -11.382616996765137

Token 578: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' (adapté à ' strategy') → logprob: -0.23257999122142792
    2. ' strategy' → logprob: -1.9825799465179443
    3. '   ' → logprob: -2.8575799465179443
    4. 's' → logprob: -4.482580184936523
    5. 'context' → logprob: -7.482580184936523
    6. ' sieve' → logprob: -8.232580184936523
    7. 'prime' → logprob: -9.107580184936523
    8. ' context' → logprob: -9.982580184936523
    9. '    
' → logprob: -10.357580184936523
    10. 'strateg' → logprob: -11.357580184936523

Token 579: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '=

' → logprob: -18.386871337890625
    4. '=
' → logprob: -19.386871337890625
    5. '＝' → logprob: -19.886871337890625
    6. 's' → logprob: -19.886871337890625
    7. '=}' → logprob: -19.886871337890625
    8. ' ' → logprob: -20.011871337890625
    9. ',' → logprob: -20.011871337890625
    10. '=S' → logprob: -20.136871337890625

Token 580: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.061967913061380386
    2. 'S' → logprob: -2.8119678497314453
    3. '	S' → logprob: -15.686967849731445
    4. ' ' → logprob: -17.436967849731445
    5. ' ' → logprob: -18.061967849731445
    6. '=S' → logprob: -18.436967849731445
    7. '   ' → logprob: -18.561967849731445
    8. '_S' → logprob: -18.561967849731445
    9. '(S' → logprob: -20.311967849731445
    10. '<S' → logprob: -20.311967849731445

Token 581: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -7.755678961984813e-05
    2. 'S' → logprob: -9.625077247619629
    3. '=S' → logprob: -11.750077247619629
    4. 'erve' → logprob: -13.875077247619629
    5. 't' → logprob: -14.500077247619629
    6. '(S' → logprob: -15.250077247619629
    7. 'ive' → logprob: -15.500077247619629
    8. 'olve' → logprob: -15.625077247619629
    9. '=' → logprob: -15.875077247619629
    10. '_S' → logprob: -16.000078201293945

Token 582: 'Prime' (ID: 43017)
  Prédit: 'Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: 0.0
    2. '_prime' → logprob: -18.125
    3. 'prime' → logprob: -19.875
    4. ' Prime' → logprob: -21.125
    5. 'Pr' → logprob: -21.25
    6. 'Prince' → logprob: -22.625
    7. 'Premium' → logprob: -22.75
    8. '```' → logprob: -23.0
    9. '_Pr' → logprob: -23.375
    10. 'Prim' → logprob: -23.625

Token 583: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -4.320199877838604e-07
    2. 'Strateg' → logprob: -15.5
    3. 'strategy' → logprob: -16.75
    4. 'Str' → logprob: -17.75
    5. ' strategy' → logprob: -18.25
    6. 'S' → logprob: -18.25
    7. '_strategy' → logprob: -19.25
    8. ' Strategy' → logprob: -20.25
    9. 'Strategies' → logprob: -21.375
    10. 'Star' → logprob: -21.875

Token 584: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.250015258789062
    3. '(max' → logprob: -13.625015258789062
    4. '(limit' → logprob: -14.625015258789062
    5. '(
' → logprob: -14.750015258789062
    6. '(M' → logprob: -16.375015258789062
    7. 'MAX' → logprob: -17.250015258789062
    8. '(Max' → logprob: -17.625015258789062
    9. '(DEFAULT' → logprob: -19.500015258789062
    10. '(NUM' → logprob: -19.875015258789062

Token 585: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -2.2200749754119897e-06
    2. 'LIMIT' → logprob: -13.250001907348633
    3. 'Limit' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '_limit' → logprob: -17.500001907348633
    6. 'limit' → logprob: -17.625001907348633
    7. '_' → logprob: -17.875001907348633
    8. '
' → logprob: -18.125001907348633
    9. ')' → logprob: -18.500001907348633
    10. '(limit' → logprob: -18.750001907348633

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010962257510982454
    2. ')
' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.000109672546387
    4. ' )' → logprob: -15.375109672546387
    5. ')
' → logprob: -16.00010871887207
    6. ')

' → logprob: -17.50010871887207
    7. ' ' → logprob: -19.25010871887207
    8. '),' → logprob: -19.87510871887207
    9. '))' → logprob: -20.12510871887207
    10. '  ' → logprob: -20.50010871887207

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0221916437149048
    2. ' context' → logprob: -1.0221916437149048
    3. 'context' → logprob: -1.2721916437149048
    4. '<context' → logprob: -9.522192001342773
    5. '
' → logprob: -9.897192001342773
    6. 'ctx' → logprob: -10.897192001342773
    7. '_context' → logprob: -11.272192001342773
    8. '"context' → logprob: -12.147192001342773
    9. '	context' → logprob: -12.522192001342773
    10. '=context' → logprob: -13.272192001342773

Token 588: ' context' (ID: 3814)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' (adapté à ' context') → logprob: -0.0009122979827225208
    2. ' context' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.3759126663208
    4. 'ctx' → logprob: -15.3759126663208
    5. '
' → logprob: -17.375911712646484
    6. '<context' → logprob: -18.500911712646484
    7. '_context' → logprob: -19.000911712646484
    8. 'Context' → logprob: -19.750911712646484
    9. '```' → logprob: -19.750911712646484
    10. '"context' → logprob: -19.875911712646484

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ')' → logprob: -16.126930236816406
    4. '<|end|>' → logprob: -16.501930236816406
    5. ' =
' → logprob: -16.626930236816406
    6. '=
' → logprob: -16.751930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '   ' → logprob: -18.001930236816406
    9. '(' → logprob: -18.251930236816406
    10. '=

' → logprob: -18.626930236816406

Token 590: ' Prime' (ID: 20134)
  Prédit: ' Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.03804171830415726
    2. 'Prime' → logprob: -3.288041830062866
    3. ' prime' → logprob: -16.163042068481445
    4. '_prime' → logprob: -16.663042068481445
    5. '_Pr' → logprob: -17.538042068481445
    6. ' Principal' → logprob: -18.163042068481445
    7. ' Primer' → logprob: -18.163042068481445
    8. ' Prim' → logprob: -18.663042068481445
    9. ' Primitive' → logprob: -18.913042068481445
    10. '   ' → logprob: -18.913042068481445

Token 591: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: -3.128163257315464e-07
    2. 'Prime' → logprob: -15.875
    3. 'Strategy' → logprob: -16.375
    4. 'context' → logprob: -18.0
    5. '	Context' → logprob: -20.625
    6. '_Context' → logprob: -22.0
    7. '_context' → logprob: -22.25
    8. 'Concept' → logprob: -23.0
    9. '_CONTEXT' → logprob: -23.625
    10. '"context' → logprob: -23.875

Token 592: '(strategy' (ID: 63072)
  Prédit: '(strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(strategy' → logprob: -0.06205843761563301
    2. 'strategy' → logprob: -2.812058448791504
    3. '(
' → logprob: -10.437058448791504
    4. ' strategy' → logprob: -10.437058448791504
    5. '   ' → logprob: -10.937058448791504
    6. '(context' → logprob: -12.062058448791504
    7. '(' → logprob: -12.562058448791504
    8. '(S' → logprob: -13.312058448791504
    9. 'strateg' → logprob: -13.687058448791504
    10. '
' → logprob: -14.312058448791504

Token 593: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.059108197689056396
    2. ')' → logprob: -3.434108257293701
    3. '   ' → logprob: -3.684108257293701
    4. ')
' → logprob: -11.309107780456543
    5. '
' → logprob: -12.684107780456543
    6. ')

' → logprob: -13.559107780456543
    7. ' )
' → logprob: -13.684107780456543
    8. ' ' → logprob: -13.809107780456543
    9. '<|end|>' → logprob: -14.309107780456543
    10. ',' → logprob: -14.434107780456543

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32641518115997314
    2. 'handler' → logprob: -1.3264151811599731
    3. 'input' → logprob: -4.951415061950684
    4. ' handler' → logprob: -5.326415061950684
    5. ' input' → logprob: -6.826415061950684
    6. '	handler' → logprob: -10.701415061950684
    7. '
' → logprob: -12.201415061950684
    8. '    
' → logprob: -12.326415061950684
    9. '```' → logprob: -12.951415061950684
    10. '  ' → logprob: -13.076415061950684

Token 595: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' (adapté à ' handler') → logprob: -0.00409775460138917
    2. 'input' → logprob: -6.129097938537598
    3. '   ' → logprob: -6.629097938537598
    4. ' handler' → logprob: -7.504097938537598
    5. 'import' → logprob: -10.629097938537598
    6. ' input' → logprob: -11.379097938537598
    7. 'lines' → logprob: -13.629097938537598
    8. 'handle' → logprob: -14.754097938537598
    9. '    
' → logprob: -15.254097938537598
    10. ' lines' → logprob: -15.254097938537598

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168561436235905
    2. '=' → logprob: -4.264168739318848
    3. '(' → logprob: -12.639168739318848
    4. ' =
' → logprob: -14.139168739318848
    5. '	' → logprob: -15.389168739318848
    6. ' =
' → logprob: -15.639168739318848
    7. ')' → logprob: -16.13916778564453
    8. '   ' → logprob: -16.26416778564453
    9. '=context' → logprob: -16.26416778564453
    10. ' ' → logprob: -16.38916778564453

Token 597: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.005233882926404476
    2. ' Input' → logprob: -5.2552337646484375
    3. '	Input' → logprob: -18.005233764648438
    4. '   ' → logprob: -19.880233764648438
    5. '_input' → logprob: -21.255233764648438
    6. '_Input' → logprob: -21.630233764648438
    7. ' input' → logprob: -23.255233764648438
    8. '<Input' → logprob: -23.755233764648438
    9. '\Input' → logprob: -24.005233764648438
    10. '.Input' → logprob: -24.505233764648438

Token 598: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. 'handler' → logprob: -19.5
    3. 'Handle' → logprob: -20.375
    4. '_Handler' → logprob: -21.75
    5. ' Handler' → logprob: -22.0
    6. '_HANDLER' → logprob: -23.375
    7. '_handler' → logprob: -23.625
    8. '.Handler' → logprob: -24.0
    9. 'Hand' → logprob: -24.5
    10. 'Handling' → logprob: -24.625

Token 599: '(context' (ID: 9395)
  Prédit: '(context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(context' → logprob: -0.0007130279554985464
    2. 'context' → logprob: -7.500712871551514
    3. '   ' → logprob: -9.375713348388672
    4. '(
' → logprob: -9.750713348388672
    5. '(' → logprob: -11.500713348388672
    6. ' context' → logprob: -12.875713348388672
    7. '<context' → logprob: -13.000713348388672
    8. '=context' → logprob: -13.500713348388672
    9. ' (' → logprob: -15.000713348388672
    10. '"context' → logprob: -15.625713348388672

Token 600: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.389684796333313
    2. '   ' → logprob: -1.139684796333313
    3. '(' → logprob: -7.014684677124023
    4. ')
' → logprob: -7.139684677124023
    5. ',' → logprob: -8.014684677124023
    6. '    
' → logprob: -8.514684677124023
    7. '<|end|>' → logprob: -8.764684677124023
    8. '(lines' → logprob: -9.264684677124023
    9. '(
' → logprob: -9.264684677124023
    10. '(sys' → logprob: -10.139684677124023

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004491238854825497
    2. ' lines' → logprob: -6.129491329193115
    3. 'lines' → logprob: -6.254491329193115
    4. 'for' → logprob: -8.254490852355957
    5. 'import' → logprob: -10.004490852355957
    6. ' for' → logprob: -10.379490852355957
    7. 'input' → logprob: -10.629490852355957
    8. '    
' → logprob: -12.254490852355957
    9. '```' → logprob: -12.254490852355957
    10. '
' → logprob: -12.379490852355957

Token 602: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.001119976514019072
    2. ' lines' → logprob: -7.251120090484619
    3. 'input' (adapté à ' input') → logprob: -8.001119613647461
    4. 'for' → logprob: -10.251119613647461
    5. 'inputs' → logprob: -10.876119613647461
    6. '   ' → logprob: -11.126119613647461
    7. 'results' → logprob: -12.376119613647461
    8. 'output' → logprob: -14.001119613647461
    9. ' input' → logprob: -15.251119613647461
    10. 'outputs' → logprob: -15.501119613647461

Token 603: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.386147626675665e-05
    2. 'lines' → logprob: -10.500073432922363
    3. '_data' → logprob: -10.875073432922363
    4. '=' → logprob: -11.250073432922363
    5. ' =' → logprob: -11.250073432922363
    6. 's' → logprob: -14.750073432922363
    7. 'Lines' → logprob: -15.375073432922363
    8. '=sys' → logprob: -15.625073432922363
    9. '_' → logprob: -16.12507438659668
    10. 'data' → logprob: -16.25007438659668

Token 604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136192262172699
    2. '=' → logprob: -1.3136192560195923
    3. '=sys' → logprob: -7.938619136810303
    4. ' =
' → logprob: -15.313619613647461
    5. '   ' → logprob: -15.563619613647461
    6. '＝' → logprob: -16.93861961364746
    7. '(sys' → logprob: -17.18861961364746
    8. '=subprocess' → logprob: -17.43861961364746
    9. '=

' → logprob: -17.68861961364746
    10. 'sys' → logprob: -17.68861961364746

Token 605: ' []
' (ID: 8911)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759421586990356
    2. ' sys' → logprob: -0.8259421586990356
    3. '[' → logprob: -13.450942039489746
    4. ' [' → logprob: -13.950942039489746
    5. '	sys' → logprob: -15.200942039489746
    6. '=sys' → logprob: -15.950942039489746
    7. '(sys' → logprob: -16.825942993164062
    8. '   ' → logprob: -17.200942993164062
    9. 'list' → logprob: -19.450942993164062
    10. ' list' → logprob: -20.075942993164062

Token 606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076242536306381226
    2. 'for' → logprob: -5.00762414932251
    3. ' for' → logprob: -7.00762414932251
    4. '
' → logprob: -12.757624626159668
    5. 'try' → logprob: -15.132624626159668
    6. '    
' → logprob: -15.382624626159668
    7. '	for' → logprob: -16.38262367248535
    8. '       ' → logprob: -18.13262367248535
    9. '```' → logprob: -18.25762367248535
    10. 'with' → logprob: -18.38262367248535

Token 607: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033712439239025116
    2. ' for' → logprob: -3.533712387084961
    3. '   ' → logprob: -5.533712387084961
    4. '
' → logprob: -13.283712387084961
    5. '	for' → logprob: -13.783712387084961
    6. '    
' → logprob: -16.15871238708496
    7. 'try' → logprob: -17.03371238708496
    8. 'while' → logprob: -17.03371238708496
    9. ' ' → logprob: -17.40871238708496
    10. '  ' → logprob: -18.78371238708496

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28124961256980896
    2. ' =' → logprob: -1.4062496423721313
    3. 'for' → logprob: -10.03125
    4. '_' → logprob: -10.65625
    5. ' ' → logprob: -12.40625
    6. '=int' → logprob: -12.53125
    7. '+=' → logprob: -12.78125
    8. ':' → logprob: -13.03125
    9. '   ' → logprob: -13.03125
    10. ' +=' → logprob: -13.15625

Token 609: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01213508378714323
    2. ' ' → logprob: -5.262135028839111
    3. 'int' → logprob: -5.262135028839111
    4. ' int' → logprob: -6.387135028839111
    5. '10' → logprob: -12.63713550567627
    6. '=int' → logprob: -13.26213550567627
    7. '100' → logprob: -13.76213550567627
    8. '6' → logprob: -14.38713550567627
    9. '1' → logprob: -14.38713550567627
    10. 'len' → logprob: -14.63713550567627

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014459172263741493
    2. 'int' → logprob: -4.264459133148193
    3. ' ' → logprob: -8.639459609985352
    4. ' int' → logprob: -9.639459609985352
    5. '100' → logprob: -10.889459609985352
    6. '10' → logprob: -11.389459609985352
    7. 'len' → logprob: -11.514459609985352
    8. '1' → logprob: -12.639459609985352
    9. 'sum' → logprob: -13.264459609985352
    10. '5' → logprob: -13.514459609985352

Token 611: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6208711862564087
    2. '
' → logprob: -1.2458711862564087
    3. ' for' → logprob: -2.120871067047119
    4. 'for' → logprob: -3.120871067047119
    5. '    
' → logprob: -4.995871067047119
    6. ' 
' → logprob: -6.370871067047119
    7. '  
' → logprob: -7.245871067047119
    8. '	for' → logprob: -7.995871067047119
    9. '	
' → logprob: -8.245871543884277
    10. 'while' → logprob: -8.745871543884277

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1173252984881401
    2. ' for' → logprob: -2.4923253059387207
    3. 'for' → logprob: -3.7423253059387207
    4. '
' → logprob: -5.742325305938721
    5. '    
' → logprob: -7.992325305938721
    6. 'while' → logprob: -8.117324829101562
    7. '	for' → logprob: -8.492324829101562
    8. ' while' → logprob: -8.617324829101562
    9. '	while' → logprob: -11.117324829101562
    10. '	
' → logprob: -11.867324829101562

Token 613: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5881338119506836
    2. 'for' (adapté à ' for') → logprob: -0.8381338119506836
    3. '   ' → logprob: -4.463133811950684
    4. 'while' → logprob: -7.963133811950684
    5. ' while' → logprob: -9.088133811950684
    6. '
' → logprob: -9.088133811950684
    7. 'try' → logprob: -11.588133811950684
    8. '	for' → logprob: -12.713133811950684
    9. '```' → logprob: -12.963133811950684
    10. ' line' → logprob: -13.338133811950684

Token 614: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02325386554002762
    2. ' line' → logprob: -3.773253917694092
    3. '_line' → logprob: -12.273253440856934
    4. 'lin' → logprob: -13.273253440856934
    5. '	line' → logprob: -14.398253440856934
    6. 'l' → logprob: -14.773253440856934
    7. 'raw' → logprob: -15.273253440856934
    8. 'input' → logprob: -15.273253440856934
    9. 'row' → logprob: -15.398253440856934
    10. 'ln' → logprob: -16.77325439453125

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013971416046842933
    2. 'in' → logprob: -6.626397132873535
    3. '   ' → logprob: -10.376397132873535
    4. '    ' → logprob: -11.251397132873535
    5. '	in' → logprob: -11.501397132873535
    6. ' =' → logprob: -11.626397132873535
    7. ' ' → logprob: -13.376397132873535
    8. ',' → logprob: -13.626397132873535
    9. '=' → logprob: -14.001397132873535
    10. ':' → logprob: -14.251397132873535

Token 616: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0430179201066494
    2. ' sys' → logprob: -3.168017864227295
    3. '=sys' → logprob: -12.043018341064453
    4. 'input' → logprob: -12.293018341064453
    5. '	sys' → logprob: -13.043018341064453
    6. 'stdin' → logprob: -13.043018341064453
    7. 'import' → logprob: -13.543018341064453
    8. '(sys' → logprob: -13.793018341064453
    9. 'iter' → logprob: -14.168018341064453
    10. '```' → logprob: -15.668018341064453

Token 617: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.541112427134067e-05
    2. 'stdin' → logprob: -9.750075340270996
    3. '.' → logprob: -11.125075340270996
    4. '.stdout' → logprob: -13.750075340270996
    5. '(stdin' → logprob: -14.375075340270996
    6. '.readline' → logprob: -15.000075340270996
    7. '.argv' → logprob: -15.875075340270996
    8. ' stdin' → logprob: -16.250076293945312
    9. '.stderr' → logprob: -17.125076293945312
    10. '.std' → logprob: -17.500076293945312

Token 618: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4675244987010956
    2. ':' → logprob: -1.092524528503418
    3. '       ' → logprob: -3.592524528503418
    4. '.rstrip' → logprob: -5.342524528503418
    5. '   ' → logprob: -5.592524528503418
    6. '.readline' → logprob: -7.342524528503418
    7. '):
' → logprob: -7.592524528503418
    8. '.readlines' → logprob: -7.967524528503418
    9. '.strip' → logprob: -8.217524528503418
    10. 'rstrip' → logprob: -9.592524528503418

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.673547563375905e-05
    2. '<|end|>' → logprob: -10.000086784362793
    3. '   ' → logprob: -11.125086784362793
    4. '        
' → logprob: -11.875086784362793
    5. '```' → logprob: -12.500086784362793
    6. ' if' → logprob: -12.625086784362793
    7. '<|end|>' → logprob: -12.875086784362793
    8. ',' → logprob: -13.625086784362793
    9. '    
' → logprob: -13.750086784362793
    10. '    ' → logprob: -14.000086784362793

Token 620: ' line' (ID: 2543)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5216661095619202
    2. '       ' → logprob: -1.0216660499572754
    3. ' input' → logprob: -4.146666049957275
    4. 'if' → logprob: -4.271666049957275
    5. 'input' → logprob: -5.021666049957275
    6. ' line' → logprob: -5.146666049957275
    7. '   ' → logprob: -5.646666049957275
    8. 'line' (adapté à ' line') → logprob: -7.646666049957275
    9. '           ' → logprob: -9.021666526794434
    10. ' lines' → logprob: -9.896666526794434

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00626495061442256
    2. ' =' → logprob: -5.256265163421631
    3. '=line' → logprob: -7.131265163421631
    4. '.strip' → logprob: -9.256264686584473
    5. '_strip' → logprob: -9.381264686584473
    6. 'strip' → logprob: -10.131264686584473
    7. '=str' → logprob: -12.506264686584473
    8. 's' → logprob: -13.256264686584473
    9. '.rstrip' → logprob: -13.256264686584473
    10. 'rstrip' → logprob: -13.631264686584473

Token 622: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01416350994259119
    2. ' line' → logprob: -4.264163494110107
    3. '	line' → logprob: -18.514163970947266
    4. '=line' → logprob: -18.514163970947266
    5. '#line' → logprob: -19.389163970947266
    6. '(line' → logprob: -19.764163970947266
    7. ' ' → logprob: -19.889163970947266
    8. 'Line' → logprob: -20.764163970947266
    9. 'li' → logprob: -21.139163970947266
    10. 'lin' → logprob: -21.639163970947266

Token 623: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04741581901907921
    2. '.rstrip' → logprob: -3.5474157333374023
    3. '.' → logprob: -4.047415733337402
    4. 'strip' → logprob: -10.297415733337402
    5. 'rstrip' → logprob: -12.172415733337402
    6. ' strip' → logprob: -13.547415733337402
    7. ' .' → logprob: -13.672415733337402
    8. '.readline' → logprob: -14.047415733337402
    9. '.trim' → logprob: -15.672415733337402
    10. '[:-' → logprob: -15.922415733337402

Token 624: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43729037046432495
    2. '()' → logprob: -1.6872904300689697
    3. '()
' → logprob: -2.5622904300689697
    4. '<|end|>' → logprob: -3.1872904300689697
    5. '
' → logprob: -3.5622904300689697
    6. ')' → logprob: -4.562290191650391
    7. '<|end|>' → logprob: -5.312290191650391
    8. '           ' → logprob: -6.312290191650391
    9. '        
' → logprob: -6.312290191650391
    10. ')
' → logprob: -7.562290191650391

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007813957636244595
    2. '<|end|>' → logprob: -7.625781536102295
    3. '        
' → logprob: -9.125781059265137
    4. '
' → logprob: -10.000781059265137
    5. 'if' → logprob: -10.625781059265137
    6. ' if' → logprob: -10.750781059265137
    7. '<|end|>' → logprob: -11.125781059265137
    8. '           ' → logprob: -11.250781059265137
    9. '   ' → logprob: -11.250781059265137
    10. ' and' → logprob: -11.500781059265137

Token 626: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004948985762894154
    2. '       ' → logprob: -6.00494909286499
    3. ' if' → logprob: -6.00494909286499
    4. '   ' → logprob: -12.754948616027832
    5. '           ' → logprob: -14.379948616027832
    6. '
' → logprob: -16.00494956970215
    7. '	if' → logprob: -16.62994956970215
    8. 'If' → logprob: -17.00494956970215
    9. 'count' → logprob: -17.62994956970215
    10. ';if' → logprob: -18.12994956970215

Token 627: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14081843197345734
    2. ' not' → logprob: -2.5158183574676514
    3. 'line' → logprob: -3.0158183574676514
    4. ' line' → logprob: -6.5158185958862305
    5. 'no' → logprob: -9.64081859588623
    6. 'n' → logprob: -13.39081859588623
    7. ' no' → logprob: -14.14081859588623
    8. '
' → logprob: -14.51581859588623
    9. ' ' → logprob: -14.51581859588623
    10. '#line' → logprob: -14.76581859588623

Token 628: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003178071230649948
    2. ' line' → logprob: -5.753178119659424
    3. '
' → logprob: -15.753177642822266
    4. '	line' → logprob: -16.128177642822266
    5. '   ' → logprob: -17.253177642822266
    6. ' ' → logprob: -17.378177642822266
    7. 'lin' → logprob: -17.753177642822266
    8. '#line' → logprob: -18.378177642822266
    9. '  ' → logprob: -18.753177642822266
    10. '(line' → logprob: -18.753177642822266

Token 629: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7221028208732605
    2. ' or' → logprob: -0.8471028208732605
    3. ':
' → logprob: -2.4721028804779053
    4. '   ' → logprob: -8.222103118896484
    5. 'or' → logprob: -8.347103118896484
    6. '<|end|>' → logprob: -8.472103118896484
    7. 'and' → logprob: -9.222103118896484
    8. ' and' → logprob: -9.347103118896484
    9. ')' → logprob: -9.722103118896484
    10. ':return' → logprob: -10.097103118896484

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071058208122849464
    2. '       ' → logprob: -5.507105827331543
    3. ':' → logprob: -6.132105827331543
    4. ':
' → logprob: -7.382105827331543
    5. '   ' → logprob: -8.882105827331543
    6. ' or' → logprob: -9.632105827331543
    7. ',' → logprob: -12.132105827331543
    8. 'break' → logprob: -12.632105827331543
    9. '	   ' → logprob: -13.007105827331543
    10. ' and' → logprob: -13.132105827331543

Token 631: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.026601001620292664
    2. ' break' → logprob: -3.9016010761260986
    3. '           ' → logprob: -5.5266008377075195
    4. '       ' → logprob: -6.2766008377075195
    5. '	break' → logprob: -9.02660083770752
    6. 'continue' (adapté à ' continue') → logprob: -10.27660083770752
    7. '   ' → logprob: -11.27660083770752
    8. 'b' → logprob: -11.65160083770752
    9. '               ' → logprob: -13.65160083770752
    10. 'br' → logprob: -13.77660083770752

Token 632: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003421375877223909
    2. '
' → logprob: -8.25034236907959
    3. '<|end|>' → logprob: -10.50034236907959
    4. '        
' → logprob: -10.62534236907959
    5. '   ' → logprob: -10.87534236907959
    6. '  
' → logprob: -13.00034236907959
    7. ',' → logprob: -13.00034236907959
    8. '           ' → logprob: -13.62534236907959
    9. '    
' → logprob: -13.75034236907959
    10. '      ' → logprob: -14.25034236907959

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000616889214143157
    2. '   ' → logprob: -7.500617027282715
    3. '<|end|>' → logprob: -10.250617027282715
    4. '
' → logprob: -11.250617027282715
    5. 'count' → logprob: -12.500617027282715
    6. '           ' → logprob: -12.750617027282715
    7. ' ' → logprob: -13.000617027282715
    8. '```' → logprob: -13.875617027282715
    9. ',' → logprob: -14.250617027282715
    10. '<|end|>' → logprob: -14.375617027282715

Token 634: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6819684505462646
    2. '       ' → logprob: -1.4319684505462646
    3. 'input' (adapté à ' input') → logprob: -2.0569684505462646
    4. '   ' → logprob: -2.9319684505462646
    5. 'if' → logprob: -3.4319684505462646
    6. 'count' → logprob: -4.306968688964844
    7. ' input' → logprob: -4.431968688964844
    8. ' n' → logprob: -4.681968688964844
    9. ' if' → logprob: -5.056968688964844
    10. ' count' → logprob: -7.181968688964844

Token 635: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.2603901015827432e-05
    2. '_' → logprob: -11.125022888183594
    3. '_line' → logprob: -12.875022888183594
    4. 'Lines' → logprob: -13.625022888183594
    5. '_numbers' → logprob: -14.375022888183594
    6. '	lines' → logprob: -14.500022888183594
    7. '_LINES' → logprob: -14.625022888183594
    8. 'lines' → logprob: -15.000022888183594
    9. '_tokens' → logprob: -15.125022888183594
    10. '   ' → logprob: -15.375022888183594

Token 636: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020449401927180588
    2. '.' → logprob: -8.625204086303711
    3. 'append' → logprob: -11.125204086303711
    4. '+=' → logprob: -12.000204086303711
    5. '.app' → logprob: -13.250204086303711
    6. ' .' → logprob: -13.625204086303711
    7. ' +=' → logprob: -14.125204086303711
    8. ' append' → logprob: -16.25020408630371
    9. '.ap' → logprob: -16.50020408630371
    10. '.Append' → logprob: -16.62520408630371

Token 637: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0021317063365131617
    2. '(line' → logprob: -6.252131938934326
    3. ' line' → logprob: -8.502131462097168
    4. 'int' → logprob: -16.877132415771484
    5. '	line' → logprob: -17.377132415771484
    6. '=line' → logprob: -17.377132415771484
    7. '[line' → logprob: -18.127132415771484
    8. '   ' → logprob: -18.502132415771484
    9. '#line' → logprob: -18.502132415771484
    10. ',line' → logprob: -20.127132415771484

Token 638: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003867896506562829
    2. ')' → logprob: -6.628868103027344
    3. ')
' → logprob: -6.628868103027344
    4. '<|end|>' → logprob: -6.878868103027344
    5. '   ' → logprob: -9.753868103027344
    6. '<|end|>' → logprob: -9.878868103027344
    7. '
' → logprob: -10.628868103027344
    8. ',' → logprob: -10.878868103027344
    9. '        
' → logprob: -11.628868103027344
    10. '           ' → logprob: -12.128868103027344

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004319804720580578
    2. '   ' → logprob: -7.750432014465332
    3. '           ' → logprob: -14.625432014465332
    4. 'count' → logprob: -15.250432014465332
    5. '      ' → logprob: -16.000431060791016
    6. '
' → logprob: -16.375431060791016
    7. ',' → logprob: -16.500431060791016
    8. '     ' → logprob: -17.000431060791016
    9. '	   ' → logprob: -17.000431060791016
    10. '```' → logprob: -17.000431060791016

Token 640: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.39183011651039124
    2. '       ' → logprob: -1.1418300867080688
    3. '   ' → logprob: -5.891829967498779
    4. ' count' → logprob: -6.266829967498779
    5. 'if' → logprob: -8.266830444335938
    6. ' if' → logprob: -10.516830444335938
    7. '	count' → logprob: -13.641830444335938
    8. '    ' → logprob: -14.766830444335938
    9. ' ' → logprob: -15.391830444335938
    10. '
' → logprob: -15.641830444335938

Token 641: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31946229934692383
    2. ' +=' → logprob: -1.3194622993469238
    3. '>=' → logprob: -5.194462299346924
    4. '==' → logprob: -7.819462299346924
    5. ' >=' → logprob: -8.819461822509766
    6. '>' → logprob: -10.319461822509766
    7. ' ==' → logprob: -11.194461822509766
    8. '   ' → logprob: -11.444461822509766
    9. '=' → logprob: -11.569461822509766
    10. '+' → logprob: -11.944461822509766

Token 642: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -19.37548828125
    4. '<|end|>' → logprob: -19.37548828125
    5. '```' → logprob: -21.00048828125
    6. '  ' → logprob: -21.31298828125
    7. '۱' → logprob: -21.43798828125
    8. '100' → logprob: -21.56298828125
    9. '１' → logprob: -21.75048828125
    10. ' ' → logprob: -22.06298828125

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.25000762939453
    4. '<|end|>' → logprob: -18.37500762939453
    5. '100' → logprob: -18.87500762939453
    6. '```' → logprob: -19.06250762939453
    7. '۱' → logprob: -19.87500762939453
    8. '  ' → logprob: -19.87500762939453
    9. '１' → logprob: -20.18750762939453
    10. '10' → logprob: -20.75000762939453

Token 644: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003550079127307981
    2. '   ' → logprob: -8.000354766845703
    3. '           ' → logprob: -12.125354766845703
    4. '<|end|>' → logprob: -12.125354766845703
    5. '
' → logprob: -12.750354766845703
    6. ' if' → logprob: -13.250354766845703
    7. 'if' → logprob: -14.000354766845703
    8. '<|end|>' → logprob: -14.250354766845703
    9. ',' → logprob: -14.625354766845703
    10. '	   ' → logprob: -14.875354766845703

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009782649576663971
    2. '   ' → logprob: -4.634782791137695
    3. '           ' → logprob: -11.259782791137695
    4. ' if' → logprob: -12.259782791137695
    5. 'if' → logprob: -12.759782791137695
    6. '<|end|>' → logprob: -13.009782791137695
    7. '	   ' → logprob: -13.884782791137695
    8. '
' → logprob: -14.509782791137695
    9. ' ' → logprob: -14.634782791137695
    10. '```' → logprob: -14.759782791137695

Token 646: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18568450212478638
    2. '       ' → logprob: -1.9356844425201416
    3. ' if' → logprob: -3.6856844425201416
    4. '   ' → logprob: -9.810684204101562
    5. '	if' → logprob: -13.310684204101562
    6. '           ' → logprob: -14.185684204101562
    7. '
' → logprob: -14.185684204101562
    8. 'If' → logprob: -14.560684204101562
    9. ' ' → logprob: -15.185684204101562
    10. '    ' → logprob: -17.060684204101562

Token 647: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006715370807796717
    2. ' count' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.006715774536133
    4. ' ' → logprob: -18.256715774536133
    5. '	count' → logprob: -18.256715774536133
    6. '(count' → logprob: -20.256715774536133
    7. '<count' → logprob: -20.256715774536133
    8. 'len' → logprob: -20.506715774536133
    9. '  ' → logprob: -20.631715774536133
    10. '$count' → logprob: -20.756715774536133

Token 648: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.718061089515686
    2. '==' → logprob: -1.468061089515686
    3. ' ==' → logprob: -1.843061089515686
    4. ' >=' → logprob: -2.0930609703063965
    5. '>' → logprob: -8.343061447143555
    6. '=' → logprob: -11.468061447143555
    7. ' >' → logprob: -11.718061447143555
    8. '<|end|>' → logprob: -11.968061447143555
    9. '≥' → logprob: -12.093061447143555
    10. ')>=' → logprob: -12.093061447143555

Token 649: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5095040202140808
    2. '100' → logprob: -1.0095040798187256
    3. '20' → logprob: -4.3845038414001465
    4. '50' → logprob: -4.7595038414001465
    5. '5' → logprob: -5.0095038414001465
    6. '200' → logprob: -6.2595038414001465
    7. '500' → logprob: -6.6345038414001465
    8. '600' → logprob: -7.1345038414001465
    9. '30' → logprob: -7.3845038414001465
    10. '25' → logprob: -8.009504318237305

Token 650: '50' (ID: 1434)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5058642625808716
    2. '100' → logprob: -1.0058642625808716
    3. '20' → logprob: -4.630864143371582
    4. '5' → logprob: -5.005864143371582
    5. '50' → logprob: -5.130864143371582
    6. '200' → logprob: -6.255864143371582
    7. '500' → logprob: -6.255864143371582
    8. '600' → logprob: -6.880864143371582
    9. '30' → logprob: -7.130864143371582
    10. '3' → logprob: -7.630864143371582

Token 651: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6055406332015991
    2. '           ' → logprob: -1.2305406332015991
    3. ':' → logprob: -2.1055407524108887
    4. '       ' → logprob: -3.2305407524108887
    5. '   ' → logprob: -7.355540752410889
    6. ',' → logprob: -10.35554027557373
    7. ' or' → logprob: -10.98054027557373
    8. '0' → logprob: -11.23054027557373
    9. '               ' → logprob: -11.23054027557373
    10. '          ' → logprob: -11.48054027557373

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2007883671903983e-05
    2. '       ' → logprob: -11.000021934509277
    3. '               ' → logprob: -13.125021934509277
    4. 'break' → logprob: -13.375021934509277
    5. ' break' → logprob: -14.000021934509277
    6. '   ' → logprob: -15.250021934509277
    7. '		' → logprob: -15.375021934509277
    8. '          ' → logprob: -15.625021934509277
    9. '	       ' → logprob: -16.750022888183594
    10. '
' → logprob: -17.625022888183594

Token 653: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.11326084285974503
    2. ' break' → logprob: -2.3632607460021973
    3. '           ' → logprob: -4.363260746002197
    4. '       ' → logprob: -8.613261222839355
    5. '	break' → logprob: -10.238261222839355
    6. '   ' → logprob: -11.363261222839355
    7. '               ' → logprob: -13.113261222839355
    8. '```' → logprob: -14.488261222839355
    9. '_break' → logprob: -14.613261222839355
    10. 'Break' → logprob: -15.738261222839355

Token 654: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030415616929531097
    2. '
' → logprob: -3.6554155349731445
    3. '    
' → logprob: -5.5304155349731445
    4. 'results' → logprob: -10.030415534973145
    5. '        
' → logprob: -10.905415534973145
    6. ' results' → logprob: -10.905415534973145
    7. 'output' → logprob: -11.405415534973145
    8. 'result' → logprob: -11.530415534973145
    9. '  
' → logprob: -11.530415534973145
    10. 'input' → logprob: -11.905415534973145

Token 655: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5813403129577637
    2. '   ' → logprob: -1.5813403129577637
    3. ' results' → logprob: -1.5813403129577637
    4. 'output' → logprob: -4.081340312957764
    5. 'outputs' → logprob: -4.706340312957764
    6. ' output' → logprob: -5.956340312957764
    7. ' outputs' → logprob: -7.331340312957764
    8. '
' → logprob: -9.206340789794922
    9. '    
' → logprob: -9.581340789794922
    10. 'result' → logprob: -10.081340789794922

Token 656: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.022736480459570885
    2. 'outputs' → logprob: -4.522736549377441
    3. 'output' → logprob: -4.772736549377441
    4. ' results' → logprob: -5.772736549377441
    5. ' outputs' → logprob: -10.522736549377441
    6. ' output' → logprob: -10.772736549377441
    7. 'result' → logprob: -12.772736549377441
    8. '   ' → logprob: -13.772736549377441
    9. 'answers' → logprob: -15.397736549377441
    10. 'for' → logprob: -16.647735595703125

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. '.extend' → logprob: -14.404751777648926
    4. '   ' → logprob: -16.02975082397461
    5. ' +=' → logprob: -16.90475082397461
    6. '.append' → logprob: -17.02975082397461
    7. ' =
' → logprob: -17.02975082397461
    8. '=result' → logprob: -17.15475082397461
    9. '    ' → logprob: -17.77975082397461
    10. '	' → logprob: -17.90475082397461

Token 658: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.5759396553039551
    2. ' handler' → logprob: -0.8259396553039551
    3. '	handler' → logprob: -15.325939178466797
    4. '(handler' → logprob: -18.325939178466797
    5. '   ' → logprob: -18.700939178466797
    6. 'Handler' → logprob: -19.575939178466797
    7. '.handler' → logprob: -21.075939178466797
    8. '_handler' → logprob: -21.450939178466797
    9. 'handle' → logprob: -22.075939178466797
    10. 'handlers' → logprob: -23.325939178466797

Token 659: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.250004768371582
    3. 'process' → logprob: -16.8750057220459
    4. ' .' → logprob: -18.3750057220459
    5. '.perform' → logprob: -20.2500057220459
    6. '	process' → logprob: -20.6250057220459
    7. '.pro' → logprob: -20.7500057220459
    8. ' process' → logprob: -21.0000057220459
    9. '.Process' → logprob: -21.0000057220459
    10. '.
' → logprob: -22.0000057220459

Token 660: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.750000953674316
    3. '_results' → logprob: -15.625000953674316
    4. '(lines' → logprob: -17.25
    5. '(_' → logprob: -17.75
    6. '_line' → logprob: -18.125
    7. ' _' → logprob: -18.25
    8. '```' → logprob: -18.875
    9. 's' → logprob: -19.375
    10. '_rows' → logprob: -19.625

Token 661: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. '(inputs' → logprob: -16.75
    4. '(lines' → logprob: -17.0
    5. ' (' → logprob: -17.375
    6. '(
' → logprob: -17.5
    7. 'input' → logprob: -17.875
    8. '(output' → logprob: -18.125
    9. ',input' → logprob: -19.25
    10. '(inp' → logprob: -19.375

Token 662: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. '(lines' → logprob: -19.125
    3. '_' → logprob: -19.625
    4. 'lines' → logprob: -19.75
    5. '_LINES' → logprob: -19.75
    6. 'Lines' → logprob: -20.375
    7. '```' → logprob: -20.875
    8. 's' → logprob: -21.0
    9. '_strings' → logprob: -21.0
    10. ')' → logprob: -21.125

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17575892806053162
    2. ')
' → logprob: -1.925758957862854
    3. '   ' → logprob: -4.1757588386535645
    4. ')
' → logprob: -11.300759315490723
    5. '()
' → logprob: -11.800759315490723
    6. '
' → logprob: -11.925759315490723
    7. '()' → logprob: -12.175759315490723
    8. '<|end|>' → logprob: -12.300759315490723
    9. ' ' → logprob: -12.425759315490723
    10. '    
' → logprob: -13.425759315490723

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015105740167200565
    2. 'for' → logprob: -6.5015106201171875
    3. '
' → logprob: -12.126510620117188
    4. ' for' → logprob: -12.876510620117188
    5. '    
' → logprob: -16.001510620117188
    6. '	for' → logprob: -16.626510620117188
    7. '```' → logprob: -17.501510620117188
    8. '       ' → logprob: -17.751510620117188
    9. 'print' → logprob: -17.876510620117188
    10. '
' → logprob: -18.876510620117188

Token 665: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31363263726234436
    2. '   ' → logprob: -1.313632607460022
    3. ' for' → logprob: -8.06363296508789
    4. '
' → logprob: -9.81363296508789
    5. '    
' → logprob: -14.43863296508789
    6. '	for' → logprob: -14.56363296508789
    7. '```' → logprob: -15.18863296508789
    8. 'print' → logprob: -16.81363296508789
    9. 'import' → logprob: -16.93863296508789
    10. '       ' → logprob: -17.68863296508789

Token 666: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.25226297974586487
    2. 'result' → logprob: -1.5022629499435425
    3. ' res' → logprob: -8.252263069152832
    4. 'r' → logprob: -9.752263069152832
    5. ' result' → logprob: -11.252263069152832
    6. 'line' → logprob: -13.502263069152832
    7. 'output' → logprob: -14.252263069152832
    8. ' r' → logprob: -17.752262115478516
    9. 'out' → logprob: -18.627262115478516
    10. '   ' → logprob: -19.127262115478516

Token 667: ' in' (ID: 306)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0019349466310814023
    2. ' in' → logprob: -6.251935005187988
    3. 'e' → logprob: -12.876935005187988
    4. 'esu' → logprob: -13.626935005187988
    5. ' es' → logprob: -13.876935005187988
    6. 'ef' → logprob: -13.876935005187988
    7. 'in' → logprob: -15.376935005187988
    8. 'el' → logprob: -16.376934051513672
    9. 'esp' → logprob: -16.626934051513672
    10. 'eturn' → logprob: -17.126934051513672

Token 668: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -4.5491004129871726e-05
    2. ' results' → logprob: -10.000045776367188
    3. '	results' → logprob: -22.000045776367188
    4. 'result' → logprob: -22.250045776367188
    5. '(results' → logprob: -22.250045776367188
    6. '
' → logprob: -22.750045776367188
    7. '.results' → logprob: -23.625045776367188
    8. '   ' → logprob: -24.250045776367188
    9. 'Results' → logprob: -25.125045776367188
    10. '_results' → logprob: -25.500045776367188

Token 669: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47514212131500244
    2. '       ' → logprob: -1.1001421213150024
    3. ':
' → logprob: -3.850142002105713
    4. 'print' → logprob: -4.600142002105713
    5. '   ' → logprob: -5.475142002105713
    6. '.' → logprob: -5.850142002105713
    7. ',' → logprob: -6.600142002105713
    8. '<|end|>' → logprob: -6.600142002105713
    9. '.print' → logprob: -6.850142002105713
    10. '.println' → logprob: -7.100142002105713

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032149034086614847
    2. 'print' → logprob: -5.7532148361206055
    3. ' print' → logprob: -10.253214836120605
    4. '   ' → logprob: -13.628214836120605
    5. '```' → logprob: -15.503214836120605
    6. '	print' → logprob: -15.878214836120605
    7. '           ' → logprob: -16.003215789794922
    8. '
' → logprob: -16.253215789794922
    9. '(print' → logprob: -16.753215789794922
    10. '.print' → logprob: -16.878215789794922

Token 671: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.2200749754119897e-06
    2. ' print' → logprob: -13.250001907348633
    3. '       ' → logprob: -15.500001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '	print' → logprob: -20.000001907348633
    6. '```' → logprob: -22.000001907348633
    7. '
' → logprob: -23.125001907348633
    8. 'pr' → logprob: -23.250001907348633
    9. '           ' → logprob: -23.750001907348633
    10. 'println' → logprob: -24.250001907348633

Token 672: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 'r' → logprob: -15.750001907348633
    4. '(f' → logprob: -16.500001907348633
    5. '(
' → logprob: -17.250001907348633
    6. ' r' → logprob: -20.875001907348633
    7. '	r' → logprob: -21.375001907348633
    8. '(re' → logprob: -21.875001907348633
    9. '()' → logprob: -22.125001907348633
    10. '[r' → logprob: -23.000001907348633

Token 673: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.750000953674316
    3. '())' → logprob: -16.375
    4. '()' → logprob: -16.875
    5. '   ' → logprob: -17.375
    6. ' )' → logprob: -17.625
    7. ')`' → logprob: -18.5
    8. '),' → logprob: -18.75
    9. '<|end|>' → logprob: -18.75
    10. ')}' → logprob: -18.875

Token 674: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.000000953674316
    3. ' if' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -18.500001907348633
    5. '#' → logprob: -18.625001907348633
    6. '
' → logprob: -19.000001907348633
    7. '@if' → logprob: -19.125001907348633
    8. '	if' → logprob: -20.000001907348633
    9. '#if' → logprob: -20.125001907348633
    10. 'If' → logprob: -20.750001907348633

Token 675: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3489214777946472
    2. ' __' → logprob: -1.223921537399292
    3. '_' → logprob: -8.348921775817871
    4. 'name' → logprob: -9.473921775817871
    5. '___' → logprob: -9.473921775817871
    6. '_name' → logprob: -9.473921775817871
    7. ' ' → logprob: -12.848921775817871
    8. '____' → logprob: -12.848921775817871
    9. ' ' → logprob: -14.098921775817871
    10. 'Name' → logprob: -14.723921775817871

Token 676: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06897557526826859
    2. '==' → logprob: -2.8189756870269775
    3. ' ==' → logprob: -5.193975448608398
    4. '=="' → logprob: -6.818975448608398
    5. '=='' → logprob: -9.193975448608398
    6. '__.__' → logprob: -9.318975448608398
    7. '[' → logprob: -10.068975448608398
    8. 'name' → logprob: -10.318975448608398
    9. '.__' → logprob: -10.318975448608398
    10. ' __' → logprob: -11.443975448608398

Token 677: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.128163257315464e-07
    2. '__.__' → logprob: -16.375
    3. '__
' → logprob: -16.625
    4. '____' → logprob: -17.75
    5. '==' → logprob: -18.625
    6. '___' → logprob: -18.625
    7. '__.' → logprob: -19.25
    8. '__["' → logprob: -20.0
    9. '__

' → logprob: -20.125
    10. '__
' → logprob: -20.5

Token 678: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16096532344818115
    2. '==' → logprob: -2.1609654426574707
    3. ' ==' → logprob: -3.4109654426574707
    4. '=="' → logprob: -7.910965442657471
    5. '=='' → logprob: -10.410964965820312
    6. '=' → logprob: -10.660964965820312
    7. '==
' → logprob: -11.285964965820312
    8. '_' → logprob: -11.785964965820312
    9. '__.__' → logprob: -12.660964965820312
    10. '___' → logprob: -12.660964965820312

Token 679: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001513196504674852
    2. ''' → logprob: -6.5015130043029785
    3. '__' → logprob: -11.751513481140137
    4. ' "__' → logprob: -12.876513481140137
    5. '"name' → logprob: -16.00151252746582
    6. '"user' → logprob: -16.25151252746582
    7. '"class' → logprob: -17.37651252746582
    8. '("__' → logprob: -18.12651252746582
    9. '"is' → logprob: -18.37651252746582
    10. '"type' → logprob: -18.62651252746582

Token 680: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008665391243994236
    2. '__' → logprob: -4.758665561676025
    3. '"' → logprob: -10.508665084838867
    4. 'name' → logprob: -10.758665084838867
    5. ''' → logprob: -14.008665084838867
    6. '_main' → logprob: -14.758665084838867
    7. 'built' → logprob: -15.008665084838867
    8. ' main' → logprob: -15.633665084838867
    9. '___' → logprob: -16.508665084838867
    10. ' "__' → logprob: -16.758665084838867

Token 681: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.13061679899692535
    2. '__' → logprob: -2.1306169033050537
    3. '__':
' → logprob: -5.630616664886475
    4. '__
' → logprob: -10.005617141723633
    5. '__:' → logprob: -10.630617141723633
    6. '__.' → logprob: -12.255617141723633
    7. '__
' → logprob: -12.380617141723633
    8. '__["' → logprob: -12.630617141723633
    9. '__.__' → logprob: -13.255617141723633
    10. '==' → logprob: -13.255617141723633

Token 682: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2125728875398636
    2. '"' → logprob: -2.0875728130340576
    3. 'main' → logprob: -2.7125728130340576
    4. ''' → logprob: -7.087573051452637
    5. '__":
' → logprob: -8.587573051452637
    6. '   ' → logprob: -9.962573051452637
    7. ' "__' → logprob: -10.837573051452637
    8. '____' → logprob: -11.087573051452637
    9. '_main' → logprob: -11.712573051452637
    10. '__':
' → logprob: -11.837573051452637

Token 683: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -22.0
    4. '   ' → logprob: -22.875
    5. 'import' → logprob: -24.0
    6. '.main' → logprob: -25.75
    7. '(main' → logprob: -27.125
    8. '_main' → logprob: -27.25
    9. '
' → logprob: -29.75
    10. '```' → logprob: -29.875

Token 684: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 682
Tokens correctement prédits (1ère position, stricte): 348
Tokens correctement prédits (1ère position, avec adaptation): 389
Tokens correctement prédits (top 10): 631
Précision stricte (1ère position): 51.03%
Précision adaptée (1ère position): 57.04%
Précision (top 10): 92.52%
================================================================================
