================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,A,B,C,D=map(int,input().split())
x=((N+A-1)//A)*B
y=((N+C-1)//C)*D
print(min(x,y))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',A' (ID: 59196)
  → Token d'amorce (pas de prédiction)

Token 2: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 3: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016020996496081352
    2. ',' → logprob: -4.766020774841309
    3. ' =' → logprob: -5.016020774841309
    4. '```' → logprob: -8.141020774841309
    5. '[' → logprob: -9.266020774841309
    6. '=A' → logprob: -9.391020774841309
    7. ';' → logprob: -9.516020774841309
    8. '.' → logprob: -9.641020774841309
    9. ')' → logprob: -10.266020774841309
    10. ':' → logprob: -11.266020774841309

Token 4: ',D' (ID: 61507)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007946579717099667
    2. ',' → logprob: -5.507946491241455
    3. ' =' → logprob: -5.757946491241455
    4. ';' → logprob: -8.132946968078613
    5. '```' → logprob: -8.882946968078613
    6. '.' → logprob: -9.257946968078613
    7. '[' → logprob: -9.507946968078613
    8. ':' → logprob: -10.757946968078613
    9. '(' → logprob: -11.007946968078613
    10. ')' → logprob: -11.382946968078613

Token 5: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03896808996796608
    2. ' =' → logprob: -4.038968086242676
    3. ',' → logprob: -4.163968086242676
    4. ';' → logprob: -6.413968086242676
    5. '[' → logprob: -7.163968086242676
    6. '```' → logprob: -7.288968086242676
    7. '.' → logprob: -7.413968086242676
    8. ')' → logprob: -7.538968086242676
    9. '(' → logprob: -7.913968086242676
    10. ':' → logprob: -8.413968086242676

Token 6: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2326248586177826
    2. '[' → logprob: -2.9826247692108154
    3. '5' → logprob: -2.9826247692108154
    4. '1' → logprob: -3.3576247692108154
    5. '10' → logprob: -3.4826247692108154
    6. ' ' → logprob: -4.2326250076293945
    7. 'range' → logprob: -4.6076250076293945
    8. 'map' → logprob: -5.6076250076293945
    9. ' [' → logprob: -5.8576250076293945
    10. '[]' → logprob: -5.8576250076293945

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03690655529499054
    2. '(lambda' → logprob: -3.4119064807891846
    3. '(int' → logprob: -6.286906719207764
    4. '<|end|>' → logprob: -7.411906719207764
    5. '```' → logprob: -8.161906242370605
    6. '(str' → logprob: -9.286906242370605
    7. '(input' → logprob: -9.911906242370605
    8. ')' → logprob: -10.036906242370605
    9. '(eval' → logprob: -10.286906242370605
    10. '(
' → logprob: -10.411906242370605

Token 8: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7149783372879028
    2. '(' → logprob: -1.0899783372879028
    3. '<|end|>' → logprob: -2.4649782180786133
    4. '(input' → logprob: -2.7149782180786133
    5. '(user' → logprob: -5.464978218078613
    6. '<|end|>' → logprob: -6.089978218078613
    7. '(int' → logprob: -6.714978218078613
    8. ')(' → logprob: -6.839978218078613
    9. '(token' → logprob: -7.214978218078613
    10. '```' → logprob: -7.339978218078613

Token 9: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6239373683929443
    2. '())' → logprob: -1.3739373683929443
    3. '()' → logprob: -3.1239373683929443
    4. '(' → logprob: -3.1239373683929443
    5. '<|end|>' → logprob: -3.4989373683929443
    6. '(""))' → logprob: -3.9989373683929443
    7. '('' → logprob: -4.373937606811523
    8. '(token' → logprob: -4.748937606811523
    9. '`()' → logprob: -5.123937606811523
    10. '(()' → logprob: -5.248937606811523

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013417120499070734
    2. 'strip' → logprob: -9.625134468078613
    3. 'rstrip' → logprob: -10.375134468078613
    4. ')' → logprob: -11.000134468078613
    5. '(split' → logprob: -11.750134468078613
    6. ' split' → logprob: -11.750134468078613
    7. 'read' → logprob: -12.875134468078613
    8. '```' → logprob: -14.375134468078613
    9. 'spl' → logprob: -15.000134468078613
    10. 'startswith' → logprob: -15.125134468078613

Token 11: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01204380951821804
    2. '())' → logprob: -5.0120439529418945
    3. '))' → logprob: -5.6370439529418945
    4. '`)' → logprob: -6.6370439529418945
    5. '()' → logprob: -9.512043952941895
    6. '(' → logprob: -9.637043952941895
    7. ')`' → logprob: -10.012043952941895
    8. '')' → logprob: -10.012043952941895
    9. '```' → logprob: -10.012043952941895
    10. '>)' → logprob: -11.387043952941895

Token 12: 'x' (ID: 87)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3696378171443939
    2. 'if' → logprob: -1.8696378469467163
    3. 'i' → logprob: -3.7446377277374268
    4. '
' → logprob: -4.244637966156006
    5. ':' → logprob: -4.369637966156006
    6. ' ' → logprob: -4.494637966156006
    7. '*' → logprob: -4.494637966156006
    8. ')' → logprob: -4.619637966156006
    9. ',' → logprob: -4.619637966156006
    10. 'a' → logprob: -5.119637966156006

Token 13: '=((' (ID: 150348)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1060129776597023
    2. '_' → logprob: -2.981013059616089
    3. '=' → logprob: -3.606013059616089
    4. '+' → logprob: -4.48101282119751
    5. ' =' → logprob: -5.98101282119751
    6. '**' → logprob: -6.10601282119751
    7. ',' → logprob: -6.23101282119751
    8. ')' → logprob: -7.35601282119751
    9. '*' → logprob: -7.35601282119751
    10. '.' → logprob: -7.48101282119751

Token 14: 'N' (ID: 45)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2595252990722656
    2. 'N' → logprob: -1.5095252990722656
    3. 'B' → logprob: -5.509525299072266
    4. 'C' → logprob: -7.259525299072266
    5. '(A' → logprob: -7.509525299072266
    6. '(' → logprob: -7.884525299072266
    7. 'x' → logprob: -8.134525299072266
    8. 'D' → logprob: -8.134525299072266
    9. '(N' → logprob: -8.134525299072266
    10. '((' → logprob: -8.384525299072266

Token 15: '+A' (ID: 195068)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.946785032749176
    2. '+' → logprob: -1.4467849731445312
    3. '*' → logprob: -2.0717849731445312
    4. '-A' → logprob: -2.0717849731445312
    5. '*A' → logprob: -3.6967849731445312
    6. '+A' → logprob: -3.8217849731445312
    7. ' -' → logprob: -4.196784973144531
    8. '%' → logprob: -4.446784973144531
    9. '-x' → logprob: -4.946784973144531
    10. '//' → logprob: -4.946784973144531

Token 16: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6868224740028381
    2. ')*' → logprob: -1.5618224143981934
    3. ')**' → logprob: -2.8118224143981934
    4. ')//' → logprob: -3.1868224143981934
    5. ')*(' → logprob: -3.1868224143981934
    6. ')/(' → logprob: -3.6868224143981934
    7. ')/' → logprob: -3.6868224143981934
    8. ')%' → logprob: -3.9368224143981934
    9. ')-(' → logprob: -4.061822414398193
    10. '-B' → logprob: -4.311822414398193

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016604241682216525
    2. ' ' → logprob: -6.501660346984863
    3. '2' → logprob: -9.126660346984863
    4. 'B' → logprob: -10.251660346984863
    5. '-' → logprob: -11.876660346984863
    6. ' B' → logprob: -12.501660346984863
    7. ')' → logprob: -13.751660346984863
    8. '3' → logprob: -15.064160346984863
    9. 'x' → logprob: -15.064160346984863
    10. 'C' → logprob: -15.689160346984863

Token 18: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.001933397026732564
    2. ')' → logprob: -6.376933574676514
    3. ' )' → logprob: -8.376933097839355
    4. ')/' → logprob: -14.376933097839355
    5. '//' → logprob: -15.001933097839355
    6. ')#' → logprob: -16.001934051513672
    7. ')>>' → logprob: -17.251934051513672
    8. '))' → logprob: -17.751934051513672
    9. ' //' → logprob: -18.001934051513672
    10. ')
' → logprob: -18.376934051513672

Token 19: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.28416016697883606
    2. 'A' → logprob: -1.4091601371765137
    3. ' B' → logprob: -6.784160137176514
    4. 'D' → logprob: -7.284160137176514
    5. ' A' → logprob: -7.659160137176514
    6. 'C' → logprob: -7.784160137176514
    7. 'N' → logprob: -8.159160614013672
    8. 'x' → logprob: -12.034160614013672
    9. ' ' → logprob: -12.409160614013672
    10. ' D' → logprob: -14.034160614013672

Token 20: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.25715428590774536
    2. ')' → logprob: -1.5071542263031006
    3. '*' → logprob: -5.38215446472168
    4. ')*(' → logprob: -7.75715446472168
    5. '*)' → logprob: -10.13215446472168
    6. ',' → logprob: -10.63215446472168
    7. ')+' → logprob: -10.88215446472168
    8. '+' → logprob: -10.88215446472168
    9. ' )' → logprob: -11.13215446472168
    10. ')**' → logprob: -11.50715446472168

Token 21: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004689407534897327
    2. ' B' → logprob: -5.7546892166137695
    3. 'C' → logprob: -6.6296892166137695
    4. '((' → logprob: -9.25468921661377
    5. 'A' → logprob: -9.75468921661377
    6. ' ((' → logprob: -11.50468921661377
    7. 'D' → logprob: -12.00468921661377
    8. ' C' → logprob: -12.12968921661377
    9. ' ' → logprob: -12.62968921661377
    10. 'x' → logprob: -13.00468921661377

Token 22: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.051041487604379654
    2. '-' → logprob: -4.176041603088379
    3. '+C' → logprob: -4.176041603088379
    4. '<|end|>' → logprob: -4.676041603088379
    5. ' +' → logprob: -5.176041603088379
    6. ' ' → logprob: -6.801041603088379
    7. '*' → logprob: -7.176041603088379
    8. '+x' → logprob: -7.426041603088379
    9. ' -' → logprob: -7.801041603088379
    10. ')' → logprob: -8.676041603088379

Token 23: 'y' (ID: 88)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25441017746925354
    2. '+C' → logprob: -1.7544101476669312
    3. '-' → logprob: -3.5044102668762207
    4. ' +' → logprob: -5.129410266876221
    5. 'x' → logprob: -5.504410266876221
    6. '-C' → logprob: -5.754410266876221
    7. '((' → logprob: -6.254410266876221
    8. '+x' → logprob: -6.379410266876221
    9. '+(' → logprob: -6.504410266876221
    10. ' -' → logprob: -7.504410266876221

Token 24: '=((' (ID: 150348)
  Prédit: '=(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=((' → logprob: -0.07059182226657867
    2. '=' → logprob: -2.695591926574707
    3. ' =' → logprob: -8.070591926574707
    4. '=*' → logprob: -8.695591926574707
    5. '=(' → logprob: -9.570591926574707
    6. '*=' → logprob: -10.445591926574707
    7. '=?' → logprob: -11.195591926574707
    8. '=y' → logprob: -11.695591926574707
    9. '=x' → logprob: -11.820591926574707
    10. '=}' → logprob: -12.320591926574707

Token 25: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006853904575109482
    2. '(N' → logprob: -5.006854057312012
    3. 'C' → logprob: -9.506854057312012
    4. ' N' → logprob: -10.506854057312012
    5. '(C' → logprob: -11.631854057312012
    6. 'D' → logprob: -11.631854057312012
    7. '(' → logprob: -12.006854057312012
    8. 'M' → logprob: -12.631854057312012
    9. '((' → logprob: -13.506854057312012
    10. 'x' → logprob: -13.506854057312012

Token 26: '+C' (ID: 163271)
  Prédit: '+B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+B' → logprob: -0.658883810043335
    2. '+' → logprob: -1.283883810043335
    3. '+C' → logprob: -1.658883810043335
    4. '+D' → logprob: -4.283884048461914
    5. '+A' → logprob: -7.408884048461914
    6. '+
' → logprob: -7.783884048461914
    7. ' +' → logprob: -8.408884048461914
    8. '+

' → logprob: -8.783884048461914
    9. '+</' → logprob: -10.658884048461914
    10. '+)' → logprob: -11.658884048461914

Token 27: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9623810658231378e-05
    2. ' -' → logprob: -10.875020027160645
    3. '<|end|>' → logprob: -14.500020027160645
    4. '−' → logprob: -17.125019073486328
    5. '–' → logprob: -17.500019073486328
    6. ')' → logprob: -17.500019073486328
    7. '-)' → logprob: -17.625019073486328
    8. '<|end|>' → logprob: -18.625019073486328
    9. ')-' → logprob: -18.750019073486328
    10. ' ' → logprob: -18.875019073486328

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006939699524082243
    2. '-' → logprob: -7.3756937980651855
    3. ' ' → logprob: -9.875694274902344
    4. '<|end|>' → logprob: -11.375694274902344
    5. '<|end|>' → logprob: -13.375694274902344
    6. ')' → logprob: -13.625694274902344
    7. ' y' → logprob: -14.750694274902344
    8. 'y' → logprob: -15.125694274902344
    9. '...' → logprob: -15.500694274902344
    10. '```' → logprob: -15.750694274902344

Token 29: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0008577430271543562
    2. ')' → logprob: -7.125857830047607
    3. '//' → logprob: -9.87585735321045
    4. ')#' → logprob: -14.25085735321045
    5. ' )' → logprob: -14.75085735321045
    6. '}//' → logprob: -15.50085735321045
    7. '){//' → logprob: -15.75085735321045
    8. ' ' → logprob: -15.87585735321045
    9. '">//' → logprob: -16.500858306884766
    10. '>//' → logprob: -16.750858306884766

Token 30: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.20734242349863e-05
    2. '<|end|>' → logprob: -9.875072479248047
    3. ' C' → logprob: -11.125072479248047
    4. 'D' → logprob: -12.250072479248047
    5. ')' → logprob: -14.250072479248047
    6. '<|end|>' → logprob: -16.000072479248047
    7. '>C' → logprob: -16.250072479248047
    8. ' ' → logprob: -16.625072479248047
    9. '*C' → logprob: -17.500072479248047
    10. '```' → logprob: -17.625072479248047

Token 31: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.0015100972959771752
    2. '*' → logprob: -6.751510143280029
    3. '*)' → logprob: -8.626509666442871
    4. ')' → logprob: -8.751509666442871
    5. ')**' → logprob: -14.376509666442871
    6. '```' → logprob: -15.001509666442871
    7. '）' → logprob: -15.126509666442871
    8. ')*(' → logprob: -15.251509666442871
    9. ']*' → logprob: -15.751509666442871
    10. '`)' → logprob: -16.001510620117188

Token 32: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.7432603272027336e-06
    2. ' D' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -16.000001907348633
    4. '>D' → logprob: -17.750001907348633
    5. '	D' → logprob: -18.000001907348633
    6. '```' → logprob: -19.000001907348633
    7. '%D' → logprob: -19.250001907348633
    8. ''D' → logprob: -19.375001907348633
    9. '`' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.875001907348633

Token 33: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5114141702651978
    2. '
' → logprob: -1.1364141702651978
    3. 'if' → logprob: -2.886414051055908
    4. '\n' → logprob: -4.011414051055908
    5. '
' → logprob: -6.011414051055908
    6. '```' → logprob: -7.511414051055908
    7. ' if' → logprob: -7.636414051055908
    8. ' print' → logprob: -7.886414051055908
    9. '' → logprob: -8.011414527893066
    10. '<|end|>' → logprob: -8.261414527893066

Token 34: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25119549036026
    2. '
' → logprob: -1.6261954307556152
    3. 'if' → logprob: -4.626195430755615
    4. '
' → logprob: -4.751195430755615
    5. '\n' → logprob: -5.126195430755615
    6. '' → logprob: -7.251195430755615
    7. '```' → logprob: -9.376195907592773
    8. '\' → logprob: -9.501195907592773
    9. ' print' → logprob: -9.626195907592773
    10. '`
' → logprob: -9.751195907592773

Token 35: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06814920157194138
    2. '(x' → logprob: -2.8181490898132324
    3. '(max' → logprob: -5.318149089813232
    4. '(min' → logprob: -6.818149089813232
    5. '((' → logprob: -8.81814956665039
    6. '(abs' → logprob: -11.94314956665039
    7. 'max' → logprob: -12.69314956665039
    8. '('' → logprob: -13.06814956665039
    9. '()' → logprob: -13.44314956665039
    10. '("' → logprob: -13.56814956665039

Token 36: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931599974632263
    2. '(x' → logprob: -0.6931599974632263
    3. ')' → logprob: -12.568160057067871
    4. '(
' → logprob: -13.318160057067871
    5. '((' → logprob: -13.318160057067871
    6. '(y' → logprob: -13.443160057067871
    7. '()' → logprob: -13.693160057067871
    8. '(s' → logprob: -14.443160057067871
    9. '(

' → logprob: -14.568160057067871
    10. ' (' → logprob: -15.068160057067871

Token 37: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.31341037154197693
    2. ',' → logprob: -1.3134104013442993
    3. ' ,' → logprob: -8.938410758972168
    4. 'y' → logprob: -12.063410758972168
    5. ')' → logprob: -12.063410758972168
    6. ' y' → logprob: -12.688410758972168
    7. ',x' → logprob: -13.938410758972168
    8. '))' → logprob: -14.313410758972168
    9. ',)' → logprob: -14.563410758972168
    10. ',
' → logprob: -15.313410758972168

Token 38: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38687264919281006
    2. '))' → logprob: -1.13687264919281
    3. ')))' → logprob: -13.636872291564941
    4. ')}' → logprob: -16.011873245239258
    5. ')
' → logprob: -16.636873245239258
    6. ' )' → logprob: -16.761873245239258
    7. '))
' → logprob: -17.386873245239258
    8. '})' → logprob: -17.511873245239258
    9. ')**' → logprob: -17.761873245239258
    10. ')")' → logprob: -17.761873245239258


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 36
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 72.22%
================================================================================
