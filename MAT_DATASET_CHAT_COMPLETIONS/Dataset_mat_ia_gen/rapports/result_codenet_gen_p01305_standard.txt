================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from math import comb

sys.setrecursionlimit(10**7)

def dfs(gate_cards, jacky_cards, g_used, j_used, g_score, j_score, cache):
    if (g_used, j_used) in cache:
        return cache[(g_used, j_used)]

    n = len(gate_cards)
    turn = bin(g_used).count("1")
    if turn == n:
        if g_score > j_score:
            return (1, 0)
        elif g_score < j_score:
            return (0, 1)
        else:
            return (0, 0)

    g_win, j_win = 0, 0
    for i in range(n):
        if not (g_used & (1 << i)):
            for j in range(n):
                if not (j_used & (1 << j)):
                    g_c = gate_cards[i]
                    j_c = jacky_cards[j]
                    g_s, j_s = g_score, j_score
                    if g_c > j_c:
                        g_s += g_c + j_c
                    elif g_c < j_c:
                        j_s += g_c + j_c
                    res = dfs(gate_cards, jacky_cards, g_used | (1 << i), j_used | (1 << j), g_s, j_s, cache)
                    g_win += res[0]
                    j_win += res[1]
    cache[(g_used, j_used)] = (g_win, j_win)
    return (g_win, j_win)

def main():
    input = sys.stdin.readline
    T = int(input())
    for _ in range(T):
        gate_cards = list(map(int, input().split()))
        jacky_cards = list(map(int, input().split()))
        cache = {}
        g_win, j_win = dfs(gate_cards, jacky_cards, 0, 0, 0, 0, cache)
        total = g_win + j_win
        if total == 0:
            print("0.00000 0.00000")
        else:
            print(f"{g_win/total:.5f} {j_win/total:.5f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006907186936587095
    2. 'os' → logprob: -5.756906986236572
    3. ' math' → logprob: -6.881906986236572
    4. ' collections' → logprob: -7.256906986236572
    5. ' pathlib' → logprob: -7.756906986236572
    6. ' ' → logprob: -8.13190746307373
    7. ' typing' → logprob: -8.13190746307373
    8. ' datetime' → logprob: -9.00690746307373
    9. 'collections' → logprob: -9.13190746307373
    10. ' Py' → logprob: -9.25690746307373

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0047406721860170364
    2. 'import' → logprob: -5.6297407150268555
    3. ' ' → logprob: -6.8797407150268555
    4. '.' → logprob: -9.504740715026855
    5. '	import' → logprob: -11.504740715026855
    6. ' impor' → logprob: -12.379740715026855
    7. ' im' → logprob: -12.629740715026855
    8. ' .' → logprob: -12.754740715026855
    9. '<|end|>' → logprob: -12.879740715026855
    10. ' importar' → logprob: -13.129740715026855

Token 6: ' comb' (ID: 4134)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.02880408987402916
    2. ' ' → logprob: -4.278804302215576
    3. ' pi' → logprob: -5.028804302215576
    4. ' ceil' → logprob: -6.153804302215576
    5. 'sqrt' → logprob: -6.153804302215576
    6. ' sin' → logprob: -6.528804302215576
    7. ' import' → logprob: -7.403804302215576
    8. ' pow' → logprob: -8.278803825378418
    9. ' log' → logprob: -8.278803825378418
    10. ' s' → logprob: -8.278803825378418

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17183232307434082
    2. '(
' → logprob: -2.421832323074341
    3. '\n' → logprob: -3.921832323074341
    4. ',' → logprob: -4.046832084655762
    5. '\' → logprob: -4.921832084655762
    6. '
' → logprob: -5.171832084655762
    7. 'def' → logprob: -5.671832084655762
    8. 'import' → logprob: -5.921832084655762
    9. '(

' → logprob: -6.046832084655762
    10. '

' → logprob: -6.171832084655762

Token 8: 'sys' (ID: 17324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5590646862983704
    2. '(
' → logprob: -1.8090646266937256
    3. 'def' → logprob: -1.9340646266937256
    4. '\' → logprob: -3.8090646266937256
    5. ',' → logprob: -3.8090646266937256
    6. 'import' → logprob: -4.059064865112305
    7. '
' → logprob: -4.059064865112305
    8. '

' → logprob: -4.934064865112305
    9. '(

' → logprob: -5.059064865112305
    10. '\n' → logprob: -5.309064865112305

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6047699318733066e-05
    2. '.import' → logprob: -12.875016212463379
    3. '.exit' → logprob: -13.125016212463379
    4. '.stdout' → logprob: -13.500016212463379
    5. '.`' → logprob: -13.625016212463379
    6. '.readline' → logprob: -13.625016212463379
    7. ' .' → logprob: -14.125016212463379
    8. '.argv' → logprob: -14.250016212463379
    9. '.stdin' → logprob: -14.500016212463379
    10. '.user' → logprob: -14.625016212463379

Token 10: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.4829930067062378
    2. 'set' → logprob: -1.2329930067062378
    3. 'limit' → logprob: -3.3579931259155273
    4. 'size' → logprob: -4.357993125915527
    5. 'sys' → logprob: -4.357993125915527
    6. 'trace' → logprob: -5.107993125915527
    7. 's' → logprob: -5.232993125915527
    8. 't' → logprob: -5.982993125915527
    9. 'execution' → logprob: -6.357993125915527
    10. 'exc' → logprob: -6.732993125915527

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0002856497303582728
    2. 'urs' → logprob: -8.500286102294922
    3. 'ur' → logprob: -9.875286102294922
    4. 'ursive' → logprob: -10.500286102294922
    5. 'ursor' → logprob: -13.625286102294922
    6. 'rs' → logprob: -14.750286102294922
    7. 'urst' → logprob: -14.875286102294922
    8. 'usion' → logprob: -15.250286102294922
    9. 'urse' → logprob: -15.500286102294922
    10. 'urf' → logprob: -16.000286102294922

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0004060050705447793
    2. '_limit' → logprob: -7.875405788421631
    3. ' limit' → logprob: -11.125406265258789
    4. 'depth' → logprob: -11.625406265258789
    5. 'lim' → logprob: -13.500406265258789
    6. 'Limit' → logprob: -14.750406265258789
    7. '_depth' → logprob: -15.500406265258789
    8. 'error' → logprob: -16.25040626525879
    9. '-limit' → logprob: -16.87540626525879
    10. '(limit' → logprob: -17.25040626525879

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -14.125001907348633
    3. '(
' → logprob: -15.000001907348633
    4. '("("' → logprob: -15.500001907348633
    5. '((' → logprob: -15.750001907348633
    6. '(

' → logprob: -16.125001907348633
    7. '```' → logprob: -16.875001907348633
    8. '(`' → logprob: -17.125001907348633
    9. '()' → logprob: -17.125001907348633
    10. '('' → logprob: -17.750001907348633

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00605393573641777
    2. '100' → logprob: -5.131053924560547
    3. '300' → logprob: -9.881053924560547
    4. ' ' → logprob: -10.006053924560547
    5. '500' → logprob: -10.756053924560547
    6. '250' → logprob: -13.006053924560547
    7. '200' → logprob: -13.256053924560547
    8. '150' → logprob: -13.506053924560547
    9. '   ' → logprob: -14.756053924560547
    10. '1' → logprob: -14.756053924560547

Token 15: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7313318848609924
    2. '7' → logprob: -1.2313318252563477
    3. '6' → logprob: -2.1063318252563477
    4. '0' → logprob: -2.4813318252563477
    5. '5' → logprob: -4.106331825256348
    6. '00' → logprob: -5.731331825256348
    7. '4' → logprob: -6.606331825256348
    8. '07' → logprob: -8.106331825256348
    9. '8' → logprob: -9.856331825256348
    10. '```' → logprob: -10.231331825256348

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0007012377609498799
    2. '9' → logprob: -7.750701427459717
    3. '6' → logprob: -8.375700950622559
    4. '8' → logprob: -10.125700950622559
    5. ' ' → logprob: -17.500701904296875
    6. '```' → logprob: -18.125701904296875
    7. '**' → logprob: -19.875701904296875
    8. '``' → logprob: -20.125701904296875
    9. ')' → logprob: -20.500701904296875
    10. '{' → logprob: -20.500701904296875

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '))' → logprob: -15.250000953674316
    5. ')

' → logprob: -18.375001907348633
    6. ')
' → logprob: -18.500001907348633
    7. '),' → logprob: -18.875001907348633
    8. ')`' → logprob: -19.000001907348633
    9. '```' → logprob: -19.125001907348633
    10. '`)' → logprob: -19.500001907348633

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00028040475444868207
    2. '```' → logprob: -8.750280380249023
    3. '\' → logprob: -9.875280380249023
    4. 'class' → logprob: -10.375280380249023
    5. 'n' → logprob: -10.875280380249023
    6. '
' → logprob: -11.500280380249023
    7. '``' → logprob: -13.125280380249023
    8. '
' → logprob: -13.125280380249023
    9. '\n' → logprob: -13.250280380249023
    10. '

' → logprob: -13.875280380249023

Token 19: ' dfs' (ID: 51252)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.6897152662277222
    2. ' dfs' → logprob: -1.0647152662277222
    3. ' f' → logprob: -2.4397153854370117
    4. ' ' → logprob: -3.6897153854370117
    5. ' factor' → logprob: -3.8147153854370117
    6. ' solve' → logprob: -5.564715385437012
    7. ' combine' → logprob: -6.189715385437012
    8. ' main' → logprob: -6.564715385437012
    9. ' calculate' → logprob: -6.564715385437012
    10. ' space' → logprob: -6.689715385437012

Token 20: '(g' (ID: 7791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010416502133011818
    2. '(node' → logprob: -4.635416507720947
    3. '(x' → logprob: -8.885416030883789
    4. ' (' → logprob: -9.010416030883789
    5. '(tree' → logprob: -9.385416030883789
    6. '_' → logprob: -9.760416030883789
    7. '(user' → logprob: -10.260416030883789
    8. '(n' → logprob: -11.010416030883789
    9. '(nodes' → logprob: -11.010416030883789
    10. '(depth' → logprob: -11.135416030883789

Token 21: 'ate' (ID: 379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027551876846700907
    2. 'raph' → logprob: -6.002755165100098
    3. ' ,' → logprob: -8.627755165100098
    4. ',g' → logprob: -11.002755165100098
    5. ',r' → logprob: -11.252755165100098
    6. ',node' → logprob: -11.377755165100098
    7. ',n' → logprob: -11.752755165100098
    8. ')' → logprob: -11.877755165100098
    9. ',u' → logprob: -11.877755165100098
    10. '):' → logprob: -12.502755165100098

Token 22: '_cards' (ID: 101651)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5687562823295593
    2. '):' → logprob: -0.9437562823295593
    3. ')' → logprob: -3.193756341934204
    4. '_' → logprob: -7.568756103515625
    5. '[' → logprob: -8.068756103515625
    6. ':' → logprob: -8.068756103515625
    7. 's' → logprob: -8.318756103515625
    8. '_list' → logprob: -8.443756103515625
    9. '_nodes' → logprob: -8.443756103515625
    10. ' ,' → logprob: -9.068756103515625

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023614393547177315
    2. '):' → logprob: -3.7736144065856934
    3. ')' → logprob: -9.148613929748535
    4. '[' → logprob: -9.523613929748535
    5. ' ,' → logprob: -9.898613929748535
    6. ':' → logprob: -10.023613929748535
    7. ',n' → logprob: -10.773613929748535
    8. ',node' → logprob: -11.148613929748535
    9. '[node' → logprob: -12.648613929748535
    10. ']:' → logprob: -12.773613929748535

Token 24: ' jack' (ID: 21273)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.1336185932159424
    2. ' index' → logprob: -2.3836185932159424
    3. 'idx' → logprob: -2.5086185932159424
    4. ' depth' → logprob: -2.5086185932159424
    5. ' current' → logprob: -2.6336185932159424
    6. 'index' → logprob: -3.0086185932159424
    7. ' visited' → logprob: -3.2586185932159424
    8. 'depth' → logprob: -3.3836185932159424
    9. 'visited' → logprob: -3.5086185932159424
    10. ' gate' → logprob: -4.008618354797363

Token 25: 'y' (ID: 88)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8272457122802734
    2. '_cards' → logprob: -0.8272457122802734
    3. ',' → logprob: -3.5772457122802734
    4. '_pos' → logprob: -3.8272457122802734
    5. ')' → logprob: -4.577245712280273
    6. '_hand' → logprob: -4.952245712280273
    7. '_' → logprob: -5.077245712280273
    8. '_position' → logprob: -5.577245712280273
    9. '_turn' → logprob: -5.827245712280273
    10. 's' → logprob: -5.827245712280273

Token 26: '_cards' (ID: 101651)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9599173069000244
    2. '_cards' → logprob: -1.0849173069000244
    3. ',' → logprob: -1.4599173069000244
    4. '_positions' → logprob: -4.959917068481445
    5. '_pos' → logprob: -5.334917068481445
    6. '_hand' → logprob: -5.709917068481445
    7. '_position' → logprob: -6.084917068481445
    8. '_stack' → logprob: -6.209917068481445
    9. '_depth' → logprob: -6.334917068481445
    10. '_index' → logprob: -6.459917068481445

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6935009360313416
    2. '):' → logprob: -0.6935009360313416
    3. ')' → logprob: -8.818500518798828
    4. ' ):' → logprob: -9.568500518798828
    5. ':' → logprob: -9.693500518798828
    6. ' ,' → logprob: -10.318500518798828
    7. '):
' → logprob: -11.693500518798828
    8. '   ' → logprob: -12.193500518798828
    9. ' ' → logprob: -12.818500518798828
    10. ')):' → logprob: -13.256000518798828

Token 28: ' g' (ID: 329)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.6648681163787842
    2. ' depth' → logprob: -1.7898681163787842
    3. 'depth' → logprob: -2.039868116378784
    4. 'idx' → logprob: -2.539868116378784
    5. ' turn' → logprob: -2.914868116378784
    6. ' visited' → logprob: -3.039868116378784
    7. ' used' → logprob: -3.164868116378784
    8. 'visited' → logprob: -3.164868116378784
    9. ' index' → logprob: -3.289868116378784
    10. 'turn' → logprob: -3.789868116378784

Token 29: '_used' (ID: 67016)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.005989708937704563
    2. 'a' → logprob: -5.7559895515441895
    3. ')' → logprob: -6.3809895515441895
    4. 'ates' → logprob: -8.380990028381348
    5. ',' → logprob: -8.505990028381348
    6. 'raph' → logprob: -9.130990028381348
    7. '):' → logprob: -9.130990028381348
    8. '=' → logprob: -9.505990028381348
    9. 'ateway' → logprob: -10.130990028381348
    10. ')a' → logprob: -10.255990028381348

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039275430142879486
    2. ',' → logprob: -3.2892754077911377
    3. ')' → logprob: -7.164275646209717
    4. '):
' → logprob: -9.039275169372559
    5. ' ):' → logprob: -9.289275169372559
    6. 's' → logprob: -10.039275169372559
    7. 'd' → logprob: -10.164275169372559
    8. ':' → logprob: -10.414275169372559
    9. '_' → logprob: -10.414275169372559
    10. 'ed' → logprob: -11.289275169372559

Token 31: ' j' (ID: 441)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.7201749086380005
    2. ' depth' → logprob: -1.7201749086380005
    3. ' turn' → logprob: -2.470174789428711
    4. ' j' → logprob: -2.845174789428711
    5. ' p' → logprob: -2.970174789428711
    6. 'k' → logprob: -3.345174789428711
    7. 'j' → logprob: -3.595174789428711
    8. ' idx' → logprob: -3.595174789428711
    9. 'depth' → logprob: -3.657674789428711
    10. 'turn' → logprob: -4.032674789428711

Token 32: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.005864801350980997
    2. 'used' → logprob: -5.25586462020874
    3. '_' → logprob: -8.505865097045898
    4. '_USED' → logprob: -8.630865097045898
    5. ')' → logprob: -9.755865097045898
    6. 's' → logprob: -10.630865097045898
    7. 'u' → logprob: -10.755865097045898
    8. 'ack' → logprob: -10.880865097045898
    9. '```' → logprob: -10.880865097045898
    10. 'se' → logprob: -11.380865097045898

Token 33: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5235285758972168
    2. ',' → logprob: -0.8985285758972168
    3. ')' → logprob: -8.398529052734375
    4. ' ):' → logprob: -9.148529052734375
    5. ' ,' → logprob: -10.273529052734375
    6. ':' → logprob: -11.023529052734375
    7. '):
' → logprob: -12.523529052734375
    8. '),' → logprob: -13.023529052734375
    9. '=' → logprob: -13.148529052734375
    10. ')):' → logprob: -13.273529052734375

Token 34: ' g' (ID: 329)
  Prédit: ' turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.6019377708435059
    2. ' depth' → logprob: -1.6019377708435059
    3. 'depth' → logprob: -3.476937770843506
    4. 'turn' → logprob: -3.601937770843506
    5. ' ' → logprob: -4.101937770843506
    6. ' result' → logprob: -4.226937770843506
    7. ' score' → logprob: -4.476937770843506
    8. ' p' → logprob: -4.726937770843506
    9. ' memo' → logprob: -4.726937770843506
    10. ' player' → logprob: -4.789437770843506

Token 35: '_score' (ID: 22555)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.195151448249817
    2. '_cards' → logprob: -1.195151448249817
    3. ',' → logprob: -1.320151448249817
    4. ')' → logprob: -3.6951513290405273
    5. '_' → logprob: -3.8201513290405273
    6. '):' → logprob: -4.070151329040527
    7. '_,' → logprob: -4.195151329040527
    8. '_score' → logprob: -5.070151329040527
    9. '_depth' → logprob: -5.320151329040527
    10. '_mask' → logprob: -5.320151329040527

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01622205413877964
    2. '):' → logprob: -4.14122200012207
    3. ' ,' → logprob: -9.26622200012207
    4. ')' → logprob: -9.76622200012207
    5. '=' → logprob: -10.76622200012207
    6. ' ):' → logprob: -12.14122200012207
    7. ',
' → logprob: -13.89122200012207
    8. ',b' → logprob: -14.14122200012207
    9. '),' → logprob: -14.14122200012207
    10. ',j' → logprob: -14.26622200012207

Token 37: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11346796900033951
    2. 'j' → logprob: -2.2384679317474365
    3. ' ' → logprob: -7.488468170166016
    4. ' jack' → logprob: -11.175968170166016
    5. ' g' → logprob: -11.863468170166016
    6. ' ' → logprob: -11.988468170166016
    7. '	j' → logprob: -12.050968170166016
    8. 'jack' → logprob: -12.175968170166016
    9. ' s' → logprob: -12.425968170166016
    10. '  ' → logprob: -12.675968170166016

Token 38: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0005104990559630096
    2. '_scores' → logprob: -8.375510215759277
    3. '_' → logprob: -9.125510215759277
    4. 'score' → logprob: -9.750510215759277
    5. 'y' → logprob: -10.000510215759277
    6. ')' → logprob: -11.125510215759277
    7. '_s' → logprob: -11.375510215759277
    8. '_sc' → logprob: -11.625510215759277
    9. '_SCORE' → logprob: -11.625510215759277
    10. '_y' → logprob: -12.500510215759277

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08906379342079163
    2. ',' → logprob: -2.464063882827759
    3. ')' → logprob: -9.58906364440918
    4. ':' → logprob: -10.46406364440918
    5. ' ):' → logprob: -10.83906364440918
    6. '):
' → logprob: -13.21406364440918
    7. '),' → logprob: -14.21406364440918
    8. '>):' → logprob: -14.33906364440918
    9. ' ,' → logprob: -14.58906364440918
    10. '=' → logprob: -14.83906364440918

Token 40: ' cache' (ID: 11956)
  Prédit: ' turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.2266937643289566
    2. 'turn' → logprob: -1.9766937494277954
    3. ' depth' → logprob: -3.601693868637085
    4. 'depth' → logprob: -4.101693630218506
    5. ' ' → logprob: -5.476693630218506
    6. ' turns' → logprob: -5.601693630218506
    7. ' idx' → logprob: -6.101693630218506
    8. 't' → logprob: -7.101693630218506
    9. ' is' → logprob: -7.226693630218506
    10. ')' → logprob: -7.351693630218506

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006174313370138407
    2. ',' → logprob: -5.256174087524414
    3. ')' → logprob: -7.256174087524414
    4. '):
' → logprob: -8.756174087524414
    5. ' ):' → logprob: -10.631174087524414
    6. '=' → logprob: -10.756174087524414
    7. ':' → logprob: -11.131174087524414
    8. '):
' → logprob: -12.381174087524414
    9. ')=' → logprob: -12.881174087524414
    10. '):

' → logprob: -13.006174087524414

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03599562495946884
    2. '):' → logprob: -4.0359954833984375
    3. '   ' → logprob: -4.5359954833984375
    4. ' :' → logprob: -5.1609954833984375
    5. ',' → logprob: -7.4109954833984375
    6. '():' → logprob: -8.160995483398438
    7. ':return' → logprob: -9.910995483398438
    8. ')' → logprob: -10.035995483398438
    9. '<|end|>' → logprob: -10.035995483398438
    10. ' ):' → logprob: -10.410995483398438

Token 43: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19814136624336243
    2. '   ' → logprob: -1.82314133644104
    3. '):' → logprob: -4.573141574859619
    4. ' if' → logprob: -5.573141574859619
    5. ' :' → logprob: -6.448141574859619
    6. ')' → logprob: -7.448141574859619
    7. ',' → logprob: -7.448141574859619
    8. 'if' (adapté à ' if') → logprob: -7.448141574859619
    9. ' ' → logprob: -8.198141098022461
    10. '    ' → logprob: -8.823141098022461

Token 44: ' (' (ID: 350)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.5836214423179626
    2. ' len' → logprob: -1.3336215019226074
    3. 'g' → logprob: -3.2086215019226074
    4. ' (' → logprob: -3.4586215019226074
    5. ' sum' → logprob: -3.5836215019226074
    6. 'len' → logprob: -3.8336215019226074
    7. ' all' → logprob: -4.208621501922607
    8. ' tuple' → logprob: -4.208621501922607
    9. '(g' → logprob: -4.458621501922607
    10. '(len' → logprob: -4.958621501922607

Token 45: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.35186895728111267
    2. 'gate' → logprob: -1.976868987083435
    3. 'tuple' → logprob: -2.2268688678741455
    4. 'len' → logprob: -3.2268688678741455
    5. '   ' → logprob: -5.726869106292725
    6. '(g' → logprob: -5.851869106292725
    7. 'sum' → logprob: -6.976869106292725
    8. ' tuple' → logprob: -7.351869106292725
    9. ' gate' → logprob: -7.601869106292725
    10. ' g' → logprob: -7.601869106292725

Token 46: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.4759489595890045
    2. 'ate' → logprob: -0.9759489297866821
    3. '_gate' → logprob: -6.600948810577393
    4. '_' → logprob: -8.60094928741455
    5. 'ated' → logprob: -9.72594928741455
    6. '_use' → logprob: -10.10094928741455
    7. 'used' → logprob: -10.47594928741455
    8. '_score' → logprob: -10.60094928741455
    9. '_cards' → logprob: -11.10094928741455
    10. 'et' → logprob: -11.35094928741455

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019230410689488053
    2. '==' → logprob: -7.251923084259033
    3. ',g' → logprob: -8.126922607421875
    4. '|' → logprob: -8.251922607421875
    5. ' ,' → logprob: -8.376922607421875
    6. '>>' → logprob: -8.751922607421875
    7. ' ==' → logprob: -9.501922607421875
    8. '[' → logprob: -10.001922607421875
    9. ',j' → logprob: -10.376922607421875
    10. ' |' → logprob: -10.626922607421875

Token 48: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002479700604453683
    2. ' j' → logprob: -6.002479553222656
    3. ' ' → logprob: -13.252479553222656
    4. '   ' → logprob: -13.877479553222656
    5. '    ' → logprob: -14.627479553222656
    6. '  ' → logprob: -15.127479553222656
    7. '	j' → logprob: -16.002479553222656
    8. ')' → logprob: -16.377479553222656
    9. '
' → logprob: -16.502479553222656
    10. '_j' → logprob: -16.814979553222656

Token 49: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.664371848164592e-05
    2. 'used' → logprob: -11.625016212463379
    3. '_USED' → logprob: -13.125016212463379
    4. ')_' → logprob: -13.250016212463379
    5. '_' → logprob: -13.500016212463379
    6. 'Used' → logprob: -14.250016212463379
    7. '```' → logprob: -15.000016212463379
    8. ')' → logprob: -15.125016212463379
    9. '_unused' → logprob: -15.625016212463379
    10. '_usage' → logprob: -16.125017166137695

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ',)' → logprob: -11.500022888183594
    3. ' )' → logprob: -11.625022888183594
    4. ',' → logprob: -13.750022888183594
    5. ')==' → logprob: -13.750022888183594
    6. 'in' → logprob: -15.500022888183594
    7. ' in' → logprob: -15.500022888183594
    8. '')' → logprob: -15.750022888183594
    9. ')=' → logprob: -15.750022888183594
    10. '),' → logprob: -15.875022888183594

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5202184915542603
    2. ')' → logprob: -1.0202184915542603
    3. 'in' → logprob: -3.1452183723449707
    4. ',' → logprob: -6.645218372344971
    5. ' )' → logprob: -7.895218372344971
    6. '   ' → logprob: -9.270218849182129
    7. ' ' → logprob: -9.770218849182129
    8. '[' → logprob: -10.770218849182129
    9. ')==' → logprob: -10.770218849182129
    10. ',)' → logprob: -10.770218849182129

Token 52: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.3868730664253235
    2. ' cache' → logprob: -1.1368730068206787
    3. '	cache' → logprob: -13.261873245239258
    4. '(cache' → logprob: -16.136873245239258
    5. '.cache' → logprob: -16.511873245239258
    6. '   ' → logprob: -17.511873245239258
    7. '_cache' → logprob: -17.761873245239258
    8. 'Cache' → logprob: -18.636873245239258
    9. 'c' → logprob: -18.761873245239258
    10. 'cached' → logprob: -19.386873245239258

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007598382653668523
    2. ':return' → logprob: -7.250759601593018
    3. ':
' → logprob: -10.500760078430176
    4. '):' → logprob: -11.625760078430176
    5. '   ' → logprob: -12.000760078430176
    6. ' :' → logprob: -12.250760078430176
    7. ' and' → logprob: -13.375760078430176
    8. ':**' → logprob: -15.250760078430176
    9. ',' → logprob: -16.50075912475586
    10. ')' → logprob: -16.50075912475586

Token 54: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29472386837005615
    2. '       ' → logprob: -1.4197238683700562
    3. '   ' → logprob: -5.044723987579346
    4. ':return' → logprob: -5.169723987579346
    5. ' return' → logprob: -7.794723987579346
    6. ':
' → logprob: -8.169723510742188
    7. '):' → logprob: -8.419723510742188
    8. ' :' → logprob: -8.794723510742188
    9. ',' → logprob: -9.544723510742188
    10. ' and' → logprob: -9.669723510742188

Token 55: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31287434697151184
    2. ' return' → logprob: -1.8128743171691895
    3. 'return' (adapté à ' return') → logprob: -2.3128743171691895
    4. ':return' → logprob: -5.3128743171691895
    5. '   ' → logprob: -7.1878743171691895
    6. '    ' → logprob: -8.562874794006348
    7. ' ' → logprob: -8.937874794006348
    8. '        ' → logprob: -9.187874794006348
    9. '           ' → logprob: -9.312874794006348
    10. ':' → logprob: -9.562874794006348

Token 56: ' cache' (ID: 11956)
  Prédit: ' cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cache' → logprob: -0.1269317865371704
    2. 'cache' → logprob: -2.126931667327881
    3. '	cache' → logprob: -13.126932144165039
    4. '(cache' → logprob: -14.251932144165039
    5. '0' → logprob: -14.876932144165039
    6. '.cache' → logprob: -15.626932144165039
    7. '    ' → logprob: -16.12693214416504
    8. '   ' → logprob: -16.12693214416504
    9. '_cache' → logprob: -16.12693214416504
    10. ' cach' → logprob: -16.62693214416504

Token 57: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.18219180405139923
    2. '[g' → logprob: -2.182191848754883
    3. '[' → logprob: -2.932191848754883
    4. '(g' → logprob: -8.182191848754883
    5. '[
' → logprob: -9.182191848754883
    6. '```' → logprob: -10.307191848754883
    7. '(' → logprob: -10.682191848754883
    8. '

' → logprob: -11.432191848754883
    9. '[G' → logprob: -12.182191848754883
    10. '[]' → logprob: -12.432191848754883

Token 58: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.704273118884885e-07
    2. ' g' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.75
    4. 'г' → logprob: -18.375
    5. '	g' → logprob: -18.5
    6. '_g' → logprob: -18.75
    7. ' ' → logprob: -18.75
    8. '(g' → logprob: -19.0
    9. '    ' → logprob: -20.125
    10. '.g' → logprob: -20.125

Token 59: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -4.143808109802194e-05
    2. 'used' → logprob: -10.125041007995605
    3. '_USED' → logprob: -14.875041007995605
    4. '_unused' → logprob: -15.750041007995605
    5. 'Used' → logprob: -15.875041007995605
    6. '_use' → logprob: -15.875041007995605
    7. 'g' → logprob: -16.625041961669922
    8. '   ' → logprob: -16.750041961669922
    9. '_g' → logprob: -16.875041961669922
    10. ' used' → logprob: -17.625041961669922

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007269674097187817
    2. ',j' → logprob: -7.25072717666626
    3. ' ,' → logprob: -11.500726699829102
    4. ',g' → logprob: -12.750726699829102
    5. ')' → logprob: -14.000726699829102
    6. '),' → logprob: -14.125726699829102
    7. '<|end|>' → logprob: -15.000726699829102
    8. '‌,' → logprob: -15.375726699829102
    9. ',user' → logprob: -15.375726699829102
    10. ',n' → logprob: -15.625726699829102

Token 61: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020542940124869347
    2. ' j' → logprob: -3.895542860031128
    3. ' ' → logprob: -15.395543098449707
    4. '   ' → logprob: -15.520543098449707
    5. '	j' → logprob: -15.520543098449707
    6. '    ' → logprob: -15.895543098449707
    7. '```' → logprob: -17.20804214477539
    8. '_j' → logprob: -17.27054214477539
    9. '  ' → logprob: -17.39554214477539
    10. ',j' → logprob: -17.45804214477539

Token 62: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.001191775663755834
    2. 'used' → logprob: -6.75119161605835
    3. '_USED' → logprob: -11.751192092895508
    4. '```' → logprob: -12.501192092895508
    5. ')' → logprob: -12.751192092895508
    6. '_cards' → logprob: -13.626192092895508
    7. ')]' → logprob: -14.126192092895508
    8. ')_' → logprob: -14.126192092895508
    9. ',' → logprob: -14.126192092895508
    10. '   ' → logprob: -14.376192092895508

Token 63: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011343709047650918
    2. ')' → logprob: -9.375113487243652
    3. ')].' → logprob: -11.625113487243652
    4. ']' → logprob: -12.000113487243652
    5. ')])' → logprob: -12.250113487243652
    6. ')][' → logprob: -12.625113487243652
    7. ' )' → logprob: -13.125113487243652
    8. ')],' → logprob: -14.000113487243652
    9. '])]' → logprob: -14.250113487243652
    10. ')]
' → logprob: -14.375113487243652

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05135521665215492
    2. '    
' → logprob: -3.5513551235198975
    3. '
' → logprob: -3.9263551235198975
    4. ':' → logprob: -6.926355361938477
    5. 'if' → logprob: -8.801355361938477
    6. ':
' → logprob: -8.926355361938477
    7. ' if' → logprob: -9.301355361938477
    8. '   
' → logprob: -9.801355361938477
    9. 'def' → logprob: -9.801355361938477
    10. '  
' → logprob: -10.426355361938477

Token 65: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6263008117675781
    2. ' if' → logprob: -1.6263008117675781
    3. 'n' (adapté à ' n') → logprob: -2.251300811767578
    4. '   ' → logprob: -2.501300811767578
    5. 'best' → logprob: -3.626300811767578
    6. 'max' → logprob: -3.876300811767578
    7. 'result' → logprob: -4.501300811767578
    8. ' n' → logprob: -5.501300811767578
    9. 'res' → logprob: -5.501300811767578
    10. ' best' → logprob: -5.876300811767578

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018327631056308746
    2. '=' → logprob: -4.018327713012695
    3. '   ' → logprob: -9.768327713012695
    4. 'um' → logprob: -10.018327713012695
    5. ' ' → logprob: -10.643327713012695
    6. '=len' → logprob: -11.268327713012695
    7. '  ' → logprob: -11.393327713012695
    8. '_' → logprob: -11.768327713012695
    9. '=int' → logprob: -11.893327713012695
    10. 'ext' → logprob: -12.393327713012695

Token 67: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25195828080177307
    2. ' len' → logprob: -1.5019582509994507
    3. '(len' → logprob: -11.876957893371582
    4. ' ' → logprob: -12.376957893371582
    5. 'bin' → logprob: -12.876957893371582
    6. '32' → logprob: -13.251957893371582
    7. '10' → logprob: -13.501957893371582
    8. 'sum' → logprob: -13.751957893371582
    9. '7' → logprob: -13.876957893371582
    10. '[len' → logprob: -14.001957893371582

Token 68: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -9.925185440806672e-05
    2. '(j' → logprob: -9.250099182128906
    3. 'g' → logprob: -13.625099182128906
    4. '(' → logprob: -13.875099182128906
    5. 'gate' → logprob: -15.250099182128906
    6. ' (' → logprob: -16.375099182128906
    7. 'j' → logprob: -16.750099182128906
    8. '(gt' → logprob: -16.875099182128906
    9. '(card' → logprob: -17.125099182128906
    10. '(game' → logprob: -17.125099182128906

Token 69: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -5.240481914370321e-05
    2. '_gate' → logprob: -11.125052452087402
    3. 'gate' → logprob: -11.250052452087402
    4. '```' → logprob: -12.375052452087402
    5. 'atet' → logprob: -12.875052452087402
    6. 'ateway' → logprob: -13.250052452087402
    7. 'at' → logprob: -13.500052452087402
    8. ')' → logprob: -13.500052452087402
    9. '`' → logprob: -13.625052452087402
    10. '_' → logprob: -13.937552452087402

Token 70: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.2352385965641588e-05
    2. '_' → logprob: -12.250012397766113
    3. ')_' → logprob: -13.000012397766113
    4. '_tokens' → logprob: -14.000012397766113
    5. '```' → logprob: -14.000012397766113
    6. '_cells' → logprob: -14.250012397766113
    7. '_scores' → logprob: -14.750012397766113
    8. '_card' → logprob: -15.250012397766113
    9. '_codes' → logprob: -15.250012397766113
    10. '_c' → logprob: -15.250012397766113

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036397494841367006
    2. ')
' → logprob: -5.6286396980285645
    3. ' )' → logprob: -11.253640174865723
    4. '   ' → logprob: -11.378640174865723
    5. ')

' → logprob: -11.503640174865723
    6. 'def' → logprob: -12.503640174865723
    7. '))' → logprob: -15.503640174865723
    8. '[' → logprob: -15.753640174865723
    9. '```' → logprob: -15.878640174865723
    10. ' )
' → logprob: -16.003639221191406

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008445297717116773
    2. '    
' → logprob: -7.750844478607178
    3. ' if' → logprob: -8.375844955444336
    4. 'if' → logprob: -9.125844955444336
    5. '
' → logprob: -10.125844955444336
    6. '<|end|>' → logprob: -10.375844955444336
    7. '  
' → logprob: -14.500844955444336
    8. '   
' → logprob: -14.625844955444336
    9. '<|end|>' → logprob: -14.625844955444336
    10. '```' → logprob: -14.750844955444336

Token 73: ' turn' (ID: 3716)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5009189248085022
    2. 'if' → logprob: -1.2509188652038574
    3. '   ' → logprob: -2.2509188652038574
    4. ' result' → logprob: -7.500918865203857
    5. 'result' → logprob: -7.625918865203857
    6. '    
' → logprob: -7.750918865203857
    7. ' for' → logprob: -8.500919342041016
    8. 'i' → logprob: -9.250919342041016
    9. ' i' → logprob: -9.375919342041016
    10. 'for' → logprob: -9.375919342041016

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002363040344789624
    2. '=' → logprob: -6.127363204956055
    3. '_' → logprob: -8.877363204956055
    4. ' ' → logprob: -10.627363204956055
    5. '   ' → logprob: -12.127363204956055
    6. '_idx' → logprob: -13.377363204956055
    7. '_space' → logprob: -14.002363204956055
    8. '  ' → logprob: -14.127363204956055
    9. ' =)' → logprob: -14.377363204956055
    10. '_mask' → logprob: -14.502363204956055

Token 75: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.02990853600203991
    2. 'sum' → logprob: -4.529908657073975
    3. ' bin' → logprob: -5.279908657073975
    4. 'g' → logprob: -5.654908657073975
    5. '(bin' → logprob: -5.779908657073975
    6. '   ' → logprob: -6.529908657073975
    7. 'len' → logprob: -6.779908657073975
    8. '0' → logprob: -7.154908657073975
    9. '(n' → logprob: -7.154908657073975
    10. 'n' → logprob: -7.404908657073975

Token 76: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.004381824750453234
    2. '(j' → logprob: -5.5043816566467285
    3. '(' → logprob: -8.504382133483887
    4. '(~' → logprob: -9.879382133483887
    5. '((' → logprob: -10.754382133483887
    6. 'g' → logprob: -10.754382133483887
    7. 'j' → logprob: -12.504382133483887
    8. '(n' → logprob: -14.504382133483887
    9. '(G' → logprob: -15.254382133483887
    10. '(x' → logprob: -15.254382133483887

Token 77: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0001394161517964676
    2. 'used' → logprob: -9.250139236450195
    3. 't' → logprob: -11.375139236450195
    4. 'g' → logprob: -12.500139236450195
    5. '_USED' → logprob: -12.625139236450195
    6. 'd' → logprob: -12.875139236450195
    7. '_use' → logprob: -13.125139236450195
    8. 'Used' → logprob: -13.250139236450195
    9. '   ' → logprob: -13.250139236450195
    10. 'u' → logprob: -13.250139236450195

Token 78: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0009829123737290502
    2. ')[' → logprob: -7.250982761383057
    3. ' ).' → logprob: -8.750983238220215
    4. ')' → logprob: -10.375983238220215
    5. '&' → logprob: -10.500983238220215
    6. ' &' → logprob: -10.875983238220215
    7. '|' → logprob: -11.500983238220215
    8. '   ' → logprob: -12.000983238220215
    9. ' |' → logprob: -12.250983238220215
    10. ' ^' → logprob: -12.750983238220215

Token 79: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4617256056226324e-05
    2. '1' → logprob: -12.000014305114746
    3. '10' → logprob: -13.000014305114746
    4. ' count' → logprob: -13.125014305114746
    5. '   ' → logprob: -13.625014305114746
    6. '111' → logprob: -14.750014305114746
    7. 'bit' → logprob: -14.750014305114746
    8. ' ' → logprob: -14.875014305114746
    9. 'c' → logprob: -15.250014305114746
    10. '0' → logprob: -15.250014305114746

Token 80: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.013461604714393616
    2. '("' → logprob: -4.388461589813232
    3. '(' → logprob: -7.013461589813232
    4. '1' → logprob: -10.76346206665039
    5. '("("' → logprob: -10.88846206665039
    6. '()' → logprob: -12.01346206665039
    7. ''' → logprob: -12.76346206665039
    8. '(
' → logprob: -15.01346206665039
    9. '(None' → logprob: -15.01346206665039
    10. ')' → logprob: -15.26346206665039

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '"' → logprob: -18.0
    3. ' ' → logprob: -19.125
    4. ')' → logprob: -19.625
    5. '0' → logprob: -20.875
    6. '１' → logprob: -20.875
    7. ''' → logprob: -21.0
    8. '۱' → logprob: -21.25
    9. '")' → logprob: -22.25
    10. '   ' → logprob: -22.375

Token 82: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.22742076218128204
    2. ')' → logprob: -1.6024208068847656
    3. ')")' → logprob: -6.602420806884766
    4. '()' → logprob: -8.352420806884766
    5. '%' → logprob: -8.977420806884766
    6. '"' → logprob: -9.227420806884766
    7. ' ")' → logprob: -9.727420806884766
    8. '())' → logprob: -10.727420806884766
    9. ' )' → logprob: -11.352420806884766
    10. ')%' → logprob: -11.477420806884766

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005327554885298014
    2. ' if' → logprob: -6.0053277015686035
    3. '<|end|>' → logprob: -6.5053277015686035
    4. '    
' → logprob: -7.5053277015686035
    5. '
' → logprob: -8.255327224731445
    6. 'if' → logprob: -9.005327224731445
    7. '<|end|>' → logprob: -9.380327224731445
    8. ' ' → logprob: -9.380327224731445
    9. ')' → logprob: -9.505327224731445
    10. '#' → logprob: -10.005327224731445

Token 84: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06600596755743027
    2. ' if' → logprob: -2.9410059452056885
    3. '    
' → logprob: -5.316006183624268
    4. 'if' (adapté à ' if') → logprob: -6.191006183624268
    5. '<|end|>' → logprob: -6.941006183624268
    6. ' 
' → logprob: -7.191006183624268
    7. '    ' → logprob: -7.566006183624268
    8. '
' → logprob: -7.566006183624268
    9. '\n' → logprob: -8.19100570678711
    10. '<|end|>' → logprob: -8.44100570678711

Token 85: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.002068660454824567
    2. 'turn' → logprob: -6.377068519592285
    3. ' ' → logprob: -8.502068519592285
    4. ' g' → logprob: -9.127068519592285
    5. ' n' → logprob: -11.252068519592285
    6. ' j' → logprob: -11.502068519592285
    7. 'g' → logprob: -11.627068519592285
    8. '(turn' → logprob: -11.877068519592285
    9. ' t' → logprob: -12.502068519592285
    10. ' ' → logprob: -12.752068519592285

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20143477618694305
    2. '==' → logprob: -1.7014347314834595
    3. ' ' → logprob: -12.451435089111328
    4. ')' → logprob: -12.576435089111328
    5. ' >=' → logprob: -12.701435089111328
    6. '>=' → logprob: -12.951435089111328
    7. ' ' → logprob: -13.076435089111328
    8. '=' → logprob: -13.201435089111328
    9. ')==' → logprob: -13.201435089111328
    10. '()==' → logprob: -14.076435089111328

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20144248008728027
    2. 'n' → logprob: -1.7014424800872803
    3. ' ' → logprob: -11.07644271850586
    4. 'len' → logprob: -12.20144271850586
    5. ' len' → logprob: -12.95144271850586
    6. '	n' → logprob: -13.07644271850586
    7. '<|end|>' → logprob: -13.70144271850586
    8. '(n' → logprob: -14.32644271850586
    9. ' ' → logprob: -14.57644271850586
    10. '10' → logprob: -15.07644271850586

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006278486107476056
    2. ':return' → logprob: -7.6256279945373535
    3. ':
' → logprob: -9.000627517700195
    4. '):' → logprob: -11.250627517700195
    5. ' :' → logprob: -13.625627517700195
    6. '   ' → logprob: -13.750627517700195
    7. ' or' → logprob: -14.375627517700195
    8. ' and' → logprob: -16.125627517700195
    9. '):
' → logprob: -16.250627517700195
    10. ')' → logprob: -16.625627517700195

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01207031775265932
    2. '   ' → logprob: -4.512070178985596
    3. ' return' → logprob: -7.262070178985596
    4. ':' → logprob: -8.637070655822754
    5. 'return' → logprob: -9.637070655822754
    6. ':return' → logprob: -10.762070655822754
    7. '<|end|>' → logprob: -11.262070655822754
    8. ',' → logprob: -11.637070655822754
    9. ' ' → logprob: -11.887070655822754
    10. '      ' → logprob: -12.012070655822754

Token 90: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8700540065765381
    2. '       ' → logprob: -1.120054006576538
    3. ' return' → logprob: -1.620054006576538
    4. 'return' → logprob: -2.870054006576538
    5. ' ' → logprob: -8.870054244995117
    6. ' if' → logprob: -11.120054244995117
    7. '  ' → logprob: -11.120054244995117
    8. '    ' → logprob: -11.245054244995117
    9. '	return' → logprob: -11.620054244995117
    10. '     ' → logprob: -11.620054244995117

Token 91: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.023283565416932106
    2. 'g' → logprob: -3.7732834815979004
    3. ' j' → logprob: -11.148283958435059
    4. ' ' → logprob: -11.648283958435059
    5. '    ' → logprob: -12.148283958435059
    6. 'j' → logprob: -12.898283958435059
    7. '	g' → logprob: -13.273283958435059
    8. ' ' → logprob: -13.398283958435059
    9. '   ' → logprob: -13.523283958435059
    10. '(g' → logprob: -14.773283958435059

Token 92: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -12.00001049041748
    3. 'score' → logprob: -13.00001049041748
    4. '_s' → logprob: -14.25001049041748
    5. '_used' → logprob: -14.50001049041748
    6. '_scores' → logprob: -15.12501049041748
    7. '_SCORE' → logprob: -15.62501049041748
    8. '_sc' → logprob: -16.250009536743164
    9. '```' → logprob: -16.375009536743164
    10. '	score' → logprob: -17.250009536743164

Token 93: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.42912372946739197
    2. ' >' → logprob: -1.0541237592697144
    3. '<|end|>' → logprob: -8.679123878479004
    4. '<|end|>' → logprob: -9.304123878479004
    5. ' ' → logprob: -9.804123878479004
    6. ' ' → logprob: -9.929123878479004
    7. ')' → logprob: -11.304123878479004
    8. '...' → logprob: -12.554123878479004
    9. '">' → logprob: -12.554123878479004
    10. '==' → logprob: -12.804123878479004

Token 94: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005249414127320051
    2. ' j' → logprob: -5.255249500274658
    3. ' ' → logprob: -12.3802490234375
    4. '   ' → logprob: -12.9427490234375
    5. '	j' → logprob: -13.0677490234375
    6. '  ' → logprob: -14.4427490234375
    7. '```' → logprob: -14.4427490234375
    8. '_j' → logprob: -14.9427490234375
    9. '<|end|>' → logprob: -14.9427490234375
    10. 'jack' → logprob: -15.0052490234375

Token 95: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00017016702622640878
    2. 'score' → logprob: -9.00016975402832
    3. '_SCORE' → logprob: -10.50016975402832
    4. '_scores' → logprob: -11.75016975402832
    5. 'y' → logprob: -13.00016975402832
    6. 'Score' → logprob: -13.12516975402832
    7. '```' → logprob: -13.75016975402832
    8. 'k' → logprob: -14.50016975402832
    9. '-score' → logprob: -14.50016975402832
    10. 'g' → logprob: -14.62516975402832

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06841430813074112
    2. ':
' → logprob: -2.9434142112731934
    3. ':return' → logprob: -4.568414211273193
    4. '           ' → logprob: -6.443414211273193
    5. '       ' → logprob: -6.693414211273193
    6. ' return' → logprob: -9.443414688110352
    7. ',' → logprob: -9.568414688110352
    8. 'return' → logprob: -10.693414688110352
    9. ':
' → logprob: -10.943414688110352
    10. '   ' → logprob: -11.443414688110352

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04073621705174446
    2. ' return' → logprob: -3.790736198425293
    3. '
' → logprob: -5.040736198425293
    4. '       ' → logprob: -5.415736198425293
    5. 'return' → logprob: -5.415736198425293
    6. ':return' → logprob: -7.290736198425293
    7. '0' → logprob: -7.415736198425293
    8. '1' → logprob: -8.665736198425293
    9. ':
' → logprob: -8.790736198425293
    10. '               ' → logprob: -9.540736198425293

Token 98: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2712048888206482
    2. 'return' (adapté à ' return') → logprob: -1.521204948425293
    3. '           ' → logprob: -4.396204948425293
    4. '               ' → logprob: -5.146204948425293
    5. '       ' → logprob: -7.021204948425293
    6. '   ' → logprob: -10.271204948425293
    7. ':return' → logprob: -12.146204948425293
    8. '{return' → logprob: -12.396204948425293
    9. '	return' → logprob: -12.646204948425293
    10. ' ' → logprob: -12.771204948425293

Token 99: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044044392416253686
    2. ' ' → logprob: -8.25044059753418
    3. 'True' → logprob: -9.00044059753418
    4. '   ' → logprob: -10.87544059753418
    5. '100' → logprob: -11.12544059753418
    6. '0' → logprob: -12.00044059753418
    7. '(' → logprob: -12.37544059753418
    8. ' True' → logprob: -12.75044059753418
    9. '2' → logprob: -13.00044059753418
    10. '"' → logprob: -13.37544059753418

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012724967673420906
    2. ' ' → logprob: -7.126272678375244
    3. '0' → logprob: -8.376272201538086
    4. 'True' → logprob: -9.251272201538086
    5. '100' → logprob: -9.751272201538086
    6. '(' → logprob: -10.376272201538086
    7. '   ' → logprob: -11.376272201538086
    8. ' True' → logprob: -11.501272201538086
    9. '10' → logprob: -12.126272201538086
    10. '2' → logprob: -12.376272201538086

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13810063898563385
    2. ',)' → logprob: -2.5131006240844727
    3. ')' → logprob: -3.1381006240844727
    4. ',)
' → logprob: -5.888100624084473
    5. ' ,' → logprob: -6.638100624084473
    6. ' )' → logprob: -8.388100624084473
    7. ')
' → logprob: -8.638100624084473
    8. '0' → logprob: -9.888100624084473
    9. ' ' → logprob: -10.638100624084473
    10. '   ' → logprob: -11.638100624084473

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040886594797484577
    2. ' ' → logprob: -8.125409126281738
    3. '1' → logprob: -9.500409126281738
    4. '(' → logprob: -10.500409126281738
    5. ')' → logprob: -12.375409126281738
    6. '[' → logprob: -13.000409126281738
    7. '-' → logprob: -14.000409126281738
    8. ' (' → logprob: -14.125409126281738
    9. '   ' → logprob: -14.750409126281738
    10. '```' → logprob: -15.000409126281738

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000829759519547224
    2. '1' → logprob: -7.875829696655273
    3. ' ' → logprob: -8.375829696655273
    4. '(' → logprob: -8.625829696655273
    5. '[' → logprob: -11.250829696655273
    6. ')' → logprob: -12.250829696655273
    7. '"' → logprob: -12.375829696655273
    8. '-' → logprob: -12.625829696655273
    9. ' (' → logprob: -13.000829696655273
    10. 'g' → logprob: -13.563329696655273

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20215573906898499
    2. ',' → logprob: -1.9521557092666626
    3. ')
' → logprob: -3.452155828475952
    4. '       ' → logprob: -5.452155590057373
    5. ' ,' → logprob: -6.452155590057373
    6. ' )' → logprob: -6.577155590057373
    7. '   ' → logprob: -7.077155590057373
    8. ',)' → logprob: -7.077155590057373
    9. ' )
' → logprob: -9.077156066894531
    10. '           ' → logprob: -9.577156066894531

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00308240600861609
    2. ',' → logprob: -6.253082275390625
    3. '
' → logprob: -7.378082275390625
    4. '   ' → logprob: -8.378082275390625
    5. '<|end|>' → logprob: -9.003082275390625
    6. '        
' → logprob: -10.003082275390625
    7. ',
' → logprob: -10.128082275390625
    8. ' else' → logprob: -10.878082275390625
    9. ')' → logprob: -11.253082275390625
    10. 'else' → logprob: -11.378082275390625

Token 106: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01416738796979189
    2. ' else' → logprob: -5.264167308807373
    3. 'elif' (adapté à ' elif') → logprob: -5.389167308807373
    4. ' elif' → logprob: -5.639167308807373
    5. 'else' → logprob: -7.264167308807373
    6. '   ' → logprob: -10.764167785644531
    7. '
' → logprob: -11.389167785644531
    8. '           ' → logprob: -11.889167785644531
    9. ',' → logprob: -12.389167785644531
    10. '	elif' → logprob: -12.514167785644531

Token 107: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.693689227104187
    2. ' g' → logprob: -0.693689227104187
    3. 'j' → logprob: -7.943689346313477
    4. ' j' → logprob: -8.693689346313477
    5. '   ' → logprob: -12.193689346313477
    6. '           ' → logprob: -12.693689346313477
    7. ' ' → logprob: -12.881189346313477
    8. '	g' → logprob: -12.881189346313477
    9. ' ' → logprob: -13.381189346313477
    10. '    ' → logprob: -13.818689346313477

Token 108: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -5.9153885558771435e-06
    2. '_scores' → logprob: -13.625005722045898
    3. '_' → logprob: -13.750005722045898
    4. 'score' → logprob: -13.875005722045898
    5. '   ' → logprob: -14.500005722045898
    6. '_code' → logprob: -14.750005722045898
    7. '_s' → logprob: -14.875005722045898
    8. '_SCORE' → logprob: -15.125005722045898
    9. 'elif' → logprob: -15.250005722045898
    10. '==' → logprob: -16.1250057220459

Token 109: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.286554217338562
    2. ' ==' → logprob: -1.411554217338562
    3. '==' → logprob: -5.411554336547852
    4. '<' → logprob: -7.036554336547852
    5. ' ' → logprob: -10.786554336547852
    6. ',' → logprob: -11.786554336547852
    7. ' >' → logprob: -11.911554336547852
    8. '=' → logprob: -13.286554336547852
    9. '[' → logprob: -13.286554336547852
    10. '        ' → logprob: -13.661554336547852

Token 110: ' j' (ID: 441)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7024245262145996
    2. ' (' → logprob: -0.8274245262145996
    3. '0' → logprob: -3.3274245262145996
    4. 'j' → logprob: -4.2024245262146
    5. ' ' → logprob: -4.5774245262146
    6. ' j' → logprob: -5.3274245262146
    7. '1' → logprob: -7.3274245262146
    8. '           ' → logprob: -8.077425003051758
    9. '(j' → logprob: -8.702425003051758
    10. '   ' → logprob: -8.952425003051758

Token 111: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.534558552724775e-05
    2. 'score' → logprob: -10.750025749206543
    3. '   ' → logprob: -13.625025749206543
    4. 'Score' → logprob: -14.125025749206543
    5. '_SCORE' → logprob: -14.125025749206543
    6. '(' → logprob: -14.875025749206543
    7. ',' → logprob: -16.125024795532227
    8. '_scores' → logprob: -16.375024795532227
    9. ' ' → logprob: -16.625024795532227
    10. '       ' → logprob: -16.750024795532227

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6474882960319519
    2. '           ' → logprob: -1.3974883556365967
    3. ':
' → logprob: -2.0224883556365967
    4. '(' → logprob: -2.5224883556365967
    5. ' (' → logprob: -5.022488117218018
    6. ',' → logprob: -5.022488117218018
    7. '       ' → logprob: -5.897488117218018
    8. ':return' → logprob: -9.022488594055176
    9. '):
' → logprob: -9.147488594055176
    10. '          ' → logprob: -9.147488594055176

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03598584234714508
    2. '(' → logprob: -3.7859859466552734
    3. ' (' → logprob: -4.410985946655273
    4. ' return' → logprob: -7.785985946655273
    5. 'return' → logprob: -9.910985946655273
    6. '       ' → logprob: -10.535985946655273
    7. '          ' → logprob: -11.785985946655273
    8. ',' → logprob: -12.410985946655273
    9. '0' → logprob: -12.910985946655273
    10. '   ' → logprob: -13.160985946655273

Token 114: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27437707781791687
    2. ' (' → logprob: -1.5243771076202393
    3. ' return' → logprob: -4.39937686920166
    4. '           ' → logprob: -4.89937686920166
    5. 'return' (adapté à ' return') → logprob: -6.02437686920166
    6. '0' → logprob: -10.52437686920166
    7. '   ' → logprob: -12.14937686920166
    8. ' ' → logprob: -12.64937686920166
    9. '       ' → logprob: -12.89937686920166
    10. '               ' → logprob: -13.27437686920166

Token 115: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02324792370200157
    2. ' (' → logprob: -3.7732479572296143
    3. '0' → logprob: -13.148247718811035
    4. ' ' → logprob: -14.773247718811035
    5. '   ' → logprob: -17.39824867248535
    6. '           ' → logprob: -18.64824867248535
    7. '（' → logprob: -19.02324867248535
    8. ' ' → logprob: -19.27324867248535
    9. '  ' → logprob: -19.64824867248535
    10. '       ' → logprob: -20.14824867248535

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.25012493133545
    3. ' ' → logprob: -10.50012493133545
    4. ' (' → logprob: -14.50012493133545
    5. '   ' → logprob: -14.62512493133545
    6. '1' → logprob: -14.87512493133545
    7. '  ' → logprob: -17.062625885009766
    8. '           ' → logprob: -17.500125885009766
    9. '    ' → logprob: -17.625125885009766
    10. '2' → logprob: -17.625125885009766

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.625000953674316
    3. '1' → logprob: -16.25
    4. ',
' → logprob: -17.375
    5. '```' → logprob: -18.125
    6. '‌,' → logprob: -19.125
    7. '   ' → logprob: -19.25
    8. ',

' → logprob: -19.875
    9. '2' → logprob: -19.875
    10. '<|end|>' → logprob: -20.625

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017073206836357713
    2. ' ' → logprob: -6.376707553863525
    3. '0' → logprob: -12.251707077026367
    4. '   ' → logprob: -15.251707077026367
    5. '  ' → logprob: -17.189207077026367
    6. '-' → logprob: -17.251707077026367
    7. '(' → logprob: -17.876707077026367
    8. ')' → logprob: -17.939207077026367
    9. ' ' → logprob: -18.001707077026367
    10. '```' → logprob: -18.126707077026367

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. '0' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.250006675720215
    4. '-' → logprob: -14.125006675720215
    5. '```' → logprob: -17.1875057220459
    6. ')' → logprob: -17.3125057220459
    7. '(' → logprob: -17.6875057220459
    8. '2' → logprob: -18.0625057220459
    9. '   ' → logprob: -18.3750057220459
    10. 'return' → logprob: -18.8125057220459

Token 120: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07934851944446564
    2. ')' → logprob: -2.579348564147949
    3. ')
' → logprob: -7.829348564147949
    4. 'else' → logprob: -10.45434856414795
    5. '   ' → logprob: -11.82934856414795
    6. ',' → logprob: -11.95434856414795
    7. ' else' → logprob: -12.07934856414795
    8. '
' → logprob: -12.45434856414795
    9. '),' → logprob: -12.95434856414795
    10. '):
' → logprob: -13.07934856414795

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001106875017285347
    2. 'else' → logprob: -7.2511067390441895
    3. '   ' → logprob: -7.8761067390441895
    4. ' else' → logprob: -11.126107215881348
    5. 'return' → logprob: -13.251107215881348
    6. '
' → logprob: -15.376107215881348
    7. '           ' → logprob: -15.626107215881348
    8. '```' → logprob: -16.62610626220703
    9. ',' → logprob: -16.75110626220703
    10. '	' → logprob: -17.25110626220703

Token 122: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.560946524143219
    2. '       ' → logprob: -1.3109464645385742
    3. '   ' → logprob: -1.9359464645385742
    4. ' else' → logprob: -4.185946464538574
    5. 'return' → logprob: -8.435946464538574
    6. '
' → logprob: -10.435946464538574
    7. ' ' → logprob: -12.310946464538574
    8. '     ' → logprob: -12.435946464538574
    9. 'elif' → logprob: -12.560946464538574
    10. '  ' → logprob: -13.060946464538574

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16492880880832672
    2. ':
' → logprob: -2.664928913116455
    3. '           ' → logprob: -2.664928913116455
    4. '       ' → logprob: -4.789928913116455
    5. '   ' → logprob: -5.789928913116455
    6. ',' → logprob: -7.789928913116455
    7. '(' → logprob: -8.914928436279297
    8. ' :' → logprob: -8.914928436279297
    9. ':return' → logprob: -9.039928436279297
    10. '          ' → logprob: -9.164928436279297

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11996482312679291
    2. ' return' → logprob: -2.494964838027954
    3. 'return' → logprob: -4.369964599609375
    4. '(' → logprob: -4.994964599609375
    5. ' (' → logprob: -5.244964599609375
    6. '       ' → logprob: -5.244964599609375
    7. '   ' → logprob: -7.494964599609375
    8. ' ' → logprob: -12.119964599609375
    9. '               ' → logprob: -12.619964599609375
    10. '0' → logprob: -12.744964599609375

Token 125: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3870917856693268
    2. 'return' (adapté à ' return') → logprob: -1.1370917558670044
    3. '           ' → logprob: -8.887091636657715
    4. '       ' → logprob: -9.512091636657715
    5. '   ' → logprob: -11.887091636657715
    6. '	return' → logprob: -14.512091636657715
    7. '(' → logprob: -14.512091636657715
    8. ' (' → logprob: -14.512091636657715
    9. '
' → logprob: -16.13709259033203
    10. ' ' → logprob: -16.63709259033203

Token 126: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005532711511477828
    2. ' (' → logprob: -7.500553131103516
    3. '0' → logprob: -15.375553131103516
    4. ' ' → logprob: -20.000553131103516
    5. '((' → logprob: -22.375553131103516
    6. '   ' → logprob: -22.750553131103516
    7. '[' → logprob: -23.625553131103516
    8. '1' → logprob: -23.625553131103516
    9. '(
' → logprob: -23.625553131103516
    10. '<|end|>' → logprob: -23.625553131103516

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1144418865442276
    2. '1' → logprob: -2.6144418716430664
    3. '(' → logprob: -3.3644418716430664
    4. ' ' → logprob: -8.114441871643066
    5. ' (' → logprob: -9.989441871643066
    6. '   ' → logprob: -14.614441871643066
    7. ')' → logprob: -15.364441871643066
    8. '           ' → logprob: -15.989441871643066
    9. '[' → logprob: -16.551942825317383
    10. '2' → logprob: -16.739442825317383

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.750000953674316
    3. ',
' → logprob: -16.375
    4. '1' → logprob: -16.5
    5. '<|end|>' → logprob: -17.25
    6. '0' → logprob: -17.375
    7. '2' → logprob: -18.125
    8. ')' → logprob: -18.25
    9. '3' → logprob: -19.125
    10. ' ' → logprob: -19.25

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008922284469008446
    2. '0' → logprob: -4.883922100067139
    3. ' ' → logprob: -6.633922100067139
    4. '2' → logprob: -15.758922576904297
    5. '   ' → logprob: -17.008922576904297
    6. '```' → logprob: -17.008922576904297
    7. ')' → logprob: -17.071422576904297
    8. '3' → logprob: -18.508922576904297
    9. '(' → logprob: -18.883922576904297
    10. '
' → logprob: -19.071422576904297

Token 130: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011722482740879059
    2. '0' → logprob: -6.751172065734863
    3. ' ' → logprob: -13.126172065734863
    4. '2' → logprob: -17.68867301940918
    5. '```' → logprob: -18.56367301940918
    6. ')' → logprob: -18.68867301940918
    7. '-' → logprob: -19.12617301940918
    8. '(' → logprob: -19.50117301940918
    9. '   ' → logprob: -19.62617301940918
    10. ',' → logprob: -20.43867301940918

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002601438027340919
    2. '   ' → logprob: -8.500260353088379
    3. '       ' → logprob: -10.125260353088379
    4. ')
' → logprob: -11.125260353088379
    5. ' )' → logprob: -14.125260353088379
    6. '}' → logprob: -15.500260353088379
    7. ')}' → logprob: -15.500260353088379
    8. '
' → logprob: -15.875260353088379
    9. '))' → logprob: -16.250259399414062
    10. ')n' → logprob: -16.750259399414062

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05459709092974663
    2. '    
' → logprob: -3.3045971393585205
    3. 'res' → logprob: -5.054596900939941
    4. 'next' → logprob: -5.679596900939941
    5. 'result' → logprob: -5.804596900939941
    6. ' res' → logprob: -7.429596900939941
    7. '
' → logprob: -7.429596900939941
    8. ' next' → logprob: -7.804596900939941
    9. 'best' → logprob: -7.929596900939941
    10. 'max' → logprob: -8.429596900939941

Token 133: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.16604174673557281
    2. 'res' → logprob: -2.666041851043701
    3. 'win' → logprob: -3.666041851043701
    4. 'if' → logprob: -3.916041851043701
    5. 'result' → logprob: -4.541041851043701
    6. 'gw' → logprob: -5.041041851043701
    7. 'gate' → logprob: -5.291041851043701
    8. '   ' → logprob: -5.416041851043701
    9. 'total' → logprob: -6.291041851043701
    10. 'gp' → logprob: -6.541041851043701

Token 134: '_win' (ID: 63099)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.4764084219932556
    2. '_card' → logprob: -1.3514084815979004
    3. '_score' → logprob: -3.4764084815979004
    4. 'card' → logprob: -3.8514084815979004
    5. '_choice' → logprob: -4.3514084815979
    6. ' =' → logprob: -5.1014084815979
    7. '_gate' → logprob: -5.2264084815979
    8. '_next' → logprob: -5.3514084815979
    9. '_cards' → logprob: -5.6014084815979
    10. 'for' → logprob: -5.7264084815979

Token 135: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10049325972795486
    2. ',' → logprob: -2.3504931926727295
    3. '=' → logprob: -9.225493431091309
    4. ' =' → logprob: -9.850493431091309
    5. 'sum' → logprob: -10.350493431091309
    6. '_count' → logprob: -10.850493431091309
    7. '_cnt' → logprob: -11.225493431091309
    8. '_,' → logprob: -11.350493431091309
    9. ',w' → logprob: -11.600493431091309
    10. 'w' → logprob: -11.975493431091309

Token 136: ' j' (ID: 441)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.34173649549484253
    2. 'j' → logprob: -1.4667365550994873
    3. ' g' → logprob: -3.5917365550994873
    4. 'draw' → logprob: -4.091736316680908
    5. ' j' → logprob: -4.716736316680908
    6. ' ' → logprob: -6.091736316680908
    7. 'tie' → logprob: -6.591736316680908
    8. ' draw' → logprob: -7.966736316680908
    9. 'jack' → logprob: -7.966736316680908
    10. 'd' → logprob: -7.966736316680908

Token 137: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.6761459112167358
    2. '_' → logprob: -0.8011459112167358
    3. '_loss' → logprob: -3.4261460304260254
    4. '_draw' → logprob: -5.301146030426025
    5. 'lose' → logprob: -5.926146030426025
    6. '_lo' → logprob: -6.926146030426025
    7. 'win' → logprob: -7.176146030426025
    8. '_l' → logprob: -9.551145553588867
    9. '_fail' → logprob: -9.676145553588867
    10. 'loss' → logprob: -9.926145553588867

Token 138: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11159177869558334
    2. '=' → logprob: -2.3615918159484863
    3. ' =' → logprob: -4.486591815948486
    4. ' ,' → logprob: -10.361591339111328
    5. ',g' → logprob: -10.611591339111328
    6. ',j' → logprob: -13.486591339111328
    7. 'g' → logprob: -14.111591339111328
    8. '   ' → logprob: -14.861591339111328
    9. '=g' → logprob: -15.361591339111328
    10. ',total' → logprob: -15.486591339111328

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019480334594845772
    2. ' ' → logprob: -6.37694787979126
    3. '(' → logprob: -8.376948356628418
    4. '   ' → logprob: -11.376948356628418
    5. ' (' → logprob: -12.501948356628418
    6. '  ' → logprob: -15.501948356628418
    7. '
' → logprob: -16.3769474029541
    8. '    ' → logprob: -16.6269474029541
    9. '     ' → logprob: -16.8769474029541
    10. '       ' → logprob: -17.6269474029541

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011331788846291602
    2. '(' → logprob: -9.125113487243652
    3. ' ' → logprob: -12.375113487243652
    4. ' (' → logprob: -16.625112533569336
    5. '[' → logprob: -16.750112533569336
    6. '   ' → logprob: -17.000112533569336
    7. '
' → logprob: -17.625112533569336
    8. '1' → logprob: -19.250112533569336
    9. '  ' → logprob: -19.500112533569336
    10. '

' → logprob: -19.625112533569336

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ' ,' → logprob: -10.875022888183594
    3. ',
' → logprob: -13.375022888183594
    4. '0' → logprob: -13.875022888183594
    5. ',g' → logprob: -14.875022888183594
    6. '```' → logprob: -15.250022888183594
    7. '‌,' → logprob: -16.000022888183594
    8. '   ' → logprob: -16.125022888183594
    9. 'for' → logprob: -16.125022888183594
    10. ',j' → logprob: -16.250022888183594

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '1' → logprob: -17.63604736328125
    4. ' ' → logprob: -17.76104736328125
    5. ',' → logprob: -18.07354736328125
    6. '  ' → logprob: -18.26104736328125
    7. '<|end|>' → logprob: -18.32354736328125
    8. '   ' → logprob: -18.94854736328125
    9. '۰' → logprob: -19.38604736328125
    10. 'g' → logprob: -19.38604736328125

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -15.875006675720215
    4. '```' → logprob: -16.8750057220459
    5. 'g' → logprob: -17.9375057220459
    6. ',' → logprob: -18.0000057220459
    7. '<|end|>' → logprob: -18.5000057220459
    8. '۰' → logprob: -18.6250057220459
    9. ')' → logprob: -18.6875057220459
    10. '   ' → logprob: -18.8750057220459

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01571652851998806
    2. 'for' → logprob: -4.765716552734375
    3. '    
' → logprob: -5.640716552734375
    4. ' for' → logprob: -5.765716552734375
    5. '
' → logprob: -7.890716552734375
    6. 'current' → logprob: -12.515716552734375
    7. 'next' → logprob: -12.765716552734375
    8. '```' → logprob: -12.890716552734375
    9. '  
' → logprob: -13.390716552734375
    10. '        
' → logprob: -13.890716552734375

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04052479937672615
    2. ' for' → logprob: -3.54052472114563
    3. 'for' → logprob: -4.665524959564209
    4. '    
' → logprob: -6.790524959564209
    5. '
' → logprob: -9.04052448272705
    6. ' if' → logprob: -11.41552448272705
    7. '  
' → logprob: -11.91552448272705
    8. ',' → logprob: -12.16552448272705
    9. 'if' → logprob: -12.41552448272705
    10. 'current' → logprob: -12.54052448272705

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004731414839625359
    2. '   ' → logprob: -6.254731178283691
    3. ' for' → logprob: -6.254731178283691
    4. 'if' → logprob: -7.504731178283691
    5. 'mask' → logprob: -9.004731178283691
    6. 'available' → logprob: -9.379731178283691
    7. 'current' → logprob: -10.129731178283691
    8. 'remaining' → logprob: -10.379731178283691
    9. 'next' → logprob: -11.379731178283691
    10. '    
' → logprob: -11.379731178283691

Token 147: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011146977543830872
    2. 'i' → logprob: -4.5111470222473145
    3. ' card' → logprob: -10.261146545410156
    4. ' idx' → logprob: -10.261146545410156
    5. ' j' → logprob: -11.511146545410156
    6. ' k' → logprob: -12.511146545410156
    7. ' next' → logprob: -12.636146545410156
    8. '(i' → logprob: -13.511146545410156
    9. 'k' → logprob: -13.511146545410156
    10. ' ' → logprob: -13.636146545410156

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001597460824996233
    2. 'in' → logprob: -6.5015974044799805
    3. ' ' → logprob: -9.62659740447998
    4. ',' → logprob: -10.62659740447998
    5. 'range' → logprob: -13.25159740447998
    6. '  ' → logprob: -13.87659740447998
    7. '```' → logprob: -15.25159740447998
    8. ' ,' → logprob: -15.25159740447998
    9. '   ' → logprob: -15.62659740447998
    10. 'g' → logprob: -16.001598358154297

Token 149: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815134845674038
    2. 'range' → logprob: -4.01815128326416
    3. '[' → logprob: -14.76815128326416
    4. '	range' → logprob: -14.89315128326416
    5. '(range' → logprob: -15.14315128326416
    6. '   ' → logprob: -16.018152236938477
    7. ' ' → logprob: -16.143152236938477
    8. '```' → logprob: -16.643152236938477
    9. 'r' → logprob: -17.018152236938477
    10. '.range' → logprob: -17.643152236938477

Token 150: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2522048056125641
    2. 'n' → logprob: -1.5022047758102417
    3. '(len' → logprob: -9.377204895019531
    4. ' n' → logprob: -9.502204895019531
    5. 'len' → logprob: -9.502204895019531
    6. '(' → logprob: -10.627204895019531
    7. '   ' → logprob: -11.252204895019531
    8. '	n' → logprob: -13.502204895019531
    9. ' ' → logprob: -13.627204895019531
    10. ' (' → logprob: -14.127204895019531

Token 151: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048607468605041504
    2. '):' → logprob: -3.048607349395752
    3. '):
' → logprob: -11.17360782623291
    4. '   ' → logprob: -12.67360782623291
    5. '):

' → logprob: -13.17360782623291
    6. ' ):
' → logprob: -14.79860782623291
    7. ':
' → logprob: -15.42360782623291
    8. ':' → logprob: -15.54860782623291
    9. ')' → logprob: -16.548606872558594
    10. '():
' → logprob: -16.673606872558594

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18453584611415863
    2. '   ' → logprob: -2.4345357418060303
    3. '<|end|>' → logprob: -3.1845357418060303
    4. ' if' → logprob: -3.4345357418060303
    5. ' ' → logprob: -5.809535980224609
    6. '    ' → logprob: -6.059535980224609
    7. '<|end|>' → logprob: -7.434535980224609
    8. 'if' → logprob: -8.05953598022461
    9. '     ' → logprob: -8.43453598022461
    10. '  ' → logprob: -8.68453598022461

Token 153: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3520500361919403
    2. '       ' → logprob: -1.6020500659942627
    3. 'if' (adapté à ' if') → logprob: -2.3520500659942627
    4. '   ' → logprob: -9.602049827575684
    5. '	if' → logprob: -11.477049827575684
    6. '<|end|>' → logprob: -11.727049827575684
    7. '    ' → logprob: -12.102049827575684
    8. '<|end|>' → logprob: -13.477049827575684
    9. '           ' → logprob: -13.602049827575684
    10. ' ' → logprob: -14.102049827575684

Token 154: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.048731908202171326
    2. ' (' → logprob: -3.673731803894043
    3. '(not' → logprob: -4.423731803894043
    4. 'not' → logprob: -4.798731803894043
    5. '(j' → logprob: -6.673731803894043
    6. '(g' → logprob: -7.798731803894043
    7. '((' → logprob: -8.923731803894043
    8. ' ((' → logprob: -10.048731803894043
    9. ' j' → logprob: -10.173731803894043
    10. 'j' → logprob: -11.048731803894043

Token 155: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.6587883830070496
    2. ' (' → logprob: -0.7837883830070496
    3. '((' → logprob: -4.033788204193115
    4. ' ((' → logprob: -5.533788204193115
    5. '(j' → logprob: -5.658788204193115
    6. ' g' → logprob: -7.783788204193115
    7. '(' → logprob: -8.658788681030273
    8. 'g' → logprob: -9.283788681030273
    9. ' j' → logprob: -11.908788681030273
    10. 'j' → logprob: -12.533788681030273

Token 156: 'g' (ID: 70)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.8125205636024475
    2. 'g' → logprob: -0.9375205636024475
    3. 'j' → logprob: -2.4375205039978027
    4. '(j' → logprob: -3.0625205039978027
    5. ' (' → logprob: -4.062520503997803
    6. ' g' → logprob: -4.812520503997803
    7. ' j' → logprob: -5.812520503997803
    8. '(' → logprob: -6.437520503997803
    9. '   ' → logprob: -8.312520980834961
    10. '((' → logprob: -8.812520980834961

Token 157: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.6047699318733066e-05
    2. 'used' → logprob: -11.250016212463379
    3. '_' → logprob: -14.000016212463379
    4. '_use' → logprob: -14.375016212463379
    5. 'g' → logprob: -15.375016212463379
    6. 't' → logprob: -15.500016212463379
    7. '_USED' → logprob: -15.500016212463379
    8. '_unused' → logprob: -15.875016212463379
    9. '_using' → logprob: -15.875016212463379
    10. ' _' → logprob: -16.125015258789062

Token 158: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.0375058688223362
    2. '>>' → logprob: -3.537505865097046
    3. '&' → logprob: -4.912506103515625
    4. ' >>' → logprob: -7.912506103515625
    5. ' ' → logprob: -13.037506103515625
    6. ' ' → logprob: -14.037506103515625
    7. '＆' → logprob: -14.662506103515625
    8. '&(' → logprob: -14.662506103515625
    9. ' &
' → logprob: -15.287506103515625
    10. '   ' → logprob: -15.537506103515625

Token 159: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014250943437218666
    2. ' (' → logprob: -4.264250755310059
    3. '1' → logprob: -9.389250755310059
    4. ' ' → logprob: -13.139250755310059
    5. ')' → logprob: -13.389250755310059
    6. '           ' → logprob: -16.014251708984375
    7. '   ' → logprob: -16.014251708984375
    8. '       ' → logprob: -17.014251708984375
    9. '```' → logprob: -17.389251708984375
    10. '
' → logprob: -17.639251708984375

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.24310302757658e-05
    2. '(' → logprob: -9.625072479248047
    3. ' ' → logprob: -12.000072479248047
    4. ' (' → logprob: -16.250072479248047
    5. '   ' → logprob: -17.500072479248047
    6. '
' → logprob: -18.875072479248047
    7. '           ' → logprob: -19.125072479248047
    8. ')' → logprob: -20.500072479248047
    9. '```' → logprob: -21.125072479248047
    10. '{' → logprob: -21.875072479248047

Token 161: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.014168208464980125
    2. ' <<' → logprob: -4.2641682624816895
    3. '<' → logprob: -12.389167785644531
    4. '1' → logprob: -15.264167785644531
    5. '<<<' → logprob: -15.889167785644531
    6. ' ' → logprob: -17.26416778564453
    7. '   ' → logprob: -17.88916778564453
    8. ' ' → logprob: -17.88916778564453
    9. '>>' → logprob: -18.26416778564453
    10. '```' → logprob: -18.38916778564453

Token 162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7610454708337784e-05
    2. ' i' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.37502670288086
    4. ')i' → logprob: -18.50002670288086
    5. '	i' → logprob: -19.00002670288086
    6. '       ' → logprob: -19.50002670288086
    7. ' ' → logprob: -19.75002670288086
    8. '[i' → logprob: -19.87502670288086
    9. ')' → logprob: -20.25002670288086
    10. '           ' → logprob: -20.62502670288086

Token 163: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.4484342634677887
    2. ')):
' → logprob: -1.1984342336654663
    3. '))' → logprob: -2.823434352874756
    4. ')):
' → logprob: -8.573433876037598
    5. ')' → logprob: -9.323433876037598
    6. ':' → logprob: -11.573433876037598
    7. ' ))' → logprob: -12.573433876037598
    8. '):' → logprob: -12.823433876037598
    9. '):
' → logprob: -12.823433876037598
    10. '0' → logprob: -13.573433876037598

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015924450010061264
    2. ':' → logprob: -5.515924453735352
    3. ' and' → logprob: -5.515924453735352
    4. ' if' → logprob: -5.640924453735352
    5. ' for' → logprob: -6.390924453735352
    6. ':
' → logprob: -7.140924453735352
    7. ' continue' → logprob: -7.640924453735352
    8. '       ' → logprob: -8.390924453735352
    9. '):
' → logprob: -8.890924453735352
    10. ',' → logprob: -9.015924453735352

Token 165: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8526782989501953
    2. ' new' → logprob: -1.2276782989501953
    3. '           ' → logprob: -1.9776782989501953
    4. ' next' → logprob: -3.3526782989501953
    5. 'new' → logprob: -3.4776782989501953
    6. 'if' → logprob: -3.6026782989501953
    7. ' g' → logprob: -4.602678298950195
    8. 'next' → logprob: -4.852678298950195
    9. ' nj' → logprob: -4.977678298950195
    10. 'g' → logprob: -5.227678298950195

Token 166: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03877339884638786
    2. ' j' → logprob: -3.28877329826355
    3. 'k' → logprob: -7.538773536682129
    4. '   ' → logprob: -8.788773536682129
    5. ' k' → logprob: -10.913773536682129
    6. ' ' → logprob: -11.913773536682129
    7. '    ' → logprob: -11.913773536682129
    8. 'range' → logprob: -12.163773536682129
    9. '           ' → logprob: -13.038773536682129
    10. '  ' → logprob: -13.038773536682129

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00013905855303164572
    2. 'in' → logprob: -9.000139236450195
    3. ' ' → logprob: -12.250139236450195
    4. 'n' → logprob: -12.750139236450195
    5. '<|end|>' → logprob: -13.375139236450195
    6. '   ' → logprob: -13.750139236450195
    7. 'range' → logprob: -13.875139236450195
    8. 's' → logprob: -14.250139236450195
    9. '        ' → logprob: -14.375139236450195
    10. '    ' → logprob: -14.625139236450195

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614808320999146
    2. ' range' → logprob: -4.758615016937256
    3. '(range' → logprob: -15.883614540100098
    4. ' ' → logprob: -16.258615493774414
    5. '   ' → logprob: -17.133615493774414
    6. '	range' → logprob: -17.633615493774414
    7. '
' → logprob: -18.008615493774414
    8. '  ' → logprob: -18.758615493774414
    9. 'in' → logprob: -18.883615493774414
    10. '(' → logprob: -19.133615493774414

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014210758730769157
    2. 'n' → logprob: -4.2642107009887695
    3. '(len' → logprob: -10.13921070098877
    4. 'len' → logprob: -12.76421070098877
    5. '(' → logprob: -13.01421070098877
    6. '   ' → logprob: -13.88921070098877
    7. '           ' → logprob: -14.26421070098877
    8. '
' → logprob: -15.01421070098877
    9. '       ' → logprob: -15.26421070098877
    10. '	n' → logprob: -15.38921070098877

Token 170: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029917683452367783
    2. '):' → logprob: -3.5299177169799805
    3. '):
' → logprob: -9.52991771697998
    4. '           ' → logprob: -9.65491771697998
    5. '):

' → logprob: -11.40491771697998
    6. '               ' → logprob: -11.77991771697998
    7. '       ' → logprob: -11.90491771697998
    8. ' ):
' → logprob: -13.65491771697998
    9. '   ' → logprob: -14.02991771697998
    10. ',' → logprob: -14.40491771697998

Token 171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010663634166121483
    2. '           ' → logprob: -4.7606635093688965
    3. ' if' → logprob: -6.5106635093688965
    4. '       ' → logprob: -7.6356635093688965
    5. '<|end|>' → logprob: -10.885663986206055
    6. 'if' → logprob: -11.010663986206055
    7. '	       ' → logprob: -11.135663986206055
    8. '   ' → logprob: -12.260663986206055
    9. '                   ' → logprob: -12.510663986206055
    10. '```' → logprob: -12.885663986206055

Token 172: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11714082956314087
    2. ' if' → logprob: -2.242140769958496
    3. 'if' (adapté à ' if') → logprob: -6.242140769958496
    4. '           ' → logprob: -6.242140769958496
    5. '                   ' → logprob: -7.867140769958496
    6. '                ' → logprob: -10.992140769958496
    7. '   ' → logprob: -12.617140769958496
    8. ' ' → logprob: -12.742140769958496
    9. '       ' → logprob: -12.867140769958496
    10. '            ' → logprob: -13.867140769958496

Token 173: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25288867950439453
    2. ' not' → logprob: -1.5028886795043945
    3. '(not' → logprob: -7.0028886795043945
    4. '               ' → logprob: -10.127888679504395
    5. '                   ' → logprob: -12.627888679504395
    6. '   ' → logprob: -12.627888679504395
    7. '           ' → logprob: -13.377888679504395
    8. ' (' → logprob: -15.002888679504395
    9. '(j' → logprob: -15.127888679504395
    10. '	not' → logprob: -15.127888679504395

Token 174: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.31351935863494873
    2. ' (' → logprob: -1.3135193586349487
    3. '(' → logprob: -8.313519477844238
    4. ' j' → logprob: -11.813519477844238
    5. 'j' → logprob: -12.313519477844238
    6. '[j' → logprob: -16.313518524169922
    7. '(J' → logprob: -16.313518524169922
    8. '   ' → logprob: -16.438518524169922
    9. ' ' → logprob: -16.563518524169922
    10. ',j' → logprob: -17.438518524169922

Token 175: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010044458322227001
    2. '(j' → logprob: -4.760044574737549
    3. ' j' → logprob: -6.635044574737549
    4. ' (' → logprob: -9.26004409790039
    5. '(' → logprob: -12.26004409790039
    6. '[j' → logprob: -12.51004409790039
    7. '   ' → logprob: -12.63504409790039
    8. '	j' → logprob: -13.13504409790039
    9. '
' → logprob: -14.01004409790039
    10. ',j' → logprob: -14.38504409790039

Token 176: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -7.822646693966817e-06
    2. 'used' → logprob: -12.000007629394531
    3. '_j' → logprob: -14.250007629394531
    4. 'Used' → logprob: -15.250007629394531
    5. '_USED' → logprob: -15.375007629394531
    6. '_user' → logprob: -16.62500762939453
    7. '[j' → logprob: -16.75000762939453
    8. '_using' → logprob: -16.87500762939453
    9. '_use' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.12500762939453

Token 177: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.10020828247070312
    2. '&' → logprob: -2.350208282470703
    3. '&amp' → logprob: -13.600208282470703
    4. '&(' → logprob: -16.100208282470703
    5. ' ' → logprob: -16.350208282470703
    6. ')' → logprob: -17.225208282470703
    7. ' &
' → logprob: -17.475208282470703
    8. '＆' → logprob: -17.475208282470703
    9. '&
' → logprob: -17.975208282470703
    10. ' &(' → logprob: -18.100208282470703

Token 178: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10020990669727325
    2. '(' → logprob: -2.350209951400757
    3. '               ' → logprob: -13.350210189819336
    4. ' ' → logprob: -14.350210189819336
    5. '                ' → logprob: -14.975210189819336
    6. '                   ' → logprob: -15.475210189819336
    7. ')' → logprob: -16.350210189819336
    8. '              ' → logprob: -16.475210189819336
    9. '  ' → logprob: -16.725210189819336
    10. '1' → logprob: -16.850210189819336

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008640335872769356
    2. '(' → logprob: -4.758640289306641
    3. ' (' → logprob: -11.13364028930664
    4. ' ' → logprob: -11.63364028930664
    5. '               ' → logprob: -13.88364028930664
    6. '                   ' → logprob: -14.13364028930664
    7. '   ' → logprob: -15.63364028930664
    8. '           ' → logprob: -15.63364028930664
    9. '
' → logprob: -16.50864028930664
    10. ')' → logprob: -16.75864028930664

Token 180: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.40993762016296387
    2. ' <<' → logprob: -1.1599376201629639
    3. '1' → logprob: -3.909937620162964
    4. '           ' → logprob: -7.034937858581543
    5. '<' → logprob: -7.159937858581543
    6. '               ' → logprob: -7.659937858581543
    7. ' ' → logprob: -8.284937858581543
    8. '   ' → logprob: -9.284937858581543
    9. '                   ' → logprob: -9.409937858581543
    10. ' <' → logprob: -9.534937858581543

Token 181: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015041481237858534
    2. ' j' → logprob: -6.501503944396973
    3. '                   ' → logprob: -13.501503944396973
    4. '               ' → logprob: -15.001503944396973
    5. ')' → logprob: -17.62650489807129
    6. '	j' → logprob: -17.75150489807129
    7. '   ' → logprob: -17.87650489807129
    8. ' ' → logprob: -18.62650489807129
    9. '                ' → logprob: -18.87650489807129
    10. '                  ' → logprob: -19.12650489807129

Token 182: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.5963239669799805
    2. ')):' → logprob: -0.8463239669799805
    3. '))' → logprob: -3.9713239669799805
    4. ')):
' → logprob: -7.4713239669799805
    5. ')' → logprob: -7.8463239669799805
    6. '):
' → logprob: -8.84632396697998
    7. '):' → logprob: -9.09632396697998
    8. '               ' → logprob: -9.84632396697998
    9. '                   ' → logprob: -10.59632396697998
    10. '           ' → logprob: -11.97132396697998

Token 183: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0532040148973465
    2. ':' → logprob: -3.05320405960083
    3. ' :' → logprob: -6.67820405960083
    4. '):' → logprob: -7.17820405960083
    5. ':
' → logprob: -7.42820405960083
    6. ',' → logprob: -7.55320405960083
    7. '                       ' → logprob: -7.80320405960083
    8. '               ' → logprob: -8.053203582763672
    9. '                           ' → logprob: -8.928203582763672
    10. '           ' → logprob: -9.053203582763672

Token 184: ' g' (ID: 329)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.0388555526733398
    2. ' if' → logprob: -1.4138555526733398
    3. '                   ' → logprob: -1.5388555526733398
    4. ' next' → logprob: -2.41385555267334
    5. '                       ' → logprob: -3.16385555267334
    6. 'new' → logprob: -4.03885555267334
    7. ' g' → logprob: -4.41385555267334
    8. 'next' → logprob: -4.91385555267334
    9. 'if' → logprob: -5.03885555267334
    10. 'g' (adapté à ' g') → logprob: -6.41385555267334

Token 185: '_c' (ID: 1303)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.36918649077415466
    2. '_used' → logprob: -1.869186520576477
    3. '_win' → logprob: -2.3691864013671875
    4. '                   ' → logprob: -4.1191864013671875
    5. '_w' → logprob: -4.6191864013671875
    6. '_next' → logprob: -4.7441864013671875
    7. '_new' → logprob: -4.7441864013671875
    8. '_card' → logprob: -5.1191864013671875
    9. 'score' → logprob: -6.8691864013671875
    10. '_play' → logprob: -6.9941864013671875

Token 186: ' =' (ID: 314)
  Prédit: 'ard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -0.5425590872764587
    2. 'ards' → logprob: -2.5425591468811035
    3. '_value' → logprob: -2.6675591468811035
    4. '_card' → logprob: -2.7925591468811035
    5. '_score' → logprob: -3.0425591468811035
    6. '_gate' → logprob: -3.1675591468811035
    7. '_cards' → logprob: -3.2925591468811035
    8. '_' → logprob: -3.4175591468811035
    9. ' =' → logprob: -4.5425591468811035
    10. '_val' → logprob: -5.2925591468811035

Token 187: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.6327028870582581
    2. ' gate' → logprob: -0.7577028870582581
    3. '                   ' → logprob: -10.507702827453613
    4. '_gate' → logprob: -10.507702827453613
    5. 'gateway' → logprob: -10.757702827453613
    6. ' gateway' → logprob: -11.757702827453613
    7. 'Gate' → logprob: -13.007702827453613
    8. 'g' → logprob: -13.070202827453613
    9. ' ' → logprob: -13.257702827453613
    10. 'gat' → logprob: -13.632702827453613

Token 188: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.45848218582978e-06
    2. '_c' → logprob: -14.00000286102295
    3. '_scores' → logprob: -14.62500286102295
    4. '_tokens' → logprob: -15.00000286102295
    5. '_card' → logprob: -15.75000286102295
    6. '[' → logprob: -15.75000286102295
    7. 'cards' → logprob: -16.500001907348633
    8. '_codes' → logprob: -17.125001907348633
    9. 'Cards' → logprob: -17.250001907348633
    10. '_' → logprob: -17.250001907348633

Token 189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -12.25001049041748
    3. '[j' → logprob: -12.87501049041748
    4. '                   ' → logprob: -13.37501049041748
    5. '[g' → logprob: -14.87501049041748
    6. ' [' → logprob: -15.50001049041748
    7. '               ' → logprob: -15.75001049041748
    8. 'i' → logprob: -16.125009536743164
    9. '   ' → logprob: -16.750009536743164
    10. '           ' → logprob: -16.750009536743164

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7285466194152832
    2. ']
' → logprob: -0.7285466194152832
    3. ')
' → logprob: -3.853546619415283
    4. '                   ' → logprob: -5.103546619415283
    5. ')' → logprob: -5.103546619415283
    6. '[' → logprob: -8.228546142578125
    7. '])
' → logprob: -8.853546142578125
    8. ']

' → logprob: -8.978546142578125
    9. ' ]
' → logprob: -8.978546142578125
    10. ']
' → logprob: -8.978546142578125

Token 191: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022030405700206757
    2. '                    
' → logprob: -4.647030353546143
    3. '<|end|>' → logprob: -4.897030353546143
    4. ' 
' → logprob: -7.022030353546143
    5. '
' → logprob: -7.147030353546143
    6. '                    ' → logprob: -7.522030353546143
    7. '  
' → logprob: -8.2720308303833
    8. ',' → logprob: -8.2720308303833
    9. '<|end|>' → logprob: -8.2720308303833
    10. ' and' → logprob: -8.3970308303833

Token 192: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.06540561467409134
    2. ' j' → logprob: -2.8154056072235107
    3. '                   ' → logprob: -5.69040584564209
    4. '                    ' → logprob: -11.31540584564209
    5. 'jack' → logprob: -11.44040584564209
    6. '                    
' → logprob: -11.81540584564209
    7. ' ' → logprob: -12.31540584564209
    8. ' jack' → logprob: -12.94040584564209
    9. '                  ' → logprob: -13.06540584564209
    10. '   ' → logprob: -13.31540584564209

Token 193: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.005402845796197653
    2. '_' → logprob: -5.2554030418396
    3. 'c' → logprob: -10.380402565002441
    4. ' =' → logprob: -10.505402565002441
    5. '_s' → logprob: -10.630402565002441
    6. '_j' → logprob: -10.755402565002441
    7. '=' → logprob: -11.130402565002441
    8. ' _' → logprob: -12.005402565002441
    9. '_code' → logprob: -12.630402565002441
    10. '_space' → logprob: -12.755402565002441

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868733048439026
    2. ' =' → logprob: -1.1368732452392578
    3. ' ' → logprob: -14.011873245239258
    4. '                   ' → logprob: -14.511873245239258
    5. '=
' → logprob: -15.761873245239258
    6. ',' → logprob: -15.761873245239258
    7. '                    ' → logprob: -16.261873245239258
    8. ' =
' → logprob: -16.386873245239258
    9. ')' → logprob: -16.511873245239258
    10. '=j' → logprob: -16.511873245239258

Token 195: ' jack' (ID: 21273)
  Prédit: 'jack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jack' → logprob: -0.026305755600333214
    2. ' jack' → logprob: -3.651305675506592
    3. 'j' → logprob: -13.40130615234375
    4. 'john' → logprob: -13.52630615234375
    5. 'jac' → logprob: -14.40130615234375
    6. '                   ' → logprob: -14.77630615234375
    7. '               ' → logprob: -15.52630615234375
    8. '   ' → logprob: -15.52630615234375
    9. '[j' → logprob: -15.65130615234375
    10. 'jax' → logprob: -16.02630615234375

Token 196: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.522638169466518e-05
    2. '_cards' → logprob: -10.625024795532227
    3. 'yc' → logprob: -15.500024795532227
    4. 'cards' → logprob: -15.750024795532227
    5. '```' → logprob: -15.875024795532227
    6. 'yj' → logprob: -16.750024795532227
    7. '_y' → logprob: -17.000024795532227
    8. ' y' → logprob: -17.250024795532227
    9. '[y' → logprob: -17.375024795532227
    10. 'y's' → logprob: -17.375024795532227

Token 197: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00030281138606369495
    2. '[j' → logprob: -8.125303268432617
    3. '```' → logprob: -13.750303268432617
    4. '[' → logprob: -13.875303268432617
    5. 'cards' → logprob: -14.125303268432617
    6. '_j' → logprob: -14.375303268432617
    7. 'Cards' → logprob: -14.375303268432617
    8. '_c' → logprob: -14.875303268432617
    9. '_chars' → logprob: -15.000303268432617
    10. '_codes' → logprob: -15.000303268432617

Token 198: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.65707261255011e-06
    2. '                   ' → logprob: -12.250008583068848
    3. 'j' → logprob: -12.625008583068848
    4. '[' → logprob: -16.125009536743164
    5. '[i' → logprob: -16.125009536743164
    6. ' [' → logprob: -16.875009536743164
    7. '```' → logprob: -17.125009536743164
    8. '               ' → logprob: -17.375009536743164
    9. ' j' → logprob: -17.625009536743164
    10. '[js' → logprob: -18.000009536743164

Token 199: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15187551081180573
    2. '                   ' → logprob: -2.4018754959106445
    3. ')
' → logprob: -3.0268754959106445
    4. '<|end|>' → logprob: -7.2768754959106445
    5. ']' → logprob: -7.5268754959106445
    6. '])' → logprob: -8.901875495910645
    7. '               ' → logprob: -9.776875495910645
    8. ' )' → logprob: -10.026875495910645
    9. '<|end|>' → logprob: -10.026875495910645
    10. ')]' → logprob: -10.276875495910645

Token 200: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01065643597394228
    2. '                    
' → logprob: -4.885656356811523
    3. ' if' → logprob: -7.010656356811523
    4. '                    ' → logprob: -7.760656356811523
    5. ' 
' → logprob: -8.010656356811523
    6. '                        
' → logprob: -8.510656356811523
    7. '                       ' → logprob: -8.635656356811523
    8. '
' → logprob: -8.635656356811523
    9. '                   
' → logprob: -8.760656356811523
    10. '                     
' → logprob: -9.010656356811523

Token 201: ' g' (ID: 329)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3673517405986786
    2. ' new' → logprob: -1.617351770401001
    3. 'ng' → logprob: -3.367351770401001
    4. 'next' → logprob: -3.492351770401001
    5. '                   ' → logprob: -3.992351770401001
    6. 'g' (adapté à ' g') → logprob: -4.992351531982422
    7. ' next' → logprob: -4.992351531982422
    8. '           ' → logprob: -6.117351531982422
    9. 'if' → logprob: -6.242351531982422
    10. ' ng' → logprob: -6.242351531982422

Token 202: '_s' (ID: 1278)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.23849298059940338
    2. '_w' → logprob: -2.613492965698242
    3. '_win' → logprob: -3.363492965698242
    4. '_new' → logprob: -3.488492965698242
    5. '_next' → logprob: -3.863492965698242
    6. 'w' → logprob: -4.363492965698242
    7. '                   ' → logprob: -5.113492965698242
    8. 'used' → logprob: -5.363492965698242
    9. 'new' → logprob: -5.488492965698242
    10. '           ' → logprob: -5.613492965698242

Token 203: ',' (ID: 11)
  Prédit: '_new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.8543294072151184
    2. 'core' → logprob: -0.9793294072151184
    3. 'new' → logprob: -1.8543293476104736
    4. '_next' → logprob: -3.9793293476104736
    5. 'n' → logprob: -4.729329586029053
    6. '_n' → logprob: -5.479329586029053
    7. 'next' → logprob: -6.104329586029053
    8. 'c' → logprob: -6.354329586029053
    9. '_' → logprob: -7.229329586029053
    10. 'ub' → logprob: -7.479329586029053

Token 204: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008121283026412129
    2. ' j' → logprob: -7.12581205368042
    3. 'g' → logprob: -12.000812530517578
    4. ' ' → logprob: -14.500812530517578
    5. '   ' → logprob: -15.000812530517578
    6. '  ' → logprob: -15.375812530517578
    7. '(j' → logprob: -15.500812530517578
    8. '	j' → logprob: -15.625812530517578
    9. '    ' → logprob: -16.750812530517578
    10. ' g' → logprob: -17.750812530517578

Token 205: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.005269565153867006
    2. '_score' → logprob: -5.505269527435303
    3. '_' → logprob: -7.755269527435303
    4. '_c' → logprob: -8.755270004272461
    5. '                   ' → logprob: -8.755270004272461
    6. '_scores' → logprob: -9.505270004272461
    7. 's' → logprob: -9.630270004272461
    8. '_w' → logprob: -10.005270004272461
    9. ' =' → logprob: -10.005270004272461
    10. '_used' → logprob: -10.005270004272461

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07021695375442505
    2. ' =' → logprob: -2.6952168941497803
    3. ',' → logprob: -8.32021713256836
    4. '+=' → logprob: -11.32021713256836
    5. ' +=' → logprob: -11.57021713256836
    6. '+' → logprob: -11.94521713256836
    7. ' ' → logprob: -12.82021713256836
    8. '_new' → logprob: -13.69521713256836
    9. 'new' → logprob: -13.94521713256836
    10. '_' → logprob: -14.07021713256836

Token 207: ' g' (ID: 329)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.014608257450163364
    2. 'g' → logprob: -4.639608383178711
    3. '0' → logprob: -5.639608383178711
    4. ' dfs' → logprob: -6.889608383178711
    5. '(' → logprob: -9.764608383178711
    6. ' g' → logprob: -10.014608383178711
    7. '   ' → logprob: -10.014608383178711
    8. '
' → logprob: -10.389608383178711
    9. 'df' → logprob: -11.139608383178711
    10. '(g' → logprob: -11.264608383178711

Token 208: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.003818606724962592
    2. '_c' → logprob: -6.003818511962891
    3. '_s' → logprob: -7.378818511962891
    4. 'score' → logprob: -8.25381851196289
    5. 'c' → logprob: -9.00381851196289
    6. '_win' → logprob: -9.00381851196289
    7. 's' → logprob: -9.25381851196289
    8. 'win' → logprob: -10.62881851196289
    9. 'dfs' → logprob: -10.75381851196289
    10. 'core' → logprob: -11.37881851196289

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12080060690641403
    2. '+' → logprob: -2.495800495147705
    3. ' +' → logprob: -3.620800495147705
    4. '+,' → logprob: -5.870800495147705
    5. '
' → logprob: -7.120800495147705
    6. ' ,' → logprob: -8.120800971984863
    7. '                   ' → logprob: -8.870800971984863
    8. '+j' → logprob: -8.995800971984863
    9. '+
' → logprob: -9.245800971984863
    10. ',j' → logprob: -9.245800971984863

Token 210: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10021066665649414
    2. ' j' → logprob: -2.350210666656494
    3. '                   ' → logprob: -13.225210189819336
    4. ' ' → logprob: -14.725210189819336
    5. '   ' → logprob: -15.225210189819336
    6. '                    ' → logprob: -15.600210189819336
    7. '                  ' → logprob: -15.725210189819336
    8. '                       ' → logprob: -15.850210189819336
    9. '```' → logprob: -15.850210189819336
    10. '
' → logprob: -15.975210189819336

Token 211: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.547789674485102e-05
    2. 'score' → logprob: -10.500035285949707
    3. '_s' → logprob: -12.250035285949707
    4. '+' → logprob: -13.625035285949707
    5. '_scores' → logprob: -14.500035285949707
    6. '_' → logprob: -14.750035285949707
    7. '_code' → logprob: -15.500035285949707
    8. 's' → logprob: -16.000036239624023
    9. 'Score' → logprob: -16.000036239624023
    10. '_c' → logprob: -16.625036239624023

Token 212: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009546407498419285
    2. '
' → logprob: -5.634546279907227
    3. '<|end|>' → logprob: -5.634546279907227
    4. '                    
' → logprob: -6.759546279907227
    5. ',' → logprob: -7.759546279907227
    6. '<|end|>' → logprob: -8.384546279907227
    7. '                    ' → logprob: -9.384546279907227
    8. '                   
' → logprob: -9.884546279907227
    9. '               ' → logprob: -10.009546279907227
    10. '                  ' → logprob: -10.009546279907227

Token 213: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008869222365319729
    2. '
' → logprob: -7.875886917114258
    3. '                    
' → logprob: -8.250886917114258
    4. '<|end|>' → logprob: -9.125886917114258
    5. '<|end|>' → logprob: -10.500886917114258
    6. ' if' → logprob: -10.500886917114258
    7. 'if' → logprob: -10.625886917114258
    8. '                    ' → logprob: -11.375886917114258
    9. '		           ' → logprob: -12.375886917114258
    10. '```' → logprob: -12.500886917114258

Token 214: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0194175373762846
    2. ' if' → logprob: -4.519417762756348
    3. 'if' (adapté à ' if') → logprob: -4.894417762756348
    4. '                    
' → logprob: -8.144417762756348
    5. '                    ' → logprob: -8.644417762756348
    6. '
' → logprob: -9.519417762756348
    7. '               ' → logprob: -9.769417762756348
    8. '           ' → logprob: -10.394417762756348
    9. '   ' → logprob: -10.394417762756348
    10. '                  ' → logprob: -10.519417762756348

Token 215: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.22596698999404907
    2. 'g' → logprob: -1.6009669303894043
    3. '(g' → logprob: -8.725967407226562
    4. ' (' → logprob: -8.850967407226562
    5. '                   ' → logprob: -8.850967407226562
    6. ' ' → logprob: -10.350967407226562
    7. '   ' → logprob: -11.038467407226562
    8. '(' → logprob: -11.288467407226562
    9. ' gate' → logprob: -11.788467407226562
    10. '    ' → logprob: -12.413467407226562

Token 216: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.531315314830863e-06
    2. '_s' → logprob: -13.625003814697266
    3. '_' → logprob: -13.750003814697266
    4. ' ' → logprob: -15.125003814697266
    5. 'c' → logprob: -15.375003814697266
    6. '   ' → logprob: -15.625003814697266
    7. ' _' → logprob: -15.750003814697266
    8. '_score' → logprob: -16.375003814697266
    9. '_d' → logprob: -17.500003814697266
    10. 's' → logprob: -17.500003814697266

Token 217: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.52330082654953
    2. '>' → logprob: -0.89830082654953
    3. ' ' → logprob: -9.273301124572754
    4. ' <' → logprob: -9.773301124572754
    5. '<' → logprob: -11.398301124572754
    6. ' >
' → logprob: -12.648301124572754
    7. ' !=' → logprob: -13.773301124572754
    8. ' ==' → logprob: -13.773301124572754
    9. ' >
' → logprob: -13.773301124572754
    10. '==' → logprob: -13.898301124572754

Token 218: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03805331513285637
    2. ' j' → logprob: -3.288053274154663
    3. '                   ' → logprob: -11.538053512573242
    4. ' ' → logprob: -14.038053512573242
    5. '                  ' → logprob: -15.413053512573242
    6. '   ' → logprob: -15.538053512573242
    7. '_j' → logprob: -15.538053512573242
    8. '	j' → logprob: -16.038053512573242
    9. '                       ' → logprob: -16.288053512573242
    10. '                    ' → logprob: -16.413053512573242

Token 219: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.0802738870552275e-05
    2. 'c' → logprob: -12.50001049041748
    3. '_' → logprob: -13.00001049041748
    4. '_s' → logprob: -13.12501049041748
    5. '_j' → logprob: -14.37501049041748
    6. '   ' → logprob: -15.43751049041748
    7. '_g' → logprob: -16.000011444091797
    8. '
' → logprob: -16.125011444091797
    9. '_i' → logprob: -16.125011444091797
    10. 's' → logprob: -16.250011444091797

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35894906520843506
    2. ':
' → logprob: -1.233949065208435
    3. '                       ' → logprob: -4.608949184417725
    4. '                   ' → logprob: -8.233948707580566
    5. '):
' → logprob: -9.483948707580566
    6. ' and' → logprob: -10.733948707580566
    7. '                           ' → logprob: -11.108948707580566
    8. ':

' → logprob: -11.233948707580566
    9. ',' → logprob: -11.358948707580566
    10. ' :
' → logprob: -11.358948707580566

Token 221: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010353730991482735
    2. '                        
' → logprob: -5.8853535652160645
    3. ':
' → logprob: -6.1353535652160645
    4. '
' → logprob: -6.1353535652160645
    5. 'g' → logprob: -6.7603535652160645
    6. '                   ' → logprob: -7.2603535652160645
    7. ' g' → logprob: -8.135354042053223
    8. ':' → logprob: -8.260354042053223
    9. '                           ' → logprob: -8.510354042053223
    10. 's' → logprob: -9.260354042053223

Token 222: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.6022330522537231
    2. 'g' (adapté à ' g') → logprob: -0.9772330522537231
    3. '                       ' → logprob: -2.8522329330444336
    4. '                   ' → logprob: -4.727232933044434
    5. '
' → logprob: -5.352232933044434
    6. '                           ' → logprob: -6.352232933044434
    7. '                        
' → logprob: -7.727232933044434
    8. '                    ' → logprob: -7.977232933044434
    9. ' ' → logprob: -8.227232933044434
    10. ' 
' → logprob: -8.352232933044434

Token 223: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.6312321753939614e-05
    2. 's' → logprob: -10.625036239624023
    3. '_score' → logprob: -11.625036239624023
    4. '_c' → logprob: -13.375036239624023
    5. '_scores' → logprob: -14.500036239624023
    6. '_' → logprob: -15.125036239624023
    7. '   ' → logprob: -16.125036239624023
    8. '+' → logprob: -16.500036239624023
    9. 'score' → logprob: -16.750036239624023
    10. ' _' → logprob: -16.875036239624023

Token 224: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5764613151550293
    2. ' +=' → logprob: -0.8264613151550293
    3. '+' → logprob: -7.951461315155029
    4. ']+=' → logprob: -9.826461791992188
    5. '                       ' → logprob: -10.326461791992188
    6. '                   ' → logprob: -10.451461791992188
    7. '=' → logprob: -10.701461791992188
    8. ' +' → logprob: -11.451461791992188
    9. ',' → logprob: -12.201461791992188
    10. '```' → logprob: -12.576461791992188

Token 225: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.19482648372650146
    2. '1' → logprob: -1.8198264837265015
    3. '3' → logprob: -4.569826602935791
    4. '2' → logprob: -6.194826602935791
    5. ' g' → logprob: -7.194826602935791
    6. 'comb' → logprob: -7.319826602935791
    7. '(g' → logprob: -7.944826602935791
    8. '(' → logprob: -8.694826126098633
    9. '10' → logprob: -8.694826126098633
    10. ' ' → logprob: -8.944826126098633

Token 226: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.054500666621607e-06
    2. 'c' → logprob: -13.62500286102295
    3. '+' → logprob: -14.37500286102295
    4. '1' → logprob: -14.75000286102295
    5. ' ' → logprob: -15.87500286102295
    6. '10' → logprob: -16.000003814697266
    7. '_s' → logprob: -16.375003814697266
    8. '+c' → logprob: -16.750003814697266
    9. ' +' → logprob: -16.875003814697266
    10. '_i' → logprob: -17.000003814697266

Token 227: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6724854707717896
    2. ' +' → logprob: -1.0474854707717896
    3. '+j' → logprob: -2.0474853515625
    4. '                   ' → logprob: -4.9224853515625
    5. 'else' → logprob: -7.2974853515625
    6. '<|end|>' → logprob: -7.7974853515625
    7. ' else' → logprob: -8.4224853515625
    8. '+k' → logprob: -8.7974853515625
    9. '
' → logprob: -9.2974853515625
    10. '                       ' → logprob: -9.4224853515625

Token 228: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0036079094279557467
    2. ' j' → logprob: -5.628607749938965
    3. '_j' → logprob: -12.628607749938965
    4. ' ' → logprob: -13.003607749938965
    5. '	j' → logprob: -15.003607749938965
    6. '                   ' → logprob: -15.128607749938965
    7. '   ' → logprob: -15.378607749938965
    8. '```' → logprob: -15.503607749938965
    9. '  ' → logprob: -15.628607749938965
    10. '<|end|>' → logprob: -15.878607749938965

Token 229: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.2994620242971e-06
    2. 'c' → logprob: -12.625008583068848
    3. '_s' → logprob: -13.000008583068848
    4. '<|end|>' → logprob: -13.250008583068848
    5. '_j' → logprob: -15.000008583068848
    6. 's' → logprob: -15.875008583068848
    7. 'j' → logprob: -16.00000762939453
    8. '<|end|>' → logprob: -16.25000762939453
    9. '_' → logprob: -16.62500762939453
    10. ' ' → logprob: -17.25000762939453

Token 230: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00025275684311054647
    2. 'elif' → logprob: -9.125252723693848
    3. 'else' → logprob: -10.000252723693848
    4. '                    
' → logprob: -10.500252723693848
    5. '
' → logprob: -10.875252723693848
    6. '  
' → logprob: -11.750252723693848
    7. ' else' → logprob: -11.750252723693848
    8. ' elif' → logprob: -12.000252723693848
    9. '                        
' → logprob: -12.000252723693848
    10. '               ' → logprob: -12.375252723693848

Token 231: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00018863992590922862
    2. 'elif' → logprob: -9.250188827514648
    3. 'else' → logprob: -9.625188827514648
    4. ' else' → logprob: -11.250188827514648
    5. ' elif' → logprob: -12.000188827514648
    6. '```' → logprob: -13.250188827514648
    7. '               ' → logprob: -13.375188827514648
    8. '                  ' → logprob: -13.875188827514648
    9. '                    
' → logprob: -13.875188827514648
    10. '                       ' → logprob: -14.625188827514648

Token 232: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.6110837459564209
    2. '                   ' → logprob: -1.361083745956421
    3. ' elif' → logprob: -1.611083745956421
    4. 'else' → logprob: -7.361083984375
    5. ' else' → logprob: -7.736083984375
    6. '               ' → logprob: -9.861083984375
    7. '                    ' → logprob: -10.486083984375
    8. '   ' → logprob: -11.361083984375
    9. '	elif' → logprob: -12.611083984375
    10. '                  ' → logprob: -12.611083984375

Token 233: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.3378249704837799
    2. 'g' → logprob: -1.4628249406814575
    3. ' j' → logprob: -3.212825059890747
    4. 'j' → logprob: -4.212824821472168
    5. ' ' → logprob: -11.212824821472168
    6. '	g' → logprob: -11.712824821472168
    7. ' gate' → logprob: -12.212824821472168
    8. ' jack' → logprob: -12.650324821472168
    9. ' ' → logprob: -12.837824821472168
    10. '   ' → logprob: -13.087824821472168

Token 234: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.9054008084349334e-05
    2. '_s' → logprob: -10.750039100646973
    3. '_j' → logprob: -11.375039100646973
    4. '_' → logprob: -12.750039100646973
    5. 'c' → logprob: -14.625039100646973
    6. '_i' → logprob: -14.687539100646973
    7. 'j' → logprob: -15.312539100646973
    8. 's' → logprob: -15.375039100646973
    9. '```' → logprob: -16.000038146972656
    10. '_g' → logprob: -16.187538146972656

Token 235: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018217021599411964
    2. '<' → logprob: -4.018217086791992
    3. ' ' → logprob: -10.143217086791992
    4. ' ==' → logprob: -11.268217086791992
    5. 'else' → logprob: -12.393217086791992
    6. '==' → logprob: -13.018217086791992
    7. '                           ' → logprob: -14.018217086791992
    8. '[' → logprob: -14.143217086791992
    9. 'elif' → logprob: -14.518217086791992
    10. '   ' → logprob: -14.768217086791992

Token 236: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.16028881072998047
    2. 'j' → logprob: -1.9102888107299805
    3. '                   ' → logprob: -10.53528881072998
    4. 'g' → logprob: -11.41028881072998
    5. '                    ' → logprob: -11.78528881072998
    6. ' ' → logprob: -12.28528881072998
    7. ' g' → logprob: -12.78528881072998
    8. ' (' → logprob: -13.53528881072998
    9. '	j' → logprob: -13.66028881072998
    10. ' ' → logprob: -14.03528881072998

Token 237: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.3856492842023727e-06
    2. '_s' → logprob: -14.375000953674316
    3. '_j' → logprob: -14.625000953674316
    4. 'c' → logprob: -15.625000953674316
    5. 'j' → logprob: -16.500001907348633
    6. '_' → logprob: -17.125001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.375001907348633
    10. ' _' → logprob: -18.500001907348633

Token 238: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7128407955169678
    2. '                       ' → logprob: -0.9628407955169678
    3. ':' → logprob: -2.0878407955169678
    4. '                   ' → logprob: -6.212841033935547
    5. ' :
' → logprob: -7.837841033935547
    6. '                      ' → logprob: -7.837841033935547
    7. '):
' → logprob: -8.337841033935547
    8. ':

' → logprob: -8.462841033935547
    9. ',' → logprob: -8.962841033935547
    10. '                        ' → logprob: -9.212841033935547

Token 239: '                       ' (ID: 968)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7694646716117859
    2. '                       ' → logprob: -0.7694646716117859
    3. ' j' → logprob: -2.6444647312164307
    4. '                   ' → logprob: -7.394464492797852
    5. 'g' → logprob: -7.519464492797852
    6. '   ' → logprob: -8.394464492797852
    7. ' ' → logprob: -8.769464492797852
    8. ' g' → logprob: -8.769464492797852
    9. '                      ' → logprob: -9.019464492797852
    10. '                           ' → logprob: -9.269464492797852

Token 240: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.39958351850509644
    2. 'j' (adapté à ' j') → logprob: -1.1495835781097412
    3. '                   ' → logprob: -4.399583339691162
    4. '                    ' → logprob: -9.14958381652832
    5. '                           ' → logprob: -10.14958381652832
    6. '
' → logprob: -10.14958381652832
    7. '                  ' → logprob: -10.52458381652832
    8. '                       ' → logprob: -11.14958381652832
    9. '   ' → logprob: -11.27458381652832
    10. ' ' → logprob: -11.52458381652832

Token 241: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9623810658231378e-05
    2. 's' → logprob: -11.125020027160645
    3. '_score' → logprob: -13.000020027160645
    4. '_' → logprob: -13.625020027160645
    5. ' _' → logprob: -15.375020027160645
    6. '   ' → logprob: -15.375020027160645
    7. '_scores' → logprob: -16.125019073486328
    8. '+' → logprob: -16.250019073486328
    9. '_j' → logprob: -16.250019073486328
    10. '```' → logprob: -16.375019073486328

Token 242: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47410446405410767
    2. '+=' → logprob: -0.9741044640541077
    3. ']+=' → logprob: -11.724104881286621
    4. '+' → logprob: -11.849104881286621
    5. 's' → logprob: -12.349104881286621
    6. '=' → logprob: -13.099104881286621
    7. ' +' → logprob: -13.349104881286621
    8. '+=(' → logprob: -13.474104881286621
    9. ' ' → logprob: -14.224104881286621
    10. '   ' → logprob: -14.349104881286621

Token 243: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0031995740719139576
    2. ' g' → logprob: -5.753199577331543
    3. 'j' → logprob: -11.003199577331543
    4. '(g' → logprob: -13.253199577331543
    5. '                   ' → logprob: -14.253199577331543
    6. '	g' → logprob: -14.253199577331543
    7. '                       ' → logprob: -15.128199577331543
    8. '   ' → logprob: -15.253199577331543
    9. ' ' → logprob: -15.253199577331543
    10. 'gj' → logprob: -15.503199577331543

Token 244: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.004799988120794296
    2. 'c' → logprob: -5.629799842834473
    3. 'g' → logprob: -7.254799842834473
    4. '_g' → logprob: -8.504799842834473
    5. 'j' → logprob: -8.629799842834473
    6. ' c' → logprob: -10.004799842834473
    7. '_j' → logprob: -10.254799842834473
    8. ' g' → logprob: -11.004799842834473
    9. ' j' → logprob: -11.879799842834473
    10. '_s' → logprob: -13.004799842834473

Token 245: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2520265579223633
    2. '+' → logprob: -1.5020265579223633
    3. '+j' → logprob: -9.252026557922363
    4. ' ' → logprob: -14.252026557922363
    5. '+c' → logprob: -15.252026557922363
    6. ' +
' → logprob: -16.252025604248047
    7. ' plus' → logprob: -16.252025604248047
    8. '+
' → logprob: -16.377025604248047
    9. ' ' → logprob: -16.877025604248047
    10. '<' → logprob: -17.377025604248047

Token 246: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.29724159836769104
    2. 'g' → logprob: -1.5472415685653687
    3. ' j' → logprob: -3.297241687774658
    4. ' g' → logprob: -4.922241687774658
    5. ' ' → logprob: -11.0472412109375
    6. '                   ' → logprob: -12.1722412109375
    7. '<|end|>' → logprob: -12.2972412109375
    8. '                       ' → logprob: -13.1722412109375
    9. '   ' → logprob: -13.7972412109375
    10. '	j' → logprob: -14.2972412109375

Token 247: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0002346488763578236
    2. 'c' → logprob: -8.375234603881836
    3. 'j' → logprob: -12.500234603881836
    4. '<|end|>' → logprob: -15.875234603881836
    5. '_j' → logprob: -16.000234603881836
    6. '_' → logprob: -17.750234603881836
    7. ' j' → logprob: -18.500234603881836
    8. 'C' → logprob: -18.625234603881836
    9. ' ' → logprob: -19.500234603881836
    10. '```' → logprob: -20.250234603881836

Token 248: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021276673302054405
    2. '
' → logprob: -4.146276473999023
    3. '                    
' → logprob: -5.646276473999023
    4. 'else' → logprob: -7.646276473999023
    5. ' else' → logprob: -8.146276473999023
    6. '  
' → logprob: -8.521276473999023
    7. '                        
' → logprob: -8.771276473999023
    8. ',
' → logprob: -9.146276473999023
    9. '               ' → logprob: -9.396276473999023
    10. '    
' → logprob: -9.396276473999023

Token 249: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00528178084641695
    2. '
' → logprob: -6.005281925201416
    3. 'else' → logprob: -6.755281925201416
    4. ' else' → logprob: -7.130281925201416
    5. '                    
' → logprob: -7.380281925201416
    6. '  
' → logprob: -10.255281448364258
    7. '               ' → logprob: -10.255281448364258
    8. '```' → logprob: -10.380281448364258
    9. '    
' → logprob: -10.505281448364258
    10. '                        
' → logprob: -11.005281448364258

Token 250: ' res' (ID: 694)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6510992646217346
    2. ' new' → logprob: -1.5260992050170898
    3. 'new' → logprob: -2.77609920501709
    4. 'g' → logprob: -2.77609920501709
    5. ' g' → logprob: -2.90109920501709
    6. ' else' → logprob: -3.90109920501709
    7. ' next' → logprob: -4.15109920501709
    8. 'else' → logprob: -4.52609920501709
    9. 'next' → logprob: -4.90109920501709
    10. 'result' → logprob: -5.27609920501709

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07266492396593094
    2. '=' → logprob: -2.947664976119995
    3. '_g' → logprob: -4.072664737701416
    4. '_' → logprob: -8.572665214538574
    5. 'g' → logprob: -9.197665214538574
    6. '   ' → logprob: -9.447665214538574
    7. '=g' → logprob: -9.697665214538574
    8. '0' → logprob: -9.822665214538574
    9. 's' → logprob: -10.072665214538574
    10. '_s' → logprob: -11.197665214538574

Token 252: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.07889199256896973
    2. ' dfs' → logprob: -2.5788919925689697
    3. 'df' → logprob: -13.32889175415039
    4. ' ' → logprob: -14.82889175415039
    5. '   ' → logprob: -15.32889175415039
    6. 'd' → logprob: -17.45389175415039
    7. 'fs' → logprob: -17.82889175415039
    8. 'DFS' → logprob: -18.07889175415039
    9. 'ds' → logprob: -18.07889175415039
    10. '
' → logprob: -18.70389175415039

Token 253: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00013762809976469725
    2. '(' → logprob: -9.375137329101562
    3. '(
' → logprob: -9.875137329101562
    4. ' (' → logprob: -14.250137329101562
    5. '((' → logprob: -15.500137329101562
    6. '           ' → logprob: -16.125137329101562
    7. '(G' → logprob: -16.875137329101562
    8. '   ' → logprob: -17.000137329101562
    9. '(
' → logprob: -17.125137329101562
    10. '```' → logprob: -17.125137329101562

Token 254: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00030293059535324574
    2. '_gate' → logprob: -8.250303268432617
    3. '(' → logprob: -11.500303268432617
    4. '_' → logprob: -11.625303268432617
    5. '_used' → logprob: -12.125303268432617
    6. 't' → logprob: -12.500303268432617
    7. 'gate' → logprob: -12.625303268432617
    8. '(g' → logprob: -13.625303268432617
    9. '   ' → logprob: -13.750303268432617
    10. 'at' → logprob: -14.000303268432617

Token 255: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.292907877039397e-06
    2. '_c' → logprob: -13.75000286102295
    3. '(cards' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.25000286102295
    5. '               ' → logprob: -15.37500286102295
    6. '           ' → logprob: -15.50000286102295
    7. '_codes' → logprob: -15.50000286102295
    8. '```' → logprob: -16.500003814697266
    9. '                   ' → logprob: -16.625003814697266
    10. '_cells' → logprob: -16.625003814697266

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002057950245216489
    2. ',
' → logprob: -6.877058029174805
    3. ',g' → logprob: -7.252058029174805
    4. ' ,' → logprob: -8.127058029174805
    5. ',j' → logprob: -12.252058029174805
    6. ',i' → logprob: -12.877058029174805
    7. ',[' → logprob: -12.877058029174805
    8. ',(' → logprob: -13.002058029174805
    9. ',

' → logprob: -13.127058029174805
    10. ',
' → logprob: -13.502058029174805

Token 257: ' jack' (ID: 21273)
  Prédit: 'jack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jack' → logprob: -0.12694984674453735
    2. ' jack' → logprob: -2.1269497871398926
    3. '                   ' → logprob: -12.62695026397705
    4. 'j' → logprob: -12.87695026397705
    5. ' ' → logprob: -13.00195026397705
    6. '   ' → logprob: -13.12695026397705
    7. '              ' → logprob: -13.37695026397705
    8. '               ' → logprob: -13.37695026397705
    9. 'john' → logprob: -13.75195026397705
    10. '
' → logprob: -13.75195026397705

Token 258: 'y' (ID: 88)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0015775939682498574
    2. '_used' → logprob: -6.626577377319336
    3. '_i' → logprob: -9.876577377319336
    4. 'i' → logprob: -10.126577377319336
    5. '_c' → logprob: -10.501577377319336
    6. '
' → logprob: -10.501577377319336
    7. '   ' → logprob: -11.126577377319336
    8. '[i' → logprob: -11.126577377319336
    9. '_' → logprob: -11.501577377319336
    10. '```' → logprob: -11.501577377319336

Token 259: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0037946118973195553
    2. ',' → logprob: -5.6287946701049805
    3. '           ' → logprob: -10.50379467010498
    4. '                   ' → logprob: -10.50379467010498
    5. ' ,' → logprob: -10.62879467010498
    6. '   ' → logprob: -11.00379467010498
    7. '
' → logprob: -11.12879467010498
    8. '               ' → logprob: -11.25379467010498
    9. 'cards' → logprob: -11.37879467010498
    10. '[i' → logprob: -11.37879467010498

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026037218049168587
    2. ',g' → logprob: -6.502603530883789
    3. ' ,' → logprob: -7.002603530883789
    4. ',
' → logprob: -8.877603530883789
    5. '                   ' → logprob: -10.627603530883789
    6. '   ' → logprob: -12.252603530883789
    7. ',(' → logprob: -12.377603530883789
    8. ',i' → logprob: -12.502603530883789
    9. '           ' → logprob: -13.252603530883789
    10. '               ' → logprob: -13.252603530883789

Token 261: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.009059332311153412
    2. ' g' → logprob: -4.759059429168701
    3. '   ' → logprob: -8.384058952331543
    4. '(g' → logprob: -9.384058952331543
    5. '           ' → logprob: -10.634058952331543
    6. '               ' → logprob: -10.759058952331543
    7. '                   ' → logprob: -11.009058952331543
    8. '       ' → logprob: -11.134058952331543
    9. '     ' → logprob: -11.884058952331543
    10. '                 ' → logprob: -12.259058952331543

Token 262: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.8624639324116288e-06
    2. 'used' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.000001907348633
    4. '_unused' → logprob: -16.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '_USED' → logprob: -17.750001907348633
    7. 'g' → logprob: -18.125001907348633
    8. '               ' → logprob: -18.250001907348633
    9. '_usage' → logprob: -18.500001907348633
    10. '_updated' → logprob: -18.625001907348633

Token 263: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.10277578979730606
    2. '|' → logprob: -2.352775812149048
    3. '|(' → logprob: -5.977775573730469
    4. ',' → logprob: -11.102775573730469
    5. '│' → logprob: -12.352775573730469
    6. '   ' → logprob: -12.602775573730469
    7. '```' → logprob: -13.227775573730469
    8. '           ' → logprob: -13.352775573730469
    9. ' ' → logprob: -13.477775573730469
    10. '       ' → logprob: -13.602775573730469

Token 264: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002476135268807411
    2. ' (' → logprob: -6.002476215362549
    3. '1' → logprob: -15.00247573852539
    4. ' ' → logprob: -16.75247573852539
    5. '   ' → logprob: -18.25247573852539
    6. '  ' → logprob: -18.25247573852539
    7. '```' → logprob: -18.50247573852539
    8. '    ' → logprob: -19.12747573852539
    9. '     ' → logprob: -19.25247573852539
    10. '         ' → logprob: -19.62747573852539

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163863845169544
    2. '(' → logprob: -4.264163970947266
    3. ' (' → logprob: -15.389163970947266
    4. ' ' → logprob: -16.139163970947266
    5. '           ' → logprob: -17.264163970947266
    6. '                   ' → logprob: -17.764163970947266
    7. '   ' → logprob: -17.889163970947266
    8. '```' → logprob: -18.389163970947266
    9. '
' → logprob: -18.889163970947266
    10. '               ' → logprob: -19.264163970947266

Token 266: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00043829824426211417
    2. ' <<' → logprob: -7.750438213348389
    3. '```' → logprob: -12.750438690185547
    4. '<' → logprob: -13.125438690185547
    5. '   ' → logprob: -14.125438690185547
    6. '(' → logprob: -14.250438690185547
    7. '1' → logprob: -15.375438690185547
    8. '           ' → logprob: -15.375438690185547
    9. ' ' → logprob: -15.625438690185547
    10. ' ' → logprob: -15.875438690185547

Token 267: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002036595979006961
    2. ' i' → logprob: -8.500204086303711
    3. '                   ' → logprob: -15.875204086303711
    4. '           ' → logprob: -17.75020408630371
    5. '	i' → logprob: -18.25020408630371
    6. '
' → logprob: -18.37520408630371
    7. '               ' → logprob: -18.75020408630371
    8. '   ' → logprob: -18.87520408630371
    9. '(i' → logprob: -19.25020408630371
    10. ' ' → logprob: -20.25020408630371

Token 268: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021421704441308975
    2. '),' → logprob: -6.252141952514648
    3. ',j' → logprob: -8.627141952514648
    4. ' ,' → logprob: -10.377141952514648
    5. ',
' → logprob: -13.252141952514648
    6. '   ' → logprob: -15.502141952514648
    7. '           ' → logprob: -15.627141952514648
    8. '},' → logprob: -16.00214195251465
    9. '),(' → logprob: -16.25214195251465
    10. ',),' → logprob: -16.25214195251465

Token 269: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.05509677156805992
    2. 'j' → logprob: -2.9300968647003174
    3. '                   ' → logprob: -10.305096626281738
    4. '                  ' → logprob: -10.555096626281738
    5. '                ' → logprob: -10.805096626281738
    6. '                    ' → logprob: -11.055096626281738
    7. '              ' → logprob: -11.430096626281738
    8. '                 ' → logprob: -11.555096626281738
    9. '            ' → logprob: -11.680096626281738
    10. '          ' → logprob: -11.805096626281738

Token 270: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -8.180258191714529e-06
    2. 'used' → logprob: -12.125008583068848
    3. '_use' → logprob: -14.375008583068848
    4. 'Used' → logprob: -14.500008583068848
    5. '   ' → logprob: -14.750008583068848
    6. ' _' → logprob: -15.125008583068848
    7. '_USED' → logprob: -16.00000762939453
    8. '```' → logprob: -16.12500762939453
    9. '_user' → logprob: -16.37500762939453
    10. '_' → logprob: -16.62500762939453

Token 271: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.004626172594726086
    2. '|' → logprob: -5.379626274108887
    3. '|(' → logprob: -12.129626274108887
    4. ' ' → logprob: -15.254626274108887
    5. ' ' → logprob: -16.25462532043457
    6. ' |
' → logprob: -16.75462532043457
    7. ')' → logprob: -17.00462532043457
    8. '<|end|>' → logprob: -17.12962532043457
    9. ')|(' → logprob: -17.50462532043457
    10. ' |=' → logprob: -17.75462532043457

Token 272: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16022604703903198
    2. ' (' → logprob: -1.9102261066436768
    3. '(j' → logprob: -13.785225868225098
    4. '                   ' → logprob: -15.285225868225098
    5. 'j' → logprob: -15.785225868225098
    6. ' j' → logprob: -15.910225868225098
    7. '               ' → logprob: -16.285226821899414
    8. '                ' → logprob: -17.160226821899414
    9. ')' → logprob: -18.035226821899414
    10. '                 ' → logprob: -18.160226821899414

Token 273: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02809777483344078
    2. '1' → logprob: -3.7780978679656982
    3. ' j' → logprob: -5.653097629547119
    4. '(' → logprob: -6.653097629547119
    5. ' (' → logprob: -10.403098106384277
    6. ' ' → logprob: -12.028098106384277
    7. '                   ' → logprob: -12.778098106384277
    8. '(j' → logprob: -12.903098106384277
    9. '               ' → logprob: -14.903098106384277
    10. '   ' → logprob: -15.278098106384277

Token 274: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.035750992596149445
    2. ' <<' → logprob: -3.6607511043548584
    3. 'j' → logprob: -4.910750865936279
    4. ' j' → logprob: -6.910750865936279
    5. '1' → logprob: -7.160750865936279
    6. '           ' → logprob: -9.035751342773438
    7. '<' → logprob: -10.410751342773438
    8. '```' → logprob: -11.035751342773438
    9. ' ' → logprob: -11.285751342773438
    10. '   ' → logprob: -11.285751342773438

Token 275: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009115827269852161
    2. ' j' → logprob: -7.000911712646484
    3. '	j' → logprob: -16.750911712646484
    4. '   ' → logprob: -17.500911712646484
    5. '[j' → logprob: -17.750911712646484
    6. '$j' → logprob: -18.375911712646484
    7. '                   ' → logprob: -18.625911712646484
    8. '```' → logprob: -19.125911712646484
    9. '_j' → logprob: -19.250911712646484
    10. ' ' → logprob: -19.375911712646484

Token 276: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00022594700567424297
    2. ',' → logprob: -8.500226020812988
    3. ' ),' → logprob: -11.250226020812988
    4. ')' → logprob: -12.500226020812988
    5. ',),' → logprob: -13.375226020812988
    6. '   ' → logprob: -13.500226020812988
    7. '),
' → logprob: -13.625226020812988
    8. '  ' → logprob: -14.875226020812988
    9. ' ' → logprob: -15.250226020812988
    10. '           ' → logprob: -15.375226020812988

Token 277: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06217774376273155
    2. ' g' → logprob: -2.8121776580810547
    3. '                   ' → logprob: -9.062177658081055
    4. '                       ' → logprob: -10.312177658081055
    5. '                    ' → logprob: -10.562177658081055
    6. '                           ' → logprob: -12.062177658081055
    7. '                     ' → logprob: -12.437177658081055
    8. '                        ' → logprob: -12.437177658081055
    9. '	g' → logprob: -12.812177658081055
    10. '   ' → logprob: -12.937177658081055

Token 278: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.1424973713001236e-05
    2. 's' → logprob: -11.000031471252441
    3. '_score' → logprob: -11.250031471252441
    4. '_c' → logprob: -14.875031471252441
    5. ' _' → logprob: -14.875031471252441
    6. '_' → logprob: -14.875031471252441
    7. 'score' → logprob: -15.250031471252441
    8. '_scores' → logprob: -16.375030517578125
    9. '```' → logprob: -16.750030517578125
    10. 'c' → logprob: -17.000030517578125

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.492120155598968e-05
    2. ' ,' → logprob: -10.000064849853516
    3. ',j' → logprob: -11.375064849853516
    4. ',
' → logprob: -11.875064849853516
    5. ',

' → logprob: -15.375064849853516
    6. '‌,' → logprob: -15.375064849853516
    7. ',g' → logprob: -16.125064849853516
    8. 's' → logprob: -16.250064849853516
    9. '<|end|>' → logprob: -16.375064849853516
    10. '<|end|>' → logprob: -16.875064849853516

Token 280: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011068218387663364
    2. ' j' → logprob: -4.511068344116211
    3. '                   ' → logprob: -11.136068344116211
    4. '   ' → logprob: -13.511068344116211
    5. '                    ' → logprob: -14.011068344116211
    6. '                  ' → logprob: -14.261068344116211
    7. '                       ' → logprob: -14.636068344116211
    8. '    ' → logprob: -15.011068344116211
    9. '           ' → logprob: -15.136068344116211
    10. ' ' → logprob: -15.261068344116211

Token 281: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004107965622097254
    2. '_score' → logprob: -5.62910795211792
    3. 's' → logprob: -7.62910795211792
    4. '_used' → logprob: -11.754108428955078
    5. 'score' → logprob: -12.129108428955078
    6. 'j' → logprob: -12.879108428955078
    7. '_scores' → logprob: -13.129108428955078
    8. '_c' → logprob: -13.754108428955078
    9. 'c' → logprob: -14.129108428955078
    10. '_' → logprob: -14.879108428955078

Token 282: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22338634729385376
    2. ')
' → logprob: -1.723386287689209
    3. ',' → logprob: -3.848386287689209
    4. '   ' → logprob: -8.848386764526367
    5. ')
' → logprob: -8.848386764526367
    6. ')

' → logprob: -10.348386764526367
    7. ')[' → logprob: -10.473386764526367
    8. ' )' → logprob: -11.598386764526367
    9. '                   ' → logprob: -12.098386764526367
    10. ' ,' → logprob: -12.223386764526367

Token 283: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0011741555063053966
    2. ' cache' → logprob: -6.751173973083496
    3. ')' → logprob: -14.126173973083496
    4. '
' → logprob: -14.376173973083496
    5. '   ' → logprob: -14.626173973083496
    6. 'c' → logprob: -15.251173973083496
    7. '	cache' → logprob: -15.376173973083496
    8. ' ' → logprob: -15.626173973083496
    9. '                   ' → logprob: -15.751173973083496
    10. ')
' → logprob: -15.876173973083496

Token 284: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741562008857727
    2. ')' → logprob: -0.9741562008857727
    3. ')
' → logprob: -9.974156379699707
    4. '                   ' → logprob: -10.974156379699707
    5. '   ' → logprob: -11.474156379699707
    6. ')

' → logprob: -13.599156379699707
    7. ')`
' → logprob: -13.724156379699707
    8. ')[' → logprob: -14.099156379699707
    9. '       ' → logprob: -14.724156379699707
    10. '           ' → logprob: -14.849156379699707

Token 285: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04739183187484741
    2. '
' → logprob: -3.297391891479492
    3. '                    
' → logprob: -5.547391891479492
    4. 'g' → logprob: -6.297391891479492
    5. ' g' → logprob: -7.422391891479492
    6. '           ' → logprob: -7.797391891479492
    7. '   ' → logprob: -7.922391891479492
    8. ',' → logprob: -8.047391891479492
    9. '    
' → logprob: -8.172391891479492
    10. '  
' → logprob: -8.172391891479492

Token 286: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.4521583616733551
    2. '                   ' → logprob: -1.0771583318710327
    3. ' g' → logprob: -4.077158451080322
    4. '       ' → logprob: -5.952158451080322
    5. '           ' → logprob: -6.577158451080322
    6. '   ' → logprob: -7.202158451080322
    7. '               ' → logprob: -7.702158451080322
    8. '                    
' → logprob: -8.202157974243164
    9. '```' → logprob: -8.702157974243164
    10. '
' → logprob: -8.952157974243164

Token 287: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -2.129266067640856e-05
    2. 'win' → logprob: -10.875020980834961
    3. '_w' → logprob: -13.750020980834961
    4. '	win' → logprob: -14.625020980834961
    5. '_WIN' → logprob: -14.750020980834961
    6. ' win' → logprob: -15.625020980834961
    7. '(win' → logprob: -16.75002098083496
    8. 'Win' → logprob: -16.75002098083496
    9. 'g' → logprob: -17.00002098083496
    10. 'w' → logprob: -17.37502098083496

Token 288: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20259526371955872
    2. ' +=' → logprob: -1.8275952339172363
    3. ',' → logprob: -3.8275952339172363
    4. ']+=' → logprob: -7.827595233917236
    5. '+,' → logprob: -8.327595710754395
    6. ',g' → logprob: -9.952595710754395
    7. ' ,' → logprob: -10.327595710754395
    8. '[' → logprob: -10.327595710754395
    9. '+' → logprob: -10.452595710754395
    10. '   ' → logprob: -11.077595710754395

Token 289: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0010330495424568653
    2. ' res' → logprob: -6.876032829284668
    3. '                   ' → logprob: -16.001033782958984
    4. '   ' → logprob: -16.376033782958984
    5. ' ' → logprob: -17.251033782958984
    6. '	res' → logprob: -17.501033782958984
    7. '                       ' → logprob: -18.001033782958984
    8. '
' → logprob: -18.126033782958984
    9. '(res' → logprob: -18.501033782958984
    10. '  ' → logprob: -18.876033782958984

Token 290: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.85104202805087e-05
    2. '0' → logprob: -10.250078201293945
    3. '\[' → logprob: -11.125078201293945
    4. ' [' → logprob: -11.375078201293945
    5. '][' → logprob: -12.250078201293945
    6. '```' → logprob: -12.625078201293945
    7. '(' → logprob: -13.625078201293945
    8. '()[' → logprob: -13.750078201293945
    9. '
' → logprob: -13.750078201293945
    10. '`' → logprob: -14.250078201293945

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '
' → logprob: -16.625001907348633
    6. '۰' → logprob: -18.125001907348633
    7. '```' → logprob: -18.250001907348633
    8. '[' → logprob: -19.562501907348633
    9. '০' → logprob: -19.625001907348633
    10. '  ' → logprob: -19.625001907348633

Token 292: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04543745890259743
    2. '<|end|>' → logprob: -3.6704375743865967
    3. ',' → logprob: -4.795437335968018
    4. '                   ' → logprob: -5.670437335968018
    5. ']' → logprob: -6.295437335968018
    6. '    
' → logprob: -6.420437335968018
    7. '<|end|>' → logprob: -7.045437335968018
    8. ']
' → logprob: -7.420437335968018
    9. ' 
' → logprob: -7.545437335968018
    10. ',
' → logprob: -7.795437335968018

Token 293: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03168546035885811
    2. ' j' → logprob: -3.7816853523254395
    3. ',' → logprob: -5.6566853523254395
    4. '
' → logprob: -6.0316853523254395
    5. 'j' → logprob: -6.5316853523254395
    6. ',j' → logprob: -7.1566853523254395
    7. '               ' → logprob: -9.781685829162598
    8. ',
' → logprob: -9.906685829162598
    9. '                    
' → logprob: -10.406685829162598
    10. '           ' → logprob: -10.531685829162598

Token 294: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2014482170343399
    2. 'j' (adapté à ' j') → logprob: -1.7014482021331787
    3. '                   ' → logprob: -10.576448440551758
    4. '                    ' → logprob: -12.201448440551758
    5. '                  ' → logprob: -14.201448440551758
    6. ',j' → logprob: -14.576448440551758
    7. '    ' → logprob: -14.951448440551758
    8. ' ' → logprob: -14.951448440551758
    9. '                    
' → logprob: -15.076448440551758
    10. '```' → logprob: -15.076448440551758

Token 295: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -6.511406809295295e-06
    2. '_w' → logprob: -13.125006675720215
    3. ' _' → logprob: -13.250006675720215
    4. '_' → logprob: -13.750006675720215
    5. 'win' → logprob: -14.500006675720215
    6. '_WIN' → logprob: -15.250006675720215
    7. ''_' → logprob: -16.0000057220459
    8. '_loss' → logprob: -16.1250057220459
    9. '_answer' → logprob: -16.6250057220459
    10. '_write' → logprob: -16.7500057220459

Token 296: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3134499192237854
    2. '+=' → logprob: -1.3134498596191406
    3. '+' → logprob: -8.68844985961914
    4. ' +' → logprob: -11.31344985961914
    5. ']+=' → logprob: -12.18844985961914
    6. '+="' → logprob: -14.31344985961914
    7. '+=(' → logprob: -14.81344985961914
    8. '<|end|>' → logprob: -14.81344985961914
    9. '+='' → logprob: -14.81344985961914
    10. '=' → logprob: -15.81344985961914

Token 297: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011047814972698689
    2. ' res' → logprob: -4.511047840118408
    3. '	res' → logprob: -17.51104736328125
    4. '(res' → logprob: -18.13604736328125
    5. ' ' → logprob: -18.88604736328125
    6. '$res' → logprob: -20.13604736328125
    7. '=res' → logprob: -21.51104736328125
    8. '_res' → logprob: -21.63604736328125
    9. '   ' → logprob: -21.88604736328125
    10. '  ' → logprob: -22.26104736328125

Token 298: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -14.750000953674316
    3. '0' → logprob: -15.250000953674316
    4. ' [' → logprob: -15.375000953674316
    5. '```' → logprob: -15.500000953674316
    6. '[
' → logprob: -16.875001907348633
    7. '(' → logprob: -17.000001907348633
    8. 's' → logprob: -17.375001907348633
    9. '][' → logprob: -17.375001907348633
    10. 'import' → logprob: -17.625001907348633

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.375000953674316
    3. 'res' → logprob: -15.500000953674316
    4. '0' → logprob: -16.375
    5. '```' → logprob: -16.375
    6. '[' → logprob: -16.8125
    7. '   ' → logprob: -18.0
    8. '۱' → logprob: -18.9375
    9. '-' → logprob: -19.4375
    10. '１' → logprob: -19.5

Token 300: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001983948517590761
    2. '                   ' → logprob: -7.001984119415283
    3. '```' → logprob: -7.876984119415283
    4. '       ' → logprob: -8.376983642578125
    5. ' cache' → logprob: -9.126983642578125
    6. 'cache' → logprob: -9.376983642578125
    7. '    
' → logprob: -9.626983642578125
    8. '
' → logprob: -9.751983642578125
    9. '               ' → logprob: -10.126983642578125
    10. '           ' → logprob: -10.251983642578125

Token 302: ' cache' (ID: 11956)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32821351289749146
    2. 'cache' (adapté à ' cache') → logprob: -1.7032134532928467
    3. ' cache' → logprob: -2.3282134532928467
    4. '
' → logprob: -9.453213691711426
    5. '    
' → logprob: -9.703213691711426
    6. '	cache' → logprob: -10.578213691711426
    7. '```' → logprob: -10.703213691711426
    8. ' return' → logprob: -11.828213691711426
    9. 'return' → logprob: -12.453213691711426
    10. '       ' → logprob: -12.453213691711426

Token 303: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -11.375021934509277
    3. '[...]' → logprob: -12.125021934509277
    4. '```' → logprob: -12.875021934509277
    5. '[((' → logprob: -13.625021934509277
    6. '[
' → logprob: -14.625021934509277
    7. ' [(' → logprob: -14.750021934509277
    8. '   ' → logprob: -14.875021934509277
    9. ' ' → logprob: -16.875022888183594
    10. '=' → logprob: -16.875022888183594

Token 304: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.4121114822482923e-06
    2. ' g' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.125003814697266
    4. ' ' → logprob: -18.625003814697266
    5. '  ' → logprob: -19.000003814697266
    6. ')' → logprob: -19.000003814697266
    7. '_g' → logprob: -19.125003814697266
    8. '
' → logprob: -19.250003814697266
    9. '	g' → logprob: -19.250003814697266
    10. '.g' → logprob: -19.625003814697266

Token 305: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -7.3458322731312364e-06
    2. 'used' → logprob: -12.000007629394531
    3. '_USED' → logprob: -14.000007629394531
    4. 'Used' → logprob: -15.000007629394531
    5. '_unused' → logprob: -17.12500762939453
    6. '_' → logprob: -18.00000762939453
    7. '.used' → logprob: -18.87500762939453
    8. '_owned' → logprob: -19.12500762939453
    9. ' used' → logprob: -19.25000762939453
    10. ' Used' → logprob: -19.37500762939453

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ',j' → logprob: -11.375021934509277
    3. ' ,' → logprob: -11.625021934509277
    4. ',
' → logprob: -13.625021934509277
    5. '<|end|>' → logprob: -15.875021934509277
    6. '‌,' → logprob: -16.250022888183594
    7. ',

' → logprob: -16.500022888183594
    8. ',user' → logprob: -17.125022888183594
    9. ')' → logprob: -17.500022888183594
    10. ',k' → logprob: -18.375022888183594

Token 307: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759425759315491
    2. 'j' → logprob: -0.8259425759315491
    3. ' ' → logprob: -13.700942993164062
    4. '   ' → logprob: -14.200942993164062
    5. '  ' → logprob: -14.575942993164062
    6. '    ' → logprob: -14.700942993164062
    7. '	j' → logprob: -15.575942993164062
    8. '(j' → logprob: -16.200942993164062
    9. ',j' → logprob: -17.450942993164062
    10. '$j' → logprob: -17.700942993164062

Token 308: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.014249535277485847
    2. 'used' → logprob: -4.264249324798584
    3. 'ed' → logprob: -10.014249801635742
    4. '_USED' → logprob: -11.639249801635742
    5. 'Used' → logprob: -11.764249801635742
    6. '   ' → logprob: -11.889249801635742
    7. 'sed' → logprob: -12.139249801635742
    8. '```' → logprob: -13.264249801635742
    9. ')' → logprob: -13.389249801635742
    10. ' used' → logprob: -13.514249801635742

Token 309: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4580797851085663
    2. ')' → logprob: -1.2080798149108887
    3. ')]' → logprob: -2.7080798149108887
    4. '])' → logprob: -6.208079814910889
    5. ' )' → logprob: -10.45807933807373
    6. ']=' → logprob: -10.95807933807373
    7. ' ]' → logprob: -12.45807933807373
    8. ')=' → logprob: -13.20807933807373
    9. ')])' → logprob: -14.33307933807373
    10. '])]' → logprob: -14.45807933807373

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. ' =(' → logprob: -17.075939178466797
    4. '=
' → logprob: -17.325939178466797
    5. '＝' → logprob: -17.450939178466797
    6. ')' → logprob: -17.825939178466797
    7. '=(' → logprob: -17.950939178466797
    8. ')=' → logprob: -18.075939178466797
    9. '=end' → logprob: -18.075939178466797
    10. ' =)' → logprob: -18.075939178466797

Token 311: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.000916935910936445
    2. ' (' → logprob: -7.000916957855225
    3. '   ' → logprob: -12.375916481018066
    4. '(' → logprob: -14.000916481018066
    5. '[g' → logprob: -15.375916481018066
    6. '((' → logprob: -16.250917434692383
    7. 'g' → logprob: -16.750917434692383
    8. '  ' → logprob: -18.250917434692383
    9. ' ' → logprob: -18.250917434692383
    10. ' g' → logprob: -18.750917434692383

Token 312: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.696889623621246e-06
    2. ' g' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.750001907348633
    4. '(g' → logprob: -18.375001907348633
    5. '	g' → logprob: -18.750001907348633
    6. '[g' → logprob: -19.875001907348633
    7. '_g' → logprob: -20.375001907348633
    8. 'gate' → logprob: -20.500001907348633
    9. '
' → logprob: -20.500001907348633
    10. '    ' → logprob: -21.000001907348633

Token 313: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -3.4121114822482923e-06
    2. '_w' → logprob: -13.000003814697266
    3. 'win' → logprob: -13.750003814697266
    4. '_' → logprob: -17.875003814697266
    5. '_WIN' → logprob: -20.375003814697266
    6. 'w' → logprob: -20.625003814697266
    7. ' win' → logprob: -20.750003814697266
    8. 'Win' → logprob: -20.875003814697266
    9. '-win' → logprob: -21.125003814697266
    10. '_in' → logprob: -21.125003814697266

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. ' ,' → logprob: -10.50003719329834
    3. ',j' → logprob: -12.00003719329834
    4. ',
' → logprob: -13.00003719329834
    5. ',g' → logprob: -14.25003719329834
    6. '+' → logprob: -16.375036239624023
    7. ',n' → logprob: -17.125036239624023
    8. '‌,' → logprob: -17.250036239624023
    9. ',k' → logprob: -17.375036239624023
    10. ' ' → logprob: -18.125036239624023

Token 315: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1602245420217514
    2. ' j' → logprob: -1.9102245569229126
    3. '   ' → logprob: -15.410224914550781
    4. '	j' → logprob: -15.910224914550781
    5. ' ' → logprob: -17.41022491455078
    6. '    ' → logprob: -17.53522491455078
    7. '  ' → logprob: -17.53522491455078
    8. '[j' → logprob: -18.66022491455078
    9. '$j' → logprob: -18.78522491455078
    10. '          ' → logprob: -18.91022491455078

Token 316: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -1.747814349073451e-05
    2. 'win' → logprob: -11.375017166137695
    3. '_w' → logprob: -12.250017166137695
    4. 'ow' → logprob: -14.000017166137695
    5. 'w' → logprob: -16.625017166137695
    6. ' win' → logprob: -17.250017166137695
    7. ')' → logprob: -17.750017166137695
    8. 'Win' → logprob: -17.750017166137695
    9. '_on' → logprob: -18.000017166137695
    10. 'un' → logprob: -18.125017166137695

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023279840126633644
    2. ')
' → logprob: -3.773279905319214
    3. '   ' → logprob: -10.398280143737793
    4. ')return' → logprob: -13.023280143737793
    5. ')
' → logprob: -13.898280143737793
    6. ' )' → logprob: -15.023280143737793
    7. ')

' → logprob: -15.273280143737793
    8. '),' → logprob: -16.773279190063477
    9. ' )
' → logprob: -17.273279190063477
    10. '))' → logprob: -17.648279190063477

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.214019307051785e-05
    2. 'return' → logprob: -10.375032424926758
    3. ' return' → logprob: -14.625032424926758
    4. '	return' → logprob: -16.000032424926758
    5. '```' → logprob: -16.375032424926758
    6. '    
' → logprob: -16.625032424926758
    7. '       ' → logprob: -17.125032424926758
    8. '  ' → logprob: -18.250032424926758
    9. ':return' → logprob: -18.625032424926758
    10. '<|end|>' → logprob: -19.250032424926758

Token 319: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015079588629305363
    2. 'return' (adapté à ' return') → logprob: -6.501507759094238
    3. ' return' → logprob: -12.126507759094238
    4. '    
' → logprob: -16.251508712768555
    5. '	return' → logprob: -16.626508712768555
    6. '       ' → logprob: -18.001508712768555
    7. '```' → logprob: -18.126508712768555
    8. ':return' → logprob: -18.501508712768555
    9. '  ' → logprob: -19.001508712768555
    10. '
' → logprob: -19.001508712768555

Token 320: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.02544880472123623
    2. '(cache' → logprob: -4.275448799133301
    3. ' (' → logprob: -4.775448799133301
    4. 'cache' → logprob: -5.900448799133301
    5. ' cache' → logprob: -10.0254487991333
    6. '(G' → logprob: -13.6504487991333
    7. '   ' → logprob: -13.9004487991333
    8. 'g' → logprob: -14.0254487991333
    9. ' ' → logprob: -14.5254487991333
    10. '(c' → logprob: -14.7754487991333

Token 321: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.128163257315464e-07
    2. ' g' → logprob: -15.5
    3. '   ' → logprob: -18.625
    4. '	g' → logprob: -20.375
    5. 'gate' → logprob: -20.875
    6. '
' → logprob: -21.125
    7. ')' → logprob: -21.25
    8. ' ' → logprob: -21.5
    9. '[g' → logprob: -21.75
    10. '(g' → logprob: -21.875

Token 322: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.00010330478107789531
    2. 'win' → logprob: -9.250102996826172
    3. '_w' → logprob: -11.875102996826172
    4. 'w' → logprob: -17.000102996826172
    5. 'g' → logprob: -17.625102996826172
    6. 'Win' → logprob: -18.125102996826172
    7. ' win' → logprob: -18.250102996826172
    8. '_' → logprob: -18.375102996826172
    9. '_WIN' → logprob: -18.500102996826172
    10. '	win' → logprob: -18.875102996826172

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ' ,' → logprob: -11.125018119812012
    3. ',j' → logprob: -12.625018119812012
    4. ',
' → logprob: -15.500018119812012
    5. ',g' → logprob: -17.000019073486328
    6. '   ' → logprob: -17.250019073486328
    7. '+' → logprob: -18.750019073486328
    8. ')' → logprob: -19.000019073486328
    9. '```' → logprob: -19.625019073486328
    10. '‌,' → logprob: -20.000019073486328

Token 324: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04300045222043991
    2. ' j' → logprob: -3.1680004596710205
    3. ' ' → logprob: -14.543000221252441
    4. '   ' → logprob: -14.793000221252441
    5. '  ' → logprob: -15.793000221252441
    6. '	j' → logprob: -15.918000221252441
    7. '
' → logprob: -16.793001174926758
    8. '    ' → logprob: -17.043001174926758
    9. ')' → logprob: -17.668001174926758
    10. ' ' → logprob: -17.918001174926758

Token 325: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.0005320638883858919
    2. 'win' → logprob: -7.625532150268555
    3. '_w' → logprob: -10.125532150268555
    4. 'w' → logprob: -12.875532150268555
    5. ')' → logprob: -14.875532150268555
    6. '_stop' → logprob: -16.000532150268555
    7. '_score' → logprob: -16.250532150268555
    8. '_loss' → logprob: -16.375532150268555
    9. '_' → logprob: -16.750532150268555
    10. '_wait' → logprob: -16.875532150268555

Token 326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -16.0
    4. '}' → logprob: -17.75
    5. ')}' → logprob: -18.5
    6. ')#' → logprob: -18.75
    7. '   ' → logprob: -18.75
    8. ')return' → logprob: -19.0
    9. '),' → logprob: -19.375
    10. ')

' → logprob: -19.375

Token 327: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14059442281723022
    2. 'def' → logprob: -2.640594482421875
    3. 'if' → logprob: -3.140594482421875
    4. '#' → logprob: -4.265594482421875
    5. 'N' → logprob: -7.140594482421875
    6. 'gate' → logprob: -7.140594482421875
    7. '```' → logprob: -7.515594482421875
    8. 'g' → logprob: -9.265594482421875
    9. 'import' → logprob: -9.765594482421875
    10. '(n' → logprob: -9.890594482421875

Token 328: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.694496214389801
    2. 'main' → logprob: -0.694496214389801
    3. 'solve' → logprob: -6.819496154785156
    4. ' solve' → logprob: -8.694496154785156
    5. 'calculate' → logprob: -10.694496154785156
    6. 'simulate' → logprob: -11.319496154785156
    7. 'play' → logprob: -11.569496154785156
    8. 'read' → logprob: -11.944496154785156
    9. 'count' → logprob: -12.319496154785156
    10. 'solution' → logprob: -12.444496154785156

Token 329: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.696077227592468e-05
    2. '():
' → logprob: -9.750077247619629
    3. ' ():' → logprob: -11.000077247619629
    4. '()' → logprob: -14.000077247619629
    5. '_' → logprob: -14.500077247619629
    6. '():
' → logprob: -15.000077247619629
    7. '(' → logprob: -15.625077247619629
    8. '():

' → logprob: -16.875076293945312
    9. '(":' → logprob: -18.375076293945312
    10. ':' → logprob: -18.375076293945312

Token 330: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018645823001861572
    2. '   ' → logprob: -4.018645763397217
    3. ' n' → logprob: -7.768645763397217
    4. '```' → logprob: -9.643646240234375
    5. '	n' → logprob: -12.393646240234375
    6. 'import' → logprob: -13.518646240234375
    7. '(n' → logprob: -13.643646240234375
    8. '_n' → logprob: -14.518646240234375
    9. ',n' → logprob: -14.768646240234375
    10. '``' → logprob: -15.518646240234375

Token 331: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38351112604141235
    2. 't' → logprob: -1.8835110664367676
    3. ' n' → logprob: -2.7585110664367676
    4. '   ' → logprob: -3.1335110664367676
    5. 'T' → logprob: -3.6335110664367676
    6. ' t' → logprob: -3.8835110664367676
    7. ' T' → logprob: -4.758511066436768
    8. 'N' → logprob: -6.133511066436768
    9. 'import' → logprob: -6.758511066436768
    10. ' N' → logprob: -8.383511543273926

Token 332: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15760453045368195
    2. '_data' → logprob: -2.282604455947876
    3. '_line' → logprob: -3.407604455947876
    4. '_lines' → logprob: -5.657604694366455
    5. ' =' → logprob: -6.032604694366455
    6. '_' → logprob: -6.407604694366455
    7. '_str' → logprob: -6.532604694366455
    8. '=' → logprob: -7.407604694366455
    9. '_text' → logprob: -7.907604694366455
    10. '_list' → logprob: -8.532604217529297

Token 333: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5802843570709229
    2. 'sys' → logprob: -0.8302843570709229
    3. 'input' → logprob: -5.955284118652344
    4. ' input' → logprob: -6.455284118652344
    5. 'lambda' → logprob: -9.330284118652344
    6. ' lambda' → logprob: -9.705284118652344
    7. '=sys' → logprob: -11.455284118652344
    8. '	sys' → logprob: -12.455284118652344
    9. 'int' → logprob: -13.205284118652344
    10. '(sys' → logprob: -13.205284118652344

Token 334: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.6537622034084052e-05
    2. '.' → logprob: -11.37502670288086
    3. '.stdout' → logprob: -11.62502670288086
    4. '.std' → logprob: -13.00002670288086
    5. '.argv' → logprob: -13.12502670288086
    6. '.readline' → logprob: -13.87502670288086
    7. '.input' → logprob: -14.50002670288086
    8. 'stdin' → logprob: -15.50002670288086
    9. ' .' → logprob: -17.00002670288086
    10. '.setdefault' → logprob: -17.37502670288086

Token 335: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00028302724240347743
    2. 'read' → logprob: -8.625283241271973
    3. '.read' → logprob: -9.375283241271973
    4. '.stdin' → logprob: -11.750283241271973
    5. '_read' → logprob: -13.000283241271973
    6. 'stdin' → logprob: -13.500283241271973
    7. 'input' → logprob: -13.750283241271973
    8. '.readlines' → logprob: -13.750283241271973
    9. '=' → logprob: -13.875283241271973
    10. 'reader' → logprob: -14.250283241271973

Token 336: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006817431654781103
    2. '()' → logprob: -5.25681734085083
    3. '().' → logprob: -7.00681734085083
    4. '()
' → logprob: -8.131817817687988
    5. '(n' → logprob: -8.506817817687988
    6. '    
' → logprob: -9.256817817687988
    7. 'n' → logprob: -10.256817817687988
    8. '(' → logprob: -11.131817817687988
    9. 'def' → logprob: -11.631817817687988
    10. '()\' → logprob: -12.381817817687988

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011130230501294136
    2. 'n' → logprob: -4.511130332946777
    3. 't' → logprob: -10.261130332946777
    4. ' n' → logprob: -11.261130332946777
    5. '
' → logprob: -11.511130332946777
    6. '	n' → logprob: -11.511130332946777
    7. '    
' → logprob: -11.636130332946777
    8. '(n' → logprob: -12.761130332946777
    9. 'N' → logprob: -13.761130332946777
    10. '```' → logprob: -14.636130332946777

Token 338: ' T' (ID: 353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2389156073331833
    2. 'T' (adapté à ' T') → logprob: -2.1139156818389893
    3. 't' → logprob: -2.4889156818389893
    4. 'N' → logprob: -4.86391544342041
    5. '   ' → logprob: -7.48891544342041
    6. 'for' → logprob: -8.86391544342041
    7. 'k' → logprob: -8.98891544342041
    8. 'num' → logprob: -9.23891544342041
    9. 'm' → logprob: -10.36391544342041
    10. ' T' → logprob: -10.98891544342041

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269921511411667
    2. '=' → logprob: -2.1269922256469727
    3. '=int' → logprob: -9.751992225646973
    4. ' ' → logprob: -12.626992225646973
    5. ',' → logprob: -13.626992225646973
    6. ' =
' → logprob: -15.126992225646973
    7. '   ' → logprob: -15.251992225646973
    8. '.' → logprob: -15.376992225646973
    9. '_' → logprob: -15.751992225646973
    10. 'int' → logprob: -15.876992225646973

Token 340: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759394764900208
    2. ' int' → logprob: -0.8259394764900208
    3. '[int' → logprob: -17.325939178466797
    4. '=int' → logprob: -17.950939178466797
    5. ' ' → logprob: -18.450939178466797
    6. '<int' → logprob: -18.575939178466797
    7. '10' → logprob: -18.825939178466797
    8. '(int' → logprob: -18.950939178466797
    9. '1' → logprob: -20.200939178466797
    10. ':int' → logprob: -20.700939178466797

Token 341: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002257902640849352
    2. '(sys' → logprob: -6.252257823944092
    3. '()' → logprob: -9.00225830078125
    4. 'input' → logprob: -9.12725830078125
    5. '(' → logprob: -9.25225830078125
    6. 'sys' → logprob: -14.37725830078125
    7. ' input' → logprob: -14.62725830078125
    8. '(stdin' → logprob: -15.75225830078125
    9. '=input' → logprob: -16.37725830078125
    10. '(System' → logprob: -16.50225830078125

Token 342: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3896731734275818
    2. '())' → logprob: -1.1396732330322266
    3. '().' → logprob: -5.889673233032227
    4. '(' → logprob: -11.389673233032227
    5. ')' → logprob: -12.764673233032227
    6. '())
' → logprob: -12.889673233032227
    7. '()]' → logprob: -13.139673233032227
    8. '();)' → logprob: -13.139673233032227
    9. '()[' → logprob: -13.264673233032227
    10. '()
' → logprob: -13.514673233032227

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009859968908131123
    2. ' for' → logprob: -5.259860038757324
    3. 'for' → logprob: -5.384860038757324
    4. '    
' → logprob: -10.759860038757324
    5. '
' → logprob: -12.634860038757324
    6. '<|end|>' → logprob: -12.759860038757324
    7. '	for' → logprob: -13.634860038757324
    8. '```' → logprob: -14.009860038757324
    9. '   ' → logprob: -16.384859085083008
    10. ' ' → logprob: -16.759859085083008

Token 344: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06197440251708031
    2. ' for' → logprob: -2.811974287033081
    3. '   ' → logprob: -12.06197452545166
    4. '
' → logprob: -14.68697452545166
    5. '	for' → logprob: -15.31197452545166
    6. 'results' → logprob: -15.56197452545166
    7. 'while' → logprob: -15.93697452545166
    8. '```' → logprob: -16.311973571777344
    9. '    
' → logprob: -17.561973571777344
    10. ' results' → logprob: -17.811973571777344

Token 345: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00671584764495492
    2. ' _' → logprob: -5.006715774536133
    3. '_case' → logprob: -15.631715774536133
    4. '_t' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.381715774536133
    6. '_=' → logprob: -17.381715774536133
    7. '_tc' → logprob: -18.131715774536133
    8. ' t' → logprob: -18.256715774536133
    9. '_i' → logprob: -18.256715774536133
    10. ' case' → logprob: -18.506715774536133

Token 346: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0180542469024658
    2. ' range' → logprob: -1.1430542469024658
    3. ' in' → logprob: -1.7680542469024658
    4. 'range' → logprob: -2.018054246902466
    5. 'in' → logprob: -4.143054008483887
    6. '(' → logprob: -8.393054008483887
    7. ' _' → logprob: -9.393054008483887
    8. ' ' → logprob: -10.893054008483887
    9. '_range' → logprob: -10.893054008483887
    10. '(range' → logprob: -11.143054008483887

Token 347: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026181264547631145
    2. ' range' → logprob: -8.250262260437012
    3. 'T' → logprob: -15.125262260437012
    4. '(range' → logprob: -16.125261306762695
    5. ' ' → logprob: -17.750261306762695
    6. 'in' → logprob: -17.875261306762695
    7. '	range' → logprob: -17.875261306762695
    8. 'input' → logprob: -18.375261306762695
    9. '(' → logprob: -19.000261306762695
    10. '   ' → logprob: -19.000261306762695

Token 348: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07824423164129257
    2. '(T' → logprob: -3.078244209289551
    3. ' (' → logprob: -3.578244209289551
    4. ' T' → logprob: -7.703244209289551
    5. ' range' → logprob: -7.828244209289551
    6. '(range' → logprob: -8.45324420928955
    7. '()' → logprob: -9.20324420928955
    8. '(int' → logprob: -10.20324420928955
    9. '(
' → logprob: -10.57824420928955
    10. 'range' → logprob: -11.07824420928955

Token 349: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07951391488313675
    2. '):
' → logprob: -2.5795140266418457
    3. ':' → logprob: -7.579514026641846
    4. '   ' → logprob: -9.579513549804688
    5. '():' → logprob: -11.329513549804688
    6. '():
' → logprob: -11.454513549804688
    7. ':
' → logprob: -11.704513549804688
    8. ')' → logprob: -12.329513549804688
    9. '):
' → logprob: -12.329513549804688
    10. ',' → logprob: -13.579513549804688

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008327359100803733
    2. '<|end|>' → logprob: -8.375832557678223
    3. '```' → logprob: -8.500832557678223
    4. 'n' → logprob: -8.625832557678223
    5. '(n' → logprob: -9.500832557678223
    6. '<|end|>' → logprob: -10.625832557678223
    7. '        
' → logprob: -10.625832557678223
    8. '[' → logprob: -10.750832557678223
    9. 'def' → logprob: -11.250832557678223
    10. '   ' → logprob: -11.625832557678223

Token 351: ' gate' (ID: 27172)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0683903694152832
    2. '       ' → logprob: -3.318390369415283
    3. ' n' → logprob: -3.693390369415283
    4. 'N' → logprob: -5.818390369415283
    5. '   ' → logprob: -6.318390369415283
    6. ' N' → logprob: -8.818389892578125
    7. '	n' → logprob: -10.068389892578125
    8. ' ' → logprob: -11.568389892578125
    9. '           ' → logprob: -12.068389892578125
    10. '```' → logprob: -12.568389892578125

Token 352: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.001960393972694874
    2. ',' → logprob: -6.376960277557373
    3. ' =' → logprob: -9.376960754394531
    4. '_,' → logprob: -9.876960754394531
    5. '_' → logprob: -10.251960754394531
    6. ',_' → logprob: -10.751960754394531
    7. ' ,' → logprob: -11.251960754394531
    8. '_len' → logprob: -11.251960754394531
    9. '_scores' → logprob: -12.126960754394531
    10. '   ' → logprob: -12.251960754394531

Token 353: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5284386873245239
    2. ',' → logprob: -1.278438687324524
    3. '=' → logprob: -2.0284385681152344
    4. ' ,' → logprob: -7.778438568115234
    5. '   ' → logprob: -11.403438568115234
    6. ',n' → logprob: -11.403438568115234
    7. '<|end|>' → logprob: -12.903438568115234
    8. '=int' → logprob: -13.028438568115234
    9. ' ' → logprob: -13.153438568115234
    10. '=[]' → logprob: -13.653438568115234

Token 354: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5759813785552979
    2. 'list' → logprob: -0.8259813785552979
    3. '[list' → logprob: -10.700981140136719
    4. '[' → logprob: -10.950981140136719
    5. ' [' → logprob: -13.450981140136719
    6. '=list' → logprob: -15.575981140136719
    7. '	list' → logprob: -16.45098114013672
    8. '(list' → logprob: -16.57598114013672
    9. '[]' → logprob: -17.57598114013672
    10. 'sorted' → logprob: -18.07598114013672

Token 355: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. 'map' → logprob: -14.625007629394531
    4. '(int' → logprob: -16.00000762939453
    5. '()' → logprob: -17.00000762939453
    6. '(
' → logprob: -17.62500762939453
    7. '(input' → logprob: -18.25000762939453
    8. '(range' → logprob: -18.25000762939453
    9. ' map' → logprob: -18.62500762939453
    10. '.map' → logprob: -19.12500762939453

Token 356: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014722455525770783
    2. 'int' → logprob: -6.626472473144531
    3. ',int' → logprob: -9.126472473144531
    4. '=int' → logprob: -11.626472473144531
    5. '[int' → logprob: -12.001472473144531
    6. ' int' → logprob: -12.126472473144531
    7. '<int' → logprob: -12.376472473144531
    8. '   ' → logprob: -12.626472473144531
    9. ')' → logprob: -12.751472473144531
    10. '(' → logprob: -12.751472473144531

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6966444849967957
    2. ',input' → logprob: -0.6966444849967957
    3. '(input' → logprob: -5.821644306182861
    4. 'input' → logprob: -7.821644306182861
    5. '   ' → logprob: -9.32164478302002
    6. ' ,' → logprob: -10.94664478302002
    7. '(' → logprob: -12.07164478302002
    8. '=input' → logprob: -12.32164478302002
    9. ' input' → logprob: -13.07164478302002
    10. '[input' → logprob: -13.19664478302002

Token 358: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01416350994259119
    2. ' input' → logprob: -4.264163494110107
    3. '(input' → logprob: -18.514163970947266
    4. '   ' → logprob: -18.514163970947266
    5. ' ' → logprob: -19.014163970947266
    6. '	input' → logprob: -19.139163970947266
    7. ',input' → logprob: -19.389163970947266
    8. '=input' → logprob: -19.639163970947266
    9. '<input' → logprob: -20.389163970947266
    10. '           ' → logprob: -20.764163970947266

Token 359: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -15.750001907348633
    4. '.readline' → logprob: -18.000001907348633
    5. '()
' → logprob: -18.875001907348633
    6. '.strip' → logprob: -19.375001907348633
    7. '(' → logprob: -19.500001907348633
    8. '()))' → logprob: -19.875001907348633
    9. '())))' → logprob: -19.875001907348633
    10. 'split' → logprob: -20.250001907348633

Token 360: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038240812718868256
    2. 'strip' → logprob: -3.288240909576416
    3. 'rstrip' → logprob: -8.913240432739258
    4. 'read' → logprob: -9.788240432739258
    5. ' split' → logprob: -12.163240432739258
    6. '(split' → logprob: -13.038240432739258
    7. ' strip' → logprob: -13.913240432739258
    8. ')' → logprob: -16.038240432739258
    9. '.readline' → logprob: -16.288240432739258
    10. '().' → logprob: -17.038240432739258

Token 361: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008825395256280899
    2. '))' → logprob: -5.508825302124023
    3. '()' → logprob: -5.883825302124023
    4. '()))
' → logprob: -6.258825302124023
    5. '(' → logprob: -11.258825302124023
    6. '()));' → logprob: -11.633825302124023
    7. '())' → logprob: -12.383825302124023
    8. '()))

' → logprob: -12.758825302124023
    9. '().' → logprob: -13.258825302124023
    10. '(),' → logprob: -13.383825302124023

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01830258220434189
    2. 'jack' → logprob: -4.0183024406433105
    3. ' jack' → logprob: -9.643302917480469
    4. '<|end|>' → logprob: -10.768302917480469
    5. '        
' → logprob: -11.143302917480469
    6. '   ' → logprob: -11.393302917480469
    7. 'j' → logprob: -11.768302917480469
    8. '```' → logprob: -11.893302917480469
    9. '
' → logprob: -12.268302917480469
    10. 'Jack' → logprob: -12.393302917480469

Token 363: ' jack' (ID: 21273)
  Prédit: 'jack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jack' (adapté à ' jack') → logprob: -0.00979292206466198
    2. '       ' → logprob: -4.634792804718018
    3. ' jack' → logprob: -10.759793281555176
    4. 'j' → logprob: -11.759793281555176
    5. '   ' → logprob: -12.509793281555176
    6. 'john' → logprob: -13.759793281555176
    7. ' ' → logprob: -14.009793281555176
    8. 'jac' → logprob: -14.884793281555176
    9. '           ' → logprob: -15.259793281555176
    10. '	' → logprob: -15.634793281555176

Token 364: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.615255839889869e-05
    2. '_cards' → logprob: -9.250096321105957
    3. '_y' → logprob: -17.87509536743164
    4. 'cards' → logprob: -19.25009536743164
    5. '```' → logprob: -19.87509536743164
    6. 'yj' → logprob: -20.25009536743164
    7. '   ' → logprob: -20.62509536743164
    8. ' cards' → logprob: -20.87509536743164
    9. 'yc' → logprob: -21.00009536743164
    10. '	y' → logprob: -21.00009536743164

Token 365: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -5.080963092041202e-06
    2. '=' → logprob: -13.750004768371582
    3. '=_' → logprob: -13.875004768371582
    4. ' _' → logprob: -14.125004768371582
    5. ' =' → logprob: -14.125004768371582
    6. ')_' → logprob: -14.750004768371582
    7. '_' → logprob: -15.250004768371582
    8. '```' → logprob: -15.750004768371582
    9. ''_' → logprob: -16.0000057220459
    10. '_codes' → logprob: -16.1250057220459

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. '=list' → logprob: -15.761871337890625
    4. '=
' → logprob: -16.011871337890625
    5. ' ' → logprob: -16.261871337890625
    6. '   ' → logprob: -16.386871337890625
    7. '＝' → logprob: -17.261871337890625
    8. ')' → logprob: -17.511871337890625
    9. ')=' → logprob: -17.886871337890625
    10. ' =
' → logprob: -18.011871337890625

Token 367: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10020732134580612
    2. ' list' → logprob: -2.3502073287963867
    3. '(list' → logprob: -14.225207328796387
    4. '=list' → logprob: -17.22520637512207
    5. 'List' → logprob: -18.85020637512207
    6. ':list' → logprob: -19.47520637512207
    7. '	list' → logprob: -20.10020637512207
    8. '[list' → logprob: -20.10020637512207
    9. '_list' → logprob: -20.97520637512207
    10. 'sorted' → logprob: -21.47520637512207

Token 368: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.125210297293961e-05
    2. '(int' → logprob: -9.500081062316895
    3. 'map' → logprob: -12.375081062316895
    4. '(' → logprob: -13.375081062316895
    5. ' map' → logprob: -15.250081062316895
    6. '.map' → logprob: -16.75008201599121
    7. '	map' → logprob: -17.00008201599121
    8. '(list' → logprob: -17.12508201599121
    9. ' (' → logprob: -17.75008201599121
    10. 'int' → logprob: -18.37508201599121

Token 369: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.5941604690160602e-05
    2. 'int' → logprob: -11.000025749206543
    3. '=int' → logprob: -12.125025749206543
    4. '[int' → logprob: -13.000025749206543
    5. ',int' → logprob: -14.375025749206543
    6. '<int' → logprob: -14.625025749206543
    7. ' int' → logprob: -15.875025749206543
    8. ' (' → logprob: -16.00002670288086
    9. ']int' → logprob: -17.25002670288086
    10. ':int' → logprob: -17.37502670288086

Token 370: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.27160635590553284
    2. ',' → logprob: -1.8966063261032104
    3. ',int' → logprob: -2.5216064453125
    4. 'int' → logprob: -5.5216064453125
    5. '=int' → logprob: -5.8966064453125
    6. '   ' → logprob: -8.5216064453125
    7. ',input' → logprob: -8.8966064453125
    8. '[int' → logprob: -9.2716064453125
    9. '<int' → logprob: -9.2716064453125
    10. '(),' → logprob: -10.0216064453125

Token 371: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0038853425066918135
    2. 'int' → logprob: -5.753885269165039
    3. ' input' → logprob: -7.253885269165039
    4. ' int' → logprob: -16.75388526916504
    5. '<input' → logprob: -21.75388526916504
    6. '(input' → logprob: -22.37888526916504
    7. ' ' → logprob: -23.37888526916504
    8. 'sys' → logprob: -23.87888526916504
    9. ',input' → logprob: -24.00388526916504
    10. '[int' → logprob: -24.12888526916504

Token 372: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.25000286102295
    3. '()))' → logprob: -14.37500286102295
    4. '.readline' → logprob: -16.750001907348633
    5. ' ().' → logprob: -17.125001907348633
    6. '())' → logprob: -17.250001907348633
    7. '()
' → logprob: -17.500001907348633
    8. '()[' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '()));' → logprob: -18.375001907348633

Token 373: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'strip' → logprob: -15.25
    3. ' split' → logprob: -17.625
    4. 'read' → logprob: -18.875
    5. '(split' → logprob: -18.875
    6. 'sys' → logprob: -19.375
    7. '```' → logprob: -19.375
    8. 'spl' → logprob: -19.875
    9. 'rstrip' → logprob: -20.375
    10. ')' → logprob: -20.5

Token 374: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.031865138560533524
    2. '()))
' → logprob: -3.531865119934082
    3. '))' → logprob: -6.406865119934082
    4. '()' → logprob: -7.781865119934082
    5. '())' → logprob: -10.781865119934082
    6. '()))
' → logprob: -11.656865119934082
    7. '))
' → logprob: -12.406865119934082
    8. '()))

' → logprob: -12.406865119934082
    9. '()));' → logprob: -12.531865119934082
    10. '   ' → logprob: -13.906865119934082

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001519026467576623
    2. '```' → logprob: -7.126519203186035
    3. '<|end|>' → logprob: -7.626519203186035
    4. '   ' → logprob: -9.251519203186035
    5. '        
' → logprob: -9.751519203186035
    6. '
' → logprob: -11.251519203186035
    7. '[' → logprob: -11.501519203186035
    8. '<|end|>' → logprob: -11.876519203186035
    9. '{' → logprob: -12.126519203186035
    10. ',' → logprob: -12.126519203186035

Token 376: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' (adapté à ' cache') → logprob: -0.0016876778099685907
    2. '       ' → logprob: -6.501687526702881
    3. ' cache' → logprob: -8.876688003540039
    4. '```' → logprob: -10.751688003540039
    5. 'total' → logprob: -12.001688003540039
    6. 'result' → logprob: -12.001688003540039
    7. '           ' → logprob: -12.751688003540039
    8. '   ' → logprob: -12.751688003540039
    9. '
' → logprob: -13.251688003540039
    10. 'g' → logprob: -13.501688003540039

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05502253398299217
    2. '=' → logprob: -2.9300224781036377
    3. '={}' → logprob: -8.930022239685059
    4. '={' → logprob: -12.555022239685059
    5. ' ={' → logprob: -13.305022239685059
    6. '   ' → logprob: -14.180022239685059
    7. '={}
' → logprob: -14.555022239685059
    8. '={(' → logprob: -15.305022239685059
    9. ',' → logprob: -15.680022239685059
    10. '<|end|>' → logprob: -15.680022239685059

Token 378: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -8.77627644513268e-06
    2. 'dict' → logprob: -11.750008583068848
    3. '{}
' → logprob: -14.500008583068848
    4. ' {}' → logprob: -15.250008583068848
    5. '{})' → logprob: -17.125009536743164
    6. ' dict' → logprob: -18.250009536743164
    7. '{}

' → logprob: -18.375009536743164
    8. '={}' → logprob: -19.750009536743164
    9. '{}\' → logprob: -20.375009536743164
    10. '{},' → logprob: -20.500009536743164

Token 379: '       ' (ID: 309)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8308441638946533
    2. '   ' → logprob: -1.2058441638946533
    3. '       ' → logprob: -2.0808441638946533
    4. 'result' → logprob: -2.8308441638946533
    5. '```' → logprob: -3.2058441638946533
    6. ' g' → logprob: -4.330843925476074
    7. 'res' → logprob: -4.705843925476074
    8. 'win' → logprob: -5.455843925476074
    9. ',g' → logprob: -6.080843925476074
    10. ' result' → logprob: -6.205843925476074

Token 380: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0012585645308718085
    2. 'gw' → logprob: -7.501258373260498
    3. ' g' → logprob: -8.251258850097656
    4. '   ' → logprob: -8.751258850097656
    5. 'result' → logprob: -9.001258850097656
    6. '       ' → logprob: -9.376258850097656
    7. 'res' → logprob: -11.376258850097656
    8. 'results' → logprob: -11.501258850097656
    9. 'gate' → logprob: -11.626258850097656
    10. 'total' → logprob: -11.876258850097656

Token 381: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.006003448273986578
    2. '_w' → logprob: -5.131003379821777
    3. 'win' → logprob: -10.756003379821777
    4. '_score' → logprob: -11.506003379821777
    5. '_result' → logprob: -11.756003379821777
    6. '_results' → logprob: -11.881003379821777
    7. '_res' → logprob: -12.381003379821777
    8. '_' → logprob: -12.506003379821777
    9. '_print' → logprob: -12.881003379821777
    10. 'wins' → logprob: -13.131003379821777

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011224760673940182
    2. ',g' → logprob: -6.87612247467041
    3. ',j' → logprob: -9.62612247467041
    4. ' ,' → logprob: -10.75112247467041
    5. 'g' → logprob: -14.00112247467041
    6. '=' → logprob: -14.87612247467041
    7. ',w' → logprob: -15.25112247467041
    8. '_,' → logprob: -15.37612247467041
    9. ',k' → logprob: -16.376123428344727
    10. ',total' → logprob: -16.501123428344727

Token 383: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01814994215965271
    2. ' j' → logprob: -4.0181498527526855
    3. '	j' → logprob: -17.643150329589844
    4. 'g' → logprob: -17.893150329589844
    5. 'total' → logprob: -18.893150329589844
    6. ' ' → logprob: -19.018150329589844
    7. '_j' → logprob: -19.518150329589844
    8. '   ' → logprob: -19.643150329589844
    9. ' total' → logprob: -20.268150329589844
    10. '$j' → logprob: -20.268150329589844

Token 384: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -9.984787902794778e-05
    2. 'win' → logprob: -9.250100135803223
    3. '_w' → logprob: -13.125100135803223
    4. '_' → logprob: -14.250100135803223
    5. 'ack' → logprob: -15.375100135803223
    6. '_loss' → logprob: -15.625100135803223
    7. '_ack' → logprob: -15.750100135803223
    8. ' win' → logprob: -16.625099182128906
    9. 'w' → logprob: -16.625099182128906
    10. '_score' → logprob: -16.875099182128906

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889143377542496
    2. '=' → logprob: -2.5788915157318115
    3. ',' → logprob: -13.32889175415039
    4. '<|end|>' → logprob: -17.32889175415039
    5. ')' → logprob: -17.57889175415039
    6. ' ' → logprob: -17.95389175415039
    7. '＝' → logprob: -18.45389175415039
    8. '   ' → logprob: -18.45389175415039
    9. ')=' → logprob: -18.57889175415039
    10. '<|end|>' → logprob: -19.20389175415039

Token 386: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.10021551698446274
    2. 'dfs' → logprob: -2.350215435028076
    3. '   ' → logprob: -11.975215911865234
    4. 'df' → logprob: -13.225215911865234
    5. ' df' → logprob: -14.850215911865234
    6. ' ' → logprob: -16.225215911865234
    7. ' DFS' → logprob: -16.225215911865234
    8. '    ' → logprob: -17.100215911865234
    9. '       ' → logprob: -17.475215911865234
    10. '0' → logprob: -17.600215911865234

Token 387: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. '(
' → logprob: -16.750001907348633
    4. ' (' → logprob: -16.875001907348633
    5. '((' → logprob: -18.375001907348633
    6. '(G' → logprob: -18.375001907348633
    7. ',g' → logprob: -18.625001907348633
    8. '/g' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '_gate' → logprob: -19.250001907348633

Token 388: 'ate' (ID: 379)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.08905147016048431
    2. 'ate' → logprob: -2.5890514850616455
    3. 'gate' → logprob: -5.089051246643066
    4. '_gate' → logprob: -5.589051246643066
    5. 'cards' → logprob: -9.964051246643066
    6. '(cards' → logprob: -10.089051246643066
    7. 'ates' → logprob: -10.964051246643066
    8. ' gate' → logprob: -11.089051246643066
    9. '       ' → logprob: -11.089051246643066
    10. '_codes' → logprob: -11.839051246643066

Token 389: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.7372048862162046e-05
    2. 'cards' → logprob: -11.125027656555176
    3. '       ' → logprob: -12.125027656555176
    4. '           ' → logprob: -13.625027656555176
    5. '   ' → logprob: -13.625027656555176
    6. '_codes' → logprob: -14.125027656555176
    7. '(cards' → logprob: -14.625027656555176
    8. ',' → logprob: -14.625027656555176
    9. '```' → logprob: -14.750027656555176
    10. '_c' → logprob: -14.875027656555176

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.245724504580721e-05
    2. ',j' → logprob: -9.375092506408691
    3. ' ,' → logprob: -12.250092506408691
    4. ',
' → logprob: -13.875092506408691
    5. ',g' → logprob: -14.000092506408691
    6. '       ' → logprob: -14.625092506408691
    7. '<|end|>' → logprob: -15.250092506408691
    8. ',n' → logprob: -17.000091552734375
    9. '   ' → logprob: -17.625091552734375
    10. ',d' → logprob: -17.875091552734375

Token 391: ' jack' (ID: 21273)
  Prédit: ' jack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jack' → logprob: -0.5761321187019348
    2. 'jack' → logprob: -0.8261321187019348
    3. 'j' → logprob: -8.826131820678711
    4. ' ' → logprob: -11.951131820678711
    5. '   ' → logprob: -11.951131820678711
    6. ' j' → logprob: -12.076131820678711
    7. ' gate' → logprob: -12.451131820678711
    8. 'john' → logprob: -12.701131820678711
    9. 'gate' → logprob: -12.826131820678711
    10. '    ' → logprob: -12.826131820678711

Token 392: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00018613664724398404
    2. '_cards' → logprob: -8.6251859664917
    3. 'yc' → logprob: -13.0001859664917
    4. 'yac' → logprob: -13.8751859664917
    5. '```' → logprob: -14.8751859664917
    6. 'cards' → logprob: -15.1251859664917
    7. 'ych' → logprob: -15.1251859664917
    8. 'jack' → logprob: -15.5001859664917
    9. 'yk' → logprob: -15.5001859664917
    10. 'yj' → logprob: -15.7501859664917

Token 393: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.4974866644479334e-05
    2. 'cards' → logprob: -11.375015258789062
    3. ',' → logprob: -13.125015258789062
    4. 'Cards' → logprob: -15.750015258789062
    5. '_card' → logprob: -15.750015258789062
    6. '_codes' → logprob: -15.875015258789062
    7. ' cards' → logprob: -15.875015258789062
    8. '   ' → logprob: -15.875015258789062
    9. '```' → logprob: -16.125015258789062
    10. ',_' → logprob: -16.250015258789062

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012224898673593998
    2. '0' → logprob: -7.376222610473633
    3. '(' → logprob: -7.626222610473633
    4. ' ,' → logprob: -9.251222610473633
    5. ' (' → logprob: -11.751222610473633
    6. ' ' → logprob: -13.501222610473633
    7. '       ' → logprob: -14.126222610473633
    8. ')' → logprob: -14.251222610473633
    9. '           ' → logprob: -15.001222610473633
    10. ',(' → logprob: -15.126222610473633

Token 395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '000' → logprob: -19.125011444091797
    4. '   ' → logprob: -19.375011444091797
    5. '
' → logprob: -20.000011444091797
    6. '00' → logprob: -20.625011444091797
    7. '۰' → logprob: -20.875011444091797
    8. '  ' → logprob: -21.250011444091797
    9. ')' → logprob: -21.500011444091797
    10. '       ' → logprob: -21.625011444091797

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '000' → logprob: -19.625001907348633
    4. '
' → logprob: -20.250001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '00' → logprob: -21.500001907348633
    7. '۰' → logprob: -21.875001907348633
    8. ')' → logprob: -22.125001907348633
    9. '(' → logprob: -22.437501907348633
    10. '     ' → logprob: -22.750001907348633

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. ' ,' → logprob: -10.625024795532227
    3. '0' → logprob: -14.500024795532227
    4. ',
' → logprob: -17.250024795532227
    5. ')' → logprob: -17.875024795532227
    6. ' ' → logprob: -18.000024795532227
    7. '<|end|>' → logprob: -18.125024795532227
    8. '   ' → logprob: -18.500024795532227
    9. '‌,' → logprob: -20.000024795532227
    10. '(),' → logprob: -20.125024795532227

Token 398: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.8750057220459
    4. '<|end|>' → logprob: -20.8750057220459
    5. '۰' → logprob: -20.8750057220459
    6. '           ' → logprob: -21.2500057220459
    7. '000' → logprob: -21.3750057220459
    8. '  ' → logprob: -21.7500057220459
    9. '    ' → logprob: -22.2500057220459
    10. ')' → logprob: -22.3750057220459

Token 399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '000' → logprob: -19.500001907348633
    4. '00' → logprob: -21.250001907348633
    5. '۰' → logprob: -21.625001907348633
    6. '   ' → logprob: -22.625001907348633
    7. ')' → logprob: -23.562501907348633
    8. '০' → logprob: -23.937501907348633
    9. '０' → logprob: -23.937501907348633
    10. '  ' → logprob: -24.250001907348633

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.500001907348633
    3. ' ,' → logprob: -14.250001907348633
    4. ')' → logprob: -16.750001907348633
    5. ',
' → logprob: -17.875001907348633
    6. '،' → logprob: -20.500001907348633
    7. '，' → logprob: -21.125001907348633
    8. '```' → logprob: -21.125001907348633
    9. '‌,' → logprob: -21.250001907348633
    10. '(),' → logprob: -21.375001907348633

Token 401: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.500045776367188
    4. '  ' → logprob: -22.000045776367188
    5. '    ' → logprob: -22.500045776367188
    6. '           ' → logprob: -23.125045776367188
    7. '۰' → logprob: -23.125045776367188
    8. '00' → logprob: -23.500045776367188
    9. '     ' → logprob: -23.750045776367188
    10. '        ' → logprob: -23.750045776367188

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.250017166137695
    4. '  ' → logprob: -19.000017166137695
    5. '00' → logprob: -19.625017166137695
    6. '    ' → logprob: -19.625017166137695
    7. '۰' → logprob: -20.375017166137695
    8. ',' → logprob: -20.437517166137695
    9. '           ' → logprob: -20.500017166137695
    10. '     ' → logprob: -20.625017166137695

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',
' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -15.875001907348633
    5. '0' → logprob: -17.000001907348633
    6. ')' → logprob: -17.375001907348633
    7. '‌,' → logprob: -18.750001907348633
    8. '<|end|>' → logprob: -19.250001907348633
    9. ',

' → logprob: -19.375001907348633
    10. '```' → logprob: -19.500001907348633

Token 404: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '           ' → logprob: -17.875709533691406
    4. '   ' → logprob: -18.375709533691406
    5. '       ' → logprob: -18.625709533691406
    6. '               ' → logprob: -19.625709533691406
    7. '    ' → logprob: -20.375709533691406
    8. '        ' → logprob: -20.625709533691406
    9. '  ' → logprob: -20.625709533691406
    10. '<|end|>' → logprob: -20.625709533691406

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.25002098083496
    4. '           ' → logprob: -20.12502098083496
    5. '  ' → logprob: -20.31252098083496
    6. '```' → logprob: -20.43752098083496
    7. '۰' → logprob: -21.00002098083496
    8. '       ' → logprob: -21.18752098083496
    9. '    ' → logprob: -21.18752098083496
    10. '     ' → logprob: -21.37502098083496

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04860054701566696
    2. ')' → logprob: -3.048600435256958
    3. ',)' → logprob: -11.673600196838379
    4. ' ,' → logprob: -13.423600196838379
    5. '0' → logprob: -13.673600196838379
    6. ' )' → logprob: -14.423600196838379
    7. '))' → logprob: -14.923600196838379
    8. '),' → logprob: -15.048600196838379
    9. ')}' → logprob: -16.298601150512695
    10. '<|end|>' → logprob: -16.548601150512695

Token 407: ' cache' (ID: 11956)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.014164329506456852
    2. ' cache' → logprob: -4.264164447784424
    3. '	cache' → logprob: -14.264163970947266
    4. '   ' → logprob: -16.389163970947266
    5. ' ' → logprob: -16.764163970947266
    6. '(cache' → logprob: -17.764163970947266
    7. ')' → logprob: -18.014163970947266
    8. '  ' → logprob: -18.264163970947266
    9. '.cache' → logprob: -18.389163970947266
    10. '       ' → logprob: -18.389163970947266

Token 408: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023315010592341423
    2. ')
' → logprob: -3.773314952850342
    3. '   ' → logprob: -9.7733154296875
    4. ')
' → logprob: -11.3983154296875
    5. ')

' → logprob: -14.7733154296875
    6. ' )' → logprob: -15.7733154296875
    7. '       ' → logprob: -16.0233154296875
    8. ')`
' → logprob: -16.2733154296875
    9. ')`' → logprob: -16.6483154296875
    10. ')\
' → logprob: -16.6483154296875

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022367320489138365
    2. 'print' → logprob: -6.752236843109131
    3. '```' → logprob: -7.252236843109131
    4. '   ' → logprob: -8.627236366271973
    5. '
' → logprob: -9.627236366271973
    6. '<|end|>' → logprob: -9.627236366271973
    7. '        
' → logprob: -11.127236366271973
    8. ' print' → logprob: -11.377236366271973
    9. '	' → logprob: -12.502236366271973
    10. '``' → logprob: -12.627236366271973

Token 410: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06273108720779419
    2. ' print' → logprob: -2.8127310276031494
    3. '```' → logprob: -7.5627312660217285
    4. '       ' → logprob: -8.56273078918457
    5. 'total' (adapté à ' total') → logprob: -10.93773078918457
    6. '   ' → logprob: -11.06273078918457
    7. 'if' → logprob: -11.81273078918457
    8. ' total' → logprob: -12.18773078918457
    9. ' if' → logprob: -12.81273078918457
    10. 'result' → logprob: -13.56273078918457

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744003117084503
    2. ' =' → logprob: -0.9744002819061279
    3. '_' → logprob: -8.349400520324707
    4. '_games' → logprob: -10.349400520324707
    5. '_tokens' → logprob: -10.474400520324707
    6. '_=' → logprob: -12.474400520324707
    7. '_cases' → logprob: -12.724400520324707
    8. '＝' → logprob: -12.849400520324707
    9. 's' → logprob: -12.849400520324707
    10. '=com' → logprob: -13.474400520324707

Token 412: ' g' (ID: 329)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0025743518490344286
    2. ' comb' → logprob: -6.377574443817139
    3. 'g' → logprob: -7.627574443817139
    4. 'com' → logprob: -8.75257396697998
    5. 'pow' → logprob: -9.62757396697998
    6. '2' → logprob: -10.37757396697998
    7. 'sum' → logprob: -10.50257396697998
    8. '1' → logprob: -10.87757396697998
    9. 'fact' → logprob: -10.87757396697998
    10. 'factor' → logprob: -11.12757396697998

Token 413: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -5.538490950129926e-05
    2. '_comb' → logprob: -10.250055313110352
    3. '_com' → logprob: -12.000055313110352
    4. 'com' → logprob: -12.375055313110352
    5. 'comb' → logprob: -12.625055313110352
    6. '_w' → logprob: -13.000055313110352
    7. 'win' → logprob: -13.250055313110352
    8. '_' → logprob: -15.000055313110352
    9. '_combo' → logprob: -15.500055313110352
    10. 'g' → logprob: -15.500055313110352

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033880699425935745
    2. ' +' → logprob: -3.4088807106018066
    3. '+j' → logprob: -8.783880233764648
    4. '=' → logprob: -9.783880233764648
    5. ' =' → logprob: -11.033880233764648
    6. '+
' → logprob: -12.283880233764648
    7. ' plus' → logprob: -13.283880233764648
    8. 'plus' → logprob: -13.658880233764648
    9. '+=' → logprob: -14.033880233764648
    10. '＋' → logprob: -15.658880233764648

Token 415: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023247458040714264
    2. ' j' → logprob: -3.773247480392456
    3. '   ' → logprob: -14.523247718811035
    4. ' ' → logprob: -14.773247718811035
    5. '0' → logprob: -15.148247718811035
    6. '(' → logprob: -15.773247718811035
    7. '	j' → logprob: -16.39824676513672
    8. '
' → logprob: -16.52324676513672
    9. '```' → logprob: -16.52324676513672
    10. '  ' → logprob: -16.52324676513672

Token 416: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.00042662365012802184
    2. 'j' → logprob: -7.875426769256592
    3. '_j' → logprob: -11.000426292419434
    4. '_w' → logprob: -11.375426292419434
    5. 'win' → logprob: -12.000426292419434
    6. ' j' → logprob: -12.875426292419434
    7. '_WIN' → logprob: -13.125426292419434
    8. '```' → logprob: -13.750426292419434
    9. '_ack' → logprob: -14.125426292419434
    10. '0' → logprob: -14.125426292419434

Token 417: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2511233389377594
    2. '
' → logprob: -1.751123309135437
    3. 'print' → logprob: -4.001123428344727
    4. '```' → logprob: -4.126123428344727
    5. '<|end|>' → logprob: -4.626123428344727
    6. '        
' → logprob: -6.751123428344727
    7. '<|end|>' → logprob: -7.126123428344727
    8. '   ' → logprob: -7.751123428344727
    9. ' print' → logprob: -8.251123428344727
    10. ' if' → logprob: -8.376123428344727

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02175736613571644
    2. '```' → logprob: -4.14675760269165
    3. 'print' → logprob: -5.39675760269165
    4. '   ' → logprob: -7.77175760269165
    5. '
' → logprob: -8.021757125854492
    6. '``' → logprob: -8.896757125854492
    7. '        
' → logprob: -9.146757125854492
    8. '<|end|>' → logprob: -9.271757125854492
    9. ' print' → logprob: -10.021757125854492
    10. '	print' → logprob: -11.521757125854492

Token 419: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19191691279411316
    2. '       ' → logprob: -2.0669169425964355
    3. ' print' → logprob: -3.1919169425964355
    4. '```' → logprob: -5.5669169425964355
    5. 'if' (adapté à ' if') → logprob: -6.1919169425964355
    6. ' if' → logprob: -7.0669169425964355
    7. '
' → logprob: -8.816916465759277
    8. '   ' → logprob: -10.316916465759277
    9. '        
' → logprob: -10.566916465759277
    10. '``' → logprob: -11.191916465759277

Token 420: ' total' (ID: 3609)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.08340107649564743
    2. 'g' → logprob: -2.7084009647369385
    3. ' total' → logprob: -4.458401203155518
    4. 'total' → logprob: -6.333401203155518
    5. ' gate' → logprob: -11.58340072631836
    6. '(total' → logprob: -13.20840072631836
    7. ' ' → logprob: -14.45840072631836
    8. 'gate' → logprob: -14.45840072631836
    9. '(g' → logprob: -14.58340072631836
    10. '	g' → logprob: -14.64590072631836

Token 421: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7480010986328125
    2. '==' → logprob: -1.1230010986328125
    3. '>' → logprob: -2.2480010986328125
    4. ' >' → logprob: -2.3730010986328125
    5. ':' → logprob: -6.4980010986328125
    6. '*' → logprob: -7.4980010986328125
    7. '=' → logprob: -8.623001098632812
    8. ' *' → logprob: -9.498001098632812
    9. ' !=' → logprob: -9.748001098632812
    10. '[' → logprob: -10.248001098632812

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048762127757072
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.761048316955566
    4. '```' → logprob: -15.386048316955566
    5. '=' → logprob: -16.511049270629883
    6. '  ' → logprob: -16.761049270629883
    7. '    ' → logprob: -16.823549270629883
    8. '>' → logprob: -17.261049270629883
    9. '...' → logprob: -17.636049270629883
    10. '1' → logprob: -17.698549270629883

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -18.500011444091797
    4. '>' → logprob: -19.750011444091797
    5. '
' → logprob: -19.875011444091797
    6. '   ' → logprob: -21.000011444091797
    7. '۰' → logprob: -21.250011444091797
    8. '1' → logprob: -21.312511444091797
    9. '...' → logprob: -21.750011444091797
    10. '"' → logprob: -21.750011444091797

Token 424: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6350997090339661
    2. ':' → logprob: -0.7600997090339661
    3. ' or' → logprob: -6.1350998878479
    4. '       ' → logprob: -8.760099411010742
    5. '           ' → logprob: -9.135099411010742
    6. '):
' → logprob: -10.385099411010742
    7. '   ' → logprob: -11.635099411010742
    8. ' and' → logprob: -12.260099411010742
    9. ':
' → logprob: -12.385099411010742
    10. ':

' → logprob: -12.760099411010742

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016000831965357065
    2. 'print' → logprob: -6.75160026550293
    3. ' print' → logprob: -8.12660026550293
    4. '            
' → logprob: -9.37660026550293
    5. '```' → logprob: -11.00160026550293
    6. '       ' → logprob: -11.37660026550293
    7. '
' → logprob: -11.50160026550293
    8. '        
' → logprob: -13.00160026550293
    9. '    
' → logprob: -13.00160026550293
    10. '\n' → logprob: -13.75160026550293

Token 426: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.058761272579431534
    2. ' print' → logprob: -2.9337613582611084
    3. '           ' → logprob: -5.683761119842529
    4. '       ' → logprob: -7.933761119842529
    5. '```' → logprob: -9.433761596679688
    6. '            
' → logprob: -11.433761596679688
    7. '   ' → logprob: -12.308761596679688
    8. '        
' → logprob: -12.308761596679688
    9. '``' → logprob: -12.558761596679688
    10. '	print' → logprob: -12.683761596679688

Token 427: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16147485375404358
    2. '(' → logprob: -2.1614749431610107
    3. '(-' → logprob: -3.7864749431610107
    4. '('' → logprob: -5.036474704742432
    5. '0' → logprob: -6.036474704742432
    6. '("-' → logprob: -7.411474704742432
    7. '("?' → logprob: -7.411474704742432
    8. ' ("' → logprob: -8.03647518157959
    9. '"' → logprob: -8.16147518157959
    10. ' ' → logprob: -9.03647518157959

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6355257034301758
    2. 'Draw' → logprob: -1.1355257034301758
    3. '"' → logprob: -2.885525703430176
    4. 'D' → logprob: -3.635525703430176
    5. 'No' → logprob: -4.135525703430176
    6. 'DRAW' → logprob: -4.510525703430176
    7. '-' → logprob: -4.760525703430176
    8. 'draw' → logprob: -5.510525703430176
    9. '"D' → logprob: -5.635525703430176
    10. 'None' → logprob: -5.635525703430176

Token 429: '.' (ID: 13)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058192797005176544
    2. '0' → logprob: -2.933192729949951
    3. '-' → logprob: -5.933192729949951
    4. ':' → logprob: -8.18319320678711
    5. ' -' → logprob: -8.93319320678711
    6. '")' → logprob: -9.80819320678711
    7. ' :' → logprob: -9.93319320678711
    8. '/' → logprob: -10.30819320678711
    9. '1' → logprob: -10.80819320678711
    10. ')' → logprob: -11.05819320678711

Token 430: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03913112357258797
    2. '000' → logprob: -3.4141311645507812
    3. '00' → logprob: -5.289131164550781
    4. '5' → logprob: -8.539131164550781
    5. '.' → logprob: -8.664131164550781
    6. '500' → logprob: -11.039131164550781
    7. '")' → logprob: -11.414131164550781
    8. '"' → logprob: -12.039131164550781
    9. ' ' → logprob: -12.289131164550781
    10. '999' → logprob: -12.539131164550781

Token 431: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5182045698165894
    2. '0' → logprob: -1.6432045698165894
    3. '00' → logprob: -1.7682045698165894
    4. '")' → logprob: -3.518204689025879
    5. '%' → logprob: -4.893204689025879
    6. ')' → logprob: -6.018204689025879
    7. '%)' → logprob: -8.143204689025879
    8. ' ' → logprob: -8.518204689025879
    9. '\n' → logprob: -8.768204689025879
    10. '')' → logprob: -10.643204689025879

Token 432: ' ' (ID: 220)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04033429175615311
    2. '0' → logprob: -3.9153342247009277
    3. '000' → logprob: -4.040334224700928
    4. '00' → logprob: -7.040334224700928
    5. '")
' → logprob: -7.040334224700928
    6. ' ' → logprob: -9.290334701538086
    7. '%' → logprob: -9.415334701538086
    8. '\n' → logprob: -10.540334701538086
    9. ' ")' → logprob: -10.790334701538086
    10. ')' → logprob: -11.165334701538086

Token 433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006135806906968355
    2. '1' → logprob: -5.381135940551758
    3. ' ' → logprob: -6.631135940551758
    4. '")' → logprob: -8.631135940551758
    5. '"' → logprob: -11.631135940551758
    6. '")
' → logprob: -13.006135940551758
    7. '.' → logprob: -13.506135940551758
    8. '```' → logprob: -13.756135940551758
    9. '000' → logprob: -14.131135940551758
    10. '-' → logprob: -14.756135940551758

Token 434: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '000' → logprob: -16.625
    5. ' .' → logprob: -16.875
    6. '.")' → logprob: -19.375
    7. '<|end|>' → logprob: -19.5
    8. ')' → logprob: -20.125
    9. '00' → logprob: -20.375
    10. '.
' → logprob: -20.5

Token 435: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0007287554908543825
    2. '0' → logprob: -7.750728607177734
    3. '500' → logprob: -8.125728607177734
    4. '"' → logprob: -14.500728607177734
    5. '```' → logprob: -14.750728607177734
    6. '00' → logprob: -14.875728607177734
    7. '5' → logprob: -15.688228607177734
    8. '{' → logprob: -16.188228607177734
    9. '999' → logprob: -16.375728607177734
    10. '
' → logprob: -16.500728607177734

Token 436: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -8.363617962459102e-05
    2. '0' → logprob: -9.500083923339844
    3. ' ' → logprob: -11.750083923339844
    4. '000' → logprob: -14.125083923339844
    5. '01' → logprob: -16.125083923339844
    6. '```' → logprob: -17.375083923339844
    7. ')' → logprob: -18.875083923339844
    8. '")' → logprob: -19.125083923339844
    9. '1' → logprob: -19.750083923339844
    10. '  ' → logprob: -20.000083923339844

Token 437: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12752139568328857
    2. '")
' → logprob: -2.127521514892578
    3. '0' → logprob: -7.877521514892578
    4. ' ' → logprob: -9.002521514892578
    5. '")
' → logprob: -10.002521514892578
    6. ' ")' → logprob: -11.252521514892578
    7. ' ")
' → logprob: -11.377521514892578
    8. '\n' → logprob: -11.877521514892578
    9. ')' → logprob: -12.127521514892578
    10. '"' → logprob: -13.252521514892578

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40596479177474976
    2. '           ' → logprob: -1.1559648513793945
    3. '<|end|>' → logprob: -4.7809648513793945
    4. '```' → logprob: -5.0309648513793945
    5. '   ' → logprob: -6.1559648513793945
    6. ' else' → logprob: -7.4059648513793945
    7. 'else' → logprob: -8.155964851379395
    8. ',' → logprob: -8.280964851379395
    9. '<|end|>' → logprob: -8.530964851379395
    10. '
' → logprob: -8.655964851379395

Token 439: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045630741864442825
    2. ' else' → logprob: -3.170630693435669
    3. 'else' (adapté à ' else') → logprob: -6.045630931854248
    4. '<|end|>' → logprob: -9.04563045501709
    5. '   ' → logprob: -9.92063045501709
    6. ' elif' → logprob: -10.92063045501709
    7. '```' → logprob: -10.92063045501709
    8. '	else' → logprob: -11.42063045501709
    9. '           ' → logprob: -11.42063045501709
    10. '<|end|>' → logprob: -12.04563045501709

Token 440: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001857603550888598
    2. ':' → logprob: -7.251857757568359
    3. ' print' → logprob: -7.876857757568359
    4. '          ' → logprob: -8.87685775756836
    5. ',' → logprob: -9.00185775756836
    6. '<|end|>' → logprob: -9.62685775756836
    7. '               ' → logprob: -10.00185775756836
    8. '            ' → logprob: -10.00185775756836
    9. ' ' → logprob: -10.12685775756836
    10. '	       ' → logprob: -10.25185775756836

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003989720717072487
    2. ' print' → logprob: -7.875399112701416
    3. ' ' → logprob: -12.125398635864258
    4. '          ' → logprob: -12.500398635864258
    5. '```' → logprob: -13.125398635864258
    6. '         ' → logprob: -13.500398635864258
    7. 'print' → logprob: -13.750398635864258
    8. '       ' → logprob: -13.875398635864258
    9. '               ' → logprob: -13.875398635864258
    10. '        ' → logprob: -14.000398635864258

Token 442: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.06200186535716057
    2. 'print' (adapté à ' print') → logprob: -2.812001943588257
    3. '           ' → logprob: -10.312002182006836
    4. '            ' → logprob: -14.562002182006836
    5. '   ' → logprob: -15.437002182006836
    6. '               ' → logprob: -16.312002182006836
    7. ' prin' → logprob: -16.437002182006836
    8. '	print' → logprob: -16.687002182006836
    9. '```' → logprob: -16.687002182006836
    10. 'printf' → logprob: -16.937002182006836

Token 443: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.020099051296710968
    2. '(' → logprob: -4.02009916305542
    3. '("' → logprob: -6.27009916305542
    4. '("{' → logprob: -10.020098686218262
    5. '('' → logprob: -12.395098686218262
    6. '("%.' → logprob: -13.270098686218262
    7. 'f' → logprob: -13.395098686218262
    8. '(format' → logprob: -13.395098686218262
    9. '(
' → logprob: -14.770098686218262
    10. ' (' → logprob: -14.770098686218262

Token 444: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.009536020457744598
    2. '{' → logprob: -4.759535789489746
    3. '("{' → logprob: -7.009535789489746
    4. ''{' → logprob: -11.384535789489746
    5. '"' → logprob: -12.884535789489746
    6. '(g' → logprob: -13.009535789489746
    7. '{"' → logprob: -14.259535789489746
    8. 'g' → logprob: -15.009535789489746
    9. '('{' → logprob: -15.259535789489746
    10. '("%.' → logprob: -15.634535789489746

Token 445: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3856492842023727e-06
    2. ' g' → logprob: -13.750000953674316
    3. '(g' → logprob: -15.500000953674316
    4. 'gate' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '{' → logprob: -18.875001907348633
    7. '0' → logprob: -19.125001907348633
    8. '	g' → logprob: -19.375001907348633
    9. 'round' → logprob: -19.500001907348633
    10. '100' → logprob: -19.750001907348633

Token 446: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -3.8889261304575484e-06
    2. '_w' → logprob: -12.625003814697266
    3. 'win' → logprob: -14.625003814697266
    4. '_' → logprob: -16.375003814697266
    5. ' _' → logprob: -17.000003814697266
    6. '_WIN' → logprob: -17.375003814697266
    7. '   ' → logprob: -19.750003814697266
    8. '_s' → logprob: -19.875003814697266
    9. '_score' → logprob: -20.125003814697266
    10. '_print' → logprob: -20.125003814697266

Token 447: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02325444668531418
    2. ' /' → logprob: -3.77325439453125
    3. '/{' → logprob: -12.27325439453125
    4. '/(' → logprob: -13.27325439453125
    5. '}/{' → logprob: -13.27325439453125
    6. '}' → logprob: -15.77325439453125
    7. '/max' → logprob: -16.27325439453125
    8. '/t' → logprob: -16.39825439453125
    9. '/output' → logprob: -16.64825439453125
    10. ' ' → logprob: -17.52325439453125

Token 448: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00015860427811276168
    2. ' total' → logprob: -8.750158309936523
    3. '(total' → logprob: -16.375158309936523
    4. 'max' → logprob: -19.625158309936523
    5. '
' → logprob: -20.000158309936523
    6. '   ' → logprob: -20.000158309936523
    7. ' ' → logprob: -20.000158309936523
    8. '{' → logprob: -20.250158309936523
    9. 'tot' → logprob: -20.375158309936523
    10. 'to' → logprob: -20.625158309936523

Token 449: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.03813822939991951
    2. ':' → logprob: -3.2881381511688232
    3. ' :.' → logprob: -9.663138389587402
    4. '}' → logprob: -11.038138389587402
    5. ' ' → logprob: -11.538138389587402
    6. ' :' → logprob: -12.413138389587402
    7. '{' → logprob: -14.413138389587402
    8. ':

' → logprob: -14.538138389587402
    9. '0' → logprob: -15.038138389587402
    10. ' {:.' → logprob: -15.163138389587402

Token 450: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.45848218582978e-06
    2. '6' → logprob: -13.50000286102295
    3. '05' → logprob: -14.50000286102295
    4. '10' → logprob: -15.87500286102295
    5. '7' → logprob: -16.125001907348633
    6. '000' → logprob: -16.625001907348633
    7. '8' → logprob: -16.750001907348633
    8. ' ' → logprob: -17.125001907348633
    9. '500' → logprob: -17.500001907348633
    10. '3' → logprob: -17.750001907348633

Token 451: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. ' f' → logprob: -20.0
    3. 'g' → logprob: -20.125
    4. 'e' → logprob: -21.0
    5. '}' → logprob: -21.375
    6. '```' → logprob: -21.375
    7. '{' → logprob: -21.875
    8. '
' → logprob: -22.125
    9. '	f' → logprob: -23.125
    10. '%' → logprob: -23.125

Token 452: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0006084367632865906
    2. ' }' → logprob: -7.500608444213867
    3. ' {' → logprob: -10.125608444213867
    4. ' ' → logprob: -11.625608444213867
    5. '{' → logprob: -12.625608444213867
    6. ' f' → logprob: -13.375608444213867
    7. '}{' → logprob: -14.500608444213867
    8. '"' → logprob: -14.750608444213867
    9. 'f' → logprob: -15.000608444213867
    10. ')' → logprob: -15.875608444213867

Token 453: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.005837318487465382
    2. '{' → logprob: -5.630837440490723
    3. ' ' → logprob: -6.880837440490723
    4. ' {(' → logprob: -6.880837440490723
    5. ' {"' → logprob: -9.755837440490723
    6. ' f' → logprob: -10.130837440490723
    7. ' {'' → logprob: -10.255837440490723
    8. ' {:.' → logprob: -11.255837440490723
    9. ' ,' → logprob: -11.380837440490723
    10. ',' → logprob: -11.380837440490723

Token 454: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.412610233994201e-05
    2. '{' → logprob: -9.500094413757324
    3. '(j' → logprob: -11.500094413757324
    4. '1' → logprob: -12.000094413757324
    5. ' j' → logprob: -13.000094413757324
    6. '$j' → logprob: -15.375094413757324
    7. '   ' → logprob: -16.500093460083008
    8. '(' → logprob: -16.750093460083008
    9. 'f' → logprob: -17.000093460083008
    10. 'g' → logprob: -17.000093460083008

Token 455: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -8.65707261255011e-06
    2. 'win' → logprob: -12.000008583068848
    3. '_j' → logprob: -14.000008583068848
    4. 'j' → logprob: -14.000008583068848
    5. '_w' → logprob: -14.625008583068848
    6. '_' → logprob: -15.875008583068848
    7. '_WIN' → logprob: -17.125009536743164
    8. '_stop' → logprob: -17.250009536743164
    9. '_s' → logprob: -17.750009536743164
    10. '_/' → logprob: -17.875009536743164

Token 456: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: 0.0
    2. ' /' → logprob: -17.375
    3. '```' → logprob: -19.0
    4. '{/' → logprob: -20.75
    5. '{' → logprob: -21.0
    6. '/
' → logprob: -21.125
    7. '   ' → logprob: -21.5
    8. '/{' → logprob: -21.625
    9. ')/' → logprob: -22.375
    10. '/...' → logprob: -22.625

Token 457: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -5.512236498361744e-07
    2. '{' → logprob: -15.375000953674316
    3. ' total' → logprob: -15.500000953674316
    4. 'tot' → logprob: -17.125
    5. '(total' → logprob: -19.875
    6. 'otal' → logprob: -20.375
    7. 't' → logprob: -20.625
    8. '	total' → logprob: -21.0
    9. '   ' → logprob: -22.0
    10. '$total' → logprob: -22.625

Token 458: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.5230220556259155
    2. '/' → logprob: -1.0230220556259155
    3. '/.' → logprob: -3.398022174835205
    4. '{' → logprob: -4.273022174835205
    5. '/{' → logprob: -8.398021697998047
    6. 'f' → logprob: -9.898021697998047
    7. '```' → logprob: -10.148021697998047
    8. '/f' → logprob: -10.773021697998047
    9. '{/' → logprob: -11.148021697998047
    10. '.' → logprob: -11.773021697998047

Token 459: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.36574100604048e-06
    2. '05' → logprob: -12.625004768371582
    3. 'f' → logprob: -14.000004768371582
    4. '```' → logprob: -15.500004768371582
    5. ' ' → logprob: -17.125003814697266
    6. '2' → logprob: -17.750003814697266
    7. '{' → logprob: -18.750003814697266
    8. 's' → logprob: -20.000003814697266
    9. '005' → logprob: -20.000003814697266
    10. '   ' → logprob: -20.625003814697266

Token 460: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. '6' → logprob: -20.5
    4. 'fi' → logprob: -21.0
    5. ' ' → logprob: -21.75
    6. 'ф' → logprob: -22.0
    7. '5' → logprob: -22.0
    8. '	f' → logprob: -22.125
    9. ' f' → logprob: -22.125
    10. 'ff' → logprob: -22.625

Token 461: '}")

' (ID: 119200)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.018272733315825462
    2. '}")' → logprob: -4.018272876739502
    3. ')")' → logprob: -9.143272399902344
    4. '")
' → logprob: -11.643272399902344
    5. ')' → logprob: -12.393272399902344
    6. '")}' → logprob: -13.768272399902344
    7. '}' → logprob: -13.893272399902344
    8. '}")
' → logprob: -14.518272399902344
    9. ' ")' → logprob: -16.268272399902344
    10. '")
' → logprob: -16.518272399902344

Token 462: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02325398102402687
    2. '__' → logprob: -3.773253917694092
    3. '_name' → logprob: -12.52325439453125
    4. '_' → logprob: -13.14825439453125
    5. ' ' → logprob: -13.39825439453125
    6. ' ' → logprob: -14.64825439453125
    7. '___' → logprob: -14.77325439453125
    8. ' _' → logprob: -15.64825439453125
    9. 'name' → logprob: -16.27325439453125
    10. ' ___' → logprob: -16.52325439453125

Token 464: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02539697103202343
    2. ' ==' → logprob: -4.650396823883057
    3. '==' → logprob: -5.650396823883057
    4. ' __' → logprob: -6.150396823883057
    5. '.__' → logprob: -6.275396823883057
    6. '_name' → logprob: -6.275396823883057
    7. 'name' → logprob: -6.400396823883057
    8. '.name' → logprob: -6.525396823883057
    9. '<|end|>' → logprob: -6.775396823883057
    10. '.' → logprob: -8.275397300720215

Token 465: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.935296834039036e-06
    2. '==' → logprob: -13.62500286102295
    3. '__.__' → logprob: -13.62500286102295
    4. '____' → logprob: -16.500003814697266
    5. '__.' → logprob: -16.625003814697266
    6. '___' → logprob: -17.125003814697266
    7. '__
' → logprob: -17.250003814697266
    8. '__["' → logprob: -17.375003814697266
    9. '__("' → logprob: -17.500003814697266
    10. ' ==' → logprob: -17.750003814697266

Token 466: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14320999383926392
    2. '__' → logprob: -2.143209934234619
    3. ' ==' → logprob: -4.518209934234619
    4. '=="' → logprob: -5.268209934234619
    5. '=='' → logprob: -9.768210411071777
    6. '===' → logprob: -10.893210411071777
    7. '=' → logprob: -12.518210411071777
    8. '==="' → logprob: -13.018210411071777
    9. '__.__' → logprob: -13.018210411071777
    10. '.__' → logprob: -14.018210411071777

Token 467: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005260203033685684
    2. ''' → logprob: -5.255259990692139
    3. ' "__' → logprob: -10.880260467529297
    4. '__' → logprob: -11.880260467529297
    5. '"name' → logprob: -16.130260467529297
    6. '"user' → logprob: -16.130260467529297
    7. ' '__' → logprob: -16.380260467529297
    8. ''"' → logprob: -16.630260467529297
    9. 'main' → logprob: -17.130260467529297
    10. '"'' → logprob: -17.755260467529297

Token 468: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0028863062616437674
    2. '__' → logprob: -6.0028862953186035
    3. 'name' → logprob: -7.8778862953186035
    4. '"' → logprob: -10.502886772155762
    5. 'built' → logprob: -13.752886772155762
    6. ''' → logprob: -14.002886772155762
    7. ' main' → logprob: -14.752886772155762
    8. '__":
' → logprob: -15.252886772155762
    9. '_main' → logprob: -15.377886772155762
    10. '__
' → logprob: -15.752886772155762

Token 469: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.08106003701686859
    2. '__' → logprob: -2.5810599327087402
    3. '__':
' → logprob: -6.58105993270874
    4. '__.' → logprob: -7.33105993270874
    5. '__.__' → logprob: -9.331060409545898
    6. '__["' → logprob: -10.581060409545898
    7. '.' → logprob: -12.206060409545898
    8. '__
' → logprob: -13.456060409545898
    9. '__
' → logprob: -13.706060409545898
    10. '.__' → logprob: -14.081060409545898

Token 470: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006247530109249055
    2. '   ' → logprob: -7.875624656677246
    3. ' main' → logprob: -8.875624656677246
    4. '	main' → logprob: -9.375624656677246
    5. '__' → logprob: -11.750624656677246
    6. '(main' → logprob: -12.750624656677246
    7. 'run' → logprob: -12.875624656677246
    8. '_main' → logprob: -13.000624656677246
    9. 'import' → logprob: -14.000624656677246
    10. '```' → logprob: -14.750624656677246

Token 471: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5048530030981055e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '.main' → logprob: -23.500001907348633
    6. '_main' → logprob: -23.625001907348633
    7. '(main' → logprob: -24.375001907348633
    8. 'import' → logprob: -26.000001907348633
    9. 'Main' → logprob: -26.125001907348633
    10. '  ' → logprob: -26.500001907348633

Token 472: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 470
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 271
Tokens correctement prédits (top 10): 432
Précision stricte (1ère position): 55.11%
Précision adaptée (1ère position): 57.66%
Précision (top 10): 91.91%
================================================================================
