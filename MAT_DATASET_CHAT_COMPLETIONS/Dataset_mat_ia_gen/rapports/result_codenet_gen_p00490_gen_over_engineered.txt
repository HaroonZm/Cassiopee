================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PizzaComponent:
    def __init__(self, calories: int, price: int):
        self.calories = calories
        self.price = price

    def calorie_per_dollar(self) -> float:
        if self.price == 0:
            return 0
        return self.calories / self.price


class Dough(PizzaComponent):
    pass


class Topping(PizzaComponent):
    pass


class Pizza:
    def __init__(self, dough: Dough, toppings: list[Topping]):
        self.dough = dough
        self.toppings = toppings

    def total_calories(self) -> int:
        return self.dough.calories + sum(t.calories for t in self.toppings)

    def total_price(self) -> int:
        return self.dough.price + sum(t.price for t in self.toppings)

    def calorie_per_dollar(self) -> float:
        return self.total_calories() / self.total_price()


class PizzaFactory:
    def __init__(self, dough: Dough, topping_price: int, topping_calories: list[int]):
        self.dough = dough
        self.topping_price = topping_price
        self.toppings = [Topping(c, topping_price) for c in topping_calories]

    def generate_best_pizza(self) -> Pizza:
        # Because toppings cannot be duplicated, subsets need to be checked
        # To be excessively sophisticated: use a generator with a combinatorial iterator
        from itertools import combinations

        best_pizza = Pizza(self.dough, [])
        best_ratio = best_pizza.calorie_per_dollar()

        n = len(self.toppings)
        # Enumerate all subset sizes from 0 to n
        for k in range(n + 1):
            # For further sophistication: use a generator expression to lazily evaluate pizzas
            candidate_pizzas = (Pizza(self.dough, list(combo)) for combo in combinations(self.toppings, k))
            for pizza_candidate in candidate_pizzas:
                # Recalculate ratio
                ratio = pizza_candidate.calorie_per_dollar()
                # Select best (highest) calorie per dollar
                if ratio > best_ratio:
                    best_ratio = ratio
                    best_pizza = pizza_candidate

        return best_pizza


class InputReader:
    @staticmethod
    def read_input() -> tuple[int, int, int, int, list[int]]:
        N = int(input())
        A, B = map(int, input().split())
        C = int(input())
        toppings_calories = [int(input()) for _ in range(N)]
        return N, A, B, C, toppings_calories


class BestPizzaSolver:
    def __init__(self):
        self.N = 0
        self.A = 0
        self.B = 0
        self.C = 0
        self.toppings_calories = []

    def load_input(self):
        self.N, self.A, self.B, self.C, self.toppings_calories = InputReader.read_input()

    def solve(self) -> int:
        dough = Dough(calories=self.C, price=self.A)
        factory = PizzaFactory(dough, self.B, self.toppings_calories)
        best_pizza = factory.generate_best_pizza()
        return int(best_pizza.calorie_per_dollar())  # floor by int cast as requested

    def run(self):
        self.load_input()
        answer = self.solve()
        print(answer)


if __name__ == "__main__":
    solver = BestPizzaSolver()
    solver.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pizza' (ID: 48892)
  → Token d'amorce (pas de prédiction)

Token 2: 'Component' (ID: 2746)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4044197201728821
    2. '{' → logprob: -1.6544196605682373
    3. '.' → logprob: -2.6544196605682373
    4. ':' → logprob: -2.6544196605682373
    5. ' {' → logprob: -8.404419898986816
    6. '[' → logprob: -8.779419898986816
    7. '```' → logprob: -8.779419898986816
    8. '(:' → logprob: -9.654419898986816
    9. '({' → logprob: -10.029419898986816
    10. 's' → logprob: -11.029419898986816

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5924032330513
    2. '(' → logprob: -0.8424032330513
    3. '.' → logprob: -4.342403411865234
    4. '   ' → logprob: -6.217403411865234
    5. '```' → logprob: -7.842403411865234
    6. ':
' → logprob: -8.217403411865234
    7. '(
' → logprob: -8.342403411865234
    8. '():' → logprob: -9.342403411865234
    9. '{' → logprob: -10.092403411865234
    10. '\' → logprob: -10.842403411865234

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.543434739112854
    2. '_' → logprob: -1.793434739112854
    3. ' def' → logprob: -2.1684346199035645
    4. 'def' (adapté à ' def') → logprob: -3.0434346199035645
    5. ' pass' → logprob: -3.6684346199035645
    6. '    ' → logprob: -4.1684346199035645
    7. ' ' → logprob: -4.2934346199035645
    8. '(' → logprob: -4.6684346199035645
    9. '\' → logprob: -4.9184346199035645
    10. '```' → logprob: -5.1684346199035645

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07344534248113632
    2. ' __' → logprob: -2.8234453201293945
    3. '__' → logprob: -4.6984453201293945
    4. ' ' → logprob: -7.5734453201293945
    5. '    ' → logprob: -8.073445320129395
    6. ' init' → logprob: -8.323445320129395
    7. '  ' → logprob: -8.323445320129395
    8. ' def' → logprob: -8.573445320129395
    9. ' ```' → logprob: -9.448445320129395
    10. '```' → logprob: -9.448445320129395

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2200749754119897e-06
    2. ' init' → logprob: -13.250001907348633
    3. '_init' → logprob: -14.750001907348633
    4. '	init' → logprob: -17.875001907348633
    5. 'ini' → logprob: -18.625001907348633
    6. '_' → logprob: -20.125001907348633
    7. 'innit' → logprob: -20.625001907348633
    8. 'inite' → logprob: -20.750001907348633
    9. '-init' → logprob: -21.125001907348633
    10. 'in' → logprob: -21.625001907348633

Token 8: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6697758436203003
    2. '__(' → logprob: -1.2947758436203003
    3. '__' → logprob: -1.7947758436203003
    4. '_' → logprob: -3.41977596282959
    5. ' (' → logprob: -5.54477596282959
    6. '__(
' → logprob: -5.79477596282959
    7. '<|end|>' → logprob: -6.66977596282959
    8. '(self' → logprob: -6.79477596282959
    9. '__((' → logprob: -6.79477596282959
    10. '_token' → logprob: -7.16977596282959

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010385256027802825
    2. ' self' → logprob: -7.001038551330566
    3. ')' → logprob: -9.126038551330566
    4. ' ' → logprob: -11.876038551330566
    5. ' )' → logprob: -12.501038551330566
    6. '(self' → logprob: -13.126038551330566
    7. '       ' → logprob: -13.876038551330566
    8. '   ' → logprob: -14.001038551330566
    9. ''s' → logprob: -14.501038551330566
    10. '_self' → logprob: -14.626038551330566

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18063561618328094
    2. ')' → logprob: -2.430635690689087
    3. 'self' → logprob: -2.805635690689087
    4. '_' → logprob: -5.555635452270508
    5. '(' → logprob: -5.805635452270508
    6. ' ,' → logprob: -6.055635452270508
    7. '<|end|>' → logprob: -6.555635452270508
    8. '.' → logprob: -7.055635452270508
    9. ' )' → logprob: -7.055635452270508
    10. '(self' → logprob: -7.305635452270508

Token 11: ' calories' (ID: 30509)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062053728848695755
    2. ' self' → logprob: -2.812053680419922
    3. ')' → logprob: -10.312053680419922
    4. 'name' → logprob: -11.437053680419922
    5. 'size' → logprob: -11.687053680419922
    6. ' size' → logprob: -12.312053680419922
    7. 'ingredients' → logprob: -12.312053680419922
    8. 'pizza' → logprob: -12.437053680419922
    9. ' )' → logprob: -12.812053680419922
    10. 's' → logprob: -12.937053680419922

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09963450580835342
    2. ',' → logprob: -2.9746344089508057
    3. '=' → logprob: -3.4746344089508057
    4. ')' → logprob: -4.724634647369385
    5. ':' → logprob: -5.599634647369385
    6. '):
' → logprob: -9.724634170532227
    7. '   ' → logprob: -9.974634170532227
    8. '_' → logprob: -10.599634170532227
    9. ' ):' → logprob: -10.599634170532227
    10. '=None' → logprob: -11.349634170532227

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3869211673736572
    2. ' int' → logprob: -1.1369211673736572
    3. ')' → logprob: -10.636920928955078
    4. '=int' → logprob: -11.886920928955078
    5. '[int' → logprob: -12.136920928955078
    6. ' )' → logprob: -12.511920928955078
    7. ' float' → logprob: -13.011920928955078
    8. ':int' → logprob: -13.511920928955078
    9. 'float' → logprob: -13.761920928955078
    10. ' ' → logprob: -13.886920928955078

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14623300731182098
    2. ',' → logprob: -2.521233081817627
    3. ')' → logprob: -2.896233081817627
    4. '):
' → logprob: -8.021232604980469
    5. '   ' → logprob: -9.896232604980469
    6. '),' → logprob: -10.646232604980469
    7. ':' → logprob: -11.646232604980469
    8. '<|end|>' → logprob: -12.021232604980469
    9. '```' → logprob: -12.646232604980469
    10. ')>' → logprob: -12.771232604980469

Token 15: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.8035549521446228
    2. ' ingredients' → logprob: -1.8035550117492676
    3. ' diameter' → logprob: -2.3035550117492676
    4. ' toppings' → logprob: -2.3035550117492676
    5. ' size' → logprob: -2.5535550117492676
    6. 'ingredients' → logprob: -3.5535550117492676
    7. ' name' → logprob: -3.6785550117492676
    8. ' weight' → logprob: -4.303555011749268
    9. 'price' → logprob: -5.053555011749268
    10. 'name' → logprob: -5.553555011749268

Token 16: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3393961191177368
    2. ':' → logprob: -1.3393961191177368
    3. ')' → logprob: -3.8393959999084473
    4. ',' → logprob: -5.589395999908447
    5. '=' → logprob: -7.714395999908447
    6. '):
' → logprob: -9.839396476745605
    7. ' ):' → logprob: -11.089396476745605
    8. ' ' → logprob: -12.214396476745605
    9. ':int' → logprob: -12.214396476745605
    10. ' :' → logprob: -12.339396476745605

Token 17: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.09794308990240097
    2. 'float' → logprob: -2.847943067550659
    3. ' int' → logprob: -3.722943067550659
    4. 'int' → logprob: -4.722943305969238
    5. ')' → logprob: -6.347943305969238
    6. ' )' → logprob: -8.472943305969238
    7. ' ' → logprob: -8.972943305969238
    8. '=float' → logprob: -9.722943305969238
    9. '<|end|>' → logprob: -10.222943305969238
    10. ',float' → logprob: -10.972943305969238

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038994653150439262
    2. ')' → logprob: -5.628899574279785
    3. ',' → logprob: -8.628899574279785
    4. '):
' → logprob: -9.253899574279785
    5. ':' → logprob: -11.128899574279785
    6. '   ' → logprob: -12.253899574279785
    7. '),' → logprob: -13.878899574279785
    8. '```' → logprob: -13.878899574279785
    9. ''):' → logprob: -14.378899574279785
    10. ' ):' → logprob: -14.628899574279785

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03795243054628372
    2. '   ' → logprob: -3.537952423095703
    3. '    ' → logprob: -5.662952423095703
    4. 'self' → logprob: -7.037952423095703
    5. ' ' → logprob: -7.162952423095703
    6. '<|end|>' → logprob: -7.662952423095703
    7. '     ' → logprob: -7.912952423095703
    8. '        
' → logprob: -7.912952423095703
    9. '\' → logprob: -8.162952423095703
    10. ')' → logprob: -8.662952423095703

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.19190943241119385
    2. '       ' → logprob: -1.8169094324111938
    3. ' self' → logprob: -4.441909313201904
    4. '   ' → logprob: -8.816909790039062
    5. ' ' → logprob: -10.316909790039062
    6. '           ' → logprob: -10.441909790039062
    7. '_self' → logprob: -10.566909790039062
    8. ' ' → logprob: -11.191909790039062
    9. '```' → logprob: -11.441909790039062
    10. '	self' → logprob: -11.691909790039062

Token 21: '.cal' (ID: 40302)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03367151692509651
    2. '.cal' → logprob: -3.4086716175079346
    3. ' .' → logprob: -11.908671379089355
    4. 'cal' → logprob: -12.783671379089355
    5. '	cal' → logprob: -12.783671379089355
    6. '.c' → logprob: -13.283671379089355
    7. 'self' → logprob: -13.283671379089355
    8. '.Cal' → logprob: -13.533671379089355
    9. '-cal' → logprob: -13.908671379089355
    10. '.car' → logprob: -14.033671379089355

Token 22: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -9.829823102336377e-05
    2. 'orie' → logprob: -9.75009822845459
    3. '   ' → logprob: -11.00009822845459
    4. '       ' → logprob: -11.25009822845459
    5. 'o' → logprob: -13.00009822845459
    6. 'eries' → logprob: -13.50009822845459
    7. '```' → logprob: -13.62509822845459
    8. 'or' → logprob: -14.12509822845459
    9. 'ory' → logprob: -14.25009822845459
    10. '     ' → logprob: -14.37509822845459

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761046409606934
    2. ' =' → logprob: -0.8261046409606934
    3. '<|end|>' → logprob: -9.076105117797852
    4. '_' → logprob: -11.326105117797852
    5. ' ' → logprob: -11.451105117797852
    6. ')' → logprob: -11.826105117797852
    7. '   ' → logprob: -12.326105117797852
    8. ',' → logprob: -12.701105117797852
    9. '       ' → logprob: -13.076105117797852
    10. '<|end|>' → logprob: -13.201105117797852

Token 24: ' calories' (ID: 30509)
  Prédit: ' calories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calories' → logprob: -0.0011717714369297028
    2. 'cal' → logprob: -6.751171588897705
    3. 'Calories' → logprob: -14.501172065734863
    4. '	cal' → logprob: -14.751172065734863
    5. '_cal' → logprob: -15.751172065734863
    6. ' calorie' → logprob: -15.751172065734863
    7. ' ' → logprob: -16.501171112060547
    8. '(cal' → logprob: -16.501171112060547
    9. ' calor' → logprob: -16.626171112060547
    10. ' cal' → logprob: -16.876171112060547

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033288199454545975
    2. '<|end|>' → logprob: -4.53328800201416
    3. '        
' → logprob: -4.78328800201416
    4. '\n' → logprob: -5.78328800201416
    5. '
' → logprob: -5.90828800201416
    6. '\' → logprob: -6.53328800201416
    7. '    
' → logprob: -6.65828800201416
    8. '```' → logprob: -7.03328800201416
    9. ' 
' → logprob: -7.15828800201416
    10. ',' → logprob: -7.40828800201416

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5041400790214539
    2. '<|end|>' → logprob: -1.0041401386260986
    3. ' ' → logprob: -4.6291399002075195
    4. '        
' → logprob: -5.0041399002075195
    5. '        ' → logprob: -5.3791399002075195
    6. ' 
' → logprob: -6.1291399002075195
    7. '
' → logprob: -6.7541399002075195
    8. ')' → logprob: -7.1291399002075195
    9. ',' → logprob: -7.1291399002075195
    10. '```' → logprob: -7.2541399002075195

Token 27: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18175606429576874
    2. 'self' (adapté à ' self') → logprob: -1.8067560195922852
    3. ' self' → logprob: -6.306756019592285
    4. '        ' → logprob: -10.056756019592285
    5. '
' → logprob: -10.181756019592285
    6. '<|end|>' → logprob: -10.931756019592285
    7. '```' → logprob: -10.931756019592285
    8. ' ' → logprob: -11.181756019592285
    9. ',' → logprob: -11.681756019592285
    10. '	self' → logprob: -12.431756019592285

Token 28: '.price' (ID: 31587)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20159703493118286
    2. '.price' → logprob: -1.701596975326538
    3. '.cal' → logprob: -9.201597213745117
    4. 'price' → logprob: -10.451597213745117
    5. ' .' → logprob: -10.701597213745117
    6. '.Price' → logprob: -11.951597213745117
    7. '<|end|>' → logprob: -12.701597213745117
    8. '.pr' → logprob: -13.076597213745117
    9. '.cost' → logprob: -13.326597213745117
    10. '_price' → logprob: -13.576597213745117

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630435861647129
    2. '=' → logprob: -3.651304244995117
    3. ' ' → logprob: -13.026304244995117
    4. '<|end|>' → logprob: -14.401304244995117
    5. '   ' → logprob: -14.526304244995117
    6. '.' → logprob: -14.651304244995117
    7. ' =)' → logprob: -16.276304244995117
    8. ' =
' → logprob: -16.526304244995117
    9. ')' → logprob: -16.526304244995117
    10. '<|end|>' → logprob: -17.026304244995117

Token 30: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.0067154900170862675
    2. 'price' → logprob: -5.006715297698975
    3. '	price' → logprob: -16.381715774536133
    4. '(price' → logprob: -16.881715774536133
    5. ' ' → logprob: -18.256715774536133
    6. ' pric' → logprob: -18.756715774536133
    7. 'Price' → logprob: -19.131715774536133
    8. '_price' → logprob: -19.631715774536133
    9. ' precio' → logprob: -19.881715774536133
    10. '.price' → logprob: -19.881715774536133

Token 31: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1409573554992676
    2. '<|end|>' → logprob: -1.2659573554992676
    3. '
' → logprob: -1.3909573554992676
    4. '\n' → logprob: -2.8909573554992676
    5. '.' → logprob: -3.5159573554992676
    6. '\' → logprob: -4.140957355499268
    7. '    
' → logprob: -4.515957355499268
    8. ',' → logprob: -5.015957355499268
    9. ' ' → logprob: -5.390957355499268
    10. ')' → logprob: -5.765957355499268

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3547102212905884
    2. '
' → logprob: -1.4797102212905884
    3. '<|end|>' → logprob: -3.354710102081299
    4. ',' → logprob: -5.104710102081299
    5. 'def' → logprob: -5.229710102081299
    6. '    
' → logprob: -5.229710102081299
    7. '```' → logprob: -5.729710102081299
    8. ' 
' → logprob: -5.854710102081299
    9. 'class' → logprob: -6.229710102081299
    10. ' ' → logprob: -6.479710102081299

Token 33: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011518022045493126
    2. '   ' → logprob: -5.1365180015563965
    3. ' def' → logprob: -5.8865180015563965
    4. 'd' → logprob: -6.0115180015563965
    5. '
' → logprob: -9.511518478393555
    6. '    
' → logprob: -9.511518478393555
    7. ' ' → logprob: -9.636518478393555
    8. ' 
' → logprob: -10.386518478393555
    9. '    ' → logprob: -11.136518478393555
    10. '       ' → logprob: -11.261518478393555

Token 34: ' calorie' (ID: 66006)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.18395911157131195
    2. ' calculate' → logprob: -1.8089591264724731
    3. 'get' → logprob: -6.933959007263184
    4. ' total' → logprob: -7.433959007263184
    5. 'calculate' → logprob: -7.433959007263184
    6. ' calories' → logprob: -7.808959007263184
    7. ' is' → logprob: -8.308959007263184
    8. ' describe' → logprob: -8.308959007263184
    9. ' __' → logprob: -8.433959007263184
    10. ' ' → logprob: -8.558959007263184

Token 35: '_per' (ID: 10938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005423600785434246
    2. '_s' → logprob: -5.755423545837402
    3. '_count' → logprob: -6.255423545837402
    4. ' s' → logprob: -9.005423545837402
    5. '_' → logprob: -9.255423545837402
    6. '_cal' → logprob: -10.380423545837402
    7. '_content' → logprob: -11.380423545837402
    8. '_ratio' → logprob: -11.630423545837402
    9. '_counter' → logprob: -11.880423545837402
    10. '_cut' → logprob: -11.880423545837402

Token 36: '_d' (ID: 1565)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.331429660320282
    2. '_price' → logprob: -1.5814297199249268
    3. '_cal' → logprob: -3.0814297199249268
    4. '_cost' → logprob: -5.081429481506348
    5. '_token' → logprob: -5.456429481506348
    6. '_space' → logprob: -5.706429481506348
    7. 'formance' → logprob: -5.831429481506348
    8. '_unit' → logprob: -6.331429481506348
    9. 'cal' → logprob: -6.581429481506348
    10. '100' → logprob: -6.956429481506348

Token 37: 'ollar' (ID: 25481)
  Prédit: 'ollar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ollar' → logprob: -0.0015355738578364253
    2. 'ef' → logprob: -7.251535415649414
    3. 'oll' → logprob: -7.626535415649414
    4. 'cal' → logprob: -10.126535415649414
    5. 'el' → logprob: -10.251535415649414
    6. 'oller' → logprob: -10.251535415649414
    7. 'al' → logprob: -10.501535415649414
    8. 'ollars' → logprob: -10.626535415649414
    9. 'price' → logprob: -11.001535415649414
    10. '_price' → logprob: -11.376535415649414

Token 38: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01292702741920948
    2. '(' → logprob: -4.387927055358887
    3. 'self' → logprob: -8.012927055358887
    4. 's' → logprob: -10.012927055358887
    5. '(s' → logprob: -10.762927055358887
    6. '_ratio' → logprob: -11.637927055358887
    7. ' (' → logprob: -13.262927055358887
    8. ')' → logprob: -13.387927055358887
    9. '   ' → logprob: -13.387927055358887
    10. '_per' → logprob: -13.762927055358887

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5839232802391052
    2. '):' → logprob: -0.9589232802391052
    3. 'self' → logprob: -2.95892333984375
    4. '(self' → logprob: -5.08392333984375
    5. '):
' → logprob: -7.95892333984375
    6. '   ' → logprob: -8.70892333984375
    7. '(' → logprob: -9.70892333984375
    8. ')(' → logprob: -9.70892333984375
    9. 's' → logprob: -10.45892333984375
    10. '):

' → logprob: -10.58392333984375

Token 40: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22926606237888336
    2. '(' → logprob: -1.6042660474777222
    3. ':' → logprob: -5.854266166687012
    4. '():' → logprob: -8.104266166687012
    5. 'self' → logprob: -8.229266166687012
    6. '(
' → logprob: -8.604266166687012
    7. '       ' → logprob: -9.354266166687012
    8. '   ' → logprob: -10.104266166687012
    9. ' (' → logprob: -10.354266166687012
    10. ')' → logprob: -11.979266166687012

Token 41: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.07900732755661011
    2. 'float' → logprob: -2.579007387161255
    3. ' int' → logprob: -9.829007148742676
    4. 'int' → logprob: -10.579007148742676
    5. ' ' → logprob: -10.829007148742676
    6. 'flo' → logprob: -12.329007148742676
    7. ' None' → logprob: -12.454007148742676
    8. ' flo' → logprob: -12.454007148742676
    9. '   ' → logprob: -12.954007148742676
    10. '	float' → logprob: -13.329007148742676

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6314544677734375
    2. '(self' → logprob: -0.8814544677734375
    3. '(' → logprob: -3.1314544677734375
    4. '       ' → logprob: -4.8814544677734375
    5. '   ' → logprob: -7.0064544677734375
    6. 'self' → logprob: -7.5064544677734375
    7. ':return' → logprob: -7.5064544677734375
    8. ':self' → logprob: -9.006454467773438
    9. '):' → logprob: -9.131454467773438
    10. '():' → logprob: -9.131454467773438

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022897832095623016
    2. ' return' → logprob: -6.252289772033691
    3. 'return' → logprob: -8.002289772033691
    4. '   ' → logprob: -12.002289772033691
    5. '```' → logprob: -12.002289772033691
    6. '<|end|>' → logprob: -13.002289772033691
    7. '
' → logprob: -13.502289772033691
    8. '        ' → logprob: -13.502289772033691
    9. '      ' → logprob: -13.752289772033691
    10. ' ' → logprob: -13.877289772033691

Token 44: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002574590500444174
    2. '       ' → logprob: -6.502574443817139
    3. ' return' → logprob: -7.002574443817139
    4. 'if' (adapté à ' if') → logprob: -8.752574920654297
    5. ' if' → logprob: -12.877574920654297
    6. '```' → logprob: -13.752574920654297
    7. '   ' → logprob: -16.002574920654297
    8. 'result' → logprob: -16.002574920654297
    9. 'self' → logprob: -16.127574920654297
    10. ':return' → logprob: -17.252574920654297

Token 45: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.029795965179800987
    2. 'self' → logprob: -3.5297958850860596
    3. ' not' → logprob: -10.02979564666748
    4. '	self' → logprob: -14.40479564666748
    5. 'not' → logprob: -15.40479564666748
    6. '(self' → logprob: -15.65479564666748
    7. '   ' → logprob: -15.90479564666748
    8. '       ' → logprob: -16.154796600341797
    9. ' ' → logprob: -16.654796600341797
    10. ' price' → logprob: -16.654796600341797

Token 46: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -6.468279752880335e-05
    2. 'price' → logprob: -9.750064849853516
    3. '.' → logprob: -12.750064849853516
    4. '.pr' → logprob: -13.625064849853516
    5. '.cal' → logprob: -13.875064849853516
    6. '	price' → logprob: -14.000064849853516
    7. ' price' → logprob: -15.625064849853516
    8. '   ' → logprob: -17.000064849853516
    9. '.Price' → logprob: -17.000064849853516
    10. ' .' → logprob: -17.250064849853516

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.028826793655753136
    2. ' >' → logprob: -3.6538267135620117
    3. '==' → logprob: -6.153826713562012
    4. '>' → logprob: -8.278826713562012
    5. ' !=' → logprob: -9.528826713562012
    6. ' <=' → logprob: -10.028826713562012
    7. ' ' → logprob: -10.653826713562012
    8. ':' → logprob: -12.903826713562012
    9. '```' → logprob: -15.403826713562012
    10. ' =' → logprob: -15.653826713562012

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03804194927215576
    2. '0' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.538042068481445
    4. '```' → logprob: -17.913042068481445
    5. '<|end|>' → logprob: -18.163042068481445
    6. '۰' → logprob: -18.788042068481445
    7. '>' → logprob: -18.788042068481445
    8. '=' → logprob: -18.913042068481445
    9. '  ' → logprob: -19.288042068481445
    10. '   ' → logprob: -19.850542068481445

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.252805709838867
    4. '```' → logprob: -16.252805709838867
    5. '   ' → logprob: -16.377805709838867
    6. '  ' → logprob: -17.127805709838867
    7. '۰' → logprob: -17.627805709838867
    8. '`' → logprob: -18.627805709838867
    9. '=' → logprob: -18.690305709838867
    10. ' ' → logprob: -19.190305709838867

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005377237685024738
    2. ':return' → logprob: -5.755377292633057
    3. ':
' → logprob: -6.130377292633057
    4. ' :' → logprob: -11.755376815795898
    5. '):' → logprob: -11.880376815795898
    6. ' or' → logprob: -13.755376815795898
    7. '<|end|>' → logprob: -14.005376815795898
    8. ':

' → logprob: -14.130376815795898
    9. '           ' → logprob: -14.380376815795898
    10. 'return' → logprob: -14.505376815795898

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02532409504055977
    2. '0' → logprob: -4.650323867797852
    3. ' return' → logprob: -4.650323867797852
    4. 'return' → logprob: -5.900323867797852
    5. ' ' → logprob: -6.650323867797852
    6. '1' → logprob: -7.650323867797852
    7. ':return' → logprob: -7.900323867797852
    8. ':' → logprob: -8.650323867797852
    9. '            ' → logprob: -8.650323867797852
    10. '       ' → logprob: -9.025323867797852

Token 52: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.255600243806839
    2. ' return' → logprob: -1.5056002140045166
    3. '           ' → logprob: -6.255600452423096
    4. '0' → logprob: -6.380600452423096
    5. 'float' → logprob: -11.005599975585938
    6. ' ' → logprob: -11.130599975585938
    7. ' float' → logprob: -12.255599975585938
    8. '   ' → logprob: -12.505599975585938
    9. ':return' → logprob: -13.130599975585938
    10. '               ' → logprob: -13.380599975585938

Token 53: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8177165389060974
    2. 'float' → logprob: -1.1927165985107422
    3. ' float' → logprob: -1.5677165985107422
    4. ' ' → logprob: -3.067716598510742
    5. '           ' → logprob: -10.692716598510742
    6. '   ' → logprob: -10.817716598510742
    7. '       ' → logprob: -11.317716598510742
    8. '(float' → logprob: -11.317716598510742
    9. '	float' → logprob: -11.442716598510742
    10. 'inf' → logprob: -11.567716598510742

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10024064034223557
    2. 'float' → logprob: -2.350240707397461
    3. ' float' → logprob: -10.975240707397461
    4. ' ' → logprob: -11.225240707397461
    5. '   ' → logprob: -13.600240707397461
    6. '           ' → logprob: -14.100240707397461
    7. '       ' → logprob: -14.225240707397461
    8. 'inf' → logprob: -15.225240707397461
    9. '(float' → logprob: -16.10024070739746
    10. 'None' → logprob: -16.35024070739746

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1453845351934433
    2. '       ' → logprob: -2.0203845500946045
    3. '        
' → logprob: -7.020384311676025
    4. '<|end|>' → logprob: -7.520384311676025
    5. ' 
' → logprob: -8.020384788513184
    6. '
' → logprob: -8.020384788513184
    7. '  
' → logprob: -8.895384788513184
    8. 'return' → logprob: -8.895384788513184
    9. '    
' → logprob: -9.645384788513184
    10. ' return' → logprob: -9.895384788513184

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003800669452175498
    2. '
' → logprob: -5.753800868988037
    3. ' return' → logprob: -8.503800392150879
    4. 'return' → logprob: -8.628800392150879
    5. '        
' → logprob: -8.878800392150879
    6. '    
' → logprob: -11.003800392150879
    7. '<|end|>' → logprob: -11.003800392150879
    8. '   ' → logprob: -11.253800392150879
    9. '  
' → logprob: -11.753800392150879
    10. '```' → logprob: -12.253800392150879

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11048942804336548
    2. ' return' → logprob: -2.8604893684387207
    3. '       ' → logprob: -3.1104893684387207
    4. '
' → logprob: -6.360489368438721
    5. '        
' → logprob: -7.860489368438721
    6. '	return' → logprob: -9.110489845275879
    7. 'eturn' → logprob: -9.485489845275879
    8. '1' → logprob: -9.610489845275879
    9. '    
' → logprob: -9.985489845275879
    10. '/' → logprob: -10.110489845275879

Token 58: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31328707933425903
    2. 'self' → logprob: -1.3132870197296143
    3. '       ' → logprob: -10.813286781311035
    4. ' ' → logprob: -13.188286781311035
    5. ' ' → logprob: -13.563286781311035
    6. '        ' → logprob: -13.813286781311035
    7. '   ' → logprob: -14.938286781311035
    8. '(self' → logprob: -15.688286781311035
    9. '	self' → logprob: -15.938286781311035
    10. '    ' → logprob: -16.18828773498535

Token 59: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -1.4378848391061183e-05
    2. 'cal' → logprob: -11.250014305114746
    3. '.' → logprob: -14.250014305114746
    4. '	cal' → logprob: -15.125014305114746
    5. ' .' → logprob: -15.250014305114746
    6. '.Cal' → logprob: -16.625015258789062
    7. '_cal' → logprob: -17.375015258789062
    8. '._' → logprob: -17.875015258789062
    9. '..' → logprob: -18.000015258789062
    10. '/cal' → logprob: -18.875015258789062

Token 60: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.008855058811604977
    2. 'orie' → logprob: -6.008854866027832
    3. 'aries' → logprob: -6.258854866027832
    4. 'o' → logprob: -6.633854866027832
    5. '   ' → logprob: -7.633854866027832
    6. 'or' → logprob: -8.008854866027832
    7. '
' → logprob: -8.133854866027832
    8. '-' → logprob: -8.633854866027832
    9. 'ries' → logprob: -8.633854866027832
    10. '/' → logprob: -8.758854866027832

Token 61: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.014166799373924732
    2. '/' → logprob: -4.264166831970215
    3. ' ' → logprob: -13.264166831970215
    4. ' ' → logprob: -14.389166831970215
    5. ' /
' → logprob: -15.139166831970215
    6. '       ' → logprob: -15.389166831970215
    7. '        ' → logprob: -16.1391658782959
    8. '   ' → logprob: -16.5141658782959
    9. '/self' → logprob: -16.7641658782959
    10. '```' → logprob: -17.0141658782959

Token 62: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023247575387358665
    2. ' self' → logprob: -3.773247480392456
    3. '       ' → logprob: -13.148247718811035
    4. '   ' → logprob: -16.64824676513672
    5. ' ' → logprob: -16.77324676513672
    6. '(self' → logprob: -17.64824676513672
    7. '	self' → logprob: -17.89824676513672
    8. '        ' → logprob: -18.39824676513672
    9. '    ' → logprob: -18.77324676513672
    10. '  ' → logprob: -19.27324676513672

Token 63: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.00018971276585943997
    2. '.' → logprob: -8.625189781188965
    3. ' .' → logprob: -12.000189781188965
    4. 'price' → logprob: -13.000189781188965
    5. '.cost' → logprob: -14.875189781188965
    6. '.pr' → logprob: -15.250189781188965
    7. '	price' → logprob: -15.875189781188965
    8. '..' → logprob: -16.00018882751465
    9. ').' → logprob: -16.37518882751465
    10. '.value' → logprob: -16.37518882751465

Token 64: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05644744262099266
    2. '<|end|>' → logprob: -3.5564475059509277
    3. '```' → logprob: -5.181447505950928
    4. ' 
' → logprob: -5.806447505950928
    5. '' → logprob: -5.931447505950928
    6. '

' → logprob: -6.056447505950928
    7. 'class' → logprob: -6.431447505950928
    8. '\n' → logprob: -6.431447505950928
    9. 'newline' → logprob: -6.431447505950928
    10. 'n' → logprob: -6.556447505950928

Token 65: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3184860050678253
    2. '
' → logprob: -1.693485975265503
    3. 'c' → logprob: -2.693485975265503
    4. ' ' → logprob: -5.943486213684082
    5. ' 
' → logprob: -6.068486213684082
    6. '   ' → logprob: -6.193486213684082
    7. 'd' → logprob: -6.318486213684082
    8. ' class' → logprob: -6.568486213684082
    9. '#' → logprob: -6.693486213684082
    10. '```' → logprob: -7.068486213684082

Token 66: ' Dough' (ID: 164957)
  Prédit: ' Pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Pizza' → logprob: -0.014951933175325394
    2. ' Cheese' → logprob: -4.889951705932617
    3. 'Pizza' → logprob: -5.514951705932617
    4. ' ' → logprob: -7.264951705932617
    5. ' Basic' → logprob: -7.264951705932617
    6. ' Mar' → logprob: -7.264951705932617
    7. ' Pepper' → logprob: -8.389951705932617
    8. ' P' → logprob: -8.764951705932617
    9. ' Meat' → logprob: -9.514951705932617
    10. ' T' → logprob: -9.514951705932617

Token 67: '(P' (ID: 8952)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002509687910787761
    2. '(' → logprob: -9.125250816345215
    3. '(P' → logprob: -9.500250816345215
    4. '(Component' → logprob: -10.750250816345215
    5. ':
' → logprob: -11.125250816345215
    6. '):' → logprob: -11.125250816345215
    7. '():' → logprob: -12.250250816345215
    8. ' :' → logprob: -12.875250816345215
    9. '   ' → logprob: -13.875250816345215
    10. 'Component' → logprob: -13.875250816345215

Token 68: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.0001613459608051926
    2. 'i' → logprob: -10.125161170959473
    3. 'izz' → logprob: -10.375161170959473
    4. '```' → logprob: -10.875161170959473
    5. 'zza' → logprob: -11.000161170959473
    6. 'Pizza' → logprob: -11.375161170959473
    7. '   ' → logprob: -11.625161170959473
    8. 'iza' → logprob: -12.000161170959473
    9. 'iz' → logprob: -12.125161170959473
    10. 'izzeria' → logprob: -13.250161170959473

Token 69: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -4.870950215263292e-05
    2. 'Com' → logprob: -10.000048637390137
    3. 'Comp' → logprob: -13.625048637390137
    4. 'C' → logprob: -14.125048637390137
    5. 'Co' → logprob: -15.000048637390137
    6. '.Component' → logprob: -15.250048637390137
    7. '_Component' → logprob: -15.625048637390137
    8. ')' → logprob: -15.750048637390137
    9. '<Component' → logprob: -15.750048637390137
    10. ' Component' → logprob: -15.875048637390137

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012916464766021818
    2. ':' → logprob: -9.250128746032715
    3. '):
' → logprob: -10.625128746032715
    4. ')' → logprob: -12.375128746032715
    5. ',' → logprob: -13.250128746032715
    6. ' ):' → logprob: -13.500128746032715
    7. '   ' → logprob: -14.500128746032715
    8. ']:' → logprob: -15.375128746032715
    9. '}:' → logprob: -15.875128746032715
    10. '>:' → logprob: -16.00012969970703

Token 71: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04972420632839203
    2. '   ' → logprob: -3.2997241020202637
    3. '<|end|>' → logprob: -4.674724102020264
    4. ':
' → logprob: -6.799724102020264
    5. ' pass' → logprob: -8.799724578857422
    6. ' def' → logprob: -8.799724578857422
    7. '<|end|>' → logprob: -8.924724578857422
    8. ':def' → logprob: -9.049724578857422
    9. '  ' → logprob: -9.299724578857422
    10. ' :' → logprob: -9.424724578857422

Token 72: ' pass' (ID: 1853)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.36320117115974426
    2. '   ' → logprob: -1.8632011413574219
    3. ' pass' → logprob: -2.488201141357422
    4. 'def' → logprob: -2.738201141357422
    5. '    ' → logprob: -7.238201141357422
    6. 'pass' (adapté à ' pass') → logprob: -7.363201141357422
    7. ' ' → logprob: -8.988201141357422
    8. '       ' → logprob: -10.613201141357422
    9. '    
' → logprob: -10.738201141357422
    10. '
' → logprob: -10.863201141357422

Token 73: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.033522818237543106
    2. '

' → logprob: -3.908522844314575
    3. '<|end|>' → logprob: -4.408522605895996
    4. '<|end|>' → logprob: -8.533522605895996
    5. 'class' → logprob: -8.658522605895996
    6. '


' → logprob: -8.658522605895996
    7. '
    
' → logprob: -10.033522605895996
    8. '    
' → logprob: -10.533522605895996
    9. '```' → logprob: -10.533522605895996
    10. '
' → logprob: -10.908522605895996

Token 74: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00021069261129014194
    2. '
' → logprob: -8.875210762023926
    3. 'c' → logprob: -10.250210762023926
    4. ' class' → logprob: -10.875210762023926
    5. '    
' → logprob: -12.125210762023926
    6. 'clas' → logprob: -13.125210762023926
    7. '<|end|>' → logprob: -13.250210762023926
    8. '  
' → logprob: -13.875210762023926
    9. 'cl' → logprob: -14.000210762023926
    10. 'cla' → logprob: -14.125210762023926

Token 75: ' T' (ID: 353)
  Prédit: ' Sauce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sauce' → logprob: -0.3015304207801819
    2. ' T' → logprob: -2.051530361175537
    3. ' Cheese' → logprob: -2.926530361175537
    4. 'T' → logprob: -2.926530361175537
    5. ' ' → logprob: -4.051530361175537
    6. ' Pizza' → logprob: -5.301530361175537
    7. 'Sau' → logprob: -6.676530361175537
    8. ' Ingredient' → logprob: -8.426530838012695
    9. ' topping' → logprob: -9.426530838012695
    10. '   ' → logprob: -9.426530838012695

Token 76: 'opping' (ID: 6843)
  Prédit: 'opping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opping' → logprob: -0.04177454859018326
    2. 'oppings' → logprob: -3.2917745113372803
    3. 'o' → logprob: -6.041774749755859
    4. 'op' → logprob: -6.916774749755859
    5. 'opp' → logprob: -8.41677474975586
    6. 'oppins' → logprob: -9.79177474975586
    7. 'om' → logprob: -10.79177474975586
    8. 'oping' → logprob: -11.04177474975586
    9. '

' → logprob: -11.04177474975586
    10. '_' → logprob: -11.66677474975586

Token 77: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.00018506382184568793
    2. '(' → logprob: -9.000185012817383
    3. ':' → logprob: -10.000185012817383
    4. '(D' → logprob: -11.125185012817383
    5. '(S' → logprob: -14.375185012817383
    6. '(p' → logprob: -15.625185012817383
    7. ':P' → logprob: -15.625185012817383
    8. 'Pizza' → logprob: -15.750185012817383
    9. '(T' → logprob: -16.250185012817383
    10. '(:' → logprob: -16.875185012817383

Token 78: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.00016301481809932739
    2. 'Pizza' → logprob: -9.500163078308105
    3. 'izz' → logprob: -10.500163078308105
    4. 'zza' → logprob: -10.875163078308105
    5. 'i' → logprob: -11.000163078308105
    6. 'pizza' → logprob: -11.375163078308105
    7. 'iz' → logprob: -12.750163078308105
    8. '```' → logprob: -13.125163078308105
    9. ' pizza' → logprob: -13.625163078308105
    10. ' Pizza' → logprob: -13.750163078308105

Token 79: 'Component' (ID: 2746)
  Prédit: 'Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -0.0004311460361350328
    2. ')' → logprob: -8.125431060791016
    3. '_component' → logprob: -10.125431060791016
    4. '_Component' → logprob: -10.375431060791016
    5. 'Com' → logprob: -10.875431060791016
    6. 'component' → logprob: -11.125431060791016
    7. '.Component' → logprob: -11.625431060791016
    8. '@Component' → logprob: -11.750431060791016
    9. '<Component' → logprob: -12.625431060791016
    10. ' Component' → logprob: -12.875431060791016

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00039051592466421425
    2. ':' → logprob: -8.00039005279541
    3. '):
' → logprob: -9.87539005279541
    4. ')' → logprob: -12.75039005279541
    5. '():' → logprob: -15.62539005279541
    6. '):

' → logprob: -15.62539005279541
    7. ' ):' → logprob: -16.000391006469727
    8. '   ' → logprob: -16.750391006469727
    9. ',' → logprob: -16.875391006469727
    10. '):
' → logprob: -17.250391006469727

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2883589565753937
    2. ' pass' → logprob: -1.7883589267730713
    3. 'pass' → logprob: -2.6633589267730713
    4. ':' → logprob: -4.78835916519165
    5. '<|end|>' → logprob: -6.28835916519165
    6. '	pass' → logprob: -6.53835916519165
    7. '
' → logprob: -7.41335916519165
    8. ' ' → logprob: -8.038358688354492
    9. '    ' → logprob: -8.163358688354492
    10. '#' → logprob: -9.038358688354492

Token 82: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.009321797639131546
    2. ' pass' → logprob: -4.759321689605713
    3. '   ' → logprob: -7.509321689605713
    4. 'def' → logprob: -9.634322166442871
    5. '	pass' → logprob: -9.634322166442871
    6. ':' → logprob: -12.384322166442871
    7. 'pas' → logprob: -12.384322166442871
    8. ' ' → logprob: -12.759322166442871
    9. '    ' → logprob: -12.884322166442871
    10. ')' → logprob: -13.009322166442871

Token 83: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11111185699701309
    2. 'class' → logprob: -2.611111879348755
    3. '<|end|>' → logprob: -4.486111640930176
    4. '#' → logprob: -5.361111640930176
    5. '

' → logprob: -5.361111640930176
    6. 'c' → logprob: -5.486111640930176
    7. 'n' → logprob: -6.736111640930176
    8. '```' → logprob: -6.861111640930176
    9. '\n' → logprob: -7.111111640930176
    10. 'd' → logprob: -7.236111640930176

Token 84: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011163721792399883
    2. 'def' → logprob: -5.136163711547852
    3. 'd' → logprob: -6.011163711547852
    4. 'p' → logprob: -6.761163711547852
    5. 'c' → logprob: -7.011163711547852
    6. 'pizza' → logprob: -7.636163711547852
    7. '#' → logprob: -9.261163711547852
    8. 't' → logprob: -10.511163711547852
    9. ' class' → logprob: -11.636163711547852
    10. 'import' → logprob: -11.761163711547852

Token 85: ' Pizza' (ID: 48892)
  Prédit: ' Pizza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pizza' → logprob: -0.009034053422510624
    2. 'Pizza' → logprob: -4.884034156799316
    3. ' ' → logprob: -7.759034156799316
    4. ' Cheese' → logprob: -7.759034156799316
    5. ' P' → logprob: -8.509034156799316
    6. '```' → logprob: -9.259034156799316
    7. 'P' → logprob: -10.134034156799316
    8. '	P' → logprob: -10.509034156799316
    9. ' Specialty' → logprob: -11.134034156799316
    10. ' Mar' → logprob: -11.259034156799316

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009062222670763731
    2. '(' → logprob: -7.500905990600586
    3. '(P' → logprob: -8.375905990600586
    4. ':
' → logprob: -9.250905990600586
    5. '():' → logprob: -11.125905990600586
    6. '(Component' → logprob: -13.125905990600586
    7. ':P' → logprob: -13.250905990600586
    8. ' :' → logprob: -13.625905990600586
    9. 'Composition' → logprob: -14.000905990600586
    10. '):' → logprob: -14.000905990600586

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004753714893013239
    2. ':' → logprob: -5.629753589630127
    3. 'def' → logprob: -7.879753589630127
    4. ' def' → logprob: -8.004754066467285
    5. ':
' → logprob: -8.004754066467285
    6. '    
' → logprob: -9.504754066467285
    7. '```' → logprob: -11.629754066467285
    8. ':def' → logprob: -11.629754066467285
    9. '
' → logprob: -12.629754066467285
    10. '	def' → logprob: -12.879754066467285

Token 88: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.577518880367279
    2. ' def' → logprob: -0.827518880367279
    3. '   ' → logprob: -6.452518939971924
    4. ' ' → logprob: -14.327518463134766
    5. '```' → logprob: -14.452518463134766
    6. '	def' → logprob: -15.452518463134766
    7. '    ' → logprob: -16.327518463134766
    8. '  ' → logprob: -16.577518463134766
    9. 'class' → logprob: -17.202518463134766
    10. 'de' → logprob: -18.577518463134766

Token 89: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05637025460600853
    2. '_' → logprob: -3.681370258331299
    3. ' _' → logprob: -4.306370258331299
    4. '__' → logprob: -4.431370258331299
    5. ' ' → logprob: -6.181370258331299
    6. '_init' → logprob: -6.806370258331299
    7. '_add' → logprob: -8.05636978149414
    8. '  ' → logprob: -8.68136978149414
    9. ' ' → logprob: -8.80636978149414
    10. ' ___' → logprob: -8.93136978149414

Token 90: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.001985971350222826
    2. 'nit' → logprob: -6.251986026763916
    3. 'def' → logprob: -10.251985549926758
    4. 'it' → logprob: -11.376985549926758
    5. 'ini' → logprob: -12.751985549926758
    6. '```' → logprob: -13.251985549926758
    7. '_init' → logprob: -13.501985549926758
    8. '   ' → logprob: -13.751985549926758
    9. 'int' → logprob: -14.001985549926758
    10. 'in' → logprob: -14.251985549926758

Token 91: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009964784607291222
    2. '(' → logprob: -5.384964942932129
    3. '__(
' → logprob: -6.134964942932129
    4. '(self' → logprob: -6.384964942932129
    5. '__' → logprob: -7.384964942932129
    6. ' (' → logprob: -8.259964942932129
    7. '_(' → logprob: -8.384964942932129
    8. '<|end|>' → logprob: -8.509964942932129
    9. '__((' → logprob: -9.759964942932129
    10. '_' → logprob: -9.884964942932129

Token 92: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.5252596464706585e-05
    2. ' self' → logprob: -10.250044822692871
    3. '       ' → logprob: -12.750044822692871
    4. '):
' → logprob: -12.750044822692871
    5. '
' → logprob: -13.750044822692871
    6. 'components' → logprob: -13.875044822692871
    7. ')' → logprob: -14.250044822692871
    8. '```' → logprob: -14.625044822692871
    9. ',' → logprob: -15.000044822692871
    10. '   ' → logprob: -15.625044822692871

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01613231934607029
    2. ' ,' → logprob: -4.141132354736328
    3. 'self' → logprob: -10.641132354736328
    4. ' ' → logprob: -10.766132354736328
    5. ')' → logprob: -11.391132354736328
    6. '_,' → logprob: -11.641132354736328
    7. '<|end|>' → logprob: -12.141132354736328
    8. ' )' → logprob: -12.391132354736328
    9. ',
' → logprob: -12.641132354736328
    10. ',p' → logprob: -13.141132354736328

Token 94: ' dough' (ID: 41613)
  Prédit: ' dough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dough' → logprob: -0.4914892017841339
    2. ' components' → logprob: -1.7414891719818115
    3. 'd' → logprob: -2.2414891719818115
    4. 'components' → logprob: -2.3664891719818115
    5. 'self' → logprob: -5.616489410400391
    6. ')' → logprob: -6.241489410400391
    7. ' ' → logprob: -6.616489410400391
    8. 'name' → logprob: -6.741489410400391
    9. ' name' → logprob: -7.241489410400391
    10. ' self' → logprob: -7.241489410400391

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003399432636797428
    2. ',' → logprob: -5.75339937210083
    3. '):' → logprob: -9.128399848937988
    4. ')' → logprob: -10.253399848937988
    5. ' :' → logprob: -10.378399848937988
    6. 's' → logprob: -10.503399848937988
    7. ':,' → logprob: -11.753399848937988
    8. ' ,' → logprob: -12.253399848937988
    9. ' ):' → logprob: -13.253399848937988
    10. 'es' → logprob: -14.003399848937988

Token 96: ' Dough' (ID: 164957)
  Prédit: ' Dough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dough' → logprob: -0.0028990209102630615
    2. ' ' → logprob: -6.127899169921875
    3. 'D' → logprob: -7.377899169921875
    4. ' Pizza' → logprob: -10.127899169921875
    5. '	D' → logprob: -10.627899169921875
    6. ' dough' → logprob: -11.252899169921875
    7. ' D' → logprob: -12.752899169921875
    8. ' ' → logprob: -12.877899169921875
    9. 'Pizza' → logprob: -13.252899169921875
    10. '  ' → logprob: -13.502899169921875

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005194319528527558
    2. '):' → logprob: -7.625519275665283
    3. ' ,' → logprob: -10.750519752502441
    4. ')' → logprob: -11.875519752502441
    5. '):
' → logprob: -13.750519752502441
    6. ',
' → logprob: -14.125519752502441
    7. '   ' → logprob: -14.750519752502441
    8. ':' → logprob: -15.625519752502441
    9. '‌,' → logprob: -15.750519752502441
    10. ' ):' → logprob: -16.000518798828125

Token 98: ' toppings' (ID: 135361)
  Prédit: ' toppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toppings' → logprob: -0.016966667026281357
    2. 't' → logprob: -4.141966819763184
    3. ' topping' → logprob: -8.141966819763184
    4. ' ' → logprob: -8.391966819763184
    5. ' topp' → logprob: -8.641966819763184
    6. '	t' → logprob: -9.141966819763184
    7. '   ' → logprob: -9.891966819763184
    8. ' t' → logprob: -11.266966819763184
    9. '    ' → logprob: -11.579466819763184
    10. ' ' → logprob: -11.704466819763184

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02527679316699505
    2. '):' → logprob: -3.7752768993377686
    3. ':list' → logprob: -6.6502766609191895
    4. '=None' → logprob: -8.525277137756348
    5. ')' → logprob: -8.775277137756348
    6. ' ):' → logprob: -8.900277137756348
    7. ' :' → logprob: -9.275277137756348
    8. '=[]' → logprob: -9.775277137756348
    9. '=' → logprob: -9.900277137756348
    10. ',' → logprob: -10.900277137756348

Token 100: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6943374872207642
    2. 'list' → logprob: -0.6943374872207642
    3. ' ' → logprob: -7.944337368011475
    4. 'List' → logprob: -8.069337844848633
    5. '[list' → logprob: -8.069337844848633
    6. '   ' → logprob: -9.319337844848633
    7. ')' → logprob: -10.069337844848633
    8. '[' → logprob: -11.194337844848633
    9. '[]' → logprob: -11.194337844848633
    10. '	list' → logprob: -11.694337844848633

Token 101: '[T' (ID: 51540)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2184637486934662
    2. '[' → logprob: -2.218463659286499
    3. '[T' → logprob: -3.093463659286499
    4. '[P' → logprob: -3.843463659286499
    5. '):
' → logprob: -4.218463897705078
    6. ')' → logprob: -5.343463897705078
    7. '[D' → logprob: -8.093463897705078
    8. '[int' → logprob: -8.218463897705078
    9. ' ' → logprob: -8.593463897705078
    10. ':' → logprob: -9.093463897705078

Token 102: 'opping' (ID: 6843)
  Prédit: 'opping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opping' → logprob: -0.00010366239439463243
    2. 'o' → logprob: -9.750103950500488
    3. 'op' → logprob: -10.500103950500488
    4. 'opped' → logprob: -13.000103950500488
    5. 'opp' → logprob: -13.250103950500488
    6. '	' → logprob: -13.250103950500488
    7. 'oppings' → logprob: -13.250103950500488
    8. '
' → logprob: -13.375103950500488
    9. 'apping' → logprob: -13.375103950500488
    10. '```' → logprob: -13.500103950500488

Token 103: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.14578738808631897
    2. ']' → logprob: -2.645787477493286
    3. ']):
' → logprob: -3.145787477493286
    4. '])' → logprob: -4.145787239074707
    5. '):' → logprob: -5.895787239074707
    6. ')' → logprob: -6.270787239074707
    7. ']:' → logprob: -7.145787239074707
    8. '],' → logprob: -8.645787239074707
    9. ' ]' → logprob: -9.270787239074707
    10. '):
' → logprob: -10.020787239074707

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041982904076576233
    2. ':' → logprob: -8.000419616699219
    3. '
' → logprob: -10.875419616699219
    4. '):' → logprob: -11.375419616699219
    5. 'self' → logprob: -11.375419616699219
    6. '   ' → logprob: -11.625419616699219
    7. ')' → logprob: -11.875419616699219
    8. '):
' → logprob: -11.875419616699219
    9. ',' → logprob: -12.250419616699219
    10. ':
' → logprob: -12.625419616699219

Token 105: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.40633705258369446
    2. '       ' → logprob: -1.281337022781372
    3. ' self' → logprob: -2.906337022781372
    4. '   ' → logprob: -6.531337261199951
    5. ' ' → logprob: -9.531336784362793
    6. '	self' → logprob: -10.781336784362793
    7. ' ' → logprob: -12.156336784362793
    8. '     ' → logprob: -12.656336784362793
    9. '	' → logprob: -12.781336784362793
    10. '    ' → logprob: -12.906336784362793

Token 106: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18040134012699127
    2. '.d' → logprob: -1.80540132522583
    3. ' .' → logprob: -7.80540132522583
    4. ' ' → logprob: -9.055401802062988
    5. ' =' → logprob: -10.055401802062988
    6. 'd' → logprob: -10.180401802062988
    7. 's' → logprob: -11.430401802062988
    8. '=' → logprob: -11.930401802062988
    9. 'D' → logprob: -12.555401802062988
    10. '   ' → logprob: -12.680401802062988

Token 107: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.0019749074708670378
    2. 'o' → logprob: -6.376975059509277
    3. '_' → logprob: -9.126975059509277
    4. '   ' → logprob: -9.376975059509277
    5. 'oug' → logprob: -10.501975059509277
    6. '    ' → logprob: -11.626975059509277
    7. '```' → logprob: -11.876975059509277
    8. 'ought' → logprob: -12.126975059509277
    9. ' ' → logprob: -12.251975059509277
    10. '__' → logprob: -12.251975059509277

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754308983683586
    2. '=' → logprob: -3.529754400253296
    3. ' ' → logprob: -12.654754638671875
    4. ' =
' → logprob: -14.654754638671875
    5. 's' → logprob: -16.904754638671875
    6. '.' → logprob: -17.029754638671875
    7. '  ' → logprob: -17.279754638671875
    8. '_' → logprob: -17.529754638671875
    9. '    ' → logprob: -17.529754638671875
    10. ',' → logprob: -17.779754638671875

Token 109: ' dough' (ID: 41613)
  Prédit: ' dough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dough' → logprob: -0.020548781380057335
    2. 'd' → logprob: -3.8955488204956055
    3. ' d' → logprob: -12.645548820495605
    4. ' ' → logprob: -13.520548820495605
    5. ' ' → logprob: -14.020548820495605
    6. '	d' → logprob: -14.020548820495605
    7. ' Dough' → logprob: -15.395548820495605
    8. 's' → logprob: -16.64554786682129
    9. 'D' → logprob: -16.64554786682129
    10. 'dou' → logprob: -16.77054786682129

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010463856160640717
    2. 'self' → logprob: -7.001046180725098
    3. ' self' → logprob: -9.001046180725098
    4. '   ' → logprob: -11.751046180725098
    5. ',' → logprob: -14.001046180725098
    6. '
' → logprob: -14.376046180725098
    7. '<|end|>' → logprob: -14.376046180725098
    8. '        
' → logprob: -14.751046180725098
    9. '      ' → logprob: -15.126046180725098
    10. '	self' → logprob: -15.251046180725098

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012372145429253578
    2. 'self' → logprob: -4.512372016906738
    3. ' self' → logprob: -6.637372016906738
    4. '   ' → logprob: -11.762372016906738
    5. '	self' → logprob: -13.637372016906738
    6. '<|end|>' → logprob: -13.762372016906738
    7. '        
' → logprob: -14.012372016906738
    8. '
' → logprob: -14.512372016906738
    9. ',' → logprob: -15.012372016906738
    10. '      ' → logprob: -15.262372016906738

Token 112: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00014776040916331112
    2. ' self' → logprob: -8.875147819519043
    3. '       ' → logprob: -11.875147819519043
    4. 't' → logprob: -14.625147819519043
    5. '   ' → logprob: -15.375147819519043
    6. ' ' → logprob: -15.875147819519043
    7. 's' → logprob: -16.750146865844727
    8. '  ' → logprob: -17.375146865844727
    9. '	self' → logprob: -17.500146865844727
    10. '
' → logprob: -17.875146865844727

Token 113: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.34902429580688477
    2. '.' → logprob: -1.2240242958068848
    3. ' .' → logprob: -7.974024295806885
    4. 't' → logprob: -9.599023818969727
    5. ' toppings' → logprob: -9.849023818969727
    6. '.d' → logprob: -10.349023818969727
    7. '.top' → logprob: -11.599023818969727
    8. '.
' → logprob: -11.724023818969727
    9. '.ingredients' → logprob: -11.974023818969727
    10. 's' → logprob: -11.974023818969727

Token 114: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -7.3458322731312364e-06
    2. 'op' → logprob: -12.000007629394531
    3. 'opping' → logprob: -14.375007629394531
    4. 'oppins' → logprob: -15.250007629394531
    5. 'opp' → logprob: -16.12500762939453
    6. 'o' → logprob: -16.37500762939453
    7. '
' → logprob: -17.50000762939453
    8. 'appings' → logprob: -18.12500762939453
    9. 'ogg' → logprob: -18.25000762939453
    10. '```' → logprob: -18.50000762939453

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427599936723709
    2. ' =' → logprob: -2.0177600383758545
    3. '.extend' → logprob: -9.767760276794434
    4. '.' → logprob: -12.142760276794434
    5. '.append' → logprob: -12.267760276794434
    6. ' ' → logprob: -13.017760276794434
    7. '<|end|>' → logprob: -13.017760276794434
    8. '   ' → logprob: -13.017760276794434
    9. '_' → logprob: -13.142760276794434
    10. ')' → logprob: -13.142760276794434

Token 116: ' toppings' (ID: 135361)
  Prédit: ' toppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toppings' → logprob: -0.07007458806037903
    2. 't' → logprob: -2.6950745582580566
    3. ' ' → logprob: -10.570075035095215
    4. '[]' → logprob: -10.695075035095215
    5. ' topp' → logprob: -10.695075035095215
    6. ' topping' → logprob: -10.820075035095215
    7. ' []' → logprob: -11.445075035095215
    8. '	t' → logprob: -11.570075035095215
    9. ' ' → logprob: -11.695075035095215
    10. ' t' → logprob: -12.195075035095215

Token 117: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13336892426013947
    2. '   ' → logprob: -2.133368968963623
    3. '    
' → logprob: -5.758368968963623
    4. 'def' → logprob: -6.633368968963623
    5. '<|end|>' → logprob: -6.633368968963623
    6. '

' → logprob: -8.133368492126465
    7. ' def' → logprob: -8.508368492126465
    8. '<|end|>' → logprob: -10.008368492126465
    9. ' 
' → logprob: -10.633368492126465
    10. '@property' → logprob: -11.133368492126465

Token 118: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.545002818107605
    2. '   ' → logprob: -0.920002818107605
    3. '    
' → logprob: -4.0450029373168945
    4. 'def' → logprob: -5.9200029373168945
    5. '

' → logprob: -6.9200029373168945
    6. '        
' → logprob: -8.545002937316895
    7. '
    
' → logprob: -9.670002937316895
    8. ' def' → logprob: -9.795002937316895
    9. '    
    
' → logprob: -10.545002937316895
    10. ' 
' → logprob: -10.545002937316895

Token 119: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01734398491680622
    2. '@property' → logprob: -4.267343997955322
    3. '   ' → logprob: -5.767343997955322
    4. ' def' → logprob: -10.017343521118164
    5. '
' → logprob: -13.392343521118164
    6. '    
' → logprob: -14.642343521118164
    7. '@' → logprob: -14.892343521118164
    8. ' ' → logprob: -15.767343521118164
    9. '```' → logprob: -16.142343521118164
    10. '	def' → logprob: -16.267343521118164

Token 120: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3036250174045563
    2. ' calorie' → logprob: -2.1786251068115234
    3. 'total' → logprob: -2.8036251068115234
    4. ' calories' → logprob: -3.1786251068115234
    5. 'cal' → logprob: -4.053625106811523
    6. ' calculate' → logprob: -4.678625106811523
    7. ' ' → logprob: -4.928625106811523
    8. ' get' → logprob: -5.303625106811523
    9. '_cal' → logprob: -6.178625106811523
    10. '_total' → logprob: -6.803625106811523

Token 121: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.0056737447157502174
    2. '_price' → logprob: -5.755673885345459
    3. '_' → logprob: -6.005673885345459
    4. '_cost' → logprob: -11.5056734085083
    5. '_c' → logprob: -11.7556734085083
    6. ' _' → logprob: -12.5056734085083
    7. 'cal' → logprob: -13.0056734085083
    8. 'Calories' → logprob: -13.8806734085083
    9. '_
' → logprob: -14.0056734085083
    10. '```' → logprob: -15.0056734085083

Token 122: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.00015574338613077998
    2. '```' → logprob: -9.750155448913574
    3. 'orie' → logprob: -10.125155448913574
    4. 'or' → logprob: -11.125155448913574
    5. '   ' → logprob: -11.375155448913574
    6. '
' → logprob: -11.500155448913574
    7. 'o' → logprob: -12.125155448913574
    8. '``' → logprob: -12.250155448913574
    9. 'ory' → logprob: -13.875155448913574
    10. '_' → logprob: -13.875155448913574

Token 123: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02991791069507599
    2. '(' → logprob: -3.5299179553985596
    3. 'self' → logprob: -9.52991771697998
    4. ' (' → logprob: -9.65491771697998
    5. '(
' → logprob: -10.65491771697998
    6. ' self' → logprob: -12.77991771697998
    7. '   ' → logprob: -13.02991771697998
    8. ' ' → logprob: -14.40491771697998
    9. 's' → logprob: -14.65491771697998
    10. '       ' → logprob: -15.27991771697998

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1666097491979599
    2. 'self' → logprob: -2.541609764099121
    3. '):' → logprob: -2.916609764099121
    4. '(self' → logprob: -4.041609764099121
    5. '):
' → logprob: -6.666609764099121
    6. '   ' → logprob: -6.791609764099121
    7. ' self' → logprob: -8.041609764099121
    8. '       ' → logprob: -9.041609764099121
    9. ' ' → logprob: -9.666609764099121
    10. ',' → logprob: -10.791609764099121

Token 125: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07278186827898026
    2. ':' → logprob: -2.822781801223755
    3. '(' → logprob: -4.947782039642334
    4. 'self' → logprob: -6.572782039642334
    5. '       ' → logprob: -7.447782039642334
    6. '   ' → logprob: -7.822782039642334
    7. '=' → logprob: -7.947782039642334
    8. ')' → logprob: -8.572781562805176
    9. '(
' → logprob: -8.572781562805176
    10. '->' → logprob: -9.197781562805176

Token 126: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16030840575695038
    2. 'int' → logprob: -1.9103083610534668
    3. ' float' → logprob: -10.035308837890625
    4. ' sum' → logprob: -10.910308837890625
    5. '   ' → logprob: -11.785308837890625
    6. ' ' → logprob: -12.160308837890625
    7. 'float' → logprob: -12.785308837890625
    8. 'sum' → logprob: -12.785308837890625
    9. '    ' → logprob: -14.160308837890625
    10. ' ' → logprob: -14.160308837890625

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002628096379339695
    2. ':
' → logprob: -6.002628326416016
    3. '):' → logprob: -9.502628326416016
    4. '(self' → logprob: -10.377628326416016
    5. '       ' → logprob: -11.002628326416016
    6. ':self' → logprob: -11.627628326416016
    7. '):
' → logprob: -12.377628326416016
    8. 'self' → logprob: -12.627628326416016
    9. '   ' → logprob: -12.627628326416016
    10. ' :' → logprob: -12.877628326416016

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07172733545303345
    2. 'return' → logprob: -3.1967272758483887
    3. ' return' → logprob: -4.321727275848389
    4. 'sum' → logprob: -4.321727275848389
    5. 'total' → logprob: -7.321727275848389
    6. ' sum' → logprob: -7.446727275848389
    7. 'cal' → logprob: -9.196727752685547
    8. ' total' → logprob: -9.321727752685547
    9. 'self' → logprob: -9.321727752685547
    10. '0' → logprob: -9.946727752685547

Token 129: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.44621741771698
    2. 'total' → logprob: -1.32121741771698
    3. 'cal' → logprob: -3.0712175369262695
    4. ' return' → logprob: -3.8212175369262695
    5. '       ' → logprob: -4.4462175369262695
    6. ' total' → logprob: -4.4462175369262695
    7. ' calories' → logprob: -7.3212175369262695
    8. '
' → logprob: -8.32121753692627
    9. 'sum' → logprob: -8.69621753692627
    10. 'result' → logprob: -8.82121753692627

Token 130: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05490192025899887
    2. 'self' → logprob: -2.9299018383026123
    3. '(self' → logprob: -11.929902076721191
    4. ' sum' → logprob: -12.304902076721191
    5. 'sum' → logprob: -12.429902076721191
    6. '   ' → logprob: -13.554902076721191
    7. '	self' → logprob: -13.554902076721191
    8. '       ' → logprob: -14.429902076721191
    9. '    ' → logprob: -15.554902076721191
    10. 'int' → logprob: -15.554902076721191

Token 131: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0017990543274208903
    2. '.' → logprob: -6.3767991065979
    3. ' .' → logprob: -9.376798629760742
    4. '.cal' → logprob: -13.001798629760742
    5. '.s' → logprob: -13.251798629760742
    6. '..' → logprob: -13.626798629760742
    7. 'd' → logprob: -13.751798629760742
    8. '```' → logprob: -13.751798629760742
    9. '.t' → logprob: -14.001798629760742
    10. '`.' → logprob: -14.376798629760742

Token 132: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.000215457082958892
    2. 'ought' → logprob: -9.125215530395508
    3. '(self' → logprob: -10.375215530395508
    4. 'self' → logprob: -10.625215530395508
    5. 'o' → logprob: -11.000215530395508
    6. 'oug' → logprob: -12.125215530395508
    7. ' ' → logprob: -12.250215530395508
    8. '
' → logprob: -12.375215530395508
    9. '

' → logprob: -12.500215530395508
    10. 'ou' → logprob: -12.750215530395508

Token 133: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -2.47495681833243e-05
    2. ' .' → logprob: -10.750024795532227
    3. '.' → logprob: -12.875024795532227
    4. '.Cal' → logprob: -15.250024795532227
    5. '	cal' → logprob: -15.250024795532227
    6. 'cal' → logprob: -16.500024795532227
    7. '.calc' → logprob: -17.875024795532227
    8. ').' → logprob: -18.500024795532227
    9. '.cod' → logprob: -18.625024795532227
    10. '.cost' → logprob: -18.750024795532227

Token 134: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -7.226628895296017e-06
    2. 'o' → logprob: -12.750007629394531
    3. 'or' → logprob: -13.500007629394531
    4. 'aries' → logprob: -14.250007629394531
    5. 'orie' → logprob: -14.375007629394531
    6. 'ries' → logprob: -15.000007629394531
    7. '_cal' → logprob: -15.125007629394531
    8. '
' → logprob: -15.750007629394531
    9. 'ORIES' → logprob: -16.00000762939453
    10. 'eries' → logprob: -16.00000762939453

Token 135: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12695394456386566
    2. '+' → logprob: -2.1269538402557373
    3. ' ' → logprob: -11.126954078674316
    4. '+self' → logprob: -12.126954078674316
    5. ' plus' → logprob: -12.751954078674316
    6. ' +
' → logprob: -13.376954078674316
    7. '+
' → logprob: -14.626954078674316
    8. '   ' → logprob: -15.376954078674316
    9. ' ' → logprob: -15.626954078674316
    10. '  ' → logprob: -16.001953125

Token 136: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.25193002820014954
    2. 'sum' → logprob: -1.5019299983978271
    3. '	sum' → logprob: -14.876930236816406
    4. ' ' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.626930236816406
    6. '(sum' → logprob: -16.376930236816406
    7. '   ' → logprob: -17.751930236816406
    8. '=sum' → logprob: -18.251930236816406
    9. '.sum' → logprob: -19.251930236816406
    10. '```' → logprob: -19.626930236816406

Token 137: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.001794181764125824
    2. '(' → logprob: -6.501794338226318
    3. '(top' → logprob: -8.37679386138916
    4. '([' → logprob: -10.12679386138916
    5. 't' → logprob: -11.25179386138916
    6. '(topic' → logprob: -12.62679386138916
    7. '(
' → logprob: -13.12679386138916
    8. '(tp' → logprob: -13.87679386138916
    9. '	t' → logprob: -14.00179386138916
    10. ' topping' → logprob: -15.12679386138916

Token 138: '.cal' (ID: 40302)
  Prédit: 'opping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'opping' → logprob: -0.038265250623226166
    2. '.t' → logprob: -4.038265228271484
    3. '.' → logprob: -4.538265228271484
    4. '.op' → logprob: -5.163265228271484
    5. 'o' → logprob: -6.413265228271484
    6. 'op' → logprob: -7.788265228271484
    7. '.o' → logprob: -7.913265228271484
    8. '.top' → logprob: -7.913265228271484
    9. 't' → logprob: -8.788265228271484
    10. '.c' → logprob: -9.038265228271484

Token 139: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.00014489953173324466
    2. 'or' → logprob: -9.250144958496094
    3. 'orie' → logprob: -10.500144958496094
    4. 'o' → logprob: -12.000144958496094
    5. '```' → logprob: -12.250144958496094
    6. ' or' → logprob: -13.250144958496094
    7. '
' → logprob: -13.250144958496094
    8. 'eries' → logprob: -14.000144958496094
    9. 'ORIES' → logprob: -14.250144958496094
    10. '_or' → logprob: -14.250144958496094

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009943070821464062
    2. 'for' → logprob: -4.634943008422852
    3. ')' → logprob: -8.884943008422852
    4. ' ' → logprob: -10.259943008422852
    5. '	for' → logprob: -12.009943008422852
    6. '  ' → logprob: -12.509943008422852
    7. '   ' → logprob: -13.259943008422852
    8. ' t' → logprob: -14.634943008422852
    9. '    ' → logprob: -14.884943008422852
    10. '       ' → logprob: -15.134943008422852

Token 141: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.009762225672602654
    2. 't' → logprob: -5.009762287139893
    3. ' ' → logprob: -6.259762287139893
    4. ' self' → logprob: -7.509762287139893
    5. '	t' → logprob: -8.134761810302734
    6. ' ' → logprob: -8.759761810302734
    7. 'self' → logprob: -9.509761810302734
    8. '  ' → logprob: -10.134761810302734
    9. '	self' → logprob: -11.759761810302734
    10. '	' → logprob: -12.759761810302734

Token 142: ' in' (ID: 306)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17242325842380524
    2. 'self' → logprob: -1.922423243522644
    3. ' ' → logprob: -5.047423362731934
    4. ' in' → logprob: -5.422423362731934
    5. '.self' → logprob: -7.422423362731934
    6. '.' → logprob: -8.422423362731934
    7. 's' → logprob: -9.047423362731934
    8. '  ' → logprob: -9.297423362731934
    9. ' ' → logprob: -10.047423362731934
    10. 'elf' → logprob: -10.047423362731934

Token 143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3484632074832916
    2. ' self' → logprob: -1.2234631776809692
    3. ' ' → logprob: -12.22346305847168
    4. '<|end|>' → logprob: -12.47346305847168
    5. '	self' → logprob: -12.84846305847168
    6. '(self' → logprob: -13.47346305847168
    7. 's' → logprob: -13.59846305847168
    8. ')' → logprob: -14.34846305847168
    9. 'elf' → logprob: -14.34846305847168
    10. '[self' → logprob: -14.34846305847168

Token 144: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0004612935590557754
    2. '.' → logprob: -7.875461101531982
    3. ' toppings' → logprob: -9.75046157836914
    4. 't' → logprob: -11.75046157836914
    5. ' .' → logprob: -11.87546157836914
    6. '.top' → logprob: -13.25046157836914
    7. 'oppings' → logprob: -13.37546157836914
    8. 's' → logprob: -13.50046157836914
    9. 'user' → logprob: -14.00046157836914
    10. ').' → logprob: -14.75046157836914

Token 145: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -0.00011903966515092179
    2. 'op' → logprob: -10.12511920928955
    3. 'pp' → logprob: -10.25011920928955
    4. 'p' → logprob: -10.50011920928955
    5. 'opp' → logprob: -11.87511920928955
    6. 'opping' → logprob: -12.62511920928955
    7. 'appings' → logprob: -13.62511920928955
    8. 'o' → logprob: -14.12511920928955
    9. 'ings' → logprob: -15.12511920928955
    10. '   ' → logprob: -15.25011920928955

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.394135612528771e-05
    2. ' )' → logprob: -10.750043869018555
    3. ')
' → logprob: -11.500043869018555
    4. '       ' → logprob: -11.750043869018555
    5. '   ' → logprob: -12.875043869018555
    6. ')

' → logprob: -14.375043869018555
    7. ' ' → logprob: -14.625043869018555
    8. ')return' → logprob: -15.000043869018555
    9. '())' → logprob: -15.750043869018555
    10. '))' → logprob: -16.250043869018555

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004846496041864157
    2. '   ' → logprob: -5.629846572875977
    3. '

' → logprob: -7.379846572875977
    4. '    
' → logprob: -8.254846572875977
    5. 'def' → logprob: -9.129846572875977
    6. ' 
' → logprob: -9.504846572875977
    7. '  
' → logprob: -9.879846572875977
    8. '<|end|>' → logprob: -10.004846572875977
    9. ' ' → logprob: -10.754846572875977
    10. ' def' → logprob: -10.879846572875977

Token 148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009490952361375093
    2. ' def' → logprob: -7.250948905944824
    3. '
' → logprob: -8.500948905944824
    4. '   ' → logprob: -10.250948905944824
    5. '    
' → logprob: -15.250948905944824
    6. ' ' → logprob: -15.875948905944824
    7. '	def' → logprob: -16.87594985961914
    8. '  ' → logprob: -17.87594985961914
    9. '

' → logprob: -18.37594985961914
    10. '```' → logprob: -18.50094985961914

Token 149: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.01176097709685564
    2. 'total' → logprob: -4.88676118850708
    3. ' def' → logprob: -5.63676118850708
    4. ' ' → logprob: -7.88676118850708
    5. '_total' → logprob: -9.261760711669922
    6. 'def' → logprob: -9.761760711669922
    7. ' ' → logprob: -10.011760711669922
    8. ' price' → logprob: -12.761760711669922
    9. '_' → logprob: -13.386760711669922
    10. ' _' → logprob: -14.261760711669922

Token 150: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -13.000005722045898
    3. '_cost' → logprob: -13.000005722045898
    4. '_prices' → logprob: -14.625005722045898
    5. 'price' → logprob: -15.125005722045898
    6. ' _' → logprob: -15.500005722045898
    7. '_amount' → logprob: -16.3750057220459
    8. '_p' → logprob: -16.7500057220459
    9. '_cal' → logprob: -18.1250057220459
    10. '_pr' → logprob: -18.3750057220459

Token 151: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010499580530449748
    2. '(' → logprob: -6.876049995422363
    3. 'self' → logprob: -11.626049995422363
    4. ' (' → logprob: -12.126049995422363
    5. '()' → logprob: -13.626049995422363
    6. '(
' → logprob: -13.876049995422363
    7. ' self' → logprob: -15.251049995422363
    8. '   ' → logprob: -15.751049995422363
    9. ' ' → logprob: -15.751049995422363
    10. '(s' → logprob: -16.751049041748047

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008771585416980088
    2. '(self' → logprob: -7.875877380371094
    3. ' )' → logprob: -8.375877380371094
    4. 'self' → logprob: -8.500877380371094
    5. '()' → logprob: -10.000877380371094
    6. '   ' → logprob: -12.000877380371094
    7. ' ' → logprob: -12.625877380371094
    8. '):' → logprob: -13.250877380371094
    9. '())' → logprob: -13.250877380371094
    10. '):
' → logprob: -13.375877380371094

Token 153: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2981235980987549
    2. '->' → logprob: -1.4231235980987549
    3. ')' → logprob: -4.173123359680176
    4. ')->' → logprob: -6.923123359680176
    5. ':' → logprob: -8.548123359680176
    6. ' ' → logprob: -9.548123359680176
    7. '>' → logprob: -9.673123359680176
    8. '   ' → logprob: -9.798123359680176
    9. '()->' → logprob: -11.298123359680176
    10. '(self' → logprob: -11.298123359680176

Token 154: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5777859687805176
    2. 'int' → logprob: -0.8277859687805176
    3. ' float' → logprob: -6.577785968780518
    4. 'float' → logprob: -7.827785968780518
    5. ' self' → logprob: -10.70278549194336
    6. ' ' → logprob: -10.70278549194336
    7. 'self' → logprob: -12.32778549194336
    8. '(int' → logprob: -12.57778549194336
    9. '<int' → logprob: -14.70278549194336
    10. ')' → logprob: -15.07778549194336

Token 155: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017725196667015553
    2. '(' → logprob: -6.376772403717041
    3. ':' → logprob: -10.5017728805542
    4. '(
' → logprob: -10.8767728805542
    5. '       ' → logprob: -11.0017728805542
    6. ' (' → logprob: -12.6267728805542
    7. 'self' → logprob: -13.7517728805542
    8. '(s' → logprob: -14.1267728805542
    9. '   ' → logprob: -14.2517728805542
    10. 'return' → logprob: -14.7517728805542

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040620386600494385
    2. ' return' → logprob: -3.6656203269958496
    3. 'return' → logprob: -4.29062032699585
    4. ' self' → logprob: -8.040620803833008
    5. 'self' → logprob: -8.540620803833008
    6. '   ' → logprob: -13.165620803833008
    7. '      ' → logprob: -14.415620803833008
    8. '	return' → logprob: -15.540620803833008
    9. ' ' → logprob: -15.790620803833008
    10. '    ' → logprob: -15.790620803833008

Token 157: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4032426178455353
    2. 'return' (adapté à ' return') → logprob: -1.153242588043213
    3. ' self' → logprob: -4.653242588043213
    4. ' return' → logprob: -5.028242588043213
    5. '       ' → logprob: -9.403243064880371
    6. '   ' → logprob: -9.528243064880371
    7. ' ' → logprob: -14.403243064880371
    8. '	self' → logprob: -15.403243064880371
    9. '```' → logprob: -15.528243064880371
    10. '
' → logprob: -15.528243064880371

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002476135268807411
    2. ' self' → logprob: -6.002476215362549
    3. '(self' → logprob: -14.75247573852539
    4. '   ' → logprob: -16.75247573852539
    5. '	self' → logprob: -17.50247573852539
    6. '[self' → logprob: -17.87747573852539
    7. ' ' → logprob: -18.62747573852539
    8. '=self' → logprob: -19.12747573852539
    9. ' ' → logprob: -19.50247573852539
    10. '0' → logprob: -19.62747573852539

Token 159: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0007669831975363195
    2. '.' → logprob: -7.250766754150391
    3. ' .' → logprob: -10.12576675415039
    4. 'd' → logprob: -11.37576675415039
    5. '.p' → logprob: -13.75076675415039
    6. '.s' → logprob: -14.37576675415039
    7. '.price' → logprob: -14.50076675415039
    8. 'pizza' → logprob: -15.00076675415039
    9. 'price' → logprob: -15.37576675415039
    10. '.t' → logprob: -15.37576675415039

Token 160: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.0007825878565199673
    2. 'self' → logprob: -7.500782489776611
    3. 'ought' → logprob: -9.62578296661377
    4. 'o' → logprob: -10.12578296661377
    5. 'oug' → logprob: -10.62578296661377
    6. '
' → logprob: -11.00078296661377
    7. '   ' → logprob: -11.25078296661377
    8. '

' → logprob: -11.50078296661377
    9. 'ugh' → logprob: -11.75078296661377
    10. '(self' → logprob: -11.87578296661377

Token 161: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -2.093505099765025e-05
    2. '.' → logprob: -11.125020980834961
    3. ' .' → logprob: -12.250020980834961
    4. 'price' → logprob: -14.500020980834961
    5. '.cal' → logprob: -14.625020980834961
    6. '.cost' → logprob: -15.500020980834961
    7. '.pr' → logprob: -17.37502098083496
    8. '.Price' → logprob: -17.50002098083496
    9. '	price' → logprob: -17.50002098083496
    10. '.amount' → logprob: -18.50002098083496

Token 162: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25192955136299133
    2. '+' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.25192928314209
    4. ' ' → logprob: -16.251930236816406
    5. ' plus' → logprob: -17.126930236816406
    6. ' +
' → logprob: -17.126930236816406
    7. '+self' → logprob: -18.626930236816406
    8. '+
' → logprob: -19.376930236816406
    9. '+r' → logprob: -19.876930236816406
    10. '   ' → logprob: -20.001930236816406

Token 163: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.043001484125852585
    2. 'sum' → logprob: -3.168001413345337
    3. ' ' → logprob: -13.418001174926758
    4. ' ' → logprob: -15.293001174926758
    5. '(sum' → logprob: -15.793001174926758
    6. '	sum' → logprob: -15.793001174926758
    7. '   ' → logprob: -16.418001174926758
    8. '  ' → logprob: -16.918001174926758
    9. ' self' → logprob: -17.543001174926758
    10. '
' → logprob: -17.543001174926758

Token 164: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0019404153572395444
    2. '(' → logprob: -6.2519402503967285
    3. ' (' → logprob: -11.501940727233887
    4. '(
' → logprob: -14.126940727233887
    5. 't' → logprob: -14.501940727233887
    6. '((' → logprob: -15.626940727233887
    7. '(o' → logprob: -16.00193977355957
    8. '(s' → logprob: -16.37693977355957
    9. '(.' → logprob: -16.87693977355957
    10. '(T' → logprob: -17.50193977355957

Token 165: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.0036205046344548464
    2. '.' → logprob: -5.628620624542236
    3. ' .' → logprob: -11.128620147705078
    4. ').' → logprob: -13.878620147705078
    5. '.
' → logprob: -14.003620147705078
    6. '
' → logprob: -14.503620147705078
    7. '	price' → logprob: -14.503620147705078
    8. '​.' → logprob: -14.628620147705078
    9. '.amount' → logprob: -15.128620147705078
    10. '.t' → logprob: -15.128620147705078

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12693314254283905
    2. 'for' → logprob: -2.1269330978393555
    3. ')' → logprob: -12.501933097839355
    4. '	for' → logprob: -13.626933097839355
    5. ' ' → logprob: -16.126934051513672
    6. '<|end|>' → logprob: -17.001934051513672
    7. 's' → logprob: -18.126934051513672
    8. ' in' → logprob: -18.126934051513672
    9. ' ' → logprob: -18.251934051513672
    10. ' )' → logprob: -18.501934051513672

Token 167: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.31538066267967224
    2. ' self' → logprob: -1.4403806924819946
    3. 'self' → logprob: -4.190380573272705
    4. 't' → logprob: -4.190380573272705
    5. ' ' → logprob: -5.815380573272705
    6. ' ' → logprob: -9.065381050109863
    7. '  ' → logprob: -9.315381050109863
    8. ' s' → logprob: -9.690381050109863
    9. 's' → logprob: -10.440381050109863
    10. '<|end|>' → logprob: -10.565381050109863

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05740250647068024
    2. 'in' → logprob: -3.6824026107788086
    3. 'self' → logprob: -3.6824026107788086
    4. ' self' → logprob: -5.557402610778809
    5. '.' → logprob: -6.682402610778809
    6. ' ' → logprob: -8.557402610778809
    7. 's' → logprob: -9.932402610778809
    8. 't' → logprob: -10.557402610778809
    9. '<|end|>' → logprob: -10.807402610778809
    10. '.self' → logprob: -10.932402610778809

Token 169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5231959223747253
    2. ' self' → logprob: -0.8981959223747253
    3. ' ' → logprob: -9.77319622039795
    4. '(self' → logprob: -12.89819622039795
    5. '	self' → logprob: -12.89819622039795
    6. '  ' → logprob: -13.02319622039795
    7. 's' → logprob: -13.27319622039795
    8. 'elf' → logprob: -13.64819622039795
    9. ' ' → logprob: -14.02319622039795
    10. '   ' → logprob: -14.02319622039795

Token 170: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0014309515245258808
    2. 's' → logprob: -7.376430988311768
    3. '.' → logprob: -7.626430988311768
    4. ' toppings' → logprob: -8.75143051147461
    5. 'oppings' → logprob: -9.12643051147461
    6. '.s' → logprob: -10.75143051147461
    7. ' .' → logprob: -10.87643051147461
    8. '.top' → logprob: -12.62643051147461
    9. '<|end|>' → logprob: -13.25143051147461
    10. 't' → logprob: -13.75143051147461

Token 171: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -5.240481914370321e-05
    2. '.t' → logprob: -10.625052452087402
    3. 'op' → logprob: -11.125052452087402
    4. 'opping' → logprob: -12.125052452087402
    5. 'self' → logprob: -12.375052452087402
    6. 'opp' → logprob: -13.125052452087402
    7. '.' → logprob: -15.000052452087402
    8. ' toppings' → logprob: -15.250052452087402
    9. '.op' → logprob: -15.500052452087402
    10. 'p' → logprob: -16.125051498413086

Token 172: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. ')
' → logprob: -11.375020027160645
    3. ' )' → logprob: -12.125020027160645
    4. ')return' → logprob: -13.375020027160645
    5. '   ' → logprob: -14.250020027160645
    6. '<|end|>' → logprob: -15.000020027160645
    7. ')

' → logprob: -15.500020027160645
    8. ' ' → logprob: -15.625020027160645
    9. '       ' → logprob: -15.750020027160645
    10. '())' → logprob: -16.50002098083496

Token 173: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010489164851605892
    2. '   ' → logprob: -4.635488986968994
    3. 'def' → logprob: -8.635489463806152
    4. '

' → logprob: -9.010489463806152
    5. '    
' → logprob: -9.010489463806152
    6. '<|end|>' → logprob: -9.010489463806152
    7. '```' → logprob: -10.010489463806152
    8. ' ' → logprob: -10.135489463806152
    9. '
' → logprob: -10.260489463806152
    10. '  
' → logprob: -10.510489463806152

Token 174: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.0722858102526516e-05
    2. '
' → logprob: -10.750041007995605
    3. ' def' → logprob: -11.500041007995605
    4. '   ' → logprob: -11.625041007995605
    5. '    
' → logprob: -15.625041007995605
    6. '```' → logprob: -17.12504005432129
    7. '@property' → logprob: -17.75004005432129
    8. '	def' → logprob: -18.62504005432129
    9. '  
' → logprob: -18.75004005432129
    10. ' ' → logprob: -19.75004005432129

Token 175: ' calorie' (ID: 66006)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.48487335443496704
    2. ' calorie' → logprob: -0.984873354434967
    3. 'best' → logprob: -5.359873294830322
    4. ' def' → logprob: -6.359873294830322
    5. ' ' → logprob: -6.609873294830322
    6. ' total' → logprob: -7.109873294830322
    7. '_best' → logprob: -7.609873294830322
    8. ' cheapest' → logprob: -8.35987377166748
    9. 'cal' → logprob: -8.60987377166748
    10. 'def' → logprob: -8.85987377166748

Token 176: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.009765060618519783
    2. 's' → logprob: -4.634765148162842
    3. '_ratio' → logprob: -13.134764671325684
    4. 'per' → logprob: -13.259764671325684
    5. '_to' → logprob: -13.259764671325684
    6. '_' → logprob: -13.759764671325684
    7. '_density' → logprob: -14.759764671325684
    8. '_total' → logprob: -15.134764671325684
    9. '\' → logprob: -15.509764671325684
    10. 'r' → logprob: -15.634764671325684

Token 177: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.12694741785526276
    2. '_' → logprob: -2.1269474029541016
    3. '_
' → logprob: -11.626947402954102
    4. 'd' → logprob: -12.501947402954102
    5. ' _' → logprob: -12.876947402954102
    6. ' ' → logprob: -14.376947402954102
    7. '_p' → logprob: -14.876947402954102
    8. '_D' → logprob: -15.001947402954102
    9. '_

' → logprob: -15.376947402954102
    10. '_c' → logprob: -15.501947402954102

Token 178: 'ollar' (ID: 25481)
  Prédit: 'ollar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ollar' → logprob: -0.00019364648323971778
    2. 'o' → logprob: -9.50019359588623
    3. 'oller' → logprob: -9.75019359588623
    4. 'oll' → logprob: -10.25019359588623
    5. 'olla' → logprob: -11.62519359588623
    6. 'ol' → logprob: -12.25019359588623
    7. 'ollars' → logprob: -12.62519359588623
    8. '_' → logprob: -13.37519359588623
    9. 'olar' → logprob: -13.87519359588623
    10. '$' → logprob: -14.00019359588623

Token 179: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015849737683311105
    2. '(' → logprob: -6.501585006713867
    3. '(
' → logprob: -10.126585006713867
    4. 'self' → logprob: -10.876585006713867
    5. ' (' → logprob: -11.001585006713867
    6. '   ' → logprob: -12.876585006713867
    7. '
' → logprob: -13.251585006713867
    8. '(s' → logprob: -14.251585006713867
    9. '()' → logprob: -14.626585006713867
    10. 's' → logprob: -14.626585006713867

Token 180: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7606351375579834
    2. ')' → logprob: -0.8856351375579834
    3. 'self' → logprob: -2.1356351375579834
    4. '   ' → logprob: -7.1356353759765625
    5. ' self' → logprob: -7.8856353759765625
    6. ' ' → logprob: -8.385635375976562
    7. '
' → logprob: -8.885635375976562
    8. 's' → logprob: -9.135635375976562
    9. '       ' → logprob: -9.135635375976562
    10. ' )' → logprob: -9.385635375976562

Token 181: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014823723176959902
    2. '(' → logprob: -9.375147819519043
    3. ' (' → logprob: -9.750147819519043
    4. 'self' → logprob: -12.750147819519043
    5. '(
' → logprob: -14.375147819519043
    6. ' self' → logprob: -14.750147819519043
    7. '   ' → logprob: -15.250147819519043
    8. 'def' → logprob: -15.250147819519043
    9. '()' → logprob: -15.625147819519043
    10. ')' → logprob: -16.00014877319336

Token 182: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.043319448828697205
    2. 'float' → logprob: -3.1683194637298584
    3. ' self' → logprob: -8.168319702148438
    4. ' def' → logprob: -11.418319702148438
    5. ' ' → logprob: -11.668319702148438
    6. 'self' → logprob: -12.043319702148438
    7. '   ' → logprob: -12.793319702148438
    8. ' 
' → logprob: -13.668319702148438
    9. '    ' → logprob: -14.043319702148438
    10. '(float' → logprob: -14.168319702148438

Token 183: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08922112733125687
    2. '(' → logprob: -2.839221239089966
    3. ':' → logprob: -3.714221239089966
    4. '(
' → logprob: -6.589221000671387
    5. '():' → logprob: -7.464221000671387
    6. '       ' → logprob: -7.964221000671387
    7. ':
' → logprob: -9.464221000671387
    8. ' (' → logprob: -9.964221000671387
    9. '   ' → logprob: -10.214221000671387
    10. ' :' → logprob: -11.089221000671387

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018962714821100235
    2. ' return' → logprob: -7.001896381378174
    3. 'return' → logprob: -7.376896381378174
    4. '
' → logprob: -8.501895904541016
    5. '        
' → logprob: -9.751895904541016
    6. '    
' → logprob: -11.126895904541016
    7. '        ' → logprob: -11.126895904541016
    8. '   ' → logprob: -11.751895904541016
    9. ' 
' → logprob: -11.751895904541016
    10. '      ' → logprob: -12.001895904541016

Token 185: ' return' (ID: 622)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.041720688343048096
    2. 'return' (adapté à ' return') → logprob: -3.9167206287384033
    3. 'if' → logprob: -4.041720867156982
    4. '       ' → logprob: -6.041720867156982
    5. ' total' → logprob: -7.666720867156982
    6. 'cal' → logprob: -7.916720867156982
    7. ' if' → logprob: -9.291720390319824
    8. 'tp' → logprob: -10.666720390319824
    9. 'tot' → logprob: -11.166720390319824
    10. ' return' → logprob: -11.291720390319824

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3133663833141327
    2. ' self' → logprob: -1.313366413116455
    3. '(self' → logprob: -9.438365936279297
    4. ' (' → logprob: -11.063365936279297
    5. '   ' → logprob: -12.063365936279297
    6. '0' → logprob: -13.438365936279297
    7. ' ' → logprob: -13.938365936279297
    8. '       ' → logprob: -14.563365936279297
    9. '
' → logprob: -15.813365936279297
    10. '	self' → logprob: -15.938365936279297

Token 187: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -4.8232690460281447e-05
    2. '.d' → logprob: -10.125048637390137
    3. '.' → logprob: -11.875048637390137
    4. 'total' → logprob: -14.500048637390137
    5. ' .' → logprob: -15.000048637390137
    6. '.cal' → logprob: -15.500048637390137
    7. '.t' → logprob: -17.87504768371582
    8. '	total' → logprob: -18.50004768371582
    9. '.Total' → logprob: -18.87504768371582
    10. ').' → logprob: -19.00004768371582

Token 188: '_cal' (ID: 50948)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.6935272216796875
    2. '_cal' → logprob: -0.6935272216796875
    3. '_' → logprob: -7.9435272216796875
    4. 'cal' → logprob: -10.943527221679688
    5. '_cost' → logprob: -12.193527221679688
    6. 'price' → logprob: -13.318527221679688
    7. '_c' → logprob: -15.943527221679688
    8. '_score' → logprob: -16.193527221679688
    9. 'Cal' → logprob: -16.693527221679688
    10. '_
' → logprob: -16.818527221679688

Token 189: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.0006304710987024009
    2. 'orie' → logprob: -7.5006303787231445
    3. 'or' → logprob: -9.750630378723145
    4. 'o' → logprob: -11.625630378723145
    5. ' or' → logprob: -12.750630378723145
    6. 'ory' → logprob: -13.000630378723145
    7. 'aries' → logprob: -13.750630378723145
    8. 'eries' → logprob: -14.375630378723145
    9. '_or' → logprob: -14.500630378723145
    10. '

' → logprob: -14.625630378723145

Token 190: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010103991371579468
    2. '()/' → logprob: -9.625101089477539
    3. ' ()' → logprob: -10.500101089477539
    4. '(' → logprob: -12.625101089477539
    5. '/' → logprob: -12.875101089477539
    6. '()
' → logprob: -14.125101089477539
    7. ' /' → logprob: -14.625101089477539
    8. '()

' → logprob: -15.750101089477539
    9. ')' → logprob: -16.75010108947754
    10. '(
' → logprob: -17.50010108947754

Token 191: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.20143945515155792
    2. '/' → logprob: -1.7014394998550415
    3. '()' → logprob: -10.95143985748291
    4. ' ' → logprob: -12.57643985748291
    5. ' ' → logprob: -12.82643985748291
    6. ' /
' → logprob: -13.45143985748291
    7. '/
' → logprob: -15.07643985748291
    8. ')' → logprob: -15.70143985748291
    9. 'div' → logprob: -15.95143985748291
    10. '()/' → logprob: -16.076438903808594

Token 192: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7245405316352844
    2. 'self' → logprob: -0.7245405316352844
    3. ' max' → logprob: -3.5995404720306396
    4. 'max' → logprob: -5.724540710449219
    5. '(self' → logprob: -8.849540710449219
    6. ' (' → logprob: -8.974540710449219
    7. '(max' → logprob: -10.599540710449219
    8. '       ' → logprob: -12.849540710449219
    9. '(' → logprob: -12.974540710449219
    10. '   ' → logprob: -13.099540710449219

Token 193: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.0001870902779046446
    2. '.' → logprob: -8.625186920166016
    3. 'total' → logprob: -11.875186920166016
    4. ' .' → logprob: -14.875186920166016
    5. '._' → logprob: -16.250186920166016
    6. '..' → logprob: -16.625186920166016
    7. '	total' → logprob: -17.625186920166016
    8. ' total' → logprob: -18.375186920166016
    9. '.price' → logprob: -18.375186920166016
    10. '$total' → logprob: -18.750186920166016

Token 194: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -6.704273118884885e-07
    2. 'price' → logprob: -14.250000953674316
    3. '_' → logprob: -17.375
    4. '_pr' → logprob: -19.75
    5. 'Price' → logprob: -20.875
    6. '_
' → logprob: -21.375
    7. '_cost' → logprob: -21.875
    8. '\' → logprob: -22.0
    9. ' _' → logprob: -22.0
    10. '_prices' → logprob: -22.125

Token 195: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.233804303221405e-05
    2. '()
' → logprob: -9.625092506408691
    3. '(' → logprob: -11.500092506408691
    4. ' ()' → logprob: -12.000092506408691
    5. '()+' → logprob: -12.625092506408691
    6. '()

' → logprob: -12.750092506408691
    7. '()*' → logprob: -13.375092506408691
    8. '()`' → logprob: -14.250092506408691
    9. '(),' → logprob: -15.125092506408691
    10. '())' → logprob: -15.625092506408691

Token 196: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12679369747638702
    2. '   ' → logprob: -2.751793622970581
    3. '<|end|>' → logprob: -3.751793622970581
    4. '#' → logprob: -4.87679386138916
    5. '
' → logprob: -5.00179386138916
    6. ' ' → logprob: -5.25179386138916
    7. '[' → logprob: -5.62679386138916
    8. 'class' → logprob: -6.50179386138916
    9. ' def' → logprob: -6.62679386138916
    10. 'd' → logprob: -6.62679386138916

Token 197: ' Pizza' (ID: 48892)
  Prédit: ' Pizza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pizza' → logprob: -0.21429969370365143
    2. 'Pizza' → logprob: -2.2142996788024902
    3. ' Vegan' → logprob: -4.71429967880249
    4. ' Pepper' → logprob: -4.71429967880249
    5. ' Mar' → logprob: -4.96429967880249
    6. ' Cheese' → logprob: -4.96429967880249
    7. ' Dessert' → logprob: -5.08929967880249
    8. ' Menu' → logprob: -5.58929967880249
    9. ' P' → logprob: -5.83929967880249
    10. ' Veg' → logprob: -5.96429967880249

Token 198: 'Factory' (ID: 4870)
  Prédit: 'Component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -0.6532731056213379
    2. 'Builder' → logprob: -0.7782731056213379
    3. ':' → logprob: -5.528273105621338
    4. 'Maker' → logprob: -5.778273105621338
    5. 'Shop' → logprob: -6.153273105621338
    6. '(P' → logprob: -6.278273105621338
    7. 'Factory' → logprob: -6.403273105621338
    8. 'Calculator' → logprob: -6.778273105621338
    9. 'Selector' → logprob: -6.903273105621338
    10. 'Restaurant' → logprob: -7.153273105621338

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.637786231702194e-05
    2. ':
' → logprob: -9.375086784362793
    3. ' :' → logprob: -14.125086784362793
    4. ':

' → logprob: -15.375086784362793
    5. '():' → logprob: -15.500086784362793
    6. ':**' → logprob: -15.625086784362793
    7. ':def' → logprob: -15.750086784362793
    8. '):' → logprob: -16.875085830688477
    9. '(object' → logprob: -18.125085830688477
    10. '(' → logprob: -18.375085830688477

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026631178334355354
    2. ' def' → logprob: -3.6516311168670654
    3. 'def' → logprob: -8.026631355285645
    4. '```' → logprob: -13.901631355285645
    5. '    
' → logprob: -13.901631355285645
    6. '    ' → logprob: -14.276631355285645
    7. '   ' → logprob: -15.151631355285645
    8. '	def' → logprob: -15.151631355285645
    9. ' indentation' → logprob: -15.401631355285645
    10. '
' → logprob: -15.776631355285645

Token 201: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7790669202804565
    2. 'def' (adapté à ' def') → logprob: -0.9040669202804565
    3. '@' → logprob: -2.279067039489746
    4. ' @' → logprob: -3.404067039489746
    5. '   ' → logprob: -7.404067039489746
    6. ' ' → logprob: -11.654067039489746
    7. '
' → logprob: -12.904067039489746
    8. 'staticmethod' → logprob: -12.904067039489746
    9. '@property' → logprob: -13.279067039489746
    10. ' static' → logprob: -14.529067039489746

Token 202: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6113764047622681
    2. ' __' → logprob: -1.486376404762268
    3. '_' → logprob: -2.1113762855529785
    4. ' create' → logprob: -2.6113762855529785
    5. ' _' → logprob: -3.7363762855529785
    6. ' def' → logprob: -5.8613762855529785
    7. ' static' → logprob: -5.9863762855529785
    8. '  ' → logprob: -6.4863762855529785
    9. '__' → logprob: -6.4863762855529785
    10. '_create' → logprob: -6.4863762855529785

Token 203: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0013732073130086064
    2. 'it' → logprob: -8.001373291015625
    3. '_init' → logprob: -8.001373291015625
    4. 'new' → logprob: -8.126373291015625
    5. 'nit' → logprob: -8.626373291015625
    6. '__' → logprob: -9.001373291015625
    7. '(init' → logprob: -10.626373291015625
    8. ' init' → logprob: -11.251373291015625
    9. '   ' → logprob: -11.376373291015625
    10. '_' → logprob: -11.501373291015625

Token 204: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10110976547002792
    2. '(self' → logprob: -2.351109743118286
    3. '(' → logprob: -7.851109981536865
    4. ' (' → logprob: -7.851109981536865
    5. '__(
' → logprob: -9.976109504699707
    6. '__' → logprob: -10.101109504699707
    7. '_(' → logprob: -11.101109504699707
    8. 'self' → logprob: -11.226109504699707
    9. ' ' → logprob: -13.101109504699707
    10. '   ' → logprob: -13.226109504699707

Token 205: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007074289605952799
    2. ' self' → logprob: -7.375707626342773
    3. ')' → logprob: -9.750707626342773
    4. '
' → logprob: -11.375707626342773
    5. '   ' → logprob: -11.875707626342773
    6. '):
' → logprob: -13.250707626342773
    7. ' ' → logprob: -13.875707626342773
    8. '  ' → logprob: -14.625707626342773
    9. '       ' → logprob: -14.875707626342773
    10. '

' → logprob: -16.125707626342773

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03588567674160004
    2. ' ,' → logprob: -3.7858855724334717
    3. 'self' → logprob: -4.660885810852051
    4. ' self' → logprob: -6.910885810852051
    5. '):' → logprob: -7.285885810852051
    6. ')' → logprob: -7.660885810852051
    7. '(self' → logprob: -8.53588581085205
    8. ' ' → logprob: -8.78588581085205
    9. ' ):' → logprob: -8.91088581085205
    10. ' (' → logprob: -8.91088581085205

Token 207: ' dough' (ID: 41613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7160042524337769
    2. ' dough' → logprob: -1.2160042524337769
    3. ' self' → logprob: -2.5910043716430664
    4. 'd' → logprob: -2.7160043716430664
    5. ' available' → logprob: -3.4660043716430664
    6. 'available' → logprob: -4.341004371643066
    7. 'components' → logprob: -4.716004371643066
    8. ' components' → logprob: -4.841004371643066
    9. '   ' → logprob: -5.216004371643066
    10. ')' → logprob: -6.341004371643066

Token 208: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0139705128967762
    2. ':' → logprob: -4.638970375061035
    3. '_list' → logprob: -5.888970375061035
    4. '_options' → logprob: -7.388970375061035
    5. 'es' → logprob: -8.263970375061035
    6. '_s' → logprob: -8.638970375061035
    7. '_types' → logprob: -9.513970375061035
    8. '_cal' → logprob: -9.513970375061035
    9. ' s' → logprob: -9.763970375061035
    10. '_choices' → logprob: -10.388970375061035

Token 209: ' Dough' (ID: 164957)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7201468348503113
    2. 'D' → logprob: -0.8451468348503113
    3. ' list' → logprob: -2.720146894454956
    4. ' Dough' → logprob: -4.095146656036377
    5. '   ' → logprob: -8.095147132873535
    6. 'List' → logprob: -8.220147132873535
    7. ' D' → logprob: -8.720147132873535
    8. ' ' → logprob: -8.845147132873535
    9. ')' → logprob: -8.970147132873535
    10. ' dough' → logprob: -9.345147132873535

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003083593910560012
    2. '):' → logprob: -6.0030837059021
    3. ' ,' → logprob: -8.128083229064941
    4. '):
' → logprob: -9.003083229064941
    5. ')' → logprob: -9.128083229064941
    6. '   ' → logprob: -9.878083229064941
    7. ',
' → logprob: -12.128083229064941
    8. '‌,' → logprob: -12.378083229064941
    9. '=None' → logprob: -12.628083229064941
    10. ',d' → logprob: -12.628083229064941

Token 211: ' topping' (ID: 90613)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5361022353172302
    2. ' toppings' → logprob: -1.036102294921875
    3. ' available' → logprob: -3.411102294921875
    4. 'available' → logprob: -3.786102294921875
    5. '   ' → logprob: -6.286102294921875
    6. ' topping' → logprob: -7.286102294921875
    7. ' possible' → logprob: -7.911102294921875
    8. 'possible' → logprob: -8.036102294921875
    9. ' topp' → logprob: -8.661102294921875
    10. 'default' → logprob: -8.786102294921875

Token 212: '_price' (ID: 18814)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009515985148027539
    2. '_options' → logprob: -7.375951766967773
    3. ':' → logprob: -8.500951766967773
    4. ' s' → logprob: -9.625951766967773
    5. 'options' → logprob: -11.250951766967773
    6. '_choices' → logprob: -11.375951766967773
    7. '_s' → logprob: -11.625951766967773
    8. ' options' → logprob: -12.500951766967773
    9. '_candidates' → logprob: -12.500951766967773
    10. '_list' → logprob: -12.625951766967773

Token 213: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048853158950805664
    2. ':' → logprob: -3.0488531589508057
    3. ' s' → logprob: -9.548852920532227
    4. '_map' → logprob: -9.548852920532227
    5. '_s' → logprob: -10.923852920532227
    6. '_list' → logprob: -11.048852920532227
    7. 'es' → logprob: -11.298852920532227
    8. '_mapping' → logprob: -11.298852920532227
    9. ' :' → logprob: -11.423852920532227
    10. '_range' → logprob: -11.548852920532227

Token 214: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0023861145600676537
    2. ' int' → logprob: -6.127386093139648
    3. 'dict' → logprob: -9.502386093139648
    4. 'list' → logprob: -9.627386093139648
    5. '[int' → logprob: -11.002386093139648
    6. '   ' → logprob: -11.252386093139648
    7. 'float' → logprob: -11.502386093139648
    8. 'List' → logprob: -11.752386093139648
    9. ')' → logprob: -12.502386093139648
    10. ' ' → logprob: -12.877386093139648

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12527509033679962
    2. '):' → logprob: -2.250275135040283
    3. '):
' → logprob: -4.500275135040283
    4. ' ,' → logprob: -7.000275135040283
    5. ')' → logprob: -8.875274658203125
    6. ' ):' → logprob: -9.125274658203125
    7. '   ' → logprob: -9.875274658203125
    8. ':' → logprob: -11.125274658203125
    9. '):
' → logprob: -11.625274658203125
    10. '=' → logprob: -11.625274658203125

Token 216: ' topping' (ID: 90613)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09279448539018631
    2. ' topping' → logprob: -2.842794418334961
    3. 'default' → logprob: -4.717794418334961
    4. 'cal' → logprob: -5.092794418334961
    5. 'max' → logprob: -5.467794418334961
    6. 'base' → logprob: -5.717794418334961
    7. 'available' → logprob: -6.092794418334961
    8. ' toppings' → logprob: -6.967794418334961
    9. ' base' → logprob: -7.342794418334961
    10. '   ' → logprob: -7.467794418334961

Token 217: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.1139034554362297
    2. 's' → logprob: -2.488903522491455
    3. '_price' → logprob: -4.363903522491455
    4. '_count' → logprob: -4.613903522491455
    5. '_prices' → logprob: -7.238903522491455
    6. 'cal' → logprob: -8.488903045654297
    7. '_max' → logprob: -8.738903045654297
    8. ':' → logprob: -8.863903045654297
    9. '_list' → logprob: -9.238903045654297
    10. '_cost' → logprob: -9.738903045654297

Token 218: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.0019876365549862385
    2. 'orie' → logprob: -6.251987457275391
    3. 'ory' → logprob: -10.50198745727539
    4. 'or' → logprob: -11.25198745727539
    5. 'ries' → logprob: -12.50198745727539
    6. 'eries' → logprob: -13.00198745727539
    7. 'aries' → logprob: -13.25198745727539
    8. 'ORIES' → logprob: -13.25198745727539
    9. ' ' → logprob: -13.62698745727539
    10. 's' → logprob: -13.87698745727539

Token 219: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00706900842487812
    2. '):' → logprob: -5.007069110870361
    3. ':int' → logprob: -8.257068634033203
    4. '):
' → logprob: -10.382068634033203
    5. ' :' → logprob: -10.507068634033203
    6. ')' → logprob: -11.132068634033203
    7. ' ):' → logprob: -11.632068634033203
    8. ',' → logprob: -12.007068634033203
    9. '=' → logprob: -13.132068634033203
    10. 'int' → logprob: -13.507068634033203

Token 220: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04860293120145798
    2. ' int' → logprob: -3.048602819442749
    3. 'list' → logprob: -12.423603057861328
    4. '[int' → logprob: -12.548603057861328
    5. ')' → logprob: -12.923603057861328
    6. 'List' → logprob: -13.423603057861328
    7. ' list' → logprob: -13.923603057861328
    8. ' ' → logprob: -14.423603057861328
    9. ':int' → logprob: -14.423603057861328
    10. '   ' → logprob: -14.548603057861328

Token 221: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00017267030489165336
    2. '):' → logprob: -9.25017261505127
    3. '[' → logprob: -10.37517261505127
    4. ':' → logprob: -11.12517261505127
    5. ' [' → logprob: -11.87517261505127
    6. 'int' → logprob: -11.87517261505127
    7. '):
' → logprob: -12.00017261505127
    8. ')' → logprob: -12.62517261505127
    9. '[Int' → logprob: -13.12517261505127
    10. '<int' → logprob: -13.25017261505127

Token 222: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.723861038684845
    2. '):' → logprob: -0.848861038684845
    3. ']):
' → logprob: -3.0988609790802
    4. '):
' → logprob: -3.8488609790802
    5. ']' → logprob: -4.723861217498779
    6. ',' → logprob: -4.973861217498779
    7. ')' → logprob: -5.848861217498779
    8. ']:' → logprob: -7.223861217498779
    9. ' ):' → logprob: -7.723861217498779
    10. '])' → logprob: -8.223860740661621

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014155755750834942
    2. ':' → logprob: -4.389155864715576
    3. ',' → logprob: -7.389155864715576
    4. '<|end|>' → logprob: -7.889155864715576
    5. '   ' → logprob: -8.889155387878418
    6. ':
' → logprob: -9.139155387878418
    7. '):' → logprob: -9.139155387878418
    8. '):
' → logprob: -9.389155387878418
    9. 'self' → logprob: -9.514155387878418
    10. ')' → logprob: -9.764155387878418

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0399039201438427
    2. ' self' → logprob: -3.2899038791656494
    3. '       ' → logprob: -6.2899041175842285
    4. 'super' → logprob: -13.03990364074707
    5. '   ' → logprob: -13.28990364074707
    6. '	self' → logprob: -14.53990364074707
    7. ' ' → logprob: -14.78990364074707
    8. 'from' → logprob: -15.41490364074707
    9. 'import' → logprob: -15.53990364074707
    10. ' super' → logprob: -15.91490364074707

Token 225: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.30111730098724365
    2. '.' → logprob: -1.6761173009872437
    3. '.t' → logprob: -2.926117420196533
    4. ' .' → logprob: -4.426117420196533
    5. ' =' → logprob: -6.051117420196533
    6. 'd' → logprob: -6.426117420196533
    7. '=' → logprob: -6.551117420196533
    8. 't' → logprob: -7.426117420196533
    9. '   ' → logprob: -8.551116943359375
    10. 'self' → logprob: -8.801116943359375

Token 226: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.0011429571313783526
    2. 'o' → logprob: -7.376142978668213
    3. 'ought' → logprob: -8.501142501831055
    4. '_' → logprob: -9.501142501831055
    5. '   ' → logprob: -10.251142501831055
    6. 'ou' → logprob: -10.501142501831055
    7. ' ' → logprob: -10.751142501831055
    8. '

' → logprob: -10.876142501831055
    9. 'oug' → logprob: -10.876142501831055
    10. '
' → logprob: -11.001142501831055

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2535329759120941
    2. ' =' → logprob: -1.5035330057144165
    3. '.cal' → logprob: -6.878532886505127
    4. '_price' → logprob: -8.628533363342285
    5. '.price' → logprob: -8.753533363342285
    6. '_cal' → logprob: -8.878533363342285
    7. '.' → logprob: -10.253533363342285
    8. '   ' → logprob: -10.628533363342285
    9. ',' → logprob: -11.378533363342285
    10. 'cal' → logprob: -12.128533363342285

Token 228: ' dough' (ID: 41613)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048720549792051315
    2. ' dough' → logprob: -3.048720598220825
    3. 'D' → logprob: -9.423720359802246
    4. ' Dough' → logprob: -10.673720359802246
    5. ' ' → logprob: -11.798720359802246
    6. 'dou' → logprob: -12.423720359802246
    7. '	d' → logprob: -12.423720359802246
    8. ' d' → logprob: -12.548720359802246
    9. '   ' → logprob: -13.173720359802246
    10. '_d' → logprob: -13.798720359802246

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007320931763388216
    2. 'self' → logprob: -7.625731945037842
    3. ' self' → logprob: -8.625732421875
    4. '   ' → logprob: -10.250732421875
    5. '
' → logprob: -10.625732421875
    6. '	self' → logprob: -13.875732421875
    7. ',' → logprob: -13.875732421875
    8. ' ' → logprob: -14.000732421875
    9. '        
' → logprob: -14.125732421875
    10. '	' → logprob: -15.125732421875

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047929915599524975
    2. 'self' → logprob: -5.754793167114258
    3. ' self' → logprob: -7.129793167114258
    4. '   ' → logprob: -7.129793167114258
    5. '	self' → logprob: -12.004793167114258
    6. ' ' → logprob: -13.504793167114258
    7. '
' → logprob: -13.754793167114258
    8. 'def' → logprob: -14.254793167114258
    9. '	' → logprob: -14.504793167114258
    10. '        
' → logprob: -14.879793167114258

Token 231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001334559783572331
    2. ' self' → logprob: -9.000133514404297
    3. '       ' → logprob: -11.625133514404297
    4. 't' → logprob: -14.500133514404297
    5. '   ' → logprob: -15.750133514404297
    6. '        
' → logprob: -15.875133514404297
    7. '
' → logprob: -16.625133514404297
    8. '	self' → logprob: -16.625133514404297
    9. ' ' → logprob: -17.750133514404297
    10. '#' → logprob: -17.750133514404297

Token 232: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.06436001509428024
    2. '.' → logprob: -2.8143599033355713
    3. ' .' → logprob: -6.43936014175415
    4. '.cal' → logprob: -8.064359664916992
    5. 't' → logprob: -8.314359664916992
    6. 'cal' → logprob: -9.814359664916992
    7. '.price' → logprob: -10.064359664916992
    8. ' topping' → logprob: -10.814359664916992
    9. '.top' → logprob: -10.939359664916992
    10. '._' → logprob: -10.939359664916992

Token 233: 'opping' (ID: 6843)
  Prédit: 'opping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opping' → logprob: -0.00010318557906430215
    2. 'pping' → logprob: -10.125102996826172
    3. '_' → logprob: -10.375102996826172
    4. 'oping' → logprob: -11.625102996826172
    5. 'oppings' → logprob: -11.625102996826172
    6. '_cal' → logprob: -12.250102996826172
    7. '_op' → logprob: -13.250102996826172
    8. 'cal' → logprob: -13.375102996826172
    9. 'apping' → logprob: -13.625102996826172
    10. 'o' → logprob: -13.875102996826172

Token 234: '_price' (ID: 18814)
  Prédit: '_cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.0935811921954155
    2. '_prices' → logprob: -2.593581199645996
    3. 's' → logprob: -4.468581199645996
    4. '_price' → logprob: -5.968581199645996
    5. '_' → logprob: -8.718581199645996
    6. 'cal' → logprob: -8.843581199645996
    7. '_count' → logprob: -9.843581199645996
    8. '_s' → logprob: -9.843581199645996
    9. 'prices' → logprob: -10.968581199645996
    10. '_names' → logprob: -11.093581199645996

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689208030700684
    2. ' =' → logprob: -1.1368920803070068
    3. ')' → logprob: -11.886892318725586
    4. ',' → logprob: -12.386892318725586
    5. '<|end|>' → logprob: -12.511892318725586
    6. ' ' → logprob: -12.636892318725586
    7. '   ' → logprob: -14.011892318725586
    8. '_' → logprob: -14.886892318725586
    9. 's' → logprob: -15.136892318725586
    10. ' =
' → logprob: -15.261892318725586

Token 236: ' topping' (ID: 90613)
  Prédit: ' topping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' topping' → logprob: -0.0790170207619667
    2. 't' → logprob: -2.579016923904419
    3. ' t' → logprob: -9.70401668548584
    4. 'top' → logprob: -10.07901668548584
    5. ' top' → logprob: -11.57901668548584
    6. ' ' → logprob: -11.70401668548584
    7. ' topp' → logprob: -13.20401668548584
    8. ' topper' → logprob: -13.32901668548584
    9. ' ' → logprob: -13.95401668548584
    10. '	t' → logprob: -14.57901668548584

Token 237: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -2.6060808522743173e-05
    2. ' _' → logprob: -11.250025749206543
    3. '_' → logprob: -11.750025749206543
    4. '_cal' → logprob: -12.625025749206543
    5. '_prices' → logprob: -15.250025749206543
    6. 'price' → logprob: -15.250025749206543
    7. 'Price' → logprob: -15.625025749206543
    8. '_cost' → logprob: -15.750025749206543
    9. '   ' → logprob: -16.00002670288086
    10. '_score' → logprob: -16.00002670288086

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027204682119190693
    2. 'self' → logprob: -6.502720355987549
    3. '
' → logprob: -6.877720355987549
    4. '   ' → logprob: -9.127720832824707
    5. ' self' → logprob: -9.627720832824707
    6. '        
' → logprob: -12.877720832824707
    7. ',' → logprob: -13.127720832824707
    8. ' ' → logprob: -13.252720832824707
    9. '<|end|>' → logprob: -13.377720832824707
    10. '      ' → logprob: -14.002720832824707

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003242607053834945
    2. 'self' → logprob: -8.250324249267578
    3. ' self' → logprob: -10.375324249267578
    4. '   ' → logprob: -10.625324249267578
    5. '
' → logprob: -13.250324249267578
    6. '	' → logprob: -13.625324249267578
    7. '	self' → logprob: -13.625324249267578
    8. '      ' → logprob: -14.000324249267578
    9. '        
' → logprob: -14.125324249267578
    10. ',' → logprob: -14.875324249267578

Token 240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0021317063365131617
    2. ' self' → logprob: -6.252131938934326
    3. '       ' → logprob: -8.502131462097168
    4. '   ' → logprob: -17.502132415771484
    5. '	self' → logprob: -17.752132415771484
    6. ' ' → logprob: -18.627132415771484
    7. '
' → logprob: -19.627132415771484
    8. 's' → logprob: -21.127132415771484
    9. '[self' → logprob: -21.252132415771484
    10. '      ' → logprob: -21.252132415771484

Token 241: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.032303016632795334
    2. '.' → logprob: -3.7823030948638916
    3. 't' → logprob: -5.6573028564453125
    4. ' .' → logprob: -6.4073028564453125
    5. 'cal' → logprob: -6.6573028564453125
    6. '.cal' → logprob: -6.6573028564453125
    7. ' topping' → logprob: -7.5323028564453125
    8. '_t' → logprob: -7.9073028564453125
    9. ' ' → logprob: -9.657302856445312
    10. '_cal' → logprob: -9.782302856445312

Token 242: 'oppings' (ID: 167500)
  Prédit: 'opping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opping' → logprob: -0.001488673617132008
    2. 'oppings' → logprob: -7.50148868560791
    3. '_cal' → logprob: -7.50148868560791
    4. 'cal' → logprob: -8.75148868560791
    5. '_' → logprob: -10.12648868560791
    6. 't' → logprob: -10.62648868560791
    7. 'pping' → logprob: -10.62648868560791
    8. '_op' → logprob: -10.75148868560791
    9. 'o' → logprob: -10.75148868560791
    10. 'op' → logprob: -10.87648868560791

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326471567153931
    2. ' =' → logprob: -0.7576471567153931
    3. '=[]' → logprob: -10.632647514343262
    4. 's' → logprob: -11.882647514343262
    5. ':' → logprob: -12.007647514343262
    6. ' ' → logprob: -12.382647514343262
    7. '_' → logprob: -13.007647514343262
    8. '.' → logprob: -14.507647514343262
    9. '_cal' → logprob: -14.507647514343262
    10. 'cal' → logprob: -14.757647514343262

Token 244: ' [' (ID: 723)
  Prédit: '[T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.05237874761223793
    2. ' [' → logprob: -3.3023786544799805
    3. '[t' → logprob: -4.8023786544799805
    4. '[' → logprob: -5.1773786544799805
    5. '[]' → logprob: -8.55237865447998
    6. '[
' → logprob: -9.05237865447998
    7. '[]
' → logprob: -10.30237865447998
    8. '[self' → logprob: -11.80237865447998
    9. '[List' → logprob: -12.05237865447998
    10. '[D' → logprob: -12.17737865447998

Token 245: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00011892046313732862
    2. ' T' → logprob: -9.25011920928955
    3. '   ' → logprob: -10.75011920928955
    4. '  ' → logprob: -14.87511920928955
    5. '	T' → logprob: -15.00011920928955
    6. '       ' → logprob: -15.62511920928955
    7. ' ' → logprob: -15.87511920928955
    8. '
' → logprob: -16.000118255615234
    9. '    ' → logprob: -16.125118255615234
    10. 'Top' → logprob: -16.625118255615234

Token 246: 'opping' (ID: 6843)
  Prédit: 'opping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opping' → logprob: -0.0005155019462108612
    2. 'T' → logprob: -8.625515937805176
    3. 'apping' → logprob: -9.000515937805176
    4. 'pping' → logprob: -10.000515937805176
    5. '_' → logprob: -10.375515937805176
    6. 'op' → logprob: -11.125515937805176
    7. 'o' → logprob: -11.125515937805176
    8. '   ' → logprob: -11.750515937805176
    9. '```' → logprob: -11.750515937805176
    10. '_op' → logprob: -11.875515937805176

Token 247: '(c' (ID: 2410)
  Prédit: '(cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cal' → logprob: -0.1102539449930191
    2. '(c' → logprob: -2.3602540493011475
    3. '(t' → logprob: -4.985253810882568
    4. '(' → logprob: -5.985253810882568
    5. '(price' → logprob: -8.485254287719727
    6. '(self' → logprob: -8.735254287719727
    7. '(d' → logprob: -9.235254287719727
    8. '(tc' → logprob: -9.610254287719727
    9. '(
' → logprob: -9.985254287719727
    10. '(k' → logprob: -10.860254287719727

Token 248: ',' (ID: 11)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.08005456626415253
    2. ',' → logprob: -3.205054521560669
    3. ')' → logprob: -3.455054521560669
    4. 'cal' → logprob: -6.080054759979248
    5. 't' → logprob: -7.580054759979248
    6. 'c' → logprob: -7.580054759979248
    7. ',t' → logprob: -8.08005428314209
    8. ' ,' → logprob: -8.08005428314209
    9. ',)' → logprob: -8.83005428314209
    10. 'alc' → logprob: -8.95505428314209

Token 249: ' topping' (ID: 90613)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22758246958255768
    2. ' topping' → logprob: -1.8525824546813965
    3. 'self' → logprob: -3.4775824546813965
    4. ' self' → logprob: -4.2275824546813965
    5. '   ' → logprob: -7.4775824546813965
    6. 'top' → logprob: -8.602582931518555
    7. ' t' → logprob: -8.977582931518555
    8. '           ' → logprob: -9.227582931518555
    9. '       ' → logprob: -9.602582931518555
    10. '    ' → logprob: -9.602582931518555

Token 250: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.0006528667290695012
    2. '_cal' → logprob: -7.50065279006958
    3. 'price' → logprob: -9.375653266906738
    4. 'cal' → logprob: -11.250653266906738
    5. 'Price' → logprob: -14.250653266906738
    6. '_prices' → logprob: -14.625653266906738
    7. '_' → logprob: -15.125653266906738
    8. ' price' → logprob: -16.125652313232422
    9. '_cost' → logprob: -16.375652313232422
    10. ')' → logprob: -16.625652313232422

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044103997061029077
    2. ' )' → logprob: -7.750441074371338
    3. ' for' → logprob: -12.00044059753418
    4. '   ' → logprob: -13.50044059753418
    5. ')
' → logprob: -13.75044059753418
    6. 'for' → logprob: -14.87544059753418
    7. '       ' → logprob: -15.12544059753418
    8. ',' → logprob: -15.37544059753418
    9. ')]' → logprob: -15.87544059753418
    10. ']' → logprob: -16.37544059753418

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009789855219423771
    2. 'for' → logprob: -4.634789943695068
    3. '       ' → logprob: -11.25978946685791
    4. '        ' → logprob: -11.50978946685791
    5. '           ' → logprob: -12.63478946685791
    6. '   ' → logprob: -13.00978946685791
    7. '    ' → logprob: -13.63478946685791
    8. '	for' → logprob: -13.63478946685791
    9. ' ' → logprob: -14.00978946685791
    10. ' in' → logprob: -14.63478946685791

Token 253: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.251935750246048
    2. 'c' → logprob: -1.5019357204437256
    3. '	c' → logprob: -12.251935958862305
    4. 'cal' → logprob: -14.001935958862305
    5. ' ' → logprob: -14.251935958862305
    6. ' ' → logprob: -15.251935958862305
    7. ')c' → logprob: -17.126935958862305
    8. '   ' → logprob: -17.751935958862305
    9. '<|end|>' → logprob: -17.876935958862305
    10. ' cal' → logprob: -18.126935958862305

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.058751486241817474
    2. 'in' → logprob: -2.9337515830993652
    3. ' topping' → logprob: -6.058751583099365
    4. ' ' → logprob: -6.683751583099365
    5. 't' → logprob: -8.683751106262207
    6. 'c' → logprob: -10.058751106262207
    7. ' c' → logprob: -10.308751106262207
    8. '<|end|>' → logprob: -12.308751106262207
    9. ' t' → logprob: -12.933751106262207
    10. ' ' → logprob: -13.183751106262207

Token 255: ' topping' (ID: 90613)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08908145874738693
    2. ' topping' → logprob: -2.4640815258026123
    3. 'top' → logprob: -8.964081764221191
    4. ' t' → logprob: -12.589081764221191
    5. 'self' → logprob: -12.964081764221191
    6. ' ' → logprob: -13.214081764221191
    7. '	t' → logprob: -13.214081764221191
    8. '   ' → logprob: -13.339081764221191
    9. ' top' → logprob: -14.214081764221191
    10. ' self' → logprob: -14.339081764221191

Token 256: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -1.981667537620524e-06
    2. 'cal' → logprob: -14.375001907348633
    3. '_' → logprob: -14.500001907348633
    4. 's' → logprob: -14.875001907348633
    5. ' _' → logprob: -15.625001907348633
    6. '_c' → logprob: -16.125001907348633
    7. 'Calories' → logprob: -16.875001907348633
    8. '
' → logprob: -17.625001907348633
    9. ']' → logprob: -18.125001907348633
    10. '

' → logprob: -18.250001907348633

Token 257: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -1.4498052223643754e-05
    2. 'orie' → logprob: -11.625014305114746
    3. 'or' → logprob: -12.875014305114746
    4. 'eries' → logprob: -14.250014305114746
    5. 'ries' → logprob: -14.625014305114746
    6. 'ory' → logprob: -14.750014305114746
    7. 'aries' → logprob: -15.250014305114746
    8. '
' → logprob: -15.500014305114746
    9. '   ' → logprob: -15.625014305114746
    10. 's' → logprob: -15.875014305114746

Token 258: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006411884678527713
    2. ' ]' → logprob: -7.500641345977783
    3. '       ' → logprob: -10.500640869140625
    4. ')' → logprob: -10.625640869140625
    5. ')]' → logprob: -10.875640869140625
    6. '   ' → logprob: -11.625640869140625
    7. '])' → logprob: -12.500640869140625
    8. ']
' → logprob: -12.750640869140625
    9. '<|end|>' → logprob: -13.875640869140625
    10. '()]' → logprob: -15.750640869140625

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08833716064691544
    2. 'def' → logprob: -3.2133371829986572
    3. '
' → logprob: -3.5883371829986572
    4. '<|end|>' → logprob: -4.713336944580078
    5. '    
' → logprob: -5.213336944580078
    6. ' def' → logprob: -6.213336944580078
    7. '<|end|>' → logprob: -9.838336944580078
    8. '        
' → logprob: -9.963336944580078
    9. ' ' → logprob: -10.213336944580078
    10. '	def' → logprob: -10.213336944580078

Token 260: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000516217143740505
    2. '   ' → logprob: -8.000515937805176
    3. ' def' → logprob: -8.625515937805176
    4. '
' → logprob: -14.625515937805176
    5. '	def' → logprob: -14.750515937805176
    6. ' ' → logprob: -15.875515937805176
    7. '    
' → logprob: -15.875515937805176
    8. 'class' → logprob: -16.250516891479492
    9. '```' → logprob: -17.625516891479492
    10. '<|end|>' → logprob: -17.750516891479492

Token 261: ' generate' (ID: 10419)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.2296411693096161
    2. 'create' → logprob: -2.1046411991119385
    3. ' make' → logprob: -2.9796411991119385
    4. 'make' → logprob: -3.7296411991119385
    5. ' best' → logprob: -5.854640960693359
    6. 'best' → logprob: -6.604640960693359
    7. ' generate' → logprob: -6.729640960693359
    8. ' get' → logprob: -6.979640960693359
    9. ' build' → logprob: -7.229640960693359
    10. 'generate' → logprob: -7.979640960693359

Token 262: '_best' (ID: 77016)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.5387561321258545
    2. '(self' → logprob: -0.9137561321258545
    3. '_' → logprob: -4.913756370544434
    4. '(' → logprob: -5.913756370544434
    5. '_(' → logprob: -5.913756370544434
    6. '_all' → logprob: -6.663756370544434
    7. 'Pizza' → logprob: -7.413756370544434
    8. 's' → logprob: -8.913756370544434
    9. 'self' → logprob: -9.163756370544434
    10. 'pizza' → logprob: -9.413756370544434

Token 263: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00033296257606707513
    2. '_' → logprob: -8.875332832336426
    3. '(self' → logprob: -9.125332832336426
    4. '()' → logprob: -9.875332832336426
    5. '```' → logprob: -12.000332832336426
    6. 'pizza' → logprob: -12.125332832336426
    7. 'Pizza' → logprob: -12.500332832336426
    8. '(' → logprob: -13.125332832336426
    9. '_price' → logprob: -13.875332832336426
    10. '_value' → logprob: -14.000332832336426

Token 264: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.00041172682540491223
    2. 'izz' → logprob: -9.000411987304688
    3. '_' → logprob: -10.000411987304688
    4. 'iz' → logprob: -10.125411987304688
    5. 'zza' → logprob: -10.750411987304688
    6. 'pizza' → logprob: -11.000411987304688
    7. '```' → logprob: -11.000411987304688
    8. 'iza' → logprob: -11.125411987304688
    9. 'i' → logprob: -11.250411987304688
    10. '#' → logprob: -11.250411987304688

Token 265: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019042797794099897
    2. '(' → logprob: -8.625190734863281
    3. ' (' → logprob: -12.125190734863281
    4. 'self' → logprob: -12.500190734863281
    5. '(s' → logprob: -14.625190734863281
    6. '   ' → logprob: -14.750190734863281
    7. '(
' → logprob: -15.500190734863281
    8. 's' → logprob: -15.625190734863281
    9. '()' → logprob: -15.875190734863281
    10. '(sel' → logprob: -16.37519073486328

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09640900790691376
    2. ',' → logprob: -2.4714090824127197
    3. '):' → logprob: -5.721408843994141
    4. '(self' → logprob: -6.221408843994141
    5. 'self' → logprob: -6.721408843994141
    6. '):
' → logprob: -7.471408843994141
    7. ' )' → logprob: -8.34640884399414
    8. ')->' → logprob: -10.22140884399414
    9. '   ' → logprob: -10.47140884399414
    10. ' ,' → logprob: -10.72140884399414

Token 267: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003291480534244329
    2. ' ->' → logprob: -8.50032901763916
    3. '->' → logprob: -9.50032901763916
    4. 'self' → logprob: -10.75032901763916
    5. ' (' → logprob: -11.50032901763916
    6. '(' → logprob: -11.62532901763916
    7. '   ' → logprob: -12.62532901763916
    8. '       ' → logprob: -13.00032901763916
    9. ')' → logprob: -13.50032901763916
    10. ' self' → logprob: -13.75032901763916

Token 268: ' Pizza' (ID: 48892)
  Prédit: ' Pizza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pizza' → logprob: -0.17995116114616394
    2. 'Pizza' → logprob: -1.8049511909484863
    3. ' Optional' → logprob: -9.679950714111328
    4. ' None' → logprob: -9.804950714111328
    5. ' list' → logprob: -10.304950714111328
    6. ' pizza' → logprob: -10.679950714111328
    7. 'Optional' → logprob: -11.554950714111328
    8. 'list' → logprob: -12.054950714111328
    9. 'None' → logprob: -12.179950714111328
    10. '   ' → logprob: -12.304950714111328

Token 269: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003455856814980507
    2. '(' → logprob: -5.878455638885498
    3. '       ' → logprob: -7.753455638885498
    4. '   ' → logprob: -9.128456115722656
    5. '(
' → logprob: -9.253456115722656
    6. 'self' → logprob: -11.503456115722656
    7. ':' → logprob: -13.003456115722656
    8. ':
' → logprob: -13.378456115722656
    9. '(Self' → logprob: -14.128456115722656
    10. ' self' → logprob: -14.378456115722656

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008981237770058215
    2. '        
' → logprob: -7.500898361206055
    3. '
' → logprob: -8.500898361206055
    4. '        ' → logprob: -10.250898361206055
    5. '    ' → logprob: -11.125898361206055
    6. ' 
' → logprob: -11.375898361206055
    7. '[' → logprob: -11.500898361206055
    8. '    
' → logprob: -11.500898361206055
    9. ' ' → logprob: -12.000898361206055
    10. '           ' → logprob: -12.000898361206055

Token 271: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.18578071892261505
    2. ' best' → logprob: -1.8107807636260986
    3. '       ' → logprob: -5.3107805252075195
    4. 'max' → logprob: -7.9357805252075195
    5. '#' (adapté à ' #') → logprob: -8.31078052520752
    6. 'all' → logprob: -8.68578052520752
    7. ' max' → logprob: -9.18578052520752
    8. ' if' → logprob: -9.68578052520752
    9. 'if' → logprob: -10.18578052520752
    10. 'from' → logprob: -10.81078052520752

Token 272: ' Because' (ID: 13602)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.04362646862864494
    2. ' best' → logprob: -3.293626546859741
    3. '       ' → logprob: -5.918626308441162
    4. 'max' → logprob: -6.793626308441162
    5. '#' → logprob: -7.293626308441162
    6. 'if' → logprob: -8.16862678527832
    7. 'all' → logprob: -8.41862678527832
    8. ' max' → logprob: -9.04362678527832
    9. 'from' → logprob: -9.29362678527832
    10. ' if' → logprob: -9.29362678527832

Token 273: ' toppings' (ID: 135361)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5677226185798645
    2. ' best' → logprob: -2.1927225589752197
    3. ' all' → logprob: -2.3177225589752197
    4. ' self' → logprob: -3.0677225589752197
    5. 'the' → logprob: -3.3177225589752197
    6. ' of' → logprob: -3.6927225589752197
    7. 'self' → logprob: -3.9427225589752197
    8. ' toppings' → logprob: -4.442722797393799
    9. 'best' → logprob: -4.567722797393799
    10. ' topping' → logprob: -4.817722797393799

Token 274: ' cannot' (ID: 6284)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7857227921485901
    2. ' can' → logprob: -1.2857227325439453
    3. ' =' → logprob: -2.6607227325439453
    4. ':' → logprob: -3.6607227325439453
    5. '=' → logprob: -3.6607227325439453
    6. 'can' → logprob: -3.7857227325439453
    7. '=[]' → logprob: -4.035722732543945
    8. '   ' → logprob: -4.160722732543945
    9. ' have' → logprob: -4.410722732543945
    10. ' in' → logprob: -4.535722732543945

Token 275: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.09326697140932083
    2. 'be' → logprob: -2.4682669639587402
    3. ' have' → logprob: -6.59326696395874
    4. 'have' → logprob: -7.21826696395874
    5. 'include' → logprob: -8.093267440795898
    6. ' exceed' → logprob: -8.218267440795898
    7. ' include' → logprob: -8.718267440795898
    8. '[]' → logprob: -8.968267440795898
    9. '
' → logprob: -9.343267440795898
    10. 'all' → logprob: -9.343267440795898

Token 276: ' duplicated' (ID: 107680)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.297852098941803
    2. 'empty' → logprob: -2.797852039337158
    3. 're' → logprob: -3.047852039337158
    4. ' repeated' → logprob: -3.797852039337158
    5. 'an' → logprob: -4.047852039337158
    6. ' an' → logprob: -4.422852039337158
    7. 'used' → logprob: -4.672852039337158
    8. '[]
' → logprob: -4.672852039337158
    9. '0' → logprob: -4.797852039337158
    10. ' []' → logprob: -4.797852039337158

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0634724423289299
    2. ' ,' → logprob: -2.9384725093841553
    3. ',
' → logprob: -5.938472270965576
    4. '       ' → logprob: -5.938472270965576
    5. '
' → logprob: -6.313472270965576
    6. '<|end|>' → logprob: -7.938472270965576
    7. '        
' → logprob: -8.188472747802734
    8. ' and' → logprob: -8.813472747802734
    9. ' in' → logprob: -8.813472747802734
    10. '        ' → logprob: -9.063472747802734

Token 278: ' subsets' (ID: 165377)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.0512319952249527
    2. '       ' → logprob: -3.676232099533081
    3. 'best' → logprob: -3.926232099533081
    4. ' max' → logprob: -6.301231861114502
    5. ' all' → logprob: -7.426231861114502
    6. ' from' → logprob: -7.551231861114502
    7. ' the' → logprob: -8.05123233795166
    8. 'from' → logprob: -8.42623233795166
    9. ' import' → logprob: -8.55123233795166
    10. ' n' → logprob: -8.67623233795166

Token 279: ' need' (ID: 1309)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.25610023736953735
    2. ' =' → logprob: -2.0061001777648926
    3. ' from' → logprob: -3.5061001777648926
    4. 'from' → logprob: -4.381100177764893
    5. ' are' → logprob: -4.631100177764893
    6. ' can' → logprob: -5.006100177764893
    7. 'import' → logprob: -5.131100177764893
    8. 'of' → logprob: -5.131100177764893
    9. '       ' → logprob: -5.506100177764893
    10. '=' → logprob: -5.881100177764893

Token 280: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.017489245161414146
    2. '        ' → logprob: -4.892489433288574
    3. '       ' → logprob: -6.017489433288574
    4. ' ' → logprob: -6.142489433288574
    5. 'to' → logprob: -6.267489433288574
    6. '    ' → logprob: -6.642489433288574
    7. '   ' → logprob: -7.517489433288574
    8. ' in' → logprob: -8.517489433288574
    9. '[]' → logprob: -8.767489433288574
    10. ',' → logprob: -8.892489433288574

Token 281: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.11447431892156601
    2. 'be' → logprob: -2.239474296569824
    3. '[]' → logprob: -7.114474296569824
    4. 'range' → logprob: -7.739474296569824
    5. ' range' → logprob: -8.614474296569824
    6. 'include' → logprob: -9.864474296569824
    7. ' include' → logprob: -9.989474296569824
    8. 'generate' → logprob: -10.489474296569824
    9. '[]
' → logprob: -10.489474296569824
    10. 'b' → logprob: -10.989474296569824

Token 282: ' checked' (ID: 15579)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checked' → logprob: -1.22829270362854
    2. 'generated' → logprob: -1.35329270362854
    3. 'consider' → logprob: -1.72829270362854
    4. 'enumer' → logprob: -1.85329270362854
    5. 'expl' → logprob: -2.97829270362854
    6. ' generated' → logprob: -3.85329270362854
    7. 'evalu' → logprob: -4.853292465209961
    8. ' checked' → logprob: -4.978292465209961
    9. ' explored' → logprob: -5.103292465209961
    10. '[]' → logprob: -5.353292465209961

Token 283: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1409277766942978
    2. '
' → logprob: -2.390927791595459
    3. ',' → logprob: -4.515927791595459
    4. ' from' → logprob: -4.765927791595459
    5. 'from' → logprob: -4.765927791595459
    6. 'import' → logprob: -5.015927791595459
    7. '        
' → logprob: -6.140927791595459
    8. '<|end|>' → logprob: -6.890927791595459
    9. ' to' → logprob: -8.2659273147583
    10. ',
' → logprob: -8.2659273147583

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001368688652291894
    2. 'from' → logprob: -7.376368522644043
    3. 'import' → logprob: -8.251368522644043
    4. ' from' → logprob: -8.251368522644043
    5. '        
' → logprob: -10.001368522644043
    6. '
' → logprob: -10.126368522644043
    7. '   ' → logprob: -10.126368522644043
    8. ',' → logprob: -10.376368522644043
    9. '      ' → logprob: -10.876368522644043
    10. '        ' → logprob: -11.626368522644043

Token 285: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.33238810300827026
    2. ' from' → logprob: -1.832388162612915
    3. '       ' → logprob: -2.582388162612915
    4. 'import' → logprob: -3.957388162612915
    5. 'best' → logprob: -4.082387924194336
    6. ' best' → logprob: -4.707387924194336
    7. ' import' → logprob: -6.457387924194336
    8. 'result' → logprob: -8.582387924194336
    9. 'n' → logprob: -8.957387924194336
    10. ' result' → logprob: -9.082387924194336

Token 286: ' To' (ID: 2514)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4493275582790375
    2. ' from' → logprob: -1.8243275880813599
    3. '       ' → logprob: -2.1993274688720703
    4. ' best' → logprob: -3.3243274688720703
    5. 'best' → logprob: -3.5743274688720703
    6. 'import' → logprob: -4.07432746887207
    7. ' import' → logprob: -4.94932746887207
    8. ' n' → logprob: -7.32432746887207
    9. 'n' → logprob: -7.82432746887207
    10. ' all' → logprob: -9.32432746887207

Token 287: ' be' (ID: 413)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42951998114585876
    2. 'from' → logprob: -1.1795200109481812
    3. ' from' → logprob: -3.9295198917388916
    4. ' import' → logprob: -5.179520130157471
    5. 'maximize' → logprob: -5.179520130157471
    6. 'find' → logprob: -6.054520130157471
    7. ' maximize' → logprob: -6.429520130157471
    8. ' find' → logprob: -6.804520130157471
    9. '       ' → logprob: -6.804520130157471
    10. 'generate' → logprob: -6.929520130157471

Token 288: ' excessively' (ID: 142721)
  Prédit: ' efficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficient' → logprob: -0.3895716667175293
    2. 'efficient' → logprob: -2.2645716667175293
    3. ' able' → logprob: -2.8895716667175293
    4. ' complete' → logprob: -3.8895716667175293
    5. ' precise' → logprob: -3.8895716667175293
    6. 'able' → logprob: -4.264571666717529
    7. ' done' → logprob: -4.389571666717529
    8. ' generated' → logprob: -4.514571666717529
    9. ' more' → logprob: -4.639571666717529
    10. ' implemented' → logprob: -4.764571666717529

Token 289: ' sophisticated' (ID: 36278)
  Prédit: ' thorough'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' thorough' → logprob: -0.12141167372465134
    2. ' precise' → logprob: -3.6214115619659424
    3. 'efficient' → logprob: -3.7464115619659424
    4. ' efficient' → logprob: -3.9964115619659424
    5. 'import' → logprob: -4.8714118003845215
    6. ' exhaustive' → logprob: -5.3714118003845215
    7. 'com' → logprob: -5.4964118003845215
    8. ' sure' → logprob: -5.4964118003845215
    9. ' careful' → logprob: -5.6214118003845215
    10. ' clear' → logprob: -5.7464118003845215

Token 290: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026592178270220757
    2. '       ' → logprob: -4.276592254638672
    3. ' ,' → logprob: -5.026592254638672
    4. 'import' → logprob: -5.526592254638672
    5. ' for' → logprob: -8.401592254638672
    6. ' import' → logprob: -8.401592254638672
    7. '        ' → logprob: -8.776592254638672
    8. ':' → logprob: -8.776592254638672
    9. '<|end|>' → logprob: -8.901592254638672
    10. 'from' → logprob: -9.151592254638672

Token 291: ' use' (ID: 1199)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.19183701276779175
    2. 'from' → logprob: -2.5668370723724365
    3. ' best' → logprob: -3.0668370723724365
    4. '       ' → logprob: -3.5668370723724365
    5. ' import' → logprob: -4.066836833953857
    6. 'import' → logprob: -6.066836833953857
    7. ' all' → logprob: -7.316836833953857
    8. 'best' → logprob: -7.316836833953857
    9. ' max' → logprob: -7.941836833953857
    10. ' return' → logprob: -8.191837310791016

Token 292: ' a' (ID: 261)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.7260705232620239
    2. 'from' → logprob: -0.9760705232620239
    3. ' from' → logprob: -2.6010704040527344
    4. 'import' → logprob: -2.8510704040527344
    5. ' import' → logprob: -5.601070404052734
    6. 'it' → logprob: -6.851070404052734
    7. 'bit' → logprob: -6.851070404052734
    8. ' bit' → logprob: -7.351070404052734
    9. ' dynamic' → logprob: -8.726070404052734
    10. 'com' → logprob: -9.226070404052734

Token 293: ' generator' (ID: 23989)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3615920841693878
    2. ' from' → logprob: -1.7365920543670654
    3. ' bit' → logprob: -3.2365920543670654
    4. 'bit' → logprob: -3.4865920543670654
    5. ' itertools' → logprob: -3.7365920543670654
    6. 'import' → logprob: -4.3615922927856445
    7. ' dynamic' → logprob: -4.6115922927856445
    8. 'dynamic' → logprob: -5.6115922927856445
    9. 'back' → logprob: -5.7365922927856445
    10. ' back' → logprob: -6.9865922927856445

Token 294: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08461571484804153
    2. '
' → logprob: -3.709615707397461
    3. 'from' → logprob: -4.084615707397461
    4. ' from' → logprob: -4.334615707397461
    5. ',' → logprob: -4.959615707397461
    6. '        
' → logprob: -5.209615707397461
    7. 'import' → logprob: -5.459615707397461
    8. '<|end|>' → logprob: -5.459615707397461
    9. ' for' → logprob: -6.459615707397461
    10. '<|end|>' → logprob: -7.084615707397461

Token 295: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10060656815767288
    2. 'import' → logprob: -2.725606679916382
    3. ' itertools' → logprob: -4.100606441497803
    4. 'yield' → logprob: -4.850606441497803
    5. 'com' → logprob: -5.975606441497803
    6. ' from' → logprob: -6.475606441497803
    7. 'bit' → logprob: -7.600606441497803
    8. 'it' → logprob: -7.600606441497803
    9. 'powers' → logprob: -8.725606918334961
    10. '```' → logprob: -9.100606918334961

Token 296: ' combin' (ID: 25307)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.116710901260376
    2. ' bit' → logprob: -1.491710901260376
    3. 'yield' → logprob: -1.866710901260376
    4. ' itertools' → logprob: -2.741710901260376
    5. 'from' → logprob: -2.866710901260376
    6. ' yield' → logprob: -3.241710901260376
    7. 'back' → logprob: -3.491710901260376
    8. 'com' → logprob: -3.866710901260376
    9. ' from' → logprob: -4.116710662841797
    10. ' recursive' → logprob: -4.491710662841797

Token 297: 'atorial' (ID: 68745)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.4452488124370575
    2. 'ator' → logprob: -1.1952488422393799
    3. 'at' → logprob: -3.82024884223938
    4. 'from' → logprob: -4.820248603820801
    5. 'atorial' → logprob: -4.945248603820801
    6. '```' → logprob: -4.945248603820801
    7. ' at' → logprob: -5.695248603820801
    8. 'ation' → logprob: -5.945248603820801
    9. 'a' → logprob: -6.820248603820801
    10. 'import' → logprob: -6.820248603820801

Token 298: ' iterator' (ID: 30787)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25176551938056946
    2. 'from' → logprob: -2.126765489578247
    3. ' approach' → logprob: -2.501765489578247
    4. ' import' → logprob: -4.626765727996826
    5. ' from' → logprob: -5.126765727996826
    6. 'appro' → logprob: -5.876765727996826
    7. 'expl' → logprob: -7.501765727996826
    8. 'iterator' → logprob: -7.751765727996826
    9. 'library' → logprob: -8.126765251159668
    10. 'optimization' → logprob: -8.751765251159668

Token 299: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013665644451975822
    2. ' from' → logprob: -5.138665676116943
    3. 'from' → logprob: -6.263665676116943
    4. '
' → logprob: -6.263665676116943
    5. '        
' → logprob: -6.513665676116943
    6. 'import' → logprob: -7.513665676116943
    7. ',' → logprob: -7.513665676116943
    8. '<|end|>' → logprob: -7.638665676116943
    9. '        ' → logprob: -9.013665199279785
    10. ' to' → logprob: -9.138665199279785

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008170120418071747
    2. ' from' → logprob: -7.750816822052002
    3. 'from' → logprob: -8.87581729888916
    4. 'import' → logprob: -9.75081729888916
    5. '
' → logprob: -10.00081729888916
    6. '        
' → logprob: -10.37581729888916
    7. ',' → logprob: -10.37581729888916
    8. '   ' → logprob: -10.62581729888916
    9. '<|end|>' → logprob: -10.87581729888916
    10. ' to' → logprob: -11.87581729888916

Token 301: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5459657311439514
    2. 'from' (adapté à ' from') → logprob: -1.0459656715393066
    3. '       ' → logprob: -2.9209656715393066
    4. 'import' → logprob: -5.170965671539307
    5. ' best' → logprob: -5.170965671539307
    6. ' import' → logprob: -6.170965671539307
    7. 'best' → logprob: -6.920965671539307
    8. ' result' → logprob: -7.295965671539307
    9. 'result' → logprob: -8.420966148376465
    10. ' total' → logprob: -10.295966148376465

Token 302: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.006806553341448307
    2. ' itertools' → logprob: -5.006806373596191
    3. 'import' → logprob: -9.381806373596191
    4. 'iter' → logprob: -12.006806373596191
    5. '   ' → logprob: -15.131806373596191
    6. 'iterator' → logprob: -15.881806373596191
    7. 'typing' → logprob: -15.881806373596191
    8. ' ' → logprob: -16.381807327270508
    9. 'collections' → logprob: -16.881807327270508
    10. 'math' → logprob: -17.506807327270508

Token 303: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016184164211153984
    2. 'import' → logprob: -4.141184329986572
    3. '	import' → logprob: -9.391183853149414
    4. ' ' → logprob: -10.891183853149414
    5. ' itertools' → logprob: -11.266183853149414
    6. ' .' → logprob: -11.266183853149414
    7. '.' → logprob: -11.766183853149414
    8. '.import' → logprob: -11.766183853149414
    9. '.com' → logprob: -12.891183853149414
    10. '<|end|>' → logprob: -14.141183853149414

Token 304: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.020805558189749718
    2. 'chain' → logprob: -4.020805358886719
    3. ' combinations' → logprob: -6.145805358886719
    4. ' chain' → logprob: -7.645805358886719
    5. '	com' → logprob: -11.145805358886719
    6. 'powers' → logprob: -11.770805358886719
    7. 'comb' → logprob: -12.645805358886719
    8. ' ' → logprob: -12.770805358886719
    9. '```' → logprob: -14.020805358886719
    10. 'chains' → logprob: -14.770805358886719

Token 305: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10835275799036026
    2. '       ' → logprob: -2.9833526611328125
    3. '

' → logprob: -3.2333526611328125
    4. '<|end|>' → logprob: -4.8583526611328125
    5. '        
' → logprob: -6.3583526611328125
    6. '<|end|>' → logprob: -6.6083526611328125
    7. ',' → logprob: -6.7333526611328125
    8. ',
' → logprob: -8.858352661132812
    9. ' for' → logprob: -9.608352661132812
    10. '
' → logprob: -9.733352661132812

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019210930913686752
    2. '
' → logprob: -4.3942108154296875
    3. '        
' → logprob: -5.1442108154296875
    4. '   ' → logprob: -8.519210815429688
    5. '    
' → logprob: -9.019210815429688
    6. ',' → logprob: -9.519210815429688
    7. 'import' → logprob: -9.644210815429688
    8. '<|end|>' → logprob: -9.644210815429688
    9. ' for' → logprob: -9.769210815429688
    10. '<|end|>' → logprob: -10.019210815429688

Token 307: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.04090031981468201
    2. '       ' → logprob: -3.665900230407715
    3. 'all' → logprob: -4.915900230407715
    4. 'n' → logprob: -5.290900230407715
    5. ' best' → logprob: -6.415900230407715
    6. 'max' → logprob: -8.040900230407715
    7. '   ' → logprob: -10.165900230407715
    8. ' n' → logprob: -10.415900230407715
    9. 'def' → logprob: -10.790900230407715
    10. 'possible' → logprob: -10.915900230407715

Token 308: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.025253307074308395
    2. '_ratio' → logprob: -3.7752532958984375
    3. '_value' → logprob: -7.1502532958984375
    4. '_cal' → logprob: -7.2752532958984375
    5. '_score' → logprob: -7.7752532958984375
    6. '_combo' → logprob: -10.525253295898438
    7. '_price' → logprob: -10.525253295898438
    8. '_comb' → logprob: -11.025253295898438
    9. '_' → logprob: -11.525253295898438
    10. '_quality' → logprob: -11.900253295898438

Token 309: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.00015085970517247915
    2. 'pizza' → logprob: -9.375150680541992
    3. 'izz' → logprob: -11.125150680541992
    4. 'iza' → logprob: -11.250150680541992
    5. 'zza' → logprob: -11.750150680541992
    6. ' ' → logprob: -12.000150680541992
    7. '   ' → logprob: -12.625150680541992
    8. 'iz' → logprob: -12.750150680541992
    9. '
' → logprob: -13.000150680541992
    10. '```' → logprob: -13.250150680541992

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014362464658915997
    2. '=' → logprob: -4.264362335205078
    3. ',' → logprob: -9.264362335205078
    4. ':' → logprob: -9.889362335205078
    5. ' ' → logprob: -10.139362335205078
    6. '=None' → logprob: -12.764362335205078
    7. '   ' → logprob: -13.014362335205078
    8. '  ' → logprob: -13.389362335205078
    9. '_' → logprob: -13.639362335205078
    10. ' =
' → logprob: -13.639362335205078

Token 311: ' Pizza' (ID: 48892)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6364908814430237
    2. ' None' → logprob: -0.7614908814430237
    3. 'Pizza' → logprob: -5.886490821838379
    4. ' Pizza' → logprob: -6.886490821838379
    5. '       ' → logprob: -10.261490821838379
    6. '   ' → logprob: -11.136490821838379
    7. '(None' → logprob: -11.511490821838379
    8. '           ' → logprob: -11.636490821838379
    9. 'self' → logprob: -12.511490821838379
    10. '    ' → logprob: -13.386490821838379

Token 312: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.990154047845863e-05
    2. '(' → logprob: -10.375049591064453
    3. '(
' → logprob: -11.000049591064453
    4. 'self' → logprob: -13.375049591064453
    5. '       ' → logprob: -16.125049591064453
    6. '(d' → logprob: -16.250049591064453
    7. '=self' → logprob: -16.375049591064453
    8. ' self' → logprob: -16.750049591064453
    9. '(D' → logprob: -17.625049591064453
    10. '[self' → logprob: -17.625049591064453

Token 313: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0002456046058796346
    2. '.' → logprob: -8.375246047973633
    3. ' .' → logprob: -11.250246047973633
    4. ').' → logprob: -14.250246047973633
    5. '.s' → logprob: -15.125246047973633
    6. '   ' → logprob: -15.500246047973633
    7. 'd' → logprob: -15.625246047973633
    8. ' dough' → logprob: -16.125246047973633
    9. '.p' → logprob: -16.625246047973633
    10. '```' → logprob: -16.625246047973633

Token 314: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.0005973544903099537
    2. '   ' → logprob: -8.87559700012207
    3. 'ought' → logprob: -9.25059700012207
    4. '```' → logprob: -9.62559700012207
    5. 'o' → logprob: -10.25059700012207
    6. 'self' → logprob: -10.75059700012207
    7. ' ' → logprob: -10.75059700012207
    8. '
' → logprob: -11.18809700012207
    9. '    ' → logprob: -11.18809700012207
    10. '__' → logprob: -11.43809700012207

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002149802603526041
    2. ')' → logprob: -9.125214576721191
    3. ' ,' → logprob: -9.375214576721191
    4. ',
' → logprob: -11.875214576721191
    5. '[],' → logprob: -12.500214576721191
    6. ',)' → logprob: -12.875214576721191
    7. '   ' → logprob: -13.000214576721191
    8. ',[' → logprob: -13.750214576721191
    9. ',None' → logprob: -14.500214576721191
    10. ',

' → logprob: -14.625214576721191

Token 316: ' [])
' (ID: 64395)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.0036845204886049032
    2. '[]' → logprob: -6.0036845207214355
    3. '[])
' → logprob: -6.7536845207214355
    4. ' [])' → logprob: -10.253684043884277
    5. '[]
' → logprob: -12.878684043884277
    6. '[' → logprob: -13.253684043884277
    7. ')' → logprob: -14.128684043884277
    8. '[]):' → logprob: -14.628684043884277
    9. '[]

' → logprob: -15.628684043884277
    10. '[]}' → logprob: -15.878684043884277

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00843455083668232
    2. ' best' → logprob: -5.383434772491455
    3. 'best' → logprob: -5.758434772491455
    4. '        
' → logprob: -8.133434295654297
    5. ' for' → logprob: -9.008434295654297
    6. '
' → logprob: -9.383434295654297
    7. '	best' → logprob: -9.758434295654297
    8. '   ' → logprob: -10.508434295654297
    9. 'for' → logprob: -10.633434295654297
    10. 'max' → logprob: -11.883434295654297

Token 318: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.3322490155696869
    2. '       ' → logprob: -1.4572490453720093
    3. 'for' → logprob: -3.3322489261627197
    4. 'max' → logprob: -5.332249164581299
    5. 'all' → logprob: -5.457249164581299
    6. ' best' → logprob: -5.707249164581299
    7. ' for' → logprob: -6.832249164581299
    8. 'n' → logprob: -8.33224868774414
    9. ' max' → logprob: -9.08224868774414
    10. '   ' → logprob: -9.58224868774414

Token 319: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.3335115313529968
    2. '_p' → logprob: -1.9585115909576416
    3. '_cal' → logprob: -2.3335115909576416
    4. '_value' → logprob: -3.4585115909576416
    5. '_score' → logprob: -4.7085113525390625
    6. '_cp' → logprob: -5.8335113525390625
    7. '_c' → logprob: -7.4585113525390625
    8. '_pp' → logprob: -7.7085113525390625
    9. '_eff' → logprob: -8.208511352539062
    10. '_' → logprob: -8.583511352539062

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. ':' → logprob: -15.001928329467773
    4. '=float' → logprob: -15.876928329467773
    5. ',' → logprob: -16.126928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '=None' → logprob: -17.501928329467773
    8. '=
' → logprob: -18.001928329467773
    9. '=

' → logprob: -18.251928329467773
    10. 's' → logprob: -18.251928329467773

Token 321: ' best' (ID: 1636)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06204431876540184
    2. 'best' → logprob: -2.937044382095337
    3. ' ' → logprob: -5.312044143676758
    4. ' best' → logprob: -6.687044143676758
    5. 'self' → logprob: -7.562044143676758
    6. '-' → logprob: -8.312044143676758
    7. ' self' → logprob: -9.687044143676758
    8. ' -' → logprob: -10.187044143676758
    9. 'float' → logprob: -10.312044143676758
    10. '   ' → logprob: -11.437044143676758

Token 322: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00027432903880253434
    2. '_ratio' → logprob: -8.375274658203125
    3. '_d' → logprob: -11.500274658203125
    4. '.p' → logprob: -12.375274658203125
    5. 'ior' → logprob: -13.000274658203125
    6. 'cal' → logprob: -13.000274658203125
    7. '_' → logprob: -13.375274658203125
    8. 'p' → logprob: -13.375274658203125
    9. 's' → logprob: -13.375274658203125
    10. '__' → logprob: -13.625274658203125

Token 323: 'izza' (ID: 16333)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05783890560269356
    2. 'izza' → logprob: -2.9328389167785645
    3. 'ro' → logprob: -7.4328389167785645
    4. 'e' → logprob: -7.6828389167785645
    5. 'rice' → logprob: -7.9328389167785645
    6. 'izz' → logprob: -8.182838439941406
    7. 'ratio' → logprob: -8.182838439941406
    8. 'r' → logprob: -8.807838439941406
    9. 'ar' → logprob: -9.182838439941406
    10. 'iz' → logprob: -9.432838439941406

Token 324: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.00038920470979064703
    2. '.' → logprob: -8.250389099121094
    3. ' .' → logprob: -9.000389099121094
    4. 'cal' → logprob: -13.250389099121094
    5. '.che' → logprob: -14.375389099121094
    6. '	cal' → logprob: -14.500389099121094
    7. '.car' → logprob: -14.875389099121094
    8. '.Cal' → logprob: -15.125389099121094
    9. '..' → logprob: -15.750389099121094
    10. '.total' → logprob: -16.000389099121094

Token 325: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -3.8889261304575484e-06
    2. 'o' → logprob: -13.750003814697266
    3. 'ory' → logprob: -13.750003814697266
    4. 'or' → logprob: -14.500003814697266
    5. 'ories' → logprob: -14.750003814697266
    6. 'erie' → logprob: -15.500003814697266
    7. 'oire' → logprob: -16.000003814697266
    8. '
' → logprob: -16.125003814697266
    9. ' or' → logprob: -16.875003814697266
    10. '```' → logprob: -17.250003814697266

Token 326: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.3856492842023727e-06
    2. 'per' → logprob: -14.375000953674316
    3. 's' → logprob: -14.500000953674316
    4. '_' → logprob: -16.625001907348633
    5. 'r' → logprob: -17.375001907348633
    6. '_to' → logprob: -17.750001907348633
    7. '_PER' → logprob: -18.000001907348633
    8. ' per' → logprob: -18.125001907348633
    9. 'Per' → logprob: -18.500001907348633
    10. '_p' → logprob: -19.000001907348633

Token 327: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0008746589301154017
    2. '_' → logprob: -7.1258745193481445
    3. 'd' → logprob: -9.750874519348145
    4. '_per' → logprob: -12.250874519348145
    5. ' _' → logprob: -12.750874519348145
    6. ' ' → logprob: -13.125874519348145
    7. '_
' → logprob: -14.000874519348145
    8. ')' → logprob: -15.250874519348145
    9. '_p' → logprob: -15.375874519348145
    10. 'per' → logprob: -16.62587547302246

Token 328: 'ollar' (ID: 25481)
  Prédit: 'ollar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ollar' → logprob: -0.00035870319698005915
    2. 'oller' → logprob: -8.125358581542969
    3. 'oll' → logprob: -11.000358581542969
    4. 'ol' → logprob: -11.250358581542969
    5. 'o' → logprob: -11.375358581542969
    6. 'ollars' → logprob: -11.875358581542969
    7. 'olla' → logprob: -12.375358581542969
    8. 'olar' → logprob: -12.750358581542969
    9. ' dollar' → logprob: -14.125358581542969
    10. '```' → logprob: -14.125358581542969

Token 329: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002830673009157181
    2. '
' → logprob: -6.502830505371094
    3. '       ' → logprob: -7.002830505371094
    4. '

' → logprob: -8.502830505371094
    5. '        
' → logprob: -9.377830505371094
    6. '' → logprob: -10.377830505371094
    7. '    
' → logprob: -11.002830505371094
    8. ' 
' → logprob: -11.002830505371094
    9. '\n' → logprob: -11.127830505371094
    10. '<|end|>' → logprob: -11.627830505371094

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27265775203704834
    2. '
' → logprob: -1.5226577520370483
    3. ' for' → logprob: -4.397657871246338
    4. '        
' → logprob: -5.647657871246338
    5. 'for' → logprob: -6.147657871246338
    6. '   ' → logprob: -6.397657871246338
    7. '```' → logprob: -7.647657871246338
    8. '    
' → logprob: -8.89765739440918
    9. '
' → logprob: -9.64765739440918
    10. '<|end|>' → logprob: -9.89765739440918

Token 331: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13297992944717407
    2. '       ' → logprob: -2.2579798698425293
    3. ' for' → logprob: -4.007979869842529
    4. 'n' (adapté à ' n') → logprob: -6.382979869842529
    5. ' n' → logprob: -10.382980346679688
    6. '
' → logprob: -10.632980346679688
    7. '        
' → logprob: -11.632980346679688
    8. '   ' → logprob: -11.632980346679688
    9. ' ' → logprob: -11.882980346679688
    10. 'all' → logprob: -12.257980346679688

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004087185952812433
    2. '=' → logprob: -5.504086971282959
    3. ' ' → logprob: -12.379087448120117
    4. '=len' → logprob: -13.129087448120117
    5. '_t' → logprob: -14.379087448120117
    6. 't' → logprob: -14.754087448120117
    7. '   ' → logprob: -14.879087448120117
    8. 'um' → logprob: -15.004087448120117
    9. '_' → logprob: -15.129087448120117
    10. '=int' → logprob: -15.504087448120117

Token 333: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06196802109479904
    2. 'len' → logprob: -2.8119680881500244
    3. '(len' → logprob: -15.561967849731445
    4. '=len' → logprob: -16.061967849731445
    5. '[len' → logprob: -17.061967849731445
    6. '	len' → logprob: -17.436967849731445
    7. ',len' → logprob: -19.936967849731445
    8. '
' → logprob: -20.186967849731445
    9. ' ' → logprob: -20.436967849731445
    10. '<len' → logprob: -20.936967849731445

Token 334: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.4121114822482923e-06
    2. 'self' → logprob: -13.000003814697266
    3. '(' → logprob: -13.875003814697266
    4. ' self' → logprob: -15.875003814697266
    5. '(this' → logprob: -18.250003814697266
    6. ' (' → logprob: -18.750003814697266
    7. '(
' → logprob: -20.250003814697266
    8. '=self' → logprob: -20.500003814697266
    9. '	self' → logprob: -21.375003814697266
    10. '[self' → logprob: -21.500003814697266

Token 335: '.t' (ID: 1370)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33558449149131775
    2. '.t' → logprob: -1.4605845212936401
    3. '(self' → logprob: -3.2105844020843506
    4. ' self' → logprob: -4.96058464050293
    5. '.self' → logprob: -5.46058464050293
    6. '.s' → logprob: -7.33558464050293
    7. 't' → logprob: -8.46058464050293
    8. ')' → logprob: -8.58558464050293
    9. 's' → logprob: -9.21058464050293
    10. ').' → logprob: -9.58558464050293

Token 336: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -0.20977181196212769
    2. 'opping' → logprob: -1.7097718715667725
    3. 'self' → logprob: -4.959771633148193
    4. 'op' → logprob: -7.084771633148193
    5. 'opp' → logprob: -8.584772109985352
    6. '(self' → logprob: -10.209772109985352
    7. 'oppins' → logprob: -10.709772109985352
    8. 'o' → logprob: -10.959772109985352
    9. 'options' → logprob: -11.084772109985352
    10. 's' → logprob: -11.209772109985352

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07008282095193863
    2. ')
' → logprob: -2.695082902908325
    3. '       ' → logprob: -9.445082664489746
    4. ' )' → logprob: -10.070082664489746
    5. ' )
' → logprob: -11.195082664489746
    6. ')
' → logprob: -11.945082664489746
    7. ')

' → logprob: -12.820082664489746
    8. '   ' → logprob: -14.195082664489746
    9. ')n' → logprob: -15.195082664489746
    10. '
' → logprob: -15.695082664489746

Token 338: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03757453337311745
    2. '       ' → logprob: -3.537574529647827
    3. ' for' → logprob: -5.037574768066406
    4. '        
' → logprob: -7.537574768066406
    5. 'for' → logprob: -8.287574768066406
    6. '<|end|>' → logprob: -9.037574768066406
    7. ' 
' → logprob: -9.287574768066406
    8. '    
' → logprob: -9.412574768066406
    9. '   ' → logprob: -9.412574768066406
    10. '  
' → logprob: -9.662574768066406

Token 339: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4022880792617798
    2. 'for' → logprob: -1.1522880792617798
    3. '
' → logprob: -4.40228796005249
    4. '       ' → logprob: -5.90228796005249
    5. '        
' → logprob: -8.652288436889648
    6. ' 
' → logprob: -9.152288436889648
    7. '    
' → logprob: -11.152288436889648
    8. '   ' → logprob: -11.777288436889648
    9. '  
' → logprob: -12.402288436889648
    10. '	for' → logprob: -13.152288436889648

Token 340: ' Enumer' (ID: 56157)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04869523644447327
    2. ' for' → logprob: -3.0486953258514404
    3. '       ' → logprob: -9.17369556427002
    4. '   ' → logprob: -13.29869556427002
    5. 'from' → logprob: -13.29869556427002
    6. '
' → logprob: -14.67369556427002
    7. '```' → logprob: -16.298694610595703
    8. ' ' → logprob: -16.673694610595703
    9. '        
' → logprob: -16.923694610595703
    10. ' from' → logprob: -17.923694610595703

Token 341: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00023131117632146925
    2. 'rate' → logprob: -8.500231742858887
    3. 'range' → logprob: -10.750231742858887
    4. 'ating' → logprob: -12.750231742858887
    5. 'er' → logprob: -13.500231742858887
    6. 'r' → logprob: -14.000231742858887
    7. 'ated' → logprob: -14.875231742858887
    8. 'ates' → logprob: -14.875231742858887
    9. 'brate' → logprob: -15.750231742858887
    10. '```' → logprob: -16.62523078918457

Token 342: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4267795085906982
    2. ' range' → logprob: -1.5517795085906982
    3. ' r' → logprob: -1.8017795085906982
    4. 'range' → logprob: -1.8017795085906982
    5. 'r' → logprob: -2.5517795085906982
    6. 'for' → logprob: -2.9267795085906982
    7. ' all' → logprob: -3.5517795085906982
    8. '   ' → logprob: -3.9267795085906982
    9. '(' → logprob: -5.176779747009277
    10. ' subset' → logprob: -5.176779747009277

Token 343: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.2139959335327148
    2. ' subset' → logprob: -1.5889959335327148
    3. 'i' → logprob: -2.338995933532715
    4. 'sizes' → logprob: -2.463995933532715
    5. ' subsets' → logprob: -2.463995933532715
    6. ' sizes' → logprob: -2.838995933532715
    7. ' i' → logprob: -2.963995933532715
    8. 'k' → logprob: -3.713995933532715
    9. 'r' → logprob: -3.838995933532715
    10. ' k' → logprob: -4.088995933532715

Token 344: ' sizes' (ID: 16174)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.458980300929397e-05
    2. ' s' → logprob: -9.75008487701416
    3. 'sizes' → logprob: -11.37508487701416
    4. '       ' → logprob: -11.75008487701416
    5. ' sizes' → logprob: -12.62508487701416
    6. ' combinations' → logprob: -13.62508487701416
    7. '_sizes' → logprob: -14.12508487701416
    8. '_s' → logprob: -14.50008487701416
    9. '   ' → logprob: -14.75008487701416
    10. 'size' → logprob: -16.000083923339844

Token 345: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04071446880698204
    2. 'for' → logprob: -3.5407145023345947
    3. '       ' → logprob: -4.790714263916016
    4. ' in' → logprob: -7.040714263916016
    5. ' range' → logprob: -8.040714263916016
    6. '(range' → logprob: -8.040714263916016
    7. '   ' → logprob: -8.165714263916016
    8. ':' → logprob: -8.540714263916016
    9. 'range' → logprob: -8.540714263916016
    10. '(n' → logprob: -9.165714263916016

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4777722954750061
    2. '1' → logprob: -0.9777722954750061
    3. ' ' → logprob: -5.602772235870361
    4. '   ' → logprob: -14.10277271270752
    5. ' zero' → logprob: -17.102771759033203
    6. '```' → logprob: -17.227771759033203
    7. 'zero' → logprob: -17.915271759033203
    8. '`' → logprob: -18.102771759033203
    9. 'range' → logprob: -18.165271759033203
    10. 'n' → logprob: -18.352771759033203

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016046568751335144
    2. '1' → logprob: -4.141046524047852
    3. ' ' → logprob: -11.516046524047852
    4. 'n' → logprob: -13.016046524047852
    5. 'range' → logprob: -17.26604652404785
    6. 'zero' → logprob: -17.51604652404785
    7. ' n' → logprob: -17.64104652404785
    8. '   ' → logprob: -18.26604652404785
    9. '
' → logprob: -18.51604652404785
    10. '```' → logprob: -18.89104652404785

Token 348: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47417956590652466
    2. 'to' → logprob: -0.9741795659065247
    3. ',' → logprob: -10.5991792678833
    4. '
' → logprob: -10.8491792678833
    5. '   ' → logprob: -10.8491792678833
    6. ' through' → logprob: -10.9741792678833
    7. ' up' → logprob: -12.2241792678833
    8. 'n' → logprob: -12.5991792678833
    9. 'for' → logprob: -13.3491792678833
    10. 'through' → logprob: -13.3491792678833

Token 349: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692862749099731
    2. 'n' → logprob: -2.1269285678863525
    3. '_n' → logprob: -15.376928329467773
    4. '	n' → logprob: -15.626928329467773
    5. '
' → logprob: -16.376928329467773
    6. '$n' → logprob: -17.251928329467773
    7. '=n' → logprob: -17.501928329467773
    8. ',n' → logprob: -17.626928329467773
    9. ')n' → logprob: -18.126928329467773
    10. '(n' → logprob: -18.251928329467773

Token 350: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6681602597236633
    2. '       ' → logprob: -0.9181602597236633
    3. ' for' → logprob: -2.6681602001190186
    4. 'for' → logprob: -4.043160438537598
    5. '
' → logprob: -8.168160438537598
    6. '        
' → logprob: -8.418160438537598
    7. '\n' → logprob: -8.793160438537598
    8. ',' → logprob: -9.293160438537598
    9. ':' → logprob: -9.418160438537598
    10. ':
' → logprob: -9.668160438537598

Token 351: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7870270609855652
    2. '       ' → logprob: -1.16202712059021
    3. '
' → logprob: -1.53702712059021
    4. 'for' → logprob: -4.537026882171631
    5. '        
' → logprob: -6.037026882171631
    6. '   ' → logprob: -6.537026882171631
    7. ' 
' → logprob: -7.412026882171631
    8. '    
' → logprob: -7.537026882171631
    9. '\n' → logprob: -7.787026882171631
    10. '  
' → logprob: -8.037027359008789

Token 352: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2459234595298767
    2. 'for' (adapté à ' for') → logprob: -2.2459235191345215
    3. '       ' → logprob: -2.3709235191345215
    4. '
' → logprob: -3.9959235191345215
    5. '   ' → logprob: -8.620923042297363
    6. '        
' → logprob: -9.745923042297363
    7. '```' → logprob: -9.745923042297363
    8. '\n' → logprob: -10.495923042297363
    9. ' 
' → logprob: -10.620923042297363
    10. 'n' → logprob: -11.245923042297363

Token 353: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1291134357452393
    2. 'k' → logprob: -1.5041134357452393
    3. ' size' → logprob: -1.8791134357452393
    4. ' r' → logprob: -2.0041134357452393
    5. 'size' → logprob: -2.0041134357452393
    6. ' k' → logprob: -3.7541134357452393
    7. 'subset' → logprob: -5.37911319732666
    8. 'i' → logprob: -6.00411319732666
    9. ' subset' → logprob: -6.87911319732666
    10. ' i' → logprob: -7.50411319732666

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011060434393584728
    2. 'in' → logprob: -4.5110602378845215
    3. ' ' → logprob: -11.51106071472168
    4. '1' → logprob: -14.63606071472168
    5. 'k' → logprob: -14.88606071472168
    6. '	in' → logprob: -15.13606071472168
    7. ' i' → logprob: -15.26106071472168
    8. 'n' → logprob: -15.63606071472168
    9. 'import' → logprob: -15.63606071472168
    10. ',' → logprob: -16.01106071472168

Token 355: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692978978157043
    2. 'range' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.626930236816406
    4. '(range' → logprob: -15.501930236816406
    5. '   ' → logprob: -15.626930236816406
    6. '	range' → logprob: -16.376930236816406
    7. '0' → logprob: -17.001930236816406
    8. '  ' → logprob: -17.501930236816406
    9. '    ' → logprob: -18.251930236816406
    10. '_range' → logprob: -19.501930236816406

Token 356: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004088373854756355
    2. '(' → logprob: -5.504088401794434
    3. '(
' → logprob: -11.754088401794434
    4. '(k' → logprob: -14.254088401794434
    5. ' (' → logprob: -14.379088401794434
    6. ' n' → logprob: -14.504088401794434
    7. 'n' → logprob: -15.129088401794434
    8. '0' → logprob: -16.629087448120117
    9. ' ' → logprob: -17.129087448120117
    10. '1' → logprob: -17.129087448120117

Token 357: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25192928314208984
    2. '+' → logprob: -1.5019292831420898
    3. '+k' → logprob: -15.87692928314209
    4. '   ' → logprob: -17.001930236816406
    5. ' +
' → logprob: -18.126930236816406
    6. ' ' → logprob: -18.751930236816406
    7. '+n' → logprob: -18.751930236816406
    8. '):' → logprob: -19.126930236816406
    9. ')' → logprob: -19.376930236816406
    10. '+
' → logprob: -19.626930236816406

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.133614540100098
    4. '  ' → logprob: -16.633615493774414
    5. ')' → logprob: -17.196115493774414
    6. '```' → logprob: -17.258615493774414
    7. '
' → logprob: -17.758615493774414
    8. '0' → logprob: -18.196115493774414
    9. '

' → logprob: -19.071115493774414
    10. '2' → logprob: -19.133615493774414

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.00006675720215
    4. ')' → logprob: -17.87506675720215
    5. '
' → logprob: -18.00006675720215
    6. '```' → logprob: -18.00006675720215
    7. '  ' → logprob: -18.12506675720215
    8. '0' → logprob: -18.62506675720215
    9. '

' → logprob: -19.62506675720215
    10. 'k' → logprob: -19.81256675720215

Token 360: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0571935698390007
    2. '):
' → logprob: -3.0571935176849365
    3. ' ):' → logprob: -4.807193756103516
    4. ' ):
' → logprob: -8.057193756103516
    5. ':' → logprob: -10.182193756103516
    6. ')' → logprob: -10.307193756103516
    7. '):
' → logprob: -11.932193756103516
    8. ' )' → logprob: -13.432193756103516
    9. '   ' → logprob: -14.182193756103516
    10. '):

' → logprob: -14.432193756103516

Token 361: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7514144778251648
    2. '       ' → logprob: -0.7514144778251648
    3. '           ' → logprob: -3.2514145374298096
    4. '<|end|>' → logprob: -5.0014142990112305
    5. ':
' → logprob: -5.3764142990112305
    6. ' for' → logprob: -6.0014142990112305
    7. '   ' → logprob: -6.7514142990112305
    8. '        ' → logprob: -6.8764142990112305
    9. ',' → logprob: -7.6264142990112305
    10. '        
' → logprob: -8.12641429901123

Token 362: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.290737509727478
    2. '           ' → logprob: -1.665737509727478
    3. 'for' → logprob: -3.1657376289367676
    4. '       ' → logprob: -3.9157376289367676
    5. '   ' → logprob: -7.790737628936768
    6. '               ' → logprob: -8.79073715209961
    7. '        ' → logprob: -8.91573715209961
    8. '
' → logprob: -9.29073715209961
    9. '	       ' → logprob: -9.91573715209961
    10. '	for' → logprob: -10.16573715209961

Token 363: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039453309029340744
    2. ' for' → logprob: -3.4144532680511475
    3. '           ' → logprob: -5.164453506469727
    4. '       ' → logprob: -10.164453506469727
    5. '   ' → logprob: -10.414453506469727
    6. ' ' → logprob: -12.789453506469727
    7. '	for' → logprob: -13.539453506469727
    8. '               ' → logprob: -14.414453506469727
    9. '  ' → logprob: -15.289453506469727
    10. '```' → logprob: -15.539453506469727

Token 364: ' further' (ID: 6544)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.20240715146064758
    2. 'combo' → logprob: -2.452407121658325
    3. ' subset' → logprob: -2.827407121658325
    4. 'comb' → logprob: -3.952407121658325
    5. ' combo' → logprob: -4.452407360076904
    6. 't' → logprob: -5.452407360076904
    7. ' comb' → logprob: -6.827407360076904
    8. ' toppings' → logprob: -6.952407360076904
    9. ' topping' → logprob: -8.077406883239746
    10. ' combination' → logprob: -9.202406883239746

Token 365: ' sophistication' (ID: 112044)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.4817146360874176
    2. 't' → logprob: -1.2317146062850952
    3. 'combo' → logprob: -3.1067147254943848
    4. ' subset' → logprob: -4.231714725494385
    5. 'comb' → logprob: -4.356714725494385
    6. ' toppings' → logprob: -4.856714725494385
    7. 'tops' → logprob: -5.606714725494385
    8. 'ts' → logprob: -5.856714725494385
    9. ' combo' → logprob: -6.856714725494385
    10. ' topping' → logprob: -6.981714725494385

Token 366: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30800026655197144
    2. ',' → logprob: -1.5580003261566162
    3. ' for' → logprob: -4.058000087738037
    4. ':' → logprob: -4.183000087738037
    5. '               ' → logprob: -4.808000087738037
    6. ' in' → logprob: -5.308000087738037
    7. ':
' → logprob: -5.683000087738037
    8. '       ' → logprob: -6.058000087738037
    9. 'for' → logprob: -6.933000087738037
    10. ' ,' → logprob: -7.558000087738037

Token 367: ' use' (ID: 1199)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10083571821451187
    2. 'for' → logprob: -2.3508358001708984
    3. '           ' → logprob: -7.725835800170898
    4. '               ' → logprob: -8.850835800170898
    5. ' ' → logprob: -11.225835800170898
    6. '            ' → logprob: -11.600835800170898
    7. '   ' → logprob: -11.725835800170898
    8. '	for' → logprob: -12.350835800170898
    9. '       ' → logprob: -13.475835800170898
    10. '
' → logprob: -13.475835800170898

Token 368: ' a' (ID: 261)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.10022467374801636
    2. ' combinations' → logprob: -2.350224733352661
    3. '	com' → logprob: -11.475224494934082
    4. 'comb' → logprob: -12.600224494934082
    5. '(com' → logprob: -12.975224494934082
    6. ' com' → logprob: -14.475224494934082
    7. '```' → logprob: -14.975224494934082
    8. '_com' → logprob: -15.350224494934082
    9. '   ' → logprob: -15.600224494934082
    10. '           ' → logprob: -15.600224494934082

Token 369: ' generator' (ID: 23989)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.01637556031346321
    2. ' combinations' → logprob: -4.141375541687012
    3. 'range' → logprob: -8.891375541687012
    4. 'for' → logprob: -9.391375541687012
    5. 'comb' → logprob: -10.266375541687012
    6. ' for' → logprob: -10.391375541687012
    7. '           ' → logprob: -11.766375541687012
    8. '       ' → logprob: -12.141375541687012
    9. ' range' → logprob: -12.141375541687012
    10. '   ' → logprob: -12.391375541687012

Token 370: ' expression' (ID: 12973)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3453822731971741
    2. '           ' → logprob: -1.5953822135925293
    3. 'for' → logprob: -3.0953822135925293
    4. 'com' → logprob: -4.470382213592529
    5. '(com' → logprob: -4.595382213592529
    6. ' in' → logprob: -5.095382213592529
    7. '               ' → logprob: -5.345382213592529
    8. ',' → logprob: -5.970382213592529
    9. ' comb' → logprob: -6.345382213592529
    10. ' of' → logprob: -6.470382213592529

Token 371: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05156277120113373
    2. ' for' → logprob: -3.176562786102295
    3. 'for' → logprob: -5.051562786102295
    4. '
' → logprob: -7.051562786102295
    5. '            
' → logprob: -7.926562786102295
    6. ' in' → logprob: -8.301562309265137
    7. ',' → logprob: -8.676562309265137
    8. '               ' → logprob: -9.051562309265137
    9. 'com' → logprob: -9.301562309265137
    10. '(com' → logprob: -9.551562309265137

Token 372: ' laz' (ID: 46705)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.02142277918756008
    2. ' combinations' → logprob: -4.146422863006592
    3. '(com' → logprob: -5.396422863006592
    4. 'generate' → logprob: -8.521422386169434
    5. 'combine' → logprob: -8.521422386169434
    6. 'comb' → logprob: -8.646422386169434
    7. ' generate' → logprob: -9.771422386169434
    8. '_com' → logprob: -10.271422386169434
    9. '           ' → logprob: -10.646422386169434
    10. '       ' → logprob: -10.646422386169434

Token 373: 'ily' (ID: 1810)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.4796406924724579
    2. 'ate' → logprob: -1.4796407222747803
    3. 'st' → logprob: -2.9796407222747803
    4. 'p' → logprob: -4.104640483856201
    5. 'late' → logprob: -4.479640483856201
    6. 't' → logprob: -4.604640483856201
    7. 'elate' → logprob: -4.854640483856201
    8. ' combinations' → logprob: -4.979640483856201
    9. 'mate' → logprob: -5.354640483856201
    10. 'mp' → logprob: -5.354640483856201

Token 374: ' evaluate' (ID: 21646)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.6355730295181274
    2. 'com' → logprob: -0.7605730295181274
    3. ' combinations' → logprob: -6.885572910308838
    4. 'for' → logprob: -7.385572910308838
    5. 'comb' → logprob: -7.885572910308838
    6. '(' → logprob: -8.260573387145996
    7. 'generate' → logprob: -8.510573387145996
    8. 'combine' → logprob: -8.635573387145996
    9. '(
' → logprob: -9.510573387145996
    10. '(c' → logprob: -9.885573387145996

Token 375: ' pizzas' (ID: 113504)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1546965092420578
    2. ' combinations' → logprob: -2.779696464538574
    3. '(com' → logprob: -2.904696464538574
    4. '           ' → logprob: -3.904696464538574
    5. 'for' → logprob: -6.404696464538574
    6. ' for' → logprob: -6.654696464538574
    7. 'comb' → logprob: -7.154696464538574
    8. ' subsets' → logprob: -7.654696464538574
    9. ' comb' → logprob: -7.904696464538574
    10. ' (' → logprob: -8.154696464538574

Token 376: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071493834257125854
    2. ' for' → logprob: -5.8821492195129395
    3. ':' → logprob: -6.2571492195129395
    4. ',' → logprob: -7.3821492195129395
    5. '            
' → logprob: -7.6321492195129395
    6. ' in' → logprob: -7.8821492195129395
    7. '
' → logprob: -8.382149696350098
    8. ':
' → logprob: -8.757149696350098
    9. 'for' → logprob: -8.882149696350098
    10. '               ' → logprob: -9.257149696350098

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016711341449990869
    2. ' for' → logprob: -6.626671314239502
    3. 'for' → logprob: -9.126670837402344
    4. '            
' → logprob: -9.626670837402344
    5. ',' → logprob: -9.751670837402344
    6. ':' → logprob: -10.251670837402344
    7. '       ' → logprob: -11.001670837402344
    8. '
' → logprob: -11.126670837402344
    9. '               ' → logprob: -11.751670837402344
    10. '          ' → logprob: -12.001670837402344

Token 378: ' candidate' (ID: 17098)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5645544528961182
    2. ' for' → logprob: -1.1895544528961182
    3. '           ' → logprob: -2.064554452896118
    4. '               ' → logprob: -9.314554214477539
    5. '       ' → logprob: -10.814554214477539
    6. '   ' → logprob: -10.814554214477539
    7. '	for' → logprob: -11.939554214477539
    8. '
' → logprob: -12.564554214477539
    9. ' ' → logprob: -12.814554214477539
    10. '            
' → logprob: -13.064554214477539

Token 379: '_p' (ID: 1359)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05653182044625282
    2. '_t' → logprob: -4.30653190612793
    3. '_sub' → logprob: -4.30653190612793
    4. '_sets' → logprob: -4.68153190612793
    5. '_p' → logprob: -5.05653190612793
    6. '_com' → logprob: -5.43153190612793
    7. '_s' → logprob: -5.55653190612793
    8. '_set' → logprob: -6.18153190612793
    9. '_subset' → logprob: -6.43153190612793
    10. '_list' → logprob: -9.05653190612793

Token 380: 'izz' (ID: 10058)
  Prédit: 'izz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izz' → logprob: -0.391448974609375
    2. 'izza' → logprob: -1.141448974609375
    3. '=' → logprob: -6.766448974609375
    4. ' =' → logprob: -6.766448974609375
    5. 'izzes' → logprob: -7.891448974609375
    6. '   ' → logprob: -8.391448974609375
    7. ' for' → logprob: -8.516448974609375
    8. 'iz' → logprob: -8.641448974609375
    9. 'izas' → logprob: -8.766448974609375
    10. 'for' → logprob: -9.016448974609375

Token 381: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.053000308573246
    2. 'zas' → logprob: -3.6780002117156982
    3. 'za' → logprob: -4.053000450134277
    4. 'a' → logprob: -4.928000450134277
    5. '   ' → logprob: -7.678000450134277
    6. 'zz' → logprob: -8.428000450134277
    7. 'tas' → logprob: -9.303000450134277
    8. '       ' → logprob: -9.553000450134277
    9. 'az' → logprob: -9.678000450134277
    10. '
' → logprob: -9.990500450134277

Token 382: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486091673374176
    2. '=' → logprob: -3.0486092567443848
    3. ' ' → logprob: -12.298608779907227
    4. 'for' → logprob: -12.673608779907227
    5. ' =
' → logprob: -13.048608779907227
    6. '       ' → logprob: -13.048608779907227
    7. '    ' → logprob: -13.173608779907227
    8. '   ' → logprob: -13.173608779907227
    9. ' in' → logprob: -13.423608779907227
    10. ':' → logprob: -13.548608779907227

Token 383: ' (' (ID: 350)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.12073859572410583
    2. '(P' → logprob: -2.7457385063171387
    3. ' (' → logprob: -3.7457385063171387
    4. '(
' → logprob: -3.9957385063171387
    5. 'com' → logprob: -5.995738506317139
    6. '(' → logprob: -6.495738506317139
    7. '[' → logprob: -6.745738506317139
    8. '([' → logprob: -8.245738983154297
    9. '(map' → logprob: -8.495738983154297
    10. '   ' → logprob: -8.495738983154297

Token 384: 'Pizza' (ID: 91351)
  Prédit: 'Pizza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: -0.007645679172128439
    2. '           ' → logprob: -5.382645606994629
    3. ' Pizza' → logprob: -6.382645606994629
    4. '   ' → logprob: -8.132645606994629
    5. '               ' → logprob: -8.257645606994629
    6. '[' → logprob: -8.382645606994629
    7. 'P' → logprob: -8.757645606994629
    8. '[P' → logprob: -9.257645606994629
    9. 'self' → logprob: -9.507645606994629
    10. '                   ' → logprob: -9.632645606994629

Token 385: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005812060087919235
    2. '(' → logprob: -5.880812168121338
    3. '(
' → logprob: -5.880812168121338
    4. 'self' → logprob: -9.50581169128418
    5. '               ' → logprob: -9.63081169128418
    6. '           ' → logprob: -10.75581169128418
    7. ' (' → logprob: -11.63081169128418
    8. ' self' → logprob: -11.75581169128418
    9. ')' → logprob: -11.88081169128418
    10. '(

' → logprob: -12.00581169128418

Token 386: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0016080588102340698
    2. 'self' → logprob: -6.626607894897461
    3. 'd' → logprob: -8.501607894897461
    4. '.' → logprob: -10.626607894897461
    5. ',' → logprob: -11.126607894897461
    6. '.t' → logprob: -12.001607894897461
    7. '   ' → logprob: -12.251607894897461
    8. ',d' → logprob: -12.376607894897461
    9. '.s' → logprob: -12.501607894897461
    10. ' .' → logprob: -12.626607894897461

Token 387: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.36742037534713745
    2. 'oppings' → logprob: -1.4924204349517822
    3. 'self' → logprob: -3.3674204349517822
    4. '   ' → logprob: -5.117420196533203
    5. 'ugh' → logprob: -5.117420196533203
    6. 'gh' → logprob: -5.367420196533203
    7. 'o' → logprob: -5.742420196533203
    8. 'ought' → logprob: -5.992420196533203
    9. '       ' → logprob: -6.617420196533203
    10. '    ' → logprob: -6.679920196533203

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009399273432791233
    2. ',list' → logprob: -4.8843994140625
    3. ' ,' → logprob: -6.7593994140625
    4. ',[' → logprob: -8.6343994140625
    5. ',
' → logprob: -8.8843994140625
    6. ',t' → logprob: -9.0093994140625
    7. ' ,[' → logprob: -10.1343994140625
    8. 'list' → logprob: -10.2593994140625
    9. '[list' → logprob: -10.6343994140625
    10. ' list' → logprob: -10.6343994140625

Token 389: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0867430567741394
    2. ' list' → logprob: -2.586743116378784
    3. '[list' → logprob: -5.336742877960205
    4. '           ' → logprob: -7.086742877960205
    5. 'combo' → logprob: -7.086742877960205
    6. 'comb' → logprob: -8.211743354797363
    7. '   ' → logprob: -8.586743354797363
    8. '       ' → logprob: -8.711743354797363
    9. 'subset' → logprob: -9.211743354797363
    10. ')' → logprob: -9.461743354797363

Token 390: '(combo' (ID: 190470)
  Prédit: '(combo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(combo' → logprob: -0.27522751688957214
    2. '(com' → logprob: -1.7752275466918945
    3. 'combo' → logprob: -2.9002275466918945
    4. 'comb' → logprob: -4.5252275466918945
    5. '(c' → logprob: -5.5252275466918945
    6. 'subset' → logprob: -7.0252275466918945
    7. '(sub' → logprob: -8.150227546691895
    8. ')' → logprob: -10.150227546691895
    9. '(' → logprob: -10.650227546691895
    10. 'c' → logprob: -10.775227546691895

Token 391: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010103036183863878
    2. '))
' → logprob: -7.001010417938232
    3. '   ' → logprob: -10.001009941101074
    4. ')' → logprob: -10.876009941101074
    5. '(com' → logprob: -12.126009941101074
    6. ' ))' → logprob: -12.251009941101074
    7. '    ' → logprob: -12.376009941101074
    8. '       ' → logprob: -12.501009941101074
    9. ' ' → logprob: -13.126009941101074
    10. '     ' → logprob: -13.126009941101074

Token 392: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34682539105415344
    2. 'for' → logprob: -1.346825361251831
    3. '           ' → logprob: -3.596825361251831
    4. '       ' → logprob: -6.47182559967041
    5. '               ' → logprob: -6.97182559967041
    6. ')' → logprob: -7.09682559967041
    7. '            ' → logprob: -7.72182559967041
    8. '          ' → logprob: -7.97182559967041
    9. '        ' → logprob: -8.22182559967041
    10. '         ' → logprob: -8.47182559967041

Token 393: ' combo' (ID: 32014)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.35189568996429443
    2. ' combinations' → logprob: -1.8518956899642944
    3. 'combo' → logprob: -2.101895809173584
    4. ' combo' → logprob: -4.351895809173584
    5. '	com' → logprob: -6.351895809173584
    6. 'comb' → logprob: -6.726895809173584
    7. ' ' → logprob: -7.351895809173584
    8. ' combos' → logprob: -7.851895809173584
    9. '   ' → logprob: -8.351895332336426
    10. '`' → logprob: -9.351895332336426

Token 394: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10029087960720062
    2. 'in' → logprob: -2.3502907752990723
    3. ')' → logprob: -9.60029125213623
    4. 'com' → logprob: -12.47529125213623
    5. ' ' → logprob: -13.35029125213623
    6. '	in' → logprob: -13.35029125213623
    7. '=' → logprob: -13.47529125213623
    8. '=com' → logprob: -13.97529125213623
    9. 's' → logprob: -14.10029125213623
    10. '   ' → logprob: -14.22529125213623

Token 395: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0008188001229427755
    2. ' combinations' → logprob: -7.125818729400635
    3. '(com' → logprob: -11.750819206237793
    4. '	com' → logprob: -12.500819206237793
    5. '   ' → logprob: -13.250819206237793
    6. '       ' → logprob: -15.250819206237793
    7. '           ' → logprob: -15.500819206237793
    8. 'comb' → logprob: -15.750819206237793
    9. ' com' → logprob: -16.250818252563477
    10. ')' → logprob: -16.250818252563477

Token 396: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000157293034135364
    2. '(' → logprob: -8.875157356262207
    3. ')' → logprob: -11.750157356262207
    4. '(
' → logprob: -12.750157356262207
    5. ' (' → logprob: -12.875157356262207
    6. ')(' → logprob: -13.000157356262207
    7. '           ' → logprob: -14.000157356262207
    8. '       ' → logprob: -14.750157356262207
    9. 'self' → logprob: -16.00015640258789
    10. '[self' → logprob: -16.12515640258789

Token 397: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00018804390856530517
    2. ' .' → logprob: -8.750187873840332
    3. '.' → logprob: -10.750187873840332
    4. ').' → logprob: -12.750187873840332
    5. '(t' → logprob: -14.000187873840332
    6. ' ' → logprob: -14.250187873840332
    7. '.T' → logprob: -14.875187873840332
    8. ')' → logprob: -15.000187873840332
    9. '.s' → logprob: -15.250187873840332
    10. 't' → logprob: -15.250187873840332

Token 398: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -0.0002764710516203195
    2. 'op' → logprob: -8.625276565551758
    3. 'opp' → logprob: -10.625276565551758
    4. 'h' → logprob: -10.625276565551758
    5. 'opping' → logprob: -11.000276565551758
    6. 'self' → logprob: -11.625276565551758
    7. '.t' → logprob: -12.375276565551758
    8. '.' → logprob: -12.750276565551758
    9. '.op' → logprob: -13.250276565551758
    10. '   ' → logprob: -13.875276565551758

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027179842814803123
    2. ',k' → logprob: -3.9021799564361572
    3. ',n' → logprob: -5.152179718017578
    4. '(n' → logprob: -7.777179718017578
    5. ' ,' → logprob: -7.902179718017578
    6. '(k' → logprob: -10.652179718017578
    7. 'n' → logprob: -12.277179718017578
    8. 'k' → logprob: -12.277179718017578
    9. '[n' → logprob: -13.152179718017578
    10. '[k' → logprob: -13.902179718017578

Token 400: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889033854007721
    2. ' k' → logprob: -2.578890323638916
    3. '	k' → logprob: -15.328890800476074
    4. '{k' → logprob: -15.328890800476074
    5. '   ' → logprob: -16.953889846801758
    6. ' ' → logprob: -17.453889846801758
    7. ')' → logprob: -17.578889846801758
    8. '    ' → logprob: -17.703889846801758
    9. ',k' → logprob: -18.203889846801758
    10. '[k' → logprob: -18.203889846801758

Token 401: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7008067965507507
    2. ')' → logprob: -1.0758068561553955
    3. '))
' → logprob: -1.8258068561553955
    4. ')
' → logprob: -7.075806617736816
    5. '           ' → logprob: -8.075806617736816
    6. '       ' → logprob: -8.325806617736816
    7. '))

' → logprob: -8.575806617736816
    8. '))
' → logprob: -9.950806617736816
    9. '               ' → logprob: -11.200806617736816
    10. '):' → logprob: -11.575806617736816

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017569487914443016
    2. ' for' → logprob: -4.142569541931152
    3. '       ' → logprob: -7.017569541931152
    4. 'for' → logprob: -7.892569541931152
    5. '            
' → logprob: -9.142569541931152
    6. '   ' → logprob: -10.017569541931152
    7. ',' → logprob: -10.267569541931152
    8. '
' → logprob: -11.142569541931152
    9. '<|end|>' → logprob: -11.142569541931152
    10. '        
' → logprob: -11.517569541931152

Token 403: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5012917518615723
    2. 'for' (adapté à ' for') → logprob: -1.2512917518615723
    3. ' for' → logprob: -2.2512917518615723
    4. '       ' → logprob: -5.876291751861572
    5. '   ' → logprob: -10.251291275024414
    6. '            
' → logprob: -11.876291275024414
    7. ' ' → logprob: -13.001291275024414
    8. '               ' → logprob: -13.126291275024414
    9. '        
' → logprob: -14.751291275024414
    10. '	for' → logprob: -15.001291275024414

Token 404: ' pizza' (ID: 27941)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.5493122339248657
    2. 'pizza' → logprob: -0.9243122339248657
    3. ' candidate' → logprob: -4.174312114715576
    4. ' pizza' → logprob: -5.424312114715576
    5. 'p' → logprob: -6.049312114715576
    6. 'combo' → logprob: -6.174312114715576
    7. 'cand' → logprob: -6.924312114715576
    8. '           ' → logprob: -8.424312591552734
    9. '   ' → logprob: -8.924312591552734
    10. ' ' → logprob: -10.049312591552734

Token 405: '_candidate' (ID: 158186)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006843181326985359
    2. 'in' → logprob: -7.3756842613220215
    3. ' ' → logprob: -10.00068473815918
    4. '_in' → logprob: -12.37568473815918
    5. '_candidate' → logprob: -12.62568473815918
    6. ' ' → logprob: -13.12568473815918
    7. '	in' → logprob: -14.00068473815918
    8. 'candidate' → logprob: -14.25068473815918
    9. '  ' → logprob: -14.62568473815918
    10. 's' → logprob: -15.00068473815918

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011217609280720353
    2. 'in' → logprob: -6.876121997833252
    3. ' ' → logprob: -9.376121520996094
    4. ' ' → logprob: -13.751121520996094
    5. '  ' → logprob: -14.001121520996094
    6. 's' → logprob: -14.001121520996094
    7. ',' → logprob: -15.126121520996094
    8. '	in' → logprob: -15.376121520996094
    9. ')' → logprob: -15.626121520996094
    10. '<|end|>' → logprob: -16.001121520996094

Token 407: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.003178782993927598
    2. ' candidate' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.503178596496582
    4. '   ' → logprob: -15.378178596496582
    5. '(candidate' → logprob: -15.753178596496582
    6. '  ' → logprob: -16.7531795501709
    7. '_candidate' → logprob: -17.5031795501709
    8. 'cand' → logprob: -17.5031795501709
    9. 'customer' → logprob: -17.7531795501709
    10. 'andidate' → logprob: -17.8781795501709

Token 408: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.005077687092125416
    2. 's' → logprob: -5.380077838897705
    3. 'candidate' → logprob: -8.505077362060547
    4. 'p' → logprob: -9.130077362060547
    5. ' ' → logprob: -10.880077362060547
    6. '_s' → logprob: -11.005077362060547
    7. '   ' → logprob: -11.130077362060547
    8. '_' → logprob: -11.130077362060547
    9. '_candidate' → logprob: -11.880077362060547
    10. ')' → logprob: -11.880077362060547

Token 409: 'izz' (ID: 10058)
  Prédit: 'izz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izz' → logprob: -0.05629712715744972
    2. 'zz' → logprob: -4.306297302246094
    3. 'zas' → logprob: -4.306297302246094
    4. 'z' → logprob: -4.431297302246094
    5. 'candidate' → logprob: -5.556297302246094
    6. 'andas' → logprob: -6.056297302246094
    7. 'iz' → logprob: -6.056297302246094
    8. 'izas' → logprob: -6.431297302246094
    9. 'cand' → logprob: -6.806297302246094
    10. 'azas' → logprob: -6.931297302246094

Token 410: 'as' (ID: 288)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.015324958600103855
    2. 'ator' → logprob: -5.14032506942749
    3. 'as' → logprob: -5.39032506942749
    4. 'e' → logprob: -6.01532506942749
    5. 'ates' → logprob: -6.26532506942749
    6. 'ation' → logprob: -9.015324592590332
    7. 'ee' → logprob: -9.640324592590332
    8. 'es' → logprob: -9.765324592590332
    9. 'atee' → logprob: -10.515324592590332
    10. 'te' → logprob: -11.015324592590332

Token 411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03203786537051201
    2. ':
' → logprob: -3.6570379734039307
    3. '               ' → logprob: -5.282037734985352
    4. ',' → logprob: -8.032037734985352
    5. '           ' → logprob: -9.032037734985352
    6. '):
' → logprob: -9.782037734985352
    7. '<|end|>' → logprob: -10.032037734985352
    8. '<|end|>' → logprob: -10.907037734985352
    9. '):' → logprob: -11.157037734985352
    10. '       ' → logprob: -11.657037734985352

Token 412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004562943649943918
    2. '           ' → logprob: -8.250455856323242
    3. ' if' → logprob: -9.000455856323242
    4. '```' → logprob: -11.250455856323242
    5. '                
' → logprob: -11.500455856323242
    6. '<|end|>' → logprob: -11.625455856323242
    7. '       ' → logprob: -11.750455856323242
    8. ',' → logprob: -12.125455856323242
    9. '                   ' → logprob: -12.625455856323242
    10. '              ' → logprob: -12.750455856323242

Token 413: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22562193870544434
    2. 'ratio' → logprob: -2.6006219387054443
    3. ' ratio' → logprob: -2.8506219387054443
    4. 'candidate' → logprob: -3.8506219387054443
    5. '                   ' → logprob: -4.100622177124023
    6. ' if' → logprob: -4.725622177124023
    7. ' candidate' → logprob: -5.475622177124023
    8. 'cand' → logprob: -5.475622177124023
    9. ' current' → logprob: -5.725622177124023
    10. 'if' → logprob: -5.850622177124023

Token 414: ' Re' (ID: 907)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.6640622615814209
    2. 'candidate' → logprob: -1.039062261581421
    3. 'current' → logprob: -2.914062261581421
    4. 'cand' → logprob: -3.539062261581421
    5. '               ' → logprob: -4.0390625
    6. 'curr' → logprob: -4.5390625
    7. 'if' → logprob: -4.6640625
    8. '                   ' → logprob: -6.0390625
    9. ' ratio' → logprob: -6.1640625
    10. 'cp' → logprob: -6.4140625

Token 415: 'calculate' (ID: 58453)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08715330809354782
    2. '                   ' → logprob: -3.462153196334839
    3. 'turn' → logprob: -4.087153434753418
    4. 'cal' → logprob: -4.337153434753418
    5. '           ' → logprob: -5.087153434753418
    6. '                ' → logprob: -5.587153434753418
    7. 's' → logprob: -5.962153434753418
    8. '              ' → logprob: -6.337153434753418
    9. 'score' → logprob: -6.712153434753418
    10. 'calculate' → logprob: -6.962153434753418

Token 416: ' ratio' (ID: 18051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6244136691093445
    2. ' ratio' → logprob: -1.6244137287139893
    3. 'ratio' → logprob: -1.7494137287139893
    4. 'candidate' → logprob: -2.6244137287139893
    5. ' candidate' → logprob: -4.49941349029541
    6. '                   ' → logprob: -5.99941349029541
    7. 'cand' → logprob: -6.37441349029541
    8. 'current' → logprob: -6.49941349029541
    9. ' current' → logprob: -6.62441349029541
    10. ' calorie' → logprob: -7.37441349029541

Token 417: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023154958034865558
    2. ' =' → logprob: -9.375231742858887
    3. 'candidate' → logprob: -10.250231742858887
    4. ',' → logprob: -10.625231742858887
    5. ' ratio' → logprob: -10.875231742858887
    6. ':' → logprob: -11.375231742858887
    7. '                   ' → logprob: -11.375231742858887
    8. '                
' → logprob: -11.500231742858887
    9. 'ratio' → logprob: -11.500231742858887
    10. '=' → logprob: -12.125231742858887

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005165747134014964
    2. ' =' → logprob: -8.000516891479492
    3. ',' → logprob: -10.000516891479492
    4. ':' → logprob: -10.375516891479492
    5. '=' → logprob: -10.625516891479492
    6. '<|end|>' → logprob: -10.750516891479492
    7. 'token' → logprob: -11.625516891479492
    8. 'ratio' → logprob: -11.750516891479492
    9. '                
' → logprob: -12.000516891479492
    10. ' ratio' → logprob: -12.250516891479492

Token 419: ' ratio' (ID: 18051)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' (adapté à ' ratio') → logprob: -0.33165839314460754
    2. '               ' → logprob: -1.5816583633422852
    3. 'candidate' → logprob: -2.831658363342285
    4. 'current' → logprob: -4.456658363342285
    5. 'cand' → logprob: -5.956658363342285
    6. 'curr' → logprob: -6.581658363342285
    7. 'r' → logprob: -6.831658363342285
    8. ' ratio' → logprob: -7.831658363342285
    9. 'cur' → logprob: -8.706658363342285
    10. 'cal' → logprob: -8.956658363342285

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6335939168930054
    2. ' =' → logprob: -0.7585939168930054
    3. '_candidate' → logprob: -7.008594036102295
    4. '   ' → logprob: -10.383593559265137
    5. 'candidate' → logprob: -10.508593559265137
    6. '           ' → logprob: -11.508593559265137
    7. '               ' → logprob: -11.883593559265137
    8. '                   ' → logprob: -12.383593559265137
    9. '    ' → logprob: -13.008593559265137
    10. ',' → logprob: -13.633593559265137

Token 421: ' pizza' (ID: 27941)
  Prédit: 'pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pizza' → logprob: -0.6326313614845276
    2. ' pizza' → logprob: -0.7576313614845276
    3. 'p' → logprob: -11.507631301879883
    4. '                   ' → logprob: -11.632631301879883
    5. ' pizz' → logprob: -12.257631301879883
    6. '               ' → logprob: -12.882631301879883
    7. 'Pizza' → logprob: -14.007631301879883
    8. '   ' → logprob: -14.382631301879883
    9. '                       ' → logprob: -14.632631301879883
    10. ' ' → logprob: -14.632631301879883

Token 422: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -7.896309739408025e-07
    2. '_cal' → logprob: -15.125000953674316
    3. 'candidate' → logprob: -15.125000953674316
    4. 'Candidate' → logprob: -16.0
    5. '._' → logprob: -16.75
    6. '_c' → logprob: -17.375
    7. '_' → logprob: -18.0
    8. '_candidates' → logprob: -18.25
    9. '_component' → logprob: -19.125
    10. '   ' → logprob: -19.375

Token 423: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.0006740703247487545
    2. '.' → logprob: -7.375674247741699
    3. ' .' → logprob: -10.0006742477417
    4. '	cal' → logprob: -14.5006742477417
    5. '.che' → logprob: -14.5006742477417
    6. 'cal' → logprob: -15.5006742477417
    7. '.Cal' → logprob: -15.6256742477417
    8. '.car' → logprob: -15.7506742477417
    9. '.calculate' → logprob: -16.000673294067383
    10. '   ' → logprob: -16.250673294067383

Token 424: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -6.837811088189483e-05
    2. 'ory' → logprob: -10.375068664550781
    3. 'o' → logprob: -11.000068664550781
    4. 'or' → logprob: -11.625068664550781
    5. 'ories' → logprob: -12.750068664550781
    6. 'oride' → logprob: -14.000068664550781
    7. '   ' → logprob: -14.125068664550781
    8. 'oire' → logprob: -14.125068664550781
    9. 'ratio' → logprob: -14.125068664550781
    10. 'ore' → logprob: -14.250068664550781

Token 425: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.9361264946837764e-07
    2. 'per' → logprob: -16.25
    3. ' _' → logprob: -19.375
    4. ' per' → logprob: -20.0
    5. '_' → logprob: -20.25
    6. '_to' → logprob: -20.25
    7. '_PER' → logprob: -20.375
    8. '/' → logprob: -20.625
    9. '_p' → logprob: -20.625
    10. 's' → logprob: -21.25

Token 426: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.033841751515865326
    2. '_per' → logprob: -3.408841848373413
    3. '_' → logprob: -8.783842086791992
    4. '_p' → logprob: -10.908842086791992
    5. '/d' → logprob: -12.158842086791992
    6. 'per' → logprob: -12.158842086791992
    7. ' _' → logprob: -12.533842086791992
    8. ' ' → logprob: -12.658842086791992
    9. 'd' → logprob: -13.033842086791992
    10. '/' → logprob: -13.283842086791992

Token 427: 'ollar' (ID: 25481)
  Prédit: 'ollar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ollar' → logprob: -0.00013131031300872564
    2. 'oller' → logprob: -9.375131607055664
    3. 'ol' → logprob: -11.375131607055664
    4. 'olar' → logprob: -11.500131607055664
    5. 'oll' → logprob: -11.500131607055664
    6. 'o' → logprob: -12.250131607055664
    7. 'ollars' → logprob: -12.750131607055664
    8. '_' → logprob: -13.625131607055664
    9. 'olla' → logprob: -14.125131607055664
    10. '```' → logprob: -14.375131607055664

Token 428: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0059688501060009
    2. '()
' → logprob: -5.130969047546387
    3. '())' → logprob: -10.755969047546387
    4. '()
' → logprob: -12.255969047546387
    5. '()

' → logprob: -12.380969047546387
    6. ')' → logprob: -12.755969047546387
    7. '()<' → logprob: -13.130969047546387
    8. '()>' → logprob: -14.005969047546387
    9. '():
' → logprob: -14.255969047546387
    10. '(' → logprob: -14.255969047546387

Token 429: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007106438861228526
    2. '
' → logprob: -8.000710487365723
    3. '                
' → logprob: -8.000710487365723
    4. '<|end|>' → logprob: -11.250710487365723
    5. '           ' → logprob: -11.750710487365723
    6. '                ' → logprob: -12.375710487365723
    7. '                   ' → logprob: -12.625710487365723
    8. '                    
' → logprob: -13.125710487365723
    9. '       ' → logprob: -13.500710487365723
    10. '              ' → logprob: -13.500710487365723

Token 430: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03132414072751999
    2. ' if' → logprob: -3.6563241481781006
    3. 'if' → logprob: -5.4063239097595215
    4. '                
' → logprob: -8.28132438659668
    5. '
' → logprob: -8.78132438659668
    6. '           ' → logprob: -9.65632438659668
    7. '                ' → logprob: -11.15632438659668
    8. '                   ' → logprob: -11.28132438659668
    9. '       ' → logprob: -11.40632438659668
    10. ' 
' → logprob: -12.65632438659668

Token 431: ' Select' (ID: 13482)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04110708087682724
    2. ' if' → logprob: -3.291107177734375
    3. '               ' → logprob: -5.791107177734375
    4. '           ' → logprob: -12.416107177734375
    5. '                   ' → logprob: -14.166107177734375
    6. '```' → logprob: -14.416107177734375
    7. '   ' → logprob: -14.791107177734375
    8. '       ' → logprob: -15.291107177734375
    9. '
' → logprob: -15.666107177734375
    10. 'If' → logprob: -16.416107177734375

Token 432: ' best' (ID: 1636)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7039625644683838
    2. ' if' → logprob: -0.7039625644683838
    3. '                   ' → logprob: -5.203962326049805
    4. '               ' → logprob: -5.328962326049805
    5. ' the' → logprob: -8.453962326049805
    6. 'the' → logprob: -9.703962326049805
    7. 'best' → logprob: -9.828962326049805
    8. ' best' → logprob: -10.328962326049805
    9. '   ' → logprob: -10.453962326049805
    10. '                       ' → logprob: -11.453962326049805

Token 433: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2704281806945801
    2. ' if' → logprob: -1.52042818069458
    3. 'if' → logprob: -4.02042818069458
    4. '                   ' → logprob: -9.395427703857422
    5. 'token' → logprob: -9.520427703857422
    6. '                
' → logprob: -10.020427703857422
    7. '	if' → logprob: -10.520427703857422
    8. '_token' → logprob: -10.895427703857422
    9. '                ' → logprob: -11.270427703857422
    10. '<|end|>' → logprob: -11.270427703857422

Token 434: 'highest' (ID: 145680)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6018556952476501
    2. 'ratio' → logprob: -1.226855754852295
    3. ' if' → logprob: -2.476855754852295
    4. ' ratio' → logprob: -3.101855754852295
    5. '                   ' → logprob: -3.851855754852295
    6. ')' → logprob: -5.476855754852295
    7. '               ' → logprob: -6.601855754852295
    8. 'best' → logprob: -7.726855754852295
    9. '                       ' → logprob: -7.726855754852295
    10. '):
' → logprob: -7.726855754852295

Token 435: ')' (ID: 8)
  Prédit: '_ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.3655094504356384
    2. ' if' → logprob: -1.4905095100402832
    3. 'ratio' → logprob: -3.490509510040283
    4. ' ratio' → logprob: -3.615509510040283
    5. ')' → logprob: -3.990509510040283
    6. 'if' → logprob: -5.865509510040283
    7. ' )' → logprob: -6.865509510040283
    8. '>' → logprob: -8.865509033203125
    9. '_' → logprob: -8.990509033203125
    10. '                   ' → logprob: -9.115509033203125

Token 436: ' calorie' (ID: 66006)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38907739520072937
    2. '               ' → logprob: -1.7640774250030518
    3. 'if' → logprob: -2.0140774250030518
    4. 'token' → logprob: -4.139077186584473
    5. ' token' → logprob: -6.889077186584473
    6. 'ratio' → logprob: -8.514077186584473
    7. ' ratio' → logprob: -9.389077186584473
    8. '                
' → logprob: -9.889077186584473
    9. '<|end|>' → logprob: -9.889077186584473
    10. '_token' → logprob: -10.139077186584473

Token 437: ' per' (ID: 777)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.004175271838903427
    2. ' per' → logprob: -5.879175186157227
    3. 'per' → logprob: -6.754175186157227
    4. '               ' → logprob: -9.379175186157227
    5. ' if' → logprob: -9.629175186157227
    6. 'if' → logprob: -10.879175186157227
    7. '_ratio' → logprob: -11.254175186157227
    8. '                   ' → logprob: -12.129175186157227
    9. '-per' → logprob: -12.754175186157227
    10. ' ratio' → logprob: -13.004175186157227

Token 438: ' dollar' (ID: 22678)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0022674205247312784
    2. 'd' → logprob: -6.127267360687256
    3. '               ' → logprob: -10.002267837524414
    4. '           ' → logprob: -12.002267837524414
    5. 'ratio' → logprob: -12.127267837524414
    6. '   ' → logprob: -12.377267837524414
    7. '_ratio' → logprob: -12.502267837524414
    8. ' dollar' → logprob: -12.877267837524414
    9. '                   ' → logprob: -13.127267837524414
    10. ' ' → logprob: -13.127267837524414

Token 439: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016142464010044932
    2. '                
' → logprob: -6.751614093780518
    3. ' if' → logprob: -8.876614570617676
    4. '                ' → logprob: -9.376614570617676
    5. '
' → logprob: -9.501614570617676
    6. '<|end|>' → logprob: -10.251614570617676
    7. ',' → logprob: -10.501614570617676
    8. '           ' → logprob: -11.251614570617676
    9. '                   ' → logprob: -11.376614570617676
    10. '       ' → logprob: -11.376614570617676

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029248257633298635
    2. ' if' → logprob: -6.002924919128418
    3. '                
' → logprob: -8.502924919128418
    4. 'if' → logprob: -9.377924919128418
    5. ',' → logprob: -9.752924919128418
    6. '                ' → logprob: -10.627924919128418
    7. ' ratio' → logprob: -11.252924919128418
    8. '
' → logprob: -11.252924919128418
    9. '                   ' → logprob: -11.502924919128418
    10. '       ' → logprob: -12.502924919128418

Token 441: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39545807242393494
    2. ' if' → logprob: -1.1454581022262573
    3. 'if' (adapté à ' if') → logprob: -4.770458221435547
    4. '                
' → logprob: -10.895458221435547
    5. '                ' → logprob: -11.020458221435547
    6. '       ' → logprob: -11.520458221435547
    7. '           ' → logprob: -11.645458221435547
    8. '                   ' → logprob: -12.270458221435547
    9. ' ' → logprob: -12.395458221435547
    10. '
' → logprob: -12.395458221435547

Token 442: ' ratio' (ID: 18051)
  Prédit: ' ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ratio' → logprob: -0.048587825149297714
    2. 'ratio' → logprob: -3.0485877990722656
    3. '_ratio' → logprob: -15.798587799072266
    4. '   ' → logprob: -15.923587799072266
    5. ' ' → logprob: -17.048587799072266
    6. 'Ratio' → logprob: -17.423587799072266
    7. 'ration' → logprob: -18.423587799072266
    8. '	r' → logprob: -18.423587799072266
    9. 'r' → logprob: -18.548587799072266
    10. ' ' → logprob: -19.673587799072266

Token 443: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16023488342761993
    2. '>' → logprob: -1.9102349281311035
    3. ' >=' → logprob: -12.285234451293945
    4. ' ' → logprob: -12.785234451293945
    5. '>=' → logprob: -13.660234451293945
    6. 'and' → logprob: -14.785234451293945
    7. ' ' → logprob: -15.785234451293945
    8. '>b' → logprob: -15.785234451293945
    9. ' >
' → logprob: -16.035234451293945
    10. '.' → logprob: -16.035234451293945

Token 444: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.5759485363960266
    2. 'best' → logprob: -0.8259485363960266
    3. '	best' → logprob: -12.075948715209961
    4. '   ' → logprob: -13.700948715209961
    5. '(best' → logprob: -13.825948715209961
    6. ' ' → logprob: -14.950948715209961
    7. '_best' → logprob: -14.950948715209961
    8. '.best' → logprob: -15.325948715209961
    9. 'b' → logprob: -16.70094871520996
    10. '```' → logprob: -16.82594871520996

Token 445: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -9.088346359931165e-07
    2. '_rat' → logprob: -14.125000953674316
    3. '_' → logprob: -16.5
    4. '_r' → logprob: -17.625
    5. '\' → logprob: -18.375
    6. ' _' → logprob: -18.375
    7. '```' → logprob: -18.625
    8. 'ratio' → logprob: -18.875
    9. '
' → logprob: -19.125
    10. '__' → logprob: -19.5

Token 446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08340063691139221
    2. ':
' → logprob: -2.5834007263183594
    3. '                   ' → logprob: -6.208400726318359
    4. '               ' → logprob: -6.458400726318359
    5. ' and' → logprob: -8.08340072631836
    6. '           ' → logprob: -8.08340072631836
    7. '                       ' → logprob: -8.83340072631836
    8. 'and' → logprob: -10.83340072631836
    9. '):
' → logprob: -10.83340072631836
    10. ' or' → logprob: -10.95840072631836

Token 447: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0037513866554945707
    2. ' best' → logprob: -6.503751277923584
    3. 'best' → logprob: -7.253751277923584
    4. '                       ' → logprob: -7.378751277923584
    5. '               ' → logprob: -7.378751277923584
    6. '                    
' → logprob: -9.128751754760742
    7. '           ' → logprob: -9.628751754760742
    8. '(best' → logprob: -10.378751754760742
    9. '                    ' → logprob: -11.128751754760742
    10. '                  ' → logprob: -11.503751754760742

Token 448: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.20739449560642242
    2. 'best' (adapté à ' best') → logprob: -1.9573944807052612
    3. '                   ' → logprob: -3.082394599914551
    4. '                       ' → logprob: -9.08239459991455
    5. '               ' → logprob: -9.45739459991455
    6. '	best' → logprob: -11.70739459991455
    7. '(best' → logprob: -12.20739459991455
    8. '                    ' → logprob: -12.45739459991455
    9. '           ' → logprob: -12.45739459991455
    10. '_best' → logprob: -12.58239459991455

Token 449: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.002477796748280525
    2. '_p' → logprob: -6.002477645874023
    3. '_' → logprob: -13.627477645874023
    4. '_rat' → logprob: -14.377477645874023
    5. '_r' → logprob: -15.252477645874023
    6. 'Ratio' → logprob: -17.877477645874023
    7. '_RATIO' → logprob: -18.252477645874023
    8. 'ratio' → logprob: -18.377477645874023
    9. '_rating' → logprob: -18.752477645874023
    10. '   ' → logprob: -19.127477645874023

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331145763397217
    2. '=' → logprob: -1.3133114576339722
    3. ',' → logprob: -9.938311576843262
    4. ' ' → logprob: -13.938311576843262
    5. ' ,' → logprob: -15.063311576843262
    6. ' =
' → logprob: -16.063310623168945
    7. '    ' → logprob: -16.063310623168945
    8. '=

' → logprob: -16.563310623168945
    9. '   ' → logprob: -17.063310623168945
    10. '.' → logprob: -17.313310623168945

Token 451: ' ratio' (ID: 18051)
  Prédit: ' ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ratio' → logprob: -0.3868711292743683
    2. 'ratio' → logprob: -1.136871099472046
    3. '                   ' → logprob: -16.511871337890625
    4. '_ratio' → logprob: -16.886871337890625
    5. 'rat' → logprob: -18.761871337890625
    6. '                    ' → logprob: -19.261871337890625
    7. ' rat' → logprob: -19.761871337890625
    8. 'r' → logprob: -20.136871337890625
    9. ' ' → logprob: -20.386871337890625
    10. 'ration' → logprob: -20.886871337890625

Token 452: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001680059707723558
    2. '
' → logprob: -6.62667989730835
    3. '                    
' → logprob: -9.001680374145508
    4. '           ' → logprob: -9.126680374145508
    5. '               ' → logprob: -9.626680374145508
    6. '                    ' → logprob: -11.001680374145508
    7. '       ' → logprob: -11.876680374145508
    8. '                       ' → logprob: -12.251680374145508
    9. '<|end|>' → logprob: -12.251680374145508
    10. '                  ' → logprob: -12.376680374145508

Token 453: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00047773998812772334
    2. '                    
' → logprob: -8.87547779083252
    3. '               ' → logprob: -9.12547779083252
    4. '           ' → logprob: -9.50047779083252
    5. '                    ' → logprob: -9.62547779083252
    6. '
' → logprob: -10.12547779083252
    7. '                       ' → logprob: -11.12547779083252
    8. '                  ' → logprob: -11.62547779083252
    9. '       ' → logprob: -12.25047779083252
    10. '                ' → logprob: -12.62547779083252

Token 454: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0007121934904716909
    2. ' best' → logprob: -7.2507123947143555
    3. '                   ' → logprob: -13.250712394714355
    4. '               ' → logprob: -15.250712394714355
    5. '           ' → logprob: -16.50071144104004
    6. '	best' → logprob: -16.62571144104004
    7. '(best' → logprob: -19.75071144104004
    8. '                       ' → logprob: -19.75071144104004
    9. '.best' → logprob: -20.00071144104004
    10. '   ' → logprob: -20.00071144104004

Token 455: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.625000953674316
    3. 'pizza' → logprob: -17.125001907348633
    4. '_ratio' → logprob: -18.000001907348633
    5. 'Pizza' → logprob: -18.250001907348633
    6. '\' → logprob: -18.250001907348633
    7. '=' → logprob: -18.875001907348633
    8. ' _' → logprob: -19.625001907348633
    9. '_t' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 456: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.00024144348572008312
    2. 'pizza' → logprob: -8.50024127960205
    3. 'izz' → logprob: -10.37524127960205
    4. 'Pizza' → logprob: -14.00024127960205
    5. 'iza' → logprob: -14.12524127960205
    6. 'iz' → logprob: -14.12524127960205
    7. 'izzeria' → logprob: -14.25024127960205
    8. 'zza' → logprob: -14.37524127960205
    9. 'i' → logprob: -14.50024127960205
    10. '_' → logprob: -14.62524127960205

Token 457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '.=' → logprob: -15.813261985778809
    4. '.' → logprob: -16.188262939453125
    5. ' ' → logprob: -17.313262939453125
    6. '=p' → logprob: -17.688262939453125
    7. '   ' → logprob: -17.688262939453125
    8. '    ' → logprob: -18.063262939453125
    9. '＝' → logprob: -18.063262939453125
    10. '=

' → logprob: -18.188262939453125

Token 458: ' pizza' (ID: 27941)
  Prédit: 'pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pizza' → logprob: -0.04858839511871338
    2. ' pizza' → logprob: -3.048588275909424
    3. 'p' → logprob: -14.173588752746582
    4. 'Pizza' → logprob: -15.298588752746582
    5. 'pi' → logprob: -17.048587799072266
    6. ' pizz' → logprob: -17.548587799072266
    7. 'pie' → logprob: -17.673587799072266
    8. ' ' → logprob: -17.923587799072266
    9. '   ' → logprob: -18.173587799072266
    10. 'python' → logprob: -18.423587799072266

Token 459: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -4.842555426876061e-06
    2. 'candidate' → logprob: -13.000004768371582
    3. 'Candidate' → logprob: -13.625004768371582
    4. '_p' → logprob: -15.000004768371582
    5. '```' → logprob: -15.125004768371582
    6. '   ' → logprob: -16.2500057220459
    7. '._' → logprob: -16.3750057220459
    8. '
' → logprob: -16.7500057220459
    9. '_component' → logprob: -16.8750057220459
    10. '_candidates' → logprob: -16.8750057220459

Token 460: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5430774688720703
    2. '
' → logprob: -0.9180774688720703
    3. 'return' → logprob: -4.41807746887207
    4. '        
' → logprob: -5.16807746887207
    5. ' return' → logprob: -6.66807746887207
    6. '    
' → logprob: -8.16807746887207
    7. '  
' → logprob: -9.54307746887207
    8. '   ' → logprob: -9.66807746887207
    9. '<|end|>' → logprob: -9.91807746887207
    10. '
' → logprob: -10.29307746887207

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01406806893646717
    2. '
' → logprob: -4.764068126678467
    3. 'return' → logprob: -5.264068126678467
    4. '        
' → logprob: -9.139067649841309
    5. ' return' → logprob: -9.639067649841309
    6. '   ' → logprob: -9.764067649841309
    7. '    
' → logprob: -11.264067649841309
    8. '	' → logprob: -12.514067649841309
    9. '           ' → logprob: -12.639067649841309
    10. '               ' → logprob: -12.889067649841309

Token 462: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3882526159286499
    2. '       ' → logprob: -1.13825261592865
    3. ' return' → logprob: -6.8882527351379395
    4. '
' → logprob: -8.513252258300781
    5. '   ' → logprob: -8.763252258300781
    6. '        
' → logprob: -13.263252258300781
    7. '	return' → logprob: -14.888252258300781
    8. '    
' → logprob: -15.013252258300781
    9. '           ' → logprob: -15.138252258300781
    10. '      ' → logprob: -15.263252258300781

Token 463: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.38687121868133545
    2. ' best' → logprob: -1.1368712186813354
    3. '	best' → logprob: -16.136871337890625
    4. '(best' → logprob: -17.136871337890625
    5. '_best' → logprob: -18.511871337890625
    6. '.best' → logprob: -19.511871337890625
    7. 'Best' → logprob: -20.636871337890625
    8. '   ' → logprob: -21.511871337890625
    9. '```' → logprob: -23.136871337890625
    10. 'b' → logprob: -23.261871337890625

Token 464: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. ' _' → logprob: -16.750001907348633
    4. '_ratio' → logprob: -17.625001907348633
    5. '_d' → logprob: -18.250001907348633
    6. '_t' → logprob: -19.625001907348633
    7. '_price' → logprob: -19.625001907348633
    8. '_piece' → logprob: -19.750001907348633
    9. 'Pizza' → logprob: -19.875001907348633
    10. '_P' → logprob: -20.125001907348633

Token 465: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -2.3319124011322856e-05
    2. 'pizza' → logprob: -11.250022888183594
    3. 'zza' → logprob: -11.750022888183594
    4. 'izz' → logprob: -13.375022888183594
    5. 'Pizza' → logprob: -15.250022888183594
    6. 'iza' → logprob: -15.875022888183594
    7. 'iz' → logprob: -16.250022888183594
    8. '```' → logprob: -17.000022888183594
    9. '_' → logprob: -17.125022888183594
    10. '
' → logprob: -17.250022888183594

Token 466: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' Input' (ID: 10090)
  Prédit: 'Pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: -0.14343279600143433
    2. ' Pizza' → logprob: -2.768432855606079
    3. 'Order' → logprob: -3.143432855606079
    4. 'Special' → logprob: -5.5184326171875
    5. 'Chef' → logprob: -5.5184326171875
    6. 'Custom' → logprob: -5.5184326171875
    7. 'P' → logprob: -5.7684326171875
    8. 'Menu' → logprob: -6.3934326171875
    9. 'Che' → logprob: -6.7684326171875
    10. ' Order' → logprob: -6.8934326171875

Token 469: 'Reader' (ID: 7171)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.7759695649147034
    2. 'Reader' → logprob: -1.5259695053100586
    3. 'Parser' → logprob: -2.0259695053100586
    4. ':' → logprob: -2.2759695053100586
    5. 'Data' → logprob: -2.7759695053100586
    6. 'Processor' → logprob: -4.275969505310059
    7. ':
' → logprob: -5.525969505310059
    8. 'Validator' → logprob: -6.025969505310059
    9. 'Component' → logprob: -6.900969505310059
    10. 'Provider' → logprob: -7.275969505310059

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043004799634218216
    2. ':
' → logprob: -3.1680047512054443
    3. ':

' → logprob: -13.418004989624023
    4. ':def' → logprob: -13.418004989624023
    5. '(object' → logprob: -14.293004989624023
    6. ':
' → logprob: -14.418004989624023
    7. '():' → logprob: -14.543004989624023
    8. ' :' → logprob: -15.293004989624023
    9. '():
' → logprob: -15.793004989624023
    10. '<|end|>' → logprob: -16.168004989624023

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004730584099888802
    2. ' def' → logprob: -5.379730701446533
    3. 'def' → logprob: -9.254730224609375
    4. '```' → logprob: -12.004730224609375
    5. '    ' → logprob: -12.504730224609375
    6. '<|end|>' → logprob: -14.254730224609375
    7. '  ' → logprob: -14.629730224609375
    8. '    
' → logprob: -14.629730224609375
    9. ' ' → logprob: -14.754730224609375
    10. '	def' → logprob: -14.879730224609375

Token 472: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31363949179649353
    2. 'def' → logprob: -1.313639521598816
    3. '   ' → logprob: -8.063639640808105
    4. '@' (adapté à ' @') → logprob: -10.063639640808105
    5. ' @' → logprob: -10.813639640808105
    6. '```' → logprob: -16.43863868713379
    7. '	def' → logprob: -16.93863868713379
    8. 'class' → logprob: -17.06363868713379
    9. 'staticmethod' → logprob: -17.68863868713379
    10. 'import' → logprob: -18.93863868713379

Token 473: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -2.8087270038668066e-05
    2. 'classmethod' → logprob: -10.500027656555176
    3. 'static' → logprob: -14.500027656555176
    4. 'dat' → logprob: -16.750028610229492
    5. 'property' → logprob: -19.125028610229492
    6. ' static' → logprob: -20.625028610229492
    7. 'stat' → logprob: -22.000028610229492
    8. 'st' → logprob: -23.375028610229492
    9. 'sta' → logprob: -25.000028610229492
    10. 'Static' → logprob: -25.125028610229492

Token 474: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010992409661412239
    2. ' def' → logprob: -4.885992527008057
    3. '   ' → logprob: -5.885992527008057
    4. '
' → logprob: -7.510992527008057
    5. '	def' → logprob: -10.385992050170898
    6. '()
' → logprob: -12.385992050170898
    7. '()' → logprob: -12.510992050170898
    8. '(' → logprob: -12.635992050170898
    9. '<|end|>' → logprob: -12.885992050170898
    10. '(def' → logprob: -13.010992050170898

Token 475: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020067949662916362
    2. ' def' → logprob: -9.000200271606445
    3. '   ' → logprob: -9.625200271606445
    4. '
' → logprob: -11.750200271606445
    5. '```' → logprob: -13.500200271606445
    6. '	def' → logprob: -14.750200271606445
    7. '(def' → logprob: -15.750200271606445
    8. 'classmethod' → logprob: -15.875200271606445
    9. 'async' → logprob: -16.375200271606445
    10. '...' → logprob: -16.625200271606445

Token 476: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.008129963040119e-06
    2. ' def' → logprob: -12.500003814697266
    3. '
' → logprob: -15.250003814697266
    4. 'read' → logprob: -17.750003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '	def' → logprob: -18.875003814697266
    7. 'from' → logprob: -19.375003814697266
    8. '    
' → logprob: -19.875003814697266
    9. 'classmethod' → logprob: -20.000003814697266
    10. 'de' → logprob: -20.375003814697266

Token 477: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.002083643339574337
    2. ' read' → logprob: -6.252083778381348
    3. 'parse' → logprob: -9.002083778381348
    4. 'from' → logprob: -11.627083778381348
    5. ' readline' → logprob: -11.627083778381348
    6. 'get' → logprob: -12.002083778381348
    7. '_read' → logprob: -13.127083778381348
    8. 'input' → logprob: -13.377083778381348
    9. '.read' → logprob: -13.752083778381348
    10. ' parse' → logprob: -14.002083778381348

Token 478: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6196526885032654
    2. '()' → logprob: -0.8696526885032654
    3. '():
' → logprob: -3.49465274810791
    4. 'int' → logprob: -5.86965274810791
    5. '_input' → logprob: -5.86965274810791
    6. '_p' → logprob: -5.99465274810791
    7. '_line' → logprob: -6.61965274810791
    8. 'line' → logprob: -7.36965274810791
    9. '_int' → logprob: -7.74465274810791
    10. '_prices' → logprob: -8.24465274810791

Token 479: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018343202769756317
    2. '()' → logprob: -4.643342971801758
    3. '():
' → logprob: -4.768342971801758
    4. ' ():' → logprob: -10.143342971801758
    5. '(' → logprob: -12.893342971801758
    6. '(prompt' → logprob: -13.018342971801758
    7. '()->' → logprob: -13.143342971801758
    8. ' ()' → logprob: -13.143342971801758
    9. '();' → logprob: -13.518342971801758
    10. '(line' → logprob: -13.768342971801758

Token 480: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41232967376708984
    2. '():' → logprob: -1.7873296737670898
    3. '()->' → logprob: -2.16232967376709
    4. '():
' → logprob: -3.03732967376709
    5. '->' → logprob: -5.03732967376709
    6. ' ->' → logprob: -7.41232967376709
    7. '(' → logprob: -8.53732967376709
    8. ':' → logprob: -9.41232967376709
    9. '():
' → logprob: -10.53732967376709
    10. '   ' → logprob: -11.41232967376709

Token 481: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.12971298396587372
    2. 'Pizza' → logprob: -2.5047130584716797
    3. 'list' → logprob: -3.6297130584716797
    4. ' tuple' → logprob: -4.87971305847168
    5. 'None' → logprob: -5.37971305847168
    6. ''' → logprob: -7.87971305847168
    7. ' Pizza' → logprob: -8.50471305847168
    8. '"' → logprob: -8.62971305847168
    9. 'dict' → logprob: -8.75471305847168
    10. '(tuple' → logprob: -9.87971305847168

Token 482: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0011712945997714996
    2. '[list' → logprob: -7.001171112060547
    3. '[' → logprob: -9.251171112060547
    4. '[
' → logprob: -9.376171112060547
    5. ':' → logprob: -10.126171112060547
    6. ':
' → logprob: -10.376171112060547
    7. '(int' → logprob: -12.626171112060547
    8. '[D' → logprob: -13.126171112060547
    9. '[str' → logprob: -14.126171112060547
    10. '[List' → logprob: -14.626171112060547

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001295222609769553
    2. ',int' → logprob: -9.000129699707031
    3. '[int' → logprob: -13.000129699707031
    4. ' ,' → logprob: -13.125129699707031
    5. ',List' → logprob: -13.750129699707031
    6. ',float' → logprob: -15.375129699707031
    7. 'int' → logprob: -15.750129699707031
    8. ',D' → logprob: -15.875129699707031
    9. '   ' → logprob: -16.25012969970703
    10. ',str' → logprob: -16.50012969970703

Token 484: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0194175373762846
    2. 'list' → logprob: -4.019417762756348
    3. '...' → logprob: -7.894417762756348
    4. ' int' → logprob: -8.144417762756348
    5. 'List' → logprob: -9.019417762756348
    6. 'Pizza' → logprob: -9.019417762756348
    7. '[int' → logprob: -9.269417762756348
    8. '...]' → logprob: -9.519417762756348
    9. ' list' → logprob: -9.894417762756348
    10. ']' → logprob: -10.019417762756348

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042209390085190535
    2. ',int' → logprob: -8.000422477722168
    3. ' ,' → logprob: -10.375422477722168
    4. ']:
' → logprob: -10.750422477722168
    5. ']:' → logprob: -11.500422477722168
    6. '   ' → logprob: -11.875422477722168
    7. ',List' → logprob: -12.000422477722168
    8. ']:
' → logprob: -12.625422477722168
    9. '[int' → logprob: -13.500422477722168
    10. ',
' → logprob: -13.875422477722168

Token 486: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2823947072029114
    2. 'int' → logprob: -1.4073946475982666
    3. ' list' → logprob: -7.407394886016846
    4. 'D' → logprob: -7.907394886016846
    5. 'List' → logprob: -9.032394409179688
    6. '   ' → logprob: -9.907394409179688
    7. '       ' → logprob: -10.907394409179688
    8. 'Pizza' → logprob: -10.907394409179688
    9. '[int' → logprob: -11.157394409179688
    10. '           ' → logprob: -11.407394409179688

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0057742539793252945
    2. ']:
' → logprob: -5.380774021148682
    3. ']:' → logprob: -6.880774021148682
    4. ']:
' → logprob: -9.63077449798584
    5. ',int' → logprob: -10.13077449798584
    6. ' ,' → logprob: -11.25577449798584
    7. ']' → logprob: -13.00577449798584
    8. ',
' → logprob: -13.38077449798584
    9. ']:

' → logprob: -13.88077449798584
    10. '   ' → logprob: -14.25577449798584

Token 488: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01993640512228012
    2. 'int' → logprob: -4.019936561584473
    3. ' list' → logprob: -6.394936561584473
    4. 'List' → logprob: -9.269936561584473
    5. '   ' → logprob: -11.644936561584473
    6. ' int' → logprob: -12.769936561584473
    7. '...' → logprob: -13.019936561584473
    8. '       ' → logprob: -13.644936561584473
    9. 'float' → logprob: -14.019936561584473
    10. 'str' → logprob: -14.269936561584473

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.606305718421936
    2. ']:
' → logprob: -0.856305718421936
    3. ']:' → logprob: -3.6063055992126465
    4. ']:
' → logprob: -5.9813055992126465
    5. ',int' → logprob: -8.606306076049805
    6. ']:

' → logprob: -11.731306076049805
    7. ' ,' → logprob: -11.731306076049805
    8. ']]:
' → logprob: -12.106306076049805
    9. ']:


' → logprob: -12.356306076049805
    10. ']' → logprob: -12.481306076049805

Token 490: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.027460895478725433
    2. 'int' → logprob: -3.652460813522339
    3. ' list' → logprob: -6.902461051940918
    4. 'List' → logprob: -9.777461051940918
    5. '...' → logprob: -9.902461051940918
    6. '   ' → logprob: -10.652461051940918
    7. '           ' → logprob: -11.902461051940918
    8. '       ' → logprob: -12.152461051940918
    9. '...]' → logprob: -13.152461051940918
    10. ' int' → logprob: -13.277461051940918

Token 491: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.054500666621607e-06
    2. 'int' → logprob: -12.87500286102295
    3. ']int' → logprob: -15.12500286102295
    4. '<int' → logprob: -16.250003814697266
    5. ']' → logprob: -17.625003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '[
' → logprob: -18.250003814697266
    8. ']:
' → logprob: -18.375003814697266
    9. '[' → logprob: -18.625003814697266
    10. '(int' → logprob: -19.250003814697266

Token 492: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.01477153692394495
    2. ']:' → logprob: -4.264771461486816
    3. ']:
' → logprob: -7.889771461486816
    4. ']]:
' → logprob: -9.139771461486816
    5. ',' → logprob: -9.639771461486816
    6. ']:

' → logprob: -10.014771461486816
    7. ']' → logprob: -11.764771461486816
    8. ']>' → logprob: -12.889771461486816
    9. ' ]' → logprob: -13.264771461486816
    10. ']:


' → logprob: -13.639771461486816

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057342395186424255
    2. '```' → logprob: -4.057342529296875
    3. ':' → logprob: -4.432342529296875
    4. '   ' → logprob: -4.932342529296875
    5. '(' → logprob: -5.432342529296875
    6. '<|end|>' → logprob: -5.557342529296875
    7. '        
' → logprob: -6.057342529296875
    8. '():
' → logprob: -6.557342529296875
    9. '()' → logprob: -6.807342529296875
    10. '():' → logprob: -6.932342529296875

Token 494: ' N' (ID: 478)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3297882080078125
    2. 'n' → logprob: -1.7047882080078125
    3. '       ' → logprob: -3.3297882080078125
    4. 'a' → logprob: -4.2047882080078125
    5. ' dough' → logprob: -4.4547882080078125
    6. 'line' → logprob: -4.8297882080078125
    7. 'cal' → logprob: -4.9547882080078125
    8. ' n' → logprob: -5.5797882080078125
    9. 'lines' → logprob: -5.8297882080078125
    10. 'data' → logprob: -5.8297882080078125

Token 495: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005439608823508024
    2. '=' → logprob: -5.755439758300781
    3. ' =' → logprob: -6.130439758300781
    4. ' ,' → logprob: -10.380439758300781
    5. ',N' → logprob: -11.380439758300781
    6. '=int' → logprob: -11.505439758300781
    7. ',T' → logprob: -11.880439758300781
    8. ',D' → logprob: -13.130439758300781
    9. '=input' → logprob: -13.130439758300781
    10. ',int' → logprob: -13.380439758300781

Token 496: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750484973192215
    2. ' int' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.90475082397461
    4. '[int' → logprob: -18.15475082397461
    5. '   ' → logprob: -18.90475082397461
    6. '0' → logprob: -18.90475082397461
    7. '<int' → logprob: -19.02975082397461
    8. '	int' → logprob: -19.52975082397461
    9. '(int' → logprob: -19.52975082397461
    10. '10' → logprob: -19.77975082397461

Token 497: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00020854694594163448
    2. 'input' → logprob: -8.500208854675293
    3. '(' → logprob: -12.250208854675293
    4. '()' → logprob: -15.500208854675293
    5. ' input' → logprob: -18.125207901000977
    6. '=input' → logprob: -18.250207901000977
    7. '(
' → logprob: -18.750207901000977
    8. '(open' → logprob: -19.625207901000977
    9. '(in' → logprob: -20.125207901000977
    10. '<input' → logprob: -20.250207901000977

Token 498: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018336882814764977
    2. '())
' → logprob: -4.018336772918701
    3. '()' → logprob: -9.01833724975586
    4. '().' → logprob: -10.01833724975586
    5. '())
' → logprob: -10.89333724975586
    6. '())

' → logprob: -13.51833724975586
    7. '()
' → logprob: -14.51833724975586
    8. '(' → logprob: -15.14333724975586
    9. ' ())' → logprob: -15.14333724975586
    10. '()),' → logprob: -16.76833724975586

Token 499: '       ' (ID: 309)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5097563862800598
    2. 'M' → logprob: -1.509756326675415
    3. ' K' → logprob: -3.384756326675415
    4. 'K' → logprob: -3.634756326675415
    5. 'D' → logprob: -4.009756565093994
    6. ' T' → logprob: -4.259756565093994
    7. ' P' → logprob: -4.384756565093994
    8. 'T' → logprob: -4.384756565093994
    9. ' space' → logprob: -4.884756565093994
    10. 'P' → logprob: -5.009756565093994

Token 500: ' A' (ID: 355)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3898281157016754
    2. 'd' → logprob: -1.889828085899353
    3. 'M' → logprob: -2.0148282051086426
    4. 'T' → logprob: -4.639828205108643
    5. 'price' → logprob: -4.639828205108643
    6. 't' → logprob: -5.014828205108643
    7. 'base' → logprob: -6.014828205108643
    8. 'P' → logprob: -6.014828205108643
    9. ' dough' → logprob: -6.764828205108643
    10. 'C' → logprob: -7.139828205108643

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0899292379617691
    2. ' =' → logprob: -2.5899293422698975
    3. '=' → logprob: -4.589929103851318
    4. ' ,' → logprob: -7.714929103851318
    5. ',B' → logprob: -8.589929580688477
    6. 'B' → logprob: -9.089929580688477
    7. ' ' → logprob: -10.339929580688477
    8. ' B' → logprob: -12.214929580688477
    9. 'N' → logprob: -12.214929580688477
    10. '=int' → logprob: -12.714929580688477

Token 502: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.009699666872620583
    2. ' B' → logprob: -5.259699821472168
    3. 'P' → logprob: -6.884699821472168
    4. 'D' → logprob: -7.009699821472168
    5. 'M' → logprob: -7.134699821472168
    6. 'K' → logprob: -7.259699821472168
    7. 'C' → logprob: -8.009699821472168
    8. 'S' → logprob: -8.634699821472168
    9. 'T' → logprob: -8.634699821472168
    10. 'Q' → logprob: -9.384699821472168

Token 503: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0587927103042603
    2. ' =' → logprob: -1.0587927103042603
    3. '=' → logprob: -1.1837927103042603
    4. ' ,' → logprob: -9.933793067932129
    5. ',C' → logprob: -10.183793067932129
    6. ' ' → logprob: -10.558793067932129
    7. 'C' → logprob: -12.183793067932129
    8. ',B' → logprob: -12.308793067932129
    9. ' C' → logprob: -13.308793067932129
    10. '  ' → logprob: -13.433793067932129

Token 504: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029755467548966408
    2. 'map' → logprob: -3.5297553539276123
    3. '[' → logprob: -13.029755592346191
    4. ' [' → logprob: -13.779755592346191
    5. '	map' → logprob: -14.529755592346191
    6. ' ' → logprob: -15.029755592346191
    7. '(map' → logprob: -15.029755592346191
    8. '   ' → logprob: -15.154755592346191
    9. ' input' → logprob: -15.654755592346191
    10. 'input' → logprob: -15.904755592346191

Token 505: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004362718027550727
    2. 'int' → logprob: -7.750436305999756
    3. '(' → logprob: -12.250435829162598
    4. '[int' → logprob: -15.375435829162598
    5. '(str' → logprob: -15.750435829162598
    6. '(input' → logprob: -15.750435829162598
    7. '<int' → logprob: -16.000436782836914
    8. 'input' → logprob: -16.750436782836914
    9. '=int' → logprob: -17.125436782836914
    10. ' int' → logprob: -17.500436782836914

Token 506: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.020419377833604813
    2. ',input' → logprob: -4.270419597625732
    3. 'input' → logprob: -5.145419597625732
    4. ',' → logprob: -8.770419120788574
    5. ' input' → logprob: -9.270419120788574
    6. '=input' → logprob: -9.395419120788574
    7. ')' → logprob: -10.145419120788574
    8. '(' → logprob: -10.520419120788574
    9. ' (' → logprob: -12.020419120788574
    10. '<input' → logprob: -13.270419120788574

Token 507: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '   ' → logprob: -20.375335693359375
    4. '(input' → logprob: -20.375335693359375
    5. '=input' → logprob: -20.875335693359375
    6. '<input' → logprob: -21.125335693359375
    7. ',input' → logprob: -21.625335693359375
    8. ' ' → logprob: -21.625335693359375
    9. '	input' → logprob: -22.375335693359375
    10. ')' → logprob: -22.625335693359375

Token 508: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.125000953674316
    3. '(' → logprob: -15.500000953674316
    4. ' ().' → logprob: -17.625
    5. '   ' → logprob: -20.75
    6. '.split' → logprob: -21.375
    7. 'split' → logprob: -21.625
    8. 's' → logprob: -22.0
    9. '    ' → logprob: -23.25
    10. ' .' → logprob: -23.25

Token 509: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015991552209015936
    2. 'strip' → logprob: -8.750160217285156
    3. '().' → logprob: -13.875160217285156
    4. ' split' → logprob: -14.875160217285156
    5. '(split' → logprob: -17.125160217285156
    6. 'read' → logprob: -17.750160217285156
    7. 'rstrip' → logprob: -18.125160217285156
    8. '.split' → logprob: -18.250160217285156
    9. 'spl' → logprob: -18.625160217285156
    10. 'str' → logprob: -19.125160217285156

Token 510: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0037263263948261738
    2. '()' → logprob: -6.003726482391357
    3. ')' → logprob: -7.003726482391357
    4. '())
' → logprob: -8.0037260055542
    5. '(' → logprob: -12.3787260055542
    6. '())
' → logprob: -14.1287260055542
    7. '()
' → logprob: -14.2537260055542
    8. '()))' → logprob: -14.8787260055542
    9. ' ())' → logprob: -14.8787260055542
    10. '())

' → logprob: -15.1287260055542

Token 511: '       ' (ID: 309)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.807184100151062
    2. '       ' → logprob: -1.432184100151062
    3. ',' → logprob: -1.682184100151062
    4. '        
' → logprob: -2.9321842193603516
    5. 't' → logprob: -4.057184219360352
    6. ' C' → logprob: -4.682184219360352
    7. '
' → logprob: -4.682184219360352
    8. 'cal' → logprob: -5.057184219360352
    9. ' ,' → logprob: -5.432184219360352
    10. 'T' → logprob: -5.807184219360352

Token 512: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.00909501314163208
    2. 'M' → logprob: -5.759095191955566
    3. 'K' → logprob: -6.259095191955566
    4. 'cal' → logprob: -6.884095191955566
    5. 't' → logprob: -7.259095191955566
    6. 'D' → logprob: -7.634095191955566
    7. ' C' → logprob: -7.884095191955566
    8. 'k' → logprob: -8.134095191955566
    9. 'T' → logprob: -8.509095191955566
    10. 'c' → logprob: -8.509095191955566

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8624749183654785
    2. '=' → logprob: -0.9874749183654785
    3. ',' → logprob: -1.6124749183654785
    4. 's' → logprob: -5.2374749183654785
    5. ' ,' → logprob: -8.48747444152832
    6. '   ' → logprob: -9.36247444152832
    7. '_list' → logprob: -9.61247444152832
    8. ' ' → logprob: -10.11247444152832
    9. '=[]' → logprob: -10.11247444152832
    10. '  ' → logprob: -10.36247444152832

Token 514: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018915070686489344
    2. ' int' → logprob: -6.376891613006592
    3. '[int' → logprob: -9.001891136169434
    4. 'list' → logprob: -10.376891136169434
    5. 'N' → logprob: -11.626891136169434
    6. ' ' → logprob: -12.251891136169434
    7. '[' → logprob: -12.876891136169434
    8. '[]' → logprob: -12.876891136169434
    9. 'float' → logprob: -13.001891136169434
    10. '0' → logprob: -13.376891136169434

Token 515: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.082895273109898e-05
    2. 'input' → logprob: -10.500030517578125
    3. '(' → logprob: -13.125030517578125
    4. '()' → logprob: -14.625030517578125
    5. ' (' → logprob: -15.000030517578125
    6. '(
' → logprob: -15.250030517578125
    7. '=input' → logprob: -16.125030517578125
    8. ' input' → logprob: -17.125030517578125
    9. ',input' → logprob: -17.625030517578125
    10. '()
' → logprob: -18.125030517578125

Token 516: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.17095868289470673
    2. '())' → logprob: -1.9209586381912231
    3. '()' → logprob: -5.170958518981934
    4. '()
' → logprob: -6.295958518981934
    5. ')' → logprob: -6.420958518981934
    6. ')
' → logprob: -6.545958518981934
    7. '())
' → logprob: -9.420958518981934
    8. ' ())
' → logprob: -12.545958518981934
    9. '(' → logprob: -13.420958518981934
    10. '())

' → logprob: -13.545958518981934

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08048956096172333
    2. 't' → logprob: -2.9554896354675293
    3. 'D' → logprob: -3.9554896354675293
    4. '	' → logprob: -6.955489635467529
    5. 'T' → logprob: -6.955489635467529
    6. ',' → logprob: -7.205489635467529
    7. ' toppings' → logprob: -7.330489635467529
    8. ' topping' → logprob: -7.455489635467529
    9. '        
' → logprob: -7.830489635467529
    10. 'd' → logprob: -7.830489635467529

Token 518: ' toppings' (ID: 135361)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6396492123603821
    2. 'D' → logprob: -1.3896491527557373
    3. 'cal' → logprob: -1.6396491527557373
    4. 'T' → logprob: -3.8896491527557373
    5. 'd' → logprob: -5.889649391174316
    6. 'c' → logprob: -6.639649391174316
    7. 'K' → logprob: -7.139649391174316
    8. 'return' → logprob: -7.514649391174316
    9. 'k' → logprob: -7.764649391174316
    10. 'top' → logprob: -7.889649391174316

Token 519: '_cal' (ID: 50948)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.733729898929596
    2. ' =' → logprob: -0.733729898929596
    3. '_cal' → logprob: -3.233729839324951
    4. 'cal' → logprob: -8.73373031616211
    5. '_prices' → logprob: -9.73373031616211
    6. '=[]' → logprob: -9.85873031616211
    7. '_' → logprob: -10.23373031616211
    8. '_c' → logprob: -11.23373031616211
    9. ' ' → logprob: -12.10873031616211
    10. 's' → logprob: -12.23373031616211

Token 520: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -4.36574100604048e-06
    2. 'or' → logprob: -12.750004768371582
    3. 'orie' → logprob: -14.500004768371582
    4. 'eries' → logprob: -15.125004768371582
    5. 'ries' → logprob: -16.000003814697266
    6. '=' → logprob: -16.375003814697266
    7. 's' → logprob: -16.500003814697266
    8. 'ORIES' → logprob: -16.750003814697266
    9. 'aries' → logprob: -16.875003814697266
    10. 'l' → logprob: -17.125003814697266

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759416818618774
    2. ' =' → logprob: -0.8259416818618774
    3. '=[]' → logprob: -13.950942039489746
    4. '=input' → logprob: -14.700942039489746
    5. '=list' → logprob: -14.825942039489746
    6. ' ' → logprob: -15.450942039489746
    7. 's' → logprob: -16.82594108581543
    8. ' ' → logprob: -16.82594108581543
    9. '=[' → logprob: -17.20094108581543
    10. ':' → logprob: -17.32594108581543

Token 522: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0382513664662838
    2. '[list' → logprob: -3.5382513999938965
    3. ' list' → logprob: -4.7882513999938965
    4. '[' → logprob: -9.038250923156738
    5. ' [' → logprob: -11.038250923156738
    6. '[m' → logprob: -13.663250923156738
    7. '[List' → logprob: -14.038250923156738
    8. '[int' → logprob: -15.038250923156738
    9. '[l' → logprob: -15.413250923156738
    10. '[s' → logprob: -16.163251876831055

Token 523: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.125
    3. '[int' → logprob: -16.625
    4. '   ' → logprob: -16.75
    5. ' int' → logprob: -17.0
    6. '<int' → logprob: -18.125
    7. 'C' → logprob: -18.875
    8. '(int' → logprob: -19.0
    9. '```' → logprob: -19.375
    10. '	int' → logprob: -20.125

Token 524: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000432695698691532
    2. 'input' → logprob: -7.75043249130249
    3. '(' → logprob: -13.750432968139648
    4. '()' → logprob: -14.250432968139648
    5. '(x' → logprob: -15.625432968139648
    6. '(
' → logprob: -17.62543296813965
    7. '=input' → logprob: -18.12543296813965
    8. ' input' → logprob: -18.37543296813965
    9. ',input' → logprob: -19.50043296813965
    10. '[input' → logprob: -19.62543296813965

Token 525: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000575432030018419
    2. '()' → logprob: -7.500575542449951
    3. ')' → logprob: -11.500575065612793
    4. '())
' → logprob: -12.125575065612793
    5. '().' → logprob: -12.500575065612793
    6. ' ())' → logprob: -13.375575065612793
    7. '()
' → logprob: -13.750575065612793
    8. '()]' → logprob: -14.500575065612793
    9. '(' → logprob: -16.37557601928711
    10. '())
' → logprob: -17.37557601928711

Token 526: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3310718536376953
    2. ' for' → logprob: -1.5810718536376953
    3. '()' → logprob: -2.5810718536376953
    4. ')' → logprob: -8.331071853637695
    5. '   ' → logprob: -8.956071853637695
    6. '	for' → logprob: -11.081071853637695
    7. ']' → logprob: -12.706071853637695
    8. ' ()' → logprob: -12.956071853637695
    9. '       ' → logprob: -13.081071853637695
    10. '    ' → logprob: -13.706071853637695

Token 527: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.297462171758525e-05
    2. ' _' → logprob: -10.375033378601074
    3. ' in' → logprob: -14.000033378601074
    4. '_i' → logprob: -14.750033378601074
    5. '_
' → logprob: -15.500033378601074
    6. '_range' → logprob: -16.250032424926758
    7. '_in' → logprob: -16.625032424926758
    8. ' range' → logprob: -17.750032424926758
    9. '_j' → logprob: -18.250032424926758
    10. 'i' → logprob: -18.375032424926758

Token 528: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.847109812544659e-05
    2. 'in' → logprob: -10.250048637390137
    3. ' range' → logprob: -11.250048637390137
    4. ' in' → logprob: -16.75004768371582
    5. '	range' → logprob: -18.37504768371582
    6. '(range' → logprob: -18.50004768371582
    7. '   ' → logprob: -19.12504768371582
    8. '  ' → logprob: -19.25004768371582
    9. ' ' → logprob: -19.37504768371582
    10. '_range' → logprob: -19.75004768371582

Token 529: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '	range' → logprob: -18.00007438659668
    4. 'rang' → logprob: -19.00007438659668
    5. 'r' → logprob: -20.12507438659668
    6. '(range' → logprob: -20.25007438659668
    7. 'ran' → logprob: -21.12507438659668
    8. '   ' → logprob: -21.37507438659668
    9. ' ' → logprob: -21.75007438659668
    10. '  ' → logprob: -22.12507438659668

Token 530: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004145949613302946
    2. '(C' → logprob: -5.504146099090576
    3. 'N' → logprob: -9.629145622253418
    4. 'C' → logprob: -14.254145622253418
    5. '(' → logprob: -14.379145622253418
    6. '(A' → logprob: -15.379145622253418
    7. '(n' → logprob: -15.879145622253418
    8. '(B' → logprob: -16.629146575927734
    9. '	N' → logprob: -16.879146575927734
    10. '(M' → logprob: -17.379146575927734

Token 531: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005256287753582001
    2. ']' → logprob: -5.255256175994873
    3. ')' → logprob: -11.380256652832031
    4. '()]' → logprob: -12.130256652832031
    5. ')]
' → logprob: -12.755256652832031
    6. '])' → logprob: -14.255256652832031
    7. ']
' → logprob: -14.505256652832031
    8. ' ]' → logprob: -14.505256652832031
    9. '       ' → logprob: -15.130256652832031
    10. '}]' → logprob: -15.380256652832031

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008952628704719245
    2. '	' → logprob: -7.8758955001831055
    3. 'return' → logprob: -8.500895500183105
    4. '   ' → logprob: -8.625895500183105
    5. '	return' → logprob: -9.875895500183105
    6. ' return' → logprob: -10.000895500183105
    7. '<|end|>' → logprob: -10.875895500183105
    8. '        
' → logprob: -12.375895500183105
    9. '	   ' → logprob: -13.000895500183105
    10. '     ' → logprob: -13.375895500183105

Token 533: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0067836930975317955
    2. '       ' → logprob: -5.006783485412598
    3. ' return' → logprob: -9.631783485412598
    4. '   ' → logprob: -13.506783485412598
    5. 'D' → logprob: -14.131783485412598
    6. '	return' → logprob: -15.381783485412598
    7. '        
' → logprob: -15.631783485412598
    8. '
' → logprob: -15.881783485412598
    9. 'eturn' → logprob: -17.381784439086914
    10. ' ' → logprob: -17.756784439086914

Token 534: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25267666578292847
    2. 'A' → logprob: -1.5026767253875732
    3. '(A' → logprob: -7.627676486968994
    4. '(N' → logprob: -8.377676963806152
    5. 'D' → logprob: -11.127676963806152
    6. ' A' → logprob: -12.377676963806152
    7. ' N' → logprob: -12.502676963806152
    8. '   ' → logprob: -12.502676963806152
    9. ' (' → logprob: -13.252676963806152
    10. '(D' → logprob: -14.002676963806152

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040457461727783084
    2. ',A' → logprob: -8.000404357910156
    3. ' ,' → logprob: -10.500404357910156
    4. ',N' → logprob: -10.875404357910156
    5. 'A' → logprob: -11.000404357910156
    6. ',
' → logprob: -12.875404357910156
    7. 'N' → logprob: -13.750404357910156
    8. ',C' → logprob: -14.625404357910156
    9. ',B' → logprob: -15.125404357910156
    10. '   ' → logprob: -15.250404357910156

Token 536: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003177952254191041
    2. ' A' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.378177642822266
    4. ' ' → logprob: -17.753177642822266
    5. '	A' → logprob: -18.253177642822266
    6. '    ' → logprob: -19.003177642822266
    7. '
' → logprob: -19.003177642822266
    8. '  ' → logprob: -19.503177642822266
    9. '       ' → logprob: -19.878177642822266
    10. ',A' → logprob: -20.878177642822266

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011827271664515138
    2. ' ,' → logprob: -7.376182556152344
    3. ',B' → logprob: -7.501182556152344
    4. 'B' → logprob: -13.126182556152344
    5. ',b' → logprob: -14.376182556152344
    6. ',C' → logprob: -15.126182556152344
    7. ',
' → logprob: -15.126182556152344
    8. '`,' → logprob: -15.751182556152344
    9. '```' → logprob: -16.251182556152344
    10. ' B' → logprob: -16.626182556152344

Token 538: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.029750484973192215
    2. ' B' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.40475082397461
    4. '	B' → logprob: -17.90475082397461
    5. ' ' → logprob: -18.27975082397461
    6. '       ' → logprob: -19.52975082397461
    7. 'b' → logprob: -20.02975082397461
    8. '    ' → logprob: -20.40475082397461
    9. ' ' → logprob: -20.90475082397461
    10. '  ' → logprob: -21.77975082397461

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062974002212285995
    2. ',C' → logprob: -5.256297588348389
    3. ' ,' → logprob: -6.881297588348389
    4. 'C' → logprob: -11.50629711151123
    5. ',
' → logprob: -11.63129711151123
    6. '   ' → logprob: -12.00629711151123
    7. ',c' → logprob: -12.75629711151123
    8. '
' → logprob: -13.63129711151123
    9. '<|end|>' → logprob: -13.63129711151123
    10. ',N' → logprob: -13.75629711151123

Token 540: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.157039049663581e-05
    2. ' C' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.875051498413086
    4. '       ' → logprob: -18.000051498413086
    5. 'c' → logprob: -18.875051498413086
    6. ' ' → logprob: -19.625051498413086
    7. '	C' → logprob: -20.125051498413086
    8. '
' → logprob: -20.625051498413086
    9. '[' → logprob: -20.750051498413086
    10. '    ' → logprob: -20.875051498413086

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032368937972933054
    2. ',t' → logprob: -6.003236770629883
    3. ' ,' → logprob: -7.253236770629883
    4. 't' → logprob: -10.503236770629883
    5. ',
' → logprob: -12.128236770629883
    6. '[' → logprob: -12.128236770629883
    7. ',p' → logprob: -13.003236770629883
    8. '<|end|>' → logprob: -13.128236770629883
    9. '   ' → logprob: -13.503236770629883
    10. '       ' → logprob: -13.503236770629883

Token 542: ' toppings' (ID: 135361)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008615042082965374
    2. ' toppings' → logprob: -4.758615016937256
    3. 'top' → logprob: -15.633615493774414
    4. 'tops' → logprob: -16.008615493774414
    5. ' t' → logprob: -16.258615493774414
    6. '	t' → logprob: -16.883615493774414
    7. 'tips' → logprob: -17.383615493774414
    8. '`t' → logprob: -17.633615493774414
    9. ' ' → logprob: -18.133615493774414
    10. ' topping' → logprob: -18.258615493774414

Token 543: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.007045690901577473
    2. 's' → logprob: -5.257045745849609
    3. '_s' → logprob: -7.382045745849609
    4. '_t' → logprob: -7.507045745849609
    5. '_' → logprob: -7.882045745849609
    6. 'cal' → logprob: -9.50704574584961
    7. '_c' → logprob: -10.13204574584961
    8. ' _' → logprob: -11.38204574584961
    9. '_top' → logprob: -11.38204574584961
    10. '```' → logprob: -11.50704574584961

Token 544: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -3.8889261304575484e-06
    2. 'or' → logprob: -12.625003814697266
    3. 'orie' → logprob: -14.625003814697266
    4. 'eries' → logprob: -16.625003814697266
    5. 'ORIES' → logprob: -17.125003814697266
    6. 'ries' → logprob: -17.625003814697266
    7. 's' → logprob: -18.250003814697266
    8. 'aries' → logprob: -18.375003814697266
    9. 'o' → logprob: -18.500003814697266
    10. 'ory' → logprob: -18.500003814697266

Token 545: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4362788200378418
    2. '<|end|>' → logprob: -1.3112788200378418
    3. 'def' → logprob: -3.186278820037842
    4. '#' → logprob: -3.811278820037842
    5. 'if' → logprob: -5.311278820037842
    6. '```' → logprob: -5.811278820037842
    7. '<|end|>' → logprob: -5.936278820037842
    8. 'pizza' → logprob: -5.936278820037842
    9. '
' → logprob: -6.436278820037842
    10. 'N' → logprob: -6.686278820037842

Token 546: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4127468466758728
    2. 'if' → logprob: -1.6627469062805176
    3. 'class' → logprob: -1.9127469062805176
    4. '```' → logprob: -7.162746906280518
    5. 'N' → logprob: -9.28774642944336
    6. '#' → logprob: -12.53774642944336
    7. 'n' → logprob: -12.78774642944336
    8. '
' → logprob: -14.03774642944336
    9. '``' → logprob: -14.03774642944336
    10. ' if' → logprob: -14.28774642944336

Token 547: ' Best' (ID: 6899)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.22744061052799225
    2. 'Pizza' → logprob: -1.727440595626831
    3. 'Solution' → logprob: -4.35244083404541
    4. 'Main' → logprob: -5.22744083404541
    5. 'Solver' → logprob: -6.22744083404541
    6. ' Output' → logprob: -6.22744083404541
    7. ' Pizza' → logprob: -7.10244083404541
    8. 'Runner' → logprob: -7.60244083404541
    9. 'Program' → logprob: -7.85244083404541
    10. 'Input' → logprob: -8.22744083404541

Token 548: 'Pizza' (ID: 91351)
  Prédit: 'Pizza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: -0.0003951648832298815
    2. 'P' → logprob: -8.500394821166992
    3. 'Solution' → logprob: -9.125394821166992
    4. 'Ratio' → logprob: -11.000394821166992
    5. 'Value' → logprob: -11.125394821166992
    6. 'Option' → logprob: -11.500394821166992
    7. 'Choice' → logprob: -11.625394821166992
    8. '_P' → logprob: -12.000394821166992
    9. 'Answer' → logprob: -12.250394821166992
    10. 'Price' → logprob: -13.125394821166992

Token 549: 'Solver' (ID: 70484)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0610841512680054
    2. ':' → logprob: -1.1860841512680054
    3. 'Selector' → logprob: -1.8110841512680054
    4. 'Finder' → logprob: -2.561084270477295
    5. 'Chooser' → logprob: -3.686084270477295
    6. 'Generator' → logprob: -3.686084270477295
    7. 'Builder' → logprob: -3.686084270477295
    8. 'Factory' → logprob: -3.811084270477295
    9. 'Calculator' → logprob: -5.561084270477295
    10. 'Picker' → logprob: -6.311084270477295

Token 550: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25195205211639404
    2. ':' → logprob: -1.501952052116394
    3. ':

' → logprob: -11.251952171325684
    4. '   ' → logprob: -12.501952171325684
    5. ':
' → logprob: -13.126952171325684
    6. '):
' → logprob: -13.501952171325684
    7. '():
' → logprob: -14.001952171325684
    8. '(P' → logprob: -14.376952171325684
    9. ' :
' → logprob: -14.626952171325684
    10. ':def' → logprob: -15.001952171325684

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021396710071712732
    2. 'def' → logprob: -6.752139568328857
    3. ' def' → logprob: -7.127139568328857
    4. 'class' → logprob: -9.127140045166016
    5. 'staticmethod' → logprob: -11.127140045166016
    6. '```' → logprob: -11.252140045166016
    7. 'classmethod' → logprob: -11.502140045166016
    8. ' ' → logprob: -12.002140045166016
    9. '<|end|>' → logprob: -12.502140045166016
    10. '  ' → logprob: -13.002140045166016

Token 552: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7117670774459839
    2. '@' → logprob: -1.4617670774459839
    3. 'def' (adapté à ' def') → logprob: -1.7117670774459839
    4. ' def' → logprob: -2.4617671966552734
    5. ' @' → logprob: -4.461767196655273
    6. 'staticmethod' → logprob: -10.711767196655273
    7. '@dat' → logprob: -13.586767196655273
    8. ' ' → logprob: -14.961767196655273
    9. '	def' → logprob: -15.211767196655273
    10. '@property' → logprob: -15.336767196655273

Token 553: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.24297861754894257
    2. 'init' → logprob: -2.117978572845459
    3. 'staticmethod' → logprob: -3.117978572845459
    4. '__' → logprob: -3.617978572845459
    5. ' def' → logprob: -3.992978572845459
    6. 'def' → logprob: -6.117978572845459
    7. ' init' → logprob: -6.492978572845459
    8. ' static' → logprob: -6.742978572845459
    9. 'static' → logprob: -7.492978572845459
    10. '_init' → logprob: -7.992978572845459

Token 554: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00617810245603323
    2. 'it' → logprob: -5.13117790222168
    3. 'staticmethod' → logprob: -9.00617790222168
    4. '__' → logprob: -9.75617790222168
    5. 'def' → logprob: -10.75617790222168
    6. 'int' → logprob: -11.75617790222168
    7. 'nit' → logprob: -11.75617790222168
    8. 'new' → logprob: -12.13117790222168
    9. 'iter' → logprob: -12.38117790222168
    10. '   ' → logprob: -12.38117790222168

Token 555: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0033357522916048765
    2. '(self' → logprob: -6.003335952758789
    3. '__(
' → logprob: -7.128335952758789
    4. '__' → logprob: -10.253335952758789
    5. '(' → logprob: -11.628335952758789
    6. 'self' → logprob: -12.253335952758789
    7. '_(' → logprob: -12.628335952758789
    8. '   ' → logprob: -13.503335952758789
    9. ' (' → logprob: -13.628335952758789
    10. '__((' → logprob: -14.003335952758789

Token 556: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011391390580683947
    2. '       ' → logprob: -9.625113487243652
    3. ' self' → logprob: -10.875113487243652
    4. '(self' → logprob: -11.500113487243652
    5. 'N' → logprob: -12.000113487243652
    6. 'A' → logprob: -12.625113487243652
    7. 'D' → logprob: -13.250113487243652
    8. '
' → logprob: -13.250113487243652
    9. '   ' → logprob: -13.625113487243652
    10. ',' → logprob: -13.875113487243652

Token 557: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7695332765579224
    2. ',' → logprob: -1.2695332765579224
    3. '(self' → logprob: -1.3945332765579224
    4. ' self' → logprob: -6.394533157348633
    5. '__(' → logprob: -6.394533157348633
    6. '       ' → logprob: -6.519533157348633
    7. ' (' → logprob: -6.894533157348633
    8. ',self' → logprob: -7.019533157348633
    9. '   ' → logprob: -7.144533157348633
    10. '(' → logprob: -9.269533157348633

Token 558: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8444881536415778e-05
    2. ' self' → logprob: -11.250028610229492
    3. '       ' → logprob: -11.375028610229492
    4. '   ' → logprob: -13.250028610229492
    5. 'D' → logprob: -13.875028610229492
    6. '(self' → logprob: -14.750028610229492
    7. 'N' → logprob: -15.125028610229492
    8. 'A' → logprob: -15.375028610229492
    9. 'd' → logprob: -15.625028610229492
    10. ',' → logprob: -16.875028610229492

Token 559: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029222125187516212
    2. '       ' → logprob: -4.779222011566162
    3. 'input' → logprob: -5.529222011566162
    4. 'def' → logprob: -5.654222011566162
    5. 'data' → logprob: -5.654222011566162
    6. 'pass' → logprob: -5.654222011566162
    7. '   ' → logprob: -6.029222011566162
    8. 'N' → logprob: -6.654222011566162
    9. 'd' → logprob: -7.279222011566162
    10. '
' → logprob: -7.779222011566162

Token 560: '.N' (ID: 4439)
  Prédit: '.factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factory' → logprob: -0.5473197102546692
    2. '.p' → logprob: -1.2973196506500244
    3. '.d' → logprob: -2.1723196506500244
    4. '.input' → logprob: -3.9223196506500244
    5. '.best' → logprob: -5.1723198890686035
    6. 'factory' → logprob: -5.7973198890686035
    7. '.n' → logprob: -7.2973198890686035
    8. '.inputs' → logprob: -7.4223198890686035
    9. 'pizza' → logprob: -7.6723198890686035
    10. '.N' → logprob: -7.7973198890686035

Token 561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14707417786121368
    2. ',' → logprob: -2.2720742225646973
    3. ' =' → logprob: -3.3970742225646973
    4. ',self' → logprob: -9.272073745727539
    5. ' ,' → logprob: -10.397073745727539
    6. '=None' → logprob: -10.647073745727539
    7. '<|end|>' → logprob: -10.772073745727539
    8. '=self' → logprob: -11.897073745727539
    9. 'self' → logprob: -11.897073745727539
    10. ' ' → logprob: -12.647073745727539

Token 562: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001363093382678926
    2. 'int' → logprob: -7.251363277435303
    3. ' ' → logprob: -7.376363277435303
    4. ' int' → logprob: -11.251362800598145
    5. 'None' → logprob: -11.626362800598145
    6. 'self' → logprob: -12.626362800598145
    7. ' None' → logprob: -14.126362800598145
    8. '  ' → logprob: -15.376362800598145
    9. '10' → logprob: -15.751362800598145
    10. '1' → logprob: -16.12636375427246

Token 563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004933410091325641
    2. 'self' → logprob: -8.375493049621582
    3. 'int' → logprob: -8.625493049621582
    4. 'None' → logprob: -9.500493049621582
    5. ' ' → logprob: -11.875493049621582
    6. 'N' → logprob: -15.500493049621582
    7. 'input' → logprob: -15.625493049621582
    8. ' None' → logprob: -16.0004940032959
    9. ' self' → logprob: -16.5004940032959
    10. '10' → logprob: -16.6254940032959

Token 564: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054834555834531784
    2. 'self' → logprob: -3.4298346042633057
    3. '
' → logprob: -4.929834365844727
    4. '   ' → logprob: -5.054834365844727
    5. ' self' → logprob: -5.304834365844727
    6. '<|end|>' → logprob: -6.554834365844727
    7. ' ' → logprob: -8.054834365844727
    8. ',' → logprob: -8.554834365844727
    9. '	self' → logprob: -8.929834365844727
    10. '        
' → logprob: -9.304834365844727

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02965085580945015
    2. 'self' → logprob: -3.654650926589966
    3. ' self' → logprob: -6.154650688171387
    4. '   ' → logprob: -7.279650688171387
    5. '<|end|>' → logprob: -8.404650688171387
    6. ' ' → logprob: -9.029650688171387
    7. '
' → logprob: -9.654650688171387
    8. 'def' → logprob: -9.904650688171387
    9. '	self' → logprob: -10.154650688171387
    10. ',' → logprob: -11.529650688171387

Token 566: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018046533223241568
    2. 'A' → logprob: -6.876804828643799
    3. '       ' → logprob: -7.251804828643799
    4. ' self' → logprob: -10.00180435180664
    5. '   ' → logprob: -11.37680435180664
    6. 'D' → logprob: -13.25180435180664
    7. 'def' → logprob: -13.25180435180664
    8. 'class' → logprob: -14.50180435180664
    9. '	self' → logprob: -14.62680435180664
    10. '           ' → logprob: -14.87680435180664

Token 567: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.13867530226707458
    2. '.d' → logprob: -2.1386752128601074
    3. '.D' → logprob: -4.638675212860107
    4. 'A' → logprob: -7.013675212860107
    5. '.B' → logprob: -8.263675689697266
    6. '.C' → logprob: -9.263675689697266
    7. '.factory' → logprob: -9.513675689697266
    8. '.cal' → logprob: -9.513675689697266
    9. 'class' → logprob: -9.763675689697266
    10. '.best' → logprob: -9.763675689697266

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04880979657173157
    2. ' =' → logprob: -3.048809766769409
    3. ',' → logprob: -8.548810005187988
    4. '<|end|>' → logprob: -10.923810005187988
    5. '   ' → logprob: -12.298810005187988
    6. ':' → logprob: -12.423810005187988
    7. ' ' → logprob: -14.048810005187988
    8. '=None' → logprob: -14.923810005187988
    9. ' ,' → logprob: -15.548810005187988
    10. '  ' → logprob: -15.923810005187988

Token 569: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815134845674038
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.51815128326416
    4. '<|end|>' → logprob: -14.76815128326416
    5. '=' → logprob: -15.51815128326416
    6. '
' → logprob: -16.580652236938477
    7. ' =' → logprob: -16.643152236938477
    8. '  ' → logprob: -16.705652236938477
    9. 'B' → logprob: -17.518152236938477
    10. '       ' → logprob: -17.768152236938477

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.500015258789062
    4. '=' → logprob: -18.125015258789062
    5. '<|end|>' → logprob: -19.000015258789062
    6. '       ' → logprob: -19.375015258789062
    7. ' =' → logprob: -19.750015258789062
    8. '  ' → logprob: -19.750015258789062
    9. '<|end|>' → logprob: -19.750015258789062
    10. '۰' → logprob: -20.000015258789062

Token 571: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2235727161169052
    2. 'self' → logprob: -2.2235727310180664
    3. ',' → logprob: -2.4735727310180664
    4. '   ' → logprob: -6.098572731018066
    5. '<|end|>' → logprob: -6.348572731018066
    6. '
' → logprob: -6.723572731018066
    7. ' self' → logprob: -7.348572731018066
    8. '=' → logprob: -7.723572731018066
    9. ',
' → logprob: -7.848572731018066
    10. '        
' → logprob: -8.098572731018066

Token 572: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07202443480491638
    2. '       ' → logprob: -2.697024345397949
    3. '   ' → logprob: -6.947024345397949
    4. ' self' → logprob: -7.322024345397949
    5. ',' → logprob: -8.57202434539795
    6. '<|end|>' → logprob: -9.32202434539795
    7. '	self' → logprob: -10.07202434539795
    8. '
' → logprob: -10.19702434539795
    9. ' ' → logprob: -10.82202434539795
    10. ',self' → logprob: -11.19702434539795

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016206118743866682
    2. ' self' → logprob: -9.375162124633789
    3. '       ' → logprob: -9.500162124633789
    4. 'B' → logprob: -13.875162124633789
    5. '   ' → logprob: -14.500162124633789
    6. '	self' → logprob: -14.750162124633789
    7. '
' → logprob: -15.875162124633789
    8. '0' → logprob: -16.50016212463379
    9. 'class' → logprob: -16.87516212463379
    10. 'b' → logprob: -17.25016212463379

Token 574: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.003677990287542343
    2. 'B' → logprob: -5.628677845001221
    3. '   ' → logprob: -10.003678321838379
    4. '.' → logprob: -11.378678321838379
    5. '.C' → logprob: -12.003678321838379
    6. '	B' → logprob: -12.878678321838379
    7. '.D' → logprob: -13.003678321838379
    8. '_B' → logprob: -13.253678321838379
    9. ' B' → logprob: -13.503678321838379
    10. '       ' → logprob: -13.753678321838379

Token 575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141977071762085
    2. ' =' → logprob: -1.7014198303222656
    3. '=
' → logprob: -13.076419830322266
    4. ',' → logprob: -13.451419830322266
    5. ' =
' → logprob: -13.826419830322266
    6. '   ' → logprob: -14.326419830322266
    7. ' ' → logprob: -14.951419830322266
    8. '<|end|>' → logprob: -14.951419830322266
    9. 'def' → logprob: -15.451419830322266
    10. '0' → logprob: -15.576419830322266

Token 576: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861528143286705
    2. ' ' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.883615493774414
    4. '  ' → logprob: -16.696115493774414
    5. '=' → logprob: -16.696115493774414
    6. '<|end|>' → logprob: -16.758615493774414
    7. '۰' → logprob: -17.508615493774414
    8. '
' → logprob: -17.633615493774414
    9. '1' → logprob: -18.008615493774414
    10. '```' → logprob: -18.071115493774414

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.062623977661133
    4. 'int' → logprob: -17.312623977661133
    5. '۰' → logprob: -17.687623977661133
    6. '=' → logprob: -17.937623977661133
    7. '  ' → logprob: -18.062623977661133
    8. '100' → logprob: -18.437623977661133
    9. '```' → logprob: -18.687623977661133
    10. ',' → logprob: -18.750123977661133

Token 578: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017262674868106842
    2. 'self' → logprob: -4.1422624588012695
    3. '
' → logprob: -7.6422624588012695
    4. '   ' → logprob: -8.01726245880127
    5. ' self' → logprob: -8.89226245880127
    6. ',' → logprob: -9.39226245880127
    7. '	' → logprob: -9.89226245880127
    8. '	self' → logprob: -10.01726245880127
    9. '<|end|>' → logprob: -10.39226245880127
    10. ' ' → logprob: -10.64226245880127

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038802288472652435
    2. 'self' → logprob: -3.2888023853302
    3. '   ' → logprob: -7.788802146911621
    4. ' self' → logprob: -8.163802146911621
    5. '	self' → logprob: -10.913802146911621
    6. '
' → logprob: -11.788802146911621
    7. '<|end|>' → logprob: -11.788802146911621
    8. ' ' → logprob: -11.788802146911621
    9. '	' → logprob: -12.288802146911621
    10. '           ' → logprob: -12.538802146911621

Token 580: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008498902898281813
    2. ' self' → logprob: -7.500849723815918
    3. '       ' → logprob: -8.250849723815918
    4. '0' → logprob: -10.625849723815918
    5. 'C' → logprob: -12.000849723815918
    6. '   ' → logprob: -12.875849723815918
    7. 'c' → logprob: -14.000849723815918
    8. 's' → logprob: -14.875849723815918
    9. '	self' → logprob: -14.875849723815918
    10. '
' → logprob: -15.000849723815918

Token 581: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.7137114405632019
    2. 'C' → logprob: -1.0887115001678467
    3. ' =' → logprob: -2.2137115001678467
    4. '=' → logprob: -3.0887115001678467
    5. '.' → logprob: -5.088711261749268
    6. 'class' → logprob: -5.213711261749268
    7. '_C' → logprob: -6.213711261749268
    8. '   ' → logprob: -6.213711261749268
    9. '=C' → logprob: -6.963711261749268
    10. ' C' → logprob: -8.088711738586426

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03365837410092354
    2. ' =' → logprob: -3.408658266067505
    3. '=
' → logprob: -12.658658027648926
    4. '<|end|>' → logprob: -12.783658027648926
    5. '   ' → logprob: -13.158658027648926
    6. '=[]' → logprob: -13.658658027648926
    7. ',' → logprob: -13.908658027648926
    8. '=None' → logprob: -13.908658027648926
    9. ' ' → logprob: -14.908658027648926
    10. ' =
' → logprob: -15.033658027648926

Token 583: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.258615493774414
    4. '<|end|>' → logprob: -16.508615493774414
    5. '  ' → logprob: -16.633615493774414
    6. '00' → logprob: -17.508615493774414
    7. '۰' → logprob: -17.696115493774414
    8. '=' → logprob: -18.008615493774414
    9. '[' → logprob: -18.696115493774414
    10. '<|end|>' → logprob: -18.883615493774414

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -19.500009536743164
    4. '[' → logprob: -20.125009536743164
    5. '[]' → logprob: -20.312509536743164
    6. 'int' → logprob: -20.437509536743164
    7. '00' → logprob: -20.437509536743164
    8. '=' → logprob: -20.875009536743164
    9. '   ' → logprob: -21.062509536743164
    10. '<|end|>' → logprob: -21.250009536743164

Token 585: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06314089894294739
    2. '
' → logprob: -3.563140869140625
    3. '   ' → logprob: -4.063140869140625
    4. 'self' → logprob: -5.063140869140625
    5. '	self' → logprob: -5.313140869140625
    6. '<|end|>' → logprob: -6.188140869140625
    7. 'def' → logprob: -7.063140869140625
    8. ' self' → logprob: -7.563140869140625
    9. ',' → logprob: -8.313140869140625
    10. '	def' → logprob: -8.563140869140625

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005055383313447237
    2. 'self' → logprob: -5.3800554275512695
    3. ' self' → logprob: -8.13005542755127
    4. '   ' → logprob: -9.25505542755127
    5. 'def' → logprob: -10.38005542755127
    6. '
' → logprob: -12.75505542755127
    7. '           ' → logprob: -13.00505542755127
    8. '	self' → logprob: -13.00505542755127
    9. '<|end|>' → logprob: -13.50505542755127
    10. ' ' → logprob: -13.75505542755127

Token 587: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006411884678527713
    2. '       ' → logprob: -7.500641345977783
    3. 'def' → logprob: -9.375640869140625
    4. ' self' → logprob: -13.375640869140625
    5. '   ' → logprob: -13.625640869140625
    6. '
' → logprob: -15.125640869140625
    7. '	self' → logprob: -15.250640869140625
    8. 's' → logprob: -17.125640869140625
    9. 't' → logprob: -17.125640869140625
    10. '(self' → logprob: -17.250640869140625

Token 588: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0005125218303874135
    2. '.p' → logprob: -8.87551212310791
    3. ' toppings' → logprob: -9.12551212310791
    4. '.' → logprob: -9.50051212310791
    5. '.best' → logprob: -9.87551212310791
    6. ' .' → logprob: -10.00051212310791
    7. 't' → logprob: -10.25051212310791
    8. '.s' → logprob: -11.12551212310791
    9. '.cal' → logprob: -11.37551212310791
    10. '.top' → logprob: -11.75051212310791

Token 589: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -0.0002703953068703413
    2. 'opping' → logprob: -8.25027084350586
    3. 'op' → logprob: -12.00027084350586
    4. 'opp' → logprob: -14.62527084350586
    5. 'oppins' → logprob: -14.62527084350586
    6. '_' → logprob: -14.62527084350586
    7. '_op' → logprob: -15.00027084350586
    8. 'appings' → logprob: -15.50027084350586
    9. 't' → logprob: -16.12527084350586
    10. 'ippings' → logprob: -16.37527084350586

Token 590: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.0015300977975130081
    2. ' =' → logprob: -7.001530170440674
    3. '=' → logprob: -7.876530170440674
    4. '=[]' → logprob: -8.626529693603516
    5. 'cal' → logprob: -10.126529693603516
    6. ':' → logprob: -11.876529693603516
    7. '=[]
' → logprob: -12.251529693603516
    8. '_' → logprob: -12.501529693603516
    9. '=_' → logprob: -14.626529693603516
    10. '_list' → logprob: -14.751529693603516

Token 591: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -1.1637164789135568e-05
    2. 'or' → logprob: -11.750011444091797
    3. 'eries' → logprob: -13.750011444091797
    4. 'orie' → logprob: -13.875011444091797
    5. 'ries' → logprob: -14.500011444091797
    6. 'aries' → logprob: -15.375011444091797
    7. 'o' → logprob: -15.500011444091797
    8. 'ORIES' → logprob: -16.125011444091797
    9. 's' → logprob: -16.500011444091797
    10. 'ory' → logprob: -16.625011444091797

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5928280353546143
    2. ' =' → logprob: -0.8428280353546143
    3. ':' → logprob: -4.092827796936035
    4. '=[]' → logprob: -10.092827796936035
    5. ' :' → logprob: -12.217827796936035
    6. ' ' → logprob: -12.592827796936035
    7. '   ' → logprob: -13.967827796936035
    8. ':list' → logprob: -14.217827796936035
    9. '=None' → logprob: -14.467827796936035
    10. '[:]' → logprob: -14.467827796936035

Token 593: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.3080716346157715e-05
    2. '[]

' → logprob: -11.500022888183594
    3. '[]
' → logprob: -11.750022888183594
    4. ' []' → logprob: -12.250022888183594
    5. '[]"' → logprob: -16.625022888183594
    6. '[' → logprob: -16.875022888183594
    7. '[]}' → logprob: -16.875022888183594
    8. '[])' → logprob: -18.625022888183594
    9. '=[]' → logprob: -19.750022888183594
    10. '[],' → logprob: -20.125022888183594

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025372445583343506
    2. 'def' → logprob: -4.150372505187988
    3. ' def' → logprob: -4.900372505187988
    4. '
' → logprob: -6.525372505187988
    5. '<|end|>' → logprob: -8.150372505187988
    6. '	def' → logprob: -10.150372505187988
    7. '    
' → logprob: -10.525372505187988
    8. ' ' → logprob: -11.275372505187988
    9. '<|end|>' → logprob: -12.025372505187988
    10. '  ' → logprob: -12.400372505187988

Token 595: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009287334396503866
    2. ' def' → logprob: -7.00092887878418
    3. '   ' → logprob: -11.00092887878418
    4. '
' → logprob: -14.87592887878418
    5. '	def' → logprob: -16.25092887878418
    6. '```' → logprob: -16.62592887878418
    7. 'Def' → logprob: -18.00092887878418
    8. ' ' → logprob: -19.50092887878418
    9. '@' → logprob: -19.62592887878418
    10. '-def' → logprob: -20.12592887878418

Token 596: ' load' (ID: 4700)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.8695751428604126
    2. 'read' → logprob: -0.9945751428604126
    3. ' read' → logprob: -2.494575023651123
    4. ' solve' → logprob: -2.619575023651123
    5. 'run' → logprob: -3.994575023651123
    6. ' run' → logprob: -3.994575023651123
    7. 'def' → logprob: -4.869575023651123
    8. ' def' → logprob: -5.369575023651123
    9. 'load' → logprob: -5.619575023651123
    10. ' load' → logprob: -6.744575023651123

Token 597: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.6873903274536133
    2. '_data' → logprob: -1.1873903274536133
    3. '(self' → logprob: -1.6873903274536133
    4. '_inputs' → logprob: -5.937390327453613
    5. 'self' → logprob: -6.312390327453613
    6. '(' → logprob: -6.937390327453613
    7. '_from' → logprob: -7.187390327453613
    8. '(
' → logprob: -8.312390327453613
    9. 'input' → logprob: -8.312390327453613
    10. '_self' → logprob: -8.562390327453613

Token 598: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010962257510982454
    2. '(' → logprob: -9.375109672546387
    3. ' (' → logprob: -10.750109672546387
    4. 'self' → logprob: -13.375109672546387
    5. '(
' → logprob: -14.000109672546387
    6. '   ' → logprob: -14.875109672546387
    7. '()' → logprob: -15.000109672546387
    8. 'from' → logprob: -16.12510871887207
    9. '       ' → logprob: -16.75010871887207
    10. ' self' → logprob: -17.12510871887207

Token 599: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6155277490615845
    2. '):
' → logprob: -1.3655277490615845
    3. '):' → logprob: -1.6155277490615845
    4. ',' → logprob: -5.990527629852295
    5. '(self' → logprob: -6.240527629852295
    6. ')' → logprob: -6.865527629852295
    7. ' self' → logprob: -9.865528106689453
    8. '   ' → logprob: -10.490528106689453
    9. '       ' → logprob: -11.365528106689453
    10. '):
' → logprob: -11.490528106689453

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004917914047837257
    2. 'self' → logprob: -7.750491619110107
    3. '   ' → logprob: -10.125492095947266
    4. ' self' → logprob: -11.375492095947266
    5. '        
' → logprob: -13.000492095947266
    6. 'def' → logprob: -13.250492095947266
    7. '(self' → logprob: -13.500492095947266
    8. '           ' → logprob: -14.000492095947266
    9. ',' → logprob: -14.375492095947266
    10. '    
' → logprob: -14.875492095947266

Token 601: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014071004465222359
    2. '       ' → logprob: -4.389070987701416
    3. 'N' → logprob: -7.014070987701416
    4. '(self' → logprob: -7.639070987701416
    5. ' self' → logprob: -9.139071464538574
    6. '(N' → logprob: -10.139071464538574
    7. '(
' → logprob: -10.889071464538574
    8. 'result' → logprob: -12.639071464538574
    9. 'data' → logprob: -13.014071464538574
    10. 'params' → logprob: -13.264071464538574

Token 602: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.001209518639370799
    2. '.t' → logprob: -8.251209259033203
    3. 't' → logprob: -8.626209259033203
    4. ' =' → logprob: -8.626209259033203
    5. 'N' → logprob: -8.751209259033203
    6. '=' → logprob: -9.001209259033203
    7. ' .' → logprob: -9.251209259033203
    8. '.A' → logprob: -9.501209259033203
    9. '.' → logprob: -10.251209259033203
    10. '=N' → logprob: -11.126209259033203

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013095269969198853
    2. ',self' → logprob: -9.000130653381348
    3. ' ,' → logprob: -12.125130653381348
    4. 'self' → logprob: -13.875130653381348
    5. ',A' → logprob: -14.125130653381348
    6. ',
' → logprob: -15.375130653381348
    7. ',\
' → logprob: -16.500131607055664
    8. ' self' → logprob: -17.625131607055664
    9. '=' → logprob: -17.625131607055664
    10. '‌,' → logprob: -17.750131607055664

Token 604: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1427527666091919
    2. 'self' → logprob: -2.0177526473999023
    3. '<|end|>' → logprob: -9.517752647399902
    4. ' ' → logprob: -13.267752647399902
    5. '	self' → logprob: -13.892752647399902
    6. '(self' → logprob: -14.892752647399902
    7. '=self' → logprob: -15.392752647399902
    8. 'Self' → logprob: -15.392752647399902
    9. '  ' → logprob: -15.892752647399902
    10. '_self' → logprob: -16.39275360107422

Token 605: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -2.4391956685576588e-05
    2. '.' → logprob: -11.250024795532227
    3. 'A' → logprob: -11.500024795532227
    4. '.N' → logprob: -14.625024795532227
    5. ' .' → logprob: -15.125024795532227
    6. '.B' → logprob: -15.875024795532227
    7. '.C' → logprob: -16.000024795532227
    8. '.А' → logprob: -17.250024795532227
    9. 'N' → logprob: -18.375024795532227
    10. '.I' → logprob: -18.500024795532227

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003171121352352202
    2. ' ,' → logprob: -8.125317573547363
    3. '=' → logprob: -10.875317573547363
    4. ' =' → logprob: -14.000317573547363
    5. ',self' → logprob: -14.375317573547363
    6. '<|end|>' → logprob: -14.500317573547363
    7. '‌,' → logprob: -16.625316619873047
    8. ' ' → logprob: -17.000316619873047
    9. ',
' → logprob: -17.125316619873047
    10. ',\
' → logprob: -17.500316619873047

Token 607: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0487600676715374
    2. ' self' → logprob: -3.048760175704956
    3. '<|end|>' → logprob: -8.673760414123535
    4. ' ' → logprob: -14.798760414123535
    5. '=self' → logprob: -14.923760414123535
    6. '	self' → logprob: -15.048760414123535
    7. '(self' → logprob: -15.423760414123535
    8. '[self' → logprob: -16.29875946044922
    9. '<|end|>' → logprob: -16.54875946044922
    10. ',self' → logprob: -16.67375946044922

Token 608: '.B' (ID: 2611)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6932992935180664
    2. '.B' → logprob: -0.6932992935180664
    3. ',' → logprob: -9.193299293518066
    4. ',B' → logprob: -10.443299293518066
    5. ' B' → logprob: -11.443299293518066
    6. '_B' → logprob: -12.318299293518066
    7. '=B' → logprob: -13.068299293518066
    8. '	B' → logprob: -13.818299293518066
    9. '.' → logprob: -14.443299293518066
    10. '=' → logprob: -14.443299293518066

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.27099974633893e-05
    2. ' ,' → logprob: -11.750012397766113
    3. ',self' → logprob: -12.750012397766113
    4. 'self' → logprob: -13.500012397766113
    5. '=' → logprob: -15.375012397766113
    6. ',
' → logprob: -16.37501335144043
    7. ' self' → logprob: -17.75001335144043
    8. '_,' → logprob: -18.25001335144043
    9. ' =' → logprob: -18.62501335144043
    10. ',\
' → logprob: -19.12501335144043

Token 610: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12692894041538239
    2. ' self' → logprob: -2.1269290447235107
    3. '	self' → logprob: -15.37692928314209
    4. '<|end|>' → logprob: -15.50192928314209
    5. ',self' → logprob: -15.62692928314209
    6. '=self' → logprob: -15.87692928314209
    7. '(self' → logprob: -16.751928329467773
    8. '   ' → logprob: -17.126928329467773
    9. '       ' → logprob: -17.376928329467773
    10. '  ' → logprob: -17.501928329467773

Token 611: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.016234830021858215
    2. 'C' → logprob: -4.141234874725342
    3. ',C' → logprob: -8.641234397888184
    4. ',' → logprob: -11.016234397888184
    5. ' C' → logprob: -13.641234397888184
    6. '_C' → logprob: -13.641234397888184
    7. '=C' → logprob: -13.641234397888184
    8. 't' → logprob: -13.891234397888184
    9. ' ' → logprob: -14.266234397888184
    10. '	C' → logprob: -14.516234397888184

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.436450636712834e-05
    2. ' ,' → logprob: -9.750094413757324
    3. ',self' → logprob: -10.250094413757324
    4. ',
' → logprob: -15.375094413757324
    5. 'self' → logprob: -15.375094413757324
    6. ',\
' → logprob: -16.125093460083008
    7. '=' → logprob: -16.750093460083008
    8. '‌,' → logprob: -17.625093460083008
    9. ' =' → logprob: -17.875093460083008
    10. ' self' → logprob: -17.875093460083008

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889000326395035
    2. ' self' → logprob: -2.578890085220337
    3. '	self' → logprob: -16.328889846801758
    4. '(self' → logprob: -16.828889846801758
    5. '=self' → logprob: -17.328889846801758
    6. '       ' → logprob: -17.953889846801758
    7. '[self' → logprob: -18.328889846801758
    8. '_self' → logprob: -18.578889846801758
    9. ' ' → logprob: -18.703889846801758
    10. 'Self' → logprob: -18.828889846801758

Token 614: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -7.703443770878948e-06
    2. 't' → logprob: -12.750007629394531
    3. ' toppings' → logprob: -13.000007629394531
    4. ' .' → logprob: -13.625007629394531
    5. '.' → logprob: -14.000007629394531
    6. 'C' → logprob: -16.87500762939453
    7. '   ' → logprob: -17.00000762939453
    8. '.T' → logprob: -17.25000762939453
    9. 'T' → logprob: -17.50000762939453
    10. 's' → logprob: -17.62500762939453

Token 615: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -0.00014132341311778873
    2. 'pp' → logprob: -9.750141143798828
    3. 'op' → logprob: -10.875141143798828
    4. 'p' → logprob: -11.000141143798828
    5. 'opp' → logprob: -11.875141143798828
    6. 'opping' → logprob: -12.125141143798828
    7. 'appings' → logprob: -12.125141143798828
    8. 't' → logprob: -12.750141143798828
    9. 'innings' → logprob: -13.125141143798828
    10. '_p' → logprob: -13.125141143798828

Token 616: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -4.60414821645827e-06
    2. 'cal' → logprob: -12.375004768371582
    3. '_c' → logprob: -15.125004768371582
    4. '_' → logprob: -16.875003814697266
    5. '	cal' → logprob: -17.375003814697266
    6. 'Cal' → logprob: -18.375003814697266
    7. '-cal' → logprob: -18.500003814697266
    8. '=' → logprob: -18.750003814697266
    9. '.cal' → logprob: -18.875003814697266
    10. 'Calories' → logprob: -19.500003814697266

Token 617: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -1.3306015716807451e-05
    2. 'or' → logprob: -12.50001335144043
    3. 'eries' → logprob: -12.50001335144043
    4. 'ries' → logprob: -13.12501335144043
    5. 'orie' → logprob: -13.50001335144043
    6. 'ores' → logprob: -14.12501335144043
    7. 'aries' → logprob: -14.75001335144043
    8. 'ory' → logprob: -14.87501335144043
    9. 'ORIES' → logprob: -15.50001335144043
    10. 'ies' → logprob: -15.87501335144043

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. ' ' → logprob: -15.200939178466797
    4. ' =
' → logprob: -17.825939178466797
    5. '    ' → logprob: -18.200939178466797
    6. '=self' → logprob: -18.825939178466797
    7. '=
' → logprob: -18.950939178466797
    8. '   ' → logprob: -19.075939178466797
    9. '<|end|>' → logprob: -19.325939178466797
    10. ' ' → logprob: -19.450939178466797

Token 619: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.004078401252627373
    2. ' Input' → logprob: -5.504078388214111
    3. '	Input' → logprob: -18.254077911376953
    4. '_Input' → logprob: -19.629077911376953
    5. '_input' → logprob: -20.629077911376953
    6. '<Input' → logprob: -20.879077911376953
    7. ' ' → logprob: -21.379077911376953
    8. 'input' → logprob: -21.629077911376953
    9. '\Input' → logprob: -21.629077911376953
    10. '   ' → logprob: -21.629077911376953

Token 620: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'reader' → logprob: -17.625
    3. '.Reader' → logprob: -18.875
    4. '_reader' → logprob: -19.75
    5. ' Reader' → logprob: -20.375
    6. 'Readers' → logprob: -21.375
    7. 'Receiver' → logprob: -22.375
    8. 'Writer' → logprob: -22.375
    9. '-reader' → logprob: -22.375
    10. 'Read' → logprob: -23.125

Token 621: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -9.114600834436715e-05
    2. '.' → logprob: -9.625091552734375
    3. '.readline' → logprob: -10.750091552734375
    4. '.readlines' → logprob: -13.000091552734375
    5. '().' → logprob: -14.375091552734375
    6. ' .' → logprob: -14.750091552734375
    7. '.imread' → logprob: -15.375091552734375
    8. '.Read' → logprob: -17.250091552734375
    9. '.load' → logprob: -17.500091552734375
    10. '.decode' → logprob: -18.375091552734375

Token 622: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0280383548888494e-06
    2. '_inputs' → logprob: -14.500000953674316
    3. '_' → logprob: -16.000001907348633
    4. '_output' → logprob: -16.375001907348633
    5. ' _' → logprob: -16.500001907348633
    6. '_in' → logprob: -16.625001907348633
    7. '```' → logprob: -17.625001907348633
    8. '
' → logprob: -19.000001907348633
    9. '_Input' → logprob: -19.000001907348633
    10. '_code' → logprob: -19.250001907348633

Token 623: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00035786881926469505
    2. '()
' → logprob: -8.000357627868652
    3. '()

' → logprob: -10.875357627868652
    4. '()


' → logprob: -13.500357627868652
    5. '()`' → logprob: -14.125357627868652
    6. ' ()' → logprob: -15.000357627868652
    7. '_input' → logprob: -15.250357627868652
    8. '()
' → logprob: -15.375357627868652
    9. '()]' → logprob: -15.875357627868652
    10. '()\' → logprob: -16.37535858154297

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011485133320093155
    2. 'def' → logprob: -4.8864850997924805
    3. ' def' → logprob: -6.1364850997924805
    4. '<|end|>' → logprob: -7.0114850997924805
    5. '
' → logprob: -7.3864850997924805
    6. '    
' → logprob: -9.38648509979248
    7. '<|end|>' → logprob: -9.88648509979248
    8. '```' → logprob: -10.63648509979248
    9. ' ' → logprob: -11.88648509979248
    10. '	def' → logprob: -11.88648509979248

Token 625: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002441741817165166
    2. ' def' → logprob: -8.500244140625
    3. '   ' → logprob: -10.125244140625
    4. '
' → logprob: -14.500244140625
    5. '	def' → logprob: -15.875244140625
    6. '<|end|>' → logprob: -19.125244140625
    7. '```' → logprob: -19.500244140625
    8. '    
' → logprob: -19.500244140625
    9. '

' → logprob: -20.000244140625
    10. ' ' → logprob: -20.000244140625

Token 626: ' solve' (ID: 17722)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5468356609344482
    2. 'def' → logprob: -1.0468356609344482
    3. ' solve' → logprob: -3.7968356609344482
    4. 'solve' → logprob: -3.7968356609344482
    5. ' run' → logprob: -4.171835899353027
    6. 'run' → logprob: -5.546835899353027
    7. ' create' → logprob: -5.796835899353027
    8. 'create' → logprob: -6.296835899353027
    9. '
' → logprob: -7.796835899353027
    10. 'generate' → logprob: -9.171835899353027

Token 627: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.5577775128767826e-06
    2. 'self' → logprob: -13.125005722045898
    3. '(' → logprob: -13.375005722045898
    4. '(
' → logprob: -14.375005722045898
    5. '   ' → logprob: -14.625005722045898
    6. ' (' → logprob: -14.875005722045898
    7. '()' → logprob: -15.625005722045898
    8. '(s' → logprob: -15.875005722045898
    9. '
' → logprob: -16.1250057220459
    10. ' self' → logprob: -16.5000057220459

Token 628: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001029000268317759
    2. '):
' → logprob: -7.876029014587402
    3. 'self' → logprob: -7.876029014587402
    4. '):' → logprob: -8.251029014587402
    5. ')->' → logprob: -12.751029014587402
    6. ' )' → logprob: -12.751029014587402
    7. '   ' → logprob: -13.876029014587402
    8. '(self' → logprob: -14.126029014587402
    9. '):

' → logprob: -15.751029014587402
    10. '       ' → logprob: -15.876029014587402

Token 629: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002364467130973935
    2. '   ' → logprob: -7.377364635467529
    3. '       ' → logprob: -7.627364635467529
    4. ' ->' → logprob: -7.752364635467529
    5. '->' → logprob: -7.877364635467529
    6. ':' → logprob: -8.627364158630371
    7. 'self' → logprob: -9.127364158630371
    8. '(' → logprob: -9.252364158630371
    9. ':
' → logprob: -10.502364158630371
    10. ' self' → logprob: -11.377364158630371

Token 630: ' int' (ID: 677)
  Prédit: 'Pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: -0.033266060054302216
    2. 'None' → logprob: -4.158266067504883
    3. ' Pizza' → logprob: -4.908266067504883
    4. 'int' → logprob: -4.908266067504883
    5. ' None' → logprob: -7.158266067504883
    6. 'float' → logprob: -7.283266067504883
    7. 'tuple' → logprob: -8.533266067504883
    8. ' int' → logprob: -9.033266067504883
    9. 'str' → logprob: -9.033266067504883
    10. ' ' → logprob: -9.033266067504883

Token 631: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23163387179374695
    2. '       ' → logprob: -2.7316339015960693
    3. ':' → logprob: -2.9816339015960693
    4. '(self' → logprob: -3.3566339015960693
    5. '   ' → logprob: -3.4816339015960693
    6. '():
' → logprob: -3.7316339015960693
    7. 'self' → logprob: -7.73163366317749
    8. '):
' → logprob: -7.85663366317749
    9. '():' → logprob: -8.606634140014648
    10. '(' → logprob: -9.231634140014648

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020270596724003553
    2. 'd' → logprob: -8.625203132629395
    3. ' dough' → logprob: -11.750203132629395
    4. '   ' → logprob: -11.875203132629395
    5. 'pizza' → logprob: -12.375203132629395
    6. 'self' → logprob: -13.250203132629395
    7. 'p' → logprob: -13.625203132629395
    8. 'D' → logprob: -15.500203132629395
    9. 'cal' → logprob: -15.625203132629395
    10. '           ' → logprob: -16.000202178955078

Token 633: ' dough' (ID: 41613)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.056301746517419815
    2. ' dough' → logprob: -3.4313018321990967
    3. '       ' → logprob: -3.8063018321990967
    4. 'best' → logprob: -9.681302070617676
    5. '   ' → logprob: -10.681302070617676
    6. 'base' → logprob: -10.806302070617676
    7. ' d' → logprob: -11.306302070617676
    8. '#' → logprob: -11.681302070617676
    9. ' best' → logprob: -11.931302070617676
    10. ' base' → logprob: -12.056302070617676

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31368064880371094
    2. '=' → logprob: -1.313680648803711
    3. '=D' → logprob: -7.813680648803711
    4. 'D' → logprob: -12.063680648803711
    5. 'd' → logprob: -12.063680648803711
    6. '=d' → logprob: -13.938680648803711
    7. ' ' → logprob: -14.188680648803711
    8. '   ' → logprob: -14.813680648803711
    9. 'cal' → logprob: -15.938680648803711
    10. '_d' → logprob: -15.938680648803711

Token 635: ' Dough' (ID: 164957)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00011117222311440855
    2. ' Dough' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.75011157989502
    4. '	D' → logprob: -14.37511157989502
    5. ' ' → logprob: -15.12511157989502
    6. ' D' → logprob: -15.62511157989502
    7. 'Pizza' → logprob: -17.000110626220703
    8. ' dough' → logprob: -17.125110626220703
    9. '  ' → logprob: -17.375110626220703
    10. 'Dish' → logprob: -18.250110626220703

Token 636: '(cal' (ID: 92785)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0802738870552275e-05
    2. '(cal' → logprob: -12.25001049041748
    3. '(' → logprob: -12.62501049041748
    4. 'self' → logprob: -13.50001049041748
    5. '(C' → logprob: -15.00001049041748
    6. '(B' → logprob: -15.00001049041748
    7. '(
' → logprob: -15.62501049041748
    8. 'cal' → logprob: -15.75001049041748
    9. '=self' → logprob: -15.75001049041748
    10. '(A' → logprob: -16.625011444091797

Token 637: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -5.9153885558771435e-06
    2. 'or' → logprob: -12.500005722045898
    3. 'ries' → logprob: -14.875005722045898
    4. 'orie' → logprob: -14.875005722045898
    5. 'ORIES' → logprob: -14.875005722045898
    6. '=' → logprob: -15.000005722045898
    7. 'eries' → logprob: -15.125005722045898
    8. 'aries' → logprob: -15.625005722045898
    9. 'ory' → logprob: -16.0000057220459
    10. '```' → logprob: -16.6250057220459

Token 638: '=self' (ID: 16945)
  Prédit: '=self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=self' → logprob: -0.008772219531238079
    2. 'self' → logprob: -5.008772373199463
    3. '=' → logprob: -6.258772373199463
    4. ' self' → logprob: -9.383771896362305
    5. ' =' → logprob: -10.008771896362305
    6. '=
' → logprob: -12.258771896362305
    7. '(self' → logprob: -12.883771896362305
    8. '	self' → logprob: -13.758771896362305
    9. ' ' → logprob: -13.883771896362305
    10. '   ' → logprob: -14.258771896362305

Token 639: '.C' (ID: 2010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19646155834197998
    2. '=self' → logprob: -2.5714616775512695
    3. 'C' → logprob: -3.1964616775512695
    4. 'A' → logprob: -3.5714616775512695
    5. 'B' → logprob: -4.0714616775512695
    6. '=A' → logprob: -5.1964616775512695
    7. '=B' → logprob: -5.6964616775512695
    8. ' self' → logprob: -6.1964616775512695
    9. '=C' → logprob: -6.1964616775512695
    10. '=' → logprob: -6.3214616775512695

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014122584834694862
    2. ' ,' → logprob: -6.626412391662598
    3. '   ' → logprob: -10.126412391662598
    4. 'price' → logprob: -10.751412391662598
    5. ' price' → logprob: -11.376412391662598
    6. ',
' → logprob: -11.751412391662598
    7. ' +' → logprob: -13.376412391662598
    8. '+' → logprob: -14.501412391662598
    9. '       ' → logprob: -14.876412391662598
    10. ' ' → logprob: -15.001412391662598

Token 641: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.4740881323814392
    2. ' price' → logprob: -0.9740881323814392
    3. '       ' → logprob: -12.224087715148926
    4. '	price' → logprob: -12.849087715148926
    5. '   ' → logprob: -13.224087715148926
    6. 'Price' → logprob: -14.349087715148926
    7. '           ' → logprob: -15.224087715148926
    8. '    ' → logprob: -15.724087715148926
    9. ')' → logprob: -15.974087715148926
    10. ' ' → logprob: -16.224088668823242

Token 642: '=self' (ID: 16945)
  Prédit: '=self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=self' → logprob: -0.012875473126769066
    2. 'self' → logprob: -4.887875556945801
    3. '=' → logprob: -5.262875556945801
    4. ' self' → logprob: -9.7628755569458
    5. ' =' → logprob: -11.5128755569458
    6. ')' → logprob: -13.7628755569458
    7. '=
' → logprob: -13.7628755569458
    8. '	self' → logprob: -14.0128755569458
    9. '
' → logprob: -14.3878755569458
    10. '=s' → logprob: -14.5128755569458

Token 643: '.A' (ID: 1336)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029987666755914688
    2. 'B' → logprob: -3.7799875736236572
    3. 'A' → logprob: -5.529987812042236
    4. ' self' → logprob: -6.154987812042236
    5. '=self' → logprob: -7.654987812042236
    6. '=B' → logprob: -10.029987335205078
    7. '.B' → logprob: -10.779987335205078
    8. ' B' → logprob: -11.029987335205078
    9. '(self' → logprob: -11.404987335205078
    10. '1' → logprob: -11.529987335205078

Token 644: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5232822895050049
    2. ')
' → logprob: -0.8982822895050049
    3. ')
' → logprob: -9.773282051086426
    4. ',' → logprob: -10.398282051086426
    5. ')

' → logprob: -10.398282051086426
    6. ' )
' → logprob: -10.898282051086426
    7. '   ' → logprob: -11.523282051086426
    8. ' )' → logprob: -12.148282051086426
    9. '       ' → logprob: -12.523282051086426
    10. '),' → logprob: -13.898282051086426

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038844142109155655
    2. 'factory' → logprob: -3.788844108581543
    3. ' factory' → logprob: -4.538844108581543
    4. 'pizza' → logprob: -6.163844108581543
    5. ' pizza' → logprob: -6.538844108581543
    6. '   ' → logprob: -7.413844108581543
    7. 'pf' → logprob: -8.288844108581543
    8. 'f' → logprob: -9.163844108581543
    9. 'p' → logprob: -9.788844108581543
    10. 'fact' → logprob: -10.163844108581543

Token 646: ' factory' (ID: 14560)
  Prédit: 'factory'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factory' (adapté à ' factory') → logprob: -0.2633136808872223
    2. ' factory' → logprob: -1.5133136510849
    3. 'pizza' → logprob: -4.8883137702941895
    4. ' pizza' → logprob: -5.8883137702941895
    5. 'pf' → logprob: -7.3883137702941895
    6. 'best' → logprob: -8.638313293457031
    7. ' best' → logprob: -9.138313293457031
    8. ' pf' → logprob: -10.263313293457031
    9. '   ' → logprob: -10.763313293457031
    10. '       ' → logprob: -11.513313293457031

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602245420217514
    2. '=' → logprob: -1.9102245569229126
    3. ' ' → logprob: -16.03522491455078
    4. 'Pizza' → logprob: -16.78522491455078
    5. '.' → logprob: -17.03522491455078
    6. ' =
' → logprob: -17.03522491455078
    7. '<|end|>' → logprob: -17.03522491455078
    8. '   ' → logprob: -17.16022491455078
    9. '_factory' → logprob: -17.41022491455078
    10. '  ' → logprob: -17.41022491455078

Token 648: ' Pizza' (ID: 48892)
  Prédit: 'Pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: -0.014163863845169544
    2. ' Pizza' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. '	P' → logprob: -16.889163970947266
    5. 'Pie' → logprob: -17.514163970947266
    6. 'P' → logprob: -17.639163970947266
    7. ' ' → logprob: -17.764163970947266
    8. ' pizza' → logprob: -18.889163970947266
    9. '       ' → logprob: -19.139163970947266
    10. 'Poker' → logprob: -19.764163970947266

Token 649: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -7.896309739408025e-07
    2. 'factory' → logprob: -14.500000953674316
    3. 'Factor' → logprob: -15.500000953674316
    4. 'Fact' → logprob: -16.375
    5. '_factory' → logprob: -18.5
    6. 'Pizza' → logprob: -18.75
    7. 'actory' → logprob: -19.625
    8. 'Component' → logprob: -20.375
    9. '.Factory' → logprob: -20.625
    10. '(factory' → logprob: -20.625

Token 650: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.0206720617134124e-05
    2. '(
' → logprob: -12.25001049041748
    3. 'd' → logprob: -12.75001049041748
    4. '(' → logprob: -13.12501049041748
    5. '(D' → logprob: -14.75001049041748
    6. '       ' → logprob: -16.625009536743164
    7. '(
' → logprob: -18.125009536743164
    8. 'D' → logprob: -18.250009536743164
    9. '	d' → logprob: -19.250009536743164
    10. '(b' → logprob: -19.375009536743164

Token 651: 'ough' (ID: 1870)
  Prédit: 'ough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ough' → logprob: -0.0014421383384615183
    2. 'd' → logprob: -8.251441955566406
    3. 'augh' → logprob: -8.376441955566406
    4. '=' → logprob: -8.376441955566406
    5. 'o' → logprob: -9.126441955566406
    6. 'ugh' → logprob: -9.126441955566406
    7. '   ' → logprob: -9.501441955566406
    8. '```' → logprob: -9.501441955566406
    9. '=d' → logprob: -9.501441955566406
    10. 'ought' → logprob: -10.001441955566406

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08000867813825607
    2. '=d' → logprob: -2.5800087451934814
    3. '=' → logprob: -7.455008506774902
    4. ',d' → logprob: -7.955008506774902
    5. '=D' → logprob: -9.205008506774902
    6. ' ,' → logprob: -9.830008506774902
    7. 'd' → logprob: -11.205008506774902
    8. ',
' → logprob: -11.580008506774902
    9. ' =' → logprob: -12.330008506774902
    10. '(d' → logprob: -13.205008506774902

Token 653: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06412716209888458
    2. 'B' → logprob: -3.064127206802368
    3. 't' → logprob: -4.564126968383789
    4. ' self' → logprob: -5.439126968383789
    5. 'price' → logprob: -7.689126968383789
    6. ' B' → logprob: -8.939126968383789
    7. '   ' → logprob: -11.189126968383789
    8. ' t' → logprob: -11.564126968383789
    9. 'b' → logprob: -11.689126968383789
    10. '
' → logprob: -12.189126968383789

Token 654: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.002814982086420059
    2. 'B' → logprob: -5.877814769744873
    3. '.' → logprob: -11.627815246582031
    4. ' B' → logprob: -14.627815246582031
    5. 't' → logprob: -15.502815246582031
    6. ' .' → logprob: -15.877815246582031
    7. '	B' → logprob: -15.877815246582031
    8. 'price' → logprob: -16.37781524658203
    9. '=B' → logprob: -16.62781524658203
    10. ',B' → logprob: -17.50281524658203

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019424250058364123
    2. ' ,' → logprob: -8.625194549560547
    3. ',self' → logprob: -11.750194549560547
    4. ',
' → logprob: -13.000194549560547
    5. '   ' → logprob: -13.625194549560547
    6. ')' → logprob: -14.125194549560547
    7. '       ' → logprob: -14.125194549560547
    8. 'self' → logprob: -14.375194549560547
    9. ' ' → logprob: -15.625194549560547
    10. '  ' → logprob: -15.875194549560547

Token 656: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04304669052362442
    2. ' self' → logprob: -3.168046712875366
    3. '           ' → logprob: -11.043046951293945
    4. '       ' → logprob: -11.293046951293945
    5. '[self' → logprob: -12.043046951293945
    6. '   ' → logprob: -12.293046951293945
    7. ' ' → logprob: -12.918046951293945
    8. '	self' → logprob: -13.168046951293945
    9. '          ' → logprob: -14.418046951293945
    10. '         ' → logprob: -14.543046951293945

Token 657: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00016146517009474337
    2. 't' → logprob: -8.875161170959473
    3. ' toppings' → logprob: -10.875161170959473
    4. '.' → logprob: -13.250161170959473
    5. '	t' → logprob: -14.750161170959473
    6. ' .' → logprob: -16.00016212463379
    7. '_t' → logprob: -16.37516212463379
    8. 'T' → logprob: -16.50016212463379
    9. ' ' → logprob: -17.25016212463379
    10. '.top' → logprob: -17.50016212463379

Token 658: 'oppings' (ID: 167500)
  Prédit: 'oppings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oppings' → logprob: -5.512236498361744e-07
    2. 'op' → logprob: -15.625000953674316
    3. 'opp' → logprob: -16.375
    4. 'appings' → logprob: -16.625
    5. 'opping' → logprob: -16.625
    6. 'oppins' → logprob: -17.25
    7. 'ippings' → logprob: -18.125
    8. 'pp' → logprob: -18.625
    9. 'innings' → logprob: -18.75
    10. 'o' → logprob: -20.0

Token 659: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -2.1008713702030946e-06
    2. 'cal' → logprob: -13.125001907348633
    3. '_c' → logprob: -17.375001907348633
    4. '	cal' → logprob: -19.125001907348633
    5. '.cal' → logprob: -19.625001907348633
    6. '_' → logprob: -19.750001907348633
    7. '_CAL' → logprob: -20.125001907348633
    8. '-cal' → logprob: -20.625001907348633
    9. '(cal' → logprob: -21.500001907348633
    10. 'Calories' → logprob: -21.500001907348633

Token 660: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.014156104996800423
    2. 'al' → logprob: -4.764156341552734
    3. 'aries' → logprob: -6.139156341552734
    4. 'ies' → logprob: -6.139156341552734
    5. 'ries' → logprob: -7.014156341552734
    6. 'eries' → logprob: -9.014156341552734
    7. 'als' → logprob: -9.639156341552734
    8. 'ol' → logprob: -10.264156341552734
    9. 'or' → logprob: -10.389156341552734
    10. 'orie' → logprob: -11.139156341552734

Token 661: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16104651987552643
    2. ')' → logprob: -1.9110465049743652
    3. '       ' → logprob: -7.161046504974365
    4. ')
' → logprob: -10.161046981811523
    5. ')

' → logprob: -12.536046981811523
    6. '   ' → logprob: -13.286046981811523
    7. ' )
' → logprob: -13.661046981811523
    8. ').' → logprob: -15.911046981811523
    9. ' )' → logprob: -15.911046981811523
    10. ' ' → logprob: -16.036046981811523

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010396681725978851
    2. 'best' → logprob: -4.635396480560303
    3. ' best' → logprob: -8.010396957397461
    4. '   ' → logprob: -8.885396957397461
    5. 'pizza' → logprob: -9.010396957397461
    6. 'p' → logprob: -10.635396957397461
    7. '	best' → logprob: -11.760396957397461
    8. ' pizza' → logprob: -11.760396957397461
    9. 'result' → logprob: -13.010396957397461
    10. 'return' → logprob: -13.135396957397461

Token 663: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0008629843359813094
    2. ' best' → logprob: -7.250863075256348
    3. '       ' → logprob: -8.875863075256348
    4. 'pizza' → logprob: -11.750863075256348
    5. 'return' → logprob: -13.250863075256348
    6. '	best' → logprob: -13.625863075256348
    7. '   ' → logprob: -13.750863075256348
    8. 'p' → logprob: -14.375863075256348
    9. 'optimal' → logprob: -15.375863075256348
    10. 'result' → logprob: -15.500863075256348

Token 664: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0037956847809255123
    2. 'pizza' → logprob: -5.628795623779297
    3. 'p' → logprob: -9.003795623779297
    4. ' =' → logprob: -10.003795623779297
    5. '       ' → logprob: -11.878795623779297
    6. '=' → logprob: -11.878795623779297
    7. 'Pizza' → logprob: -11.878795623779297
    8. '=p' → logprob: -12.753795623779297
    9. '_' → logprob: -13.753795623779297
    10. '   ' → logprob: -13.878795623779297

Token 665: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.002457106951624155
    2. 'pizza' → logprob: -6.127457141876221
    3. 'izz' → logprob: -9.127456665039062
    4. '_' → logprob: -9.877456665039062
    5. 'zza' → logprob: -10.627456665039062
    6. 'Pizza' → logprob: -11.627456665039062
    7. '   ' → logprob: -11.877456665039062
    8. 'iz' → logprob: -11.877456665039062
    9. '```' → logprob: -12.127456665039062
    10. '_factory' → logprob: -12.127456665039062

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.563261032104492
    4. '.' → logprob: -16.813261032104492
    5. ':' → logprob: -17.188261032104492
    6. '   ' → logprob: -18.688261032104492
    7. ')' → logprob: -19.438261032104492
    8. 's' → logprob: -19.438261032104492
    9. ' ' → logprob: -19.813261032104492
    10. '＝' → logprob: -19.813261032104492

Token 667: ' factory' (ID: 14560)
  Prédit: 'factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factory' → logprob: -0.31327059864997864
    2. ' factory' → logprob: -1.3132705688476562
    3. '(factory' → logprob: -12.063270568847656
    4. '.factory' → logprob: -12.938270568847656
    5. 'fact' → logprob: -14.813270568847656
    6. 'Factory' → logprob: -15.938270568847656
    7. '       ' → logprob: -16.313270568847656
    8. '   ' → logprob: -16.563270568847656
    9. '_factory' → logprob: -16.813270568847656
    10. 'actory' → logprob: -18.063270568847656

Token 668: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -2.2007883671903983e-05
    2. '.' → logprob: -10.750021934509277
    3. 'generate' → logprob: -14.750021934509277
    4. '.best' → logprob: -16.375022888183594
    5. ' .' → logprob: -17.875022888183594
    6. '.calculate' → logprob: -18.750022888183594
    7. '.Generate' → logprob: -19.000022888183594
    8. '.get' → logprob: -19.000022888183594
    9. '.generated' → logprob: -19.125022888183594
    10. '   ' → logprob: -19.375022888183594

Token 669: '_best' (ID: 77016)
  Prédit: '_best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_best' → logprob: -0.003178306156769395
    2. 'best' → logprob: -5.753178119659424
    3. 'Best' → logprob: -15.003178596496582
    4. ' best' → logprob: -17.003177642822266
    5. '(best' → logprob: -17.003177642822266
    6. '```' → logprob: -17.128177642822266
    7. '
' → logprob: -17.503177642822266
    8. '.best' → logprob: -17.753177642822266
    9. '	best' → logprob: -17.878177642822266
    10. '最佳' → logprob: -18.753177642822266

Token 670: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.8087270038668066e-05
    2. '_best' → logprob: -10.625027656555176
    3. 'pizza' → logprob: -13.125027656555176
    4. 'best' → logprob: -13.750027656555176
    5. 'p' → logprob: -15.750027656555176
    6. '_' → logprob: -16.000028610229492
    7. 'Pizza' → logprob: -16.125028610229492
    8. '_b' → logprob: -16.375028610229492
    9. '```' → logprob: -16.375028610229492
    10. ' _' → logprob: -18.000028610229492

Token 671: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.0068624247796833515
    2. 'pizza' → logprob: -5.006862640380859
    3. 'zza' → logprob: -9.38186264038086
    4. 'Pizza' → logprob: -10.63186264038086
    5. 'izz' → logprob: -11.63186264038086
    6. '_' → logprob: -11.88186264038086
    7. ' pizza' → logprob: -11.88186264038086
    8. '_p' → logprob: -13.50686264038086
    9. '``' → logprob: -13.63186264038086
    10. '```' → logprob: -13.75686264038086

Token 672: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19437892735004425
    2. 'return' → logprob: -1.9443789720535278
    3. '
' → logprob: -3.6943788528442383
    4. '()
' → logprob: -5.194378852844238
    5. ' return' → logprob: -5.944378852844238
    6. '
' → logprob: -8.569378852844238
    7. '.return' → logprob: -8.694378852844238
    8. '()' → logprob: -9.819378852844238
    9. ')
' → logprob: -10.069378852844238
    10. '        
' → logprob: -11.069378852844238

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034023032640106976
    2. 'return' → logprob: -8.000340461730957
    3. '   ' → logprob: -12.875340461730957
    4. ' return' → logprob: -13.125340461730957
    5. '
' → logprob: -15.375340461730957
    6. '           ' → logprob: -17.75033950805664
    7. '      ' → logprob: -19.00033950805664
    8. '```' → logprob: -19.37533950805664
    9. '	return' → logprob: -19.87533950805664
    10. '     ' → logprob: -20.00033950805664

Token 674: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004094666335731745
    2. '       ' → logprob: -5.50409460067749
    3. 'print' → logprob: -11.254095077514648
    4. ' return' → logprob: -12.879095077514648
    5. 'total' → logprob: -14.879095077514648
    6. '
' → logprob: -15.129095077514648
    7. 'result' → logprob: -16.75409507751465
    8. '        
' → logprob: -18.00409507751465
    9. '	return' → logprob: -18.12909507751465
    10. '```' → logprob: -18.37909507751465

Token 675: ' int' (ID: 677)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.08772967755794525
    2. 'int' → logprob: -2.9627296924591064
    3. ' best' → logprob: -3.5877296924591064
    4. ' int' → logprob: -5.587729454040527
    5. 'round' → logprob: -7.087729454040527
    6. ' round' → logprob: -9.962729454040527
    7. 'max' → logprob: -11.462729454040527
    8. '(best' → logprob: -12.212729454040527
    9. '	best' → logprob: -12.587729454040527
    10. '   ' → logprob: -12.962729454040527

Token 676: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -8.256334695033729e-05
    2. '(round' → logprob: -9.500082969665527
    3. '(' → logprob: -12.500082969665527
    4. 'best' → logprob: -12.500082969665527
    5. '	best' → logprob: -16.75008201599121
    6. '(max' → logprob: -17.50008201599121
    7. 'round' → logprob: -17.75008201599121
    8. ' best' → logprob: -17.87508201599121
    9. '(b' → logprob: -18.37508201599121
    10. '(
' → logprob: -18.87508201599121

Token 677: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.534558552724775e-05
    2. 'pizza' → logprob: -10.750025749206543
    3. 'Pizza' → logprob: -13.125025749206543
    4. 'p' → logprob: -14.500025749206543
    5. '_d' → logprob: -15.000025749206543
    6. '_' → logprob: -16.125024795532227
    7. 'ing' → logprob: -16.375024795532227
    8. '._' → logprob: -16.375024795532227
    9. 'return' → logprob: -16.625024795532227
    10. '.p' → logprob: -17.000024795532227

Token 678: 'izza' (ID: 16333)
  Prédit: 'izza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izza' → logprob: -0.2608717381954193
    2. 'zza' → logprob: -1.7608717679977417
    3. 'pizza' → logprob: -4.010871887207031
    4. 'iza' → logprob: -4.385871887207031
    5. 'a' → logprob: -4.635871887207031
    6. '_' → logprob: -5.885871887207031
    7. 'za' → logprob: -6.260871887207031
    8. 'Pizza' → logprob: -6.260871887207031
    9. 'izz' → logprob: -6.885871887207031
    10. '```' → logprob: -7.135871887207031

Token 679: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.3882966935634613
    2. '.total' → logprob: -1.1382967233657837
    3. '.price' → logprob: -6.763296604156494
    4. ' .' → logprob: -9.638297080993652
    5. '.' → logprob: -10.138297080993652
    6. ').' → logprob: -10.263297080993652
    7. '._' → logprob: -10.263297080993652
    8. 'total' → logprob: -10.888297080993652
    9. '.c' → logprob: -11.138297080993652
    10. 'cal' → logprob: -11.388297080993652

Token 680: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -0.007181453052908182
    2. 'ories' → logprob: -5.007181644439697
    3. 'ory' → logprob: -8.007181167602539
    4. 'or' → logprob: -9.507181167602539
    5. 'o' → logprob: -10.132181167602539
    6. 'ore' → logprob: -12.757181167602539
    7. 'oire' → logprob: -13.382181167602539
    8. '__' → logprob: -13.882181167602539
    9. 'eries' → logprob: -14.069681167602539
    10. '   ' → logprob: -14.132181167602539

Token 681: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.2352385965641588e-05
    2. 's' → logprob: -11.375012397766113
    3. 'per' → logprob: -14.375012397766113
    4. ')' → logprob: -16.500011444091797
    5. '_total' → logprob: -16.500011444091797
    6. '_cal' → logprob: -17.875011444091797
    7. '_' → logprob: -18.250011444091797
    8. '_to' → logprob: -18.375011444091797
    9. 'Per' → logprob: -19.000011444091797
    10. ' per' → logprob: -19.125011444091797

Token 682: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.45848218582978e-06
    2. '_per' → logprob: -13.50000286102295
    3. '_' → logprob: -14.37500286102295
    4. 'd' → logprob: -15.50000286102295
    5. '_p' → logprob: -17.000001907348633
    6. ')' → logprob: -17.625001907348633
    7. '_price' → logprob: -18.125001907348633
    8. ' _' → logprob: -18.250001907348633
    9. '```' → logprob: -18.875001907348633
    10. '_
' → logprob: -19.000001907348633

Token 683: 'ollar' (ID: 25481)
  Prédit: 'ollar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ollar' → logprob: -4.179569077678025e-05
    2. 'oller' → logprob: -10.375041961669922
    3. 'olla' → logprob: -12.500041961669922
    4. 'oll' → logprob: -12.625041961669922
    5. 'o' → logprob: -13.250041961669922
    6. 'ol' → logprob: -14.375041961669922
    7. 'olar' → logprob: -14.625041961669922
    8. 'ollars' → logprob: -15.000041961669922
    9. '_' → logprob: -16.000041961669922
    10. '   ' → logprob: -16.750041961669922

Token 684: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015250948490574956
    2. '()' → logprob: -6.501524925231934
    3. ' ())' → logprob: -11.376524925231934
    4. '())
' → logprob: -11.626524925231934
    5. '()*' → logprob: -14.251524925231934
    6. '()))' → logprob: -14.751524925231934
    7. '()
' → logprob: -14.876524925231934
    8. '().' → logprob: -15.126524925231934
    9. '())

' → logprob: -15.251524925231934
    10. ')' → logprob: -16.37652587890625

Token 685: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 687: ' floor' (ID: 8350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 688: ' by' (ID: 656)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1681685745716095
    2. '<|end|>' → logprob: -1.918168544769287
    3. '

' → logprob: -5.918168544769287
    4. '()' → logprob: -6.168168544769287
    5. '\n' → logprob: -6.418168544769287
    6. '()
' → logprob: -7.668168544769287
    7. '<|end|>' → logprob: -7.793168544769287
    8. '```' → logprob: -8.793169021606445
    9. '#' → logprob: -9.668169021606445
    10. '
' → logprob: -9.793169021606445

Token 689: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003916326444596052
    2. 'default' → logprob: -5.878916263580322
    3. 'float' → logprob: -7.253916263580322
    4. 'return' → logprob: -9.00391674041748
    5. '//' → logprob: -9.12891674041748
    6. ' int' → logprob: -9.62891674041748
    7. 'import' → logprob: -10.37891674041748
    8. '#' → logprob: -10.87891674041748
    9. 'floor' → logprob: -11.00391674041748
    10. 'math' → logprob: -11.62891674041748

Token 690: ' cast' (ID: 9831)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23455770313739777
    2. 'if' → logprob: -2.109557628631592
    3. '

' → logprob: -2.859557628631592
    4. '<|end|>' → logprob: -3.734557628631592
    5. 'def' → logprob: -5.484557628631592
    6. ' if' → logprob: -7.234557628631592
    7. '


' → logprob: -7.359557628631592
    8. '  
' → logprob: -8.73455810546875
    9. '```' → logprob: -8.85955810546875
    10. '\n' → logprob: -8.98455810546875

Token 691: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4391242563724518
    2. '<|end|>' → logprob: -1.4391242265701294
    3. '
' → logprob: -2.189124345779419
    4. 'def' → logprob: -5.81412410736084
    5. ' if' → logprob: -6.68912410736084
    6. '

' → logprob: -7.43912410736084
    7. '```' → logprob: -7.81412410736084
    8. '  
' → logprob: -8.31412410736084
    9. '   ' → logprob: -8.56412410736084
    10. '<|end|>' → logprob: -8.56412410736084

Token 692: ' requested' (ID: 17222)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -1.0625816583633423
    2. 'per' → logprob: -1.5625816583633423
    3. 'requested' → logprob: -1.8125816583633423
    4. 'specified' → logprob: -1.8125816583633423
    5. 'desired' → logprob: -2.5625815391540527
    6. 'int' → logprob: -4.687581539154053
    7. ' required' → logprob: -4.812581539154053
    8. ' per' → logprob: -5.312581539154053
    9. 'in' → logprob: -5.312581539154053
    10. ' specified' → logprob: -5.437581539154053

Token 693: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03557626157999039
    2. '<|end|>' → logprob: -3.660576343536377
    3. 'def' → logprob: -5.035576343536377
    4. '#' → logprob: -6.660576343536377
    5. ' if' → logprob: -7.160576343536377
    6. '
' → logprob: -8.160575866699219
    7. '```' → logprob: -8.535575866699219
    8. '  
' → logprob: -10.035575866699219
    9. '<|end|>' → logprob: -10.285575866699219
    10. 'pizza' → logprob: -10.785575866699219

Token 695: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005712627898901701
    2. 'def' (adapté à ' def') → logprob: -5.505712509155273
    3. '<|end|>' → logprob: -6.630712509155273
    4. ' if' → logprob: -8.630712509155273
    5. '```' → logprob: -9.380712509155273
    6. '
' → logprob: -10.755712509155273
    7. '#' → logprob: -11.505712509155273
    8. '    
' → logprob: -12.005712509155273
    9. '   ' → logprob: -12.380712509155273
    10. '  
' → logprob: -12.630712509155273

Token 696: ' run' (ID: 2461)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4882469177246094
    2. 'run' → logprob: -0.9882469177246094
    3. ' run' → logprob: -5.363246917724609
    4. ' main' → logprob: -5.363246917724609
    5. 'print' → logprob: -5.488246917724609
    6. '__' → logprob: -8.98824691772461
    7. '_main' → logprob: -8.98824691772461
    8. 'solve' → logprob: -9.36324691772461
    9. 'output' → logprob: -9.48824691772461
    10. 'display' → logprob: -10.11324691772461

Token 697: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010234013898298144
    2. '(' → logprob: -7.001023292541504
    3. '(
' → logprob: -9.626023292541504
    4. 'self' → logprob: -10.626023292541504
    5. '   ' → logprob: -11.251023292541504
    6. ' (' → logprob: -12.501023292541504
    7. '()' → logprob: -13.126023292541504
    8. '       ' → logprob: -13.501023292541504
    9. ' ' → logprob: -14.501023292541504
    10. '(s' → logprob: -14.876023292541504

Token 698: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3711428642272949
    2. 'self' → logprob: -1.496142864227295
    3. '):
' → logprob: -3.496142864227295
    4. '   ' → logprob: -3.871142864227295
    5. '):' → logprob: -3.996142864227295
    6. '       ' → logprob: -4.496142864227295
    7. ')' → logprob: -5.871142864227295
    8. ')(' → logprob: -6.246142864227295
    9. '	self' → logprob: -8.246143341064453
    10. ' self' → logprob: -9.121143341064453

Token 699: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35498693585395813
    2. '       ' → logprob: -1.4799869060516357
    3. 'self' → logprob: -2.7299869060516357
    4. 'def' → logprob: -5.354987144470215
    5. ' self' → logprob: -6.979987144470215
    6. '(self' → logprob: -9.229987144470215
    7. '    ' → logprob: -9.854987144470215
    8. '()' → logprob: -10.479987144470215
    9. '
' → logprob: -10.479987144470215
    10. '    
' → logprob: -10.729987144470215

Token 700: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007350924424827099
    2. '       ' → logprob: -5.257350921630859
    3. 'result' → logprob: -7.132350921630859
    4. ' self' → logprob: -7.257350921630859
    5. 'print' → logprob: -7.882350921630859
    6. '   ' → logprob: -8.50735092163086
    7. 'def' → logprob: -10.88235092163086
    8. 'import' → logprob: -11.75735092163086
    9. ' result' → logprob: -13.00735092163086
    10. 'score' → logprob: -14.38235092163086

Token 701: '.load' (ID: 9383)
  Prédit: '.load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.load' → logprob: -0.020390987396240234
    2. '.solve' → logprob: -4.02039098739624
    3. '.' → logprob: -6.14539098739624
    4. '.run' → logprob: -10.395391464233398
    5. ' .' → logprob: -11.020391464233398
    6. '.N' → logprob: -11.520391464233398
    7. 'solve' → logprob: -12.020391464233398
    8. '   ' → logprob: -12.395391464233398
    9. '().' → logprob: -12.520391464233398
    10. 'load' → logprob: -12.520391464233398

Token 702: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.625001907348633
    3. '_
' → logprob: -15.250001907348633
    4. '_inputs' → logprob: -16.250001907348633
    5. '_output' → logprob: -17.125001907348633
    6. '()' → logprob: -17.375001907348633
    7. '()
' → logprob: -18.125001907348633
    8. '_data' → logprob: -18.500001907348633
    9. 'input' → logprob: -19.000001907348633
    10. ' _' → logprob: -19.125001907348633

Token 703: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04860202223062515
    2. '()
' → logprob: -3.7986021041870117
    3. '
' → logprob: -4.298602104187012
    4. 'print' → logprob: -5.048602104187012
    5. '   ' → logprob: -5.798602104187012
    6. 'result' → logprob: -7.048602104187012
    7. '()' → logprob: -7.173602104187012
    8. '    
' → logprob: -9.423602104187012
    9. ' print' → logprob: -9.673602104187012
    10. 'p' → logprob: -10.173602104187012

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3942090570926666
    2. 'print' → logprob: -1.1442090272903442
    3. 'result' → logprob: -5.144208908081055
    4. 'return' → logprob: -7.269208908081055
    5. '   ' → logprob: -7.644208908081055
    6. ' print' → logprob: -8.269208908081055
    7. ' result' → logprob: -10.644208908081055
    8. '```' → logprob: -11.394208908081055
    9. ' return' → logprob: -12.269208908081055
    10. 'output' → logprob: -13.019208908081055

Token 705: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00862414762377739
    2. 'result' → logprob: -4.758624076843262
    3. ' print' → logprob: -12.008624076843262
    4. 'answer' (adapté à ' answer') → logprob: -12.758624076843262
    5. ' result' → logprob: -15.258624076843262
    6. 'res' → logprob: -15.758624076843262
    7. '   ' → logprob: -16.383625030517578
    8. 'ans' → logprob: -16.758625030517578
    9. '       ' → logprob: -17.383625030517578
    10. 'output' → logprob: -18.133625030517578

Token 706: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894622325897217
    2. '=' → logprob: -2.4639463424682617
    3. '   ' → logprob: -12.713946342468262
    4. '=int' → logprob: -13.588946342468262
    5. ':' → logprob: -14.463946342468262
    6. ' ' → logprob: -14.588946342468262
    7. '()' → logprob: -14.713946342468262
    8. '    ' → logprob: -15.338946342468262
    9. '_' → logprob: -15.963946342468262
    10. '  ' → logprob: -16.088945388793945

Token 707: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. 'str' → logprob: -17.264163970947266
    4. '	self' → logprob: -17.264163970947266
    5. '   ' → logprob: -18.264163970947266
    6. '(self' → logprob: -19.014163970947266
    7. '       ' → logprob: -19.389163970947266
    8. '=self' → logprob: -21.514163970947266
    9. '
' → logprob: -22.014163970947266
    10. '    ' → logprob: -22.139163970947266

Token 708: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -3.4121114822482923e-06
    2. 'solve' → logprob: -12.875003814697266
    3. '.' → logprob: -14.250003814697266
    4. '.sol' → logprob: -16.375003814697266
    5. ' .' → logprob: -17.750003814697266
    6. '.run' → logprob: -18.500003814697266
    7. '.resolve' → logprob: -20.250003814697266
    8. 'olve' → logprob: -20.500003814697266
    9. '.save' → logprob: -20.500003814697266
    10. '.s' → logprob: -21.125003814697266

Token 709: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13179409503936768
    2. '()
' → logprob: -2.506793975830078
    3. 'print' → logprob: -3.256793975830078
    4. '
' → logprob: -6.256793975830078
    5. ' print' → logprob: -7.131793975830078
    6. '()' → logprob: -7.381793975830078
    7. '(print' → logprob: -9.881793975830078
    8. '(' → logprob: -11.381793975830078
    9. '   ' → logprob: -11.881793975830078
    10. '<|end|>' → logprob: -12.131793975830078

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03822830691933632
    2. 'print' → logprob: -3.2882282733917236
    3. '   ' → logprob: -9.288228034973145
    4. ' print' → logprob: -9.788228034973145
    5. '
' → logprob: -10.288228034973145
    6. '	print' → logprob: -13.288228034973145
    7. '```' → logprob: -13.663228034973145
    8. '	' → logprob: -14.038228034973145
    9. 'return' → logprob: -15.788228034973145
    10. '        
' → logprob: -16.03822898864746

Token 711: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.500000953674316
    3. '       ' → logprob: -15.750000953674316
    4. '	print' → logprob: -21.875
    5. '```' → logprob: -23.75
    6. '
' → logprob: -24.5
    7. '#print' → logprob: -25.5
    8. '   ' → logprob: -25.5
    9. '        
' → logprob: -27.375
    10. '.print' → logprob: -27.375

Token 712: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -3.8889261304575484e-06
    2. 'answer' → logprob: -12.625003814697266
    3. '(ans' → logprob: -15.375003814697266
    4. '(' → logprob: -15.875003814697266
    5. '(f' → logprob: -16.125003814697266
    6. '(
' → logprob: -19.625003814697266
    7. '	answer' → logprob: -19.750003814697266
    8. '()' → logprob: -20.250003814697266
    9. ' (' → logprob: -20.250003814697266
    10. '(question' → logprob: -21.000003814697266

Token 713: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. '()' → logprob: -11.875011444091797
    3. '())' → logprob: -12.375011444091797
    4. ')
' → logprob: -15.250011444091797
    5. ' )' → logprob: -16.625011444091797
    6. '))' → logprob: -17.875011444091797
    7. ')`' → logprob: -17.875011444091797
    8. '   ' → logprob: -18.875011444091797
    9. ')}' → logprob: -19.125011444091797
    10. '`)' → logprob: -19.250011444091797

Token 714: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011772842844948173
    2. 'Best' → logprob: -9.125117301940918
    3. ' if' → logprob: -12.500117301940918
    4. 'solver' → logprob: -12.750117301940918
    5. '```' → logprob: -13.500117301940918
    6. 'best' → logprob: -15.250117301940918
    7. 'def' → logprob: -15.500117301940918
    8. 'Solver' → logprob: -16.125118255615234
    9. 'If' → logprob: -16.125118255615234
    10. 'BP' → logprob: -17.500118255615234

Token 715: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20143194496631622
    2. ' __' → logprob: -1.7014319896697998
    3. 'name' → logprob: -11.076432228088379
    4. '_name' → logprob: -13.451432228088379
    5. '_' → logprob: -13.576432228088379
    6. '___' → logprob: -15.451432228088379
    7. 'Name' → logprob: -16.451431274414062
    8. ' ' → logprob: -16.826431274414062
    9. '____' → logprob: -16.826431274414062
    10. ' ' → logprob: -16.951431274414062

Token 716: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010481263510882854
    2. 'name' → logprob: -5.010481357574463
    3. ' __' → logprob: -5.760481357574463
    4. 'if' → logprob: -8.135480880737305
    5. ' ==' → logprob: -8.385480880737305
    6. '==' → logprob: -10.510480880737305
    7. '__.__' → logprob: -11.135480880737305
    8. '__.' → logprob: -11.385480880737305
    9. '.__' → logprob: -11.760480880737305
    10. ' if' → logprob: -11.760480880737305

Token 717: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -13.500005722045898
    3. '__.__' → logprob: -13.500005722045898
    4. '==' → logprob: -13.750005722045898
    5. ' __' → logprob: -14.875005722045898
    6. 'name' → logprob: -14.875005722045898
    7. '__
' → logprob: -15.125005722045898
    8. '__.' → logprob: -15.500005722045898
    9. ' ==' → logprob: -15.750005722045898
    10. '___' → logprob: -16.2500057220459

Token 718: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010074316523969173
    2. '==' → logprob: -5.135074138641357
    3. ' ==' → logprob: -5.510074138641357
    4. '=="' → logprob: -9.510074615478516
    5. '__.__' → logprob: -11.885074615478516
    6. '_' → logprob: -12.385074615478516
    7. '=='' → logprob: -12.635074615478516
    8. ' __' → logprob: -14.885074615478516
    9. '___' → logprob: -14.885074615478516
    10. '__":
' → logprob: -15.135074615478516

Token 719: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008643882349133492
    2. ''' → logprob: -4.758644104003906
    3. ' "__' → logprob: -10.508644104003906
    4. '__' → logprob: -13.383644104003906
    5. ' '__' → logprob: -15.758644104003906
    6. '"name' → logprob: -16.258644104003906
    7. '"class' → logprob: -16.633644104003906
    8. '"user' → logprob: -16.883644104003906
    9. '("__' → logprob: -17.008644104003906
    10. ''"' → logprob: -17.258644104003906

Token 720: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.5776860184123507e-06
    2. '__' → logprob: -13.00000286102295
    3. 'name' → logprob: -15.12500286102295
    4. ' main' → logprob: -18.625001907348633
    5. '_main' → logprob: -19.250001907348633
    6. 'ma' → logprob: -20.250001907348633
    7. '-main' → logprob: -20.750001907348633
    8. 'built' → logprob: -21.375001907348633
    9. '	main' → logprob: -21.625001907348633
    10. 'MAIN' → logprob: -21.875001907348633

Token 721: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011144264601171017
    2. '__' → logprob: -4.511144161224365
    3. '__':
' → logprob: -9.261144638061523
    4. '__:' → logprob: -13.636144638061523
    5. '__
' → logprob: -15.761144638061523
    6. '__
' → logprob: -17.386144638061523
    7. '__.' → logprob: -17.636144638061523
    8. '_' → logprob: -18.386144638061523
    9. '__["' → logprob: -18.761144638061523
    10. '__",' → logprob: -18.761144638061523

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000476190383778885
    2. 'Best' → logprob: -8.500475883483887
    3. ' Best' → logprob: -8.625475883483887
    4. '   ' → logprob: -10.000475883483887
    5. ' solver' → logprob: -10.375475883483887
    6. ' best' → logprob: -12.125475883483887
    7. 'solver' → logprob: -12.750475883483887
    8. 'Solver' → logprob: -13.125475883483887
    9. ' Solver' → logprob: -14.375475883483887
    10. '  ' → logprob: -14.500475883483887

Token 723: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.1605970710515976
    2. 'Best' → logprob: -1.9105970859527588
    3. 'best' → logprob: -9.16059684753418
    4. ' solver' → logprob: -9.16059684753418
    5. 'solution' → logprob: -9.78559684753418
    6. 'import' → logprob: -10.03559684753418
    7. '   ' → logprob: -10.66059684753418
    8. 'Solver' → logprob: -11.28559684753418
    9. ' Best' → logprob: -11.41059684753418
    10. 'sol' → logprob: -11.66059684753418

Token 724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4204089045524597
    2. '.run' → logprob: -1.7954089641571045
    3. '=' → logprob: -2.1704089641571045
    4. '.' → logprob: -2.7954089641571045
    5. '().' → logprob: -6.545408725738525
    6. '()' → logprob: -8.795409202575684
    7. '.=' → logprob: -9.545409202575684
    8. ' .' → logprob: -9.795409202575684
    9. '.Run' → logprob: -10.295409202575684
    10. '.py' → logprob: -10.420409202575684

Token 725: ' Best' (ID: 6899)
  Prédit: 'Best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Best' → logprob: -0.005233763717114925
    2. ' Best' → logprob: -5.2552337646484375
    3. ' best' → logprob: -20.005233764648438
    4. '_best' → logprob: -21.130233764648438
    5. 'Better' → logprob: -21.130233764648438
    6. 'best' → logprob: -23.880233764648438
    7. 'Basic' → logprob: -24.380233764648438
    8. ' ' → logprob: -24.380233764648438
    9. 'B' → logprob: -24.755233764648438
    10. 'BEST' → logprob: -25.255233764648438

Token 726: 'Pizza' (ID: 91351)
  Prédit: 'Pizza'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: 0.0
    2. 'P' → logprob: -17.125
    3. '```' → logprob: -19.375
    4. 'Pie' → logprob: -20.625
    5. 'pizza' → logprob: -20.875
    6. 'Puzzle' → logprob: -21.125
    7. '
' → logprob: -21.625
    8. ' Pizza' → logprob: -22.125
    9. '   ' → logprob: -22.375
    10. '	P' → logprob: -22.375

Token 727: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -4.723352049040841e-06
    2. 'solver' → logprob: -12.375004768371582
    3. 'olver' → logprob: -15.000004768371582
    4. '_solver' → logprob: -15.625004768371582
    5. 'Solve' → logprob: -18.375003814697266
    6. 'Sol' → logprob: -18.500003814697266
    7. ' solver' → logprob: -18.875003814697266
    8. 'Resolver' → logprob: -18.875003814697266
    9. ' Solver' → logprob: -19.250003814697266
    10. 'Saver' → logprob: -19.875003814697266

Token 728: '()
' (ID: 1234)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.5521520376205444
    2. '.s' → logprob: -1.6771520376205444
    3. '.' → logprob: -1.9271520376205444
    4. '
' → logprob: -3.177152156829834
    5. '.solve' → logprob: -3.677152156829834
    6. '   ' → logprob: -4.302152156829834
    7. 'solver' → logprob: -4.802152156829834
    8. '.runner' → logprob: -7.302152156829834
    9. '.
' → logprob: -7.427152156829834
    10. '    
' → logprob: -7.552152156829834

Token 729: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.03449910506606102
    2. ' solver' → logprob: -3.534499168395996
    3. '   ' → logprob: -5.409499168395996
    4. '	s' → logprob: -8.534499168395996
    5. '_solver' → logprob: -9.784499168395996
    6. '
' → logprob: -11.909499168395996
    7. '```' → logprob: -13.659499168395996
    8. '    
' → logprob: -14.284499168395996
    9. 's' → logprob: -14.659499168395996
    10. '(s' → logprob: -14.909499168395996

Token 730: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -1.9361264946837764e-07
    2. ' solver' → logprob: -16.25
    3. 'scheduler' → logprob: -19.25
    4. '   ' → logprob: -21.0
    5. '_solver' → logprob: -21.75
    6. 'resolver' → logprob: -23.125
    7. 's' → logprob: -23.75
    8. 'sol' → logprob: -24.625
    9. 'executor' → logprob: -24.875
    10. '```' → logprob: -25.0

Token 731: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -3.547789674485102e-05
    2. '.' → logprob: -10.250035285949707
    3. ' .' → logprob: -16.750036239624023
    4. '.
' → logprob: -18.500036239624023
    5. '.Run' → logprob: -19.750036239624023
    6. '.load' → logprob: -20.125036239624023
    7. 'run' → logprob: -20.375036239624023
    8. '.runner' → logprob: -20.875036239624023
    9. '().' → logprob: -21.500036239624023
    10. '.start' → logprob: -21.500036239624023

Token 732: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 730
Tokens correctement prédits (1ère position, stricte): 371
Tokens correctement prédits (1ère position, avec adaptation): 410
Tokens correctement prédits (top 10): 639
Précision stricte (1ère position): 50.82%
Précision adaptée (1ère position): 56.16%
Précision (top 10): 87.53%
================================================================================
