================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class BaseConverter:
    def __init__(self, base: int):
        if not (8 <= base <= 36):
            raise ValueError("Base must be between 8 and 36 inclusive.")
        self.base = base
        self.digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    
    def char_to_val(self, c: str) -> int:
        val = self.digits.index(c)
        if val >= self.base:
            raise ValueError(f"Digit '{c}' not valid for base {self.base}")
        return val
    
    def str_to_int(self, s: str) -> int:
        val = 0
        for c in s:
            val = val * self.base + self.char_to_val(c)
        return val
    
    def int_to_str(self, num: int) -> str:
        if num == 0:
            return "0"
        result = []
        n = num
        while n > 0:
            result.append(self.digits[n % self.base])
            n //= self.base
        return "".join(reversed(result))

class FactorialTrailingZerosCalculator:
    def __init__(self, base: int):
        self.base = base
        self.converter = BaseConverter(base)
        # Precompute prime factors of base and their exponents for factorization
        self.base_prime_factors = self.factorize_base(self.base)
    
    def factorize_base(self, base: int) -> dict:
        # Return dictionary {prime_factor: exponent}
        b = base
        factors = {}
        d = 2
        while d * d <= b:
            count = 0
            while b % d == 0:
                b //= d
                count += 1
            if count > 0:
                factors[d] = count
            d += 1 if d == 2 else 2
        if b > 1:
            factors[b] = factors.get(b, 0) + 1
        return factors

    def prime_factor_exponent_in_factorial(self, n: int, p: int) -> int:
        # Count exponent of prime p in n!
        # Legendre's formula
        count = 0
        power = p
        while power <= n:
            count += n // power
            power *= p
        return count
    
    def trailing_zeros_in_factorial(self, n: int) -> int:
        # For each prime factor of the base, find how many times it divides n!
        zeros_counts = []
        for prime, exponent in self.base_prime_factors.items():
            total_exp = self.prime_factor_exponent_in_factorial(n, prime)
            zeros_counts.append(total_exp // exponent)
        return min(zeros_counts) if zeros_counts else 0

class ICPCProblemC:
    def __init__(self):
        self.cache = {}

    def process_input_line(self, line: str) -> int:
        if line == "0 0":
            raise StopIteration
        base_str, M_str = line.strip().split()
        base = int(base_str)
        converter = BaseConverter(base)
        M = converter.str_to_int(M_str)
        calculator = FactorialTrailingZerosCalculator(base)
        return calculator.trailing_zeros_in_factorial(M)

    def run(self):
        import sys
        for line in sys.stdin:
            line = line.strip()
            if not line:
                continue
            try:
                result = self.process_input_line(line)
                print(result)
            except StopIteration:
                break

if __name__ == "__main__":
    ICPCProblemC().run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Base' (ID: 8729)
  → Token d'amorce (pas de prédiction)

Token 2: 'Converter' (ID: 18762)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009988983161747456
    2. '(' → logprob: -4.759988784790039
    3. '{' → logprob: -6.759988784790039
    4. '.' → logprob: -8.759988784790039
    5. '[' → logprob: -10.884988784790039
    6. ' :' → logprob: -10.884988784790039
    7. '(:' → logprob: -12.509988784790039
    8. '```' → logprob: -12.634988784790039
    9. '():' → logprob: -13.009988784790039
    10. ':
' → logprob: -13.634988784790039

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07913234829902649
    2. '(' → logprob: -2.704132318496704
    3. '```' → logprob: -5.329132556915283
    4. '   ' → logprob: -6.204132556915283
    5. ':
' → logprob: -6.454132556915283
    6. '.' → logprob: -8.329132080078125
    7. '(
' → logprob: -8.954132080078125
    8. '():' → logprob: -9.079132080078125
    9. ''' → logprob: -10.079132080078125
    10. '\' → logprob: -10.829132080078125

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5637780427932739
    2. '   ' → logprob: -1.563778042793274
    3. '    ' → logprob: -2.5637779235839844
    4. ' pass' → logprob: -3.5637779235839844
    5. '\' → logprob: -3.6887779235839844
    6. ' def' → logprob: -4.063777923583984
    7. ' 
' → logprob: -4.313777923583984
    8. '```' → logprob: -4.438777923583984
    9. '(' → logprob: -5.063777923583984
    10. '<|end|>' → logprob: -5.188777923583984

Token 6: ' __' (ID: 2516)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.25309890508651733
    2. 'convert' → logprob: -1.878098964691162
    3. ' ' → logprob: -3.003098964691162
    4. ' __' → logprob: -4.503098964691162
    5. '__' → logprob: -5.378098964691162
    6. '_' → logprob: -6.378098964691162
    7. '_convert' → logprob: -7.003098964691162
    8. ' calculate' → logprob: -7.753098964691162
    9. 'to' → logprob: -8.003098487854004
    10. ' ' → logprob: -8.253098487854004

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. ' init' → logprob: -14.250000953674316
    3. 'ini' → logprob: -16.375
    4. '_init' → logprob: -17.125
    5. '	init' → logprob: -18.75
    6. 'int' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. 'i' → logprob: -19.375
    9. 'in' → logprob: -19.625
    10. 'new' → logprob: -20.125

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2544305920600891
    2. '__' → logprob: -1.5044305324554443
    3. '(' → logprob: -6.379430770874023
    4. '__(
' → logprob: -8.004430770874023
    5. '_' → logprob: -8.254430770874023
    6. '__((' → logprob: -9.504430770874023
    7. '(self' → logprob: -9.629430770874023
    8. '__('' → logprob: -10.504430770874023
    9. '___' → logprob: -11.504430770874023
    10. '_(' → logprob: -11.879430770874023

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023417724296450615
    2. ' self' → logprob: -3.7734177112579346
    3. ')' → logprob: -9.148417472839355
    4. '(self' → logprob: -10.523417472839355
    5. ' ' → logprob: -10.773417472839355
    6. ' )' → logprob: -11.773417472839355
    7. '  ' → logprob: -13.648417472839355
    8. 'space' → logprob: -13.648417472839355
    9. '<|end|>' → logprob: -13.773417472839355
    10. '   ' → logprob: -13.898417472839355

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8992905616760254
    2. ',' → logprob: -0.8992905616760254
    3. '):' → logprob: -2.3992905616760254
    4. '(' → logprob: -3.2742905616760254
    5. 'self' → logprob: -3.6492905616760254
    6. '_' → logprob: -5.024290561676025
    7. '<|end|>' → logprob: -5.274290561676025
    8. '(self' → logprob: -5.274290561676025
    9. '.' → logprob: -6.024290561676025
    10. ' ' → logprob: -6.149290561676025

Token 11: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8640117645263672
    2. ' self' → logprob: -1.6140117645263672
    3. 'number' → logprob: -2.239011764526367
    4. ' number' → logprob: -2.489011764526367
    5. ' value' → logprob: -2.614011764526367
    6. 'value' → logprob: -2.989011764526367
    7. ' base' → logprob: -3.239011764526367
    8. 'base' → logprob: -4.364011764526367
    9. ' input' → logprob: -5.364011764526367
    10. 'input' → logprob: -5.489011764526367

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027725879102945328
    2. '=' → logprob: -4.277725696563721
    3. '_' → logprob: -4.527725696563721
    4. ')' → logprob: -6.652725696563721
    5. ':' → logprob: -7.152725696563721
    6. ',' → logprob: -8.027726173400879
    7. ' ):' → logprob: -9.402726173400879
    8. '_:' → logprob: -9.902726173400879
    9. '):
' → logprob: -10.277726173400879
    10. ' _' → logprob: -11.527726173400879

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47415849566459656
    2. ' int' → logprob: -0.974158525466919
    3. ' str' → logprob: -10.59915828704834
    4. '=int' → logprob: -10.72415828704834
    5. ':int' → logprob: -11.22415828704834
    6. 'str' → logprob: -11.97415828704834
    7. '[int' → logprob: -12.47415828704834
    8. '(int' → logprob: -12.72415828704834
    9. ')' → logprob: -12.72415828704834
    10. '<int' → logprob: -13.09915828704834

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0062326062470674515
    2. ')' → logprob: -5.256232738494873
    3. ',' → logprob: -7.006232738494873
    4. '):
' → logprob: -9.631232261657715
    5. ':' → logprob: -11.381232261657715
    6. '   ' → logprob: -12.381232261657715
    7. '=' → logprob: -12.881232261657715
    8. '),' → logprob: -13.631232261657715
    9. '<|end|>' → logprob: -13.631232261657715
    10. ' ):' → logprob: -14.006232261657715

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003181040519848466
    2. '   ' → logprob: -6.503180980682373
    3. ':' → logprob: -7.753180980682373
    4. 'self' → logprob: -8.378181457519531
    5. '<|end|>' → logprob: -8.628181457519531
    6. '    ' → logprob: -8.878181457519531
    7. ')' → logprob: -8.878181457519531
    8. ' ' → logprob: -9.003181457519531
    9. '_' → logprob: -9.503181457519531
    10. ' self' → logprob: -9.628181457519531

Token 16: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4272133409976959
    2. '       ' → logprob: -1.3022133111953735
    3. ' self' → logprob: -2.927213430404663
    4. ' ' → logprob: -4.427213191986084
    5. '   ' → logprob: -6.302213191986084
    6. '_' → logprob: -6.302213191986084
    7. '        ' → logprob: -6.552213191986084
    8. ' ' → logprob: -6.552213191986084
    9. 's' → logprob: -6.677213191986084
    10. '           ' → logprob: -7.177213191986084

Token 17: ' not' (ID: 625)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.03404397889971733
    2. ' not' → logprob: -3.409044027328491
    3. 'base' → logprob: -8.28404426574707
    4. ' self' → logprob: -9.15904426574707
    5. '(base' → logprob: -11.53404426574707
    6. ' ' → logprob: -11.65904426574707
    7. 'not' → logprob: -12.40904426574707
    8. ' bases' → logprob: -12.53404426574707
    9. '_base' → logprob: -12.78404426574707
    10. ' (' → logprob: -13.03404426574707

Token 18: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.5492373704910278
    2. ' (' → logprob: -0.9242373704910278
    3. '(' → logprob: -4.424237251281738
    4. ' ' → logprob: -4.799237251281738
    5. '1' → logprob: -5.674237251281738
    6. '0' → logprob: -6.174237251281738
    7. 'is' → logprob: -11.424237251281738
    8. '(is' → logprob: -11.549237251281738
    9. ' hasattr' → logprob: -11.674237251281738
    10. ' ' → logprob: -13.424237251281738

Token 19: '8' (ID: 23)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.062351807951927185
    2. ' ' → logprob: -2.812351703643799
    3. '1' → logprob: -8.187352180480957
    4. '0' → logprob: -10.062352180480957
    5. '(' → logprob: -11.062352180480957
    6. 'is' → logprob: -11.187352180480957
    7. '   ' → logprob: -11.437352180480957
    8. ' isinstance' → logprob: -11.687352180480957
    9. '  ' → logprob: -12.687352180480957
    10. 'self' → logprob: -12.812352180480957

Token 20: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06200980395078659
    2. '<=' → logprob: -2.812009811401367
    3. ' ' → logprob: -10.437009811401367
    4. '0' → logprob: -12.937009811401367
    5. '1' → logprob: -13.312009811401367
    6. '=' → logprob: -14.062009811401367
    7. '```' → logprob: -14.062009811401367
    8. '<|end|>' → logprob: -14.312009811401367
    9. '6' → logprob: -14.437009811401367
    10. ' ≤' → logprob: -14.437009811401367

Token 21: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.20142142474651337
    2. ' base' → logprob: -1.7014213800430298
    3. 'self' → logprob: -12.201421737670898
    4. ' ' → logprob: -13.701421737670898
    5. ' self' → logprob: -14.701421737670898
    6. '	base' → logprob: -14.826421737670898
    7. '_base' → logprob: -15.326421737670898
    8. '   ' → logprob: -15.701421737670898
    9. 'Base' → logprob: -15.826421737670898
    10. '(base' → logprob: -15.951421737670898

Token 22: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0790034681558609
    2. '<=' → logprob: -2.5790035724639893
    3. ' and' → logprob: -9.45400333404541
    4. 'and' → logprob: -10.45400333404541
    5. ' ' → logprob: -12.95400333404541
    6. '<|end|>' → logprob: -13.82900333404541
    7. '```' → logprob: -14.07900333404541
    8. ' <' → logprob: -14.82900333404541
    9. ')<=' → logprob: -15.45400333404541
    10. 'le' → logprob: -15.45400333404541

Token 23: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.2483198344707489
    2. ' ' → logprob: -1.8733198642730713
    3. '36' → logprob: -2.8733198642730713
    4. '1' → logprob: -5.373319625854492
    5. '64' → logprob: -5.873319625854492
    6. '32' → logprob: -6.748319625854492
    7. '10' → logprob: -6.998319625854492
    8. '3' → logprob: -9.873319625854492
    9. '62' → logprob: -10.373319625854492
    10. '12' → logprob: -11.248319625854492

Token 24: '36' (ID: 2636)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.41787341237068176
    2. '36' → logprob: -1.1678733825683594
    3. ' ' → logprob: -4.292873382568359
    4. '1' → logprob: -4.917873382568359
    5. '64' → logprob: -5.042873382568359
    6. '32' → logprob: -6.667873382568359
    7. '10' → logprob: -6.917873382568359
    8. '62' → logprob: -7.917873382568359
    9. '3' → logprob: -8.29287338256836
    10. '2' → logprob: -10.54287338256836

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0044771162793040276
    2. ' ):' → logprob: -5.879477024078369
    3. '):
' → logprob: -7.379477024078369
    4. ':' → logprob: -7.629477024078369
    5. ' and' → logprob: -7.754477024078369
    6. ')' → logprob: -9.254477500915527
    7. ' or' → logprob: -10.879477500915527
    8. ' ):
' → logprob: -11.754477500915527
    9. 'and' → logprob: -12.879477500915527
    10. '):
' → logprob: -13.129477500915527

Token 26: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22593162953853607
    2. '           ' → logprob: -2.1009316444396973
    3. ' :' → logprob: -2.8509316444396973
    4. ':
' → logprob: -4.600931644439697
    5. '):' → logprob: -5.225931644439697
    6. ' :
' → logprob: -5.975931644439697
    7. ' raise' → logprob: -6.350931644439697
    8. '       ' → logprob: -7.100931644439697
    9. 'raise' → logprob: -8.350931167602539
    10. '            ' → logprob: -8.600931167602539

Token 27: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.1045789048075676
    2. '           ' → logprob: -2.854578971862793
    3. 'raise' (adapté à ' raise') → logprob: -3.229578971862793
    4. '            ' → logprob: -6.979578971862793
    5. ' ' → logprob: -8.229578971862793
    6. '_raise' → logprob: -8.604578971862793
    7. '               ' → logprob: -8.729578971862793
    8. ' 
' → logprob: -8.979578971862793
    9. '	raise' → logprob: -8.979578971862793
    10. ' ' → logprob: -9.729578971862793

Token 28: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.011053359135985374
    2. 'Value' → logprob: -4.511053562164307
    3. ' Val' → logprob: -12.886053085327148
    4. ' ' → logprob: -13.511053085327148
    5. ' value' → logprob: -14.511053085327148
    6. '	Value' → logprob: -14.636053085327148
    7. ' Va' → logprob: -15.886053085327148
    8. '_Value' → logprob: -15.886053085327148
    9. '<Value' → logprob: -16.13605308532715
    10. 'Val' → logprob: -16.13605308532715

Token 29: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.004078878089785576
    2. 'rror' → logprob: -5.5040788650512695
    3. 'r' → logprob: -15.87907886505127
    4. '   ' → logprob: -16.254079818725586
    5. 'ror' → logprob: -16.504079818725586
    6. 'error' → logprob: -16.754079818725586
    7. ' Error' → logprob: -17.004079818725586
    8. 'Er' → logprob: -17.879079818725586
    9. 'Value' → logprob: -18.504079818725586
    10. '	Error' → logprob: -18.754079818725586

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28736475110054016
    2. '("' → logprob: -1.4123647212982178
    3. '('' → logprob: -5.412364959716797
    4. '(
' → logprob: -6.412364959716797
    5. '(f' → logprob: -10.162364959716797
    6. '()' → logprob: -10.662364959716797
    7. '(
' → logprob: -12.037364959716797
    8. ':' → logprob: -12.412364959716797
    9. '(

' → logprob: -12.412364959716797
    10. '       ' → logprob: -12.537364959716797

Token 31: 'Base' (ID: 4882)
  Prédit: 'Base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.028968309983611107
    2. 'base' → logprob: -4.153968334197998
    3. '"' → logprob: -5.153968334197998
    4. 'Invalid' → logprob: -5.403968334197998
    5. 'Unsupported' → logprob: -6.653968334197998
    6. 'Supported' → logprob: -8.02896785736084
    7. 'Bases' → logprob: -8.40396785736084
    8. ' base' → logprob: -8.90396785736084
    9. 'The' → logprob: -9.02896785736084
    10. ''' → logprob: -9.15396785736084

Token 32: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0031411165837198496
    2. ' out' → logprob: -6.503140926361084
    3. ' should' → logprob: -6.878140926361084
    4. ' not' → logprob: -8.128141403198242
    5. ' ")' → logprob: -9.378141403198242
    6. ' can' → logprob: -9.628141403198242
    7. ' value' → logprob: -9.753141403198242
    8. ' ' → logprob: -10.128141403198242
    9. 'must' → logprob: -11.503141403198242
    10. ' base' → logprob: -11.628141403198242

Token 33: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -5.157039049663581e-05
    2. 'be' → logprob: -11.250051498413086
    3. '<|end|>' → logprob: -11.250051498413086
    4. ' between' → logprob: -11.625051498413086
    5. ' not' → logprob: -11.625051498413086
    6. ' ' → logprob: -12.500051498413086
    7. '	be' → logprob: -14.625051498413086
    8. ' )' → logprob: -15.000051498413086
    9. ')' → logprob: -15.250051498413086
    10. ' must' → logprob: -15.375051498413086

Token 34: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.003659102600067854
    2. 'between' → logprob: -5.753659248352051
    3. ' ' → logprob: -8.12865924835205
    4. '8' → logprob: -9.00365924835205
    5. ' at' → logprob: -10.12865924835205
    6. ' an' → logprob: -11.25365924835205
    7. ' in' → logprob: -12.62865924835205
    8. ' >=' → logprob: -13.37865924835205
    9. ' a' → logprob: -13.37865924835205
    10. '>=' → logprob: -13.87865924835205

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484474718570709
    2. '8' → logprob: -1.2234474420547485
    3. '2' → logprob: -13.848447799682617
    4. '1' → logprob: -14.723447799682617
    5. 'eight' → logprob: -15.348447799682617
    6. '  ' → logprob: -15.473447799682617
    7. '```' → logprob: -15.473447799682617
    8. ' ' → logprob: -15.473447799682617
    9. ' eight' → logprob: -16.098447799682617
    10. '   ' → logprob: -16.473447799682617

Token 36: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '2' → logprob: -14.625041007995605
    4. '1' → logprob: -16.56254005432129
    5. '   ' → logprob: -16.68754005432129
    6. '```' → logprob: -17.37504005432129
    7. '9' → logprob: -18.12504005432129
    8. '８' → logprob: -18.31254005432129
    9. ''' → logprob: -18.62504005432129
    10. 'the' → logprob: -18.81254005432129

Token 37: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.025171708315610886
    2. ' ' → logprob: -3.7751717567443848
    3. ' a' → logprob: -6.525171756744385
    4. 'and' → logprob: -8.525171279907227
    5. '8' → logprob: -9.025171279907227
    6. ',' → logprob: -10.650171279907227
    7. ' )' → logprob: -10.775171279907227
    8. '1' → logprob: -11.275171279907227
    9. '9' → logprob: -11.400171279907227
    10. ' an' → logprob: -11.525171279907227

Token 38: ' ' (ID: 220)
  Prédit: '36'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '36' → logprob: -0.6332457661628723
    2. ' ' → logprob: -0.7582457661628723
    3. '3' → logprob: -7.383245944976807
    4. '34' → logprob: -11.758245468139648
    5. '32' → logprob: -12.133245468139648
    6. ' ' → logprob: -12.633245468139648
    7. '35' → logprob: -13.008245468139648
    8. '33' → logprob: -13.383245468139648
    9. '```' → logprob: -13.383245468139648
    10. '  ' → logprob: -13.883245468139648

Token 39: '36' (ID: 2636)
  Prédit: '36'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '36' → logprob: -0.011904940009117126
    2. '3' → logprob: -4.511904716491699
    3. ' ' → logprob: -7.136904716491699
    4. '32' → logprob: -10.6369047164917
    5. '35' → logprob: -10.7619047164917
    6. '1' → logprob: -11.7619047164917
    7. '34' → logprob: -13.0119047164917
    8. '16' → logprob: -13.3869047164917
    9. '```' → logprob: -13.3869047164917
    10. '  ' → logprob: -13.8869047164917

Token 40: ' inclusive' (ID: 29482)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0007185076246969402
    2. ')")' → logprob: -8.250718116760254
    3. ')' → logprob: -8.625718116760254
    4. '")
' → logprob: -8.750718116760254
    5. '.")' → logprob: -9.375718116760254
    6. '"' → logprob: -10.625718116760254
    7. '")
' → logprob: -13.000718116760254
    8. ' ")' → logprob: -13.000718116760254
    9. '!")' → logprob: -13.500718116760254
    10. '\")' → logprob: -13.625718116760254

Token 41: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0014698688173666596
    2. '")
' → logprob: -6.75147008895874
    3. ')' → logprob: -9.251469612121582
    4. '.")' → logprob: -9.626469612121582
    5. ')")' → logprob: -9.751469612121582
    6. '"' → logprob: -9.876469612121582
    7. '")
' → logprob: -10.751469612121582
    8. '!")' → logprob: -13.376469612121582
    9. ' ")' → logprob: -13.626469612121582
    10. '\"' → logprob: -14.376469612121582

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1516566276550293
    2. '<|end|>' → logprob: -2.2766566276550293
    3. ')' → logprob: -5.026656627655029
    4. '        
' → logprob: -5.151656627655029
    5. '   ' → logprob: -5.276656627655029
    6. '\' → logprob: -5.276656627655029
    7. '
' → logprob: -5.776656627655029
    8. '\n' → logprob: -5.901656627655029
    9. ' ' → logprob: -6.026656627655029
    10. ' 
' → logprob: -6.401656627655029

Token 43: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19684790074825287
    2. 'self' (adapté à ' self') → logprob: -2.446847915649414
    3. '\n' → logprob: -3.571847915649414
    4. '   ' → logprob: -3.696847915649414
    5. '\' → logprob: -4.696847915649414
    6. '        
' → logprob: -4.821847915649414
    7. ' 
' → logprob: -4.946847915649414
    8. ' self' → logprob: -5.446847915649414
    9. '    
' → logprob: -5.571847915649414
    10. '        ' → logprob: -6.696847915649414

Token 44: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.20179854333400726
    2. '.' → logprob: -1.7017985582351685
    3. ' .' → logprob: -8.201798439025879
    4. '._' → logprob: -9.201798439025879
    5. '.Base' → logprob: -13.076798439025879
    6. 'base' → logprob: -13.326798439025879
    7. ' base' → logprob: -13.326798439025879
    8. '.BASE' → logprob: -13.951798439025879
    9. '.bas' → logprob: -14.326798439025879
    10. '​.' → logprob: -14.826798439025879

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05536254495382309
    2. '=' → logprob: -2.9303624629974365
    3. '_' → logprob: -8.055362701416016
    4. ' ' → logprob: -8.805362701416016
    5. ' =
' → logprob: -12.430362701416016
    6. ' _' → logprob: -13.055362701416016
    7. '_space' → logprob: -13.305362701416016
    8. ' =)' → logprob: -13.430362701416016
    9. '<|end|>' → logprob: -14.180362701416016
    10. '_=' → logprob: -14.305362701416016

Token 46: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0011706985533237457
    2. 'base' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.001171112060547
    4. ' ' → logprob: -16.001171112060547
    5. ' bas' → logprob: -18.001171112060547
    6. '	base' → logprob: -18.251171112060547
    7. '(base' → logprob: -18.626171112060547
    8. '_base' → logprob: -19.501171112060547
    9. 'Base' → logprob: -19.876171112060547
    10. ' bases' → logprob: -20.376171112060547

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1721241474151611
    2. '   ' → logprob: -1.4221241474151611
    3. '\n' → logprob: -1.6721241474151611
    4. '\' → logprob: -2.547124147415161
    5. '<|end|>' → logprob: -2.797124147415161
    6. '    
' → logprob: -2.922124147415161
    7. ':' → logprob: -3.922124147415161
    8. '```' → logprob: -5.047123908996582
    9. '.' → logprob: -5.172123908996582
    10. ' 
' → logprob: -5.297123908996582

Token 48: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.176599383354187
    2. '
' → logprob: -1.426599383354187
    3. '\n' → logprob: -1.551599383354187
    4. '\' → logprob: -2.4265995025634766
    5. '    
' → logprob: -2.8015995025634766
    6. ' 
' → logprob: -3.6765995025634766
    7. '```' → logprob: -4.426599502563477
    8. '<|end|>' → logprob: -4.551599502563477
    9. ' ' → logprob: -4.926599502563477
    10. '  
' → logprob: -5.051599502563477

Token 49: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2728588581085205
    2. '   ' → logprob: -1.5228588581085205
    3. 'def' → logprob: -5.272858619689941
    4. ' ' → logprob: -5.647858619689941
    5. '    
' → logprob: -6.522858619689941
    6. '\n' → logprob: -6.647858619689941
    7. '    ' → logprob: -6.647858619689941
    8. '
' → logprob: -6.897858619689941
    9. ' def' → logprob: -6.897858619689941
    10. '        
' → logprob: -7.147858619689941

Token 50: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.4324662983417511
    2. '.characters' → logprob: -2.3074662685394287
    3. '.al' → logprob: -2.4324662685394287
    4. '.' → logprob: -2.6824662685394287
    5. ' .' → logprob: -2.9324662685394287
    6. '._' → logprob: -3.6824662685394287
    7. '.ch' → logprob: -5.807466506958008
    8. '.value' → logprob: -5.932466506958008
    9. '.con' → logprob: -6.307466506958008
    10. '.charset' → logprob: -6.557466506958008

Token 51: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00022046364028938115
    2. 'igit' → logprob: -8.62522029876709
    3. 'ig' → logprob: -10.25022029876709
    4. 'igs' → logprob: -12.75022029876709
    5. 'i' → logprob: -14.00022029876709
    6. 'ict' → logprob: -14.50022029876709
    7. 'igi' → logprob: -15.25022029876709
    8. 'icts' → logprob: -15.37522029876709
    9. 'igts' → logprob: -15.62522029876709
    10. 'digits' → logprob: -15.75022029876709

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07011793553829193
    2. '=' → logprob: -2.695117950439453
    3. '_' → logprob: -8.945117950439453
    4. '<|end|>' → logprob: -10.570117950439453
    5. ' ' → logprob: -11.820117950439453
    6. '=[]' → logprob: -12.570117950439453
    7. '[:]' → logprob: -12.945117950439453
    8. 's' → logprob: -13.195117950439453
    9. ' =
' → logprob: -13.695117950439453
    10. ' =)' → logprob: -13.695117950439453

Token 53: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.47909432649612427
    2. '"' → logprob: -1.4790942668914795
    3. ' '' → logprob: -2.1040942668914795
    4. ''' → logprob: -3.4790942668914795
    5. ' ' → logprob: -11.979094505310059
    6. 'string' → logprob: -12.979094505310059
    7. ''int' → logprob: -13.354094505310059
    8. ''r' → logprob: -13.729094505310059
    9. ''d' → logprob: -13.979094505310059
    10. ''m' → logprob: -14.229094505310059

Token 54: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -1.9361264946837764e-07
    2. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -16.125
    3. '01' → logprob: -18.5
    4. ' ' → logprob: -19.125
    5. '0' → logprob: -19.25
    6. '"' → logprob: -19.75
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.75
    8. '013' → logprob: -21.375
    9. ''' → logprob: -21.625
    10. '234' → logprob: -22.5

Token 55: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -3.128163257315464e-07
    2. '012' → logprob: -16.625
    3. '3' → logprob: -17.0
    4. '346' → logprob: -17.625
    5. '789' → logprob: -19.625
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -20.875
    7. '234' → logprob: -21.25
    8. '348' → logprob: -21.375
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -21.375
    10. '34' → logprob: -21.375

Token 56: '678' (ID: 30833)
  Prédit: '678'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -9.088346359931165e-07
    2. '789' → logprob: -14.250000953674316
    3. '679' → logprob: -16.5
    4. '67' → logprob: -17.25
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -17.75
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -19.25
    7. '687' → logprob: -19.375
    8. '6' → logprob: -19.5
    9. '012' → logprob: -19.75
    10. '689' → logprob: -20.0

Token 57: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.981667537620524e-06
    2. '901' → logprob: -14.000001907348633
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -14.000001907348633
    4. 'abcdef' → logprob: -16.500001907348633
    5. 'qrst' → logprob: -16.750001907348633
    6. '９' → logprob: -17.000001907348633
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -17.000001907348633
    8. '٩' → logprob: -17.750001907348633
    9. '90' → logprob: -17.750001907348633
    10. '912' → logprob: -17.875001907348633

Token 58: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' (ID: 184150)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -0.07889485359191895
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.578894853591919
    3. 'ABC' → logprob: -12.45389461517334
    4. 'ABCDEFGHIJKLMNOP' → logprob: -13.70389461517334
    5. 'ABCDEFGHI' → logprob: -16.328895568847656
    6. 'abcdef' → logprob: -17.328895568847656
    7. 'abcdefghijkl' → logprob: -17.703895568847656
    8. 'ABCDEFG' → logprob: -17.703895568847656
    9. 'QRSTUVWXYZ' → logprob: -18.078895568847656
    10. '"' → logprob: -18.203895568847656

Token 59: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1517960956552997e-05
    2. '")' → logprob: -11.875011444091797
    3. ' "' → logprob: -13.500011444091797
    4. '"`' → logprob: -13.750011444091797
    5. ''"' → logprob: -14.250011444091797
    6. '"
' → logprob: -14.500011444091797
    7. '"""' → logprob: -15.625011444091797
    8. '```' → logprob: -15.875011444091797
    9. '"}' → logprob: -16.500011444091797
    10. ')"' → logprob: -16.625011444091797

Token 60: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49819448590278625
    2. '
' → logprob: -2.123194456100464
    3. '\n' → logprob: -2.748194456100464
    4. '    
' → logprob: -2.998194456100464
    5. '<|end|>' → logprob: -3.498194456100464
    6. ' 
' → logprob: -3.873194456100464
    7. '```' → logprob: -3.873194456100464
    8. '\' → logprob: -3.873194456100464
    9. ' ' → logprob: -4.248194694519043
    10. 'def' → logprob: -4.248194694519043

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016099359840154648
    2. ' def' → logprob: -4.391099452972412
    3. 'def' → logprob: -5.641099452972412
    4. '    
' → logprob: -11.141098976135254
    5. '        
' → logprob: -12.141098976135254
    6. '	def' → logprob: -12.641098976135254
    7. '    ' → logprob: -12.766098976135254
    8. '   ' → logprob: -13.016098976135254
    9. '       ' → logprob: -13.516098976135254
    10. ' ' → logprob: -13.516098976135254

Token 62: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.39933302998542786
    2. 'def' (adapté à ' def') → logprob: -1.1493330001831055
    3. '   ' → logprob: -4.3993330001831055
    4. 'd' → logprob: -9.899333000183105
    5. ' ' → logprob: -10.524333000183105
    6. ' d' → logprob: -11.774333000183105
    7. '	def' → logprob: -12.149333000183105
    8. 'de' → logprob: -13.274333000183105
    9. '    
' → logprob: -13.274333000183105
    10. '```' → logprob: -13.399333000183105

Token 63: ' char' (ID: 1826)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.49514225125312805
    2. ' ' → logprob: -0.9951422214508057
    3. ' c' → logprob: -4.245142459869385
    4. 'convert' → logprob: -6.370142459869385
    5. ' space' → logprob: -6.745142459869385
    6. ' encode' → logprob: -6.995142459869385
    7. ' ' → logprob: -7.245142459869385
    8. ' t' → logprob: -7.620142459869385
    9. 'c' → logprob: -7.620142459869385
    10. ' to' → logprob: -7.995142459869385

Token 64: '_to' (ID: 5089)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.8901697397232056
    2. '_' → logprob: -1.6401697397232056
    3. '_to' → logprob: -1.6401697397232056
    4. 'To' → logprob: -2.140169620513916
    5. 's' → logprob: -3.390169620513916
    6. '_t' → logprob: -3.640169620513916
    7. '2' → logprob: -4.265169620513916
    8. '(' → logprob: -6.140169620513916
    9. 't' → logprob: -6.265169620513916
    10. '   ' → logprob: -7.515169620513916

Token 65: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0485343337059021
    2. '_value' → logprob: -4.048534393310547
    3. '_digit' → logprob: -4.298534393310547
    4. '_i' → logprob: -4.673534393310547
    5. '_val' → logprob: -5.923534393310547
    6. '_int' → logprob: -6.548534393310547
    7. ' _' → logprob: -6.923534393310547
    8. '_number' → logprob: -7.673534393310547
    9. '_decimal' → logprob: -7.923534393310547
    10. '_integer' → logprob: -8.173534393310547

Token 66: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026882339268922806
    2. '(self' → logprob: -3.6518824100494385
    3. '(s' → logprob: -7.901882171630859
    4. ' (' → logprob: -9.02688217163086
    5. 's' → logprob: -10.02688217163086
    6. '   ' → logprob: -11.52688217163086
    7. ' ' → logprob: -11.77688217163086
    8. '(
' → logprob: -11.90188217163086
    9. '("("' → logprob: -12.40188217163086
    10. 'self' → logprob: -12.77688217163086

Token 67: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06400573253631592
    2. '):' → logprob: -3.4390058517456055
    3. '[' → logprob: -3.6890058517456055
    4. '(' → logprob: -5.9390058517456055
    5. ' )' → logprob: -6.3140058517456055
    6. ' ):' → logprob: -9.564005851745605
    7. ' ' → logprob: -9.814005851745605
    8. '   ' → logprob: -9.814005851745605
    9. ',' → logprob: -10.314005851745605
    10. ']' → logprob: -10.564005851745605

Token 68: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8736897706985474
    2. ' self' → logprob: -1.7486897706985474
    3. 'self' → logprob: -1.9986897706985474
    4. 'char' → logprob: -2.123689651489258
    5. ' char' → logprob: -2.248689651489258
    6. ' c' → logprob: -3.123689651489258
    7. 's' → logprob: -7.123689651489258
    8. ')' → logprob: -7.248689651489258
    9. 'ch' → logprob: -7.373689651489258
    10. '   ' → logprob: -7.498689651489258

Token 69: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4744791090488434
    2. '):' → logprob: -0.974479079246521
    3. ' )' → logprob: -8.599478721618652
    4. ' ):' → logprob: -8.974478721618652
    5. '):
' → logprob: -9.974478721618652
    6. ' ' → logprob: -10.974478721618652
    7. '   ' → logprob: -12.349478721618652
    8. 'a' → logprob: -12.724478721618652
    9. ':' → logprob: -13.099478721618652
    10. 'u' → logprob: -13.224478721618652

Token 70: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9071679711341858
    2. ' str' → logprob: -0.9071679711341858
    3. ')' → logprob: -1.657167911529541
    4. ' )' → logprob: -6.532167911529541
    5. '[str' → logprob: -8.4071683883667
    6. ':str' → logprob: -8.5321683883667
    7. ' ' → logprob: -10.4071683883667
    8. '):' → logprob: -10.9071683883667
    9. '	str' → logprob: -11.1571683883667
    10. '   ' → logprob: -11.5321683883667

Token 71: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12701043486595154
    2. ')' → logprob: -2.1270103454589844
    3. ' ):' → logprob: -10.252010345458984
    4. ':' → logprob: -10.877010345458984
    5. ')->' → logprob: -11.627010345458984
    6. '   ' → logprob: -11.877010345458984
    7. '):
' → logprob: -12.127010345458984
    8. ' )' → logprob: -12.377010345458984
    9. ' ' → logprob: -13.877010345458984
    10. '       ' → logprob: -15.752010345458984

Token 72: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08140812069177628
    2. '):' → logprob: -2.5814080238342285
    3. ' :' → logprob: -6.8314080238342285
    4. ':return' → logprob: -7.5814080238342285
    5. ')' → logprob: -7.9564080238342285
    6. '->' → logprob: -8.456408500671387
    7. ')->' → logprob: -8.956408500671387
    8. ' ->' → logprob: -9.081408500671387
    9. ':int' → logprob: -10.581408500671387
    10. '>:' → logprob: -10.581408500671387

Token 73: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38689693808555603
    2. ' int' → logprob: -1.1368969678878784
    3. ' ' → logprob: -10.636897087097168
    4. '[int' → logprob: -14.511897087097168
    5. '  ' → logprob: -14.636897087097168
    6. '	int' → logprob: -15.386897087097168
    7. '   ' → logprob: -15.761897087097168
    8. ' i' → logprob: -15.761897087097168
    9. ':int' → logprob: -16.26189613342285
    10. 'i' → logprob: -16.51189613342285

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023352126590907574
    2. ' :' → logprob: -6.252335071563721
    3. ':return' → logprob: -8.127335548400879
    4. '):' → logprob: -9.377335548400879
    5. ':
' → logprob: -11.877335548400879
    6. ':**' → logprob: -12.127335548400879
    7. '   ' → logprob: -12.752335548400879
    8. '       ' → logprob: -12.877335548400879
    9. '<|end|>' → logprob: -12.877335548400879
    10. ')' → logprob: -13.877335548400879

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29523783922195435
    2. ':' → logprob: -1.6702377796173096
    3. ' ' → logprob: -3.4202377796173096
    4. '    ' → logprob: -4.420238018035889
    5. '   ' → logprob: -4.545238018035889
    6. ' :' → logprob: -5.670238018035889
    7. '        ' → logprob: -5.795238018035889
    8. ':return' → logprob: -6.295238018035889
    9. '<|end|>' → logprob: -7.295238018035889
    10. '  ' → logprob: -7.295238018035889

Token 76: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5370252132415771
    2. 'return' → logprob: -1.1620252132415771
    3. ' return' → logprob: -3.412025213241577
    4. ' ' → logprob: -3.662025213241577
    5. 'r' → logprob: -3.912025213241577
    6. 'c' → logprob: -5.537025451660156
    7. ')' → logprob: -5.662025451660156
    8. 'i' → logprob: -5.787025451660156
    9. ':return' → logprob: -6.162025451660156
    10. '   ' → logprob: -6.162025451660156

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759546756744385
    2. '=' → logprob: -0.8259546756744385
    3. ' ' → logprob: -11.45095443725586
    4. '  ' → logprob: -13.95095443725586
    5. '   ' → logprob: -13.95095443725586
    6. 's' → logprob: -14.07595443725586
    7. 'eturn' → logprob: -14.82595443725586
    8. ' =
' → logprob: -14.95095443725586
    9. 'ex' → logprob: -15.20095443725586
    10. '_' → logprob: -15.45095443725586

Token 78: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022662580013275
    2. ' self' → logprob: -2.350226640701294
    3. '       ' → logprob: -11.100226402282715
    4. '           ' → logprob: -13.475226402282715
    5. 's' → logprob: -14.600226402282715
    6. 'ord' → logprob: -14.600226402282715
    7. 'elf' → logprob: -14.725226402282715
    8. '(self' → logprob: -14.850226402282715
    9. '	self' → logprob: -15.100226402282715
    10. 'Self' → logprob: -15.225226402282715

Token 79: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.13488110899925232
    2. '.' → logprob: -2.384881019592285
    3. 'xd' → logprob: -4.134881019592285
    4. 'x' → logprob: -4.634881019592285
    5. 'igits' → logprob: -5.759881019592285
    6. ' .' → logprob: -7.009881019592285
    7. 'digits' → logprob: -7.009881019592285
    8. 't' → logprob: -7.634881019592285
    9. '.t' → logprob: -8.259881019592285
    10. 's' → logprob: -8.384881019592285

Token 80: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0002557369298301637
    2. 'igts' → logprob: -8.625255584716797
    3. 'ig' → logprob: -10.375255584716797
    4. 'digits' → logprob: -11.000255584716797
    5. 'igit' → logprob: -11.250255584716797
    6. 'g' → logprob: -12.875255584716797
    7. 'i' → logprob: -12.875255584716797
    8. 'ights' → logprob: -13.875255584716797
    9. 'igi' → logprob: -14.125255584716797
    10. 'c' → logprob: -14.250255584716797

Token 81: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.01661781407892704
    2. '.' → logprob: -4.266617774963379
    3. '.find' → logprob: -6.016617774963379
    4. ' .' → logprob: -11.766617774963379
    5. '.Index' → logprob: -12.266617774963379
    6. 'index' → logprob: -14.141617774963379
    7. '.findall' → logprob: -16.266618728637695
    8. '.startswith' → logprob: -17.391618728637695
    9. ' index' → logprob: -17.641618728637695
    10. '#index' → logprob: -18.016618728637695

Token 82: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02326364815235138
    2. '(c' → logprob: -3.773263692855835
    3. '('' → logprob: -11.523263931274414
    4. '(
' → logprob: -12.148263931274414
    5. '((' → logprob: -14.648263931274414
    6. '()' → logprob: -14.773263931274414
    7. '(s' → logprob: -15.023263931274414
    8. ' (' → logprob: -15.898263931274414
    9. '(

' → logprob: -15.898263931274414
    10. '(q' → logprob: -15.898263931274414

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.404745439183898e-05
    2. ' )' → logprob: -10.37503433227539
    3. '       ' → logprob: -13.12503433227539
    4. ')return' → logprob: -14.87503433227539
    5. ')
' → logprob: -15.62503433227539
    6. '))' → logprob: -16.50003433227539
    7. '   ' → logprob: -17.00003433227539
    8. '<|end|>' → logprob: -17.12503433227539
    9. '[' → logprob: -17.25003433227539
    10. ')}' → logprob: -17.50003433227539

Token 84: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00024048985505942255
    2. 'val' → logprob: -8.375240325927734
    3. '	val' → logprob: -12.375240325927734
    4. ' ' → logprob: -12.500240325927734
    5. ' v' → logprob: -13.875240325927734
    6. ' ' → logprob: -14.250240325927734
    7. ' not' → logprob: -15.750240325927734
    8. '[val' → logprob: -16.375240325927734
    9. 'v' → logprob: -17.250240325927734
    10. '(val' → logprob: -17.250240325927734

Token 87: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.01626039855182171
    2. '>=' → logprob: -4.141260623931885
    3. ' <' → logprob: -9.516260147094727
    4. ' >' → logprob: -9.516260147094727
    5. ' ' → logprob: -10.266260147094727
    6. '<|end|>' → logprob: -11.641260147094727
    7. ']>=' → logprob: -11.766260147094727
    8. '>' → logprob: -11.766260147094727
    9. '	' → logprob: -12.141260147094727
    10. ')>=' → logprob: -12.266260147094727

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04363388195633888
    2. 'self' → logprob: -3.1686339378356934
    3. '<|end|>' → logprob: -7.918633937835693
    4. ' ' → logprob: -8.293633460998535
    5. ' ' → logprob: -12.168633460998535
    6. '<|end|>' → logprob: -12.543633460998535
    7. '	self' → logprob: -12.668633460998535
    8. '20' → logprob: -13.293633460998535
    9. '(self' → logprob: -13.918633460998535
    10. '32' → logprob: -14.043633460998535

Token 89: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.05596432089805603
    2. '.' → logprob: -2.930964231491089
    3. 'base' → logprob: -7.430964469909668
    4. ' base' → logprob: -8.430964469909668
    5. ' .' → logprob: -8.680964469909668
    6. ' ' → logprob: -10.055964469909668
    7. '_base' → logprob: -10.805964469909668
    8. '	base' → logprob: -11.680964469909668
    9. '<|end|>' → logprob: -11.680964469909668
    10. '.
' → logprob: -12.055964469909668

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001675302512012422
    2. ' :' → logprob: -6.626675128936768
    3. ':
' → logprob: -8.626675605773926
    4. ':return' → logprob: -9.126675605773926
    5. '):' → logprob: -10.251675605773926
    6. ' or' → logprob: -11.001675605773926
    7. ')' → logprob: -13.001675605773926
    8. ' :
' → logprob: -13.501675605773926
    9. '<|end|>' → logprob: -13.626675605773926
    10. ' and' → logprob: -14.001675605773926

Token 91: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035883836448192596
    2. '           ' → logprob: -4.285883903503418
    3. '       ' → logprob: -4.910883903503418
    4. '<|end|>' → logprob: -5.410883903503418
    5. ':
' → logprob: -5.535883903503418
    6. ' raise' → logprob: -6.535883903503418
    7. ':return' → logprob: -6.910883903503418
    8. ' :' → logprob: -7.035883903503418
    9. 'raise' → logprob: -8.285883903503418
    10. '	raise' → logprob: -8.410883903503418

Token 92: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.046498291194438934
    2. ' ' → logprob: -4.4214982986450195
    3. '           ' → logprob: -4.6714982986450195
    4. '	raise' → logprob: -4.9214982986450195
    5. 'raise' (adapté à ' raise') → logprob: -5.0464982986450195
    6. '       ' → logprob: -5.6714982986450195
    7. ' 
' → logprob: -6.1714982986450195
    8. '<|end|>' → logprob: -6.5464982986450195
    9. '_raise' → logprob: -7.5464982986450195
    10. '        ' → logprob: -7.6714982986450195

Token 93: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -8.08944896562025e-05
    2. ' ' → logprob: -9.750081062316895
    3. ' ' → logprob: -11.375081062316895
    4. '	Value' → logprob: -12.375081062316895
    5. ' Val' → logprob: -12.625081062316895
    6. 'Value' → logprob: -12.750081062316895
    7. ' value' → logprob: -15.125081062316895
    8. '_Value' → logprob: -16.125080108642578
    9. ' Va' → logprob: -16.375080108642578
    10. '_value' → logprob: -17.000080108642578

Token 94: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.014335552230477333
    2. 'rror' → logprob: -4.264335632324219
    3. 'alue' → logprob: -9.514335632324219
    4. 'l' → logprob: -10.139335632324219
    5. ' ' → logprob: -11.264335632324219
    6. 'r' → logprob: -11.514335632324219
    7. ' Error' → logprob: -11.889335632324219
    8. '   ' → logprob: -12.014335632324219
    9. 'al' → logprob: -12.139335632324219
    10. '  ' → logprob: -12.764335632324219

Token 95: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2544204294681549
    2. '(' → logprob: -1.5044203996658325
    3. '(f' → logprob: -6.004420280456543
    4. '(
' → logprob: -11.254420280456543
    5. '('' → logprob: -12.879420280456543
    6. '("("' → logprob: -13.004420280456543
    7. '(

' → logprob: -13.379420280456543
    8. '()' → logprob: -15.254420280456543
    9. 'f' → logprob: -15.504420280456543
    10. '("")' → logprob: -15.504420280456543

Token 96: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.594862699508667
    2. '(' → logprob: -1.219862699508667
    3. '(f' → logprob: -2.594862699508667
    4. '("' → logprob: -3.469862699508667
    5. ''' → logprob: -4.219862937927246
    6. 'Invalid' → logprob: -4.719862937927246
    7. ' f' → logprob: -4.719862937927246
    8. ' Invalid' → logprob: -4.844862937927246
    9. '('' → logprob: -5.969862937927246
    10. ')' → logprob: -7.344862937927246

Token 97: 'Digit' (ID: 46997)
  Prédit: 'Character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Character' → logprob: -0.05038629099726677
    2. 'Invalid' → logprob: -3.8003861904144287
    3. 'Digit' → logprob: -4.050386428833008
    4. '"' → logprob: -5.050386428833008
    5. ' Character' → logprob: -6.300386428833008
    6. 'Char' → logprob: -7.925386428833008
    7. ''' → logprob: -8.175386428833008
    8. ' character' → logprob: -9.050386428833008
    9. ' Invalid' → logprob: -9.550386428833008
    10. 'Value' → logprob: -9.800386428833008

Token 98: ' '{' (ID: 24918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8926452398300171
    2. ' '' → logprob: -1.517645239830017
    3. ' '{' → logprob: -1.517645239830017
    4. ' {' → logprob: -2.1426453590393066
    5. ' not' → logprob: -4.017645359039307
    6. ''' → logprob: -5.142645359039307
    7. ' out' → logprob: -5.642645359039307
    8. ' c' → logprob: -6.017645359039307
    9. ' value' → logprob: -6.392645359039307
    10. '{' → logprob: -7.017645359039307

Token 99: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002655079588294029
    2. ' c' → logprob: -8.875265121459961
    3. '{' → logprob: -9.000265121459961
    4. '%c' → logprob: -13.750265121459961
    5. '	c' → logprob: -14.750265121459961
    6. ')c' → logprob: -15.625265121459961
    7. '<|end|>' → logprob: -15.625265121459961
    8. '}' → logprob: -15.750265121459961
    9. ' ' → logprob: -16.37526512145996
    10. '{
' → logprob: -17.37526512145996

Token 100: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25199562311172485
    2. '}'' → logprob: -1.50199556350708
    3. ' is' → logprob: -11.251996040344238
    4. ''}' → logprob: -11.376996040344238
    5. ' '' → logprob: -11.376996040344238
    6. ''s' → logprob: -11.501996040344238
    7. '''' → logprob: -11.876996040344238
    8. ')'' → logprob: -12.126996040344238
    9. ''"' → logprob: -13.501996040344238
    10. '}' → logprob: -13.501996040344238

Token 101: ' not' (ID: 625)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07334964722394943
    2. ' not' → logprob: -2.698349714279175
    3. ' does' → logprob: -6.948349475860596
    4. ')' → logprob: -7.573349475860596
    5. ' cannot' → logprob: -7.698349475860596
    6. ' ' → logprob: -7.823349475860596
    7. '}' → logprob: -8.198349952697754
    8. ' out' → logprob: -8.448349952697754
    9. 'not' → logprob: -8.823349952697754
    10. ' exceeds' → logprob: -8.823349952697754

Token 102: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.003702924121171236
    2. 'valid' → logprob: -6.1287031173706055
    3. ' supported' → logprob: -6.8787031173706055
    4. ' compatible' → logprob: -8.003703117370605
    5. 'supported' → logprob: -9.878703117370605
    6. 'compatible' → logprob: -10.128703117370605
    7. ' in' → logprob: -10.503703117370605
    8. ' allowed' → logprob: -10.878703117370605
    9. 'upported' → logprob: -12.628703117370605
    10. 'allowed' → logprob: -12.878703117370605

Token 103: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01343232300132513
    2. 'for' → logprob: -5.013432502746582
    3. ' in' → logprob: -5.013432502746582
    4. ' ' → logprob: -10.638432502746582
    5. 'in' → logprob: -11.638432502746582
    6. ' f' → logprob: -12.013432502746582
    7. ')' → logprob: -12.763432502746582
    8. 'f' → logprob: -13.888432502746582
    9. '  ' → logprob: -14.263432502746582
    10. '   ' → logprob: -14.388432502746582

Token 104: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0023658976424485445
    2. ' the' → logprob: -6.752366065979004
    3. ' ' → logprob: -7.002366065979004
    4. 'base' → logprob: -8.377366065979004
    5. ' this' → logprob: -10.502366065979004
    6. ' a' → logprob: -11.877366065979004
    7. ' ' → logprob: -12.002366065979004
    8. 'the' → logprob: -12.877366065979004
    9. '	base' → logprob: -13.127366065979004
    10. ' self' → logprob: -13.502366065979004

Token 105: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.011082125827670097
    2. '{' → logprob: -4.511082172393799
    3. ' ' → logprob: -11.13608169555664
    4. ' }' → logprob: -12.51108169555664
    5. '}' → logprob: -12.88608169555664
    6. '{s' → logprob: -13.13608169555664
    7. ' "' → logprob: -13.51108169555664
    8. ' self' → logprob: -13.51108169555664
    9. ' ")' → logprob: -13.51108169555664
    10. ' '{' → logprob: -13.63608169555664

Token 106: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5006404519081116
    2. ' self' → logprob: -1.0006403923034668
    3. ' }' → logprob: -5.125640392303467
    4. ' {' → logprob: -5.125640392303467
    5. ' ' → logprob: -5.375640392303467
    6. '{' → logprob: -5.500640392303467
    7. '}' → logprob: -5.750640392303467
    8. 's' → logprob: -6.875640392303467
    9. ' f' → logprob: -8.750640869140625
    10. ' ' → logprob: -8.875640869140625

Token 107: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.0620056614279747
    2. '.' → logprob: -2.8120057582855225
    3. ' .' → logprob: -10.937005996704102
    4. 'base' → logprob: -11.937005996704102
    5. '.
' → logprob: -12.562005996704102
    6. '}.' → logprob: -12.812005996704102
    7. '}' → logprob: -13.062005996704102
    8. ' base' → logprob: -13.687005996704102
    9. ' ' → logprob: -14.187005996704102
    10. '.bas' → logprob: -14.187005996704102

Token 108: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.40941351652145386
    2. '")' → logprob: -1.2844135761260986
    3. ' }' → logprob: -3.4094135761260986
    4. '')' → logprob: -4.2844133377075195
    5. '}")
' → logprob: -5.5344133377075195
    6. ''' → logprob: -5.6594133377075195
    7. '.")' → logprob: -6.2844133377075195
    8. '}' → logprob: -8.03441333770752
    9. '").' → logprob: -8.03441333770752
    10. ' ")' → logprob: -8.03441333770752

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44935354590415955
    2. '
' → logprob: -1.074353575706482
    3. 'return' → logprob: -5.4493536949157715
    4. '   ' → logprob: -6.0743536949157715
    5. '	' → logprob: -6.0743536949157715
    6. '    
' → logprob: -6.1993536949157715
    7. '        
' → logprob: -6.3243536949157715
    8. ' return' → logprob: -6.6993536949157715
    9. '<|end|>' → logprob: -6.6993536949157715
    10. '' → logprob: -7.0743536949157715

Token 110: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11980611085891724
    2. 'return' (adapté à ' return') → logprob: -2.9948060512542725
    3. '
' → logprob: -3.6198060512542725
    4. ' return' → logprob: -3.7448060512542725
    5. '        
' → logprob: -5.494806289672852
    6. '	return' → logprob: -6.119806289672852
    7. '   ' → logprob: -6.744806289672852
    8. '    
' → logprob: -6.994806289672852
    9. ' 
' → logprob: -7.119806289672852
    10. '<|end|>' → logprob: -7.244806289672852

Token 111: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0007106438861228526
    2. 'val' → logprob: -7.250710487365723
    3. ' ' → logprob: -14.750710487365723
    4. ' v' → logprob: -16.00071144104004
    5. ' ' → logprob: -16.37571144104004
    6. '	val' → logprob: -17.12571144104004
    7. ' va' → logprob: -18.25071144104004
    8. '[val' → logprob: -18.62571144104004
    9. '(val' → logprob: -19.00071144104004
    10. '_val' → logprob: -19.37571144104004

Token 112: '
    
' (ID: 15698)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.71666419506073
    2. '
' → logprob: -0.96666419506073
    3. '    
' → logprob: -2.5916643142700195
    4. ' ' → logprob: -3.8416643142700195
    5. '   ' → logprob: -4.7166643142700195
    6. '  
' → logprob: -5.0916643142700195
    7. '<|end|>' → logprob: -5.2166643142700195
    8. '\n' → logprob: -5.7166643142700195
    9. '' → logprob: -5.9666643142700195
    10. '\' → logprob: -5.9666643142700195

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13386641442775726
    2. '    
' → logprob: -2.383866310119629
    3. ' 
' → logprob: -4.008866310119629
    4. '
' → logprob: -4.883866310119629
    5. ' ' → logprob: -5.633866310119629
    6. '    ' → logprob: -6.758866310119629
    7. '   
' → logprob: -7.508866310119629
    8. '  
' → logprob: -7.633866310119629
    9. '  ' → logprob: -7.758866310119629
    10. '     
' → logprob: -8.383866310119629

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20075581967830658
    2. '   ' → logprob: -1.8257558345794678
    3. ' def' → logprob: -4.325755596160889
    4. '    
' → logprob: -5.200755596160889
    5. ' ' → logprob: -6.950755596160889
    6. '
' → logprob: -7.825755596160889
    7. ' 
' → logprob: -8.200756072998047
    8. '        
' → logprob: -9.325756072998047
    9. '   
' → logprob: -9.450756072998047
    10. '  ' → logprob: -9.450756072998047

Token 115: ' str' (ID: 989)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.2960178256034851
    2. ' convert' → logprob: -1.4210178852081299
    3. ' v' → logprob: -5.046017646789551
    4. ' ' → logprob: -5.921017646789551
    5. '_val' → logprob: -6.796017646789551
    6. ' space' → logprob: -6.921017646789551
    7. ' def' → logprob: -7.296017646789551
    8. 'convert' → logprob: -7.296017646789551
    9. 'val' → logprob: -7.546017646789551
    10. ' value' → logprob: -7.921017646789551

Token 116: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.008277080953121185
    2. '_' → logprob: -5.38327693939209
    3. 'ing' → logprob: -6.13327693939209
    4. 't' → logprob: -7.25827693939209
    5. '_convert' → logprob: -8.25827693939209
    6. 'to' → logprob: -8.75827693939209
    7. '2' → logprob: -9.38327693939209
    8. 'To' → logprob: -9.63327693939209
    9. '_in' → logprob: -10.25827693939209
    10. '_t' → logprob: -10.38327693939209

Token 117: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.007022014819085598
    2. 'int' → logprob: -5.257021903991699
    3. '_val' → logprob: -7.007021903991699
    4. '_num' → logprob: -7.632021903991699
    5. 'val' → logprob: -8.5070219039917
    6. '_value' → logprob: -9.5070219039917
    7. '_decimal' → logprob: -9.8820219039917
    8. 'num' → logprob: -10.6320219039917
    9. '_' → logprob: -10.8820219039917
    10. 'Int' → logprob: -12.0070219039917

Token 118: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014374921098351479
    2. '(' → logprob: -4.264374732971191
    3. '(s' → logprob: -8.889374732971191
    4. ' (' → logprob: -10.389374732971191
    5. 'self' → logprob: -10.639374732971191
    6. '(
' → logprob: -12.014374732971191
    7. '   ' → logprob: -12.639374732971191
    8. ' ' → logprob: -12.764374732971191
    9. ' self' → logprob: -13.514374732971191
    10. '	self' → logprob: -13.764374732971191

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027926113456487656
    2. '(self' → logprob: -3.777926206588745
    3. ' ,' → logprob: -6.027925968170166
    4. 'self' → logprob: -6.652925968170166
    5. ',self' → logprob: -7.652925968170166
    6. ' self' → logprob: -8.402926445007324
    7. ',s' → logprob: -9.277926445007324
    8. ')' → logprob: -9.902926445007324
    9. 's' → logprob: -10.152926445007324
    10. '   ' → logprob: -10.777926445007324

Token 120: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3621884286403656
    2. ' self' → logprob: -1.737188458442688
    3. 's' → logprob: -2.2371883392333984
    4. ' s' → logprob: -3.8621883392333984
    5. ')' → logprob: -10.862188339233398
    6. '   ' → logprob: -11.612188339233398
    7. ' ' → logprob: -12.362188339233398
    8. '	self' → logprob: -12.737188339233398
    9. '(self' → logprob: -12.862188339233398
    10. '```' → logprob: -13.112188339233398

Token 121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6247230172157288
    2. '):' → logprob: -1.124722957611084
    3. ')' → logprob: -2.999722957611084
    4. ',' → logprob: -3.499722957611084
    5. ' ):' → logprob: -3.624722957611084
    6. ' :' → logprob: -4.499722957611084
    7. ' )' → logprob: -4.999722957611084
    8. ':str' → logprob: -5.624722957611084
    9. ' ,' → logprob: -5.874722957611084
    10. '):
' → logprob: -5.999722957611084

Token 122: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.16324736177921295
    2. 'str' → logprob: -2.0382473468780518
    3. ')' → logprob: -5.038247585296631
    4. ' self' → logprob: -5.038247585296631
    5. ' s' → logprob: -6.038247585296631
    6. 'self' → logprob: -6.163247585296631
    7. 's' → logprob: -6.288247585296631
    8. ' ' → logprob: -7.663247585296631
    9. ' )' → logprob: -7.788247585296631
    10. ' ' → logprob: -9.663247108459473

Token 123: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47483202815055847
    2. ')' → logprob: -0.9748320579528809
    3. '):
' → logprob: -7.849832057952881
    4. ' ):' → logprob: -9.099831581115723
    5. '   ' → logprob: -9.474831581115723
    6. 'self' → logprob: -9.599831581115723
    7. ' )' → logprob: -10.224831581115723
    8. '       ' → logprob: -10.349831581115723
    9. ',' → logprob: -11.349831581115723
    10. '):

' → logprob: -11.849831581115723

Token 124: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08453300595283508
    2. '):' → logprob: -3.5845329761505127
    3. ' :' → logprob: -3.7095329761505127
    4. ')' → logprob: -3.7095329761505127
    5. ' ->' → logprob: -5.709533214569092
    6. '->' → logprob: -8.084532737731934
    7. '       ' → logprob: -8.334532737731934
    8. '   ' → logprob: -8.459532737731934
    9. ')->' → logprob: -9.834532737731934
    10. '():' → logprob: -10.084532737731934

Token 125: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2519395649433136
    2. 'int' → logprob: -1.5019395351409912
    3. '	int' → logprob: -12.75193977355957
    4. ' ' → logprob: -12.87693977355957
    5. '(int' → logprob: -12.87693977355957
    6. '   ' → logprob: -14.00193977355957
    7. '[int' → logprob: -14.37693977355957
    8. ' ' → logprob: -15.25193977355957
    9. ':int' → logprob: -15.50193977355957
    10. '0' → logprob: -15.62693977355957

Token 126: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4852871298789978
    2. ':' → logprob: -1.2352871894836426
    3. '(' → logprob: -2.6102871894836426
    4. '       ' → logprob: -4.235287189483643
    5. ':
' → logprob: -6.735287189483643
    6. ',' → logprob: -6.985287189483643
    7. '   ' → logprob: -7.110287189483643
    8. '(
' → logprob: -7.110287189483643
    9. '):' → logprob: -7.610287189483643
    10. '(s' → logprob: -8.235286712646484

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5613834261894226
    2. ' result' → logprob: -0.9363834261894226
    3. ' n' → logprob: -4.561383247375488
    4. 'result' → logprob: -4.561383247375488
    5. 'n' → logprob: -4.811383247375488
    6. ' ' → logprob: -5.936383247375488
    7. ' value' → logprob: -6.436383247375488
    8. ' i' → logprob: -7.061383247375488
    9. ' num' → logprob: -7.436383247375488
    10. '0' → logprob: -7.436383247375488

Token 128: ' val' (ID: 1459)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.27748987078666687
    2. ' result' → logprob: -1.5274899005889893
    3. 'value' → logprob: -4.65248966217041
    4. 'num' → logprob: -5.15248966217041
    5. '       ' → logprob: -6.02748966217041
    6. 'res' → logprob: -6.27748966217041
    7. 'n' → logprob: -6.65248966217041
    8. ' value' → logprob: -6.65248966217041
    9. 'total' → logprob: -7.40248966217041
    10. ' res' → logprob: -7.40248966217041

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16110709309577942
    2. '=' → logprob: -1.911107063293457
    3. ' ' → logprob: -7.036107063293457
    4. '_' → logprob: -13.411107063293457
    5. ',' → logprob: -14.286107063293457
    6. '0' → logprob: -15.161107063293457
    7. 's' → logprob: -15.286107063293457
    8. '   ' → logprob: -16.286108016967773
    9. '_=' → logprob: -16.661108016967773
    10. ')' → logprob: -17.286108016967773

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246755823493004
    2. ' ' → logprob: -3.7732467651367188
    3. '   ' → logprob: -13.773246765136719
    4. ' ' → logprob: -16.02324676513672
    5. '  ' → logprob: -17.14824676513672
    6. '       ' → logprob: -17.71074676513672
    7. '۰' → logprob: -18.27324676513672
    8. '    ' → logprob: -18.77324676513672
    9. 's' → logprob: -18.89824676513672
    10. '	' → logprob: -19.02324676513672

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.00001335144043
    4. '۰' → logprob: -18.37501335144043
    5. '000' → logprob: -20.00001335144043
    6. '０' → logprob: -20.00001335144043
    7. '00' → logprob: -20.06251335144043
    8. 's' → logprob: -20.75001335144043
    9. '=' → logprob: -20.75001335144043
    10. '```' → logprob: -20.81251335144043

Token 132: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0712331533432007
    2. ' ' → logprob: -1.3212331533432007
    3. '<|end|>' → logprob: -1.6962331533432007
    4. ' for' → logprob: -2.0712332725524902
    5. '       ' → logprob: -3.6962332725524902
    6. ' 
' → logprob: -4.32123327255249
    7. 'for' → logprob: -4.82123327255249
    8. ',' → logprob: -5.07123327255249
    9. '' → logprob: -5.19623327255249
    10. '<|end|>' → logprob: -5.82123327255249

Token 133: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3944240212440491
    2. '
' → logprob: -1.5194239616394043
    3. '       ' → logprob: -2.3944239616394043
    4. 'for' → logprob: -5.269423961639404
    5. ' 
' → logprob: -5.394423961639404
    6. ' ' → logprob: -6.519423961639404
    7. '   ' → logprob: -7.019423961639404
    8. '<|end|>' → logprob: -7.144423961639404
    9. '	for' → logprob: -7.269423961639404
    10. '        
' → logprob: -7.394423961639404

Token 134: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47713571786880493
    2. 'for' (adapté à ' for') → logprob: -0.9771357178688049
    3. '       ' → logprob: -5.85213565826416
    4. ' ' → logprob: -9.85213565826416
    5. '   ' → logprob: -9.97713565826416
    6. ' 
' → logprob: -10.47713565826416
    7. '
' → logprob: -11.22713565826416
    8. '	for' → logprob: -11.35213565826416
    9. '        
' → logprob: -11.97713565826416
    10. '        ' → logprob: -12.22713565826416

Token 135: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.04910311475396156
    2. 'c' → logprob: -3.049103021621704
    3. ' ' → logprob: -7.799103260040283
    4. 'char' → logprob: -10.299102783203125
    5. ' i' → logprob: -11.299102783203125
    6. 'ch' → logprob: -11.549102783203125
    7. 's' → logprob: -11.674102783203125
    8. ' s' → logprob: -11.674102783203125
    9. ' char' → logprob: -11.799102783203125
    10. 'i' → logprob: -12.424102783203125

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004438186064362526
    2. 'in' → logprob: -5.754438400268555
    3. ' ' → logprob: -6.754438400268555
    4. ' i' → logprob: -10.004438400268555
    5. 's' → logprob: -11.254438400268555
    6. '  ' → logprob: -11.504438400268555
    7. ' :' → logprob: -11.504438400268555
    8. ':' → logprob: -12.629438400268555
    9. '<|end|>' → logprob: -12.754438400268555
    10. '.' → logprob: -12.754438400268555

Token 137: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.018150296062231064
    2. 's' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.768150329589844
    4. ' ' → logprob: -17.893150329589844
    5. '(s' → logprob: -18.455650329589844
    6. '_s' → logprob: -18.518150329589844
    7. '	s' → logprob: -18.643150329589844
    8. '{s' → logprob: -19.018150329589844
    9. 'c' → logprob: -19.143150329589844
    10. '<|end|>' → logprob: -19.643150329589844

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004657137673348188
    2. ' :' → logprob: -5.50465726852417
    3. '):' → logprob: -8.129656791687012
    4. '.' → logprob: -8.754656791687012
    5. ':
' → logprob: -9.504656791687012
    6. '.upper' → logprob: -10.879656791687012
    7. ' ):' → logprob: -12.254656791687012
    8. '       ' → logprob: -12.754656791687012
    9. '.strip' → logprob: -12.879656791687012
    10. ')' → logprob: -13.004656791687012

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24055229127407074
    2. ' ' → logprob: -1.740552306175232
    3. '            ' → logprob: -3.7405521869659424
    4. ' val' → logprob: -5.6155524253845215
    5. ':' → logprob: -5.9905524253845215
    6. '        ' → logprob: -6.2405524253845215
    7. 'val' → logprob: -6.3655524253845215
    8. ',' → logprob: -7.1155524253845215
    9. ' 
' → logprob: -7.2405524253845215
    10. ')' → logprob: -7.4905524253845215

Token 140: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.11911068111658096
    2. 'val' (adapté à ' val') → logprob: -2.244110584259033
    3. ' ' → logprob: -5.619110584259033
    4. 'v' → logprob: -6.494110584259033
    5. '            ' → logprob: -7.869110584259033
    6. '           ' → logprob: -8.619111061096191
    7. ' 
' → logprob: -8.619111061096191
    8. ' v' → logprob: -9.494111061096191
    9. '_val' → logprob: -9.744111061096191
    10. ')' → logprob: -10.119111061096191

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018128673546016216
    2. '=' → logprob: -6.626812934875488
    3. ' *=' → logprob: -7.876812934875488
    4. ' ' → logprob: -9.376812934875488
    5. ' <<=' → logprob: -11.501812934875488
    6. ' +=' → logprob: -11.751812934875488
    7. ')' → logprob: -13.126812934875488
    8. ' |=' → logprob: -14.751812934875488
    9. ' *' → logprob: -14.876812934875488
    10. '_' → logprob: -15.001812934875488

Token 142: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.31328150629997253
    2. 'val' → logprob: -1.313281536102295
    3. '	val' → logprob: -11.688281059265137
    4. '[val' → logprob: -12.188281059265137
    5. ' ' → logprob: -13.563281059265137
    6. '_val' → logprob: -14.188281059265137
    7. '(val' → logprob: -14.313281059265137
    8. 'v' → logprob: -14.563281059265137
    9. ' va' → logprob: -14.563281059265137
    10. '    ' → logprob: -14.688281059265137

Token 143: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0007782964967191219
    2. '*' → logprob: -7.2507781982421875
    3. ' ' → logprob: -9.750778198242188
    4. ' ' → logprob: -12.250778198242188
    5. 'val' → logprob: -12.875778198242188
    6. ' val' → logprob: -13.125778198242188
    7. '_val' → logprob: -15.000778198242188
    8. 'al' → logprob: -16.250778198242188
    9. ' _' → logprob: -16.250778198242188
    10. '_' → logprob: -16.750778198242188

Token 144: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975129522383213
    2. ' self' → logprob: -3.5297513008117676
    3. '       ' → logprob: -15.52975082397461
    4. '	self' → logprob: -15.90475082397461
    5. ' ' → logprob: -16.15475082397461
    6. '(self' → logprob: -16.27975082397461
    7. '_self' → logprob: -16.90475082397461
    8. '```' → logprob: -17.15475082397461
    9. '           ' → logprob: -17.27975082397461
    10. '8' → logprob: -17.65475082397461

Token 145: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.005615177098661661
    2. '.' → logprob: -5.255615234375
    3. 'base' → logprob: -7.880615234375
    4. ' base' → logprob: -13.130615234375
    5. ' .' → logprob: -14.880615234375
    6. '(base' → logprob: -15.505615234375
    7. '.Base' → logprob: -16.005615234375
    8. '.
' → logprob: -16.255615234375
    9. 'Base' → logprob: -16.380615234375
    10. '_base' → logprob: -16.505615234375

Token 146: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687241077423096
    2. '+' → logprob: -1.136872410774231
    3. ' ' → logprob: -14.886872291564941
    4. ' ' → logprob: -14.886872291564941
    5. ' plus' → logprob: -15.011872291564941
    6. '+self' → logprob: -15.011872291564941
    7. ' +
' → logprob: -16.761873245239258
    8. 'plus' → logprob: -17.511873245239258
    9. '＋' → logprob: -18.261873245239258
    10. '+c' → logprob: -18.261873245239258

Token 147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889033854007721
    2. ' self' → logprob: -2.578890323638916
    3. '(self' → logprob: -15.203890800476074
    4. ' ' → logprob: -16.453889846801758
    5. '	self' → logprob: -16.578889846801758
    6. '   ' → logprob: -17.203889846801758
    7. '[self' → logprob: -17.453889846801758
    8. 's' → logprob: -17.703889846801758
    9. ' ' → logprob: -17.703889846801758
    10. 'se' → logprob: -17.953889846801758

Token 148: '.char' (ID: 18508)
  Prédit: '.char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.char' → logprob: -0.00017350474081467837
    2. '.' → logprob: -9.250173568725586
    3. 'char' → logprob: -9.500173568725586
    4. ' .' → logprob: -13.625173568725586
    5. ' char' → logprob: -13.875173568725586
    6. '<char' → logprob: -15.250173568725586
    7. '.Char' → logprob: -17.625173568725586
    8. '.val' → logprob: -17.750173568725586
    9. '-char' → logprob: -17.750173568725586
    10. ',char' → logprob: -18.500173568725586

Token 149: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00041756415157578886
    2. '_t' → logprob: -7.875417709350586
    3. '_' → logprob: -10.250417709350586
    4. 'to' → logprob: -14.250417709350586
    5. 't' → logprob: -15.000417709350586
    6. ' _' → logprob: -15.125417709350586
    7. 'To' → logprob: -15.375417709350586
    8. '_TO' → logprob: -15.500417709350586
    9. '__' → logprob: -16.375417709350586
    10. '_-' → logprob: -16.625417709350586

Token 150: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.011387081816792488
    2. 'val' → logprob: -4.636386871337891
    3. '_' → logprob: -7.136386871337891
    4. 'v' → logprob: -7.636386871337891
    5. '_v' → logprob: -8.38638687133789
    6. 'al' → logprob: -10.26138687133789
    7. '_va' → logprob: -10.76138687133789
    8. ' val' → logprob: -11.13638687133789
    9. 'c' → logprob: -11.26138687133789
    10. 'a' → logprob: -11.51138687133789

Token 151: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.03804333135485649
    2. '(' → logprob: -3.288043260574341
    3. '(
' → logprob: -13.413043022155762
    4. ' (' → logprob: -15.163043022155762
    5. '(

' → logprob: -16.288043975830078
    6. '(C' → logprob: -17.413043975830078
    7. 'c' → logprob: -17.538043975830078
    8. '(s' → logprob: -18.788043975830078
    9. '('' → logprob: -18.788043975830078
    10. '(ci' → logprob: -18.913043975830078

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -12.125006675720215
    3. ')c' → logprob: -13.625006675720215
    4. ')
' → logprob: -15.375006675720215
    5. '))' → logprob: -16.50000762939453
    6. ')`' → logprob: -17.25000762939453
    7. 'c' → logprob: -18.25000762939453
    8. '(' → logprob: -18.50000762939453
    9. '(c' → logprob: -19.12500762939453
    10. '   ' → logprob: -19.12500762939453

Token 153: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5537670254707336
    2. '       ' → logprob: -0.9287670254707336
    3. ' return' → logprob: -3.928766965866089
    4. 'return' → logprob: -5.053767204284668
    5. '        
' → logprob: -6.553767204284668
    6. '   ' → logprob: -6.678767204284668
    7. '    
' → logprob: -7.553767204284668
    8. ' 
' → logprob: -7.928767204284668
    9. '  
' → logprob: -8.928767204284668
    10. '\n' → logprob: -9.553767204284668

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6914876699447632
    2. ' return' → logprob: -0.9414876699447632
    3. '
' → logprob: -2.5664877891540527
    4. '       ' → logprob: -3.6914877891540527
    5. ' 
' → logprob: -5.566487789154053
    6. '   ' → logprob: -6.191487789154053
    7. '        
' → logprob: -7.941487789154053
    8. '    
' → logprob: -7.941487789154053
    9. ' ' → logprob: -8.191487312316895
    10. '	return' → logprob: -8.691487312316895

Token 155: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.005234121344983578
    2. 'val' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.380233764648438
    4. '	val' → logprob: -17.505233764648438
    5. ' va' → logprob: -17.880233764648438
    6. ' v' → logprob: -18.005233764648438
    7. ' ' → logprob: -18.130233764648438
    8. 'v' → logprob: -18.255233764648438
    9. '_val' → logprob: -18.255233764648438
    10. '[val' → logprob: -20.130233764648438

Token 156: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16473934054374695
    2. '    
' → logprob: -2.6647393703460693
    3. '<|end|>' → logprob: -3.1647393703460693
    4. '   ' → logprob: -3.9147393703460693
    5. ' 
' → logprob: -4.53973913192749
    6. '  
' → logprob: -5.91473913192749
    7. ' ' → logprob: -6.03973913192749
    8. '   
' → logprob: -7.28973913192749
    9. '```' → logprob: -7.41473913192749
    10. '

' → logprob: -7.78973913192749

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1160290315747261
    2. 'def' → logprob: -2.2410290241241455
    3. ' def' → logprob: -5.991029262542725
    4. '    
' → logprob: -7.741029262542725
    5. ' ' → logprob: -9.241028785705566
    6. '
' → logprob: -9.366028785705566
    7. '  ' → logprob: -9.991028785705566
    8. '    ' → logprob: -11.616028785705566
    9. '```' → logprob: -11.616028785705566
    10. '   
' → logprob: -12.241028785705566

Token 158: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006210576975718141
    2. '   ' → logprob: -7.6256208419799805
    3. ' def' → logprob: -9.12562084197998
    4. 'd' → logprob: -11.87562084197998
    5. ' ' → logprob: -12.25062084197998
    6. '    
' → logprob: -12.25062084197998
    7. '
' → logprob: -12.50062084197998
    8. '	def' → logprob: -13.25062084197998
    9. '```' → logprob: -14.00062084197998
    10. '  ' → logprob: -14.25062084197998

Token 159: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.21342550218105316
    2. 'int' → logprob: -1.8384255170822144
    3. ' val' → logprob: -4.338425636291504
    4. '_' → logprob: -5.463425636291504
    5. ' _' → logprob: -5.713425636291504
    6. ' space' → logprob: -5.838425636291504
    7. '_int' → logprob: -5.963425636291504
    8. ' i' → logprob: -6.463425636291504
    9. ' def' → logprob: -6.463425636291504
    10. ' ' → logprob: -7.213425636291504

Token 160: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0016407847870141268
    2. 'to' → logprob: -7.001640796661377
    3. '_' → logprob: -7.376640796661377
    4. 'To' → logprob: -9.876640319824219
    5. '_t' → logprob: -10.876640319824219
    6. ' to' → logprob: -11.001640319824219
    7. 't' → logprob: -12.126640319824219
    8. ' _' → logprob: -12.751640319824219
    9. '_TO' → logprob: -13.251640319824219
    10. '_convert' → logprob: -13.751640319824219

Token 161: '_str' (ID: 6182)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.38692909479141235
    2. '_str' → logprob: -1.1369290351867676
    3. 's' → logprob: -10.136929512023926
    4. '_' → logprob: -11.511929512023926
    5. ' str' → logprob: -12.761929512023926
    6. 'Str' → logprob: -13.761929512023926
    7. '   ' → logprob: -14.011929512023926
    8. 'string' → logprob: -14.011929512023926
    9. '```' → logprob: -14.386929512023926
    10. '_string' → logprob: -14.636929512023926

Token 162: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004094619944225997
    2. '(' → logprob: -7.8754096031188965
    3. 'self' → logprob: -10.875409126281738
    4. ' self' → logprob: -12.625409126281738
    5. ' (' → logprob: -12.625409126281738
    6. '(
' → logprob: -13.500409126281738
    7. '(s' → logprob: -14.500409126281738
    8. ' ' → logprob: -14.750409126281738
    9. '	self' → logprob: -14.750409126281738
    10. '   ' → logprob: -15.000409126281738

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005354005377739668
    2. 'self' → logprob: -5.380353927612305
    3. ' ,' → logprob: -7.505353927612305
    4. ',self' → logprob: -9.380353927612305
    5. '(self' → logprob: -9.505353927612305
    6. ' self' → logprob: -11.505353927612305
    7. ')' → logprob: -12.630353927612305
    8. '       ' → logprob: -12.755353927612305
    9. ',
' → logprob: -13.130353927612305
    10. '   ' → logprob: -13.255353927612305

Token 164: ' num' (ID: 2269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01856251060962677
    2. ' self' → logprob: -4.018562316894531
    3. 'n' → logprob: -8.268562316894531
    4. '   ' → logprob: -9.518562316894531
    5. '       ' → logprob: -10.893562316894531
    6. ' ' → logprob: -11.643562316894531
    7. 'val' → logprob: -11.643562316894531
    8. 's' → logprob: -11.768562316894531
    9. ')' → logprob: -11.893562316894531
    10. ' n' → logprob: -12.143562316894531

Token 165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3208978474140167
    2. ',' → logprob: -1.4458978176116943
    3. '):' → logprob: -3.3208978176116943
    4. ')' → logprob: -6.445898056030273
    5. 'self' → logprob: -7.195898056030273
    6. ' :' → logprob: -9.070898056030273
    7. ' ,' → logprob: -9.195898056030273
    8. ' self' → logprob: -9.320898056030273
    9. ':int' → logprob: -9.695898056030273
    10. '   ' → logprob: -10.195898056030273

Token 166: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4741173982620239
    2. 'int' → logprob: -0.9741173982620239
    3. ' ' → logprob: -10.974117279052734
    4. ')' → logprob: -11.349117279052734
    5. '(int' → logprob: -12.724117279052734
    6. 'self' → logprob: -13.349117279052734
    7. ':int' → logprob: -13.349117279052734
    8. '   ' → logprob: -13.974117279052734
    9. ',int' → logprob: -14.099117279052734
    10. ' self' → logprob: -14.224117279052734

Token 167: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2483575940132141
    2. ')' → logprob: -1.8733575344085693
    3. '):' → logprob: -2.7483575344085693
    4. ' ,' → logprob: -6.873357772827148
    5. ' )' → logprob: -8.123357772827148
    6. '   ' → logprob: -8.248357772827148
    7. ' ):' → logprob: -8.373357772827148
    8. ':' → logprob: -8.873357772827148
    9. 'self' → logprob: -8.998357772827148
    10. '       ' → logprob: -9.623357772827148

Token 168: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17503321170806885
    2. ' :' → logprob: -1.9250332117080688
    3. '(self' → logprob: -4.300033092498779
    4. '(' → logprob: -7.675033092498779
    5. ',' → logprob: -8.925033569335938
    6. '       ' → logprob: -9.175033569335938
    7. '   ' → logprob: -9.300033569335938
    8. ' self' → logprob: -9.800033569335938
    9. ' (' → logprob: -9.925033569335938
    10. ' ->' → logprob: -10.050033569335938

Token 169: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5778330564498901
    2. 'str' → logprob: -0.8278330564498901
    3. '"' → logprob: -6.95283317565918
    4. '(str' → logprob: -8.20283317565918
    5. ' (' → logprob: -8.57783317565918
    6. ' ' → logprob: -9.20283317565918
    7. ' "' → logprob: -9.32783317565918
    8. '   ' → logprob: -9.95283317565918
    9. '""' → logprob: -10.07783317565918
    10. '[str' → logprob: -10.45283317565918

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13798817992210388
    2. '(self' → logprob: -2.1379880905151367
    3. '       ' → logprob: -5.637988090515137
    4. '):' → logprob: -6.137988090515137
    5. ':
' → logprob: -6.762988090515137
    6. '(' → logprob: -6.762988090515137
    7. 'self' → logprob: -7.012988090515137
    8. '   ' → logprob: -7.637988090515137
    9. ',' → logprob: -7.762988090515137
    10. '():' → logprob: -8.262988090515137

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02388540282845497
    2. ' if' → logprob: -3.773885488510132
    3. ' ' → logprob: -7.898885250091553
    4. '    ' → logprob: -9.148885726928711
    5. '   ' → logprob: -10.148885726928711
    6. '        ' → logprob: -10.398885726928711
    7. 'if' → logprob: -10.523885726928711
    8. '      ' → logprob: -11.148885726928711
    9. 'n' → logprob: -11.398885726928711
    10. '     ' → logprob: -12.023885726928711

Token 172: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03851567953824997
    2. 'if' (adapté à ' if') → logprob: -3.288515567779541
    3. '       ' → logprob: -7.663515567779541
    4. ' i' → logprob: -12.5385160446167
    5. 'i' → logprob: -15.1635160446167
    6. '   ' → logprob: -15.4135160446167
    7. '	if' → logprob: -16.288515090942383
    8. '        ' → logprob: -16.663515090942383
    9. ' result' → logprob: -16.663515090942383
    10. ' ' → logprob: -16.788515090942383

Token 173: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.005241937469691038
    2. 'num' → logprob: -5.255241870880127
    3. ' ' → logprob: -12.130242347717285
    4. '	num' → logprob: -13.380242347717285
    5. ' not' → logprob: -13.880242347717285
    6. '<num' → logprob: -16.25524139404297
    7. ' n' → logprob: -17.00524139404297
    8. '(num' → logprob: -17.00524139404297
    9. '=num' → logprob: -17.88024139404297
    10. ' ' → logprob: -17.88024139404297

Token 174: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004000396002084017
    2. '==' → logprob: -5.629000186920166
    3. ' <' → logprob: -8.504000663757324
    4. ' ' → logprob: -8.879000663757324
    5. ' =' → logprob: -10.754000663757324
    6. '0' → logprob: -10.754000663757324
    7. '=' → logprob: -11.504000663757324
    8. ' <=' → logprob: -13.379000663757324
    9. ' is' → logprob: -14.379000663757324
    10. '<' → logprob: -14.504000663757324

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -19.826414108276367
    4. '۰' → logprob: -20.076414108276367
    5. '   ' → logprob: -20.951414108276367
    6. '00' → logprob: -21.326414108276367
    7. '```' → logprob: -21.451414108276367
    8. '  ' → logprob: -21.826414108276367
    9. '０' → logprob: -21.951414108276367
    10. '٠' → logprob: -22.138914108276367

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '۰' → logprob: -17.68997573852539
    4. '   ' → logprob: -17.87747573852539
    5. '  ' → logprob: -18.25247573852539
    6. '０' → logprob: -18.56497573852539
    7. '00' → logprob: -19.12747573852539
    8. ' ' → logprob: -19.62747573852539
    9. '    ' → logprob: -19.68997573852539
    10. '٠' → logprob: -19.75247573852539

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01876797340810299
    2. ':
' → logprob: -4.018767833709717
    3. ':return' → logprob: -7.393767833709717
    4. ':
' → logprob: -14.393768310546875
    5. '       ' → logprob: -14.518768310546875
    6. 'return' → logprob: -14.768768310546875
    7. '           ' → logprob: -15.018768310546875
    8. ' return' → logprob: -15.143768310546875
    9. ' :' → logprob: -15.268768310546875
    10. '   ' → logprob: -15.393768310546875

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09989646822214127
    2. ' return' → logprob: -2.4748964309692383
    3. '       ' → logprob: -5.599896430969238
    4. ' ' → logprob: -6.099896430969238
    5. 'return' → logprob: -6.474896430969238
    6. '0' → logprob: -6.724896430969238
    7. '   ' → logprob: -7.349896430969238
    8. '    ' → logprob: -7.849896430969238
    9. ' 
' → logprob: -8.099896430969238
    10. '        ' → logprob: -8.349896430969238

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23776912689208984
    2. ' return' → logprob: -1.7377691268920898
    3. '"' → logprob: -3.36276912689209
    4. ''' → logprob: -7.86276912689209
    5. '       ' → logprob: -8.48776912689209
    6. '0' → logprob: -8.86276912689209
    7. '           ' → logprob: -9.11276912689209
    8. '   ' → logprob: -9.48776912689209
    9. ' ' → logprob: -10.23776912689209
    10. ':return' → logprob: -10.36276912689209

Token 180: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009636733680963516
    2. ''' → logprob: -5.009636878967285
    3. ' "' → logprob: -6.009636878967285
    4. '0' → logprob: -7.759636878967285
    5. ' '' → logprob: -10.509636878967285
    6. ' ' → logprob: -11.884636878967285
    7. '`' → logprob: -14.384636878967285
    8. '""' → logprob: -16.38463592529297
    9. '1' → logprob: -16.50963592529297
    10. '"A' → logprob: -16.88463592529297

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '"' → logprob: -20.375
    4. '０' → logprob: -21.0
    5. '۰' → logprob: -21.875
    6. '012' → logprob: -24.125
    7. ''' → logprob: -24.25
    8. '٠' → logprob: -25.0
    9. '০' → logprob: -25.5
    10. '000' → logprob: -26.5

Token 182: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3132818341255188
    2. '"
' → logprob: -1.313281774520874
    3. '"
' → logprob: -10.938282012939453
    4. '"

' → logprob: -13.688282012939453
    5. '"`
' → logprob: -14.313282012939453
    6. '")' → logprob: -15.313282012939453
    7. '"`' → logprob: -16.438282012939453
    8. ' "
' → logprob: -16.813282012939453
    9. ')"
' → logprob: -17.188282012939453
    10. '"
/' → logprob: -17.438282012939453

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002256952691823244
    2. '        
' → logprob: -7.002256870269775
    3. '
' → logprob: -7.127256870269775
    4. '   ' → logprob: -8.377257347106934
    5. '    
' → logprob: -8.752257347106934
    6. 'n' → logprob: -9.627257347106934
    7. '      ' → logprob: -10.877257347106934
    8. '  
' → logprob: -11.252257347106934
    9. '       
' → logprob: -11.377257347106934
    10. ' result' → logprob: -12.127257347106934

Token 184: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4938407838344574
    2. 'result' (adapté à ' result') → logprob: -1.2438408136367798
    3. '       ' → logprob: -2.4938406944274902
    4. 'res' → logprob: -4.74384069442749
    5. ' res' → logprob: -4.86884069442749
    6. 's' → logprob: -6.74384069442749
    7. 'r' → logprob: -7.49384069442749
    8. ' digits' → logprob: -8.493841171264648
    9. ' s' → logprob: -8.743841171264648
    10. '   ' → logprob: -9.118841171264648

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032805022783577442
    2. '=' → logprob: -5.7532806396484375
    3. ' ' → logprob: -9.503280639648438
    4. '=""' → logprob: -11.253280639648438
    5. 's' → logprob: -12.003280639648438
    6. '_' → logprob: -12.753280639648438
    7. ' ="' → logprob: -13.378280639648438
    8. '=[]' → logprob: -13.628280639648438
    9. '	' → logprob: -13.878280639648438
    10. '  ' → logprob: -14.628280639648438

Token 186: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.01155148632824421
    2. '[]' → logprob: -5.261551380157471
    3. ' ""' → logprob: -5.761551380157471
    4. '''' → logprob: -6.261551380157471
    5. ' []' → logprob: -6.761551380157471
    6. '"' → logprob: -9.636551856994629
    7. ' ''' → logprob: -10.886551856994629
    8. '[]
' → logprob: -14.136551856994629
    9. '"""' → logprob: -14.636551856994629
    10. ''' → logprob: -16.011550903320312

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11716946214437485
    2. ' while' → logprob: -2.2421693801879883
    3. 'while' → logprob: -6.117169380187988
    4. '   ' → logprob: -6.867169380187988
    5. '    ' → logprob: -7.867169380187988
    6. ' ' → logprob: -8.117169380187988
    7. '      ' → logprob: -9.367169380187988
    8. '        
' → logprob: -9.492169380187988
    9. ' w' → logprob: -10.117169380187988
    10. '        ' → logprob: -10.367169380187988

Token 188: ' n' (ID: 297)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7110300660133362
    2. 'while' → logprob: -0.9610300660133362
    3. '       ' → logprob: -2.0860300064086914
    4. 'n' (adapté à ' n') → logprob: -6.836030006408691
    5. 'num' → logprob: -7.336030006408691
    6. ' num' → logprob: -8.461030006408691
    7. ' n' → logprob: -9.211030006408691
    8. '   ' → logprob: -9.211030006408691
    9. '	while' → logprob: -10.586030006408691
    10. '        
' → logprob: -12.461030006408691

Token 189: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.732178807258606
    2. ' =' → logprob: -1.232178807258606
    3. '=' → logprob: -1.482178807258606
    4. 'u' → logprob: -8.857178688049316
    5. ' ' → logprob: -9.232178688049316
    6. 'umber' → logprob: -10.357178688049316
    7. '   ' → logprob: -10.857178688049316
    8. 'o' → logprob: -10.857178688049316
    9. ' um' → logprob: -12.107178688049316
    10. ',' → logprob: -12.357178688049316

Token 190: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5759597420692444
    2. 'num' → logprob: -0.8259597420692444
    3. 'abs' → logprob: -11.700960159301758
    4. ' abs' → logprob: -12.200960159301758
    5. '	num' → logprob: -12.950960159301758
    6. '   ' → logprob: -12.950960159301758
    7. '    ' → logprob: -14.575960159301758
    8. '=num' → logprob: -14.825960159301758
    9. ' ' → logprob: -14.950960159301758
    10. '(num' → logprob: -15.450960159301758

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.050204914063215256
    2. '<|end|>' → logprob: -3.3002049922943115
    3. 'while' → logprob: -5.425204753875732
    4. ' 
' → logprob: -5.550204753875732
    5. '<|end|>' → logprob: -6.800204753875732
    6. ' while' → logprob: -7.175204753875732
    7. '  
' → logprob: -7.425204753875732
    8. '%' → logprob: -7.925204753875732
    9. '' → logprob: -8.17520523071289
    10. '    
' → logprob: -8.67520523071289

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19190450012683868
    2. ' while' → logprob: -2.0669045448303223
    3. '        ' → logprob: -4.316904544830322
    4. '        
' → logprob: -4.566904544830322
    5. 'while' → logprob: -5.066904544830322
    6. ' 
' → logprob: -5.191904544830322
    7. '<|end|>' → logprob: -5.566904544830322
    8. '    ' → logprob: -6.191904544830322
    9. ' While' → logprob: -6.316904544830322
    10. ' ' → logprob: -6.441904544830322

Token 193: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7331554889678955
    2. ' while' → logprob: -0.7331554889678955
    3. 'while' (adapté à ' while') → logprob: -3.3581554889678955
    4. '        ' → logprob: -5.983155250549316
    5. ' ' → logprob: -6.983155250549316
    6. '    ' → logprob: -7.858155250549316
    7. ' While' → logprob: -8.983155250549316
    8. 'While' → logprob: -9.233155250549316
    9. '	while' → logprob: -9.233155250549316
    10. '        
' → logprob: -9.483155250549316

Token 194: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759403705596924
    2. 'n' → logprob: -0.8259403705596924
    3. '	n' → logprob: -14.200940132141113
    4. '_n' → logprob: -16.20094108581543
    5. '(n' → logprob: -16.32594108581543
    6. ' ' → logprob: -17.07594108581543
    7. '    ' → logprob: -17.70094108581543
    8. ')n' → logprob: -17.82594108581543
    9. ' ' → logprob: -18.20094108581543
    10. '>' → logprob: -18.57594108581543

Token 195: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18010739982128143
    2. ' >' → logprob: -1.8051073551177979
    3. '%' → logprob: -8.055107116699219
    4. '>=' → logprob: -10.930107116699219
    5. ' >=' → logprob: -11.555107116699219
    6. ' ' → logprob: -12.805107116699219
    7. '">' → logprob: -12.805107116699219
    8. ' ' → logprob: -13.180107116699219
    9. ' %' → logprob: -13.430107116699219
    10. '!=' → logprob: -13.555107116699219

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.061967849731445
    4. '  ' → logprob: -16.811967849731445
    5. '>' → logprob: -17.311967849731445
    6. '=' → logprob: -17.561967849731445
    7. '    ' → logprob: -18.686967849731445
    8. 'self' → logprob: -18.811967849731445
    9. '       ' → logprob: -18.811967849731445
    10. '<|end|>' → logprob: -18.811967849731445

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '=' → logprob: -18.250085830688477
    5. '  ' → logprob: -18.875085830688477
    6. '
' → logprob: -19.625085830688477
    7. '۰' → logprob: -19.750085830688477
    8. '```' → logprob: -19.750085830688477
    9. '>' → logprob: -20.437585830688477
    10. '    ' → logprob: -20.750085830688477

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5761400461196899
    2. ':
' → logprob: -0.8261400461196899
    3. '       ' → logprob: -8.951140403747559
    4. ',' → logprob: -10.826140403747559
    5. '           ' → logprob: -11.076140403747559
    6. ' :
' → logprob: -11.451140403747559
    7. '   ' → logprob: -11.951140403747559
    8. '):
' → logprob: -12.326140403747559
    9. ':

' → logprob: -12.951140403747559
    10. ',
' → logprob: -13.076140403747559

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3512521982192993
    2. ' ' → logprob: -1.8512521982192993
    3. 'n' → logprob: -2.3512520790100098
    4. ' 
' → logprob: -4.22625207901001
    5. ' n' → logprob: -4.60125207901001
    6. '        ' → logprob: -5.10125207901001
    7. '            ' → logprob: -5.72625207901001
    8. '   ' → logprob: -5.72625207901001
    9. '       ' → logprob: -5.85125207901001
    10. '    ' → logprob: -7.47625207901001

Token 200: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5100265741348267
    2. ' result' → logprob: -1.1350265741348267
    3. 'n' → logprob: -3.385026454925537
    4. '           ' → logprob: -3.635026454925537
    5. ' remainder' → logprob: -4.510026454925537
    6. 'r' → logprob: -6.010026454925537
    7. ' n' → logprob: -6.260026454925537
    8. ',result' → logprob: -7.760026454925537
    9. ' r' → logprob: -8.010026931762695
    10. '            ' → logprob: -8.260026931762695

Token 201: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048608940094709396
    2. '.' → logprob: -3.0486090183258057
    3. '.insert' → logprob: -11.423608779907227
    4. '.ap' → logprob: -11.923608779907227
    5. '.app' → logprob: -13.048608779907227
    6. ' .' → logprob: -14.173608779907227
    7. '.Append' → logprob: -14.173608779907227
    8. '_append' → logprob: -16.798608779907227
    9. 'append' → logprob: -16.923608779907227
    10. '.push' → logprob: -17.048608779907227

Token 202: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00035238542477600276
    2. '(' → logprob: -8.00035285949707
    3. 'self' → logprob: -11.00035285949707
    4. ' self' → logprob: -15.75035285949707
    5. ' (' → logprob: -17.00035285949707
    6. '	self' → logprob: -17.12535285949707
    7. '[self' → logprob: -17.12535285949707
    8. '(this' → logprob: -17.25035285949707
    9. '(
' → logprob: -17.87535285949707
    10. '=self' → logprob: -18.12535285949707

Token 203: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -2.7252845029579476e-05
    2. '.' → logprob: -10.875027656555176
    3. ' .' → logprob: -12.125027656555176
    4. 'digits' → logprob: -13.000027656555176
    5. 'd' → logprob: -15.500027656555176
    6. '	d' → logprob: -15.750027656555176
    7. ').' → logprob: -16.37502670288086
    8. '.characters' → logprob: -17.00002670288086
    9. ' ' → logprob: -17.75002670288086
    10. 'igits' → logprob: -18.37502670288086

Token 204: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -7.147740689106286e-05
    2. 'igts' → logprob: -9.87507152557373
    3. 'its' → logprob: -11.37507152557373
    4. 'ig' → logprob: -12.50007152557373
    5. 'i' → logprob: -13.37507152557373
    6. 'igit' → logprob: -13.87507152557373
    7. 'igs' → logprob: -14.75007152557373
    8. 'n' → logprob: -15.25007152557373
    9. 'o' → logprob: -15.25007152557373
    10. 'igi' → logprob: -15.50007152557373

Token 205: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.872261317563243e-05
    2. '[' → logprob: -9.750059127807617
    3. '[
' → logprob: -15.375059127807617
    4. ' [' → logprob: -15.625059127807617
    5. '[num' → logprob: -18.125059127807617
    6. 'n' → logprob: -18.500059127807617
    7. '[int' → logprob: -20.125059127807617
    8. ' n' → logprob: -20.625059127807617
    9. ')[' → logprob: -21.375059127807617
    10. '[(' → logprob: -21.375059127807617

Token 206: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932222843170166
    2. ' %' → logprob: -0.6932222843170166
    3. '%n' → logprob: -9.568222045898438
    4. '%i' → logprob: -13.068222045898438
    5. '%b' → logprob: -14.068222045898438
    6. ' ' → logprob: -14.318222045898438
    7. '%B' → logprob: -14.568222045898438
    8. '%c' → logprob: -14.693222045898438
    9. '%d' → logprob: -15.318222045898438
    10. '%e' → logprob: -16.068222045898438

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324547804892063
    2. ' self' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.898244857788086
    4. '       ' → logprob: -18.773244857788086
    5. 's' → logprob: -19.023244857788086
    6. '(self' → logprob: -19.023244857788086
    7. '[self' → logprob: -19.398244857788086
    8. 'base' → logprob: -19.398244857788086
    9. '   ' → logprob: -19.773244857788086
    10. '	self' → logprob: -19.898244857788086

Token 208: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.020595606416463852
    2. 'base' → logprob: -3.8955955505371094
    3. '.' → logprob: -10.52059555053711
    4. ' base' → logprob: -10.64559555053711
    5. ' .' → logprob: -13.77059555053711
    6. '	base' → logprob: -14.64559555053711
    7. ' ' → logprob: -15.27059555053711
    8. '(base' → logprob: -15.39559555053711
    9. ';base' → logprob: -15.39559555053711
    10. '_base' → logprob: -15.52059555053711

Token 209: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0025133544113487005
    2. '])
' → logprob: -6.002513408660889
    3. ' ])' → logprob: -11.37751293182373
    4. '"])' → logprob: -11.87751293182373
    5. '       ' → logprob: -12.00251293182373
    6. ']' → logprob: -12.12751293182373
    7. '])
' → logprob: -12.87751293182373
    8. ')])' → logprob: -13.37751293182373
    9. ')' → logprob: -13.75251293182373
    10. ''])' → logprob: -14.00251293182373

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14908936619758606
    2. 'n' → logprob: -2.0240893363952637
    3. ' n' → logprob: -6.274089336395264
    4. ' 
' → logprob: -6.899089336395264
    5. '    
' → logprob: -7.399089336395264
    6. '[' → logprob: -7.649089336395264
    7. '   ' → logprob: -7.774089336395264
    8. '       ' → logprob: -7.899089336395264
    9. '            
' → logprob: -8.274089813232422
    10. '\n' → logprob: -8.524089813232422

Token 211: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0076254382729530334
    2. ' n' → logprob: -4.882625579833984
    3. '           ' → logprob: -11.257625579833984
    4. '	n' → logprob: -12.757625579833984
    5. '       ' → logprob: -13.382625579833984
    6. '_n' → logprob: -14.132625579833984
    7. ' ' → logprob: -14.507625579833984
    8. ' ' → logprob: -15.882625579833984
    9. '               ' → logprob: -16.382625579833984
    10. '(n' → logprob: -16.507625579833984

Token 212: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.07206469774246216
    2. '//=' → logprob: -2.6970646381378174
    3. ' =' → logprob: -6.4470648765563965
    4. '=' → logprob: -7.8220648765563965
    5. '//' → logprob: -9.322064399719238
    6. ' ' → logprob: -10.197064399719238
    7. ' ' → logprob: -12.197064399719238
    8. ' /=' → logprob: -12.822064399719238
    9. ' >>=' → logprob: -13.072064399719238
    10. '   ' → logprob: -13.572064399719238

Token 213: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.657694418914616e-05
    2. '=_' → logprob: -10.125056266784668
    3. '=}' → logprob: -12.625056266784668
    4. '=self' → logprob: -12.750056266784668
    5. '=:' → logprob: -13.125056266784668
    6. '=.' → logprob: -13.375056266784668
    7. '=
' → logprob: -13.500056266784668
    8. '_=' → logprob: -13.875056266784668
    9. '='' → logprob: -14.125056266784668
    10. '=%' → logprob: -14.750056266784668

Token 214: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011703446507453918
    2. ' self' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.001171112060547
    4. '       ' → logprob: -17.876171112060547
    5. '	self' → logprob: -18.126171112060547
    6. '10' → logprob: -19.001171112060547
    7. '(self' → logprob: -19.251171112060547
    8. 'base' → logprob: -19.251171112060547
    9. '[self' → logprob: -19.251171112060547
    10. '2' → logprob: -19.376171112060547

Token 215: '.base' (ID: 15523)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.006729337852448225
    2. '.base' → logprob: -5.2567291259765625
    3. ' base' → logprob: -6.5067291259765625
    4. '_base' → logprob: -14.381729125976562
    5. '	base' → logprob: -16.006729125976562
    6. 'Base' → logprob: -16.381729125976562
    7. ' ' → logprob: -16.506729125976562
    8. 'self' → logprob: -17.381729125976562
    9. '-base' → logprob: -17.381729125976562
    10. '/base' → logprob: -17.506729125976562

Token 216: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00905720517039299
    2. '
' → logprob: -5.13405704498291
    3. ' 
' → logprob: -6.38405704498291
    4. '        
' → logprob: -6.88405704498291
    5. '    
' → logprob: -8.88405704498291
    6. ' return' → logprob: -9.13405704498291
    7. '  
' → logprob: -10.00905704498291
    8. '\n' → logprob: -10.75905704498291
    9. ' result' → logprob: -10.75905704498291
    10. '   ' → logprob: -10.88405704498291

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012969005620107055
    2. ' result' → logprob: -7.3762969970703125
    3. '        
' → logprob: -7.8762969970703125
    4. '   ' → logprob: -9.751296997070312
    5. ' return' → logprob: -9.751296997070312
    6. ' 
' → logprob: -10.126296997070312
    7. '        ' → logprob: -10.251296997070312
    8. ' ' → logprob: -11.001296997070312
    9. '
' → logprob: -11.126296997070312
    10. '    
' → logprob: -11.251296997070312

Token 218: ' return' (ID: 622)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8420079946517944
    2. 'result' → logprob: -1.4670079946517944
    3. ' return' → logprob: -1.7170079946517944
    4. 'return' (adapté à ' return') → logprob: -1.9670079946517944
    5. '       ' → logprob: -3.967008113861084
    6. '   ' → logprob: -9.592007637023926
    7. '
' → logprob: -10.217007637023926
    8. '        
' → logprob: -11.717007637023926
    9. ' ' → logprob: -12.217007637023926
    10. ' 
' → logprob: -12.717007637023926

Token 219: ' "".' (ID: 94734)
  Prédit: ' "".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "".' → logprob: -0.7031942009925842
    2. '"' → logprob: -0.9531942009925842
    3. ' ''.' → logprob: -2.3281941413879395
    4. '''.' → logprob: -3.8281941413879395
    5. '""' → logprob: -8.453194618225098
    6. ' "' → logprob: -10.828194618225098
    7. 'result' → logprob: -11.578194618225098
    8. '''' → logprob: -11.578194618225098
    9. ' ' → logprob: -12.078194618225098
    10. ''' → logprob: -12.453194618225098

Token 220: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.747814349073451e-05
    2. 'j' → logprob: -11.000017166137695
    3. 'jo' → logprob: -14.375017166137695
    4. ' join' → logprob: -16.625017166137695
    5. 'reverse' → logprob: -17.875017166137695
    6. '/j' → logprob: -18.375017166137695
    7. 'concat' → logprob: -18.750017166137695
    8. 'joint' → logprob: -18.750017166137695
    9. 'strip' → logprob: -19.250017166137695
    10. '```' → logprob: -19.750017166137695

Token 221: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.12712180614471436
    2. '(result' → logprob: -2.127121925354004
    3. 're' → logprob: -9.002121925354004
    4. 'result' → logprob: -9.627121925354004
    5. '(' → logprob: -12.877121925354004
    6. '(sorted' → logprob: -13.877121925354004
    7. '(res' → logprob: -15.127121925354004
    8. '(reverse' → logprob: -15.377121925354004
    9. '(
' → logprob: -15.502121925354004
    10. '[::-' → logprob: -15.502121925354004

Token 222: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -9.73446003627032e-05
    2. 's' → logprob: -10.000097274780273
    3. 'verse' → logprob: -10.000097274780273
    4. 'verted' → logprob: -12.375097274780273
    5. 'v' → logprob: -13.750097274780273
    6. 'ver' → logprob: -14.750097274780273
    7. 've' → logprob: -15.375097274780273
    8. 'result' → logprob: -15.625097274780273
    9. 'ss' → logprob: -16.000097274780273
    10. 'vers' → logprob: -16.125097274780273

Token 223: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.8444881536415778e-05
    2. 'result' → logprob: -10.500028610229492
    3. '(' → logprob: -14.625028610229492
    4. ')' → logprob: -16.375028610229492
    5. '[result' → logprob: -16.375028610229492
    6. '(results' → logprob: -16.750028610229492
    7. '(
' → logprob: -17.000028610229492
    8. ',result' → logprob: -17.500028610229492
    9. '=result' → logprob: -17.625028610229492
    10. '(res' → logprob: -17.875028610229492

Token 224: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020377879263833165
    2. '))' → logprob: -8.500204086303711
    3. ')
' → logprob: -16.00020408630371
    4. ' )' → logprob: -16.62520408630371
    5. ')))' → logprob: -16.87520408630371
    6. ')}' → logprob: -17.12520408630371
    7. '())' → logprob: -18.12520408630371
    8. ')`' → logprob: -18.12520408630371
    9. ')}}' → logprob: -19.75020408630371
    10. ')")' → logprob: -20.12520408630371

Token 225: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30254635214805603
    2. 'class' → logprob: -1.5525463819503784
    3. '    
' → logprob: -4.052546501159668
    4. '   ' → logprob: -4.802546501159668
    5. '<|end|>' → logprob: -4.927546501159668
    6. '  
' → logprob: -5.302546501159668
    7. ' class' → logprob: -5.302546501159668
    8. ' 
' → logprob: -6.052546501159668
    9. ' ' → logprob: -6.302546501159668
    10. '```' → logprob: -7.177546501159668

Token 226: ' Factor' (ID: 63743)
  Prédit: ' Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Base' → logprob: -0.016697660088539124
    2. ' Number' → logprob: -5.141697883605957
    3. 'Base' → logprob: -5.516697883605957
    4. ' Decimal' → logprob: -5.516697883605957
    5. ' Extended' → logprob: -7.266697883605957
    6. ' Converter' → logprob: -8.016697883605957
    7. ' Advanced' → logprob: -8.016697883605957
    8. ' Custom' → logprob: -8.266697883605957
    9. ' Hex' → logprob: -8.391697883605957
    10. ' Multi' → logprob: -9.266697883605957

Token 227: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.20312148332595825
    2. 'Base' → logprob: -1.8281214237213135
    3. 'Converter' → logprob: -4.203121662139893
    4. 'izer' → logprob: -5.578121662139893
    5. 'al' → logprob: -6.578121662139893
    6. 'base' → logprob: -6.703121662139893
    7. 'ization' → logprob: -7.953121662139893
    8. 'y' → logprob: -8.328121185302734
    9. 'Conversion' → logprob: -8.453121185302734
    10. ' base' → logprob: -8.703121185302734

Token 228: 'Trailing' (ID: 144756)
  Prédit: 'Converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.12803681194782257
    2. 'Base' → logprob: -2.2530367374420166
    3. 'Number' → logprob: -4.503036975860596
    4. 'Calculator' → logprob: -5.878036975860596
    5. '(Base' → logprob: -8.128036499023438
    6. 'Iterator' → logprob: -8.878036499023438
    7. 'Factor' → logprob: -9.128036499023438
    8. 'Generator' → logprob: -9.628036499023438
    9. 'Con' → logprob: -9.878036499023438
    10. 'Mixin' → logprob: -10.003036499023438

Token 229: 'Zeros' (ID: 163050)
  Prédit: 'Zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zero' → logprob: -0.6932400465011597
    2. 'Zeros' → logprob: -0.6932400465011597
    3. ' zeros' → logprob: -10.06824016571045
    4. 'zeros' → logprob: -10.44324016571045
    5. 'Spaces' → logprob: -11.69324016571045
    6. '_' → logprob: -12.31824016571045
    7. 'zero' → logprob: -12.81824016571045
    8. 'Whitespace' → logprob: -13.19324016571045
    9. 'Space' → logprob: -13.81824016571045
    10. ' zero' → logprob: -14.19324016571045

Token 230: 'Calculator' (ID: 50159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00595072191208601
    2. '(' → logprob: -5.630950927734375
    3. 'Calculator' → logprob: -7.005950927734375
    4. ':
' → logprob: -7.130950927734375
    5. 'Count' → logprob: -8.255950927734375
    6. 'Counter' → logprob: -8.255950927734375
    7. '{' → logprob: -10.505950927734375
    8. '   ' → logprob: -11.130950927734375
    9. 'Counting' → logprob: -11.130950927734375
    10. '(Base' → logprob: -11.630950927734375

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012752347392961383
    2. ' :' → logprob: -6.876275062561035
    3. ':
' → logprob: -8.376275062561035
    4. '(' → logprob: -12.876275062561035
    5. '):' → logprob: -13.001275062561035
    6. ':def' → logprob: -13.251275062561035
    7. '   ' → logprob: -13.626275062561035
    8. ':

' → logprob: -14.001275062561035
    9. ' :
' → logprob: -14.126275062561035
    10. '():' → logprob: -14.501275062561035

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014247603248804808
    2. ' def' → logprob: -6.876424789428711
    3. '    
' → logprob: -8.251424789428711
    4. '
' → logprob: -9.876424789428711
    5. 'def' → logprob: -10.126424789428711
    6. ' 
' → logprob: -11.251424789428711
    7. '    ' → logprob: -11.876424789428711
    8. '```' → logprob: -11.876424789428711
    9. '  
' → logprob: -13.126424789428711
    10. '  ' → logprob: -13.126424789428711

Token 233: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08490649610757828
    2. 'def' (adapté à ' def') → logprob: -2.709906578063965
    3. '   ' → logprob: -4.209906578063965
    4. 'class' → logprob: -12.459906578063965
    5. ' ' → logprob: -12.584906578063965
    6. '    ' → logprob: -13.584906578063965
    7. ' class' → logprob: -14.209906578063965
    8. '  ' → logprob: -14.209906578063965
    9. '	def' → logprob: -15.084906578063965
    10. '@' → logprob: -15.459906578063965

Token 234: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11901194602251053
    2. ' def' → logprob: -2.869011878967285
    3. ' calculate' → logprob: -4.119011878967285
    4. ' count' → logprob: -4.244011878967285
    5. ' _' → logprob: -4.619011878967285
    6. 'count' → logprob: -5.619011878967285
    7. ' get' → logprob: -6.244011878967285
    8. 'calculate' → logprob: -6.369011878967285
    9. ' trailing' → logprob: -6.494011878967285
    10. ' init' → logprob: -6.619011878967285

Token 235: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. 'def' → logprob: -14.125003814697266
    3. ' init' → logprob: -14.125003814697266
    4. 'int' → logprob: -14.500003814697266
    5. 'i' → logprob: -14.625003814697266
    6. '_init' → logprob: -14.625003814697266
    7. 'ini' → logprob: -14.625003814697266
    8. 'in' → logprob: -15.500003814697266
    9. '_' → logprob: -16.625003814697266
    10. '   ' → logprob: -16.625003814697266

Token 236: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0031860284507274628
    2. '__' → logprob: -5.753186225891113
    3. '__(
' → logprob: -12.003186225891113
    4. '__((' → logprob: -14.003186225891113
    5. '_(' → logprob: -14.503186225891113
    6. '(self' → logprob: -14.878186225891113
    7. '__('' → logprob: -16.003185272216797
    8. '(' → logprob: -16.128185272216797
    9. '___' → logprob: -16.378185272216797
    10. '_' → logprob: -16.503185272216797

Token 237: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.025592437013983727
    2. ' self' → logprob: -3.77559232711792
    3. ')' → logprob: -6.27559232711792
    4. '   ' → logprob: -7.90059232711792
    5. '       ' → logprob: -10.150592803955078
    6. ' ' → logprob: -11.025592803955078
    7. 'base' → logprob: -11.900592803955078
    8. '    ' → logprob: -12.150592803955078
    9. '  ' → logprob: -12.150592803955078
    10. ' )' → logprob: -12.400592803955078

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001194275333546102
    2. ' ,' → logprob: -6.751194477081299
    3. 'self' → logprob: -10.87619400024414
    4. ',self' → logprob: -12.62619400024414
    5. ')' → logprob: -14.12619400024414
    6. ' (' → logprob: -14.87619400024414
    7. '(self' → logprob: -15.12619400024414
    8. '   ' → logprob: -15.50119400024414
    9. ' self' → logprob: -16.00119400024414
    10. ' )' → logprob: -16.50119400024414

Token 239: ' base' (ID: 3611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15834322571754456
    2. 'self' → logprob: -2.2833433151245117
    3. ' n' → logprob: -3.6583433151245117
    4. 'num' → logprob: -5.033343315124512
    5. 'number' → logprob: -5.283343315124512
    6. ' self' → logprob: -5.783343315124512
    7. 'base' → logprob: -6.158343315124512
    8. ' base' → logprob: -7.533343315124512
    9. 'max' → logprob: -7.908343315124512
    10. '   ' → logprob: -7.908343315124512

Token 240: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23586343228816986
    2. '):' → logprob: -1.610863447189331
    3. ' :' → logprob: -5.235863208770752
    4. ' ):' → logprob: -5.860863208770752
    5. ':int' → logprob: -6.235863208770752
    6. '=' → logprob: -8.98586368560791
    7. ')' → logprob: -9.98586368560791
    8. '):
' → logprob: -10.11086368560791
    9. ',' → logprob: -10.98586368560791
    10. '<|end|>' → logprob: -11.73586368560791

Token 241: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33773770928382874
    2. ' int' → logprob: -1.3377376794815063
    3. '10' → logprob: -4.587737560272217
    4. '8' → logprob: -5.087737560272217
    5. ' ' → logprob: -5.462737560272217
    6. ')' → logprob: -5.837737560272217
    7. 'Base' → logprob: -8.837738037109375
    8. '1' → logprob: -8.962738037109375
    9. ' )' → logprob: -9.087738037109375
    10. '36' → logprob: -9.587738037109375

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022000980097800493
    2. '):
' → logprob: -6.127200126647949
    3. ' ):' → logprob: -12.00220012664795
    4. '   ' → logprob: -12.37720012664795
    5. ':' → logprob: -13.25220012664795
    6. ')' → logprob: -13.37720012664795
    7. '):
' → logprob: -13.75220012664795
    8. '       ' → logprob: -16.002199172973633
    9. '=' → logprob: -17.127199172973633
    10. ' ' → logprob: -17.502199172973633

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000561373308300972
    2. ' self' → logprob: -8.125561714172363
    3. 'self' → logprob: -8.250561714172363
    4. '   ' → logprob: -13.000561714172363
    5. '      ' → logprob: -13.750561714172363
    6. '           ' → logprob: -15.750561714172363
    7. '        ' → logprob: -16.125560760498047
    8. '```' → logprob: -16.125560760498047
    9. '    ' → logprob: -16.625560760498047
    10. '    ' → logprob: -16.750560760498047

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5678657293319702
    2. ' self' → logprob: -1.0678657293319702
    3. '       ' → logprob: -2.4428658485412598
    4. 'from' → logprob: -6.56786584854126
    5. ' from' → logprob: -7.31786584854126
    6. '        ' → logprob: -9.067865371704102
    7. 'import' → logprob: -9.192865371704102
    8. 'super' → logprob: -9.317865371704102
    9. '   ' → logprob: -9.692865371704102
    10. '    ' → logprob: -9.692865371704102

Token 245: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.2650924026966095
    2. '.' → logprob: -2.265092372894287
    3. ' .' → logprob: -2.265092372894287
    4. '   ' → logprob: -4.640092372894287
    5. ' =' → logprob: -5.265092372894287
    6. '_base' → logprob: -6.515092372894287
    7. '._' → logprob: -6.765092372894287
    8. '.converter' → logprob: -6.765092372894287
    9. '.Base' → logprob: -7.265092372894287
    10. 'Base' → logprob: -7.390092372894287

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47434189915657043
    2. ' =' → logprob: -0.974341869354248
    3. '_' → logprob: -9.474342346191406
    4. '.' → logprob: -9.474342346191406
    5. ')' → logprob: -9.974342346191406
    6. '_base' → logprob: -11.099342346191406
    7. ' ' → logprob: -11.349342346191406
    8. '   ' → logprob: -11.724342346191406
    9. '=self' → logprob: -12.224342346191406
    10. '_converter' → logprob: -12.474342346191406

Token 247: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3868729770183563
    2. ' base' → logprob: -1.1368730068206787
    3. 'Base' → logprob: -14.261873245239258
    4. '	base' → logprob: -14.761873245239258
    5. '(base' → logprob: -15.136873245239258
    6. ' ' → logprob: -15.136873245239258
    7. '8' → logprob: -15.511873245239258
    8. '_base' → logprob: -16.636873245239258
    9. 'b' → logprob: -16.886873245239258
    10. '   ' → logprob: -17.011873245239258

Token 248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01116207055747509
    2. '
' → logprob: -4.511162281036377
    3. ',' → logprob: -10.011161804199219
    4. 'import' → logprob: -10.886161804199219
    5. '        
' → logprob: -11.136161804199219
    6. 'self' → logprob: -11.636161804199219
    7. '<|end|>' → logprob: -12.011161804199219
    8. 'def' → logprob: -12.136161804199219
    9. '   ' → logprob: -12.386161804199219
    10. '    
' → logprob: -13.011161804199219

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007774694240652025
    2. 'def' → logprob: -8.000777244567871
    3. 'self' → logprob: -8.625777244567871
    4. '   ' → logprob: -9.250777244567871
    5. 'import' → logprob: -9.875777244567871
    6. ' self' → logprob: -10.000777244567871
    7. '
' → logprob: -11.000777244567871
    8. 'from' → logprob: -11.250777244567871
    9. '      ' → logprob: -11.375777244567871
    10. ' def' → logprob: -12.125777244567871

Token 250: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0229837354272604
    2. 'def' → logprob: -4.522983551025391
    3. '       ' → logprob: -4.772983551025391
    4. 'from' → logprob: -6.147983551025391
    5. ' self' → logprob: -7.647983551025391
    6. '   ' → logprob: -7.772983551025391
    7. 'import' → logprob: -8.14798355102539
    8. ' ' → logprob: -11.27298355102539
    9. '#' → logprob: -11.39798355102539
    10. '1' → logprob: -11.64798355102539

Token 251: '.converter' (ID: 105910)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8656193614006042
    2. ' def' → logprob: -1.740619421005249
    3. '._' → logprob: -1.990619421005249
    4. '_factor' → logprob: -2.240619421005249
    5. ' .' → logprob: -3.365619421005249
    6. ' factors' → logprob: -3.615619421005249
    7. '.factor' → logprob: -3.865619421005249
    8. '.' → logprob: -4.24061918258667
    9. 'factor' → logprob: -4.86561918258667
    10. 'Factors' → logprob: -4.99061918258667

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693189084529877
    2. '=' → logprob: -2.12693190574646
    3. '.' → logprob: -13.001932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '   ' → logprob: -15.251932144165039
    6. '.=' → logprob: -15.501932144165039
    7. '  ' → logprob: -16.50193214416504
    8. ' =
' → logprob: -16.87693214416504
    9. 's' → logprob: -17.12693214416504
    10. '	' → logprob: -17.25193214416504

Token 253: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.3132622241973877
    2. ' Base' → logprob: -1.3132622241973877
    3. '	Base' → logprob: -14.813261985778809
    4. '_Base' → logprob: -17.188262939453125
    5. 'Bas' → logprob: -17.563262939453125
    6. ' Bas' → logprob: -18.188262939453125
    7. ' base' → logprob: -18.563262939453125
    8. 'Factor' → logprob: -18.563262939453125
    9. '<Base' → logprob: -18.563262939453125
    10. 'Basic' → logprob: -18.938262939453125

Token 254: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -1.6240566083070007e-06
    2. 'converter' → logprob: -14.000001907348633
    3. '_converter' → logprob: -15.375001907348633
    4. ' Converter' → logprob: -15.500001907348633
    5. 'Convert' → logprob: -15.500001907348633
    6. 'Convers' → logprob: -16.750001907348633
    7. 'Conv' → logprob: -18.375001907348633
    8. 'Calculator' → logprob: -18.500001907348633
    9. 'Con' → logprob: -18.625001907348633
    10. 'Converters' → logprob: -18.750001907348633

Token 255: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.0017130204942077398
    2. '(' → logprob: -6.376712799072266
    3. ' (' → logprob: -12.001712799072266
    4. '(self' → logprob: -13.251712799072266
    5. 'base' → logprob: -13.626712799072266
    6. '(
' → logprob: -14.126712799072266
    7. '(b' → logprob: -14.626712799072266
    8. ' base' → logprob: -15.501712799072266
    9. '(Base' → logprob: -16.376712799072266
    10. '(BASE' → logprob: -17.001712799072266

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.625000953674316
    3. ')
' → logprob: -17.125001907348633
    4. '))' → logprob: -18.500001907348633
    5. ')}' → logprob: -18.625001907348633
    6. '),' → logprob: -18.750001907348633
    7. ')

' → logprob: -19.375001907348633
    8. ')`' → logprob: -19.625001907348633
    9. ').' → logprob: -20.500001907348633
    10. '<|end|>' → logprob: -20.750001907348633

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1946263462305069
    2. '   ' → logprob: -2.5696263313293457
    3. 'def' → logprob: -2.9446263313293457
    4. '
' → logprob: -3.5696263313293457
    5. ' def' → logprob: -4.319626331329346
    6. '    
' → logprob: -6.194626331329346
    7. '        
' → logprob: -6.319626331329346
    8. ' ' → logprob: -7.069626331329346
    9. 'import' → logprob: -7.444626331329346
    10. ' 
' → logprob: -8.944626808166504

Token 258: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2953993082046509
    2. 'def' → logprob: -1.4203993082046509
    3. 'from' → logprob: -5.170399188995361
    4. ' self' → logprob: -5.170399188995361
    5. 'import' → logprob: -6.420399188995361
    6. '       ' → logprob: -7.545399188995361
    7. '   ' → logprob: -8.29539966583252
    8. ' def' → logprob: -9.04539966583252
    9. '
' → logprob: -9.42039966583252
    10. 'pass' → logprob: -10.29539966583252

Token 259: ' Pre' (ID: 4659)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24110078811645508
    2. 'from' → logprob: -2.116100788116455
    3. ' self' → logprob: -2.866100788116455
    4. 'import' → logprob: -3.616100788116455
    5. ' from' → logprob: -5.116100788116455
    6. 'def' → logprob: -5.991100788116455
    7. ' import' → logprob: -7.741100788116455
    8. '       ' → logprob: -8.116100311279297
    9. '#' → logprob: -8.741100311279297
    10. ' def' → logprob: -8.866100311279297

Token 260: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.017760280519723892
    2. 'pare' → logprob: -4.892760276794434
    3. ' compute' → logprob: -5.517760276794434
    4. 'calculate' → logprob: -6.142760276794434
    5. 'viously' → logprob: -6.892760276794434
    6. '       ' → logprob: -7.017760276794434
    7. 'process' → logprob: -7.267760276794434
    8. '   ' → logprob: -7.392760276794434
    9. 'comput' → logprob: -9.267760276794434
    10. 'vious' → logprob: -9.392760276794434

Token 261: ' prime' (ID: 9197)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6352710127830505
    2. ' self' → logprob: -0.7602710127830505
    3. ' the' → logprob: -7.010271072387695
    4. 'def' → logprob: -7.760271072387695
    5. 'factor' → logprob: -7.885271072387695
    6. '       ' → logprob: -8.260271072387695
    7. ' factors' → logprob: -8.760271072387695
    8. 'the' → logprob: -9.260271072387695
    9. 'import' → logprob: -9.385271072387695
    10. ' ' → logprob: -10.010271072387695

Token 262: ' factors' (ID: 11652)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.17201243340969086
    2. 'f' → logprob: -2.2970123291015625
    3. ' factors' → logprob: -3.0470123291015625
    4. 'factor' → logprob: -5.1720123291015625
    5. ' factor' → logprob: -6.0470123291015625
    6. '_factor' → logprob: -6.2970123291015625
    7. 's' → logprob: -9.672012329101562
    8. 'fact' → logprob: -11.922012329101562
    9. 'self' → logprob: -12.672012329101562
    10. ' factores' → logprob: -12.672012329101562

Token 263: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.46557527780532837
    2. '=' → logprob: -2.2155752182006836
    3. ' =' → logprob: -2.2155752182006836
    4. ' for' → logprob: -2.9655752182006836
    5. ' ' → logprob: -3.0905752182006836
    6. ':' → logprob: -4.215575218200684
    7. '       ' → logprob: -5.090575218200684
    8. '_' → logprob: -5.090575218200684
    9. 'of' → logprob: -5.340575218200684
    10. '[' → logprob: -5.465575218200684

Token 264: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4816494882106781
    2. 'self' → logprob: -0.9816495180130005
    3. ' base' → logprob: -5.106649398803711
    4. ' self' → logprob: -6.731649398803711
    5. 'the' → logprob: -8.231649398803711
    6. ' the' → logprob: -11.606649398803711
    7. '   ' → logprob: -11.856649398803711
    8. '	base' → logprob: -12.481649398803711
    9. '_base' → logprob: -13.981649398803711
    10. '(base' → logprob: -13.981649398803711

Token 265: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04435928910970688
    2. 'self' → logprob: -4.04435920715332
    3. ' self' → logprob: -4.66935920715332
    4. ':' → logprob: -5.16935920715332
    5. ',' → logprob: -5.29435920715332
    6. '
' → logprob: -6.54435920715332
    7. 'import' → logprob: -6.66935920715332
    8. ' and' → logprob: -7.16935920715332
    9. '(self' → logprob: -7.79435920715332
    10. ' from' → logprob: -8.04435920715332

Token 266: ' their' (ID: 1043)
  Prédit: ' their'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.5235922932624817
    2. 'their' → logprob: -0.8985922932624817
    3. 'counts' → logprob: -8.648591995239258
    4. ' counts' → logprob: -9.148591995239258
    5. 'self' → logprob: -9.273591995239258
    6. 'multip' → logprob: -10.398591995239258
    7. 'def' → logprob: -10.648591995239258
    8. 'count' → logprob: -11.648591995239258
    9. 'factor' → logprob: -11.773591995239258
    10. 'Their' → logprob: -11.898591995239258

Token 267: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.9853624701499939
    2. ' ex' → logprob: -1.1103625297546387
    3. ' counts' → logprob: -1.6103625297546387
    4. 'counts' → logprob: -2.3603625297546387
    5. 'count' → logprob: -6.610362529754639
    6. 'powers' → logprob: -7.110362529754639
    7. ' powers' → logprob: -7.485362529754639
    8. 'multip' → logprob: -8.36036205291748
    9. ' multiplic' → logprob: -9.98536205291748
    10. ' exponent' → logprob: -10.98536205291748

Token 268: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.0009554093703627586
    2. 'ponent' → logprob: -7.000955581665039
    3. 'p' → logprob: -10.375955581665039
    4. '```' → logprob: -12.875955581665039
    5. 'ps' → logprob: -13.125955581665039
    6. 'po' → logprob: -13.125955581665039
    7. '   ' → logprob: -13.500955581665039
    8. 'pos' → logprob: -13.625955581665039
    9. '
' → logprob: -14.250955581665039
    10. '...' → logprob: -14.625955581665039

Token 269: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2703486979007721
    2. '
' → logprob: -2.2703487873077393
    3. ':' → logprob: -3.0203487873077393
    4. 'self' → logprob: -3.0203487873077393
    5. ' self' → logprob: -4.14534854888916
    6. ',' → logprob: -4.52034854888916
    7. '   ' → logprob: -6.52034854888916
    8. 'import' → logprob: -6.77034854888916
    9. '<|end|>' → logprob: -6.89534854888916
    10. '        
' → logprob: -7.02034854888916

Token 270: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.8824846148490906
    2. '_factor' → logprob: -1.0074846744537354
    3. ' factor' → logprob: -2.1324846744537354
    4. ' prime' → logprob: -4.132484436035156
    5. 'self' → logprob: -4.257484436035156
    6. ' the' → logprob: -4.257484436035156
    7. '_' → logprob: -4.257484436035156
    8. 'prime' → logprob: -4.507484436035156
    9. ' later' → logprob: -5.382484436035156
    10. 'the' → logprob: -5.382484436035156

Token 271: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -8.149051427608356e-05
    2. 'izations' → logprob: -9.625081062316895
    3. 'iz' → logprob: -11.750081062316895
    4. 's' → logprob: -13.250081062316895
    5. 'izing' → logprob: -13.500081062316895
    6. '_' → logprob: -14.000081062316895
    7. 'iation' → logprob: -14.125081062316895
    8. 'i' → logprob: -14.625081062316895
    9. 'iza' → logprob: -14.625081062316895
    10. 'isation' → logprob: -14.750081062316895

Token 272: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03616028279066086
    2. '
' → logprob: -3.5361602306365967
    3. 'import' → logprob: -6.036160469055176
    4. 'self' → logprob: -6.536160469055176
    5. ',' → logprob: -6.911160469055176
    6. 'def' → logprob: -7.411160469055176
    7. 'from' → logprob: -8.661160469055176
    8. '   ' → logprob: -8.661160469055176
    9. ' self' → logprob: -8.661160469055176
    10. '        
' → logprob: -9.161160469055176

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1314888596534729
    2. '
' → logprob: -2.131488800048828
    3. '<|end|>' → logprob: -6.506488800048828
    4. ',' → logprob: -7.256488800048828
    5. 'self' → logprob: -7.756488800048828
    6. '   ' → logprob: -7.881488800048828
    7. '        
' → logprob: -8.131488800048828
    8. 'import' → logprob: -8.131488800048828
    9. 'def' → logprob: -8.756488800048828
    10. '        ' → logprob: -8.756488800048828

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6777235865592957
    2. ' self' → logprob: -0.8027235865592957
    3. '       ' → logprob: -3.1777236461639404
    4. 'import' → logprob: -7.302723407745361
    5. 'def' → logprob: -7.302723407745361
    6. 'from' → logprob: -7.427723407745361
    7. ' from' → logprob: -8.30272388458252
    8. ' def' → logprob: -9.42772388458252
    9. ' ' → logprob: -9.67772388458252
    10. '   ' → logprob: -9.80272388458252

Token 275: '.base' (ID: 15523)
  Prédit: '.pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.07466266304254532
    2. '._' → logprob: -2.949662685394287
    3. '.base' → logprob: -4.699662685394287
    4. '.factor' → logprob: -5.824662685394287
    5. '.' → logprob: -5.949662685394287
    6. '.f' → logprob: -6.199662685394287
    7. '_prime' → logprob: -7.074662685394287
    8. 'prime' → logprob: -7.199662685394287
    9. ' .' → logprob: -7.574662685394287
    10. 'def' → logprob: -8.449662208557129

Token 276: '_prime' (ID: 98616)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.26421400904655457
    2. '_prime' → logprob: -1.514214038848877
    3. '_pr' → logprob: -5.014214038848877
    4. '_factor' → logprob: -5.389214038848877
    5. 'f' → logprob: -7.639214038848877
    6. ' =' → logprob: -8.889213562011719
    7. '_pf' → logprob: -8.889213562011719
    8. 'prime' → logprob: -9.639213562011719
    9. '=' → logprob: -9.639213562011719
    10. '_' → logprob: -9.889213562011719

Token 277: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.000581388536375016
    2. 'f' → logprob: -7.75058126449585
    3. '_factor' → logprob: -9.000581741333008
    4. 's' → logprob: -10.750581741333008
    5. 'factor' → logprob: -13.375581741333008
    6. ' factors' → logprob: -13.500581741333008
    7. 'Factors' → logprob: -14.000581741333008
    8. '_counts' → logprob: -14.375581741333008
    9. '_' → logprob: -15.000581741333008
    10. 'es' → logprob: -15.500581741333008

Token 278: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.00015788905147928745
    2. 'actor' → logprob: -8.875158309936523
    3. 'acts' → logprob: -11.500158309936523
    4. 'act' → logprob: -13.125158309936523
    5. 'f' → logprob: -13.875158309936523
    6. 'ctors' → logprob: -14.250158309936523
    7. 'ac' → logprob: -14.375158309936523
    8. ' actors' → logprob: -14.625158309936523
    9. 'a' → logprob: -14.625158309936523
    10. 'acters' → logprob: -14.750158309936523

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061970487236976624
    2. '=' → logprob: -2.8119704723358154
    3. ':' → logprob: -14.061970710754395
    4. ' ' → logprob: -14.186970710754395
    5. '={}' → logprob: -14.311970710754395
    6. '=[]' → logprob: -14.686970710754395
    7. '   ' → logprob: -16.061969757080078
    8. ',' → logprob: -16.186969757080078
    9. ' ={' → logprob: -16.561969757080078
    10. '  ' → logprob: -16.936969757080078

Token 280: ' self' (ID: 1051)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0014255946734920144
    2. ' {}' → logprob: -6.751425743103027
    3. '{' → logprob: -8.376425743103027
    4. 'self' → logprob: -11.501425743103027
    5. '{}
' → logprob: -11.626425743103027
    6. '{}

' → logprob: -13.501425743103027
    7. 'dict' → logprob: -13.751425743103027
    8. '{
' → logprob: -14.251425743103027
    9. '[]' → logprob: -14.501425743103027
    10. ' self' → logprob: -14.626425743103027

Token 281: '.factor' (ID: 196244)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.01568836346268654
    2. '.factor' → logprob: -4.265688419342041
    3. '_factor' → logprob: -7.390688419342041
    4. '.pr' → logprob: -8.015687942504883
    5. '.compute' → logprob: -8.390687942504883
    6. '.get' → logprob: -9.015687942504883
    7. '_prime' → logprob: -9.265687942504883
    8. '.' → logprob: -10.265687942504883
    9. ' .' → logprob: -10.640687942504883
    10. 'factor' → logprob: -10.640687942504883

Token 282: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.007148314267396927
    2. '_factor' → logprob: -5.132148265838623
    3. '_base' → logprob: -7.382148265838623
    4. 'ialize' → logprob: -8.257148742675781
    5. '_' → logprob: -8.507148742675781
    6. '_prime' → logprob: -10.007148742675781
    7. 'factor' → logprob: -10.507148742675781
    8. '_f' → logprob: -11.257148742675781
    9. 'int' → logprob: -11.757148742675781
    10. 'iz' → logprob: -12.382148742675781

Token 283: '_base' (ID: 17096)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.25473371148109436
    2. '(self' → logprob: -1.504733681678772
    3. '(' → logprob: -6.254733562469482
    4. 'self' → logprob: -7.379733562469482
    5. 'base' → logprob: -8.50473403930664
    6. ' (' → logprob: -10.87973403930664
    7. '()' → logprob: -11.37973403930664
    8. '(
' → logprob: -12.50473403930664
    9. '_base' → logprob: -12.50473403930664
    10. ' base' → logprob: -12.62973403930664

Token 284: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39127397537231445
    2. '(base' → logprob: -1.1412739753723145
    3. '(' → logprob: -5.5162739753723145
    4. '(self' → logprob: -8.266273498535156
    5. ' ()' → logprob: -9.641273498535156
    6. '()
' → logprob: -11.016273498535156
    7. '()(' → logprob: -11.141273498535156
    8. ' (' → logprob: -12.141273498535156
    9. '(b' → logprob: -13.266273498535156
    10. '(parent' → logprob: -13.391273498535156

Token 285: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.003005392849445343
    2. 'base' → logprob: -5.878005504608154
    3. '.' → logprob: -8.628005027770996
    4. ')' → logprob: -11.628005027770996
    5. ' base' → logprob: -12.503005027770996
    6. ').' → logprob: -12.878005027770996
    7. ' .' → logprob: -13.128005027770996
    8. '.)' → logprob: -13.378005027770996
    9. '	base' → logprob: -14.378005027770996
    10. '(base' → logprob: -15.128005027770996

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001766040368238464
    2. ' )' → logprob: -8.750176429748535
    3. ')
' → logprob: -11.500176429748535
    4. '   ' → logprob: -12.625176429748535
    5. ')

' → logprob: -12.750176429748535
    6. ' ' → logprob: -13.750176429748535
    7. ')`' → logprob: -14.750176429748535
    8. '       ' → logprob: -15.625176429748535
    9. '))' → logprob: -17.12517738342285
    10. ')
' → logprob: -17.50017738342285

Token 287: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008498902898281813
    2. '    
' → logprob: -7.625849723815918
    3. '   ' → logprob: -9.000849723815918
    4. '

' → logprob: -9.000849723815918
    5. 'def' → logprob: -9.625849723815918
    6. '  
' → logprob: -11.125849723815918
    7. ' 
' → logprob: -11.375849723815918
    8. '<|end|>' → logprob: -11.500849723815918
    9. '
' → logprob: -12.375849723815918
    10. '```' → logprob: -13.125849723815918

Token 288: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0803099274635315
    2. ' def' → logprob: -2.5803098678588867
    3. '   ' → logprob: -6.580309867858887
    4. '
' → logprob: -10.455309867858887
    5. ' ' → logprob: -13.455309867858887
    6. '    
' → logprob: -14.205309867858887
    7. ' 
' → logprob: -15.205309867858887
    8. '	def' → logprob: -15.455309867858887
    9. '

' → logprob: -16.705310821533203
    10. 'indent' → logprob: -16.830310821533203

Token 289: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011705794604495168
    2. ' def' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.12617015838623
    4. 'de' → logprob: -16.126171112060547
    5. '@' → logprob: -19.376171112060547
    6. ' ' → logprob: -20.376171112060547
    7. '
' → logprob: -20.501171112060547
    8. 'd' → logprob: -20.751171112060547
    9. ' 
' → logprob: -21.001171112060547
    10. '	def' → logprob: -21.376171112060547

Token 290: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.256191611289978
    2. ' factor' → logprob: -1.506191611289978
    3. ' def' → logprob: -6.131191730499268
    4. 'def' → logprob: -6.631191730499268
    5. 'f' → logprob: -8.38119125366211
    6. 'fact' → logprob: -8.75619125366211
    7. ' factorial' → logprob: -8.88119125366211
    8. ' fact' → logprob: -9.00619125366211
    9. ' f' → logprob: -10.88119125366211
    10. 'fa' → logprob: -11.50619125366211

Token 291: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -2.4987974029500037e-05
    2. '```' → logprob: -11.625024795532227
    3. '_' → logprob: -12.125024795532227
    4. 'ialize' → logprob: -12.500024795532227
    5. ' ' → logprob: -13.750024795532227
    6. '   ' → logprob: -14.000024795532227
    7. '_factor' → logprob: -14.750024795532227
    8. 'oze' → logprob: -15.000024795532227
    9. '
' → logprob: -15.000024795532227
    10. '=' → logprob: -15.125024795532227

Token 292: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -1.3544423381972592e-05
    2. '_' → logprob: -11.37501335144043
    3. 'base' → logprob: -13.50001335144043
    4. '_Base' → logprob: -15.87501335144043
    5. '_basis' → logprob: -16.37501335144043
    6. '_bas' → logprob: -16.50001335144043
    7. '_BASE' → logprob: -16.87501335144043
    8. '_self' → logprob: -17.00001335144043
    9. '(self' → logprob: -17.00001335144043
    10. '_b' → logprob: -17.12501335144043

Token 293: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001054007327184081
    2. '(' → logprob: -7.001053810119629
    3. ' (' → logprob: -8.876053810119629
    4. '(s' → logprob: -13.251053810119629
    5. '(
' → logprob: -15.126053810119629
    6. 'self' → logprob: -15.251053810119629
    7. ' ' → logprob: -15.751053810119629
    8. '(Self' → logprob: -16.126054763793945
    9. '   ' → logprob: -16.251054763793945
    10. '(base' → logprob: -16.626054763793945

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021212955936789513
    2. ' ,' → logprob: -3.8962130546569824
    3. 'self' → logprob: -7.646213054656982
    4. '(self' → logprob: -9.146212577819824
    5. ')' → logprob: -10.146212577819824
    6. ',self' → logprob: -11.771212577819824
    7. ' (' → logprob: -11.896212577819824
    8. ' )' → logprob: -12.021212577819824
    9. ')(' → logprob: -12.271212577819824
    10. '):' → logprob: -12.396212577819824

Token 295: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07436127215623856
    2. 'n' → logprob: -3.3243613243103027
    3. 'base' → logprob: -3.6993613243103027
    4. ' self' → logprob: -5.074361324310303
    5. ' n' → logprob: -6.324361324310303
    6. ' base' → logprob: -6.824361324310303
    7. 'num' → logprob: -7.449361324310303
    8. '   ' → logprob: -7.574361324310303
    9. 'b' → logprob: -8.324360847473145
    10. ')' → logprob: -8.449360847473145

Token 296: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4694977402687073
    2. '):' → logprob: -1.0944976806640625
    3. ')' → logprob: -3.5944976806640625
    4. '):
' → logprob: -5.4694976806640625
    5. 'self' → logprob: -5.8444976806640625
    6. '   ' → logprob: -6.0944976806640625
    7. ' ):' → logprob: -6.5944976806640625
    8. '       ' → logprob: -6.9694976806640625
    9. ' :' → logprob: -7.8444976806640625
    10. ' )' → logprob: -8.719497680664062

Token 297: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04373658820986748
    2. ' int' → logprob: -3.293736696243286
    3. ')' → logprob: -5.293736457824707
    4. 'self' → logprob: -7.543736457824707
    5. ' self' → logprob: -9.793736457824707
    6. '):
' → logprob: -11.168736457824707
    7. 'def' → logprob: -11.293736457824707
    8. ' )' → logprob: -11.543736457824707
    9. '   ' → logprob: -11.918736457824707
    10. '):' → logprob: -12.293736457824707

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.802049756515771e-05
    2. '):' → logprob: -10.000067710876465
    3. ' )' → logprob: -10.875067710876465
    4. '):
' → logprob: -12.875067710876465
    5. ')->' → logprob: -14.875067710876465
    6. '):
' → logprob: -15.500067710876465
    7. '   ' → logprob: -15.625067710876465
    8. ':' → logprob: -16.25006866455078
    9. '):

' → logprob: -17.00006866455078
    10. '`)' → logprob: -17.37506866455078

Token 299: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018099725246429443
    2. ' ->' → logprob: -5.018099784851074
    3. ')' → logprob: -5.143099784851074
    4. '->' → logprob: -5.268099784851074
    5. ')->' → logprob: -9.143099784851074
    6. ' :' → logprob: -9.268099784851074
    7. '):' → logprob: -9.768099784851074
    8. ':
' → logprob: -10.143099784851074
    9. '   ' → logprob: -11.018099784851074
    10. '       ' → logprob: -12.393099784851074

Token 300: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.2060028612613678
    2. '{' → logprob: -1.9560028314590454
    3. '{}' → logprob: -3.456002950668335
    4. ' dict' → logprob: -4.456002712249756
    5. 'Dict' → logprob: -7.206002712249756
    6. ' {}' → logprob: -7.831002712249756
    7. ' {' → logprob: -7.956002712249756
    8. 'default' → logprob: -9.831003189086914
    9. ' defaultdict' → logprob: -10.831003189086914
    10. ' Dict' → logprob: -12.831003189086914

Token 301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022695928812026978
    2. ':
' → logprob: -4.272696018218994
    3. '(self' → logprob: -5.147696018218994
    4. '{' → logprob: -6.522696018218994
    5. '       ' → logprob: -7.897696018218994
    6. '):' → logprob: -7.897696018218994
    7. '(' → logprob: -8.772695541381836
    8. '):
' → logprob: -9.022695541381836
    9. '   ' → logprob: -9.272695541381836
    10. ' :' → logprob: -10.647695541381836

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011786778923124075
    2. '{' → logprob: -7.001178741455078
    3. '   ' → logprob: -9.626178741455078
    4. ' {' → logprob: -9.751178741455078
    5. ' ' → logprob: -10.876178741455078
    6. '        
' → logprob: -11.251178741455078
    7. '```' → logprob: -11.251178741455078
    8. '    ' → logprob: -11.626178741455078
    9. '<|end|>' → logprob: -11.876178741455078
    10. ':' → logprob: -11.876178741455078

Token 303: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09529975801706314
    2. ' factor' → logprob: -3.34529972076416
    3. ' factors' → logprob: -3.72029972076416
    4. '{' → logprob: -4.34529972076416
    5. 'factor' → logprob: -5.09529972076416
    6. ' {' → logprob: -5.59529972076416
    7. '{}' → logprob: -5.72029972076416
    8. ' {}' → logprob: -6.47029972076416
    9. ' prime' → logprob: -6.84529972076416
    10. ' result' → logprob: -7.59529972076416

Token 304: ' Return' (ID: 6318)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006189120467752218
    2. ' factors' → logprob: -8.125618934631348
    3. '       ' → logprob: -8.625618934631348
    4. 'factor' → logprob: -9.875618934631348
    5. 'prime' → logprob: -10.000618934631348
    6. '   ' → logprob: -10.750618934631348
    7. 'def' → logprob: -11.500618934631348
    8. 'pf' → logprob: -11.875618934631348
    9. 'n' → logprob: -12.625618934631348
    10. 'i' → logprob: -13.000618934631348

Token 305: ' dictionary' (ID: 22131)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2270103543996811
    2. 'f' → logprob: -2.1020102500915527
    3. ' factors' → logprob: -2.8520102500915527
    4. '{' → logprob: -4.352010250091553
    5. 'prime' → logprob: -5.227010250091553
    6. ' {}' → logprob: -6.102010250091553
    7. '{})' → logprob: -6.602010250091553
    8. ' prime' → logprob: -7.602010250091553
    9. 'factor' → logprob: -7.977010250091553
    10. '{}
' → logprob: -9.227010726928711

Token 306: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10640789568424225
    2. ' of' → logprob: -2.856407880783081
    3. '<|end|>' → logprob: -3.981407880783081
    4. '{}' → logprob: -4.23140811920166
    5. ' {' → logprob: -5.73140811920166
    6. ' =' → logprob: -7.10640811920166
    7. '<|end|>' → logprob: -7.35640811920166
    8. '[int' → logprob: -7.48140811920166
    9. '={}' → logprob: -7.60640811920166
    10. '       ' → logprob: -7.60640811920166

Token 307: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5756441354751587
    2. 'p' → logprob: -1.3256441354751587
    3. '}' → logprob: -1.8256441354751587
    4. 'int' → logprob: -5.325644016265869
    5. ' prime' → logprob: -5.825644016265869
    6. ' p' → logprob: -6.825644016265869
    7. 'factor' → logprob: -7.200644016265869
    8. ' }' → logprob: -8.075644493103027
    9. '}
' → logprob: -8.325644493103027
    10. 'pr' → logprob: -8.450644493103027

Token 308: '_factor' (ID: 43757)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007834215648472309
    2. ' :' → logprob: -4.882834434509277
    3. ':int' → logprob: -9.007834434509277
    4. '       ' → logprob: -10.382834434509277
    5. '_factor' → logprob: -10.757834434509277
    6. ',' → logprob: -10.882834434509277
    7. 'factor' → logprob: -11.007834434509277
    8. '   ' → logprob: -11.882834434509277
    9. 'f' → logprob: -12.882834434509277
    10. ':
' → logprob: -13.632834434509277

Token 309: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004050382878631353
    2. ' :' → logprob: -5.629050254821777
    3. ':int' → logprob: -7.754050254821777
    4. ',' → logprob: -11.379050254821777
    5. 's' → logprob: -13.504050254821777
    6. ':return' → logprob: -13.629050254821777
    7. ':s' → logprob: -13.879050254821777
    8. ':index' → logprob: -14.129050254821777
    9. ':
' → logprob: -14.254050254821777
    10. ':number' → logprob: -14.379050254821777

Token 310: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.005246568005532026
    2. ' exponent' → logprob: -5.255246639251709
    3. 'count' → logprob: -12.13024616241455
    4. ' ex' → logprob: -12.75524616241455
    5. '0' → logprob: -12.88024616241455
    6. ''ex' → logprob: -13.75524616241455
    7. 'exp' → logprob: -15.13024616241455
    8. ' count' → logprob: -15.75524616241455
    9. ' ' → logprob: -15.75524616241455
    10. '_ex' → logprob: -16.255247116088867

Token 311: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.059184372425079346
    2. ',' → logprob: -2.9341843128204346
    3. ' }' → logprob: -5.559184551239014
    4. '}
' → logprob: -8.309184074401855
    5. ' ,' → logprob: -10.059184074401855
    6. '}:' → logprob: -10.184184074401855
    7. '   ' → logprob: -10.309184074401855
    8. ')' → logprob: -11.184184074401855
    9. ' ' → logprob: -11.434184074401855
    10. '       ' → logprob: -11.434184074401855

Token 312: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3047950267791748
    2. ',' → logprob: -1.5547950267791748
    3. '       ' → logprob: -3.929795026779175
    4. ' =' → logprob: -4.554795265197754
    5. ' :' → logprob: -4.679795265197754
    6. '{' → logprob: -5.179795265197754
    7. '=' → logprob: -5.929795265197754
    8. '   ' → logprob: -6.804795265197754
    9. ' ,' → logprob: -7.429795265197754
    10. '):' → logprob: -7.679795265197754

Token 313: ' b' (ID: 287)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.2609637379646301
    2. '       ' → logprob: -1.5109636783599854
    3. ' factor' → logprob: -5.8859639167785645
    4. 'f' → logprob: -6.1359639167785645
    5. 'factor' → logprob: -6.5109639167785645
    6. ' result' → logprob: -8.135963439941406
    7. ' prime' → logprob: -8.135963439941406
    8. 'n' → logprob: -8.385963439941406
    9. ' fact' → logprob: -8.385963439941406
    10. '{' → logprob: -8.385963439941406

Token 314: ' =' (ID: 314)
  Prédit: 'ase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.07099919766187668
    2. ' =' → logprob: -2.9459991455078125
    3. '=' → logprob: -4.5709991455078125
    4. 'ases' → logprob: -5.6959991455078125
    5. '   ' → logprob: -7.6959991455078125
    6. 'reak' → logprob: -7.8209991455078125
    7. 'e' → logprob: -7.8209991455078125
    8. 'r' → logprob: -8.070999145507812
    9. '       ' → logprob: -9.195999145507812
    10. 'factor' → logprob: -9.570999145507812

Token 315: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03807293251156807
    2. ' base' → logprob: -3.2880728244781494
    3. '2' → logprob: -11.78807258605957
    4. '   ' → logprob: -11.91307258605957
    5. ' ' → logprob: -12.53807258605957
    6. '	base' → logprob: -12.53807258605957
    7. '{}' → logprob: -12.78807258605957
    8. 'b' → logprob: -13.28807258605957
    9. '       ' → logprob: -13.78807258605957
    10. '(base' → logprob: -13.91307258605957

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32710981369018555
    2. ',' → logprob: -1.8271098136901855
    3. '
' → logprob: -2.3271098136901855
    4. '=' → logprob: -4.4521098136901855
    5. ' =' → logprob: -5.8271098136901855
    6. ',
' → logprob: -6.3271098136901855
    7. '        
' → logprob: -6.8271098136901855
    8. '   ' → logprob: -7.3271098136901855
    9. '        ' → logprob: -8.202110290527344
    10. ':' → logprob: -8.452110290527344

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041172682540491223
    2. ',' → logprob: -8.875411987304688
    3. ' factors' → logprob: -9.375411987304688
    4. 'factor' → logprob: -9.625411987304688
    5. ' factor' → logprob: -11.000411987304688
    6. ' ' → logprob: -11.250411987304688
    7. '        
' → logprob: -11.375411987304688
    8. 'result' → logprob: -11.625411987304688
    9. '   ' → logprob: -11.625411987304688
    10. '2' → logprob: -12.000411987304688

Token 318: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7771368622779846
    2. ' factors' → logprob: -0.7771368622779846
    3. 'pf' → logprob: -3.27713680267334
    4. 'i' → logprob: -4.27713680267334
    5. 'factor' → logprob: -4.65213680267334
    6. ' i' → logprob: -5.02713680267334
    7. '   ' → logprob: -5.15213680267334
    8. '       ' → logprob: -5.40213680267334
    9. ' factor' → logprob: -7.52713680267334
    10. 'd' → logprob: -7.52713680267334

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689613342285156
    2. ' =' → logprob: -1.1368961334228516
    3. '={}' → logprob: -10.761896133422852
    4. '   ' → logprob: -14.511896133422852
    5. '={' → logprob: -14.511896133422852
    6. ',' → logprob: -14.511896133422852
    7. ' ' → logprob: -14.636896133422852
    8. ':' → logprob: -14.761896133422852
    9. ' ={' → logprob: -14.761896133422852
    10. '={}
' → logprob: -15.011896133422852

Token 320: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.650518920039758e-06
    2. ' {}' → logprob: -13.250003814697266
    3. '{}
' → logprob: -13.250003814697266
    4. 'dict' → logprob: -16.750003814697266
    5. '={}' → logprob: -17.875003814697266
    6. '{' → logprob: -18.250003814697266
    7. '{}

' → logprob: -18.625003814697266
    8. '{}\' → logprob: -18.750003814697266
    9. '{})' → logprob: -19.000003814697266
    10. '{},' → logprob: -20.250003814697266

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016307900659739971
    2. '        
' → logprob: -7.251630783081055
    3. '
' → logprob: -8.376630783081055
    4. ' 
' → logprob: -8.751630783081055
    5. ' ' → logprob: -8.876630783081055
    6. '<|end|>' → logprob: -9.376630783081055
    7. ',' → logprob: -9.626630783081055
    8. '   ' → logprob: -9.626630783081055
    9. '  
' → logprob: -10.501630783081055
    10. '        ' → logprob: -10.751630783081055

Token 322: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5483018755912781
    2. ' p' → logprob: -1.5483019351959229
    3. ' i' → logprob: -1.9233019351959229
    4. ' ' → logprob: -3.923301935195923
    5. ' d' → logprob: -4.048301696777344
    6. 'i' → logprob: -4.673301696777344
    7. 'p' → logprob: -5.048301696777344
    8. 'd' (adapté à ' d') → logprob: -5.423301696777344
    9. ' divisor' → logprob: -6.048301696777344
    10. '       ' → logprob: -6.673301696777344

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47424352169036865
    2. '=' → logprob: -0.9742435216903687
    3. 'ef' → logprob: -9.3492431640625
    4. ' ' → logprob: -9.7242431640625
    5. 'iv' → logprob: -11.5992431640625
    6. 'e' → logprob: -12.3492431640625
    7. ',' → logprob: -12.7242431640625
    8. 'i' → logprob: -13.7242431640625
    9. 'ivid' → logprob: -14.7242431640625
    10. '   ' → logprob: -14.8492431640625

Token 324: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -15.753600120544434
    4. ' ' → logprob: -17.81610107421875
    5. '    ' → logprob: -17.81610107421875
    6. '  ' → logprob: -17.87860107421875
    7. '     ' → logprob: -17.87860107421875
    8. '       ' → logprob: -17.94110107421875
    9. '	' → logprob: -18.00360107421875
    10. '۲' → logprob: -18.25360107421875

Token 325: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '  ' → logprob: -20.937509536743164
    5. '۲' → logprob: -20.937509536743164
    6. '    ' → logprob: -21.250009536743164
    7. '２' → logprob: -21.312509536743164
    8. '     ' → logprob: -21.437509536743164
    9. '```' → logprob: -21.500009536743164
    10. '	' → logprob: -21.812509536743164

Token 326: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02370450645685196
    2. '<|end|>' → logprob: -3.7737045288085938
    3. '<|end|>' → logprob: -8.898704528808594
    4. ' 
' → logprob: -9.023704528808594
    5. '  
' → logprob: -9.898704528808594
    6. 'while' → logprob: -10.023704528808594
    7. '
' → logprob: -10.523704528808594
    8. '       ' → logprob: -11.023704528808594
    9. ':' → logprob: -11.023704528808594
    10. ' while' → logprob: -11.898704528808594

Token 327: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28488871455192566
    2. '       ' → logprob: -2.534888744354248
    3. ' while' → logprob: -2.784888744354248
    4. '<|end|>' → logprob: -3.284888744354248
    5. ' 
' → logprob: -3.909888744354248
    6. 'while' → logprob: -4.034888744354248
    7. ':' → logprob: -4.534888744354248
    8. ' ' → logprob: -5.284888744354248
    9. '	while' → logprob: -5.409888744354248
    10. '        
' → logprob: -5.659888744354248

Token 328: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.038812603801488876
    2. ' ' → logprob: -4.038812637329102
    3. 'while' (adapté à ' while') → logprob: -4.413812637329102
    4. '       ' → logprob: -5.413812637329102
    5. '	while' → logprob: -5.913812637329102
    6. ' 
' → logprob: -7.413812637329102
    7. '<|end|>' → logprob: -8.538812637329102
    8. '        ' → logprob: -9.288812637329102
    9. '   ' → logprob: -10.163812637329102
    10. '    ' → logprob: -10.163812637329102

Token 329: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22618542611598969
    2. 'd' → logprob: -1.6011854410171509
    3. 'b' → logprob: -7.601185321807861
    4. ' b' → logprob: -8.22618579864502
    5. '(d' → logprob: -12.85118579864502
    6. '	d' → logprob: -13.60118579864502
    7. ' ' → logprob: -15.22618579864502
    8. '$d' → logprob: -15.60118579864502
    9. '>d' → logprob: -15.72618579864502
    10. '   ' → logprob: -15.72618579864502

Token 330: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1388634294271469
    2. ' <=' → logprob: -2.1388633251190186
    3. '*' → logprob: -4.763863563537598
    4. '*d' → logprob: -6.138863563537598
    5. '<=' → logprob: -6.763863563537598
    6. '**' → logprob: -12.013863563537598
    7. ' ' → logprob: -12.388863563537598
    8. 'd' → logprob: -12.388863563537598
    9. '*b' → logprob: -13.138863563537598
    10. ' **' → logprob: -13.638863563537598

Token 331: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.542423165636137e-05
    2. ' d' → logprob: -9.375085830688477
    3. '	d' → logprob: -15.875085830688477
    4. ' ' → logprob: -16.250085830688477
    5. '*d' → logprob: -16.500085830688477
    6. '_d' → logprob: -16.625085830688477
    7. '<=' → logprob: -17.250085830688477
    8. '
' → logprob: -17.562585830688477
    9. ')d' → logprob: -17.812585830688477
    10. 'D' → logprob: -17.875085830688477

Token 332: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04301505908370018
    2. '<=' → logprob: -3.1680150032043457
    3. '<|end|>' → logprob: -11.293015480041504
    4. ')<=' → logprob: -13.918015480041504
    5. ']<=' → logprob: -14.043015480041504
    6. ' ≤' → logprob: -14.418015480041504
    7. ' ' → logprob: -14.793015480041504
    8. '[' → logprob: -15.668015480041504
    9. '<|end|>' → logprob: -16.418014526367188
    10. '≤' → logprob: -16.543014526367188

Token 333: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002967320033349097
    2. ' b' → logprob: -8.125296592712402
    3. '       ' → logprob: -15.250296592712402
    4. '   ' → logprob: -15.250296592712402
    5. 'd' → logprob: -15.750296592712402
    6. '	b' → logprob: -17.00029754638672
    7. ' ' → logprob: -18.37529754638672
    8. '           ' → logprob: -18.50029754638672
    9. '    ' → logprob: -19.00029754638672
    10. ')b' → logprob: -19.25029754638672

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020642325282096863
    2. ':
' → logprob: -3.8956422805786133
    3. ' and' → logprob: -10.020642280578613
    4. ' :' → logprob: -10.270642280578613
    5. ' or' → logprob: -12.395642280578613
    6. ' :
' → logprob: -12.645642280578613
    7. '       ' → logprob: -12.770642280578613
    8. ':
' → logprob: -12.770642280578613
    9. ':

' → logprob: -13.145642280578613
    10. '):' → logprob: -13.770642280578613

Token 335: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12112678587436676
    2. '       ' → logprob: -2.746126890182495
    3. ':
' → logprob: -3.371126890182495
    4. '           ' → logprob: -4.246126651763916
    5. ' :' → logprob: -7.496126651763916
    6. '   ' → logprob: -8.746127128601074
    7. ' and' → logprob: -8.746127128601074
    8. ',' → logprob: -9.371127128601074
    9. '<|end|>' → logprob: -9.996127128601074
    10. '[' → logprob: -10.496127128601074

Token 336: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5737863779067993
    2. ' ' → logprob: -1.1987863779067993
    3. ' while' → logprob: -2.5737862586975098
    4. ':' → logprob: -4.32378625869751
    5. '           ' → logprob: -4.57378625869751
    6. 'if' → logprob: -5.07378625869751
    7. '            ' → logprob: -5.19878625869751
    8. ':
' → logprob: -5.32378625869751
    9. 'while' → logprob: -5.57378625869751
    10. '        ' → logprob: -5.82378625869751

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5235997438430786
    2. ' =' → logprob: -0.8985997438430786
    3. ' ' → logprob: -8.023599624633789
    4. ' +=' → logprob: -9.273599624633789
    5. ':' → logprob: -10.523599624633789
    6. '+=' → logprob: -11.523599624633789
    7. ',' → logprob: -12.398599624633789
    8. '    ' → logprob: -12.648599624633789
    9. '   ' → logprob: -13.273599624633789
    10. '<|end|>' → logprob: -13.398599624633789

Token 338: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04299987852573395
    2. ' ' → logprob: -3.1679999828338623
    3. '   ' → logprob: -14.543000221252441
    4. ' ' → logprob: -15.980500221252441
    5. '  ' → logprob: -16.792999267578125
    6. '       ' → logprob: -17.605499267578125
    7. '۰' → logprob: -17.792999267578125
    8. '```' → logprob: -18.042999267578125
    9. '    ' → logprob: -18.355499267578125
    10. '1' → logprob: -18.480499267578125

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.250431060791016
    4. '۰' → logprob: -18.312931060791016
    5. ' ' → logprob: -18.312931060791016
    6. '```' → logprob: -18.375431060791016
    7. '  ' → logprob: -18.687931060791016
    8. '{' → logprob: -19.562931060791016
    9. 'b' → logprob: -19.562931060791016
    10. '`' → logprob: -19.562931060791016

Token 340: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.936399519443512
    2. '<|end|>' → logprob: -0.936399519443512
    3. '
' → logprob: -1.8113994598388672
    4. '<|end|>' → logprob: -3.936399459838867
    5. ':' → logprob: -5.061399459838867
    6. ',' → logprob: -5.061399459838867
    7. '       ' → logprob: -5.186399459838867
    8. ':
' → logprob: -5.436399459838867
    9. ';' → logprob: -6.186399459838867
    10. '            
' → logprob: -6.561399459838867

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021844852715730667
    2. ':
' → logprob: -4.646844863891602
    3. ':' → logprob: -5.271844863891602
    4. '<|end|>' → logprob: -6.021844863891602
    5. '       ' → logprob: -6.646844863891602
    6. '<|end|>' → logprob: -7.396844863891602
    7. ' while' → logprob: -7.521844863891602
    8. '            
' → logprob: -7.646844863891602
    9. '
' → logprob: -7.896844863891602
    10. 'while' → logprob: -8.521844863891602

Token 342: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4994754493236542
    2. '           ' → logprob: -1.1244754791259766
    3. 'while' (adapté à ' while') → logprob: -2.7494754791259766
    4. '            ' → logprob: -6.124475479125977
    5. 'd' → logprob: -6.749475479125977
    6. ' d' → logprob: -7.999475479125977
    7. 'b' → logprob: -8.124475479125977
    8. ' b' → logprob: -8.874475479125977
    9. ' if' → logprob: -9.374475479125977
    10. ' ' → logprob: -9.874475479125977

Token 343: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326520442962646
    2. ' b' → logprob: -1.3132652044296265
    3. '(b' → logprob: -12.813264846801758
    4. ' ' → logprob: -14.938264846801758
    5. '   ' → logprob: -16.063264846801758
    6. ' (' → logprob: -16.063264846801758
    7. '	b' → logprob: -16.313264846801758
    8. '    ' → logprob: -17.188264846801758
    9. ')b' → logprob: -17.563264846801758
    10. ' б' → logprob: -17.688264846801758

Token 344: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.27010485529899597
    2. '%' → logprob: -1.5201048851013184
    3. '%d' → logprob: -4.020104885101318
    4. '%e' → logprob: -10.89510440826416
    5. '%b' → logprob: -11.14510440826416
    6. '%D' → logprob: -11.64510440826416
    7. '%s' → logprob: -12.02010440826416
    8. '%c' → logprob: -12.39510440826416
    9. '%i' → logprob: -12.52010440826416
    10. '%E' → logprob: -13.52010440826416

Token 345: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004309076175559312
    2. ' d' → logprob: -7.750431060791016
    3. '	d' → logprob: -15.500431060791016
    4. '2' → logprob: -17.000431060791016
    5. '>d' → logprob: -17.250431060791016
    6. '<|end|>' → logprob: -17.250431060791016
    7. ')d' → logprob: -18.250431060791016
    8. '   ' → logprob: -18.750431060791016
    9. '_d' → logprob: -19.125431060791016
    10. ' ' → logprob: -19.500431060791016

Token 346: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25199219584465027
    2. ' ==' → logprob: -1.5019922256469727
    3. '=' → logprob: -9.876992225646973
    4. ')==' → logprob: -12.251992225646973
    5. '0' → logprob: -12.626992225646973
    6. '===' → logprob: -13.126992225646973
    7. ' ' → logprob: -14.126992225646973
    8. ']==' → logprob: -14.876992225646973
    9. '==
' → logprob: -15.376992225646973
    10. ')' → logprob: -15.501992225646973

Token 347: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.001502990722656
    4. '  ' → logprob: -18.626502990722656
    5. 'd' → logprob: -19.001502990722656
    6. '    ' → logprob: -20.626502990722656
    7. '=' → logprob: -20.626502990722656
    8. '۰' → logprob: -21.376502990722656
    9. '     ' → logprob: -21.626502990722656
    10. '
' → logprob: -21.751502990722656

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. 'd' → logprob: -17.50037956237793
    4. '   ' → logprob: -18.75037956237793
    5. '  ' → logprob: -19.75037956237793
    6. '۰' → logprob: -20.68787956237793
    7. '    ' → logprob: -20.87537956237793
    8. '     ' → logprob: -21.56287956237793
    9. ' d' → logprob: -21.87537956237793
    10. '=' → logprob: -21.93787956237793

Token 349: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5765928030014038
    2. ':
' → logprob: -0.8265928030014038
    3. '               ' → logprob: -8.451592445373535
    4. '           ' → logprob: -8.826592445373535
    5. '):
' → logprob: -8.826592445373535
    6. ' and' → logprob: -9.451592445373535
    7. ',' → logprob: -10.951592445373535
    8. ':

' → logprob: -11.326592445373535
    9. '       ' → logprob: -11.826592445373535
    10. ' :
' → logprob: -12.326592445373535

Token 350: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01132143009454012
    2. 'count' → logprob: -4.761321544647217
    3. ' count' → logprob: -6.011321544647217
    4. '           ' → logprob: -9.136321067810059
    5. 'd' → logprob: -10.886321067810059
    6. '[count' → logprob: -11.136321067810059
    7. '(count' → logprob: -11.261321067810059
    8. ' ' → logprob: -11.386321067810059
    9. ' d' → logprob: -11.511321067810059
    10. '1' → logprob: -11.761321067810059

Token 351: ' b' (ID: 287)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12474919855594635
    2. ' count' → logprob: -2.249749183654785
    3. 'b' (adapté à ' b') → logprob: -5.124749183654785
    4. '               ' → logprob: -5.374749183654785
    5. ' b' → logprob: -6.874749183654785
    6. '                ' → logprob: -8.874749183654785
    7. '                   ' → logprob: -10.249749183654785
    8. '           ' → logprob: -10.499749183654785
    9. '            ' → logprob: -11.124749183654785
    10. 'factor' → logprob: -12.124749183654785

Token 352: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.4744108021259308
    2. ' //' → logprob: -0.9744107723236084
    3. '//' → logprob: -8.099411010742188
    4. '/=' → logprob: -11.099411010742188
    5. ' /=' → logprob: -11.599411010742188
    6. '=' → logprob: -12.224411010742188
    7. ' ' → logprob: -15.099411010742188
    8. '```' → logprob: -15.974411010742188
    9. ' ' → logprob: -16.224411010742188
    10. ' =' → logprob: -16.974411010742188

Token 353: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024808887392282486
    2. '=d' → logprob: -6.002480983734131
    3. 'd' → logprob: -12.752480506896973
    4. '=
' → logprob: -14.002480506896973
    5. '=}' → logprob: -14.252480506896973
    6. ' d' → logprob: -15.377480506896973
    7. '=

' → logprob: -15.627480506896973
    8. '=_' → logprob: -16.12748146057129
    9. '=db' → logprob: -17.25248146057129
    10. '=b' → logprob: -17.37748146057129

Token 354: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0380416102707386
    2. ' d' → logprob: -3.288041591644287
    3. '2' → logprob: -16.163042068481445
    4. '	d' → logprob: -17.538042068481445
    5. ' ' → logprob: -17.663042068481445
    6. '
' → logprob: -17.913042068481445
    7. '   ' → logprob: -17.913042068481445
    8. ')d' → logprob: -20.038042068481445
    9. '           ' → logprob: -20.413042068481445
    10. '10' → logprob: -20.413042068481445

Token 355: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6449187994003296
    2. '               ' → logprob: -1.3949187994003296
    3. '
' → logprob: -2.519918918609619
    4. ',' → logprob: -3.019918918609619
    5. '           ' → logprob: -3.019918918609619
    6. '                   ' → logprob: -3.894918918609619
    7. 'd' → logprob: -5.144918918609619
    8. ' ' → logprob: -5.269918918609619
    9. ',
' → logprob: -5.269918918609619
    10. 'count' → logprob: -5.769918918609619

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06207031011581421
    2. 'count' → logprob: -3.937070369720459
    3. '
' → logprob: -4.562070369720459
    4. '           ' → logprob: -4.687070369720459
    5. ',' → logprob: -4.812070369720459
    6. '                   ' → logprob: -5.062070369720459
    7. ',count' → logprob: -6.312070369720459
    8. '1' → logprob: -6.437070369720459
    9. ',
' → logprob: -6.812070369720459
    10. ' count' → logprob: -7.687070369720459

Token 357: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.02326854318380356
    2. ' count' → logprob: -3.773268461227417
    3. '1' → logprob: -10.773268699645996
    4. '           ' → logprob: -14.023268699645996
    5. '               ' → logprob: -15.148268699645996
    6. ' ' → logprob: -15.648268699645996
    7. '
' → logprob: -15.773268699645996
    8. '       ' → logprob: -16.14826774597168
    9. '(count' → logprob: -16.39826774597168
    10. '   ' → logprob: -16.77326774597168

Token 358: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5762693285942078
    2. ' +=' → logprob: -0.8262693285942078
    3. '=' → logprob: -8.076269149780273
    4. ']+=' → logprob: -11.451269149780273
    5. ' =' → logprob: -12.451269149780273
    6. '+' → logprob: -13.451269149780273
    7. '<|end|>' → logprob: -14.576269149780273
    8. '[' → logprob: -14.826269149780273
    9. '           ' → logprob: -14.951269149780273
    10. '    ' → logprob: -15.076269149780273

Token 359: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. ' ' → logprob: -19.383615493774414
    4. '   ' → logprob: -20.008615493774414
    5. '１' → logprob: -20.571115493774414
    6. '۱' → logprob: -20.883615493774414
    7. '  ' → logprob: -21.571115493774414
    8. '
' → logprob: -21.633615493774414
    9. '```' → logprob: -21.633615493774414
    10. ')' → logprob: -22.196115493774414

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.250051498413086
    4. '１' → logprob: -20.562551498413086
    5. '
' → logprob: -20.687551498413086
    6. '  ' → logprob: -21.437551498413086
    7. '0' → logprob: -21.437551498413086
    8. '۱' → logprob: -21.500051498413086
    9. ' ' → logprob: -21.812551498413086
    10. '```' → logprob: -21.937551498413086

Token 361: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023808805271983147
    2. '
' → logprob: -6.377380847930908
    3. ',' → logprob: -8.002381324768066
    4. '            
' → logprob: -9.252381324768066
    5. '<|end|>' → logprob: -10.002381324768066
    6. ',
' → logprob: -10.002381324768066
    7. ':
' → logprob: -10.377381324768066
    8. '    
' → logprob: -10.377381324768066
    9. 'd' → logprob: -11.252381324768066
    10. '<|end|>' → logprob: -11.377381324768066

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.226628895296017e-06
    2. '
' → logprob: -13.000007629394531
    3. 'd' → logprob: -13.375007629394531
    4. '          ' → logprob: -14.375007629394531
    5. ',' → logprob: -14.500007629394531
    6. '       ' → logprob: -14.500007629394531
    7. ' d' → logprob: -14.625007629394531
    8. '            
' → logprob: -14.625007629394531
    9. '<|end|>' → logprob: -15.500007629394531
    10. '    
' → logprob: -16.12500762939453

Token 363: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5164429545402527
    2. '           ' → logprob: -1.3914430141448975
    3. 'if' (adapté à ' if') → logprob: -1.8914430141448975
    4. '       ' → logprob: -5.641442775726318
    5. '   ' → logprob: -9.266443252563477
    6. 'd' → logprob: -9.391443252563477
    7. ' ' → logprob: -10.391443252563477
    8. '
' → logprob: -11.266443252563477
    9. ' d' → logprob: -12.141443252563477
    10. '```' → logprob: -12.766443252563477

Token 364: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.47407814860343933
    2. ' count' → logprob: -0.9740781784057617
    3. '(count' → logprob: -14.349078178405762
    4. '	count' → logprob: -14.974078178405762
    5. ' ' → logprob: -16.599077224731445
    6. '[count' → logprob: -16.724077224731445
    7. 'c' → logprob: -18.099077224731445
    8. '   ' → logprob: -18.349077224731445
    9. 'd' → logprob: -18.349077224731445
    10. 'Count' → logprob: -18.474077224731445

Token 365: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02336287684738636
    2. '>' → logprob: -3.773362874984741
    3. ':' → logprob: -9.14836311340332
    4. '<|end|>' → logprob: -12.14836311340332
    5. ')>' → logprob: -13.02336311340332
    6. '{' → logprob: -14.52336311340332
    7. ' ' → logprob: -14.64836311340332
    8. ')' → logprob: -14.89836311340332
    9. '   ' → logprob: -15.02336311340332
    10. '">' → logprob: -15.52336311340332

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038042180240154266
    2. ' ' → logprob: -3.2880420684814453
    3. '=' → logprob: -14.788042068481445
    4. '   ' → logprob: -16.413042068481445
    5. '<|end|>' → logprob: -16.413042068481445
    6. '  ' → logprob: -17.038042068481445
    7. '```' → logprob: -17.038042068481445
    8. ',' → logprob: -17.288042068481445
    9. '۰' → logprob: -17.663042068481445
    10. ')' → logprob: -18.100542068481445

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '۰' → logprob: -18.00103187561035
    4. '   ' → logprob: -18.25103187561035
    5. ',' → logprob: -19.18853187561035
    6. '  ' → logprob: -19.18853187561035
    7. '```' → logprob: -19.37603187561035
    8. '=' → logprob: -19.87603187561035
    9. '<|end|>' → logprob: -20.25103187561035
    10. '٠' → logprob: -20.75103187561035

Token 368: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4301062226295471
    2. ':' → logprob: -1.0551061630249023
    3. '           ' → logprob: -6.805106163024902
    4. '):
' → logprob: -8.805106163024902
    5. '               ' → logprob: -9.680106163024902
    6. ',' → logprob: -10.055106163024902
    7. ' :
' → logprob: -11.180106163024902
    8. '       ' → logprob: -11.555106163024902
    9. ':

' → logprob: -12.055106163024902
    10. ' :' → logprob: -12.430106163024902

Token 369: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2038773000240326
    2. '           ' → logprob: -2.0788772106170654
    3. ' factors' → logprob: -2.8288772106170654
    4. '       ' → logprob: -9.703877449035645
    5. ',' → logprob: -9.953877449035645
    6. '{
' → logprob: -10.828877449035645
    7. 'f' → logprob: -10.828877449035645
    8. '
' → logprob: -11.328877449035645
    9. 'Factors' → logprob: -11.328877449035645
    10. ':
' → logprob: -11.578877449035645

Token 370: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.013173644430935383
    2. '           ' → logprob: -4.388173580169678
    3. 'f' → logprob: -7.513173580169678
    4. '               ' → logprob: -9.388174057006836
    5. 'Factors' → logprob: -11.763174057006836
    6. ' factores' → logprob: -12.263174057006836
    7. '```' → logprob: -12.638174057006836
    8. ' f' → logprob: -13.013174057006836
    9. '	f' → logprob: -13.138174057006836
    10. ' facteurs' → logprob: -13.138174057006836

Token 371: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. '[c' → logprob: -16.00000762939453
    4. ' [' → logprob: -16.25000762939453
    5. '[
' → logprob: -17.62500762939453
    6. 'd' → logprob: -17.62500762939453
    7. '   ' → logprob: -18.00000762939453
    8. '[b' → logprob: -18.37500762939453
    9. '```' → logprob: -18.37500762939453
    10. '[D' → logprob: -18.75000762939453

Token 372: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002141458389814943
    2. ']=' → logprob: -8.750214576721191
    3. ' ]' → logprob: -9.875214576721191
    4. '']' → logprob: -12.625214576721191
    5. '"]' → logprob: -14.250214576721191
    6. '=' → logprob: -16.625213623046875
    7. '`]' → logprob: -17.500213623046875
    8. ')' → logprob: -17.625213623046875
    9. '']=' → logprob: -17.625213623046875
    10. ']+=' → logprob: -17.750213623046875

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869166970252991
    2. ' =' → logprob: -1.1369166374206543
    3. ']' → logprob: -10.636917114257812
    4. ']=' → logprob: -10.761917114257812
    5. ')=' → logprob: -15.136917114257812
    6. ')' → logprob: -16.386917114257812
    7. '=count' → logprob: -17.136917114257812
    8. '[' → logprob: -17.261917114257812
    9. ' ' → logprob: -18.011917114257812
    10. '=d' → logprob: -18.136917114257812

Token 374: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3132633566856384
    2. ' count' → logprob: -1.3132634162902832
    3. '(count' → logprob: -13.813262939453125
    4. '[count' → logprob: -15.438262939453125
    5. '	count' → logprob: -15.938262939453125
    6. '=count' → logprob: -16.688262939453125
    7. '$count' → logprob: -17.188262939453125
    8. 'c' → logprob: -17.438262939453125
    9. '<count' → logprob: -17.688262939453125
    10. 'counts' → logprob: -17.938262939453125

Token 375: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000591874762903899
    2. '
' → logprob: -7.75059175491333
    3. '            
' → logprob: -10.000592231750488
    4. '<|end|>' → logprob: -10.000592231750488
    5. '    
' → logprob: -10.875592231750488
    6. ',' → logprob: -11.125592231750488
    7. '<|end|>' → logprob: -11.500592231750488
    8. 'd' → logprob: -12.125592231750488
    9. '       ' → logprob: -12.750592231750488
    10. '  
' → logprob: -12.750592231750488

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.558399319241289e-05
    2. 'd' → logprob: -12.000025749206543
    3. ',' → logprob: -12.375025749206543
    4. '               ' → logprob: -12.500025749206543
    5. '
' → logprob: -12.750025749206543
    6. '       ' → logprob: -13.000025749206543
    7. '<|end|>' → logprob: -13.625025749206543
    8. '          ' → logprob: -13.875025749206543
    9. '            
' → logprob: -14.000025749206543
    10. ',d' → logprob: -14.250025749206543

Token 377: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08425701409578323
    2. '       ' → logprob: -3.209257125854492
    3. 'd' (adapté à ' d') → logprob: -3.459257125854492
    4. ' d' → logprob: -4.834257125854492
    5. '   ' → logprob: -6.959257125854492
    6. ',d' → logprob: -10.959257125854492
    7. ' ' → logprob: -12.084257125854492
    8. '	d' → logprob: -12.084257125854492
    9. '               ' → logprob: -12.209257125854492
    10. '	   ' → logprob: -12.584257125854492

Token 378: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.061976537108421326
    2. ' +=' → logprob: -2.811976432800293
    3. '=' → logprob: -11.936976432800293
    4. '+' → logprob: -13.186976432800293
    5. ']+=' → logprob: -15.311976432800293
    6. '+="' → logprob: -17.56197738647461
    7. '+='' → logprob: -17.68697738647461
    8. '++' → logprob: -18.06197738647461
    9. ' ' → logprob: -18.56197738647461
    10. ' =' → logprob: -18.56197738647461

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '  ' → logprob: -18.439428329467773
    4. '   ' → logprob: -19.064428329467773
    5. '```' → logprob: -19.564428329467773
    6. '<|end|>' → logprob: -19.814428329467773
    7. ' ' → logprob: -20.126928329467773
    8. '۱' → logprob: -20.501928329467773
    9. ' (' → logprob: -20.564428329467773
    10. '{' → logprob: -20.751928329467773

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.125024795532227
    4. '  ' → logprob: -19.312524795532227
    5. '```' → logprob: -19.375024795532227
    6. '
' → logprob: -19.750024795532227
    7. 'd' → logprob: -20.062524795532227
    8. '(' → logprob: -20.312524795532227
    9. '{' → logprob: -20.375024795532227
    10. '[' → logprob: -20.562524795532227

Token 381: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07130584120750427
    2. '
' → logprob: -3.571305751800537
    3. '<|end|>' → logprob: -3.696305751800537
    4. '        
' → logprob: -4.446305751800537
    5. '  
' → logprob: -6.446305751800537
    6. '    
' → logprob: -6.821305751800537
    7. ' 
' → logprob: -7.821305751800537
    8. '\
' → logprob: -8.321306228637695
    9. '```' → logprob: -9.321306228637695
    10. '   ' → logprob: -9.446306228637695

Token 382: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.130576806142926e-05
    2. ' d' → logprob: -10.375031471252441
    3. '	d' → logprob: -17.000030517578125
    4. '(d' → logprob: -18.625030517578125
    5. '   ' → logprob: -18.750030517578125
    6. '2' → logprob: -19.375030517578125
    7. '_d' → logprob: -20.125030517578125
    8. '$d' → logprob: -20.500030517578125
    9. '1' → logprob: -20.625030517578125
    10. '[d' → logprob: -20.750030517578125

Token 383: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -7.791440293658525e-05
    2. ' ==' → logprob: -9.500078201293945
    3. '===' → logprob: -13.125078201293945
    4. '=' → logprob: -14.250078201293945
    5. '==
' → logprob: -15.625078201293945
    6. '2' → logprob: -16.500078201293945
    7. ']==' → logprob: -17.375078201293945
    8. 'd' → logprob: -17.750078201293945
    9. '```' → logprob: -18.125078201293945
    10. 'is' → logprob: -18.375078201293945

Token 384: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.500205039978027
    3. '1' → logprob: -13.625205039978027
    4. '  ' → logprob: -18.62520408630371
    5. '   ' → logprob: -19.25020408630371
    6. '۲' → logprob: -21.12520408630371
    7. '    ' → logprob: -21.56270408630371
    8. '=' → logprob: -22.37520408630371
    9. '```' → logprob: -22.37520408630371
    10. '{' → logprob: -22.81270408630371

Token 385: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '1' → logprob: -19.75
    4. '  ' → logprob: -22.0
    5. '۲' → logprob: -22.5
    6. '3' → logprob: -23.5
    7. '২' → logprob: -24.25
    8. '   ' → logprob: -24.375
    9. '२' → logprob: -24.375
    10. '_' → logprob: -24.375

Token 386: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4287237226963043
    2. 'else' → logprob: -1.053723692893982
    3. '3' → logprob: -11.803723335266113
    4. '2' → logprob: -12.053723335266113
    5. '	else' → logprob: -13.178723335266113
    6. '6' → logprob: -13.678723335266113
    7. ' ' → logprob: -13.928723335266113
    8. '1' → logprob: -13.928723335266113
    9. '0' → logprob: -14.053723335266113
    10. 'd' → logprob: -14.428723335266113

Token 387: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '1' → logprob: -15.000019073486328
    4. '   ' → logprob: -16.750019073486328
    5. ',' → logprob: -19.187519073486328
    6. '6' → logprob: -19.312519073486328
    7. '۲' → logprob: -19.625019073486328
    8. '  ' → logprob: -19.687519073486328
    9. '+' → logprob: -19.875019073486328
    10. '    ' → logprob: -19.937519073486328

Token 388: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.125008583068848
    4. '6' → logprob: -19.250009536743164
    5. '   ' → logprob: -19.500009536743164
    6. '+' → logprob: -19.937509536743164
    7. '  ' → logprob: -20.562509536743164
    8. 'd' → logprob: -20.625009536743164
    9. '۲' → logprob: -20.687509536743164
    10. '<|end|>' → logprob: -20.687509536743164

Token 389: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04388001188635826
    2. '<|end|>' → logprob: -3.668879985809326
    3. '
' → logprob: -4.168879985809326
    4. 'return' → logprob: -7.293879985809326
    5. '        
' → logprob: -7.418879985809326
    6. '<|end|>' → logprob: -8.418880462646484
    7. '.' → logprob: -9.668880462646484
    8. '    
' → logprob: -10.168880462646484
    9. '  
' → logprob: -10.293880462646484
    10. ',' → logprob: -10.293880462646484

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010330478107789531
    2. '<|end|>' → logprob: -9.750102996826172
    3. '```' → logprob: -11.125102996826172
    4. '        
' → logprob: -11.750102996826172
    5. '   ' → logprob: -12.625102996826172
    6. ',' → logprob: -12.625102996826172
    7. '.' → logprob: -12.875102996826172
    8. '
' → logprob: -13.500102996826172
    9. '           ' → logprob: -13.500102996826172
    10. '[' → logprob: -13.750102996826172

Token 391: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35987597703933716
    2. ' if' → logprob: -1.3598759174346924
    3. 'if' (adapté à ' if') → logprob: -3.1098759174346924
    4. '   ' → logprob: -7.7348761558532715
    5. '```' → logprob: -8.359875679016113
    6. '
' → logprob: -9.234875679016113
    7. '<|end|>' → logprob: -9.859875679016113
    8. '	if' → logprob: -10.984875679016113
    9. '           ' → logprob: -11.859875679016113
    10. '        
' → logprob: -12.109875679016113

Token 392: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326186656951904
    2. ' b' → logprob: -1.313261866569519
    3. '	b' → logprob: -16.563261032104492
    4. '>b' → logprob: -18.438261032104492
    5. '_b' → logprob: -18.813261032104492
    6. ' ' → logprob: -18.813261032104492
    7. ' б' → logprob: -19.063261032104492
    8. '   ' → logprob: -19.188261032104492
    9. '(b' → logprob: -19.188261032104492
    10. '[b' → logprob: -21.063261032104492

Token 393: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3868725001811981
    2. ' >' → logprob: -1.1368725299835205
    3. ' !=' → logprob: -14.511872291564941
    4. ' ' → logprob: -15.136872291564941
    5. '!=' → logprob: -16.011873245239258
    6. ' ' → logprob: -16.136873245239258
    7. '1' → logprob: -16.636873245239258
    8. '&gt' → logprob: -16.636873245239258
    9. '">' → logprob: -16.761873245239258
    10. ')>' → logprob: -16.886873245239258

Token 394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '>' → logprob: -19.875001907348633
    4. '```' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.250001907348633
    6. ' ' → logprob: -20.375001907348633
    7. '
' → logprob: -20.875001907348633
    8. '...' → logprob: -20.875001907348633
    9. '۱' → logprob: -21.125001907348633
    10. '１' → logprob: -21.250001907348633

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.625001907348633
    4. '۱' → logprob: -19.000001907348633
    5. '>' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '１' → logprob: -19.750001907348633
    8. '...' → logprob: -19.750001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '
' → logprob: -20.000001907348633

Token 396: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20142026245594025
    2. ':
' → logprob: -1.7014203071594238
    3. ':
' → logprob: -13.076419830322266
    4. ':

' → logprob: -13.326419830322266
    5. '):
' → logprob: -13.451419830322266
    6. ' :' → logprob: -14.826419830322266
    7. ' :
' → logprob: -14.951419830322266
    8. '       ' → logprob: -14.951419830322266
    9. '):' → logprob: -15.451419830322266
    10. '           ' → logprob: -15.576419830322266

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11871758848428726
    2. ':' → logprob: -2.993717670440674
    3. ' factors' → logprob: -3.243717670440674
    4. ':
' → logprob: -3.993717670440674
    5. '       ' → logprob: -5.868717670440674
    6. ',' → logprob: -8.118717193603516
    7. '[f' → logprob: -8.618717193603516
    8. 'f' → logprob: -8.868717193603516
    9. '{
' → logprob: -8.993717193603516
    10. '{' → logprob: -9.118717193603516

Token 398: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.0007110013975761831
    2. 'f' → logprob: -7.250710964202881
    3. 'Factors' → logprob: -15.125711441040039
    4. '           ' → logprob: -15.250711441040039
    5. 'factor' → logprob: -15.625711441040039
    6. '       ' → logprob: -16.50071144104004
    7. '1' → logprob: -16.50071144104004
    8. ' factores' → logprob: -17.00071144104004
    9. ' facteurs' → logprob: -17.50071144104004
    10. ' factoren' → logprob: -17.87571144104004

Token 399: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.000000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'b' → logprob: -17.625
    5. '[f' → logprob: -18.625
    6. '[d' → logprob: -19.125
    7. '[int' → logprob: -20.75
    8. '[c' → logprob: -21.125
    9. '[a' → logprob: -21.25
    10. '.setdefault' → logprob: -21.875

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009408479556441307
    2. ']=' → logprob: -4.759408473968506
    3. '=' → logprob: -7.259408473968506
    4. ' ]' → logprob: -9.509408950805664
    5. ' =' → logprob: -11.259408950805664
    6. ']+=' → logprob: -12.884408950805664
    7. ')' → logprob: -15.759408950805664
    8. '}' → logprob: -16.009408950805664
    9. '"]' → logprob: -16.384408950805664
    10. '"]=' → logprob: -16.759408950805664

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. ']=' → logprob: -15.383614540100098
    4. ']' → logprob: -15.758614540100098
    5. '=
' → logprob: -19.133615493774414
    6. '=

' → logprob: -19.383615493774414
    7. '[' → logprob: -20.258615493774414
    8. ')=' → logprob: -20.258615493774414
    9. '=}' → logprob: -20.258615493774414
    10. '＝' → logprob: -20.633615493774414

Token 402: ' factors' (ID: 11652)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12393207103013992
    2. 'f' → logprob: -2.498932123184204
    3. ' ' → logprob: -3.623932123184204
    4. ' factors' → logprob: -4.873931884765625
    5. ' f' → logprob: -10.873931884765625
    6. 'factor' → logprob: -11.623931884765625
    7. 'fact' → logprob: -11.811431884765625
    8. '	f' → logprob: -11.811431884765625
    9. '```' → logprob: -12.373931884765625
    10. '   ' → logprob: -12.561431884765625

Token 403: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0003945688367821276
    2. 'get' → logprob: -7.875394344329834
    3. 'b' → logprob: -11.875394821166992
    4. '.' → logprob: -12.500394821166992
    5. '1' → logprob: -12.625394821166992
    6. ' .' → logprob: -15.250394821166992
    7. '.setdefault' → logprob: -16.000394821166992
    8. '0' → logprob: -17.000394821166992
    9. ' ' → logprob: -18.250394821166992
    10. ' get' → logprob: -18.375394821166992

Token 404: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00033558503491804004
    2. 'b' → logprob: -8.000335693359375
    3. '(' → logprob: -16.750335693359375
    4. ' b' → logprob: -18.500335693359375
    5. '	b' → logprob: -18.500335693359375
    6. ')b' → logprob: -19.125335693359375
    7. '(
' → logprob: -19.375335693359375
    8. '=b' → logprob: -19.875335693359375
    9. '>b' → logprob: -20.000335693359375
    10. '```' → logprob: -20.250335693359375

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7178255915641785
    2. 'b' → logprob: -0.7178255915641785
    3. ',b' → logprob: -3.7178256511688232
    4. '(b' → logprob: -10.092825889587402
    5. ' b' → logprob: -10.967825889587402
    6. '1' → logprob: -11.092825889587402
    7. ' ,' → logprob: -11.467825889587402
    8. ')b' → logprob: -13.342825889587402
    9. '>b' → logprob: -13.842825889587402
    10. '	b' → logprob: -14.842825889587402

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -15.750027656555176
    4. '   ' → logprob: -18.875028610229492
    5. '۰' → logprob: -18.875028610229492
    6. '  ' → logprob: -20.375028610229492
    7. ')+' → logprob: -20.500028610229492
    8. '1' → logprob: -20.625028610229492
    9. '```' → logprob: -20.750028610229492
    10. '+' → logprob: -21.375028610229492

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -18.250045776367188
    4. '   ' → logprob: -18.750045776367188
    5. '۰' → logprob: -19.750045776367188
    6. '  ' → logprob: -20.250045776367188
    7. '1' → logprob: -20.375045776367188
    8. '```' → logprob: -20.750045776367188
    9. ' ' → logprob: -21.812545776367188
    10. '	' → logprob: -22.375045776367188

Token 408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011343709047650918
    2. ')+' → logprob: -9.125113487243652
    3. '0' → logprob: -13.125113487243652
    4. '+' → logprob: -14.000113487243652
    5. ']' → logprob: -14.625113487243652
    6. ' )' → logprob: -14.750113487243652
    7. '1' → logprob: -15.500113487243652
    8. '}' → logprob: -15.625113487243652
    9. '       ' → logprob: -16.375112533569336
    10. ']+' → logprob: -17.000112533569336

Token 409: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519713342189789
    2. ' +' → logprob: -1.5019713640213013
    3. '1' → logprob: -10.126971244812012
    4. '0' → logprob: -13.251971244812012
    5. ' plus' → logprob: -16.126972198486328
    6. '       ' → logprob: -16.251972198486328
    7. '()+' → logprob: -16.251972198486328
    8. ')+' → logprob: -16.501972198486328
    9. '+
' → logprob: -17.251972198486328
    10. ']+' → logprob: -17.501972198486328

Token 410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '```' → logprob: -19.625024795532227
    5. '  ' → logprob: -20.000024795532227
    6. '       ' → logprob: -21.812524795532227
    7. '۱' → logprob: -22.187524795532227
    8. '１' → logprob: -22.500024795532227
    9. '`' → logprob: -22.562524795532227
    10. '+' → logprob: -22.812524795532227

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -19.750001907348633
    5. '  ' → logprob: -21.375001907348633
    6. '۱' → logprob: -22.500001907348633
    7. '１' → logprob: -22.562501907348633
    8. '
' → logprob: -22.937501907348633
    9. '`' → logprob: -23.062501907348633
    10. '       ' → logprob: -23.500001907348633

Token 412: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02052215486764908
    2. '
' → logprob: -4.270522117614746
    3. 'return' → logprob: -5.770522117614746
    4. ' return' → logprob: -6.270522117614746
    5. '<|end|>' → logprob: -7.145522117614746
    6. '   ' → logprob: -8.145522117614746
    7. '        
' → logprob: -10.270522117614746
    8. '```' → logprob: -10.520522117614746
    9. ':return' → logprob: -10.520522117614746
    10. '<|end|>' → logprob: -10.895522117614746

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002174647059291601
    2. 'return' → logprob: -7.2521748542785645
    3. '
' → logprob: -7.3771748542785645
    4. ' return' → logprob: -7.5021748542785645
    5. '   ' → logprob: -9.002174377441406
    6. '<|end|>' → logprob: -9.377174377441406
    7. '	return' → logprob: -11.127174377441406
    8. '        
' → logprob: -11.252174377441406
    9. '	' → logprob: -11.502174377441406
    10. '           ' → logprob: -11.752174377441406

Token 414: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.208653162000701e-05
    2. 'return' (adapté à ' return') → logprob: -10.000082015991211
    3. ' return' → logprob: -10.625082015991211
    4. '   ' → logprob: -11.750082015991211
    5. '           ' → logprob: -13.500082015991211
    6. '	return' → logprob: -14.000082015991211
    7. '
' → logprob: -14.000082015991211
    8. '	' → logprob: -14.125082015991211
    9. '	   ' → logprob: -16.00008201599121
    10. '      ' → logprob: -16.37508201599121

Token 415: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008616345934569836
    2. ' factors' → logprob: -4.7586164474487305
    3. 'factor' → logprob: -13.75861644744873
    4. 'fac' → logprob: -14.50861644744873
    5. 'fact' → logprob: -15.63361644744873
    6. 'facts' → logprob: -16.633615493774414
    7. ' f' → logprob: -17.008615493774414
    8. '{' → logprob: -17.383615493774414
    9. '	f' → logprob: -18.258615493774414
    10. 'Factors' → logprob: -18.883615493774414

Token 416: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3005654513835907
    2. '
' → logprob: -1.550565481185913
    3. '   ' → logprob: -3.175565481185913
    4. '<|end|>' → logprob: -5.800565242767334
    5. '  
' → logprob: -6.300565242767334
    6. '   
' → logprob: -8.050565719604492
    7. '        
' → logprob: -8.300565719604492
    8. ' 
' → logprob: -9.425565719604492
    9. '<|end|>' → logprob: -9.925565719604492
    10. '```' → logprob: -10.300565719604492

Token 417: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.4051964282989502
    2. '   ' → logprob: -1.1551964282989502
    3. '
' → logprob: -4.030196189880371
    4. '  
' → logprob: -8.780196189880371
    5. '        
' → logprob: -9.030196189880371
    6. 'def' → logprob: -9.405196189880371
    7. '   
' → logprob: -10.780196189880371
    8. '```' → logprob: -12.280196189880371
    9. ' 
' → logprob: -13.405196189880371
    10. '<|end|>' → logprob: -13.905196189880371

Token 418: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04134754091501236
    2. '   ' → logprob: -3.2913475036621094
    3. ' def' → logprob: -6.291347503662109
    4. '
' → logprob: -6.791347503662109
    5. '    
' → logprob: -8.04134750366211
    6. '  
' → logprob: -14.16634750366211
    7. '        
' → logprob: -14.16634750366211
    8. '   
' → logprob: -14.91634750366211
    9. ' ' → logprob: -15.16634750366211
    10. '	def' → logprob: -15.16634750366211

Token 419: ' prime' (ID: 9197)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05682029575109482
    2. ' count' → logprob: -2.9318203926086426
    3. 'tr' → logprob: -7.181820392608643
    4. ' trailing' → logprob: -7.431820392608643
    5. 'num' → logprob: -8.431819915771484
    6. 'get' → logprob: -9.181819915771484
    7. 'calculate' → logprob: -9.431819915771484
    8. 'factor' → logprob: -10.056819915771484
    9. 'compute' → logprob: -10.306819915771484
    10. 'v' → logprob: -10.431819915771484

Token 420: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.28745079040527344
    2. '_f' → logprob: -1.4124507904052734
    3. '_ex' → logprob: -5.412450790405273
    4. '_' → logprob: -7.412450790405273
    5. 'f' → logprob: -8.037450790405273
    6. 'factor' → logprob: -8.412450790405273
    7. '_power' → logprob: -8.912450790405273
    8. '_count' → logprob: -9.037450790405273
    9. '_fac' → logprob: -9.287450790405273
    10. '_div' → logprob: -9.537450790405273

Token 421: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.6135309338569641
    2. 'ization' → logprob: -1.4885308742523193
    3. 's' → logprob: -1.9885308742523193
    4. '_count' → logprob: -2.9885308742523193
    5. '_counts' → logprob: -3.9885308742523193
    6. 'ex' → logprob: -4.363531112670898
    7. '_exp' → logprob: -5.488531112670898
    8. '_' → logprob: -5.863531112670898
    9. '_power' → logprob: -6.238531112670898
    10. '_p' → logprob: -6.238531112670898

Token 422: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.0011774895247071981
    2. 'ponents' → logprob: -6.7511773109436035
    3. 'p' → logprob: -13.001177787780762
    4. 'onent' → logprob: -13.501177787780762
    5. '```' → logprob: -14.251177787780762
    6. 'pression' → logprob: -14.751177787780762
    7. '_' → logprob: -14.876177787780762
    8. '_count' → logprob: -15.001177787780762
    9. 'ponente' → logprob: -15.126177787780762
    10. '_p' → logprob: -15.251177787780762

Token 423: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02646435983479023
    2. '(' → logprob: -3.6514644622802734
    3. 's' → logprob: -9.526464462280273
    4. ' (' → logprob: -9.651464462280273
    5. 'self' → logprob: -11.151464462280273
    6. '_count' → logprob: -12.151464462280273
    7. '_in' → logprob: -12.776464462280273
    8. '(s' → logprob: -13.901464462280273
    9. '   ' → logprob: -14.276464462280273
    10. ' self' → logprob: -14.401464462280273

Token 424: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.07390335947275162
    2. 'factor' → logprob: -2.9489033222198486
    3. '(self' → logprob: -4.448903560638428
    4. 'self' → logprob: -5.198903560638428
    5. 'n' → logprob: -6.823903560638428
    6. '_number' → logprob: -9.07390308380127
    7. ' factorial' → logprob: -9.32390308380127
    8. '   ' → logprob: -9.82390308380127
    9. 'number' → logprob: -9.94890308380127
    10. '_' → logprob: -10.32390308380127

Token 425: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -1.2233183042553719e-05
    2. 'rial' → logprob: -12.250012397766113
    3. 'ialize' → logprob: -12.750012397766113
    4. '```' → logprob: -13.000012397766113
    5. 'ials' → logprob: -14.250012397766113
    6. 'orial' → logprob: -15.125012397766113
    7. '
' → logprob: -15.375012397766113
    8. 'def' → logprob: -15.625012397766113
    9. '   ' → logprob: -15.750012397766113
    10. '

' → logprob: -15.875012397766113

Token 426: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00030948311905376613
    2. '(' → logprob: -8.125309944152832
    3. ' (' → logprob: -11.250309944152832
    4. '(s' → logprob: -16.125308990478516
    5. 'self' → logprob: -16.500308990478516
    6. '}(' → logprob: -16.500308990478516
    7. '   ' → logprob: -16.875308990478516
    8. 's' → logprob: -17.375308990478516
    9. ' ' → logprob: -17.625308990478516
    10. '(n' → logprob: -17.750308990478516

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11647316068410873
    2. '(self' → logprob: -2.8664731979370117
    3. 'self' → logprob: -2.9914731979370117
    4. '   ' → logprob: -7.116473197937012
    5. ')(' → logprob: -7.366473197937012
    6. '(' → logprob: -7.991473197937012
    7. ' ,' → logprob: -8.241473197937012
    8. 's' → logprob: -8.866473197937012
    9. '       ' → logprob: -8.991473197937012
    10. ' (' → logprob: -9.116473197937012

Token 428: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07988442480564117
    2. 'n' → logprob: -2.7048845291137695
    3. ' self' → logprob: -5.4548845291137695
    4. '   ' → logprob: -5.4548845291137695
    5. '       ' → logprob: -7.5798845291137695
    6. ' n' → logprob: -7.7048845291137695
    7. 'num' → logprob: -8.32988452911377
    8. 'number' → logprob: -9.32988452911377
    9. ' ' → logprob: -10.57988452911377
    10. '  ' → logprob: -11.57988452911377

Token 429: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004093358293175697
    2. ' ,' → logprob: -5.504093170166016
    3. '   ' → logprob: -12.129093170166016
    4. '       ' → logprob: -12.379093170166016
    5. 'self' → logprob: -13.629093170166016
    6. ' ' → logprob: -14.254093170166016
    7. ':' → logprob: -14.504093170166016
    8. '_,' → logprob: -14.754093170166016
    9. 'n' → logprob: -15.004093170166016
    10. '  ' → logprob: -15.129093170166016

Token 430: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0337473563849926
    2. ' int' → logprob: -3.408747434616089
    3. ')' → logprob: -9.408747673034668
    4. 'n' → logprob: -12.283747673034668
    5. ',' → logprob: -12.658747673034668
    6. 'self' → logprob: -13.158747673034668
    7. ' ' → logprob: -13.158747673034668
    8. '   ' → logprob: -13.408747673034668
    9. '(int' → logprob: -13.533747673034668
    10. '  ' → logprob: -13.658747673034668

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004995359340682626
    2. ' ,' → logprob: -7.625499725341797
    3. '   ' → logprob: -12.250499725341797
    4. '       ' → logprob: -12.375499725341797
    5. ')' → logprob: -13.750499725341797
    6. 'self' → logprob: -14.125499725341797
    7. '):' → logprob: -15.000499725341797
    8. ' ' → logprob: -17.000499725341797
    9. '    ' → logprob: -17.125499725341797
    10. '_,' → logprob: -17.125499725341797

Token 432: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06517903506755829
    2. ' p' → logprob: -2.8151791095733643
    3. 'prime' → logprob: -5.815178871154785
    4. ' prime' → logprob: -8.440178871154785
    5. '   ' → logprob: -11.815178871154785
    6. '	p' → logprob: -15.065178871154785
    7. ' ' → logprob: -15.315178871154785
    8. '  ' → logprob: -15.815178871154785
    9. '    ' → logprob: -16.1901798248291
    10. 'factor' → logprob: -16.6901798248291

Token 433: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08457747846841812
    2. ')' → logprob: -2.8345775604248047
    3. ':' → logprob: -4.084577560424805
    4. '):
' → logprob: -5.209577560424805
    5. ' ):' → logprob: -10.334577560424805
    6. '):

' → logprob: -11.834577560424805
    7. '   ' → logprob: -12.209577560424805
    8. '):
' → logprob: -12.709577560424805
    9. ':int' → logprob: -12.834577560424805
    10. ' )' → logprob: -12.959577560424805

Token 434: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016501873033121228
    2. ' int' → logprob: -6.501650333404541
    3. ')' → logprob: -8.876649856567383
    4. ':int' → logprob: -13.251649856567383
    5. '   ' → logprob: -13.376649856567383
    6. '<|end|>' → logprob: -13.376649856567383
    7. '):
' → logprob: -13.876649856567383
    8. '       ' → logprob: -14.126649856567383
    9. '<int' → logprob: -14.501649856567383
    10. '(int' → logprob: -15.251649856567383

Token 435: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3172049820423126
    2. ')' → logprob: -1.3172049522399902
    3. '):
' → logprob: -5.56720495223999
    4. ' ):' → logprob: -9.442205429077148
    5. ' )' → logprob: -10.942205429077148
    6. '   ' → logprob: -11.817205429077148
    7. '):
' → logprob: -12.192205429077148
    8. '):

' → logprob: -12.817205429077148
    9. ')->' → logprob: -14.442205429077148
    10. ':' → logprob: -14.692205429077148

Token 436: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008037914521992207
    2. '->' → logprob: -8.12580394744873
    3. ':
' → logprob: -8.50080394744873
    4. '):' → logprob: -8.87580394744873
    5. ' ->' → logprob: -9.37580394744873
    6. '   ' → logprob: -10.75080394744873
    7. '       ' → logprob: -11.25080394744873
    8. ')' → logprob: -11.25080394744873
    9. ' :' → logprob: -12.00080394744873
    10. 'def' → logprob: -12.12580394744873

Token 437: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007106438861228526
    2. ' int' → logprob: -7.250710487365723
    3. '0' → logprob: -15.125710487365723
    4. ' ' → logprob: -15.500710487365723
    5. '   ' → logprob: -15.875710487365723
    6. '(int' → logprob: -16.50071144104004
    7. 'def' → logprob: -17.37571144104004
    8. '  ' → logprob: -18.62571144104004
    9. 'n' → logprob: -19.00071144104004
    10. ':int' → logprob: -20.00071144104004

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007026157341897488
    2. ':
' → logprob: -5.257026195526123
    3. '       ' → logprob: -6.632026195526123
    4. '):' → logprob: -8.382025718688965
    5. '   ' → logprob: -9.757025718688965
    6. '):
' → logprob: -9.757025718688965
    7. ',' → logprob: -9.757025718688965
    8. ' :' → logprob: -10.757025718688965
    9. '():' → logprob: -11.632025718688965
    10. '(' → logprob: -12.132025718688965

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025100557133555412
    2. 'count' → logprob: -3.7751004695892334
    3. 'result' → logprob: -7.4001007080078125
    4. ' count' → logprob: -7.7751007080078125
    5. '   ' → logprob: -8.025100708007812
    6. 'ex' → logprob: -8.525100708007812
    7. 'total' → logprob: -8.900100708007812
    8. 'sum' → logprob: -9.900100708007812
    9. ' result' → logprob: -10.400100708007812
    10. ' total' → logprob: -10.900100708007812

Token 440: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2929632365703583
    2. 'ex' → logprob: -1.5429632663726807
    3. 'exp' → logprob: -3.5429632663726807
    4. '       ' → logprob: -4.917963027954102
    5. ' count' → logprob: -6.292963027954102
    6. 'total' → logprob: -6.917963027954102
    7. 'result' → logprob: -7.792963027954102
    8. '   ' → logprob: -8.042963027954102
    9. 'res' → logprob: -8.667963027954102
    10. 'e' → logprob: -9.167963027954102

Token 441: ' Count' (ID: 6789)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3498922288417816
    2. 'ex' → logprob: -1.349892258644104
    3. 'exp' → logprob: -3.3498921394348145
    4. ' count' → logprob: -7.9748921394348145
    5. 'total' → logprob: -8.599892616271973
    6. 'result' → logprob: -8.849892616271973
    7. 'res' → logprob: -9.099892616271973
    8. '   ' → logprob: -9.724892616271973
    9. 'cnt' → logprob: -11.224892616271973
    10. ' exponent' → logprob: -11.224892616271973

Token 442: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0744803324341774
    2. ' exponent' → logprob: -3.4494802951812744
    3. 'exp' → logprob: -3.8244802951812744
    4. 'count' → logprob: -4.3244805335998535
    5. 'result' → logprob: -6.5744805335998535
    6. '   ' → logprob: -7.0744805335998535
    7. 'total' → logprob: -7.0744805335998535
    8. ' ex' → logprob: -7.3244805335998535
    9. ' count' → logprob: -8.199480056762695
    10. ' total' → logprob: -8.574480056762695

Token 443: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09898839145898819
    2. ' of' → logprob: -3.3489882946014404
    3. '=' → logprob: -3.8489882946014404
    4. ' =' → logprob: -4.4739885330200195
    5. 's' → logprob: -4.7239885330200195
    6. '   ' → logprob: -5.5989885330200195
    7. '(total' → logprob: -6.2239885330200195
    8. 'result' → logprob: -6.3489885330200195
    9. '(' → logprob: -6.8489885330200195
    10. 'of' → logprob: -7.2239885330200195

Token 444: ' prime' (ID: 9197)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02751065418124199
    2. ' p' → logprob: -3.652510643005371
    3. 'n' → logprob: -6.902510643005371
    4. ' n' → logprob: -8.527510643005371
    5. '   ' → logprob: -12.902510643005371
    6. ' ' → logprob: -13.527510643005371
    7. ' the' → logprob: -15.027510643005371
    8. ' a' → logprob: -15.402510643005371
    9. 'num' → logprob: -15.527510643005371
    10. '	p' → logprob: -15.527510643005371

Token 445: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8797410726547241
    2. ' ' → logprob: -1.0047410726547241
    3. '_' → logprob: -1.8797410726547241
    4. 'p' → logprob: -3.3797411918640137
    5. ' _' → logprob: -4.379741191864014
    6. '  ' → logprob: -5.129741191864014
    7. ' in' → logprob: -5.379741191864014
    8. '   ' → logprob: -5.504741191864014
    9. ' factor' → logprob: -6.254741191864014
    10. ' factors' → logprob: -7.379741191864014

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08933190256357193
    2. 'in' → logprob: -2.589331865310669
    3. '=' → logprob: -5.089332103729248
    4. ' ' → logprob: -6.214332103729248
    5. ',' → logprob: -7.464332103729248
    6. '  ' → logprob: -7.839332103729248
    7. '   ' → logprob: -7.964332103729248
    8. ' =' → logprob: -8.58933162689209
    9. 's' → logprob: -9.21433162689209
    10. '       ' → logprob: -9.33933162689209

Token 447: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28117141127586365
    2. 'n' → logprob: -1.406171441078186
    3. '   ' → logprob: -11.531171798706055
    4. 'num' → logprob: -12.906171798706055
    5. 'factor' → logprob: -13.281171798706055
    6. ' the' → logprob: -13.406171798706055
    7. ' ' → logprob: -13.656171798706055
    8. 'the' → logprob: -13.906171798706055
    9. '	n' → logprob: -14.281171798706055
    10. ' factorial' → logprob: -14.406171798706055

Token 448: '!
' (ID: 4175)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.06326063722372055
    2. ' factorial' → logprob: -3.063260555267334
    3. '   ' → logprob: -5.063260555267334
    4. '_factor' → logprob: -6.188260555267334
    5. 'factor' → logprob: -6.313260555267334
    6. '       ' → logprob: -6.438260555267334
    7. ' ' → logprob: -7.438260555267334
    8. '  ' → logprob: -7.938260555267334
    9. ' //' → logprob: -8.063261032104492
    10. '    ' → logprob: -8.188261032104492

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037082888185977936
    2. '
' → logprob: -4.287082672119141
    3. '   ' → logprob: -4.662082672119141
    4. '    
' → logprob: -6.037082672119141
    5. '        
' → logprob: -6.037082672119141
    6. ':
' → logprob: -6.537082672119141
    7. ':' → logprob: -6.662082672119141
    8. '  
' → logprob: -6.787082672119141
    9. ' 
' → logprob: -7.162082672119141
    10. 'result' → logprob: -7.412082672119141

Token 450: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11753136664628983
    2. 'ex' → logprob: -2.3675312995910645
    3. 'exp' → logprob: -4.4925312995910645
    4. '       ' → logprob: -5.8675312995910645
    5. 'total' → logprob: -6.9925312995910645
    6. 'result' → logprob: -7.1175312995910645
    7. ' count' → logprob: -7.3675312995910645
    8. 'res' → logprob: -7.4925312995910645
    9. '   ' → logprob: -9.242531776428223
    10. 'cnt' → logprob: -9.492531776428223

Token 451: ' Leg' (ID: 10072)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5611949563026428
    2. 'ex' → logprob: -1.061194896697998
    3. 'exp' → logprob: -2.561194896697998
    4. ' count' → logprob: -5.311194896697998
    5. ' exponent' → logprob: -7.811194896697998
    6. '   ' → logprob: -7.936194896697998
    7. 'total' → logprob: -8.436195373535156
    8. 'res' → logprob: -9.186195373535156
    9. 'result' → logprob: -9.436195373535156
    10. 'cnt' → logprob: -10.186195373535156

Token 452: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -2.45848218582978e-06
    2. 'er' → logprob: -14.50000286102295
    3. 'es' → logprob: -14.50000286102295
    4. 'n' → logprob: -15.12500286102295
    5. 'g' → logprob: -15.50000286102295
    6. 'e' → logprob: -16.250001907348633
    7. 'endar' → logprob: -16.250001907348633
    8. 'p' → logprob: -16.375001907348633
    9. 'end' → logprob: -16.375001907348633
    10. 'ends' → logprob: -16.500001907348633

Token 453: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.16969670355319977
    2. '_formula' → logprob: -2.544696807861328
    3. ' formula' → logprob: -3.169696807861328
    4. ''' → logprob: -3.794696807861328
    5. 'formula' → logprob: -5.419696807861328
    6. 'Formula' → logprob: -5.544696807861328
    7. '_s' → logprob: -6.794696807861328
    8. '_' → logprob: -7.169696807861328
    9. '(p' → logprob: -7.544696807861328
    10. '’s' → logprob: -7.669696807861328

Token 454: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.07569773495197296
    2. ' formula' → logprob: -2.825697660446167
    3. '_formula' → logprob: -4.325697898864746
    4. 'Formula' → logprob: -7.825697898864746
    5. '_' → logprob: -11.950697898864746
    6. 'form' → logprob: -12.825697898864746
    7. 'count' → logprob: -14.325697898864746
    8. ' fórmula' → logprob: -14.450697898864746
    9. ' formule' → logprob: -14.575697898864746
    10. '_f' → logprob: -15.325697898864746

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2788386642932892
    2. 'count' → logprob: -2.153838634490967
    3. '
' → logprob: -2.403838634490967
    4. 'result' → logprob: -4.653838634490967
    5. ' count' → logprob: -5.028838634490967
    6. '        
' → logprob: -5.778838634490967
    7. 'total' → logprob: -5.778838634490967
    8. ':
' → logprob: -6.153838634490967
    9. ',' → logprob: -6.403838634490967
    10. ':' → logprob: -6.528838634490967

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10876333713531494
    2. 'count' → logprob: -2.3587632179260254
    3. 'total' → logprob: -6.483763217926025
    4. ' count' → logprob: -6.483763217926025
    5. 'ex' → logprob: -6.858763217926025
    6. '   ' → logprob: -6.858763217926025
    7. 'result' → logprob: -6.983763217926025
    8. '
' → logprob: -7.108763217926025
    9. 'sum' → logprob: -7.608763217926025
    10. '    
' → logprob: -8.108763694763184

Token 457: ' count' (ID: 3605)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.4490458369255066
    2. 'count' (adapté à ' count') → logprob: -1.1990458965301514
    3. 'exp' → logprob: -2.9490458965301514
    4. '       ' → logprob: -5.324045658111572
    5. 'total' → logprob: -6.824045658111572
    6. ' count' → logprob: -6.949045658111572
    7. 'res' → logprob: -8.19904613494873
    8. 'result' → logprob: -8.19904613494873
    9. '   ' → logprob: -8.94904613494873
    10. ' exponent' → logprob: -8.94904613494873

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693366408348083
    2. '=' → logprob: -2.1269335746765137
    3. ' ' → logprob: -12.376934051513672
    4. ' +=' → logprob: -14.626934051513672
    5. '   ' → logprob: -14.751934051513672
    6. '  ' → logprob: -15.376934051513672
    7. ',' → logprob: -15.501934051513672
    8. '    ' → logprob: -16.251934051513672
    9. ' ,' → logprob: -17.251934051513672
    10. ' ' → logprob: -17.251934051513672

Token 459: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0077075352892279625
    2. ' ' → logprob: -4.882707595825195
    3. 'n' → logprob: -9.632707595825195
    4. ' n' → logprob: -10.257707595825195
    5. '   ' → logprob: -14.382707595825195
    6. '  ' → logprob: -16.507707595825195
    7. '       ' → logprob: -16.945207595825195
    8. '```' → logprob: -17.070207595825195
    9. '    ' → logprob: -17.195207595825195
    10. '     ' → logprob: -17.445207595825195

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3464544432936236e-05
    2. ' ' → logprob: -10.250043869018555
    3. 'n' → logprob: -11.750043869018555
    4. ' n' → logprob: -16.125043869018555
    5. '   ' → logprob: -16.750043869018555
    6. '```' → logprob: -18.125043869018555
    7. '۰' → logprob: -19.062543869018555
    8. '  ' → logprob: -19.500043869018555
    9. '=' → logprob: -19.562543869018555
    10. 'sum' → logprob: -20.062543869018555

Token 461: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14580582082271576
    2. '       ' → logprob: -2.145805835723877
    3. '        
' → logprob: -5.145805835723877
    4. ' 
' → logprob: -5.270805835723877
    5. 'div' → logprob: -6.395805835723877
    6. ',' → logprob: -6.770805835723877
    7. ',
' → logprob: -7.270805835723877
    8. ' while' → logprob: -7.520805835723877
    9. '    
' → logprob: -7.520805835723877
    10. ' divisor' → logprob: -7.770805835723877

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06678716093301773
    2. 'div' → logprob: -3.0667872428894043
    3. 'd' → logprob: -4.566787242889404
    4. ' divisor' → logprob: -5.566787242889404
    5. ' div' → logprob: -6.441787242889404
    6. '
' → logprob: -6.941787242889404
    7. '	div' → logprob: -8.191786766052246
    8. '   ' → logprob: -8.566786766052246
    9. 'p' → logprob: -9.066786766052246
    10. 'k' → logprob: -9.066786766052246

Token 463: ' power' (ID: 3470)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.03743605315685272
    2. ' divisor' → logprob: -3.912436008453369
    3. ' div' → logprob: -5.787436008453369
    4. '   ' → logprob: -5.787436008453369
    5. 'd' → logprob: -5.912436008453369
    6. 'factor' → logprob: -6.412436008453369
    7. 'i' → logprob: -6.537436008453369
    8. 'power' (adapté à ' power') → logprob: -6.787436008453369
    9. 'k' → logprob: -6.787436008453369
    10. 'x' → logprob: -7.162436008453369

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25203174352645874
    2. '=' → logprob: -1.5020318031311035
    3. '=p' → logprob: -9.502031326293945
    4. 'p' → logprob: -11.627031326293945
    5. 's' → logprob: -11.627031326293945
    6. '_p' → logprob: -12.752031326293945
    7. '_' → logprob: -12.877031326293945
    8. ' ' → logprob: -13.627031326293945
    9. ' p' → logprob: -14.002031326293945
    10. ',' → logprob: -14.002031326293945

Token 465: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.88418151892256e-05
    2. ' p' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.625059127807617
    4. '<p' → logprob: -17.625059127807617
    5. '	p' → logprob: -18.000059127807617
    6. '
' → logprob: -19.875059127807617
    7. '       ' → logprob: -20.250059127807617
    8. '1' → logprob: -20.625059127807617
    9. '  ' → logprob: -20.625059127807617
    10. ' ' → logprob: -21.000059127807617

Token 466: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2276308834552765
    2. '<|end|>' → logprob: -1.977630853652954
    3. '       ' → logprob: -3.602630853652954
    4. ' 
' → logprob: -4.602631092071533
    5. '<|end|>' → logprob: -5.102631092071533
    6. '=' → logprob: -5.352631092071533
    7. '   ' → logprob: -5.477631092071533
    8. '*' → logprob: -6.227631092071533
    9. '  
' → logprob: -6.352631092071533
    10. ',' → logprob: -6.602631092071533

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022592797875404358
    2. '
' → logprob: -4.647593021392822
    3. '<|end|>' → logprob: -4.897593021392822
    4. 'while' → logprob: -6.272593021392822
    5. ' while' → logprob: -6.897593021392822
    6. '<|end|>' → logprob: -7.522593021392822
    7. ':
' → logprob: -8.147592544555664
    8. '        
' → logprob: -8.272592544555664
    9. ',
' → logprob: -8.647592544555664
    10. '    
' → logprob: -8.772592544555664

Token 468: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9052175879478455
    2. 'while' (adapté à ' while') → logprob: -0.9052175879478455
    3. '       ' → logprob: -1.6552176475524902
    4. '	while' → logprob: -11.030217170715332
    5. '
' → logprob: -11.780217170715332
    6. 'n' → logprob: -12.030217170715332
    7. '   ' → logprob: -12.155217170715332
    8. 'While' → logprob: -13.780217170715332
    9. ',' → logprob: -14.030217170715332
    10. ' 
' → logprob: -14.030217170715332

Token 469: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.018174178898334503
    2. ' power' → logprob: -4.018174171447754
    3. 'n' → logprob: -10.768174171447754
    4. 'pow' → logprob: -13.018174171447754
    5. '(power' → logprob: -14.518174171447754
    6. ' n' → logprob: -14.768174171447754
    7. 'p' → logprob: -16.51817512512207
    8. ' ' → logprob: -18.51817512512207
    9. 'powers' → logprob: -18.89317512512207
    10. '_power' → logprob: -18.89317512512207

Token 470: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16022644937038422
    2. '<=' → logprob: -1.9102264642715454
    3. ')<=' → logprob: -14.535226821899414
    4. ']<=' → logprob: -14.660226821899414
    5. '<|end|>' → logprob: -14.660226821899414
    6. ' ≤' → logprob: -15.285226821899414
    7. ' <<=' → logprob: -15.785226821899414
    8. 'le' → logprob: -15.785226821899414
    9. '≤' → logprob: -16.035226821899414
    10. ' ' → logprob: -16.285226821899414

Token 471: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002615742268972099
    2. ' n' → logprob: -8.250261306762695
    3. '	n' → logprob: -15.500261306762695
    4. '   ' → logprob: -16.250261306762695
    5. '_n' → logprob: -17.875261306762695
    6. '
' → logprob: -19.625261306762695
    7. ' ' → logprob: -19.750261306762695
    8. 'n't' → logprob: -19.875261306762695
    9. '```' → logprob: -20.000261306762695
    10. ')n' → logprob: -20.125261306762695

Token 472: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25199875235557556
    2. ':' → logprob: -1.501998782157898
    3. '):
' → logprob: -10.126998901367188
    4. '       ' → logprob: -11.251998901367188
    5. ':
' → logprob: -12.501998901367188
    6. ',' → logprob: -12.626998901367188
    7. ':

' → logprob: -12.751998901367188
    8. '<|end|>' → logprob: -13.376998901367188
    9. '           ' → logprob: -13.626998901367188
    10. ' and' → logprob: -13.751998901367188

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00638802582398057
    2. 'count' → logprob: -5.131388187408447
    3. ' count' → logprob: -8.756387710571289
    4. '
' → logprob: -9.006387710571289
    5. '       ' → logprob: -9.006387710571289
    6. '{
' → logprob: -12.006387710571289
    7. '```' → logprob: -12.006387710571289
    8. ',' → logprob: -12.131387710571289
    9. '[count' → logprob: -12.381387710571289
    10. ':
' → logprob: -12.381387710571289

Token 474: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.018269339576363564
    2. ' count' → logprob: -4.0182695388793945
    3. '           ' → logprob: -9.393269538879395
    4. '       ' → logprob: -10.393269538879395
    5. '	count' → logprob: -12.768269538879395
    6. '.count' → logprob: -14.143269538879395
    7. '
' → logprob: -14.643269538879395
    8. '               ' → logprob: -15.393269538879395
    9. '   ' → logprob: -15.518269538879395
    10. ',count' → logprob: -15.518269538879395

Token 475: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.061974067240953445
    2. '+=' → logprob: -2.811974048614502
    3. '           ' → logprob: -13.68697452545166
    4. '+' → logprob: -13.93697452545166
    5. ']+=' → logprob: -14.06197452545166
    6. '    ' → logprob: -14.31197452545166
    7. '        ' → logprob: -14.56197452545166
    8. '            ' → logprob: -14.56197452545166
    9. ' +' → logprob: -14.81197452545166
    10. '+=(' → logprob: -14.81197452545166

Token 476: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759409666061401
    2. ' n' → logprob: -0.8259409666061401
    3. '	n' → logprob: -13.70094108581543
    4. '   ' → logprob: -15.20094108581543
    5. ' ' → logprob: -16.32594108581543
    6. ' ' → logprob: -16.82594108581543
    7. '
' → logprob: -17.70094108581543
    8. '(n' → logprob: -18.07594108581543
    9. '_n' → logprob: -19.07594108581543
    10. ' (' → logprob: -19.32594108581543

Token 477: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2255283147096634
    2. '//' → logprob: -1.600528359413147
    3. '
' → logprob: -9.850528717041016
    4. 'power' → logprob: -10.225528717041016
    5. ' ' → logprob: -12.225528717041016
    6. ' power' → logprob: -12.350528717041016
    7. '/' → logprob: -13.100528717041016
    8. ')' → logprob: -13.100528717041016
    9. 'div' → logprob: -13.350528717041016
    10. '(power' → logprob: -13.725528717041016

Token 478: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.306760805164231e-05
    2. ' power' → logprob: -11.25001335144043
    3. 'pow' → logprob: -19.25001335144043
    4. 'p' → logprob: -19.87501335144043
    5. '(power' → logprob: -20.25001335144043
    6. 'powers' → logprob: -21.50001335144043
    7. '_power' → logprob: -24.12501335144043
    8. '.power' → logprob: -24.37501335144043
    9. '           ' → logprob: -24.87501335144043
    10. 'Power' → logprob: -24.87501335144043

Token 479: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007966328412294388
    2. '
' → logprob: -4.8829665184021
    3. '               ' → logprob: -9.007966041564941
    4. '            
' → logprob: -9.382966041564941
    5. '                   ' → logprob: -10.257966041564941
    6. 'power' → logprob: -10.757966041564941
    7. '          ' → logprob: -10.882966041564941
    8. '       ' → logprob: -11.382966041564941
    9. '\n' → logprob: -11.382966041564941
    10. '
' → logprob: -12.007966041564941

Token 480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1286497563123703
    2. '
' → logprob: -2.1286497116088867
    3. 'power' → logprob: -7.253649711608887
    4. '            
' → logprob: -8.253649711608887
    5. '\n' → logprob: -8.753649711608887
    6. '\' → logprob: -9.003649711608887
    7. '```' → logprob: -9.253649711608887
    8. ' 
' → logprob: -10.003649711608887
    9. '    
' → logprob: -10.128649711608887
    10. '
' → logprob: -10.253649711608887

Token 481: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' (adapté à ' power') → logprob: -0.0015023599844425917
    2. ' power' → logprob: -6.501502513885498
    3. 'pow' → logprob: -17.751502990722656
    4. '           ' → logprob: -18.126502990722656
    5. 'powers' → logprob: -18.126502990722656
    6. '(power' → logprob: -18.751502990722656
    7. '.power' → logprob: -19.001502990722656
    8. '_power' → logprob: -20.501502990722656
    9. '   ' → logprob: -20.501502990722656
    10. '       ' → logprob: -20.626502990722656

Token 482: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0002614550176076591
    2. ' *=' → logprob: -8.250261306762695
    3. '=' → logprob: -16.250261306762695
    4. '*' → logprob: -17.500261306762695
    5. '//=' → logprob: -18.875261306762695
    6. '   ' → logprob: -19.500261306762695
    7. '```' → logprob: -19.625261306762695
    8. '  ' → logprob: -20.125261306762695
    9. ' ' → logprob: -20.875261306762695
    10. '	' → logprob: -21.000261306762695

Token 483: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '	p' → logprob: -21.7500057220459
    4. '<p' → logprob: -22.5000057220459
    5. 'power' → logprob: -23.5000057220459
    6. '   ' → logprob: -23.7500057220459
    7. '*p' → logprob: -24.0000057220459
    8. ')p' → logprob: -25.1250057220459
    9. 'prime' → logprob: -25.6250057220459
    10. ' ' → logprob: -25.6250057220459

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016503063961863518
    2. '
' → logprob: -6.876650333404541
    3. '<|end|>' → logprob: -8.376649856567383
    4. '        
' → logprob: -8.751649856567383
    5. ' return' → logprob: -9.126649856567383
    6. '   ' → logprob: -10.001649856567383
    7. 'return' → logprob: -11.251649856567383
    8. '  
' → logprob: -11.251649856567383
    9. '    
' → logprob: -11.501649856567383
    10. '           ' → logprob: -11.876649856567383

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.7159857786027715e-05
    2. ' return' → logprob: -10.500046730041504
    3. '<|end|>' → logprob: -11.750046730041504
    4. 'return' → logprob: -12.750046730041504
    5. '        
' → logprob: -13.000046730041504
    6. '   ' → logprob: -13.250046730041504
    7. '
' → logprob: -13.500046730041504
    8. '           ' → logprob: -14.000046730041504
    9. '    
' → logprob: -14.875046730041504
    10. '	return' → logprob: -15.000046730041504

Token 486: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016632776241749525
    2. 'return' (adapté à ' return') → logprob: -7.1266632080078125
    3. ' return' → logprob: -7.1266632080078125
    4. '   ' → logprob: -10.001663208007812
    5. '	return' → logprob: -11.876663208007812
    6. '	' → logprob: -13.251663208007812
    7. '           ' → logprob: -15.251663208007812
    8. '
' → logprob: -15.751663208007812
    9. ' ' → logprob: -16.001663208007812
    10. '        
' → logprob: -16.126663208007812

Token 487: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.547789674485102e-05
    2. ' count' → logprob: -10.250035285949707
    3. '[count' → logprob: -23.750036239624023
    4. '	count' → logprob: -24.000036239624023
    5. '   ' → logprob: -24.250036239624023
    6. 'c' → logprob: -24.375036239624023
    7. '(count' → logprob: -24.500036239624023
    8. ' ' → logprob: -25.000036239624023
    9. '$count' → logprob: -25.875036239624023
    10. 'counts' → logprob: -26.000036239624023

Token 488: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1224677637219429
    2. '    
' → logprob: -2.2474677562713623
    3. '   ' → logprob: -5.122467994689941
    4. '<|end|>' → logprob: -5.747467994689941
    5. '  
' → logprob: -8.247467994689941
    6. '

' → logprob: -9.497467994689941
    7. ' 
' → logprob: -10.247467994689941
    8. '   
' → logprob: -10.622467994689941
    9. '<|end|>' → logprob: -10.872467994689941
    10. '        
' → logprob: -10.872467994689941

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03339197114109993
    2. '
' → logprob: -3.5333919525146484
    3. '    
' → logprob: -5.908391952514648
    4. 'def' → logprob: -7.033391952514648
    5. ' def' → logprob: -10.783391952514648
    6. '        
' → logprob: -11.658391952514648
    7. '  
' → logprob: -12.783391952514648
    8. '

' → logprob: -13.283391952514648
    9. '```' → logprob: -13.533391952514648
    10. '   
' → logprob: -15.033391952514648

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.125
    4. '    
' → logprob: -22.875
    5. '	def' → logprob: -23.5
    6. ' ' → logprob: -24.0
    7. '
' → logprob: -25.625
    8. '```' → logprob: -25.875
    9. '  
' → logprob: -26.25
    10. '        
' → logprob: -26.375

Token 491: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -0.5842781662940979
    2. ' count' → logprob: -1.7092781066894531
    3. 'count' → logprob: -1.7092781066894531
    4. 'calculate' → logprob: -3.959278106689453
    5. ' calculate' → logprob: -4.209278106689453
    6. 'tr' → logprob: -4.209278106689453
    7. 'max' → logprob: -4.959278106689453
    8. ' factorial' → logprob: -5.084278106689453
    9. ' compute' → logprob: -5.459278106689453
    10. ' max' → logprob: -5.959278106689453

Token 492: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012415809032972902
    2. '_zero' → logprob: -9.125123977661133
    3. '_factor' → logprob: -11.250123977661133
    4. 'zeros' → logprob: -13.250123977661133
    5. 'Zeros' → logprob: -16.625123977661133
    6. '_base' → logprob: -17.500123977661133
    7. 'zero' → logprob: -17.750123977661133
    8. '_z' → logprob: -18.250123977661133
    9. ' zeros' → logprob: -18.500123977661133
    10. 'unders' → logprob: -18.500123977661133

Token 493: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.0016057939501479268
    2. '_' → logprob: -6.501605987548828
    3. 'zero' → logprob: -9.251605987548828
    4. 'factor' → logprob: -12.376605987548828
    5. 'z' → logprob: -13.376605987548828
    6. '_zero' → logprob: -14.001605987548828
    7. '0' → logprob: -14.876605987548828
    8. ' zeros' → logprob: -15.251605987548828
    9. 'Zeros' → logprob: -16.251605987548828
    10. '_factor' → logprob: -16.501605987548828

Token 494: '_in' (ID: 2267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17246317863464355
    2. '(self' → logprob: -1.9224631786346436
    3. '_' → logprob: -5.047463417053223
    4. '_in' → logprob: -5.672463417053223
    5. 'self' → logprob: -6.547463417053223
    6. '   ' → logprob: -8.047463417053223
    7. 'in' → logprob: -8.797463417053223
    8. ' (' → logprob: -9.047463417053223
    9. '_(' → logprob: -9.422463417053223
    10. 'In' → logprob: -9.797463417053223

Token 495: '_factor' (ID: 43757)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.3871401250362396
    2. '_factor' → logprob: -1.137140154838562
    3. 'base' → logprob: -8.887140274047852
    4. 'self' → logprob: -9.887140274047852
    5. ' factorial' → logprob: -10.387140274047852
    6. '_base' → logprob: -10.887140274047852
    7. '(self' → logprob: -10.887140274047852
    8. '   ' → logprob: -12.262140274047852
    9. 'n' → logprob: -13.137140274047852
    10. ' ' → logprob: -13.262140274047852

Token 496: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -2.696889623621246e-06
    2. 'ials' → logprob: -13.25000286102295
    3. 'ialize' → logprob: -14.87500286102295
    4. '```' → logprob: -15.00000286102295
    5. 'orial' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '(' → logprob: -17.875001907348633
    8. 'rial' → logprob: -18.000001907348633
    9. '``' → logprob: -18.250001907348633
    10. 'al' → logprob: -18.375001907348633

Token 497: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02977108582854271
    2. '(' → logprob: -3.529771089553833
    3. ' (' → logprob: -11.279770851135254
    4. '   ' → logprob: -12.529770851135254
    5. 'self' → logprob: -12.654770851135254
    6. '(
' → logprob: -14.154770851135254
    7. '       ' → logprob: -15.904770851135254
    8. ' ' → logprob: -16.40477180480957
    9. '}(' → logprob: -16.65477180480957
    10. '```' → logprob: -17.15477180480957

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04228879138827324
    2. 'self' → logprob: -3.4172887802124023
    3. '(self' → logprob: -5.042288780212402
    4. '       ' → logprob: -7.167288780212402
    5. 'n' → logprob: -7.667288780212402
    6. ' ,' → logprob: -8.042288780212402
    7. ')' → logprob: -8.667288780212402
    8. '   ' → logprob: -8.917288780212402
    9. ',n' → logprob: -9.292288780212402
    10. '_,' → logprob: -9.417288780212402

Token 499: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31966477632522583
    2. 'self' → logprob: -1.694664716720581
    3. ' n' → logprob: -2.569664716720581
    4. ' self' → logprob: -4.44466495513916
    5. '   ' → logprob: -6.94466495513916
    6. '       ' → logprob: -7.44466495513916
    7. 'num' → logprob: -10.06966495513916
    8. ' ' → logprob: -11.19466495513916
    9. ')' → logprob: -11.69466495513916
    10. '(self' → logprob: -12.19466495513916

Token 500: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1680128127336502
    2. ':' → logprob: -1.9180128574371338
    3. ')' → logprob: -5.918012619018555
    4. '   ' → logprob: -6.043012619018555
    5. '):' → logprob: -6.793012619018555
    6. 'self' → logprob: -7.793012619018555
    7. ' ,' → logprob: -7.793012619018555
    8. '       ' → logprob: -8.418012619018555
    9. ':int' → logprob: -8.418012619018555
    10. ' :' → logprob: -8.418012619018555

Token 501: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.032357487827539444
    2. 'self' → logprob: -4.157357692718506
    3. ' int' → logprob: -4.782357692718506
    4. ')' → logprob: -4.907357692718506
    5. '   ' → logprob: -8.907357215881348
    6. ' self' → logprob: -9.032357215881348
    7. '       ' → logprob: -9.032357215881348
    8. ' )' → logprob: -11.157357215881348
    9. '):' → logprob: -12.282357215881348
    10. ' ' → logprob: -12.657357215881348

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023816844448447227
    2. '):' → logprob: -3.8988168239593506
    3. '   ' → logprob: -7.02381706237793
    4. '):
' → logprob: -7.14881706237793
    5. '       ' → logprob: -7.39881706237793
    6. ':' → logprob: -7.89881706237793
    7. ',' → logprob: -8.14881706237793
    8. ' )' → logprob: -8.27381706237793
    9. '):
' → logprob: -11.02381706237793
    10. ' ):' → logprob: -11.14881706237793

Token 503: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0987183079123497
    2. '->' → logprob: -2.8487184047698975
    3. ' ->' → logprob: -3.3487184047698975
    4. '   ' → logprob: -8.098718643188477
    5. '       ' → logprob: -8.348718643188477
    6. ')->' → logprob: -9.598718643188477
    7. '(self' → logprob: -9.598718643188477
    8. ' :' → logprob: -9.723718643188477
    9. ')' → logprob: -9.848718643188477
    10. '():' → logprob: -10.223718643188477

Token 504: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007610886357724667
    2. ' int' → logprob: -4.88261079788208
    3. '   ' → logprob: -12.882611274719238
    4. ' ' → logprob: -14.007611274719238
    5. '  ' → logprob: -14.632611274719238
    6. '(int' → logprob: -15.007611274719238
    7. 'def' → logprob: -15.882611274719238
    8. ')' → logprob: -16.007610321044922
    9. '    ' → logprob: -17.007610321044922
    10. '"' → logprob: -17.132610321044922

Token 505: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016854386776685715
    2. '(' → logprob: -4.141854286193848
    3. '       ' → logprob: -7.391854286193848
    4. '   ' → logprob: -9.266854286193848
    5. '(
' → logprob: -9.641854286193848
    6. ':' → logprob: -10.641854286193848
    7. ' (' → logprob: -11.391854286193848
    8. 'self' → logprob: -11.891854286193848
    9. ' self' → logprob: -14.641854286193848
    10. '(Self' → logprob: -14.766854286193848

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004166105354670435
    2. '0' → logprob: -9.12541675567627
    3. 'result' → logprob: -9.25041675567627
    4. 'count' → logprob: -9.62541675567627
    5. 'zeros' → logprob: -10.00041675567627
    6. ' zeros' → logprob: -10.00041675567627
    7. ' result' → logprob: -10.75041675567627
    8. '   ' → logprob: -11.12541675567627
    9. 'total' → logprob: -12.25041675567627
    10. '```' → logprob: -13.37541675567627

Token 507: ' #' (ID: 1069)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9693030118942261
    2. 'min' → logprob: -1.094303011894226
    3. '       ' → logprob: -1.594303011894226
    4. ' if' → logprob: -3.8443031311035156
    5. 'if' → logprob: -3.9693031311035156
    6. 'counts' → logprob: -4.344303131103516
    7. ' zeros' → logprob: -4.344303131103516
    8. ' counts' → logprob: -4.969303131103516
    9. 'zeros' → logprob: -5.594303131103516
    10. ' minimum' → logprob: -6.344303131103516

Token 508: ' For' (ID: 2214)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7117146849632263
    2. 'if' → logprob: -1.086714744567871
    3. '       ' → logprob: -2.836714744567871
    4. ' min' → logprob: -2.961714744567871
    5. ' if' → logprob: -3.461714744567871
    6. 'results' → logprob: -4.336714744567871
    7. 'counts' → logprob: -4.836714744567871
    8. 'zeros' → logprob: -6.086714744567871
    9. 'result' → logprob: -6.336714744567871
    10. 'res' → logprob: -6.336714744567871

Token 509: ' each' (ID: 2454)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.42974376678466797
    2. 'pf' → logprob: -2.179743766784668
    3. 'p' → logprob: -2.304743766784668
    4. 'factor' → logprob: -2.679743766784668
    5. ' prime' → logprob: -3.304743766784668
    6. 'self' → logprob: -4.679743766784668
    7. ' p' → logprob: -4.804743766784668
    8. 'base' → logprob: -5.304743766784668
    9. 'f' → logprob: -6.054743766784668
    10. ' pf' → logprob: -6.429743766784668

Token 510: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.710375964641571
    2. 'prime' → logprob: -0.710375964641571
    3. 'p' → logprob: -4.960375785827637
    4. ' p' → logprob: -5.210375785827637
    5. ' (' → logprob: -6.460375785827637
    6. 'factor' → logprob: -6.710375785827637
    7. '(p' → logprob: -7.210375785827637
    8. ' factor' → logprob: -7.460375785827637
    9. '(pr' → logprob: -8.085375785827637
    10. ' key' → logprob: -10.085375785827637

Token 511: ' factor' (ID: 12332)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.0811357498168945
    2. 'factor' → logprob: -1.3311357498168945
    3. ',' → logprob: -1.8311357498168945
    4. ' factor' → logprob: -1.8311357498168945
    5. ' in' → logprob: -3.3311357498168945
    6. '       ' → logprob: -3.8311357498168945
    7. '   ' → logprob: -4.3311357498168945
    8. ' ,' → logprob: -5.9561357498168945
    9. ' p' → logprob: -7.7061357498168945
    10. '_' → logprob: -7.9561357498168945

Token 512: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6053497195243835
    2. ' in' → logprob: -1.1053497791290283
    3. ' of' → logprob: -2.4803497791290283
    4. ' p' → logprob: -3.8553497791290283
    5. '       ' → logprob: -4.605349540710449
    6. 'p' → logprob: -5.730349540710449
    7. ' ,' → logprob: -6.230349540710449
    8. 'factor' → logprob: -7.355349540710449
    9. 'of' → logprob: -7.480349540710449
    10. '   ' → logprob: -7.980349540710449

Token 513: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018066724296659231
    2. ' self' → logprob: -6.376806735992432
    3. 'base' → logprob: -10.001806259155273
    4. '       ' → logprob: -10.626806259155273
    5. 'the' → logprob: -10.751806259155273
    6. '           ' → logprob: -12.251806259155273
    7. '(self' → logprob: -12.626806259155273
    8. ' the' → logprob: -12.751806259155273
    9. ' base' → logprob: -14.501806259155273
    10. '   ' → logprob: -14.626806259155273

Token 514: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.06923000514507294
    2. 'self' → logprob: -2.944230079650879
    3. ' base' → logprob: -4.319230079650879
    4. '       ' → logprob: -8.069230079650879
    5. ' self' → logprob: -8.069230079650879
    6. '   ' → logprob: -9.569230079650879
    7. '.base' → logprob: -9.569230079650879
    8. '           ' → logprob: -9.694230079650879
    9. '_base' → logprob: -10.444230079650879
    10. ' ' → logprob: -11.881730079650879

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3421441614627838
    2. '       ' → logprob: -1.8421441316604614
    3. ':' → logprob: -2.092144250869751
    4. ':
' → logprob: -5.717144012451172
    5. ' in' → logprob: -6.467144012451172
    6. '           ' → logprob: -7.592144012451172
    7. ' ,' → logprob: -7.717144012451172
    8. '   ' → logprob: -8.092144012451172
    9. ',
' → logprob: -8.217144012451172
    10. 'count' → logprob: -8.217144012451172

Token 516: ' find' (ID: 1646)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.7789512872695923
    2. 'counts' → logprob: -1.2789512872695923
    3. '       ' → logprob: -1.7789512872695923
    4. ' zeros' → logprob: -2.9039511680603027
    5. 'zeros' → logprob: -5.028951168060303
    6. ' ex' → logprob: -5.153951168060303
    7. 'ex' → logprob: -5.528951168060303
    8. ' return' → logprob: -5.653951168060303
    9. ' results' → logprob: -5.778951168060303
    10. 'count' → logprob: -5.903951168060303

Token 517: ' how' (ID: 1495)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3375662565231323
    2. 'the' → logprob: -1.9625662565231323
    3. ' min' → logprob: -2.837566375732422
    4. ' the' → logprob: -3.337566375732422
    5. 'n' → logprob: -3.462566375732422
    6. 'minimum' → logprob: -4.712566375732422
    7. '   ' → logprob: -6.087566375732422
    8. ' n' → logprob: -6.087566375732422
    9. '       ' → logprob: -6.337566375732422
    10. 'self' → logprob: -6.587566375732422

Token 518: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.031345050781965256
    2. ' many' → logprob: -3.5313451290130615
    3. 'min' → logprob: -6.531344890594482
    4. '   ' → logprob: -10.03134536743164
    5. '_many' → logprob: -10.15634536743164
    6. '       ' → logprob: -11.15634536743164
    7. ' min' → logprob: -11.90634536743164
    8. 'minimum' → logprob: -12.15634536743164
    9. '           ' → logprob: -12.28134536743164
    10. 'few' → logprob: -12.40634536743164

Token 519: ' times' (ID: 4238)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.09794318675994873
    2. 'times' → logprob: -2.7229433059692383
    3. ' zeros' → logprob: -4.847943305969238
    4. 'complete' → logprob: -5.097943305969238
    5. 'factor' → logprob: -5.347943305969238
    6. ' times' → logprob: -5.847943305969238
    7. 'tr' → logprob: -6.472943305969238
    8. 'full' → logprob: -6.722943305969238
    9. 'n' → logprob: -6.847943305969238
    10. ' complete' → logprob: -7.347943305969238

Token 520: ' it' (ID: 480)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7605016827583313
    2. 'it' → logprob: -0.8855016827583313
    3. 'the' → logprob: -2.8855016231536865
    4. '       ' → logprob: -3.5105016231536865
    5. ' it' → logprob: -4.510501861572266
    6. '   ' → logprob: -4.885501861572266
    7. 'factor' → logprob: -5.260501861572266
    8. 'its' → logprob: -5.385501861572266
    9. ' n' → logprob: -6.260501861572266
    10. 'that' → logprob: -7.010501861572266

Token 521: ' divides' (ID: 144028)
  Prédit: ' divides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divides' → logprob: -0.06984205543994904
    2. ' appears' → logprob: -3.1948421001434326
    3. 'appe' → logprob: -4.4448418617248535
    4. 'div' → logprob: -4.4448418617248535
    5. 'can' → logprob: -6.4448418617248535
    6. ' can' → logprob: -7.5698418617248535
    7. 'occ' → logprob: -7.9448418617248535
    8. 'divide' → logprob: -8.694842338562012
    9. ' occurs' → logprob: -9.319842338562012
    10. '```' → logprob: -9.569842338562012

Token 522: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015701744705438614
    2. '       ' → logprob: -5.140701770782471
    3. ' n' → logprob: -5.140701770782471
    4. 'the' → logprob: -6.390701770782471
    5. ' the' → logprob: -7.015701770782471
    6. '(n' → logprob: -7.890701770782471
    7. 'factor' → logprob: -8.015701293945312
    8. 'self' → logprob: -8.140701293945312
    9. '   ' → logprob: -8.640701293945312
    10. ' factorial' → logprob: -9.265701293945312

Token 523: '!
' (ID: 4175)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.004022119101136923
    2. '!
' → logprob: -6.004022121429443
    3. ' factorial' → logprob: -6.754022121429443
    4. '       ' → logprob: -8.129021644592285
    5. 'factor' → logprob: -10.254021644592285
    6. '!
' → logprob: -10.879021644592285
    7. '   ' → logprob: -11.629021644592285
    8. '!,' → logprob: -11.754021644592285
    9. '_factor' → logprob: -12.004021644592285
    10. '!

' → logprob: -13.879021644592285

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9743012671824545e-05
    2. '
' → logprob: -11.375020027160645
    3. ',' → logprob: -12.875020027160645
    4. '   ' → logprob: -12.875020027160645
    5. '           ' → logprob: -14.000020027160645
    6. '        
' → logprob: -14.750020027160645
    7. 'tokens' → logprob: -15.250020027160645
    8. '0' → logprob: -15.375020027160645
    9. '```' → logprob: -15.375020027160645
    10. ' tokens' → logprob: -15.500020027160645

Token 525: ' zeros' (ID: 42274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06785339117050171
    2. 'counts' → logprob: -3.5678534507751465
    3. 'zeros' (adapté à ' zeros') → logprob: -4.6928534507751465
    4. ' counts' → logprob: -4.8178534507751465
    5. ' zeros' → logprob: -4.8178534507751465
    6. 'min' → logprob: -5.4428534507751465
    7. 'results' → logprob: -5.5678534507751465
    8. ' results' → logprob: -6.8178534507751465
    9. ' min' → logprob: -6.9428534507751465
    10. 'zero' → logprob: -7.6928534507751465

Token 526: '_counts' (ID: 61971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29804927110671997
    2. '_counts' → logprob: -1.6730492115020752
    3. '=' → logprob: -2.923049211502075
    4. 's' → logprob: -4.548049449920654
    5. '   ' → logprob: -5.798049449920654
    6. '_per' → logprob: -7.048049449920654
    7. 'counts' → logprob: -7.298049449920654
    8. '_values' → logprob: -7.548049449920654
    9. '_count' → logprob: -8.673048973083496
    10. '_list' → logprob: -8.673048973083496

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022111982107162
    2. '=' → logprob: -2.3502211570739746
    3. '=[]' → logprob: -11.850220680236816
    4. '   ' → logprob: -12.225220680236816
    5. '       ' → logprob: -14.100220680236816
    6. '[]' → logprob: -14.350220680236816
    7. '	' → logprob: -15.350220680236816
    8. ' ' → logprob: -15.475220680236816
    9. '={}' → logprob: -15.600220680236816
    10. '=[]
' → logprob: -16.100221633911133

Token 528: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.240481914370321e-05
    2. '[]
' → logprob: -10.000052452087402
    3. '[' → logprob: -12.250052452087402
    4. ' []' → logprob: -13.750052452087402
    5. '{}' → logprob: -14.750052452087402
    6. '[]}' → logprob: -14.875052452087402
    7. '[]

' → logprob: -15.250052452087402
    8. '[])' → logprob: -16.000051498413086
    9. '[],' → logprob: -17.500051498413086
    10. '[]>' → logprob: -18.125051498413086

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012627330143004656
    2. ' for' → logprob: -7.001262664794922
    3. 'for' → logprob: -8.001262664794922
    4. '
' → logprob: -12.376262664794922
    5. '           ' → logprob: -12.501262664794922
    6. '	' → logprob: -13.126262664794922
    7. '        
' → logprob: -13.501262664794922
    8. '   ' → logprob: -13.501262664794922
    9. '	for' → logprob: -14.001262664794922
    10. ',' → logprob: -14.126262664794922

Token 530: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008772811852395535
    2. '       ' → logprob: -4.758772850036621
    3. ' for' → logprob: -8.758772850036621
    4. '   ' → logprob: -13.883772850036621
    5. '	for' → logprob: -16.008771896362305
    6. '```' → logprob: -16.508771896362305
    7. '
' → logprob: -18.258771896362305
    8. '           ' → logprob: -18.383771896362305
    9. ' ' → logprob: -18.508771896362305
    10. '        
' → logprob: -19.633771896362305

Token 531: ' prime' (ID: 9197)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.327114999294281
    2. 'prime' → logprob: -1.3271150588989258
    3. ' prime' → logprob: -4.577115058898926
    4. ' p' → logprob: -5.702115058898926
    5. '   ' → logprob: -9.202115058898926
    6. 'pf' → logprob: -11.327115058898926
    7. 'factor' → logprob: -11.702115058898926
    8. ' (' → logprob: -12.327115058898926
    9. '(p' → logprob: -12.827115058898926
    10. 'Prime' → logprob: -13.702115058898926

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009072950924746692
    2. ' in' → logprob: -8.125906944274902
    3. ',f' → logprob: -8.250906944274902
    4. ',p' → logprob: -9.000906944274902
    5. ' ,' → logprob: -9.625906944274902
    6. 'factor' → logprob: -9.750906944274902
    7. 'in' → logprob: -9.750906944274902
    8. '_factor' → logprob: -10.875906944274902
    9. ',_' → logprob: -12.250906944274902
    10. 'f' → logprob: -12.875906944274902

Token 533: ' exponent' (ID: 51159)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.4742860794067383
    2. 'ex' → logprob: -0.9742860794067383
    3. 'expo' → logprob: -9.099286079406738
    4. ' exp' → logprob: -10.349286079406738
    5. ' exponent' → logprob: -10.349286079406738
    6. 'count' → logprob: -10.849286079406738
    7. 'power' → logprob: -11.224286079406738
    8. 'Exponent' → logprob: -15.724286079406738
    9. 'pow' → logprob: -15.974286079406738
    10. '   ' → logprob: -16.349285125732422

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005249887239187956
    2. 'in' → logprob: -5.255249977111816
    3. 's' → logprob: -11.630249977111816
    4. '_in' → logprob: -12.755249977111816
    5. '	in' → logprob: -13.505249977111816
    6. ' ' → logprob: -14.130249977111816
    7. '<|end|>' → logprob: -14.630249977111816
    8. '   ' → logprob: -14.630249977111816
    9. '  ' → logprob: -15.630249977111816
    10. ',' → logprob: -15.630249977111816

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021896373946219683
    2. ' self' → logprob: -6.127189636230469
    3. '(self' → logprob: -13.377189636230469
    4. '       ' → logprob: -13.627189636230469
    5. '[self' → logprob: -14.252189636230469
    6. '           ' → logprob: -14.752189636230469
    7. '   ' → logprob: -14.752189636230469
    8. '	self' → logprob: -16.75218963623047
    9. ' ' → logprob: -17.12718963623047
    10. '`' → logprob: -17.12718963623047

Token 536: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.0013411965919658542
    2. 'base' → logprob: -6.626341342926025
    3. ' .' → logprob: -12.501340866088867
    4. '.' → logprob: -12.751340866088867
    5. '	base' → logprob: -13.251340866088867
    6. '_base' → logprob: -13.376340866088867
    7. ' base' → logprob: -14.001340866088867
    8. 'self' → logprob: -14.126340866088867
    9. '   ' → logprob: -14.376340866088867
    10. '```' → logprob: -14.501340866088867

Token 537: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -9.13388703338569e-06
    2. 'prime' → logprob: -11.625009536743164
    3. 'f' → logprob: -16.375009536743164
    4. 'Prime' → logprob: -16.750009536743164
    5. '```' → logprob: -18.375009536743164
    6. '_factor' → logprob: -19.000009536743164
    7. '_f' → logprob: -19.750009536743164
    8. ' prime' → logprob: -19.875009536743164
    9. '_' → logprob: -20.875009536743164
    10. '\' → logprob: -20.875009536743164

Token 538: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0015148617094382644
    2. 'f' → logprob: -6.501514911651611
    3. '_' → logprob: -13.001514434814453
    4. 's' → logprob: -13.126514434814453
    5. '_factor' → logprob: -13.126514434814453
    6. ')' → logprob: -13.376514434814453
    7. '```' → logprob: -13.876514434814453
    8. '   ' → logprob: -14.251514434814453
    9. 'factor' → logprob: -14.751514434814453
    10. '-f' → logprob: -14.876514434814453

Token 539: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.00030924470047466457
    2. 'f' → logprob: -8.375308990478516
    3. 'ctors' → logprob: -10.375308990478516
    4. 'acters' → logprob: -11.500308990478516
    5. 'ectors' → logprob: -12.000308990478516
    6. 'actor' → logprob: -12.500308990478516
    7. '   ' → logprob: -12.500308990478516
    8. '_f' → logprob: -12.625308990478516
    9. 'a' → logprob: -12.750308990478516
    10. 'ators' → logprob: -12.875308990478516

Token 540: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.02514636144042015
    2. ':' → logprob: -4.150146484375
    3. ':
' → logprob: -5.150146484375
    4. '.values' → logprob: -6.650146484375
    5. 'items' → logprob: -7.150146484375
    6. '.iteritems' → logprob: -8.150146484375
    7. '.' → logprob: -8.525146484375
    8. '   ' → logprob: -8.525146484375
    9. ' items' → logprob: -9.275146484375
    10. '):' → logprob: -9.400146484375

Token 541: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03817059099674225
    2. '():
' → logprob: -3.288170576095581
    3. '()' → logprob: -9.28817081451416
    4. '():
' → logprob: -10.66317081451416
    5. ' ():' → logprob: -11.66317081451416
    6. '(' → logprob: -13.53817081451416
    7. '():

' → logprob: -13.53817081451416
    8. '()):
' → logprob: -13.91317081451416
    9. ':' → logprob: -14.28817081451416
    10. '       ' → logprob: -15.91317081451416

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.698698704596609e-05
    2. '
' → logprob: -9.500097274780273
    3. '       ' → logprob: -11.500097274780273
    4. 'count' → logprob: -12.500097274780273
    5. ' zeros' → logprob: -13.375097274780273
    6. 'zeros' → logprob: -13.500097274780273
    7. ',' → logprob: -13.875097274780273
    8. '```' → logprob: -14.000097274780273
    9. '               ' → logprob: -14.375097274780273
    10. '   ' → logprob: -15.000097274780273

Token 543: ' total' (ID: 3609)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4904559850692749
    2. 'exp' → logprob: -1.740455985069275
    3. '           ' → logprob: -2.3654561042785645
    4. ' exp' → logprob: -3.4904561042785645
    5. ' count' → logprob: -3.8654561042785645
    6. 'ex' → logprob: -3.8654561042785645
    7. 'zeros' → logprob: -4.2404561042785645
    8. 'prime' → logprob: -4.9904561042785645
    9. ' zeros' → logprob: -4.9904561042785645
    10. 'factor' → logprob: -5.3654561042785645

Token 544: '_exp' (ID: 30306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1995202898979187
    2. '=' → logprob: -2.6995203495025635
    3. '_count' → logprob: -2.6995203495025635
    4. '_ex' → logprob: -3.6995203495025635
    5. '_exp' → logprob: -4.324520111083984
    6. '   ' → logprob: -5.449520111083984
    7. '_prime' → logprob: -6.324520111083984
    8. '_' → logprob: -7.324520111083984
    9. '_factor' → logprob: -7.449520111083984
    10. '=count' → logprob: -7.574520111083984

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031124258413910866
    2. '=' → logprob: -3.6561243534088135
    3. 'onent' → logprob: -6.031124114990234
    4. '_in' → logprob: -7.656124114990234
    5. 'o' → logprob: -7.906124114990234
    6. 'ress' → logprob: -8.031124114990234
    7. 'on' → logprob: -8.156124114990234
    8. '   ' → logprob: -8.781124114990234
    9. 'ression' → logprob: -9.031124114990234
    10. 'r' → logprob: -9.406124114990234

Token 546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062437042593955994
    2. ' self' → logprob: -2.812437057495117
    3. '           ' → logprob: -7.687437057495117
    4. '               ' → logprob: -12.187437057495117
    5. '       ' → logprob: -12.937437057495117
    6. '(self' → logprob: -13.187437057495117
    7. '   ' → logprob: -14.062437057495117
    8. ' ' → logprob: -16.312437057495117
    9. '	self' → logprob: -16.312437057495117
    10. '=self' → logprob: -16.437437057495117

Token 547: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -9.615255839889869e-05
    2. 'prime' → logprob: -9.500096321105957
    3. '.' → logprob: -11.125096321105957
    4. ' .' → logprob: -12.125096321105957
    5. '_prime' → logprob: -14.750096321105957
    6. ' prime' → logprob: -16.25009536743164
    7. '_.' → logprob: -16.50009536743164
    8. ').' → logprob: -16.75009536743164
    9. '   ' → logprob: -17.00009536743164
    10. '..' → logprob: -17.00009536743164

Token 548: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -2.4868770196917467e-05
    2. 'prime' → logprob: -11.500024795532227
    3. 'ine' → logprob: -13.375024795532227
    4. '   ' → logprob: -13.500024795532227
    5. '
' → logprob: -13.750024795532227
    6. 'incipal' → logprob: -14.375024795532227
    7. 'im' → logprob: -14.437524795532227
    8. 'me' → logprob: -14.562524795532227
    9. 'eme' → logprob: -14.625024795532227
    10. 'ome' → logprob: -14.750024795532227

Token 549: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0005533903022296727
    2. 'factor' → logprob: -7.500553607940674
    3. '_prime' → logprob: -15.750553131103516
    4. ' factor' → logprob: -16.875553131103516
    5. '_FACTOR' → logprob: -16.875553131103516
    6. 'prime' → logprob: -17.125553131103516
    7. '   ' → logprob: -17.375553131103516
    8. 'Factor' → logprob: -17.875553131103516
    9. '_f' → logprob: -18.375553131103516
    10. '.factor' → logprob: -18.625553131103516

Token 550: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.16027601063251495
    2. 'ex' → logprob: -1.9102760553359985
    3. '_in' → logprob: -10.660276412963867
    4. 'exp' → logprob: -11.410276412963867
    5. '_exp' → logprob: -12.535276412963867
    6. '	ex' → logprob: -12.785276412963867
    7. ' exponent' → logprob: -13.160276412963867
    8. 'in' → logprob: -13.535276412963867
    9. 'count' → logprob: -13.660276412963867
    10. '   ' → logprob: -13.910276412963867

Token 551: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -1.3856492842023727e-06
    2. 'ponente' → logprob: -14.625000953674316
    3. 'onent' → logprob: -15.250000953674316
    4. 'x' → logprob: -15.375000953674316
    5. '```' → logprob: -15.500000953674316
    6. 'p' → logprob: -16.000001907348633
    7. 'ponents' → logprob: -17.000001907348633
    8. 'pon' → logprob: -17.250001907348633
    9. 'ponen' → logprob: -17.500001907348633
    10. 'component' → logprob: -18.625001907348633

Token 552: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.741137283621356e-05
    2. 'in' → logprob: -9.875057220458984
    3. '(n' → logprob: -12.625057220458984
    4. 's' → logprob: -14.125057220458984
    5. 'In' → logprob: -14.250057220458984
    6. '_' → logprob: -14.375057220458984
    7. '(in' → logprob: -15.750057220458984
    8. '(' → logprob: -16.500057220458984
    9. '_ex' → logprob: -16.875057220458984
    10. '_factor' → logprob: -16.875057220458984

Token 553: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.009803901426494122
    2. 'factor' → logprob: -4.634803771972656
    3. '(n' → logprob: -11.009803771972656
    4. 'n' → logprob: -12.009803771972656
    5. ' factorial' → logprob: -12.134803771972656
    6. '_' → logprob: -12.759803771972656
    7. 'Factor' → logprob: -13.009803771972656
    8. '   ' → logprob: -13.384803771972656
    9. 'the' → logprob: -13.509803771972656
    10. '_fact' → logprob: -13.634803771972656

Token 554: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0003312937042210251
    2. 'al' → logprob: -8.125330924987793
    3. '(n' → logprob: -12.250330924987793
    4. 'orial' → logprob: -12.250330924987793
    5. 'n' → logprob: -12.625330924987793
    6. '(' → logprob: -12.875330924987793
    7. '   ' → logprob: -13.250330924987793
    8. '```' → logprob: -13.250330924987793
    9. 'arial' → logprob: -13.750330924987793
    10. 'cial' → logprob: -13.750330924987793

Token 555: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -17.125001907348633
    4. 'n' → logprob: -18.125001907348633
    5. '(
' → logprob: -18.125001907348633
    6. '(num' → logprob: -18.625001907348633
    7. '(noun' → logprob: -20.625001907348633
    8. '(number' → logprob: -21.625001907348633
    9. ' n' → logprob: -22.125001907348633
    10. '   ' → logprob: -22.250001907348633

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.15310683415737e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',p' → logprob: -13.500021934509277
    4. ',
' → logprob: -14.750021934509277
    5. 'prime' → logprob: -15.500021934509277
    6. '           ' → logprob: -15.625021934509277
    7. ')' → logprob: -15.875021934509277
    8. '(pr' → logprob: -16.37502098083496
    9. '   ' → logprob: -16.87502098083496
    10. '       ' → logprob: -16.87502098083496

Token 557: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.07889287173748016
    2. ' prime' → logprob: -2.578892946243286
    3. ')' → logprob: -14.328892707824707
    4. '   ' → logprob: -14.328892707824707
    5. '_prime' → logprob: -14.578892707824707
    6. 'pr' → logprob: -14.828892707824707
    7. 'prim' → logprob: -15.078892707824707
    8. 'primer' → logprob: -15.953892707824707
    9. '
' → logprob: -16.328893661499023
    10. '           ' → logprob: -16.453893661499023

Token 558: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015262868255376816
    2. ')
' → logprob: -7.501526355743408
    3. ')//' → logprob: -7.751526355743408
    4. '//' → logprob: -8.12652587890625
    5. ' //' → logprob: -9.12652587890625
    6. '           ' → logprob: -9.12652587890625
    7. ' )' → logprob: -11.25152587890625
    8. '       ' → logprob: -11.87652587890625
    9. ' ' → logprob: -13.25152587890625
    10. '
' → logprob: -13.50152587890625

Token 559: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.226628895296017e-06
    2. ' zeros' → logprob: -12.125007629394531
    3. 'zeros' → logprob: -14.625007629394531
    4. ' /' → logprob: -14.750007629394531
    5. ',' → logprob: -14.875007629394531
    6. '               ' → logprob: -15.500007629394531
    7. ' divided' → logprob: -16.37500762939453
    8. '```' → logprob: -16.87500762939453
    9. '                   ' → logprob: -17.12500762939453
    10. 'tokens' → logprob: -17.25000762939453

Token 560: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.04106463864445686
    2. '           ' → logprob: -3.416064739227295
    3. 'zeros' (adapté à ' zeros') → logprob: -4.916064739227295
    4. '       ' → logprob: -10.291064262390137
    5. '   ' → logprob: -11.916064262390137
    6. ' zero' → logprob: -12.166064262390137
    7. ' counts' → logprob: -12.666064262390137
    8. 'zero' → logprob: -12.791064262390137
    9. '
' → logprob: -13.041064262390137
    10. 'Zeros' → logprob: -13.041064262390137

Token 561: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0001963881659321487
    2. '=' → logprob: -9.37519645690918
    3. 's' → logprob: -10.00019645690918
    4. ' =' → logprob: -10.00019645690918
    5. '_count' → logprob: -12.12519645690918
    6. '=_' → logprob: -12.12519645690918
    7. 'counts' → logprob: -13.00019645690918
    8. '   ' → logprob: -13.37519645690918
    9. '.append' → logprob: -13.50019645690918
    10. '_' → logprob: -14.00019645690918

Token 562: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003377270477358252
    2. '.' → logprob: -8.000337600708008
    3. '.app' → logprob: -13.750337600708008
    4. '.ap' → logprob: -14.375337600708008
    5. 'append' → logprob: -15.000337600708008
    6. ' .' → logprob: -15.875337600708008
    7. '=' → logprob: -17.375337600708008
    8. '.Append' → logprob: -17.750337600708008
    9. ').' → logprob: -18.000337600708008
    10. '   ' → logprob: -18.125337600708008

Token 563: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0001825642102630809
    2. '(' → logprob: -9.250182151794434
    3. 'total' → logprob: -9.375182151794434
    4. ' total' → logprob: -13.875182151794434
    5. '(t' → logprob: -15.000182151794434
    6. '((' → logprob: -15.750182151794434
    7. ' (' → logprob: -16.37518310546875
    8. '(
' → logprob: -16.62518310546875
    9. '(to' → logprob: -18.12518310546875
    10. ',total' → logprob: -18.50018310546875

Token 564: '_exp' (ID: 30306)
  Prédit: '_exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.0009107483783736825
    2. 'total' → logprob: -7.500910758972168
    3. ' total' → logprob: -9.250910758972168
    4. ' ' → logprob: -9.625910758972168
    5. 'exp' → logprob: -9.750910758972168
    6. 's' → logprob: -10.250910758972168
    7. '//' → logprob: -10.750910758972168
    8. '(total' → logprob: -10.875910758972168
    9. ')' → logprob: -11.000910758972168
    10. 'Exp' → logprob: -11.750910758972168

Token 565: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0015045057516545057
    2. '//' → logprob: -6.501504421234131
    3. ' ' → logprob: -13.751504898071289
    4. ' ' → logprob: -14.376504898071289
    5. ')' → logprob: -15.126504898071289
    6. '   ' → logprob: -16.00150489807129
    7. ')//' → logprob: -17.25150489807129
    8. '  ' → logprob: -18.00150489807129
    9. ' #' → logprob: -18.12650489807129
    10. ' /' → logprob: -18.12650489807129

Token 566: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.029754074290394783
    2. ' exponent' → logprob: -3.529754161834717
    3. ' ex' → logprob: -13.154753684997559
    4. '(ex' → logprob: -14.404753684997559
    5. '	ex' → logprob: -14.904753684997559
    6. '   ' → logprob: -15.529753684997559
    7. 'Exponent' → logprob: -15.779753684997559
    8. ' ' → logprob: -15.904753684997559
    9. ' ' → logprob: -16.779754638671875
    10. 'prime' → logprob: -16.779754638671875

Token 567: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5839371681213379
    2. ')
' → logprob: -0.8339371681213379
    3. '       ' → logprob: -4.833937168121338
    4. ')
' → logprob: -11.83393669128418
    5. ' )
' → logprob: -14.33393669128418
    6. ' )' → logprob: -14.45893669128418
    7. ')`
' → logprob: -14.58393669128418
    8. ')

' → logprob: -14.83393669128418
    9. ')return' → logprob: -14.95893669128418
    10. '   ' → logprob: -15.70893669128418

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029428409412503242
    2. '
' → logprob: -3.654428482055664
    3. ' return' → logprob: -6.404428482055664
    4. 'return' → logprob: -6.654428482055664
    5. '   ' → logprob: -9.029428482055664
    6. '        
' → logprob: -11.154428482055664
    7. '  
' → logprob: -11.529428482055664
    8. ')' → logprob: -12.029428482055664
    9. ')
' → logprob: -12.029428482055664
    10. '    
' → logprob: -12.404428482055664

Token 569: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5089370608329773
    2. '       ' → logprob: -1.008937120437622
    3. ' return' → logprob: -3.383937120437622
    4. '
' → logprob: -8.133936882019043
    5. '   ' → logprob: -10.383936882019043
    6. 'if' → logprob: -11.758936882019043
    7. '```' → logprob: -12.258936882019043
    8. ' if' → logprob: -12.883936882019043
    9. '	return' → logprob: -12.883936882019043
    10. '        
' → logprob: -13.883936882019043

Token 570: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815006136894226
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -16.143150329589844
    4. 'minimum' → logprob: -17.268150329589844
    5. '(min' → logprob: -17.268150329589844
    6. '   ' → logprob: -19.268150329589844
    7. '0' → logprob: -19.643150329589844
    8. ' minimum' → logprob: -20.268150329589844
    9. '_min' → logprob: -21.268150329589844
    10. ',min' → logprob: -21.268150329589844

Token 571: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '=zeros' → logprob: -15.000000953674316
    3. 'zeros' → logprob: -15.375000953674316
    4. '(
' → logprob: -17.5
    5. ' (' → logprob: -17.625
    6. '.zeros' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. '(`' → logprob: -19.0
    9. '((' → logprob: -19.0
    10. ' zeros' → logprob: -19.5

Token 572: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.00012606535165105015
    2. ' zeros' → logprob: -9.000125885009766
    3. '(' → logprob: -12.875125885009766
    4. '   ' → logprob: -18.375125885009766
    5. 'zero' → logprob: -19.125125885009766
    6. 'zer' → logprob: -19.125125885009766
    7. '0' → logprob: -19.875125885009766
    8. ' (' → logprob: -20.000125885009766
    9. '.zeros' → logprob: -20.500125885009766
    10. ')' → logprob: -20.750125885009766

Token 573: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0011361661599949002
    2. 's' → logprob: -6.876136302947998
    3. '_' → logprob: -9.50113582611084
    4. 'counts' → logprob: -10.75113582611084
    5. 'zeros' → logprob: -12.75113582611084
    6. 'nts' → logprob: -13.37613582611084
    7. 'zs' → logprob: -14.62613582611084
    8. 'Counts' → logprob: -15.37613582611084
    9. ')' → logprob: -15.37613582611084
    10. ' counts' → logprob: -15.50113582611084

Token 574: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. '()' → logprob: -12.250019073486328
    3. '       ' → logprob: -12.500019073486328
    4. ' if' → logprob: -12.750019073486328
    5. ')
' → logprob: -13.000019073486328
    6. '   ' → logprob: -13.500019073486328
    7. ' )' → logprob: -13.875019073486328
    8. '}' → logprob: -14.125019073486328
    9. ' or' → logprob: -14.125019073486328
    10. '())' → logprob: -14.750019073486328

Token 575: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.0011709370883181691
    2. ' zeros' → logprob: -6.751171112060547
    3. 'len' → logprob: -14.126171112060547
    4. ' len' → logprob: -18.376171112060547
    5. '0' → logprob: -20.251171112060547
    6. '   ' → logprob: -20.751171112060547
    7. '```' → logprob: -21.501171112060547
    8. 'Zeros' → logprob: -21.626171112060547
    9. '
' → logprob: -21.751171112060547
    10. 'zer' → logprob: -21.876171112060547

Token 577: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.0802738870552275e-05
    2. '_' → logprob: -11.62501049041748
    3. 's' → logprob: -14.25001049041748
    4. 'counts' → logprob: -15.37501049041748
    5. '\' → logprob: -15.75001049041748
    6. 'Counts' → logprob: -15.75001049041748
    7. '_to' → logprob: -16.500011444091797
    8. '>' → logprob: -16.500011444091797
    9. '_c' → logprob: -16.875011444091797
    10. ' counts' → logprob: -17.500011444091797

Token 578: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47408169507980347
    2. 'else' → logprob: -0.9740816950798035
    3. '!=' → logprob: -12.349081993103027
    4. '>' → logprob: -15.724081993103027
    5. ' !=' → logprob: -16.47408103942871
    6. ')' → logprob: -16.84908103942871
    7. '   ' → logprob: -17.09908103942871
    8. '```' → logprob: -18.22408103942871
    9. '==' → logprob: -18.34908103942871
    10. '	else' → logprob: -18.72408103942871

Token 579: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026288547087460756
    2. 'float' → logprob: -8.500263214111328
    3. ' ' → logprob: -9.750263214111328
    4. ' float' → logprob: -14.125263214111328
    5. 'None' → logprob: -15.750263214111328
    6. '   ' → logprob: -16.625263214111328
    7. 'n' → logprob: -16.625263214111328
    8. 'inf' → logprob: -16.750263214111328
    9. ' ' → logprob: -19.000263214111328
    10. '999' → logprob: -19.000263214111328

Token 580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.612634362885728e-05
    2. 'float' → logprob: -9.500076293945312
    3. ' ' → logprob: -14.625076293945312
    4. 'n' → logprob: -14.875076293945312
    5. 'None' → logprob: -15.000076293945312
    6. ' float' → logprob: -18.125076293945312
    7. 'inf' → logprob: -19.000076293945312
    8. '-' → logprob: -20.000076293945312
    9. 'int' → logprob: -20.125076293945312
    10. '   ' → logprob: -20.375076293945312

Token 581: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' IC' (ID: 30492)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -1.074713110923767
    2. ' Base' → logprob: -1.574713110923767
    3. ' Number' → logprob: -2.3247132301330566
    4. 'Trailing' → logprob: -2.4497132301330566
    5. 'Factor' → logprob: -2.8247132301330566
    6. 'Base' → logprob: -3.1997132301330566
    7. ' Solution' → logprob: -3.6997132301330566
    8. ' Tra' → logprob: -3.6997132301330566
    9. 'Number' → logprob: -3.8247132301330566
    10. ' Prime' → logprob: -4.074713230133057

Token 584: 'PC' (ID: 7349)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19616904854774475
    2. 'ode' → logprob: -2.446169137954712
    3. 'lass' → logprob: -3.696169137954712
    4. 'I' → logprob: -4.571168899536133
    5. 'al' → logprob: -4.946168899536133
    6. 'F' → logprob: -5.196168899536133
    7. 'oder' → logprob: -5.321168899536133
    8. 'PC' → logprob: -5.696168899536133
    9. 'ounter' → logprob: -5.946168899536133
    10. 'R' → logprob: -6.196168899536133

Token 585: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.262645423412323
    2. 'Team' → logprob: -1.8876454830169678
    3. 'Solver' → logprob: -3.6376454830169678
    4. 'Trainer' → logprob: -3.8876454830169678
    5. 'Converter' → logprob: -5.137645244598389
    6. 'Coder' → logprob: -5.262645244598389
    7. 'Judge' → logprob: -5.762645244598389
    8. '_' → logprob: -6.387645244598389
    9. 'Formatter' → logprob: -6.637645244598389
    10. 'Parser' → logprob: -6.637645244598389

Token 586: 'C' (ID: 34)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.024708008393645287
    2. ':' → logprob: -4.274707794189453
    3. 'Solution' → logprob: -5.149707794189453
    4. '{' → logprob: -6.274707794189453
    5. 'Converter' → logprob: -6.899707794189453
    6. 'Helper' → logprob: -7.649707794189453
    7. 'Base' → logprob: -8.524707794189453
    8. '():' → logprob: -8.524707794189453
    9. ':
' → logprob: -8.649707794189453
    10. 'Runner' → logprob: -9.274707794189453

Token 587: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017694240668788552
    2. ':
' → logprob: -7.376769542694092
    3. 'Factor' → logprob: -7.751769542694092
    4. 'Solver' → logprob: -8.626769065856934
    5. '():' → logprob: -9.251769065856934
    6. '_:' → logprob: -9.501769065856934
    7. 'Solution' → logprob: -10.001769065856934
    8. '(' → logprob: -10.126769065856934
    9. 'Base' → logprob: -10.126769065856934
    10. '{' → logprob: -10.251769065856934

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004182517994195223
    2. ' def' → logprob: -5.5041823387146
    3. ':' → logprob: -9.879182815551758
    4. 'def' → logprob: -11.004182815551758
    5. '    
' → logprob: -11.504182815551758
    6. ' class' → logprob: -11.629182815551758
    7. '    ' → logprob: -12.754182815551758
    8. 'class' → logprob: -13.129182815551758
    9. ',' → logprob: -13.379182815551758
    10. ' indentation' → logprob: -13.379182815551758

Token 589: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.012367550283670425
    2. 'def' (adapté à ' def') → logprob: -4.5123677253723145
    3. '   ' → logprob: -6.6373677253723145
    4. 'class' → logprob: -12.137367248535156
    5. ' class' → logprob: -13.637367248535156
    6. '    ' → logprob: -14.012367248535156
    7. '```' → logprob: -14.637367248535156
    8. ' ' → logprob: -15.762367248535156
    9. ' ' → logprob: -16.012367248535156
    10. ':' → logprob: -16.512367248535156

Token 590: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.051124174147844315
    2. '__' → logprob: -3.051124095916748
    3. 'init' → logprob: -6.051124095916748
    4. ' init' → logprob: -9.676124572753906
    5. '_init' → logprob: -9.801124572753906
    6. ' def' → logprob: -10.926124572753906
    7. '_' → logprob: -11.301124572753906
    8. ' _' → logprob: -11.301124572753906
    9. 'def' → logprob: -11.301124572753906
    10. '```' → logprob: -13.426124572753906

Token 591: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4617256056226324e-05
    2. 'int' → logprob: -12.250014305114746
    3. '_' → logprob: -12.625014305114746
    4. '_init' → logprob: -12.750014305114746
    5. 'def' → logprob: -13.875014305114746
    6. '__' → logprob: -14.125014305114746
    7. ' init' → logprob: -14.250014305114746
    8. 'i' → logprob: -15.000014305114746
    9. 'it' → logprob: -15.125014305114746
    10. 'in' → logprob: -16.125015258789062

Token 592: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005284515209496021
    2. '(self' → logprob: -5.255284309387207
    3. '__' → logprob: -11.130284309387207
    4. '_(' → logprob: -11.255284309387207
    5. ' (' → logprob: -11.505284309387207
    6. '__(
' → logprob: -11.505284309387207
    7. '(' → logprob: -13.755284309387207
    8. 'self' → logprob: -14.380284309387207
    9. ')(' → logprob: -14.755284309387207
    10. '<>(' → logprob: -15.255284309387207

Token 593: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001951961312443018
    2. ' self' → logprob: -8.625195503234863
    3. ',' → logprob: -11.250195503234863
    4. '   ' → logprob: -14.000195503234863
    5. ')' → logprob: -14.250195503234863
    6. '(self' → logprob: -14.750195503234863
    7. '       ' → logprob: -15.250195503234863
    8. 'base' → logprob: -15.750195503234863
    9. ')(' → logprob: -17.000194549560547
    10. '
' → logprob: -17.000194549560547

Token 594: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014823723176959902
    2. 'self' → logprob: -8.875147819519043
    3. ' ,' → logprob: -12.500147819519043
    4. '(self' → logprob: -13.500147819519043
    5. ')' → logprob: -13.625147819519043
    6. ',self' → logprob: -13.625147819519043
    7. ' (' → logprob: -15.250147819519043
    8. ' self' → logprob: -15.750147819519043
    9. '):' → logprob: -16.00014877319336
    10. '   ' → logprob: -16.00014877319336

Token 595: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004931662231683731
    2. ' self' → logprob: -5.754931449890137
    3. '   ' → logprob: -6.629931449890137
    4. '       ' → logprob: -8.254931449890137
    5. 'base' → logprob: -8.754931449890137
    6. ' base' → logprob: -12.754931449890137
    7. '(self' → logprob: -12.879931449890137
    8. ' ' → logprob: -13.129931449890137
    9. '```' → logprob: -13.504931449890137
    10. '
' → logprob: -13.754931449890137

Token 596: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.32878875732421875
    2. ' self' → logprob: -1.3287887573242188
    3. '       ' → logprob: -4.203788757324219
    4. ' pass' → logprob: -8.453788757324219
    5. 'pass' → logprob: -8.578788757324219
    6. '   ' → logprob: -9.703788757324219
    7. 'def' → logprob: -13.203788757324219
    8. 'super' → logprob: -13.453788757324219
    9. ' super' → logprob: -13.828788757324219
    10. ' ' → logprob: -15.078788757324219

Token 597: '.cache' (ID: 37175)
  Prédit: '.base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.7840237021446228
    2. '.converter' → logprob: -1.1590237617492676
    3. ' .' → logprob: -1.6590237617492676
    4. '.' → logprob: -3.5340237617492676
    5. 'converter' → logprob: -5.659023761749268
    6. '._' → logprob: -6.534023761749268
    7. '_converter' → logprob: -6.784023761749268
    8. '_base' → logprob: -6.909023761749268
    9. ' =' → logprob: -7.284023761749268
    10. 'base' → logprob: -7.784023761749268

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761421918869019
    2. ' =' → logprob: -0.8261421918869019
    3. '={}' → logprob: -8.576142311096191
    4. ' ' → logprob: -12.826142311096191
    5. ':' → logprob: -12.826142311096191
    6. '_' → logprob: -13.201142311096191
    7. '{' → logprob: -13.201142311096191
    8. '={' → logprob: -13.701142311096191
    9. '=[]' → logprob: -13.951142311096191
    10. '.setdefault' → logprob: -14.701142311096191

Token 599: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.5107177862082608e-05
    2. ' {}' → logprob: -10.625024795532227
    3. '[]' → logprob: -14.875024795532227
    4. 'dict' → logprob: -15.625024795532227
    5. '{}
' → logprob: -15.875024795532227
    6. 'set' → logprob: -16.750024795532227
    7. '={}' → logprob: -18.250024795532227
    8. '{},' → logprob: -18.750024795532227
    9. '{' → logprob: -19.000024795532227
    10. '   ' → logprob: -19.125024795532227

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01787457801401615
    2. 'def' → logprob: -4.392874717712402
    3. ' def' → logprob: -5.267874717712402
    4. '    
' → logprob: -9.017874717712402
    5. '
' → logprob: -10.142874717712402
    6. ' ' → logprob: -11.392874717712402
    7. '```' → logprob: -12.142874717712402
    8. '<|end|>' → logprob: -12.267874717712402
    9. '    ' → logprob: -12.642874717712402
    10. '	def' → logprob: -13.017874717712402

Token 601: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0025069285184144974
    2. ' def' → logprob: -6.002506732940674
    3. '   ' → logprob: -10.377507209777832
    4. ' ' → logprob: -17.377506256103516
    5. 'de' → logprob: -17.877506256103516
    6. '    
' → logprob: -18.127506256103516
    7. '    ' → logprob: -18.377506256103516
    8. '
' → logprob: -18.627506256103516
    9. '	def' → logprob: -18.752506256103516
    10. '  ' → logprob: -18.877506256103516

Token 602: ' process' (ID: 2273)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.07785600423812866
    2. 'compute' → logprob: -3.7028560638427734
    3. ' trailing' → logprob: -3.9528560638427734
    4. 'count' → logprob: -4.327856063842773
    5. 'factor' → logprob: -5.202856063842773
    6. 'calculate' → logprob: -5.702856063842773
    7. 'solve' → logprob: -5.702856063842773
    8. 'get' → logprob: -6.077856063842773
    9. ' compute' → logprob: -6.952856063842773
    10. 'read' → logprob: -8.452856063842773

Token 603: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005494972690939903
    2. '(' → logprob: -5.880495071411133
    3. '_number' → logprob: -6.255495071411133
    4. '_input' → logprob: -7.880495071411133
    5. '_line' → logprob: -9.005495071411133
    6. '(n' → logprob: -9.880495071411133
    7. ' (' → logprob: -10.130495071411133
    8. '_factor' → logprob: -10.505495071411133
    9. '_query' → logprob: -10.755495071411133
    10. '_result' → logprob: -11.005495071411133

Token 604: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019574174657464027
    2. '(' → logprob: -6.251957416534424
    3. ' (' → logprob: -10.501957893371582
    4. '(line' → logprob: -14.376957893371582
    5. '(s' → logprob: -14.876957893371582
    6. 'self' → logprob: -15.751957893371582
    7. '_line' → logprob: -16.001956939697266
    8. ' ' → logprob: -16.751956939697266
    9. '(sel' → logprob: -17.626956939697266
    10. '(se' → logprob: -17.751956939697266

Token 605: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029806844890117645
    2. '(' → logprob: -3.5298068523406982
    3. ' (' → logprob: -10.154807090759277
    4. '(s' → logprob: -11.529807090759277
    5. '(line' → logprob: -11.904807090759277
    6. '(
' → logprob: -15.029807090759277
    7. 'self' → logprob: -16.27980613708496
    8. ' ' → logprob: -16.52980613708496
    9. '(input' → logprob: -16.77980613708496
    10. '(Self' → logprob: -17.15480613708496

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.196732960641384e-05
    2. ' ,' → logprob: -9.500082015991211
    3. ',line' → logprob: -12.125082015991211
    4. 'self' → logprob: -13.750082015991211
    5. '):' → logprob: -15.375082015991211
    6. ',input' → logprob: -15.500082015991211
    7. ',s' → logprob: -17.25008201599121
    8. ' line' → logprob: -17.25008201599121
    9. '):
' → logprob: -17.62508201599121
    10. '   ' → logprob: -17.75008201599121

Token 607: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2873191237449646
    2. ' line' → logprob: -1.9123191833496094
    3. 'self' → logprob: -2.4123191833496094
    4. ' self' → logprob: -4.412319183349609
    5. 's' → logprob: -8.91231918334961
    6. ' s' → logprob: -9.78731918334961
    7. 'input' → logprob: -9.91231918334961
    8. ' input' → logprob: -12.16231918334961
    9. 'n' → logprob: -12.41231918334961
    10. ' ' → logprob: -13.41231918334961

Token 608: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009200855158269405
    2. '):' → logprob: -4.7592010498046875
    3. '):
' → logprob: -7.6342010498046875
    4. ':str' → logprob: -9.884201049804688
    5. ')' → logprob: -10.509201049804688
    6. 'self' → logprob: -11.634201049804688
    7. ' :' → logprob: -12.134201049804688
    8. '   ' → logprob: -12.134201049804688
    9. '):
' → logprob: -13.509201049804688
    10. ' ):' → logprob: -13.759201049804688

Token 609: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.007216249592602253
    2. ' str' → logprob: -5.007216453552246
    3. ')' → logprob: -7.632216453552246
    4. 's' → logprob: -11.507216453552246
    5. '):
' → logprob: -13.382216453552246
    6. '[str' → logprob: -13.507216453552246
    7. ':str' → logprob: -13.882216453552246
    8. '(str' → logprob: -14.382216453552246
    9. 'line' → logprob: -14.882216453552246
    10. '=str' → logprob: -15.757216453552246

Token 610: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. '):' → logprob: -10.250041961669922
    3. '):
' → logprob: -12.375041961669922
    4. ' )' → logprob: -13.625041961669922
    5. ')->' → logprob: -15.000041961669922
    6. '   ' → logprob: -15.000041961669922
    7. ',' → logprob: -15.750041961669922
    8. '):
' → logprob: -16.500041961669922
    9. ':' → logprob: -16.750041961669922
    10. '`)' → logprob: -17.625041961669922

Token 611: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20268724858760834
    2. '->' → logprob: -2.2026872634887695
    3. ' ->' → logprob: -2.7026872634887695
    4. '   ' → logprob: -6.3276872634887695
    5. ':
' → logprob: -6.5776872634887695
    6. '       ' → logprob: -6.8276872634887695
    7. ')' → logprob: -7.7026872634887695
    8. ')->' → logprob: -7.7026872634887695
    9. ',' → logprob: -8.07768726348877
    10. '(line' → logprob: -9.57768726348877

Token 612: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20242351293563843
    2. 'int' → logprob: -1.8274235725402832
    3. 'tuple' → logprob: -3.952423572540283
    4. 'None' → logprob: -7.077423572540283
    5. ' str' → logprob: -7.202423572540283
    6. 'list' → logprob: -7.202423572540283
    7. '(str' → logprob: -8.077423095703125
    8. '(int' → logprob: -8.827423095703125
    9. '[str' → logprob: -9.077423095703125
    10. ' int' → logprob: -9.077423095703125

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35132360458374023
    2. ':
' → logprob: -1.2263236045837402
    3. '       ' → logprob: -5.97632360458374
    4. '   ' → logprob: -8.851324081420898
    5. '):
' → logprob: -9.351324081420898
    6. ',' → logprob: -10.226324081420898
    7. ':
' → logprob: -11.476324081420898
    8. '{' → logprob: -11.601324081420898
    9. '[' → logprob: -11.726324081420898
    10. '():
' → logprob: -11.851324081420898

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027102099731564522
    2. 'n' → logprob: -3.777101993560791
    3. ' n' → logprob: -5.902101993560791
    4. 'parts' → logprob: -8.02710247039795
    5. ' parts' → logprob: -8.27710247039795
    6. '```' → logprob: -8.77710247039795
    7. 'tokens' → logprob: -8.77710247039795
    8. '   ' → logprob: -9.27710247039795
    9. 'num' → logprob: -10.52710247039795
    10. ',' → logprob: -11.40210247039795

Token 615: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14441139996051788
    2. 'parts' → logprob: -3.019411325454712
    3. ' n' → logprob: -3.519411325454712
    4. 'base' → logprob: -3.644411325454712
    5. 'num' → logprob: -4.769411563873291
    6. ' parts' → logprob: -4.894411563873291
    7. '       ' → logprob: -5.269411563873291
    8. ' base' → logprob: -6.019411563873291
    9. 'if' (adapté à ' if') → logprob: -6.144411563873291
    10. 'line' → logprob: -6.269411563873291

Token 616: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9311521649360657
    2. 'line' → logprob: -1.056152105331421
    3. ' line' → logprob: -1.556152105331421
    4. 'not' → logprob: -3.056152105331421
    5. '(line' → logprob: -10.55615234375
    6. ' ' → logprob: -10.80615234375
    7. 'len' → logprob: -11.05615234375
    8. ' len' → logprob: -11.05615234375
    9. '   ' → logprob: -12.93115234375
    10. '	line' → logprob: -12.93115234375

Token 617: ' ==' (ID: 951)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8597102165222168
    2. ' ==' → logprob: -1.1097102165222168
    3. '==' → logprob: -2.234710216522217
    4. '.startswith' → logprob: -2.609710216522217
    5. '.' → logprob: -2.734710216522217
    6. ' .' → logprob: -7.234710216522217
    7. ' in' → logprob: -7.484710216522217
    8. ' not' → logprob: -10.109710693359375
    9. ' =' → logprob: -10.234710693359375
    10. '.endswith' → logprob: -10.234710693359375

Token 618: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14869914948940277
    2. '""' → logprob: -2.2736990451812744
    3. '"":' → logprob: -3.6486990451812744
    4. ' "' → logprob: -5.0236992835998535
    5. ' ""' → logprob: -7.0236992835998535
    6. ''' → logprob: -7.6486992835998535
    7. '''' → logprob: -7.8986992835998535
    8. ' "":
' → logprob: -7.8986992835998535
    9. '":' → logprob: -9.148698806762695
    10. '"-' → logprob: -9.648698806762695

Token 619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030443478375673294
    2. 'END' → logprob: -4.1554436683654785
    3. '"' → logprob: -4.7804436683654785
    4. '":' → logprob: -5.4054436683654785
    5. '":
' → logprob: -8.28044319152832
    6. '#' → logprob: -8.65544319152832
    7. 'end' → logprob: -8.78044319152832
    8. '-' → logprob: -8.90544319152832
    9. '00' → logprob: -9.03044319152832
    10. 'EOF' → logprob: -9.53044319152832

Token 620: ' ' (ID: 220)
  Prédit: '":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.2681134045124054
    2. '":' → logprob: -1.518113374710083
    3. '"' → logprob: -5.018113613128662
    4. '":
' → logprob: -5.143113613128662
    5. '0' → logprob: -6.143113613128662
    6. ' "' → logprob: -6.768113613128662
    7. ' ":' → logprob: -8.768113136291504
    8. ' ' → logprob: -9.643113136291504
    9. '":

' → logprob: -10.893113136291504
    10. '\n' → logprob: -11.643113136291504

Token 621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.186122770188376e-05
    2. ' ' → logprob: -10.125091552734375
    3. '"' → logprob: -10.250091552734375
    4. '":' → logprob: -11.500091552734375
    5. '10' → logprob: -14.000091552734375
    6. '00' → logprob: -14.000091552734375
    7. '"):
' → logprob: -14.812591552734375
    8. '```' → logprob: -14.812591552734375
    9. '"):' → logprob: -14.812591552734375
    10. '
' → logprob: -15.000091552734375

Token 622: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.07573530822992325
    2. '":' → logprob: -2.700735330581665
    3. '":
' → logprob: -6.325735092163086
    4. '0' → logprob: -6.450735092163086
    5. '\n' → logprob: -6.700735092163086
    6. '"' → logprob: -6.825735092163086
    7. ' ' → logprob: -10.325735092163086
    8. ' "' → logprob: -10.825735092163086
    9. '":

' → logprob: -11.325735092163086
    10. '"):
' → logprob: -11.825735092163086

Token 623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1056833416223526
    2. ':' → logprob: -2.8556833267211914
    3. '       ' → logprob: -3.6056833267211914
    4. ':
' → logprob: -4.230683326721191
    5. ':return' → logprob: -8.355683326721191
    6. ',' → logprob: -8.480683326721191
    7. 'return' → logprob: -8.980683326721191
    8. ' return' → logprob: -8.980683326721191
    9. '<|end|>' → logprob: -9.480683326721191
    10. '
' → logprob: -9.730683326721191

Token 624: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004226916469633579
    2. ' return' → logprob: -5.7542266845703125
    3. '           ' → logprob: -6.8792266845703125
    4. 'raise' (adapté à ' raise') → logprob: -11.004226684570312
    5. '       ' → logprob: -14.129226684570312
    6. 'exit' → logprob: -14.379226684570312
    7. ':return' → logprob: -14.629226684570312
    8. '
' → logprob: -14.879226684570312
    9. '	return' → logprob: -15.254226684570312
    10. '{return' → logprob: -15.379226684570312

Token 625: ' Stop' (ID: 22535)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.9576715230941772
    2. ' Stop' → logprob: -1.2076715230941772
    3. 'Stop' → logprob: -1.7076715230941772
    4. ' EOF' → logprob: -2.082671642303467
    5. ' System' → logprob: -4.582671642303467
    6. 'System' → logprob: -7.457671642303467
    7. ' Value' → logprob: -8.332671165466309
    8. ' Keyboard' → logprob: -8.457671165466309
    9. 'Keyboard' → logprob: -9.332671165466309
    10. 'Value' → logprob: -9.832671165466309

Token 626: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -6.704273118884885e-07
    2. 'iteration' → logprob: -15.750000953674316
    3. 'Processing' → logprob: -15.750000953674316
    4. 'Execution' → logprob: -16.25
    5. ' iteration' → logprob: -16.875
    6. 'Iterations' → logprob: -16.875
    7. 'Iter' → logprob: -17.0
    8. 'Exception' → logprob: -17.125
    9. '_iteration' → logprob: -17.25
    10. 'Traversal' → logprob: -17.375

Token 627: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016238469630479813
    2. '<|end|>' → logprob: -4.891238689422607
    3. '        
' → logprob: -5.641238689422607
    4. '
' → logprob: -5.641238689422607
    5. '    
' → logprob: -7.766238689422607
    6. '  
' → logprob: -8.01623821258545
    7. '   ' → logprob: -8.39123821258545
    8. ' 
' → logprob: -9.01623821258545
    9. '      ' → logprob: -9.64123821258545
    10. '    ' → logprob: -10.01623821258545

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002086615888401866
    2. '        
' → logprob: -6.752086639404297
    3. '   ' → logprob: -7.877086639404297
    4. '
' → logprob: -9.377086639404297
    5. '```' → logprob: -9.502086639404297
    6. '    
' → logprob: -9.877086639404297
    7. ' ' → logprob: -10.127086639404297
    8. '    ' → logprob: -10.252086639404297
    9. '      ' → logprob: -10.252086639404297
    10. '  
' → logprob: -10.377086639404297

Token 629: ' base' (ID: 3611)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.9035170078277588
    2. ' base' → logprob: -1.5285170078277588
    3. '       ' → logprob: -1.7785170078277588
    4. ' n' → logprob: -2.028517007827759
    5. 'n' → logprob: -3.653517007827759
    6. ' num' → logprob: -3.903517007827759
    7. 'num' → logprob: -4.77851676940918
    8. 'parts' → logprob: -5.02851676940918
    9. 'base' (adapté à ' base') → logprob: -5.15351676940918
    10. ' a' → logprob: -5.65351676940918

Token 630: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006528667290695012
    2. ' ,' → logprob: -7.62565279006958
    3. '_,' → logprob: -8.875653266906738
    4. '_str' → logprob: -11.625653266906738
    5. '=' → logprob: -12.625653266906738
    6. ',b' → logprob: -12.750653266906738
    7. ',num' → logprob: -13.625653266906738
    8. 's' → logprob: -13.750653266906738
    9. ',int' → logprob: -14.000653266906738
    10. ',s' → logprob: -14.000653266906738

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -11.000020027160645
    3. '=' → logprob: -13.250020027160645
    4. ',b' → logprob: -14.750020027160645
    5. ',n' → logprob: -15.500020027160645
    6. ',num' → logprob: -15.750020027160645
    7. ' =' → logprob: -16.875019073486328
    8. ',input' → logprob: -17.125019073486328
    9. '_,' → logprob: -17.375019073486328
    10. ',
' → logprob: -17.500019073486328

Token 632: ' M' (ID: 391)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3211812376976013
    2. ' number' → logprob: -2.071181297302246
    3. ' num' → logprob: -2.446181297302246
    4. 'n' → logprob: -3.321181297302246
    5. 'num' → logprob: -3.821181297302246
    6. 'number' → logprob: -5.946181297302246
    7. ' factorial' → logprob: -7.571181297302246
    8. ' ' → logprob: -8.071181297302246
    9. ' value' → logprob: -8.571181297302246
    10. ' rest' → logprob: -9.196181297302246

Token 633: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2598041892051697
    2. ' =' → logprob: -1.5098042488098145
    3. '=' → logprob: -5.5098042488098145
    4. 'str' → logprob: -6.2598042488098145
    5. '_num' → logprob: -6.8848042488098145
    6. ',' → logprob: -8.134803771972656
    7. '_val' → logprob: -8.509803771972656
    8. '_n' → logprob: -8.884803771972656
    9. '_value' → logprob: -9.759803771972656
    10. 'num' → logprob: -10.384803771972656

Token 634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. '=line' → logprob: -15.326414108276367
    4. ',' → logprob: -15.576414108276367
    5. '    ' → logprob: -17.076414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '＝' → logprob: -17.701414108276367
    8. '   ' → logprob: -17.826414108276367
    9. ')' → logprob: -18.701414108276367
    10. '	' → logprob: -18.826414108276367

Token 635: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.25192928314208984
    2. 'line' → logprob: -1.5019292831420898
    3. '	line' → logprob: -16.126930236816406
    4. '=line' → logprob: -16.876930236816406
    5. '   ' → logprob: -17.751930236816406
    6. '(line' → logprob: -19.376930236816406
    7. '[line' → logprob: -19.626930236816406
    8. '    ' → logprob: -20.501930236816406
    9. '_line' → logprob: -20.876930236816406
    10. ' ' → logprob: -20.876930236816406

Token 636: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '＝' → logprob: -17.13604736328125
    4. ')=' → logprob: -18.63604736328125
    5. '=line' → logprob: -18.63604736328125
    6. ',' → logprob: -18.88604736328125
    7. '.=' → logprob: -19.01104736328125
    8. '=
' → logprob: -19.38604736328125
    9. ')' → logprob: -19.63604736328125
    10. '_=' → logprob: -19.63604736328125

Token 637: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.868328920158092e-05
    2. '()' → logprob: -10.625028610229492
    3. '.split' → logprob: -12.625028610229492
    4. '.' → logprob: -14.625028610229492
    5. '(' → logprob: -15.875028610229492
    6. '=' → logprob: -16.000028610229492
    7. ' ().' → logprob: -16.125028610229492
    8. '()
' → logprob: -16.250028610229492
    9. 'split' → logprob: -16.375028610229492
    10. ').' → logprob: -17.125028610229492

Token 638: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.375
    3. 'spl' → logprob: -18.375
    4. 'strip' → logprob: -18.75
    5. '(split' → logprob: -19.0
    6. 'sp' → logprob: -19.5
    7. 's' → logprob: -20.125
    8. 'rstrip' → logprob: -21.25
    9. '.split' → logprob: -21.625
    10. 'plit' → logprob: -21.75

Token 639: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00335534755140543
    2. '('' → logprob: -5.753355503082275
    3. '("' → logprob: -9.253355026245117
    4. '(' → logprob: -9.753355026245117
    5. '()
' → logprob: -11.628355026245117
    6. ''' → logprob: -11.878355026245117
    7. '"' → logprob: -13.503355026245117
    8. '(max' → logprob: -13.628355026245117
    9. '(None' → logprob: -13.753355026245117
    10. '(),' → logprob: -14.503355026245117

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018278943374753
    2. ' base' → logprob: -4.393279075622559
    3. ' M' → logprob: -5.643279075622559
    4. 'base' → logprob: -6.768279075622559
    5. ',' → logprob: -7.768279075622559
    6. ' ' → logprob: -8.768279075622559
    7. 'M' → logprob: -9.018279075622559
    8. '        
' → logprob: -9.018279075622559
    9. ' n' → logprob: -9.893279075622559
    10. 'n' → logprob: -10.643279075622559

Token 641: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' (adapté à ' base') → logprob: -0.024743007495999336
    2. ' base' → logprob: -3.89974308013916
    3. 'b' → logprob: -6.14974308013916
    4. 'M' → logprob: -7.02474308013916
    5. '       ' → logprob: -7.52474308013916
    6. 'B' → logprob: -7.89974308013916
    7. ' M' → logprob: -9.14974308013916
    8. 'n' → logprob: -9.89974308013916
    9. ' b' → logprob: -10.89974308013916
    10. 'self' → logprob: -11.39974308013916

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12785041332244873
    2. ' =' → logprob: -2.1278505325317383
    3. ',' → logprob: -7.002850532531738
    4. '=int' → logprob: -11.377850532531738
    5. 'int' → logprob: -14.502850532531738
    6. ')' → logprob: -15.377850532531738
    7. ',int' → logprob: -16.502849578857422
    8. '_int' → logprob: -16.752849578857422
    9. '=
' → logprob: -16.877849578857422
    10. ' ,' → logprob: -17.002849578857422

Token 643: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00162662158254534
    2. 'self' → logprob: -6.501626491546631
    3. ' int' → logprob: -9.001626968383789
    4. ' self' → logprob: -13.751626968383789
    5. '       ' → logprob: -19.37662696838379
    6. '   ' → logprob: -20.12662696838379
    7. '(int' → logprob: -21.00162696838379
    8. '8' → logprob: -21.25162696838379
    9. '<int' → logprob: -21.25162696838379
    10. '=int' → logprob: -21.37662696838379

Token 644: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. 'base' → logprob: -14.250001907348633
    4. '(
' → logprob: -20.000001907348633
    5. '(Base' → logprob: -20.000001907348633
    6. ' base' → logprob: -20.125001907348633
    7. '(b' → logprob: -20.375001907348633
    8. '(BASE' → logprob: -20.625001907348633
    9. '(M' → logprob: -21.375001907348633
    10. ' (' → logprob: -22.875001907348633

Token 645: '_str' (ID: 6182)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.6361571550369263
    2. '_str' → logprob: -0.7611571550369263
    3. ')' → logprob: -5.761157035827637
    4. 'base' → logprob: -8.761157035827637
    5. 'str' → logprob: -9.136157035827637
    6. '_base' → logprob: -9.386157035827637
    7. '(' → logprob: -11.386157035827637
    8. ')
' → logprob: -11.386157035827637
    9. 'Str' → logprob: -11.761157035827637
    10. '(str' → logprob: -12.261157035827637

Token 646: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5771424174308777
    2. ')' → logprob: -0.8271424174308777
    3. ',' → logprob: -6.827142238616943
    4. '       ' → logprob: -9.702142715454102
    5. ')
' → logprob: -10.077142715454102
    6. '),' → logprob: -11.452142715454102
    7. ' )
' → logprob: -13.327142715454102
    8. ');' → logprob: -14.702142715454102
    9. ')

' → logprob: -14.952142715454102
    10. ' )' → logprob: -15.202142715454102

Token 647: '       ' (ID: 309)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3587022125720978
    2. ' M' → logprob: -1.4837021827697754
    3. '       ' → logprob: -2.7337021827697754
    4. 'n' → logprob: -4.858702182769775
    5. 'num' → logprob: -6.858702182769775
    6. ' n' → logprob: -7.233702182769775
    7. ' num' → logprob: -9.608702659606934
    8. 'm' → logprob: -10.983702659606934
    9. 'number' → logprob: -11.858702659606934
    10. 'N' → logprob: -12.108702659606934

Token 648: ' converter' (ID: 41696)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.001296073431149125
    2. 'n' → logprob: -7.626296043395996
    3. 'num' → logprob: -7.626296043395996
    4. '       ' → logprob: -9.376296043395996
    5. ' M' → logprob: -9.376296043395996
    6. 'm' → logprob: -9.626296043395996
    7. 'N' → logprob: -9.626296043395996
    8. 'number' → logprob: -11.626296043395996
    9. 'val' → logprob: -13.376296043395996
    10. '   ' → logprob: -13.501296043395996

Token 649: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195613503456116
    2. '=' → logprob: -1.5019561052322388
    3. '.' → logprob: -10.62695598602295
    4. '.=' → logprob: -13.37695598602295
    5. ' ' → logprob: -14.50195598602295
    6. ')' → logprob: -15.50195598602295
    7. ',' → logprob: -15.75195598602295
    8. '.convert' → logprob: -16.626956939697266
    9. '＝' → logprob: -16.876956939697266
    10. ' =
' → logprob: -16.876956939697266

Token 650: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.004114492796361446
    2. 'Factor' → logprob: -6.129114627838135
    3. ' Base' → logprob: -6.254114627838135
    4. ' Factor' → logprob: -12.504114151000977
    5. '	Base' → logprob: -14.379114151000977
    6. 'Fact' → logprob: -15.504114151000977
    7. ' ' → logprob: -16.629114151000977
    8. '
' → logprob: -16.629114151000977
    9. 'self' → logprob: -16.754114151000977
    10. '_Base' → logprob: -17.254114151000977

Token 651: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -1.9361264946837764e-07
    2. 'converter' → logprob: -16.5
    3. ' Converter' → logprob: -17.125
    4. 'Convert' → logprob: -17.125
    5. '_converter' → logprob: -17.875
    6. 'Calculator' → logprob: -19.5
    7. 'Converters' → logprob: -19.75
    8. 'Con' → logprob: -20.5
    9. 'Base' → logprob: -20.5
    10. 'Convers' → logprob: -20.5

Token 652: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.023416679352521896
    2. 'base' → logprob: -3.773416757583618
    3. '(' → logprob: -8.773416519165039
    4. '
' → logprob: -12.398416519165039
    5. ' base' → logprob: -12.648416519165039
    6. '(M' → logprob: -13.023416519165039
    7. '36' → logprob: -13.273416519165039
    8. '(
' → logprob: -13.898416519165039
    9. '10' → logprob: -14.023416519165039
    10. '8' → logprob: -14.273416519165039

Token 653: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142580568790436
    2. ')
' → logprob: -1.7014257907867432
    3. ')
' → logprob: -12.201425552368164
    4. ')

' → logprob: -12.576425552368164
    5. ' )' → logprob: -13.076425552368164
    6. ' )
' → logprob: -13.451425552368164
    7. '       ' → logprob: -15.201425552368164
    8. ')return' → logprob: -16.576425552368164
    9. '),' → logprob: -16.701425552368164
    10. ' ' → logprob: -17.576425552368164

Token 654: '       ' (ID: 309)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3798479437828064
    2. 'M' → logprob: -1.2548480033874512
    3. '       ' → logprob: -3.504848003387451
    4. 'n' → logprob: -8.129847526550293
    5. ' n' → logprob: -8.379847526550293
    6. 'num' → logprob: -8.629847526550293
    7. ' num' → logprob: -9.754847526550293
    8. ',' → logprob: -11.004847526550293
    9. ' number' → logprob: -11.004847526550293
    10. '```' → logprob: -11.129847526550293

Token 655: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.010172615759074688
    2. 'num' → logprob: -5.0101728439331055
    3. 'n' → logprob: -6.3851728439331055
    4. 'number' → logprob: -7.3851728439331055
    5. 'N' → logprob: -8.010172843933105
    6. 'val' → logprob: -8.260172843933105
    7. 'm' → logprob: -8.635172843933105
    8. 'result' → logprob: -9.635172843933105
    9. 'max' → logprob: -10.010172843933105
    10. ' M' → logprob: -10.135172843933105

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3879035413265228
    2. '=' → logprob: -1.1379035711288452
    3. '_val' → logprob: -7.012903690338135
    4. '_int' → logprob: -9.512903213500977
    5. '=int' → logprob: -10.887903213500977
    6. '_num' → logprob: -11.262903213500977
    7. 'val' → logprob: -11.762903213500977
    8. '_str' → logprob: -12.387903213500977
    9. ',' → logprob: -12.512903213500977
    10. 'int' → logprob: -12.762903213500977

Token 657: ' converter' (ID: 41696)
  Prédit: 'converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'converter' → logprob: -0.017421318218111992
    2. 'int' → logprob: -4.392421245574951
    3. 'self' → logprob: -5.392421245574951
    4. ' converter' → logprob: -8.26742172241211
    5. 'con' → logprob: -10.26742172241211
    6. ' int' → logprob: -10.51742172241211
    7. ' self' → logprob: -11.39242172241211
    8. 'convert' → logprob: -11.89242172241211
    9. '   ' → logprob: -13.26742172241211
    10. 'conv' → logprob: -13.64242172241211

Token 658: '.str' (ID: 13858)
  Prédit: '.str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.str' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. ' .' → logprob: -14.750000953674316
    4. 'str' → logprob: -17.75
    5. '.int' → logprob: -20.25
    6. '   ' → logprob: -21.75
    7. '.strptime' → logprob: -22.125
    8. '.Str' → logprob: -22.25
    9. ' str' → logprob: -23.125
    10. ':str' → logprob: -23.125

Token 659: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. 'to' → logprob: -14.875000953674316
    3. 't' → logprob: -15.750000953674316
    4. 'toi' → logprob: -17.875
    5. 'To' → logprob: -20.0
    6. '_TO' → logprob: -20.625
    7. 'o' → logprob: -21.375
    8. 'totime' → logprob: -21.75
    9. 'toq' → logprob: -21.875
    10. 'tol' → logprob: -22.375

Token 660: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.3134121000766754
    2. 'int' → logprob: -1.313412070274353
    3. 'val' → logprob: -9.938411712646484
    4. 'nt' → logprob: -9.938411712646484
    5. 'Int' → logprob: -10.688411712646484
    6. ' int' → logprob: -11.438411712646484
    7. 'str' → logprob: -11.938411712646484
    8. '(M' → logprob: -12.688411712646484
    9. '(int' → logprob: -13.563411712646484
    10. '_str' → logprob: -13.563411712646484

Token 661: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. '((' → logprob: -18.5
    4. '(
' → logprob: -19.5
    5. ' (' → logprob: -19.75
    6. '(S' → logprob: -22.25
    7. '(m' → logprob: -22.375
    8. 'M' → logprob: -22.5
    9. '(C' → logprob: -22.875
    10. '(B' → logprob: -23.375

Token 662: '_str' (ID: 6182)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.34012168645858765
    2. ')' → logprob: -1.3401217460632324
    3. '_str' → logprob: -4.715121746063232
    4. ')
' → logprob: -5.590121746063232
    5. ')(' → logprob: -5.590121746063232
    6. ',' → logprob: -5.965121746063232
    7. ' (' → logprob: -6.090121746063232
    8. '(' → logprob: -6.340121746063232
    9. '       ' → logprob: -7.340121746063232
    10. 'M' → logprob: -7.590121746063232

Token 663: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10053574293851852
    2. ')' → logprob: -2.3505356311798096
    3. '       ' → logprob: -8.35053539276123
    4. ')
' → logprob: -9.35053539276123
    5. ')return' → logprob: -12.97553539276123
    6. ')

' → logprob: -13.22553539276123
    7. ')`
' → logprob: -14.47553539276123
    8. '
' → logprob: -14.97553539276123
    9. ' )
' → logprob: -15.47553539276123
    10. ')`' → logprob: -16.850536346435547

Token 664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003502191975712776
    2. '
' → logprob: -5.753502368927002
    3. '        
' → logprob: -9.003501892089844
    4. '   ' → logprob: -9.753501892089844
    5. 'n' → logprob: -10.378501892089844
    6. '```' → logprob: -10.378501892089844
    7. 'return' → logprob: -10.878501892089844
    8. ' 
' → logprob: -12.003501892089844
    9. ' zeros' → logprob: -12.128501892089844
    10. '0' → logprob: -12.253501892089844

Token 665: ' calculator' (ID: 44484)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.0145100355148315
    2. 'left' → logprob: -1.6395100355148315
    3. 'count' → logprob: -1.7645100355148315
    4. 'result' → logprob: -2.764510154724121
    5. 'n' → logprob: -3.139510154724121
    6. 'max' → logprob: -3.264510154724121
    7. 'factor' → logprob: -3.639510154724121
    8. 'l' → logprob: -3.764510154724121
    9. 'calculator' (adapté à ' calculator') → logprob: -4.139510154724121
    10. 'lo' → logprob: -4.139510154724121

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043048176914453506
    2. '=' → logprob: -3.168048143386841
    3. '.' → logprob: -10.543047904968262
    4. '.trailing' → logprob: -10.918047904968262
    5. ' ' → logprob: -13.543047904968262
    6. '.=' → logprob: -14.668047904968262
    7. '   ' → logprob: -15.168047904968262
    8. '  ' → logprob: -15.293047904968262
    9. '	' → logprob: -15.293047904968262
    10. ' .' → logprob: -15.418047904968262

Token 667: ' Factor' (ID: 63743)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.00011117222311440855
    2. ' Factor' → logprob: -9.12511157989502
    3. 'Fact' → logprob: -13.37511157989502
    4. 'Trailing' → logprob: -14.62511157989502
    5. '   ' → logprob: -16.375110626220703
    6. '
' → logprob: -16.500110626220703
    7. 'Factory' → logprob: -17.375110626220703
    8. '_factor' → logprob: -17.625110626220703
    9. 'Factors' → logprob: -18.375110626220703
    10. 'factor' → logprob: -18.500110626220703

Token 668: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.02079143188893795
    2. 'al' → logprob: -3.895791530609131
    3. 'onal' → logprob: -8.520791053771973
    4. 'Trailing' → logprob: -11.020791053771973
    5. 'Factor' → logprob: -11.395791053771973
    6. 'orial' → logprob: -11.895791053771973
    7. 'ional' → logprob: -12.645791053771973
    8. 'rial' → logprob: -13.270791053771973
    9. 'all' → logprob: -13.395791053771973
    10. 'arial' → logprob: -13.645791053771973

Token 669: 'Trailing' (ID: 144756)
  Prédit: 'Trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trailing' → logprob: -3.128163257315464e-07
    2. 'Zeros' → logprob: -16.0
    3. ' trailing' → logprob: -16.375
    4. 'Trending' → logprob: -16.875
    5. 'Trail' → logprob: -17.75
    6. '.trailing' → logprob: -18.125
    7. '
' → logprob: -18.125
    8. '...' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. '_' → logprob: -18.625

Token 670: 'Zeros' (ID: 163050)
  Prédit: 'Zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zeros' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -12.12501049041748
    3. 'zeros' → logprob: -13.37501049041748
    4. ' zeros' → logprob: -13.75001049041748
    5. '   ' → logprob: -14.25001049041748
    6. 'Zero' → logprob: -14.37501049041748
    7. 'Z' → logprob: -15.00001049041748
    8. '```' → logprob: -15.50001049041748
    9. '0' → logprob: -15.75001049041748
    10. '       ' → logprob: -16.125011444091797

Token 671: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: 0.0
    2. ' Calculator' → logprob: -17.125
    3. '_C' → logprob: -17.625
    4. '_cal' → logprob: -18.125
    5. '(C' → logprob: -18.375
    6. 'calculator' → logprob: -18.75
    7. '```' → logprob: -19.875
    8. 'Computer' → logprob: -20.0
    9. 'Counter' → logprob: -20.25
    10. 'Analyzer' → logprob: -20.375

Token 672: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.00012403888104017824
    2. 'base' → logprob: -9.000123977661133
    3. ' base' → logprob: -15.375123977661133
    4. '(' → logprob: -15.875123977661133
    5. '(
' → logprob: -16.375123977661133
    6. '
' → logprob: -17.125123977661133
    7. '(con' → logprob: -17.750123977661133
    8. ' (' → logprob: -17.750123977661133
    9. '(b' → logprob: -18.000123977661133
    10. '```' → logprob: -18.000123977661133

Token 673: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5500204563140869
    2. ')' → logprob: -0.9250204563140869
    3. '       ' → logprob: -3.675020456314087
    4. '
' → logprob: -7.800020217895508
    5. ',' → logprob: -7.800020217895508
    6. ')
' → logprob: -8.550020217895508
    7. ')return' → logprob: -9.800020217895508
    8. '),' → logprob: -10.425020217895508
    9. 'return' → logprob: -10.550020217895508
    10. '<|end|>' → logprob: -11.050020217895508

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01907971315085888
    2. 'n' → logprob: -4.394079685211182
    3. 'count' → logprob: -5.519079685211182
    4. 'result' → logprob: -6.144079685211182
    5. 'return' → logprob: -9.64408016204834
    6. ' n' → logprob: -10.01908016204834
    7. '```' → logprob: -10.01908016204834
    8. 'zeros' → logprob: -10.39408016204834
    9. '        
' → logprob: -10.51908016204834
    10. 'answer' → logprob: -10.51908016204834

Token 675: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.026002071797847748
    2. 'result' → logprob: -3.7760021686553955
    3. '       ' → logprob: -6.401001930236816
    4. 'count' → logprob: -7.651001930236816
    5. 'answer' → logprob: -8.276001930236816
    6. 'zeros' → logprob: -8.776001930236816
    7. 'res' → logprob: -9.151001930236816
    8. 'n' → logprob: -10.151001930236816
    9. ' return' → logprob: -10.651001930236816
    10. 'ans' → logprob: -11.526001930236816

Token 676: ' calculator' (ID: 44484)
  Prédit: 'calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculator' → logprob: -3.547789674485102e-05
    2. ' calculator' → logprob: -10.250035285949707
    3. 'cal' → logprob: -17.750036239624023
    4. '
' → logprob: -18.000036239624023
    5. ' ' → logprob: -20.000036239624023
    6. 'converter' → logprob: -20.250036239624023
    7. '   ' → logprob: -20.375036239624023
    8. 'calendar' → logprob: -20.500036239624023
    9. 'calcul' → logprob: -21.375036239624023
    10. '```' → logprob: -21.500036239624023

Token 677: '.trailing' (ID: 166440)
  Prédit: '.trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.trailing' → logprob: -0.0006220113136805594
    2. '.tr' → logprob: -7.875621795654297
    3. '.TRAILING' → logprob: -9.250621795654297
    4. '.' → logprob: -9.500621795654297
    5. '.tight' → logprob: -10.875621795654297
    6. '.timedelta' → logprob: -11.250621795654297
    7. ' .' → logprob: -11.875621795654297
    8. '.rstrip' → logprob: -12.000621795654297
    9. '.zeros' → logprob: -12.125621795654297
    10. '.leading' → logprob: -12.875621795654297

Token 678: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. '_zero' → logprob: -15.250000953674316
    3. ' _' → logprob: -16.0
    4. 'zeros' → logprob: -17.125
    5. ')_' → logprob: -17.75
    6. ''_' → logprob: -18.125
    7. '\' → logprob: -18.125
    8. '```' → logprob: -18.125
    9. '_under' → logprob: -18.25
    10. '_
' → logprob: -18.25

Token 679: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.011050177738070488
    2. '_' → logprob: -4.511050224304199
    3. ' zeros' → logprob: -13.2610502243042
    4. '0' → logprob: -14.8860502243042
    5. 'Zeros' → logprob: -16.386049270629883
    6. '```' → logprob: -16.511049270629883
    7. '_zero' → logprob: -17.386049270629883
    8. 'zero' → logprob: -17.511049270629883
    9. '.zeros' → logprob: -17.761049270629883
    10. '_
' → logprob: -18.886049270629883

Token 680: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.246537173457909e-06
    2. '(n' → logprob: -13.625003814697266
    3. 'In' → logprob: -14.125003814697266
    4. 'in' → logprob: -14.500003814697266
    5. 's' → logprob: -15.000003814697266
    6. '```' → logprob: -15.125003814697266
    7. '_factor' → logprob: -15.375003814697266
    8. '_' → logprob: -15.875003814697266
    9. '   ' → logprob: -15.875003814697266
    10. '
' → logprob: -16.125003814697266

Token 681: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0011709370883181691
    2. 'factor' → logprob: -6.751171112060547
    3. ' factorial' → logprob: -15.126171112060547
    4. '_' → logprob: -15.376171112060547
    5. 'Factor' → logprob: -16.501171112060547
    6. '_fact' → logprob: -16.876171112060547
    7. '
' → logprob: -17.751171112060547
    8. 'f' → logprob: -18.626171112060547
    9. '.factor' → logprob: -18.626171112060547
    10. '   ' → logprob: -18.751171112060547

Token 682: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.2014244645833969
    2. 'al' → logprob: -1.701424479484558
    3. '_' → logprob: -12.326424598693848
    4. '   ' → logprob: -13.701424598693848
    5. 'nal' → logprob: -13.826424598693848
    6. 'orial' → logprob: -14.451424598693848
    7. 'ional' → logprob: -14.576424598693848
    8. '```' → logprob: -15.076424598693848
    9. 'onal' → logprob: -15.076424598693848
    10. '**' → logprob: -15.326424598693848

Token 683: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.875007629394531
    3. '(
' → logprob: -14.125007629394531
    4. ' (' → logprob: -16.12500762939453
    5. 'M' → logprob: -16.87500762939453
    6. '((' → logprob: -17.62500762939453
    7. ' M' → logprob: -19.25000762939453
    8. '(C' → logprob: -20.50000762939453
    9. '(

' → logprob: -20.62500762939453
    10. '(m' → logprob: -20.75000762939453

Token 684: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -14.000005722045898
    4. '))' → logprob: -16.0000057220459
    5. '       ' → logprob: -16.2500057220459
    6. ')return' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.6250057220459
    8. '())' → logprob: -17.6250057220459
    9. '}' → logprob: -17.7500057220459
    10. ')

' → logprob: -17.8750057220459

Token 685: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.643152740551159e-05
    2. '   ' → logprob: -10.625036239624023
    3. ' def' → logprob: -11.750036239624023
    4. '#' → logprob: -13.250036239624023
    5. 'while' → logprob: -14.250036239624023
    6. 'import' → logprob: -14.750036239624023
    7. 'if' → logprob: -14.875036239624023
    8. 'c' → logprob: -15.000036239624023
    9. '	def' → logprob: -15.625036239624023
    10. '  ' → logprob: -16.250036239624023

Token 687: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.57840496301651
    2. 'main' → logprob: -1.0784049034118652
    3. 'solve' → logprob: -2.9534049034118652
    4. ' main' → logprob: -3.7034049034118652
    5. 'process' → logprob: -4.203404903411865
    6. ' run' → logprob: -5.328404903411865
    7. ' solve' → logprob: -6.328404903411865
    8. ' process' → logprob: -8.078405380249023
    9. 'read' → logprob: -8.203405380249023
    10. 'def' → logprob: -9.953405380249023

Token 688: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012654557824134827
    2. '(' → logprob: -4.387654781341553
    3. 'self' → logprob: -9.512654304504395
    4. '   ' → logprob: -10.262654304504395
    5. '(
' → logprob: -10.887654304504395
    6. '       ' → logprob: -12.262654304504395
    7. ' (' → logprob: -12.262654304504395
    8. '():' → logprob: -12.762654304504395
    9. ' ' → logprob: -13.762654304504395
    10. '_' → logprob: -13.887654304504395

Token 689: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22623515129089355
    2. '):
' → logprob: -1.8512351512908936
    3. 'self' → logprob: -3.3512351512908936
    4. ',' → logprob: -5.351235389709473
    5. '(self' → logprob: -5.601235389709473
    6. '   ' → logprob: -6.726235389709473
    7. '       ' → logprob: -8.226235389709473
    8. '):
' → logprob: -9.351235389709473
    9. ')' → logprob: -9.476235389709473
    10. ')(' → logprob: -9.726235389709473

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073680877685546875
    2. '   ' → logprob: -5.007368087768555
    3. 'import' → logprob: -8.882368087768555
    4. '```' → logprob: -8.882368087768555
    5. 'self' → logprob: -9.132368087768555
    6. ' while' → logprob: -9.507368087768555
    7. 'while' → logprob: -9.632368087768555
    8. '
' → logprob: -10.382368087768555
    9. '    ' → logprob: -11.007368087768555
    10. ' self' → logprob: -11.257368087768555

Token 691: ' import' (ID: 1588)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5488867163658142
    2. 'import' (adapté à ' import') → logprob: -1.048886775970459
    3. ' while' → logprob: -2.798886775970459
    4. ' import' → logprob: -5.048886775970459
    5. 'try' → logprob: -5.673886775970459
    6. '```' → logprob: -7.423886775970459
    7. '       ' → logprob: -7.798886775970459
    8. '
' → logprob: -8.1738862991333
    9. ' try' → logprob: -10.0488862991333
    10. '   ' → logprob: -11.9238862991333

Token 692: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20141568779945374
    2. ' sys' → logprob: -1.7014156579971313
    3. '=sys' → logprob: -13.326416015625
    4. '	sys' → logprob: -14.201416015625
    5. 'stdin' → logprob: -17.701416015625
    6. '(sys' → logprob: -18.826416015625
    7. '```' → logprob: -19.451416015625
    8. '
' → logprob: -19.701416015625
    9. '.sys' → logprob: -19.826416015625
    10. '_sys' → logprob: -19.951416015625

Token 693: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005933417472988367
    2. '
' → logprob: -5.6309332847595215
    3. 'for' → logprob: -7.2559332847595215
    4. '        
' → logprob: -7.3809332847595215
    5. ' for' → logprob: -7.8809332847595215
    6. '<|end|>' → logprob: -7.8809332847595215
    7. '```' → logprob: -9.63093376159668
    8. ',' → logprob: -9.88093376159668
    9. '  
' → logprob: -10.38093376159668
    10. '   ' → logprob: -10.75593376159668

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00472061475738883
    2. '
' → logprob: -6.004720687866211
    3. 'for' → logprob: -6.504720687866211
    4. ' for' → logprob: -8.004720687866211
    5. '   ' → logprob: -8.629720687866211
    6. '```' → logprob: -8.754720687866211
    7. '        
' → logprob: -10.004720687866211
    8. 'while' → logprob: -11.629720687866211
    9. ',' → logprob: -12.254720687866211
    10. '           ' → logprob: -13.254720687866211

Token 695: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006399515550583601
    2. ' for' → logprob: -5.256399631500244
    3. '       ' → logprob: -6.756399631500244
    4. '   ' → logprob: -14.131399154663086
    5. '	for' → logprob: -14.631399154663086
    6. '
' → logprob: -14.881399154663086
    7. '```' → logprob: -17.756399154663086
    8. '        
' → logprob: -17.881399154663086
    9. 'while' → logprob: -18.131399154663086
    10. ' ' → logprob: -18.256399154663086

Token 696: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0024763736873865128
    2. 'line' → logprob: -6.002476215362549
    3. '	line' → logprob: -14.627476692199707
    4. '(line' → logprob: -16.87747573852539
    5. ' lin' → logprob: -17.00247573852539
    6. '#line' → logprob: -17.87747573852539
    7. 'lin' → logprob: -18.12747573852539
    8. '_line' → logprob: -18.37747573852539
    9. ' ' → logprob: -18.50247573852539
    10. '   ' → logprob: -19.00247573852539

Token 697: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00026264708139933646
    2. 'in' → logprob: -8.250262260437012
    3. '	in' → logprob: -14.750262260437012
    4. ' ' → logprob: -15.250262260437012
    5. 'import' → logprob: -16.000263214111328
    6. ' =' → logprob: -16.375263214111328
    7. '<|end|>' → logprob: -16.750263214111328
    8. '       ' → logprob: -16.750263214111328
    9. '        ' → logprob: -17.000263214111328
    10. '    ' → logprob: -17.250263214111328

Token 698: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12692873179912567
    2. ' sys' → logprob: -2.1269288063049316
    3. '=sys' → logprob: -14.876928329467773
    4. '(sys' → logprob: -15.751928329467773
    5. '	sys' → logprob: -16.376928329467773
    6. 'import' → logprob: -19.626928329467773
    7. 'stdin' → logprob: -19.626928329467773
    8. 's' → logprob: -20.251928329467773
    9. 'Sys' → logprob: -20.251928329467773
    10. '_sys' → logprob: -20.501928329467773

Token 699: '.stdin' (ID: 93480)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7583519816398621
    2. '.stdin' → logprob: -0.8833519816398621
    3. 'stdin' → logprob: -2.383352041244507
    4. '       ' → logprob: -3.883352041244507
    5. ' in' → logprob: -6.133351802825928
    6. '           ' → logprob: -6.758351802825928
    7. '(stdin' → logprob: -8.008352279663086
    8. 'sys' → logprob: -8.133352279663086
    9. 'import' → logprob: -8.508352279663086
    10. '=sys' → logprob: -8.633352279663086

Token 700: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28710293769836426
    2. ':' → logprob: -2.1621029376983643
    3. '.readline' → logprob: -2.2871029376983643
    4. ':
' → logprob: -4.037102699279785
    5. 'in' → logprob: -5.287102699279785
    6. '.rstrip' → logprob: -6.287102699279785
    7. '<|end|>' → logprob: -6.287102699279785
    8. '.' → logprob: -6.412102699279785
    9. '       ' → logprob: -7.037102699279785
    10. '   ' → logprob: -7.162102699279785

Token 701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.9054008084349334e-05
    2. '<|end|>' → logprob: -11.250039100646973
    3. '       ' → logprob: -12.000039100646973
    4. '	       ' → logprob: -12.375039100646973
    5. '```' → logprob: -13.000039100646973
    6. '<|end|>' → logprob: -13.000039100646973
    7. '          ' → logprob: -13.000039100646973
    8. ' if' → logprob: -13.375039100646973
    9. '   ' → logprob: -13.625039100646973
    10. '               ' → logprob: -14.125039100646973

Token 702: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7206782102584839
    2. 'try' → logprob: -0.7206782102584839
    3. 'line' (adapté à ' line') → logprob: -4.345678329467773
    4. ' try' → logprob: -4.470678329467773
    5. '               ' → logprob: -6.345678329467773
    6. ' line' → logprob: -6.970678329467773
    7. '       ' → logprob: -10.470678329467773
    8. '   ' → logprob: -11.220678329467773
    9. '	try' → logprob: -11.970678329467773
    10. '```' → logprob: -12.470678329467773

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002907465910539031
    2. ' =' → logprob: -5.8779072761535645
    3. '=line' → logprob: -9.252907752990723
    4. '.strip' → logprob: -12.502907752990723
    5. '_strip' → logprob: -13.252907752990723
    6. '.rstrip' → logprob: -15.002907752990723
    7. 'rstrip' → logprob: -15.127907752990723
    8. 'strip' → logprob: -15.252907752990723
    9. '＝' → logprob: -15.627907752990723
    10. '=
' → logprob: -16.252906799316406

Token 704: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.493430894101039e-05
    2. ' line' → logprob: -9.500075340270996
    3. '(line' → logprob: -20.37507438659668
    4. '=line' → logprob: -20.62507438659668
    5. '	line' → logprob: -21.25007438659668
    6. '#line' → logprob: -23.12507438659668
    7. ' ' → logprob: -23.87507438659668
    8. '[line' → logprob: -24.25007438659668
    9. '           ' → logprob: -24.50007438659668
    10. 'lines' → logprob: -25.12507438659668

Token 705: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05679517984390259
    2. '.rstrip' → logprob: -3.056795120239258
    3. '.' → logprob: -5.181795120239258
    4. 'strip' → logprob: -6.306795120239258
    5. 'rstrip' → logprob: -7.306795120239258
    6. '.readline' → logprob: -10.806795120239258
    7. '_strip' → logprob: -11.306795120239258
    8. ' strip' → logprob: -11.431795120239258
    9. ' .' → logprob: -11.931795120239258
    10. '[:-' → logprob: -12.931795120239258

Token 706: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06248317286372185
    2. '()' → logprob: -3.187483072280884
    3. '()
' → logprob: -4.312483310699463
    4. '<|end|>' → logprob: -6.562483310699463
    5. '       ' → logprob: -6.687483310699463
    6. '<|end|>' → logprob: -7.437483310699463
    7. 'if' → logprob: -7.687483310699463
    8. '               ' → logprob: -7.937483310699463
    9. ':' → logprob: -8.312482833862305
    10. '():
' → logprob: -8.562482833862305

Token 707: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001570683903992176
    2. '       ' → logprob: -6.501570701599121
    3. '   ' → logprob: -10.876570701599121
    4. 'try' → logprob: -11.001570701599121
    5. '<|end|>' → logprob: -11.501570701599121
    6. '               ' → logprob: -12.001570701599121
    7. '	       ' → logprob: -12.751570701599121
    8. '
' → logprob: -13.001570701599121
    9. '```' → logprob: -13.001570701599121
    10. 'if' → logprob: -13.126570701599121

Token 708: ' if' (ID: 538)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.47419729828834534
    2. 'if' (adapté à ' if') → logprob: -0.974197268486023
    3. '           ' → logprob: -9.474197387695312
    4. ' if' → logprob: -10.724197387695312
    5. ' try' → logprob: -11.099197387695312
    6. '       ' → logprob: -12.349197387695312
    7. '
' → logprob: -13.724197387695312
    8. '               ' → logprob: -15.099197387695312
    9. '   ' → logprob: -15.099197387695312
    10. '	try' → logprob: -15.224197387695312

Token 709: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.18284542858600616
    2. ' not' → logprob: -1.9328454732894897
    3. 'line' → logprob: -3.8078453540802
    4. ' line' → logprob: -8.682845115661621
    5. '!' → logprob: -14.932845115661621
    6. '   ' → logprob: -15.057845115661621
    7. ' ' → logprob: -15.307845115661621
    8. '(line' → logprob: -15.432845115661621
    9. '```' → logprob: -15.557845115661621
    10. 'len' → logprob: -15.932845115661621

Token 710: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020678490400314
    2. ' line' → logprob: -2.3502068519592285
    3. '	line' → logprob: -16.85020637512207
    4. ' ' → logprob: -17.60020637512207
    5. '(line' → logprob: -18.35020637512207
    6. '#line' → logprob: -19.47520637512207
    7. '
' → logprob: -19.85020637512207
    8. '[line' → logprob: -20.35020637512207
    9. '=line' → logprob: -20.47520637512207
    10. '_line' → logprob: -20.60020637512207

Token 711: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03379553556442261
    2. ':
' → logprob: -3.4087955951690674
    3. ':return' → logprob: -9.408795356750488
    4. ' or' → logprob: -10.283795356750488
    5. ' :' → logprob: -11.408795356750488
    6. '.startswith' → logprob: -12.283795356750488
    7. '<|end|>' → logprob: -12.908795356750488
    8. '.' → logprob: -13.033795356750488
    9. '   ' → logprob: -13.158795356750488
    10. ':

' → logprob: -13.283795356750488

Token 712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.059557098895311356
    2. ':' → logprob: -3.5595571994781494
    3. '           ' → logprob: -3.5595571994781494
    4. '       ' → logprob: -8.18455696105957
    5. ':
' → logprob: -8.30955696105957
    6. '   ' → logprob: -8.43455696105957
    7. '              ' → logprob: -10.18455696105957
    8. ' continue' → logprob: -10.30955696105957
    9. 'continue' → logprob: -10.68455696105957
    10. '                   ' → logprob: -11.30955696105957

Token 713: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0528757572174072
    2. ' break' → logprob: -1.3028757572174072
    3. 'continue' (adapté à ' continue') → logprob: -1.5528757572174072
    4. ' continue' → logprob: -1.8028757572174072
    5. '               ' → logprob: -6.552875518798828
    6. '           ' → logprob: -6.677875518798828
    7. '       ' → logprob: -9.302875518798828
    8. 'return' → logprob: -11.052875518798828
    9. 'continu' → logprob: -11.052875518798828
    10. '   ' → logprob: -11.552875518798828

Token 714: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007812766125425696
    2. '               ' → logprob: -7.250781059265137
    3. '<|end|>' → logprob: -10.250781059265137
    4. '       ' → logprob: -11.000781059265137
    5. '```' → logprob: -12.000781059265137
    6. '   ' → logprob: -12.625781059265137
    7. '          ' → logprob: -12.625781059265137
    8. '            
' → logprob: -13.125781059265137
    9. '<|end|>' → logprob: -13.875781059265137
    10. ',' → logprob: -14.000781059265137

Token 715: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022296691895462573
    2. '       ' → logprob: -9.125223159790039
    3. '```' → logprob: -9.625223159790039
    4. '               ' → logprob: -10.250223159790039
    5. '<|end|>' → logprob: -12.125223159790039
    6. '   ' → logprob: -12.875223159790039
    7. '          ' → logprob: -13.375223159790039
    8. '	       ' → logprob: -14.125223159790039
    9. '<|end|>' → logprob: -14.125223159790039
    10. 'try' → logprob: -15.250223159790039

Token 716: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -4.723352049040841e-06
    2. ' try' → logprob: -12.750004768371582
    3. '       ' → logprob: -13.625004768371582
    4. '           ' → logprob: -14.625004768371582
    5. '	try' → logprob: -17.250003814697266
    6. '```' → logprob: -17.625003814697266
    7. 'if' → logprob: -18.000003814697266
    8. '   ' → logprob: -19.750003814697266
    9. '
' → logprob: -19.875003814697266
    10. '               ' → logprob: -20.125003814697266

Token 717: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023628609254956245
    2. ':
' → logprob: -3.7736287117004395
    3. '               ' → logprob: -8.023628234863281
    4. '           ' → logprob: -10.648628234863281
    5. ' :' → logprob: -11.648628234863281
    6. '{' → logprob: -12.023628234863281
    7. '<|end|>' → logprob: -12.523628234863281
    8. '                   ' → logprob: -12.898628234863281
    9. '):' → logprob: -13.648628234863281
    10. ':

' → logprob: -13.773628234863281

Token 718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13270865380764008
    2. ':' → logprob: -2.1327085494995117
    3. ':
' → logprob: -5.757708549499512
    4. '           ' → logprob: -6.132708549499512
    5. '              ' → logprob: -9.007708549499512
    6. '                   ' → logprob: -9.507708549499512
    7. '   ' → logprob: -9.507708549499512
    8. '       ' → logprob: -9.757708549499512
    9. '             ' → logprob: -10.757708549499512
    10. '                ' → logprob: -11.382708549499512

Token 719: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.173603817820549
    2. 'answer' → logprob: -2.6736037731170654
    3. 'res' → logprob: -2.9236037731170654
    4. 'count' → logprob: -4.1736040115356445
    5. ' result' → logprob: -4.9236040115356445
    6. 'output' → logprob: -5.2986040115356445
    7. '               ' → logprob: -5.7986040115356445
    8. 'print' → logprob: -6.5486040115356445
    9. 'ans' → logprob: -6.7986040115356445
    10. ' answer' → logprob: -6.9236040115356445

Token 720: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804366663098335
    2. '=' → logprob: -3.288043737411499
    3. ',' → logprob: -14.663043975830078
    4. '               ' → logprob: -14.663043975830078
    5. '                ' → logprob: -15.288043975830078
    6. ')' → logprob: -15.538043975830078
    7. '                   ' → logprob: -15.663043975830078
    8. '            ' → logprob: -15.663043975830078
    9. '           ' → logprob: -15.913043975830078
    10. ' ' → logprob: -16.163043975830078

Token 721: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011056192219257355
    2. ' self' → logprob: -4.511056423187256
    3. '               ' → logprob: -11.886055946350098
    4. '                   ' → logprob: -13.636055946350098
    5. '           ' → logprob: -15.386055946350098
    6. '(self' → logprob: -16.761056900024414
    7. '	self' → logprob: -17.386056900024414
    8. '[self' → logprob: -18.886056900024414
    9. '   ' → logprob: -19.386056900024414
    10. '                       ' → logprob: -19.511056900024414

Token 722: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.0339031834737398e-05
    2. 'process' → logprob: -11.500020027160645
    3. '.' → logprob: -11.625020027160645
    4. ' process' → logprob: -13.875020027160645
    5. '.run' → logprob: -16.00002098083496
    6. ' .' → logprob: -16.75002098083496
    7. '	process' → logprob: -18.25002098083496
    8. '.processor' → logprob: -18.25002098083496
    9. '.predict' → logprob: -18.75002098083496
    10. '.Process' → logprob: -19.62502098083496

Token 723: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.896309739408025e-07
    2. '_line' → logprob: -15.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. 'input' → logprob: -16.125
    5. 'Input' → logprob: -16.875
    6. '_output' → logprob: -18.625
    7. '_in' → logprob: -19.0
    8. '_Input' → logprob: -19.125
    9. '_INPUT' → logprob: -19.5
    10. '_
' → logprob: -19.625

Token 724: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.704273118884885e-07
    2. '_l' → logprob: -15.375000953674316
    3. '_' → logprob: -15.625000953674316
    4. '(line' → logprob: -16.625
    5. 'line' → logprob: -16.875
    6. '_LINE' → logprob: -17.25
    7. ' line' → logprob: -17.375
    8. '[line' → logprob: -17.5
    9. '_lin' → logprob: -17.5
    10. 'Line' → logprob: -18.375

Token 725: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -16.000009536743164
    4. '           ' → logprob: -17.625009536743164
    5. '(Line' → logprob: -17.625009536743164
    6. '(
' → logprob: -18.125009536743164
    7. '               ' → logprob: -18.500009536743164
    8. '[line' → logprob: -18.500009536743164
    9. '(lines' → logprob: -19.000009536743164
    10. '=line' → logprob: -19.125009536743164

Token 726: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018340976908802986
    2. '               ' → logprob: -4.643341064453125
    3. ')
' → logprob: -4.768341064453125
    4. '           ' → logprob: -10.393341064453125
    5. ')
' → logprob: -11.143341064453125
    6. '                   ' → logprob: -12.018341064453125
    7. '              ' → logprob: -14.643341064453125
    8. ')`
' → logprob: -14.768341064453125
    9. ')

' → logprob: -15.268341064453125
    10. '()' → logprob: -15.268341064453125

Token 727: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.040457421680912e-05
    2. 'print' → logprob: -10.000070571899414
    3. '           ' → logprob: -12.125070571899414
    4. '```' → logprob: -12.125070571899414
    5. '<|end|>' → logprob: -12.500070571899414
    6. '              ' → logprob: -13.000070571899414
    7. '                
' → logprob: -13.125070571899414
    8. ' print' → logprob: -13.125070571899414
    9. '                   ' → logprob: -13.125070571899414
    10. ')' → logprob: -15.000070571899414

Token 728: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6210795640945435
    2. 'print' (adapté à ' print') → logprob: -0.8710795640945435
    3. ' print' → logprob: -3.121079444885254
    4. '```' → logprob: -10.871079444885254
    5. '                   ' → logprob: -12.871079444885254
    6. '                
' → logprob: -13.371079444885254
    7. '(print' → logprob: -14.496079444885254
    8. '	print' → logprob: -14.621079444885254
    9. '           ' → logprob: -14.621079444885254
    10. '.print' → logprob: -14.746079444885254

Token 729: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.005273957271128893
    2. '(' → logprob: -5.255273818969727
    3. '(f' → logprob: -10.505273818969727
    4. 'result' → logprob: -11.880273818969727
    5. '("' → logprob: -12.505273818969727
    6. '('' → logprob: -13.505273818969727
    7. '()' → logprob: -15.380273818969727
    8. '(results' → logprob: -15.380273818969727
    9. '(
' → logprob: -16.005273818969727
    10. ' (' → logprob: -16.130273818969727

Token 730: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.500006675720215
    3. '           ' → logprob: -14.000006675720215
    4. '               ' → logprob: -14.750006675720215
    5. '()' → logprob: -15.125006675720215
    6. '`)' → logprob: -15.375006675720215
    7. ')`' → logprob: -15.500006675720215
    8. ' )' → logprob: -15.625006675720215
    9. '")' → logprob: -15.750006675720215
    10. '())' → logprob: -16.0000057220459

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025030340999364853
    2. 'except' → logprob: -4.400030136108398
    3. '<|end|>' → logprob: -5.025030136108398
    4. ' except' → logprob: -5.275030136108398
    5. '       ' → logprob: -8.150030136108398
    6. '<|end|>' → logprob: -9.150030136108398
    7. '
' → logprob: -9.400030136108398
    8. '	except' → logprob: -9.900030136108398
    9. '```' → logprob: -9.900030136108398
    10. '	       ' → logprob: -10.400030136108398

Token 732: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5047627091407776
    2. ' except' → logprob: -1.5047626495361328
    3. 'except' (adapté à ' except') → logprob: -1.7547626495361328
    4. '       ' → logprob: -7.504762649536133
    5. '
' → logprob: -8.129762649536133
    6. '	except' → logprob: -8.129762649536133
    7. '<|end|>' → logprob: -9.004762649536133
    8. '            
' → logprob: -10.754762649536133
    9. 'Except' → logprob: -11.629762649536133
    10. '```' → logprob: -12.504762649536133

Token 733: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.011053125374019146
    2. ' Stop' → logprob: -4.511053085327148
    3. '(' → logprob: -12.261053085327148
    4. '_Stop' → logprob: -14.886053085327148
    5. 'Stopping' → logprob: -15.761053085327148
    6. '_stop' → logprob: -17.51105308532715
    7. ' (' → logprob: -17.76105308532715
    8. 'Stopped' → logprob: -17.88605308532715
    9. '.Stop' → logprob: -19.51105308532715
    10. ' ' → logprob: -19.51105308532715

Token 734: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -7.896309739408025e-07
    2. 'iteration' → logprob: -15.125000953674316
    3. 'Iterator' → logprob: -15.500000953674316
    4. '_iteration' → logprob: -15.750000953674316
    5. 'Iter' → logprob: -16.25
    6. ' iteration' → logprob: -16.75
    7. 'Iterations' → logprob: -17.25
    8. 'Interaction' → logprob: -19.625
    9. 'Termination' → logprob: -21.5
    10. 'ITER' → logprob: -22.0

Token 735: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.303217351436615
    2. ':' → logprob: -1.8032174110412598
    3. ':
' → logprob: -2.4282174110412598
    4. '           ' → logprob: -5.42821741104126
    5. '                   ' → logprob: -5.67821741104126
    6. '	           ' → logprob: -8.303216934204102
    7. '                       ' → logprob: -9.053216934204102
    8. '		           ' → logprob: -9.178216934204102
    9. '():
' → logprob: -9.553216934204102
    10. '		       ' → logprob: -9.928216934204102

Token 736: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017874970217235386
    2. 'break' → logprob: -9.125178337097168
    3. '                   ' → logprob: -10.375178337097168
    4. '           ' → logprob: -10.750178337097168
    5. ' break' → logprob: -12.000178337097168
    6. 'return' → logprob: -12.625178337097168
    7. '	           ' → logprob: -12.875178337097168
    8. '   ' → logprob: -14.125178337097168
    9. '	break' → logprob: -14.250178337097168
    10. '		       ' → logprob: -14.250178337097168

Token 737: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05048716440796852
    2. '               ' → logprob: -3.0504872798919678
    3. 'return' → logprob: -6.550487041473389
    4. ' break' → logprob: -7.800487041473389
    5. '                   ' → logprob: -9.800487518310547
    6. '	break' → logprob: -12.925487518310547
    7. '           ' → logprob: -14.050487518310547
    8. '                       ' → logprob: -15.425487518310547
    9. ' return' → logprob: -15.675487518310547
    10. '   ' → logprob: -16.800487518310547

Token 738: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 739: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005362771451473236
    2. 'ic' → logprob: -5.6303629875183105
    3. '#' → logprob: -7.0053629875183105
    4. 'problem' → logprob: -8.130362510681152
    5. ' if' → logprob: -8.880362510681152
    6. 'c' → logprob: -9.380362510681152
    7. '```' → logprob: -9.505362510681152
    8. 'i' → logprob: -9.630362510681152
    9. 'IC' → logprob: -9.630362510681152
    10. 'instance' → logprob: -10.005362510681152

Token 740: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20145894587039948
    2. '__' → logprob: -1.7014589309692383
    3. 'name' → logprob: -10.826458930969238
    4. '_' → logprob: -11.201458930969238
    5. '_name' → logprob: -11.826458930969238
    6. 'Name' → logprob: -13.201458930969238
    7. ' ' → logprob: -13.826458930969238
    8. '___' → logprob: -13.826458930969238
    9. ' ' → logprob: -14.951458930969238
    10. '/__' → logprob: -15.701458930969238

Token 741: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011572458781301975
    2. ' __' → logprob: -5.136572360992432
    3. ' ==' → logprob: -5.511572360992432
    4. '==' → logprob: -7.011572360992432
    5. '__.__' → logprob: -8.01157283782959
    6. '.__' → logprob: -9.13657283782959
    7. '__.' → logprob: -9.26157283782959
    8. '.' → logprob: -10.38657283782959
    9. 'name' → logprob: -11.01157283782959
    10. '.py' → logprob: -11.51157283782959

Token 742: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.97155623533763e-05
    2. '==' → logprob: -9.375089645385742
    3. '__.__' → logprob: -13.125089645385742
    4. '=="' → logprob: -13.500089645385742
    5. ' ==' → logprob: -13.750089645385742
    6. '___' → logprob: -16.125089645385742
    7. '__.' → logprob: -16.875089645385742
    8. '=='' → logprob: -17.125089645385742
    9. '_' → logprob: -17.250089645385742
    10. '____' → logprob: -17.625089645385742

Token 743: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04112711548805237
    2. '==' → logprob: -3.5411272048950195
    3. ' ==' → logprob: -4.6661272048950195
    4. '=="' → logprob: -6.2911272048950195
    5. '_' → logprob: -11.41612720489502
    6. '__.__' → logprob: -11.41612720489502
    7. '=='' → logprob: -11.54112720489502
    8. '"' → logprob: -12.16612720489502
    9. '___' → logprob: -12.16612720489502
    10. '=' → logprob: -13.54112720489502

Token 744: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0031886440701782703
    2. ''' → logprob: -5.753188610076904
    3. ' "__' → logprob: -11.753189086914062
    4. '__' → logprob: -13.253189086914062
    5. ''"' → logprob: -14.878189086914062
    6. '"name' → logprob: -15.628189086914062
    7. '"class' → logprob: -15.628189086914062
    8. '"_' → logprob: -15.878189086914062
    9. '"user' → logprob: -16.003189086914062
    10. '   ' → logprob: -16.628189086914062

Token 745: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00014132341311778873
    2. '__' → logprob: -9.125141143798828
    3. 'name' → logprob: -10.500141143798828
    4. '"' → logprob: -13.125141143798828
    5. 'built' → logprob: -13.375141143798828
    6. 'python' → logprob: -14.750141143798828
    7. 'py' → logprob: -15.000141143798828
    8. 'm' → logprob: -15.750141143798828
    9. ' main' → logprob: -15.875141143798828
    10. 'builtin' → logprob: -16.750141143798828

Token 746: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05060163512825966
    2. '__' → logprob: -3.0506017208099365
    3. '__':
' → logprob: -6.800601482391357
    4. '__:' → logprob: -7.050601482391357
    5. '__.' → logprob: -11.175601959228516
    6. ':' → logprob: -11.550601959228516
    7. '__.__' → logprob: -12.800601959228516
    8. '__["' → logprob: -13.550601959228516
    9. '__
' → logprob: -13.550601959228516
    10. '.' → logprob: -13.925601959228516

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08037802577018738
    2. ' ic' → logprob: -2.5803780555725098
    3. ' IC' → logprob: -7.20537805557251
    4. 'IC' → logprob: -8.580377578735352
    5. '   ' → logprob: -8.580377578735352
    6. ' Ic' → logprob: -8.830377578735352
    7. 'ic' → logprob: -9.455377578735352
    8. ' problem' → logprob: -9.705377578735352
    9. '_ic' → logprob: -10.580377578735352
    10. 'Ic' → logprob: -11.080377578735352

Token 748: ' IC' (ID: 30492)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.11591023951768875
    2. 'IC' (adapté à ' IC') → logprob: -2.490910291671753
    3. 'solver' → logprob: -4.365910053253174
    4. 'ic' → logprob: -4.865910053253174
    5. ' problem' → logprob: -6.240910053253174
    6. 'prob' → logprob: -6.740910053253174
    7. 'program' → logprob: -7.490910053253174
    8. 'app' → logprob: -7.615910053253174
    9. 'obj' → logprob: -7.990910053253174
    10. 'prog' → logprob: -8.365910530090332

Token 749: 'PC' (ID: 7349)
  Prédit: 'PC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PC' → logprob: -0.006928142625838518
    2. 'Problem' → logprob: -5.256927967071533
    3. 'P' → logprob: -6.381927967071533
    4. 'PCM' → logprob: -15.131928443908691
    5. 'PCB' → logprob: -15.756928443908691
    6. ' Problem' → logprob: -16.006927490234375
    7. 'PCR' → logprob: -16.006927490234375
    8. ' PC' → logprob: -16.756927490234375
    9. 'Pc' → logprob: -17.131927490234375
    10. 'PCell' → logprob: -17.131927490234375

Token 750: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -1.9361264946837764e-07
    2. ' Problem' → logprob: -15.75
    3. 'problem' → logprob: -18.0
    4. 'Proble' → logprob: -18.25
    5. '_problem' → logprob: -18.25
    6. 'Pro' → logprob: -18.875
    7. 'Prob' → logprob: -19.5
    8. 'Program' → logprob: -19.5
    9. ' problem' → logprob: -19.75
    10. 'P' → logprob: -20.0

Token 751: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.180258191714529e-06
    2. 'Problem' → logprob: -11.750008583068848
    3. 'c' → logprob: -16.00000762939453
    4. ' C' → logprob: -17.12500762939453
    5. '_C' → logprob: -17.87500762939453
    6. 'CTest' → logprob: -18.12500762939453
    7. '```' → logprob: -18.25000762939453
    8. 'Solution' → logprob: -18.25000762939453
    9. 'Code' → logprob: -18.62500762939453
    10. '   ' → logprob: -19.12500762939453

Token 752: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2017892748117447
    2. '()' → logprob: -1.7017892599105835
    3. '.' → logprob: -8.701788902282715
    4. '(' → logprob: -9.201788902282715
    5. '().__' → logprob: -9.951788902282715
    6. ' ()' → logprob: -11.076788902282715
    7. '().'' → logprob: -11.701788902282715
    8. '.run' → logprob: -12.076788902282715
    9. '()<' → logprob: -12.326788902282715
    10. '();' → logprob: -12.576788902282715

Token 753: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: 0.0
    2. ' run' → logprob: -20.75
    3. 'r' → logprob: -21.25
    4. '	run' → logprob: -21.875
    5. '.run' → logprob: -22.875
    6. '(run' → logprob: -23.125
    7. 'ru' → logprob: -23.25
    8. '_run' → logprob: -23.25
    9. 'running' → logprob: -26.0
    10. '```' → logprob: -26.0

Token 754: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 752
Tokens correctement prédits (1ère position, stricte): 368
Tokens correctement prédits (1ère position, avec adaptation): 395
Tokens correctement prédits (top 10): 688
Précision stricte (1ère position): 48.94%
Précision adaptée (1ère position): 52.53%
Précision (top 10): 91.49%
================================================================================
