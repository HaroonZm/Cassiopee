================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class IslandCity:
    def __init__(self, n, proposals, k):
        self.n = n
        self.proposals = proposals  # List of EdgeProposal
        self.k = k  # Exact number of company A edges to choose

    def minimum_cost_plan(self):
        # We want to select exactly k edges from company A and n-1-k from company B
        # Then these selected edges should form a spanning tree (connect all islands)
        # We need the minimum cost sum under these constraints

        # We'll build an abstraction of a constrained MST solver

        # First, separate edges by company
        edges_A = [e for e in self.proposals if e.company == 'A']
        edges_B = [e for e in self.proposals if e.company == 'B']

        # Sort edges by cost ascending, this helps to try smaller costs first
        edges_A.sort(key=lambda e: e.cost)
        edges_B.sort(key=lambda e: e.cost)

        from math import inf

        # To solve this complicated constrained MST, we can try dynamic programming
        # based on the number of company A edges chosen so far and the connectivity state

        # Number of nodes: n
        # We want to pick exactly n-1 edges

        # However, to keep track of components efficiently and ensure a valid spanning tree,
        # we will use a clever approach:
        # Since n is up to 200, m up to 600, and k up to n - 1,
        # trying all subsets is impossible.
        #
        # Another idea: iterate over all subsets of edges with exactly n-1 edges with k edges from A,
        # but that is also impossible.
        #
        # Alternative approach: We use a parametric search via minimum spanning trees:
        # We'll add a parameter to edge costs that penalizes or rewards choosing company A edges,
        # then binary search the parameter value so that the MST has exactly k edges of company A.
        #
        # The problem: But the output cost must be the sum of real costs, no penalties.
        #
        # So, we can find MSTs with exactly k edges from company A by parametric search:
        # Define a cost function: cost' = cost + lambda if A else cost
        # For a given lambda, build MST minimizing sum cost'
        # Count how many edges of company A in MST
        # By adjusting lambda we force the MST to have the number of A edges that we want

        # We'll implement this parametric search approach.
        # Worst case will be feasible for n=200, m=600.

        def mst_with_lambda(lambda_):
            # Build a list of edges with modified cost = cost + (lambda if company A else 0)
            mod_edges = []
            for e in self.proposals:
                mod_cost = e.cost + (lambda_ if e.company == 'A' else 0)
                mod_edges.append(Edge(e.u, e.v, e.cost, e.company, mod_cost))
            # Kruskal MST
            uf = UnionFind(self.n)
            mod_edges.sort(key=lambda e: e.mod_cost)
            total_cost = 0
            company_A_count = 0
            edges_used = 0
            for e in mod_edges:
                if uf.union(e.u, e.v):
                    total_cost += e.cost  # original cost, not mod_cost
                    if e.company == 'A':
                        company_A_count += 1
                    edges_used += 1
                    if edges_used == self.n - 1:
                        break
            if edges_used < self.n - 1:
                # Not connected MST
                return None, None
            return company_A_count, total_cost

        # Binary search on lambda range
        left = -10000  # sufficiently negative
        right = 10000  # sufficiently positive
        answer = -1

        # Invariant: the number of company A edges in MST is nondecreasing as lambda increases
        # because higher lambda raises cost of using company A edges, so MST uses fewer A edges

        for _ in range(100):
            mid = (left + right) / 2
            count_A, cost = mst_with_lambda(mid)
            if count_A is None:
                # Not connected, try to relax to find some solution
                left = mid
                continue
            if count_A < self.k:
                # We want more company A edges, so lower lambda to make A cheaper
                right = mid
            else:
                # count_A >= k, we want exactly k, so try to increase lambda to reduce A edges
                left = mid
            # Track answer if we get exactly k edges
            if count_A == self.k:
                if answer == -1 or cost < answer:
                    answer = cost

        return answer


class EdgeProposal:
    __slots__ = ('u', 'v', 'cost', 'company')

    def __init__(self, u, v, cost, company):
        self.u = u - 1  # zero-based internally
        self.v = v - 1
        self.cost = cost
        self.company = company

    def __repr__(self):
        return f"EdgeProposal({self.u},{self.v},{self.cost},{self.company})"


class Edge:
    __slots__ = ('u', 'v', 'cost', 'company', 'mod_cost')

    def __init__(self, u, v, cost, company, mod_cost):
        self.u = u
        self.v = v
        self.cost = cost
        self.company = company
        self.mod_cost = mod_cost


class UnionFind:
    __slots__ = ('parent', 'rank')

    def __init__(self, n):
        self.parent = list(range(n))
        self.rank = [0] * n

    def find(self, x):
        while self.parent[x] != x:
            self.parent[x] = self.parent[self.parent[x]]
            x = self.parent[x]
        return x

    def union(self, x, y):
        xroot = self.find(x)
        yroot = self.find(y)
        if xroot == yroot:
            return False
        if self.rank[xroot] < self.rank[yroot]:
            self.parent[xroot] = yroot
        else:
            self.parent[yroot] = xroot
            if self.rank[xroot] == self.rank[yroot]:
                self.rank[xroot] += 1
        return True


def main():
    import sys

    lines = iter(sys.stdin.read().splitlines())
    while True:
        try:
            nmk_line = next(lines)
        except StopIteration:
            break
        if not nmk_line.strip():
            continue
        n, m, k = map(int, nmk_line.strip().split())
        if n == 0 and m == 0 and k == 0:
            break
        proposals = []
        for _ in range(m):
            parts = next(lines).split()
            u, v = int(parts[0]), int(parts[1])
            w = int(parts[2])
            l = parts[3]
            proposals.append(EdgeProposal(u, v, w, l))
        city = IslandCity(n, proposals, k)
        res = city.minimum_cost_plan()
        print(res if res is not None else -1)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Island' (ID: 14226)
  → Token d'amorce (pas de prédiction)

Token 2: 'City' (ID: 15764)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.442178338766098
    2. '(' → logprob: -1.8171783685684204
    3. ' {' → logprob: -2.317178249359131
    4. ':' → logprob: -2.442178249359131
    5. '.' → logprob: -4.817178249359131
    6. '```' → logprob: -7.192178249359131
    7. ' ' → logprob: -8.942178726196289
    8. ' :' → logprob: -9.567178726196289
    9. '({' → logprob: -9.942178726196289
    10. ' (' → logprob: -10.317178726196289

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8610447645187378
    2. '   ' → logprob: -1.2360447645187378
    3. '(' → logprob: -1.3610447645187378
    4. '```' → logprob: -4.236044883728027
    5. '.' → logprob: -5.236044883728027
    6. ''' → logprob: -5.361044883728027
    7. '(
' → logprob: -6.736044883728027
    8. ':
' → logprob: -7.111044883728027
    9. '\' → logprob: -7.736044883728027
    10. '`' → logprob: -7.736044883728027

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5538907647132874
    2. ' def' → logprob: -1.6788907051086426
    3. ' ' → logprob: -2.8038907051086426
    4. '_' → logprob: -3.4288907051086426
    5. '```' → logprob: -3.5538907051086426
    6. '    ' → logprob: -3.8038907051086426
    7. 'def' (adapté à ' def') → logprob: -3.8038907051086426
    8. ''' → logprob: -4.178890705108643
    9. ' pass' → logprob: -4.303890705108643
    10. '\' → logprob: -4.428890705108643

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00745766144245863
    2. '__' → logprob: -6.757457733154297
    3. ' __' → logprob: -6.757457733154297
    4. ' init' → logprob: -7.132457733154297
    5. '<|end|>' → logprob: -7.132457733154297
    6. '    ' → logprob: -7.507457733154297
    7. '  ' → logprob: -7.507457733154297
    8. ' create' → logprob: -8.382457733154297
    9. ' ' → logprob: -8.507457733154297
    10. ' )' → logprob: -8.507457733154297

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.624555291840807e-05
    2. ' init' → logprob: -9.750076293945312
    3. '_init' → logprob: -11.000076293945312
    4. '__' → logprob: -15.125076293945312
    5. 'ini' → logprob: -15.125076293945312
    6. ' __' → logprob: -15.625076293945312
    7. 'i' → logprob: -15.750076293945312
    8. '	init' → logprob: -16.000076293945312
    9. '_' → logprob: -16.625076293945312
    10. 'in' → logprob: -17.625076293945312

Token 8: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5289111137390137
    2. '__(' → logprob: -0.9039111137390137
    3. '__(
' → logprob: -5.778911113739014
    4. '(' → logprob: -6.653911113739014
    5. '_' → logprob: -7.528911113739014
    6. '__((' → logprob: -7.653911113739014
    7. '__('' → logprob: -8.778911590576172
    8. '(self' → logprob: -9.903911590576172
    9. '__(*' → logprob: -9.903911590576172
    10. '```' → logprob: -10.653911590576172

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011105360463261604
    2. ' self' → logprob: -4.511105537414551
    3. ')' → logprob: -10.13610553741455
    4. ' )' → logprob: -11.88610553741455
    5. '(self' → logprob: -12.26110553741455
    6. ' ' → logprob: -13.38610553741455
    7. 'city' → logprob: -13.63610553741455
    8. '```' → logprob: -14.38610553741455
    9. ',self' → logprob: -14.88610553741455
    10. '   ' → logprob: -15.01110553741455

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03037930838763714
    2. 'self' → logprob: -4.280379295349121
    3. ')' → logprob: -4.905379295349121
    4. ' ,' → logprob: -5.530379295349121
    5. '<|end|>' → logprob: -5.905379295349121
    6. '_' → logprob: -8.155379295349121
    7. '<|end|>' → logprob: -8.280379295349121
    8. '(self' → logprob: -8.280379295349121
    9. '):' → logprob: -8.530379295349121
    10. '(' → logprob: -8.530379295349121

Token 11: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9893661141395569
    2. ' self' → logprob: -1.239366054534912
    3. 'name' → logprob: -1.489366054534912
    4. ' name' → logprob: -2.364366054534912
    5. ' city' → logprob: -4.364366054534912
    6. 'city' → logprob: -6.489366054534912
    7. ')' → logprob: -6.614366054534912
    8. ' )' → logprob: -6.989366054534912
    9. ' location' → logprob: -7.239366054534912
    10. 'location' → logprob: -7.364366054534912

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4654518663883209
    2. '_' → logprob: -1.7154518365859985
    3. ')' → logprob: -2.215451955795288
    4. ' ):' → logprob: -3.965451955795288
    5. ' )' → logprob: -4.340451717376709
    6. ',' → logprob: -4.465451717376709
    7. 'umber' → logprob: -4.465451717376709
    8. 'ame' → logprob: -5.090451717376709
    9. 'a' → logprob: -5.090451717376709
    10. 'o' → logprob: -5.590451717376709

Token 13: ' proposals' (ID: 43772)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.669234037399292
    2. ' ' → logprob: -1.169234037399292
    3. ' k' → logprob: -3.044234037399292
    4. 'm' → logprob: -3.419234037399292
    5. ' s' → logprob: -4.669234275817871
    6. ' p' → logprob: -4.669234275817871
    7. 'k' → logprob: -4.794234275817871
    8. ' space' → logprob: -4.919234275817871
    9. ' d' → logprob: -5.294234275817871
    10. ' is' → logprob: -5.544234275817871

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010063735535368323
    2. ':' → logprob: -7.876006603240967
    3. ',' → logprob: -8.126006126403809
    4. ')' → logprob: -9.126006126403809
    5. '   ' → logprob: -9.376006126403809
    6. '):
' → logprob: -9.626006126403809
    7. '=' → logprob: -10.251006126403809
    8. ''):' → logprob: -12.001006126403809
    9. '```' → logprob: -12.126006126403809
    10. ' ):' → logprob: -12.251006126403809

Token 15: ' k' (ID: 372)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.4434338808059692
    2. ' budget' → logprob: -1.4434338808059692
    3. ' population' → logprob: -2.1934337615966797
    4. ' max' → logprob: -3.5684337615966797
    5. ' islands' → logprob: -3.6934337615966797
    6. ' island' → logprob: -3.8184337615966797
    7. ' locations' → logprob: -3.8184337615966797
    8. ' cities' → logprob: -4.06843376159668
    9. ' capacity' → logprob: -4.31843376159668
    10. ' city' → logprob: -4.31843376159668

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003862245939671993
    2. ')' → logprob: -8.500386238098145
    3. ':' → logprob: -9.250386238098145
    4. ',' → logprob: -9.625386238098145
    5. '):
' → logprob: -11.625386238098145
    6. '=' → logprob: -12.250386238098145
    7. '_' → logprob: -13.625386238098145
    8. ' ):' → logprob: -14.000386238098145
    9. '**' → logprob: -14.125386238098145
    10. ''):' → logprob: -14.125386238098145

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4487012028694153
    2. ':' → logprob: -1.4487011432647705
    3. '    ' → logprob: -2.9487011432647705
    4. '   ' → logprob: -3.3237011432647705
    5. '\' → logprob: -4.69870138168335
    6. '<|end|>' → logprob: -4.69870138168335
    7. '        
' → logprob: -6.07370138168335
    8. ' ' → logprob: -6.19870138168335
    9. ' :' → logprob: -6.32370138168335
    10. '	' → logprob: -6.82370138168335

Token 18: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20603837072849274
    2. '       ' → logprob: -1.9560383558273315
    3. '```' → logprob: -4.456038475036621
    4. '\' → logprob: -4.831038475036621
    5. ' self' → logprob: -4.831038475036621
    6. '   ' → logprob: -5.581038475036621
    7. '\n' → logprob: -5.706038475036621
    8. ' ' → logprob: -5.831038475036621
    9. 'n' → logprob: -7.081038475036621
    10. 's' → logprob: -7.081038475036621

Token 19: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011475241743028164
    2. ' .' → logprob: -4.761475086212158
    3. '.n' → logprob: -6.636475086212158
    4. '.is' → logprob: -7.261475086212158
    5. '.pro' → logprob: -7.761475086212158
    6. '.k' → logprob: -9.886475563049316
    7. '.city' → logprob: -10.261475563049316
    8. '.has' → logprob: -10.636475563049316
    9. ' ' → logprob: -10.761475563049316
    10. '.s' → logprob: -10.761475563049316

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8237380981445312
    2. '=' → logprob: -1.3237380981445312
    3. '<|end|>' → logprob: -1.8237380981445312
    4. '.' → logprob: -2.5737380981445312
    5. ')' → logprob: -3.9487380981445312
    6. ',' → logprob: -4.448738098144531
    7. ' ' → logprob: -4.573738098144531
    8. '<|end|>' → logprob: -4.948738098144531
    9. '_' → logprob: -6.448738098144531
    10. '    ' → logprob: -7.073738098144531

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.026301926001906395
    2. 'n' → logprob: -3.651301860809326
    3. ' ' → logprob: -14.401302337646484
    4. ' k' → logprob: -14.776302337646484
    5. '_n' → logprob: -15.151302337646484
    6. ' ' → logprob: -15.151302337646484
    7. 'k' → logprob: -16.151302337646484
    8. '	n' → logprob: -16.776302337646484
    9. '=n' → logprob: -17.401302337646484
    10. ')n' → logprob: -18.276302337646484

Token 22: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3656727969646454
    2. 'self' (adapté à ' self') → logprob: -1.7406728267669678
    3. ' ' → logprob: -2.4906728267669678
    4. '        ' → logprob: -4.115672588348389
    5. ' self' → logprob: -4.240672588348389
    6. ' 
' → logprob: -4.865672588348389
    7. '        
' → logprob: -5.740672588348389
    8. '   ' → logprob: -6.615672588348389
    9. '    ' → logprob: -7.240672588348389
    10. ''' → logprob: -7.615672588348389

Token 25: '.pro' (ID: 3231)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28988099098205566
    2. '.pro' → logprob: -1.4148809909820557
    3. '.k' → logprob: -5.164880752563477
    4. '.n' → logprob: -6.289880752563477
    5. '.is' → logprob: -8.414880752563477
    6. ' .' → logprob: -8.539880752563477
    7. '.s' → logprob: -9.414880752563477
    8. '.p' → logprob: -10.164880752563477
    9. '   ' → logprob: -10.289880752563477
    10. 'pro' → logprob: -10.414880752563477

Token 26: 'posals' (ID: 101779)
  Prédit: 'posals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posals' → logprob: -0.0031018999870866537
    2. 'p' → logprob: -6.753101825714111
    3. 's' → logprob: -7.003101825714111
    4. 'ps' → logprob: -7.128101825714111
    5. 'pos' → logprob: -9.00310230255127
    6. 'posal' → logprob: -10.37810230255127
    7. 'perties' → logprob: -11.25310230255127
    8. 'posts' → logprob: -11.87810230255127
    9. 'grams' → logprob: -11.87810230255127
    10. '=' → logprob: -12.00310230255127

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5203325152397156
    2. '=' → logprob: -1.1453325748443604
    3. '.' → logprob: -3.0203325748443604
    4. ' =' → logprob: -4.270332336425781
    5. '<|end|>' → logprob: -5.145332336425781
    6. ')' → logprob: -5.395332336425781
    7. ']' → logprob: -6.020332336425781
    8. '[:]' → logprob: -6.145332336425781
    9. '_' → logprob: -6.270332336425781
    10. ',' → logprob: -6.395332336425781

Token 28: ' proposals' (ID: 43772)
  Prédit: ' proposals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' proposals' → logprob: -0.001052934443578124
    2. 'pro' → logprob: -6.8760528564453125
    3. ' []' → logprob: -12.626052856445312
    4. ' propostas' → logprob: -13.001052856445312
    5. ' propuestas' → logprob: -13.001052856445312
    6. ' propositions' → logprob: -13.251052856445312
    7. ' proposal' → logprob: -13.251052856445312
    8. ' ' → logprob: -13.251052856445312
    9. 'proposal' → logprob: -13.251052856445312
    10. '[]' → logprob: -14.001052856445312

Token 29: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025619841180741787
    2. '        
' → logprob: -7.252562046051025
    3. '<|end|>' → logprob: -7.377562046051025
    4. '
' → logprob: -8.252561569213867
    5. '   ' → logprob: -8.752561569213867
    6. '        ' → logprob: -9.002561569213867
    7. '\' → logprob: -9.252561569213867
    8. 'self' → logprob: -9.377561569213867
    9. 'newline' → logprob: -9.377561569213867
    10. '      ' → logprob: -9.627561569213867

Token 30: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012158997356891632
    2. '<|end|>' → logprob: -5.0121588706970215
    3. '        
' → logprob: -6.0121588706970215
    4. ',' → logprob: -7.3871588706970215
    5. 'self' → logprob: -7.5121588706970215
    6. '
' → logprob: -7.7621588706970215
    7. ' ' → logprob: -8.63715934753418
    8. '```' → logprob: -8.76215934753418
    9. '      ' → logprob: -8.88715934753418
    10. ')' → logprob: -9.01215934753418

Token 31: ' List' (ID: 2655)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4000285565853119
    2. ' [' → logprob: -2.0250284671783447
    3. '[' → logprob: -2.4000284671783447
    4. ' list' → logprob: -3.4000284671783447
    5. ' ' → logprob: -3.4000284671783447
    6. '[]' → logprob: -4.275028705596924
    7. '   ' → logprob: -5.400028705596924
    8. ' a' → logprob: -5.900028705596924
    9. ' "' → logprob: -6.150028705596924
    10. '  ' → logprob: -6.150028705596924

Token 32: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21404142677783966
    2. '<|end|>' → logprob: -2.3390414714813232
    3. ' of' → logprob: -2.5890414714813232
    4. '[
' → logprob: -4.464041233062744
    5. '[int' → logprob: -5.589041233062744
    6. '<|end|>' → logprob: -5.964041233062744
    7. ')' → logprob: -7.339041233062744
    8. ' ' → logprob: -7.464041233062744
    9. '[List' → logprob: -7.964041233062744
    10. '.' → logprob: -8.089041709899902

Token 33: ' Edge' (ID: 16396)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -1.1795179843902588
    2. ' lists' → logprob: -1.4295179843902588
    3. '[' → logprob: -2.554517984390259
    4. ' proposals' → logprob: -3.179517984390259
    5. ' (' → logprob: -3.304517984390259
    6. '(' → logprob: -3.304517984390259
    7. 'str' → logprob: -3.429517984390259
    8. ' islands' → logprob: -3.554517984390259
    9. ' str' → logprob: -3.929517984390259
    10. ' [' → logprob: -3.929517984390259

Token 34: 'Proposal' (ID: 79001)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.519176185131073
    2. '       ' → logprob: -1.8941762447357178
    3. '<|end|>' → logprob: -2.2691762447357178
    4. '\n' → logprob: -3.2691762447357178
    5. '    
' → logprob: -3.8941762447357178
    6. '\' → logprob: -4.144176006317139
    7. ' ' → logprob: -4.144176006317139
    8. 'n' → logprob: -4.394176006317139
    9. '
' → logprob: -4.519176006317139
    10. 'newline' → logprob: -4.644176006317139

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010735098272562027
    2. '        
' → logprob: -5.385735034942627
    3. '   ' → logprob: -5.885735034942627
    4. '    
' → logprob: -7.260735034942627
    5. 'self' → logprob: -7.510735034942627
    6. '<|end|>' → logprob: -7.635735034942627
    7. '```' → logprob: -8.760735511779785
    8. '\n' → logprob: -8.885735511779785
    9. '  
' → logprob: -8.885735511779785
    10. ' 
' → logprob: -9.135735511779785

Token 37: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.387992262840271
    2. 'self' (adapté à ' self') → logprob: -1.137992262840271
    3. ' self' → logprob: -7.0129923820495605
    4. '   ' → logprob: -9.887991905212402
    5. '        
' → logprob: -10.137991905212402
    6. '```' → logprob: -10.762991905212402
    7. '	self' → logprob: -11.012991905212402
    8. '	' → logprob: -11.262991905212402
    9. 'def' → logprob: -11.387991905212402
    10. ' ' → logprob: -11.387991905212402

Token 38: '.k' (ID: 9040)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005176475970074534
    2. '.pro' → logprob: -8.250517845153809
    3. '.is' → logprob: -10.000517845153809
    4. '.k' → logprob: -10.000517845153809
    5. '.connected' → logprob: -10.875517845153809
    6. '.c' → logprob: -11.375517845153809
    7. '.def' → logprob: -11.500517845153809
    8. '.graph' → logprob: -11.750517845153809
    9. '.city' → logprob: -12.250517845153809
    10. '.edges' → logprob: -12.250517845153809

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519383430480957
    2. '=' → logprob: -1.5019383430480957
    3. ' ' → logprob: -12.126937866210938
    4. ')' → logprob: -13.376937866210938
    5. '<|end|>' → logprob: -14.251937866210938
    6. '_' → logprob: -14.501937866210938
    7. ' =
' → logprob: -15.376937866210938
    8. '   ' → logprob: -15.751937866210938
    9. ' is' → logprob: -16.251937866210938
    10. '.' → logprob: -16.251937866210938

Token 40: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07905645668506622
    2. 'k' → logprob: -2.57905650138855
    3. ' ' → logprob: -8.829056739807129
    4. '	k' → logprob: -11.579056739807129
    5. '  ' → logprob: -11.954056739807129
    6. '    ' → logprob: -13.829056739807129
    7. '_k' → logprob: -14.079056739807129
    8. '-k' → logprob: -14.829056739807129
    9. '=k' → logprob: -14.829056739807129
    10. '0' → logprob: -15.079056739807129

Token 41: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7717300653457642
    2. '   ' → logprob: -0.7717300653457642
    3. '    
' → logprob: -3.5217299461364746
    4. '\n' → logprob: -4.521729946136475
    5. '<|end|>' → logprob: -5.021729946136475
    6. '  
' → logprob: -5.146729946136475
    7. '\' → logprob: -5.396729946136475
    8. ' 
' → logprob: -5.521729946136475
    9. '       ' → logprob: -5.646729946136475
    10. 'def' → logprob: -6.021729946136475

Token 42: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8675752282142639
    2. '   ' → logprob: -1.1175751686096191
    3. '       ' → logprob: -1.9925751686096191
    4. 'def' → logprob: -2.992575168609619
    5. ':' → logprob: -4.492575168609619
    6. '\n' → logprob: -4.492575168609619
    7. '<|end|>' → logprob: -4.867575168609619
    8. ' def' → logprob: -4.992575168609619
    9. ' ' → logprob: -5.117575168609619
    10. '    
' → logprob: -5.367575168609619

Token 43: ' Exact' (ID: 69026)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24617187678813934
    2. ' maximum' → logprob: -1.9961718320846558
    3. ' max' → logprob: -2.6211719512939453
    4. 'max' → logprob: -5.996171951293945
    5. 'maximum' → logprob: -6.371171951293945
    6. ' Maximum' → logprob: -6.621171951293945
    7. ' number' → logprob: -6.996171951293945
    8. '  ' → logprob: -8.121171951293945
    9. ' space' → logprob: -8.246171951293945
    10. ' None' → logprob: -8.246171951293945

Token 44: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.2577453553676605
    2. 'ly' → logprob: -1.507745385169983
    3. 'number' → logprob: -5.757745265960693
    4. ' amount' → logprob: -7.382745265960693
    5. ' ly' → logprob: -7.632745265960693
    6. ' ' → logprob: -8.257745742797852
    7. '<|end|>' → logprob: -8.382745742797852
    8. '<|end|>' → logprob: -8.757745742797852
    9. '_number' → logprob: -9.382745742797852
    10. 'y' → logprob: -9.757745742797852

Token 45: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.21041662991046906
    2. '<|end|>' → logprob: -2.335416555404663
    3. ' ' → logprob: -3.210416555404663
    4. '   ' → logprob: -4.085416793823242
    5. '       ' → logprob: -4.460416793823242
    6. 'of' → logprob: -4.960416793823242
    7. '  ' → logprob: -5.710416793823242
    8. '
' → logprob: -5.835416793823242
    9. '<|end|>' → logprob: -5.960416793823242
    10. ')' → logprob: -6.335416793823242

Token 46: ' company' (ID: 3175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6806901097297668
    2. ' bridges' → logprob: -1.555690050125122
    3. ' edges' → logprob: -1.680690050125122
    4. 'edges' → logprob: -4.055690288543701
    5. ' roads' → logprob: -4.055690288543701
    6. ' islands' → logprob: -4.805690288543701
    7. ' spaces' → logprob: -5.243190288543701
    8. 'brid' → logprob: -5.243190288543701
    9. ' new' → logprob: -5.680690288543701
    10. '_' → logprob: -5.868190288543701

Token 47: ' A' (ID: 355)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006489646155387163
    2. '_' → logprob: -5.5064897537231445
    3. ' s' → logprob: -6.8814897537231445
    4. '_s' → logprob: -7.3814897537231445
    5. ' ' → logprob: -8.131489753723145
    6. '_connections' → logprob: -9.631489753723145
    7. '_edges' → logprob: -10.131489753723145
    8. 'es' → logprob: -10.256489753723145
    9. '_br' → logprob: -10.506489753723145
    10. 'S' → logprob: -10.506489753723145

Token 48: ' edges' (ID: 22569)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9279321432113647
    2. '_edges' → logprob: -1.9279321432113647
    3. ' ' → logprob: -2.4279322624206543
    4. '-' → logprob: -2.4279322624206543
    5. '<|end|>' → logprob: -3.0529322624206543
    6. ')' → logprob: -3.4279322624206543
    7. ''s' → logprob: -3.5529322624206543
    8. '_nodes' → logprob: -3.8029322624206543
    9. ' edges' → logprob: -4.302932262420654
    10. '_connections' → logprob: -4.427932262420654

Token 49: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6047680377960205
    2. '<|end|>' → logprob: -1.7297680377960205
    3. '   ' → logprob: -2.3547680377960205
    4. '\' → logprob: -3.2297680377960205
    5. 'def' → logprob: -3.4797680377960205
    6. ':' → logprob: -3.4797680377960205
    7. ' def' → logprob: -3.9797680377960205
    8. '\n' → logprob: -4.354767799377441
    9. ' ' → logprob: -4.979767799377441
    10. ' 
' → logprob: -5.104767799377441

Token 50: ' choose' (ID: 5655)
  Prédit: ' include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' include' → logprob: -0.2415168732404709
    2. ' use' → logprob: -2.1165168285369873
    3. 'include' → logprob: -2.8665168285369873
    4. ' build' → logprob: -4.866517066955566
    5. ' have' → logprob: -4.991517066955566
    6. ' select' → logprob: -5.241517066955566
    7. 'use' → logprob: -5.366517066955566
    8. ' keep' → logprob: -5.866517066955566
    9. ' choose' → logprob: -6.616517066955566
    10. 'have' → logprob: -6.866517066955566

Token 51: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4901525378227234
    2. '<|end|>' → logprob: -1.8651525974273682
    3. '
' → logprob: -1.9901525974273682
    4. '\' → logprob: -3.365152597427368
    5. ' ' → logprob: -4.365152359008789
    6. '\n' → logprob: -4.490152359008789
    7. 'def' → logprob: -4.740152359008789
    8. '       ' → logprob: -4.990152359008789
    9. '    
' → logprob: -5.615152359008789
    10. ' def' → logprob: -5.990152359008789

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3989924490451813
    2. '   ' → logprob: -1.6489924192428589
    3. 'def' → logprob: -2.1489925384521484
    4. ' def' → logprob: -4.523992538452148
    5. '       ' → logprob: -6.023992538452148
    6. '    
' → logprob: -6.148992538452148
    7. ':' → logprob: -6.648992538452148
    8. '```' → logprob: -7.273992538452148
    9. '\n' → logprob: -7.648992538452148
    10. ' ' → logprob: -7.898992538452148

Token 53: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.27579912543296814
    2. '   ' → logprob: -2.025799036026001
    3. ' def' → logprob: -2.275799036026001
    4. '
' → logprob: -6.27579927444458
    5. 'd' → logprob: -6.65079927444458
    6. '    
' → logprob: -7.15079927444458
    7. ' ' → logprob: -7.27579927444458
    8. '    ' → logprob: -7.40079927444458
    9. '       ' → logprob: -7.77579927444458
    10. ' 
' → logprob: -8.150798797607422

Token 54: ' minimum' (ID: 11085)
  Prédit: ' choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choose' → logprob: -1.1249758005142212
    2. ' build' → logprob: -1.4999758005142212
    3. ' find' → logprob: -1.7499758005142212
    4. ' solve' → logprob: -2.3749756813049316
    5. ' select' → logprob: -2.6249756813049316
    6. ' optimize' → logprob: -3.4999756813049316
    7. ' _' → logprob: -4.124975681304932
    8. '_' → logprob: -4.124975681304932
    9. '_choose' → logprob: -5.124975681304932
    10. ' def' → logprob: -5.249975681304932

Token 55: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.405590295791626
    2. '_' → logprob: -1.155590295791626
    3. '_sp' → logprob: -4.530590057373047
    4. '_total' → logprob: -5.530590057373047
    5. '_distance' → logprob: -6.280590057373047
    6. '_weight' → logprob: -7.405590057373047
    7. '_edge' → logprob: -8.780590057373047
    8. '_path' → logprob: -9.155590057373047
    9. '_space' → logprob: -9.155590057373047
    10. '_bridge' → logprob: -9.155590057373047

Token 56: '_plan' (ID: 53840)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39197301864624023
    2. '(self' → logprob: -1.1419730186462402
    3. '_edge' → logprob: -6.76697301864624
    4. '_' → logprob: -7.14197301864624
    5. '_connect' → logprob: -7.51697301864624
    6. '_self' → logprob: -7.64197301864624
    7. '_connected' → logprob: -7.64197301864624
    8. '_to' → logprob: -8.016973495483398
    9. ' (' → logprob: -8.266973495483398
    10. '_edges' → logprob: -8.516973495483398

Token 57: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.576532244682312
    2. '(' → logprob: -0.826532244682312
    3. ' (' → logprob: -7.826532363891602
    4. '(s' → logprob: -9.951532363891602
    5. '_' → logprob: -10.451532363891602
    6. '   ' → logprob: -10.576532363891602
    7. 'self' → logprob: -10.701532363891602
    8. '(
' → logprob: -10.826532363891602
    9. '_(' → logprob: -11.951532363891602
    10. 's' → logprob: -12.326532363891602

Token 58: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008754019625484943
    2. '):' → logprob: -5.133754253387451
    3. 'self' → logprob: -6.258754253387451
    4. ' ,' → logprob: -8.383753776550293
    5. ',self' → logprob: -8.508753776550293
    6. '(self' → logprob: -8.633753776550293
    7. '   ' → logprob: -9.258753776550293
    8. '       ' → logprob: -9.633753776550293
    9. ')(' → logprob: -10.008753776550293
    10. ')' → logprob: -10.508753776550293

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044663884909823537
    2. '\' → logprob: -9.250446319580078
    3. '   ' → logprob: -9.500446319580078
    4. ':' → logprob: -9.875446319580078
    5. '```' → logprob: -10.125446319580078
    6. '        
' → logprob: -10.500446319580078
    7. '    ' → logprob: -10.750446319580078
    8. '\n' → logprob: -10.750446319580078
    9. '<|end|>' → logprob: -10.875446319580078
    10. '(' → logprob: -11.250446319580078

Token 60: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1659177541732788
    2. '        ' → logprob: -1.4159177541732788
    3. 'dp' → logprob: -2.2909178733825684
    4. 'import' → logprob: -2.9159178733825684
    5. ' #' → logprob: -2.9159178733825684
    6. ' pass' → logprob: -3.1659178733825684
    7. '#' (adapté à ' #') → logprob: -3.2909178733825684
    8. 'from' → logprob: -3.5409178733825684
    9. ' import' → logprob: -3.6659178733825684
    10. 'pass' → logprob: -3.7909178733825684

Token 61: ' We' (ID: 1416)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5486736297607422
    2. 'pass' → logprob: -1.7986736297607422
    3. ' #' → logprob: -2.548673629760742
    4. '       ' → logprob: -3.298673629760742
    5. '#' → logprob: -3.423673629760742
    6. ' if' → logprob: -3.548673629760742
    7. '        ' → logprob: -3.798673629760742
    8. ' n' → logprob: -4.923673629760742
    9. ' import' → logprob: -5.173673629760742
    10. 'import' → logprob: -5.298673629760742

Token 62: ' want' (ID: 1682)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9859519004821777
    2. ' want' → logprob: -0.9859519004821777
    3. '       ' → logprob: -2.2359519004821777
    4. '   ' → logprob: -3.1109519004821777
    5. ' need' → logprob: -3.8609519004821777
    6. ''' → logprob: -4.360951900482178
    7. ' can' → logprob: -4.360951900482178
    8. ''ll' → logprob: -4.485951900482178
    9. '    ' → logprob: -5.360951900482178
    10. ''re' → logprob: -5.610951900482178

Token 63: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.00197526509873569
    2. 'to' → logprob: -6.876975059509277
    3. ' a' → logprob: -7.876975059509277
    4. '    ' → logprob: -8.376975059509277
    5. '        ' → logprob: -9.126975059509277
    6. ' ' → logprob: -9.751975059509277
    7. ' the' → logprob: -9.751975059509277
    8. '       ' → logprob: -10.376975059509277
    9. ' t' → logprob: -11.376975059509277
    10. ' all' → logprob: -11.751975059509277

Token 64: ' select' (ID: 4736)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5350581407546997
    2. ' select' → logprob: -1.7850581407546997
    3. ' minimize' → logprob: -2.66005802154541
    4. 'select' → logprob: -2.91005802154541
    5. 'find' → logprob: -3.91005802154541
    6. ' choose' → logprob: -4.03505802154541
    7. 'choose' → logprob: -4.03505802154541
    8. 'min' → logprob: -4.91005802154541
    9. ' build' → logprob: -5.03505802154541
    10. ' ensure' → logprob: -5.28505802154541

Token 65: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.0018984097987413406
    2. ' k' → logprob: -6.626898288726807
    3. ' self' → logprob: -8.751898765563965
    4. 'exact' → logprob: -9.001898765563965
    5. ' ' → logprob: -9.126898765563965
    6. ' edges' → logprob: -9.376898765563965
    7. ' a' → logprob: -10.251898765563965
    8. 'self' → logprob: -10.751898765563965
    9. 'k' → logprob: -11.001898765563965
    10. '    ' → logprob: -12.251898765563965

Token 66: ' k' (ID: 372)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11154304444789886
    2. ' k' → logprob: -2.7365429401397705
    3. 'self' → logprob: -3.4865429401397705
    4. ' ' → logprob: -4.73654317855835
    5. 'k' → logprob: -7.11154317855835
    6. '<|end|>' → logprob: -8.111542701721191
    7. ' `' → logprob: -9.236542701721191
    8. '```' → logprob: -10.111542701721191
    9. ' a' → logprob: -10.611542701721191
    10. ' exactly' → logprob: -10.986542701721191

Token 67: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.12130482494831085
    2. ' ' → logprob: -2.746304750442505
    3. ' company' → logprob: -3.621304750442505
    4. '<|end|>' → logprob: -4.246304988861084
    5. 'edges' → logprob: -5.621304988861084
    6. 'company' → logprob: -6.246304988861084
    7. ' of' → logprob: -7.121304988861084
    8. ' more' → logprob: -7.496304988861084
    9. '    ' → logprob: -8.246304512023926
    10. '<|end|>' → logprob: -8.371304512023926

Token 68: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' company' (ID: 3175)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6719571352005005
    2. ' self' → logprob: -1.1719571352005005
    3. ' company' → logprob: -2.296957015991211
    4. 'company' → logprob: -2.921957015991211
    5. ' the' → logprob: -4.046957015991211
    6. 'the' → logprob: -5.171957015991211
    7. 'Company' → logprob: -7.421957015991211
    8. '       ' → logprob: -8.171957015991211
    9. 'A' → logprob: -8.671957015991211
    10. '_company' → logprob: -8.671957015991211

Token 70: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07230259478092194
    2. 'A' → logprob: -2.6973025798797607
    3. ' ' → logprob: -6.32230281829834
    4. '_A' → logprob: -8.82230281829834
    5. ' '' → logprob: -9.32230281829834
    6. ' a' → logprob: -9.57230281829834
    7. '_a' → logprob: -9.69730281829834
    8. ''' → logprob: -9.94730281829834
    9. '_' → logprob: -10.32230281829834
    10. 'a' → logprob: -10.57230281829834

Token 71: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.077290654182434
    2. '<|end|>' → logprob: -1.202290654182434
    3. ',' → logprob: -1.327290654182434
    4. ' and' → logprob: -2.9522905349731445
    5. ':' → logprob: -4.8272905349731445
    6. ' ' → logprob: -5.2022905349731445
    7. ' to' → logprob: -5.3272905349731445
    8. '.' → logprob: -5.4522905349731445
    9. '<|end|>' → logprob: -5.4522905349731445
    10. ')' → logprob: -5.5772905349731445

Token 72: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8900464773178101
    2. ' exactly' → logprob: -1.26504647731781
    3. 'n' → logprob: -2.5150465965270996
    4. 'exact' → logprob: -2.7650465965270996
    5. '       ' → logprob: -3.0150465965270996
    6. '(n' → logprob: -3.8900465965270996
    7. ' the' → logprob: -4.0150465965271
    8. ' (' → logprob: -4.2650465965271
    9. ' at' → logprob: -4.3900465965271
    10. ' minimize' → logprob: -5.3900465965271

Token 73: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42883265018463135
    2. '-' → logprob: -1.0538326501846313
    3. ' ' → logprob: -9.6788330078125
    4. '<|end|>' → logprob: -10.6788330078125
    5. '   ' → logprob: -11.8038330078125
    6. '	' → logprob: -11.8038330078125
    7. ' ' → logprob: -12.0538330078125
    8. '1' → logprob: -12.6788330078125
    9. '<|end|>' → logprob: -12.9913330078125
    10. '−' → logprob: -13.1163330078125

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10690443217754364
    2. ' ' → logprob: -2.9819045066833496
    3. '-' → logprob: -3.1069045066833496
    4. ' -' → logprob: -5.23190450668335
    5. '   ' → logprob: -8.356904029846191
    6. '       ' → logprob: -8.731904029846191
    7. '```' → logprob: -10.106904029846191
    8. '<|end|>' → logprob: -10.231904029846191
    9. '2' → logprob: -10.669404029846191
    10. '     ' → logprob: -11.419404029846191

Token 75: '-k' (ID: 10897)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.04641339182853699
    2. ' from' → logprob: -3.9214134216308594
    3. 'edges' → logprob: -4.296413421630859
    4. ' ' → logprob: -5.296413421630859
    5. ' more' → logprob: -6.171413421630859
    6. ' other' → logprob: -6.171413421630859
    7. 'from' → logprob: -7.046413421630859
    8. '<|end|>' → logprob: -7.421413421630859
    9. ' to' → logprob: -7.671413421630859
    10. ' ones' → logprob: -8.54641342163086

Token 76: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231888890266418
    2. ' edges' → logprob: -1.523188829421997
    3. '<|end|>' → logprob: -1.898188829421997
    4. ' from' → logprob: -3.398188829421997
    5. 'edges' → logprob: -5.898189067840576
    6. 'from' → logprob: -6.398189067840576
    7. '<|end|>' → logprob: -7.148189067840576
    8. '_edges' → logprob: -9.023188591003418
    9. ' ones' → logprob: -9.335688591003418
    10. '  ' → logprob: -9.460688591003418

Token 77: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.010003266856074333
    2. 'company' → logprob: -4.760003089904785
    3. ' the' → logprob: -7.510003089904785
    4. ' ' → logprob: -7.635003089904785
    5. '<|end|>' → logprob: -9.260003089904785
    6. ' other' → logprob: -9.510003089904785
    7. 'Company' → logprob: -10.135003089904785
    8. ' B' → logprob: -10.635003089904785
    9. ' Company' → logprob: -10.635003089904785
    10. '_company' → logprob: -10.885003089904785

Token 78: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.12700055539608002
    2. 'B' → logprob: -2.127000570297241
    3. ' ' → logprob: -10.00200080871582
    4. '<|end|>' → logprob: -11.37700080871582
    5. '_B' → logprob: -13.12700080871582
    6. ' A' → logprob: -13.31450080871582
    7. ' Б' → logprob: -13.68950080871582
    8. ' C' → logprob: -13.93950080871582
    9. 'A' → logprob: -14.00200080871582
    10. 'Company' → logprob: -14.06450080871582

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11237270385026932
    2. ':' → logprob: -2.987372636795044
    3. ',' → logprob: -4.112372875213623
    4. '.' → logprob: -4.487372875213623
    5. '<|end|>' → logprob: -4.612372875213623
    6. '
' → logprob: -5.737372875213623
    7. ' ' → logprob: -5.987372875213623
    8. ' :' → logprob: -6.237372875213623
    9. '        
' → logprob: -6.237372875213623
    10. '        ' → logprob: -6.237372875213623

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2886961102485657
    2. ':' → logprob: -1.413696050643921
    3. '        
' → logprob: -6.2886962890625
    4. ',' → logprob: -6.4136962890625
    5. '
' → logprob: -6.6636962890625
    6. ':
' → logprob: -7.2886962890625
    7. ' :' → logprob: -7.9136962890625
    8. '.' → logprob: -8.0386962890625
    9. '```' → logprob: -8.0386962890625
    10. '   ' → logprob: -8.2886962890625

Token 81: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09176202863454819
    2. ':' → logprob: -3.091762065887451
    3. 'import' → logprob: -4.466762065887451
    4. '        ' → logprob: -5.091762065887451
    5. '        
' → logprob: -5.216762065887451
    6. '```' → logprob: -5.716762065887451
    7. '#' (adapté à ' #') → logprob: -5.841762065887451
    8. ':
' → logprob: -5.966762065887451
    9. '
' → logprob: -5.966762065887451
    10. ' :' → logprob: -6.716762065887451

Token 82: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05370958894491196
    2. ' edges' → logprob: -4.428709506988525
    3. ' #' → logprob: -5.553709506988525
    4. ' n' → logprob: -5.553709506988525
    5. '   ' → logprob: -5.678709506988525
    6. ' best' → logprob: -6.053709506988525
    7. ' import' → logprob: -6.178709506988525
    8. 'import' → logprob: -6.303709506988525
    9. 'edges' → logprob: -6.303709506988525
    10. ' selected' → logprob: -6.428709506988525

Token 83: ' these' (ID: 1879)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7759659886360168
    2. ' find' → logprob: -1.275965929031372
    3. ' sort' → logprob: -3.150965929031372
    4. ' use' → logprob: -3.150965929031372
    5. 'we' → logprob: -3.275965929031372
    6. '       ' → logprob: -4.150966167449951
    7. ',' → logprob: -4.275966167449951
    8. ' select' → logprob: -4.275966167449951
    9. ' the' → logprob: -4.525966167449951
    10. ' implement' → logprob: -4.525966167449951

Token 84: ' selected' (ID: 6386)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.05087064579129219
    2. 'edges' → logprob: -3.300870656967163
    3. ' are' → logprob: -5.800870418548584
    4. ' should' → logprob: -5.800870418548584
    5. ' will' → logprob: -6.675870418548584
    6. ' selected' → logprob: -6.675870418548584
    7. ' must' → logprob: -6.800870418548584
    8. '.edges' → logprob: -7.550870418548584
    9. '_edges' → logprob: -7.800870418548584
    10. ' ' → logprob: -8.050870895385742

Token 85: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.0010702044237405062
    2. 'edges' → logprob: -7.376070022583008
    3. ' are' → logprob: -8.751070022583008
    4. ' ' → logprob: -9.501070022583008
    5. '_edges' → logprob: -9.751070022583008
    6. ' edge' → logprob: -10.126070022583008
    7. ' can' → logprob: -10.876070022583008
    8. '<|end|>' → logprob: -11.126070022583008
    9. ' must' → logprob: -11.251070022583008
    10. ' selected' → logprob: -11.376070022583008

Token 86: ' should' (ID: 1757)
  Prédit: ' form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.08134876936674118
    2. ' must' → logprob: -3.0813486576080322
    3. ' can' → logprob: -5.081348896026611
    4. ' should' → logprob: -5.081348896026611
    5. ' to' → logprob: -5.706348896026611
    6. ' will' → logprob: -5.831348896026611
    7. ' connect' → logprob: -5.956348896026611
    8. ' are' → logprob: -6.081348896026611
    9. 'must' → logprob: -6.831348896026611
    10. ' create' → logprob: -6.956348896026611

Token 87: ' form' (ID: 1625)
  Prédit: ' form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.24857406318187714
    2. ' connect' → logprob: -1.7485740184783936
    3. 'connect' → logprob: -3.6235740184783936
    4. 'form' → logprob: -4.248574256896973
    5. '   ' → logprob: -6.248574256896973
    6. ' create' → logprob: -7.248574256896973
    7. ' span' → logprob: -7.498574256896973
    8. 'span' → logprob: -8.248574256896973
    9. ' ' → logprob: -8.373574256896973
    10. '_connect' → logprob: -8.498574256896973

Token 88: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0011258102022111416
    2. 'a' → logprob: -6.876125812530518
    3. ' an' → logprob: -9.75112533569336
    4. ' ' → logprob: -11.25112533569336
    5. ' spanning' → logprob: -11.25112533569336
    6. 's' → logprob: -13.25112533569336
    7. '	a' → logprob: -13.62612533569336
    8. 'an' → logprob: -13.62612533569336
    9. ' the' → logprob: -13.75112533569336
    10. '<|end|>' → logprob: -14.00112533569336

Token 89: ' spanning' (ID: 66335)
  Prédit: ' spanning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.004627938382327557
    2. ' tree' → logprob: -5.879627704620361
    3. ' connected' → logprob: -6.879627704620361
    4. ' valid' → logprob: -8.12962818145752
    5. 'sp' → logprob: -8.50462818145752
    6. ' minimum' → logprob: -9.37962818145752
    7. 's' → logprob: -10.25462818145752
    8. ' minimal' → logprob: -10.37962818145752
    9. ' ' → logprob: -10.75462818145752
    10. '   ' → logprob: -10.87962818145752

Token 90: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.0028601549565792084
    2. 'tree' → logprob: -5.877860069274902
    3. '_tree' → logprob: -10.502860069274902
    4. ' forest' → logprob: -11.502860069274902
    5. '-tree' → logprob: -11.752860069274902
    6. ' trees' → logprob: -12.627860069274902
    7. '	tree' → logprob: -13.377860069274902
    8. '_' → logprob: -13.627860069274902
    9. ' ' → logprob: -14.002860069274902
    10. '       ' → logprob: -14.502860069274902

Token 91: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03495229408144951
    2. '        
' → logprob: -4.034952163696289
    3. '        ' → logprob: -5.034952163696289
    4. '
' → logprob: -5.284952163696289
    5. ',' → logprob: -6.784952163696289
    6. ':' → logprob: -7.284952163696289
    7. '<|end|>' → logprob: -7.659952163696289
    8. '    ' → logprob: -7.909952163696289
    9. '\' → logprob: -7.909952163696289
    10. '   ' → logprob: -8.034952163696289

Token 92: 'connect' (ID: 9291)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8390982747077942
    2. ' a' → logprob: -1.4640982151031494
    3. ' )' → logprob: -1.8390982151031494
    4. ' the' → logprob: -2.2140982151031494
    5. ' an' → logprob: -3.4640982151031494
    6. ' connected' → logprob: -3.9640982151031494
    7. ' to' → logprob: -5.5890984535217285
    8. ' that' → logprob: -5.8390984535217285
    9. '       ' → logprob: -5.9640984535217285
    10. ' spanning' → logprob: -6.3390984535217285

Token 93: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.013722904026508331
    2. 'ing' → logprob: -5.013722896575928
    3. ' the' → logprob: -5.388722896575928
    4. 's' → logprob: -6.513722896575928
    5. 'all' → logprob: -7.888722896575928
    6. ' ' → logprob: -8.263723373413086
    7. 'the' → logprob: -9.638723373413086
    8. ' ing' → logprob: -10.263723373413086
    9. 'ed' → logprob: -10.638723373413086
    10. ')' → logprob: -10.888723373413086

Token 94: ' islands' (ID: 45758)
  Prédit: ' islands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' islands' → logprob: -0.21787968277931213
    2. ' nodes' → logprob: -2.3428797721862793
    3. ' the' → logprob: -2.7178797721862793
    4. ')' → logprob: -4.717879772186279
    5. ' cities' → logprob: -5.092879772186279
    6. ' )' → logprob: -5.217879772186279
    7. ' ' → logprob: -5.342879772186279
    8. ' vertices' → logprob: -5.342879772186279
    9. 'the' → logprob: -6.842879772186279
    10. '   ' → logprob: -7.842879772186279

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04024280607700348
    2. '       ' → logprob: -3.540242910385132
    3. ' )' → logprob: -5.165242671966553
    4. ').' → logprob: -5.665242671966553
    5. '   ' → logprob: -7.540242671966553
    6. ',' → logprob: -8.290243148803711
    7. ')
' → logprob: -9.040243148803711
    8. '.' → logprob: -9.165243148803711
    9. '),' → logprob: -9.665243148803711
    10. ' and' → logprob: -10.790243148803711

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02222372218966484
    2. ':' → logprob: -4.397223949432373
    3. '
' → logprob: -5.647223949432373
    4. '        
' → logprob: -6.147223949432373
    5. '   ' → logprob: -6.897223949432373
    6. ',' → logprob: -7.272223949432373
    7. '\' → logprob: -8.147223472595215
    8. '        ' → logprob: -8.147223472595215
    9. '    ' → logprob: -8.272223472595215
    10. ' ' → logprob: -8.272223472595215

Token 97: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06659378111362457
    2. '#' (adapté à ' #') → logprob: -3.691593885421753
    3. 'import' → logprob: -4.941593647003174
    4. '        ' → logprob: -5.066593647003174
    5. '
' → logprob: -5.191593647003174
    6. '        
' → logprob: -5.691593647003174
    7. '   ' → logprob: -5.816593647003174
    8. ':' → logprob: -5.941593647003174
    9. 'n' → logprob: -6.441593647003174
    10. '\' → logprob: -6.441593647003174

Token 98: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1543932557106018
    2. ' import' → logprob: -2.779393196105957
    3. ' #' → logprob: -3.279393196105957
    4. 'import' → logprob: -4.279393196105957
    5. '#' → logprob: -4.779393196105957
    6. ' from' → logprob: -5.404393196105957
    7. '        ' → logprob: -5.779393196105957
    8. ' pass' → logprob: -6.404393196105957
    9. 'from' → logprob: -6.529393196105957
    10. '   ' → logprob: -6.654393196105957

Token 99: ' need' (ID: 1309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016311537474393845
    2. ' def' → logprob: -5.8913116455078125
    3. 'n' → logprob: -6.1413116455078125
    4. ' need' → logprob: -6.3913116455078125
    5. ' want' → logprob: -6.5163116455078125
    6. '   ' → logprob: -6.6413116455078125
    7. ' #' → logprob: -6.7663116455078125
    8. '    ' → logprob: -7.2663116455078125
    9. ' n' → logprob: -7.3913116455078125
    10. ''ll' → logprob: -7.6413116455078125

Token 100: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0023385430686175823
    2. 'to' → logprob: -6.127338409423828
    3. ' a' → logprob: -9.877338409423828
    4. '    ' → logprob: -10.627338409423828
    5. ' ' → logprob: -10.877338409423828
    6. '       ' → logprob: -11.127338409423828
    7. 'def' → logprob: -11.877338409423828
    8. ' the' → logprob: -12.002338409423828
    9. '<|end|>' → logprob: -12.252338409423828
    10. '        ' → logprob: -12.377338409423828

Token 101: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.4866368770599365
    2. ' best' → logprob: -2.1116368770599365
    3. ' minimal' → logprob: -2.8616368770599365
    4. ' cheapest' → logprob: -3.1116368770599365
    5. ' ' → logprob: -3.3616368770599365
    6. ' lowest' → logprob: -3.6116368770599365
    7. ' total' → logprob: -3.7366368770599365
    8. 'minimum' → logprob: -3.8616368770599365
    9. ' smallest' → logprob: -4.361637115478516
    10. ' rest' → logprob: -5.236637115478516

Token 102: ' cost' (ID: 3097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11142084002494812
    2. ' _' → logprob: -3.3614208698272705
    3. '_cost' → logprob: -3.6114208698272705
    4. ' cost' → logprob: -3.9864208698272705
    5. 'cost' → logprob: -5.611420631408691
    6. ' ' → logprob: -5.736420631408691
    7. ' total' → logprob: -5.986420631408691
    8. ' possible' → logprob: -5.986420631408691
    9. '<|end|>' → logprob: -6.236420631408691
    10. '_total' → logprob: -6.486420631408691

Token 103: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11234723031520844
    2. 'import' → logprob: -3.73734712600708
    3. ' edges' → logprob: -4.36234712600708
    4. ':' → logprob: -4.36234712600708
    5. '        
' → logprob: -4.36234712600708
    6. ' =' → logprob: -4.98734712600708
    7. ' to' → logprob: -5.11234712600708
    8. ',' → logprob: -5.48734712600708
    9. 'def' → logprob: -5.48734712600708
    10. '=' → logprob: -5.86234712600708

Token 104: ' under' (ID: 1641)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05012418329715729
    2. '
' → logprob: -3.675124168395996
    3. ':' → logprob: -4.550124168395996
    4. '        
' → logprob: -5.300124168395996
    5. ',' → logprob: -6.050124168395996
    6. '   ' → logprob: -6.675124168395996
    7. ':
' → logprob: -7.550124168395996
    8. '        ' → logprob: -7.800124168395996
    9. '(' → logprob: -7.800124168395996
    10. ' 
' → logprob: -8.175124168395996

Token 105: ' these' (ID: 1879)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4542161822319031
    2. 'the' → logprob: -1.7042162418365479
    3. ' these' → logprob: -1.9542162418365479
    4. ' constraints' → logprob: -4.329216003417969
    5. ' all' → logprob: -4.454216003417969
    6. 'these' → logprob: -5.079216003417969
    7. 'constraints' → logprob: -5.829216003417969
    8. '   ' → logprob: -6.704216003417969
    9. 'all' → logprob: -6.954216003417969
    10. ' this' → logprob: -6.954216003417969

Token 106: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.1072131097316742
    2. ' constraint' → logprob: -2.607213020324707
    3. 'constraints' → logprob: -4.982213020324707
    4. ' ' → logprob: -5.107213020324707
    5. ' conditions' → logprob: -5.107213020324707
    6. 'constraint' → logprob: -5.482213020324707
    7. '   ' → logprob: -7.232213020324707
    8. '
' → logprob: -7.357213020324707
    9. '_' → logprob: -7.732213020324707
    10. ':' → logprob: -8.107213020324707

Token 107: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16628725826740265
    2. '
' → logprob: -2.1662871837615967
    3. ':' → logprob: -3.6662871837615967
    4. '        
' → logprob: -4.791287422180176
    5. 'import' → logprob: -7.416287422180176
    6. ',' → logprob: -7.541287422180176
    7. '   ' → logprob: -7.666287422180176
    8. '' → logprob: -8.166287422180176
    9. '```' → logprob: -8.166287422180176
    10. '\' → logprob: -8.166287422180176

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025028372183442116
    2. ':' → logprob: -4.150028228759766
    3. '#' → logprob: -5.400028228759766
    4. '   ' → logprob: -6.650028228759766
    5. '        
' → logprob: -6.775028228759766
    6. '
' → logprob: -7.400028228759766
    7. 'import' → logprob: -8.150028228759766
    8. ':
' → logprob: -8.775028228759766
    9. ',' → logprob: -8.900028228759766
    10. 'n' → logprob: -9.275028228759766

Token 109: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6434810757637024
    2. 'parent' → logprob: -1.3934810161590576
    3. 'pass' → logprob: -2.8934810161590576
    4. 'def' → logprob: -3.0184810161590576
    5. 'edges' → logprob: -3.2684810161590576
    6. 'import' → logprob: -3.3934810161590576
    7. '       ' → logprob: -3.7684810161590576
    8. 'class' → logprob: -4.268481254577637
    9. 'from' → logprob: -5.768481254577637
    10. 'return' → logprob: -6.143481254577637

Token 110: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7722553610801697
    2. ' edges' → logprob: -2.1472554206848145
    3. '       ' → logprob: -2.8972554206848145
    4. 'import' → logprob: -2.8972554206848145
    5. ' #' → logprob: -3.0222554206848145
    6. 'def' → logprob: -3.1472554206848145
    7. 'edges' → logprob: -3.2722554206848145
    8. 'from' → logprob: -3.6472554206848145
    9. ' parent' → logprob: -3.7722554206848145
    10. 'parent' → logprob: -3.7722554206848145

Token 111: ' build' (ID: 3024)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8122936487197876
    2. 'try' → logprob: -1.6872936487197876
    3. 'use' → logprob: -1.6872936487197876
    4. ' use' → logprob: -3.312293529510498
    5. 'def' → logprob: -3.437293529510498
    6. 'implement' → logprob: -3.437293529510498
    7. 'sort' → logprob: -4.437293529510498
    8. ' implement' → logprob: -4.562293529510498
    9. ' try' → logprob: -4.562293529510498
    10. ' import' → logprob: -4.687293529510498

Token 112: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1558832973241806
    2. ' two' → logprob: -2.530883312225342
    3. ' an' → logprob: -4.030883312225342
    4. 'a' → logprob: -4.155883312225342
    5. ' the' → logprob: -4.780883312225342
    6. ' edges' → logprob: -4.905883312225342
    7. ' all' → logprob: -5.030883312225342
    8. 'two' → logprob: -6.030883312225342
    9. 'the' → logprob: -6.405883312225342
    10. '       ' → logprob: -7.530883312225342

Token 113: ' abstraction' (ID: 129564)
  Prédit: ' MST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' MST' → logprob: -0.927670955657959
    2. ' algorithm' → logprob: -1.802670955657959
    3. ' approach' → logprob: -1.927670955657959
    4. ' adjacency' → logprob: -2.677670955657959
    5. ' edge' → logprob: -2.802670955657959
    6. ' mst' → logprob: -3.302670955657959
    7. ' array' → logprob: -3.677670955657959
    8. '   ' → logprob: -4.302670955657959
    9. ' ' → logprob: -4.927670955657959
    10. ' import' → logprob: -4.927670955657959

Token 114: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8619715571403503
    2. ' the' → logprob: -1.6119716167449951
    3. ' a' → logprob: -1.7369716167449951
    4. 'a' → logprob: -1.9869716167449951
    5. ' edges' → logprob: -3.236971616744995
    6. ' Kr' → logprob: -4.736971378326416
    7. ' all' → logprob: -6.111971378326416
    8. ' an' → logprob: -6.111971378326416
    9. '"' → logprob: -6.861971378326416
    10. 'def' → logprob: -6.861971378326416

Token 116: ' constrained' (ID: 107530)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8854030966758728
    2. ' Union' → logprob: -1.5104031562805176
    3. ' union' → logprob: -1.8854031562805176
    4. ' spanning' → logprob: -3.1354031562805176
    5. ' binary' → logprob: -3.2604031562805176
    6. ' Dis' → logprob: -4.135403156280518
    7. 'Union' → logprob: -4.260403156280518
    8. ' dis' → logprob: -4.260403156280518
    9. 'union' → logprob: -4.385403156280518
    10. ' weighted' → logprob: -4.510403156280518

Token 117: ' MST' (ID: 123058)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.05375512316823006
    2. ' graph' → logprob: -4.303755283355713
    3. ' minimum' → logprob: -4.553755283355713
    4. ' version' → logprob: -4.928755283355713
    5. 'minimum' → logprob: -5.178755283355713
    6. ' MST' → logprob: -6.178755283355713
    7. 'def' → logprob: -6.303755283355713
    8. 'K' → logprob: -6.678755283355713
    9. 'class' → logprob: -6.678755283355713
    10. ' union' → logprob: -6.803755283355713

Token 118: ' solver' (ID: 63271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4838964343070984
    2. '       ' → logprob: -1.7338964939117432
    3. ':' → logprob: -2.483896493911743
    4. 'def' → logprob: -3.858896493911743
    5. '   ' → logprob: -4.233896255493164
    6. ',' → logprob: -4.608896255493164
    7. '.' → logprob: -4.608896255493164
    8. '#' → logprob: -4.733896255493164
    9. '        
' → logprob: -4.858896255493164
    10. '()' → logprob: -4.983896255493164

Token 119: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5948394536972046
    2. '       ' → logprob: -1.2198394536972046
    3. ':' → logprob: -2.219839572906494
    4. '        
' → logprob: -4.969839572906494
    5. 'def' → logprob: -5.219839572906494
    6. '<|end|>' → logprob: -5.219839572906494
    7. ',' → logprob: -5.344839572906494
    8. '   ' → logprob: -5.594839572906494
    9. '#' → logprob: -5.844839572906494
    10. 'import' → logprob: -5.844839572906494

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3946937918663025
    2. '
' → logprob: -1.7696938514709473
    3. ':' → logprob: -2.2696938514709473
    4. '#' → logprob: -4.394693851470947
    5. '        
' → logprob: -4.644693851470947
    6. '   ' → logprob: -5.144693851470947
    7. 'n' → logprob: -5.394693851470947
    8. '\' → logprob: -5.894693851470947
    9. ' ' → logprob: -6.019693851470947
    10. ',' → logprob: -6.144693851470947

Token 121: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0850019454956055
    2. 'parent' → logprob: -1.4600019454956055
    3. 'import' → logprob: -1.8350019454956055
    4. '       ' → logprob: -2.0850019454956055
    5. 'class' → logprob: -3.2100019454956055
    6. 'def' → logprob: -3.3350019454956055
    7. 'pass' → logprob: -3.7100019454956055
    8. 'uf' → logprob: -4.4600019454956055
    9. 'edges' → logprob: -4.9600019454956055
    10. '   ' → logprob: -5.2100019454956055

Token 122: ' First' (ID: 8338)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7638019323348999
    2. 'pass' → logprob: -1.2638019323349
    3. 'parent' → logprob: -2.1388020515441895
    4. 'class' → logprob: -3.1388020515441895
    5. 'from' → logprob: -4.0138020515441895
    6. 'import' → logprob: -4.1388020515441895
    7. 'def' → logprob: -4.1388020515441895
    8. 'return' → logprob: -5.0138020515441895
    9. '       ' → logprob: -5.1388020515441895
    10. ' pass' → logprob: -5.1388020515441895

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006830694619566202
    2. ':' → logprob: -6.25683069229126
    3. ' edges' → logprob: -7.25683069229126
    4. '=' → logprob: -7.38183069229126
    5. ' =' → logprob: -7.50683069229126
    6. ' ,' → logprob: -7.75683069229126
    7. ')' → logprob: -8.131831169128418
    8. '    ' → logprob: -8.381831169128418
    9. '#' → logprob: -8.381831169128418
    10. 'import' → logprob: -8.506831169128418

Token 124: ' separate' (ID: 13574)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0928150415420532
    2. 'self' → logprob: -1.4678150415420532
    3. ' edges' → logprob: -2.4678149223327637
    4. 'edges' → logprob: -2.9678149223327637
    5. 'def' → logprob: -3.0928149223327637
    6. ' self' → logprob: -3.2178149223327637
    7. '       ' → logprob: -3.3428149223327637
    8. 'parent' → logprob: -3.3428149223327637
    9. 'class' → logprob: -3.5928149223327637
    10. ' parent' → logprob: -4.092814922332764

Token 125: ' edges' (ID: 22569)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8116762042045593
    2. ' edges' → logprob: -0.8116762042045593
    3. 'the' → logprob: -3.311676263809204
    4. 'edges' → logprob: -3.436676263809204
    5. ' company' → logprob: -3.811676263809204
    6. 'company' → logprob: -4.686676025390625
    7. 'A' → logprob: -5.686676025390625
    8. ' A' → logprob: -6.186676025390625
    9. ' proposals' → logprob: -6.311676025390625
    10. 'pro' → logprob: -6.311676025390625

Token 126: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6376650333404541
    2. 'A' → logprob: -1.762665033340454
    3. ' by' → logprob: -2.762665033340454
    4. ' into' → logprob: -3.137665033340454
    5. '       ' → logprob: -3.387665033340454
    6. '=' → logprob: -3.512665033340454
    7. '_' → logprob: -3.512665033340454
    8. '_company' → logprob: -3.762665033340454
    9. '_a' → logprob: -4.012664794921875
    10. 'by' → logprob: -4.512664794921875

Token 127: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.013007387518882751
    2. 'company' → logprob: -4.388007164001465
    3. ' ' → logprob: -8.638007164001465
    4. ' companies' → logprob: -8.888007164001465
    5. '_company' → logprob: -9.513007164001465
    6. ' their' → logprob: -10.388007164001465
    7. 'Company' → logprob: -11.513007164001465
    8. ' the' → logprob: -11.888007164001465
    9. '.company' → logprob: -11.888007164001465
    10. 'A' → logprob: -11.888007164001465

Token 128: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8810197710990906
    2. '
' → logprob: -1.0060198307037354
    3. ':' → logprob: -1.8810198307037354
    4. '        
' → logprob: -3.0060198307037354
    5. '    
' → logprob: -5.631019592285156
    6. ':
' → logprob: -6.256019592285156
    7. '```' → logprob: -6.631019592285156
    8. '  
' → logprob: -6.881019592285156
    9. '   ' → logprob: -7.006019592285156
    10. ' 
' → logprob: -7.006019592285156

Token 129: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8948052525520325
    2. '       ' → logprob: -1.3948051929473877
    3. ':' → logprob: -1.7698051929473877
    4. '<|end|>' → logprob: -1.8948051929473877
    5. '        
' → logprob: -5.144805431365967
    6. 'n' → logprob: -5.894805431365967
    7. '<|end|>' → logprob: -5.894805431365967
    8. ',' → logprob: -6.019805431365967
    9. '```' → logprob: -6.769805431365967
    10. '\n' → logprob: -7.019805431365967

Token 130: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34349581599235535
    2. '
' → logprob: -1.8434958457946777
    3. '        
' → logprob: -3.5934958457946777
    4. 'company' → logprob: -3.7184958457946777
    5. 'edges' (adapté à ' edges') → logprob: -4.093495845794678
    6. 'A' → logprob: -4.343495845794678
    7. ' edges' → logprob: -4.468495845794678
    8. ' A' → logprob: -4.968495845794678
    9. ' company' → logprob: -5.093495845794678
    10. ':' → logprob: -5.218495845794678

Token 131: '_A' (ID: 6829)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09113790839910507
    2. '_A' → logprob: -3.0911378860473633
    3. '_a' → logprob: -3.5911378860473633
    4. 'A' → logprob: -4.716137886047363
    5. '_company' → logprob: -5.716137886047363
    6. '_' → logprob: -6.841137886047363
    7. '=' → logprob: -7.466137886047363
    8. '_by' → logprob: -9.591137886047363
    9. '_comp' → logprob: -9.841137886047363
    10. ' ' → logprob: -10.716137886047363

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005933775100857019
    2. '=' → logprob: -5.13093376159668
    3. ' ' → logprob: -12.88093376159668
    4. ',' → logprob: -13.25593376159668
    5. ' =
' → logprob: -15.38093376159668
    6. '=[]' → logprob: -15.75593376159668
    7. '   ' → logprob: -16.13093376159668
    8. ' ' → logprob: -16.25593376159668
    9. ' =[' → logprob: -16.50593376159668
    10. '  ' → logprob: -16.63093376159668

Token 133: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.007564741652458906
    2. '[' → logprob: -5.007564544677734
    3. '[self' → logprob: -8.507564544677734
    4. '[i' → logprob: -8.757564544677734
    5. '[class' → logprob: -9.382564544677734
    6. '[list' → logprob: -9.507564544677734
    7. '[e' → logprob: -10.257564544677734
    8. '[int' → logprob: -10.757564544677734
    9. '[item' → logprob: -10.882564544677734
    10. ' []' → logprob: -11.007564544677734

Token 134: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1619206666946411
    2. 'p' → logprob: -2.0369205474853516
    3. 'edge' → logprob: -4.286920547485352
    4. 'ep' → logprob: -5.411920547485352
    5. ' e' → logprob: -7.536920547485352
    6. 'proposal' → logprob: -9.036920547485352
    7. ' p' → logprob: -9.286920547485352
    8. '   ' → logprob: -10.286920547485352
    9. ' edge' → logprob: -11.036920547485352
    10. 'prop' → logprob: -11.286920547485352

Token 135: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0036279852502048016
    2. 'for' → logprob: -5.628627777099609
    3. 'f' → logprob: -11.12862777709961
    4. ' ' → logprob: -12.50362777709961
    5. ' f' → logprob: -13.75362777709961
    6. 'or' → logprob: -13.75362777709961
    7. '	for' → logprob: -13.87862777709961
    8. 'r' → logprob: -13.87862777709961
    9. 'ro' → logprob: -14.12862777709961
    10. 'e' → logprob: -14.25362777709961

Token 136: ' e' (ID: 319)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12088564783334732
    2. 'self' → logprob: -2.2458856105804443
    3. ' e' → logprob: -4.995885848999023
    4. 'e' → logprob: -6.745885848999023
    5. ' ' → logprob: -9.995885848999023
    6. '	self' → logprob: -11.245885848999023
    7. ' edge' → logprob: -12.433385848999023
    8. '

' → logprob: -12.558385848999023
    9. ' p' → logprob: -13.308385848999023
    10. '(self' → logprob: -13.683385848999023

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03465157374739647
    2. 'in' → logprob: -3.409651517868042
    3. ' e' → logprob: -7.534651756286621
    4. 'e' → logprob: -7.909651756286621
    5. ' ' → logprob: -9.784651756286621
    6. '.' → logprob: -11.034651756286621
    7. '.e' → logprob: -11.284651756286621
    8. 's' → logprob: -12.534651756286621
    9. '  ' → logprob: -13.034651756286621
    10. 'self' → logprob: -13.284651756286621

Token 138: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007619637995958328
    2. ' self' → logprob: -4.882619857788086
    3. '
' → logprob: -13.132619857788086
    4. '           ' → logprob: -13.132619857788086
    5. '       ' → logprob: -13.132619857788086
    6. '(self' → logprob: -13.757619857788086
    7. '   ' → logprob: -13.882619857788086
    8. ' ' → logprob: -13.882619857788086
    9. '	self' → logprob: -14.632619857788086
    10. '    ' → logprob: -14.882619857788086

Token 139: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.0001025895617203787
    2. '.' → logprob: -9.750102996826172
    3. 'pro' → logprob: -10.750102996826172
    4. ' .' → logprob: -10.875102996826172
    5. '.user' → logprob: -13.250102996826172
    6. '_.' → logprob: -15.500102996826172
    7. '.p' → logprob: -15.500102996826172
    8. '.pr' → logprob: -15.875102996826172
    9. '._' → logprob: -15.875102996826172
    10. '.pre' → logprob: -15.875102996826172

Token 140: 'posals' (ID: 101779)
  Prédit: 'posals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posals' → logprob: -0.0021500231232494116
    2. 'pos' → logprob: -6.752150058746338
    3. 'p' → logprob: -8.12714958190918
    4. '```' → logprob: -8.50214958190918
    5. 'posal' → logprob: -8.87714958190918
    6. 'ps' → logprob: -9.50214958190918
    7. 's' → logprob: -9.50214958190918
    8. 'sal' → logprob: -9.87714958190918
    9. '
' → logprob: -10.62714958190918
    10. 'als' → logprob: -10.75214958190918

Token 141: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00011272187111899257
    2. 'if' → logprob: -9.125112533569336
    3. ' ' → logprob: -12.625112533569336
    4. '    ' → logprob: -15.875112533569336
    5. ']' → logprob: -16.125112533569336
    6. '	if' → logprob: -16.750112533569336
    7. '        ' → logprob: -17.625112533569336
    8. ' ]' → logprob: -17.625112533569336
    9. '   ' → logprob: -18.125112533569336
    10. '  ' → logprob: -18.375112533569336

Token 142: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0013266648165881634
    2. 'e' → logprob: -6.626326560974121
    3. '	e' → logprob: -15.126326560974121
    4. ' ' → logprob: -15.376326560974121
    5. ' hasattr' → logprob: -16.251327514648438
    6. ' getattr' → logprob: -16.501327514648438
    7. '_e' → logprob: -16.626327514648438
    8. ' ' → logprob: -17.376327514648438
    9. ' isinstance' → logprob: -18.001327514648438
    10. '    ' → logprob: -18.001327514648438

Token 143: '.company' (ID: 48225)
  Prédit: '.company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.002125637838616967
    2. '.' → logprob: -6.8771257400512695
    3. ' .' → logprob: -8.25212574005127
    4. '.comp' → logprob: -8.50212574005127
    5. '.c' → logprob: -8.87712574005127
    6. '.e' → logprob: -9.25212574005127
    7. '.type' → logprob: -9.50212574005127
    8. '.com' → logprob: -9.87712574005127
    9. '.owner' → logprob: -10.37712574005127
    10. '.is' → logprob: -10.75212574005127

Token 144: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023324089124798775
    2. '==' → logprob: -3.7733240127563477
    3. '=='' → logprob: -10.523324012756348
    4. '=' → logprob: -11.273324012756348
    5. '=="' → logprob: -11.398324012756348
    6. ' ' → logprob: -11.398324012756348
    7. 'A' → logprob: -11.648324012756348
    8. ' =='' → logprob: -13.398324012756348
    9. ' =' → logprob: -13.773324012756348
    10. '_' → logprob: -13.773324012756348

Token 145: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.014568899758160114
    2. ''A' → logprob: -4.63956880569458
    3. ''' → logprob: -5.51456880569458
    4. ' ' → logprob: -7.88956880569458
    5. 'A' → logprob: -8.764569282531738
    6. ' "' → logprob: -9.139569282531738
    7. '"A' → logprob: -9.639569282531738
    8. ''a' → logprob: -10.514569282531738
    9. ' A' → logprob: -10.764569282531738
    10. '"' → logprob: -11.264569282531738

Token 146: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010647247545421124
    2. ' A' → logprob: -6.876064777374268
    3. ''A' → logprob: -10.75106430053711
    4. 'a' → logprob: -12.25106430053711
    5. '"A' → logprob: -13.00106430053711
    6. ''' → logprob: -13.37606430053711
    7. 'Company' → logprob: -14.37606430053711
    8. ' '' → logprob: -15.00106430053711
    9. '_A' → logprob: -15.50106430053711
    10. ' ' → logprob: -15.50106430053711

Token 147: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0016229336615651846
    2. ']' → logprob: -6.501623153686523
    3. '']
' → logprob: -9.501623153686523
    4. ''' → logprob: -10.251623153686523
    5. ' ']' → logprob: -12.251623153686523
    6. '']

' → logprob: -13.126623153686523
    7. ')' → logprob: -13.626623153686523
    8. '"]' → logprob: -14.376623153686523
    9. ' ]' → logprob: -14.501623153686523
    10. '']
' → logprob: -14.751623153686523

Token 148: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07406111806631088
    2. '       ' → logprob: -2.949061155319214
    3. '<|end|>' → logprob: -4.699060916900635
    4. ' edges' → logprob: -5.324060916900635
    5. 'edges' → logprob: -6.074060916900635
    6. ')
' → logprob: -7.449060916900635
    7. '        
' → logprob: -7.574060916900635
    8. ')' → logprob: -7.699060916900635
    9. ' 
' → logprob: -8.074061393737793
    10. '  
' → logprob: -8.824061393737793

Token 149: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7366820573806763
    2. 'edges' (adapté à ' edges') → logprob: -0.7366820573806763
    3. '
' → logprob: -3.2366819381713867
    4. '       ' → logprob: -6.361681938171387
    5. ' 
' → logprob: -6.861681938171387
    6. '.edges' → logprob: -8.986681938171387
    7. '        
' → logprob: -9.111681938171387
    8. '_edges' → logprob: -9.236681938171387
    9. '    
' → logprob: -10.236681938171387
    10. '(edges' → logprob: -10.236681938171387

Token 150: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.07910601794719696
    2. '_' → logprob: -2.579106092453003
    3. ' _' → logprob: -8.704106330871582
    4. ' =' → logprob: -11.329106330871582
    5. '_b' → logprob: -11.454106330871582
    6. 'B' → logprob: -12.079106330871582
    7. '=' → logprob: -12.204106330871582
    8. '_=' → logprob: -12.704106330871582
    9. ' ' → logprob: -12.954106330871582
    10. ' B' → logprob: -13.204106330871582

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858759790658951
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.923587799072266
    4. ' =[' → logprob: -17.673587799072266
    5. ']' → logprob: -18.548587799072266
    6. ')' → logprob: -18.923587799072266
    7. ' ' → logprob: -19.173587799072266
    8. '=[]' → logprob: -19.548587799072266
    9. ' =
' → logprob: -19.673587799072266
    10. '=[' → logprob: -19.673587799072266

Token 152: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.048873256891965866
    2. '[e' → logprob: -3.04887318611145
    3. '[' → logprob: -8.173872947692871
    4. ' e' → logprob: -13.548872947692871
    5. ' ' → logprob: -13.798872947692871
    6. 'e' → logprob: -14.548872947692871
    7. '[f' → logprob: -14.923872947692871
    8. '[i' → logprob: -15.548872947692871
    9. '[t' → logprob: -16.048873901367188
    10. '[a' → logprob: -16.173873901367188

Token 153: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007613963447511196
    2. ' e' → logprob: -4.8826141357421875
    3. '   ' → logprob: -12.882614135742188
    4. ' ' → logprob: -13.757614135742188
    5. '       ' → logprob: -14.132614135742188
    6. '     ' → logprob: -14.382614135742188
    7. '    ' → logprob: -14.507614135742188
    8. '(e' → logprob: -15.132614135742188
    9. '           ' → logprob: -15.132614135742188
    10. '	e' → logprob: -15.132614135742188

Token 154: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07904952019453049
    2. 'e' → logprob: -3.329049587249756
    3. 'for' → logprob: -3.704049587249756
    4. ' e' → logprob: -5.204049587249756
    5. '.e' → logprob: -5.454049587249756
    6. '==' → logprob: -5.829049587249756
    7. '.' → logprob: -6.829049587249756
    8. ' ' → logprob: -7.954049587249756
    9. ' ==' → logprob: -7.954049587249756
    10. ' in' → logprob: -8.204049110412598

Token 155: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06197911128401756
    2. ' e' → logprob: -2.811979055404663
    3. '   ' → logprob: -12.436979293823242
    4. ' ' → logprob: -13.311979293823242
    5. ' for' → logprob: -13.936979293823242
    6. '(e' → logprob: -14.061979293823242
    7. '    ' → logprob: -14.186979293823242
    8. '  ' → logprob: -14.811979293823242
    9. '       ' → logprob: -14.811979293823242
    10. '     ' → logprob: -15.186979293823242

Token 156: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3896242678165436
    2. ' ==' → logprob: -2.1396243572235107
    3. ' e' → logprob: -3.3896243572235107
    4. ' for' → logprob: -3.3896243572235107
    5. 'e' → logprob: -3.7646243572235107
    6. '=='' → logprob: -3.8896243572235107
    7. ''' → logprob: -4.014624118804932
    8. 'for' → logprob: -4.139624118804932
    9. ' '' → logprob: -4.139624118804932
    10. '.e' → logprob: -4.264624118804932

Token 157: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029914790764451027
    2. ' self' → logprob: -3.5299148559570312
    3. 'e' → logprob: -9.529914855957031
    4. '[self' → logprob: -10.529914855957031
    5. ' e' → logprob: -10.904914855957031
    6. ' [' → logprob: -11.279914855957031
    7. 'pro' → logprob: -11.404914855957031
    8. '[e' → logprob: -12.029914855957031
    9. 'p' → logprob: -12.654914855957031
    10. '[' → logprob: -12.904914855957031

Token 158: '.pro' (ID: 3231)
  Prédit: '.company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.3047883212566376
    2. 'company' → logprob: -1.67978835105896
    3. 'pro' → logprob: -3.67978835105896
    4. ' for' → logprob: -4.429788112640381
    5. '.pro' → logprob: -4.554788112640381
    6. ' company' → logprob: -4.929788112640381
    7. ' .' → logprob: -5.804788112640381
    8. ' if' → logprob: -5.804788112640381
    9. 'proposal' → logprob: -5.804788112640381
    10. 'for' → logprob: -5.929788112640381

Token 159: 'posals' (ID: 101779)
  Prédit: 'posals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posals' → logprob: -0.001326433615759015
    2. 'p' → logprob: -8.001326560974121
    3. 'posal' → logprob: -8.126326560974121
    4. '```' → logprob: -8.376326560974121
    5. 'pos' → logprob: -8.501326560974121
    6. 'A' → logprob: -9.126326560974121
    7. '   ' → logprob: -10.751326560974121
    8. 'os' → logprob: -11.126326560974121
    9. 'positions' → logprob: -11.251326560974121
    10. 's' → logprob: -11.501326560974121

Token 160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011053359135985374
    2. 'if' → logprob: -4.511053562164307
    3. ' ==' → logprob: -13.011053085327148
    4. ' ' → logprob: -13.386053085327148
    5. '==' → logprob: -13.386053085327148
    6. ']' → logprob: -16.01105308532715
    7. ' and' → logprob: -16.76105308532715
    8. ' for' → logprob: -17.01105308532715
    9. ' ]' → logprob: -17.76105308532715
    10. '        ' → logprob: -18.01105308532715

Token 161: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.11282549798488617
    2. 'e' → logprob: -2.237825393676758
    3. ' ' → logprob: -13.112825393676758
    4. ' ' → logprob: -14.362825393676758
    5. '	e' → logprob: -15.487825393676758
    6. ' (' → logprob: -16.800325393676758
    7. '
' → logprob: -16.987825393676758
    8. '    ' → logprob: -17.175325393676758
    9. '

' → logprob: -17.237825393676758
    10. ')' → logprob: -17.300325393676758

Token 162: '.company' (ID: 48225)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.81846022605896
    2. '.' → logprob: -1.31846022605896
    3. '==' → logprob: -1.81846022605896
    4. '.company' → logprob: -2.19346022605896
    5. ' !=' → logprob: -4.318460464477539
    6. 'company' → logprob: -6.318460464477539
    7. '!=' → logprob: -6.443460464477539
    8. ' .' → logprob: -8.193460464477539
    9. ' company' → logprob: -8.568460464477539
    10. ' ' → logprob: -9.068460464477539

Token 163: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06199009716510773
    2. '==' → logprob: -2.8119900226593018
    3. ' ' → logprob: -11.811989784240723
    4. '=='' → logprob: -11.936989784240723
    5. ' =='' → logprob: -12.936989784240723
    6. '=' → logprob: -13.436989784240723
    7. ']==' → logprob: -13.811989784240723
    8. ' !=' → logprob: -14.311989784240723
    9. ')' → logprob: -14.686989784240723
    10. ']' → logprob: -14.686989784240723

Token 164: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04861154779791832
    2. ' '' → logprob: -3.048611640930176
    3. ''A' → logprob: -11.173611640930176
    4. '"' → logprob: -12.673611640930176
    5. '('' → logprob: -13.798611640930176
    6. ' ' → logprob: -13.798611640930176
    7. '(' → logprob: -14.048611640930176
    8. '=' → logprob: -14.423611640930176
    9. ' ' → logprob: -14.548611640930176
    10. '
' → logprob: -14.923611640930176

Token 165: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.030146608129143715
    2. 'B' → logprob: -3.530146598815918
    3. ' '' → logprob: -7.905146598815918
    4. ' B' → logprob: -10.905146598815918
    5. '"B' → logprob: -12.405146598815918
    6. ''b' → logprob: -13.405146598815918
    7. ' ' → logprob: -14.030146598815918
    8. ''S' → logprob: -14.155146598815918
    9. '('' → logprob: -15.530146598815918
    10. '’' → logprob: -15.530146598815918

Token 166: '']

' (ID: 36979)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015542630571871996
    2. ' ]' → logprob: -6.751554489135742
    3. '']' → logprob: -7.876554489135742
    4. ']
' → logprob: -13.501554489135742
    5. '"]' → logprob: -13.751554489135742
    6. ']

' → logprob: -14.126554489135742
    7. '       ' → logprob: -15.126554489135742
    8. '   ' → logprob: -15.251554489135742
    9. ')]' → logprob: -15.751554489135742
    10. '`]' → logprob: -15.876554489135742

Token 167: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04720548167824745
    2. '       ' → logprob: -3.1722054481506348
    3. '<|end|>' → logprob: -6.297205448150635
    4. '        
' → logprob: -6.672205448150635
    5. ',' → logprob: -8.922205924987793
    6. '
' → logprob: -9.047205924987793
    7. '```' → logprob: -9.297205924987793
    8. '

' → logprob: -9.297205924987793
    9. '  
' → logprob: -9.422205924987793
    10. ')' → logprob: -9.672205924987793

Token 168: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3276338279247284
    2. 'if' → logprob: -2.452633857727051
    3. '       ' → logprob: -2.452633857727051
    4. 'all' → logprob: -3.452633857727051
    5. 'def' → logprob: -4.452633857727051
    6. 'import' → logprob: -4.577633857727051
    7. 'edges' → logprob: -4.577633857727051
    8. 'uf' → logprob: -4.952633857727051
    9. 'result' → logprob: -5.202633857727051
    10. 'n' → logprob: -5.202633857727051

Token 169: ' Sort' (ID: 25945)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5127003192901611
    2. 'def' → logprob: -2.387700319290161
    3. 'edges' → logprob: -2.387700319290161
    4. 'all' → logprob: -2.887700319290161
    5. 'if' → logprob: -3.012700319290161
    6. 'import' → logprob: -3.262700319290161
    7. 'from' → logprob: -3.512700319290161
    8. 'class' → logprob: -5.262700080871582
    9. 'possible' → logprob: -5.262700080871582
    10. 'total' → logprob: -5.512700080871582

Token 170: ' edges' (ID: 22569)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.6451524496078491
    2. ' edges' → logprob: -1.3951524496078491
    3. 'edges' → logprob: -1.8951524496078491
    4. '_edges' → logprob: -3.1451525688171387
    5. '(' → logprob: -3.7701525688171387
    6. '       ' → logprob: -5.395152568817139
    7. ' (' → logprob: -5.395152568817139
    8. '   ' → logprob: -7.145152568817139
    9. '(
' → logprob: -7.645152568817139
    10. '_' → logprob: -8.64515209197998

Token 171: ' by' (ID: 656)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.03123576194047928
    2. ' =' → logprob: -3.906235694885254
    3. '=' → logprob: -5.281235694885254
    4. '_edges' → logprob: -6.406235694885254
    5. '   ' → logprob: -6.781235694885254
    6. '       ' → logprob: -7.406235694885254
    7. '_' → logprob: -7.531235694885254
    8. '(edges' → logprob: -7.656235694885254
    9. 'A' → logprob: -8.406235694885254
    10. '(' → logprob: -8.656235694885254

Token 172: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5977314710617065
    2. 'cost' → logprob: -0.8477314710617065
    3. 'e' → logprob: -4.597731590270996
    4. ' e' → logprob: -5.347731590270996
    5. ' lambda' → logprob: -5.472731590270996
    6. 'lambda' → logprob: -6.097731590270996
    7. '   ' → logprob: -9.472731590270996
    8. ' key' → logprob: -10.597731590270996
    9. 'edge' → logprob: -10.597731590270996
    10. 'key' → logprob: -10.722731590270996

Token 173: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16032080352306366
    2. 'edges' → logprob: -2.53532075881958
    3. '(edges' → logprob: -4.16032075881958
    4. ' edges' → logprob: -4.41032075881958
    5. ' =' → logprob: -4.41032075881958
    6. '=' → logprob: -4.78532075881958
    7. ',' → logprob: -5.16032075881958
    8. '        
' → logprob: -5.53532075881958
    9. '.sort' → logprob: -6.16032075881958
    10. '_edges' → logprob: -6.28532075881958

Token 174: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.804426372051239
    2. 'edges' → logprob: -0.804426372051239
    3. ' edges' → logprob: -3.054426431655884
    4. '(edges' → logprob: -3.429426431655884
    5. '
' → logprob: -4.804426193237305
    6. ',' → logprob: -4.929426193237305
    7. '        
' → logprob: -6.054426193237305
    8. ',
' → logprob: -6.554426193237305
    9. '.edges' → logprob: -7.054426193237305
    10. '   ' → logprob: -7.054426193237305

Token 175: ' this' (ID: 495)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.32902318239212036
    2. 'edges' → logprob: -1.8290231227874756
    3. ' then' → logprob: -2.9540231227874756
    4. '       ' → logprob: -3.5790231227874756
    5. ' key' → logprob: -3.8290231227874756
    6. 'key' → logprob: -5.829023361206055
    7. ' and' → logprob: -5.954023361206055
    8. ' but' → logprob: -6.079023361206055
    9. '        
' → logprob: -6.204023361206055
    10. 'then' → logprob: -6.954023361206055

Token 176: ' helps' (ID: 9335)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.902378499507904
    2. ' is' → logprob: -2.277378559112549
    3. ':' → logprob: -2.777378559112549
    4. '.sort' → logprob: -3.027378559112549
    5. '.' → logprob: -3.277378559112549
    6. ' .' → logprob: -3.402378559112549
    7. ' can' → logprob: -3.402378559112549
    8. '#' → logprob: -3.652378559112549
    9. ' may' → logprob: -3.777378559112549
    10. ' could' → logprob: -3.902378559112549

Token 177: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6220043897628784
    2. ' for' → logprob: -1.2470043897628784
    3. 'for' → logprob: -2.997004508972168
    4. '       ' → logprob: -3.247004508972168
    5. ' in' → logprob: -3.747004508972168
    6. 'to' → logprob: -4.122004508972168
    7. '.' → logprob: -4.247004508972168
    8. ' edges' → logprob: -4.622004508972168
    9. 'edges' → logprob: -5.372004508972168
    10. ' with' → logprob: -5.372004508972168

Token 178: ' try' (ID: 2075)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.7318224906921387
    2. ' merge' → logprob: -2.2318224906921387
    3. ' ensure' → logprob: -2.3568224906921387
    4. 'merge' → logprob: -2.6068224906921387
    5. ' build' → logprob: -2.7318224906921387
    6. ' try' → logprob: -2.8568224906921387
    7. 'choose' → logprob: -2.9818224906921387
    8. ' process' → logprob: -3.3568224906921387
    9. 'combine' → logprob: -3.3568224906921387
    10. ' select' → logprob: -3.4818224906921387

Token 179: ' smaller' (ID: 13679)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.23011480271816254
    2. '       ' → logprob: -2.730114698410034
    3. ' all' → logprob: -3.355114698410034
    4. 'to' → logprob: -3.355114698410034
    5. ' edges' → logprob: -3.980114698410034
    6. '   ' → logprob: -4.230114936828613
    7. 'all' → logprob: -4.480114936828613
    8. ' them' → logprob: -4.730114936828613
    9. ' adding' → logprob: -5.480114936828613
    10. ':' → logprob: -5.605114936828613

Token 180: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.26306354999542236
    2. ' cost' → logprob: -2.013063430786133
    3. ' edges' → logprob: -3.013063430786133
    4. ' costs' → logprob: -3.513063430786133
    5. 'edges' → logprob: -4.888063430786133
    6. '_cost' → logprob: -5.638063430786133
    7. 'weights' → logprob: -6.763063430786133
    8. 'weight' → logprob: -6.888063430786133
    9. ' increments' → logprob: -7.138063430786133
    10. '   ' → logprob: -7.388063430786133

Token 181: ' first' (ID: 1577)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.1824856996536255
    2. '       ' → logprob: -1.4324856996536255
    3. ' edges' → logprob: -2.057485580444336
    4. ' for' → logprob: -2.182485580444336
    5. 'for' → logprob: -2.682485580444336
    6. '.' → logprob: -3.557485580444336
    7. ' in' → logprob: -3.557485580444336
    8. '(edges' → logprob: -4.307485580444336
    9. '   ' → logprob: -4.682485580444336
    10. ' first' → logprob: -4.682485580444336

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03201916068792343
    2. 'edges' → logprob: -4.032019138336182
    3. '
' → logprob: -5.032019138336182
    4. ' edges' → logprob: -5.532019138336182
    5. '        
' → logprob: -6.657019138336182
    6. '(edges' → logprob: -7.407019138336182
    7. '.' → logprob: -8.03201961517334
    8. ',' → logprob: -8.03201961517334
    9. '.edges' → logprob: -8.53201961517334
    10. '   ' → logprob: -8.90701961517334

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1170196458697319
    2. '
' → logprob: -2.2420196533203125
    3. '        
' → logprob: -5.8670196533203125
    4. ',' → logprob: -7.9920196533203125
    5. '.' → logprob: -8.742019653320312
    6. '  
' → logprob: -8.992019653320312
    7. '<|end|>' → logprob: -9.242019653320312
    8. '    
' → logprob: -9.492019653320312
    9. ' edges' → logprob: -9.742019653320312
    10. '   ' → logprob: -9.742019653320312

Token 184: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.3632567226886749
    2. ' edges' → logprob: -1.2382566928863525
    3. '       ' → logprob: -4.238256931304932
    4. '   ' → logprob: -9.238256454467773
    5. '(edges' → logprob: -9.738256454467773
    6. '        
' → logprob: -10.613256454467773
    7. '.edges' → logprob: -10.613256454467773
    8. '
' → logprob: -10.863256454467773
    9. '```' → logprob: -12.113256454467773
    10. 'sorted' → logprob: -12.238256454467773

Token 185: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0026272619143128395
    2. '_' → logprob: -6.127627372741699
    3. ' =' → logprob: -8.3776273727417
    4. '_=' → logprob: -9.7526273727417
    5. '=' → logprob: -9.8776273727417
    6. '_B' → logprob: -10.1276273727417
    7. '.sort' → logprob: -11.1276273727417
    8. ' _' → logprob: -11.3776273727417
    9. '_sorted' → logprob: -11.6276273727417
    10. 'sort' → logprob: -12.6276273727417

Token 186: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.000984935206361115
    2. '.' → logprob: -7.625985145568848
    3. '=' → logprob: -7.750985145568848
    4. ' =' → logprob: -10.125985145568848
    5. 'sort' → logprob: -10.750985145568848
    6. ' .' → logprob: -12.875985145568848
    7. ' sort' → logprob: -14.000985145568848
    8. 'sorted' → logprob: -14.875985145568848
    9. ')' → logprob: -15.250985145568848
    10. '.sorted' → logprob: -15.250985145568848

Token 187: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. '()' → logprob: -15.37500286102295
    4. 'key' → logprob: -16.125001907348633
    5. '(lambda' → logprob: -16.625001907348633
    6. '(reverse' → logprob: -16.875001907348633
    7. '(
' → logprob: -17.500001907348633
    8. ',key' → logprob: -19.125001907348633
    9. ' (' → logprob: -19.750001907348633
    10. ' key' → logprob: -20.875001907348633

Token 188: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -7.52919222577475e-05
    2. '=' → logprob: -9.500075340270996
    3. 'lambda' → logprob: -15.125075340270996
    4. ' =' → logprob: -16.25007438659668
    5. '(lambda' → logprob: -17.62507438659668
    6. ' lambda' → logprob: -18.62507438659668
    7. '=
' → logprob: -19.62507438659668
    8. '=len' → logprob: -20.12507438659668
    9. '=_' → logprob: -21.62507438659668
    10. '=edge' → logprob: -22.00007438659668

Token 189: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.03805813565850258
    2. 'e' → logprob: -3.288058042526245
    3. ' edge' → logprob: -11.538058280944824
    4. ' x' → logprob: -12.663058280944824
    5. 'x' → logprob: -12.913058280944824
    6. 'edge' → logprob: -13.663058280944824
    7. '	e' → logprob: -16.163057327270508
    8. ':' → logprob: -17.663057327270508
    9. ':e' → logprob: -18.663057327270508
    10. ' ' → logprob: -18.788057327270508

Token 190: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015732256695628166
    2. 'e' → logprob: -4.515732288360596
    3. ':e' → logprob: -6.015732288360596
    4. ' e' → logprob: -6.390732288360596
    5. ' :' → logprob: -7.765732288360596
    6. '.' → logprob: -10.140731811523438
    7. '.e' → logprob: -10.140731811523438
    8. 'cost' → logprob: -10.890731811523438
    9. '=e' → logprob: -11.640731811523438
    10. ' cost' → logprob: -12.015731811523438

Token 191: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12692853808403015
    2. ' e' → logprob: -2.1269285678863525
    3. '   ' → logprob: -16.251928329467773
    4. '	e' → logprob: -16.251928329467773
    5. ' ' → logprob: -16.501928329467773
    6. '(e' → logprob: -16.626928329467773
    7. ')e' → logprob: -16.751928329467773
    8. '_e' → logprob: -18.376928329467773
    9. '    ' → logprob: -18.376928329467773
    10. '  ' → logprob: -18.751928329467773

Token 192: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0004973902832716703
    2. 'cost' → logprob: -7.750497341156006
    3. '.' → logprob: -10.125497817993164
    4. ' cost' → logprob: -11.000497817993164
    5. ' .' → logprob: -12.375497817993164
    6. '.price' → logprob: -13.250497817993164
    7. '.c' → logprob: -14.000497817993164
    8. '_cost' → logprob: -14.500497817993164
    9. '-cost' → logprob: -14.875497817993164
    10. '.e' → logprob: -14.875497817993164

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035393505822867155
    2. ' )' → logprob: -8.250353813171387
    3. ')
' → logprob: -9.375353813171387
    4. ',' → logprob: -12.625353813171387
    5. ')#' → logprob: -13.875353813171387
    6. ')e' → logprob: -14.375353813171387
    7. '),' → logprob: -14.375353813171387
    8. '))' → logprob: -14.750353813171387
    9. ')return' → logprob: -15.000353813171387
    10. ')

' → logprob: -15.250353813171387

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007563675753772259
    2. 'edges' → logprob: -5.132563591003418
    3. '
' → logprob: -7.257563591003418
    4. ' edges' → logprob: -7.382563591003418
    5. '(edges' → logprob: -9.007563591003418
    6. '        
' → logprob: -9.132563591003418
    7. '<|end|>' → logprob: -10.632563591003418
    8. '.edges' → logprob: -10.757563591003418
    9. '   ' → logprob: -12.257563591003418
    10. ',' → logprob: -12.382563591003418

Token 195: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.48877084255218506
    2. ' edges' → logprob: -0.9887708425521851
    3. '       ' → logprob: -4.238770961761475
    4. '
' → logprob: -9.988770484924316
    5. '        
' → logprob: -10.363770484924316
    6. '.edges' → logprob: -10.488770484924316
    7. '(edges' → logprob: -11.113770484924316
    8. '   ' → logprob: -11.113770484924316
    9. ' 
' → logprob: -11.738770484924316
    10. ' ' → logprob: -12.738770484924316

Token 196: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0010524577228352427
    2. '_' → logprob: -7.001052379608154
    3. '_A' → logprob: -9.126052856445312
    4. '._' → logprob: -11.001052856445312
    5. ' _' → logprob: -11.751052856445312
    6. '.' → logprob: -12.876052856445312
    7. '_edges' → logprob: -13.751052856445312
    8. ')_' → logprob: -14.501052856445312
    9. '_
' → logprob: -14.626052856445312
    10. '_S' → logprob: -15.001052856445312

Token 197: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0003384422743692994
    2. '.' → logprob: -8.000338554382324
    3. ' .' → logprob: -13.000338554382324
    4. '.reverse' → logprob: -14.750338554382324
    5. '.s' → logprob: -16.250337600708008
    6. 'sort' → logprob: -16.500337600708008
    7. '.setdefault' → logprob: -16.625337600708008
    8. ').' → logprob: -17.500337600708008
    9. '.expand' → logprob: -17.625337600708008
    10. '.sorted' → logprob: -17.750337600708008

Token 198: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -8.959636033978313e-05
    2. '(lambda' → logprob: -9.375089645385742
    3. '(' → logprob: -13.000089645385742
    4. 'key' → logprob: -13.250089645385742
    5. ' (' → logprob: -15.000089645385742
    6. ' key' → logprob: -15.250089645385742
    7. ',key' → logprob: -15.750089645385742
    8. '=lambda' → logprob: -17.250089645385742
    9. 'lambda' → logprob: -18.750089645385742
    10. '(
' → logprob: -18.875089645385742

Token 199: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0008132012444548309
    2. 'lambda' → logprob: -7.250813007354736
    3. '=' → logprob: -9.250813484191895
    4. 'ambda' → logprob: -12.000813484191895
    5. '(lambda' → logprob: -14.750813484191895
    6. ' lambda' → logprob: -15.375813484191895
    7. 'key' → logprob: -15.875813484191895
    8. ' =' → logprob: -16.125812530517578
    9. '_lambda' → logprob: -16.500812530517578
    10. 'a' → logprob: -17.875812530517578

Token 200: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.19170455634593964
    2. 'e' → logprob: -2.316704511642456
    3. ' lambda' → logprob: -2.941704511642456
    4. 'lambda' → logprob: -3.941704511642456
    5. '=lambda' → logprob: -5.691704750061035
    6. '(lambda' → logprob: -8.441704750061035
    7. '(e' → logprob: -11.191704750061035
    8. '=' → logprob: -11.691704750061035
    9. ' key' → logprob: -11.941704750061035
    10. ' lamb' → logprob: -11.941704750061035

Token 201: ':' (ID: 25)
  Prédit: '.cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0049642897211015224
    2. 'cost' → logprob: -5.379964351654053
    3. '.' → logprob: -8.379963874816895
    4. ' cost' → logprob: -9.879963874816895
    5. '_cost' → logprob: -10.629963874816895
    6. ' .' → logprob: -11.629963874816895
    7. '.key' → logprob: -11.754963874816895
    8. ').' → logprob: -12.254963874816895
    9. '-cost' → logprob: -12.754963874816895
    10. '(cost' → logprob: -12.879963874816895

Token 202: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05937647819519043
    2. ' e' → logprob: -3.1843764781951904
    3. 'lambda' → logprob: -4.3093767166137695
    4. ' lambda' → logprob: -6.3093767166137695
    5. 'cost' → logprob: -7.0593767166137695
    6. ' cost' → logprob: -9.18437671661377
    7. '(lambda' → logprob: -12.05937671661377
    8. '(e' → logprob: -12.68437671661377
    9. 'c' → logprob: -13.05937671661377
    10. 'key' → logprob: -13.18437671661377

Token 203: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.0007196996593847871
    2. 'cost' → logprob: -7.2507195472717285
    3. ' cost' → logprob: -12.000720024108887
    4. '.' → logprob: -13.375720024108887
    5. ' .' → logprob: -13.625720024108887
    6. '-cost' → logprob: -15.500720024108887
    7. '_cost' → logprob: -15.625720024108887
    8. '.sort' → logprob: -15.625720024108887
    9. '(cost' → logprob: -16.25071907043457
    10. 'Cost' → logprob: -16.75071907043457

Token 204: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '       ' → logprob: -13.125004768371582
    3. ')
' → logprob: -13.250004768371582
    4. ' )' → logprob: -14.875004768371582
    5. ')

' → logprob: -15.500004768371582
    6. '))' → logprob: -16.625003814697266
    7. '   ' → logprob: -18.125003814697266
    8. ')`' → logprob: -18.125003814697266
    9. ')
' → logprob: -18.625003814697266
    10. '()' → logprob: -19.500003814697266

Token 205: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4504905045032501
    2. '       ' → logprob: -1.0754904747009277
    3. '        
' → logprob: -4.325490474700928
    4. '<|end|>' → logprob: -5.950490474700928
    5. '#' → logprob: -6.825490474700928
    6. 'n' → logprob: -6.950490474700928
    7. '```' → logprob: -7.325490474700928
    8. 'def' → logprob: -7.450490474700928
    9. 'return' → logprob: -7.950490474700928
    10. 'import' → logprob: -8.450490951538086

Token 206: ' from' (ID: 591)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8088196516036987
    2. '#' → logprob: -0.9338196516036987
    3. '       ' → logprob: -3.4338197708129883
    4. 'l' → logprob: -3.6838197708129883
    5. 'left' → logprob: -3.6838197708129883
    6. 'import' → logprob: -3.8088197708129883
    7. 'def' → logprob: -4.058819770812988
    8. 'from' (adapté à ' from') → logprob: -4.433819770812988
    9. 'for' → logprob: -4.808819770812988
    10. 'lo' → logprob: -5.308819770812988

Token 207: ' math' (ID: 13324)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6459516286849976
    2. ' typing' → logprob: -2.020951747894287
    3. ' itertools' → logprob: -2.020951747894287
    4. 'collections' → logprob: -2.395951747894287
    5. ' copy' → logprob: -2.770951747894287
    6. ' math' → logprob: -3.770951747894287
    7. ' heap' → logprob: -4.270951747894287
    8. 'heap' → logprob: -5.020951747894287
    9. '_union' → logprob: -5.645951747894287
    10. 'typing' → logprob: -5.895951747894287

Token 208: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.008929966948926449
    2. ' import' → logprob: -4.75892972946167
    3. 'plotlib' → logprob: -9.133930206298828
    4. '<|end|>' → logprob: -9.258930206298828
    5. '	import' → logprob: -9.883930206298828
    6. '_import' → logprob: -11.008930206298828
    7. 'ertools' → logprob: -12.133930206298828
    8. '```' → logprob: -12.383930206298828
    9. '#import' → logprob: -12.508930206298828
    10. '<|end|>' → logprob: -12.508930206298828

Token 209: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.018021170049905777
    2. 'ceil' → logprob: -4.268021106719971
    3. 'is' → logprob: -5.768021106719971
    4. 'log' → logprob: -8.143021583557129
    5. ' inf' → logprob: -8.268021583557129
    6. 'comb' → logprob: -9.518021583557129
    7. 'sqrt' → logprob: -9.893021583557129
    8. 'floor' → logprob: -10.143021583557129
    9. ' ceil' → logprob: -12.018021583557129
    10. '.inf' → logprob: -12.643021583557129

Token 210: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3369353711605072
    2. '       ' → logprob: -1.7119354009628296
    3. ',' → logprob: -2.83693528175354
    4. '<|end|>' → logprob: -3.71193528175354
    5. '        
' → logprob: -4.336935520172119
    6. ',
' → logprob: -5.211935520172119
    7. '<|end|>' → logprob: -6.961935520172119
    8. 'n' → logprob: -7.461935520172119
    9. 'def' → logprob: -7.836935520172119
    10. '```' → logprob: -8.586935043334961

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1318994015455246
    2. 'def' → logprob: -2.881899356842041
    3. '
' → logprob: -3.631899356842041
    4. '        
' → logprob: -3.881899356842041
    5. 'low' → logprob: -5.006899356842041
    6. 'class' → logprob: -5.381899356842041
    7. 'left' → logprob: -5.881899356842041
    8. 'best' → logprob: -6.381899356842041
    9. '```' → logprob: -7.131899356842041
    10. 'dp' → logprob: -7.381899356842041

Token 212: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8338884115219116
    2. 'left' → logprob: -0.9588884115219116
    3. 'def' → logprob: -1.9588884115219116
    4. 'lo' → logprob: -4.083888530731201
    5. '#' (adapté à ' #') → logprob: -4.958888530731201
    6. 'class' → logprob: -5.208888530731201
    7. 'best' → logprob: -5.458888530731201
    8. 'result' → logprob: -6.208888530731201
    9. 'parent' → logprob: -6.333888530731201
    10. 'l' → logprob: -6.583888530731201

Token 213: ' To' (ID: 2514)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1379343867301941
    2. '#' → logprob: -3.012934446334839
    3. 'class' → logprob: -3.637934446334839
    4. 'best' → logprob: -4.26293420791626
    5. 'left' → logprob: -4.51293420791626
    6. 'parent' → logprob: -4.51293420791626
    7. 'dp' → logprob: -4.88793420791626
    8. 'low' → logprob: -5.26293420791626
    9. 'result' → logprob: -6.26293420791626
    10. ' def' → logprob: -7.01293420791626

Token 214: ' solve' (ID: 17722)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.406379759311676
    2. ' find' → logprob: -2.4063796997070312
    3. 'def' → logprob: -3.0313796997070312
    4. ' check' → logprob: -3.1563796997070312
    5. ' define' → logprob: -3.5313796997070312
    6. ' achieve' → logprob: -3.9063796997070312
    7. ' implement' → logprob: -4.281379699707031
    8. ' try' → logprob: -4.406379699707031
    9. '       ' → logprob: -4.781379699707031
    10. '#' → logprob: -4.906379699707031

Token 215: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8977934122085571
    2. 'the' → logprob: -1.8977934122085571
    3. '       ' → logprob: -2.1477932929992676
    4. ' def' → logprob: -2.3977932929992676
    5. 'def' → logprob: -2.5227932929992676
    6. ' for' → logprob: -2.7727932929992676
    7. ',' → logprob: -3.7727932929992676
    8. 'for' → logprob: -3.8977932929992676
    9. ' a' → logprob: -5.022793292999268
    10. 'possible' → logprob: -5.397793292999268

Token 216: ' complicated' (ID: 25334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013143756426870823
    2. ' ,' → logprob: -4.388143539428711
    3. 'def' → logprob: -8.388143539428711
    4. ':' → logprob: -9.263143539428711
    5. ' we' → logprob: -9.638143539428711
    6. ' def' → logprob: -9.763143539428711
    7. ' problem' → logprob: -10.138143539428711
    8. '
' → logprob: -11.013143539428711
    9. ' for' → logprob: -11.013143539428711
    10. 'problem' → logprob: -11.388143539428711

Token 217: ' constrained' (ID: 107530)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.040214866399765015
    2. 'problem' → logprob: -3.290214776992798
    3. ' optimization' → logprob: -7.540215015411377
    4. ' part' → logprob: -8.040214538574219
    5. 'def' → logprob: -8.290214538574219
    6. 'constraint' → logprob: -8.290214538574219
    7. ' task' → logprob: -8.540214538574219
    8. ' constraint' → logprob: -8.790214538574219
    9. '#' → logprob: -9.540214538574219
    10. ' constrained' → logprob: -9.540214538574219

Token 218: ' MST' (ID: 123058)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.044148411601781845
    2. 'problem' → logprob: -3.9191484451293945
    3. ' MST' → logprob: -4.9191484451293945
    4. ' spanning' → logprob: -4.9191484451293945
    5. 'M' → logprob: -5.9191484451293945
    6. 'mst' → logprob: -6.2941484451293945
    7. ' optimization' → logprob: -6.4191484451293945
    8. 'def' → logprob: -7.1691484451293945
    9. 'minimum' → logprob: -7.5441484451293945
    10. ' minimum' → logprob: -7.9191484451293945

Token 219: ',' (ID: 11)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.13320469856262207
    2. ',' → logprob: -2.258204698562622
    3. 'problem' → logprob: -4.383204460144043
    4. ':' → logprob: -5.633204460144043
    5. 'def' → logprob: -6.133204460144043
    6. ',
' → logprob: -7.383204460144043
    7. ' ,' → logprob: -7.633204460144043
    8. ' def' → logprob: -8.383204460144043
    9. ' approach' → logprob: -9.258204460144043
    10. '_problem' → logprob: -9.758204460144043

Token 220: ' we' (ID: 581)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.014581322669983
    2. ' def' → logprob: -1.514581322669983
    3. '       ' → logprob: -1.764581322669983
    4. '#' → logprob: -3.0145812034606934
    5. 'result' → logprob: -3.1395812034606934
    6. ' result' → logprob: -3.3895812034606934
    7. 'low' → logprob: -3.6395812034606934
    8. ' left' → logprob: -4.264581203460693
    9. ' low' → logprob: -4.389581203460693
    10. ' parent' → logprob: -4.389581203460693

Token 221: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.13264237344264984
    2. ' might' → logprob: -3.1326422691345215
    3. ' may' → logprob: -3.6326422691345215
    4. 'def' → logprob: -3.8826422691345215
    5. ''ll' → logprob: -4.6326422691345215
    6. ' will' → logprob: -4.7576422691345215
    7. 'can' → logprob: -5.3826422691345215
    8. ' need' → logprob: -5.6326422691345215
    9. ' could' → logprob: -5.8826422691345215
    10. 'might' → logprob: -6.8826422691345215

Token 222: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.8627163171768188
    2. 'use' → logprob: -0.8627163171768188
    3. 'define' → logprob: -2.7377161979675293
    4. 'implement' → logprob: -3.3627161979675293
    5. ' use' → logprob: -3.8627161979675293
    6. 'def' → logprob: -4.737716197967529
    7. 'attempt' → logprob: -5.112716197967529
    8. ' try' → logprob: -5.237716197967529
    9. ' implement' → logprob: -5.362716197967529
    10. 'em' → logprob: -5.862716197967529

Token 223: ' dynamic' (ID: 14012)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.210744246840477
    2. ' a' → logprob: -2.0857441425323486
    3. ' to' → logprob: -3.5857441425323486
    4. 'binary' → logprob: -3.5857441425323486
    5. 'a' → logprob: -5.960744380950928
    6. ' all' → logprob: -6.335744380950928
    7. ' using' → logprob: -6.835744380950928
    8. 'to' → logprob: -6.835744380950928
    9. 'def' → logprob: -7.085744380950928
    10. 'all' → logprob: -7.710744380950928

Token 224: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.009838375262916088
    2. 'program' → logprob: -4.634838581085205
    3. '_program' → logprob: -9.634838104248047
    4. 'Programming' → logprob: -12.009838104248047
    5. '-program' → logprob: -12.634838104248047
    6. 'import' → logprob: -13.009838104248047
    7. ' program' → logprob: -13.009838104248047
    8. ' programmation' → logprob: -13.634838104248047
    9. ' Programming' → logprob: -14.384838104248047
    10. ' programación' → logprob: -14.634838104248047

Token 225: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5594629645347595
    2. '<|end|>' → logprob: -0.9344629645347595
    3. ' or' → logprob: -4.434463024139404
    4. ',' → logprob: -4.934463024139404
    5. '<|end|>' → logprob: -5.184463024139404
    6. ' ' → logprob: -5.934463024139404
    7. '
' → logprob: -6.184463024139404
    8. '        
' → logprob: -6.309463024139404
    9. '#' → logprob: -7.184463024139404
    10. '        ' → logprob: -8.059462547302246

Token 227: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8763828277587891
    2. '#' → logprob: -1.376382827758789
    3. 'dp' → logprob: -2.251382827758789
    4. ' or' → logprob: -2.876382827758789
    5. '<|end|>' → logprob: -3.376382827758789
    6. 'return' → logprob: -3.626382827758789
    7. ' dp' → logprob: -4.251382827758789
    8. ' #' → logprob: -4.501382827758789
    9. ' max' → logprob: -4.626382827758789
    10. ' return' → logprob: -4.626382827758789

Token 229: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.033715665340423584
    2. ' on' → logprob: -3.4087157249450684
    3. 'ont' → logprob: -10.78371524810791
    4. '   ' → logprob: -11.15871524810791
    5. 'upon' → logprob: -11.65871524810791
    6. '<|end|>' → logprob: -12.28371524810791
    7. '_on' → logprob: -12.53371524810791
    8. 'to' → logprob: -12.90871524810791
    9. '=' → logprob: -12.90871524810791
    10. 'onor' → logprob: -13.53371524810791

Token 230: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8704901933670044
    2. 'the' → logprob: -1.9954901933670044
    3. ' edges' → logprob: -1.9954901933670044
    4. ' subsets' → logprob: -2.245490074157715
    5. ' number' → logprob: -2.745490074157715
    6. ' a' → logprob: -3.370490074157715
    7. ' subset' → logprob: -3.495490074157715
    8. ' union' → logprob: -4.245490074157715
    9. 'number' → logprob: -4.620490074157715
    10. ' edge' → logprob: -5.120490074157715

Token 231: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.611642599105835
    2. ' number' → logprob: -0.861642599105835
    3. ' edges' → logprob: -4.111642837524414
    4. 'edges' → logprob: -4.986642837524414
    5. 'union' → logprob: -6.611642837524414
    6. 'state' → logprob: -6.611642837524414
    7. 'index' → logprob: -6.861642837524414
    8. 'current' → logprob: -6.861642837524414
    9. 'cost' → logprob: -6.861642837524414
    10. 'def' → logprob: -7.361642837524414

Token 232: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7606978416442871
    2. 'of' → logprob: -0.7606978416442871
    3. '_of' → logprob: -2.760697841644287
    4. 's' → logprob: -8.135698318481445
    5. '<|end|>' → logprob: -8.135698318481445
    6. ' ' → logprob: -8.385698318481445
    7. '<|end|>' → logprob: -8.885698318481445
    8. '   ' → logprob: -9.135698318481445
    9. 'ofday' → logprob: -9.135698318481445
    10. '_edges' → logprob: -9.385698318481445

Token 233: ' company' (ID: 3175)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3055623471736908
    2. 'edges' → logprob: -1.6805623769760132
    3. ' selected' → logprob: -3.9305622577667236
    4. 'selected' → logprob: -4.430562496185303
    5. ' islands' → logprob: -4.555562496185303
    6. 'A' → logprob: -4.805562496185303
    7. ' chosen' → logprob: -4.805562496185303
    8. 'company' → logprob: -5.305562496185303
    9. 'chosen' → logprob: -5.555562496185303
    10. ' A' → logprob: -5.805562496185303

Token 234: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6831775903701782
    2. 'A' → logprob: -0.8081775903701782
    3. '_A' → logprob: -3.3081774711608887
    4. ' edges' → logprob: -5.308177471160889
    5. '<|end|>' → logprob: -5.683177471160889
    6. 's' → logprob: -6.933177471160889
    7. '_' → logprob: -7.058177471160889
    8. '_edges' → logprob: -7.308177471160889
    9. ' ' → logprob: -7.808177471160889
    10. 'edges' → logprob: -7.808177471160889

Token 235: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.37240561842918396
    2. '_edges' → logprob: -1.8724056482315063
    3. 'edges' → logprob: -2.247405529022217
    4. '_' → logprob: -4.872405529022217
    5. '_selected' → logprob: -4.872405529022217
    6. ' ' → logprob: -5.122405529022217
    7. '-selected' → logprob: -5.372405529022217
    8. '<|end|>' → logprob: -5.497405529022217
    9. ''s' → logprob: -5.622405529022217
    10. 'selected' → logprob: -5.622405529022217

Token 236: ' chosen' (ID: 16180)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9175123572349548
    2. '<|end|>' → logprob: -1.1675124168395996
    3. ',' → logprob: -1.9175124168395996
    4. '<|end|>' → logprob: -2.7925124168395996
    5. '.' → logprob: -4.5425124168396
    6. ' and' → logprob: -4.6675124168396
    7. '        ' → logprob: -4.9175124168396
    8. '        
' → logprob: -4.9175124168396
    9. '
' → logprob: -4.9175124168396
    10. ')' → logprob: -5.0425124168396

Token 237: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.3870241045951843
    2. ' far' → logprob: -1.137024164199829
    3. '_far' → logprob: -9.76202392578125
    4. 'Far' → logprob: -10.38702392578125
    5. 'f' → logprob: -10.88702392578125
    6. '   ' → logprob: -11.01202392578125
    7. 'on' → logprob: -11.51202392578125
    8. '       ' → logprob: -12.13702392578125
    9. 'def' → logprob: -12.26202392578125
    10. ' ' → logprob: -13.01202392578125

Token 239: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48911938071250916
    2. '<|end|>' → logprob: -1.3641194105148315
    3. ',' → logprob: -2.364119291305542
    4. '<|end|>' → logprob: -4.114119529724121
    5. '
' → logprob: -4.864119529724121
    6. '.' → logprob: -5.864119529724121
    7. ' and' → logprob: -5.864119529724121
    8. ' ' → logprob: -5.989119529724121
    9. '        
' → logprob: -6.364119529724121
    10. '        ' → logprob: -7.739119529724121

Token 240: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09277546405792236
    2. 'the' → logprob: -2.842775344848633
    3. ' their' → logprob: -5.092775344848633
    4. ' connectivity' → logprob: -5.342775344848633
    5. ' edges' → logprob: -5.467775344848633
    6. ' current' → logprob: -5.967775344848633
    7. ' connected' → logprob: -6.342775344848633
    8. ' how' → logprob: -6.467775344848633
    9. ' union' → logprob: -6.717775344848633
    10. ' possible' → logprob: -7.092775344848633

Token 241: ' connectivity' (ID: 45849)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.4975401163101196
    2. 'current' → logprob: -1.6225401163101196
    3. 'state' → logprob: -1.9975401163101196
    4. ' connectivity' → logprob: -2.74753999710083
    5. 'union' → logprob: -2.74753999710083
    6. 'connect' → logprob: -2.74753999710083
    7. ' current' → logprob: -3.24753999710083
    8. ' number' → logprob: -3.24753999710083
    9. ' structure' → logprob: -3.87253999710083
    10. 'connections' → logprob: -3.87253999710083

Token 242: ' state' (ID: 2608)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.01190447807312
    2. '       ' → logprob: -2.01190447807312
    3. ' states' → logprob: -2.13690447807312
    4. '<|end|>' → logprob: -2.13690447807312
    5. ',' → logprob: -2.51190447807312
    6. '   ' → logprob: -2.51190447807312
    7. 'state' → logprob: -2.88690447807312
    8. ' of' → logprob: -3.01190447807312
    9. 'states' → logprob: -3.01190447807312
    10. '<|end|>' → logprob: -4.011904716491699

Token 243: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1118689626455307
    2. ':' → logprob: -3.6118688583374023
    3. ' ' → logprob: -3.7368688583374023
    4. ',' → logprob: -3.8618688583374023
    5. '   ' → logprob: -4.611868858337402
    6. '        ' → logprob: -5.361868858337402
    7. '    ' → logprob: -5.986868858337402
    8. ')' → logprob: -5.986868858337402
    9. '<|end|>' → logprob: -5.986868858337402
    10. '_' → logprob: -6.361868858337402

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021651800721883774
    2. ' ' → logprob: -4.771651744842529
    3. '        ' → logprob: -5.771651744842529
    4. '<|end|>' → logprob: -5.896651744842529
    5. '        
' → logprob: -6.521651744842529
    6. '    ' → logprob: -6.521651744842529
    7. '   ' → logprob: -6.646651744842529
    8. '      ' → logprob: -7.521651744842529
    9. ',' → logprob: -7.896651744842529
    10. '  ' → logprob: -8.146652221679688

Token 245: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21604609489440918
    2. '#' (adapté à ' #') → logprob: -1.9660460948944092
    3. 'return' → logprob: -3.591046094894409
    4. 'def' → logprob: -4.591046333312988
    5. 'import' → logprob: -6.091046333312988
    6. '        
' → logprob: -6.216046333312988
    7. ')' → logprob: -6.466046333312988
    8. '{' → logprob: -6.591046333312988
    9. '   ' → logprob: -6.966046333312988
    10. 'n' → logprob: -7.216046333312988

Token 246: ' Number' (ID: 9184)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6258089542388916
    2. '       ' → logprob: -1.7508089542388916
    3. 'return' → logprob: -2.1258089542388916
    4. 'dp' → logprob: -2.5008089542388916
    5. 'pass' → logprob: -3.5008089542388916
    6. 'import' → logprob: -3.7508089542388916
    7. 'visited' → logprob: -5.1258087158203125
    8. 'def' → logprob: -5.2508087158203125
    9. 'dis' → logprob: -5.3758087158203125
    10. 'from' → logprob: -5.6258087158203125

Token 247: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9692508578300476
    2. 'of' → logprob: -1.0942509174346924
    3. '_of' → logprob: -1.8442509174346924
    4. '<|end|>' → logprob: -3.0942509174346924
    5. '       ' → logprob: -3.8442509174346924
    6. '_tokens' → logprob: -4.469250679016113
    7. '<|end|>' → logprob: -4.594250679016113
    8. '   ' → logprob: -4.969250679016113
    9. ' =' → logprob: -5.094250679016113
    10. '_' → logprob: -5.594250679016113

Token 248: ' nodes' (ID: 15749)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8535093665122986
    2. ' islands' → logprob: -0.8535093665122986
    3. 'edges' → logprob: -2.4785094261169434
    4. 'is' → logprob: -4.103509426116943
    5. ' nodes' → logprob: -4.353509426116943
    6. 'nodes' → logprob: -4.853509426116943
    7. 'states' → logprob: -5.103509426116943
    8. ' states' → logprob: -5.478509426116943
    9. 'vertices' → logprob: -6.228509426116943
    10. '_edges' → logprob: -6.353509426116943

Token 249: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002297278493642807
    2. '=' → logprob: -6.127297401428223
    3. 'n' → logprob: -9.627297401428223
    4. '=n' → logprob: -10.752297401428223
    5. '       ' → logprob: -11.502297401428223
    6. ' n' → logprob: -12.877297401428223
    7. ' is' → logprob: -13.127297401428223
    8. 'self' → logprob: -13.127297401428223
    9. ',' → logprob: -13.377297401428223
    10. ':' → logprob: -13.502297401428223

Token 250: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38756054639816284
    2. 'n' → logprob: -1.6375606060028076
    3. ' self' → logprob: -2.2625606060028076
    4. 'self' → logprob: -3.8875606060028076
    5. '       ' → logprob: -6.1375603675842285
    6. ' =' → logprob: -10.012560844421387
    7. '=self' → logprob: -12.012560844421387
    8. '=n' → logprob: -12.262560844421387
    9. '   ' → logprob: -12.512560844421387
    10. '	n' → logprob: -12.512560844421387

Token 251: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40766456723213196
    2. '<|end|>' → logprob: -1.9076645374298096
    3. '       ' → logprob: -2.6576645374298096
    4. ' =' → logprob: -3.0326645374298096
    5. 'n' → logprob: -3.2826645374298096
    6. '<|end|>' → logprob: -4.657664775848389
    7. '=' → logprob: -5.657664775848389
    8. ',' → logprob: -5.782664775848389
    9. '        
' → logprob: -6.032664775848389
    10. '+' → logprob: -6.157664775848389

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.609042763710022
    2. '<|end|>' → logprob: -1.109042763710022
    3. '
' → logprob: -2.8590426445007324
    4. '        
' → logprob: -3.8590426445007324
    5. ' ' → logprob: -4.484042644500732
    6. '        ' → logprob: -4.484042644500732
    7. 'n' → logprob: -5.109042644500732
    8. ',' → logprob: -5.234042644500732
    9. '<|end|>' → logprob: -5.484042644500732
    10. ' 
' → logprob: -5.984042644500732

Token 253: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07904510945081711
    2. 'n' → logprob: -4.204045295715332
    3. '<|end|>' → logprob: -4.454045295715332
    4. ')' → logprob: -4.579045295715332
    5. '   ' → logprob: -5.454045295715332
    6. '        
' → logprob: -5.454045295715332
    7. 'dp' → logprob: -5.579045295715332
    8. ' 
' → logprob: -5.579045295715332
    9. '#' (adapté à ' #') → logprob: -5.829045295715332
    10. '        ' → logprob: -6.079045295715332

Token 254: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6456496119499207
    2. '#' → logprob: -1.3956496715545654
    3. 'parent' → logprob: -2.5206496715545654
    4. 'return' → logprob: -3.1456496715545654
    5. 'import' → logprob: -3.7706496715545654
    6. '       ' → logprob: -3.8956496715545654
    7. 'from' → logprob: -4.270649433135986
    8. ' parent' → logprob: -4.895649433135986
    9. 'visited' → logprob: -5.145649433135986
    10. 'def' → logprob: -5.520649433135986

Token 255: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.4985027015209198
    2. ' can' → logprob: -1.8735027313232422
    3. ' will' → logprob: -2.248502731323242
    4. 'need' → logprob: -3.873502731323242
    5. ''ll' → logprob: -3.998502731323242
    6. ' cannot' → logprob: -4.248502731323242
    7. 'def' → logprob: -4.373502731323242
    8. ' want' → logprob: -4.498502731323242
    9. ' have' → logprob: -4.748502731323242
    10. ' don't' → logprob: -4.998502731323242

Token 256: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07040484994649887
    2. ' exactly' → logprob: -2.8204047679901123
    3. 'to' → logprob: -5.320405006408691
    4. ' n' → logprob: -6.195405006408691
    5. ' edges' → logprob: -7.695405006408691
    6. 'n' → logprob: -7.945405006408691
    7. 'exact' → logprob: -8.320405006408691
    8. ' a' → logprob: -8.820405006408691
    9. ' exact' → logprob: -10.070405006408691
    10. ' k' → logprob: -10.445405006408691

Token 257: ' pick' (ID: 5230)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.8261724710464478
    2. 'select' → logprob: -0.9511724710464478
    3. ' select' → logprob: -2.701172351837158
    4. 'find' → logprob: -3.201172351837158
    5. 'connect' → logprob: -3.826172351837158
    6. ' find' → logprob: -3.951172351837158
    7. ' choose' → logprob: -4.701172351837158
    8. 'build' → logprob: -5.451172351837158
    9. ' connect' → logprob: -5.701172351837158
    10. 'pick' → logprob: -5.951172351837158

Token 258: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.4538783133029938
    2. ' n' → logprob: -1.3288782835006714
    3. ' edges' → logprob: -3.078878402709961
    4. 'n' → logprob: -3.078878402709961
    5. 'exact' → logprob: -5.453878402709961
    6. 'edges' → logprob: -5.953878402709961
    7. ' exact' → logprob: -8.453878402709961
    8. ' a' → logprob: -8.703878402709961
    9. ' k' → logprob: -8.828878402709961
    10. ' an' → logprob: -9.078878402709961

Token 259: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2154378443956375
    2. 'self' → logprob: -2.090437889099121
    3. ' k' → logprob: -2.715437889099121
    4. 'k' → logprob: -6.715437889099121
    5. ' n' → logprob: -6.840437889099121
    6. ' ' → logprob: -7.715437889099121
    7. ' edges' → logprob: -8.215437889099121
    8. '<|end|>' → logprob: -8.340437889099121
    9. 'n' → logprob: -8.590437889099121
    10. ' a' → logprob: -8.840437889099121

Token 260: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31326937675476074
    2. ' -' → logprob: -1.3132693767547607
    3. ' ' → logprob: -12.43826961517334
    4. ' ' → logprob: -14.18826961517334
    5. '   ' → logprob: -14.18826961517334
    6. '
' → logprob: -14.56326961517334
    7. '<|end|>' → logprob: -14.56326961517334
    8. '```' → logprob: -15.37576961517334
    9. '−' → logprob: -15.50076961517334
    10. '  ' → logprob: -16.250768661499023

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.710618905955926e-05
    2. '-' → logprob: -9.375097274780273
    3. ' ' → logprob: -11.375097274780273
    4. '   ' → logprob: -15.500097274780273
    5. ' -' → logprob: -15.875097274780273
    6. '```' → logprob: -16.250097274780273
    7. '2' → logprob: -16.375097274780273
    8. '
' → logprob: -16.875097274780273
    9. '       ' → logprob: -18.500097274780273
    10. '           ' → logprob: -18.812597274780273

Token 262: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.005586498882621527
    2. 'edges' → logprob: -5.255586624145508
    3. ' ' → logprob: -8.880586624145508
    4. '_edges' → logprob: -9.505586624145508
    5. '<|end|>' → logprob: -9.630586624145508
    6. ')' → logprob: -11.130586624145508
    7. ',' → logprob: -11.380586624145508
    8. '   ' → logprob: -12.505586624145508
    9. '<|end|>' → logprob: -12.505586624145508
    10. '(edges' → logprob: -12.568086624145508

Token 263: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8620559573173523
    2. '<|end|>' → logprob: -0.9870559573173523
    3. ',' → logprob: -1.862056016921997
    4. '<|end|>' → logprob: -3.737056016921997
    5. '.' → logprob: -4.362055778503418
    6. '
' → logprob: -5.362055778503418
    7. '        
' → logprob: -6.112055778503418
    8. '        ' → logprob: -7.237055778503418
    9. ' ' → logprob: -7.362055778503418
    10. ')' → logprob: -7.612055778503418

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09791529923677444
    2. '<|end|>' → logprob: -2.7229154109954834
    3. ',' → logprob: -4.847915172576904
    4. '        
' → logprob: -4.972915172576904
    5. '
' → logprob: -5.597915172576904
    6. ' ' → logprob: -6.222915172576904
    7. '<|end|>' → logprob: -6.222915172576904
    8. '\n' → logprob: -7.347915172576904
    9. '   ' → logprob: -7.597915172576904
    10. '#' → logprob: -7.722915172576904

Token 265: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18628349900245667
    2. '       ' → logprob: -2.186283588409424
    3. 'return' → logprob: -4.311283588409424
    4. 'result' → logprob: -4.436283588409424
    5. '#' (adapté à ' #') → logprob: -4.686283588409424
    6. 'parent' → logprob: -4.936283588409424
    7. 'import' → logprob: -5.436283588409424
    8. 'uf' → logprob: -5.811283588409424
    9. 'union' → logprob: -6.686283588409424
    10. 'edges' → logprob: -7.061283588409424

Token 266: ' However' (ID: 5551)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2404917478561401
    2. 'return' → logprob: -1.4904917478561401
    3. 'parent' → logprob: -1.9904917478561401
    4. 'dp' → logprob: -1.9904917478561401
    5. '       ' → logprob: -2.3654918670654297
    6. 'import' → logprob: -2.8654918670654297
    7. 'uf' → logprob: -4.11549186706543
    8. 'pass' → logprob: -4.24049186706543
    9. 'union' → logprob: -4.86549186706543
    10. 'from' → logprob: -5.11549186706543

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019852598197758198
    2. '       ' → logprob: -6.8769850730896
    3. ' ,' → logprob: -8.126985549926758
    4. '<|end|>' → logprob: -8.876985549926758
    5. ',
' → logprob: -9.251985549926758
    6. ' we' → logprob: -9.251985549926758
    7. '<|end|>' → logprob: -9.376985549926758
    8. ':' → logprob: -9.876985549926758
    9. ' the' → logprob: -9.876985549926758
    10. '   ' → logprob: -10.626985549926758

Token 268: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5915154814720154
    2. 'return' → logprob: -1.9665155410766602
    3. ' return' → logprob: -2.96651554107666
    4. 'the' → logprob: -2.96651554107666
    5. '       ' → logprob: -3.09151554107666
    6. '#' → logprob: -3.21651554107666
    7. ' #' → logprob: -3.84151554107666
    8. ' def' → logprob: -4.59151554107666
    9. ' this' → logprob: -5.09151554107666
    10. 'def' → logprob: -5.21651554107666

Token 269: ' keep' (ID: 3357)
  Prédit: ' implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' implement' → logprob: -0.3216016888618469
    2. 'implement' → logprob: -2.821601629257202
    3. ' complete' → logprob: -3.446601629257202
    4. ' proceed' → logprob: -3.696601629257202
    5. 'complete' → logprob: -3.821601629257202
    6. ' continue' → logprob: -4.071601867675781
    7. 'continue' → logprob: -4.321601867675781
    8. ' fully' → logprob: -4.446601867675781
    9. ' solve' → logprob: -4.571601867675781
    10. 'solve' → logprob: -4.571601867675781

Token 270: ' track' (ID: 5290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8757973909378052
    2. ' the' → logprob: -1.2507973909378052
    3. ' track' → logprob: -3.1257972717285156
    4. ' memory' → logprob: -3.2507972717285156
    5. ' code' → logprob: -3.2507972717285156
    6. 'track' → logprob: -3.3757972717285156
    7. 'it' → logprob: -3.5007972717285156
    8. 'code' → logprob: -3.7507972717285156
    9. ' things' → logprob: -3.8757972717285156
    10. 'memory' → logprob: -3.8757972717285156

Token 271: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.008340218104422092
    2. '       ' → logprob: -5.508340358734131
    3. ' the' → logprob: -6.133340358734131
    4. 'of' → logprob: -8.008339881896973
    5. '<|end|>' → logprob: -8.008339881896973
    6. ',' → logprob: -8.383339881896973
    7. ' edges' → logprob: -8.508339881896973
    8. '<|end|>' → logprob: -8.883339881896973
    9. '    ' → logprob: -9.008339881896973
    10. ' ' → logprob: -9.008339881896973

Token 272: ' components' (ID: 10674)
  Prédit: ' connectivity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connectivity' → logprob: -0.6210773587226868
    2. ' the' → logprob: -1.371077299118042
    3. 'the' → logprob: -2.746077299118042
    4. ' connected' → logprob: -3.496077299118042
    5. 'connect' → logprob: -3.746077299118042
    6. ' union' → logprob: -4.121077537536621
    7. ' subsets' → logprob: -4.371077537536621
    8. 'connected' → logprob: -4.496077537536621
    9. ' all' → logprob: -4.996077537536621
    10. 'union' → logprob: -4.996077537536621

Token 273: ' efficiently' (ID: 34229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034096548333764076
    2. ' ,' → logprob: -6.5034098625183105
    3. '       ' → logprob: -7.8784098625183105
    4. ',
' → logprob: -7.8784098625183105
    5. ' and' → logprob: -8.503409385681152
    6. '   ' → logprob: -8.878409385681152
    7. ' we' → logprob: -9.003409385681152
    8. '.' → logprob: -9.253409385681152
    9. ' in' → logprob: -9.378409385681152
    10. ':' → logprob: -9.503409385681152

Token 274: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012311844620853662
    2. ',
' → logprob: -7.7512311935424805
    3. ' ,' → logprob: -8.25123119354248
    4. ':' → logprob: -8.25123119354248
    5. '       ' → logprob: -8.87623119354248
    6. 'self' → logprob: -10.37623119354248
    7. ' we' → logprob: -10.62623119354248
    8. 'we' → logprob: -10.75123119354248
    9. 'class' → logprob: -11.50123119354248
    10. ')' → logprob: -12.25123119354248

Token 275: ' ensure' (ID: 6757)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.8889912962913513
    2. 'perform' → logprob: -1.888991355895996
    3. 'implement' → logprob: -2.263991355895996
    4. 'merge' → logprob: -2.513991355895996
    5. 'avoid' → logprob: -3.138991355895996
    6. ' avoid' → logprob: -3.388991355895996
    7. 'connect' → logprob: -3.763991355895996
    8. 'check' → logprob: -4.013991355895996
    9. 'to' → logprob: -4.263991355895996
    10. ' union' → logprob: -4.638991355895996

Token 276: ' a' (ID: 261)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.9638874530792236
    2. ' connectivity' → logprob: -0.9638874530792236
    3. 'the' → logprob: -2.8388874530792236
    4. ' the' → logprob: -3.2138874530792236
    5. 'union' → logprob: -3.8388874530792236
    6. '       ' → logprob: -3.8388874530792236
    7. 'edges' → logprob: -4.5888872146606445
    8. 'valid' → logprob: -4.5888872146606445
    9. '   ' → logprob: -4.5888872146606445
    10. ' that' → logprob: -4.8388872146606445

Token 277: ' valid' (ID: 4529)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.08434281498193741
    2. ' valid' → logprob: -2.8343427181243896
    3. 'valid' → logprob: -4.209342956542969
    4. 'sp' → logprob: -5.459342956542969
    5. ' tree' → logprob: -7.084342956542969
    6. 'union' → logprob: -8.084342956542969
    7. 'tree' → logprob: -8.209342956542969
    8. ' union' → logprob: -8.334342956542969
    9. '   ' → logprob: -8.709342956542969
    10. 'def' → logprob: -8.959342956542969

Token 278: ' spanning' (ID: 66335)
  Prédit: ' spanning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.4286884665489197
    2. ' union' → logprob: -1.5536885261535645
    3. 'union' → logprob: -2.0536885261535645
    4. ' MST' → logprob: -6.1786885261535645
    5. ' Union' → logprob: -6.6786885261535645
    6. 'sp' → logprob: -6.8036885261535645
    7. ' edge' → logprob: -7.5536885261535645
    8. '   ' → logprob: -7.5536885261535645
    9. 'mst' → logprob: -7.6786885261535645
    10. ' solution' → logprob: -7.9286885261535645

Token 279: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2875758707523346
    2. ' tree' → logprob: -1.4125758409500122
    3. 'forest' → logprob: -5.662575721740723
    4. '_tree' → logprob: -6.537575721740723
    5. ' forest' → logprob: -7.412575721740723
    6. '_' → logprob: -8.162575721740723
    7. 'union' → logprob: -8.787575721740723
    8. 't' → logprob: -8.787575721740723
    9. '
' → logprob: -9.787575721740723
    10. '   ' → logprob: -10.162575721740723

Token 280: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01383060310035944
    2. ',
' → logprob: -4.888830661773682
    3. '       ' → logprob: -5.388830661773682
    4. ' ,' → logprob: -6.638830661773682
    5. ' we' → logprob: -9.638830184936523
    6. 'we' → logprob: -9.763830184936523
    7. ' is' → logprob: -10.138830184936523
    8. '.' → logprob: -11.263830184936523
    9. 'class' → logprob: -11.263830184936523
    10. ' (' → logprob: -11.388830184936523

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006294683553278446
    2. '        ' → logprob: -5.3812947273254395
    3. '           ' → logprob: -7.3812947273254395
    4. ' we' → logprob: -8.381294250488281
    5. '   ' → logprob: -8.631294250488281
    6. '    ' → logprob: -9.006294250488281
    7. '        
' → logprob: -9.381294250488281
    8. 'return' → logprob: -10.006294250488281
    9. '      ' → logprob: -10.131294250488281
    10. ' return' → logprob: -10.131294250488281

Token 282: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015345508232712746
    2. ' we' → logprob: -5.640345573425293
    3. 'we' → logprob: -5.765345573425293
    4. 'union' → logprob: -5.765345573425293
    5. '#' (adapté à ' #') → logprob: -6.140345573425293
    6. '        ' → logprob: -6.890345573425293
    7. ' union' → logprob: -7.515345573425293
    8. '   ' → logprob: -8.140345573425293
    9. '           ' → logprob: -8.265345573425293
    10. 'self' → logprob: -8.890345573425293

Token 283: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3796790838241577
    2. 'class' → logprob: -2.7546792030334473
    3. '#' → logprob: -3.0046792030334473
    4. ' return' → logprob: -3.2546792030334473
    5. 'return' → logprob: -3.2546792030334473
    6. ' we' → logprob: -3.7546792030334473
    7. 'union' → logprob: -3.7546792030334473
    8. ' union' → logprob: -4.254679203033447
    9. 'we' → logprob: -4.629679203033447
    10. ' parent' → logprob: -4.629679203033447

Token 284: ' will' (ID: 738)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.6997405290603638
    2. ' need' → logprob: -0.9497405290603638
    3. 'cannot' → logprob: -3.949740409851074
    4. ' will' → logprob: -3.949740409851074
    5. ' can' → logprob: -4.324740409851074
    6. 'def' → logprob: -4.324740409851074
    7. 'will' → logprob: -4.449740409851074
    8. 'can' → logprob: -4.574740409851074
    9. ''ll' → logprob: -4.699740409851074
    10. ' cannot' → logprob: -5.449740409851074

Token 285: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.0243442058563232
    2. 'implement' → logprob: -1.0243442058563232
    3. ' implement' → logprob: -1.6493442058563232
    4. ' use' → logprob: -2.6493442058563232
    5. 'need' → logprob: -4.649344444274902
    6. 'import' → logprob: -6.149344444274902
    7. 'continue' → logprob: -6.149344444274902
    8. 'simulate' → logprob: -6.274344444274902
    9. ' need' → logprob: -6.649344444274902
    10. 'define' → logprob: -6.899344444274902

Token 286: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1534702479839325
    2. 'a' → logprob: -2.028470277786255
    3. ' Dis' → logprob: -5.528470039367676
    4. 'Dis' → logprob: -5.903470039367676
    5. ' dis' → logprob: -6.903470039367676
    6. ' union' → logprob: -7.278470039367676
    7. ' Union' → logprob: -7.403470039367676
    8. 'Union' → logprob: -7.403470039367676
    9. 'union' → logprob: -7.528470039367676
    10. 'dis' → logprob: -7.903470039367676

Token 287: ' clever' (ID: 42218)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.7424944639205933
    2. 'union' → logprob: -1.2424944639205933
    3. ' union' → logprob: -2.742494583129883
    4. ' dis' → logprob: -2.867494583129883
    5. ' Union' → logprob: -3.367494583129883
    6. 'Dis' → logprob: -3.367494583129883
    7. 'Union' → logprob: -3.492494583129883
    8. ' Dis' → logprob: -4.492494583129883
    9. 'class' → logprob: -5.742494583129883
    10. ' DS' → logprob: -9.367494583129883

Token 288: ' approach' (ID: 7139)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.6959721446037292
    2. ' union' → logprob: -1.445972204208374
    3. 'dis' → logprob: -2.195972204208374
    4. ' Union' → logprob: -3.195972204208374
    5. ' data' → logprob: -3.695972204208374
    6. ' dis' → logprob: -3.695972204208374
    7. ' approach' → logprob: -3.820972204208374
    8. 'Union' → logprob: -4.195971965789795
    9. 'class' → logprob: -4.445971965789795
    10. 'data' → logprob: -5.320971965789795

Token 289: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02120186947286129
    2. ':' → logprob: -4.646202087402344
    3. ',' → logprob: -5.771202087402344
    4. '        
' → logprob: -6.021202087402344
    5. ' to' → logprob: -6.396202087402344
    6. '.' → logprob: -6.396202087402344
    7. '<|end|>' → logprob: -7.021202087402344
    8. ' with' → logprob: -8.396202087402344
    9. '        ' → logprob: -8.646202087402344
    10. ' that' → logprob: -8.771202087402344

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009562353603541851
    2. '        
' → logprob: -5.0095624923706055
    3. '        ' → logprob: -7.5095624923706055
    4. 'class' → logprob: -8.134562492370605
    5. 'union' → logprob: -8.259562492370605
    6. '   ' → logprob: -8.634562492370605
    7. ' union' → logprob: -8.759562492370605
    8. ' 
' → logprob: -8.759562492370605
    9. '#' → logprob: -8.884562492370605
    10. 'def' → logprob: -9.259562492370605

Token 291: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05445880442857742
    2. '        
' → logprob: -3.6794588565826416
    3. ' 
' → logprob: -5.6794586181640625
    4. 'class' → logprob: -5.9294586181640625
    5. ' union' → logprob: -6.0544586181640625
    6. 'union' → logprob: -6.1794586181640625
    7. '#' (adapté à ' #') → logprob: -6.3044586181640625
    8. 'dis' → logprob: -6.4294586181640625
    9. 'import' → logprob: -6.4294586181640625
    10. '        ' → logprob: -6.4294586181640625

Token 292: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3716030716896057
    2. 'class' → logprob: -2.246603012084961
    3. 'dp' → logprob: -3.621603012084961
    4. ' class' → logprob: -3.746603012084961
    5. 'import' → logprob: -3.871603012084961
    6. 'union' → logprob: -3.996603012084961
    7. ' union' → logprob: -3.996603012084961
    8. ' parent' → logprob: -4.246603012084961
    9. ' dp' → logprob: -4.746603012084961
    10. 'def' → logprob: -4.871603012084961

Token 293: ' n' (ID: 297)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7787388563156128
    2. 'the' → logprob: -1.2787388563156128
    3. ' we' → logprob: -2.7787389755249023
    4. 'we' → logprob: -2.9037389755249023
    5. ' edges' → logprob: -3.2787389755249023
    6. '   ' → logprob: -4.153738975524902
    7. 'n' → logprob: -4.278738975524902
    8. ' there' → logprob: -4.528738975524902
    9. 'there' → logprob: -4.778738975524902
    10. ' n' → logprob: -5.028738975524902

Token 294: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19649732112884521
    2. '-' → logprob: -2.5714974403381348
    3. ' <=' → logprob: -2.9464974403381348
    4. '<=' → logprob: -4.071497440338135
    5. ' -' → logprob: -4.571497440338135
    6. 'is' → logprob: -5.321497440338135
    7. '=' → logprob: -5.571497440338135
    8. ' =' → logprob: -5.946497440338135
    9. '   ' → logprob: -5.946497440338135
    10. '       ' → logprob: -6.696497440338135

Token 295: ' up' (ID: 869)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.14701540768146515
    2. ' small' → logprob: -2.772015333175659
    3. 'likely' → logprob: -3.022015333175659
    4. 'up' → logprob: -5.147015571594238
    5. 'not' → logprob: -5.147015571594238
    6. ' likely' → logprob: -5.147015571594238
    7. ' relatively' → logprob: -6.147015571594238
    8. 'rel' → logprob: -6.397015571594238
    9. ' up' → logprob: -7.272015571594238
    10. ' not' → logprob: -7.647015571594238

Token 296: ' to' (ID: 316)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0492656230926514
    2. '2' → logprob: -1.4242656230926514
    3. 'to' → logprob: -1.7992656230926514
    4. '       ' → logprob: -2.1742656230926514
    5. '4' → logprob: -3.2992656230926514
    6. 'def' → logprob: -3.5492656230926514
    7. '3' → logprob: -4.4242658615112305
    8. '#' → logprob: -5.1742658615112305
    9. 'import' → logprob: -5.2992658615112305
    10. '   ' → logprob: -5.2992658615112305

Token 297: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.33798038959503174
    2. ' ' → logprob: -1.7129803895950317
    3. '15' → logprob: -2.587980270385742
    4. '100' → logprob: -4.587980270385742
    5. '16' → logprob: -5.212980270385742
    6. '10' → logprob: -5.212980270385742
    7. '50' → logprob: -5.962980270385742
    8. '200' → logprob: -6.462980270385742
    9. '18' → logprob: -6.587980270385742
    10. '12' → logprob: -6.962980270385742

Token 298: '200' (ID: 1179)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.9093385338783264
    2. '20' → logprob: -1.1593384742736816
    3. '16' → logprob: -2.0343384742736816
    4. '50' → logprob: -2.4093384742736816
    5. '100' → logprob: -3.6593384742736816
    6. '18' → logprob: -4.284338474273682
    7. '17' → logprob: -4.784338474273682
    8. '10' → logprob: -5.284338474273682
    9. '30' → logprob: -5.909338474273682
    10. '40' → logprob: -6.284338474273682

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025833865627646446
    2. ':' → logprob: -4.150834083557129
    3. ' and' → logprob: -5.275834083557129
    4. ',
' → logprob: -5.650834083557129
    5. '
' → logprob: -8.150834083557129
    6. '<|end|>' → logprob: -8.400834083557129
    7. ':
' → logprob: -9.150834083557129
    8. '.' → logprob: -9.275834083557129
    9. ' ,' → logprob: -9.400834083557129
    10. '0' → logprob: -9.400834083557129

Token 300: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03316400945186615
    2. '#' → logprob: -4.783164024353027
    3. ' return' → logprob: -5.533164024353027
    4. ' #' → logprob: -5.533164024353027
    5. ' we' → logprob: -5.658164024353027
    6. 'return' → logprob: -6.033164024353027
    7. ' parent' → logprob: -6.283164024353027
    8. '        
' → logprob: -6.533164024353027
    9. 'we' → logprob: -6.783164024353027
    10. 'import' → logprob: -6.908164024353027

Token 301: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47210514545440674
    2. '=' → logprob: -1.2221051454544067
    3. ' <=' → logprob: -3.597105026245117
    4. ' is' → logprob: -3.722105026245117
    5. '   ' → logprob: -5.097105026245117
    6. '<=' → logprob: -5.347105026245117
    7. '<|end|>' → logprob: -5.472105026245117
    8. ',' → logprob: -5.722105026245117
    9. '<|end|>' → logprob: -5.847105026245117
    10. 'aybe' → logprob: -6.097105026245117

Token 302: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.021023988723754883
    2. '=' → logprob: -4.521023750305176
    3. '_to' → logprob: -5.146023750305176
    4. ' to' → logprob: -6.021023750305176
    5. 'To' → logprob: -7.896023750305176
    6. 'oints' → logprob: -8.271023750305176
    7. '#' → logprob: -8.521023750305176
    8. '       ' → logprob: -9.021023750305176
    9. 'on' → logprob: -9.146023750305176
    10. '   ' → logprob: -9.271023750305176

Token 303: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.26787522435188293
    2. '400' → logprob: -2.1428751945495605
    3. '100' → logprob: -2.5178751945495605
    4. '300' → logprob: -4.3928751945495605
    5. '500' → logprob: -5.0178751945495605
    6. '199' → logprob: -5.5178751945495605
    7. 'len' → logprob: -5.7678751945495605
    8. '150' → logprob: -6.1428751945495605
    9. ' ' → logprob: -6.2678751945495605
    10. '10' → logprob: -6.3928751945495605

Token 304: '600' (ID: 6718)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.4641992747783661
    2. '400' → logprob: -1.5891993045806885
    3. '100' → logprob: -2.2141993045806885
    4. '10' → logprob: -4.089199066162109
    5. '500' → logprob: -4.339199066162109
    6. '300' → logprob: -4.714199066162109
    7. '199' → logprob: -5.339199066162109
    8. 'n' → logprob: -5.839199066162109
    9. '150' → logprob: -6.089199066162109
    10. '600' → logprob: -6.214199066162109

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44660356640815735
    2. '
' → logprob: -1.696603536605835
    3. '       ' → logprob: -2.571603536605835
    4. ',
' → logprob: -2.571603536605835
    5. '        
' → logprob: -4.071603775024414
    6. ' edges' → logprob: -6.446603775024414
    7. 'edges' → logprob: -6.446603775024414
    8. ' lines' → logprob: -7.071603775024414
    9. '#' → logprob: -7.821603775024414
    10. 'import' → logprob: -8.071603775024414

Token 306: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1387079954147339
    2. '#' → logprob: -3.2637081146240234
    3. 'parent' → logprob: -3.6387081146240234
    4. 'return' → logprob: -3.7637081146240234
    5. ' parent' → logprob: -4.888708114624023
    6. '        
' → logprob: -5.263708114624023
    7. 'result' → logprob: -5.388708114624023
    8. 'we' → logprob: -5.888708114624023
    9. 'import' → logprob: -6.013708114624023
    10. ' return' → logprob: -6.013708114624023

Token 307: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6514347195625305
    2. ' k' → logprob: -0.9014347195625305
    3. ' edges' → logprob: -3.9014346599578857
    4. ' the' → logprob: -4.151434898376465
    5. 'the' → logprob: -4.526434898376465
    6. 'we' → logprob: -5.276434898376465
    7. ' we' → logprob: -5.401434898376465
    8. 'edges' → logprob: -5.901434898376465
    9. ' costs' → logprob: -6.151434898376465
    10. 'cost' → logprob: -6.401434898376465

Token 308: ' up' (ID: 869)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03890938684344292
    2. ' is' → logprob: -4.038909435272217
    3. '<=' → logprob: -4.413909435272217
    4. ' can' → logprob: -6.163909435272217
    5. ' up' → logprob: -7.163909435272217
    6. ' >=' → logprob: -7.288909435272217
    7. ' <' → logprob: -7.663909435272217
    8. ' ' → logprob: -7.663909435272217
    9. ' >' → logprob: -7.788909435272217
    10. ' =' → logprob: -7.788909435272217

Token 309: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.36029502749443054
    2. '200' → logprob: -1.985295057296753
    3. '=' → logprob: -2.360295057296753
    4. '       ' → logprob: -3.860295057296753
    5. '<=' → logprob: -4.360294818878174
    6. ' to' → logprob: -4.860294818878174
    7. '#' → logprob: -5.110294818878174
    8. 'n' → logprob: -5.235294818878174
    9. '1' → logprob: -5.735294818878174
    10. '           ' → logprob: -5.985294818878174

Token 310: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9110503792762756
    2. 'n' → logprob: -1.1610503196716309
    3. ' self' → logprob: -2.036050319671631
    4. ' n' → logprob: -2.036050319671631
    5. '200' → logprob: -4.036050319671631
    6. ' ' → logprob: -5.161050319671631
    7. '20' → logprob: -9.161050796508789
    8. ' (' → logprob: -10.036050796508789
    9. '199' → logprob: -10.661050796508789
    10. '(n' → logprob: -10.786050796508789

Token 311: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018053685780614614
    2. ' -' → logprob: -6.501805305480957
    3. '#' → logprob: -9.126805305480957
    4. ':' → logprob: -9.626805305480957
    5. ',' → logprob: -9.876805305480957
    6. '   ' → logprob: -10.751805305480957
    7. '1' → logprob: -11.001805305480957
    8. '       ' → logprob: -11.501805305480957
    9. '//' → logprob: -12.001805305480957
    10. '```' → logprob: -12.376805305480957

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012594614236149937
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.625125885009766
    4. '2' → logprob: -14.000125885009766
    5. '
' → logprob: -15.750125885009766
    6. '```' → logprob: -16.750125885009766
    7. '-' → logprob: -17.125125885009766
    8. '       ' → logprob: -17.625125885009766
    9. '	' → logprob: -17.750125885009766
    10. ' ' → logprob: -18.312625885009766

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003179465711582452
    2. '2' → logprob: -8.750317573547363
    3. ' ' → logprob: -8.750317573547363
    4. '
' → logprob: -14.625317573547363
    5. '```' → logprob: -15.000317573547363
    6. '   ' → logprob: -15.625317573547363
    7. '<|end|>' → logprob: -18.06281852722168
    8. '3' → logprob: -18.06281852722168
    9. '

' → logprob: -18.43781852722168
    10. '-' → logprob: -18.56281852722168

Token 314: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45556432008743286
    2. '       ' → logprob: -1.080564260482788
    3. ',
' → logprob: -4.330564498901367
    4. '
' → logprob: -4.705564498901367
    5. '        
' → logprob: -6.080564498901367
    6. '.' → logprob: -7.205564498901367
    7. '<|end|>' → logprob: -7.830564498901367
    8. '#' → logprob: -8.705564498901367
    9. ':' → logprob: -8.705564498901367
    10. 'import' → logprob: -9.455564498901367

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018570076208561659
    2. '        
' → logprob: -6.501856803894043
    3. 'we' → logprob: -9.001856803894043
    4. '#' → logprob: -9.251856803894043
    5. ' we' → logprob: -10.126856803894043
    6. '        ' → logprob: -10.376856803894043
    7. '           ' → logprob: -11.626856803894043
    8. 'import' → logprob: -11.626856803894043
    9. 'return' → logprob: -11.751856803894043
    10. '   ' → logprob: -11.876856803894043

Token 316: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13287879526615143
    2. '#' (adapté à ' #') → logprob: -2.1328787803649902
    3. ' we' → logprob: -6.13287878036499
    4. ' #' → logprob: -6.63287878036499
    5. 'we' → logprob: -7.13287878036499
    6. '        
' → logprob: -7.25787878036499
    7. '   ' → logprob: -8.507879257202148
    8. '        ' → logprob: -8.757879257202148
    9. 'import' → logprob: -9.132879257202148
    10. '           ' → logprob: -9.507879257202148

Token 317: ' trying' (ID: 6700)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6855019927024841
    2. '#' → logprob: -1.060502052307129
    3. 'import' → logprob: -3.060502052307129
    4. ' #' → logprob: -3.060502052307129
    5. ' import' → logprob: -4.560502052307129
    6. ' return' → logprob: -4.560502052307129
    7. ' parent' → logprob: -4.685502052307129
    8. 'return' → logprob: -4.810502052307129
    9. ' we' → logprob: -5.185502052307129
    10. 'we' → logprob: -5.810502052307129

Token 318: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9383124709129333
    2. 'all' → logprob: -1.1883125305175781
    3. ' to' → logprob: -1.6883125305175781
    4. 'to' → logprob: -2.438312530517578
    5. ' edges' → logprob: -4.313312530517578
    6. ' different' → logprob: -4.938312530517578
    7. 'different' → logprob: -5.313312530517578
    8. ' a' → logprob: -6.188312530517578
    9. 'edges' → logprob: -6.938312530517578
    10. 'a' → logprob: -7.063312530517578

Token 319: ' subsets' (ID: 165377)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1426262855529785
    2. 'possible' → logprob: -1.2676262855529785
    3. ' combinations' → logprob: -1.8926262855529785
    4. ' subsets' → logprob: -2.0176262855529785
    5. 'sub' → logprob: -3.2676262855529785
    6. ' possible' → logprob: -3.5176262855529785
    7. 'poss' → logprob: -4.0176262855529785
    8. ' edges' → logprob: -4.7676262855529785
    9. 'edges' → logprob: -5.1426262855529785
    10. ' possibilities' → logprob: -5.3926262855529785

Token 320: ' is' (ID: 382)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06653445214033127
    2. ' is' → logprob: -3.1915345191955566
    3. 'of' → logprob: -4.941534519195557
    4. ' ' → logprob: -5.816534519195557
    5. '       ' → logprob: -5.816534519195557
    6. '   ' → logprob: -6.316534519195557
    7. ' would' → logprob: -6.566534519195557
    8. ',' → logprob: -7.066534519195557
    9. ' for' → logprob: -7.191534519195557
    10. '    ' → logprob: -7.316534519195557

Token 321: ' impossible' (ID: 19786)
  Prédit: ' impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -0.28164464235305786
    2. ' infe' → logprob: -2.531644582748413
    3. ' not' → logprob: -2.781644582748413
    4. 'im' → logprob: -2.906644582748413
    5. ' impr' → logprob: -3.531644582748413
    6. 'not' → logprob: -4.281644821166992
    7. 'in' → logprob: -5.656644821166992
    8. ' too' → logprob: -6.656644821166992
    9. ' in' → logprob: -7.406644821166992
    10. 'too' → logprob: -7.531644821166992

Token 322: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09318182617425919
    2. ',' → logprob: -3.093181848526001
    3. '
' → logprob: -3.843181848526001
    4. '.' → logprob: -4.218181610107422
    5. '        
' → logprob: -5.343181610107422
    6. '<|end|>' → logprob: -7.343181610107422
    7. '#' → logprob: -8.093181610107422
    8. ',
' → logprob: -8.218181610107422
    9. '        

' → logprob: -8.343181610107422
    10. '<|end|>' → logprob: -8.968181610107422

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07970480620861053
    2. '        
' → logprob: -2.704704761505127
    3. '<|end|>' → logprob: -5.454704761505127
    4. '
' → logprob: -5.954704761505127
    5. '        
        
' → logprob: -7.579704761505127
    6. '#' → logprob: -7.579704761505127
    7. ',' → logprob: -7.704704761505127
    8. '        

' → logprob: -7.829704761505127
    9. '<|end|>' → logprob: -8.704705238342285
    10. '    
' → logprob: -9.329705238342285

Token 324: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20061013102531433
    2. '        
' → logprob: -2.0756101608276367
    3. '
' → logprob: -3.0756101608276367
    4. '        

' → logprob: -5.825610160827637
    5. '        
        
' → logprob: -6.325610160827637
    6. '#' → logprob: -6.575610160827637
    7. '<|end|>' → logprob: -6.950610160827637
    8. ' 
' → logprob: -7.200610160827637
    9. '

' → logprob: -7.950610160827637
    10. '        ' → logprob: -8.075610160827637

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04755144193768501
    2. '
' → logprob: -3.672551393508911
    3. '        
' → logprob: -3.922551393508911
    4. '#' → logprob: -7.29755163192749
    5. '        

' → logprob: -8.672551155090332
    6. '

' → logprob: -9.297551155090332
    7. '        
        
' → logprob: -9.922551155090332
    8. '    
' → logprob: -10.297551155090332
    9. ' 
' → logprob: -10.422551155090332
    10. 'import' → logprob: -10.547551155090332

Token 326: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.35488787293434143
    2. '       ' → logprob: -1.229887843132019
    3. 'import' → logprob: -5.479887962341309
    4. ' #' → logprob: -7.854887962341309
    5. '        
' → logprob: -7.854887962341309
    6. 'from' → logprob: -7.979887962341309
    7. 'class' → logprob: -7.979887962341309
    8. '
' → logprob: -8.229887962341309
    9. 'def' → logprob: -8.729887962341309
    10. '   ' → logprob: -9.729887962341309

Token 327: ' Another' (ID: 20064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25733089447021484
    2. '       ' → logprob: -1.8823308944702148
    3. 'import' → logprob: -3.757330894470215
    4. 'class' → logprob: -4.632330894470215
    5. 'return' → logprob: -4.882330894470215
    6. ' #' → logprob: -5.007330894470215
    7. 'parent' → logprob: -5.007330894470215
    8. 'def' → logprob: -5.382330894470215
    9. 'We' → logprob: -5.382330894470215
    10. 'from' → logprob: -5.507330894470215

Token 328: ' idea' (ID: 6056)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.6563053131103516
    2. ' approach' → logprob: -1.0313053131103516
    3. 'possible' → logprob: -2.9063053131103516
    4. 'def' → logprob: -4.281305313110352
    5. ' possible' → logprob: -4.656305313110352
    6. 'line' → logprob: -5.156305313110352
    7. ' line' → logprob: -5.281305313110352
    8. 'option' → logprob: -5.281305313110352
    9. '   ' → logprob: -5.531305313110352
    10. 'import' → logprob: -5.531305313110352

Token 329: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07758193463087082
    2. ' is' → logprob: -3.3275818824768066
    3. '#' → logprob: -4.452581882476807
    4. ',' → logprob: -4.577581882476807
    5. ':
' → logprob: -5.327581882476807
    6. '       ' → logprob: -5.452581882476807
    7. 'is' → logprob: -6.577581882476807
    8. '   ' → logprob: -6.702581882476807
    9. '.' → logprob: -6.952581882476807
    10. '<|end|>' → logprob: -6.952581882476807

Token 330: ' iterate' (ID: 63166)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48255282640457153
    2. '       ' → logprob: -1.7325527667999268
    3. 'Use' → logprob: -2.7325527667999268
    4. ' #' → logprob: -3.3575527667999268
    5. 'def' → logprob: -3.7325527667999268
    6. '
' → logprob: -3.8575527667999268
    7. 'We' → logprob: -4.482553005218506
    8. 'import' → logprob: -4.857553005218506
    9. ' def' → logprob: -5.107553005218506
    10. 'from' → logprob: -5.357553005218506

Token 331: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.09133432060480118
    2. 'over' → logprob: -2.716334342956543
    3. ' through' → logprob: -4.466334342956543
    4. '   ' → logprob: -5.966334342956543
    5. ' edges' → logprob: -6.216334342956543
    6. '       ' → logprob: -6.341334342956543
    7. 'through' → logprob: -7.091334342956543
    8. ' for' → logprob: -7.341334342956543
    9. 'for' → logprob: -7.966334342956543
    10. ' i' → logprob: -8.466334342956543

Token 332: ' all' (ID: 722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8680210709571838
    2. 'possible' → logprob: -1.118021011352539
    3. 'the' → logprob: -2.118021011352539
    4. 'cost' → logprob: -3.493021011352539
    5. ' a' → logprob: -3.743021011352539
    6. ' possible' → logprob: -4.118021011352539
    7. 'all' → logprob: -4.118021011352539
    8. 'edges' → logprob: -4.493021011352539
    9. ' edges' → logprob: -4.493021011352539
    10. ' the' → logprob: -4.743021011352539

Token 333: ' subsets' (ID: 165377)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8969746828079224
    2. 'edges' → logprob: -1.0219746828079224
    3. 'possible' → logprob: -2.021974563598633
    4. 'cost' → logprob: -3.521974563598633
    5. ' possible' → logprob: -4.146974563598633
    6. 'threshold' → logprob: -4.146974563598633
    7. 'company' → logprob: -4.646974563598633
    8. ' costs' → logprob: -5.146974563598633
    9. 'companies' → logprob: -5.396974563598633
    10. ' company' → logprob: -5.521974563598633

Token 334: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.271079421043396
    2. '       ' → logprob: -1.896079421043396
    3. '<|end|>' → logprob: -1.896079421043396
    4. '_' → logprob: -2.0210795402526855
    5. '   ' → logprob: -2.0210795402526855
    6. '<|end|>' → logprob: -2.8960795402526855
    7. 'of' → logprob: -4.1460795402526855
    8. ',' → logprob: -4.2710795402526855
    9. ')' → logprob: -4.5210795402526855
    10. ' ' → logprob: -4.6460795402526855

Token 335: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6674026250839233
    2. 'edges' → logprob: -0.9174026250839233
    3. 'company' → logprob: -3.042402744293213
    4. ' company' → logprob: -3.417402744293213
    5. 'A' → logprob: -6.167402744293213
    6. 'Company' → logprob: -7.167402744293213
    7. 'the' → logprob: -7.417402744293213
    8. ' A' → logprob: -7.417402744293213
    9. ' Company' → logprob: -7.792402744293213
    10. ' the' → logprob: -7.792402744293213

Token 336: ' with' (ID: 483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8755122423171997
    2. ':' → logprob: -1.2505122423171997
    3. ',' → logprob: -1.7505122423171997
    4. '       ' → logprob: -3.37551212310791
    5. '   ' → logprob: -3.75051212310791
    6. '<|end|>' → logprob: -4.25051212310791
    7. ' =' → logprob: -4.50051212310791
    8. '.' → logprob: -4.87551212310791
    9. '<|end|>' → logprob: -5.25051212310791
    10. '[' → logprob: -5.75051212310791

Token 337: ' exactly' (ID: 9707)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -1.332460641860962
    2. 'size' → logprob: -1.707460641860962
    3. 'company' → logprob: -1.832460641860962
    4. ' size' → logprob: -2.207460641860962
    5. ' k' → logprob: -2.582460641860962
    6. 'k' → logprob: -3.082460641860962
    7. ' exactly' → logprob: -3.082460641860962
    8. ' company' → logprob: -3.707460641860962
    9. 'the' → logprob: -4.082460403442383
    10. 'a' → logprob: -4.457460403442383

Token 338: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.36063653230667114
    2. ' k' → logprob: -1.3606364727020264
    3. 'company' → logprob: -4.2356367111206055
    4. ' n' → logprob: -4.9856367111206055
    5. 'n' → logprob: -5.1106367111206055
    6. ' edges' → logprob: -5.2356367111206055
    7. ' company' → logprob: -5.3606367111206055
    8. 'edges' → logprob: -5.9856367111206055
    9. ' (' → logprob: -6.8606367111206055
    10. '1' → logprob: -7.4856367111206055

Token 339: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06994399428367615
    2. ' -' → logprob: -2.694943904876709
    3. '   ' → logprob: -12.694944381713867
    4. ' ' → logprob: -13.069944381713867
    5. '−' → logprob: -14.569944381713867
    6. '1' → logprob: -14.944944381713867
    7. '  ' → logprob: -15.194944381713867
    8. '```' → logprob: -15.319944381713867
    9. ' ' → logprob: -15.444944381713867
    10. '       ' → logprob: -15.569944381713867

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012332366895861924
    2. ' ' → logprob: -9.250123023986816
    3. '-' → logprob: -10.625123023986816
    4. ' -' → logprob: -13.875123023986816
    5. '   ' → logprob: -14.625123023986816
    6. '```' → logprob: -14.750123023986816
    7. '2' → logprob: -15.437623023986816
    8. '
' → logprob: -15.437623023986816
    9. '{' → logprob: -16.250123977661133
    10. '_' → logprob: -16.875123977661133

Token 341: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.019980454817414284
    2. 'edges' → logprob: -4.019980430603027
    3. '_edges' → logprob: -6.769980430603027
    4. ' ' → logprob: -8.269980430603027
    5. ' _' → logprob: -9.769980430603027
    6. '_' → logprob: -9.769980430603027
    7. ' and' → logprob: -10.019980430603027
    8. ' selected' → logprob: -10.269980430603027
    9. ' #' → logprob: -10.894980430603027
    10. '   ' → logprob: -10.894980430603027

Token 342: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3439352214336395
    2. ',' → logprob: -1.968935251235962
    3. ':' → logprob: -2.218935251235962
    4. '<|end|>' → logprob: -4.593935012817383
    5. ' and' → logprob: -5.093935012817383
    6. '.' → logprob: -5.093935012817383
    7. '<|end|>' → logprob: -5.593935012817383
    8. ' =' → logprob: -5.843935012817383
    9. ')' → logprob: -6.093935012817383
    10. '   ' → logprob: -6.593935012817383

Token 343: ' k' (ID: 372)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.7532450556755066
    2. 'exact' → logprob: -1.2532451152801514
    3. 'cost' → logprob: -2.2532451152801514
    4. ' exactly' → logprob: -3.2532451152801514
    5. 'total' → logprob: -4.003244876861572
    6. 'k' → logprob: -4.003244876861572
    7. 'the' → logprob: -4.128244876861572
    8. ' company' → logprob: -4.753244876861572
    9. 'a' → logprob: -4.753244876861572
    10. ' cost' → logprob: -5.753244876861572

Token 344: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.31572985649108887
    2. ' company' → logprob: -1.8157298564910889
    3. 'edges' → logprob: -3.690729856491089
    4. 'company' → logprob: -3.815729856491089
    5. ' from' → logprob: -4.190730094909668
    6. 'from' → logprob: -4.565730094909668
    7. ' A' → logprob: -4.940730094909668
    8. 'A' → logprob: -5.065730094909668
    9. ' of' → logprob: -5.315730094909668
    10. ' spaces' → logprob: -5.565730094909668

Token 345: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4759312868118286
    2. ' from' → logprob: -0.9759312868118286
    3. '       ' → logprob: -7.475931167602539
    4. ' of' → logprob: -7.975931167602539
    5. '   ' → logprob: -8.100931167602539
    6. ' selected' → logprob: -9.100931167602539
    7. ',' → logprob: -9.350931167602539
    8. 'selected' → logprob: -9.475931167602539
    9. ' chosen' → logprob: -9.475931167602539
    10. '_from' → logprob: -10.475931167602539

Token 346: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9936385750770569
    2. ' A' → logprob: -1.243638515472412
    3. ' company' → logprob: -1.743638515472412
    4. 'company' → logprob: -1.868638515472412
    5. ''A' → logprob: -5.493638515472412
    6. ' edges' → logprob: -5.618638515472412
    7. ' '' → logprob: -6.743638515472412
    8. 'Company' → logprob: -6.868638515472412
    9. 'edges' → logprob: -7.118638515472412
    10. ''' → logprob: -7.493638515472412

Token 347: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1318456083536148
    2. ',' → logprob: -3.131845712661743
    3. '<|end|>' → logprob: -3.506845712661743
    4. ' and' → logprob: -4.131845474243164
    5. '#' → logprob: -4.381845474243164
    6. '.' → logprob: -5.006845474243164
    7. '<|end|>' → logprob: -5.131845474243164
    8. '
' → logprob: -6.256845474243164
    9. '        ' → logprob: -6.506845474243164
    10. '        
' → logprob: -6.881845474243164

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06222984194755554
    2. '#' → logprob: -2.812229871749878
    3. ' #' → logprob: -9.812230110168457
    4. ' and' → logprob: -9.937230110168457
    5. ' but' → logprob: -10.062230110168457
    6. 'and' → logprob: -10.062230110168457
    7. '           ' → logprob: -10.812230110168457
    8. '   ' → logprob: -10.812230110168457
    9. 'but' → logprob: -10.937230110168457
    10. ' ' → logprob: -12.312230110168457

Token 349: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5348599553108215
    2. '       ' → logprob: -0.9098599553108215
    3. ' but' → logprob: -5.284860134124756
    4. ' and' → logprob: -5.909860134124756
    5. 'and' → logprob: -6.284860134124756
    6. 'but' → logprob: -6.659860134124756
    7. ' #' → logprob: -8.159859657287598
    8. 'which' → logprob: -9.409859657287598
    9. '   ' → logprob: -9.534859657287598
    10. ' then' → logprob: -9.659859657287598

Token 350: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2908746004104614
    2. '       ' → logprob: -1.4158746004104614
    3. ' #' → logprob: -5.540874481201172
    4. ' but' → logprob: -5.665874481201172
    5. 'but' → logprob: -6.790874481201172
    6. 'and' → logprob: -7.665874481201172
    7. ' and' → logprob: -7.915874481201172
    8. ' then' → logprob: -9.540874481201172
    9. '   ' → logprob: -9.665874481201172
    10. 'return' → logprob: -10.540874481201172

Token 351: ' that' (ID: 484)
  Prédit: ' it's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it's' → logprob: -1.6669529676437378
    2. ' that' → logprob: -1.7919529676437378
    3. '       ' → logprob: -2.2919530868530273
    4. ' the' → logprob: -2.2919530868530273
    5. '#' → logprob: -2.5419530868530273
    6. 'that' → logprob: -2.6669530868530273
    7. ' it' → logprob: -3.0419530868530273
    8. 'the' → logprob: -3.1669530868530273
    9. ' not' → logprob: -3.5419530868530273
    10. 'instead' → logprob: -3.7919530868530273

Token 352: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.049033425748348236
    2. ''s' → logprob: -4.5490336418151855
    3. ' will' → logprob: -4.6740336418151855
    4. 'is' → logprob: -5.1740336418151855
    5. ' would' → logprob: -5.1740336418151855
    6. ' may' → logprob: -5.6740336418151855
    7. ' won't' → logprob: -6.0490336418151855
    8. '#' → logprob: -6.2990336418151855
    9. ' #' → logprob: -6.7990336418151855
    10. ' seems' → logprob: -6.9240336418151855

Token 353: ' also' (ID: 1217)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1010031700134277
    2. 'not' → logprob: -1.8510031700134277
    3. ' infe' → logprob: -2.1010031700134277
    4. ' impossible' → logprob: -2.3510031700134277
    5. ' computational' → logprob: -2.6010031700134277
    6. 'im' → logprob: -2.7260031700134277
    7. ' impr' → logprob: -3.1010031700134277
    8. 'in' → logprob: -3.2260031700134277
    9. '   ' → logprob: -3.6010031700134277
    10. ' too' → logprob: -3.7260031700134277

Token 354: ' impossible' (ID: 19786)
  Prédit: ' impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -1.412784457206726
    2. ' infe' → logprob: -1.662784457206726
    3. 'im' → logprob: -1.787784457206726
    4. ' impr' → logprob: -2.0377845764160156
    5. ' too' → logprob: -2.4127845764160156
    6. ' not' → logprob: -2.7877845764160156
    7. 'in' → logprob: -2.7877845764160156
    8. 'not' → logprob: -3.6627845764160156
    9. 'too' → logprob: -3.6627845764160156
    10. ' computational' → logprob: -6.787784576416016

Token 355: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07263587415218353
    2. '.' → logprob: -3.6976358890533447
    3. ',' → logprob: -3.9476358890533447
    4. '#' → logprob: -4.197635650634766
    5. '<|end|>' → logprob: -4.822635650634766
    6. '...' → logprob: -7.447635650634766
    7. '<|end|>' → logprob: -7.572635650634766
    8. '        
' → logprob: -7.572635650634766
    9. ')' → logprob: -8.322635650634766
    10. '
' → logprob: -8.447635650634766

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027873240411281586
    2. '        
' → logprob: -4.7778730392456055
    3. '<|end|>' → logprob: -4.7778730392456055
    4. '#' → logprob: -5.0278730392456055
    5. '
' → logprob: -6.0278730392456055
    6. '<|end|>' → logprob: -8.027873039245605
    7. ',' → logprob: -8.402873039245605
    8. '\' → logprob: -8.527873039245605
    9. '        
        
' → logprob: -8.777873039245605
    10. '        

' → logprob: -8.902873039245605

Token 357: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10651121288537979
    2. '#' → logprob: -2.981511116027832
    3. '        
' → logprob: -3.356511116027832
    4. '
' → logprob: -4.731511116027832
    5. '<|end|>' → logprob: -5.606511116027832
    6. '        

' → logprob: -7.606511116027832
    7. '#
' (adapté à ' #
') → logprob: -7.856511116027832
    8. '        
        
' → logprob: -7.981511116027832
    9. '<|end|>' → logprob: -8.356511116027832
    10. '\' → logprob: -8.481511116027832

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023034585174173117
    2. '#' → logprob: -6.752303600311279
    3. '
' → logprob: -7.502303600311279
    4. '        
' → logprob: -7.502303600311279
    5. '#
' → logprob: -11.002303123474121
    6. 'import' → logprob: -12.502303123474121
    7. 'from' → logprob: -13.252303123474121
    8. '<|end|>' → logprob: -13.877303123474121
    9. '<|end|>' → logprob: -14.002303123474121
    10. '        

' → logprob: -14.252303123474121

Token 359: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5819239020347595
    2. '#' (adapté à ' #') → logprob: -0.8319239020347595
    3. 'import' → logprob: -5.581923961639404
    4. 'best' → logprob: -7.331923961639404
    5. '        
' → logprob: -7.706923961639404
    6. 'return' → logprob: -8.456923484802246
    7. 'for' → logprob: -8.831923484802246
    8. 'max' → logprob: -8.831923484802246
    9. 'from' → logprob: -8.831923484802246
    10. '   ' → logprob: -9.081923484802246

Token 360: ' Alternative' (ID: 52728)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17582851648330688
    2. '       ' → logprob: -2.675828456878662
    3. 'parent' → logprob: -3.175828456878662
    4. 'import' → logprob: -4.425828456878662
    5. 'uf' → logprob: -4.675828456878662
    6. 'return' → logprob: -4.800828456878662
    7. 'def' → logprob: -5.175828456878662
    8. 'class' → logprob: -5.550828456878662
    9. 'from' → logprob: -5.675828456878662
    10. 'union' → logprob: -6.175828456878662

Token 361: ' approach' (ID: 7139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13388654589653015
    2. ' approach' → logprob: -2.5088865756988525
    3. 'appro' → logprob: -3.2588865756988525
    4. ',' → logprob: -6.008886337280273
    5. ':
' → logprob: -7.008886337280273
    6. ' idea' → logprob: -7.883886337280273
    7. ' is' → logprob: -8.258886337280273
    8. '#' → logprob: -8.258886337280273
    9. ' plan' → logprob: -8.383886337280273
    10. '       ' → logprob: -8.883886337280273

Token 362: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11831576377153397
    2. '       ' → logprob: -2.2433156967163086
    3. ':
' → logprob: -5.993315696716309
    4. ',' → logprob: -6.743315696716309
    5. ' is' → logprob: -7.243315696716309
    6. '#' → logprob: -7.993315696716309
    7. ':

' → logprob: -8.243315696716309
    8. ' =' → logprob: -8.868315696716309
    9. '        
' → logprob: -9.118315696716309
    10. 'def' → logprob: -10.368315696716309

Token 363: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3475482165813446
    2. '       ' → logprob: -2.097548246383667
    3. 'def' → logprob: -2.347548246383667
    4. ' #' → logprob: -3.722548246383667
    5. 'import' → logprob: -4.847548007965088
    6. 'class' → logprob: -4.972548007965088
    7. ' def' → logprob: -5.097548007965088
    8. '
' → logprob: -5.097548007965088
    9. 'We' → logprob: -5.222548007965088
    10. 'from' → logprob: -5.347548007965088

Token 364: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.03440167009830475
    2. ' will' → logprob: -4.284401893615723
    3. ' could' → logprob: -4.909401893615723
    4. ' try' → logprob: -5.409401893615723
    5. ' def' → logprob: -5.534401893615723
    6. 'can' → logprob: -7.159401893615723
    7. 'def' → logprob: -7.284401893615723
    8. ' might' → logprob: -7.534401893615723
    9. ' may' → logprob: -7.534401893615723
    10. ' continue' → logprob: -7.784401893615723

Token 365: ' a' (ID: 261)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.4283149838447571
    2. 'binary' → logprob: -1.3033149242401123
    3. 'a' → logprob: -3.6783149242401123
    4. ' a' → logprob: -3.8033149242401123
    5. ' param' → logprob: -3.9283149242401123
    6. 'param' → logprob: -5.178315162658691
    7. 'K' → logprob: -6.428315162658691
    8. 'union' → logprob: -7.553315162658691
    9. ' Kr' → logprob: -7.928315162658691
    10. ' Union' → logprob: -8.178315162658691

Token 366: ' param' (ID: 3802)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.34805992245674133
    2. ' binary' → logprob: -1.723059892654419
    3. 'param' → logprob: -2.473059892654419
    4. ' param' → logprob: -3.723059892654419
    5. 'union' → logprob: -5.848060131072998
    6. 'def' → logprob: -7.223060131072998
    7. 'modified' → logprob: -7.473060131072998
    8. 'class' → logprob: -7.598060131072998
    9. ' Union' → logprob: -7.723060131072998
    10. 'parameter' → logprob: -8.09805965423584

Token 367: 'etric' (ID: 33622)
  Prédit: 'eter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.17091618478298187
    2. 'eters' → logprob: -2.9209160804748535
    3. 'etrize' → logprob: -2.9209160804748535
    4. 'etr' → logprob: -3.7959160804748535
    5. 'etric' → logprob: -4.0459160804748535
    6. '=' → logprob: -5.0459160804748535
    7. ' =' → logprob: -6.7959160804748535
    8. '_' → logprob: -7.2959160804748535
    9. 's' → logprob: -8.045916557312012
    10. 'etre' → logprob: -8.795916557312012

Token 368: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.5760101675987244
    2. 'search' → logprob: -0.8260101675987244
    3. '_search' → logprob: -9.701009750366211
    4. ' approach' → logprob: -13.076009750366211
    5. '-search' → logprob: -13.201009750366211
    6. 'Search' → logprob: -13.576009750366211
    7. ' searching' → logprob: -13.701009750366211
    8. 'binary' → logprob: -13.826009750366211
    9. '

' → logprob: -14.576009750366211
    10. ' edge' → logprob: -14.701009750366211

Token 369: ' via' (ID: 4493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.329738974571228
    2. ',' → logprob: -2.3297390937805176
    3. ' to' → logprob: -2.7047390937805176
    4. ' with' → logprob: -4.079739093780518
    5. ' for' → logprob: -4.079739093780518
    6. ' or' → logprob: -4.329739093780518
    7. ' (' → logprob: -4.329739093780518
    8. ' over' → logprob: -4.579739093780518
    9. ':' → logprob: -4.704739093780518
    10. '   ' → logprob: -4.704739093780518

Token 370: ' minimum' (ID: 11085)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.3878580629825592
    2. ' binary' → logprob: -1.1378580331802368
    3. 'cost' → logprob: -8.137858390808105
    4. 'b' → logprob: -8.762858390808105
    5. ' b' → logprob: -9.262858390808105
    6. ' cost' → logprob: -9.512858390808105
    7. 'the' → logprob: -10.012858390808105
    8. ' a' → logprob: -10.137858390808105
    9. ' Kr' → logprob: -10.387858390808105
    10. 'K' → logprob: -10.387858390808105

Token 371: ' spanning' (ID: 66335)
  Prédit: ' spanning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.010372732765972614
    2. 'sp' → logprob: -4.760372638702393
    3. '_sp' → logprob: -7.260372638702393
    4. 'cost' → logprob: -7.510372638702393
    5. ' cost' → logprob: -7.885372638702393
    6. '-sp' → logprob: -10.76037311553955
    7. ' cut' → logprob: -10.76037311553955
    8. '_cost' → logprob: -10.88537311553955
    9. '-cost' → logprob: -11.13537311553955
    10. 'cut' → logprob: -11.88537311553955

Token 372: ' trees' (ID: 16979)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.27240169048309326
    2. ' tree' → logprob: -1.7724016904830933
    3. '_tree' → logprob: -2.897401809692383
    4. ' trees' → logprob: -5.272401809692383
    5. 'trees' → logprob: -5.522401809692383
    6. '   ' → logprob: -6.522401809692383
    7. '-tree' → logprob: -6.522401809692383
    8. '       ' → logprob: -7.772401809692383
    9. '_t' → logprob: -8.647401809692383
    10. ' ' → logprob: -9.397401809692383

Token 373: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3491893410682678
    2. ' with' → logprob: -2.099189281463623
    3. ':' → logprob: -2.849189281463623
    4. ',' → logprob: -3.224189281463623
    5. ' (' → logprob: -3.474189281463623
    6. '.' → logprob: -4.224189281463623
    7. 'with' → logprob: -4.849189281463623
    8. ' to' → logprob: -5.849189281463623
    9. '        
' → logprob: -5.849189281463623
    10. 'def' → logprob: -5.974189281463623

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00438667880371213
    2. '        
' → logprob: -6.004386901855469
    3. '
' → logprob: -6.754386901855469
    4. '        ' → logprob: -8.754386901855469
    5. '```' → logprob: -9.254386901855469
    6. ',' → logprob: -9.379386901855469
    7. '#' → logprob: -9.879386901855469
    8. '        

' → logprob: -10.129386901855469
    9. '    
' → logprob: -10.379386901855469
    10. 'import' → logprob: -10.504386901855469

Token 375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010440693236887455
    2. '        
' → logprob: -5.885440826416016
    3. '#' (adapté à ' #') → logprob: -6.260440826416016
    4. '
' → logprob: -6.885440826416016
    5. ' weight' → logprob: -7.135440826416016
    6. ' #' → logprob: -7.260440826416016
    7. '        ' → logprob: -7.635440826416016
    8. ' for' → logprob: -8.010440826416016
    9. 'weight' → logprob: -8.010440826416016
    10. 'def' → logprob: -8.135440826416016

Token 376: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03204825147986412
    2. '        
' → logprob: -4.907048225402832
    3. '
' → logprob: -5.157048225402832
    4. '#' → logprob: -5.907048225402832
    5. '        ' → logprob: -6.032048225402832
    6. ' weight' → logprob: -6.157048225402832
    7. ' for' → logprob: -6.282048225402832
    8. 'def' → logprob: -6.532048225402832
    9. 'weight' → logprob: -6.907048225402832
    10. ' 
' → logprob: -7.032048225402832

Token 377: ' add' (ID: 1147)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.177850365638733
    2. 'perform' → logprob: -1.927850365638733
    3. ' binary' → logprob: -2.1778502464294434
    4. ' use' → logprob: -2.4278502464294434
    5. 'try' → logprob: -2.4278502464294434
    6. ' perform' → logprob: -2.6778502464294434
    7. 'use' → logprob: -2.6778502464294434
    8. 'adjust' → logprob: -3.4278502464294434
    9. ' try' → logprob: -3.6778502464294434
    10. 'do' → logprob: -4.177850246429443

Token 378: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1152024194598198
    2. ' an' → logprob: -2.2402024269104004
    3. 'a' → logprob: -6.6152024269104
    4. ' penalty' → logprob: -9.115201950073242
    5. ' lambda' → logprob: -9.240201950073242
    6. ' ' → logprob: -9.365201950073242
    7. '_' → logprob: -9.365201950073242
    8. 'A' → logprob: -9.490201950073242
    9. ' some' → logprob: -9.490201950073242
    10. ' to' → logprob: -9.615201950073242

Token 379: ' parameter' (ID: 11047)
  Prédit: ' penalty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' penalty' → logprob: -0.4299110472202301
    2. ' parameter' → logprob: -1.5549110174179077
    3. 'parameter' → logprob: -2.9299111366271973
    4. ' variable' → logprob: -3.4299111366271973
    5. 'variable' → logprob: -4.429911136627197
    6. 'param' → logprob: -4.929911136627197
    7. ' param' → logprob: -5.179911136627197
    8. 'lambda' → logprob: -5.179911136627197
    9. ' lambda' → logprob: -5.304911136627197
    10. 'pen' → logprob: -5.304911136627197

Token 380: ' to' (ID: 316)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7442711591720581
    2. ' t' → logprob: -1.494271159172058
    3. 'lambda' → logprob: -1.744271159172058
    4. '_lambda' → logprob: -3.9942712783813477
    5. ' lamb' → logprob: -4.119271278381348
    6. ' _' → logprob: -4.494271278381348
    7. 't' → logprob: -4.619271278381348
    8. ',' → logprob: -4.619271278381348
    9. '=lambda' → logprob: -4.869271278381348
    10. ' x' → logprob: -4.994271278381348

Token 381: ' edge' (ID: 11165)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1514049768447876
    2. ' edges' → logprob: -1.2764049768447876
    3. ' the' → logprob: -1.7764049768447876
    4. 'each' → logprob: -2.151404857635498
    5. 'edges' → logprob: -2.901404857635498
    6. ' each' → logprob: -3.401404857635498
    7. 'edge' → logprob: -4.151404857635498
    8. ' edge' → logprob: -4.776404857635498
    9. 'cost' → logprob: -6.151404857635498
    10. ' adjust' → logprob: -6.901404857635498

Token 382: ' costs' (ID: 8959)
  Prédit: '.weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.5070170760154724
    2. '.cost' → logprob: -1.8820171356201172
    3. ' weights' → logprob: -2.507017135620117
    4. '.' → logprob: -3.507017135620117
    5. ' weight' → logprob: -3.507017135620117
    6. ' cost' → logprob: -3.882017135620117
    7. 'weights' → logprob: -3.882017135620117
    8. '.weights' → logprob: -4.257017135620117
    9. 'weight' → logprob: -4.507017135620117
    10. 'cost' → logprob: -4.507017135620117

Token 383: ' that' (ID: 484)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4316650331020355
    2. ':' → logprob: -2.0566649436950684
    3. '       ' → logprob: -2.9316649436950684
    4. ' =' → logprob: -3.8066649436950684
    5. ' to' → logprob: -4.056664943695068
    6. ' for' → logprob: -4.306664943695068
    7. '_' → logprob: -4.431664943695068
    8. ' and' → logprob: -4.431664943695068
    9. ' *' → logprob: -4.556664943695068
    10. '.' → logprob: -4.556664943695068

Token 384: ' penal' (ID: 24334)
  Prédit: ' penal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' penal' → logprob: -0.1403227001428604
    2. 'pen' → logprob: -2.890322685241699
    3. 'balances' → logprob: -4.390322685241699
    4. ' favors' → logprob: -4.515322685241699
    5. ' balances' → logprob: -4.640322685241699
    6. ' represents' → logprob: -5.265322685241699
    7. ' line' → logprob: -6.015322685241699
    8. 'adjust' → logprob: -6.140322685241699
    9. 'rep' → logprob: -6.265322685241699
    10. ' is' → logprob: -6.390322685241699

Token 385: 'izes' (ID: 6370)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.4357164800167084
    2. 'izes' → logprob: -1.6857165098190308
    3. 't' → logprob: -1.9357165098190308
    4. 'y' → logprob: -4.06071662902832
    5. 'ty' → logprob: -5.43571662902832
    6. '-' → logprob: -7.31071662902832
    7. 'ized' → logprob: -7.93571662902832
    8. '=' → logprob: -8.81071662902832
    9. '#' → logprob: -9.06071662902832
    10. ' ' → logprob: -9.43571662902832

Token 386: ' or' (ID: 503)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.034198928624391556
    2. ' edges' → logprob: -4.159198760986328
    3. 'company' → logprob: -4.409198760986328
    4. 'A' → logprob: -6.159198760986328
    5. ' A' → logprob: -7.034198760986328
    6. ' the' → logprob: -7.284198760986328
    7. ' or' → logprob: -7.284198760986328
    8. 'edges' → logprob: -7.534198760986328
    9. ' selecting' → logprob: -8.909198760986328
    10. ' ' → logprob: -9.034198760986328

Token 387: ' rewards' (ID: 30851)
  Prédit: ' rewards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rewards' → logprob: -0.648212730884552
    2. 'reward' → logprob: -1.5232126712799072
    3. 're' → logprob: -2.0232126712799072
    4. 'subtract' → logprob: -3.0232126712799072
    5. 'rew' → logprob: -3.3982126712799072
    6. 'discount' → logprob: -3.5232126712799072
    7. ' subtract' → logprob: -5.648212909698486
    8. ' discounts' → logprob: -6.273212909698486
    9. 'credits' → logprob: -6.398212909698486
    10. ' reward' → logprob: -6.648212909698486

Token 388: ' choosing' (ID: 20296)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.05738877132534981
    2. ' edges' → logprob: -3.0573887825012207
    3. 'company' → logprob: -5.807388782501221
    4. ' the' → logprob: -6.057388782501221
    5. ' selecting' → logprob: -6.432388782501221
    6. 'A' → logprob: -7.557388782501221
    7. ' A' → logprob: -8.057388305664062
    8. ' choosing' → logprob: -8.182388305664062
    9. 'edges' → logprob: -8.932388305664062
    10. ' a' → logprob: -9.057388305664062

Token 389: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.4019765555858612
    2. ' edges' → logprob: -1.6519765853881836
    3. 'A' → logprob: -3.0269765853881836
    4. 'company' → logprob: -3.5269765853881836
    5. ' A' → logprob: -3.6519765853881836
    6. ' '' → logprob: -4.151976585388184
    7. ''' → logprob: -4.401976585388184
    8. 'edges' → logprob: -6.151976585388184
    9. ' a' → logprob: -6.276976585388184
    10. ' the' → logprob: -6.776976585388184

Token 390: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1746593713760376
    2. 'A' → logprob: -1.9246593713760376
    3. '_A' → logprob: -5.049659252166748
    4. ' ' → logprob: -5.424659252166748
    5. '_' → logprob: -6.674659252166748
    6. ' B' → logprob: -6.799659252166748
    7. '<|end|>' → logprob: -7.299659252166748
    8. 'B' → logprob: -8.799659729003906
    9. '  ' → logprob: -9.674659729003906
    10. '<|end|>' → logprob: -10.299659729003906

Token 391: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6692200303077698
    2. ' edges' → logprob: -1.044219970703125
    3. ',' → logprob: -2.919219970703125
    4. '   ' → logprob: -3.794219970703125
    5. '.' → logprob: -3.919219970703125
    6. ':' → logprob: -4.044219970703125
    7. ')' → logprob: -5.294219970703125
    8. 'edges' → logprob: -5.794219970703125
    9. ' and' → logprob: -6.419219970703125
    10. '
' → logprob: -6.669219970703125

Token 392: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025141127407550812
    2. '
' → logprob: -4.52514123916626
    3. ',' → logprob: -4.77514123916626
    4. '        
' → logprob: -6.27514123916626
    5. '.' → logprob: -7.27514123916626
    6. ':' → logprob: -7.52514123916626
    7. '<|end|>' → logprob: -7.52514123916626
    8. '#' → logprob: -8.275140762329102
    9. '<|end|>' → logprob: -8.275140762329102
    10. ' and' → logprob: -8.775140762329102

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004517585039138794
    2. ' and' → logprob: -6.629517555236816
    3. ',' → logprob: -6.879517555236816
    4. '#' → logprob: -7.754517555236816
    5. '           ' → logprob: -8.129517555236816
    6. '        ' → logprob: -8.254517555236816
    7. ':' → logprob: -8.754517555236816
    8. '.' → logprob: -8.754517555236816
    9. ' to' → logprob: -9.004517555236816
    10. '   ' → logprob: -9.379517555236816

Token 394: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05502017214894295
    2. ' and' → logprob: -3.1800200939178467
    3. '#' (adapté à ' #') → logprob: -4.930020332336426
    4. '        ' → logprob: -7.305020332336426
    5. ' so' → logprob: -7.305020332336426
    6. '           ' → logprob: -7.930020332336426
    7. 'def' → logprob: -7.930020332336426
    8. ',' → logprob: -8.055020332336426
    9. '   ' → logprob: -8.180020332336426
    10. '        
' → logprob: -8.305020332336426

Token 395: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6855151653289795
    2. ' and' → logprob: -1.1855151653289795
    3. '#' → logprob: -1.9355151653289795
    4. ' then' → logprob: -3.8105151653289795
    5. 'and' → logprob: -4.185515403747559
    6. ' #' → logprob: -5.810515403747559
    7. '           ' → logprob: -7.185515403747559
    8. ' to' → logprob: -7.685515403747559
    9. 'def' → logprob: -7.685515403747559
    10. ' allowing' → logprob: -7.685515403747559

Token 396: ' binary' (ID: 15600)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.0179437398910522
    2. ' run' → logprob: -1.0179437398910522
    3. ' perform' → logprob: -1.8929437398910522
    4. ' binary' → logprob: -3.767943859100342
    5. ' adjust' → logprob: -3.892943859100342
    6. ' find' → logprob: -4.017943859100342
    7. 'binary' → logprob: -4.517943859100342
    8. 'perform' → logprob: -4.642943859100342
    9. ' try' → logprob: -4.767943859100342
    10. 'use' → logprob: -4.767943859100342

Token 397: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.05363389849662781
    2. 'search' → logprob: -3.30363392829895
    3. '_search' → logprob: -4.178633689880371
    4. '_' → logprob: -8.928633689880371
    5. ' _' → logprob: -11.803633689880371
    6. '	search' → logprob: -12.678633689880371
    7. ' searching' → logprob: -12.803633689880371
    8. ' ' → logprob: -13.303633689880371
    9. ' space' → logprob: -13.553633689880371
    10. 'Search' → logprob: -14.053633689880371

Token 398: ' the' (ID: 290)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.6642875671386719
    2. '       ' → logprob: -1.0392875671386719
    3. ' for' → logprob: -3.164287567138672
    4. ' to' → logprob: -3.289287567138672
    5. ' on' → logprob: -3.414287567138672
    6. '   ' → logprob: -5.914287567138672
    7. 'over' → logprob: -5.914287567138672
    8. 'to' → logprob: -6.414287567138672
    9. '        ' → logprob: -6.664287567138672
    10. '_' → logprob: -6.664287567138672

Token 399: ' parameter' (ID: 11047)
  Prédit: ' parameter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parameter' → logprob: -0.589672327041626
    2. ' cost' → logprob: -1.714672327041626
    3. ' value' → logprob: -2.964672327041626
    4. ' penalty' → logprob: -3.214672327041626
    5. ' space' → logprob: -3.339672327041626
    6. ' minimal' → logprob: -3.714672327041626
    7. ' minimum' → logprob: -3.964672327041626
    8. ' lambda' → logprob: -4.339672088623047
    9. ' multiplier' → logprob: -4.464672088623047
    10. ' best' → logprob: -4.714672088623047

Token 400: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05800236389040947
    2. ',' → logprob: -3.933002471923828
    3. ':' → logprob: -4.308002471923828
    4. ' to' → logprob: -4.558002471923828
    5. 'def' → logprob: -5.808002471923828
    6. '.' → logprob: -5.933002471923828
    7. '   ' → logprob: -6.433002471923828
    8. '#' → logprob: -6.808002471923828
    9. ' for' → logprob: -6.808002471923828
    10. ' =' → logprob: -7.308002471923828

Token 401: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06184588372707367
    2. ':' → logprob: -3.5618457794189453
    3. '
' → logprob: -4.061845779418945
    4. ',' → logprob: -5.061845779418945
    5. '        
' → logprob: -6.186845779418945
    6. ':
' → logprob: -6.936845779418945
    7. '   ' → logprob: -7.311845779418945
    8. '.' → logprob: -7.561845779418945
    9. '<|end|>' → logprob: -7.686845779418945
    10. '\n' → logprob: -8.311845779418945

Token 402: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.22594788670539856
    2. 'that' → logprob: -1.6009478569030762
    3. '       ' → logprob: -8.350948333740234
    4. '   ' → logprob: -8.725948333740234
    5. '    ' → logprob: -9.725948333740234
    6. ' to' → logprob: -10.850948333740234
    7. '        ' → logprob: -11.600948333740234
    8. 'to' → logprob: -11.850948333740234
    9. '      ' → logprob: -11.850948333740234
    10. 'as' → logprob: -12.100948333740234

Token 403: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5058140754699707
    2. 'the' → logprob: -1.2558140754699707
    3. ' exactly' → logprob: -2.2558140754699707
    4. 'exact' → logprob: -5.755814075469971
    5. ' we' → logprob: -6.130814075469971
    6. 'we' → logprob: -6.505814075469971
    7. '#' → logprob: -8.505813598632812
    8. 'number' → logprob: -9.130813598632812
    9. ' number' → logprob: -9.380813598632812
    10. ' in' → logprob: -10.630813598632812

Token 404: ' MST' (ID: 123058)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.36084139347076416
    2. 'number' → logprob: -1.2358413934707642
    3. ' next' → logprob: -5.110841274261475
    4. 'next' → logprob: -5.985841274261475
    5. ' total' → logprob: -6.860841274261475
    6. 'count' → logprob: -7.235841274261475
    7. 'total' → logprob: -7.360841274261475
    8. 'result' → logprob: -7.985841274261475
    9. 'selected' → logprob: -8.235841751098633
    10. 'exact' → logprob: -8.735841751098633

Token 405: ' has' (ID: 853)
  Prédit: ' includes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' includes' → logprob: -0.1764327883720398
    2. ' contains' → logprob: -2.9264328479766846
    3. ' has' → logprob: -3.6764328479766846
    4. ' edges' → logprob: -4.1764326095581055
    5. 'includes' → logprob: -4.6764326095581055
    6. ' built' → logprob: -4.9264326095581055
    7. ' cost' → logprob: -4.9264326095581055
    8. ' constructed' → logprob: -5.0514326095581055
    9. ' returns' → logprob: -5.4264326095581055
    10. ' selects' → logprob: -5.6764326095581055

Token 406: ' exactly' (ID: 9707)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.16032719612121582
    2. ' exactly' → logprob: -1.9103271961212158
    3. 'k' → logprob: -10.285326957702637
    4. ' k' → logprob: -10.660326957702637
    5. 'company' → logprob: -11.285326957702637
    6. '```' → logprob: -11.285326957702637
    7. ' exact' → logprob: -11.660326957702637
    8. '_exact' → logprob: -12.785326957702637
    9. 'the' → logprob: -13.285326957702637
    10. 'Exactly' → logprob: -13.410326957702637

Token 407: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.03814798593521118
    2. 'k' → logprob: -3.2881479263305664
    3. ' self' → logprob: -9.288147926330566
    4. 'self' → logprob: -11.663147926330566
    5. ' a' → logprob: -12.663147926330566
    6. ' ' → logprob: -13.913147926330566
    7. ' exactly' → logprob: -14.788147926330566
    8. '	k' → logprob: -15.663147926330566
    9. '_k' → logprob: -15.913147926330566
    10. ' ' → logprob: -16.163148880004883

Token 408: ' edges' (ID: 22569)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.3273240923881531
    2. ' edges' → logprob: -1.4523241519927979
    3. 'company' → logprob: -3.452324151992798
    4. 'edges' → logprob: -5.077323913574219
    5. ' A' → logprob: -5.577323913574219
    6. 'A' → logprob: -6.077323913574219
    7. ' selected' → logprob: -8.077323913574219
    8. '_company' → logprob: -8.702323913574219
    9. ' chosen' → logprob: -9.077323913574219
    10. ' of' → logprob: -9.827323913574219

Token 409: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12263628840446472
    2. '.' → logprob: -2.622636318206787
    3. ',' → logprob: -3.997636318206787
    4. ':' → logprob: -4.372636318206787
    5. '        
' → logprob: -5.372636318206787
    6. '
' → logprob: -6.497636318206787
    7. '        ' → logprob: -6.872636318206787
    8. '#' → logprob: -7.747636318206787
    9. '<|end|>' → logprob: -7.872636318206787
    10. ' in' → logprob: -8.122635841369629

Token 410: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.09891776740550995
    2. 'company' → logprob: -2.4739177227020264
    3. 'A' → logprob: -5.7239179611206055
    4. ' A' → logprob: -5.7239179611206055
    5. ' type' → logprob: -5.9739179611206055
    6. 'Company' → logprob: -8.473917961120605
    7. 'type' → logprob: -8.473917961120605
    8. ''' → logprob: -8.598917961120605
    9. ' '' → logprob: -9.473917961120605
    10. ' Company' → logprob: -9.723917961120605

Token 411: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.349934846162796
    2. 'A' → logprob: -1.2249348163604736
    3. '_A' → logprob: -7.099935054779053
    4. ' '' → logprob: -8.474934577941895
    5. ' ' → logprob: -8.724934577941895
    6. ''' → logprob: -8.724934577941895
    7. 'space' → logprob: -10.474934577941895
    8. ''A' → logprob: -10.474934577941895
    9. '_' → logprob: -11.224934577941895
    10. ' ' → logprob: -11.349934577941895

Token 412: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039687637239694595
    2. '
' → logprob: -4.039687633514404
    3. ',' → logprob: -4.789687633514404
    4. '        
' → logprob: -5.164687633514404
    5. ':' → logprob: -6.414687633514404
    6. '<|end|>' → logprob: -6.914687633514404
    7. '.' → logprob: -7.164687633514404
    8. '        ' → logprob: -7.414687633514404
    9. '   ' → logprob: -7.664687633514404
    10. 'def' → logprob: -7.664687633514404

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0615520216524601
    2. '
' → logprob: -3.061552047729492
    3. '        
' → logprob: -4.561552047729492
    4. '<|end|>' → logprob: -7.561552047729492
    5. ',' → logprob: -7.686552047729492
    6. '        ' → logprob: -8.436552047729492
    7. 'def' → logprob: -8.811552047729492
    8. '#' → logprob: -8.936552047729492
    9. '        

' → logprob: -8.936552047729492
    10. '    
' → logprob: -9.311552047729492

Token 414: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29752156138420105
    2. '
' → logprob: -1.4225215911865234
    3. '        
' → logprob: -4.547521591186523
    4. '<|end|>' → logprob: -6.297521591186523
    5. 'def' → logprob: -7.422521591186523
    6. '

' → logprob: -7.422521591186523
    7. '   ' → logprob: -7.797521591186523
    8. ',' → logprob: -7.922521591186523
    9. '    
' → logprob: -8.047521591186523
    10. '#' → logprob: -8.047521591186523

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033807866275310516
    2. '
' → logprob: -3.7838077545166016
    3. '        
' → logprob: -4.658807754516602
    4. '<|end|>' → logprob: -8.158807754516602
    5. 'import' → logprob: -9.033807754516602
    6. 'def' → logprob: -9.033807754516602
    7. '        ' → logprob: -9.033807754516602
    8. '        

' → logprob: -9.158807754516602
    9. '#' → logprob: -9.408807754516602
    10. '

' → logprob: -10.408807754516602

Token 416: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019108597189188004
    2. '#' (adapté à ' #') → logprob: -5.394108772277832
    3. 'def' → logprob: -5.394108772277832
    4. 'low' → logprob: -6.019108772277832
    5. 'import' → logprob: -6.394108772277832
    6. 'param' → logprob: -6.644108772277832
    7. '        
' → logprob: -6.769108772277832
    8. '
' → logprob: -7.394108772277832
    9. '   ' → logprob: -7.894108772277832
    10. 'left' → logprob: -8.269108772277832

Token 417: ' The' (ID: 623)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.29930487275123596
    2. '       ' → logprob: -2.299304962158203
    3. 'l' → logprob: -3.174304962158203
    4. 'def' → logprob: -3.424304962158203
    5. 'left' → logprob: -3.549304962158203
    6. '#' → logprob: -3.549304962158203
    7. 'lo' → logprob: -4.049304962158203
    8. 'import' → logprob: -5.674304962158203
    9. 'lambda' → logprob: -6.549304962158203
    10. 'delta' → logprob: -7.174304962158203

Token 418: ' problem' (ID: 4792)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9111613035202026
    2. 'def' → logprob: -1.2861613035202026
    3. ' next' → logprob: -1.5361613035202026
    4. ' best' → logprob: -3.536161422729492
    5. ' code' → logprob: -3.911161422729492
    6. ' plan' → logprob: -4.411161422729492
    7. ' approach' → logprob: -4.911161422729492
    8. ' binary' → logprob: -4.911161422729492
    9. ' problem' → logprob: -5.911161422729492
    10. ' rest' → logprob: -5.911161422729492

Token 419: ':' (ID: 25)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8544357419013977
    2. ' is' → logprob: -1.104435682296753
    3. 'is' → logprob: -1.854435682296753
    4. 'with' → logprob: -2.729435682296753
    5. ' with' → logprob: -4.979435920715332
    6. ':' → logprob: -5.479435920715332
    7. ' now' → logprob: -5.604435920715332
    8. '   ' → logprob: -5.854435920715332
    9. '       ' → logprob: -6.729435920715332
    10. 'now' → logprob: -7.979435920715332

Token 420: ' But' (ID: 3072)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7933498620986938
    2. '       ' → logprob: -1.9183498620986938
    3. '#' → logprob: -2.1683497428894043
    4. ' def' → logprob: -2.5433497428894043
    5. 'def' → logprob: -3.0433497428894043
    6. 'We' → logprob: -3.6683497428894043
    7. ' we' → logprob: -3.7933497428894043
    8. ' #' → logprob: -4.043349742889404
    9. ' We' → logprob: -4.668349742889404
    10. 'import' → logprob: -4.668349742889404

Token 421: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5973436832427979
    2. ' we' → logprob: -1.2223436832427979
    3. ' there' → logprob: -3.722343683242798
    4. ' if' → logprob: -3.847343683242798
    5. 'the' → logprob: -4.097343444824219
    6. ' binary' → logprob: -4.597343444824219
    7. ' that' → logprob: -4.972343444824219
    8. ' for' → logprob: -5.097343444824219
    9. ' edges' → logprob: -5.097343444824219
    10. ',' → logprob: -5.097343444824219

Token 422: ' output' (ID: 4733)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.3707623481750488
    2. ' best' → logprob: -2.120762348175049
    3. ' edges' → logprob: -2.370762348175049
    4. 'def' → logprob: -2.745762348175049
    5. ' problem' → logprob: -2.995762348175049
    6. ' next' → logprob: -2.995762348175049
    7. ' def' → logprob: -3.120762348175049
    8. 'n' → logprob: -3.620762348175049
    9. ' binary' → logprob: -3.620762348175049
    10. ' parameter' → logprob: -3.870762348175049

Token 423: ' cost' (ID: 3097)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22814011573791504
    2. ' cost' → logprob: -3.353140115737915
    3. ' of' → logprob: -3.478140115737915
    4. ' code' → logprob: -3.853140115737915
    5. ' edges' → logprob: -3.978140115737915
    6. ':' → logprob: -4.103139877319336
    7. ' space' → logprob: -4.228139877319336
    8. ' ' → logprob: -4.728139877319336
    9. ' edge' → logprob: -5.228139877319336
    10. ' can' → logprob: -5.728139877319336

Token 424: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47433698177337646
    2. ' function' → logprob: -2.224337100982666
    3. ' should' → logprob: -2.599337100982666
    4. '=' → logprob: -3.224337100982666
    5. ' =' → logprob: -3.224337100982666
    6. ' must' → logprob: -4.224337100982666
    7. ' ' → logprob: -4.224337100982666
    8. ':' → logprob: -4.599337100982666
    9. ' includes' → logprob: -4.599337100982666
    10. ' of' → logprob: -4.724337100982666

Token 425: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5268945693969727
    2. ' include' → logprob: -2.0268945693969727
    3. ' only' → logprob: -2.9018945693969727
    4. ' not' → logprob: -3.2768945693969727
    5. ' match' → logprob: -3.4018945693969727
    6. ' always' → logprob: -3.5268945693969727
    7. 'include' → logprob: -3.7768945693969727
    8. 'be' → logprob: -3.9018945693969727
    9. ' consider' → logprob: -4.151894569396973
    10. ' equal' → logprob: -4.151894569396973

Token 426: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6195799708366394
    2. ' the' → logprob: -1.3695800304412842
    3. 'exact' → logprob: -2.494580030441284
    4. 'without' → logprob: -3.494580030441284
    5. 'actual' → logprob: -3.994580030441284
    6. ' actual' → logprob: -4.869579792022705
    7. 'real' → logprob: -4.869579792022705
    8. 'just' → logprob: -4.994579792022705
    9. 'pure' → logprob: -4.994579792022705
    10. ' without' → logprob: -5.119579792022705

Token 427: ' sum' (ID: 4215)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -1.038403034210205
    2. 'actual' → logprob: -1.538403034210205
    3. 'real' → logprob: -1.538403034210205
    4. 'true' → logprob: -2.663403034210205
    5. ' original' → logprob: -3.038403034210205
    6. ' actual' → logprob: -3.663403034210205
    7. ' real' → logprob: -3.788403034210205
    8. 'minimum' → logprob: -4.038403034210205
    9. 'sum' → logprob: -4.163403034210205
    10. ' sum' → logprob: -4.913403034210205

Token 428: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05492335557937622
    2. '       ' → logprob: -4.0549235343933105
    3. ' -' → logprob: -4.4299235343933105
    4. ' +' → logprob: -5.3049235343933105
    5. '+' → logprob: -5.4299235343933105
    6. '-' → logprob: -5.5549235343933105
    7. 'of' → logprob: -5.9299235343933105
    8. '   ' → logprob: -6.6799235343933105
    9. '        ' → logprob: -6.8049235343933105
    10. '_' → logprob: -7.1799235343933105

Token 429: ' real' (ID: 1374)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -1.7230894565582275
    2. ' the' → logprob: -2.0980894565582275
    3. 'original' → logprob: -2.0980894565582275
    4. 'actual' → logprob: -2.3480894565582275
    5. ' actual' → logprob: -2.4730894565582275
    6. 'the' → logprob: -2.5980894565582275
    7. ' e' → logprob: -2.8480894565582275
    8. 'real' → logprob: -2.9730894565582275
    9. 'e' → logprob: -3.2230894565582275
    10. 'edge' → logprob: -3.2230894565582275

Token 430: ' costs' (ID: 8959)
  Prédit: ' costs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.04513201117515564
    2. '_cost' → logprob: -3.7951319217681885
    3. ' cost' → logprob: -4.295132160186768
    4. 'cost' → logprob: -4.920132160186768
    5. '_' → logprob: -8.42013168334961
    6. ' edges' → logprob: -8.67013168334961
    7. ' edge' → logprob: -9.29513168334961
    8. ' ' → logprob: -9.67013168334961
    9. ' _' → logprob: -9.79513168334961
    10. '_edge' → logprob: -10.17013168334961

Token 431: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7474405169487
    2. '       ' → logprob: -0.7474405169487
    3. '        
' → logprob: -3.9974405765533447
    4. ',' → logprob: -4.622440338134766
    5. '

' → logprob: -4.997440338134766
    6. 'def' → logprob: -5.497440338134766
    7. '.' → logprob: -6.247440338134766
    8. '\n' → logprob: -6.372440338134766
    9. 'import' → logprob: -6.372440338134766
    10. ',
' → logprob: -6.497440338134766

Token 432: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08053938299417496
    2. 'not' → logprob: -2.8305394649505615
    3. '       ' → logprob: -4.080539226531982
    4. ' so' → logprob: -7.205539226531982
    5. '#' → logprob: -7.955539226531982
    6. 'def' → logprob: -8.95553970336914
    7. ',' → logprob: -8.95553970336914
    8. 'import' → logprob: -10.83053970336914
    9. ' no' → logprob: -10.95553970336914
    10. '   ' → logprob: -11.08053970336914

Token 433: ' penalties' (ID: 60163)
  Prédit: ' penalty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' penalty' → logprob: -0.05060197412967682
    2. ' penalties' → logprob: -3.5506019592285156
    3. 'pen' → logprob: -4.675601959228516
    4. ' modification' → logprob: -6.425601959228516
    5. ' parameter' → logprob: -6.800601959228516
    6. ' adjustment' → logprob: -7.050601959228516
    7. ' modifier' → logprob: -7.050601959228516
    8. ' adjustments' → logprob: -7.175601959228516
    9. ' artificial' → logprob: -7.425601959228516
    10. ' modifications' → logprob: -7.425601959228516

Token 434: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7162593603134155
    2. '       ' → logprob: -0.9662593603134155
    3. '<|end|>' → logprob: -2.966259479522705
    4. '        
' → logprob: -3.091259479522705
    5. '.' → logprob: -4.716259479522705
    6. ',' → logprob: -5.091259479522705
    7. '<|end|>' → logprob: -5.466259479522705
    8. '

' → logprob: -5.591259479522705
    9. 'def' → logprob: -6.091259479522705
    10. '#' → logprob: -6.466259479522705

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5501607656478882
    2. '
' → logprob: -0.9251607656478882
    3. '        
' → logprob: -3.8001608848571777
    4. '

' → logprob: -6.925160884857178
    5. '<|end|>' → logprob: -6.925160884857178
    6. 'def' → logprob: -7.425160884857178
    7. '#' → logprob: -8.42516040802002
    8. '        

' → logprob: -8.55016040802002
    9. '```' → logprob: -8.67516040802002
    10. '    
' → logprob: -8.67516040802002

Token 436: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5685563683509827
    2. '
' → logprob: -1.318556308746338
    3. '        
' → logprob: -1.818556308746338
    4. '<|end|>' → logprob: -7.193556308746338
    5. '        

' → logprob: -7.818556308746338
    6. '\n' → logprob: -7.943556308746338
    7. ' 
' → logprob: -8.193556785583496
    8. '    
' → logprob: -8.193556785583496
    9. 'def' → logprob: -8.443556785583496
    10. '```' → logprob: -8.443556785583496

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2541094422340393
    2. '
' → logprob: -1.6291093826293945
    3. '        
' → logprob: -3.6291093826293945
    4. '

' → logprob: -7.3791093826293945
    5. '        

' → logprob: -7.7541093826293945
    6. '```' → logprob: -8.629109382629395
    7. '#' → logprob: -9.004109382629395
    8. 'import' → logprob: -9.254109382629395
    9. '        ' → logprob: -10.004109382629395
    10. '    
' → logprob: -10.379109382629395

Token 438: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3243821859359741
    2. '
' → logprob: -1.6993821859359741
    3. '        
' → logprob: -2.4493823051452637
    4. '#' (adapté à ' #') → logprob: -5.949382305145264
    5. 'def' → logprob: -6.199382305145264
    6. '        

' → logprob: -7.199382305145264
    7. '

' → logprob: -7.324382305145264
    8. 'import' → logprob: -7.824382305145264
    9. '        ' → logprob: -8.324381828308105
    10. '    
' → logprob: -8.574381828308105

Token 439: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6090119481086731
    2. '#' → logprob: -1.4840118885040283
    3. 'def' → logprob: -1.8590118885040283
    4. '
' → logprob: -3.2340118885040283
    5. 'import' → logprob: -4.109012126922607
    6. 'class' → logprob: -4.609012126922607
    7. '        
' → logprob: -5.234012126922607
    8. 'We' → logprob: -7.609012126922607
    9. '   ' → logprob: -7.734012126922607
    10. 'from' → logprob: -8.73401165008545

Token 440: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.54944908618927
    2. 'def' → logprob: -1.42444908618927
    3. ' def' → logprob: -2.1744489669799805
    4. '   ' → logprob: -3.5494489669799805
    5. '    ' → logprob: -4.9244489669799805
    6. '        
' → logprob: -5.0494489669799805
    7. '
' → logprob: -5.5494489669799805
    8. ' best' → logprob: -5.6744489669799805
    9. '        ' → logprob: -5.7994489669799805
    10. '    
' → logprob: -5.9244489669799805

Token 441: ' we' (ID: 581)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.454543113708496
    2. 'low' → logprob: -1.454543113708496
    3. '#' → logprob: -1.954543113708496
    4. ' lo' → logprob: -2.329543113708496
    5. '       ' → logprob: -2.454543113708496
    6. ' low' → logprob: -2.829543113708496
    7. 'left' → logprob: -3.204543113708496
    8. ' left' → logprob: -3.454543113708496
    9. 'lo' → logprob: -3.579543113708496
    10. ' def' → logprob: -3.704543113708496

Token 442: ' can' (ID: 665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36370527744293213
    2. ' can' → logprob: -2.1137051582336426
    3. ' def' → logprob: -2.4887051582336426
    4. ' will' → logprob: -3.7387051582336426
    5. '#' → logprob: -3.9887051582336426
    6. '   ' → logprob: -3.9887051582336426
    7. ' continue' → logprob: -4.863705158233643
    8. ''ll' → logprob: -5.113705158233643
    9. ' need' → logprob: -5.113705158233643
    10. 'continue' → logprob: -5.238705158233643

Token 443: ' find' (ID: 1646)
  Prédit: 'define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'define' → logprob: -1.350760817527771
    2. 'try' → logprob: -1.600760817527771
    3. 'implement' → logprob: -1.600760817527771
    4. 'def' → logprob: -1.725760817527771
    5. 'binary' → logprob: -2.6007609367370605
    6. ' define' → logprob: -4.1007609367370605
    7. ' implement' → logprob: -4.1007609367370605
    8. 'perform' → logprob: -4.2257609367370605
    9. 'use' → logprob: -4.3507609367370605
    10. ' try' → logprob: -5.1007609367370605

Token 444: ' MST' (ID: 123058)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9510940313339233
    2. ' a' → logprob: -1.9510940313339233
    3. '       ' → logprob: -2.451094150543213
    4. ' the' → logprob: -2.451094150543213
    5. 'low' → logprob: -2.451094150543213
    6. 'left' → logprob: -2.826094150543213
    7. ' low' → logprob: -2.951094150543213
    8. ' def' → logprob: -4.201094150543213
    9. 'the' → logprob: -4.201094150543213
    10. '   ' → logprob: -4.201094150543213

Token 445: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1698799133300781
    2. 's' → logprob: -1.9198799133300781
    3. ' with' → logprob: -2.294879913330078
    4. 'with' → logprob: -2.419879913330078
    5. ' =' → logprob: -2.544879913330078
    6. '()' → logprob: -2.669879913330078
    7. '(lambda' → logprob: -2.794879913330078
    8. '(
' → logprob: -3.294879913330078
    9. ' (' → logprob: -3.794879913330078
    10. 'def' → logprob: -4.169879913330078

Token 446: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.28760120272636414
    2. 'with' → logprob: -2.6626012325286865
    3. ' using' → logprob: -2.7876012325286865
    4. ' for' → logprob: -3.1626012325286865
    5. ' by' → logprob: -4.412600994110107
    6. 'for' → logprob: -4.537600994110107
    7. '       ' → logprob: -4.537600994110107
    8. ' over' → logprob: -4.787600994110107
    9. ' at' → logprob: -4.912600994110107
    10. 'using' → logprob: -5.162600994110107

Token 447: ' exactly' (ID: 9707)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.2768915593624115
    2. 'a' → logprob: -2.6518914699554443
    3. ' different' → logprob: -2.7768914699554443
    4. 'the' → logprob: -4.276891708374023
    5. 'binary' → logprob: -4.276891708374023
    6. 'two' → logprob: -4.401891708374023
    7. 'pen' → logprob: -4.526891708374023
    8. 'param' → logprob: -4.901891708374023
    9. 'def' → logprob: -5.026891708374023
    10. ' penalties' → logprob: -5.151891708374023

Token 448: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3337689936161041
    2. ' k' → logprob: -2.2087690830230713
    3. 'different' → logprob: -2.8337690830230713
    4. 'company' → logprob: -3.7087690830230713
    5. ' different' → logprob: -3.8337690830230713
    6. ' company' → logprob: -3.9587690830230713
    7. 'cost' → logprob: -4.208768844604492
    8. '0' → logprob: -4.583768844604492
    9. ' edges' → logprob: -5.583768844604492
    10. 'a' → logprob: -6.083768844604492

Token 449: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.19988961517810822
    2. ' company' → logprob: -1.9498896598815918
    3. 'edges' → logprob: -3.824889659881592
    4. 'company' → logprob: -4.699889659881592
    5. ' A' → logprob: -5.699889659881592
    6. 'A' → logprob: -6.199889659881592
    7. '_A' → logprob: -7.824889659881592
    8. ' selected' → logprob: -7.949889659881592
    9. '_edges' → logprob: -8.324889183044434
    10. '```' → logprob: -8.574889183044434

Token 450: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5465343594551086
    2. 'from' → logprob: -1.4215342998504639
    3. ' from' → logprob: -2.296534299850464
    4. ' with' → logprob: -3.921534299850464
    5. ' of' → logprob: -3.921534299850464
    6. ' that' → logprob: -4.296534538269043
    7. 'with' → logprob: -5.671534538269043
    8. '           ' → logprob: -5.671534538269043
    9. 'def' → logprob: -5.921534538269043
    10. ' using' → logprob: -5.921534538269043

Token 451: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.7110921144485474
    2. 'company' → logprob: -0.9610921144485474
    3. 'A' → logprob: -2.461091995239258
    4. ' A' → logprob: -3.211091995239258
    5. 'Company' → logprob: -7.711091995239258
    6. ' Company' → logprob: -10.461091995239258
    7. 'the' → logprob: -10.461091995239258
    8. ''' → logprob: -10.586091995239258
    9. '```' → logprob: -10.711091995239258
    10. ' the' → logprob: -11.086091995239258

Token 452: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04885270446538925
    2. ' A' → logprob: -3.0488526821136475
    3. '_A' → logprob: -8.923852920532227
    4. 'B' → logprob: -9.548852920532227
    5. ''A' → logprob: -11.048852920532227
    6. ' '' → logprob: -11.298852920532227
    7. ''' → logprob: -12.048852920532227
    8. ' B' → logprob: -12.048852920532227
    9. 's' → logprob: -12.548852920532227
    10. ' ' → logprob: -12.798852920532227

Token 453: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1715964823961258
    2. ',' → logprob: -2.4215965270996094
    3. ':' → logprob: -3.2965965270996094
    4. '.' → logprob: -3.7965965270996094
    5. ' and' → logprob: -5.671596527099609
    6. 'def' → logprob: -6.171596527099609
    7. '
' → logprob: -7.421596527099609
    8. '<|end|>' → logprob: -7.921596527099609
    9. '        
' → logprob: -8.04659652709961
    10. '   ' → logprob: -8.17159652709961

Token 454: ' param' (ID: 3802)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.2833654582500458
    2. 'def' → logprob: -1.7833654880523682
    3. ' binary' → logprob: -3.033365488052368
    4. 'using' → logprob: -4.283365249633789
    5. 'adjust' → logprob: -5.158365249633789
    6. ' adjusting' → logprob: -5.908365249633789
    7. 'perform' → logprob: -6.033365249633789
    8. 'adding' → logprob: -6.658365249633789
    9. 'implement' → logprob: -7.408365249633789
    10. '#' → logprob: -7.783365249633789

Token 455: 'etric' (ID: 33622)
  Prédit: 'etric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etric' → logprob: -0.00033081689616665244
    2. 'etr' → logprob: -8.625330924987793
    3. 'etrize' → logprob: -9.875330924987793
    4. '_search' → logprob: -10.250330924987793
    5. '```' → logprob: -10.750330924987793
    6. 'eter' → logprob: -11.625330924987793
    7. 'search' → logprob: -12.000330924987793
    8. '\' → logprob: -12.250330924987793
    9. '_' → logprob: -12.750330924987793
    10. '=' → logprob: -13.125330924987793

Token 456: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.04944310337305069
    2. ' search' → logprob: -3.049443006515503
    3. '_search' → logprob: -7.424443244934082
    4. ' searching' → logprob: -8.299443244934082
    5. '_' → logprob: -12.674443244934082
    6. 'binary' → logprob: -13.549443244934082
    7. 's' → logprob: -13.799443244934082
    8. '-search' → logprob: -14.299443244934082
    9. ' binary' → logprob: -14.924443244934082
    10. 'Search' → logprob: -15.174443244934082

Token 457: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11799948662519455
    2. ',' → logprob: -2.61799955368042
    3. '.' → logprob: -3.99299955368042
    4. ' and' → logprob: -5.36799955368042
    5. ':' → logprob: -5.61799955368042
    6. '#' → logprob: -5.86799955368042
    7. '<|end|>' → logprob: -6.24299955368042
    8. ' with' → logprob: -6.74299955368042
    9. 'def' → logprob: -7.36799955368042
    10. '        
' → logprob: -7.49299955368042

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04743196815252304
    2. '        
' → logprob: -3.6724319458007812
    3. '
' → logprob: -3.9224319458007812
    4. 'def' → logprob: -7.672431945800781
    5. '        ' → logprob: -8.672431945800781
    6. '    
' → logprob: -9.297431945800781
    7. '        

' → logprob: -9.547431945800781
    8. '```' → logprob: -9.797431945800781
    9. 'import' → logprob: -10.547431945800781
    10. '#' → logprob: -10.547431945800781

Token 459: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046891577541828156
    2. '
' → logprob: -3.296891689300537
    3. '        
' → logprob: -4.796891689300537
    4. 'def' → logprob: -8.546891212463379
    5. '    
' → logprob: -9.671891212463379
    6. 'import' → logprob: -9.921891212463379
    7. '   ' → logprob: -9.921891212463379
    8. '#' (adapté à ' #') → logprob: -10.046891212463379
    9. '```' → logprob: -10.296891212463379
    10. ' 
' → logprob: -10.421891212463379

Token 460: ' Define' (ID: 38966)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4911379814147949
    2. 'def' → logprob: -1.866137981414795
    3. 'low' → logprob: -1.991137981414795
    4. '#' → logprob: -3.741137981414795
    5. ' low' → logprob: -3.866137981414795
    6. 'left' → logprob: -4.116137981414795
    7. ' left' → logprob: -4.866137981414795
    8. ' lo' → logprob: -4.991137981414795
    9. 'lo' → logprob: -5.366137981414795
    10. ' def' → logprob: -5.491137981414795

Token 461: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5680743455886841
    2. 'lambda' → logprob: -1.568074345588684
    3. ' a' → logprob: -3.0680742263793945
    4. ' def' → logprob: -3.5680742263793945
    5. 'a' → logprob: -3.5680742263793945
    6. '   ' → logprob: -3.6930742263793945
    7. 'delta' → logprob: -3.9430742263793945
    8. 'low' → logprob: -4.0680742263793945
    9. ' lambda' → logprob: -4.0680742263793945
    10. 'l' → logprob: -4.8180742263793945

Token 462: ' cost' (ID: 3097)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39671310782432556
    2. 'low' → logprob: -2.2717130184173584
    3. 'lambda' → logprob: -2.2717130184173584
    4. 'pen' → logprob: -3.0217130184173584
    5. 'function' → logprob: -4.0217132568359375
    6. 'left' → logprob: -4.3967132568359375
    7. 'cost' → logprob: -4.6467132568359375
    8. ' function' → logprob: -5.2717132568359375
    9. 'lo' → logprob: -5.2717132568359375
    10. 'mid' → logprob: -5.5217132568359375

Token 463: ' function' (ID: 1114)
  Prédit: ' function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -1.4443107843399048
    2. '_modifier' → logprob: -1.5693107843399048
    3. 'def' → logprob: -2.3193106651306152
    4. 'function' → logprob: -2.9443106651306152
    5. 'modifier' → logprob: -2.9443106651306152
    6. '_pen' → logprob: -3.0693106651306152
    7. ' penalty' → logprob: -3.3193106651306152
    8. ' modifier' → logprob: -3.3193106651306152
    9. '=lambda' → logprob: -3.4443106651306152
    10. '_function' → logprob: -3.5693106651306152

Token 464: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7965005040168762
    2. '=lambda' → logprob: -1.5465004444122314
    3. '   ' → logprob: -2.2965004444122314
    4. ' =' → logprob: -2.7965004444122314
    5. '       ' → logprob: -3.0465004444122314
    6. '(lambda' → logprob: -3.1715004444122314
    7. ' def' → logprob: -3.5465004444122314
    8. '=' → logprob: -4.1715006828308105
    9. '(' → logprob: -4.9215006828308105
    10. '(self' → logprob: -5.1715006828308105

Token 465: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9458791613578796
    2. ' def' → logprob: -1.1958792209625244
    3. 'def' → logprob: -2.8208792209625244
    4. ')' → logprob: -3.3208792209625244
    5. '        ' → logprob: -3.3208792209625244
    6. '<|end|>' → logprob: -3.5708792209625244
    7. '   ' → logprob: -3.9458792209625244
    8. '           ' → logprob: -3.9458792209625244
    9. ' (' → logprob: -4.070878982543945
    10. ' ' → logprob: -4.070878982543945

Token 466: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4250054359436035
    2. '=lambda' → logprob: -1.6750054359436035
    3. '=' → logprob: -1.9250054359436035
    4. ' +' → logprob: -5.3000054359436035
    5. 's' → logprob: -7.0500054359436035
    6. ' -' → logprob: -7.1750054359436035
    7. '(lambda' → logprob: -7.1750054359436035
    8. '   ' → logprob: -7.5500054359436035
    9. '_' → logprob: -7.5500054359436035
    10. '(e' → logprob: -7.8000054359436035

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07750581204891205
    2. '=lambda' → logprob: -2.8275058269500732
    3. '=' → logprob: -4.327505588531494
    4. '(e' → logprob: -7.202505588531494
    5. 's' → logprob: -7.327505588531494
    6. '(lambda' → logprob: -8.077506065368652
    7. ' +' → logprob: -8.827506065368652
    8. '   ' → logprob: -10.077506065368652
    9. '       ' → logprob: -10.077506065368652
    10. '=e' → logprob: -10.202506065368652

Token 468: ' cost' (ID: 3097)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7139437794685364
    2. ' e' → logprob: -1.8389437198638916
    3. 'cost' → logprob: -1.9639437198638916
    4. ' cost' → logprob: -2.0889437198638916
    5. 'edge' → logprob: -3.7139437198638916
    6. ' real' → logprob: -4.213943958282471
    7. ' edge' → logprob: -4.213943958282471
    8. ' original' → logprob: -4.213943958282471
    9. 'real' → logprob: -4.463943958282471
    10. 'original' → logprob: -5.088943958282471

Token 469: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14813999831676483
    2. '+' → logprob: -2.0231399536132812
    3. ' -' → logprob: -5.273139953613281
    4. '-' → logprob: -8.398139953613281
    5. ' if' → logprob: -9.398139953613281
    6. '   ' → logprob: -12.773139953613281
    7. ' ' → logprob: -13.023139953613281
    8. ' ' → logprob: -13.898139953613281
    9. 'if' → logprob: -14.148139953613281
    10. '  ' → logprob: -14.398139953613281

Token 470: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.794711172580719
    2. 'lambda' → logprob: -1.0447111129760742
    3. 'mid' → logprob: -2.669711112976074
    4. ' mid' → logprob: -2.794711112976074
    5. ' penalty' → logprob: -3.294711112976074
    6. 'pen' → logprob: -4.544711112976074
    7. ' x' → logprob: -5.169711112976074
    8. 'x' → logprob: -6.044711112976074
    9. 'param' → logprob: -6.044711112976074
    10. ' t' → logprob: -6.794711112976074

Token 471: ' if' (ID: 538)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0019599171355366707
    2. '<|end|>' → logprob: -6.376959800720215
    3. '*' → logprob: -8.751959800720215
    4. '<|end|>' → logprob: -10.126959800720215
    5. '*A' → logprob: -10.751959800720215
    6. '*(' → logprob: -11.376959800720215
    7. ' if' → logprob: -11.376959800720215
    8. ')' → logprob: -12.501959800720215
    9. '   ' → logprob: -12.626959800720215
    10. '_A' → logprob: -13.126959800720215

Token 472: ' A' (ID: 355)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.8875261545181274
    2. ' edge' → logprob: -1.1375261545181274
    3. ' company' → logprob: -1.6375261545181274
    4. 'e' → logprob: -3.012526035308838
    5. 'edge' → logprob: -4.262526035308838
    6. 'company' → logprob: -5.137526035308838
    7. ' (' → logprob: -6.012526035308838
    8. '(e' → logprob: -6.887526035308838
    9. '(edge' → logprob: -8.137526512145996
    10. '(company' → logprob: -9.012526512145996

Token 473: ' else' (ID: 1203)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08628737181425095
    2. '==' → logprob: -2.711287260055542
    3. ' else' → logprob: -4.461287498474121
    4. '=='' → logprob: -6.961287498474121
    5. ' and' → logprob: -7.086287498474121
    6. ' edges' → logprob: -7.086287498474121
    7. 'edges' → logprob: -8.086287498474121
    8. '<|end|>' → logprob: -8.211287498474121
    9. 'else' → logprob: -8.461287498474121
    10. '   ' → logprob: -8.711287498474121

Token 474: ' cost' (ID: 3097)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5422543883323669
    2. ' ' → logprob: -0.9172543883323669
    3. ' -' → logprob: -4.042254447937012
    4. '-' → logprob: -7.542254447937012
    5. ' cost' → logprob: -8.042254447937012
    6. 'cost' → logprob: -9.167254447937012
    7. '   ' → logprob: -9.792254447937012
    8. ' (' → logprob: -9.792254447937012
    9. ' (-' → logprob: -10.042254447937012
    10. ' lambda' → logprob: -10.042254447937012

Token 475: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3397288918495178
    2. '
' → logprob: -1.464728832244873
    3. '<|end|>' → logprob: -3.589728832244873
    4. ',' → logprob: -4.714728832244873
    5. '<|end|>' → logprob: -5.464728832244873
    6. '        
' → logprob: -5.714728832244873
    7. '   ' → logprob: -5.964728832244873
    8. ')' → logprob: -6.089728832244873
    9. '\n' → logprob: -6.714728832244873
    10. 'def' → logprob: -7.214728832244873

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24661396443843842
    2. '
' → logprob: -1.6216139793395996
    3. '        
' → logprob: -4.9966139793396
    4. ',' → logprob: -5.8716139793396
    5. '<|end|>' → logprob: -6.1216139793396
    6. 'def' → logprob: -6.2466139793396
    7. '\n' → logprob: -6.4966139793396
    8. ',
' → logprob: -6.8716139793396
    9. '#' → logprob: -7.4966139793396
    10. '
' → logprob: -7.8716139793396

Token 477: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04939885064959526
    2. '
' → logprob: -3.549398899078369
    3. '#' (adapté à ' #') → logprob: -5.174398899078369
    4. '        
' → logprob: -5.924398899078369
    5. ',' → logprob: -6.174398899078369
    6. '\n' → logprob: -6.299398899078369
    7. '<|end|>' → logprob: -6.924398899078369
    8. 'def' → logprob: -7.174398899078369
    9. ')' → logprob: -7.299398899078369
    10. '   ' → logprob: -7.299398899078369

Token 478: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44573792815208435
    2. '
' → logprob: -1.0707379579544067
    3. '        
' → logprob: -5.195737838745117
    4. ',' → logprob: -6.320737838745117
    5. '<|end|>' → logprob: -6.320737838745117
    6. '\n' → logprob: -6.820737838745117
    7. '

' → logprob: -6.945737838745117
    8. '#' → logprob: -7.070737838745117
    9. 'def' → logprob: -7.070737838745117
    10. '```' → logprob: -7.320737838745117

Token 479: ' a' (ID: 261)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6967517137527466
    2. ' edge' → logprob: -1.9467517137527466
    3. ' each' → logprob: -2.071751594543457
    4. 'lambda' → logprob: -2.571751594543457
    5. 'each' → logprob: -3.696751594543457
    6. ' e' → logprob: -3.946751594543457
    7. ' edges' → logprob: -4.321751594543457
    8. ' company' → logprob: -4.446751594543457
    9. ' _' → logprob: -4.821751594543457
    10. ' the' → logprob: -4.821751594543457

Token 480: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.16071076691150665
    2. 'given' → logprob: -2.4107108116149902
    3. 'll' → logprob: -4.03571081161499
    4. 'lambda' → logprob: -5.03571081161499
    5. ' range' → logprob: -5.16071081161499
    6. ' lambda' → logprob: -5.41071081161499
    7. 'def' → logprob: -5.66071081161499
    8. 'while' → logprob: -5.91071081161499
    9. '#' → logprob: -6.41071081161499
    10. '_given' → logprob: -6.78571081161499

Token 481: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.715775728225708
    2. 'lambda' → logprob: -0.715775728225708
    3. ' value' → logprob: -4.090775489807129
    4. 'value' → logprob: -5.465775489807129
    5. ' lamb' → logprob: -8.090775489807129
    6. '_lambda' → logprob: -8.340775489807129
    7. '   ' → logprob: -9.340775489807129
    8. ' edge' → logprob: -9.340775489807129
    9. ' l' → logprob: -9.465775489807129
    10. '=lambda' → logprob: -9.590775489807129

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.574151873588562
    2. ':' → logprob: -1.074151873588562
    3. '):' → logprob: -2.9491519927978516
    4. ')' → logprob: -3.8241519927978516
    5. '       ' → logprob: -5.324151992797852
    6. '),' → logprob: -5.824151992797852
    7. '=' → logprob: -6.074151992797852
    8. ' ,' → logprob: -6.074151992797852
    9. '):
' → logprob: -6.199151992797852
    10. '<|end|>' → logprob: -7.324151992797852

Token 483: ' build' (ID: 3024)
  Prédit: ' mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mst' → logprob: -0.6084558963775635
    2. 'mst' → logprob: -0.8584558963775635
    3. '       ' → logprob: -3.8584558963775635
    4. ' we' → logprob: -5.733455657958984
    5. ' edges' → logprob: -5.983455657958984
    6. 'we' → logprob: -7.108455657958984
    7. 'm' → logprob: -7.483455657958984
    8. ' the' → logprob: -7.608455657958984
    9. 'def' → logprob: -7.858455657958984
    10. 'edges' → logprob: -7.983455657958984

Token 484: ' MST' (ID: 123058)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7861307263374329
    2. 'a' → logprob: -2.036130666732788
    3. ' the' → logprob: -2.036130666732788
    4. ' all' → logprob: -2.411130666732788
    5. 'the' → logprob: -3.161130666732788
    6. ' an' → logprob: -3.161130666732788
    7. ' edges' → logprob: -3.286130666732788
    8. ' and' → logprob: -4.036130905151367
    9. '       ' → logprob: -4.411130905151367
    10. 'all' → logprob: -4.911130905151367

Token 485: ' minimizing' (ID: 111215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0599764920771122
    2. ',' → logprob: -3.559976577758789
    3. '
' → logprob: -4.934976577758789
    4. 'def' → logprob: -5.434976577758789
    5. ':' → logprob: -5.559976577758789
    6. ' and' → logprob: -6.434976577758789
    7. '<|end|>' → logprob: -6.434976577758789
    8. '.' → logprob: -6.434976577758789
    9. '#' → logprob: -6.559976577758789
    10. ':
' → logprob: -6.559976577758789

Token 486: ' sum' (ID: 4215)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5545742511749268
    2. ' cost' → logprob: -1.1795742511749268
    3. 'modified' → logprob: -3.6795742511749268
    4. ' the' → logprob: -4.054574012756348
    5. ' total' → logprob: -4.179574012756348
    6. 'the' → logprob: -4.304574012756348
    7. '(cost' → logprob: -4.304574012756348
    8. 'total' → logprob: -5.054574012756348
    9. ' modified' → logprob: -5.054574012756348
    10. ' adjusted' → logprob: -5.179574012756348

Token 487: ' cost' (ID: 3097)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6329528093338013
    2. '+' → logprob: -1.6329528093338013
    3. '       ' → logprob: -2.0079526901245117
    4. '(e' → logprob: -3.0079526901245117
    5. ' of' → logprob: -3.6329526901245117
    6. ''' → logprob: -3.7579526901245117
    7. '(' → logprob: -4.632952690124512
    8. ' (' → logprob: -5.132952690124512
    9. '   ' → logprob: -5.382952690124512
    10. '(cost' → logprob: -6.257952690124512

Token 488: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5765578150749207
    2. ' +' → logprob: -1.2015578746795654
    3. ''' → logprob: -2.5765578746795654
    4. '+' → logprob: -4.201557636260986
    5. '_' → logprob: -4.576557636260986
    6. 'def' → logprob: -4.951557636260986
    7. 's' → logprob: -5.201557636260986
    8. ')' → logprob: -5.326557636260986
    9. '   ' → logprob: -5.326557636260986
    10. '')' → logprob: -5.451557636260986

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007587933447211981
    2. ',' → logprob: -6.382587909698486
    3. '           ' → logprob: -6.507587909698486
    4. ')' → logprob: -7.007587909698486
    5. '
' → logprob: -7.132587909698486
    6. '        
' → logprob: -7.257587909698486
    7. '        ' → logprob: -7.757587909698486
    8. ':' → logprob: -7.882587909698486
    9. '   ' → logprob: -8.882588386535645
    10. '.' → logprob: -9.132588386535645

Token 490: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021479368209838867
    2. '
' → logprob: -4.146479606628418
    3. '        
' → logprob: -5.771479606628418
    4. '\n' → logprob: -7.771479606628418
    5. '```' → logprob: -7.896479606628418
    6. '#' (adapté à ' #') → logprob: -8.146479606628418
    7. ',' → logprob: -8.521479606628418
    8. '\' → logprob: -9.021479606628418
    9. '<|end|>' → logprob: -9.021479606628418
    10. '  
' → logprob: -9.396479606628418

Token 491: ' Count' (ID: 6789)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014516273513436317
    2. '
' → logprob: -4.639516353607178
    3. '        
' → logprob: -5.764516353607178
    4. ',' → logprob: -8.38951587677002
    5. '           ' → logprob: -8.63951587677002
    6. '   ' → logprob: -8.63951587677002
    7. '    
' → logprob: -8.63951587677002
    8. '\n' → logprob: -9.01451587677002
    9. '<|end|>' → logprob: -9.26451587677002
    10. '#' → logprob: -9.38951587677002

Token 492: ' how' (ID: 1495)
  Prédit: ' how'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.19048750400543213
    2. ' the' → logprob: -2.1904873847961426
    3. ' of' → logprob: -3.4404873847961426
    4. ' number' → logprob: -4.440487384796143
    5. 'the' → logprob: -5.440487384796143
    6. 'A' → logprob: -5.565487384796143
    7. 'how' → logprob: -5.815487384796143
    8. ' company' → logprob: -6.065487384796143
    9. ' edges' → logprob: -6.315487384796143
    10. 'number' → logprob: -6.815487384796143

Token 493: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.3870793581008911
    2. 'many' → logprob: -1.1370793581008911
    3. '_many' → logprob: -9.012079238891602
    4. '       ' → logprob: -10.512079238891602
    5. ' often' → logprob: -10.887079238891602
    6. 'Many' → logprob: -11.137079238891602
    7. '   ' → logprob: -11.262079238891602
    8. 'often' → logprob: -12.512079238891602
    9. '        ' → logprob: -13.012079238891602
    10. '_' → logprob: -13.387079238891602

Token 494: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4250416159629822
    2. 'A' → logprob: -2.050041675567627
    3. 'edges' → logprob: -2.175041675567627
    4. ' company' → logprob: -3.175041675567627
    5. ' A' → logprob: -3.300041675567627
    6. 'company' → logprob: -4.050041675567627
    7. ' of' → logprob: -6.050041675567627
    8. '_A' → logprob: -6.425041675567627
    9. '       ' → logprob: -6.800041675567627
    10. '_edges' → logprob: -7.175041675567627

Token 495: ' of' (ID: 328)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.4919182360172272
    2. ' of' → logprob: -1.6169182062149048
    3. 'from' → logprob: -1.8669182062149048
    4. ' in' → logprob: -4.116918087005615
    5. ' with' → logprob: -5.116918087005615
    6. 'of' → logprob: -5.616918087005615
    7. '_A' → logprob: -5.616918087005615
    8. ' chosen' → logprob: -6.241918087005615
    9. ' used' → logprob: -7.116918087005615
    10. 'chosen' → logprob: -7.366918087005615

Token 496: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.32496732473373413
    2. 'company' → logprob: -1.324967384338379
    3. 'A' → logprob: -4.574967384338379
    4. ' A' → logprob: -6.824967384338379
    5. ' type' → logprob: -9.199967384338379
    6. 'Company' → logprob: -10.074967384338379
    7. 'type' → logprob: -10.199967384338379
    8. '```' → logprob: -11.074967384338379
    9. '(company' → logprob: -11.574967384338379
    10. 'from' → logprob: -11.574967384338379

Token 497: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25322550535202026
    2. ' A' → logprob: -1.503225564956665
    3. '_A' → logprob: -6.753225326538086
    4. ' ' → logprob: -10.878225326538086
    5. 'def' → logprob: -11.378225326538086
    6. ''A' → logprob: -11.378225326538086
    7. '   ' → logprob: -11.503225326538086
    8. ' '' → logprob: -11.503225326538086
    9. ''' → logprob: -11.878225326538086
    10. ' ==' → logprob: -12.003225326538086

Token 498: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4156378209590912
    2. ',' → logprob: -2.415637731552124
    3. '   ' → logprob: -3.290637731552124
    4. ' in' → logprob: -3.665637731552124
    5. '.' → logprob: -3.915637731552124
    6. ' are' → logprob: -4.040637969970703
    7. ':' → logprob: -4.040637969970703
    8. ')' → logprob: -4.290637969970703
    9. '_' → logprob: -4.290637969970703
    10. 'def' → logprob: -4.290637969970703

Token 499: ' MST' (ID: 123058)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3293910324573517
    2. 'the' → logprob: -1.4543910026550293
    3. ' MST' → logprob: -3.3293910026550293
    4. 'cluded' → logprob: -5.204391002655029
    5. ' mst' → logprob: -6.079391002655029
    6. 'mst' → logprob: -6.704391002655029
    7. ' that' → logprob: -7.329391002655029
    8. 'M' → logprob: -7.454391002655029
    9. 'that' → logprob: -8.829391479492188
    10. ' result' → logprob: -8.829391479492188

Token 500: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5275573134422302
    2. '       ' → logprob: -1.027557373046875
    3. 'def' → logprob: -4.027557373046875
    4. ':' → logprob: -4.902557373046875
    5. '        
' → logprob: -4.902557373046875
    6. ',' → logprob: -5.027557373046875
    7. ':
' → logprob: -5.902557373046875
    8. '
' → logprob: -6.277557373046875
    9. '#' → logprob: -6.527557373046875
    10. '\n' → logprob: -6.902557373046875

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023105483502149582
    2. '
' → logprob: -4.273105621337891
    3. '        
' → logprob: -5.648105621337891
    4. '#' → logprob: -6.023105621337891
    5. ',' → logprob: -6.523105621337891
    6. 'def' → logprob: -8.02310562133789
    7. '           ' → logprob: -8.27310562133789
    8. '<|end|>' → logprob: -8.89810562133789
    9. '#
' → logprob: -9.14810562133789
    10. ' and' → logprob: -9.27310562133789

Token 502: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031267985701560974
    2. '
' → logprob: -4.156268119812012
    3. '        
' → logprob: -5.031268119812012
    4. '#' (adapté à ' #') → logprob: -5.281268119812012
    5. '\n' → logprob: -7.281268119812012
    6. ',' → logprob: -7.656268119812012
    7. '   ' → logprob: -8.281268119812012
    8. '\' → logprob: -8.406268119812012
    9. '  
' → logprob: -8.406268119812012
    10. '    
' → logprob: -8.406268119812012

Token 503: ' By' (ID: 4534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09138251096010208
    2. '
' → logprob: -2.5913825035095215
    3. '        
' → logprob: -4.7163825035095215
    4. 'def' → logprob: -6.7163825035095215
    5. '   ' → logprob: -7.4663825035095215
    6. '    
' → logprob: -7.9663825035095215
    7. '  
' → logprob: -8.09138298034668
    8. ' 
' → logprob: -8.46638298034668
    9. '#' → logprob: -8.96638298034668
    10. '        ' → logprob: -9.21638298034668

Token 504: ' adjusting' (ID: 67396)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.25115248560905457
    2. ' adjusting' → logprob: -1.751152515411377
    3. 'binary' → logprob: -3.126152515411377
    4. ' binary' → logprob: -6.751152515411377
    5. 'checking' → logprob: -6.751152515411377
    6. 'changing' → logprob: -6.876152515411377
    7. 'moving' → logprob: -8.376152038574219
    8. 'in' → logprob: -8.876152038574219
    9. 'vary' → logprob: -8.876152038574219
    10. 'b' → logprob: -9.126152038574219

Token 505: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.011151456274092197
    2. 'lambda' → logprob: -4.511151313781738
    3. ' the' → logprob: -10.136151313781738
    4. ' lamb' → logprob: -10.261151313781738
    5. '(lambda' → logprob: -10.886151313781738
    6. '_lambda' → logprob: -12.261151313781738
    7. '=lambda' → logprob: -13.386151313781738
    8. ' λ' → logprob: -13.761151313781738
    9. ' self' → logprob: -14.261151313781738
    10. '    ' → logprob: -14.386151313781738

Token 506: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3913499712944031
    2. ':' → logprob: -1.6413500308990479
    3. ',' → logprob: -2.266350030899048
    4. '   ' → logprob: -5.266349792480469
    5. ' =' → logprob: -5.391349792480469
    6. '        
' → logprob: -5.516349792480469
    7. ':
' → logprob: -5.891349792480469
    8. '=' → logprob: -6.016349792480469
    9. '        ' → logprob: -6.891349792480469
    10. '):' → logprob: -7.016349792480469

Token 507: ' force' (ID: 9578)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0047406721860170364
    2. 'can' → logprob: -5.3797407150268555
    3. ' ' → logprob: -10.879740715026855
    4. '	can' → logprob: -10.879740715026855
    5. ' try' → logprob: -11.004740715026855
    6. ' find' → logprob: -11.129740715026855
    7. '#' → logprob: -11.379740715026855
    8. '_can' → logprob: -11.504740715026855
    9. ' ' → logprob: -12.254740715026855
    10. ' will' → logprob: -12.379740715026855

Token 508: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.01661921851336956
    2. 'the' → logprob: -4.8916192054748535
    3. ' number' → logprob: -5.0166192054748535
    4. ' exactly' → logprob: -7.0166192054748535
    5. ' edges' → logprob: -8.266619682312012
    6. ' count' → logprob: -8.641619682312012
    7. ' ' → logprob: -8.641619682312012
    8. ' a' → logprob: -9.141619682312012
    9. ' selected' → logprob: -9.391619682312012
    10. ' to' → logprob: -9.766619682312012

Token 509: ' MST' (ID: 123058)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.1171107217669487
    2. ' count' → logprob: -3.1171107292175293
    3. ' next' → logprob: -3.7421107292175293
    4. 'number' → logprob: -4.117110729217529
    5. 'count' → logprob: -4.617110729217529
    6. ' edges' → logprob: -5.367110729217529
    7. ' selected' → logprob: -6.117110729217529
    8. ' MST' → logprob: -6.617110729217529
    9. ' chosen' → logprob: -6.867110729217529
    10. '       ' → logprob: -7.492110729217529

Token 510: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17530235648155212
    2. ' to' → logprob: -2.300302267074585
    3. ' edges' → logprob: -3.425302267074585
    4. '   ' → logprob: -4.175302505493164
    5. '           ' → logprob: -6.050302505493164
    6. '_edges' → logprob: -6.425302505493164
    7. '        ' → logprob: -7.175302505493164
    8. '_' → logprob: -7.175302505493164
    9. ' ' → logprob: -7.175302505493164
    10. 's' → logprob: -7.550302505493164

Token 511: ' have' (ID: 679)
  Prédit: 'include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'include' → logprob: -0.6498299241065979
    2. 'have' → logprob: -1.2748298645019531
    3. 'choose' → logprob: -2.274829864501953
    4. ' have' → logprob: -3.024829864501953
    5. ' include' → logprob: -3.649829864501953
    6. 'select' → logprob: -5.274829864501953
    7. 'increase' → logprob: -5.399829864501953
    8. 'contain' → logprob: -5.649829864501953
    9. ' choose' → logprob: -6.149829864501953
    10. ' select' → logprob: -6.399829864501953

Token 512: ' the' (ID: 290)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.2531580328941345
    2. ' more' → logprob: -2.1281580924987793
    3. 'exact' → logprob: -2.6281580924987793
    4. ' exactly' → logprob: -3.7531580924987793
    5. ' fewer' → logprob: -5.878158092498779
    6. 'the' → logprob: -7.003158092498779
    7. 'f' → logprob: -7.253158092498779
    8. 'k' → logprob: -7.253158092498779
    9. 'a' → logprob: -7.378158092498779
    10. ' k' → logprob: -7.378158092498779

Token 513: ' number' (ID: 2086)
  Prédit: 'desired'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desired' → logprob: -0.9434416890144348
    2. ' number' → logprob: -1.19344162940979
    3. 'number' → logprob: -1.44344162940979
    4. ' desired' → logprob: -3.06844162940979
    5. 'company' → logprob: -5.068441867828369
    6. 'exact' → logprob: -5.693441867828369
    7. 'different' → logprob: -5.818441867828369
    8. 'certain' → logprob: -6.068441867828369
    9. ' company' → logprob: -6.568441867828369
    10. 'specific' → logprob: -6.818441867828369

Token 514: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08019550889730453
    2. 'of' → logprob: -2.955195426940918
    3. '_of' → logprob: -4.205195426940918
    4. '       ' → logprob: -5.705195426940918
    5. ' ' → logprob: -6.330195426940918
    6. '   ' → logprob: -6.955195426940918
    7. '           ' → logprob: -7.205195426940918
    8. '_' → logprob: -7.330195426940918
    9. '    ' → logprob: -8.080195426940918
    10. 'Of' → logprob: -8.205195426940918

Token 515: ' A' (ID: 355)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.40050262212753296
    2. ' A' → logprob: -1.6505026817321777
    3. ' edges' → logprob: -2.5255026817321777
    4. 'A' → logprob: -3.5255026817321777
    5. 'company' → logprob: -3.9005026817321777
    6. 'edges' → logprob: -6.025502681732178
    7. ' ' → logprob: -6.400502681732178
    8. ' chosen' → logprob: -6.525502681732178
    9. ' selected' → logprob: -7.525502681732178
    10. '   ' → logprob: -7.650502681732178

Token 516: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.046169258654117584
    2. '_edges' → logprob: -3.7961692810058594
    3. 'edges' → logprob: -4.046169281005859
    4. ' ' → logprob: -5.671169281005859
    5. '_' → logprob: -7.671169281005859
    6. '   ' → logprob: -8.04616928100586
    7. 'Edges' → logprob: -8.29616928100586
    8. '```' → logprob: -9.54616928100586
    9. '  ' → logprob: -9.79616928100586
    10. 's' → logprob: -9.92116928100586

Token 517: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03228270262479782
    2. '   ' → logprob: -4.907282829284668
    3. '        ' → logprob: -5.657282829284668
    4. ' edges' → logprob: -6.157282829284668
    5. ',' → logprob: -6.282282829284668
    6. ' =' → logprob: -6.407282829284668
    7. '_' → logprob: -6.532282829284668
    8. '    ' → logprob: -6.657282829284668
    9. '        
' → logprob: -6.657282829284668
    10. ')' → logprob: -6.782282829284668

Token 518: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.18848396837711334
    2. 'is' → logprob: -2.938483953475952
    3. ' we' → logprob: -3.438483953475952
    4. 'exact' → logprob: -4.688484191894531
    5. 'matches' → logprob: -4.688484191894531
    6. 's' → logprob: -4.938484191894531
    7. ' is' → logprob: -5.438484191894531
    8. '#' → logprob: -5.563484191894531
    9. 'balances' → logprob: -5.563484191894531
    10. 'increase' → logprob: -5.563484191894531

Token 519: ' want' (ID: 1682)
  Prédit: 'want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'want' → logprob: -0.27694183588027954
    2. ' want' → logprob: -1.6519417762756348
    3. 'need' → logprob: -3.2769417762756348
    4. ' need' → logprob: -5.026941776275635
    5. '#' → logprob: -6.651941776275635
    6. ' can' → logprob: -6.776941776275635
    7. 'can' → logprob: -6.901941776275635
    8. ' desire' → logprob: -7.276941776275635
    9. 'w' → logprob: -7.651941776275635
    10. 'des' → logprob: -8.026942253112793

Token 520: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07100197672843933
    2. '
' → logprob: -3.1960020065307617
    3. '        
' → logprob: -4.321002006530762
    4. ':' → logprob: -4.946002006530762
    5. ',' → logprob: -6.446002006530762
    6. '<|end|>' → logprob: -6.696002006530762
    7. 'def' → logprob: -7.196002006530762
    8. '   ' → logprob: -7.571002006530762
    9. ':
' → logprob: -7.946002006530762
    10. '    
' → logprob: -7.946002006530762

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008395775221288204
    2. '        
' → logprob: -4.883395671844482
    3. '
' → logprob: -7.633395671844482
    4. '        ' → logprob: -8.63339614868164
    5. 'import' → logprob: -10.75839614868164
    6. '        

' → logprob: -11.00839614868164
    7. '```' → logprob: -11.13339614868164
    8. '    
' → logprob: -11.25839614868164
    9. '        
        
' → logprob: -11.75839614868164
    10. '           ' → logprob: -11.88339614868164

Token 522: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01153993234038353
    2. '        
' → logprob: -5.011539936065674
    3. '
' → logprob: -6.011539936065674
    4. 'def' → logprob: -7.011539936065674
    5. '```' → logprob: -7.386539936065674
    6. '    
' → logprob: -8.761539459228516
    7. '   ' → logprob: -8.886539459228516
    8. 'import' → logprob: -9.386539459228516
    9. ' 
' → logprob: -9.511539459228516
    10. '        ' → logprob: -9.761539459228516

Token 523: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5238515138626099
    2. 'low' → logprob: -1.5238515138626099
    3. 'left' → logprob: -2.0238513946533203
    4. 'class' → logprob: -4.02385139465332
    5. 'lo' → logprob: -4.14885139465332
    6. '       ' → logprob: -5.02385139465332
    7. 'l' → logprob: -5.39885139465332
    8. '   ' → logprob: -5.52385139465332
    9. '#' → logprob: -5.77385139465332
    10. 'import' → logprob: -5.89885139465332

Token 524: ' implement' (ID: 6365)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4730039834976196
    2. 'define' → logprob: -1.4730039834976196
    3. 'def' → logprob: -1.5980039834976196
    4. 'implement' → logprob: -2.47300386428833
    5. '       ' → logprob: -2.72300386428833
    6. ' define' → logprob: -2.84800386428833
    7. ' implement' → logprob: -2.97300386428833
    8. '   ' → logprob: -3.97300386428833
    9. 'continue' → logprob: -4.22300386428833
    10. ' import' → logprob: -4.47300386428833

Token 525: ' this' (ID: 495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6616409420967102
    2. ' a' → logprob: -1.1616408824920654
    3. 'def' → logprob: -2.0366408824920654
    4. ' def' → logprob: -3.9116408824920654
    5. ' an' → logprob: -5.2866411209106445
    6. 'a' → logprob: -5.5366411209106445
    7. 'class' → logprob: -6.5366411209106445
    8. 'self' → logprob: -6.5366411209106445
    9. '        ' → logprob: -7.0366411209106445
    10. ' the' → logprob: -7.0366411209106445

Token 526: ' param' (ID: 3802)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3640393912792206
    2. '       ' → logprob: -2.239039421081543
    3. ':' → logprob: -2.364039421081543
    4. '

' → logprob: -2.989039421081543
    5. '        
' → logprob: -3.739039421081543
    6. ':
' → logprob: -4.989039421081543
    7. '
        
' → logprob: -5.114039421081543
    8. 'import' → logprob: -5.239039421081543
    9. '
' → logprob: -5.864039421081543
    10. 'def' → logprob: -6.239039421081543

Token 527: 'etric' (ID: 33622)
  Prédit: 'etric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etric' → logprob: -0.014045154675841331
    2. '       ' → logprob: -4.639045238494873
    3. '   ' → logprob: -6.389045238494873
    4. 'etrize' → logprob: -7.639045238494873
    5. 'eter' → logprob: -8.014044761657715
    6. '      ' → logprob: -8.264044761657715
    7. 'def' → logprob: -8.264044761657715
    8. 'etr' → logprob: -8.264044761657715
    9. '  ' → logprob: -8.514044761657715
    10. '     ' → logprob: -8.514044761657715

Token 528: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -1.126155138015747
    2. ' search' → logprob: -1.251155138015747
    3. '_search' → logprob: -1.251155138015747
    4. 'def' → logprob: -2.501155138015747
    5. ' def' → logprob: -4.126154899597168
    6. '_' → logprob: -6.376154899597168
    7. '       ' → logprob: -6.376154899597168
    8. '   ' → logprob: -6.876154899597168
    9. ' binary' → logprob: -8.876154899597168
    10. ' _' → logprob: -9.126154899597168

Token 529: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4669836163520813
    2. '
' → logprob: -1.5919835567474365
    3. ':' → logprob: -2.7169835567474365
    4. '        
' → logprob: -2.9669835567474365
    5. '

' → logprob: -3.3419835567474365
    6. ':
' → logprob: -5.716983795166016
    7. '        

' → logprob: -6.091983795166016
    8. ',' → logprob: -6.216983795166016
    9. '```' → logprob: -6.341983795166016
    10. '
        
' → logprob: -6.716983795166016

Token 530: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1538233608007431
    2. '
' → logprob: -2.0288233757019043
    3. '        
' → logprob: -4.903823375701904
    4. '

' → logprob: -6.278823375701904
    5. '```' → logprob: -6.903823375701904
    6. 'def' → logprob: -8.278822898864746
    7. '        

' → logprob: -8.903822898864746
    8. 'import' → logprob: -9.278822898864746
    9. '    
' → logprob: -9.653822898864746
    10. '
' → logprob: -10.028822898864746

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009437420405447483
    2. '        
' → logprob: -4.884437561035156
    3. '
' → logprob: -7.384437561035156
    4. '```' → logprob: -7.509437561035156
    5. 'def' → logprob: -8.009437561035156
    6. 'import' → logprob: -8.759437561035156
    7. '    
' → logprob: -9.759437561035156
    8. '        

' → logprob: -10.884437561035156
    9. '        ' → logprob: -11.384437561035156
    10. ' 
' → logprob: -11.509437561035156

Token 532: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06419502198696136
    2. '        
' → logprob: -3.689194917678833
    3. '
' → logprob: -3.939194917678833
    4. 'def' → logprob: -4.939195156097412
    5. 'import' → logprob: -5.689195156097412
    6. '```' → logprob: -6.064195156097412
    7. '    
' → logprob: -6.689195156097412
    8. ' 
' → logprob: -6.814195156097412
    9. 'n' → logprob: -7.439195156097412
    10. '  
' → logprob: -7.939195156097412

Token 533: ' Worst' (ID: 133417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020244387909770012
    2. 'def' → logprob: -4.770244598388672
    3. '        
' → logprob: -5.145244598388672
    4. '
' → logprob: -6.395244598388672
    5. 'import' → logprob: -6.395244598388672
    6. '```' → logprob: -7.395244598388672
    7. 'class' → logprob: -7.520244598388672
    8. '    
' → logprob: -8.145244598388672
    9. ' def' → logprob: -8.145244598388672
    10. 'n' → logprob: -8.645244598388672

Token 534: ' case' (ID: 1890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02123420685529709
    2. '   ' → logprob: -5.021234035491943
    3. 'def' → logprob: -5.146234035491943
    4. 'case' → logprob: -5.646234035491943
    5. '        ' → logprob: -7.271234035491943
    6. ':' → logprob: -7.271234035491943
    7. ' =' → logprob: -7.521234035491943
    8. '_' → logprob: -7.646234035491943
    9. '        
' → logprob: -7.896234035491943
    10. '=' → logprob: -8.521234512329102

Token 535: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1399041712284088
    2. '
' → logprob: -3.264904260635376
    3. ':' → logprob: -3.639904260635376
    4. ',' → logprob: -3.639904260635376
    5. 'def' → logprob: -4.264904022216797
    6. '        
' → logprob: -4.764904022216797
    7. ':
' → logprob: -6.139904022216797
    8. ',
' → logprob: -6.264904022216797
    9. '   ' → logprob: -6.389904022216797
    10. '        ' → logprob: -6.764904022216797

Token 536: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7124224901199341
    2. '       ' → logprob: -1.087422490119934
    3. ' take' → logprob: -2.9624223709106445
    4. ' continue' → logprob: -3.2124223709106445
    5. '   ' → logprob: -3.8374223709106445
    6. 'continue' → logprob: -4.3374223709106445
    7. ' not' → logprob: -4.7124223709106445
    8. 'be' → logprob: -4.9624223709106445
    9. '        ' → logprob: -4.9624223709106445
    10. '    ' → logprob: -5.2124223709106445

Token 537: ' feasible' (ID: 58866)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -1.3251205682754517
    2. 'binary' → logprob: -2.075120449066162
    3. 'import' → logprob: -2.200120449066162
    4. ' O' → logprob: -2.325120449066162
    5. 'O' → logprob: -2.325120449066162
    6. '       ' → logprob: -2.450120449066162
    7. ' acceptable' → logprob: -3.200120449066162
    8. ' around' → logprob: -3.325120449066162
    9. '   ' → logprob: -3.575120449066162
    10. ' to' → logprob: -4.575120449066162

Token 538: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6066890358924866
    2. '       ' → logprob: -0.9816890358924866
    3. '        
' → logprob: -2.981688976287842
    4. '

' → logprob: -3.856688976287842
    5. '```' → logprob: -6.481688976287842
    6. 'def' → logprob: -6.981688976287842
    7. '        

' → logprob: -6.981688976287842
    8. '
' → logprob: -6.981688976287842
    9. 'import' → logprob: -7.231688976287842
    10. '<|end|>' → logprob: -7.481688976287842

Token 539: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2642632722854614
    2. ' n' → logprob: -1.3892632722854614
    3. ' the' → logprob: -1.6392632722854614
    4. 'the' → logprob: -2.139263153076172
    5. ' self' → logprob: -3.389263153076172
    6. ' this' → logprob: -3.514263153076172
    7. '   ' → logprob: -3.889263153076172
    8. ' a' → logprob: -4.139263153076172
    9. 'self' → logprob: -4.389263153076172
    10. 'a' → logprob: -4.764263153076172

Token 540: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0244583897292614
    2. '        
' → logprob: -4.774458408355713
    3. '        ' → logprob: -5.274458408355713
    4. '
' → logprob: -6.024458408355713
    5. ' =' → logprob: -7.024458408355713
    6. 'import' → logprob: -7.024458408355713
    7. '        

' → logprob: -7.024458408355713
    8. 'def' → logprob: -7.024458408355713
    9. '   ' → logprob: -7.649458408355713
    10. ',' → logprob: -7.774458408355713

Token 541: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.15335725247859955
    2. '       ' → logprob: -2.0283572673797607
    3. ' ' → logprob: -5.778357028961182
    4. 'self' → logprob: -6.153357028961182
    5. '   ' → logprob: -6.278357028961182
    6. '           ' → logprob: -7.153357028961182
    7. '199' → logprob: -7.903357028961182
    8. '100' → logprob: -8.02835750579834
    9. '               ' → logprob: -8.02835750579834
    10. '1' → logprob: -8.15335750579834

Token 542: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5642979741096497
    2. '
' → logprob: -1.0642979145050049
    3. '        
' → logprob: -2.689297914505005
    4. '

' → logprob: -4.689298152923584
    5. '```' → logprob: -6.064298152923584
    6. '        

' → logprob: -6.189298152923584
    7. 'def' → logprob: -6.314298152923584
    8. '<|end|>' → logprob: -6.564298152923584
    9. '    
' → logprob: -8.439297676086426
    10. '
        
' → logprob: -8.689297676086426

Token 543: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11297575384378433
    2. 'm' → logprob: -2.862975835800171
    3. '#' → logprob: -3.737975835800171
    4. ' m' → logprob: -4.362975597381592
    5. ' #' → logprob: -5.612975597381592
    6. '        
' → logprob: -6.362975597381592
    7. '        ' → logprob: -6.612975597381592
    8. 'import' → logprob: -6.612975597381592
    9. ' and' → logprob: -7.112975597381592
    10. '   ' → logprob: -7.112975597381592

Token 544: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13988634943962097
    2. '   ' → logprob: -3.1398863792419434
    3. '<=' → logprob: -3.5148863792419434
    4. ' =' → logprob: -4.014886379241943
    5. '*' → logprob: -4.389886379241943
    6. '+' → logprob: -4.639886379241943
    7. '       ' → logprob: -5.264886379241943
    8. ' <=' → logprob: -5.889886379241943
    9. ' up' → logprob: -6.139886379241943
    10. ' *' → logprob: -6.139886379241943

Token 545: '600' (ID: 6718)
  Prédit: '600'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '600' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -12.00001335144043
    3. '100' → logprob: -13.00001335144043
    4. '601' → logprob: -13.37501335144043
    5. '700' → logprob: -13.75001335144043
    6. '   ' → logprob: -13.87501335144043
    7. '800' → logprob: -15.62501335144043
    8. '60' → logprob: -15.75001335144043
    9. '650' → logprob: -15.87501335144043
    10. 'int' → logprob: -16.25001335144043

Token 546: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6689910292625427
    2. '       ' → logprob: -0.7939910292625427
    3. '

' → logprob: -4.0439910888671875
    4. '        
' → logprob: -4.1689910888671875
    5. 'def' → logprob: -6.9189910888671875
    6. '
' → logprob: -7.5439910888671875
    7. '    
' → logprob: -8.293991088867188
    8. '```' → logprob: -8.543991088867188
    9. '        

' → logprob: -8.543991088867188
    10. 'import' → logprob: -8.668991088867188

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06159629672765732
    2. '        
' → logprob: -3.186596393585205
    3. '
' → logprob: -4.436596393585205
    4. 'def' → logprob: -5.811596393585205
    5. 'import' → logprob: -6.561596393585205
    6. '```' → logprob: -6.686596393585205
    7. '    
' → logprob: -8.311595916748047
    8. '

' → logprob: -8.686595916748047
    9. '        

' → logprob: -8.936595916748047
    10. 'class' → logprob: -9.311595916748047

Token 548: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6570565104484558
    2. 'def' (adapté à ' def') → logprob: -0.7820565104484558
    3. 'import' → logprob: -4.2820563316345215
    4. ' def' → logprob: -5.2820563316345215
    5. 'class' → logprob: -6.1570563316345215
    6. '        
' → logprob: -6.7820563316345215
    7. '#' → logprob: -7.4070563316345215
    8. '   ' → logprob: -8.03205680847168
    9. ' import' → logprob: -8.03205680847168
    10. 'from' → logprob: -8.40705680847168

Token 549: ' mst' (ID: 179099)
  Prédit: ' mst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mst' → logprob: -1.4747989177703857
    2. 'build' → logprob: -1.8497989177703857
    3. 'mst' → logprob: -1.9747989177703857
    4. 'modified' → logprob: -2.3497989177703857
    5. 'param' → logprob: -2.8497989177703857
    6. 'cost' → logprob: -2.9747989177703857
    7. 'check' → logprob: -2.9747989177703857
    8. ' build' → logprob: -3.3497989177703857
    9. 'compute' → logprob: -3.5997989177703857
    10. 'kr' → logprob: -3.8497989177703857

Token 550: '_with' (ID: 14161)
  Prédit: '(parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.7644277811050415
    2. '(edges' → logprob: -1.8894277811050415
    3. '(lambda' → logprob: -2.514427661895752
    4. '(u' → logprob: -2.639427661895752
    5. '_' → logprob: -3.514427661895752
    6. '(nodes' → logprob: -3.639427661895752
    7. '(self' → logprob: -4.014427661895752
    8. '_find' → logprob: -4.264427661895752
    9. '(param' → logprob: -4.389427661895752
    10. '(l' → logprob: -4.389427661895752

Token 551: '_lambda' (ID: 135497)
  Prédit: '_lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lambda' → logprob: -0.31966373324394226
    2. '_pen' → logprob: -1.6946637630462646
    3. 'lambda' → logprob: -3.0696637630462646
    4. '_param' → logprob: -3.6946637630462646
    5. 'param' → logprob: -4.5696635246276855
    6. '_parameter' → logprob: -5.6946635246276855
    7. 'pen' → logprob: -5.9446635246276855
    8. 'parameter' → logprob: -7.1946635246276855
    9. '(lambda' → logprob: -7.1946635246276855
    10. '_cost' → logprob: -8.069664001464844

Token 552: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.31517723202705383
    2. '(self' → logprob: -1.3151772022247314
    3. '(l' → logprob: -6.4401774406433105
    4. '(' → logprob: -8.815176963806152
    5. ' (' → logprob: -9.940176963806152
    6. 'lambda' → logprob: -10.315176963806152
    7. '(delta' → logprob: -11.065176963806152
    8. 'self' → logprob: -11.315176963806152
    9. '_lambda' → logprob: -11.315176963806152
    10. '(param' → logprob: -11.690176963806152

Token 553: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48870718479156494
    2. '_value' → logprob: -1.488707184791565
    3. '_val' → logprob: -2.1137070655822754
    4. '_param' → logprob: -3.4887070655822754
    5. '):
' → logprob: -5.863707065582275
    6. '):' → logprob: -6.238707065582275
    7. '_,' → logprob: -7.113707065582275
    8. '_cost' → logprob: -7.238707065582275
    9. '_pen' → logprob: -7.238707065582275
    10. '_parameter' → logprob: -7.488707065582275

Token 554: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5817630887031555
    2. '):
' → logprob: -0.8317630887031555
    3. '):
' → logprob: -5.83176326751709
    4. ',' → logprob: -6.45676326751709
    5. '       ' → logprob: -8.33176326751709
    6. '):

' → logprob: -8.45676326751709
    7. 'def' → logprob: -8.83176326751709
    8. '_cost' → logprob: -9.08176326751709
    9. ' ):' → logprob: -9.08176326751709
    10. '   ' → logprob: -9.20676326751709

Token 555: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31107762455940247
    2. '           ' → logprob: -1.43607759475708
    3. '(self' → logprob: -4.43607759475708
    4. ':' → logprob: -4.56107759475708
    5. '(edges' → logprob: -6.18607759475708
    6. 'self' → logprob: -7.18607759475708
    7. '(' → logprob: -7.56107759475708
    8. ',' → logprob: -7.68607759475708
    9. '(n' → logprob: -7.81107759475708
    10. ' edges' → logprob: -8.061078071594238

Token 556: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6936851739883423
    2. '       ' → logprob: -1.6936851739883423
    3. 'class' → logprob: -1.8186851739883423
    4. ' parent' → logprob: -2.9436850547790527
    5. 'from' → logprob: -3.0686850547790527
    6. 'import' → logprob: -3.0686850547790527
    7. ' class' → logprob: -5.818685054779053
    8. '           ' → logprob: -6.818685054779053
    9. ' from' → logprob: -6.818685054779053
    10. 'parents' → logprob: -6.818685054779053

Token 557: ' Build' (ID: 10885)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.1470952033996582
    2. 'class' → logprob: -1.5220952033996582
    3. '       ' → logprob: -2.022095203399658
    4. 'from' → logprob: -2.147095203399658
    5. 'def' → logprob: -2.272095203399658
    6. 'import' → logprob: -2.897095203399658
    7. ' parent' → logprob: -3.397095203399658
    8. '   ' → logprob: -5.147095203399658
    9. 'uf' → logprob: -5.272095203399658
    10. ' from' → logprob: -5.772095203399658

Token 558: ' a' (ID: 261)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6711599230766296
    2. ' parent' → logprob: -1.6711599826812744
    3. 'import' → logprob: -2.0461599826812744
    4. 'def' → logprob: -2.5461599826812744
    5. '       ' → logprob: -3.5461599826812744
    6. ' def' → logprob: -4.046159744262695
    7. 'class' → logprob: -4.296159744262695
    8. ' uf' → logprob: -5.171159744262695
    9. ' import' → logprob: -5.296159744262695
    10. 'uf' → logprob: -5.421159744262695

Token 559: ' list' (ID: 1562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4092835783958435
    2. 'cost' → logprob: -2.1592836380004883
    3. 'parent' → logprob: -2.5342836380004883
    4. 'union' → logprob: -3.5342836380004883
    5. 'class' → logprob: -3.6592836380004883
    6. 'dis' → logprob: -3.6592836380004883
    7. 'edges' → logprob: -3.9092836380004883
    8. 'Union' → logprob: -4.409283638000488
    9. '       ' → logprob: -5.284283638000488
    10. 'from' → logprob: -6.034283638000488

Token 560: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12976931035518646
    2. '       ' → logprob: -3.0047693252563477
    3. ' =' → logprob: -3.2547693252563477
    4. 'of' → logprob: -4.754769325256348
    5. '<|end|>' → logprob: -5.129769325256348
    6. '=' → logprob: -5.629769325256348
    7. '=[]' → logprob: -5.754769325256348
    8. '           ' → logprob: -5.879769325256348
    9. '<|end|>' → logprob: -6.129769325256348
    10. '_of' → logprob: -6.629769325256348

Token 561: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.43858522176742554
    2. '(edges' → logprob: -1.9385852813720703
    3. 'modified' → logprob: -2.4385852813720703
    4. '(' → logprob: -2.9385852813720703
    5. 'adjust' → logprob: -3.6885852813720703
    6. '[(' → logprob: -4.43858528137207
    7. 'weighted' → logprob: -4.43858528137207
    8. '(mod' → logprob: -5.31358528137207
    9. '((' → logprob: -5.43858528137207
    10. '(cost' → logprob: -5.81358528137207

Token 562: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.255361407995224
    2. '       ' → logprob: -2.505361318588257
    3. '=' → logprob: -3.130361318588257
    4. '           ' → logprob: -3.130361318588257
    5. '_with' → logprob: -4.130361557006836
    6. ' with' → logprob: -4.630361557006836
    7. 'with' → logprob: -4.630361557006836
    8. 'modified' → logprob: -5.005361557006836
    9. '=[]' → logprob: -5.755361557006836
    10. ',' → logprob: -6.505361557006836

Token 563: ' modified' (ID: 19209)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -1.0921111106872559
    2. '(e' → logprob: -2.092111110687256
    3. '(lambda' → logprob: -2.092111110687256
    4. 'modified' → logprob: -2.342111110687256
    5. '[(' → logprob: -2.592111110687256
    6. ' (' → logprob: -2.967111110687256
    7. '(' → logprob: -3.092111110687256
    8. 'cost' → logprob: -3.217111110687256
    9. ' adjusted' → logprob: -3.717111110687256
    10. '(cost' → logprob: -3.717111110687256

Token 564: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.252081960439682
    2. '_cost' → logprob: -1.7520819902420044
    3. ' costs' → logprob: -3.127081871032715
    4. ' cost' → logprob: -5.252081871032715
    5. '   ' → logprob: -9.502081871032715
    6. 'edges' → logprob: -9.752081871032715
    7. '_edges' → logprob: -10.502081871032715
    8. ' edges' → logprob: -10.877081871032715
    9. ' =' → logprob: -11.127081871032715
    10. '       ' → logprob: -11.502081871032715

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6521366834640503
    2. '       ' → logprob: -1.4021366834640503
    3. '           ' → logprob: -2.15213680267334
    4. ':' → logprob: -2.40213680267334
    5. '=' → logprob: -4.27713680267334
    6. ':
' → logprob: -5.52713680267334
    7. ',' → logprob: -6.40213680267334
    8. '               ' → logprob: -7.40213680267334
    9. 'cost' → logprob: -7.52713680267334
    10. 'modified' → logprob: -7.65213680267334

Token 566: ' cost' (ID: 3097)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.040031976997852325
    2. '(e' → logprob: -3.915031909942627
    3. '[e' → logprob: -4.790031909942627
    4. ' e' → logprob: -5.040031909942627
    5. '[(' → logprob: -6.165031909942627
    6. 'edge' → logprob: -7.415031909942627
    7. ' (' → logprob: -7.665031909942627
    8. '[' → logprob: -7.915031909942627
    9. '[
' → logprob: -8.165032386779785
    10. '   ' → logprob: -8.790032386779785

Token 567: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31319180130958557
    2. '+' → logprob: -1.4381917715072632
    3. '           ' → logprob: -4.438191890716553
    4. 'if' → logprob: -5.063191890716553
    5. ' if' → logprob: -5.063191890716553
    6. '=' → logprob: -5.563191890716553
    7. '       ' → logprob: -7.063191890716553
    8. '               ' → logprob: -7.688191890716553
    9. '   ' → logprob: -7.938191890716553
    10. ',' → logprob: -8.688191413879395

Token 568: ' (' (ID: 350)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.019228702411055565
    2. ' (' → logprob: -4.019228935241699
    3. 'lambda' → logprob: -7.394228935241699
    4. '(' → logprob: -8.1442289352417
    5. '((' → logprob: -9.6442289352417
    6. ' lambda' → logprob: -10.0192289352417
    7. '(e' → logprob: -10.6442289352417
    8. '(delta' → logprob: -11.8942289352417
    9. ' ' → logprob: -12.5192289352417
    10. '   ' → logprob: -12.5192289352417

Token 569: 'lambda' (ID: 35280)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2847101092338562
    2. 'lambda' → logprob: -1.534710168838501
    3. ' (' → logprob: -3.909710168838501
    4. ' lambda' → logprob: -4.534709930419922
    5. '(' → logprob: -6.659709930419922
    6. '   ' → logprob: -10.534709930419922
    7. ' ' → logprob: -10.659709930419922
    8. '           ' → logprob: -11.034709930419922
    9. '(e' → logprob: -11.034709930419922
    10. '((' → logprob: -11.409709930419922

Token 570: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012528955936431885
    2. 'if' → logprob: -4.387528896331787
    3. ' ' → logprob: -11.512529373168945
    4. '   ' → logprob: -12.137529373168945
    5. ')' → logprob: -13.387529373168945
    6. '*' → logprob: -14.387529373168945
    7. ' *' → logprob: -14.637529373168945
    8. '  ' → logprob: -15.012529373168945
    9. '       ' → logprob: -15.012529373168945
    10. '_' → logprob: -15.512529373168945

Token 571: ' company' (ID: 3175)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08599931746721268
    2. ' e' → logprob: -2.8359992504119873
    3. '(e' → logprob: -4.585999488830566
    4. 'edge' → logprob: -4.585999488830566
    5. ' (' → logprob: -6.210999488830566
    6. ' edge' → logprob: -6.960999488830566
    7. '(edge' → logprob: -8.710999488830566
    8. 'edges' → logprob: -9.710999488830566
    9. '(' → logprob: -9.835999488830566
    10. '   ' → logprob: -10.648499488830566

Token 572: ' A' (ID: 355)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3439844846725464
    2. '==' → logprob: -1.3439844846725464
    3. '=='' → logprob: -3.593984603881836
    4. '=="' → logprob: -7.218984603881836
    5. '_A' → logprob: -7.968984603881836
    6. 'e' → logprob: -7.968984603881836
    7. ' =='' → logprob: -8.593984603881836
    8. 'A' → logprob: -8.593984603881836
    9. '   ' → logprob: -8.718984603881836
    10. ' ' → logprob: -8.968984603881836

Token 573: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07173487544059753
    2. 'else' → logprob: -3.19673490524292
    3. ')' → logprob: -3.94673490524292
    4. '   ' → logprob: -5.57173490524292
    5. '==' → logprob: -6.82173490524292
    6. '       ' → logprob: -6.94673490524292
    7. ' ' → logprob: -7.32173490524292
    8. ' ==' → logprob: -7.82173490524292
    9. '           ' → logprob: -7.94673490524292
    10. '  ' → logprob: -8.321734428405762

Token 574: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015084355836734176
    2. ' ' → logprob: -6.5015082359313965
    3. ')' → logprob: -12.501508712768555
    4. '   ' → logprob: -14.251508712768555
    5. '           ' → logprob: -14.876508712768555
    6. '                   ' → logprob: -15.751508712768555
    7. ' ' → logprob: -16.126508712768555
    8. '       ' → logprob: -16.251508712768555
    9. '```' → logprob: -16.314008712768555
    10. '               ' → logprob: -16.376508712768555

Token 575: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.910643762443215e-05
    2. ' ' → logprob: -9.500079154968262
    3. ')' → logprob: -13.000079154968262
    4. '   ' → logprob: -14.125079154968262
    5. '           ' → logprob: -14.875079154968262
    6. '                   ' → logprob: -15.750079154968262
    7. '```' → logprob: -16.062578201293945
    8. '       ' → logprob: -16.250078201293945
    9. '               ' → logprob: -16.250078201293945
    10. '                       ' → logprob: -16.937578201293945

Token 576: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059966497123241425
    2. ')
' → logprob: -2.934966564178467
    3. '           ' → logprob: -5.934966564178467
    4. '       ' → logprob: -6.559966564178467
    5. ')
' → logprob: -8.559966087341309
    6. '               ' → logprob: -8.684966087341309
    7. '   ' → logprob: -9.184966087341309
    8. ' else' → logprob: -9.434966087341309
    9. '                   ' → logprob: -9.559966087341309
    10. ')

' → logprob: -10.059966087341309

Token 577: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3812556564807892
    2. '           ' → logprob: -1.3812556266784668
    3. '
' → logprob: -3.381255626678467
    4. ':' → logprob: -4.006255626678467
    5. ':
' → logprob: -5.881255626678467
    6. ' =' → logprob: -6.756255626678467
    7. '        
' → logprob: -6.756255626678467
    8. ' edges' → logprob: -6.756255626678467
    9. '):
' → logprob: -7.006255626678467
    10. ',' → logprob: -7.256255626678467

Token 578: ' mod' (ID: 1812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2793026268482208
    2. ' edges' → logprob: -1.7793025970458984
    3. 'edges' → logprob: -2.7793025970458984
    4. '       ' → logprob: -5.029302597045898
    5. ':
' → logprob: -7.529302597045898
    6. ':' → logprob: -7.529302597045898
    7. '
' → logprob: -7.529302597045898
    8. '            
' → logprob: -7.654302597045898
    9. ' modified' → logprob: -7.904302597045898
    10. '(edges' → logprob: -7.904302597045898

Token 579: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.19311010837554932
    2. '_cost' → logprob: -2.0681099891662598
    3. 'ified' → logprob: -3.3181099891662598
    4. '_' → logprob: -5.69310998916626
    5. 'cost' → logprob: -5.81810998916626
    6. '_e' → logprob: -6.19310998916626
    7. 'ded' → logprob: -6.44310998916626
    8. 'd' → logprob: -6.81810998916626
    9. '       ' → logprob: -7.94310998916626
    10. 'e' → logprob: -8.318110466003418

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519535422325134
    2. ' =' → logprob: -1.5019536018371582
    3. '   ' → logprob: -10.876953125
    4. '=[]' → logprob: -12.751953125
    5. '       ' → logprob: -14.376953125
    6. '=[]
' → logprob: -15.001953125
    7. '=[' → logprob: -15.251953125
    8. '    ' → logprob: -15.626953125
    9. ')' → logprob: -15.626953125
    10. ' ' → logprob: -15.876953125

Token 581: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.036148324608802795
    2. '[
' → logprob: -3.7861483097076416
    3. '[]
' → logprob: -4.536148548126221
    4. '[' → logprob: -6.536148548126221
    5. '[e' → logprob: -8.286148071289062
    6. '[]' → logprob: -8.411148071289062
    7. ' [(' → logprob: -9.036148071289062
    8. '[((' → logprob: -10.411148071289062
    9. '[self' → logprob: -11.536148071289062
    10. 'sorted' → logprob: -11.911148071289062

Token 582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21082380414009094
    2. '       ' → logprob: -2.2108237743377686
    3. ' for' → logprob: -2.7108237743377686
    4. 'for' → logprob: -4.335824012756348
    5. '               ' → logprob: -8.335824012756348
    6. ',' → logprob: -8.835824012756348
    7. '   ' → logprob: -9.460824012756348
    8. ')' → logprob: -9.460824012756348
    9. '=' → logprob: -9.585824012756348
    10. ' =' → logprob: -9.960824012756348

Token 583: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8707310557365417
    2. ' for' → logprob: -0.9957310557365417
    3. '       ' → logprob: -2.2457311153411865
    4. '           ' → logprob: -2.2457311153411865
    5. '   ' → logprob: -9.120731353759766
    6. '               ' → logprob: -10.620731353759766
    7. '	for' → logprob: -11.370731353759766
    8. ' ' → logprob: -11.745731353759766
    9. '	       ' → logprob: -11.870731353759766
    10. '
' → logprob: -11.995731353759766

Token 584: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00018458699923940003
    2. 'edge' → logprob: -9.125185012817383
    3. ' e' → logprob: -9.500185012817383
    4. 'p' → logprob: -15.125185012817383
    5. '   ' → logprob: -15.250185012817383
    6. ' edge' → logprob: -16.125185012817383
    7. 'proposal' → logprob: -16.500185012817383
    8. 'ep' → logprob: -17.000185012817383
    9. '	e' → logprob: -17.250185012817383
    10. ' ' → logprob: -17.625185012817383

Token 585: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036076747346669436
    2. 'in' → logprob: -5.628607749938965
    3. ' ' → logprob: -12.378607749938965
    4. '<|end|>' → logprob: -14.128607749938965
    5. '	in' → logprob: -14.128607749938965
    6. '<|end|>' → logprob: -14.503607749938965
    7. '    ' → logprob: -15.628607749938965
    8. '  ' → logprob: -15.753607749938965
    9. '_' → logprob: -15.753607749938965
    10. 'space' → logprob: -16.37860679626465

Token 586: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005278917378745973
    2. ' self' → logprob: -7.750527858734131
    3. '(self' → logprob: -9.375528335571289
    4. '[self' → logprob: -12.000528335571289
    5. '
' → logprob: -13.250528335571289
    6. '   ' → logprob: -13.750528335571289
    7. 'edges' → logprob: -14.000528335571289
    8. '           ' → logprob: -14.250528335571289
    9. '[' → logprob: -14.500528335571289
    10. '       ' → logprob: -14.500528335571289

Token 587: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.0003766919835470617
    2. 'pro' → logprob: -8.12537670135498
    3. 'edges' → logprob: -9.87537670135498
    4. '.edges' → logprob: -11.87537670135498
    5. 'self' → logprob: -12.37537670135498
    6. ' .' → logprob: -12.87537670135498
    7. ' proposals' → logprob: -13.37537670135498
    8. 's' → logprob: -13.50037670135498
    9. '
' → logprob: -13.50037670135498
    10. '   ' → logprob: -13.62537670135498

Token 588: 'posals' (ID: 101779)
  Prédit: 'posals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posals' → logprob: -1.9266199160483666e-05
    2. 'pos' → logprob: -12.000019073486328
    3. 'posal' → logprob: -12.125019073486328
    4. '```' → logprob: -12.500019073486328
    5. 'sal' → logprob: -14.125019073486328
    6. 'p' → logprob: -14.375019073486328
    7. '``' → logprob: -14.375019073486328
    8. '   ' → logprob: -14.750019073486328
    9. '           ' → logprob: -14.875019073486328
    10. '
' → logprob: -15.250019073486328

Token 589: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2641547918319702
    2. ':
' → logprob: -1.6391547918319702
    3. '           ' → logprob: -3.7641549110412598
    4. '               ' → logprob: -4.63915491104126
    5. ',' → logprob: -5.76415491104126
    6. '.append' → logprob: -6.76415491104126
    7. '):
' → logprob: -8.014154434204102
    8. '       ' → logprob: -9.514154434204102
    9. '=' → logprob: -9.889154434204102
    10. '.' → logprob: -10.264154434204102

Token 590: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.090681292116642
    2. '               ' → logprob: -2.465681314468384
    3. '            ' → logprob: -7.465681076049805
    4. '       ' → logprob: -8.465681076049805
    5. '            
' → logprob: -8.715681076049805
    6. ',' → logprob: -8.840681076049805
    7. ':' → logprob: -8.840681076049805
    8. '          ' → logprob: -9.715681076049805
    9. '	           ' → logprob: -10.090681076049805
    10. '	       ' → logprob: -10.090681076049805

Token 591: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7318865656852722
    2. ' cost' → logprob: -1.731886625289917
    3. '           ' → logprob: -1.856886625289917
    4. 'mod' (adapté à ' mod') → logprob: -2.606886625289917
    5. 'cost' → logprob: -3.106886625289917
    6. ' if' → logprob: -3.731886625289917
    7. '               ' → logprob: -4.106886386871338
    8. ' new' → logprob: -4.481886386871338
    9. ' modified' → logprob: -5.606886386871338
    10. '                   ' → logprob: -5.731886386871338

Token 592: '_cost' (ID: 36820)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.04648223891854286
    2. '_cost' → logprob: -3.2964823246002197
    3. 'cost' → logprob: -4.921482086181641
    4. '=_' → logprob: -8.42148208618164
    5. '_edge' → logprob: -8.42148208618164
    6. '_e' → logprob: -8.92148208618164
    7. 'edges' → logprob: -9.29648208618164
    8. '._' → logprob: -9.42148208618164
    9. '=' → logprob: -9.54648208618164
    10. ' =' → logprob: -9.79648208618164

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133711516857147
    2. '=' → logprob: -1.313371181488037
    3. '=e' → logprob: -9.188370704650879
    4. '   ' → logprob: -12.188370704650879
    5. ' ' → logprob: -14.438370704650879
    6. '=int' → logprob: -15.438370704650879
    7. '=self' → logprob: -15.688370704650879
    8. ')' → logprob: -15.938370704650879
    9. '    ' → logprob: -16.063371658325195
    10. '=
' → logprob: -16.313371658325195

Token 594: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1602441370487213
    2. ' e' → logprob: -1.910244107246399
    3. '                   ' → logprob: -11.53524398803711
    4. '               ' → logprob: -11.91024398803711
    5. '   ' → logprob: -13.53524398803711
    6. '           ' → logprob: -14.28524398803711
    7. '                       ' → logprob: -15.16024398803711
    8. '	e' → logprob: -15.28524398803711
    9. '(e' → logprob: -15.53524398803711
    10. '                ' → logprob: -15.53524398803711

Token 595: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -6.098748053773306e-05
    2. 'cost' → logprob: -10.37506103515625
    3. '.' → logprob: -10.62506103515625
    4. ' .' → logprob: -13.37506103515625
    5. ' cost' → logprob: -13.87506103515625
    6. '_cost' → logprob: -14.37506103515625
    7. '.c' → logprob: -14.50006103515625
    8. '.code' → logprob: -15.62506103515625
    9. '(cost' → logprob: -15.62506103515625
    10. 'Cost' → logprob: -16.00006103515625

Token 596: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868919909000397
    2. '+' → logprob: -1.1368919610977173
    3. ' if' → logprob: -11.886892318725586
    4. '               ' → logprob: -12.136892318725586
    5. '                   ' → logprob: -13.136892318725586
    6. '+
' → logprob: -13.261892318725586
    7. 'if' → logprob: -13.511892318725586
    8. '           ' → logprob: -13.636892318725586
    9. '
' → logprob: -13.886892318725586
    10. ' +
' → logprob: -14.761892318725586

Token 597: ' (' (ID: 350)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.051192015409469604
    2. ' (' → logprob: -3.051192045211792
    3. 'lambda' → logprob: -6.051191806793213
    4. ' lambda' → logprob: -8.426192283630371
    5. '(' → logprob: -11.426192283630371
    6. '(l' → logprob: -12.676192283630371
    7. ' ' → logprob: -12.926192283630371
    8. '   ' → logprob: -13.176192283630371
    9. '(delta' → logprob: -13.676192283630371
    10. '((' → logprob: -14.426192283630371

Token 598: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.006020872388035059
    2. '(lambda' → logprob: -5.256021022796631
    3. ' lambda' → logprob: -7.256021022796631
    4. '(' → logprob: -10.131020545959473
    5. ' (' → logprob: -10.131020545959473
    6. '   ' → logprob: -14.631020545959473
    7. '
' → logprob: -15.631020545959473
    8. ' ' → logprob: -16.13102149963379
    9. '           ' → logprob: -16.38102149963379
    10. '_lambda' → logprob: -16.50602149963379

Token 599: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011190229561179876
    2. 'if' → logprob: -7.001119136810303
    3. ' if' → logprob: -8.626118659973145
    4. '_
' → logprob: -11.751118659973145
    5. 'e' → logprob: -11.876118659973145
    6. '_

' → logprob: -12.376118659973145
    7. '_)' → logprob: -13.126118659973145
    8. '*' → logprob: -13.376118659973145
    9. '   ' → logprob: -13.376118659973145
    10. '_,' → logprob: -14.501118659973145

Token 600: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03804757073521614
    2. 'if' → logprob: -3.2880475521087646
    3. ' ' → logprob: -12.538047790527344
    4. '   ' → logprob: -13.163047790527344
    5. '       ' → logprob: -15.538047790527344
    6. '  ' → logprob: -16.288047790527344
    7. ')' → logprob: -16.913047790527344
    8. '*' → logprob: -17.038047790527344
    9. 'e' → logprob: -17.288047790527344
    10. '    ' → logprob: -17.413047790527344

Token 601: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01252248790115118
    2. ' e' → logprob: -4.3875226974487305
    3. '(e' → logprob: -11.38752269744873
    4. ' (' → logprob: -13.88752269744873
    5. '   ' → logprob: -14.88752269744873
    6. ' ' → logprob: -16.012521743774414
    7. '	e' → logprob: -16.762521743774414
    8. '           ' → logprob: -17.262521743774414
    9. '    ' → logprob: -17.762521743774414
    10. '  ' → logprob: -17.762521743774414

Token 602: '.company' (ID: 48225)
  Prédit: '.company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.0021394360810518265
    2. 'company' → logprob: -6.252139568328857
    3. '.' → logprob: -8.7521390914917
    4. ' .' → logprob: -10.5021390914917
    5. ' company' → logprob: -10.7521390914917
    6. '.com' → logprob: -13.7521390914917
    7. '   ' → logprob: -13.7521390914917
    8. '(company' → logprob: -15.3771390914917
    9. '.employee' → logprob: -15.6271390914917
    10. '.comp' → logprob: -15.6271390914917

Token 603: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2130507379770279
    2. '==' → logprob: -1.7130507230758667
    3. '=='' → logprob: -4.463050842285156
    4. ' =='' → logprob: -10.713050842285156
    5. '=="' → logprob: -11.213050842285156
    6. '=' → logprob: -13.213050842285156
    7. '==
' → logprob: -13.588050842285156
    8. ' ' → logprob: -13.713050842285156
    9. '==='' → logprob: -14.588050842285156
    10. '   ' → logprob: -14.838050842285156

Token 604: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.001777161261998117
    2. ' '' → logprob: -6.376777172088623
    3. '"A' → logprob: -9.876776695251465
    4. ''' → logprob: -11.376776695251465
    5. 'A' → logprob: -12.126776695251465
    6. '’A' → logprob: -13.376776695251465
    7. '   ' → logprob: -13.751776695251465
    8. ''S' → logprob: -13.876776695251465
    9. '('' → logprob: -13.876776695251465
    10. ' ' → logprob: -14.126776695251465

Token 605: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0032045694533735514
    2. ''A' → logprob: -5.753204345703125
    3. ''' → logprob: -10.628204345703125
    4. '"A' → logprob: -13.253204345703125
    5. ' A' → logprob: -15.003204345703125
    6. '['' → logprob: -15.253204345703125
    7. ''a' → logprob: -16.753204345703125
    8. 'a' → logprob: -17.003204345703125
    9. '('' → logprob: -17.128204345703125
    10. '_A' → logprob: -17.128204345703125

Token 606: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01815485768020153
    2. 'else' → logprob: -4.018154621124268
    3. ''' → logprob: -13.518155097961426
    4. '           ' → logprob: -13.518155097961426
    5. '       ' → logprob: -14.143155097961426
    6. ')' → logprob: -14.643155097961426
    7. '        ' → logprob: -14.768155097961426
    8. '               ' → logprob: -15.643155097961426
    9. '   ' → logprob: -16.14315414428711
    10. '            ' → logprob: -16.39315414428711

Token 607: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.014169743284583092
    2. 'else' → logprob: -4.264169692993164
    3. ')' → logprob: -12.639169692993164
    4. '           ' → logprob: -13.264169692993164
    5. '       ' → logprob: -14.889169692993164
    6. '               ' → logprob: -15.264169692993164
    7. '        ' → logprob: -15.389169692993164
    8. '	else' → logprob: -15.764169692993164
    9. ' ' → logprob: -16.514169692993164
    10. '            ' → logprob: -16.764169692993164

Token 608: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.125627517700195
    4. ')' → logprob: -16.875627517700195
    5. ' ' → logprob: -18.125627517700195
    6. '  ' → logprob: -18.500627517700195
    7. '```' → logprob: -18.625627517700195
    8. '    ' → logprob: -19.000627517700195
    9. '

' → logprob: -19.000627517700195
    10. '
' → logprob: -19.250627517700195

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. ')' → logprob: -19.3750057220459
    5. '00' → logprob: -20.6250057220459
    6. '۰' → logprob: -20.6250057220459
    7. '```' → logprob: -20.8750057220459
    8. '
' → logprob: -20.8750057220459
    9. '000' → logprob: -21.0000057220459
    10. '           ' → logprob: -21.8750057220459

Token 610: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2540678381919861
    2. ')' → logprob: -1.5040678977966309
    3. '               ' → logprob: -6.254067897796631
    4. '           ' → logprob: -9.004067420959473
    5. ')
' → logprob: -9.504067420959473
    6. '                   ' → logprob: -12.004067420959473
    7. ')

' → logprob: -12.754067420959473
    8. ' )
' → logprob: -13.254067420959473
    9. '             ' → logprob: -14.129067420959473
    10. '              ' → logprob: -14.254067420959473

Token 611: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017301602056249976
    2. '           ' → logprob: -6.376729965209961
    3. ')' → logprob: -11.126729965209961
    4. '
' → logprob: -11.876729965209961
    5. ',' → logprob: -13.376729965209961
    6. '              ' → logprob: -13.626729965209961
    7. '                   ' → logprob: -13.626729965209961
    8. '             ' → logprob: -14.376729965209961
    9. '       ' → logprob: -14.751729965209961
    10. '
' → logprob: -15.251729965209961

Token 612: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -0.1735926866531372
    2. '           ' → logprob: -2.0485925674438477
    3. '               ' → logprob: -3.9235925674438477
    4. ' mod' → logprob: -4.548592567443848
    5. '
' → logprob: -10.548592567443848
    6. '   ' → logprob: -11.048592567443848
    7. '       ' → logprob: -11.423592567443848
    8. '                   ' → logprob: -11.798592567443848
    9. '(mod' → logprob: -12.048592567443848
    10. 'edges' → logprob: -12.298592567443848

Token 613: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.018701517954468727
    2. '_cost' → logprob: -4.018701553344727
    3. 'cost' → logprob: -7.768701553344727
    4. 'edges' → logprob: -10.018701553344727
    5. '=' → logprob: -11.143701553344727
    6. '               ' → logprob: -11.518701553344727
    7. '           ' → logprob: -11.643701553344727
    8. '_edge' → logprob: -11.893701553344727
    9. ' =' → logprob: -12.143701553344727
    10. '       ' → logprob: -12.393701553344727

Token 614: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.030803771689534187
    2. ',' → logprob: -3.780803680419922
    3. ').' → logprob: -5.655803680419922
    4. '.' → logprob: -6.405803680419922
    5. 'append' → logprob: -7.280803680419922
    6. '=' → logprob: -7.530803680419922
    7. ')' → logprob: -8.280803680419922
    8. ',
' → logprob: -8.280803680419922
    9. '),' → logprob: -8.655803680419922
    10. '           ' → logprob: -9.405803680419922

Token 615: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.007425245363265276
    2. '(' → logprob: -5.007425308227539
    3. '(e' → logprob: -7.257425308227539
    4. '   ' → logprob: -13.132425308227539
    5. '(
' → logprob: -14.007425308227539
    6. '(mod' → logprob: -14.382425308227539
    7. '(E' → logprob: -14.632425308227539
    8. '(('' → logprob: -15.632425308227539
    9. '(self' → logprob: -15.882425308227539
    10. ' (' → logprob: -16.00742530822754

Token 616: 'Edge' (ID: 16577)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.006386957131326199
    2. '(' → logprob: -5.881386756896973
    3. ' (' → logprob: -6.506386756896973
    4. '(mod' → logprob: -7.256386756896973
    5. '(self' → logprob: -7.381386756896973
    6. '   ' → logprob: -8.256386756896973
    7. '(lambda' → logprob: -8.756386756896973
    8. '(E' → logprob: -9.631386756896973
    9. '((' → logprob: -9.881386756896973
    10. '(type' → logprob: -10.256386756896973

Token 617: '(e' (ID: 3454)
  Prédit: 'Proposal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Proposal' → logprob: -0.05150694027543068
    2. '(e' → logprob: -3.051506996154785
    3. 'proposal' → logprob: -5.926506996154785
    4. 'e' → logprob: -9.051506996154785
    5. 'Pro' → logprob: -10.176506996154785
    6. '(' → logprob: -10.301506996154785
    7. 'Cost' → logprob: -10.676506996154785
    8. '(pro' → logprob: -12.426506996154785
    9. ' proposal' → logprob: -12.551506996154785
    10. '(
' → logprob: -12.676506996154785

Token 618: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.5804402828216553
    2. '.e' → logprob: -1.9554402828216553
    3. '.city' → logprob: -3.0804402828216553
    4. '.is' → logprob: -3.2054402828216553
    5. '.pro' → logprob: -3.3304402828216553
    6. '.source' → logprob: -3.8304402828216553
    7. 'u' → logprob: -3.8304402828216553
    8. 'proposal' → logprob: -3.8304402828216553
    9. '.from' → logprob: -4.205440521240234
    10. '.n' → logprob: -4.455440521240234

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004216824658215046
    2. ',e' → logprob: -5.62921667098999
    3. ',
' → logprob: -8.004217147827148
    4. ' ,' → logprob: -8.504217147827148
    5. '<|end|>' → logprob: -11.254217147827148
    6. ')' → logprob: -11.504217147827148
    7. 'e' → logprob: -11.629217147827148
    8. ',u' → logprob: -11.629217147827148
    9. '   ' → logprob: -11.754217147827148
    10. '<|end|>' → logprob: -12.004217147827148

Token 620: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008622255176305771
    2. ' e' → logprob: -4.758622169494629
    3. '	e' → logprob: -13.258622169494629
    4. '   ' → logprob: -13.383622169494629
    5. '<|end|>' → logprob: -13.383622169494629
    6. '           ' → logprob: -14.008622169494629
    7. '       ' → logprob: -14.383622169494629
    8. ')e' → logprob: -14.633622169494629
    9. '<|end|>' → logprob: -15.758622169494629
    10. '               ' → logprob: -15.883622169494629

Token 621: '.v' (ID: 5520)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001917214714922011
    2. 'e' → logprob: -7.251917362213135
    3. '.v' → logprob: -8.001916885375977
    4. ',' → logprob: -8.126916885375977
    5. ',v' → logprob: -8.251916885375977
    6. 'cost' → logprob: -9.626916885375977
    7. 'u' → logprob: -9.876916885375977
    8. '   ' → logprob: -10.376916885375977
    9. ')v' → logprob: -10.626916885375977
    10. '.e' → logprob: -10.751916885375977

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002303697168827057
    2. ',e' → logprob: -6.377303600311279
    3. ' ,' → logprob: -7.502303600311279
    4. ',
' → logprob: -10.377304077148438
    5. '),' → logprob: -12.377304077148438
    6. ')' → logprob: -12.627304077148438
    7. '           ' → logprob: -13.127304077148438
    8. 'e' → logprob: -13.502304077148438
    9. '               ' → logprob: -13.627304077148438
    10. ',m' → logprob: -14.127304077148438

Token 623: ' e' (ID: 319)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02417973428964615
    2. ' mod' → logprob: -4.149179935455322
    3. 'e' → logprob: -5.024179935455322
    4. '               ' → logprob: -7.524179935455322
    5. ' e' → logprob: -7.649179935455322
    6. '           ' → logprob: -8.899179458618164
    7. '                   ' → logprob: -9.399179458618164
    8. 'cost' → logprob: -10.149179458618164
    9. 'modified' → logprob: -10.399179458618164
    10. '                           ' → logprob: -10.899179458618164

Token 624: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.24254077672958374
    2. 'cost' → logprob: -1.8675408363342285
    3. '.company' → logprob: -3.2425408363342285
    4. 'company' → logprob: -4.1175408363342285
    5. '_cost' → logprob: -6.6175408363342285
    6. ',' → logprob: -7.1175408363342285
    7. '.u' → logprob: -7.7425408363342285
    8. 'u' → logprob: -7.7425408363342285
    9. ' cost' → logprob: -7.9925408363342285
    10. ')' → logprob: -8.61754035949707

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16967307031154633
    2. ' +' → logprob: -2.044672966003418
    3. '+' → logprob: -3.794672966003418
    4. ' ,' → logprob: -6.044672966003418
    5. ')' → logprob: -7.794672966003418
    6. ',e' → logprob: -8.044672966003418
    7. '))' → logprob: -8.794672966003418
    8. ',
' → logprob: -9.044672966003418
    9. '+,' → logprob: -9.044672966003418
    10. 'e' → logprob: -9.294672966003418

Token 626: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006873206235468388
    2. ' e' → logprob: -5.00687313079834
    3. '   ' → logprob: -9.50687313079834
    4. ' ' → logprob: -11.13187313079834
    5. '       ' → logprob: -11.50687313079834
    6. ')' → logprob: -11.50687313079834
    7. '           ' → logprob: -12.00687313079834
    8. '  ' → logprob: -12.00687313079834
    9. '    ' → logprob: -12.38187313079834
    10. '     ' → logprob: -12.50687313079834

Token 627: '.company' (ID: 48225)
  Prédit: '.company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.3176443874835968
    2. 'company' → logprob: -1.3176443576812744
    3. 'e' → logprob: -5.5676445960998535
    4. ' company' → logprob: -8.192644119262695
    5. ' e' → logprob: -9.067644119262695
    6. '.e' → logprob: -10.192644119262695
    7. '.com' → logprob: -10.442644119262695
    8. '(company' → logprob: -10.942644119262695
    9. ')' → logprob: -11.942644119262695
    10. ' ' → logprob: -11.942644119262695

Token 628: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.072402723133564
    2. ')' → logprob: -2.6974027156829834
    3. ',' → logprob: -6.4474029541015625
    4. '))
' → logprob: -7.4474029541015625
    5. '               ' → logprob: -9.322402954101562
    6. '           ' → logprob: -9.322402954101562
    7. ' ))' → logprob: -10.447402954101562
    8. ')))' → logprob: -10.822402954101562
    9. '       ' → logprob: -11.697402954101562
    10. '),' → logprob: -11.822402954101562

Token 629: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008987982757389545
    2. ' mod' → logprob: -4.883987903594971
    3. 'e' → logprob: -8.258988380432129
    4. '))' → logprob: -8.883988380432129
    5. 'modified' → logprob: -8.883988380432129
    6. '                                       ' → logprob: -9.508988380432129
    7. '                                   ' → logprob: -9.633988380432129
    8. '                                        ' → logprob: -9.758988380432129
    9. '                               ' → logprob: -9.883988380432129
    10. '                                    ' → logprob: -10.008988380432129

Token 630: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0007245833403430879
    2. '_lambda' → logprob: -9.000724792480469
    3. '_edges' → logprob: -9.000724792480469
    4. 'cost' → logprob: -9.250724792480469
    5. ')' → logprob: -10.250724792480469
    6. '=lambda' → logprob: -10.250724792480469
    7. '_' → logprob: -10.375724792480469
    8. 'a' → logprob: -10.500724792480469
    9. 'e' → logprob: -10.625724792480469
    10. 'lambda' → logprob: -10.625724792480469

Token 631: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935727000236511
    2. '))' → logprob: -0.6935727000236511
    3. '))
' → logprob: -8.568572998046875
    4. '               ' → logprob: -9.568572998046875
    5. ')
' → logprob: -9.568572998046875
    6. '           ' → logprob: -10.068572998046875
    7. ',' → logprob: -10.693572998046875
    8. ')))' → logprob: -12.193572998046875
    9. ' ))' → logprob: -12.318572998046875
    10. '),' → logprob: -12.443572998046875

Token 632: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9391302466392517
    2. '       ' → logprob: -1.3141303062438965
    3. '<|end|>' → logprob: -1.4391303062438965
    4. ')' → logprob: -2.4391303062438965
    5. '        
' → logprob: -5.1891303062438965
    6. '<|end|>' → logprob: -5.9391303062438965
    7. ')
' → logprob: -6.1891303062438965
    8. '           ' → logprob: -6.5641303062438965
    9. ',' → logprob: -7.1891303062438965
    10. '  
' → logprob: -8.064129829406738

Token 633: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6706723570823669
    2. '
' → logprob: -1.0456724166870117
    3. '<|end|>' → logprob: -2.1706724166870117
    4. '        
' → logprob: -4.420672416687012
    5. '           ' → logprob: -5.670672416687012
    6. '            
' → logprob: -6.420672416687012
    7. ')' → logprob: -6.670672416687012
    8. 'def' → logprob: -7.045672416687012
    9. '<|end|>' → logprob: -7.045672416687012
    10. ' 
' → logprob: -7.420672416687012

Token 634: ' Kr' (ID: 11317)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.017708394676446915
    2. '       ' → logprob: -4.8927083015441895
    3. 'class' → logprob: -4.8927083015441895
    4. 'def' → logprob: -6.7677083015441895
    5. '#' → logprob: -7.5177083015441895
    6. '
' → logprob: -7.6427083015441895
    7. ' mod' → logprob: -8.892708778381348
    8. '           ' → logprob: -9.142708778381348
    9. 'from' → logprob: -10.017708778381348
    10. '   ' → logprob: -10.642708778381348

Token 635: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0006339243846014142
    2. 'usk' → logprob: -7.375633716583252
    3. 'uss' → logprob: -12.87563419342041
    4. 'ush' → logprob: -14.00063419342041
    5. 'ust' → logprob: -14.25063419342041
    6. '#' → logprob: -14.62563419342041
    7. 'u' → logprob: -14.62563419342041
    8. '```' → logprob: -14.62563419342041
    9. 'ус' → logprob: -14.87563419342041
    10. 'usz' → logprob: -15.12563419342041

Token 636: 'kal' (ID: 23466)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6488860845565796
    2. 'kal' → logprob: -0.7738860845565796
    3. 'ker' → logprob: -5.273886203765869
    4. 'ku' → logprob: -5.398886203765869
    5. 'ks' → logprob: -6.523886203765869
    6. 'kup' → logprob: -6.898886203765869
    7. 'kur' → logprob: -7.148886203765869
    8. 'kus' → logprob: -7.148886203765869
    9. '```' → logprob: -7.398886203765869
    10. 'uk' → logprob: -8.148885726928711

Token 637: ' MST' (ID: 123058)
  Prédit: ' algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.8652576804161072
    2. ''s' → logprob: -1.365257740020752
    3. '       ' → logprob: -1.990257740020752
    4. '           ' → logprob: -2.990257740020752
    5. 'algorithm' → logprob: -2.990257740020752
    6. '   ' → logprob: -3.865257740020752
    7. '
' → logprob: -4.490257740020752
    8. ':' → logprob: -5.115257740020752
    9. ' edges' → logprob: -5.490257740020752
    10. '            
' → logprob: -5.615257740020752

Token 638: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.09881591796875
    2. ' edges' → logprob: -1.47381591796875
    3. '       ' → logprob: -1.72381591796875
    4. '           ' → logprob: -2.09881591796875
    5. '            
' → logprob: -3.59881591796875
    6. ':
' → logprob: -3.97381591796875
    7. '        
' → logprob: -4.22381591796875
    8. ' algorithm' → logprob: -4.34881591796875
    9. ':' → logprob: -4.72381591796875
    10. 'edges' → logprob: -4.72381591796875

Token 639: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9679521918296814
    2. ' class' → logprob: -2.092952251434326
    3. 'class' → logprob: -2.217952251434326
    4. '
' → logprob: -2.342952251434326
    5. '   ' → logprob: -2.717952251434326
    6. '        
' → logprob: -2.717952251434326
    7. 'def' → logprob: -3.342952251434326
    8. '           ' → logprob: -3.592952251434326
    9. ' implementation' → logprob: -4.092952251434326
    10. ' algorithm' → logprob: -4.467952251434326

Token 640: ' uf' (ID: 35772)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3672870099544525
    2. '
' → logprob: -2.3672869205474854
    3. '           ' → logprob: -2.3672869205474854
    4. ' class' → logprob: -2.7422869205474854
    5. '       ' → logprob: -3.2422869205474854
    6. '            
' → logprob: -5.2422871589660645
    7. 'parent' → logprob: -6.2422871589660645
    8. ' 
' → logprob: -6.6172871589660645
    9. 'def' → logprob: -6.6172871589660645
    10. '        
' → logprob: -6.7422871589660645

Token 641: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014957930892705917
    2. '=' → logprob: -4.264957904815674
    3. ':' → logprob: -9.139958381652832
    4. 'Union' → logprob: -9.514958381652832
    5. '<|end|>' → logprob: -9.514958381652832
    6. '   ' → logprob: -9.764958381652832
    7. '=None' → logprob: -9.889958381652832
    8. '(' → logprob: -10.014958381652832
    9. ':
' → logprob: -10.139958381652832
    10. '.' → logprob: -10.264958381652832

Token 642: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.4812145233154297
    2. ' Union' → logprob: -0.9812145233154297
    3. 'Dis' → logprob: -5.23121452331543
    4. ' Dis' → logprob: -6.60621452331543
    5. 'DS' → logprob: -8.10621452331543
    6. 'self' → logprob: -9.85621452331543
    7. ' DS' → logprob: -10.85621452331543
    8. 'UF' → logprob: -11.48121452331543
    9. ' self' → logprob: -12.10621452331543
    10. '_union' → logprob: -12.10621452331543

Token 643: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -2.5776860184123507e-06
    2. '-F' → logprob: -13.12500286102295
    3. 'find' → logprob: -15.62500286102295
    4. '_Find' → logprob: -16.125001907348633
    5. '-find' → logprob: -16.375001907348633
    6. '_find' → logprob: -16.375001907348633
    7. ' Find' → logprob: -17.000001907348633
    8. 'Finder' → logprob: -17.375001907348633
    9. '_FIND' → logprob: -18.250001907348633
    10. '```' → logprob: -19.000001907348633

Token 644: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024001303245313466
    2. 'self' → logprob: -8.500240325927734
    3. '(' → logprob: -10.375240325927734
    4. '(len' → logprob: -13.000240325927734
    5. '(
' → logprob: -13.625240325927734
    6. '(n' → logprob: -14.000240325927734
    7. ' self' → logprob: -15.250240325927734
    8. '```' → logprob: -15.875240325927734
    9. '[self' → logprob: -16.125240325927734
    10. '=self' → logprob: -16.875240325927734

Token 645: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00038074489566497505
    2. 'n' → logprob: -8.000380516052246
    3. 'self' → logprob: -10.250380516052246
    4. '(n' → logprob: -12.500380516052246
    5. '.' → logprob: -13.375380516052246
    6. ').' → logprob: -13.875380516052246
    7. ' .' → logprob: -14.125380516052246
    8. '       ' → logprob: -14.375380516052246
    9. '   ' → logprob: -15.375380516052246
    10. '	n' → logprob: -15.500380516052246

Token 646: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47472843527793884
    2. ')' → logprob: -0.9747284650802612
    3. ')
' → logprob: -7.849728584289551
    4. '())
' → logprob: -8.59972858428955
    5. '())' → logprob: -10.34972858428955
    6. '       ' → logprob: -11.34972858428955
    7. ')

' → logprob: -11.47472858428955
    8. '()' → logprob: -11.72472858428955
    9. '   ' → logprob: -11.97472858428955
    10. '()
' → logprob: -13.09972858428955

Token 647: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008841464295983315
    2. '       ' → logprob: -5.258841514587402
    3. '
' → logprob: -5.758841514587402
    4. 'for' → logprob: -9.133841514587402
    5. '<|end|>' → logprob: -9.258841514587402
    6. '            
' → logprob: -9.383841514587402
    7. ' for' → logprob: -9.633841514587402
    8. '   ' → logprob: -10.633841514587402
    9. '	       ' → logprob: -11.258841514587402
    10. '        
' → logprob: -11.383841514587402

Token 648: ' mod' (ID: 1812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8099719285964966
    2. 'for' → logprob: -1.0599719285964966
    3. 'mod' (adapté à ' mod') → logprob: -2.184971809387207
    4. ' for' → logprob: -3.684971809387207
    5. '       ' → logprob: -3.934971809387207
    6. 'result' → logprob: -4.309971809387207
    7. 'edges' → logprob: -4.309971809387207
    8. '
' → logprob: -4.809971809387207
    9. '            
' → logprob: -5.809971809387207
    10. 'cost' → logprob: -6.184971809387207

Token 649: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.021637802943587303
    2. '_cost' → logprob: -3.8966379165649414
    3. 'cost' → logprob: -7.521637916564941
    4. 'edges' → logprob: -7.771637916564941
    5. '_edge' → logprob: -11.021637916564941
    6. '_' → logprob: -11.021637916564941
    7. 'Edges' → logprob: -11.396637916564941
    8. ' edges' → logprob: -11.521637916564941
    9. 'def' → logprob: -11.646637916564941
    10. '   ' → logprob: -11.771637916564941

Token 650: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.9385402993066236e-05
    2. '=' → logprob: -11.500019073486328
    3. 'sort' → logprob: -12.375019073486328
    4. '.' → logprob: -12.375019073486328
    5. '_sorted' → logprob: -15.375019073486328
    6. ' .' → logprob: -15.625019073486328
    7. 'sorted' → logprob: -15.875019073486328
    8. ' =' → logprob: -16.625019073486328
    9. '.sorted' → logprob: -17.750019073486328
    10. '   ' → logprob: -17.875019073486328

Token 651: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0017308680107817054
    2. '()' → logprob: -6.376730918884277
    3. '(reverse' → logprob: -11.126730918884277
    4. '(' → logprob: -11.251730918884277
    5. '(lambda' → logprob: -14.626730918884277
    6. '(
' → logprob: -15.501730918884277
    7. '()
' → logprob: -15.626730918884277
    8. 'key' → logprob: -16.37672996520996
    9. ',key' → logprob: -17.75172996520996
    10. '())' → logprob: -18.50172996520996

Token 652: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -2.8444881536415778e-05
    2. '=' → logprob: -10.500028610229492
    3. 'lambda' → logprob: -14.125028610229492
    4. '(lambda' → logprob: -16.375028610229492
    5. ' =' → logprob: -19.250028610229492
    6. '=
' → logprob: -20.000028610229492
    7. ' lambda' → logprob: -20.375028610229492
    8. '=None' → logprob: -21.125028610229492
    9. '=item' → logprob: -21.625028610229492
    10. '=len' → logprob: -21.625028610229492

Token 653: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.3534925878047943
    2. 'e' → logprob: -1.2284926176071167
    3. 'x' → logprob: -6.228492736816406
    4. 'mod' → logprob: -6.728492736816406
    5. ' x' → logprob: -7.103492736816406
    6. ' mod' → logprob: -7.978492736816406
    7. 'edge' → logprob: -7.978492736816406
    8. ' edge' → logprob: -8.228492736816406
    9. ' m' → logprob: -11.228492736816406
    10. 'token' → logprob: -11.603492736816406

Token 654: ':' (ID: 25)
  Prédit: '.mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.39239007234573364
    2. ':' → logprob: -1.2673900127410889
    3. 'e' → logprob: -4.142390251159668
    4. '.' → logprob: -4.892390251159668
    5. '.e' → logprob: -5.142390251159668
    6. '.modified' → logprob: -5.267390251159668
    7. 'mod' → logprob: -5.392390251159668
    8. ':e' → logprob: -6.142390251159668
    9. ' e' → logprob: -7.892390251159668
    10. ' :' → logprob: -7.892390251159668

Token 655: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.038044705986976624
    2. ' e' → logprob: -3.2880446910858154
    3. '(e' → logprob: -12.913044929504395
    4. ' (' → logprob: -15.163044929504395
    5. 'mod' → logprob: -15.288044929504395
    6. '   ' → logprob: -15.663044929504395
    7. ' ' → logprob: -16.663043975830078
    8. '	e' → logprob: -17.038043975830078
    9. '(' → logprob: -17.663043975830078
    10. ' mod' → logprob: -18.413043975830078

Token 656: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.00012856863031629473
    2. '.modified' → logprob: -9.000128746032715
    3. '.' → logprob: -12.750128746032715
    4. 'mod' → logprob: -14.500128746032715
    5. '.m' → logprob: -14.750128746032715
    6. ' .' → logprob: -15.500128746032715
    7. '.mods' → logprob: -15.750128746032715
    8. '	mod' → logprob: -15.750128746032715
    9. '.md' → logprob: -16.3751277923584
    10. '.cost' → logprob: -16.6251277923584

Token 657: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.306760805164231e-05
    2. 'cost' → logprob: -11.25001335144043
    3. ' cost' → logprob: -18.00001335144043
    4. 'Cost' → logprob: -19.37501335144043
    5. '_' → logprob: -19.50001335144043
    6. '_COST' → logprob: -19.50001335144043
    7. 'ified' → logprob: -20.25001335144043
    8. '_weight' → logprob: -21.00001335144043
    9. '_score' → logprob: -21.12501335144043
    10. '_c' → logprob: -21.37501335144043

Token 658: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004213786742184311
    2. ',' → logprob: -8.250421524047852
    3. ')
' → logprob: -9.375421524047852
    4. ' )' → logprob: -10.125421524047852
    5. '[' → logprob: -10.500421524047852
    6. ')#' → logprob: -13.250421524047852
    7. ' if' → logprob: -13.875421524047852
    8. '   ' → logprob: -14.250421524047852
    9. '),' → logprob: -14.750421524047852
    10. '
' → logprob: -15.000421524047852

Token 659: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002459841314703226
    2. '       ' → logprob: -6.87746000289917
    3. 'for' → logprob: -7.37746000289917
    4. ' for' → logprob: -7.62746000289917
    5. ',' → logprob: -9.627459526062012
    6. '
' → logprob: -10.002459526062012
    7. '            
' → logprob: -10.002459526062012
    8. '<|end|>' → logprob: -10.127459526062012
    9. ')' → logprob: -10.627459526062012
    10. '   ' → logprob: -11.377459526062012

Token 660: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14506885409355164
    2. ' for' → logprob: -2.645068883895874
    3. '           ' → logprob: -3.145068883895874
    4. 'result' → logprob: -4.270068645477295
    5. '       ' → logprob: -5.770068645477295
    6. 'res' → logprob: -7.145068645477295
    7. 'cost' → logprob: -7.145068645477295
    8. 'total' (adapté à ' total') → logprob: -7.395068645477295
    9. 'selected' → logprob: -7.895068645477295
    10. '               ' → logprob: -8.020069122314453

Token 661: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00028183520771563053
    2. '_' → logprob: -8.750282287597656
    3. '_mod' → logprob: -9.125282287597656
    4. 'cost' → logprob: -11.500282287597656
    5. ' _' → logprob: -13.000282287597656
    6. ' =' → logprob: -14.500282287597656
    7. '=' → logprob: -15.375282287597656
    8. '_COST' → logprob: -15.625282287597656
    9. ' cost' → logprob: -15.750282287597656
    10. ' +=' → logprob: -15.875282287597656

Token 662: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20160892605781555
    2. '=' → logprob: -1.7016088962554932
    3. ' +=' → logprob: -8.701608657836914
    4. '+=' → logprob: -11.076608657836914
    5. ',' → logprob: -11.451608657836914
    6. ' ' → logprob: -13.576608657836914
    7. '+' → logprob: -14.451608657836914
    8. ' ,' → logprob: -14.826608657836914
    9. '   ' → logprob: -14.951608657836914
    10. ' +' → logprob: -15.701608657836914

Token 663: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.500031471252441
    3. 'e' → logprob: -13.000031471252441
    4. 'total' → logprob: -15.375031471252441
    5. 'mod' → logprob: -15.375031471252441
    6. 'sum' → logprob: -15.500031471252441
    7. '   ' → logprob: -15.500031471252441
    8. 'self' → logprob: -15.625031471252441
    9. '(' → logprob: -17.250030517578125
    10. 'edge' → logprob: -17.750030517578125

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.875000953674316
    3. 'sum' → logprob: -15.000000953674316
    4. 'e' → logprob: -15.125000953674316
    5. 'mod' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.750001907348633
    7. 'total' → logprob: -18.750001907348633
    8. 'float' → logprob: -18.750001907348633
    9. 'Edge' → logprob: -19.625001907348633
    10. '
' → logprob: -19.750001907348633

Token 665: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004911500494927168
    2. '
' → logprob: -5.504911422729492
    3. ',' → logprob: -7.879911422729492
    4. 'count' → logprob: -8.879911422729492
    5. '       ' → logprob: -9.754911422729492
    6. '   ' → logprob: -10.004911422729492
    7. '            
' → logprob: -10.504911422729492
    8. '          ' → logprob: -10.754911422729492
    9. 'edges' → logprob: -10.754911422729492
    10. '               ' → logprob: -10.879911422729492

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016638736706227064
    2. 'count' → logprob: -7.376663684844971
    3. '
' → logprob: -8.626664161682129
    4. ' for' → logprob: -8.876664161682129
    5. 'for' → logprob: -8.876664161682129
    6. ',' → logprob: -9.126664161682129
    7. '            
' → logprob: -9.251664161682129
    8. '       ' → logprob: -9.501664161682129
    9. '   ' → logprob: -10.126664161682129
    10. ' and' → logprob: -10.126664161682129

Token 667: ' company' (ID: 3175)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4078476130962372
    2. ' count' → logprob: -1.7828476428985596
    3. 'edges' → logprob: -3.0328476428985596
    4. '           ' → logprob: -3.1578476428985596
    5. ' edges' → logprob: -3.1578476428985596
    6. 'chosen' → logprob: -4.4078474044799805
    7. 'selected' → logprob: -4.9078474044799805
    8. ' chosen' → logprob: -5.2828474044799805
    9. ' selected' → logprob: -5.5328474044799805
    10. 'used' → logprob: -6.5328474044799805

Token 668: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.132318377494812
    2. 'A' → logprob: -2.1323184967041016
    3. '_a' → logprob: -6.257318496704102
    4. '_edges' → logprob: -6.757318496704102
    5. '_' → logprob: -7.382318496704102
    6. '_count' → logprob: -7.507318496704102
    7. ' A' → logprob: -8.007318496704102
    8. '_counts' → logprob: -8.132318496704102
    9. 'a' → logprob: -9.632318496704102
    10. '```' → logprob: -9.632318496704102

Token 669: '_count' (ID: 7536)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.4746874272823334
    2. '_count' → logprob: -0.9746874570846558
    3. '_edge' → logprob: -7.474687576293945
    4. '_cnt' → logprob: -11.224687576293945
    5. 'count' → logprob: -11.474687576293945
    6. 'edges' → logprob: -11.849687576293945
    7. '_selected' → logprob: -12.224687576293945
    8. '_in' → logprob: -12.974687576293945
    9. '_counts' → logprob: -13.974687576293945
    10. ' =' → logprob: -14.099687576293945

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868793845176697
    2. '=' → logprob: -1.1368794441223145
    3. ' +=' → logprob: -11.886878967285156
    4. '+=' → logprob: -14.011878967285156
    5. '	' → logprob: -15.386878967285156
    6. '   ' → logprob: -15.636878967285156
    7. ' ' → logprob: -16.011878967285156
    8. ',' → logprob: -16.636878967285156
    9. ')' → logprob: -17.011878967285156
    10. '    ' → logprob: -17.261878967285156

Token 671: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.125158309936523
    4. '=' → logprob: -19.625158309936523
    5. '  ' → logprob: -20.250158309936523
    6. '۰' → logprob: -21.375158309936523
    7. '       ' → logprob: -21.625158309936523
    8. '           ' → logprob: -22.000158309936523
    9. ' ' → logprob: -22.500158309936523
    10. '```' → logprob: -22.625158309936523

Token 672: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.3750057220459
    4. '```' → logprob: -20.2500057220459
    5. 'sum' → logprob: -20.8750057220459
    6. '۰' → logprob: -21.2500057220459
    7. '=' → logprob: -21.3750057220459
    8. '000' → logprob: -21.7500057220459
    9. '  ' → logprob: -21.8750057220459
    10. '00' → logprob: -22.1875057220459

Token 673: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0542813241481781
    2. '
' → logprob: -3.804281234741211
    3. 'for' → logprob: -3.929281234741211
    4. ' for' → logprob: -4.679281234741211
    5. '            
' → logprob: -7.304281234741211
    6. '       ' → logprob: -7.929281234741211
    7. ',' → logprob: -9.304281234741211
    8. '   ' → logprob: -9.679281234741211
    9. '<|end|>' → logprob: -9.679281234741211
    10. '    
' → logprob: -9.804281234741211

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012642784975469112
    2. ' for' → logprob: -4.887642860412598
    3. 'for' → logprob: -5.387642860412598
    4. '       ' → logprob: -8.137642860412598
    5. '
' → logprob: -9.137642860412598
    6. '   ' → logprob: -10.512642860412598
    7. '            
' → logprob: -11.262642860412598
    8. '          ' → logprob: -13.387642860412598
    9. '         ' → logprob: -13.512642860412598
    10. '               ' → logprob: -13.512642860412598

Token 675: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22709697484970093
    2. ' for' → logprob: -1.7270970344543457
    3. '           ' → logprob: -3.7270970344543457
    4. '       ' → logprob: -7.602097034454346
    5. 'edges' (adapté à ' edges') → logprob: -7.852097034454346
    6. 'count' → logprob: -8.852096557617188
    7. 'selected' → logprob: -9.227096557617188
    8. ' edges' → logprob: -9.727096557617188
    9. '   ' → logprob: -10.102096557617188
    10. ' selected' → logprob: -11.602096557617188

Token 676: '_used' (ID: 67016)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7071971297264099
    2. '=' → logprob: -0.9571971297264099
    3. '_selected' → logprob: -2.5821971893310547
    4. '=[]' → logprob: -3.7071971893310547
    5. '_used' → logprob: -4.707197189331055
    6. '_added' → logprob: -5.332197189331055
    7. '_ch' → logprob: -6.207197189331055
    8. 'selected' → logprob: -6.582197189331055
    9. '.append' → logprob: -6.582197189331055
    10. 'chosen' → logprob: -6.832197189331055

Token 677: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3168148696422577
    2. '=' → logprob: -1.31681489944458
    3. '=[]' → logprob: -6.06681489944458
    4. '.append' → logprob: -6.81681489944458
    5. '=[]
' → logprob: -10.441814422607422
    6. '   ' → logprob: -10.691814422607422
    7. '.' → logprob: -10.691814422607422
    8. ':' → logprob: -11.316814422607422
    9. '.extend' → logprob: -11.816814422607422
    10. '[]' → logprob: -11.941814422607422

Token 678: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4742049276828766
    2. '[]' → logprob: -0.9742048978805542
    3. '[]
' → logprob: -9.099205017089844
    4. ' []' → logprob: -11.974205017089844
    5. '[]}' → logprob: -12.599205017089844
    6. ' ' → logprob: -12.724205017089844
    7. '[]

' → logprob: -13.349205017089844
    8. '[])' → logprob: -14.599205017089844
    9. '[' → logprob: -14.724205017089844
    10. '   ' → logprob: -15.224205017089844

Token 679: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5763470530509949
    2. '0' → logprob: -0.8263470530509949
    3. '[]
' → logprob: -7.8263468742370605
    4. '[]

' → logprob: -12.576347351074219
    5. ' []' → logprob: -13.201347351074219
    6. '[]}' → logprob: -13.451347351074219
    7. '[])' → logprob: -14.326347351074219
    8. '[' → logprob: -15.451347351074219
    9. ' ' → logprob: -15.826347351074219
    10. '[],' → logprob: -15.951347351074219

Token 680: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02810646779835224
    2. '
' → logprob: -3.778106451034546
    3. ' for' → logprob: -6.028106689453125
    4. 'for' → logprob: -6.653106689453125
    5. '       ' → logprob: -7.778106689453125
    6. '            
' → logprob: -8.528106689453125
    7. '   ' → logprob: -9.028106689453125
    8. ':' → logprob: -9.653106689453125
    9. '    
' → logprob: -9.778106689453125
    10. ':
' → logprob: -10.028106689453125

Token 681: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07191228866577148
    2. '
' → logprob: -3.6969122886657715
    3. '       ' → logprob: -4.0719122886657715
    4. ' for' → logprob: -4.3219122886657715
    5. '   ' → logprob: -4.9469122886657715
    6. 'for' → logprob: -5.6969122886657715
    7. '    
' → logprob: -7.3219122886657715
    8. '	       ' → logprob: -7.5719122886657715
    9. '  
' → logprob: -7.6969122886657715
    10. '	   ' → logprob: -8.32191276550293

Token 682: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2691512405872345
    2. ' for' → logprob: -2.269151210784912
    3. '           ' → logprob: -2.519151210784912
    4. '       ' → logprob: -3.019151210784912
    5. '   ' → logprob: -6.519151210784912
    6. 'while' → logprob: -7.269151210784912
    7. '               ' → logprob: -7.519151210784912
    8. '	for' → logprob: -8.26915168762207
    9. ' while' → logprob: -9.76915168762207
    10. '                   ' → logprob: -10.26915168762207

Token 683: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25203731656074524
    2. ' e' → logprob: -1.5020372867584229
    3. 'edge' → logprob: -9.252037048339844
    4. ' edge' → logprob: -11.502037048339844
    5. '	e' → logprob: -14.002037048339844
    6. ' ' → logprob: -15.252037048339844
    7. 'mod' → logprob: -15.377037048339844
    8. '```' → logprob: -15.877037048339844
    9. '   ' → logprob: -16.002037048339844
    10. 'ed' → logprob: -16.252037048339844

Token 684: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013320252764970064
    2. 'in' → logprob: -6.626331806182861
    3. '	in' → logprob: -12.87633228302002
    4. '<|end|>' → logprob: -14.12633228302002
    5. '.' → logprob: -14.37633228302002
    6. '<|end|>' → logprob: -14.62633228302002
    7. ' ' → logprob: -15.12633228302002
    8. '  ' → logprob: -15.37633228302002
    9. 'e' → logprob: -15.87633228302002
    10. '.u' → logprob: -16.126331329345703

Token 685: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00018232580623589456
    2. ' mod' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.625182151794434
    4. '	mod' → logprob: -13.875182151794434
    5. ' ' → logprob: -15.375182151794434
    6. 'modified' → logprob: -15.750182151794434
    7. '(mod' → logprob: -16.37518310546875
    8. 'modifiable' → logprob: -17.50018310546875
    9. '
' → logprob: -17.75018310546875
    10. '  ' → logprob: -17.87518310546875

Token 686: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0036155125126242638
    2. '_cost' → logprob: -5.628615379333496
    3. 'edges' → logprob: -11.878615379333496
    4. 'cost' → logprob: -12.628615379333496
    5. '.edges' → logprob: -13.003615379333496
    6. '_' → logprob: -13.253615379333496
    7. '```' → logprob: -15.378615379333496
    8. '_edge' → logprob: -15.628615379333496
    9. '.cost' → logprob: -16.253616333007812
    10. 'Edges' → logprob: -16.378616333007812

Token 687: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.335959792137146
    2. ':
' → logprob: -1.460959792137146
    3. ',' → logprob: -3.4609599113464355
    4. ' if' → logprob: -4.7109599113464355
    5. '               ' → logprob: -5.3359599113464355
    6. '<|end|>' → logprob: -5.8359599113464355
    7. '):
' → logprob: -6.5859599113464355
    8. ' in' → logprob: -6.9609599113464355
    9. '           ' → logprob: -7.3359599113464355
    10. 'if' → logprob: -7.9609599113464355

Token 688: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009414771921001375
    2. ' if' → logprob: -8.375941276550293
    3. '                
' → logprob: -8.375941276550293
    4. ',' → logprob: -9.125941276550293
    5. '       ' → logprob: -9.125941276550293
    6. '           ' → logprob: -9.625941276550293
    7. '<|end|>' → logprob: -9.875941276550293
    8. '            
' → logprob: -10.875941276550293
    9. '	           ' → logprob: -11.125941276550293
    10. '        
' → logprob: -11.125941276550293

Token 689: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038826365023851395
    2. 'if' (adapté à ' if') → logprob: -3.2888264656066895
    3. '               ' → logprob: -7.1638264656066895
    4. '	if' → logprob: -12.913825988769531
    5. '                ' → logprob: -13.038825988769531
    6. '   ' → logprob: -13.163825988769531
    7. '                   ' → logprob: -13.538825988769531
    8. '           ' → logprob: -14.663825988769531
    9. ' ' → logprob: -15.038825988769531
    10. '	           ' → logprob: -15.038825988769531

Token 690: ' uf' (ID: 35772)
  Prédit: ' uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.20026575028896332
    2. 'uf' → logprob: -1.8252657651901245
    3. ' not' → logprob: -4.325265884399414
    4. 'not' → logprob: -5.700265884399414
    5. 'edges' → logprob: -6.200265884399414
    6. ' edges' → logprob: -6.450265884399414
    7. '.uf' → logprob: -10.075265884399414
    8. 'e' → logprob: -10.700265884399414
    9. 'ufs' → logprob: -11.075265884399414
    10. ' ' → logprob: -12.075265884399414

Token 691: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.029804764315485954
    2. '.find' → logprob: -3.7798047065734863
    3. '.' → logprob: -5.404804706573486
    4. '.can' → logprob: -6.904804706573486
    5. '.un' → logprob: -7.279804706573486
    6. '.merge' → logprob: -8.654805183410645
    7. '.is' → logprob: -10.279805183410645
    8. '.connected' → logprob: -10.279805183410645
    9. '.join' → logprob: -10.904805183410645
    10. '.try' → logprob: -11.154805183410645

Token 692: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.625003814697266
    3. '(
' → logprob: -14.500003814697266
    4. ' (' → logprob: -15.125003814697266
    5. '((' → logprob: -16.625003814697266
    6. '(u' → logprob: -17.875003814697266
    7. '[e' → logprob: -19.250003814697266
    8. '()' → logprob: -19.500003814697266
    9. '```' → logprob: -19.500003814697266
    10. 'e' → logprob: -19.625003814697266

Token 693: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.1218239888548851
    2. '.e' → logprob: -2.246824026107788
    3. 'u' → logprob: -5.121823787689209
    4. '.' → logprob: -6.621823787689209
    5. '(e' → logprob: -7.246823787689209
    6. '(u' → logprob: -7.746823787689209
    7. 'e' → logprob: -7.746823787689209
    8. ' .' → logprob: -10.621824264526367
    9. ',e' → logprob: -11.496824264526367
    10. ').' → logprob: -11.621824264526367

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022189407900441438
    2. ',e' → logprob: -8.625222206115723
    3. ' ,' → logprob: -10.125222206115723
    4. ',
' → logprob: -13.625222206115723
    5. 'e' → logprob: -14.000222206115723
    6. '               ' → logprob: -16.625221252441406
    7. '                   ' → logprob: -16.750221252441406
    8. ' e' → logprob: -16.875221252441406
    9. '(),' → logprob: -17.000221252441406
    10. '           ' → logprob: -17.875221252441406

Token 695: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004080897197127342
    2. ' e' → logprob: -5.504080772399902
    3. '               ' → logprob: -13.379080772399902
    4. '                   ' → logprob: -14.504080772399902
    5. '	e' → logprob: -15.879080772399902
    6. '           ' → logprob: -16.37908172607422
    7. '   ' → logprob: -16.37908172607422
    8. '                ' → logprob: -17.62908172607422
    9. '              ' → logprob: -17.62908172607422
    10. '
' → logprob: -17.75408172607422

Token 696: '.v' (ID: 5520)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003017399227246642
    2. ',e' → logprob: -5.878017425537109
    3. ' ,' → logprob: -9.00301742553711
    4. ',u' → logprob: -9.87801742553711
    5. ',v' → logprob: -10.75301742553711
    6. ',
' → logprob: -11.37801742553711
    7. 'e' → logprob: -12.62801742553711
    8. '_,' → logprob: -14.87801742553711
    9. ',self' → logprob: -15.12801742553711
    10. ')' → logprob: -15.87801742553711

Token 697: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06200532615184784
    2. '):
' → logprob: -2.8120052814483643
    3. ')' → logprob: -10.937005043029785
    4. '):
' → logprob: -11.687005043029785
    5. '):

' → logprob: -12.312005043029785
    6. ' ):' → logprob: -13.187005043029785
    7. '               ' → logprob: -13.312005043029785
    8. '                   ' → logprob: -13.562005043029785
    9. ':' → logprob: -14.187005043029785
    10. ''):' → logprob: -15.187005043029785

Token 698: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00024358915106859058
    2. '               ' → logprob: -9.000243186950684
    3. ':
' → logprob: -10.250243186950684
    4. '                       ' → logprob: -10.500243186950684
    5. ' total' → logprob: -11.500243186950684
    6. '           ' → logprob: -11.625243186950684
    7. ':' → logprob: -11.875243186950684
    8. '                    
' → logprob: -12.000243186950684
    9. 'total' → logprob: -12.375243186950684
    10. ',' → logprob: -12.625243186950684

Token 699: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6209161877632141
    2. 'total' (adapté à ' total') → logprob: -0.8709161877632141
    3. '                   ' → logprob: -3.3709161281585693
    4. '               ' → logprob: -5.245916366577148
    5. ' edges' → logprob: -6.370916366577148
    6. 'edges' → logprob: -6.495916366577148
    7. '   ' → logprob: -7.870916366577148
    8. '           ' → logprob: -8.245916366577148
    9. '                       ' → logprob: -8.370916366577148
    10. '       ' → logprob: -8.620916366577148

Token 700: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.652451464906335e-05
    2. 'cost' → logprob: -11.250016212463379
    3. 'Cost' → logprob: -12.875016212463379
    4. ' cost' → logprob: -14.875016212463379
    5. '_COST' → logprob: -15.250016212463379
    6. '_code' → logprob: -15.750016212463379
    7. '_used' → logprob: -16.750017166137695
    8. '-cost' → logprob: -17.250017166137695
    9. '.cost' → logprob: -17.875017166137695
    10. '_tokens' → logprob: -18.250017166137695

Token 701: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07891369611024857
    2. '+=' → logprob: -2.578913688659668
    3. '+' → logprob: -11.203913688659668
    4. '    ' → logprob: -12.203913688659668
    5. '=' → logprob: -13.703913688659668
    6. '            ' → logprob: -13.828913688659668
    7. ']+=' → logprob: -13.828913688659668
    8. ' +' → logprob: -15.078913688659668
    9. '   ' → logprob: -15.078913688659668
    10. ' ' → logprob: -15.328913688659668

Token 702: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00043162284418940544
    2. ' e' → logprob: -7.750431537628174
    3. '(e' → logprob: -14.500432014465332
    4. '
' → logprob: -15.625432014465332
    5. '1' → logprob: -15.875432014465332
    6. 'int' → logprob: -17.875431060791016
    7. '	e' → logprob: -17.875431060791016
    8. '0' → logprob: -18.000431060791016
    9. '   ' → logprob: -18.250431060791016
    10. '_e' → logprob: -18.625431060791016

Token 703: '.cost' (ID: 80655)
  Prédit: '.mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.001416665269061923
    2. '.cost' → logprob: -6.6264166831970215
    3. '.real' → logprob: -10.001416206359863
    4. 'mod' → logprob: -10.751416206359863
    5. '.' → logprob: -11.126416206359863
    6. ' .' → logprob: -13.251416206359863
    7. '.orig' → logprob: -13.626416206359863
    8. '.actual' → logprob: -14.001416206359863
    9. '.modified' → logprob: -14.001416206359863
    10. '.original' → logprob: -14.251416206359863

Token 704: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0035972176119685173
    2. '
' → logprob: -6.628597259521484
    3. '           ' → logprob: -6.878597259521484
    4. '               ' → logprob: -7.253597259521484
    5. '                    
' → logprob: -8.628597259521484
    6. '       ' → logprob: -9.253597259521484
    7. '<|end|>' → logprob: -9.503597259521484
    8. ',' → logprob: -10.753597259521484
    9. '                    ' → logprob: -11.003597259521484
    10. '   ' → logprob: -11.253597259521484

Token 705: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003416770603507757
    2. '               ' → logprob: -6.753416538238525
    3. '           ' → logprob: -7.003416538238525
    4. '
' → logprob: -7.503416538238525
    5. '<|end|>' → logprob: -8.253417015075684
    6. '                    
' → logprob: -8.378417015075684
    7. '       ' → logprob: -9.378417015075684
    8. ',' → logprob: -10.628417015075684
    9. '                    ' → logprob: -10.753417015075684
    10. ' 
' → logprob: -11.128417015075684

Token 706: ' original' (ID: 4756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6426117420196533
    2. ' ' → logprob: -1.0176117420196533
    3. '1' → logprob: -3.6426117420196533
    4. '0' → logprob: -3.8926117420196533
    5. ' e' → logprob: -3.8926117420196533
    6. ' 
' → logprob: -4.017611503601074
    7. '<|end|>' → logprob: -5.017611503601074
    8. ')' → logprob: -5.142611503601074
    9. ' (' → logprob: -5.267611503601074
    10. '
' → logprob: -6.517611503601074

Token 707: ' cost' (ID: 3097)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008070514537394047
    2. '
' → logprob: -5.008070468902588
    3. '               ' → logprob: -7.758070468902588
    4. '<|end|>' → logprob: -7.883070468902588
    5. '                    
' → logprob: -8.383070945739746
    6. '           ' → logprob: -8.508070945739746
    7. ',' → logprob: -10.758070945739746
    8. '       ' → logprob: -10.883070945739746
    9. '                    ' → logprob: -11.508070945739746
    10. '<|end|>' → logprob: -11.633070945739746

Token 709: ' not' (ID: 625)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01931138150393963
    2. '
' → logprob: -5.019311428070068
    3. 'e' → logprob: -5.519311428070068
    4. ' e' → logprob: -5.769311428070068
    5. '               ' → logprob: -6.019311428070068
    6. ' not' → logprob: -7.144311428070068
    7. '           ' → logprob: -8.01931095123291
    8. '                    
' → logprob: -8.39431095123291
    9. ' ' → logprob: -8.51931095123291
    10. ')' → logprob: -8.76931095123291

Token 710: ' mod' (ID: 1812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.016075192019343376
    2. ' e' → logprob: -4.141075134277344
    3. 'mod' → logprob: -10.766075134277344
    4. '0' → logprob: -11.516075134277344
    5. '
' → logprob: -12.141075134277344
    6. ' mod' → logprob: -13.266075134277344
    7. '(e' → logprob: -14.516075134277344
    8. 'modified' → logprob: -14.641075134277344
    9. '+' → logprob: -14.891075134277344
    10. ' ' → logprob: -15.141075134277344

Token 711: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.47495681833243e-05
    2. '                   ' → logprob: -11.750024795532227
    3. 'cost' → logprob: -12.375024795532227
    4. '               ' → logprob: -12.375024795532227
    5. '_' → logprob: -12.625024795532227
    6. ')' → logprob: -13.875024795532227
    7. '```' → logprob: -13.875024795532227
    8. '_code' → logprob: -14.000024795532227
    9. '_COST' → logprob: -14.125024795532227
    10. ' cost' → logprob: -14.500024795532227

Token 712: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006684751133434474
    2. '               ' → logprob: -7.625668525695801
    3. '           ' → logprob: -9.2506685256958
    4. '
' → logprob: -10.5006685256958
    5. '       ' → logprob: -11.3756685256958
    6. '                    
' → logprob: -11.5006685256958
    7. '<|end|>' → logprob: -11.6256685256958
    8. ',' → logprob: -11.7506685256958
    9. '                    ' → logprob: -12.2506685256958
    10. '                       ' → logprob: -12.3756685256958

Token 713: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.44312788406387e-05
    2. '               ' → logprob: -10.625054359436035
    3. '           ' → logprob: -11.250054359436035
    4. '                    
' → logprob: -12.000054359436035
    5. '
' → logprob: -13.125054359436035
    6. '       ' → logprob: -13.125054359436035
    7. '<|end|>' → logprob: -13.375054359436035
    8. '                    ' → logprob: -13.500054359436035
    9. '```' → logprob: -13.625054359436035
    10. '                       ' → logprob: -14.250054359436035

Token 714: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42989927530288696
    2. '                   ' → logprob: -1.0548992156982422
    3. '               ' → logprob: -7.304899215698242
    4. 'edges' → logprob: -7.804899215698242
    5. '           ' → logprob: -9.429899215698242
    6. ' if' → logprob: -11.179899215698242
    7. '       ' → logprob: -12.054899215698242
    8. '                       ' → logprob: -12.429899215698242
    9. 'edge' → logprob: -12.554899215698242
    10. '```' → logprob: -12.554899215698242

Token 715: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10021152347326279
    2. ' e' → logprob: -2.3502116203308105
    3. '                   ' → logprob: -12.725211143493652
    4. '   ' → logprob: -14.350211143493652
    5. '               ' → logprob: -14.850211143493652
    6. '           ' → logprob: -15.100211143493652
    7. ' ' → logprob: -15.600211143493652
    8. '	e' → logprob: -15.725211143493652
    9. '                       ' → logprob: -15.850211143493652
    10. '    ' → logprob: -16.60021209716797

Token 716: '.company' (ID: 48225)
  Prédit: '.company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.0005625653429888189
    2. '.' → logprob: -7.62556266784668
    3. ' .' → logprob: -9.62556266784668
    4. 'company' → logprob: -12.12556266784668
    5. '.comp' → logprob: -14.00056266784668
    6. '   ' → logprob: -14.37556266784668
    7. '.com' → logprob: -15.12556266784668
    8. '.user' → logprob: -16.00056266784668
    9. ' company' → logprob: -16.12556266784668
    10. '```' → logprob: -16.12556266784668

Token 717: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038479771465063095
    2. '==' → logprob: -3.288479804992676
    3. '=='' → logprob: -7.788479804992676
    4. ' =='' → logprob: -10.788479804992676
    5. '=="' → logprob: -13.413479804992676
    6. ' ' → logprob: -14.913479804992676
    7. '==
' → logprob: -15.538479804992676
    8. '    ' → logprob: -15.788479804992676
    9. '=' → logprob: -16.03847885131836
    10. '   ' → logprob: -16.16347885131836

Token 718: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6382444500923157
    2. ''A' → logprob: -1.138244390487671
    3. ' '' → logprob: -1.888244390487671
    4. 'A' → logprob: -10.26324462890625
    5. '"A' → logprob: -12.01324462890625
    6. ' A' → logprob: -12.13824462890625
    7. ' ' → logprob: -12.38824462890625
    8. '"' → logprob: -12.76324462890625
    9. ''S' → logprob: -12.88824462890625
    10. '   ' → logprob: -13.63824462890625

Token 719: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.048611659556627274
    2. 'A' → logprob: -3.048611640930176
    3. ''' → logprob: -11.423611640930176
    4. '"A' → logprob: -12.173611640930176
    5. '’A' → logprob: -12.423611640930176
    6. ' '' → logprob: -13.548611640930176
    7. '('' → logprob: -14.548611640930176
    8. ''S' → logprob: -14.673611640930176
    9. ' A' → logprob: -14.798611640930176
    10. '	A' → logprob: -14.923611640930176

Token 720: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16674022376537323
    2. ':' → logprob: -3.0417401790618896
    3. '):
' → logprob: -3.1667401790618896
    4. '                       ' → logprob: -3.4167401790618896
    5. '                   ' → logprob: -3.9167401790618896
    6. ''):
' → logprob: -5.416740417480469
    7. '':
' → logprob: -5.541740417480469
    8. '<|end|>' → logprob: -7.666740417480469
    9. '':' → logprob: -7.791740417480469
    10. '               ' → logprob: -8.041740417480469

Token 721: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07644322514533997
    2. ' company' → logprob: -2.7014431953430176
    3. 'company' → logprob: -5.076443195343018
    4. '                   ' → logprob: -8.451443672180176
    5. '               ' → logprob: -11.951443672180176
    6. '   ' → logprob: -12.076443672180176
    7. '       ' → logprob: -12.201443672180176
    8. '                        
' → logprob: -12.701443672180176
    9. '					' → logprob: -13.326443672180176
    10. '                           ' → logprob: -13.326443672180176

Token 722: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' (adapté à ' company') → logprob: -0.12707404792308807
    2. ' company' → logprob: -2.1270740032196045
    3. '   ' → logprob: -9.627074241638184
    4. '                       ' → logprob: -10.252074241638184
    5. '                   ' → logprob: -10.377074241638184
    6. '                           ' → logprob: -11.502074241638184
    7. '               ' → logprob: -13.502074241638184
    8. ' ' → logprob: -14.752074241638184
    9. '                               ' → logprob: -14.752074241638184
    10. '1' → logprob: -14.877074241638184

Token 723: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -7.107425062713446e-06
    2. 'A' → logprob: -11.875006675720215
    3. '```' → logprob: -17.37500762939453
    4. '`' → logprob: -18.62500762939453
    5. '\' → logprob: -18.87500762939453
    6. '	A' → logprob: -19.37500762939453
    7. '_' → logprob: -19.37500762939453
    8. '   ' → logprob: -19.50000762939453
    9. ' A' → logprob: -20.12500762939453
    10. '       ' → logprob: -20.37500762939453

Token 724: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00012368128227535635
    2. 'count' → logprob: -9.000123977661133
    3. '	count' → logprob: -16.625123977661133
    4. '
' → logprob: -17.250123977661133
    5. ' count' → logprob: -17.375123977661133
    6. '_cost' → logprob: -17.500123977661133
    7. '+=' → logprob: -17.750123977661133
    8. 'Count' → logprob: -18.000123977661133
    9. '_counts' → logprob: -18.125123977661133
    10. '```' → logprob: -18.250123977661133

Token 725: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023251881822943687
    2. ' +=' → logprob: -3.77325177192688
    3. ']+=' → logprob: -12.1482515335083
    4. '+' → logprob: -14.5232515335083
    5. '           ' → logprob: -15.3982515335083
    6. '                   ' → logprob: -16.148252487182617
    7. '               ' → logprob: -16.523252487182617
    8. '                       ' → logprob: -16.773252487182617
    9. '            ' → logprob: -17.398252487182617
    10. '                           ' → logprob: -17.398252487182617

Token 726: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -21.00000762939453
    4. '```' → logprob: -23.25000762939453
    5. '           ' → logprob: -23.37500762939453
    6. '+' → logprob: -23.87500762939453
    7. ' ' → logprob: -24.62500762939453
    8. '                   ' → logprob: -24.75000762939453
    9. '
' → logprob: -25.25000762939453
    10. '  ' → logprob: -25.25000762939453

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -22.0
    5. '
' → logprob: -22.75
    6. '2' → logprob: -23.875
    7. '۱' → logprob: -24.25
    8. '0' → logprob: -24.375
    9. '           ' → logprob: -24.625
    10. '+' → logprob: -24.6875

Token 728: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005088122095912695
    2. '                       ' → logprob: -5.3800883293151855
    3. '               ' → logprob: -8.130087852478027
    4. '           ' → logprob: -9.755087852478027
    5. 'edges' → logprob: -10.255087852478027
    6. ',' → logprob: -11.130087852478027
    7. ' edges' → logprob: -11.130087852478027
    8. '       ' → logprob: -11.130087852478027
    9. '
' → logprob: -11.255087852478027
    10. '   ' → logprob: -12.130087852478027

Token 729: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007080250070430338
    2. '                       ' → logprob: -7.500708103179932
    3. '               ' → logprob: -9.000707626342773
    4. '           ' → logprob: -11.250707626342773
    5. '       ' → logprob: -11.875707626342773
    6. '   ' → logprob: -12.625707626342773
    7. '                  ' → logprob: -13.125707626342773
    8. '
' → logprob: -13.625707626342773
    9. '                    ' → logprob: -13.750707626342773
    10. '<|end|>' → logprob: -13.750707626342773

Token 730: ' edges' (ID: 22569)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012611840851604939
    2. 'edges' (adapté à ' edges') → logprob: -4.7626118659973145
    3. '               ' → logprob: -5.6376118659973145
    4. '                       ' → logprob: -9.012611389160156
    5. '           ' → logprob: -9.137611389160156
    6. ' edges' → logprob: -9.512611389160156
    7. '   ' → logprob: -9.512611389160156
    8. '       ' → logprob: -10.637611389160156
    9. '                  ' → logprob: -11.512611389160156
    10. '                    ' → logprob: -12.262611389160156

Token 731: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -2.5107177862082608e-05
    2. 'used' → logprob: -11.500024795532227
    3. '_USED' → logprob: -12.000024795532227
    4. 'Used' → logprob: -12.500024795532227
    5. ' +=' → logprob: -13.875024795532227
    6. '_' → logprob: -14.500024795532227
    7. '_needed' → logprob: -14.500024795532227
    8. '+=' → logprob: -14.875024795532227
    9. ' used' → logprob: -14.875024795532227
    10. 's' → logprob: -15.125024795532227

Token 732: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759422779083252
    2. ' +=' → logprob: -0.8259422779083252
    3. '+' → logprob: -13.200942039489746
    4. '   ' → logprob: -14.575942039489746
    5. '=' → logprob: -15.450942039489746
    6. '==' → logprob: -15.575942039489746
    7. ']+=' → logprob: -16.825942993164062
    8. '```' → logprob: -17.700942993164062
    9. '    ' → logprob: -17.825942993164062
    10. '           ' → logprob: -17.950942993164062

Token 733: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.250059127807617
    4. '  ' → logprob: -20.250059127807617
    5. '```' → logprob: -20.500059127807617
    6. ' ' → logprob: -21.500059127807617
    7. '       ' → logprob: -22.000059127807617
    8. '１' → logprob: -22.500059127807617
    9. '`' → logprob: -22.687559127807617
    10. '۱' → logprob: -22.937559127807617

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -20.625
    5. '
' → logprob: -21.625
    6. '  ' → logprob: -21.75
    7. '' → logprob: -22.375
    8. '１' → logprob: -22.375
    9. '۱' → logprob: -22.375
    10. '       ' → logprob: -22.5625

Token 735: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25512006878852844
    2. '               ' → logprob: -1.505120038986206
    3. '
' → logprob: -6.005120277404785
    4. '           ' → logprob: -7.380120277404785
    5. '                       ' → logprob: -11.130120277404785
    6. '<|end|>' → logprob: -11.505120277404785
    7. '		           ' → logprob: -11.630120277404785
    8. '   ' → logprob: -12.130120277404785
    9. '                ' → logprob: -12.130120277404785
    10. '                    
' → logprob: -12.255120277404785

Token 736: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0779530480504036
    2. '               ' → logprob: -2.7029531002044678
    3. '
' → logprob: -5.327952861785889
    4. '           ' → logprob: -5.827952861785889
    5. '       ' → logprob: -9.702953338623047
    6. '   ' → logprob: -10.327953338623047
    7. '
' → logprob: -10.952953338623047
    8. '		           ' → logprob: -11.452953338623047
    9. '                       ' → logprob: -11.702953338623047
    10. '	           ' → logprob: -11.827953338623047

Token 737: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038840584456920624
    2. '                   ' → logprob: -3.2888405323028564
    3. ' if' → logprob: -7.5388407707214355
    4. '               ' → logprob: -8.288840293884277
    5. '           ' → logprob: -11.288840293884277
    6. '   ' → logprob: -13.663840293884277
    7. '                       ' → logprob: -14.163840293884277
    8. '	if' → logprob: -15.038840293884277
    9. '       ' → logprob: -15.163840293884277
    10. '				' → logprob: -16.038841247558594

Token 738: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.008615872822701931
    2. ' edges' → logprob: -4.758615970611572
    3. '   ' → logprob: -13.883615493774414
    4. '       ' → logprob: -16.133615493774414
    5. '               ' → logprob: -16.133615493774414
    6. '           ' → logprob: -16.133615493774414
    7. '                   ' → logprob: -17.008615493774414
    8. '(edges' → logprob: -17.258615493774414
    9. 'edge' → logprob: -17.883615493774414
    10. ' ' → logprob: -18.633615493774414

Token 739: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0030106266494840384
    2. ' ==' → logprob: -6.5030107498168945
    3. '==' → logprob: -7.0030107498168945
    4. '_' → logprob: -7.5030107498168945
    5. '_needed' → logprob: -11.503010749816895
    6. '_USED' → logprob: -12.003010749816895
    7. '_edges' → logprob: -12.128010749816895
    8. '_added' → logprob: -12.253010749816895
    9. 'used' → logprob: -12.253010749816895
    10. '   ' → logprob: -12.503010749816895

Token 740: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759507417678833
    2. '==' → logprob: -0.8259507417678833
    3. '==
' → logprob: -12.575950622558594
    4. '=' → logprob: -13.075950622558594
    5. '>=' → logprob: -13.325950622558594
    6. '===' → logprob: -13.450950622558594
    7. ' ==
' → logprob: -14.200950622558594
    8. ' >=' → logprob: -14.575950622558594
    9. '()==' → logprob: -14.950950622558594
    10. ')==' → logprob: -15.200950622558594

Token 741: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.541112427134067e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -15.375075340270996
    4. '   ' → logprob: -15.500075340270996
    5. '
' → logprob: -16.750076293945312
    6. '[self' → logprob: -17.375076293945312
    7. '	self' → logprob: -18.000076293945312
    8. '           ' → logprob: -18.125076293945312
    9. '       ' → logprob: -18.250076293945312
    10. '=self' → logprob: -19.750076293945312

Token 742: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.727905979962088e-05
    2. 'n' → logprob: -10.00004768371582
    3. '.' → logprob: -13.37504768371582
    4. '-' → logprob: -16.12504768371582
    5. '	n' → logprob: -16.62504768371582
    6. ' .' → logprob: -16.87504768371582
    7. '   ' → logprob: -17.62504768371582
    8. 'self' → logprob: -17.75004768371582
    9. '```' → logprob: -17.75004768371582
    10. '
' → logprob: -18.75004768371582

Token 743: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132803440093994
    2. ' -' → logprob: -1.3132803440093994
    3. '   ' → logprob: -10.93828010559082
    4. ' ' → logprob: -14.43828010559082
    5. '  ' → logprob: -16.56328010559082
    6. '       ' → logprob: -16.81328010559082
    7. '           ' → logprob: -16.93828010559082
    8. ' ' → logprob: -16.93828010559082
    9. '–' → logprob: -17.31328010559082
    10. '
' → logprob: -17.56328010559082

Token 744: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. '```' → logprob: -17.625003814697266
    5. '
' → logprob: -18.500003814697266
    6. '<|end|>' → logprob: -19.000003814697266
    7. '۱' → logprob: -19.625003814697266
    8. 'from' → logprob: -20.062503814697266
    9. '       ' → logprob: -20.437503814697266
    10. '           ' → logprob: -20.687503814697266

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.125
    5. '
' → logprob: -18.625
    6. '2' → logprob: -20.125
    7. '۱' → logprob: -20.5
    8. '

' → logprob: -20.8125
    9. '﻿' → logprob: -20.9375
    10. 'from' → logprob: -21.0

Token 746: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14127208292484283
    2. ':
' → logprob: -2.5162720680236816
    3. '                       ' → logprob: -3.0162720680236816
    4. '                   ' → logprob: -6.266272068023682
    5. '               ' → logprob: -9.76627254486084
    6. '           ' → logprob: -11.51627254486084
    7. ':
' → logprob: -11.51627254486084
    8. '       ' → logprob: -11.89127254486084
    9. '                           ' → logprob: -12.14127254486084
    10. ':return' → logprob: -12.39127254486084

Token 747: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009885076433420181
    2. ':' → logprob: -7.500988483428955
    3. '                   ' → logprob: -7.875988483428955
    4. 'break' → logprob: -11.125988960266113
    5. ':
' → logprob: -11.250988960266113
    6. '               ' → logprob: -11.500988960266113
    7. '                           ' → logprob: -11.875988960266113
    8. '           ' → logprob: -12.875988960266113
    9. '                      ' → logprob: -13.000988960266113
    10. '					' → logprob: -13.125988960266113

Token 748: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3877013921737671
    2. '                       ' → logprob: -1.137701392173767
    3. ' break' → logprob: -7.262701511383057
    4. '	break' → logprob: -9.637701034545898
    5. '                   ' → logprob: -10.262701034545898
    6. '               ' → logprob: -11.637701034545898
    7. '					' → logprob: -12.012701034545898
    8. '                           ' → logprob: -12.637701034545898
    9. 'return' → logprob: -13.012701034545898
    10. '           ' → logprob: -13.012701034545898

Token 749: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027252456173300743
    2. '           ' → logprob: -3.777252435684204
    3. '       ' → logprob: -6.402252674102783
    4. '<|end|>' → logprob: -6.652252674102783
    5. 'return' → logprob: -7.902252674102783
    6. '        
' → logprob: -9.152252197265625
    7. '            
' → logprob: -9.277252197265625
    8. '    
' → logprob: -9.402252197265625
    9. ' return' → logprob: -9.527252197265625
    10. '  
' → logprob: -9.777252197265625

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5631363987922668
    2. '       ' → logprob: -0.9381363987922668
    3. '
' → logprob: -3.313136339187622
    4. '<|end|>' → logprob: -6.563136577606201
    5. '        
' → logprob: -7.813136577606201
    6. 'return' → logprob: -8.438136100769043
    7. '```' → logprob: -8.438136100769043
    8. '	       ' → logprob: -8.563136100769043
    9. '		' → logprob: -9.563136100769043
    10. '            
' → logprob: -9.813136100769043

Token 751: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8089532256126404
    2. '       ' → logprob: -1.0589532852172852
    3. '           ' → logprob: -1.6839532852172852
    4. 'return' → logprob: -3.933953285217285
    5. ' return' → logprob: -7.058953285217285
    6. '<|end|>' → logprob: -7.683953285217285
    7. '        
' → logprob: -7.933953285217285
    8. '   ' → logprob: -8.308953285217285
    9. '```' → logprob: -8.433953285217285
    10. '    
' → logprob: -8.808953285217285

Token 752: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.15791955590248108
    2. 'edges' → logprob: -2.5329196453094482
    3. ' company' → logprob: -3.4079196453094482
    4. ' uf' → logprob: -3.9079196453094482
    5. 'company' → logprob: -4.657919406890869
    6. 'uf' → logprob: -5.782919406890869
    7. ' ' → logprob: -8.282919883728027
    8. ' union' → logprob: -8.970419883728027
    9. '   ' → logprob: -9.345419883728027
    10. '  ' → logprob: -9.845419883728027

Token 753: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.049755782238208e-05
    2. 'used' → logprob: -10.00005054473877
    3. '_edges' → logprob: -13.25005054473877
    4. '_USED' → logprob: -14.25005054473877
    5. 's' → logprob: -14.50005054473877
    6. '_' → logprob: -14.75005054473877
    7. '.used' → logprob: -14.75005054473877
    8. '```' → logprob: -15.00005054473877
    9. 'Used' → logprob: -15.25005054473877
    10. '   ' → logprob: -15.87505054473877

Token 754: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5121221542358398
    2. '!=' → logprob: -1.1371221542358398
    3. '==' → logprob: -3.13712215423584
    4. ' !=' → logprob: -3.51212215423584
    5. ' <' → logprob: -5.38712215423584
    6. ' ==' → logprob: -6.76212215423584
    7. '<int' → logprob: -7.38712215423584
    8. '<|end|>' → logprob: -9.76212215423584
    9. '<len' → logprob: -9.88712215423584
    10. '<>' → logprob: -10.51212215423584

Token 755: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10114672034978867
    2. ' self' → logprob: -2.351146697998047
    3. '           ' → logprob: -6.976146697998047
    4. '               ' → logprob: -13.226146697998047
    5. '   ' → logprob: -13.851146697998047
    6. '(self' → logprob: -14.101146697998047
    7. ' ' → logprob: -14.726146697998047
    8. '                   ' → logprob: -15.101146697998047
    9. '0' → logprob: -15.476146697998047
    10. '	self' → logprob: -15.601146697998047

Token 756: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.010985095985233784
    2. '-' → logprob: -4.885984897613525
    3. ' -' → logprob: -6.135984897613525
    4. '.' → logprob: -7.010984897613525
    5. 'n' → logprob: -8.760985374450684
    6. ' .' → logprob: -9.385985374450684
    7. '-n' → logprob: -10.385985374450684
    8. '   ' → logprob: -12.510985374450684
    9. '.user' → logprob: -12.510985374450684
    10. ' ' → logprob: -12.635985374450684

Token 757: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0619741789996624
    2. '-' → logprob: -2.811974287033081
    3. '           ' → logprob: -12.18697452545166
    4. '   ' → logprob: -14.81197452545166
    5. ' ' → logprob: -14.93697452545166
    6. '       ' → logprob: -15.06197452545166
    7. ':' → logprob: -15.43697452545166
    8. '               ' → logprob: -15.93697452545166
    9. ':
' → logprob: -16.936973571777344
    10. '–' → logprob: -17.061973571777344

Token 758: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.803360495017841e-05
    2. ' ' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.500078201293945
    4. '           ' → logprob: -14.000078201293945
    5. '```' → logprob: -15.000078201293945
    6. '       ' → logprob: -15.500078201293945
    7. '<|end|>' → logprob: -16.625078201293945
    8. '
' → logprob: -16.750078201293945
    9. '                   ' → logprob: -17.500078201293945
    10. '               ' → logprob: -18.000078201293945

Token 759: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '           ' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -17.625001907348633
    7. '
' → logprob: -17.750001907348633
    8. '       ' → logprob: -18.125001907348633
    9. '۱' → logprob: -19.750001907348633
    10. '2' → logprob: -19.875001907348633

Token 760: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07680516690015793
    2. ':' → logprob: -2.7018051147460938
    3. '           ' → logprob: -5.201805114746094
    4. ':return' → logprob: -6.701805114746094
    5. '               ' → logprob: -9.951805114746094
    6. ' or' → logprob: -10.576805114746094
    7. ':
' → logprob: -11.701805114746094
    8. '):
' → logprob: -12.076805114746094
    9. '       ' → logprob: -12.201805114746094
    10. 'return' → logprob: -12.201805114746094

Token 761: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08928708732128143
    2. '               ' → logprob: -2.464287042617798
    3. 'return' → logprob: -8.839286804199219
    4. ' return' → logprob: -9.464286804199219
    5. ':
' → logprob: -9.839286804199219
    6. ':' → logprob: -10.589286804199219
    7. '       ' → logprob: -11.214286804199219
    8. ':return' → logprob: -11.714286804199219
    9. '
' → logprob: -12.089286804199219
    10. '   ' → logprob: -12.589286804199219

Token 762: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7945594787597656
    2. '           ' → logprob: -1.2945594787597656
    3. ' return' → logprob: -1.2945594787597656
    4. '               ' → logprob: -9.044559478759766
    5. '   ' → logprob: -10.294559478759766
    6. '{return' → logprob: -11.544559478759766
    7. '       ' → logprob: -11.794559478759766
    8. '	return' → logprob: -12.669559478759766
    9. ':return' → logprob: -13.294559478759766
    10. '
' → logprob: -13.419559478759766

Token 763: ' Not' (ID: 4037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35425224900245667
    2. ' return' → logprob: -1.3542522192001343
    3. '           ' → logprob: -3.229252338409424
    4. '               ' → logprob: -7.604252338409424
    5. '   ' → logprob: -10.229251861572266
    6. '       ' → logprob: -10.854251861572266
    7. '#' → logprob: -12.479251861572266
    8. 'Return' → logprob: -12.729251861572266
    9. '{return' → logprob: -12.854251861572266
    10. '                   ' → logprob: -13.229251861572266

Token 764: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.19371217489242554
    2. ' possible' → logprob: -2.5687122344970703
    3. 'connected' → logprob: -2.6937122344970703
    4. 'possible' → logprob: -4.56871223449707
    5. ' spanning' → logprob: -5.06871223449707
    6. ' feasible' → logprob: -5.19371223449707
    7. ' enough' → logprob: -5.94371223449707
    8. ' all' → logprob: -6.19371223449707
    9. 'connect' → logprob: -6.31871223449707
    10. '_connected' → logprob: -7.19371223449707

Token 765: ' MST' (ID: 123058)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5891104936599731
    2. ':
' → logprob: -1.0891104936599731
    3. 'return' → logprob: -3.4641103744506836
    4. ' return' → logprob: -3.5891103744506836
    5. '               ' → logprob: -3.7141103744506836
    6. ':' → logprob: -4.214110374450684
    7. '
' → logprob: -4.964110374450684
    8. ':return' → logprob: -6.714110374450684
    9. ',' → logprob: -6.964110374450684
    10. '       ' → logprob: -7.589110374450684

Token 766: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5449048280715942
    2. ':
' → logprob: -0.9199048280715942
    3. ':' → logprob: -4.669904708862305
    4. '               ' → logprob: -5.294904708862305
    5. ' return' → logprob: -5.794904708862305
    6. ':return' → logprob: -6.294904708862305
    7. 'return' → logprob: -6.794904708862305
    8. '
' → logprob: -8.294904708862305
    9. ' :
' → logprob: -8.544904708862305
    10. '                   ' → logprob: -8.544904708862305

Token 767: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4309128522872925
    2. '           ' → logprob: -1.0559128522872925
    3. ' return' → logprob: -6.805912971496582
    4. '                   ' → logprob: -8.055912971496582
    5. '
' → logprob: -8.555912971496582
    6. 'return' → logprob: -8.680912971496582
    7. ':' → logprob: -9.305912971496582
    8. ',' → logprob: -9.555912971496582
    9. ':
' → logprob: -9.680912971496582
    10. '   ' → logprob: -10.180912971496582

Token 768: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5382152795791626
    2. ' return' → logprob: -1.0382152795791626
    3. '           ' → logprob: -2.788215160369873
    4. '               ' → logprob: -7.538215160369873
    5. '   ' → logprob: -10.788215637207031
    6. '
' → logprob: -11.663215637207031
    7. '       ' → logprob: -11.788215637207031
    8. '	return' → logprob: -11.913215637207031
    9. '                   ' → logprob: -12.163215637207031
    10. '{return' → logprob: -12.163215637207031

Token 769: ' None' (ID: 4662)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.47450700402259827
    2. 'None' → logprob: -0.9745069742202759
    3. 'float' → logprob: -8.349507331848145
    4. ' None' → logprob: -8.974507331848145
    5. '(None' → logprob: -9.849507331848145
    6. ' inf' → logprob: -12.349507331848145
    7. 'in' → logprob: -12.599507331848145
    8. '   ' → logprob: -12.974507331848145
    9. '(' → logprob: -13.849507331848145
    10. '
' → logprob: -13.974507331848145

Token 770: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3862672746181488
    2. ',' → logprob: -2.1362671852111816
    3. '       ' → logprob: -2.2612671852111816
    4. '<|end|>' → logprob: -2.8862671852111816
    5. '
' → logprob: -3.5112671852111816
    6. '        
' → logprob: -5.261267185211182
    7. ',
' → logprob: -6.261267185211182
    8. '            
' → logprob: -6.761267185211182
    9. '        ' → logprob: -6.886267185211182
    10. '<|end|>' → logprob: -7.636267185211182

Token 771: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.009974940679967403
    2. 'inf' → logprob: -5.509974956512451
    3. '0' → logprob: -6.384974956512451
    4. ' None' → logprob: -6.509974956512451
    5. '-' → logprob: -7.134974956512451
    6. 'company' → logprob: -7.259974956512451
    7. 'float' → logprob: -7.509974956512451
    8. 'False' → logprob: -7.884974956512451
    9. '           ' → logprob: -9.009974479675293
    10. '   ' → logprob: -10.259974479675293

Token 772: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4207260310649872
    2. '       ' → logprob: -1.4207260608673096
    3. '
' → logprob: -2.4207260608673096
    4. 'return' (adapté à ' return') → logprob: -4.6707258224487305
    5. ' return' → logprob: -6.0457258224487305
    6. '        
' → logprob: -7.9207258224487305
    7. '   ' → logprob: -8.29572582244873
    8. '    
' → logprob: -8.54572582244873
    9. ',' → logprob: -8.79572582244873
    10. '            
' → logprob: -9.29572582244873

Token 775: ' company' (ID: 3175)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0011833232128992677
    2. ' total' → logprob: -7.00118350982666
    3. '(total' → logprob: -8.25118350982666
    4. '           ' → logprob: -11.62618350982666
    5. '   ' → logprob: -13.25118350982666
    6. '	total' → logprob: -16.626182556152344
    7. '       ' → logprob: -17.751182556152344
    8. ',total' → logprob: -17.751182556152344
    9. 'company' → logprob: -18.376182556152344
    10. '               ' → logprob: -18.501182556152344

Token 776: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -3.547789674485102e-05
    2. 'A' → logprob: -10.250035285949707
    3. 'Company' → logprob: -18.125036239624023
    4. '```' → logprob: -18.250036239624023
    5. '_company' → logprob: -18.625036239624023
    6. '   ' → logprob: -19.250036239624023
    7. '
' → logprob: -19.500036239624023
    8. '\' → logprob: -19.625036239624023
    9. 'company' → logprob: -19.750036239624023
    10. '_a' → logprob: -19.875036239624023

Token 777: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.004082909319549799
    2. 'count' → logprob: -5.504082679748535
    3. 'company' → logprob: -13.129082679748535
    4. '_cost' → logprob: -13.879082679748535
    5. 'cost' → logprob: -14.254082679748535
    6. 'import' → logprob: -15.504082679748535
    7. 'const' → logprob: -15.879082679748535
    8. 'Count' → logprob: -16.00408363342285
    9. 'int' → logprob: -16.62908363342285
    10. 'from' → logprob: -16.87908363342285

Token 778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ',total' → logprob: -10.87503719329834
    3. ' ,' → logprob: -11.87503719329834
    4. ',
' → logprob: -12.37503719329834
    5. '<|end|>' → logprob: -12.37503719329834
    6. ',None' → logprob: -13.50003719329834
    7. ',next' → logprob: -15.00003719329834
    8. 'total' → logprob: -15.75003719329834
    9. '<|end|>' → logprob: -16.125036239624023
    10. '       ' → logprob: -17.125036239624023

Token 779: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0001234428636962548
    2. ' total' → logprob: -9.000123023986816
    3. '(total' → logprob: -18.625123977661133
    4. '           ' → logprob: -18.750123977661133
    5. '   ' → logprob: -19.000123977661133
    6. '	total' → logprob: -19.875123977661133
    7. '
' → logprob: -20.250123977661133
    8. '       ' → logprob: -20.250123977661133
    9. '$total' → logprob: -20.625123977661133
    10. '               ' → logprob: -20.750123977661133

Token 780: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.5716304410016164e-05
    2. 'cost' → logprob: -10.500035285949707
    3. 'Cost' → logprob: -12.375035285949707
    4. '_token' → logprob: -13.250035285949707
    5. '_' → logprob: -14.000035285949707
    6. '_COST' → logprob: -14.375035285949707
    7. '_tokens' → logprob: -15.250035285949707
    8. ' cost' → logprob: -15.500035285949707
    9. '_code' → logprob: -16.000036239624023
    10. '_price' → logprob: -16.625036239624023

Token 781: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028905868530273438
    2. '        
' → logprob: -6.377890586853027
    3. '
' → logprob: -7.252890586853027
    4. '   ' → logprob: -8.752890586853027
    5. 'lambda' → logprob: -8.877890586853027
    6. '' → logprob: -10.252890586853027
    7. '    
' → logprob: -10.502890586853027
    8. 'import' → logprob: -10.752890586853027
    9. '        ' → logprob: -11.377890586853027
    10. '  
' → logprob: -11.627890586853027

Token 783: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8757624626159668
    2. '       ' → logprob: -1.1257624626159668
    3. 'left' → logprob: -1.5007624626159668
    4. 'lo' → logprob: -4.125762462615967
    5. 'l' → logprob: -4.875762462615967
    6. '#' (adapté à ' #') → logprob: -5.250762462615967
    7. 'lower' → logprob: -5.875762462615967
    8. 'lambda' → logprob: -6.250762462615967
    9. 'import' → logprob: -6.750762462615967
    10. 'lb' → logprob: -7.625762462615967

Token 784: ' Binary' (ID: 32672)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.22078372538089752
    2. 'left' → logprob: -1.7207837104797363
    3. 'lo' → logprob: -4.345783710479736
    4. '       ' → logprob: -5.595783710479736
    5. 'l' → logprob: -6.595783710479736
    6. '#' → logprob: -7.095783710479736
    7. 'lower' → logprob: -8.970784187316895
    8. 'lambda' → logprob: -9.345784187316895
    9. 'def' → logprob: -10.220784187316895
    10. 'lb' → logprob: -10.470784187316895

Token 785: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.9006335139274597
    2. '_low' → logprob: -0.9006335139274597
    3. '_left' → logprob: -1.9006335735321045
    4. '_lower' → logprob: -4.525633335113525
    5. '_' → logprob: -4.650633335113525
    6. '       ' → logprob: -5.150633335113525
    7. '_lo' → logprob: -5.400633335113525
    8. 'search' → logprob: -5.525633335113525
    9. ' =' → logprob: -6.900633335113525
    10. '_min' → logprob: -7.525633335113525

Token 786: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8207072615623474
    2. '(low' → logprob: -1.3207073211669922
    3. ' =' → logprob: -1.5707073211669922
    4. '(lower' → logprob: -3.195707321166992
    5. '(' → logprob: -4.070707321166992
    6. ' (' → logprob: -5.195707321166992
    7. '=' → logprob: -5.695707321166992
    8. ' lower' → logprob: -5.820707321166992
    9. ' low' → logprob: -5.820707321166992
    10. 'lower' → logprob: -6.195707321166992

Token 787: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.13712754845619202
    2. '(lambda' → logprob: -3.262127637863159
    3. 'left' → logprob: -3.762127637863159
    4. 'low' → logprob: -3.887127637863159
    5. '(' → logprob: -4.63712739944458
    6. 'l' → logprob: -4.76212739944458
    7. 'lo' → logprob: -5.13712739944458
    8. '0' → logprob: -5.51212739944458
    9. 'lam' → logprob: -5.63712739944458
    10. '-' → logprob: -6.01212739944458

Token 788: ' range' (ID: 3352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1145942360162735
    2. ':' → logprob: -2.6145942211151123
    3. ' =' → logprob: -5.114594459533691
    4. '(low' → logprob: -5.239594459533691
    5. ':
' → logprob: -5.489594459533691
    6. ',' → logprob: -5.614594459533691
    7. '
' → logprob: -5.864594459533691
    8. '(' → logprob: -5.864594459533691
    9. '        
' → logprob: -5.989594459533691
    10. '(lower' → logprob: -6.239594459533691

Token 789: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016933035105466843
    2. ' =' → logprob: -5.766932964324951
    3. '(low' → logprob: -5.766932964324951
    4. ' (' → logprob: -6.266932964324951
    5. '```' → logprob: -6.391932964324951
    6. '(' → logprob: -6.391932964324951
    7. '(lower' → logprob: -6.641932964324951
    8. ',' → logprob: -6.766932964324951
    9. ':' → logprob: -7.266932964324951
    10. ' lower' → logprob: -8.14193344116211

Token 790: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012388024479150772
    2. '```' → logprob: -7.001238822937012
    3. ' low' → logprob: -9.626238822937012
    4. ' left' → logprob: -10.126238822937012
    5. ',' → logprob: -10.251238822937012
    6. '(low' → logprob: -10.376238822937012
    7. ' lower' → logprob: -10.751238822937012
    8. '        
' → logprob: -10.876238822937012
    9. 'low' → logprob: -11.126238822937012
    10. 'import' → logprob: -11.126238822937012

Token 791: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.012783408164978
    2. 'left' (adapté à ' left') → logprob: -1.262783408164978
    3. '       ' → logprob: -1.637783408164978
    4. ' left' → logprob: -2.1377835273742676
    5. ' low' → logprob: -3.2627835273742676
    6. ' lo' → logprob: -6.637783527374268
    7. 'lo' → logprob: -7.262783527374268
    8. 'lambda' → logprob: -7.637783527374268
    9. 'l' → logprob: -8.01278305053711
    10. 'import' → logprob: -8.76278305053711

Token 792: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5086174011230469
    2. ' =' → logprob: -1.0086174011230469
    3. ',' → logprob: -3.383617401123047
    4. ' ,' → logprob: -11.133617401123047
    5. '=-' → logprob: -11.883617401123047
    6. '0' → logprob: -13.258617401123047
    7. ' ' → logprob: -14.508617401123047
    8. '```' → logprob: -14.758617401123047
    9. '=
' → logprob: -14.758617401123047
    10. ' =
' → logprob: -15.383617401123047

Token 793: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.745069499127567e-05
    2. '0' → logprob: -9.75008773803711
    3. ' -' → logprob: -10.62508773803711
    4. '-min' → logprob: -13.37508773803711
    5. '-l' → logprob: -13.87508773803711
    6. '-s' → logprob: -14.87508773803711
    7. '-n' → logprob: -15.12508773803711
    8. '-m' → logprob: -15.25008773803711
    9. '-c' → logprob: -15.50008773803711
    10. '-w' → logprob: -15.62508773803711

Token 794: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19493460655212402
    2. '100' → logprob: -1.819934606552124
    3. '1' → logprob: -4.569934844970703
    4. '200' → logprob: -6.069934844970703
    5. 'max' → logprob: -6.319934844970703
    6. 'int' → logprob: -7.944934844970703
    7. '(' → logprob: -8.444934844970703
    8. '2' → logprob: -10.944934844970703
    9. '500' → logprob: -11.819934844970703
    10. '101' → logprob: -13.319934844970703

Token 795: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2137986719608307
    2. '0' → logprob: -2.213798761367798
    3. '00' → logprob: -2.838798761367798
    4. '6' → logprob: -3.838798761367798
    5. '5' → logprob: -6.088798522949219
    6. '10' → logprob: -7.963798522949219
    7. '9' → logprob: -8.588798522949219
    8. '7' → logprob: -8.963798522949219
    9. '100' → logprob: -8.963798522949219
    10. '_' → logprob: -10.088798522949219

Token 796: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27055633068084717
    2. '000' → logprob: -1.6455563306808472
    3. '
' → logprob: -3.6455564498901367
    4. '00' → logprob: -4.020556449890137
    5. '_' → logprob: -10.145556449890137
    6. '       ' → logprob: -11.145556449890137
    7. '    
' → logprob: -12.270556449890137
    8. ',' → logprob: -12.395556449890137
    9. '1' → logprob: -12.395556449890137
    10. '```' → logprob: -12.395556449890137

Token 797: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6333073973655701
    2. 'right' → logprob: -0.8833073973655701
    3. '000' → logprob: -3.258307456970215
    4. ',' → logprob: -5.133307456970215
    5. '0' → logprob: -5.508307456970215
    6. ' right' → logprob: -5.633307456970215
    7. '100' → logprob: -7.383307456970215
    8. '       ' → logprob: -7.508307456970215
    9. ',right' → logprob: -7.508307456970215
    10. '00' → logprob: -8.008307456970215

Token 798: ' sufficiently' (ID: 77799)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.17606566846370697
    2. 'right' → logprob: -2.051065683364868
    3. ' right' → logprob: -4.051065444946289
    4. ' ' → logprob: -4.176065444946289
    5. '10' → logprob: -10.051065444946289
    6. '   ' → logprob: -11.051065444946289
    7. 'Right' → logprob: -12.051065444946289
    8. '+' → logprob: -13.176065444946289
    9. 'left' → logprob: -13.301065444946289
    10. '  ' → logprob: -13.676065444946289

Token 799: ' negative' (ID: 12626)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.13876672089099884
    2. '0' → logprob: -2.5137667655944824
    3. 'large' → logprob: -3.2637667655944824
    4. ' large' → logprob: -5.263766765594482
    5. '00' → logprob: -5.638766765594482
    6. '100' → logprob: -6.888766765594482
    7. '_' → logprob: -8.763766288757324
    8. 'big' → logprob: -9.263766288757324
    9. 'low' → logprob: -9.638766288757324
    10. 'e' → logprob: -9.888766288757324

Token 800: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.14413857460021973
    2. '
' → logprob: -2.7691385746002197
    3. '<|end|>' → logprob: -3.0191385746002197
    4. ' right' → logprob: -3.8941385746002197
    5. ',' → logprob: -7.644138336181641
    6. ',right' → logprob: -7.769138336181641
    7. '<|end|>' → logprob: -7.769138336181641
    8. ' 
' → logprob: -8.64413833618164
    9. '[right' → logprob: -8.76913833618164
    10. '.right' → logprob: -9.39413833618164

Token 801: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09281360357999802
    2. ' right' → logprob: -3.092813491821289
    3. '       ' → logprob: -3.717813491821289
    4. '
' → logprob: -4.467813491821289
    5. ',' → logprob: -5.342813491821289
    6. '<|end|>' → logprob: -7.217813491821289
    7. ',right' → logprob: -7.467813491821289
    8. '        
' → logprob: -8.342813491821289
    9. '.right' → logprob: -8.592813491821289
    10. ',
' → logprob: -8.592813491821289

Token 802: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008615042082965374
    2. ' right' → logprob: -4.758615016937256
    3. '       ' → logprob: -14.883615493774414
    4. '	right' → logprob: -16.008615493774414
    5. 'Right' → logprob: -18.008615493774414
    6. '
' → logprob: -18.133615493774414
    7. '```' → logprob: -18.383615493774414
    8. ',right' → logprob: -18.633615493774414
    9. '.right' → logprob: -19.008615493774414
    10. '           ' → logprob: -19.133615493774414

Token 803: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ',' → logprob: -16.576414108276367
    4. '100' → logprob: -16.701414108276367
    5. ' ' → logprob: -16.826414108276367
    6. ' =
' → logprob: -17.451414108276367
    7. '```' → logprob: -18.201414108276367
    8. '   ' → logprob: -18.326414108276367
    9. '<|end|>' → logprob: -18.451414108276367
    10. '=
' → logprob: -18.451414108276367

Token 804: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751326560974121
    4. '+' → logprob: -15.751326560974121
    5. '  ' → logprob: -16.251325607299805
    6. '=' → logprob: -17.501325607299805
    7. '１００' → logprob: -18.376325607299805
    8. '200' → logprob: -19.376325607299805
    9. '1' → logprob: -19.501325607299805
    10. '    ' → logprob: -19.813825607299805

Token 805: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. '+' → logprob: -15.875335693359375
    4. '   ' → logprob: -16.000335693359375
    5. '  ' → logprob: -16.500335693359375
    6. '200' → logprob: -18.125335693359375
    7. '=' → logprob: -18.125335693359375
    8. '１００' → logprob: -18.875335693359375
    9. '    ' → logprob: -19.875335693359375
    10. '1' → logprob: -20.000335693359375

Token 806: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.01693280041217804
    2. '000' → logprob: -4.141932964324951
    3. '0' → logprob: -7.016932964324951
    4. '01' → logprob: -14.141932487487793
    5. '```' → logprob: -14.766932487487793
    6. '001' → logprob: -15.016932487487793
    7. '_' → logprob: -16.64193344116211
    8. '   ' → logprob: -17.76693344116211
    9. '1' → logprob: -18.26693344116211
    10. '
' → logprob: -18.39193344116211

Token 807: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08281295001506805
    2. '       ' → logprob: -3.207813024520874
    3. 'while' → logprob: -4.082812786102295
    4. '<|end|>' → logprob: -4.582812786102295
    5. '        
' → logprob: -5.332812786102295
    6. ' 
' → logprob: -6.082812786102295
    7. ' while' → logprob: -6.207812786102295
    8. '  
' → logprob: -6.957812786102295
    9. ',' → logprob: -7.832812786102295
    10. '        ' → logprob: -8.332813262939453

Token 808: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4456383287906647
    2. ' ' → logprob: -2.195638418197632
    3. '<|end|>' → logprob: -2.695638418197632
    4. 'while' → logprob: -2.945638418197632
    5. ' 
' → logprob: -3.195638418197632
    6. '       ' → logprob: -3.320638418197632
    7. '  ' → logprob: -4.445638179779053
    8. '        ' → logprob: -4.695638179779053
    9. '        
' → logprob: -4.945638179779053
    10. '  
' → logprob: -4.945638179779053

Token 809: ' sufficiently' (ID: 77799)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2813783586025238
    2. ' ' → logprob: -1.4063783884048462
    3. '    ' → logprob: -9.031378746032715
    4. '   ' → logprob: -10.281378746032715
    5. '        ' → logprob: -10.281378746032715
    6. '       ' → logprob: -10.906378746032715
    7. '  ' → logprob: -12.031378746032715
    8. '+' → logprob: -12.281378746032715
    9. ' +' → logprob: -12.656378746032715
    10. '     ' → logprob: -12.781378746032715

Token 810: ' positive' (ID: 8841)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8081346154212952
    2. '       ' → logprob: -1.3081345558166504
    3. 'while' → logprob: -1.8081345558166504
    4. ' while' → logprob: -3.0581345558166504
    5. '<|end|>' → logprob: -3.4331345558166504
    6. '        
' → logprob: -3.8081345558166504
    7. ' 
' → logprob: -5.30813455581665
    8. '	while' → logprob: -5.30813455581665
    9. '    
' → logprob: -6.55813455581665
    10. ',' → logprob: -6.68313455581665

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4475146234035492
    2. 'while' → logprob: -1.0725146532058716
    3. ' while' → logprob: -4.072514533996582
    4. '
' → logprob: -7.197514533996582
    5. 'result' → logprob: -8.572514533996582
    6. '        
' → logprob: -8.572514533996582
    7. 'mid' → logprob: -8.572514533996582
    8. '   ' → logprob: -9.322514533996582
    9. '	while' → logprob: -9.447514533996582
    10. '```' → logprob: -9.947514533996582

Token 813: ' answer' (ID: 6052)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1840810924768448
    2. 'while' → logprob: -2.6840810775756836
    3. 'answer' (adapté à ' answer') → logprob: -2.9340810775756836
    4. 'best' → logprob: -3.6840810775756836
    5. 'res' → logprob: -4.184081077575684
    6. 'for' → logprob: -6.059081077575684
    7. 'ans' → logprob: -6.559081077575684
    8. ' result' → logprob: -6.684081077575684
    9. ' answer' → logprob: -7.684081077575684
    10. '       ' → logprob: -8.309081077575684

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004083624575287104
    2. '=' → logprob: -5.504083633422852
    3. '_cost' → logprob: -12.504083633422852
    4. ',' → logprob: -14.629083633422852
    5. 'cost' → logprob: -15.129083633422852
    6. '=None' → logprob: -15.254083633422852
    7. ' ' → logprob: -15.379083633422852
    8. '_' → logprob: -15.504083633422852
    9. ':' → logprob: -16.87908363342285
    10. '```' → logprob: -17.75408363342285

Token 815: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002880476415157318
    2. 'float' → logprob: -6.252880573272705
    3. '-' → logprob: -7.627880573272705
    4. 'inf' → logprob: -7.877880573272705
    5. ' None' → logprob: -9.377880096435547
    6. '10' → logprob: -15.002880096435547
    7. '   ' → logprob: -15.877880096435547
    8. '100' → logprob: -16.002880096435547
    9. 'INF' → logprob: -16.002880096435547
    10. ' -' → logprob: -16.127880096435547

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'inf' → logprob: -17.5
    3. 'float' → logprob: -18.125
    4. ' ' → logprob: -18.125
    5. '-' → logprob: -18.375
    6. '10' → logprob: -19.25
    7. '2' → logprob: -19.75
    8. '(' → logprob: -20.25
    9. 'left' → logprob: -20.375
    10. 'from' → logprob: -20.5

Token 817: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13924330472946167
    2. '       ' → logprob: -2.2642433643341064
    3. ' 
' → logprob: -4.014243125915527
    4. '        
' → logprob: -6.014243125915527
    5. ',' → logprob: -6.639243125915527
    6. 'while' → logprob: -6.639243125915527
    7. ' while' → logprob: -7.014243125915527
    8. '  
' → logprob: -7.639243125915527
    9. ',
' → logprob: -7.889243125915527
    10. '<|end|>' → logprob: -8.014243125915527

Token 818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08402633666992188
    2. 'while' → logprob: -2.584026336669922
    3. ' while' → logprob: -5.459026336669922
    4. '
' → logprob: -7.834026336669922
    5. '   ' → logprob: -7.959026336669922
    6. '        
' → logprob: -9.459026336669922
    7. '```' → logprob: -11.084026336669922
    8. 'for' → logprob: -11.709026336669922
    9. '    
' → logprob: -12.084026336669922
    10. '	while' → logprob: -12.334026336669922

Token 819: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008717277087271214
    2. 'for' → logprob: -4.758717060089111
    3. '       ' → logprob: -9.50871753692627
    4. ' while' → logprob: -10.50871753692627
    5. '
' → logprob: -14.88371753692627
    6. ' for' → logprob: -15.00871753692627
    7. '        
' → logprob: -15.50871753692627
    8. 'result' → logprob: -15.63371753692627
    9. 'best' → logprob: -16.508716583251953
    10. '   ' → logprob: -16.758716583251953

Token 820: ' In' (ID: 730)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006719520781189203
    2. 'while' → logprob: -5.006719589233398
    3. 'import' → logprob: -12.506719589233398
    4. '       ' → logprob: -14.631719589233398
    5. ' for' → logprob: -16.6317195892334
    6. '        
' → logprob: -18.1317195892334
    7. 'from' → logprob: -18.3817195892334
    8. '
' → logprob: -18.5067195892334
    9. 'best' → logprob: -18.6317195892334
    10. 'EPS' → logprob: -18.7567195892334

Token 821: 'variant' (ID: 27649)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11174188554286957
    2. 'range' → logprob: -2.736741781234741
    3. 'while' → logprob: -3.986741781234741
    4. '       ' → logprob: -4.86174201965332
    5. ' while' → logprob: -4.86174201965332
    6. 't' → logprob: -5.48674201965332
    7. '   ' → logprob: -6.98674201965332
    8. '    ' → logprob: -7.98674201965332
    9. '_range' → logprob: -8.11174201965332
    10. '     ' → logprob: -8.23674201965332

Token 822: ':' (ID: 25)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7381675243377686
    2. ' while' → logprob: -0.8631675243377686
    3. ':' → logprob: -2.3631675243377686
    4. '       ' → logprob: -5.363167762756348
    5. ':
' → logprob: -7.113167762756348
    6. ' =' → logprob: -9.238167762756348
    7. '
' → logprob: -9.363167762756348
    8. ' for' → logprob: -9.488167762756348
    9. '        
' → logprob: -9.988167762756348
    10. ',' → logprob: -9.988167762756348

Token 823: ' the' (ID: 290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5768343210220337
    2. ' while' → logprob: -0.8268343210220337
    3. ' for' → logprob: -7.576834201812744
    4. 'for' → logprob: -8.076834678649902
    5. '
' → logprob: -10.201834678649902
    6. '       ' → logprob: -10.826834678649902
    7. ' 
' → logprob: -12.451834678649902
    8. '        
' → logprob: -12.826834678649902
    9. 'While' → logprob: -12.826834678649902
    10. '```' → logprob: -13.076834678649902

Token 824: ' number' (ID: 2086)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18050962686538696
    2. ' while' → logprob: -1.8055095672607422
    3. 'for' → logprob: -7.680509567260742
    4. ' for' → logprob: -8.305509567260742
    5. '```' → logprob: -10.805509567260742
    6. 'def' → logprob: -11.305509567260742
    7. '
' → logprob: -12.180509567260742
    8. '    ' → logprob: -12.930509567260742
    9. '       ' → logprob: -13.180509567260742
    10. 'best' → logprob: -13.305509567260742

Token 825: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.36118361353874207
    2. ' of' → logprob: -1.2361836433410645
    3. '_of' → logprob: -4.6111836433410645
    4. 'while' → logprob: -6.6111836433410645
    5. '_' → logprob: -7.8611836433410645
    6. 'left' → logprob: -8.361183166503906
    7. 'for' → logprob: -8.611183166503906
    8. '#' → logprob: -8.611183166503906
    9. '   ' → logprob: -9.736183166503906
    10. '_tokens' → logprob: -10.236183166503906

Token 826: ' company' (ID: 3175)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.41994965076446533
    2. 'company' → logprob: -1.4199496507644653
    3. 'edges' → logprob: -2.919949531555176
    4. '_A' → logprob: -4.294949531555176
    5. ' edges' → logprob: -4.919949531555176
    6. '_edges' → logprob: -5.294949531555176
    7. 'for' → logprob: -5.669949531555176
    8. ' company' → logprob: -5.669949531555176
    9. 'steps' → logprob: -6.044949531555176
    10. '_' → logprob: -6.044949531555176

Token 827: ' A' (ID: 355)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0016682806890457869
    2. '_' → logprob: -6.876668453216553
    3. 'A' → logprob: -8.001667976379395
    4. ' A' → logprob: -8.501667976379395
    5. ' _' → logprob: -9.876667976379395
    6. '_B' → logprob: -11.001667976379395
    7. ' ' → logprob: -11.376667976379395
    8. '```' → logprob: -12.126667976379395
    9. '   ' → logprob: -12.626667976379395
    10. '_a' → logprob: -12.876667976379395

Token 828: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.616706907749176
    2. ' edges' → logprob: -1.1167068481445312
    3. 'edges' → logprob: -2.1167068481445312
    4. '_count' → logprob: -4.866706848144531
    5. '_' → logprob: -5.866706848144531
    6. '```' → logprob: -7.491706848144531
    7. '_selected' → logprob: -8.491706848144531
    8. '   ' → logprob: -8.991706848144531
    9. '_used' → logprob: -9.116706848144531
    10. '_edge' → logprob: -9.241706848144531

Token 829: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7256578207015991
    2. 'in' → logprob: -0.8506578207015991
    3. 'de' → logprob: -3.3506579399108887
    4. ' is' → logprob: -5.350657939910889
    5. 'chosen' → logprob: -5.350657939910889
    6. 'must' → logprob: -5.725657939910889
    7. 'selected' → logprob: -5.850657939910889
    8. 'will' → logprob: -5.975657939910889
    9. ' will' → logprob: -6.100657939910889
    10. ' decreases' → logprob: -6.100657939910889

Token 830: ' MST' (ID: 123058)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.8376247882843018
    2. 'self' → logprob: -0.9626247882843018
    3. 'the' → logprob: -1.9626247882843018
    4. 'range' → logprob: -3.9626247882843018
    5. 'answer' → logprob: -4.212624549865723
    6. '[' → logprob: -6.462624549865723
    7. 'while' → logprob: -6.587624549865723
    8. 'selected' → logprob: -6.712624549865723
    9. 'edges' → logprob: -6.837624549865723
    10. 'left' → logprob: -6.962624549865723

Token 831: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2023968696594238
    2. 'while' → logprob: -1.2023968696594238
    3. ' is' → logprob: -1.9523968696594238
    4. ' while' → logprob: -2.827396869659424
    5. '=' → logprob: -2.952396869659424
    6. ' in' → logprob: -4.077396869659424
    7. 'def' → logprob: -4.327396869659424
    8. ' for' → logprob: -4.452396869659424
    9. ' will' → logprob: -4.452396869659424
    10. 'for' → logprob: -4.577396869659424

Token 832: ' non' (ID: 2893)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -1.1681199073791504
    2. 'a' → logprob: -1.5431199073791504
    3. 'non' → logprob: -1.6681199073791504
    4. 'de' → logprob: -1.9181199073791504
    5. '>=' → logprob: -2.6681199073791504
    6. 'in' → logprob: -3.9181199073791504
    7. 'an' → logprob: -4.66811990737915
    8. ' a' → logprob: -5.41811990737915
    9. ' non' → logprob: -5.54311990737915
    10. '   ' → logprob: -5.66811990737915

Token 833: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12752947211265564
    2. 'in' → logprob: -2.1275293827056885
    3. '       ' → logprob: -8.25252914428711
    4. '   ' → logprob: -8.62752914428711
    5. '-in' → logprob: -9.87752914428711
    6. ' decreasing' → logprob: -10.25252914428711
    7. '_de' → logprob: -10.62752914428711
    8. 'increase' → logprob: -11.12752914428711
    9. '-de' → logprob: -11.25252914428711
    10. 'def' → logprob: -12.00252914428711

Token 834: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -6.153795766294934e-06
    2. 'in' → logprob: -12.375005722045898
    3. 'cre' → logprob: -13.375005722045898
    4. 'cr' → logprob: -16.3750057220459
    5. 'creased' → logprob: -16.5000057220459
    6. 'crement' → logprob: -17.1250057220459
    7. 'creases' → logprob: -17.1250057220459
    8. 'crease' → logprob: -17.2500057220459
    9. '-in' → logprob: -18.5000057220459
    10. 'Increasing' → logprob: -18.7500057220459

Token 835: ' as' (ID: 472)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9824629426002502
    2. '<|end|>' → logprob: -1.8574628829956055
    3. ' with' → logprob: -1.9824628829956055
    4. ',' → logprob: -2.6074628829956055
    5. '       ' → logprob: -2.8574628829956055
    6. 'with' → logprob: -3.1074628829956055
    7. '
' → logprob: -3.2324628829956055
    8. ' 
' → logprob: -3.7324628829956055
    9. ' while' → logprob: -3.9824628829956055
    10. ')' → logprob: -4.1074628829956055

Token 836: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18488100171089172
    2. ' lambda' → logprob: -1.8098809719085693
    3. 'right' → logprob: -6.184881210327148
    4. 'left' → logprob: -6.434881210327148
    5. '   ' → logprob: -7.559881210327148
    6. ' right' → logprob: -7.934881210327148
    7. ' left' → logprob: -8.684881210327148
    8. '(lambda' → logprob: -8.684881210327148
    9. ' we' → logprob: -10.184881210327148
    10. '_lambda' → logprob: -10.184881210327148

Token 837: ' increases' (ID: 21073)
  Prédit: ' increases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increases' → logprob: -0.391828328371048
    2. ' changes' → logprob: -2.1418282985687256
    3. ' +=' → logprob: -2.3918282985687256
    4. 'in' → logprob: -2.6418282985687256
    5. '+=' → logprob: -4.141828536987305
    6. ')' → logprob: -5.141828536987305
    7. 'increase' → logprob: -5.391828536987305
    8. ' in' → logprob: -5.766828536987305
    9. ' decreases' → logprob: -5.891828536987305
    10. ' increasing' → logprob: -6.016828536987305

Token 838: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14388051629066467
    2. '
' → logprob: -2.518880605697632
    3. 'while' → logprob: -3.393880605697632
    4. ' while' → logprob: -4.018880367279053
    5. '        
' → logprob: -7.018880367279053
    6. '   ' → logprob: -8.518880844116211
    7. '<|end|>' → logprob: -8.643880844116211
    8. ',' → logprob: -8.768880844116211
    9. '	while' → logprob: -8.893880844116211
    10. '```' → logprob: -9.768880844116211

Token 839: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03275604173541069
    2. '
' → logprob: -3.5327560901641846
    3. '   ' → logprob: -7.2827558517456055
    4. 'while' → logprob: -7.2827558517456055
    5. '        
' → logprob: -7.5327558517456055
    6. ' while' → logprob: -7.6577558517456055
    7. '```' → logprob: -8.157755851745605
    8. '    
' → logprob: -9.407755851745605
    9. '<|end|>' → logprob: -9.907755851745605
    10. '  
' → logprob: -10.032755851745605

Token 840: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5943804383277893
    2. 'while' → logprob: -0.8443804383277893
    3. ' while' → logprob: -4.4693803787231445
    4. 'for' → logprob: -5.4693803787231445
    5. '
' → logprob: -6.4693803787231445
    6. ' for' → logprob: -7.3443803787231445
    7. '        
' → logprob: -8.594380378723145
    8. '   ' → logprob: -8.844380378723145
    9. '```' → logprob: -9.969380378723145
    10. '    
' → logprob: -11.719380378723145

Token 841: ' because' (ID: 2236)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14188961684703827
    2. 'for' → logprob: -2.1418895721435547
    3. '       ' → logprob: -4.391889572143555
    4. ' while' → logprob: -6.391889572143555
    5. ' for' → logprob: -7.141889572143555
    6. '        
' → logprob: -13.141889572143555
    7. '   ' → logprob: -13.141889572143555
    8. 'import' → logprob: -14.141889572143555
    9. '	while' → logprob: -14.141889572143555
    10. '```' → logprob: -14.391889572143555

Token 842: ' higher' (ID: 7266)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10861587524414062
    2. 'adding' → logprob: -4.108615875244141
    3. ' increasing' → logprob: -4.358615875244141
    4. 'for' → logprob: -4.483615875244141
    5. 'higher' → logprob: -4.733615875244141
    6. '   ' → logprob: -4.858615875244141
    7. 'edges' → logprob: -5.108615875244141
    8. 'cho' → logprob: -5.608615875244141
    9. 'the' → logprob: -5.608615875244141
    10. '       ' → logprob: -5.608615875244141

Token 843: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.1692950278520584
    2. 'lambda' → logprob: -1.919295072555542
    3. '_lambda' → logprob: -5.419294834136963
    4. '=lambda' → logprob: -5.919294834136963
    5. ' penalty' → logprob: -8.044295310974121
    6. ' lamb' → logprob: -8.294295310974121
    7. ' penalties' → logprob: -8.544295310974121
    8. '<|end|>' → logprob: -8.669295310974121
    9. '(lambda' → logprob: -8.794295310974121
    10. ' value' → logprob: -8.919295310974121

Token 844: ' raises' (ID: 51090)
  Prédit: ' encourages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' encourages' → logprob: -0.957729697227478
    2. ' discour' → logprob: -1.207729697227478
    3. ' makes' → logprob: -2.0827298164367676
    4. ' increases' → logprob: -2.3327298164367676
    5. 'makes' → logprob: -3.4577298164367676
    6. ' incentiv' → logprob: -3.8327298164367676
    7. ' favors' → logprob: -4.332729816436768
    8. ' penal' → logprob: -5.082729816436768
    9. ' rewards' → logprob: -5.207729816436768
    10. 'in' → logprob: -5.582729816436768

Token 845: ' cost' (ID: 3097)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15351399779319763
    2. 'the' → logprob: -2.6535139083862305
    3. 'cost' → logprob: -3.0285139083862305
    4. ' cost' → logprob: -4.0285139083862305
    5. ' costs' → logprob: -5.6535139083862305
    6. ' company' → logprob: -6.6535139083862305
    7. ' ' → logprob: -8.40351390838623
    8. 'company' → logprob: -8.52851390838623
    9. ' edges' → logprob: -9.02851390838623
    10. ' edge' → logprob: -9.77851390838623

Token 846: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6633272171020508
    2. '   ' → logprob: -1.5383272171020508
    3. ' for' → logprob: -2.913327217102051
    4. ' of' → logprob: -3.038327217102051
    5. '    ' → logprob: -3.663327217102051
    6. ')' → logprob: -3.788327217102051
    7. '=' → logprob: -3.788327217102051
    8. 'for' → logprob: -3.913327217102051
    9. '           ' → logprob: -4.538327217102051
    10. '        ' → logprob: -4.663327217102051

Token 847: ' using' (ID: 2360)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.12452820688486099
    2. 'A' → logprob: -2.749528169631958
    3. ' company' → logprob: -3.624528169631958
    4. 'edges' → logprob: -4.124528408050537
    5. 'cho' → logprob: -5.124528408050537
    6. 'select' → logprob: -6.749528408050537
    7. ' edges' → logprob: -7.124528408050537
    8. ''' → logprob: -7.499528408050537
    9. ' choosing' → logprob: -7.749528408050537
    10. 'using' → logprob: -8.124527931213379

Token 848: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.7591148614883423
    2. 'company' → logprob: -0.7591148614883423
    3. 'A' → logprob: -3.1341147422790527
    4. ' A' → logprob: -4.509114742279053
    5. ' edges' → logprob: -5.509114742279053
    6. 'edges' → logprob: -5.884114742279053
    7. ''' → logprob: -6.634114742279053
    8. ''A' → logprob: -7.509114742279053
    9. ' '' → logprob: -8.384115219116211
    10. 'Company' → logprob: -9.634115219116211

Token 849: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.22868835926055908
    2. 'A' → logprob: -1.603688359260559
    3. '_A' → logprob: -5.9786882400512695
    4. ' ' → logprob: -7.6036882400512695
    5. ' ' → logprob: -9.35368824005127
    6. ' '' → logprob: -10.85368824005127
    7. '_' → logprob: -10.85368824005127
    8. '   ' → logprob: -10.97868824005127
    9. ''' → logprob: -11.35368824005127
    10. 'space' → logprob: -11.35368824005127

Token 850: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9603885412216187
    2. ' edges' → logprob: -1.3353885412216187
    3. '_edges' → logprob: -1.7103885412216187
    4. 'edges' → logprob: -3.085388660430908
    5. '+' → logprob: -3.460388660430908
    6. ')' → logprob: -3.710388660430908
    7. ' +' → logprob: -3.710388660430908
    8. '_' → logprob: -4.210388660430908
    9. ',' → logprob: -5.210388660430908
    10. '
' → logprob: -5.460388660430908

Token 851: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33237895369529724
    2. '
' → logprob: -1.4573789834976196
    3. '        
' → logprob: -4.45737886428833
    4. ' while' → logprob: -4.83237886428833
    5. '<|end|>' → logprob: -5.08237886428833
    6. ',' → logprob: -5.20737886428833
    7. 'while' → logprob: -5.20737886428833
    8. '  
' → logprob: -5.45737886428833
    9. ' 
' → logprob: -6.08237886428833
    10. '   ' → logprob: -6.70737886428833

Token 852: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7270209193229675
    2. ' while' → logprob: -1.1020209789276123
    3. 'while' → logprob: -1.7270209789276123
    4. '<|end|>' → logprob: -6.352020740509033
    5. '        
' → logprob: -7.352020740509033
    6. '   ' → logprob: -7.477020740509033
    7. '        ' → logprob: -7.727020740509033
    8. '#' → logprob: -7.727020740509033
    9. ' ' → logprob: -7.977020740509033
    10. 'lambda' → logprob: -8.102021217346191

Token 853: ' MST' (ID: 123058)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.1046135425567627
    2. ' fewer' → logprob: -1.7296135425567627
    3. 'they' → logprob: -2.1046135425567627
    4. 'the' → logprob: -2.7296135425567627
    5. 'f' → logprob: -2.8546135425567627
    6. 'more' → logprob: -2.9796135425567627
    7. ' we' → logprob: -3.4796135425567627
    8. 'company' → logprob: -3.6046135425567627
    9. 'less' → logprob: -4.229613304138184
    10. ' more' → logprob: -4.354613304138184

Token 854: ' uses' (ID: 8844)
  Prédit: 'will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'will' → logprob: -1.0256121158599854
    2. 'uses' → logprob: -1.4006121158599854
    3. 't' → logprob: -2.2756121158599854
    4. 'includes' → logprob: -2.4006121158599854
    5. ' will' → logprob: -3.2756121158599854
    6. 'cho' → logprob: -3.4006121158599854
    7. 'has' → logprob: -3.6506121158599854
    8. ' tends' → logprob: -3.7756121158599854
    9. 'pref' → logprob: -3.9006121158599854
    10. 'tries' → logprob: -4.275611877441406

Token 855: ' fewer' (ID: 30732)
  Prédit: ' fewer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fewer' → logprob: -0.08958619832992554
    2. 'f' → logprob: -2.5895862579345703
    3. 'less' → logprob: -5.08958625793457
    4. 'more' → logprob: -6.33958625793457
    5. ' less' → logprob: -6.46458625793457
    6. ' more' → logprob: -7.58958625793457
    7. '```' → logprob: -8.83958625793457
    8. '   ' → logprob: -8.83958625793457
    9. ' f' → logprob: -9.46458625793457
    10. 'edges' → logprob: -9.46458625793457

Token 856: ' A' (ID: 355)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.9425379037857056
    2. 'company' → logprob: -0.9425379037857056
    3. 'A' → logprob: -1.6925379037857056
    4. ' A' → logprob: -3.442537784576416
    5. ' of' → logprob: -6.567537784576416
    6. ' edges' → logprob: -6.692537784576416
    7. '_company' → logprob: -7.192537784576416
    8. 'of' → logprob: -7.817537784576416
    9. '   ' → logprob: -8.817538261413574
    10. 'edges' → logprob: -9.192538261413574

Token 857: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.21910886466503143
    2. ' edges' → logprob: -1.9691088199615479
    3. 'edges' → logprob: -3.094108819961548
    4. '   ' → logprob: -5.219109058380127
    5. '_' → logprob: -5.469109058380127
    6. ' _' → logprob: -7.719109058380127
    7. ' ' → logprob: -8.094108581542969
    8. '+' → logprob: -8.094108581542969
    9. 's' → logprob: -8.219108581542969
    10. '       ' → logprob: -8.219108581542969

Token 858: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.270605206489563
    2. '
' → logprob: -1.520605206489563
    3. '        
' → logprob: -5.395605087280273
    4. 'while' → logprob: -5.645605087280273
    5. '<|end|>' → logprob: -5.645605087280273
    6. ' while' → logprob: -5.895605087280273
    7. ',' → logprob: -6.645605087280273
    8. '  
' → logprob: -7.395605087280273
    9. '   ' → logprob: -7.645605087280273
    10. ')' → logprob: -8.145605087280273

Token 859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05219750478863716
    2. 'while' → logprob: -3.1771974563598633
    3. ' while' → logprob: -5.302197456359863
    4. '
' → logprob: -5.802197456359863
    5. '   ' → logprob: -7.802197456359863
    6. '        
' → logprob: -8.052197456359863
    7. '```' → logprob: -8.302197456359863
    8. 'for' → logprob: -9.302197456359863
    9. ' for' → logprob: -10.177197456359863
    10. '    
' → logprob: -11.177197456359863

Token 860: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6931799054145813
    2. 'while' → logprob: -0.6931799054145813
    3. '       ' → logprob: -10.443180084228516
    4. ' for' → logprob: -13.693180084228516
    5. ' while' → logprob: -13.693180084228516
    6. '        
' → logprob: -14.068180084228516
    7. '
' → logprob: -15.568180084228516
    8. 'import' → logprob: -15.818180084228516
    9. 'result' → logprob: -16.943180084228516
    10. 'best' → logprob: -17.193180084228516

Token 861: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023288801312446594
    2. ' _' → logprob: -3.7732887268066406
    3. '_step' → logprob: -11.27328872680664
    4. '_iter' → logprob: -11.64828872680664
    5. '_i' → logprob: -11.89828872680664
    6. '_range' → logprob: -12.14828872680664
    7. '_iteration' → logprob: -12.64828872680664
    8. '_in' → logprob: -13.27328872680664
    9. '_

' → logprob: -14.14828872680664
    10. '_epoch' → logprob: -14.27328872680664

Token 862: ' in' (ID: 306)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3447963297367096
    2. ' in' → logprob: -1.3447962999343872
    3. '_' → logprob: -3.7197964191436768
    4. 'in' → logprob: -5.594796180725098
    5. ' i' → logprob: -6.094796180725098
    6. 'range' → logprob: -8.094796180725098
    7. 'i' → logprob: -8.969796180725098
    8. ' range' → logprob: -8.969796180725098
    9. ' ' → logprob: -9.094796180725098
    10. '_range' → logprob: -9.219796180725098

Token 863: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. '_range' → logprob: -16.000261306762695
    4. '_' → logprob: -18.500261306762695
    5. '   ' → logprob: -18.750261306762695
    6. '(range' → logprob: -18.750261306762695
    7. '	range' → logprob: -19.750261306762695
    8. ' ' → logprob: -20.125261306762695
    9. '0' → logprob: -21.375261306762695
    10. '10' → logprob: -21.375261306762695

Token 864: '(' (ID: 7)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.7598158121109009
    2. '40' → logprob: -1.1348158121109009
    3. ' ' → logprob: -2.2598156929016113
    4. '(' → logprob: -2.8848156929016113
    5. '100' → logprob: -4.009815692901611
    6. '60' → logprob: -4.009815692901611
    7. '30' → logprob: -4.384815692901611
    8. '20' → logprob: -7.509815692901611
    9. '45' → logprob: -9.00981616973877
    10. '       ' → logprob: -9.00981616973877

Token 865: '100' (ID: 1353)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.2869279384613037
    2. '60' → logprob: -1.7869279384613037
    3. '40' → logprob: -3.0369279384613037
    4. '100' → logprob: -3.4119279384613037
    5. '30' → logprob: -7.161928176879883
    6. '70' → logprob: -8.786928176879883
    7. '35' → logprob: -10.786928176879883
    8. '80' → logprob: -10.911928176879883
    9. '64' → logprob: -11.536928176879883
    10. '61' → logprob: -12.036928176879883

Token 866: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06438640505075455
    2. '):' → logprob: -2.9393863677978516
    3. '0' → logprob: -5.564386367797852
    4. ':' → logprob: -6.064386367797852
    5. '   ' → logprob: -6.314386367797852
    6. ':
' → logprob: -6.939386367797852
    7. '       ' → logprob: -8.939386367797852
    8. '
' → logprob: -8.939386367797852
    9. '           ' → logprob: -9.564386367797852
    10. '():
' → logprob: -10.439386367797852

Token 867: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003902775060851127
    2. '            
' → logprob: -9.00039005279541
    3. '
' → logprob: -9.75039005279541
    4. '```' → logprob: -9.87539005279541
    5. '<|end|>' → logprob: -10.25039005279541
    6. '       ' → logprob: -10.87539005279541
    7. ':
' → logprob: -11.25039005279541
    8. '               ' → logprob: -11.37539005279541
    9. ',' → logprob: -11.37539005279541
    10. '            ' → logprob: -11.62539005279541

Token 868: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.1604665219783783
    2. ' mid' → logprob: -1.9104665517807007
    3. '           ' → logprob: -8.535466194152832
    4. '_mid' → logprob: -10.660466194152832
    5. 'middle' → logprob: -11.535466194152832
    6. ' midpoint' → logprob: -11.910466194152832
    7. ' middle' → logprob: -13.035466194152832
    8. 'm' → logprob: -13.160466194152832
    9. 'midd' → logprob: -14.660466194152832
    10. '[mid' → logprob: -15.035466194152832

Token 869: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28136587142944336
    2. '=' → logprob: -1.4063658714294434
    3. '_' → logprob: -9.031366348266602
    4. '=lambda' → logprob: -9.781366348266602
    5. '<|end|>' → logprob: -11.531366348266602
    6. ')' → logprob: -11.906366348266602
    7. '_=' → logprob: -12.031366348266602
    8. ',' → logprob: -12.406366348266602
    9. '```' → logprob: -13.406366348266602
    10. '=_' → logprob: -13.781366348266602

Token 870: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00027182576013728976
    2. ' (' → logprob: -8.250271797180176
    3. '(right' → logprob: -11.875271797180176
    4. '[left' → logprob: -12.875271797180176
    5. 'left' → logprob: -15.625271797180176
    6. '(l' → logprob: -15.750271797180176
    7. '
' → logprob: -15.875271797180176
    8. ' ' → logprob: -16.125272750854492
    9. '(lhs' → logprob: -16.125272750854492
    10. '   ' → logprob: -16.250272750854492

Token 871: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.512236498361744e-07
    2. ' left' → logprob: -14.500000953674316
    3. 'right' → logprob: -21.125
    4. '	left' → logprob: -22.75
    5. '(left' → logprob: -23.625
    6. '[left' → logprob: -24.25
    7. 'lef' → logprob: -24.375
    8. '.left' → logprob: -25.125
    9. '_left' → logprob: -25.375
    10. '   ' → logprob: -26.25

Token 872: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132619559764862
    2. ' +' → logprob: -1.3132619857788086
    3. '+
' → logprob: -16.938261032104492
    4. ' +
' → logprob: -17.563261032104492
    5. ')' → logprob: -17.813261032104492
    6. '```' → logprob: -17.813261032104492
    7. '+b' → logprob: -17.938261032104492
    8. '+self' → logprob: -18.438261032104492
    9. '＋' → logprob: -18.688261032104492
    10. '+B' → logprob: -18.813261032104492

Token 873: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0001584850688232109
    2. ' right' → logprob: -8.750158309936523
    3. '	right' → logprob: -18.375158309936523
    4. '
' → logprob: -20.125158309936523
    5. '[right' → logprob: -20.500158309936523
    6. '   ' → logprob: -20.875158309936523
    7. ' ' → logprob: -21.000158309936523
    8. ')' → logprob: -21.750158309936523
    9. '_right' → logprob: -21.750158309936523
    10. '(right' → logprob: -21.750158309936523

Token 874: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')//' → logprob: -12.250005722045898
    3. ')>>' → logprob: -14.875005722045898
    4. ' )' → logprob: -15.250005722045898
    5. ')/' → logprob: -16.7500057220459
    6. '   ' → logprob: -19.2500057220459
    7. ' ' → logprob: -19.6250057220459
    8. ')
' → logprob: -19.6250057220459
    9. ')#' → logprob: -20.5000057220459
    10. '）' → logprob: -20.8750057220459

Token 875: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09379677474498749
    2. '/' → logprob: -2.468796730041504
    3. ' /' → logprob: -6.218796730041504
    4. '//' → logprob: -7.093796730041504
    5. ')/' → logprob: -7.468796730041504
    6. '```' → logprob: -7.593796730041504
    7. ' //' → logprob: -8.718796730041504
    8. '>>' → logprob: -8.843796730041504
    9. ')>>' → logprob: -9.343796730041504
    10. '*' → logprob: -9.468796730041504

Token 876: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '(' → logprob: -21.875001907348633
    6. '1' → logprob: -22.125001907348633
    7. '=' → logprob: -22.875001907348633
    8. '۲' → logprob: -23.250001907348633
    9. '``' → logprob: -23.250001907348633
    10. '  ' → logprob: -23.625001907348633

Token 877: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '
' → logprob: -20.250001907348633
    6. '۲' → logprob: -20.875001907348633
    7. '1' → logprob: -21.500001907348633
    8. '(' → logprob: -21.625001907348633
    9. '  ' → logprob: -21.625001907348633
    10. '

' → logprob: -21.750001907348633

Token 878: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03629295900464058
    2. '
' → logprob: -3.5362930297851562
    3. '            
' → logprob: -5.411293029785156
    4. ',' → logprob: -7.036293029785156
    5. 'company' → logprob: -8.536293029785156
    6. '<|end|>' → logprob: -8.661293029785156
    7. '       ' → logprob: -9.161293029785156
    8. ',
' → logprob: -9.536293029785156
    9. '  
' → logprob: -9.536293029785156
    10. '               ' → logprob: -9.786293029785156

Token 879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07915855944156647
    2. '
' → logprob: -2.8291585445404053
    3. '            
' → logprob: -4.829158782958984
    4. '<|end|>' → logprob: -6.079158782958984
    5. '       ' → logprob: -6.329158782958984
    6. ',' → logprob: -7.079158782958984
    7. '  
' → logprob: -7.204158782958984
    8. '    
' → logprob: -7.204158782958984
    9. '        
' → logprob: -7.329158782958984
    10. 'company' → logprob: -7.454158782958984

Token 880: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.544498860836029
    2. 'company' → logprob: -1.1694989204406738
    3. 'cnt' → logprob: -2.794498920440674
    4. 'a' → logprob: -3.919498920440674
    5. 'c' → logprob: -5.044498920440674
    6. '           ' → logprob: -5.294498920440674
    7. 'ca' → logprob: -5.544498920440674
    8. 'num' → logprob: -5.669498920440674
    9. 'res' → logprob: -5.919498920440674
    10. 'ac' → logprob: -6.169498920440674

Token 881: '_A' (ID: 6829)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004932612180709839
    2. '_company' → logprob: -6.504932403564453
    3. '_A' → logprob: -6.879932403564453
    4. 'A' → logprob: -7.004932403564453
    5. '_,' → logprob: -7.504932403564453
    6. ',A' → logprob: -8.629932403564453
    7. ',_' → logprob: -8.754932403564453
    8. 'company' → logprob: -8.879932403564453
    9. ' =' → logprob: -9.004932403564453
    10. '=' → logprob: -9.254932403564453

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7954958821064793e-05
    2. ' ,' → logprob: -11.500018119812012
    3. '_,' → logprob: -12.875018119812012
    4. ',count' → logprob: -13.250018119812012
    5. ',num' → logprob: -14.625018119812012
    6. 'cost' → logprob: -14.750018119812012
    7. ',c' → logprob: -14.750018119812012
    8. ',result' → logprob: -15.000018119812012
    9. ',_' → logprob: -15.750018119812012
    10. ',value' → logprob: -15.750018119812012

Token 883: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1274338662624359
    2. 'total' → logprob: -2.1274337768554688
    3. 'tc' → logprob: -8.002433776855469
    4. ' cost' → logprob: -9.502433776855469
    5. 'res' → logprob: -9.877433776855469
    6. 'tot' → logprob: -10.627433776855469
    7. ' total' → logprob: -11.502433776855469
    8. 'result' → logprob: -12.127433776855469
    9. '_cost' → logprob: -14.002433776855469
    10. 'curr' → logprob: -14.002433776855469

Token 884: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289108544588089
    2. '=' → logprob: -2.23789119720459
    3. '<|end|>' → logprob: -10.11289119720459
    4. ',' → logprob: -11.73789119720459
    5. '<|end|>' → logprob: -11.86289119720459
    6. ')' → logprob: -13.23789119720459
    7. 's' → logprob: -13.48789119720459
    8. '_' → logprob: -13.61289119720459
    9. '           ' → logprob: -13.98789119720459
    10. '```' → logprob: -14.36289119720459

Token 885: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.2913399636745453
    2. 'self' → logprob: -1.4163399934768677
    3. ' self' → logprob: -4.916339874267578
    4. ' mst' → logprob: -5.916339874267578
    5. '           ' → logprob: -10.041339874267578
    6. 'mnt' → logprob: -10.541339874267578
    7. 'mt' → logprob: -11.166339874267578
    8. 'ms' → logprob: -11.291339874267578
    9. 'mts' → logprob: -11.916339874267578
    10. 'm' → logprob: -12.041339874267578

Token 886: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -7.896309739408025e-07
    2. 'with' → logprob: -14.250000953674316
    3. 'With' → logprob: -17.25
    4. '_WITH' → logprob: -17.375
    5. '_' → logprob: -19.125
    6. ' with' → logprob: -19.375
    7. '```' → logprob: -19.875
    8. '_for' → logprob: -20.25
    9. 's' → logprob: -20.375
    10. '_without' → logprob: -20.5

Token 887: '_lambda' (ID: 135497)
  Prédit: '_lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lambda' → logprob: -0.04308665543794632
    2. 'lambda' → logprob: -3.1680867671966553
    3. 'mid' → logprob: -9.918087005615234
    4. '(lambda' → logprob: -10.543087005615234
    5. '```' → logprob: -12.668087005615234
    6. 'ambda' → logprob: -13.293087005615234
    7. 'lam' → logprob: -13.543087005615234
    8. '=lambda' → logprob: -13.793087005615234
    9. 'l' → logprob: -14.293087005615234
    10. '_' → logprob: -14.293087005615234

Token 888: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.06202481687068939
    2. 'mid' → logprob: -2.8120248317718506
    3. ' mid' → logprob: -10.43702507019043
    4. '[mid' → logprob: -10.81202507019043
    5. '(lambda' → logprob: -12.43702507019043
    6. 'lambda' → logprob: -13.06202507019043
    7. '(
' → logprob: -14.43702507019043
    8. '
' → logprob: -15.06202507019043
    9. '(m' → logprob: -15.56202507019043
    10. 'int' → logprob: -15.81202507019043

Token 889: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16122834384441376
    2. ')
' → logprob: -1.9112282991409302
    3. '           ' → logprob: -6.911228179931641
    4. ')
' → logprob: -12.66122817993164
    5. ')

' → logprob: -13.91122817993164
    6. '       ' → logprob: -13.91122817993164
    7. ' )' → logprob: -15.03622817993164
    8. '),' → logprob: -15.41122817993164
    9. ' )
' → logprob: -15.66122817993164
    10. '):
' → logprob: -15.66122817993164

Token 890: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013248840114101768
    2. '<|end|>' → logprob: -6.751324653625488
    3. '<|end|>' → logprob: -9.751324653625488
    4. '       ' → logprob: -10.626324653625488
    5. '            
' → logprob: -10.751324653625488
    6. '
' → logprob: -11.251324653625488
    7. '```' → logprob: -11.626324653625488
    8. '  
' → logprob: -12.126324653625488
    9. ' if' → logprob: -12.126324653625488
    10. '               ' → logprob: -12.876324653625488

Token 891: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04359520226716995
    2. ' if' → logprob: -3.543595314025879
    3. 'if' (adapté à ' if') → logprob: -4.293595314025879
    4. '
' → logprob: -10.543595314025879
    5. '       ' → logprob: -10.668595314025879
    6. '<|end|>' → logprob: -11.293595314025879
    7. '            
' → logprob: -11.668595314025879
    8. '   ' → logprob: -11.668595314025879
    9. 'If' → logprob: -12.543595314025879
    10. '```' → logprob: -13.043595314025879

Token 892: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.847109812544659e-05
    2. 'cost' → logprob: -10.000048637390137
    3. ' count' → logprob: -12.750048637390137
    4. '   ' → logprob: -16.37504768371582
    5. '(count' → logprob: -18.37504768371582
    6. '	count' → logprob: -21.00004768371582
    7. ' ' → logprob: -21.12504768371582
    8. '     ' → logprob: -21.37504768371582
    9. ' cost' → logprob: -21.75004768371582
    10. '    ' → logprob: -21.87504768371582

Token 893: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -2.117345684382599e-05
    2. 'A' → logprob: -11.250020980834961
    3. '_' → logprob: -12.875020980834961
    4. '```' → logprob: -13.750020980834961
    5. '=' → logprob: -14.500020980834961
    6. '>' → logprob: -14.500020980834961
    7. '<|end|>' → logprob: -14.500020980834961
    8. ' =' → logprob: -15.125020980834961
    9. '...' → logprob: -15.500020980834961
    10. '>A' → logprob: -15.500020980834961

Token 894: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.015229050070047379
    2. 'is' → logprob: -4.265229225158691
    3. '>=' → logprob: -7.765229225158691
    4. ' >=' → logprob: -8.265229225158691
    5. '==' → logprob: -8.515229225158691
    6. ' ==' → logprob: -9.515229225158691
    7. ' <' → logprob: -9.765229225158691
    8. '<|end|>' → logprob: -11.265229225158691
    9. '<' → logprob: -11.390229225158691
    10. '>' → logprob: -12.015229225158691

Token 895: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.5649528298527e-05
    2. ' None' → logprob: -9.500075340270996
    3. 'not' → logprob: -14.750075340270996
    4. 'none' → logprob: -16.125076293945312
    5. '   ' → logprob: -16.375076293945312
    6. '=None' → logprob: -16.375076293945312
    7. '       ' → logprob: -18.125076293945312
    8. '  ' → logprob: -18.125076293945312
    9. '_None' → logprob: -18.125076293945312
    10. '           ' → logprob: -18.500076293945312

Token 896: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018243828788399696
    2. ':' → logprob: -4.518243789672852
    3. '           ' → logprob: -5.768243789672852
    4. ':
' → logprob: -6.393243789672852
    5. '               ' → logprob: -6.643243789672852
    6. 'or' → logprob: -7.018243789672852
    7. '	or' → logprob: -10.143243789672852
    8. '       ' → logprob: -10.268243789672852
    9. '                   ' → logprob: -10.893243789672852
    10. '          ' → logprob: -11.268243789672852

Token 897: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003845090279355645
    2. '           ' → logprob: -5.62884521484375
    3. ':' → logprob: -8.87884521484375
    4. ':
' → logprob: -10.75384521484375
    5. '              ' → logprob: -10.75384521484375
    6. '                   ' → logprob: -11.37884521484375
    7. '                ' → logprob: -11.50384521484375
    8. '            ' → logprob: -11.62884521484375
    9. '):
' → logprob: -12.12884521484375
    10. '             ' → logprob: -12.50384521484375

Token 898: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03439671918749809
    2. 'left' → logprob: -4.034396648406982
    3. ' left' → logprob: -4.659396648406982
    4. 'right' → logprob: -5.534396648406982
    5. '           ' → logprob: -6.409396648406982
    6. ' right' → logprob: -7.284396648406982
    7. '                   ' → logprob: -8.40939712524414
    8. '   ' → logprob: -9.78439712524414
    9. '                ' → logprob: -11.03439712524414
    10. '```' → logprob: -11.15939712524414

Token 899: ' Not' (ID: 4037)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.31860989332199097
    2. 'right' → logprob: -1.3186099529266357
    3. '               ' → logprob: -5.318609714508057
    4. '           ' → logprob: -8.693610191345215
    5. ' left' → logprob: -8.693610191345215
    6. ' right' → logprob: -9.943610191345215
    7. '   ' → logprob: -10.943610191345215
    8. '                   ' → logprob: -11.193610191345215
    9. '#' → logprob: -12.193610191345215
    10. '	left' → logprob: -12.318610191345215

Token 900: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.31780505180358887
    2. '_connected' → logprob: -1.8178050518035889
    3. ' connected' → logprob: -2.317805051803589
    4. 'found' → logprob: -5.567805290222168
    5. '           ' → logprob: -6.567805290222168
    6. '_found' → logprob: -6.942805290222168
    7. 'connect' → logprob: -7.442805290222168
    8. '               ' → logprob: -7.692805290222168
    9. '-connected' → logprob: -7.942805290222168
    10. '_possible' → logprob: -7.942805290222168

Token 901: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09890005737543106
    2. '               ' → logprob: -3.223900079727173
    3. ':
' → logprob: -3.598900079727173
    4. ':' → logprob: -3.973900079727173
    5. '                   ' → logprob: -5.973899841308594
    6. ' or' → logprob: -5.973899841308594
    7. ',' → logprob: -7.098899841308594
    8. '):
' → logprob: -7.348899841308594
    9. '            
' → logprob: -7.598899841308594
    10. '
' → logprob: -7.723899841308594

Token 902: ' try' (ID: 2075)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4181502163410187
    2. ' left' → logprob: -1.5431501865386963
    3. 'right' → logprob: -2.5431501865386963
    4. '           ' → logprob: -3.7931501865386963
    5. ' right' → logprob: -3.7931501865386963
    6. '               ' → logprob: -5.543150424957275
    7. '   ' → logprob: -8.793149948120117
    8. '                   ' → logprob: -8.793149948120117
    9. '       ' → logprob: -10.043149948120117
    10. '	left' → logprob: -10.043149948120117

Token 903: ' to' (ID: 316)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.48763740062713623
    2. 'left' → logprob: -0.9876374006271362
    3. '               ' → logprob: -4.987637519836426
    4. ' right' → logprob: -6.362637519836426
    5. ' left' → logprob: -6.487637519836426
    6. 'in' → logprob: -6.987637519836426
    7. 'lower' → logprob: -7.112637519836426
    8. '                   ' → logprob: -8.487637519836426
    9. ' increasing' → logprob: -8.737637519836426
    10. '           ' → logprob: -8.737637519836426

Token 904: ' relax' (ID: 11424)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.133224219083786
    2. 'right' → logprob: -2.6332242488861084
    3. ' left' → logprob: -3.0082242488861084
    4. ' right' → logprob: -5.883224010467529
    5. 'increase' → logprob: -7.633224010467529
    6. '   ' → logprob: -9.383224487304688
    7. '
' → logprob: -10.883224487304688
    8. ' increase' → logprob: -11.008224487304688
    9. 'lower' → logprob: -11.133224487304688
    10. '	left' → logprob: -11.258224487304688

Token 905: ' to' (ID: 316)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.9455877542495728
    2. 'left' → logprob: -1.0705877542495728
    3. '           ' → logprob: -1.9455877542495728
    4. ' right' → logprob: -2.570587635040283
    5. ' left' → logprob: -3.195587635040283
    6. '               ' → logprob: -4.945587635040283
    7. '   ' → logprob: -7.820587635040283
    8. '       ' → logprob: -8.570588111877441
    9. ',' → logprob: -9.445588111877441
    10. '	right' → logprob: -9.695588111877441

Token 906: ' find' (ID: 1646)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.26247894763946533
    2. 'the' → logprob: -2.012478828430176
    3. 'right' → logprob: -2.637478828430176
    4. ' the' → logprob: -5.137478828430176
    5. 'allow' → logprob: -5.137478828430176
    6. 'include' → logprob: -5.387478828430176
    7. ' left' → logprob: -5.637478828430176
    8. 'find' → logprob: -7.012478828430176
    9. 'lower' → logprob: -7.137478828430176
    10. 'use' → logprob: -7.387478828430176

Token 907: ' some' (ID: 1236)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.29445219039917
    2. 'a' → logprob: -1.41945219039917
    3. ' edges' → logprob: -2.04445219039917
    4. 'right' → logprob: -2.29445219039917
    5. ' more' → logprob: -2.66945219039917
    6. 'left' → logprob: -3.29445219039917
    7. 'lower' → logprob: -3.29445219039917
    8. 'more' → logprob: -3.54445219039917
    9. 'edges' → logprob: -4.04445219039917
    10. ' right' → logprob: -4.16945219039917

Token 908: ' solution' (ID: 7578)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.10552085191011429
    2. ' edges' → logprob: -3.7305209636688232
    3. 'connection' → logprob: -4.230520725250244
    4. 'connections' → logprob: -4.855520725250244
    5. 'lambda' → logprob: -4.980520725250244
    6. 'connect' → logprob: -4.980520725250244
    7. 'solution' → logprob: -5.605520725250244
    8. 'count' → logprob: -5.605520725250244
    9. 'union' → logprob: -5.605520725250244
    10. 'connected' → logprob: -5.730520725250244

Token 909: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5060518980026245
    2. '           ' → logprob: -1.0060518980026245
    3. '
' → logprob: -4.506052017211914
    4. ':
' → logprob: -4.881052017211914
    5. '                   ' → logprob: -5.006052017211914
    6. '            
' → logprob: -6.256052017211914
    7. '):
' → logprob: -6.631052017211914
    8. ':' → logprob: -7.381052017211914
    9. '    
' → logprob: -7.381052017211914
    10. '                
' → logprob: -7.756052017211914

Token 910: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14530567824840546
    2. '           ' → logprob: -2.020305633544922
    3. '                   ' → logprob: -6.395305633544922
    4. '```' → logprob: -8.145305633544922
    5. ',' → logprob: -8.895305633544922
    6. 'left' → logprob: -9.020305633544922
    7. ' left' → logprob: -9.145305633544922
    8. '   ' → logprob: -10.020305633544922
    9. '[left' → logprob: -10.270305633544922
    10. '
' → logprob: -10.395305633544922

Token 911: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.0185869932174683
    2. 'left' (adapté à ' left') → logprob: -1.5185869932174683
    3. ' right' → logprob: -1.7685869932174683
    4. 'right' → logprob: -2.143587112426758
    5. '           ' → logprob: -2.268587112426758
    6. '               ' → logprob: -3.643587112426758
    7. '   ' → logprob: -6.768587112426758
    8. '                   ' → logprob: -7.643587112426758
    9. ' if' → logprob: -8.393587112426758
    10. '       ' → logprob: -8.518587112426758

Token 912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804229199886322
    2. ' =' → logprob: -3.2880423069000244
    3. '+=' → logprob: -14.538042068481445
    4. ',' → logprob: -16.038042068481445
    5. ' +=' → logprob: -16.288042068481445
    6. '*=' → logprob: -17.413042068481445
    7. '=
' → logprob: -17.538042068481445
    8. '=

' → logprob: -17.538042068481445
    9. ' ' → logprob: -17.663042068481445
    10. '.=' → logprob: -18.288042068481445

Token 913: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -4.56102097814437e-05
    2. ' mid' → logprob: -10.000045776367188
    3. 'right' → logprob: -16.500045776367188
    4. '(mid' → logprob: -17.125045776367188
    5. 'left' → logprob: -18.500045776367188
    6. 'middle' → logprob: -18.625045776367188
    7. '[mid' → logprob: -18.750045776367188
    8. '_mid' → logprob: -19.375045776367188
    9. 'midt' → logprob: -20.625045776367188
    10. 'min' → logprob: -21.125045776367188

Token 914: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6473974585533142
    2. ' else' → logprob: -1.522397518157959
    3. '           ' → logprob: -1.772397518157959
    4. '+' → logprob: -2.647397518157959
    5. '
' → logprob: -4.647397518157959
    6. ' +' → logprob: -6.272397518157959
    7. '<|end|>' → logprob: -6.397397518157959
    8. '+
' → logprob: -6.897397518157959
    9. '               ' → logprob: -7.022397518157959
    10. '       ' → logprob: -7.522397518157959

Token 915: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006886226590722799
    2. 'else' → logprob: -5.631886005401611
    3. ' else' → logprob: -5.756886005401611
    4. '```' → logprob: -9.88188648223877
    5. '<|end|>' → logprob: -10.75688648223877
    6. '               ' → logprob: -10.88188648223877
    7. '       ' → logprob: -11.38188648223877
    8. 'elif' → logprob: -12.00688648223877
    9. '
' → logprob: -12.88188648223877
    10. '          ' → logprob: -13.63188648223877

Token 916: ' continue' (ID: 4901)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3684220016002655
    2. '           ' → logprob: -1.618422031402588
    3. ' else' → logprob: -2.243422031402588
    4. 'continue' (adapté à ' continue') → logprob: -5.868422031402588
    5. ' continue' → logprob: -8.24342155456543
    6. '
' → logprob: -8.36842155456543
    7. '               ' → logprob: -8.61842155456543
    8. 'right' → logprob: -8.86842155456543
    9. '       ' → logprob: -9.36842155456543
    10. 'elif' → logprob: -9.49342155456543

Token 917: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.024604277219623e-05
    2. '            
' → logprob: -10.750040054321289
    3. '
' → logprob: -11.625040054321289
    4. '```' → logprob: -12.500040054321289
    5. '<|end|>' → logprob: -13.625040054321289
    6. '       ' → logprob: -13.625040054321289
    7. 'elif' → logprob: -14.250040054321289
    8. '          ' → logprob: -14.750040054321289
    9. 'if' → logprob: -14.750040054321289
    10. '<|end|>' → logprob: -14.875040054321289

Token 918: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00201333686709404
    2. '```' → logprob: -6.252013206481934
    3. '
' → logprob: -10.002013206481934
    4. '       ' → logprob: -10.877013206481934
    5. '   ' → logprob: -12.377013206481934
    6. '``' → logprob: -12.627013206481934
    7. '<|end|>' → logprob: -12.752013206481934
    8. '            
' → logprob: -12.877013206481934
    9. ' if' → logprob: -13.752013206481934
    10. 'else' → logprob: -13.752013206481934

Token 919: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007298025768250227
    2. 'if' (adapté à ' if') → logprob: -5.132297992706299
    3. ' if' → logprob: -6.632297992706299
    4. '       ' → logprob: -10.632298469543457
    5. '   ' → logprob: -10.882298469543457
    6. ' ' → logprob: -13.007298469543457
    7. '
' → logprob: -13.132298469543457
    8. '            
' → logprob: -13.882298469543457
    9. '          ' → logprob: -14.007298469543457
    10. '               ' → logprob: -14.382298469543457

Token 920: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.1008713702030946e-06
    2. ' count' → logprob: -13.125001907348633
    3. '(count' → logprob: -17.250001907348633
    4. 'cost' → logprob: -17.875001907348633
    5. '	count' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '[count' → logprob: -19.250001907348633
    8. 'abs' → logprob: -19.500001907348633
    9. 'c' → logprob: -19.750001907348633
    10. '$count' → logprob: -19.875001907348633

Token 921: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.3856492842023727e-06
    2. 'A' → logprob: -13.625000953674316
    3. '```' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '=' → logprob: -18.625001907348633
    6. '
' → logprob: -19.125001907348633
    7. '>A' → logprob: -19.375001907348633
    8. '_' → logprob: -19.500001907348633
    9. '==' → logprob: -19.500001907348633
    10. '#' → logprob: -19.500001907348633

Token 922: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32228636741638184
    2. '<' → logprob: -2.322286367416382
    3. ' >=' → logprob: -2.697286367416382
    4. ' ==' → logprob: -3.322286367416382
    5. '>=' → logprob: -3.822286367416382
    6. ' >' → logprob: -4.322286605834961
    7. '==' → logprob: -4.322286605834961
    8. '<|end|>' → logprob: -4.572286605834961
    9. ' <=' → logprob: -5.197286605834961
    10. '>' → logprob: -5.322286605834961

Token 923: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013119018403813243
    2. ' self' → logprob: -6.751311779022217
    3. '           ' → logprob: -8.876312255859375
    4. '=self' → logprob: -14.001312255859375
    5. '       ' → logprob: -14.751312255859375
    6. '               ' → logprob: -15.376312255859375
    7. '   ' → logprob: -15.751312255859375
    8. '	self' → logprob: -15.876312255859375
    9. '(self' → logprob: -16.251312255859375
    10. 'k' → logprob: -16.626312255859375

Token 924: '.k' (ID: 9040)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016306493431329727
    2. '.k' → logprob: -4.766306400299072
    3. ' k' → logprob: -5.391306400299072
    4. '_k' → logprob: -6.516306400299072
    5. '           ' → logprob: -6.766306400299072
    6. '	k' → logprob: -9.14130687713623
    7. 'K' → logprob: -9.51630687713623
    8. '               ' → logprob: -10.01630687713623
    9. '{k' → logprob: -10.01630687713623
    10. '=k' → logprob: -10.26630687713623

Token 925: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1509217917919159
    2. ':
' → logprob: -2.1509218215942383
    3. '           ' → logprob: -3.7759218215942383
    4. ':left' → logprob: -8.150921821594238
    5. '               ' → logprob: -8.400921821594238
    6. '):
' → logprob: -9.400921821594238
    7. '       ' → logprob: -9.650921821594238
    8. ')' → logprob: -11.150921821594238
    9. '[left' → logprob: -11.150921821594238
    10. ':right' → logprob: -11.400921821594238

Token 926: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010925926035270095
    2. ' left' → logprob: -7.626092433929443
    3. 'left' → logprob: -8.501092910766602
    4. '           ' → logprob: -8.751092910766602
    5. '```' → logprob: -9.126092910766602
    6. 'right' → logprob: -9.876092910766602
    7. ' right' → logprob: -10.376092910766602
    8. '[left' → logprob: -11.626092910766602
    9. '                   ' → logprob: -11.626092910766602
    10. ':
' → logprob: -12.126092910766602

Token 927: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0974121168255806
    2. 'left' → logprob: -2.472412109375
    3. ' right' → logprob: -5.097412109375
    4. '               ' → logprob: -6.972412109375
    5. ' left' → logprob: -6.972412109375
    6. '   ' → logprob: -8.347412109375
    7. '           ' → logprob: -8.847412109375
    8. '       ' → logprob: -11.097412109375
    9. '	right' → logprob: -11.347412109375
    10. '                   ' → logprob: -11.722412109375

Token 928: ' We' (ID: 1416)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1986958235502243
    2. 'left' → logprob: -1.8236957788467407
    3. ' right' → logprob: -4.198695659637451
    4. ' left' → logprob: -5.698695659637451
    5. '               ' → logprob: -8.32369613647461
    6. '   ' → logprob: -9.82369613647461
    7. '           ' → logprob: -10.07369613647461
    8. 'Right' → logprob: -11.32369613647461
    9. '	right' → logprob: -11.69869613647461
    10. '            ' → logprob: -11.69869613647461

Token 929: ' want' (ID: 1682)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.9698482155799866
    2. 'left' → logprob: -1.4698481559753418
    3. ' right' → logprob: -2.344848155975342
    4. '           ' → logprob: -2.719848155975342
    5. '               ' → logprob: -2.969848155975342
    6. ' =' → logprob: -3.094848155975342
    7. 'right' → logprob: -3.344848155975342
    8. '=' → logprob: -3.344848155975342
    9. '                   ' → logprob: -3.594848155975342
    10. '            ' → logprob: -4.844848155975342

Token 930: ' more' (ID: 945)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.051451325416565
    2. ' to' → logprob: -1.426451325416565
    3. ' more' → logprob: -1.426451325416565
    4. 'more' → logprob: -2.0514512062072754
    5. 'right' → logprob: -4.301451206207275
    6. 'lower' → logprob: -4.551451206207275
    7. 'left' → logprob: -5.176451206207275
    8. ' lower' → logprob: -6.301451206207275
    9. ' right' → logprob: -6.301451206207275
    10. '           ' → logprob: -6.426451206207275

Token 931: ' company' (ID: 3175)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5143726468086243
    2. 'company' → logprob: -1.6393725872039795
    3. ' company' → logprob: -2.0143725872039795
    4. ' A' → logprob: -2.6393725872039795
    5. 'left' → logprob: -7.014372825622559
    6. 'use' → logprob: -7.514372825622559
    7. ' use' → logprob: -8.139372825622559
    8. ' edges' → logprob: -8.264372825622559
    9. ' left' → logprob: -8.389372825622559
    10. 'right' → logprob: -8.639372825622559

Token 932: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.616767406463623
    2. 'A' → logprob: -0.866767406463623
    3. '_A' → logprob: -3.241767406463623
    4. ' ' → logprob: -7.491767406463623
    5. '_' → logprob: -8.366767883300781
    6. ' ' → logprob: -10.366767883300781
    7. '   ' → logprob: -10.366767883300781
    8. ' _' → logprob: -11.116767883300781
    9. '  ' → logprob: -11.741767883300781
    10. ' edges' → logprob: -11.741767883300781

Token 933: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.05375625193119049
    2. 'edges' → logprob: -3.1787562370300293
    3. '_edges' → logprob: -4.553756237030029
    4. '_' → logprob: -9.303756713867188
    5. ' ' → logprob: -10.678756713867188
    6. ' _' → logprob: -11.678756713867188
    7. 's' → logprob: -11.678756713867188
    8. '(edges' → logprob: -12.303756713867188
    9. 'Edges' → logprob: -12.678756713867188
    10. '   ' → logprob: -12.678756713867188

Token 934: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5160149931907654
    2. '               ' → logprob: -1.2660150527954102
    3. 'left' → logprob: -2.76601505279541
    4. ' left' → logprob: -3.76601505279541
    5. 'right' → logprob: -4.51601505279541
    6. ',' → logprob: -5.01601505279541
    7. ' right' → logprob: -5.39101505279541
    8. ':
' → logprob: -5.76601505279541
    9. '
' → logprob: -5.89101505279541
    10. ':' → logprob: -6.39101505279541

Token 935: ' so' (ID: 813)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.35971128940582275
    2. ' right' → logprob: -1.4847112894058228
    3. 'left' → logprob: -2.984711170196533
    4. ' left' → logprob: -3.859711170196533
    5. '               ' → logprob: -5.984711170196533
    6. '           ' → logprob: -6.984711170196533
    7. '   ' → logprob: -8.609711647033691
    8. '                ' → logprob: -9.734711647033691
    9. '            ' → logprob: -9.734711647033691
    10. '	right' → logprob: -9.734711647033691

Token 936: ' lower' (ID: 6931)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0010893779108300805
    2. 'left' → logprob: -7.251089572906494
    3. ' right' → logprob: -8.001089096069336
    4. '               ' → logprob: -10.251089096069336
    5. '           ' → logprob: -12.501089096069336
    6. '   ' → logprob: -13.626089096069336
    7. '	right' → logprob: -13.876089096069336
    8. '                   ' → logprob: -14.501089096069336
    9. '
' → logprob: -14.626089096069336
    10. '              ' → logprob: -14.751089096069336

Token 937: ' lambda' (ID: 27871)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02671823464334011
    2. 'lambda' → logprob: -4.4017181396484375
    3. 'mid' → logprob: -4.7767181396484375
    4. 'left' → logprob: -5.5267181396484375
    5. 'the' → logprob: -7.0267181396484375
    6. ' right' → logprob: -7.2767181396484375
    7. ' lambda' → logprob: -10.026718139648438
    8. '           ' → logprob: -10.276718139648438
    9. ' mid' → logprob: -11.651718139648438
    10. ' the' → logprob: -11.651718139648438

Token 938: ' to' (ID: 316)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.9175664186477661
    2. ' right' → logprob: -1.0425664186477661
    3. 'left' → logprob: -2.7925662994384766
    4. '               ' → logprob: -2.9175662994384766
    5. '=' → logprob: -3.1675662994384766
    6. '           ' → logprob: -3.9175662994384766
    7. ' left' → logprob: -4.042566299438477
    8. ' =' → logprob: -4.042566299438477
    9. ':right' → logprob: -4.667566299438477
    10. '[right' → logprob: -5.417566299438477

Token 939: ' make' (ID: 1520)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.7134369611740112
    2. 'right' → logprob: -1.5884369611740112
    3. ' mid' → logprob: -2.588437080383301
    4. ' right' → logprob: -2.838437080383301
    5. 'allow' → logprob: -3.338437080383301
    6. 'left' → logprob: -3.463437080383301
    7. 'increase' → logprob: -3.463437080383301
    8. 'make' → logprob: -4.213437080383301
    9. ' allow' → logprob: -4.338437080383301
    10. 'de' → logprob: -4.588437080383301

Token 940: ' A' (ID: 355)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.9240151643753052
    2. 'A' → logprob: -1.1740151643753052
    3. 'using' → logprob: -1.5490151643753052
    4. ' company' → logprob: -3.1740150451660156
    5. 'e' → logprob: -4.674015045166016
    6. 'cho' → logprob: -4.924015045166016
    7. ' using' → logprob: -5.674015045166016
    8. 'them' → logprob: -5.674015045166016
    9. 'edges' → logprob: -5.924015045166016
    10. 'the' → logprob: -6.049015045166016

Token 941: ' cheaper' (ID: 31533)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.39365166425704956
    2. 'edges' → logprob: -1.1436517238616943
    3. ' cheaper' → logprob: -6.018651485443115
    4. ' more' → logprob: -6.143651485443115
    5. ' ' → logprob: -7.768651485443115
    6. 'che' → logprob: -7.893651485443115
    7. 'more' → logprob: -8.018651962280273
    8. '_edges' → logprob: -8.768651962280273
    9. 'cost' → logprob: -8.893651962280273
    10. '   ' → logprob: -9.268651962280273

Token 942: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0033615827560425
    2. 'left' → logprob: -2.003361701965332
    3. ' right' → logprob: -2.003361701965332
    4. '               ' → logprob: -2.128361701965332
    5. 'right' → logprob: -2.503361701965332
    6. ' left' → logprob: -2.503361701965332
    7. '
' → logprob: -3.253361701965332
    8. ',' → logprob: -4.378361701965332
    9. ',
' → logprob: -5.128361701965332
    10. ':
' → logprob: -5.378361701965332

Token 943: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01858825795352459
    2. 'left' → logprob: -5.018588066101074
    3. ' left' → logprob: -5.018588066101074
    4. '           ' → logprob: -6.143588066101074
    5. '```' → logprob: -6.518588066101074
    6. 'right' → logprob: -7.393588066101074
    7. ' right' → logprob: -8.018588066101074
    8. '                   ' → logprob: -8.393588066101074
    9. '
' → logprob: -8.768588066101074
    10. '   ' → logprob: -10.018588066101074

Token 944: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.10045336931943893
    2. ' right' → logprob: -2.3504533767700195
    3. 'left' → logprob: -8.72545337677002
    4. '               ' → logprob: -9.72545337677002
    5. ' left' → logprob: -11.35045337677002
    6. '           ' → logprob: -12.47545337677002
    7. '   ' → logprob: -12.72545337677002
    8. '	right' → logprob: -12.85045337677002
    9. '                   ' → logprob: -13.85045337677002
    10. 'Right' → logprob: -14.72545337677002

Token 945: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. ' =
' → logprob: -17.701414108276367
    4. ' ' → logprob: -17.951414108276367
    5. '<|end|>' → logprob: -17.951414108276367
    6. '    ' → logprob: -18.576414108276367
    7. ')' → logprob: -18.701414108276367
    8. ' +=' → logprob: -18.701414108276367
    9. '.=' → logprob: -19.076414108276367
    10. '＝' → logprob: -19.326414108276367

Token 946: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00861456897109747
    2. ' mid' → logprob: -4.758614540100098
    3. '(mid' → logprob: -18.133615493774414
    4. '[mid' → logprob: -18.383615493774414
    5. '_mid' → logprob: -19.633615493774414
    6. 'm' → logprob: -21.508615493774414
    7. 'middle' → logprob: -21.633615493774414
    8. 'midt' → logprob: -22.883615493774414
    9. '.mid' → logprob: -22.883615493774414
    10. ' midpoint' → logprob: -23.383615493774414

Token 947: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6646386981010437
    2. '           ' → logprob: -1.0396387577056885
    3. 'else' → logprob: -2.0396387577056885
    4. '<|end|>' → logprob: -6.914638519287109
    5. '               ' → logprob: -7.289638519287109
    6. '       ' → logprob: -9.78963851928711
    7. '          ' → logprob: -10.53963851928711
    8. '            ' → logprob: -10.78963851928711
    9. '```' → logprob: -11.28963851928711
    10. 'elif' → logprob: -11.28963851928711

Token 948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8958013653755188
    2. 'else' → logprob: -1.020801305770874
    3. ' else' → logprob: -1.770801305770874
    4. '               ' → logprob: -2.895801305770874
    5. '<|end|>' → logprob: -5.645801544189453
    6. '```' → logprob: -6.270801544189453
    7. '       ' → logprob: -8.520801544189453
    8. 'elif' → logprob: -9.645801544189453
    9. '   ' → logprob: -10.395801544189453
    10. '          ' → logprob: -10.520801544189453

Token 949: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04863698035478592
    2. '           ' → logprob: -3.4236369132995605
    3. ' else' → logprob: -4.2986369132995605
    4. '```' → logprob: -6.6736369132995605
    5. '       ' → logprob: -11.048637390136719
    6. '          ' → logprob: -12.923637390136719
    7. 'elif' → logprob: -13.298637390136719
    8. '	else' → logprob: -13.423637390136719
    9. '   ' → logprob: -13.423637390136719
    10. '<|end|>' → logprob: -13.798637390136719

Token 950: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6117694973945618
    2. ':
' → logprob: -1.236769437789917
    3. '               ' → logprob: -2.361769437789917
    4. ':left' → logprob: -2.861769437789917
    5. 'left' → logprob: -4.361769676208496
    6. ' left' → logprob: -6.861769676208496
    7. '           ' → logprob: -7.111769676208496
    8. '[left' → logprob: -7.236769676208496
    9. '	left' → logprob: -8.861769676208496
    10. ':right' → logprob: -9.736769676208496

Token 951: '               ' (ID: 506)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4374753534793854
    2. ' left' → logprob: -1.562475323677063
    3. '               ' → logprob: -2.0624754428863525
    4. ':left' → logprob: -5.062475204467773
    5. ':' → logprob: -5.437475204467773
    6. '```' → logprob: -5.812475204467773
    7. '[left' → logprob: -6.562475204467773
    8. '           ' → logprob: -6.812475204467773
    9. '	left' → logprob: -7.562475204467773
    10. '            ' → logprob: -8.437475204467773

Token 952: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002891066251322627
    2. ' left' → logprob: -8.250288963317871
    3. '           ' → logprob: -11.250288963317871
    4. '               ' → logprob: -11.750288963317871
    5. '	left' → logprob: -12.125288963317871
    6. '[left' → logprob: -14.375288963317871
    7. '   ' → logprob: -15.125288963317871
    8. 'answer' → logprob: -15.625288963317871
    9. ':left' → logprob: -16.125289916992188
    10. 'right' → logprob: -16.375289916992188

Token 953: ' count' (ID: 3605)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.001430355361662805
    2. ' left' → logprob: -6.751430511474609
    3. '           ' → logprob: -8.75143051147461
    4. 'answer' → logprob: -9.37643051147461
    5. '               ' → logprob: -11.62643051147461
    6. '	left' → logprob: -12.50143051147461
    7. 'if' → logprob: -13.00143051147461
    8. 'right' → logprob: -14.25143051147461
    9. '[left' → logprob: -14.87643051147461
    10. '   ' → logprob: -15.00143051147461

Token 954: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.003014430170878768
    2. '               ' → logprob: -6.25301456451416
    3. ' =' → logprob: -8.00301456451416
    4. '=' → logprob: -8.37801456451416
    5. '   ' → logprob: -8.75301456451416
    6. 'A' → logprob: -9.12801456451416
    7. '=A' → logprob: -9.50301456451416
    8. '```' → logprob: -10.50301456451416
    9. '                   ' → logprob: -10.62801456451416
    10. '           ' → logprob: -10.75301456451416

Token 955: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4181721806526184
    2. ' =' → logprob: -1.5431721210479736
    3. ' >=' → logprob: -2.5431721210479736
    4. '>=' → logprob: -3.0431721210479736
    5. '<=' → logprob: -7.168172359466553
    6. ' <=' → logprob: -7.293172359466553
    7. '           ' → logprob: -10.043171882629395
    8. '≥' → logprob: -10.168171882629395
    9. '<|end|>' → logprob: -10.543171882629395
    10. ')>=' → logprob: -10.668171882629395

Token 956: ' k' (ID: 372)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0012969005620107055
    2. ' left' → logprob: -7.2512969970703125
    3. 'mid' → logprob: -7.5012969970703125
    4. 'right' → logprob: -10.376296997070312
    5. '           ' → logprob: -13.126296997070312
    6. '               ' → logprob: -14.626296997070312
    7. ' mid' → logprob: -15.376296997070312
    8. '                   ' → logprob: -15.751296997070312
    9. '	left' → logprob: -15.751296997070312
    10. '   ' → logprob: -16.376296997070312

Token 957: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12117493152618408
    2. '           ' → logprob: -3.1211748123168945
    3. ' left' → logprob: -3.9961748123168945
    4. 'left' → logprob: -4.2461748123168945
    5. '[left' → logprob: -4.8711748123168945
    6. ':left' → logprob: -5.1211748123168945
    7. ':
' → logprob: -5.1211748123168945
    8. '                   ' → logprob: -5.2461748123168945
    9. '```' → logprob: -5.2461748123168945
    10. ':' → logprob: -6.4961748123168945

Token 958: ' we' (ID: 581)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12493385374546051
    2. ' left' → logprob: -2.749933958053589
    3. '               ' → logprob: -3.249933958053589
    4. '           ' → logprob: -4.24993371963501
    5. '	left' → logprob: -8.499934196472168
    6. '                   ' → logprob: -9.249934196472168
    7. '[left' → logprob: -9.999934196472168
    8. '   ' → logprob: -10.249934196472168
    9. '       ' → logprob: -10.499934196472168
    10. 'right' → logprob: -10.624934196472168

Token 959: ' want' (ID: 1682)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1679984331130981
    2. '           ' → logprob: -1.4179984331130981
    3. '                   ' → logprob: -1.7929984331130981
    4. 'left' → logprob: -2.4179983139038086
    5. ' left' → logprob: -2.7929983139038086
    6. ' =' → logprob: -2.9179983139038086
    7. '=' → logprob: -3.9179983139038086
    8. '   ' → logprob: -4.542998313903809
    9. '[left' → logprob: -4.917998313903809
    10. '                ' → logprob: -5.167998313903809

Token 960: ' exactly' (ID: 9707)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023707767948508263
    2. ' left' → logprob: -3.773707866668701
    3. '               ' → logprob: -7.773707866668701
    4. '                   ' → logprob: -11.148707389831543
    5. 'right' → logprob: -11.148707389831543
    6. '           ' → logprob: -11.773707389831543
    7. '	left' → logprob: -13.148707389831543
    8. '[left' → logprob: -13.648707389831543
    9. '   ' → logprob: -14.773707389831543
    10. ':left' → logprob: -14.773707389831543

Token 961: ' k' (ID: 372)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.46657511591911316
    2. 'count' → logprob: -1.0915751457214355
    3. 'mid' → logprob: -3.8415751457214355
    4. 'right' → logprob: -5.0915751457214355
    5. ' left' → logprob: -5.4665751457214355
    6. ' count' → logprob: -5.9665751457214355
    7. 'k' → logprob: -6.3415751457214355
    8. ' mid' → logprob: -8.466574668884277
    9. '           ' → logprob: -8.466574668884277
    10. '   ' → logprob: -8.841574668884277

Token 962: ',' (ID: 11)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5940618515014648
    2. '               ' → logprob: -1.4690618515014648
    3. ' left' → logprob: -2.219061851501465
    4. '           ' → logprob: -3.219061851501465
    5. 'right' → logprob: -3.969061851501465
    6. ':' → logprob: -3.969061851501465
    7. ' and' → logprob: -5.094061851501465
    8. ' =' → logprob: -5.594061851501465
    9. '=' → logprob: -5.844061851501465
    10. '                   ' → logprob: -5.844061851501465

Token 963: ' so' (ID: 813)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.05217102915048599
    2. ' left' → logprob: -3.052170991897583
    3. '           ' → logprob: -6.052171230316162
    4. '               ' → logprob: -6.927171230316162
    5. '	left' → logprob: -9.052170753479004
    6. 'right' → logprob: -9.677170753479004
    7. '   ' → logprob: -10.802170753479004
    8. '       ' → logprob: -11.177170753479004
    9. '[left' → logprob: -12.052170753479004
    10. '```' → logprob: -12.052170753479004

Token 964: ' try' (ID: 2075)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0006240377551876009
    2. ' left' → logprob: -7.875624179840088
    3. 'if' → logprob: -8.50062370300293
    4. 'right' → logprob: -11.25062370300293
    5. '           ' → logprob: -11.37562370300293
    6. '               ' → logprob: -12.25062370300293
    7. 'answer' → logprob: -12.87562370300293
    8. '                   ' → logprob: -13.00062370300293
    9. '	left' → logprob: -13.00062370300293
    10. ':left' → logprob: -13.75062370300293

Token 965: ' to' (ID: 316)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04447558894753456
    2. ' left' → logprob: -3.919475555419922
    3. '               ' → logprob: -4.669475555419922
    4. 'to' → logprob: -5.544475555419922
    5. 'lower' → logprob: -5.919475555419922
    6. 'right' → logprob: -6.044475555419922
    7. '                   ' → logprob: -6.169475555419922
    8. ' to' → logprob: -6.794475555419922
    9. '	left' → logprob: -7.544475555419922
    10. '```' → logprob: -7.669475555419922

Token 966: ' increase' (ID: 7064)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0007343433680944145
    2. ' left' → logprob: -7.375734329223633
    3. 'lower' → logprob: -9.375734329223633
    4. 'right' → logprob: -10.875734329223633
    5. 'increase' → logprob: -12.750734329223633
    6. '	left' → logprob: -15.250734329223633
    7. 'tight' → logprob: -16.000734329223633
    8. 'raise' → logprob: -16.000734329223633
    9. 'lef' → logprob: -16.500734329223633
    10. '
' → logprob: -16.625734329223633

Token 967: ' lambda' (ID: 27871)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.02383139356970787
    2. ' left' → logprob: -3.773831367492676
    3. 'right' → logprob: -7.523831367492676
    4. 'lambda' → logprob: -10.898831367492676
    5. ' right' → logprob: -11.273831367492676
    6. '	left' → logprob: -11.773831367492676
    7. '   ' → logprob: -12.273831367492676
    8. '```' → logprob: -14.023831367492676
    9. '_left' → logprob: -14.773831367492676
    10. '           ' → logprob: -15.523831367492676

Token 968: ' to' (ID: 316)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2961132228374481
    2. '=' → logprob: -2.2961132526397705
    3. '           ' → logprob: -2.6711132526397705
    4. ' left' → logprob: -2.9211132526397705
    5. 'right' → logprob: -4.046113014221191
    6. ' =' → logprob: -5.296113014221191
    7. '[left' → logprob: -5.421113014221191
    8. ' right' → logprob: -6.046113014221191
    9. '	left' → logprob: -6.796113014221191
    10. ':left' → logprob: -6.921113014221191

Token 969: ' reduce' (ID: 10389)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.0081983804702759
    2. 'lower' → logprob: -1.1331983804702759
    3. 'mid' → logprob: -1.3831983804702759
    4. ' lower' → logprob: -3.7581982612609863
    5. ' mid' → logprob: -4.133198261260986
    6. ' left' → logprob: -4.383198261260986
    7. 'reduce' → logprob: -5.758198261260986
    8. 'tight' → logprob: -6.758198261260986
    9. ' tighten' → logprob: -7.133198261260986
    10. ' find' → logprob: -7.258198261260986

Token 970: ' A' (ID: 355)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -1.5333154201507568
    2. 'company' → logprob: -1.6583154201507568
    3. 'count' → logprob: -1.7833154201507568
    4. ' count' → logprob: -1.9083154201507568
    5. 'A' → logprob: -2.658315420150757
    6. ' left' → logprob: -3.033315420150757
    7. 'left' → logprob: -3.158315420150757
    8. ' A' → logprob: -3.158315420150757
    9. ' usage' → logprob: -3.533315420150757
    10. ' use' → logprob: -4.533315658569336

Token 971: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.2928350567817688
    2. 'edges' → logprob: -2.167834997177124
    3. ' usage' → logprob: -2.417834997177124
    4. ' left' → logprob: -4.292835235595703
    5. 'left' → logprob: -4.292835235595703
    6. 'usage' → logprob: -4.792835235595703
    7. '_edges' → logprob: -5.417835235595703
    8. '           ' → logprob: -5.917835235595703
    9. 'count' → logprob: -6.292835235595703
    10. ' count' → logprob: -6.917835235595703

Token 972: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0979505330324173
    2. '               ' → logprob: -2.9729504585266113
    3. ' left' → logprob: -3.8479504585266113
    4. 'left' → logprob: -4.597950458526611
    5. ' right' → logprob: -5.222950458526611
    6. '[left' → logprob: -6.222950458526611
    7. 'right' → logprob: -7.097950458526611
    8. '<|end|>' → logprob: -7.347950458526611
    9. '            
' → logprob: -7.847950458526611
    10. '            ' → logprob: -7.972950458526611

Token 973: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000877039332408458
    2. '```' → logprob: -8.000877380371094
    3. ' left' → logprob: -8.500877380371094
    4. 'left' → logprob: -8.875877380371094
    5. '           ' → logprob: -9.625877380371094
    6. '   ' → logprob: -9.625877380371094
    7. '       ' → logprob: -10.875877380371094
    8. '	left' → logprob: -11.250877380371094
    9. '[left' → logprob: -11.750877380371094
    10. '                   ' → logprob: -12.000877380371094

Token 974: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.00025633294717408717
    2. ' left' → logprob: -8.625256538391113
    3. '           ' → logprob: -10.000256538391113
    4. 'right' → logprob: -11.125256538391113
    5. '               ' → logprob: -11.750256538391113
    6. '	left' → logprob: -12.125256538391113
    7. '   ' → logprob: -13.250256538391113
    8. 'if' → logprob: -14.250256538391113
    9. '[left' → logprob: -15.375256538391113
    10. '                   ' → logprob: -15.500256538391113

Token 975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '<|end|>' → logprob: -17.201414108276367
    4. ')' → logprob: -17.451414108276367
    5. ' ' → logprob: -17.576414108276367
    6. '=line' → logprob: -17.826414108276367
    7. '=
' → logprob: -18.201414108276367
    8. '＝' → logprob: -18.326414108276367
    9. ',' → logprob: -18.701414108276367
    10. '=

' → logprob: -19.451414108276367

Token 976: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.693148672580719
    2. 'mid' → logprob: -0.693148672580719
    3. '(mid' → logprob: -14.193148612976074
    4. '[mid' → logprob: -14.818148612976074
    5. '_mid' → logprob: -15.568148612976074
    6. ' midpoint' → logprob: -16.19314956665039
    7. '.mid' → logprob: -17.06814956665039
    8. 'Mid' → logprob: -18.94314956665039
    9. 'middle' → logprob: -19.69314956665039
    10. 'midt' → logprob: -19.94314956665039

Token 977: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 978: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 979: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019960707053542137
    2. '
' → logprob: -4.894960880279541
    3. '<|end|>' → logprob: -5.519960880279541
    4. 'if' → logprob: -5.644960880279541
    5. ' if' → logprob: -6.269960880279541
    6. '```' → logprob: -7.144960880279541
    7. '        
' → logprob: -7.394960880279541
    8. 'final' → logprob: -8.269960403442383
    9. '#' (adapté à ' #') → logprob: -8.644960403442383
    10. 'token' → logprob: -8.644960403442383

Token 980: ' Track' (ID: 30844)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2726958692073822
    2. 'answer' → logprob: -2.772695779800415
    3. 'final' → logprob: -2.897695779800415
    4. '
' → logprob: -3.147695779800415
    5. 'best' → logprob: -3.522695779800415
    6. 'result' → logprob: -4.147696018218994
    7. '       ' → logprob: -4.647696018218994
    8. '#' → logprob: -5.022696018218994
    9. 'pass' → logprob: -5.522696018218994
    10. ' if' → logprob: -5.647696018218994

Token 981: ' answer' (ID: 6052)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7123909592628479
    2. 'if' → logprob: -1.0873908996582031
    3. 'answer' → logprob: -2.712390899658203
    4. 'best' → logprob: -3.212390899658203
    5. ' best' → logprob: -3.837390899658203
    6. 'the' → logprob: -4.712390899658203
    7. '           ' → logprob: -4.712390899658203
    8. ' the' → logprob: -4.837390899658203
    9. ' answer' → logprob: -4.837390899658203
    10. 'result' → logprob: -5.712390899658203

Token 982: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15351371467113495
    2. '       ' → logprob: -2.2785136699676514
    3. '<|end|>' → logprob: -3.6535136699676514
    4. '<|end|>' → logprob: -5.6535139083862305
    5. '   ' → logprob: -5.7785139083862305
    6. ' if' → logprob: -6.2785139083862305
    7. '               ' → logprob: -6.9035139083862305
    8. 'token' → logprob: -7.1535139083862305
    9. 'if' → logprob: -7.6535139083862305
    10. ',' → logprob: -7.7785139083862305

Token 983: ' we' (ID: 581)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.013060581870377064
    2. 'cost' → logprob: -4.638060569763184
    3. ' count' → logprob: -5.763060569763184
    4. ' cost' → logprob: -9.138060569763184
    5. '(count' → logprob: -10.888060569763184
    6. '   ' → logprob: -11.138060569763184
    7. 'company' → logprob: -12.263060569763184
    8. ' ' → logprob: -12.513060569763184
    9. 'answer' → logprob: -13.138060569763184
    10. '       ' → logprob: -14.138060569763184

Token 984: ' get' (ID: 717)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.07399635761976242
    2. ' have' → logprob: -2.8239963054656982
    3. 'can' → logprob: -5.573996543884277
    4. 'found' → logprob: -5.823996543884277
    5. 'count' → logprob: -5.823996543884277
    6. ' got' → logprob: -7.698996543884277
    7. 'got' → logprob: -7.948996543884277
    8. 'know' → logprob: -8.198996543884277
    9. ' can' → logprob: -8.448996543884277
    10. 'if' → logprob: -8.698996543884277

Token 985: ' exactly' (ID: 9707)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006235921755433083
    2. 'exact' → logprob: -5.8812360763549805
    3. 'cost' → logprob: -6.3812360763549805
    4. ' count' → logprob: -6.6312360763549805
    5. 'a' → logprob: -8.88123607635498
    6. '(count' → logprob: -9.25623607635498
    7. ' exactly' → logprob: -10.13123607635498
    8. 'company' → logprob: -10.38123607635498
    9. '   ' → logprob: -10.88123607635498
    10. ' cost' → logprob: -11.00623607635498

Token 986: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7787511944770813
    2. ' k' → logprob: -0.7787511944770813
    3. 'count' → logprob: -2.9037511348724365
    4. ' count' → logprob: -3.6537511348724365
    5. '               ' → logprob: -8.403751373291016
    6. '           ' → logprob: -8.528751373291016
    7. ' company' → logprob: -8.528751373291016
    8. '   ' → logprob: -8.778751373291016
    9. 'company' → logprob: -9.028751373291016
    10. '       ' → logprob: -9.278751373291016

Token 987: ' edges' (ID: 22569)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3829280734062195
    2. '           ' → logprob: -1.5079281330108643
    3. 'if' → logprob: -2.8829281330108643
    4. '       ' → logprob: -3.2579281330108643
    5. '               ' → logprob: -7.507927894592285
    6. '   ' → logprob: -7.882927894592285
    7. '<|end|>' → logprob: -8.007927894592285
    8. ' and' → logprob: -8.757927894592285
    9. ',' → logprob: -8.757927894592285
    10. '```' → logprob: -8.882927894592285

Token 988: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7849351167678833
    2. '<|end|>' → logprob: -1.1599351167678833
    3. '       ' → logprob: -2.0349349975585938
    4. '<|end|>' → logprob: -3.1599349975585938
    5. ' if' → logprob: -3.7849349975585938
    6. '   ' → logprob: -4.659934997558594
    7. ' ' → logprob: -4.784934997558594
    8. '		' → logprob: -5.659934997558594
    9. '        ' → logprob: -6.284934997558594
    10. '	       ' → logprob: -6.534934997558594

Token 989: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000595447258092463
    2. '       ' → logprob: -8.000595092773438
    3. '   ' → logprob: -9.000595092773438
    4. ' ' → logprob: -9.750595092773438
    5. '<|end|>' → logprob: -10.000595092773438
    6. '<|end|>' → logprob: -11.375595092773438
    7. '```' → logprob: -11.875595092773438
    8. 'if' → logprob: -12.875595092773438
    9. '          ' → logprob: -13.000595092773438
    10. '               ' → logprob: -13.125595092773438

Token 990: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16782988607883453
    2. 'if' (adapté à ' if') → logprob: -1.9178298711776733
    3. ' if' → logprob: -4.917829990386963
    4. '       ' → logprob: -8.542829513549805
    5. '   ' → logprob: -10.042829513549805
    6. ' ' → logprob: -11.417829513549805
    7. '               ' → logprob: -12.542829513549805
    8. 'If' → logprob: -13.042829513549805
    9. '          ' → logprob: -13.167829513549805
    10. '                   ' → logprob: -14.292829513549805

Token 991: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.009942601434886456
    2. ' count' → logprob: -4.634942531585693
    3. 'cost' → logprob: -8.634943008422852
    4. '   ' → logprob: -12.509943008422852
    5. ' cost' → logprob: -12.884943008422852
    6. 'company' → logprob: -14.009943008422852
    7. '(count' → logprob: -14.384943008422852
    8. '    ' → logprob: -15.259943008422852
    9. '           ' → logprob: -15.509943008422852
    10. ' ' → logprob: -15.509943008422852

Token 992: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.0206720617134124e-05
    2. 'A' → logprob: -11.62501049041748
    3. '```' → logprob: -15.62501049041748
    4. '   ' → logprob: -16.000009536743164
    5. '_a' → logprob: -16.375009536743164
    6. '==' → logprob: -16.375009536743164
    7. '_' → logprob: -16.500009536743164
    8. ' ' → logprob: -16.625009536743164
    9. '\' → logprob: -16.750009536743164
    10. '[' → logprob: -16.750009536743164

Token 993: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759614706039429
    2. ' ==' → logprob: -0.8259614706039429
    3. ')==' → logprob: -11.700961112976074
    4. '==
' → logprob: -11.825961112976074
    5. '<|end|>' → logprob: -13.075961112976074
    6. '===' → logprob: -13.575961112976074
    7. ']==' → logprob: -13.700961112976074
    8. '=' → logprob: -14.325961112976074
    9. '==(' → logprob: -14.950961112976074
    10. '()==' → logprob: -15.075961112976074

Token 994: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023247109726071358
    2. ' self' → logprob: -3.773247003555298
    3. '           ' → logprob: -13.773246765136719
    4. '       ' → logprob: -15.773246765136719
    5. '(self' → logprob: -16.14824676513672
    6. '	self' → logprob: -16.27324676513672
    7. '   ' → logprob: -16.39824676513672
    8. '               ' → logprob: -16.39824676513672
    9. '```' → logprob: -17.14824676513672
    10. '[self' → logprob: -17.39824676513672

Token 995: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -4.320199877838604e-07
    2. 'k' → logprob: -16.0
    3. ' .' → logprob: -16.375
    4. '.' → logprob: -16.75
    5. '	k' → logprob: -18.125
    6. '.к' → logprob: -18.25
    7. '{k' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. ' k' → logprob: -19.375
    10. '.user' → logprob: -19.5

Token 996: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47484198212623596
    2. '               ' → logprob: -1.0998419523239136
    3. ':' → logprob: -3.224842071533203
    4. ' and' → logprob: -5.474842071533203
    5. 'and' → logprob: -7.349842071533203
    6. '           ' → logprob: -7.849842071533203
    7. '):
' → logprob: -10.349842071533203
    8. '              ' → logprob: -10.974842071533203
    9. ':

' → logprob: -11.349842071533203
    10. '<|end|>' → logprob: -11.849842071533203

Token 997: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022720585111528635
    2. 'answer' → logprob: -6.377272129058838
    3. '           ' → logprob: -7.627272129058838
    4. '   ' → logprob: -10.37727165222168
    5. '                   ' → logprob: -10.75227165222168
    6. ' answer' → logprob: -11.50227165222168
    7. '       ' → logprob: -11.87727165222168
    8. 'if' → logprob: -12.62727165222168
    9. '```' → logprob: -12.62727165222168
    10. ' if' → logprob: -13.25227165222168

Token 998: ' if' (ID: 538)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.001975503284484148
    2. '               ' → logprob: -6.5019755363464355
    3. 'if' (adapté à ' if') → logprob: -7.8769755363464355
    4. ' answer' → logprob: -9.376975059509277
    5. '                   ' → logprob: -12.876975059509277
    6. '           ' → logprob: -13.126975059509277
    7. '	answer' → logprob: -13.376975059509277
    8. ' if' → logprob: -13.876975059509277
    9. '```' → logprob: -14.626975059509277
    10. '
' → logprob: -14.626975059509277

Token 999: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.008515877649188042
    2. '(answer' → logprob: -5.13351583480835
    3. ' answer' → logprob: -6.00851583480835
    4. '                   ' → logprob: -9.508516311645508
    5. '               ' → logprob: -11.008516311645508
    6. ' (' → logprob: -11.133516311645508
    7. '(' → logprob: -11.758516311645508
    8. 'cost' → logprob: -11.758516311645508
    9. '	answer' → logprob: -13.633516311645508
    10. 'Answer' → logprob: -13.883516311645508

Token 1000: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6825047135353088
    2. '==' → logprob: -0.8075047135353088
    3. '==-' → logprob: -3.057504653930664
    4. ' is' → logprob: -7.432504653930664
    5. '=' → logprob: -7.682504653930664
    6. '<' → logprob: -8.057504653930664
    7. 'is' → logprob: -8.682504653930664
    8. ' <' → logprob: -10.432504653930664
    9. '===' → logprob: -10.557504653930664
    10. ')' → logprob: -11.057504653930664

Token 1001: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.676292231422849e-05
    2. ' -' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.250017166137695
    4. '                   ' → logprob: -21.125017166137695
    5. '−' → logprob: -21.875017166137695
    6. ' ' → logprob: -22.000017166137695
    7. '```' → logprob: -22.375017166137695
    8. '  ' → logprob: -22.500017166137695
    9. '           ' → logprob: -23.000017166137695
    10. '               ' → logprob: -23.375017166137695

Token 1002: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '           ' → logprob: -19.5
    4. '                   ' → logprob: -19.875
    5. '   ' → logprob: -20.0
    6. '```' → logprob: -21.25
    7. '                       ' → logprob: -21.5
    8. '               ' → logprob: -21.5
    9. '       ' → logprob: -22.0
    10. '-' → logprob: -22.25

Token 1003: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09059124439954758
    2. 'or' → logprob: -2.4655911922454834
    3. '                   ' → logprob: -6.5905914306640625
    4. '               ' → logprob: -8.465591430664062
    5. '	or' → logprob: -10.715591430664062
    6. '                       ' → logprob: -10.840591430664062
    7. '=' → logprob: -11.465591430664062
    8. '                    ' → logprob: -13.340591430664062
    9. '                  ' → logprob: -13.465591430664062
    10. ':' → logprob: -13.715591430664062

Token 1004: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.009542867541313171
    2. ' cost' → logprob: -5.384542942047119
    3. '(cost' → logprob: -5.384542942047119
    4. 'answer' → logprob: -8.134542465209961
    5. '(answer' → logprob: -11.759542465209961
    6. '               ' → logprob: -11.884542465209961
    7. ' (' → logprob: -12.134542465209961
    8. '   ' → logprob: -13.009542465209961
    9. '           ' → logprob: -13.259542465209961
    10. '                   ' → logprob: -13.384542465209961

Token 1005: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5964805483818054
    2. '>' → logprob: -0.9714805483818054
    3. ' <' → logprob: -3.34648060798645
    4. '<' → logprob: -3.34648060798645
    5. '   ' → logprob: -8.971480369567871
    6. '<=' → logprob: -10.596480369567871
    7. ' <=' → logprob: -10.721480369567871
    8. '<|end|>' → logprob: -10.971480369567871
    9. '```' → logprob: -11.096480369567871
    10. '=' → logprob: -11.846480369567871

Token 1006: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.0011709370883181691
    2. ' answer' → logprob: -6.751171112060547
    3. '               ' → logprob: -15.126171112060547
    4. '           ' → logprob: -15.501171112060547
    5. 'cost' → logprob: -16.376171112060547
    6. '   ' → logprob: -16.876171112060547
    7. '                   ' → logprob: -17.251171112060547
    8. '	answer' → logprob: -17.751171112060547
    9. 'ans' → logprob: -18.001171112060547
    10. 'Answer' → logprob: -18.251171112060547

Token 1007: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5045442581176758
    2. ':' → logprob: -1.7545442581176758
    3. '                   ' → logprob: -2.004544258117676
    4. '               ' → logprob: -3.004544258117676
    5. '                       ' → logprob: -3.754544258117676
    6. '=' → logprob: -4.379544258117676
    7. ' =' → logprob: -6.879544258117676
    8. '):
' → logprob: -8.129544258117676
    9. '                           ' → logprob: -8.504544258117676
    10. '           ' → logprob: -8.629544258117676

Token 1008: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036737099289894104
    2. 'answer' → logprob: -6.628673553466797
    3. '                       ' → logprob: -6.628673553466797
    4. '               ' → logprob: -7.003673553466797
    5. ' answer' → logprob: -10.253673553466797
    6. ':
' → logprob: -11.378673553466797
    7. ':' → logprob: -11.503673553466797
    8. '           ' → logprob: -11.753673553466797
    9. '```' → logprob: -11.753673553466797
    10. '=' → logprob: -12.253673553466797

Token 1009: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.007138962857425213
    2. '                   ' → logprob: -5.007138729095459
    3. '               ' → logprob: -8.507139205932617
    4. ' answer' → logprob: -8.757139205932617
    5. '                       ' → logprob: -9.757139205932617
    6. '           ' → logprob: -12.382139205932617
    7. '       ' → logprob: -14.007139205932617
    8. '   ' → logprob: -14.007139205932617
    9. '                           ' → logprob: -15.757139205932617
    10. '	answer' → logprob: -16.507139205932617

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013261953135952353
    2. ' =' → logprob: -6.626326084136963
    3. '=
' → logprob: -16.626325607299805
    4. '＝' → logprob: -16.751325607299805
    5. '.=' → logprob: -17.001325607299805
    6. '=

' → logprob: -17.251325607299805
    7. '=}' → logprob: -17.876325607299805
    8. '<|end|>' → logprob: -18.251325607299805
    9. '=int' → logprob: -19.001325607299805
    10. ')=' → logprob: -19.251325607299805

Token 1011: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.25193148851394653
    2. ' cost' → logprob: -1.5019314289093018
    3. '                   ' → logprob: -13.376931190490723
    4. '               ' → logprob: -15.001931190490723
    5. '                ' → logprob: -15.376931190490723
    6. '(cost' → logprob: -16.50193214416504
    7. '                    ' → logprob: -16.75193214416504
    8. '_cost' → logprob: -17.37693214416504
    9. '                       ' → logprob: -18.12693214416504
    10. '            ' → logprob: -18.25193214416504

Token 1012: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3826582729816437
    2. '
' → logprob: -1.5076582431793213
    3. '<|end|>' → logprob: -2.5076582431793213
    4. '        
' → logprob: -5.2576584815979
    5. 'return' → logprob: -5.3826584815979
    6. '		
' → logprob: -6.3826584815979
    7. '	' → logprob: -6.7576584815979
    8. ' return' → logprob: -7.3826584815979
    9. '<|end|>' → logprob: -8.007658004760742
    10. '	return' → logprob: -8.132658004760742

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06757187843322754
    2. '<|end|>' → logprob: -3.0675718784332275
    3. '
' → logprob: -4.192571640014648
    4. 'return' → logprob: -6.067571640014648
    5. '        
' → logprob: -7.442571640014648
    6. '   ' → logprob: -7.942571640014648
    7. '<|end|>' → logprob: -9.192571640014648
    8. ' return' → logprob: -9.317571640014648
    9. '	' → logprob: -9.942571640014648
    10. '```' → logprob: -10.192571640014648

Token 1014: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008971675299108028
    2. 'return' (adapté à ' return') → logprob: -4.758971691131592
    3. '   ' → logprob: -8.008971214294434
    4. '           ' → logprob: -11.133971214294434
    5. ' return' → logprob: -12.258971214294434
    6. '
' → logprob: -13.383971214294434
    7. '```' → logprob: -13.383971214294434
    8. '        
' → logprob: -13.508971214294434
    9. '               ' → logprob: -15.883971214294434
    10. '     ' → logprob: -16.00897216796875

Token 1015: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.06196768581867218
    2. ' answer' → logprob: -2.811967611312866
    3. '	answer' → logprob: -16.436967849731445
    4. '(answer' → logprob: -17.061967849731445
    5. '   ' → logprob: -18.186967849731445
    6. ' ' → logprob: -19.186967849731445
    7. ' ' → logprob: -19.436967849731445
    8. ' None' → logprob: -19.811967849731445
    9. 'None' → logprob: -20.061967849731445
    10. '  ' → logprob: -20.561967849731445

Token 1016: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1017: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1018: ' Edge' (ID: 16396)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.19821548461914062
    2. 'Edge' → logprob: -2.3232154846191406
    3. ' Union' → logprob: -2.5732154846191406
    4. ' Edge' → logprob: -5.198215484619141
    5. 'Island' → logprob: -10.57321548461914
    6. ' Island' → logprob: -13.07321548461914
    7. '_union' → logprob: -13.94821548461914
    8. ' ' → logprob: -14.07321548461914
    9. '   ' → logprob: -14.19821548461914
    10. 'union' → logprob: -14.69821548461914

Token 1019: 'Proposal' (ID: 79001)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11145070195198059
    2. '(' → logprob: -2.986450672149658
    3. ':
' → logprob: -3.111450672149658
    4. '(
' → logprob: -4.611450672149658
    5. '<|end|>' → logprob: -8.361451148986816
    6. '(object' → logprob: -9.111451148986816
    7. ':

' → logprob: -10.611451148986816
    8. '):' → logprob: -10.861451148986816
    9. '(`' → logprob: -10.986451148986816
    10. '(named' → logprob: -11.111451148986816

Token 1020: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01478998176753521
    2. ':
' → logprob: -4.264790058135986
    3. '(' → logprob: -7.639790058135986
    4. '(
' → logprob: -9.514789581298828
    5. '<|end|>' → logprob: -9.764789581298828
    6. ':

' → logprob: -12.764789581298828
    7. '>:' → logprob: -13.639789581298828
    8. ':def' → logprob: -13.764789581298828
    9. '(object' → logprob: -13.889789581298828
    10. '):' → logprob: -13.889789581298828

Token 1021: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5552700757980347
    2. ':' → logprob: -1.5552700757980347
    3. ':
' → logprob: -1.5552700757980347
    4. '):
' → logprob: -6.055270195007324
    5. '```' → logprob: -8.180270195007324
    6. '<|end|>' → logprob: -8.305270195007324
    7. '(
' → logprob: -8.805270195007324
    8. '(' → logprob: -9.055270195007324
    9. '    
' → logprob: -9.180270195007324
    10. '  ' → logprob: -9.180270195007324

Token 1022: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42453116178512573
    2. 'class' → logprob: -1.1745312213897705
    3. '@dat' → logprob: -3.5495312213897705
    4. '   ' → logprob: -5.299530982971191
    5. 'from' → logprob: -6.424530982971191
    6. ':' → logprob: -7.549530982971191
    7. '```' → logprob: -7.674530982971191
    8. '@' → logprob: -8.549530982971191
    9. '__' (adapté à ' __') → logprob: -9.049530982971191
    10. ' def' → logprob: -9.674530982971191

Token 1023: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12696108222007751
    2. 'slots' → logprob: -2.1269609928131104
    3. '```' → logprob: -10.876960754394531
    4. ' slots' → logprob: -12.876960754394531
    5. 'slot' → logprob: -13.001960754394531
    6. 'dat' → logprob: -13.126960754394531
    7. 'token' → logprob: -13.376960754394531
    8. '_slots' → logprob: -13.376960754394531
    9. '_init' → logprob: -14.001960754394531
    10. 'tokens' → logprob: -14.251960754394531

Token 1024: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015278935432434082
    2. '=' → logprob: -4.2652788162231445
    3. '=['' → logprob: -7.2652788162231445
    4. ' =' → logprob: -8.265278816223145
    5. '__('' → logprob: -9.265278816223145
    6. '=('' → logprob: -10.765278816223145
    7. '___' → logprob: -11.265278816223145
    8. '__[' → logprob: -12.265278816223145
    9. '__.' → logprob: -12.515278816223145
    10. '__((' → logprob: -12.515278816223145

Token 1025: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14327868819236755
    2. ' =' → logprob: -2.0182785987854004
    3. '__' → logprob: -8.018279075622559
    4. '=['' → logprob: -8.768279075622559
    5. '=('' → logprob: -9.143279075622559
    6. '['' → logprob: -11.893279075622559
    7. '=("' → logprob: -13.893279075622559
    8. '('' → logprob: -14.268279075622559
    9. '__('' → logprob: -14.768279075622559
    10. '=["' → logprob: -14.893279075622559

Token 1026: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1610356569290161
    2. '['' → logprob: -1.9110356569290161
    3. '[u' → logprob: -8.036035537719727
    4. ''u' → logprob: -8.911035537719727
    5. '("' → logprob: -9.161035537719727
    6. '["' → logprob: -9.536035537719727
    7. '('__' → logprob: -9.536035537719727
    8. '(u' → logprob: -10.036035537719727
    9. '('_' → logprob: -10.411035537719727
    10. 'u' → logprob: -10.786035537719727

Token 1027: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.612634362885728e-05
    2. '__' → logprob: -9.500076293945312
    3. ''u' → logprob: -13.625076293945312
    4. ' u' → logprob: -17.125076293945312
    5. 'company' → logprob: -17.750076293945312
    6. '_u' → logprob: -18.125076293945312
    7. '   ' → logprob: -18.500076293945312
    8. '	u' → logprob: -19.625076293945312
    9. ''' → logprob: -20.875076293945312
    10. ' __' → logprob: -20.875076293945312

Token 1028: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.14516225457191467
    2. ',' → logprob: -2.020162343978882
    3. '','' → logprob: -6.020162105560303
    4. ',u' → logprob: -11.020162582397461
    5. ''' → logprob: -11.770162582397461
    6. '<|end|>' → logprob: -12.020162582397461
    7. '',
' → logprob: -12.270162582397461
    8. ' ',' → logprob: -12.395162582397461
    9. ','' → logprob: -12.520162582397461
    10. ' ,' → logprob: -13.020162582397461

Token 1029: ' '' (ID: 461)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.010034659877419472
    2. ''' → logprob: -4.635034561157227
    3. ' v' → logprob: -8.885034561157227
    4. ',v' → logprob: -10.010034561157227
    5. '   ' → logprob: -10.385034561157227
    6. '	v' → logprob: -10.635034561157227
    7. ' '' → logprob: -10.635034561157227
    8. '_v' → logprob: -11.885034561157227
    9. '  ' → logprob: -13.510034561157227
    10. ' ' → logprob: -13.885034561157227

Token 1030: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. '   ' → logprob: -17.875
    3. '
' → logprob: -18.25
    4. '	v' → logprob: -18.375
    5. ' v' → logprob: -18.5
    6. 'cost' → logprob: -19.375
    7. '_v' → logprob: -19.75
    8. '__' → logprob: -19.875
    9. ' ' → logprob: -21.125
    10. '    
' → logprob: -21.375

Token 1031: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0023104806896299124
    2. ',' → logprob: -6.377310276031494
    3. '','' → logprob: -7.627310276031494
    4. '')' → logprob: -9.377310752868652
    5. '',
' → logprob: -11.127310752868652
    6. ''' → logprob: -11.627310752868652
    7. '   ' → logprob: -12.752310752868652
    8. ' ',' → logprob: -13.002310752868652
    9. '<|end|>' → logprob: -13.002310752868652
    10. ',u' → logprob: -13.127310752868652

Token 1032: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005459881853312254
    2. 'cost' → logprob: -5.255459785461426
    3. ' cost' → logprob: -9.005459785461426
    4. ' '' → logprob: -9.630459785461426
    5. ''u' → logprob: -10.630459785461426
    6. '   ' → logprob: -12.505459785461426
    7. '_cost' → logprob: -13.505459785461426
    8. 'company' → logprob: -13.630459785461426
    9. ''type' → logprob: -13.630459785461426
    10. ''int' → logprob: -13.630459785461426

Token 1033: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.320199877838604e-07
    2. ' cost' → logprob: -14.875
    3. '_cost' → logprob: -17.125
    4. 'c' → logprob: -18.375
    5. '(cost' → logprob: -19.0
    6. 'code' → logprob: -19.125
    7. 'w' → logprob: -19.25
    8. '.cost' → logprob: -19.625
    9. '   ' → logprob: -20.125
    10. '-cost' → logprob: -20.625

Token 1034: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.380584180355072
    2. '',' → logprob: -1.5055842399597168
    3. '')' → logprob: -3.005584239959717
    4. ')' → logprob: -3.130584239959717
    5. '   ' → logprob: -7.755584239959717
    6. '<|end|>' → logprob: -7.880584239959717
    7. '=' → logprob: -8.255583763122559
    8. ''' → logprob: -8.880583763122559
    9. '','' → logprob: -9.255583763122559
    10. '',
' → logprob: -10.505583763122559

Token 1035: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002057477133348584
    2. 'company' → logprob: -6.3770575523376465
    3. ' '' → logprob: -8.127057075500488
    4. ' company' → logprob: -10.877057075500488
    5. ''u' → logprob: -11.502057075500488
    6. '   ' → logprob: -12.002057075500488
    7. ''entreprise' → logprob: -12.502057075500488
    8. ''name' → logprob: -12.752057075500488
    9. ''user' → logprob: -13.002057075500488
    10. ''class' → logprob: -13.002057075500488

Token 1036: 'company' (ID: 13003)
  Prédit: 'company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: 0.0
    2. ' company' → logprob: -17.625
    3. 'cost' → logprob: -18.25
    4. 'country' → logprob: -19.75
    5. '_company' → logprob: -20.0
    6. 'comp' → logprob: -20.25
    7. '
' → logprob: -20.5
    8. 'city' → logprob: -20.75
    9. 'w' → logprob: -21.125
    10. '会社' → logprob: -21.375

Token 1037: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.54805988073349
    2. ')' → logprob: -1.1730599403381348
    3. '',' → logprob: -2.5480599403381348
    4. ',' → logprob: -3.7980599403381348
    5. '')
' → logprob: -4.673059940338135
    6. ')
' → logprob: -6.423059940338135
    7. ''' → logprob: -7.923059940338135
    8. '','' → logprob: -8.798059463500977
    9. '   ' → logprob: -9.298059463500977
    10. '')

' → logprob: -9.798059463500977

Token 1038: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04297030717134476
    2. '=' → logprob: -3.9179704189300537
    3. ':' → logprob: -4.292970180511475
    4. 'def' → logprob: -6.292970180511475
    5. ' =' → logprob: -6.417970180511475
    6. ',' → logprob: -6.542970180511475
    7. '=
' → logprob: -6.667970180511475
    8. ':
' → logprob: -7.042970180511475
    9. '```' → logprob: -7.917970180511475
    10. '    
' → logprob: -8.167970657348633

Token 1039: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10889708250761032
    2. '   ' → logprob: -2.8588969707489014
    3. ' def' → logprob: -3.2338969707489014
    4. ' =' → logprob: -5.4838972091674805
    5. '=' → logprob: -6.1088972091674805
    6. ':' → logprob: -10.35889720916748
    7. '    
' → logprob: -11.48389720916748
    8. '    ' → logprob: -12.10889720916748
    9. '	def' → logprob: -12.73389720916748
    10. '```' → logprob: -12.98389720916748

Token 1040: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4353931248188019
    2. '__' → logprob: -1.0603930950164795
    3. 'init' → logprob: -5.435393333435059
    4. 'def' → logprob: -6.560393333435059
    5. '```' → logprob: -8.560393333435059
    6. ' def' → logprob: -8.810393333435059
    7. '   ' → logprob: -8.810393333435059
    8. ' init' → logprob: -9.310393333435059
    9. ' u' → logprob: -9.560393333435059
    10. '  ' → logprob: -9.685393333435059

Token 1041: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003178901970386505
    2. 'slots' → logprob: -5.75317907333374
    3. 'slot' → logprob: -14.253178596496582
    4. '_init' → logprob: -15.128178596496582
    5. '```' → logprob: -16.3781795501709
    6. '_slots' → logprob: -16.7531795501709
    7. ' init' → logprob: -17.0031795501709
    8. ' slots' → logprob: -17.6281795501709
    9. '__' → logprob: -18.3781795501709
    10. '`' → logprob: -19.1281795501709

Token 1042: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002970334142446518
    2. '(self' → logprob: -6.377970218658447
    3. '__' → logprob: -7.002970218658447
    4. '__(
' → logprob: -8.377970695495605
    5. '(' → logprob: -9.627970695495605
    6. '__((' → logprob: -10.127970695495605
    7. '__('' → logprob: -11.377970695495605
    8. 'self' → logprob: -12.377970695495605
    9. '__(*' → logprob: -13.252970695495605
    10. '_(' → logprob: -13.502970695495605

Token 1043: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.583550642360933e-05
    2. ' self' → logprob: -10.500036239624023
    3. '(self' → logprob: -12.375036239624023
    4. 'u' → logprob: -12.625036239624023
    5. '	self' → logprob: -15.000036239624023
    6. ',self' → logprob: -16.000036239624023
    7. '
' → logprob: -16.125036239624023
    8. '   ' → logprob: -16.250036239624023
    9. ',' → logprob: -17.125036239624023
    10. '0' → logprob: -17.625036239624023

Token 1044: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.035666681826114655
    2. ',' → logprob: -3.4106667041778564
    3. '(self' → logprob: -6.660666465759277
    4. ' self' → logprob: -7.785666465759277
    5. ',self' → logprob: -8.410666465759277
    6. ',u' → logprob: -9.535666465759277
    7. 'u' → logprob: -10.660666465759277
    8. '	self' → logprob: -13.660666465759277
    9. ' ,' → logprob: -14.160666465759277
    10. ' (' → logprob: -14.660666465759277

Token 1045: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0015046248445287347
    2. 'self' → logprob: -6.501504421234131
    3. ' u' → logprob: -13.001504898071289
    4. '   ' → logprob: -17.00150489807129
    5. ' self' → logprob: -17.00150489807129
    6. '	u' → logprob: -17.75150489807129
    7. ',u' → logprob: -18.62650489807129
    8. ''u' → logprob: -19.25150489807129
    9. '_u' → logprob: -19.62650489807129
    10. '.u' → logprob: -20.12650489807129

Token 1046: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001149867384810932
    2. ',u' → logprob: -9.375115394592285
    3. ' ,' → logprob: -10.500115394592285
    4. '‌,' → logprob: -14.250115394592285
    5. ',int' → logprob: -14.500115394592285
    6. '   ' → logprob: -15.125115394592285
    7. '<|end|>' → logprob: -15.500115394592285
    8. ',v' → logprob: -15.750115394592285
    9. ',
' → logprob: -16.00011444091797
    10. 'u' → logprob: -16.00011444091797

Token 1047: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7610454708337784e-05
    2. ' v' → logprob: -10.500027656555176
    3. '	v' → logprob: -19.62502670288086
    4. ',v' → logprob: -19.75002670288086
    5. '   ' → logprob: -20.62502670288086
    6. 'u' → logprob: -22.37502670288086
    7. ',' → logprob: -22.75002670288086
    8. 'int' → logprob: -23.25002670288086
    9. ')v' → logprob: -23.37502670288086
    10. '$v' → logprob: -23.37502670288086

Token 1048: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3596853831550106e-05
    2. ',u' → logprob: -10.000053405761719
    3. ' ,' → logprob: -11.750053405761719
    4. '‌,' → logprob: -16.00005340576172
    5. ',int' → logprob: -16.75005340576172
    6. ',c' → logprob: -17.37505340576172
    7. ',user' → logprob: -17.75005340576172
    8. ',v' → logprob: -17.75005340576172
    9. 'u' → logprob: -18.00005340576172
    10. '_,' → logprob: -18.12505340576172

Token 1049: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. 'c' → logprob: -19.251171112060547
    4. '   ' → logprob: -20.626171112060547
    5. '(cost' → logprob: -21.751171112060547
    6. '_cost' → logprob: -22.251171112060547
    7. '    ' → logprob: -23.126171112060547
    8. '.cost' → logprob: -23.501171112060547
    9. ' ' → logprob: -23.751171112060547
    10. '
' → logprob: -23.876171112060547

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ',u' → logprob: -12.750007629394531
    3. '):' → logprob: -13.125007629394531
    4. ' ,' → logprob: -13.125007629394531
    5. '):
' → logprob: -14.500007629394531
    6. ',
' → logprob: -15.750007629394531
    7. '       ' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.12500762939453
    9. '‌,' → logprob: -16.12500762939453
    10. '<|end|>' → logprob: -16.50000762939453

Token 1051: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.004078758880496025
    2. ' company' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. '(company' → logprob: -16.879077911376953
    5. '       ' → logprob: -17.254077911376953
    6. '    ' → logprob: -17.754077911376953
    7. '.company' → logprob: -17.879077911376953
    8. 'Company' → logprob: -18.629077911376953
    9. '_company' → logprob: -18.879077911376953
    10. 'c' → logprob: -19.254077911376953

Token 1052: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12693241238594055
    2. '):
' → logprob: -2.126932382583618
    3. ')' → logprob: -13.001932144165039
    4. '):
' → logprob: -14.251932144165039
    5. ''):' → logprob: -14.501932144165039
    6. '):

' → logprob: -14.876932144165039
    7. ':' → logprob: -15.626932144165039
    8. '   ' → logprob: -15.876932144165039
    9. ''):
' → logprob: -16.12693214416504
    10. ',' → logprob: -17.12693214416504

Token 1053: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3357227146625519
    2. ',' → logprob: -1.8357226848602295
    3. ':' → logprob: -2.3357226848602295
    4. '(u' → logprob: -4.460722923278809
    5. '):
' → logprob: -4.960722923278809
    6. ':
' → logprob: -5.710722923278809
    7. '):' → logprob: -5.960722923278809
    8. ',u' → logprob: -6.835722923278809
    9. '(object' → logprob: -7.335722923278809
    10. '(' → logprob: -7.335722923278809

Token 1054: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025062207132577896
    2. ' self' → logprob: -6.002506256103516
    3. '       ' → logprob: -10.752506256103516
    4. '   ' → logprob: -11.877506256103516
    5. '	self' → logprob: -13.002506256103516
    6. ' ' → logprob: -17.877506256103516
    7. 'u' → logprob: -18.252506256103516
    8. '	' → logprob: -20.002506256103516
    9. ' ' → logprob: -20.877506256103516
    10. '        
' → logprob: -21.127506256103516

Token 1055: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.0008137972326949239
    2. '.' → logprob: -7.250813961029053
    3. '=u' → logprob: -9.875813484191895
    4. '=' → logprob: -10.750813484191895
    5. 'u' → logprob: -11.000813484191895
    6. ' =' → logprob: -11.875813484191895
    7. ' .' → logprob: -12.625813484191895
    8. '.=' → logprob: -13.875813484191895
    9. '.user' → logprob: -14.375813484191895
    10. ',u' → logprob: -14.625813484191895

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.550733745098114
    2. ' =' → logprob: -0.925733745098114
    3. ',' → logprob: -4.05073356628418
    4. '=u' → logprob: -4.92573356628418
    5. '<|end|>' → logprob: -6.67573356628418
    6. ',u' → logprob: -6.80073356628418
    7. ' u' → logprob: -9.80073356628418
    8. ')' → logprob: -10.67573356628418
    9. 'u' → logprob: -10.67573356628418
    10. '.' → logprob: -10.80073356628418

Token 1057: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00033546582562848926
    2. ' u' → logprob: -8.000335693359375
    3. '	u' → logprob: -18.250335693359375
    4. '=u' → logprob: -21.625335693359375
    5. '_u' → logprob: -22.500335693359375
    6. '*u' → logprob: -22.625335693359375
    7. ''u' → logprob: -22.750335693359375
    8. '[u' → logprob: -23.375335693359375
    9. 'int' → logprob: -23.500335693359375
    10. 'v' → logprob: -23.875335693359375

Token 1058: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.116578608751297
    2. ',v' → logprob: -2.4915785789489746
    3. '
' → logprob: -4.741578578948975
    4. 'v' → logprob: -5.366578578948975
    5. '<|end|>' → logprob: -5.491578578948975
    6. '       ' → logprob: -5.866578578948975
    7. ' ,' → logprob: -6.116578578948975
    8. ',
' → logprob: -6.616578578948975
    9. ' v' → logprob: -6.741578578948975
    10. '        
' → logprob: -6.991578578948975

Token 1059: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -15.750204086303711
    4. '0' → logprob: -16.12520408630371
    5. '=' → logprob: -19.87520408630371
    6. '   ' → logprob: -20.50020408630371
    7. '-' → logprob: -20.75020408630371
    8. ',' → logprob: -20.87520408630371
    9. '```' → logprob: -20.87520408630371
    10. ')' → logprob: -21.62520408630371

Token 1060: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '<|end|>' → logprob: -20.75
    4. '0' → logprob: -21.375
    5. '```' → logprob: -21.875
    6. '=' → logprob: -22.625
    7. '[' → logprob: -23.375
    8. '2' → logprob: -23.5
    9. 'class' → logprob: -23.5
    10. '   ' → logprob: -24.125

Token 1061: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1062: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1063: ' zero' (ID: 12421)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04854807257652283
    2. 'v' → logprob: -3.4235479831695557
    3. ' u' → logprob: -4.798548221588135
    4. '0' → logprob: -5.798548221588135
    5. '<|end|>' → logprob: -5.923548221588135
    6. '1' → logprob: -7.298548221588135
    7. ' v' → logprob: -9.548547744750977
    8. ' ' → logprob: -10.548547744750977
    9. 'self' → logprob: -10.923547744750977
    10. 'int' → logprob: -12.048547744750977

Token 1064: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08089172095060349
    2. 'based' → logprob: -2.5808916091918945
    3. '-index' → logprob: -6.5808916091918945
    4. 'indexed' → logprob: -8.080891609191895
    5. '_based' → logprob: -8.705891609191895
    6. ' based' → logprob: -9.080891609191895
    7. 'Based' → logprob: -11.080891609191895
    8. 'index' → logprob: -12.455891609191895
    9. ' -' → logprob: -13.330891609191895
    10. 'Indexed' → logprob: -13.705891609191895

Token 1065: ' internally' (ID: 65530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1066: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8415230512619019
    2. '<|end|>' → logprob: -0.8415230512619019
    3. '        
' → logprob: -2.0915231704711914
    4. ' ' → logprob: -5.841523170471191
    5. 'self' → logprob: -5.966523170471191
    6. '<|end|>' → logprob: -6.591523170471191
    7. '   ' → logprob: -6.716523170471191
    8. ' 
' → logprob: -6.716523170471191
    9. '
' → logprob: -6.841523170471191
    10. '  
' → logprob: -6.966523170471191

Token 1067: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6143960952758789
    2. 'self' → logprob: -0.8643960952758789
    3. ' self' → logprob: -3.364396095275879
    4. '<|end|>' → logprob: -6.239396095275879
    5. '        
' → logprob: -7.739396095275879
    6. 'v' → logprob: -7.989396095275879
    7. '(self' → logprob: -9.239396095275879
    8. '   ' → logprob: -9.614396095275879
    9. ' ' → logprob: -9.989396095275879
    10. '        ' → logprob: -10.239396095275879

Token 1068: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006861243396997452
    2. 'v' → logprob: -5.006861209869385
    3. ' self' → logprob: -8.881861686706543
    4. '       ' → logprob: -12.006861686706543
    5. '	self' → logprob: -15.256861686706543
    6. '=self' → logprob: -15.256861686706543
    7. '(self' → logprob: -15.756861686706543
    8. ' v' → logprob: -16.006860733032227
    9. '   ' → logprob: -17.006860733032227
    10. '[self' → logprob: -17.756860733032227

Token 1069: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0003407071635592729
    2. 'v' → logprob: -8.000340461730957
    3. '.' → logprob: -13.000340461730957
    4. '	v' → logprob: -13.500340461730957
    5. '.u' → logprob: -13.875340461730957
    6. ',v' → logprob: -15.000340461730957
    7. 'company' → logprob: -15.875340461730957
    8. '_v' → logprob: -16.875341415405273
    9. ' .' → logprob: -17.000341415405273
    10. ')v' → logprob: -17.000341415405273

Token 1070: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519422471523285
    2. ' =' → logprob: -1.5019422769546509
    3. '-' → logprob: -12.12694263458252
    4. '=u' → logprob: -12.50194263458252
    5. '=v' → logprob: -13.75194263458252
    6. ' -=' → logprob: -14.25194263458252
    7. '-=' → logprob: -14.37694263458252
    8. 'u' → logprob: -14.62694263458252
    9. ' -' → logprob: -15.00194263458252
    10. ' ' → logprob: -15.25194263458252

Token 1071: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014305122196674347
    2. ' v' → logprob: -4.264305114746094
    3. 'u' → logprob: -8.889305114746094
    4. ' u' → logprob: -12.639305114746094
    5. 'e' → logprob: -14.889305114746094
    6. '	v' → logprob: -16.264305114746094
    7. '(v' → logprob: -16.764305114746094
    8. ' e' → logprob: -17.514305114746094
    9. '[v' → logprob: -17.514305114746094
    10. 'self' → logprob: -18.014305114746094

Token 1072: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602274775505066
    2. '-' → logprob: -1.9102275371551514
    3. ' ' → logprob: -13.03522777557373
    4. '   ' → logprob: -14.53522777557373
    5. '       ' → logprob: -14.53522777557373
    6. '```' → logprob: -17.410226821899414
    7. '_' → logprob: -17.535226821899414
    8. '  ' → logprob: -18.285226821899414
    9. '−' → logprob: -18.285226821899414
    10. '0' → logprob: -18.410226821899414

Token 1073: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.875001907348633
    4. '<|end|>' → logprob: -20.375001907348633
    5. '-' → logprob: -20.625001907348633
    6. '0' → logprob: -21.125001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '
' → logprob: -21.750001907348633
    9. '2' → logprob: -22.125001907348633
    10. '۱' → logprob: -22.875001907348633

Token 1074: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.625
    4. '
' → logprob: -19.75
    5. '-' → logprob: -19.875
    6. '   ' → logprob: -20.625
    7. '2' → logprob: -21.75
    8. '۱' → logprob: -22.0
    9. '<|end|>' → logprob: -22.25
    10. '0' → logprob: -22.5

Token 1075: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012253569439053535
    2. ',' → logprob: -4.512253761291504
    3. '<|end|>' → logprob: -7.512253761291504
    4. ' ' → logprob: -8.887253761291504
    5. '   ' → logprob: -9.012253761291504
    6. ' ,' → logprob: -9.012253761291504
    7. '	' → logprob: -9.137253761291504
    8. ' #' → logprob: -10.387253761291504
    9. ' =' → logprob: -10.512253761291504
    10. '#' → logprob: -10.762253761291504

Token 1076: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04498022794723511
    2. 'self' → logprob: -3.29498028755188
    3. ' self' → logprob: -5.044980049133301
    4. '```' → logprob: -8.4199800491333
    5. '   ' → logprob: -9.0449800491333
    6. '           ' → logprob: -10.0449800491333
    7. '        ' → logprob: -10.5449800491333
    8. '	self' → logprob: -10.6699800491333
    9. ' cost' → logprob: -11.6699800491333
    10. '      ' → logprob: -12.1699800491333

Token 1077: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018918411806225777
    2. 'cost' → logprob: -4.018918514251709
    3. ' self' → logprob: -7.893918514251709
    4. 'company' → logprob: -8.26891803741455
    5. '       ' → logprob: -9.39391803741455
    6. ' cost' → logprob: -10.14391803741455
    7. '   ' → logprob: -11.14391803741455
    8. '```' → logprob: -14.39391803741455
    9. '	self' → logprob: -15.26891803741455
    10. '_cost' → logprob: -15.76891803741455

Token 1078: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.1004183366894722
    2. '.company' → logprob: -2.3504183292388916
    3. '.' → logprob: -9.100418090820312
    4. 'cost' → logprob: -9.850418090820312
    5. 'company' → logprob: -10.850418090820312
    6. ' .' → logprob: -11.350418090820312
    7. '.code' → logprob: -12.600418090820312
    8. '.comp' → logprob: -12.600418090820312
    9. '.c' → logprob: -13.225418090820312
    10. '.com' → logprob: -13.475418090820312

Token 1079: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521294057369232
    2. ' =' → logprob: -1.5021294355392456
    3. ',' → logprob: -8.627129554748535
    4. ' ' → logprob: -11.377129554748535
    5. '=
' → logprob: -12.877129554748535
    6. ' =
' → logprob: -13.252129554748535
    7. '   ' → logprob: -13.752129554748535
    8. ')' → logprob: -13.877129554748535
    9. '<|end|>' → logprob: -13.877129554748535
    10. ' ,' → logprob: -14.502129554748535

Token 1080: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0788901224732399
    2. ' cost' → logprob: -2.578890085220337
    3. 'int' → logprob: -15.703889846801758
    4. '(cost' → logprob: -16.703889846801758
    5. '_cost' → logprob: -16.953889846801758
    6. 'code' → logprob: -17.203889846801758
    7. '   ' → logprob: -18.328889846801758
    8. '.cost' → logprob: -18.453889846801758
    9. ' ' → logprob: -18.578889846801758
    10. 'Cost' → logprob: -18.578889846801758

Token 1081: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03220963105559349
    2. '   ' → logprob: -4.657209396362305
    3. '<|end|>' → logprob: -4.782209396362305
    4. ',' → logprob: -4.907209396362305
    5. '        
' → logprob: -6.407209396362305
    6. '
' → logprob: -6.532209396362305
    7. ' ' → logprob: -6.657209396362305
    8. '        ' → logprob: -8.032209396362305
    9. '           ' → logprob: -8.157209396362305
    10. '    
' → logprob: -8.282209396362305

Token 1082: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19554662704467773
    2. '       ' → logprob: -1.9455466270446777
    3. '```' → logprob: -4.320546627044678
    4. ',' → logprob: -5.320546627044678
    5. '<|end|>' → logprob: -5.570546627044678
    6. ' ' → logprob: -5.945546627044678
    7. '	self' → logprob: -6.070546627044678
    8. 'self' → logprob: -6.695546627044678
    9. 'company' → logprob: -6.695546627044678
    10. ' company' → logprob: -7.070546627044678

Token 1083: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10357390344142914
    2. ' self' → logprob: -2.353573799133301
    3. '       ' → logprob: -5.728573799133301
    4. '   ' → logprob: -10.1035737991333
    5. 'company' → logprob: -10.1035737991333
    6. '	self' → logprob: -10.7285737991333
    7. ' company' → logprob: -12.7285737991333
    8. ' ' → logprob: -14.2285737991333
    9. ',self' → logprob: -14.8535737991333
    10. '        ' → logprob: -15.3535737991333

Token 1084: '.company' (ID: 48225)
  Prédit: '.company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.3146008253097534
    2. 'company' → logprob: -1.9396008253097534
    3. '=' → logprob: -2.314600944519043
    4. ' =' → logprob: -4.064600944519043
    5. '_company' → logprob: -5.064600944519043
    6. ' company' → logprob: -6.314600944519043
    7. '.' → logprob: -6.564600944519043
    8. '   ' → logprob: -8.689600944519043
    9. ',' → logprob: -8.939600944519043
    10. ' ' → logprob: -9.939600944519043

Token 1085: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22609366476535797
    2. ' =' → logprob: -1.6010936498641968
    3. '==' → logprob: -8.601093292236328
    4. '<|end|>' → logprob: -8.726093292236328
    5. '_' → logprob: -9.601093292236328
    6. ' ' → logprob: -9.726093292236328
    7. '   ' → logprob: -9.976093292236328
    8. ' ==' → logprob: -10.101093292236328
    9. '.' → logprob: -10.226093292236328
    10. ')' → logprob: -10.351093292236328

Token 1086: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.16195036470890045
    2. ' company' → logprob: -1.9119503498077393
    3. ''' → logprob: -6.411950588226318
    4. '(company' → logprob: -10.28695011138916
    5. ' '' → logprob: -10.66195011138916
    6. ' ' → logprob: -11.16195011138916
    7. '.company' → logprob: -12.78695011138916
    8. '"' → logprob: -13.03695011138916
    9. ' company's' → logprob: -13.78695011138916
    10. ''e' → logprob: -14.16195011138916

Token 1087: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -7.052377623040229e-05
    2. ' class' → logprob: -10.125070571899414
    3. '<|end|>' → logprob: -11.500070571899414
    4. '
' → logprob: -11.750070571899414
    5. '<class' → logprob: -11.750070571899414
    6. '(class' → logprob: -13.500070571899414
    7. ',class' → logprob: -14.375070571899414
    8. '```' → logprob: -14.625070571899414
    9. '"class' → logprob: -15.250070571899414
    10. 'Class' → logprob: -15.375070571899414

Token 1088: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.531315314830863e-06
    2. ' class' → logprob: -13.000003814697266
    3. '<class' → logprob: -14.125003814697266
    4. '
' → logprob: -15.125003814697266
    5. 'Class' → logprob: -16.750003814697266
    6. '@class' → logprob: -17.750003814697266
    7. '"class' → logprob: -17.750003814697266
    8. '```' → logprob: -17.750003814697266
    9. 'from' → logprob: -17.875003814697266
    10. '-class' → logprob: -18.000003814697266

Token 1089: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.723352049040841e-06
    2. ' class' → logprob: -12.875004768371582
    3. '
' → logprob: -14.250004768371582
    4. 'from' → logprob: -14.625004768371582
    5. 'Edge' → logprob: -14.875004768371582
    6. '<class' → logprob: -14.875004768371582
    7. 'Class' → logprob: -16.000003814697266
    8. ')' → logprob: -16.875003814697266
    9. 'classmethod' → logprob: -17.125003814697266
    10. '"class' → logprob: -17.375003814697266

Token 1090: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009606152772903442
    2. ' __' → logprob: -4.75960636138916
    3. 'copy' → logprob: -7.38460636138916
    4. 'company' → logprob: -8.63460636138916
    5. 'repr' → logprob: -9.38460636138916
    6. 'def' → logprob: -10.88460636138916
    7. '_repr' → logprob: -11.00960636138916
    8. '_copy' → logprob: -11.38460636138916
    9. ' ' → logprob: -11.50960636138916
    10. 'mod' → logprob: -11.63460636138916

Token 1091: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.17225921154022217
    2. 'repr' → logprob: -2.4222593307495117
    3. 'eq' → logprob: -2.6722593307495117
    4. 'init' → logprob: -7.922259330749512
    5. 'hash' → logprob: -10.047259330749512
    6. 'str' → logprob: -11.047259330749512
    7. 'copy' → logprob: -16.797258377075195
    8. 'gt' → logprob: -17.297258377075195
    9. 'cmp' → logprob: -17.422258377075195
    10. 'len' → logprob: -17.547258377075195

Token 1092: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0032017158810049295
    2. '__' → logprob: -6.878201484680176
    3. '__(
' → logprob: -6.878201484680176
    4. '(self' → logprob: -7.253201484680176
    5. '__('' → logprob: -8.003201484680176
    6. '__((' → logprob: -9.753201484680176
    7. '__("' → logprob: -10.878201484680176
    8. '(' → logprob: -11.628201484680176
    9. '__(*' → logprob: -12.503201484680176
    10. '__.__' → logprob: -13.753201484680176

Token 1093: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.3676733690081164e-05
    2. '(self' → logprob: -11.00002384185791
    3. ' self' → logprob: -12.25002384185791
    4. ')' → logprob: -13.12502384185791
    5. '	self' → logprob: -16.875022888183594
    6. '(' → logprob: -17.375022888183594
    7. '
' → logprob: -17.875022888183594
    8. 's' → logprob: -18.000022888183594
    9. ')(' → logprob: -18.500022888183594
    10. 'Self' → logprob: -18.875022888183594

Token 1094: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01941075548529625
    2. '__' → logprob: -5.019410610198975
    3. '__(
' → logprob: -5.019410610198975
    4. '(self' → logprob: -5.519410610198975
    5. '__('' → logprob: -6.644410610198975
    6. 'self' → logprob: -7.769410610198975
    7. '__((' → logprob: -8.894411087036133
    8. '__(*' → logprob: -10.519411087036133
    9. '__("' → logprob: -10.644411087036133
    10. '(' → logprob: -10.894411087036133

Token 1095: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5483435988426208
    2. '       ' → logprob: -1.7983436584472656
    3. 'self' → logprob: -1.7983436584472656
    4. '   ' → logprob: -3.2983436584472656
    5. 'return' → logprob: -3.2983436584472656
    6. 'def' → logprob: -4.673343658447266
    7. '(' → logprob: -5.423343658447266
    8. ' self' → logprob: -6.798343658447266
    9. ' return' → logprob: -7.173343658447266
    10. 'f' → logprob: -8.173343658447266

Token 1096: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.041070129722356796
    2. ' return' → logprob: -3.2910702228546143
    3. ''' → logprob: -6.291069984436035
    4. '   ' → logprob: -7.666069984436035
    5. 'f' → logprob: -8.541069984436035
    6. ''<' → logprob: -8.541069984436035
    7. '<' → logprob: -9.041069984436035
    8. '       ' → logprob: -9.416069984436035
    9. ' f' → logprob: -9.916069984436035
    10. 'Return' → logprob: -11.166069984436035

Token 1097: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.176947600673884e-05
    2. ' f' → logprob: -10.750021934509277
    3. ''f' → logprob: -16.25002098083496
    4. '(f' → logprob: -16.75002098083496
    5. '   ' → logprob: -16.87502098083496
    6. ' ' → logprob: -18.75002098083496
    7. '	f' → logprob: -19.12502098083496
    8. '"' → logprob: -19.37502098083496
    9. '       ' → logprob: -19.75002098083496
    10. ''' → logprob: -20.00002098083496

Token 1098: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33238717913627625
    2. 'f' → logprob: -1.3323872089385986
    3. ''' → logprob: -4.0823869705200195
    4. 'Edge' → logprob: -6.4573869705200195
    5. '"<' → logprob: -8.20738697052002
    6. '<Edge' → logprob: -9.70738697052002
    7. ''<' → logprob: -10.33238697052002
    8. ''f' → logprob: -10.58238697052002
    9. '(f' → logprob: -10.83238697052002
    10. ' f' → logprob: -10.95738697052002

Token 1099: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.15885134041309357
    2. '"' → logprob: -2.533851385116577
    3. ''' → logprob: -2.783851385116577
    4. 'f' → logprob: -5.408851146697998
    5. '<Edge' → logprob: -7.533851146697998
    6. 'Island' → logprob: -8.283851623535156
    7. ''<' → logprob: -8.783851623535156
    8. '"<' → logprob: -9.033851623535156
    9. ''E' → logprob: -9.658851623535156
    10. '<' → logprob: -10.283851623535156

Token 1100: 'Proposal' (ID: 79001)
  Prédit: 'Proposal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Proposal' → logprob: -9.729906196298543e-06
    2. '(u' → logprob: -11.625009536743164
    3. '('' → logprob: -14.750009536743164
    4. 'proposal' → logprob: -16.125009536743164
    5. ' Proposal' → logprob: -16.250009536743164
    6. '(' → logprob: -16.250009536743164
    7. '({' → logprob: -17.375009536743164
    8. 'Pro' → logprob: -17.750009536743164
    9. '('{' → logprob: -18.375009536743164
    10. '(self' → logprob: -18.500009536743164

Token 1101: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.03987998142838478
    2. '(u' → logprob: -3.2898800373077393
    3. '(f' → logprob: -7.16487979888916
    4. '(self' → logprob: -7.53987979888916
    5. '(' → logprob: -7.78987979888916
    6. '{' → logprob: -9.16487979888916
    7. '(({' → logprob: -12.16487979888916
    8. '('{' → logprob: -12.91487979888916
    9. '(U' → logprob: -13.16487979888916
    10. '((' → logprob: -13.28987979888916

Token 1102: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.127333340875339e-06
    2. ' self' → logprob: -13.500003814697266
    3. 'u' → logprob: -13.875003814697266
    4. 'repr' → logprob: -14.250003814697266
    5. ''s' → logprob: -14.750003814697266
    6. '   ' → logprob: -15.125003814697266
    7. '{' → logprob: -16.750003814697266
    8. '(self' → logprob: -16.750003814697266
    9. 'f' → logprob: -16.750003814697266
    10. '       ' → logprob: -17.250003814697266

Token 1103: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -2.558399319241289e-05
    2. 'self' → logprob: -10.875025749206543
    3. 'u' → logprob: -12.125025749206543
    4. ''.' → logprob: -14.125025749206543
    5. ' .' → logprob: -16.250024795532227
    6. '.' → logprob: -16.250024795532227
    7. '.s' → logprob: -17.000024795532227
    8. '.v' → logprob: -17.125024795532227
    9. ',u' → logprob: -17.500024795532227
    10. '(u' → logprob: -18.250024795532227

Token 1104: '},{' (ID: 34684)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.023406077176332474
    2. ',' → logprob: -3.7734060287475586
    3. '},{' → logprob: -8.898406028747559
    4. 'self' → logprob: -12.148406028747559
    5. ',u' → logprob: -12.148406028747559
    6. ' },' → logprob: -12.648406028747559
    7. '}' → logprob: -12.898406028747559
    8. '},
' → logprob: -12.898406028747559
    9. ' ,' → logprob: -13.398406028747559
    10. '   ' → logprob: -14.148406028747559

Token 1105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.165027217415627e-05
    2. ' self' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. '{' → logprob: -17.75002098083496
    5. '       ' → logprob: -18.12502098083496
    6. '
' → logprob: -18.25002098083496
    7. 'v' → logprob: -18.62502098083496
    8. '	self' → logprob: -19.50002098083496
    9. '(self' → logprob: -19.87502098083496
    10. 'f' → logprob: -20.12502098083496

Token 1106: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.06065736338496208
    2. 'v' → logprob: -3.310657262802124
    3. 'self' → logprob: -4.310657501220703
    4. ',v' → logprob: -5.060657501220703
    5. '}' → logprob: -6.560657501220703
    6. '},{' → logprob: -7.435657501220703
    7. '},' → logprob: -8.310657501220703
    8. ',' → logprob: -9.185657501220703
    9. ',self' → logprob: -9.310657501220703
    10. '_v' → logprob: -10.435657501220703

Token 1107: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01874399743974209
    2. ',{' → logprob: -4.268743991851807
    3. '},{' → logprob: -5.893743991851807
    4. '},' → logprob: -7.018743991851807
    5. '{' → logprob: -8.268744468688965
    6. '}' → logprob: -8.643744468688965
    7. ' ,' → logprob: -8.768744468688965
    8. ',f' → logprob: -8.893744468688965
    9. ',self' → logprob: -9.018744468688965
    10. ')' → logprob: -11.268744468688965

Token 1108: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1994775377388578e-05
    2. '{' → logprob: -11.625012397766113
    3. ' self' → logprob: -13.000012397766113
    4. '   ' → logprob: -15.250012397766113
    5. '       ' → logprob: -15.625012397766113
    6. 'repr' → logprob: -16.250011444091797
    7. '           ' → logprob: -17.250011444091797
    8. 'cost' → logprob: -17.250011444091797
    9. ''{' → logprob: -17.250011444091797
    10. '	self' → logprob: -17.500011444091797

Token 1109: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.12983788549900055
    2. '.company' → logprob: -2.129837989807129
    3. 'cost' → logprob: -6.004837989807129
    4. 'company' → logprob: -7.879837989807129
    5. '}.' → logprob: -10.004837989807129
    6. ',' → logprob: -12.629837989807129
    7. '_cost' → logprob: -13.254837989807129
    8. ''.' → logprob: -13.504837989807129
    9. '.code' → logprob: -13.629837989807129
    10. ' cost' → logprob: -13.754837989807129

Token 1110: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08163919299840927
    2. ',{' → logprob: -2.581639289855957
    3. '{' → logprob: -6.206639289855957
    4. '},{' → logprob: -8.331639289855957
    5. '},' → logprob: -8.956639289855957
    6. ')' → logprob: -9.081639289855957
    7. '}' → logprob: -9.956639289855957
    8. ','' → logprob: -10.206639289855957
    9. '})' → logprob: -10.206639289855957
    10. ',self' → logprob: -10.331639289855957

Token 1111: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005237548612058163
    2. 'repr' → logprob: -5.255237579345703
    3. ' self' → logprob: -12.755237579345703
    4. ' repr' → logprob: -14.630237579345703
    5. '   ' → logprob: -15.380237579345703
    6. '       ' → logprob: -15.630237579345703
    7. 're' → logprob: -17.755237579345703
    8. '           ' → logprob: -18.005237579345703
    9. '(self' → logprob: -18.380237579345703
    10. 'rep' → logprob: -18.505237579345703

Token 1112: '.company' (ID: 48225)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.2521361708641052
    2. '.company' → logprob: -1.50213623046875
    3. 'self' → logprob: -8.50213623046875
    4. ' company' → logprob: -13.25213623046875
    5. 'repr' → logprob: -14.62713623046875
    6. '_company' → logprob: -14.75213623046875
    7. '   ' → logprob: -15.00213623046875
    8. '.com' → logprob: -15.62713623046875
    9. '
' → logprob: -15.62713623046875
    10. '(company' → logprob: -15.75213623046875

Token 1113: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.4502161741256714
    2. '})' → logprob: -1.2002161741256714
    3. ')}' → logprob: -3.450216293334961
    4. ')' → logprob: -3.700216293334961
    5. '}"' → logprob: -6.200216293334961
    6. '}")' → logprob: -6.575216293334961
    7. ')">' → logprob: -6.950216293334961
    8. ')")' → logprob: -8.200216293334961
    9. '")' → logprob: -9.825216293334961
    10. '')"' → logprob: -10.200216293334961

Token 1114: '"


' (ID: 36470)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000919200771022588
    2. '
' → logprob: -7.000919342041016
    3. 'Edge' → logprob: -12.625919342041016
    4. ' class' → logprob: -13.375919342041016
    5. '

' → logprob: -13.500919342041016
    6. '    
' → logprob: -15.000919342041016
    7. 'Class' → logprob: -15.375919342041016
    8. '  
' → logprob: -15.500919342041016
    9. '<class' → logprob: -16.000919342041016
    10. '@dat' → logprob: -16.000919342041016

Token 1115: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.3306015716807451e-05
    2. 'from' → logprob: -11.25001335144043
    3. 'Edge' → logprob: -16.37501335144043
    4. 'Class' → logprob: -16.87501335144043
    5. ' class' → logprob: -16.87501335144043
    6. '
' → logprob: -18.12501335144043
    7. '<class' → logprob: -18.37501335144043
    8. '@dat' → logprob: -19.00001335144043
    9. '```' → logprob: -19.62501335144043
    10. 'import' → logprob: -19.87501335144043

Token 1116: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.01586589589715004
    2. ' Edge' → logprob: -4.265865802764893
    3. 'Union' → logprob: -6.390865802764893
    4. ' Union' → logprob: -10.64086627960205
    5. '_edge' → logprob: -16.140865325927734
    6. '<Edge' → logprob: -16.765865325927734
    7. '.Edge' → logprob: -16.890865325927734
    8. ' edge' → logprob: -18.265865325927734
    9. ' ' → logprob: -19.390865325927734
    10. 'edge' → logprob: -19.640865325927734

Token 1117: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4450656473636627
    2. ':' → logprob: -1.6950656175613403
    3. '(' → logprob: -2.07006573677063
    4. 'Proposal' → logprob: -3.44506573677063
    5. '(
' → logprob: -4.195065498352051
    6. '(`' → logprob: -6.945065498352051
    7. '('' → logprob: -7.945065498352051
    8. '):
' → logprob: -8.44506549835205
    9. '   ' → logprob: -9.19506549835205
    10. '():
' → logprob: -9.19506549835205

Token 1118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14532670378684998
    2. '__' → logprob: -2.645326614379883
    3. ':
' → logprob: -3.395326614379883
    4. ':' → logprob: -3.895326614379883
    5. '(' → logprob: -5.270326614379883
    6. '<|end|>' → logprob: -7.395326614379883
    7. '```' → logprob: -7.395326614379883
    8. '  ' → logprob: -7.520326614379883
    9. ' ' → logprob: -7.645326614379883
    10. '(
' → logprob: -7.645326614379883

Token 1119: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -6.0629870858974755e-05
    2. ' __' → logprob: -10.12506103515625
    3. '   ' → logprob: -11.87506103515625
    4. '.__' → logprob: -12.75006103515625
    5. ':
' → logprob: -13.37506103515625
    6. '_slots' → logprob: -13.50006103515625
    7. 'def' → logprob: -13.75006103515625
    8. '___' → logprob: -13.75006103515625
    9. 'class' → logprob: -14.00006103515625
    10. '().__' → logprob: -14.12506103515625

Token 1120: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -6.153795766294934e-06
    2. '_slots' → logprob: -12.500005722045898
    3. '__' → logprob: -13.000005722045898
    4. ' slots' → logprob: -15.750005722045898
    5. 'tokens' → logprob: -17.8750057220459
    6. 'slot' → logprob: -19.0000057220459
    7. 'sl' → logprob: -20.5000057220459
    8. 'init' → logprob: -20.5000057220459
    9. '```' → logprob: -21.2500057220459
    10. 'Slots' → logprob: -21.3750057220459

Token 1121: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24692358076572418
    2. '__' → logprob: -2.1219236850738525
    3. ' =' → logprob: -2.4969236850738525
    4. '=('' → logprob: -4.121923446655273
    5. '__('' → logprob: -8.871923446655273
    6. '('' → logprob: -8.871923446655273
    7. '   ' → logprob: -9.996923446655273
    8. ' ('' → logprob: -10.246923446655273
    9. '('__' → logprob: -10.746923446655273
    10. '___' → logprob: -10.871923446655273

Token 1122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0440741591155529
    2. ' =' → logprob: -3.794074058532715
    3. '=('' → logprob: -4.044074058532715
    4. '('' → logprob: -5.794074058532715
    5. ' ('' → logprob: -10.919074058532715
    6. '('__' → logprob: -11.794074058532715
    7. '=("' → logprob: -12.544074058532715
    8. '__' → logprob: -12.544074058532715
    9. '=['' → logprob: -12.669074058532715
    10. '['' → logprob: -13.169074058532715

Token 1123: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.5577775128767826e-06
    2. '['' → logprob: -12.375005722045898
    3. '(u' → logprob: -14.125005722045898
    4. '('__' → logprob: -15.125005722045898
    5. '('_' → logprob: -16.3750057220459
    6. ''u' → logprob: -16.3750057220459
    7. ' ('' → logprob: -16.3750057220459
    8. '[u' → logprob: -16.8750057220459
    9. 'u' → logprob: -18.0000057220459
    10. '("' → logprob: -19.7500057220459

Token 1124: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.320199877838604e-07
    2. ' u' → logprob: -15.375
    3. ''u' → logprob: -16.375
    4. '	u' → logprob: -17.0
    5. '   ' → logprob: -18.125
    6. '__' → logprob: -18.5
    7. '_u' → logprob: -19.75
    8. '
' → logprob: -20.75
    9. '[u' → logprob: -20.75
    10. 'class' → logprob: -21.375

Token 1125: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16342352330684662
    2. ',' → logprob: -1.9134235382080078
    3. '','' → logprob: -6.413423538208008
    4. ',u' → logprob: -6.663423538208008
    5. ','' → logprob: -9.538423538208008
    6. ' ,' → logprob: -9.663423538208008
    7. '   ' → logprob: -9.913423538208008
    8. 'u' → logprob: -10.413423538208008
    9. ''' → logprob: -10.538423538208008
    10. ' ',' → logprob: -10.788423538208008

Token 1126: ' '' (ID: 461)
  Prédit: ''u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''u' → logprob: -0.0009561245678924024
    2. 'u' → logprob: -7.250956058502197
    3. ''' → logprob: -8.375956535339355
    4. ' '' → logprob: -11.375956535339355
    5. ''e' → logprob: -13.125956535339355
    6. ''user' → logprob: -14.500956535339355
    7. '’u' → logprob: -15.000956535339355
    8. '`' → logprob: -15.250956535339355
    9. ''t' → logprob: -15.500956535339355
    10. '   ' → logprob: -15.625956535339355

Token 1127: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. 'cost' → logprob: -14.875000953674316
    3. 'u' → logprob: -15.750000953674316
    4. ' v' → logprob: -17.125
    5. ''' → logprob: -17.375
    6. 'mod' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. '
' → logprob: -19.5
    9. '	v' → logprob: -20.0
    10. '```' → logprob: -20.375

Token 1128: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6335042119026184
    2. ',' → logprob: -0.7585042119026184
    3. ','' → logprob: -7.633504390716553
    4. '','' → logprob: -8.633503913879395
    5. ' ,' → logprob: -8.758503913879395
    6. ' ',' → logprob: -10.508503913879395
    7. ''' → logprob: -10.758503913879395
    8. '   ' → logprob: -10.883503913879395
    9. ',u' → logprob: -11.383503913879395
    10. '",' → logprob: -13.133503913879395

Token 1129: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4748537540435791
    2. 'cost' → logprob: -0.9748537540435791
    3. ''u' → logprob: -7.474853515625
    4. ' cost' → logprob: -9.349853515625
    5. 'u' → logprob: -10.099853515625
    6. ' '' → logprob: -10.099853515625
    7. '   ' → logprob: -10.724853515625
    8. 'mod' → logprob: -11.474853515625
    9. ''m' → logprob: -13.724853515625
    10. '`' → logprob: -13.849853515625

Token 1130: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2014451026916504
    2. ''' → logprob: -1.7014451026916504
    3. ''u' → logprob: -11.201444625854492
    4. ' cost' → logprob: -11.326444625854492
    5. 'u' → logprob: -12.576444625854492
    6. 'mod' → logprob: -13.576444625854492
    7. 'c' → logprob: -14.576444625854492
    8. ' '' → logprob: -14.576444625854492
    9. '(cost' → logprob: -15.826444625854492
    10. '"' → logprob: -16.201444625854492

Token 1131: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024061264470219612
    2. '',' → logprob: -3.7740612030029297
    3. ','' → logprob: -7.77406120300293
    4. ' ,' → logprob: -9.02406120300293
    5. '   ' → logprob: -9.14906120300293
    6. ',u' → logprob: -9.39906120300293
    7. '','' → logprob: -9.52406120300293
    8. ' ',' → logprob: -12.77406120300293
    9. ''' → logprob: -12.89906120300293
    10. '<|end|>' → logprob: -13.64906120300293

Token 1132: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017464581178501248
    2. ' '' → logprob: -6.626746654510498
    3. 'company' → logprob: -7.876746654510498
    4. 'mod' → logprob: -11.25174617767334
    5. ' company' → logprob: -11.37674617767334
    6. '   ' → logprob: -11.75174617767334
    7. ' ' → logprob: -13.00174617767334
    8. ''m' → logprob: -13.87674617767334
    9. ' mod' → logprob: -14.37674617767334
    10. '     ' → logprob: -14.62674617767334

Token 1133: 'company' (ID: 13003)
  Prédit: 'company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.0013370281085371971
    2. 'mod' → logprob: -6.626337051391602
    3. 'cost' → logprob: -11.751337051391602
    4. ''' → logprob: -13.376337051391602
    5. ' company' → logprob: -13.876337051391602
    6. 'comp' → logprob: -14.876337051391602
    7. '   ' → logprob: -16.1263370513916
    8. '
' → logprob: -16.5013370513916
    9. '  ' → logprob: -17.5013370513916
    10. ''m' → logprob: -18.0013370513916

Token 1134: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008633419638499618
    2. ','' → logprob: -7.375863552093506
    3. ' ,' → logprob: -8.750863075256348
    4. '',' → logprob: -9.500863075256348
    5. '   ' → logprob: -13.500863075256348
    6. '','' → logprob: -14.000863075256348
    7. ',
' → logprob: -15.250863075256348
    8. ' ,'' → logprob: -15.375863075256348
    9. ',u' → logprob: -15.375863075256348
    10. ''' → logprob: -15.875863075256348

Token 1135: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005033440887928009
    2. ' '' → logprob: -5.380033493041992
    3. 'mod' → logprob: -7.880033493041992
    4. ' mod' → logprob: -10.505033493041992
    5. '   ' → logprob: -12.255033493041992
    6. ''m' → logprob: -14.005033493041992
    7. ' ' → logprob: -14.880033493041992
    8. '_mod' → logprob: -14.880033493041992
    9. '	mod' → logprob: -15.255033493041992
    10. '"' → logprob: -15.505033493041992

Token 1136: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.512236498361744e-07
    2. ' mod' → logprob: -14.500000953674316
    3. '	mod' → logprob: -19.75
    4. '_mod' → logprob: -22.5
    5. 'modifiable' → logprob: -22.875
    6. 'moder' → logprob: -24.0
    7. '.mod' → logprob: -24.125
    8. '(mod' → logprob: -24.25
    9. '   ' → logprob: -24.375
    10. 'modifier' → logprob: -24.625

Token 1137: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.5048530030981055e-06
    2. '_code' → logprob: -14.500001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_COST' → logprob: -15.500001907348633
    5. 'cost' → logprob: -16.000001907348633
    6. '_co' → logprob: -17.125001907348633
    7. ''_' → logprob: -17.125001907348633
    8. ' _' → logprob: -17.250001907348633
    9. ' cost' → logprob: -18.375001907348633
    10. 'Cost' → logprob: -18.500001907348633

Token 1138: '')

' (ID: 9735)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.11760671436786652
    2. ',' → logprob: -2.4926066398620605
    3. '')' → logprob: -3.9926066398620605
    4. '','' → logprob: -5.3676066398620605
    5. ')' → logprob: -5.4926066398620605
    6. '   ' → logprob: -7.4926066398620605
    7. ''' → logprob: -8.617607116699219
    8. ','' → logprob: -9.242607116699219
    9. ',u' → logprob: -9.617607116699219
    10. ' ,' → logprob: -10.492607116699219

Token 1139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045961614698171616
    2. '(u' → logprob: -3.545961618423462
    3. '    
' → logprob: -5.045961380004883
    4. '
' → logprob: -6.170961380004883
    5. ':' → logprob: -6.295961380004883
    6. '(
' → logprob: -6.920961380004883
    7. '('' → logprob: -6.920961380004883
    8. 'def' → logprob: -7.170961380004883
    9. '[u' → logprob: -7.420961380004883
    10. ' 
' → logprob: -7.795961380004883

Token 1140: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011272187111899257
    2. '   ' → logprob: -9.500112533569336
    3. ' def' → logprob: -10.250112533569336
    4. 'class' → logprob: -13.000112533569336
    5. '__' → logprob: -15.875112533569336
    6. '	def' → logprob: -16.500112533569336
    7. '
' → logprob: -18.125112533569336
    8. '    
' → logprob: -18.875112533569336
    9. '  ' → logprob: -20.000112533569336
    10. '```' → logprob: -20.625112533569336

Token 1141: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008679809048771858
    2. ' __' → logprob: -4.7586798667907715
    3. 'init' → logprob: -10.008679389953613
    4. 'def' → logprob: -12.258679389953613
    5. '_init' → logprob: -12.383679389953613
    6. 'u' → logprob: -12.508679389953613
    7. '.__' → logprob: -12.633679389953613
    8. '_u' → logprob: -13.133679389953613
    9. '[u' → logprob: -14.383679389953613
    10. '<u' → logprob: -14.383679389953613

Token 1142: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.5759764313697815
    2. 'init' → logprob: -0.8259764313697815
    3. '_slots' → logprob: -10.700976371765137
    4. 'slot' → logprob: -11.575976371765137
    5. '_init' → logprob: -12.950976371765137
    6. '__' → logprob: -13.325976371765137
    7. ' slots' → logprob: -14.325976371765137
    8. 'Slots' → logprob: -15.450976371765137
    9. ' init' → logprob: -16.200977325439453
    10. 'sl' → logprob: -16.950977325439453

Token 1143: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.39221450686454773
    2. '__(' → logprob: -1.3922145366668701
    3. '(' → logprob: -2.64221453666687
    4. '__(
' → logprob: -6.392214298248291
    5. '__' → logprob: -6.642214298248291
    6. 'self' → logprob: -7.767214298248291
    7. '__((' → logprob: -7.767214298248291
    8. ' (' → logprob: -7.892214298248291
    9. '__('' → logprob: -8.39221477508545
    10. '<|end|>' → logprob: -9.26721477508545

Token 1144: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2246291337069124e-05
    2. ' self' → logprob: -11.375021934509277
    3. 'u' → logprob: -11.625021934509277
    4. '(self' → logprob: -13.375021934509277
    5. '   ' → logprob: -16.250022888183594
    6. ',self' → logprob: -16.750022888183594
    7. '	self' → logprob: -16.750022888183594
    8. ',' → logprob: -18.625022888183594
    9. '=self' → logprob: -18.625022888183594
    10. '[self' → logprob: -19.375022888183594

Token 1145: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10353177040815353
    2. 'self' → logprob: -2.353531837463379
    3. '__(' → logprob: -5.728531837463379
    4. '(u' → logprob: -10.478531837463379
    5. ' self' → logprob: -11.103531837463379
    6. '(' → logprob: -11.853531837463379
    7. ',' → logprob: -12.603531837463379
    8. '   ' → logprob: -12.728531837463379
    9. '__' → logprob: -12.853531837463379
    10. 'u' → logprob: -13.103531837463379

Token 1146: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.318681188422488e-05
    2. ' u' → logprob: -11.25001335144043
    3. 'self' → logprob: -15.75001335144043
    4. '	u' → logprob: -18.00001335144043
    5. 'e' → logprob: -18.12501335144043
    6. '   ' → logprob: -19.12501335144043
    7. ''u' → logprob: -20.75001335144043
    8. ',u' → logprob: -21.00001335144043
    9. '_u' → logprob: -21.37501335144043
    10. '.u' → logprob: -21.75001335144043

Token 1147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014287306112237275
    2. ',u' → logprob: -8.875143051147461
    3. ' ,' → logprob: -13.000143051147461
    4. 'u' → logprob: -14.750143051147461
    5. ',v' → logprob: -16.37514305114746
    6. '   ' → logprob: -16.62514305114746
    7. ',self' → logprob: -16.62514305114746
    8. 'self' → logprob: -17.12514305114746
    9. ',e' → logprob: -17.50014305114746
    10. ' u' → logprob: -17.62514305114746

Token 1148: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0206720617134124e-05
    2. ' v' → logprob: -11.50001049041748
    3. 'u' → logprob: -17.750009536743164
    4. '	v' → logprob: -20.375009536743164
    5. ',v' → logprob: -21.625009536743164
    6. '   ' → logprob: -22.250009536743164
    7. '_v' → logprob: -24.500009536743164
    8. '
' → logprob: -24.750009536743164
    9. '$v' → logprob: -25.250009536743164
    10. '       ' → logprob: -25.375009536743164

Token 1149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002993544621858746
    2. ',u' → logprob: -8.125299453735352
    3. ' ,' → logprob: -12.750299453735352
    4. 'u' → logprob: -15.125299453735352
    5. '   ' → logprob: -17.12529945373535
    6. '       ' → logprob: -17.25029945373535
    7. ',e' → logprob: -17.37529945373535
    8. ',
' → logprob: -18.00029945373535
    9. '‌,' → logprob: -18.12529945373535
    10. ' u' → logprob: -18.25029945373535

Token 1150: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01814994215965271
    2. ' cost' → logprob: -4.0181498527526855
    3. 'c' → logprob: -18.143150329589844
    4. '(cost' → logprob: -19.393150329589844
    5. '   ' → logprob: -19.643150329589844
    6. '_cost' → logprob: -20.268150329589844
    7. 'Cost' → logprob: -21.268150329589844
    8. '       ' → logprob: -21.768150329589844
    9. '.cost' → logprob: -22.018150329589844
    10. '    ' → logprob: -22.018150329589844

Token 1151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ',u' → logprob: -11.875007629394531
    3. ' ,' → logprob: -15.125007629394531
    4. '       ' → logprob: -15.125007629394531
    5. ',c' → logprob: -15.875007629394531
    6. ',
' → logprob: -17.12500762939453
    7. '‌,' → logprob: -17.25000762939453
    8. '   ' → logprob: -17.87500762939453
    9. ',module' → logprob: -18.25000762939453
    10. 'u' → logprob: -18.25000762939453

Token 1152: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.014164221473038197
    2. ' company' → logprob: -4.264164447784424
    3. 'cost' → logprob: -14.889163970947266
    4. '   ' → logprob: -15.014163970947266
    5. '    ' → logprob: -17.639163970947266
    6. '(company' → logprob: -17.764163970947266
    7. '       ' → logprob: -18.264163970947266
    8. 'Company' → logprob: -18.889163970947266
    9. '     ' → logprob: -19.014163970947266
    10. ' ' → logprob: -19.014163970947266

Token 1153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -14.375001907348633
    3. ',u' → logprob: -14.375001907348633
    4. '       ' → logprob: -15.250001907348633
    5. '‌,' → logprob: -17.375001907348633
    6. ',
' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.750001907348633
    8. ',c' → logprob: -18.500001907348633
    9. ',module' → logprob: -18.750001907348633
    10. ',e' → logprob: -18.875001907348633

Token 1154: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.836499985889532e-05
    2. ' mod' → logprob: -9.7500581741333
    3. '	mod' → logprob: -18.625059127807617
    4. '   ' → logprob: -19.875059127807617
    5. '0' → logprob: -22.125059127807617
    6. '_mod' → logprob: -22.125059127807617
    7. '(mod' → logprob: -23.000059127807617
    8. 'moder' → logprob: -23.875059127807617
    9. '.mod' → logprob: -23.875059127807617
    10. '```' → logprob: -23.875059127807617

Token 1155: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.875000953674316
    3. '_code' → logprob: -15.500000953674316
    4. '_COST' → logprob: -16.625
    5. ' _' → logprob: -16.875
    6. '_c' → logprob: -17.5
    7. '_co' → logprob: -18.125
    8. '_cod' → logprob: -18.75
    9. '_cov' → logprob: -18.875
    10. '_const' → logprob: -19.625

Token 1156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04869796708226204
    2. '):
' → logprob: -3.0486979484558105
    3. '       ' → logprob: -9.923698425292969
    4. ':' → logprob: -10.423698425292969
    5. ',' → logprob: -10.923698425292969
    6. '   ' → logprob: -12.048698425292969
    7. '=' → logprob: -13.173698425292969
    8. '=None' → logprob: -13.173698425292969
    9. '):
' → logprob: -13.298698425292969
    10. '):

' → logprob: -14.173698425292969

Token 1157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010322150774300098
    2. 'self' → logprob: -7.00103235244751
    3. '	' → logprob: -9.876031875610352
    4. ' self' → logprob: -10.501031875610352
    5. ',' → logprob: -11.251031875610352
    6. '   ' → logprob: -12.251031875610352
    7. '      ' → logprob: -12.376031875610352
    8. '	self' → logprob: -12.501031875610352
    9. '	       ' → logprob: -12.626031875610352
    10. ' ' → logprob: -12.751031875610352

Token 1158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.127333340875339e-06
    2. '       ' → logprob: -12.500003814697266
    3. ' self' → logprob: -14.750003814697266
    4. '   ' → logprob: -19.375003814697266
    5. '	self' → logprob: -21.000003814697266
    6. 'u' → logprob: -21.750003814697266
    7. '           ' → logprob: -22.625003814697266
    8. '(self' → logprob: -23.750003814697266
    9. '
' → logprob: -24.250003814697266
    10. '```' → logprob: -24.625003814697266

Token 1159: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -3.054500666621607e-06
    2. '=u' → logprob: -13.25000286102295
    3. 'u' → logprob: -13.87500286102295
    4. '.' → logprob: -15.75000286102295
    5. '=' → logprob: -16.000003814697266
    6. ' =' → logprob: -17.625003814697266
    7. '	u' → logprob: -18.250003814697266
    8. ',u' → logprob: -18.625003814697266
    9. ' .' → logprob: -19.125003814697266
    10. ' u' → logprob: -19.750003814697266

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06511480361223221
    2. ' =' → logprob: -3.190114736557007
    3. ',' → logprob: -4.065114974975586
    4. '=u' → logprob: -5.440114974975586
    5. ',u' → logprob: -8.315114974975586
    6. '<|end|>' → logprob: -9.690114974975586
    7. 'u' → logprob: -10.065114974975586
    8. ' u' → logprob: -11.440114974975586
    9. '=
' → logprob: -12.940114974975586
    10. ',
' → logprob: -13.065114974975586

Token 1161: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0015024791937321424
    2. ' u' → logprob: -6.501502513885498
    3. '	u' → logprob: -16.626502990722656
    4. '=u' → logprob: -20.876502990722656
    5. '_u' → logprob: -21.876502990722656
    6. '
' → logprob: -22.751502990722656
    7. '[u' → logprob: -22.751502990722656
    8. '   ' → logprob: -23.001502990722656
    9. ''u' → logprob: -23.126502990722656
    10. 'int' → logprob: -23.501502990722656

Token 1162: '
' (ID: 198)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4957152009010315
    2. 'u' → logprob: -1.2457151412963867
    3. ',' → logprob: -2.4957151412963867
    4. ',u' → logprob: -4.370715141296387
    5. '       ' → logprob: -5.870715141296387
    6. '	u' → logprob: -6.245715141296387
    7. '=u' → logprob: -6.245715141296387
    8. ' =' → logprob: -8.245715141296387
    9. '<|end|>' → logprob: -8.370715141296387
    10. '=' → logprob: -8.495715141296387

Token 1163: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10511957854032516
    2. ' v' → logprob: -2.355119466781616
    3. '       ' → logprob: -5.480119705200195
    4. 'self' → logprob: -7.980119705200195
    5. 'u' → logprob: -8.855119705200195
    6. '	v' → logprob: -9.355119705200195
    7. ',v' → logprob: -9.480119705200195
    8. ' self' → logprob: -10.355119705200195
    9. '   ' → logprob: -10.480119705200195
    10. ' u' → logprob: -11.480119705200195

Token 1164: ' self' (ID: 1051)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. 'self' (adapté à ' self') → logprob: -14.250000953674316
    3. ' v' → logprob: -14.500000953674316
    4. 'u' → logprob: -18.125001907348633
    5. '       ' → logprob: -19.750001907348633
    6. '	v' → logprob: -21.000001907348633
    7. '   ' → logprob: -22.250001907348633
    8. ' self' → logprob: -23.500001907348633
    9. '$v' → logprob: -24.750001907348633
    10. 'e' → logprob: -24.875001907348633

Token 1165: '.v' (ID: 5520)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1480920910835266
    2. 'v' → logprob: -2.648092031478882
    3. ' =' → logprob: -3.648092031478882
    4. ' u' → logprob: -4.648092269897461
    5. '=' → logprob: -4.898092269897461
    6. ',' → logprob: -4.898092269897461
    7. ' v' → logprob: -5.273092269897461
    8. '.u' → logprob: -5.398092269897461
    9. '=u' → logprob: -5.648092269897461
    10. '<|end|>' → logprob: -7.273092269897461

Token 1166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5007999539375305
    2. ' =' → logprob: -1.0007998943328857
    3. ',' → logprob: -4.375800132751465
    4. '<|end|>' → logprob: -4.500800132751465
    5. '=u' → logprob: -6.500800132751465
    6. 'u' → logprob: -7.500800132751465
    7. ' u' → logprob: -8.500800132751465
    8. '       ' → logprob: -8.625800132751465
    9. 'e' → logprob: -9.750800132751465
    10. ',u' → logprob: -10.375800132751465

Token 1167: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008885911083780229
    2. ' v' → logprob: -7.500888824462891
    3. 'u' → logprob: -8.00088882446289
    4. ' u' → logprob: -14.75088882446289
    5. 'self' → logprob: -18.12588882446289
    6. '	v' → logprob: -18.50088882446289
    7. '$v' → logprob: -20.37588882446289
    8. ')v' → logprob: -21.75088882446289
    9. '_v' → logprob: -21.87588882446289
    10. 'e' → logprob: -22.12588882446289

Token 1168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002486476907506585
    2. 'self' → logprob: -6.127486705780029
    3. ' self' → logprob: -8.377486228942871
    4. '   ' → logprob: -10.627486228942871
    5. '
' → logprob: -11.252486228942871
    6. '	' → logprob: -11.377486228942871
    7. ',' → logprob: -12.252486228942871
    8. '           ' → logprob: -12.752486228942871
    9. 'cost' → logprob: -13.002486228942871
    10. '      ' → logprob: -13.127486228942871

Token 1169: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06380075216293335
    2. '       ' → logprob: -2.813800811767578
    3. ' self' → logprob: -6.313800811767578
    4. '	self' → logprob: -11.438800811767578
    5. '=self' → logprob: -12.688800811767578
    6. '
' → logprob: -12.813800811767578
    7. '   ' → logprob: -13.813800811767578
    8. '(self' → logprob: -13.938800811767578
    9. '[self' → logprob: -14.563800811767578
    10. 'cost' → logprob: -14.938800811767578

Token 1170: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.696889623621246e-06
    2. '       ' → logprob: -13.62500286102295
    3. ' self' → logprob: -14.00000286102295
    4. 'cost' → logprob: -14.75000286102295
    5. 'u' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '
' → logprob: -17.375001907348633
    8. '	self' → logprob: -18.000001907348633
    9. 'e' → logprob: -18.250001907348633
    10. 'v' → logprob: -20.000001907348633

Token 1171: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -4.127333340875339e-06
    2. 'cost' → logprob: -12.625003814697266
    3. '.' → logprob: -15.125003814697266
    4. ' cost' → logprob: -15.625003814697266
    5. '.u' → logprob: -16.250003814697266
    6. '.c' → logprob: -16.375003814697266
    7. '.code' → logprob: -16.875003814697266
    8. '.v' → logprob: -17.000003814697266
    9. ' .' → logprob: -18.000003814697266
    10. '.co' → logprob: -18.625003814697266

Token 1172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16154716908931732
    2. ' =' → logprob: -1.9115471839904785
    3. '       ' → logprob: -7.4115471839904785
    4. ',' → logprob: -7.4115471839904785
    5. '<|end|>' → logprob: -9.91154670715332
    6. '	' → logprob: -10.28654670715332
    7. '   ' → logprob: -11.41154670715332
    8. ')' → logprob: -12.53654670715332
    9. ' ' → logprob: -12.91154670715332
    10. '        ' → logprob: -12.91154670715332

Token 1173: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0015023599844425917
    2. ' cost' → logprob: -6.501502513885498
    3. 'code' → logprob: -18.001502990722656
    4. '(cost' → logprob: -20.751502990722656
    5. '_cost' → logprob: -21.751502990722656
    6. '   ' → logprob: -22.251502990722656
    7. '
' → logprob: -22.751502990722656
    8. '.cost' → logprob: -23.501502990722656
    9. 'count' → logprob: -23.876502990722656
    10. 'co' → logprob: -23.876502990722656

Token 1174: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001141526736319065
    2. ',' → logprob: -7.251141548156738
    3. 'self' → logprob: -8.251141548156738
    4. '   ' → logprob: -9.501141548156738
    5. ' self' → logprob: -11.001141548156738
    6. '           ' → logprob: -11.001141548156738
    7. '<|end|>' → logprob: -11.126141548156738
    8. '```' → logprob: -11.251141548156738
    9. ' ' → logprob: -11.626141548156738
    10. 'company' → logprob: -12.501141548156738

Token 1175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6803319454193115
    2. 'self' → logprob: -1.1803319454193115
    3. ' self' → logprob: -1.6803319454193115
    4. '   ' → logprob: -10.93033218383789
    5. '           ' → logprob: -11.05533218383789
    6. '```' → logprob: -11.05533218383789
    7. ',' → logprob: -12.43033218383789
    8. '        ' → logprob: -13.30533218383789
    9. ',self' → logprob: -13.30533218383789
    10. '	self' → logprob: -13.55533218383789

Token 1176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.253713218029588e-05
    2. '       ' → logprob: -10.000062942504883
    3. ' self' → logprob: -11.000062942504883
    4. '   ' → logprob: -15.000062942504883
    5. '	self' → logprob: -18.375062942504883
    6. '```' → logprob: -18.875062942504883
    7. '           ' → logprob: -19.000062942504883
    8. 'company' → logprob: -20.500062942504883
    9. '(self' → logprob: -21.000062942504883
    10. '        ' → logprob: -21.375062942504883

Token 1177: '.company' (ID: 48225)
  Prédit: '.company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.company' → logprob: -0.0032116996590048075
    2. 'company' → logprob: -5.753211498260498
    3. '.comp' → logprob: -10.753211975097656
    4. '.cost' → logprob: -11.753211975097656
    5. ' company' → logprob: -13.378211975097656
    6. '.com' → logprob: -13.753211975097656
    7. '_company' → logprob: -14.253211975097656
    8. '.' → logprob: -14.503211975097656
    9. '.mod' → logprob: -14.753211975097656
    10. 'Company' → logprob: -16.128211975097656

Token 1178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41345861554145813
    2. ' =' → logprob: -1.9134585857391357
    3. '==' → logprob: -2.0384585857391357
    4. ' ==' → logprob: -3.1634585857391357
    5. ',' → logprob: -4.788458824157715
    6. '_' → logprob: -5.288458824157715
    7. '<|end|>' → logprob: -5.913458824157715
    8. ')' → logprob: -7.413458824157715
    9. '       ' → logprob: -8.163458824157715
    10. '   ' → logprob: -8.163458824157715

Token 1179: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.029750484973192215
    2. ' company' → logprob: -3.5297505855560303
    3. '(company' → logprob: -17.27975082397461
    4. '.company' → logprob: -19.65475082397461
    5. ' ' → logprob: -20.02975082397461
    6. '   ' → logprob: -21.02975082397461
    7. 'Company' → logprob: -21.02975082397461
    8. '_company' → logprob: -21.40475082397461
    9. '/company' → logprob: -22.02975082397461
    10. '会社' → logprob: -22.15475082397461

Token 1180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061484433710575104
    2. 'self' → logprob: -3.8114843368530273
    3. ' self' → logprob: -4.311484336853027
    4. ' mod' → logprob: -4.436484336853027
    5. 'mod' → logprob: -4.561484336853027
    6. ',' → logprob: -7.061484336853027
    7. '	mod' → logprob: -7.186484336853027
    8. '```' → logprob: -10.186484336853027
    9. '   ' → logprob: -10.311484336853027
    10. '	' → logprob: -10.311484336853027

Token 1181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001761272142175585
    2. 'self' → logprob: -9.750176429748535
    3. 'mod' → logprob: -10.250176429748535
    4. '   ' → logprob: -10.750176429748535
    5. ',' → logprob: -11.375176429748535
    6. '               ' → logprob: -11.375176429748535
    7. ' mod' → logprob: -11.625176429748535
    8. ' self' → logprob: -11.625176429748535
    9. '           ' → logprob: -11.875176429748535
    10. '```' → logprob: -12.625176429748535

Token 1182: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.794061770662665e-05
    2. ' self' → logprob: -9.50009822845459
    3. '       ' → logprob: -10.75009822845459
    4. 'mod' → logprob: -13.50009822845459
    5. '   ' → logprob: -16.250097274780273
    6. '	self' → logprob: -18.000097274780273
    7. '           ' → logprob: -18.500097274780273
    8. '     ' → logprob: -21.125097274780273
    9. '(self' → logprob: -21.250097274780273
    10. '
' → logprob: -21.500097274780273

Token 1183: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -6.933173426659778e-05
    2. 'mod' → logprob: -9.750069618225098
    3. '.' → logprob: -11.750069618225098
    4. '_mod' → logprob: -13.000069618225098
    5. '._' → logprob: -14.250069618225098
    6. ' .' → logprob: -16.12506866455078
    7. '	mod' → logprob: -16.62506866455078
    8. '.Mod' → logprob: -17.50006866455078
    9. '.modified' → logprob: -17.50006866455078
    10. '.mods' → logprob: -17.75006866455078

Token 1184: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: 0.0
    2. '_code' → logprob: -18.375
    3. '_' → logprob: -19.875
    4. '_COST' → logprob: -20.5
    5. '_co' → logprob: -21.125
    6. 'cost' → logprob: -21.125
    7. '_c' → logprob: -21.25
    8. '_mod' → logprob: -21.25
    9. '```' → logprob: -22.625
    10. '_cos' → logprob: -23.125

Token 1185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049231514334679
    2. ' =' → logprob: -4.511049270629883
    3. ')' → logprob: -14.386049270629883
    4. '=
' → logprob: -14.511049270629883
    5. '<|end|>' → logprob: -16.261049270629883
    6. '_' → logprob: -16.886049270629883
    7. '_=' → logprob: -17.011049270629883
    8. '   ' → logprob: -17.011049270629883
    9. ' =
' → logprob: -17.136049270629883
    10. '=None' → logprob: -18.011049270629883

Token 1186: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004306692280806601
    2. ' mod' → logprob: -7.750430583953857
    3. '	mod' → logprob: -18.000431060791016
    4. '(mod' → logprob: -20.250431060791016
    5. 'cost' → logprob: -21.375431060791016
    6. '_mod' → logprob: -21.375431060791016
    7. '   ' → logprob: -23.000431060791016
    8. '.mod' → logprob: -23.125431060791016
    9. 'moder' → logprob: -23.375431060791016
    10. 'mods' → logprob: -23.375431060791016

Token 1187: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.981667537620524e-06
    2. 'ost' → logprob: -13.750001907348633
    3. 'cost' → logprob: -14.125001907348633
    4. '_COST' → logprob: -17.125001907348633
    5. '_' → logprob: -17.625001907348633
    6. ' cost' → logprob: -18.250001907348633
    7. '_code' → logprob: -18.375001907348633
    8. '-cost' → logprob: -19.000001907348633
    9. 'Cost' → logprob: -19.750001907348633
    10. '_cast' → logprob: -20.000001907348633

Token 1188: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002481842413544655
    2. '
' → logprob: -6.002481937408447
    3. '

' → logprob: -13.627481460571289
    4. '        
' → logprob: -13.627481460571289
    5. '```' → logprob: -13.752481460571289
    6. '    
' → logprob: -13.877481460571289
    7. ' class' → logprob: -13.877481460571289
    8. '  
' → logprob: -15.127481460571289
    9. ' 
' → logprob: -15.752481460571289
    10. '<class' → logprob: -16.12748146057129

Token 1189: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. ' class' → logprob: -20.75
    3. '<class' → logprob: -21.125
    4. '
' → logprob: -21.5
    5. '"class' → logprob: -22.125
    6. '```' → logprob: -23.125
    7. '	class' → logprob: -24.0
    8. '-class' → logprob: -24.25
    9. 'clas' → logprob: -25.375
    10. ''class' → logprob: -25.5

Token 1190: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.008614926598966122
    2. ' Union' → logprob: -4.758615016937256
    3. 'union' → logprob: -15.508614540100098
    4. '_union' → logprob: -16.008615493774414
    5. ''Union' → logprob: -19.633615493774414
    6. ' union' → logprob: -19.633615493774414
    7. '__' → logprob: -23.008615493774414
    8. 'Unity' → logprob: -23.258615493774414
    9. 'User' → logprob: -23.508615493774414
    10. 'Unit' → logprob: -23.508615493774414

Token 1191: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: 0.0
    2. '-F' → logprob: -18.0
    3. '_Find' → logprob: -19.375
    4. 'find' → logprob: -19.625
    5. '[int' → logprob: -19.875
    6. 'Set' → logprob: -20.25
    7. 'Union' → logprob: -20.5
    8. '_find' → logprob: -20.625
    9. '-find' → logprob: -21.25
    10. ' Find' → logprob: -21.25

Token 1192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16024860739707947
    2. ':
' → logprob: -1.9102486371994019
    3. '(object' → logprob: -10.785248756408691
    4. ':

' → logprob: -13.410248756408691
    5. ':def' → logprob: -14.035248756408691
    6. '():
' → logprob: -14.660248756408691
    7. ':
' → logprob: -14.785248756408691
    8. '():' → logprob: -15.410248756408691
    9. '```' → logprob: -16.035247802734375
    10. '(' → logprob: -17.035247802734375

Token 1193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4394473433494568
    2. ':' → logprob: -1.6894474029541016
    3. 'def' → logprob: -2.3144474029541016
    4. ':
' → logprob: -2.6894474029541016
    5. ' def' → logprob: -6.814447402954102
    6. ':def' → logprob: -7.314447402954102
    7. '```' → logprob: -7.689447402954102
    8. '  ' → logprob: -7.939447402954102
    9. '    
' → logprob: -8.064447402954102
    10. '(object' → logprob: -8.564447402954102

Token 1194: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6834790110588074
    2. ' def' → logprob: -1.3084790706634521
    3. 'class' → logprob: -1.8084790706634521
    4. '   ' → logprob: -2.808479070663452
    5. ' class' → logprob: -7.933478832244873
    6. '```' → logprob: -8.933479309082031
    7. '	def' → logprob: -9.183479309082031
    8. '    
' → logprob: -10.308479309082031
    9. '    ' → logprob: -11.058479309082031
    10. '
' → logprob: -11.058479309082031

Token 1195: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.00011689399980241433
    2. 'init' → logprob: -9.750117301940918
    3. '_slots' → logprob: -10.375117301940918
    4. ' slots' → logprob: -10.625117301940918
    5. 'code' → logprob: -13.375117301940918
    6. 'slot' → logprob: -13.750117301940918
    7. 'sl' → logprob: -15.750117301940918
    8. '_init' → logprob: -15.875117301940918
    9. '```' → logprob: -17.2501163482666
    10. 'class' → logprob: -17.6251163482666

Token 1196: '__' (ID: 771)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2037268728017807
    2. '=' → logprob: -1.703726887702942
    3. '__' → logprob: -6.328726768493652
    4. '=('' → logprob: -7.578726768493652
    5. '   ' → logprob: -11.578726768493652
    6. '=['' → logprob: -12.453726768493652
    7. '=("' → logprob: -14.203726768493652
    8. '__('' → logprob: -14.453726768493652
    9. '___' → logprob: -15.703726768493652
    10. '____' → logprob: -16.07872772216797

Token 1197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16126710176467896
    2. '=' → logprob: -1.9112670421600342
    3. '=('' → logprob: -6.911267280578613
    4. '   ' → logprob: -10.911267280578613
    5. '__' → logprob: -11.161267280578613
    6. '('' → logprob: -11.911267280578613
    7. '=['' → logprob: -12.536267280578613
    8. ' ('' → logprob: -13.911267280578613
    9. '=("' → logprob: -14.286267280578613
    10. ' ' → logprob: -14.536267280578613

Token 1198: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00642711017280817
    2. '('_' → logprob: -5.38142728805542
    3. ' ('' → logprob: -7.38142728805542
    4. '   ' → logprob: -7.63142728805542
    5. '('__' → logprob: -7.63142728805542
    6. '['' → logprob: -8.506426811218262
    7. 'parent' → logprob: -12.756426811218262
    8. '=('' → logprob: -12.881426811218262
    9. ' ' → logprob: -14.131426811218262
    10. '("' → logprob: -14.381426811218262

Token 1199: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0002966127940453589
    2. '_parent' → logprob: -8.250296592712402
    3. 'parents' → logprob: -10.750296592712402
    4. ' parent' → logprob: -11.250296592712402
    5. 'par' → logprob: -14.250296592712402
    6. '_par' → logprob: -16.62529754638672
    7. '.parent' → logprob: -16.87529754638672
    8. '	parent' → logprob: -16.87529754638672
    9. '(parent' → logprob: -17.87529754638672
    10. ',parent' → logprob: -18.00029754638672

Token 1200: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.08952102810144424
    2. ',' → logprob: -2.4645209312438965
    3. '','' → logprob: -7.8395209312438965
    4. '   ' → logprob: -9.589521408081055
    5. ','' → logprob: -10.214521408081055
    6. '')' → logprob: -11.214521408081055
    7. '',
' → logprob: -11.589521408081055
    8. ''' → logprob: -11.714521408081055
    9. ',parent' → logprob: -12.089521408081055
    10. '[],' → logprob: -12.214521408081055

Token 1201: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.5167781710624695
    2. '   ' → logprob: -1.6417782306671143
    3. ''r' → logprob: -1.7667782306671143
    4. 'size' → logprob: -4.391777992248535
    5. ' size' → logprob: -4.516777992248535
    6. 'rank' → logprob: -5.016777992248535
    7. ' '' → logprob: -5.016777992248535
    8. ' rank' → logprob: -6.641777992248535
    9. ''' → logprob: -7.516777992248535
    10. ''n' → logprob: -8.266777992248535

Token 1202: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.008627697825431824
    2. 'size' → logprob: -4.758627891540527
    3. ' rank' → logprob: -11.258627891540527
    4. ' size' → logprob: -16.25862693786621
    5. 'count' → logprob: -16.25862693786621
    6. 'parent' → logprob: -16.50862693786621
    7. '_rank' → logprob: -17.88362693786621
    8. '.rank' → logprob: -17.88362693786621
    9. 'Rank' → logprob: -19.50862693786621
    10. 'root' → logprob: -21.00862693786621

Token 1203: '')

' (ID: 9735)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.09398561716079712
    2. '')

' → logprob: -2.9689855575561523
    3. '')' → logprob: -3.8439855575561523
    4. '')
' → logprob: -4.093985557556152
    5. ''' → logprob: -9.218985557556152
    6. '   ' → logprob: -10.343985557556152
    7. '=' → logprob: -10.468985557556152
    8. '','' → logprob: -10.468985557556152
    9. ',' → logprob: -11.093985557556152
    10. '='' → logprob: -11.343985557556152

Token 1204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018747497349977493
    2. '
' → logprob: -4.018747329711914
    3. 'def' → logprob: -7.893747329711914
    4. '    
' → logprob: -8.643747329711914
    5. ' def' → logprob: -10.393747329711914
    6. '[' → logprob: -12.018747329711914
    7. '```' → logprob: -13.518747329711914
    8. '        
' → logprob: -13.643747329711914
    9. ')' → logprob: -13.643747329711914
    10. ':' → logprob: -14.143747329711914

Token 1205: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02335856482386589
    2. '   ' → logprob: -3.7733585834503174
    3. ' def' → logprob: -9.148358345031738
    4. 'class' → logprob: -12.773358345031738
    5. '
' → logprob: -13.023358345031738
    6. '	def' → logprob: -14.023358345031738
    7. '    
' → logprob: -14.398358345031738
    8. '  ' → logprob: -16.523359298706055
    9. '```' → logprob: -16.523359298706055
    10. '    ' → logprob: -17.398359298706055

Token 1206: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007239909609779716
    2. ' __' → logprob: -7.250723838806152
    3. 'def' → logprob: -11.500723838806152
    4. 'init' → logprob: -12.875723838806152
    5. '_init' → logprob: -14.125723838806152
    6. '.__' → logprob: -15.500723838806152
    7. '___' → logprob: -15.625723838806152
    8. '```' → logprob: -15.750723838806152
    9. ' def' → logprob: -17.37572479248047
    10. '   ' → logprob: -18.25072479248047

Token 1207: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. '_init' → logprob: -13.750000953674316
    3. '__' → logprob: -16.250001907348633
    4. ' init' → logprob: -16.375001907348633
    5. '```' → logprob: -17.500001907348633
    6. '	init' → logprob: -19.000001907348633
    7. 'slots' → logprob: -19.000001907348633
    8. 'int' → logprob: -19.750001907348633
    9. '
' → logprob: -20.000001907348633
    10. ' __' → logprob: -20.000001907348633

Token 1208: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0013592824107035995
    2. '(self' → logprob: -6.626359462738037
    3. '__' → logprob: -10.626358985900879
    4. 'self' → logprob: -12.251358985900879
    5. '__(
' → logprob: -13.001358985900879
    6. '(' → logprob: -13.626358985900879
    7. '_(' → logprob: -14.876358985900879
    8. ' (' → logprob: -15.376358985900879
    9. '__((' → logprob: -16.126359939575195
    10. '__('' → logprob: -16.126359939575195

Token 1209: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '(self' → logprob: -17.625001907348633
    5. '0' → logprob: -17.750001907348633
    6. '
' → logprob: -19.125001907348633
    7. '1' → logprob: -19.500001907348633
    8. ',' → logprob: -19.500001907348633
    9. ',self' → logprob: -19.500001907348633
    10. '       ' → logprob: -19.875001907348633

Token 1210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7351590394973755
    2. 'self' → logprob: -0.9851590394973755
    3. '__(' → logprob: -2.360158920288086
    4. '(self' → logprob: -2.985158920288086
    5. '   ' → logprob: -7.110158920288086
    6. ' (' → logprob: -7.485158920288086
    7. ' self' → logprob: -8.235158920288086
    8. '(' → logprob: -8.360158920288086
    9. ')(' → logprob: -9.235158920288086
    10. ',self' → logprob: -9.485158920288086

Token 1211: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1708315759897232
    2. 'self' → logprob: -1.920831561088562
    3. ' n' → logprob: -4.670831680297852
    4. ' self' → logprob: -6.920831680297852
    5. 'size' → logprob: -8.545831680297852
    6. ' size' → logprob: -12.420831680297852
    7. '   ' → logprob: -13.670831680297852
    8. 'parent' → logprob: -15.295831680297852
    9. ' ' → logprob: -17.54583168029785
    10. '	n' → logprob: -17.79583168029785

Token 1212: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0021634676959365606
    2. '):' → logprob: -6.377163410186768
    3. ',' → logprob: -8.127163887023926
    4. '       ' → logprob: -9.502163887023926
    5. '):
' → logprob: -10.252163887023926
    6. 'self' → logprob: -10.627163887023926
    7. '   ' → logprob: -10.627163887023926
    8. '(self' → logprob: -13.127163887023926
    9. ')' → logprob: -13.377163887023926
    10. ':' → logprob: -13.627163887023926

Token 1213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003035266126971692
    2. 'self' → logprob: -8.500303268432617
    3. '   ' → logprob: -10.250303268432617
    4. '	self' → logprob: -10.375303268432617
    5. '	' → logprob: -11.375303268432617
    6. ' self' → logprob: -11.375303268432617
    7. '	   ' → logprob: -11.750303268432617
    8. '	       ' → logprob: -13.250303268432617
    9. '      ' → logprob: -15.250303268432617
    10. '    ' → logprob: -15.750303268432617

Token 1214: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008106979075819254
    2. ' self' → logprob: -8.000810623168945
    3. '[self' → logprob: -8.000810623168945
    4. '[' → logprob: -9.000810623168945
    5. '       ' → logprob: -11.250810623168945
    6. '   ' → logprob: -12.625810623168945
    7. ' [' → logprob: -15.125810623168945
    8. '['' → logprob: -15.750810623168945
    9. '	self' → logprob: -16.625810623168945
    10. '0' → logprob: -18.250810623168945

Token 1215: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0030809827148914337
    2. 'parent' → logprob: -6.12808084487915
    3. '=' → logprob: -7.62808084487915
    4. '.' → logprob: -8.253081321716309
    5. '_parent' → logprob: -9.503081321716309
    6. '	parent' → logprob: -10.503081321716309
    7. ' =' → logprob: -10.503081321716309
    8. ' parent' → logprob: -12.253081321716309
    9. ',parent' → logprob: -12.378081321716309
    10. ' .' → logprob: -13.128081321716309

Token 1216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019287518225610256
    2. ' =' → logprob: -6.251928806304932
    3. '=list' → logprob: -16.376928329467773
    4. '=[' → logprob: -17.126928329467773
    5. '=
' → logprob: -17.376928329467773
    6. '   ' → logprob: -18.626928329467773
    7. '=self' → logprob: -19.001928329467773
    8. '[' → logprob: -19.251928329467773
    9. '＝' → logprob: -19.626928329467773
    10. '=n' → logprob: -19.751928329467773

Token 1217: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011267092078924179
    2. '[list' → logprob: -4.511267185211182
    3. ' list' → logprob: -8.511266708374023
    4. '[' → logprob: -11.011266708374023
    5. '[n' → logprob: -14.011266708374023
    6. '=list' → logprob: -14.761266708374023
    7. '[List' → logprob: -16.261266708374023
    8. '[i' → logprob: -16.761266708374023
    9. '[-' → logprob: -17.011266708374023
    10. '	list' → logprob: -17.636266708374023

Token 1218: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3868793845176697
    2. 'range' → logprob: -1.1368794441223145
    3. ' range' → logprob: -11.761878967285156
    4. '	range' → logprob: -15.011878967285156
    5. '   ' → logprob: -16.261878967285156
    6. '=' → logprob: -16.386878967285156
    7. '```' → logprob: -16.761878967285156
    8. 'Range' → logprob: -17.761878967285156
    9. '`' → logprob: -18.261878967285156
    10. '.range' → logprob: -18.386878967285156

Token 1219: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0789400190114975
    2. '(n' → logprob: -2.578939914703369
    3. '	n' → logprob: -10.703940391540527
    4. ')n' → logprob: -10.703940391540527
    5. ' n' → logprob: -12.828940391540527
    6. ',n' → logprob: -13.828940391540527
    7. '_n' → logprob: -14.703940391540527
    8. '<n' → logprob: -15.453940391540527
    9. '       ' → logprob: -15.578940391540527
    10. '=n' → logprob: -15.828940391540527

Token 1220: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.6224789023399353
    2. '))' → logprob: -0.8724789023399353
    3. ')' → logprob: -3.37247896194458
    4. ')
' → logprob: -4.49747896194458
    5. '       ' → logprob: -10.997478485107422
    6. '))
' → logprob: -12.622478485107422
    7. ' ))
' → logprob: -12.747478485107422
    8. ')))' → logprob: -12.872478485107422
    9. '))

' → logprob: -13.372478485107422
    10. '   ' → logprob: -13.872478485107422

Token 1221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16409894824028015
    2. 'self' → logprob: -1.9140989780426025
    3. '   ' → logprob: -5.664098739624023
    4. ' self' → logprob: -8.164098739624023
    5. '	self' → logprob: -10.039098739624023
    6. '           ' → logprob: -10.664098739624023
    7. 'def' → logprob: -11.164098739624023
    8. '	' → logprob: -11.539098739624023
    9. '```' → logprob: -11.914098739624023
    10. '      ' → logprob: -12.414098739624023

Token 1222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.179569077678025e-05
    2. '       ' → logprob: -10.250041961669922
    3. ' self' → logprob: -12.000041961669922
    4. '   ' → logprob: -15.625041961669922
    5. '	self' → logprob: -18.875041961669922
    6. '[self' → logprob: -19.625041961669922
    7. 'def' → logprob: -19.750041961669922
    8. '           ' → logprob: -20.250041961669922
    9. 's' → logprob: -20.500041961669922
    10. '
' → logprob: -20.750041961669922

Token 1223: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.9361264946837764e-07
    2. 'rank' → logprob: -16.375
    3. '.' → logprob: -18.375
    4. ' .' → logprob: -18.75
    5. ' rank' → logprob: -20.5
    6. '_rank' → logprob: -21.0
    7. '   ' → logprob: -21.25
    8. '(rank' → logprob: -21.375
    9. '.parent' → logprob: -21.75
    10. ' ' → logprob: -22.0

Token 1224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25198894739151
    2. ' =' → logprob: -1.5019888877868652
    3. '=[' → logprob: -9.876989364624023
    4. '   ' → logprob: -12.501989364624023
    5. '[' → logprob: -13.126989364624023
    6. ' =[' → logprob: -13.376989364624023
    7. '=[]' → logprob: -14.876989364624023
    8. ' ' → logprob: -16.001989364624023
    9. '=
' → logprob: -16.001989364624023
    10. 's' → logprob: -16.001989364624023

Token 1225: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8550976164988242e-05
    2. ' [' → logprob: -11.125018119812012
    3. '[n' → logprob: -12.500018119812012
    4. 'n' → logprob: -18.750019073486328
    5. '0' → logprob: -19.125019073486328
    6. '([' → logprob: -20.000019073486328
    7. '[len' → logprob: -20.875019073486328
    8. '[N' → logprob: -21.375019073486328
    9. '[int' → logprob: -22.000019073486328
    10. '   ' → logprob: -22.125019073486328

Token 1226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '   ' → logprob: -25.25
    4. '
' → logprob: -25.625
    5. '۰' → logprob: -25.625
    6. '1' → logprob: -26.125
    7. '00' → logprob: -27.375
    8. '```' → logprob: -27.5
    9. '000' → logprob: -27.625
    10. '０' → logprob: -27.75

Token 1227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06658809632062912
    2. ']*' → logprob: -2.9415881633758545
    3. ')' → logprob: -4.941587924957275
    4. ' for' → logprob: -6.316587924957275
    5. ']*(' → logprob: -7.191587924957275
    6. '   ' → logprob: -7.566587924957275
    7. '(n' → logprob: -8.066588401794434
    8. '       ' → logprob: -8.566588401794434
    9. 'for' → logprob: -8.691588401794434
    10. ',' → logprob: -8.691588401794434

Token 1228: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.0471440553665161
    2. '*n' → logprob: -1.5471440553665161
    3. '(n' → logprob: -2.1721439361572266
    4. '*' → logprob: -2.6721439361572266
    5. '[n' → logprob: -2.7971439361572266
    6. ' for' → logprob: -3.0471439361572266
    7. '   ' → logprob: -3.4221439361572266
    8. ']*' → logprob: -3.7971439361572266
    9. '       ' → logprob: -3.7971439361572266
    10. '<|end|>' → logprob: -3.9221439361572266

Token 1229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.5
    3. '(n' → logprob: -17.75
    4. '	n' → logprob: -20.625
    5. '   ' → logprob: -21.5
    6. '
' → logprob: -21.875
    7. '(' → logprob: -22.875
    8. '       ' → logprob: -24.125
    9. ')n' → logprob: -24.375
    10. '$n' → logprob: -24.625

Token 1230: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6571211218833923
    2. '   ' → logprob: -0.7821211218833923
    3. 'def' → logprob: -4.032121181488037
    4. '    
' → logprob: -5.407121181488037
    5. ' def' → logprob: -6.907121181488037
    6. '	def' → logprob: -8.032120704650879
    7. '<|end|>' → logprob: -8.282120704650879
    8. '

' → logprob: -8.782120704650879
    9. '```' → logprob: -9.407120704650879
    10. '        
' → logprob: -9.907120704650879

Token 1231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3308872878551483
    2. '
' → logprob: -1.8308873176574707
    3. 'def' → logprob: -2.2058873176574707
    4. '    
' → logprob: -5.080887317657471
    5. ' def' → logprob: -6.330887317657471
    6. '```' → logprob: -6.830887317657471
    7. '	def' → logprob: -6.830887317657471
    8. ' 
' → logprob: -7.830887317657471
    9. '  
' → logprob: -8.080886840820312
    10. '        
' → logprob: -9.205886840820312

Token 1232: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002650690032169223
    2. '   ' → logprob: -6.252650737762451
    3. ' def' → logprob: -7.252650737762451
    4. '
' → logprob: -11.627650260925293
    5. '	def' → logprob: -13.002650260925293
    6. '    
' → logprob: -13.377650260925293
    7. '       ' → logprob: -15.627650260925293
    8. '        
' → logprob: -15.627650260925293
    9. '```' → logprob: -15.752650260925293
    10. '  ' → logprob: -16.12765121459961

Token 1233: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -9.627176768844947e-05
    2. ' find' → logprob: -9.250096321105957
    3. '_find' → logprob: -15.875096321105957
    4. '	find' → logprob: -19.50009536743164
    5. 'union' → logprob: -20.87509536743164
    6. '.find' → logprob: -21.62509536743164
    7. '
' → logprob: -21.75009536743164
    8. 'Find' → logprob: -22.00009536743164
    9. 'fin' → logprob: -22.25009536743164
    10. 'f' → logprob: -22.37509536743164

Token 1234: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018175223842263222
    2. '(' → logprob: -4.01817512512207
    3. ' (' → logprob: -11.14317512512207
    4. '(x' → logprob: -12.01817512512207
    5. 'self' → logprob: -12.64317512512207
    6. '(a' → logprob: -14.64317512512207
    7. '(s' → logprob: -15.01817512512207
    8. '(
' → logprob: -15.01817512512207
    9. '(u' → logprob: -15.89317512512207
    10. 'def' → logprob: -16.01817512512207

Token 1235: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3514859080314636
    2. '(x' → logprob: -1.7264859676361084
    3. '(' → logprob: -2.2264859676361084
    4. 'self' → logprob: -4.976485729217529
    5. '(u' → logprob: -6.351485729217529
    6. '(a' → logprob: -7.476485729217529
    7. ' (' → logprob: -7.726485729217529
    8. '(i' → logprob: -7.851485729217529
    9. ')' → logprob: -8.726486206054688
    10. 'def' → logprob: -9.976486206054688

Token 1236: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.534558552724775e-05
    2. 'u' → logprob: -11.000025749206543
    3. ' x' → logprob: -11.750025749206543
    4. 'a' → logprob: -14.750025749206543
    5. 'i' → logprob: -15.250025749206543
    6. 'self' → logprob: -16.625024795532227
    7. 'p' → logprob: -18.125024795532227
    8. ' u' → logprob: -20.000024795532227
    9. 'k' → logprob: -22.000024795532227
    10. 'y' → logprob: -22.125024795532227

Token 1237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5316704511642456
    2. '(' → logprob: -1.4066704511642456
    3. '(self' → logprob: -2.781670570373535
    4. ':' → logprob: -2.781670570373535
    5. '():' → logprob: -3.656670570373535
    6. '(x' → logprob: -5.031670570373535
    7. '):
' → logprob: -6.156670570373535
    8. '   ' → logprob: -6.406670570373535
    9. 'self' → logprob: -6.406670570373535
    10. ')' → logprob: -6.656670570373535

Token 1238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006508402875624597
    2. '
' → logprob: -7.500650882720947
    3. '```' → logprob: -11.000650405883789
    4. 'if' → logprob: -11.125650405883789
    5. ' 
' → logprob: -11.500650405883789
    6. ' if' → logprob: -11.750650405883789
    7. '        
' → logprob: -11.750650405883789
    8. ':
' → logprob: -11.875650405883789
    9. ' while' → logprob: -12.000650405883789
    10. '   ' → logprob: -12.250650405883789

Token 1239: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03350633382797241
    2. 'while' (adapté à ' while') → logprob: -3.533506393432617
    3. ' if' → logprob: -6.158506393432617
    4. '       ' → logprob: -6.783506393432617
    5. ' while' → logprob: -7.783506393432617
    6. 'return' → logprob: -10.158506393432617
    7. '
' → logprob: -10.783506393432617
    8. '   ' → logprob: -11.908506393432617
    9. '```' → logprob: -12.408506393432617
    10. '           ' → logprob: -12.533506393432617

Token 1240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. 'x' → logprob: -18.00001335144043
    4. '(self' → logprob: -20.87501335144043
    5. '	self' → logprob: -23.62501335144043
    6. '   ' → logprob: -26.75001335144043
    7. '0' → logprob: -27.12501335144043
    8. 'Self' → logprob: -27.25001335144043
    9. '[self' → logprob: -27.62501335144043
    10. ' ' → logprob: -27.62501335144043

Token 1241: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.001358209759928286
    2. 'parent' → logprob: -6.6263580322265625
    3. '!=' → logprob: -11.126358032226562
    4. 'self' → logprob: -12.001358032226562
    5. '.self' → logprob: -12.626358032226562
    6. '.' → logprob: -12.751358032226562
    7. ' !=' → logprob: -12.876358032226562
    8. '[parent' → logprob: -14.001358032226562
    9. ' .' → logprob: -15.001358032226562
    10. ' parent' → logprob: -15.126358032226562

Token 1242: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.8889261304575484e-06
    2. 'x' → logprob: -12.500003814697266
    3. '[self' → logprob: -16.250003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '[' → logprob: -19.500003814697266
    6. '[
' → logprob: -19.750003814697266
    7. '	x' → logprob: -19.875003814697266
    8. '```' → logprob: -20.000003814697266
    9. ' x' → logprob: -20.875003814697266
    10. '(x' → logprob: -21.000003814697266

Token 1243: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0017672894755378366
    2. ' !=' → logprob: -6.501767158508301
    3. ']!=' → logprob: -8.3767671585083
    4. ')!=' → logprob: -11.3767671585083
    5. '()!=' → logprob: -11.6267671585083
    6. '!==' → logprob: -11.7517671585083
    7. 'x' → logprob: -12.8767671585083
    8. '```' → logprob: -13.2517671585083
    9. '[x' → logprob: -14.1267671585083
    10. ']' → logprob: -14.2517671585083

Token 1244: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00015788905147928745
    2. ' !=' → logprob: -8.875158309936523
    3. 'x' → logprob: -11.875158309936523
    4. ']!=' → logprob: -12.375158309936523
    5. '!==' → logprob: -12.750158309936523
    6. ')!=' → logprob: -13.875158309936523
    7. 'is' → logprob: -14.000158309936523
    8. '()!=' → logprob: -14.500158309936523
    9. '```' → logprob: -14.500158309936523
    10. '=' → logprob: -14.625158309936523

Token 1245: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001593195047462359
    2. 'self' → logprob: -8.75015926361084
    3. ' x' → logprob: -14.00015926361084
    4. ' self' → logprob: -18.000160217285156
    5. '	x' → logprob: -21.500160217285156
    6. '   ' → logprob: -22.125160217285156
    7. '
' → logprob: -22.625160217285156
    8. ')x' → logprob: -24.125160217285156
    9. '(x' → logprob: -24.500160217285156
    10. 'parent' → logprob: -24.625160217285156

Token 1246: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006760960444808006
    2. '           ' → logprob: -5.256761074066162
    3. ':' → logprob: -6.756761074066162
    4. 'x' → logprob: -8.506760597229004
    5. '=' → logprob: -10.131760597229004
    6. ':x' → logprob: -10.131760597229004
    7. 'self' → logprob: -10.381760597229004
    8. '):
' → logprob: -11.256760597229004
    9. 'and' → logprob: -11.381760597229004
    10. ':self' → logprob: -11.506760597229004

Token 1247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004966662731021643
    2. 'x' → logprob: -6.004966735839844
    3. ' x' → logprob: -6.629966735839844
    4. 'self' → logprob: -7.504966735839844
    5. '               ' → logprob: -8.504966735839844
    6. ' self' → logprob: -8.754966735839844
    7. ':
' → logprob: -8.879966735839844
    8. '       ' → logprob: -10.254966735839844
    9. '```' → logprob: -10.629966735839844
    10. '   ' → logprob: -11.504966735839844

Token 1248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011100404895842075
    2. 'x' → logprob: -4.5111002922058105
    3. ' self' → logprob: -10.386100769042969
    4. '           ' → logprob: -10.761100769042969
    5. '	self' → logprob: -15.261100769042969
    6. '       ' → logprob: -15.511100769042969
    7. '   ' → logprob: -16.26110076904297
    8. '
' → logprob: -16.88610076904297
    9. '=self' → logprob: -18.13610076904297
    10. ' x' → logprob: -18.13610076904297

Token 1249: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.000636308453977108
    2. 'parent' → logprob: -7.375636100769043
    3. 'self' → logprob: -11.875636100769043
    4. '=' → logprob: -14.125636100769043
    5. '.' → logprob: -14.750636100769043
    6. 'x' → logprob: -15.000636100769043
    7. '.
' → logprob: -15.500636100769043
    8. '[parent' → logprob: -15.625636100769043
    9. '.self' → logprob: -15.625636100769043
    10. '	parent' → logprob: -15.750636100769043

Token 1250: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.372294698550832e-06
    2. 'x' → logprob: -11.875009536743164
    3. '[self' → logprob: -13.000009536743164
    4. '[' → logprob: -17.375009536743164
    5. '	x' → logprob: -17.625009536743164
    6. ' x' → logprob: -18.250009536743164
    7. ',x' → logprob: -18.500009536743164
    8. '   ' → logprob: -19.125009536743164
    9. '[
' → logprob: -19.125009536743164
    10. '=x' → logprob: -19.750009536743164

Token 1251: ']' (ID: 60)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1994775377388578e-05
    2. 'x' → logprob: -11.500012397766113
    3. '[self' → logprob: -13.750012397766113
    4. '=' → logprob: -15.375012397766113
    5. '[' → logprob: -15.375012397766113
    6. ' =' → logprob: -16.125011444091797
    7. '=x' → logprob: -16.500011444091797
    8. '[
' → logprob: -17.125011444091797
    9. ']' → logprob: -17.625011444091797
    10. '	x' → logprob: -18.000011444091797

Token 1252: ' =' (ID: 314)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.6325268745422363
    2. '=' → logprob: -0.8825268745422363
    3. ' =' → logprob: -3.2575268745422363
    4. 'x' → logprob: -4.632526874542236
    5. '[self' → logprob: -5.257526874542236
    6. '=x' → logprob: -6.757526874542236
    7. '=self' → logprob: -8.257526397705078
    8. 'self' → logprob: -8.757526397705078
    9. ',x' → logprob: -12.257526397705078
    10. '           ' → logprob: -13.132526397705078

Token 1253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.165027217415627e-05
    2. ' self' → logprob: -10.750021934509277
    3. '           ' → logprob: -17.37502098083496
    4. '	self' → logprob: -17.37502098083496
    5. '(self' → logprob: -17.50002098083496
    6. '[self' → logprob: -18.25002098083496
    7. '       ' → logprob: -18.37502098083496
    8. '
' → logprob: -19.37502098083496
    9. '   ' → logprob: -19.62502098083496
    10. '=self' → logprob: -19.87502098083496

Token 1254: '.parent' (ID: 17454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006203425000421703
    2. 'parent' → logprob: -7.500620365142822
    3. '.parent' → logprob: -10.250619888305664
    4. '[self' → logprob: -10.500619888305664
    5. ' self' → logprob: -12.500619888305664
    6. '[parent' → logprob: -14.500619888305664
    7. '.self' → logprob: -16.125619888305664
    8. '	self' → logprob: -16.625619888305664
    9. '(self' → logprob: -17.250619888305664
    10. '
' → logprob: -18.125619888305664

Token 1255: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.002476016292348504
    2. 'self' → logprob: -6.002476215362549
    3. ' self' → logprob: -15.75247573852539
    4. '[' → logprob: -16.37747573852539
    5. '(self' → logprob: -16.37747573852539
    6. '	self' → logprob: -16.75247573852539
    7. '[
' → logprob: -17.87747573852539
    8. '=self' → logprob: -18.25247573852539
    9. ':self' → logprob: -19.12747573852539
    10. '   ' → logprob: -19.50247573852539

Token 1256: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.038874074816703796
    2. '[self' → logprob: -3.5388741493225098
    3. 'self' → logprob: -4.78887414932251
    4. 'parent' → logprob: -7.66387414932251
    5. '.self' → logprob: -9.038873672485352
    6. '[x' → logprob: -9.163873672485352
    7. '[parent' → logprob: -9.913873672485352
    8. '.x' → logprob: -11.413873672485352
    9. ' self' → logprob: -12.163873672485352
    10. '.' → logprob: -14.788873672485352

Token 1257: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005986657342873514
    2. 'x' → logprob: -7.500598430633545
    3. '[self' → logprob: -10.000598907470703
    4. 'self' → logprob: -15.375598907470703
    5. '[' → logprob: -18.000598907470703
    6. '[
' → logprob: -18.000598907470703
    7. ' x' → logprob: -18.000598907470703
    8. '{x' → logprob: -18.500598907470703
    9. '	x' → logprob: -18.875598907470703
    10. '(x' → logprob: -19.000598907470703

Token 1258: ']]
' (ID: 29446)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0001427538663847372
    2. 'x' → logprob: -9.000143051147461
    3. ']' → logprob: -10.875143051147461
    4. '(x' → logprob: -16.37514305114746
    5. '[self' → logprob: -16.50014305114746
    6. '[' → logprob: -17.12514305114746
    7. '{x' → logprob: -17.12514305114746
    8. ' x' → logprob: -17.12514305114746
    9. '	x' → logprob: -18.12514305114746
    10. '```' → logprob: -18.62514305114746

Token 1259: '           ' (ID: 352)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8506964445114136
    2. 'self' → logprob: -0.9756964445114136
    3. ' x' → logprob: -2.475696563720703
    4. '           ' → logprob: -2.725696563720703
    5. 'x' → logprob: -3.600696563720703
    6. '       ' → logprob: -4.975696563720703
    7. '[self' → logprob: -5.100696563720703
    8. '
' → logprob: -6.225696563720703
    9. '   ' → logprob: -7.100696563720703
    10. '               ' → logprob: -7.350696563720703

Token 1260: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.7432603272027336e-06
    2. ' x' → logprob: -13.500001907348633
    3. '           ' → logprob: -15.125001907348633
    4. '               ' → logprob: -21.875001907348633
    5. '   ' → logprob: -21.875001907348633
    6. '       ' → logprob: -22.500001907348633
    7. '	x' → logprob: -22.500001907348633
    8. '
' → logprob: -23.625001907348633
    9. '```' → logprob: -24.375001907348633
    10. '                   ' → logprob: -24.750001907348633

Token 1261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150178715586662
    2. ' =' → logprob: -4.018150329589844
    3. '=
' → logprob: -16.768150329589844
    4. ',' → logprob: -17.143150329589844
    5. '=x' → logprob: -17.143150329589844
    6. '=self' → logprob: -18.268150329589844
    7. ')' → logprob: -18.268150329589844
    8. '   ' → logprob: -18.768150329589844
    9. '=}' → logprob: -19.143150329589844
    10. '.=' → logprob: -19.268150329589844

Token 1262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.493430894101039e-05
    2. ' self' → logprob: -9.500075340270996
    3. '	self' → logprob: -18.37507438659668
    4. '(self' → logprob: -18.75007438659668
    5. '   ' → logprob: -19.00007438659668
    6. '           ' → logprob: -19.37507438659668
    7. '       ' → logprob: -19.75007438659668
    8. '[self' → logprob: -19.75007438659668
    9. '=self' → logprob: -21.37507438659668
    10. ' ' → logprob: -21.62507438659668

Token 1263: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.1472419600977446e-06
    2. 'parent' → logprob: -13.750000953674316
    3. '[parent' → logprob: -20.875001907348633
    4. '.' → logprob: -21.000001907348633
    5. '	parent' → logprob: -21.125001907348633
    6. ',parent' → logprob: -22.500001907348633
    7. '.self' → logprob: -22.750001907348633
    8. ' parent' → logprob: -22.875001907348633
    9. '_parent' → logprob: -23.000001907348633
    10. '.Parent' → logprob: -23.500001907348633

Token 1264: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.08884544670581818
    2. 'x' → logprob: -2.5888454914093018
    3. 'self' → logprob: -5.088845252990723
    4. '[self' → logprob: -5.588845252990723
    5. ' x' → logprob: -14.588845252990723
    6. '{x' → logprob: -14.588845252990723
    7. '(x' → logprob: -14.713845252990723
    8. ' self' → logprob: -15.213845252990723
    9. '[' → logprob: -16.46384620666504
    10. '[
' → logprob: -16.83884620666504

Token 1265: ']
' (ID: 1592)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3872624933719635
    2. ']' → logprob: -2.1372625827789307
    3. '[self' → logprob: -2.6372625827789307
    4. '.parent' → logprob: -3.1372625827789307
    5. 'parent' → logprob: -3.5122625827789307
    6. ')' → logprob: -3.8872625827789307
    7. '[x' → logprob: -4.012262344360352
    8. '[parent' → logprob: -4.262262344360352
    9. ' self' → logprob: -6.137262344360352
    10. 'x' → logprob: -6.512262344360352

Token 1266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08379428088665009
    2. 'return' → logprob: -2.583794355392456
    3. ' return' → logprob: -5.333794116973877
    4. '   ' → logprob: -10.458794593811035
    5. '           ' → logprob: -10.833794593811035
    6. '	return' → logprob: -11.958794593811035
    7. 'x' → logprob: -12.458794593811035
    8. '	' → logprob: -13.333794593811035
    9. ' x' → logprob: -13.958794593811035
    10. '```' → logprob: -14.208794593811035

Token 1267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06140764057636261
    2. '       ' → logprob: -3.3114075660705566
    3. ' return' → logprob: -3.8114075660705566
    4. 'x' → logprob: -7.186407566070557
    5. ' x' → logprob: -8.561408042907715
    6. '           ' → logprob: -11.311408042907715
    7. '   ' → logprob: -11.311408042907715
    8. '	return' → logprob: -12.811408042907715
    9. '        ' → logprob: -13.811408042907715
    10. '               ' → logprob: -14.811408042907715

Token 1268: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03070778399705887
    2. 'self' → logprob: -3.530707836151123
    3. ' x' → logprob: -7.030707836151123
    4. ' self' → logprob: -9.530707359313965
    5. '   ' → logprob: -20.65570831298828
    6. ' ' → logprob: -20.65570831298828
    7. '	x' → logprob: -20.78070831298828
    8. '(x' → logprob: -22.28070831298828
    9. '	self' → logprob: -22.53070831298828
    10. '(self' → logprob: -23.03070831298828

Token 1269: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12811410427093506
    2. '       ' → logprob: -3.0031142234802246
    3. '<|end|>' → logprob: -3.6281142234802246
    4. ' 
' → logprob: -4.003114223480225
    5. ' ' → logprob: -4.503114223480225
    6. '    
' → logprob: -5.128114223480225
    7. '  
' → logprob: -6.253114223480225
    8. 'def' → logprob: -6.378114223480225
    9. ' def' → logprob: -6.503114223480225
    10. '  ' → logprob: -7.128114223480225

Token 1270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16864223778247833
    2. 'def' → logprob: -2.043642282485962
    3. '    
' → logprob: -3.918642282485962
    4. ' def' → logprob: -6.043642044067383
    5. '```' → logprob: -6.168642044067383
    6. '        
' → logprob: -7.543642044067383
    7. '	def' → logprob: -8.418642044067383
    8. '
' → logprob: -8.668642044067383
    9. '  
' → logprob: -9.043642044067383
    10. ' 
' → logprob: -9.793642044067383

Token 1271: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014216037467122078
    2. '   ' → logprob: -4.26421594619751
    3. ' def' → logprob: -10.014216423034668
    4. '	def' → logprob: -12.139216423034668
    5. '```' → logprob: -13.889216423034668
    6. '       ' → logprob: -14.014216423034668
    7. '    
' → logprob: -14.889216423034668
    8. '
' → logprob: -16.13921546936035
    9. '        
' → logprob: -16.38921546936035
    10. '  ' → logprob: -16.63921546936035

Token 1272: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -1.318681188422488e-05
    2. ' union' → logprob: -11.25001335144043
    3. 'un' → logprob: -16.50001335144043
    4. '_union' → logprob: -18.50001335144043
    5. '.union' → logprob: -20.25001335144043
    6. '	union' → logprob: -20.62501335144043
    7. 'merge' → logprob: -23.25001335144043
    8. 'unit' → logprob: -23.62501335144043
    9. 'rank' → logprob: -23.75001335144043
    10. ' unite' → logprob: -24.00001335144043

Token 1273: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.250004768371582
    4. 'self' → logprob: -16.7500057220459
    5. '(Self' → logprob: -18.0000057220459
    6. '(
' → logprob: -18.1250057220459
    7. ' self' → logprob: -18.6250057220459
    8. '(x' → logprob: -19.3750057220459
    9. '<|end|>' → logprob: -19.3750057220459
    10. 'def' → logprob: -19.7500057220459

Token 1274: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016005600336939096
    2. '(' → logprob: -7.251600742340088
    3. 'self' → logprob: -7.626600742340088
    4. ' (' → logprob: -8.12660026550293
    5. ',' → logprob: -10.25160026550293
    6. '(x' → logprob: -10.37660026550293
    7. 'def' → logprob: -10.87660026550293
    8. ' self' → logprob: -11.25160026550293
    9. '(
' → logprob: -12.62660026550293
    10. '   ' → logprob: -13.75160026550293

Token 1275: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3231613337993622
    2. 'self' → logprob: -1.3231613636016846
    3. 'u' → logprob: -5.5731611251831055
    4. 'a' → logprob: -5.5731611251831055
    5. ' self' → logprob: -6.4481611251831055
    6. ' x' → logprob: -7.3231611251831055
    7. ' u' → logprob: -12.323161125183105
    8. ' a' → logprob: -12.823161125183105
    9. '   ' → logprob: -14.198161125183105
    10. '(self' → logprob: -14.698161125183105

Token 1276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',x' → logprob: -14.375017166137695
    4. ',y' → logprob: -16.875017166137695
    5. ',
' → logprob: -17.875017166137695
    6. '_,' → logprob: -18.125017166137695
    7. ',self' → logprob: -18.625017166137695
    8. '   ' → logprob: -19.125017166137695
    9. ',u' → logprob: -19.250017166137695
    10. ',b' → logprob: -19.750017166137695

Token 1277: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2352385965641588e-05
    2. ' y' → logprob: -11.625012397766113
    3. '   ' → logprob: -12.750012397766113
    4. 'x' → logprob: -14.875012397766113
    5. '    ' → logprob: -17.250011444091797
    6. '
' → logprob: -17.250011444091797
    7. '	y' → logprob: -17.875011444091797
    8. 'self' → logprob: -18.000011444091797
    9. '       ' → logprob: -18.375011444091797
    10. '    
' → logprob: -18.500011444091797

Token 1278: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07933112233877182
    2. '):' → logprob: -2.579331159591675
    3. '       ' → logprob: -8.079331398010254
    4. '   ' → logprob: -9.954331398010254
    5. '):
' → logprob: -10.454331398010254
    6. ')' → logprob: -11.079331398010254
    7. ',' → logprob: -11.329331398010254
    8. '):

' → logprob: -11.704331398010254
    9. '(self' → logprob: -11.829331398010254
    10. ':' → logprob: -11.954331398010254

Token 1279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01487724483013153
    2. '
' → logprob: -4.3898773193359375
    3. '```' → logprob: -7.8898773193359375
    4. '        
' → logprob: -8.139877319335938
    5. ' 
' → logprob: -8.264877319335938
    6. ' x' → logprob: -8.389877319335938
    7. ':
' → logprob: -8.389877319335938
    8. ':' → logprob: -9.139877319335938
    9. '  
' → logprob: -9.139877319335938
    10. '):
' → logprob: -9.264877319335938

Token 1280: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.05725965276360512
    2. ' x' → logprob: -3.0572595596313477
    3. '       ' → logprob: -5.557259559631348
    4. ' if' → logprob: -6.682259559631348
    5. 'root' → logprob: -7.182259559631348
    6. 'px' → logprob: -7.307259559631348
    7. ' root' → logprob: -7.307259559631348
    8. '   ' → logprob: -7.432259559631348
    9. 'if' → logprob: -8.057259559631348
    10. ' px' → logprob: -8.682259559631348

Token 1281: 'root' (ID: 5488)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.45908525586128235
    2. '_parent' → logprob: -1.95908522605896
    3. 'root' → logprob: -2.45908522605896
    4. ' =' → logprob: -2.58408522605896
    5. '=' → logprob: -2.83408522605896
    6. ',' → logprob: -5.584085464477539
    7. 'parent' → logprob: -6.334085464477539
    8. '_ro' → logprob: -8.209085464477539
    9. '_' → logprob: -8.334085464477539
    10. '=root' → logprob: -8.334085464477539

Token 1282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008625805377960205
    2. ' =' → logprob: -4.7586259841918945
    3. '=self' → logprob: -12.008625984191895
    4. '=
' → logprob: -13.258625984191895
    5. '=root' → logprob: -13.508625984191895
    6. '=x' → logprob: -14.008625984191895
    7. ',' → logprob: -14.383625984191895
    8. '=find' → logprob: -15.758625984191895
    9. 'self' → logprob: -16.133625030517578
    10. '   ' → logprob: -16.133625030517578

Token 1283: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011703446507453918
    2. ' self' → logprob: -6.7511701583862305
    3. '(self' → logprob: -16.626171112060547
    4. '[self' → logprob: -18.251171112060547
    5. '	self' → logprob: -19.251171112060547
    6. '       ' → logprob: -19.626171112060547
    7. 'x' → logprob: -20.251171112060547
    8. '
' → logprob: -20.251171112060547
    9. '=self' → logprob: -20.376171112060547
    10. '   ' → logprob: -20.751171112060547

Token 1284: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.004264300689101219
    2. 'find' → logprob: -5.5042643547058105
    3. '.union' → logprob: -9.004263877868652
    4. '.' → logprob: -10.129263877868652
    5. 'union' → logprob: -11.504263877868652
    6. ' .' → logprob: -12.129263877868652
    7. '.parent' → logprob: -12.254263877868652
    8. '=find' → logprob: -14.754263877868652
    9. ').' → logprob: -14.879263877868652
    10. '.
' → logprob: -15.004263877868652

Token 1285: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0067170290276408195
    2. 'x' → logprob: -5.006717205047607
    3. '(y' → logprob: -13.38171672821045
    4. ' x' → logprob: -16.506717681884766
    5. '(' → logprob: -18.506717681884766
    6. '	x' → logprob: -18.631717681884766
    7. '[x' → logprob: -18.631717681884766
    8. 'y' → logprob: -19.381717681884766
    9. '       ' → logprob: -19.381717681884766
    10. '(
' → logprob: -19.506717681884766

Token 1286: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.025054996833205223
    2. ')' → logprob: -3.775054931640625
    3. '       ' → logprob: -6.525054931640625
    4. ',' → logprob: -8.400054931640625
    5. '(x' → logprob: -9.900054931640625
    6. ')x' → logprob: -10.650054931640625
    7. ',x' → logprob: -11.650054931640625
    8. ',y' → logprob: -11.900054931640625
    9. 'x' → logprob: -11.900054931640625
    10. 'if' → logprob: -12.275054931640625

Token 1287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2308102697134018
    2. ' y' → logprob: -3.1058101654052734
    3. 'y' → logprob: -3.3558101654052734
    4. ' if' → logprob: -3.6058101654052734
    5. ',y' → logprob: -3.6058101654052734
    6. ',' → logprob: -3.7308101654052734
    7. 'if' → logprob: -3.7308101654052734
    8. '
' → logprob: -4.230810165405273
    9. ' x' → logprob: -6.480810165405273
    10. 'x' → logprob: -6.480810165405273

Token 1288: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. 'x' → logprob: -18.375123977661133
    4. '	y' → logprob: -20.000123977661133
    5. '       ' → logprob: -21.125123977661133
    6. '   ' → logprob: -21.125123977661133
    7. ',y' → logprob: -23.250123977661133
    8. '(y' → logprob: -23.375123977661133
    9. '
' → logprob: -23.750123977661133
    10. ')y' → logprob: -23.875123977661133

Token 1289: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -4.961759259458631e-06
    2. '_root' → logprob: -13.000004768371582
    3. ' root' → logprob: -13.750004768371582
    4. '[root' → logprob: -14.375004768371582
    5. '
' → logprob: -15.125004768371582
    6. ' =' → logprob: -15.625004768371582
    7. 'x' → logprob: -16.0000057220459
    8. '(root' → logprob: -16.5000057220459
    9. '[x' → logprob: -16.6250057220459
    10. '       ' → logprob: -16.8750057220459

Token 1290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5601341128349304
    2. '(x' → logprob: -1.3101341724395752
    3. ' =' → logprob: -1.9351341724395752
    4. ' x' → logprob: -5.560133934020996
    5. 'x' → logprob: -5.685133934020996
    6. ' if' → logprob: -6.060133934020996
    7. ')' → logprob: -6.935133934020996
    8. 'if' → logprob: -7.060133934020996
    9. '=x' → logprob: -7.060133934020996
    10. '<|end|>' → logprob: -7.310133934020996

Token 1291: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000712074339389801
    2. ' y' → logprob: -7.250711917877197
    3. 'self' → logprob: -13.250712394714355
    4. 'x' → logprob: -15.250712394714355
    5. ' self' → logprob: -17.00071144104004
    6. '(y' → logprob: -17.87571144104004
    7. '	y' → logprob: -18.37571144104004
    8. ')y' → logprob: -19.62571144104004
    9. '   ' → logprob: -20.12571144104004
    10. '       ' → logprob: -20.25071144104004

Token 1292: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.12693703174591064
    2. 'find' → logprob: -2.126936912536621
    3. 'y' → logprob: -12.126936912536621
    4. '.' → logprob: -14.251936912536621
    5. ' .' → logprob: -14.626936912536621
    6. ' find' → logprob: -14.626936912536621
    7. '
' → logprob: -15.126936912536621
    8. ').' → logprob: -15.251936912536621
    9. 'union' → logprob: -15.251936912536621
    10. '=find' → logprob: -15.376936912536621

Token 1293: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1270359456539154
    2. '(y' → logprob: -2.1270358562469482
    3. ' y' → logprob: -9.252036094665527
    4. '   ' → logprob: -11.877036094665527
    5. '       ' → logprob: -13.252036094665527
    6. '	y' → logprob: -13.377036094665527
    7. '[y' → logprob: -14.127036094665527
    8. 'x' → logprob: -14.752036094665527
    9. '(x' → logprob: -16.00203514099121
    10. '@y' → logprob: -16.62703514099121

Token 1294: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.28632891178131104
    2. ')' → logprob: -1.411328911781311
    3. '       ' → logprob: -5.9113287925720215
    4. '):
' → logprob: -6.1613287925720215
    5. 'if' → logprob: -9.66132926940918
    6. ':
' → logprob: -9.78632926940918
    7. '):' → logprob: -10.16132926940918
    8. ':' → logprob: -10.16132926940918
    9. '=' → logprob: -10.28632926940918
    10. ' if' → logprob: -10.66132926940918

Token 1295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07864728569984436
    2. 'if' → logprob: -3.3286473751068115
    3. ' if' → logprob: -3.4536473751068115
    4. ':
' → logprob: -5.953647136688232
    5. ':' → logprob: -6.078647136688232
    6. '=' → logprob: -7.328647136688232
    7. 'def' → logprob: -7.703647136688232
    8. ')
' → logprob: -8.20364761352539
    9. '):
' → logprob: -8.20364761352539
    10. ')' → logprob: -8.57864761352539

Token 1296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19680334627628326
    2. ' if' → logprob: -2.196803331375122
    3. '       ' → logprob: -2.696803331375122
    4. '
' → logprob: -10.321803092956543
    5. 'If' → logprob: -10.946803092956543
    6. '   ' → logprob: -11.821803092956543
    7. '	if' → logprob: -11.946803092956543
    8. '```' → logprob: -13.071803092956543
    9. '           ' → logprob: -13.696803092956543
    10. ';if' → logprob: -14.696803092956543

Token 1297: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005530327325686812
    2. ' x' → logprob: -7.500553131103516
    3. '	x' → logprob: -18.875553131103516
    4. '   ' → logprob: -21.500553131103516
    5. '(x' → logprob: -21.750553131103516
    6. '       ' → logprob: -22.625553131103516
    7. '```' → logprob: -24.000553131103516
    8. '{x' → logprob: -24.250553131103516
    9. '$x' → logprob: -24.250553131103516
    10. '
' → logprob: -24.375553131103516

Token 1298: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -2.6656825866666622e-05
    2. '==' → logprob: -11.12502670288086
    3. ' ==' → logprob: -11.87502670288086
    4. '_root' → logprob: -12.37502670288086
    5. ' root' → logprob: -14.37502670288086
    6. '[root' → logprob: -17.50002670288086
    7. 'return' → logprob: -17.87502670288086
    8. 'x' → logprob: -17.87502670288086
    9. '=root' → logprob: -18.00002670288086
    10. '.root' → logprob: -18.25002670288086

Token 1299: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00863111112266779
    2. ' ==' → logprob: -4.758631229400635
    3. '==
' → logprob: -11.508630752563477
    4. '=' → logprob: -12.008630752563477
    5. '===' → logprob: -15.383630752563477
    6. ']==' → logprob: -16.258630752563477
    7. '==-' → logprob: -17.258630752563477
    8. ')==' → logprob: -17.383630752563477
    9. '()==' → logprob: -18.758630752563477
    10. '!=' → logprob: -18.883630752563477

Token 1300: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.615255839889869e-05
    2. ' y' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.25009536743164
    4. '	y' → logprob: -19.37509536743164
    5. 'x' → logprob: -20.00009536743164
    6. ''y' → logprob: -22.12509536743164
    7. '```' → logprob: -22.12509536743164
    8. '       ' → logprob: -22.37509536743164
    9. '
' → logprob: -22.50009536743164
    10. '    ' → logprob: -23.00009536743164

Token 1301: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.981667537620524e-06
    2. ' root' → logprob: -13.875001907348633
    3. 'y' → logprob: -14.375001907348633
    4. '[root' → logprob: -16.375001907348633
    5. '_root' → logprob: -16.625001907348633
    6. ' y' → logprob: -16.750001907348633
    7. 'right' → logprob: -16.875001907348633
    8. '=root' → logprob: -17.250001907348633
    9. 'ro' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.250001907348633

Token 1302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7195732593536377
    2. ':
' → logprob: -0.7195732593536377
    3. ':return' → logprob: -3.9695732593536377
    4. '           ' → logprob: -4.969573020935059
    5. '       ' → logprob: -9.219573020935059
    6. 'return' → logprob: -9.719573020935059
    7. '   ' → logprob: -10.719573020935059
    8. '):
' → logprob: -10.719573020935059
    9. ')' → logprob: -11.594573020935059
    10. ' return' → logprob: -11.969573020935059

Token 1303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001205893131555058
    2. 'return' → logprob: -10.250120162963867
    3. '       ' → logprob: -10.625120162963867
    4. ':
' → logprob: -11.125120162963867
    5. ':' → logprob: -11.250120162963867
    6. '   ' → logprob: -11.500120162963867
    7. ' return' → logprob: -11.750120162963867
    8. 'False' → logprob: -12.125120162963867
    9. ' None' → logprob: -13.000120162963867
    10. ':return' → logprob: -13.125120162963867

Token 1304: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004890023730695248
    2. 'False' → logprob: -5.754889965057373
    3. 'return' (adapté à ' return') → logprob: -6.504889965057373
    4. ' return' → logprob: -8.754890441894531
    5. ' False' → logprob: -10.004890441894531
    6. '               ' → logprob: -12.629890441894531
    7. '
' → logprob: -12.754890441894531
    8. '   ' → logprob: -13.504890441894531
    9. '		' → logprob: -13.754890441894531
    10. 'false' → logprob: -14.004890441894531

Token 1305: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. '(False' → logprob: -19.000123977661133
    4. 'false' → logprob: -22.000123977661133
    5. '=False' → logprob: -22.375123977661133
    6. '   ' → logprob: -22.500123977661133
    7. '_false' → logprob: -23.375123977661133
    8. '0' → logprob: -23.625123977661133
    9. '```' → logprob: -23.625123977661133
    10. '.False' → logprob: -23.875123977661133

Token 1306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055166494101285934
    2. '
' → logprob: -2.930166482925415
    3. '        
' → logprob: -8.305166244506836
    4. '	' → logprob: -11.180166244506836
    5. '  
' → logprob: -12.055166244506836
    6. '    
' → logprob: -12.305166244506836
    7. '```' → logprob: -12.430166244506836
    8. '<|end|>' → logprob: -13.055166244506836
    9. ' 
' → logprob: -13.305166244506836
    10. '   ' → logprob: -13.430166244506836

Token 1307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006341627449728549
    2. '
' → logprob: -7.75063419342041
    3. '        
' → logprob: -9.00063419342041
    4. '```' → logprob: -9.87563419342041
    5. '<|end|>' → logprob: -10.62563419342041
    6. ' 
' → logprob: -14.00063419342041
    7. '        ' → logprob: -14.25063419342041
    8. '       
' → logprob: -14.50063419342041
    9. '      ' → logprob: -15.00063419342041
    10. '  
' → logprob: -15.12563419342041

Token 1308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2830337882041931
    2. '       ' → logprob: -1.658033847808838
    3. ' if' → logprob: -2.908033847808838
    4. '
' → logprob: -6.658033847808838
    5. '	if' → logprob: -9.65803337097168
    6. '        
' → logprob: -10.78303337097168
    7. '```' → logprob: -10.90803337097168
    8. '   ' → logprob: -11.65803337097168
    9. ';if' → logprob: -12.40803337097168
    10. 'If' → logprob: -12.90803337097168

Token 1309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.607391408877447e-05
    2. ' self' → logprob: -10.250036239624023
    3. '(self' → logprob: -14.625036239624023
    4. '[self' → logprob: -16.250036239624023
    5. '
' → logprob: -17.750036239624023
    6. '	self' → logprob: -18.000036239624023
    7. '       ' → logprob: -19.375036239624023
    8. '=self' → logprob: -19.500036239624023
    9. '```' → logprob: -20.250036239624023
    10. '   ' → logprob: -20.250036239624023

Token 1310: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.9361264946837764e-07
    2. 'rank' → logprob: -15.75
    3. '.parent' → logprob: -19.125
    4. '.' → logprob: -20.5
    5. '.r' → logprob: -21.5
    6. '_rank' → logprob: -22.25
    7. ' rank' → logprob: -22.375
    8. 'Rank' → logprob: -23.375
    9. ' .' → logprob: -23.5
    10. '.root' → logprob: -23.75

Token 1311: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0280383548888494e-06
    2. '[self' → logprob: -14.500000953674316
    3. 'x' → logprob: -15.375000953674316
    4. '[u' → logprob: -15.375000953674316
    5. '[
' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '
' → logprob: -18.500001907348633
    8. '[' → logprob: -18.625001907348633
    9. '(x' → logprob: -18.750001907348633
    10. '```' → logprob: -19.250001907348633

Token 1312: 'root' (ID: 5488)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.511406809295295e-06
    2. 'x' → logprob: -12.125006675720215
    3. '       ' → logprob: -14.625006675720215
    4. '][' → logprob: -15.625006675720215
    5. '   ' → logprob: -16.2500057220459
    6. '[u' → logprob: -16.3750057220459
    7. '```' → logprob: -16.8750057220459
    8. '
' → logprob: -17.0000057220459
    9. ',x' → logprob: -17.3750057220459
    10. ']' → logprob: -17.3750057220459

Token 1313: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6225030422210693
    2. ' <' → logprob: -0.8725030422210693
    3. '<x' → logprob: -3.4975030422210693
    4. '[x' → logprob: -4.247503280639648
    5. '[' → logprob: -7.497503280639648
    6. '>' → logprob: -8.622503280639648
    7. ']' → logprob: -9.747503280639648
    8. '[y' → logprob: -10.247503280639648
    9. ']<' → logprob: -10.872503280639648
    10. '<int' → logprob: -11.497503280639648

Token 1314: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08481745421886444
    2. ' <' → logprob: -2.834817409515381
    3. '<x' → logprob: -3.959817409515381
    4. '[x' → logprob: -5.709817409515381
    5. '[' → logprob: -8.959817886352539
    6. '>' → logprob: -11.084817886352539
    7. '<u' → logprob: -11.209817886352539
    8. '<class' → logprob: -11.334817886352539
    9. '<size' → logprob: -11.584817886352539
    10. '<int' → logprob: -11.959817886352539

Token 1315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00034869377850554883
    2. ' self' → logprob: -8.000349044799805
    3. 'y' → logprob: -11.375349044799805
    4. '[self' → logprob: -14.000349044799805
    5. '   ' → logprob: -14.500349044799805
    6. 'x' → logprob: -15.875349044799805
    7. '(self' → logprob: -16.500349044799805
    8. '	self' → logprob: -16.500349044799805
    9. '       ' → logprob: -16.625349044799805
    10. '
' → logprob: -17.125349044799805

Token 1316: '.rank' (ID: 96793)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002581604989245534
    2. 'x' → logprob: -6.002581596374512
    3. '[y' → logprob: -9.502581596374512
    4. 'self' → logprob: -10.502581596374512
    5. ' y' → logprob: -12.877581596374512
    6. '[x' → logprob: -14.877581596374512
    7. '   ' → logprob: -15.002581596374512
    8. '
' → logprob: -15.502581596374512
    9. 'ys' → logprob: -16.127582550048828
    10. '       ' → logprob: -16.877582550048828

Token 1317: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0015212877187877893
    2. '[y' → logprob: -6.501521110534668
    3. 'x' → logprob: -10.876521110534668
    4. '[' → logprob: -17.001522064208984
    5. '(x' → logprob: -17.251522064208984
    6. '   ' → logprob: -18.251522064208984
    7. '       ' → logprob: -18.376522064208984
    8. 'y' → logprob: -18.376522064208984
    9. '{x' → logprob: -18.376522064208984
    10. '[
' → logprob: -18.751522064208984

Token 1318: 'root' (ID: 5488)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2511277198791504
    2. 'x' → logprob: -2.2511277198791504
    3. '[y' → logprob: -2.5011277198791504
    4. 'root' → logprob: -3.6261277198791504
    5. '[x' → logprob: -4.87612771987915
    6. '[root' → logprob: -7.62612771987915
    7. ' y' → logprob: -10.001127243041992
    8. '
' → logprob: -12.376127243041992
    9. '[
' → logprob: -12.751127243041992
    10. 'self' → logprob: -12.751127243041992

Token 1319: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006049551069736481
    2. ':' → logprob: -5.131049633026123
    3. ' :
' → logprob: -9.881049156188965
    4. '):
' → logprob: -10.131049156188965
    5. '       ' → logprob: -10.631049156188965
    6. '           ' → logprob: -13.506049156188965
    7. ']:
' → logprob: -13.631049156188965
    8. ' :' → logprob: -14.131049156188965
    9. ',' → logprob: -14.506049156188965
    10. ':return' → logprob: -15.006049156188965

Token 1320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07379895448684692
    2. ':
' → logprob: -2.823798894882202
    3. ':' → logprob: -5.198799133300781
    4. 'self' → logprob: -5.948799133300781
    5. '       ' → logprob: -6.198799133300781
    6. '[self' → logprob: -7.448799133300781
    7. '{
' → logprob: -8.448799133300781
    8. '):
' → logprob: -8.698799133300781
    9. '[' → logprob: -8.948799133300781
    10. '   ' → logprob: -9.698799133300781

Token 1321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0065372660756111145
    2. ' self' → logprob: -5.131537437438965
    3. '           ' → logprob: -8.006537437438965
    4. '[self' → logprob: -8.631537437438965
    5. '[' → logprob: -10.006537437438965
    6. 'x' → logprob: -11.381537437438965
    7. '```' → logprob: -11.756537437438965
    8. '       ' → logprob: -12.006537437438965
    9. '
' → logprob: -12.131537437438965
    10. '	self' → logprob: -12.131537437438965

Token 1322: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.003177952254191041
    2. 'parent' → logprob: -5.753178119659424
    3. '[parent' → logprob: -16.628177642822266
    4. '	parent' → logprob: -16.753177642822266
    5. '_parent' → logprob: -16.878177642822266
    6. ' parent' → logprob: -17.003177642822266
    7. ',parent' → logprob: -17.878177642822266
    8. 'Parent' → logprob: -18.378177642822266
    9. '   ' → logprob: -19.753177642822266
    10. '.rank' → logprob: -19.753177642822266

Token 1323: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.054500666621607e-06
    2. 'x' → logprob: -12.75000286102295
    3. '[' → logprob: -16.875003814697266
    4. '(x' → logprob: -17.875003814697266
    5. '[y' → logprob: -18.250003814697266
    6. '```' → logprob: -18.625003814697266
    7. '[u' → logprob: -18.750003814697266
    8. '[self' → logprob: -19.125003814697266
    9. ' x' → logprob: -19.500003814697266
    10. '{x' → logprob: -19.750003814697266

Token 1324: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -2.7729658540920354e-05
    2. 'x' → logprob: -10.500027656555176
    3. '[root' → logprob: -16.375028610229492
    4. ' root' → logprob: -19.000028610229492
    5. '_root' → logprob: -19.250028610229492
    6. '[x' → logprob: -20.625028610229492
    7. 'Root' → logprob: -21.875028610229492
    8. '```' → logprob: -22.000028610229492
    9. 'ROOT' → logprob: -22.250028610229492
    10. '	root' → logprob: -22.250028610229492

Token 1325: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10030921548604965
    2. '=' → logprob: -2.350309133529663
    3. ']' → logprob: -9.475309371948242
    4. ']=' → logprob: -10.850309371948242
    5. '[' → logprob: -13.225309371948242
    6. '=x' → logprob: -13.350309371948242
    7. '=s' → logprob: -13.850309371948242
    8. ',' → logprob: -14.725309371948242
    9. ' =
' → logprob: -15.475309371948242
    10. ')' → logprob: -15.600309371948242

Token 1326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018165279179811478
    2. ' =' → logprob: -4.018165111541748
    3. '=x' → logprob: -11.143165588378906
    4. '=s' → logprob: -15.018165588378906
    5. '=u' → logprob: -15.893165588378906
    6. '=y' → logprob: -16.143165588378906
    7. '=
' → logprob: -16.268165588378906
    8. '[x' → logprob: -17.018165588378906
    9. '[' → logprob: -17.018165588378906
    10. '=n' → logprob: -17.143165588378906

Token 1327: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.512236498361744e-07
    2. ' y' → logprob: -14.500000953674316
    3. '	y' → logprob: -21.25
    4. '   ' → logprob: -21.375
    5. '           ' → logprob: -23.125
    6. '       ' → logprob: -23.375
    7. '
' → logprob: -23.75
    8. '@y' → logprob: -23.875
    9. '[y' → logprob: -24.125
    10. ''y' → logprob: -24.375

Token 1328: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.607391408877447e-05
    2. 'right' → logprob: -10.250036239624023
    3. 'ro' → logprob: -16.125036239624023
    4. 'rest' → logprob: -16.500036239624023
    5. 'rot' → logprob: -16.625036239624023
    6. 'return' → logprob: -16.625036239624023
    7. 'y' → logprob: -17.250036239624023
    8. 'ret' → logprob: -17.375036239624023
    9. 'out' → logprob: -17.875036239624023
    10. 'self' → logprob: -17.875036239624023

Token 1329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05912550166249275
    2. '<|end|>' → logprob: -3.3091254234313965
    3. 'else' → logprob: -4.0591254234313965
    4. ' else' → logprob: -6.0591254234313965
    5. '           ' → logprob: -7.0591254234313965
    6. '
' → logprob: -8.559125900268555
    7. 'elif' → logprob: -10.059125900268555
    8. '<|end|>' → logprob: -10.184125900268555
    9. '```' → logprob: -10.559125900268555
    10. 'n' → logprob: -11.309125900268555

Token 1330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01305634155869484
    2. 'else' → logprob: -4.38805627822876
    3. ' else' → logprob: -7.63805627822876
    4. '           ' → logprob: -10.013056755065918
    5. 'elif' → logprob: -12.013056755065918
    6. '
' → logprob: -12.138056755065918
    7. '<|end|>' → logprob: -12.388056755065918
    8. '```' → logprob: -12.888056755065918
    9. '   ' → logprob: -15.263056755065918
    10. '	else' → logprob: -15.263056755065918

Token 1331: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.21051253378391266
    2. '       ' → logprob: -1.7105125188827515
    3. 'elif' → logprob: -4.710512638092041
    4. ' else' → logprob: -9.835512161254883
    5. '```' → logprob: -13.835512161254883
    6. '           ' → logprob: -13.960512161254883
    7. '   ' → logprob: -13.960512161254883
    8. ' elif' → logprob: -14.085512161254883
    9. '
' → logprob: -14.585512161254883
    10. '	else' → logprob: -15.835512161254883

Token 1332: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.020552517846226692
    2. '           ' → logprob: -4.395552635192871
    3. ':' → logprob: -5.395552635192871
    4. ' if' → logprob: -5.895552635192871
    5. '{
' → logprob: -8.020552635192871
    6. '       ' → logprob: -8.395552635192871
    7. 'if' → logprob: -9.645552635192871
    8. '[' → logprob: -9.895552635192871
    9. '          ' → logprob: -11.770552635192871
    10. '{' → logprob: -12.145552635192871

Token 1333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12255961447954178
    2. 'self' → logprob: -2.3725595474243164
    3. '```' → logprob: -4.622559547424316
    4. ' self' → logprob: -5.747559547424316
    5. ':
' → logprob: -5.872559547424316
    6. '       ' → logprob: -5.997559547424316
    7. '{
' → logprob: -6.247559547424316
    8. ':' → logprob: -7.497559547424316
    9. '               ' → logprob: -7.872559547424316
    10. '{' → logprob: -8.747559547424316

Token 1334: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12961475551128387
    2. '           ' → logprob: -2.25461483001709
    3. '{
' → logprob: -5.00461483001709
    4. ' self' → logprob: -5.37961483001709
    5. '```' → logprob: -6.62961483001709
    6. '[' → logprob: -7.37961483001709
    7. '[self' → logprob: -7.37961483001709
    8. '               ' → logprob: -7.87961483001709
    9. '{' → logprob: -8.00461483001709
    10. '
' → logprob: -8.25461483001709

Token 1335: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.053719423711299896
    2. '.rank' → logprob: -3.0537195205688477
    3. 'parent' → logprob: -5.303719520568848
    4. 'rank' → logprob: -8.928719520568848
    5. '[parent' → logprob: -11.928719520568848
    6. '_rank' → logprob: -12.428719520568848
    7. 'Rank' → logprob: -14.303719520568848
    8. '	parent' → logprob: -14.678719520568848
    9. '_parent' → logprob: -14.928719520568848
    10. ' parent' → logprob: -15.553719520568848

Token 1336: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -16.25
    3. '[self' → logprob: -16.375
    4. '   ' → logprob: -16.625
    5. '[' → logprob: -17.0
    6. '       ' → logprob: -17.125
    7. '[u' → logprob: -17.625
    8. ' [' → logprob: -18.125
    9. '[
' → logprob: -18.25
    10. '
' → logprob: -19.375

Token 1337: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -5.9153885558771435e-06
    2. 'x' → logprob: -12.375005722045898
    3. '[root' → logprob: -13.875005722045898
    4. '_root' → logprob: -14.750005722045898
    5. ' root' → logprob: -15.625005722045898
    6. '[x' → logprob: -16.6250057220459
    7. 'Root' → logprob: -17.3750057220459
    8. '	root' → logprob: -18.7500057220459
    9. '[' → logprob: -18.8750057220459
    10. '
' → logprob: -19.1250057220459

Token 1338: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7097090482711792
    2. ']' → logprob: -0.9597090482711792
    3. ' =' → logprob: -2.0847091674804688
    4. ']=' → logprob: -7.084709167480469
    5. ')' → logprob: -11.584709167480469
    6. '[' → logprob: -12.084709167480469
    7. '   ' → logprob: -12.584709167480469
    8. ' ]' → logprob: -12.709709167480469
    9. '}' → logprob: -13.834709167480469
    10. '       ' → logprob: -13.834709167480469

Token 1339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889044284820557
    2. ' =' → logprob: -2.578890323638916
    3. '           ' → logprob: -15.203890800476074
    4. ']' → logprob: -16.328889846801758
    5. ']=' → logprob: -16.453889846801758
    6. '       ' → logprob: -16.828889846801758
    7. '=
' → logprob: -17.453889846801758
    8. '   ' → logprob: -17.703889846801758
    9. '=self' → logprob: -17.703889846801758
    10. '=x' → logprob: -17.828889846801758

Token 1340: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. '	x' → logprob: -20.750045776367188
    4. '       ' → logprob: -22.000045776367188
    5. '           ' → logprob: -22.250045776367188
    6. '   ' → logprob: -23.000045776367188
    7. ')x' → logprob: -23.375045776367188
    8. 'xref' → logprob: -24.000045776367188
    9. '{x' → logprob: -24.250045776367188
    10. '(x' → logprob: -24.875045776367188

Token 1341: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0007121934904716909
    2. 'x' → logprob: -7.2507123947143555
    3. '[x' → logprob: -13.625712394714355
    4. '[root' → logprob: -13.875712394714355
    5. ' root' → logprob: -17.50071144104004
    6. 'roots' → logprob: -17.75071144104004
    7. 'ROOT' → logprob: -17.87571144104004
    8. 'Root' → logprob: -18.00071144104004
    9. '       ' → logprob: -18.00071144104004
    10. ' x' → logprob: -18.12571144104004

Token 1342: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011999329581158236
    2. '       ' → logprob: -9.500120162963867
    3. '                   ' → logprob: -11.250120162963867
    4. '               ' → logprob: -11.500120162963867
    5. 'if' → logprob: -11.875120162963867
    6. '```' → logprob: -12.000120162963867
    7. ' if' → logprob: -12.500120162963867
    8. '                       ' → logprob: -13.500120162963867
    9. '   ' → logprob: -14.375120162963867
    10. '<|end|>' → logprob: -14.625120162963867

Token 1343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03275419771671295
    2. 'if' → logprob: -4.407754421234131
    3. '```' → logprob: -4.407754421234131
    4. '       ' → logprob: -4.907754421234131
    5. ' if' → logprob: -8.282753944396973
    6. '   ' → logprob: -9.032753944396973
    7. '``' → logprob: -9.782753944396973
    8. '               ' → logprob: -11.032753944396973
    9. ' ' → logprob: -11.907753944396973
    10. '                   ' → logprob: -12.407753944396973

Token 1344: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001039479160681367
    2. ' if' → logprob: -7.001039505004883
    3. '           ' → logprob: -9.001039505004883
    4. '       ' → logprob: -13.876039505004883
    5. '	if' → logprob: -14.001039505004883
    6. '```' → logprob: -14.001039505004883
    7. ';if' → logprob: -14.251039505004883
    8. 'If' → logprob: -14.501039505004883
    9. '            
' → logprob: -15.251039505004883
    10. '
' → logprob: -15.626039505004883

Token 1345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5048530030981055e-06
    2. ' self' → logprob: -13.500001907348633
    3. '
' → logprob: -17.250001907348633
    4. '(self' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '[self' → logprob: -21.500001907348633
    7. '	self' → logprob: -21.625001907348633
    8. 'x' → logprob: -23.000001907348633
    9. '           ' → logprob: -23.125001907348633
    10. '       ' → logprob: -23.125001907348633

Token 1346: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.5094070477061905e-05
    2. 'self' → logprob: -11.250015258789062
    3. '.self' → logprob: -13.750015258789062
    4. 'rank' → logprob: -14.250015258789062
    5. '[self' → logprob: -16.125015258789062
    6. '_rank' → logprob: -16.125015258789062
    7. '.' → logprob: -17.500015258789062
    8. '
' → logprob: -18.125015258789062
    9. 'Rank' → logprob: -18.500015258789062
    10. '.parent' → logprob: -18.750015258789062

Token 1347: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1875571544806007e-05
    2. '[self' → logprob: -11.375011444091797
    3. '[u' → logprob: -15.375011444091797
    4. '[' → logprob: -16.375011444091797
    5. 'x' → logprob: -17.250011444091797
    6. 'self' → logprob: -17.500011444091797
    7. '[
' → logprob: -19.000011444091797
    8. '
' → logprob: -19.375011444091797
    9. 's' → logprob: -20.125011444091797
    10. '   ' → logprob: -20.500011444091797

Token 1348: 'root' (ID: 5488)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.013267873786389828
    2. 'x' → logprob: -4.513267993927002
    3. 'root' → logprob: -6.138267993927002
    4. '[root' → logprob: -9.888267517089844
    5. 'self' → logprob: -13.388267517089844
    6. '```' → logprob: -13.763267517089844
    7. '[self' → logprob: -13.888267517089844
    8. '[u' → logprob: -13.888267517089844
    9. '[
' → logprob: -14.013267517089844
    10. '
' → logprob: -14.513267517089844

Token 1349: ']' (ID: 60)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0034016903955489397
    2. '==' → logprob: -5.753401756286621
    3. '[self' → logprob: -9.003401756286621
    4. ' ==' → logprob: -9.753401756286621
    5. '[u' → logprob: -10.503401756286621
    6. ']==' → logprob: -12.003401756286621
    7. '[
' → logprob: -13.128401756286621
    8. '[' → logprob: -13.253401756286621
    9. ']' → logprob: -13.378401756286621
    10. 'self' → logprob: -13.503401756286621

Token 1350: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32542625069618225
    2. '[x' → logprob: -1.3254262208938599
    3. ' ==' → logprob: -4.45042610168457
    4. '==
' → logprob: -9.07542610168457
    5. '[' → logprob: -9.32542610168457
    6. '[u' → logprob: -9.70042610168457
    7. ']==' → logprob: -9.70042610168457
    8. '[self' → logprob: -9.95042610168457
    9. '[
' → logprob: -10.32542610168457
    10. 'x' → logprob: -12.57542610168457

Token 1351: ' self' (ID: 1051)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1269577145576477
    2. 'self' → logprob: -2.126957654953003
    3. ' self' → logprob: -11.376957893371582
    4. '[self' → logprob: -11.376957893371582
    5. ' x' → logprob: -12.376957893371582
    6. '
' → logprob: -13.751957893371582
    7. '[x' → logprob: -13.876957893371582
    8. 'y' → logprob: -15.251957893371582
    9. '(self' → logprob: -15.876957893371582
    10. '   ' → logprob: -16.501956939697266

Token 1352: '.rank' (ID: 96793)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141959190368652
    2. '[x' → logprob: -1.7014195919036865
    3. ' x' → logprob: -12.201419830322266
    4. '	x' → logprob: -14.826419830322266
    5. 'rank' → logprob: -15.326419830322266
    6. '{x' → logprob: -15.951419830322266
    7. '(x' → logprob: -15.951419830322266
    8. '
' → logprob: -16.451419830322266
    9. '```' → logprob: -16.826419830322266
    10. '   ' → logprob: -17.076419830322266

Token 1353: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.318681188422488e-05
    2. 'x' → logprob: -11.25001335144043
    3. '[u' → logprob: -17.12501335144043
    4. '[' → logprob: -17.87501335144043
    5. '(x' → logprob: -18.25001335144043
    6. '[
' → logprob: -18.37501335144043
    7. '[root' → logprob: -19.12501335144043
    8. '   ' → logprob: -19.25001335144043
    9. '{x' → logprob: -19.50001335144043
    10. '```' → logprob: -19.75001335144043

Token 1354: 'root' (ID: 5488)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39148983359336853
    2. 'root' → logprob: -1.141489863395691
    3. '[x' → logprob: -5.3914899826049805
    4. '[root' → logprob: -9.89148998260498
    5. ' x' → logprob: -14.26648998260498
    6. '(x' → logprob: -14.89148998260498
    7. 'xref' → logprob: -15.76648998260498
    8. '```' → logprob: -15.89148998260498
    9. '_root' → logprob: -16.141489028930664
    10. 'y' → logprob: -16.141489028930664

Token 1355: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.056461185216903687
    2. ']:
' → logprob: -3.4314610958099365
    3. ':' → logprob: -3.9314610958099365
    4. '):
' → logprob: -6.056461334228516
    5. ']:' → logprob: -8.931461334228516
    6. ']' → logprob: -9.431461334228516
    7. '           ' → logprob: -9.431461334228516
    8. '():
' → logprob: -9.681461334228516
    9. '       ' → logprob: -9.806461334228516
    10. '<|end|>' → logprob: -10.931461334228516

Token 1356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003366754623129964
    2. 'self' → logprob: -6.503366947174072
    3. ' self' → logprob: -7.378366947174072
    4. '           ' → logprob: -7.378366947174072
    5. '   ' → logprob: -8.128366470336914
    6. '                   ' → logprob: -8.878366470336914
    7. '```' → logprob: -9.128366470336914
    8. '	           ' → logprob: -11.003366470336914
    9. '                
' → logprob: -11.253366470336914
    10. '	self' → logprob: -11.503366470336914

Token 1357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004116273485124111
    2. ' self' → logprob: -5.504116058349609
    3. '                   ' → logprob: -10.62911605834961
    4. '               ' → logprob: -11.25411605834961
    5. '           ' → logprob: -14.75411605834961
    6. '   ' → logprob: -15.62911605834961
    7. '	self' → logprob: -16.00411605834961
    8. '
' → logprob: -16.75411605834961
    9. '[self' → logprob: -17.50411605834961
    10. '                       ' → logprob: -18.50411605834961

Token 1358: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -2.165027217415627e-05
    2. 'rank' → logprob: -10.750021934509277
    3. '_rank' → logprob: -16.25002098083496
    4. 'self' → logprob: -17.62502098083496
    5. ' rank' → logprob: -17.62502098083496
    6. 'Rank' → logprob: -18.37502098083496
    7. '(rank' → logprob: -19.12502098083496
    8. '
' → logprob: -19.87502098083496
    9. '.r' → logprob: -20.87502098083496
    10. '.' → logprob: -21.50002098083496

Token 1359: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.3856492842023727e-06
    2. '[u' → logprob: -14.000000953674316
    3. '[self' → logprob: -15.250000953674316
    4. '[' → logprob: -16.000001907348633
    5. '[
' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. 'x' → logprob: -17.375001907348633
    8. '[e' → logprob: -18.000001907348633
    9. '
' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 1360: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3164205551147461
    2. '[x' → logprob: -1.316420555114746
    3. '[root' → logprob: -5.816420555114746
    4. 'x' → logprob: -8.691420555114746
    5. '```' → logprob: -12.941420555114746
    6. '   ' → logprob: -13.566420555114746
    7. ' root' → logprob: -14.566420555114746
    8. '][' → logprob: -14.566420555114746
    9. '[
' → logprob: -15.066420555114746
    10. 'o' → logprob: -15.316420555114746

Token 1361: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018224041908979416
    2. ' +=' → logprob: -4.018224239349365
    3. ']+=' → logprob: -9.518223762512207
    4. '           ' → logprob: -15.393223762512207
    5. '[' → logprob: -15.643223762512207
    6. '[
' → logprob: -16.518224716186523
    7. '            ' → logprob: -17.393224716186523
    8. '   ' → logprob: -18.143224716186523
    9. '[x' → logprob: -18.143224716186523
    10. '+' → logprob: -18.143224716186523

Token 1362: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00037561915814876556
    2. ' +=' → logprob: -8.000375747680664
    3. ']+=' → logprob: -10.125375747680664
    4. '=' → logprob: -17.500375747680664
    5. '+='' → logprob: -18.000375747680664
    6. '[' → logprob: -18.750375747680664
    7. '+' → logprob: -18.875375747680664
    8. '+="' → logprob: -19.250375747680664
    9. '+=(' → logprob: -20.375375747680664
    10. '```' → logprob: -21.125375747680664

Token 1363: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.5
    4. '
' → logprob: -21.5
    5. '```' → logprob: -21.75
    6. '           ' → logprob: -23.5
    7. '[' → logprob: -23.875
    8. '       ' → logprob: -24.0
    9. '１' → logprob: -25.0
    10. '+' → logprob: -25.125

Token 1364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -22.125
    4. '
' → logprob: -23.625
    5. '```' → logprob: -24.125
    6. '１' → logprob: -26.0
    7. '       ' → logprob: -26.125
    8. '[' → logprob: -26.625
    9. '           ' → logprob: -26.75
    10. '۱' → logprob: -26.875

Token 1365: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016061515780165792
    2. '<|end|>' → logprob: -7.126605987548828
    3. 'return' → logprob: -7.501605987548828
    4. ' return' → logprob: -9.376605987548828
    5. '               ' → logprob: -10.126605987548828
    6. '
' → logprob: -10.251605987548828
    7. ':return' → logprob: -10.376605987548828
    8. '           ' → logprob: -10.876605987548828
    9. '   ' → logprob: -11.876605987548828
    10. ')' → logprob: -12.501605987548828

Token 1366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008696523727849126
    2. 'return' → logprob: -7.2508697509765625
    3. '<|end|>' → logprob: -9.500869750976562
    4. '               ' → logprob: -10.750869750976562
    5. ' return' → logprob: -11.000869750976562
    6. '           ' → logprob: -11.000869750976562
    7. '
' → logprob: -11.375869750976562
    8. '   ' → logprob: -11.750869750976562
    9. ':return' → logprob: -12.625869750976562
    10. '	return' → logprob: -13.625869750976562

Token 1367: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12975768744945526
    2. 'return' (adapté à ' return') → logprob: -2.1297576427459717
    3. '           ' → logprob: -6.129757881164551
    4. ' return' → logprob: -7.879757881164551
    5. '               ' → logprob: -8.25475788116455
    6. '   ' → logprob: -12.50475788116455
    7. '	return' → logprob: -13.37975788116455
    8. '
' → logprob: -13.75475788116455
    9. '                       ' → logprob: -13.87975788116455
    10. '                   ' → logprob: -14.00475788116455

Token 1368: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233763717114925
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -19.505233764648438
    4. '=True' → logprob: -21.130233764648438
    5. 'False' → logprob: -22.630233764648438
    6. '   ' → logprob: -23.755233764648438
    7. '.True' → logprob: -24.005233764648438
    8. '
' → logprob: -24.130233764648438
    9. '_true' → logprob: -24.630233764648438
    10. 'true' → logprob: -24.755233764648438

Token 1369: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1370: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1371: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.015005139634013176
    2. ' solve' → logprob: -4.265005111694336
    3. 'main' → logprob: -7.640005111694336
    4. 'solve' → logprob: -9.015005111694336
    5. ' island' → logprob: -9.390005111694336
    6. ' read' → logprob: -10.140005111694336
    7. ' parse' → logprob: -10.265005111694336
    8. ' build' → logprob: -11.015005111694336
    9. ' find' → logprob: -11.140005111694336
    10. ' solution' → logprob: -11.515005111694336

Token 1372: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005238856188952923
    2. '():
' → logprob: -5.255239009857178
    3. ' ():' → logprob: -13.00523853302002
    4. '():
' → logprob: -13.38023853302002
    5. '():

' → logprob: -14.75523853302002
    6. '()' → logprob: -14.75523853302002
    7. '()>' → logprob: -15.50523853302002
    8. '()->' → logprob: -17.255239486694336
    9. '_' → logprob: -17.630239486694336
    10. '(' → logprob: -18.005239486694336

Token 1373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3238838315010071
    2. 'import' → logprob: -1.4488837718963623
    3. ' import' → logprob: -3.1988837718963623
    4. '```' → logprob: -7.698884010314941
    5. '	import' → logprob: -8.448884010314941
    6. 'n' → logprob: -8.573884010314941
    7. ' n' → logprob: -8.823884010314941
    8. 'def' → logprob: -12.573884010314941
    9. '    
' → logprob: -12.573884010314941
    10. '    ' → logprob: -13.198884010314941

Token 1374: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.20972377061843872
    2. ' import' → logprob: -1.709723711013794
    3. 'n' → logprob: -5.459723949432373
    4. ' n' → logprob: -6.209723949432373
    5. '   ' → logprob: -6.209723949432373
    6. '	import' → logprob: -13.959723472595215
    7. '```' → logprob: -14.459723472595215
    8. '	n' → logprob: -16.33472442626953
    9. 'input' → logprob: -16.95972442626953
    10. ' input' → logprob: -17.20972442626953

Token 1375: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.512236498361744e-07
    2. ' sys' → logprob: -14.500000953674316
    3. '=sys' → logprob: -19.625
    4. 'math' → logprob: -22.0
    5. '	sys' → logprob: -22.125
    6. '(sys' → logprob: -22.5
    7. 'io' → logprob: -23.0
    8. '```' → logprob: -23.125
    9. 'stdin' → logprob: -24.625
    10. '.sys' → logprob: -25.375

Token 1376: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027923913672566414
    2. 'input' → logprob: -4.152924060821533
    3. 'data' → logprob: -5.152924060821533
    4. 'n' → logprob: -6.277924060821533
    5. ' input' → logprob: -6.402924060821533
    6. '```' → logprob: -7.402924060821533
    7. '    
' → logprob: -7.527924060821533
    8. '
' → logprob: -8.027923583984375
    9. ' data' → logprob: -8.652923583984375
    10. ' lines' → logprob: -8.652923583984375

Token 1377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06331266462802887
    2. 'input' → logprob: -3.4383127689361572
    3. 'data' → logprob: -4.313312530517578
    4. ' input' → logprob: -4.563312530517578
    5. ' data' → logprob: -6.563312530517578
    6. ' readline' → logprob: -6.813312530517578
    7. '```' → logprob: -6.938312530517578
    8. ' lines' → logprob: -6.938312530517578
    9. 'n' → logprob: -7.813312530517578
    10. 'lines' → logprob: -8.938312530517578

Token 1378: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.2007883671903983e-05
    2. ' input' → logprob: -11.250021934509277
    3. '   ' → logprob: -11.750021934509277
    4. 'data' → logprob: -14.000021934509277
    5. 'read' → logprob: -16.750022888183594
    6. 'n' → logprob: -16.875022888183594
    7. 'reader' → logprob: -18.375022888183594
    8. '
' → logprob: -19.125022888183594
    9. 'inp' → logprob: -19.750022888183594
    10. 'lines' (adapté à ' lines') → logprob: -20.000022888183594

Token 1379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030085884034633636
    2. ' =' → logprob: -3.530085802078247
    3. '=line' → logprob: -8.780085563659668
    4. '()' → logprob: -9.655085563659668
    5. '=input' → logprob: -10.280085563659668
    6. '=sys' → logprob: -10.655085563659668
    7. '   ' → logprob: -11.030085563659668
    8. '=[]
' → logprob: -11.655085563659668
    9. '=[]' → logprob: -11.780085563659668
    10. '_=' → logprob: -12.155085563659668

Token 1380: ' iter' (ID: 10621)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0067266179248690605
    2. ' sys' → logprob: -5.0067267417907715
    3. '[' → logprob: -12.006726264953613
    4. 'list' → logprob: -12.756726264953613
    5. '(sys' → logprob: -14.006726264953613
    6. '=sys' → logprob: -14.631726264953613
    7. ' [' → logprob: -14.756726264953613
    8. '   ' → logprob: -14.881726264953613
    9. '	sys' → logprob: -15.881726264953613
    10. 'iter' → logprob: -15.881726264953613

Token 1381: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00018661346985027194
    2. 'sys' → logprob: -8.625186920166016
    3. '=sys' → logprob: -12.375186920166016
    4. '(input' → logprob: -13.750186920166016
    5. ' sys' → logprob: -13.875186920166016
    6. '(' → logprob: -15.250186920166016
    7. '	sys' → logprob: -15.500186920166016
    8. '(stdin' → logprob: -15.625186920166016
    9. '(list' → logprob: -16.375186920166016
    10. 'input' → logprob: -17.250186920166016

Token 1382: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00017278951418120414
    2. '.argv' → logprob: -9.25017261505127
    3. 'stdin' → logprob: -10.37517261505127
    4. '.stdout' → logprob: -10.62517261505127
    5. '.' → logprob: -11.25017261505127
    6. ' .' → logprob: -12.37517261505127
    7. '(stdin' → logprob: -13.37517261505127
    8. ' stdin' → logprob: -13.87517261505127
    9. '.std' → logprob: -14.25017261505127
    10. 'import' → logprob: -15.00017261505127

Token 1383: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02930072695016861
    2. '.readlines' → logprob: -3.9043006896972656
    3. ')' → logprob: -4.904300689697266
    4. '())' → logprob: -7.404300689697266
    5. 'read' → logprob: -7.904300689697266
    6. '()' → logprob: -8.529300689697266
    7. ' readline' → logprob: -10.404300689697266
    8. '().' → logprob: -10.904300689697266
    9. '()
' → logprob: -11.154300689697266
    10. ')
' → logprob: -11.279300689697266

Token 1384: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.898723561083898e-05
    2. '()' → logprob: -10.125079154968262
    3. '())' → logprob: -10.250079154968262
    4. 'lines' → logprob: -14.000079154968262
    5. '()
' → logprob: -14.125079154968262
    6. '()\' → logprob: -14.500079154968262
    7. '())
' → logprob: -14.875079154968262
    8. 'line' → logprob: -15.125079154968262
    9. '()).' → logprob: -15.500079154968262
    10. ')' → logprob: -16.250078201293945

Token 1385: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3336201608181
    2. 'strip' → logprob: -1.8336201906204224
    3. 'lines' → logprob: -2.208620071411133
    4. '().' → logprob: -4.333620071411133
    5. 'line' → logprob: -8.458620071411133
    6. 'read' → logprob: -8.583620071411133
    7. ')' → logprob: -8.833620071411133
    8. 'decode' → logprob: -8.958620071411133
    9. 'rstrip' → logprob: -9.833620071411133
    10. '()' → logprob: -10.083620071411133

Token 1386: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5801579356193542
    2. 'lines' → logprob: -0.8301579356193542
    3. '())' → logprob: -6.08015775680542
    4. '()\' → logprob: -6.95515775680542
    5. '('\' → logprob: -7.08015775680542
    6. '()
' → logprob: -9.330158233642578
    7. '()]' → logprob: -10.830158233642578
    8. '()>' → logprob: -12.080158233642578
    9. '())
' → logprob: -12.705158233642578
    10. '()[' → logprob: -12.955158233642578

Token 1387: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.01221517100930214
    2. '())' → logprob: -4.5122151374816895
    3. ')
' → logprob: -6.8872151374816895
    4. ')' → logprob: -9.262215614318848
    5. '()' → logprob: -10.262215614318848
    6. '())

' → logprob: -11.512215614318848
    7. '())
' → logprob: -13.262215614318848
    8. '()
' → logprob: -13.262215614318848
    9. ' ())
' → logprob: -14.012215614318848
    10. '   ' → logprob: -14.262215614318848

Token 1388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6231623888015747
    2. 'n' → logprob: -0.8731623888015747
    3. 'for' → logprob: -3.498162269592285
    4. 'while' → logprob: -4.248162269592285
    5. '```' → logprob: -7.123162269592285
    6. ' n' → logprob: -8.123162269592285
    7. 'try' → logprob: -8.373162269592285
    8. ' for' → logprob: -9.123162269592285
    9. 'num' → logprob: -10.373162269592285
    10. ' while' → logprob: -10.623162269592285

Token 1389: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061075419187545776
    2. '   ' → logprob: -3.186075448989868
    3. 'while' (adapté à ' while') → logprob: -4.436075210571289
    4. 'for' → logprob: -5.686075210571289
    5. 'class' → logprob: -6.686075210571289
    6. ' n' → logprob: -7.686075210571289
    7. 'try' → logprob: -7.936075210571289
    8. 't' → logprob: -9.061075210571289
    9. 'def' → logprob: -9.311075210571289
    10. 'num' → logprob: -9.311075210571289

Token 1390: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804837539792061
    2. ' True' → logprob: -3.288048267364502
    3. '   ' → logprob: -12.66304874420166
    4. '(True' → logprob: -13.41304874420166
    5. ' ' → logprob: -13.53804874420166
    6. '
' → logprob: -14.78804874420166
    7. 'true' → logprob: -15.66304874420166
    8. '1' → logprob: -16.038047790527344
    9. '  ' → logprob: -16.288047790527344
    10. '=True' → logprob: -17.163047790527344

Token 1391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6083118319511414
    2. '       ' → logprob: -1.1083118915557861
    3. '   ' → logprob: -2.733311891555786
    4. ':
' → logprob: -3.358311891555786
    5. 'try' → logprob: -3.733311891555786
    6. ',' → logprob: -7.358311653137207
    7. ' try' → logprob: -7.733311653137207
    8. '	try' → logprob: -8.108311653137207
    9. '):
' → logprob: -9.983311653137207
    10. '    ' → logprob: -10.233311653137207

Token 1392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03514866530895233
    2. 'try' → logprob: -3.4101486206054688
    3. ' try' → logprob: -6.660148620605469
    4. '       ' → logprob: -8.660148620605469
    5. '	try' → logprob: -10.160148620605469
    6. '   ' → logprob: -12.160148620605469
    7. '```' → logprob: -13.785148620605469
    8. '  ' → logprob: -14.410148620605469
    9. '    ' → logprob: -14.785148620605469
    10. 'Try' → logprob: -15.160148620605469

Token 1393: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.07917828112840652
    2. 'line' → logprob: -2.5791783332824707
    3. '   ' → logprob: -8.579177856445312
    4. ' try' → logprob: -9.454177856445312
    5. ' line' → logprob: -10.829177856445312
    6. '       ' → logprob: -13.579177856445312
    7. '	try' → logprob: -15.079177856445312
    8. '
' → logprob: -15.454177856445312
    9. '	line' → logprob: -15.704177856445312
    10. '  ' → logprob: -16.204177856445312

Token 1394: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5969061851501465
    2. ':' → logprob: -1.2219061851501465
    3. ':
' → logprob: -2.0969061851501465
    4. '       ' → logprob: -4.0969061851501465
    5. ' :' → logprob: -4.3469061851501465
    6. '():' → logprob: -7.0969061851501465
    7. ' =' → logprob: -7.8469061851501465
    8. '():
' → logprob: -7.8469061851501465
    9. ' :
' → logprob: -8.346906661987305
    10. '   ' → logprob: -8.971906661987305

Token 1395: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4508952498435974
    2. 'line' → logprob: -1.2008953094482422
    3. '           ' → logprob: -2.950895309448242
    4. ' line' → logprob: -4.700895309448242
    5. '   ' → logprob: -7.950895309448242
    6. 'n' → logprob: -8.450895309448242
    7. '	line' → logprob: -10.200895309448242
    8. '#line' → logprob: -10.825895309448242
    9. '(line' → logprob: -12.825895309448242
    10. 'r' → logprob: -12.950895309448242

Token 1396: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2039848268032074
    2. 'n' (adapté à ' n') → logprob: -1.7039848566055298
    3. '           ' → logprob: -6.70398473739624
    4. 'N' → logprob: -7.32898473739624
    5. '   ' → logprob: -7.95398473739624
    6. '       ' → logprob: -8.453985214233398
    7. ' line' → logprob: -9.703985214233398
    8. 'header' → logprob: -10.578985214233398
    9. 'parts' → logprob: -11.578985214233398
    10. ' n' → logprob: -12.078985214233398

Token 1397: 'mk' (ID: 28902)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4295698404312134
    2. ' =' → logprob: -1.1795698404312134
    3. ',' → logprob: -3.179569721221924
    4. '=int' → logprob: -9.429570198059082
    5. ' ,' → logprob: -10.054570198059082
    6. '       ' → logprob: -11.179570198059082
    7. '   ' → logprob: -11.429570198059082
    8. '=line' → logprob: -11.804570198059082
    9. ',n' → logprob: -12.179570198059082
    10. ',line' → logprob: -12.304570198059082

Token 1398: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10041467100381851
    2. '=' → logprob: -2.350414752960205
    3. ',' → logprob: -8.725414276123047
    4. '_line' → logprob: -10.850414276123047
    5. '   ' → logprob: -11.350414276123047
    6. '=line' → logprob: -12.225414276123047
    7. ')' → logprob: -13.350414276123047
    8. 'line' → logprob: -13.725414276123047
    9. '_' → logprob: -13.725414276123047
    10. '       ' → logprob: -13.850414276123047

Token 1399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024433076381683
    2. '=' → logprob: -1.910244345664978
    3. '           ' → logprob: -11.16024398803711
    4. '       ' → logprob: -12.53524398803711
    5. '=line' → logprob: -13.28524398803711
    6. '               ' → logprob: -15.16024398803711
    7. '        ' → logprob: -16.16024398803711
    8. '=n' → logprob: -16.28524398803711
    9. '   ' → logprob: -16.91024398803711
    10. '            ' → logprob: -17.53524398803711

Token 1400: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.02324594371020794
    2. ' next' → logprob: -3.7732460498809814
    3. '(next' → logprob: -14.773245811462402
    4. 'lines' → logprob: -16.64824676513672
    5. '[next' → logprob: -18.52324676513672
    6. '   ' → logprob: -18.77324676513672
    7. '	next' → logprob: -19.02324676513672
    8. '.next' → logprob: -19.14824676513672
    9. ' lines' → logprob: -19.14824676513672
    10. ',next' → logprob: -20.27324676513672

Token 1401: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.049774449318647385
    2. 'lines' → logprob: -3.049774408340454
    3. ' lines' → logprob: -6.799774646759033
    4. '(' → logprob: -10.049774169921875
    5. '()' → logprob: -11.674774169921875
    6. '(
' → logprob: -12.174774169921875
    7. '(n' → logprob: -12.174774169921875
    8. '	lines' → logprob: -12.799774169921875
    9. '   ' → logprob: -13.049774169921875
    10. '_lines' → logprob: -13.549774169921875

Token 1402: ')
' (ID: 446)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7697533369064331
    2. ').' → logprob: -1.644753336906433
    3. '()
' → logprob: -1.644753336906433
    4. '()' → logprob: -3.0197534561157227
    5. '       ' → logprob: -3.6447534561157227
    6. ')' → logprob: -3.6447534561157227
    7. '           ' → logprob: -4.019753456115723
    8. '.strip' → logprob: -4.519753456115723
    9. ')
' → logprob: -4.769753456115723
    10. ' =' → logprob: -4.894753456115723

Token 1403: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1275477260351181
    2. '       ' → logprob: -2.2525477409362793
    3. ' if' → logprob: -4.627547740936279
    4. 'if' → logprob: -5.377547740936279
    5. '            
' → logprob: -9.752547264099121
    6. '
' → logprob: -10.002547264099121
    7. '        
' → logprob: -10.377547264099121
    8. '```' → logprob: -10.877547264099121
    9. '   ' → logprob: -11.252547264099121
    10. '=' → logprob: -11.502547264099121

Token 1404: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8488531112670898
    2. '           ' → logprob: -0.8488531112670898
    3. 'if' → logprob: -2.09885311126709
    4. ' if' → logprob: -3.84885311126709
    5. '
' → logprob: -9.22385311126709
    6. 'except' (adapté à ' except') → logprob: -9.84885311126709
    7. 'n' → logprob: -10.09885311126709
    8. 'while' → logprob: -10.72385311126709
    9. ' n' → logprob: -10.97385311126709
    10. '   ' → logprob: -11.09885311126709

Token 1405: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.005488333757966757
    2. 'EOF' → logprob: -5.255488395690918
    3. ' Stop' → logprob: -8.380488395690918
    4. 'Index' → logprob: -11.630488395690918
    5. ' EOF' → logprob: -11.755488395690918
    6. 'Break' → logprob: -12.505488395690918
    7. 'Keyboard' → logprob: -13.380488395690918
    8. 'Exception' → logprob: -13.755488395690918
    9. 'stop' → logprob: -14.630488395690918
    10. '```' → logprob: -15.005488395690918

Token 1406: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -3.8889261304575484e-06
    2. 'iteration' → logprob: -13.000003814697266
    3. 'Iterator' → logprob: -13.625003814697266
    4. 'Iter' → logprob: -16.500003814697266
    5. 'Async' → logprob: -16.625003814697266
    6. ' iteration' → logprob: -16.875003814697266
    7. '_iteration' → logprob: -17.000003814697266
    8. 'Iterations' → logprob: -17.375003814697266
    9. 'Iterable' → logprob: -17.875003814697266
    10. '```' → logprob: -18.000003814697266

Token 1407: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7367801666259766
    2. '           ' → logprob: -1.2367801666259766
    3. ':' → logprob: -1.6117801666259766
    4. ':
' → logprob: -3.4867801666259766
    5. '=' → logprob: -8.486780166625977
    6. '               ' → logprob: -9.361780166625977
    7. '   ' → logprob: -9.486780166625977
    8. ' =' → logprob: -9.986780166625977
    9. '        
' → logprob: -9.986780166625977
    10. '.' → logprob: -10.111780166625977

Token 1408: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14888128638267517
    2. '           ' → logprob: -2.023881196975708
    3. ' if' → logprob: -5.398881435394287
    4. 'if' → logprob: -6.523881435394287
    5. '   ' → logprob: -9.898880958557129
    6. ' ' → logprob: -10.023880958557129
    7. 'break' → logprob: -10.398880958557129
    8. ' break' → logprob: -10.523880958557129
    9. '```' → logprob: -10.898880958557129
    10. '        
' → logprob: -12.273880958557129

Token 1409: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2086694836616516
    2. '           ' → logprob: -2.208669424057007
    3. '       ' → logprob: -2.708669424057007
    4. ' break' → logprob: -4.458669662475586
    5. 'return' → logprob: -8.708669662475586
    6. '   ' → logprob: -10.083669662475586
    7. '	break' → logprob: -10.208669662475586
    8. '               ' → logprob: -10.583669662475586
    9. '
' → logprob: -12.333669662475586
    10. 'if' → logprob: -12.833669662475586

Token 1410: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008900215616449714
    2. '        
' → logprob: -7.500890254974365
    3. '
' → logprob: -8.500889778137207
    4. '           ' → logprob: -10.250889778137207
    5. 'n' → logprob: -10.750889778137207
    6. ' if' → logprob: -10.750889778137207
    7. 'if' → logprob: -10.875889778137207
    8. '  
' → logprob: -12.000889778137207
    9. '   ' → logprob: -12.125889778137207
    10. '=' → logprob: -12.250889778137207

Token 1411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021576376166194677
    2. 'if' → logprob: -6.752157688140869
    3. 'n' → logprob: -7.252157688140869
    4. ' if' → logprob: -8.877157211303711
    5. '        
' → logprob: -9.752157211303711
    6. '   ' → logprob: -10.252157211303711
    7. '           ' → logprob: -11.002157211303711
    8. ' n' → logprob: -11.127157211303711
    9. '
' → logprob: -11.752157211303711
    10. '```' → logprob: -13.627157211303711

Token 1412: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4361115097999573
    2. 'n' → logprob: -1.1861114501953125
    3. ' if' → logprob: -3.4361114501953125
    4. '       ' → logprob: -4.3111114501953125
    5. ' n' → logprob: -6.0611114501953125
    6. '   ' → logprob: -9.561111450195312
    7. 'parts' → logprob: -11.311111450195312
    8. '	n' → logprob: -11.811111450195312
    9. '
' → logprob: -11.936111450195312
    10. ' parts' → logprob: -13.061111450195312

Token 1413: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.019048012793064117
    2. ' not' → logprob: -4.01904821395874
    3. 'n' → logprob: -7.01904821395874
    4. '   ' → logprob: -13.269047737121582
    5. '       ' → logprob: -14.269047737121582
    6. ' n' → logprob: -14.394047737121582
    7. '           ' → logprob: -16.6440486907959
    8. '	not' → logprob: -18.3940486907959
    9. '(not' → logprob: -19.0190486907959
    10. 'len' → logprob: -19.1440486907959

Token 1414: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001584850688232109
    2. ' n' → logprob: -8.750158309936523
    3. '_n' → logprob: -21.375158309936523
    4. '	n' → logprob: -21.875158309936523
    5. ')n' → logprob: -23.000158309936523
    6. '(n' → logprob: -23.125158309936523
    7. '$n' → logprob: -23.125158309936523
    8. '
' → logprob: -24.250158309936523
    9. 'line' → logprob: -24.750158309936523
    10. '   ' → logprob: -25.000158309936523

Token 1415: 'mk' (ID: 28902)
  Prédit: 'mk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mk' → logprob: -2.045823566731997e-05
    2. 'm' → logprob: -11.000020027160645
    3. ' mk' → logprob: -14.125020027160645
    4. ' =' → logprob: -14.125020027160645
    5. '=' → logprob: -14.375020027160645
    6. '==' → logprob: -15.000020027160645
    7. '   ' → logprob: -15.375020027160645
    8. '_m' → logprob: -15.375020027160645
    9. '
' → logprob: -16.00002098083496
    10. ' ==' → logprob: -16.12502098083496

Token 1416: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.719917630311102e-05
    2. '_lines' → logprob: -10.750077247619629
    3. 'line' → logprob: -11.000077247619629
    4. '=' → logprob: -11.500077247619629
    5. ' =' → logprob: -11.625077247619629
    6. '_' → logprob: -12.375077247619629
    7. '```' → logprob: -12.500077247619629
    8. '   ' → logprob: -13.000077247619629
    9. ')' → logprob: -13.125077247619629
    10. '
' → logprob: -13.625077247619629

Token 1417: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.007111028768122196
    2. ':
' → logprob: -5.132111072540283
    3. '.' → logprob: -7.507111072540283
    4. ':' → logprob: -7.507111072540283
    5. '.trim' → logprob: -10.382110595703125
    6. '   ' → logprob: -10.632110595703125
    7. ' or' → logprob: -11.382110595703125
    8. '       ' → logprob: -12.132110595703125
    9. 'strip' → logprob: -12.507110595703125
    10. '.startswith' → logprob: -12.757110595703125

Token 1418: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3051767349243164
    2. ':
' → logprob: -1.4301767349243164
    3. '():
' → logprob: -3.9301767349243164
    4. '():' → logprob: -5.555176734924316
    5. ' or' → logprob: -8.930176734924316
    6. ':return' → logprob: -10.055176734924316
    7. '()' → logprob: -10.930176734924316
    8. '):
' → logprob: -12.430176734924316
    9. '   ' → logprob: -12.430176734924316
    10. ':

' → logprob: -12.930176734924316

Token 1419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024358915106859058
    2. 'continue' → logprob: -8.875243186950684
    3. ' continue' → logprob: -9.500243186950684
    4. '       ' → logprob: -10.625243186950684
    5. '   ' → logprob: -12.875243186950684
    6. '               ' → logprob: -14.375243186950684
    7. '	continue' → logprob: -15.000243186950684
    8. '		' → logprob: -15.500243186950684
    9. '	       ' → logprob: -15.500243186950684
    10. ':
' → logprob: -15.500243186950684

Token 1420: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3491162955760956
    2. '           ' → logprob: -1.349116325378418
    3. ' continue' → logprob: -3.349116325378418
    4. 'break' → logprob: -10.099116325378418
    5. '               ' → logprob: -10.599116325378418
    6. '   ' → logprob: -10.849116325378418
    7. '	continue' → logprob: -11.849116325378418
    8. '       ' → logprob: -12.599116325378418
    9. ' ' → logprob: -12.849116325378418
    10. ' break' → logprob: -12.974116325378418

Token 1421: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3188614845275879
    2. 'n' → logprob: -1.443861484527588
    3. ' n' → logprob: -3.318861484527588
    4. '   ' → logprob: -8.56886100769043
    5. '
' → logprob: -8.69386100769043
    6. ' parts' → logprob: -9.06886100769043
    7. 'parts' → logprob: -9.19386100769043
    8. '```' → logprob: -9.94386100769043
    9. '           ' → logprob: -10.06886100769043
    10. '(n' → logprob: -10.06886100769043

Token 1422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12880423665046692
    2. 'n' → logprob: -2.1288042068481445
    3. ' n' → logprob: -6.3788042068481445
    4. '
' → logprob: -9.878804206848145
    5. '   ' → logprob: -10.378804206848145
    6. '           ' → logprob: -10.503804206848145
    7. 'parts' → logprob: -10.878804206848145
    8. '```' → logprob: -11.003804206848145
    9. '        
' → logprob: -12.128804206848145
    10. ',n' → logprob: -12.253804206848145

Token 1423: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00012701898231171072
    2. '       ' → logprob: -9.000126838684082
    3. ' n' → logprob: -12.750126838684082
    4. 'N' → logprob: -15.375126838684082
    5. '   ' → logprob: -15.625126838684082
    6. 'parts' → logprob: -15.750126838684082
    7. '	n' → logprob: -16.5001277923584
    8. '
' → logprob: -17.3751277923584
    9. '_n' → logprob: -17.6251277923584
    10. 'tokens' → logprob: -18.1251277923584

Token 1424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04336647316813469
    2. ',m' → logprob: -3.1683664321899414
    3. ',k' → logprob: -8.543366432189941
    4. ' ,' → logprob: -9.418366432189941
    5. '_,' → logprob: -10.918366432189941
    6. ',int' → logprob: -11.168366432189941
    7. ',n' → logprob: -11.168366432189941
    8. ',num' → logprob: -11.168366432189941
    9. ',p' → logprob: -12.293366432189941
    10. ',s' → logprob: -12.293366432189941

Token 1425: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16025368869304657
    2. 'k' → logprob: -1.910253643989563
    3. ' m' → logprob: -11.285253524780273
    4. '=' → logprob: -11.535253524780273
    5. ' k' → logprob: -13.035253524780273
    6. '   ' → logprob: -13.535253524780273
    7. ',' → logprob: -13.910253524780273
    8. ',m' → logprob: -14.035253524780273
    9. ',k' → logprob: -14.035253524780273
    10. ' =' → logprob: -14.910253524780273

Token 1426: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6436503529548645
    2. ',' → logprob: -0.7686503529548645
    3. ' =' → logprob: -4.518650531768799
    4. '<|end|>' → logprob: -10.39365005493164
    5. ' ,' → logprob: -11.14365005493164
    6. ',n' → logprob: -11.14365005493164
    7. 'n' → logprob: -12.39365005493164
    8. ')' → logprob: -12.89365005493164
    9. '=
' → logprob: -12.89365005493164
    10. ',k' → logprob: -12.89365005493164

Token 1427: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. ' k' → logprob: -13.750000953674316
    3. '_k' → logprob: -17.875001907348633
    4. 'q' → logprob: -19.750001907348633
    5. '	k' → logprob: -19.875001907348633
    6. 'K' → logprob: -20.250001907348633
    7. ',k' → logprob: -21.000001907348633
    8. '*k' → logprob: -21.625001907348633
    9. 'ks' → logprob: -21.750001907348633
    10. '
' → logprob: -22.000001907348633

Token 1428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143692195415497
    2. ' =' → logprob: -1.7014368772506714
    3. ',' → logprob: -10.701436996459961
    4. '=
' → logprob: -15.576436996459961
    5. '＝' → logprob: -15.701436996459961
    6. '=int' → logprob: -15.951436996459961
    7. ')' → logprob: -15.951436996459961
    8. '   ' → logprob: -15.951436996459961
    9. '=n' → logprob: -16.32643699645996
    10. '=line' → logprob: -16.70143699645996

Token 1429: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889232039451599
    2. ' map' → logprob: -2.578892230987549
    3. '(map' → logprob: -13.203892707824707
    4. '[' → logprob: -14.953892707824707
    5. ' n' → logprob: -16.07889175415039
    6. '[n' → logprob: -16.20389175415039
    7. 'n' → logprob: -16.45389175415039
    8. '	map' → logprob: -16.57889175415039
    9. '.map' → logprob: -16.95389175415039
    10. '_map' → logprob: -17.07889175415039

Token 1430: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2519323229789734
    2. 'int' → logprob: -1.5019323825836182
    3. '[int' → logprob: -13.251932144165039
    4. '=int' → logprob: -14.626932144165039
    5. ' int' → logprob: -14.751932144165039
    6. '<int' → logprob: -15.501932144165039
    7. 'str' → logprob: -15.876932144165039
    8. '```' → logprob: -16.12693214416504
    9. '(str' → logprob: -16.50193214416504
    10. '(' → logprob: -17.25193214416504

Token 1431: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.028672266751527786
    2. ',' → logprob: -4.028672218322754
    3. ')' → logprob: -5.528672218322754
    4. ',n' → logprob: -6.153672218322754
    5. '(next' → logprob: -6.278672218322754
    6. 'n' → logprob: -6.778672218322754
    7. '(' → logprob: -7.653672218322754
    8. ')n' → logprob: -7.778672218322754
    9. ' n' → logprob: -9.653672218322754
    10. '(
' → logprob: -9.903672218322754

Token 1432: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1517960956552997e-05
    2. ' n' → logprob: -11.625011444091797
    3. 'next' → logprob: -13.000011444091797
    4. '(n' → logprob: -16.500011444091797
    5. '           ' → logprob: -16.750011444091797
    6. '   ' → logprob: -17.750011444091797
    7. '       ' → logprob: -18.125011444091797
    8. ')n' → logprob: -18.250011444091797
    9. 'lines' → logprob: -18.625011444091797
    10. '
' → logprob: -18.750011444091797

Token 1433: 'mk' (ID: 28902)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7767621278762817
    2. 'mk' → logprob: -1.0267621278762817
    3. 'n' → logprob: -1.9017621278762817
    4. '(n' → logprob: -3.776762008666992
    5. ' n' → logprob: -5.151762008666992
    6. '.split' → logprob: -7.151762008666992
    7. 'nk' → logprob: -7.401762008666992
    8. 'k' → logprob: -7.651762008666992
    9. '_n' → logprob: -8.276762008666992
    10. '=n' → logprob: -8.401762008666992

Token 1434: '_line' (ID: 14418)
  Prédit: 'mk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mk' → logprob: -0.6413626670837402
    2. '_line' → logprob: -0.7663626670837402
    3. 'k' → logprob: -5.89136266708374
    4. '(n' → logprob: -6.14136266708374
    5. 'n' → logprob: -6.26636266708374
    6. 'm' → logprob: -6.64136266708374
    7. 'line' → logprob: -9.141363143920898
    8. '_LINE' → logprob: -9.266363143920898
    9. 'mx' → logprob: -9.641363143920898
    10. '[n' → logprob: -9.891363143920898

Token 1435: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.06498131155967712
    2. '.strip' → logprob: -2.93998122215271
    3. '().' → logprob: -4.689981460571289
    4. 'split' → logprob: -7.814981460571289
    5. '.' → logprob: -8.689981460571289
    6. '.readline' → logprob: -9.314981460571289
    7. ' .' → logprob: -9.439981460571289
    8. '.rstrip' → logprob: -9.564981460571289
    9. '(split' → logprob: -10.814981460571289
    10. '   ' → logprob: -11.689981460571289

Token 1436: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4849443838757e-06
    2. '.split' → logprob: -12.375004768371582
    3. '()' → logprob: -16.500003814697266
    4. 'split' → logprob: -18.000003814697266
    5. '()
' → logprob: -18.125003814697266
    6. ' ().' → logprob: -20.375003814697266
    7. '   ' → logprob: -20.500003814697266
    8. '().__' → logprob: -20.875003814697266
    9. '().
' → logprob: -20.875003814697266
    10. '())' → logprob: -21.500003814697266

Token 1437: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. '(split' → logprob: -15.25
    3. ' split' → logprob: -17.0
    4. '.split' → logprob: -18.0
    5. 'spl' → logprob: -18.875
    6. 'strip' → logprob: -20.125
    7. 'rstrip' → logprob: -20.25
    8. '_split' → logprob: -20.875
    9. 'plit' → logprob: -21.125
    10. ')' → logprob: -22.0

Token 1438: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0046055191196501255
    2. '()' → logprob: -6.129605293273926
    3. '())
' → logprob: -6.379605293273926
    4. ')' → logprob: -7.254605293273926
    5. '('' → logprob: -11.754605293273926
    6. '(' → logprob: -12.504605293273926
    7. '()
' → logprob: -13.379605293273926
    8. ')
' → logprob: -14.879605293273926
    9. '())

' → logprob: -15.004605293273926
    10. ' )' → logprob: -15.629605293273926

Token 1439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005355171160772443
    2. 'pro' → logprob: -7.750535488128662
    3. 'if' → logprob: -9.25053596496582
    4. '   ' → logprob: -11.87553596496582
    5. '```' → logprob: -14.37553596496582
    6. ' if' → logprob: -14.62553596496582
    7. 'edges' → logprob: -15.00053596496582
    8. '           ' → logprob: -15.75053596496582
    9. '        
' → logprob: -16.37553596496582
    10. 'proposal' → logprob: -16.62553596496582

Token 1440: ' if' (ID: 538)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.009259079582989216
    2. '       ' → logprob: -4.759259223937988
    3. 'if' (adapté à ' if') → logprob: -8.134259223937988
    4. 'edges' → logprob: -8.259259223937988
    5. ' proposals' → logprob: -10.384259223937988
    6. 'proposal' → logprob: -10.884259223937988
    7. 'props' → logprob: -10.884259223937988
    8. '   ' → logprob: -11.759259223937988
    9. '```' → logprob: -12.634259223937988
    10. 'break' → logprob: -12.759259223937988

Token 1441: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. ' n' → logprob: -13.750000953674316
    3. '	n' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '_n' → logprob: -21.125001907348633
    6. '
' → logprob: -21.250001907348633
    7. 'not' → logprob: -21.500001907348633
    8. '(n' → logprob: -21.750001907348633
    9. ')n' → logprob: -23.375001907348633
    10. '$n' → logprob: -24.000001907348633

Token 1442: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47412213683128357
    2. ' ==' → logprob: -0.974122166633606
    3. '=' → logprob: -10.974122047424316
    4. '===' → logprob: -11.849122047424316
    5. '==
' → logprob: -11.974122047424316
    6. ')==' → logprob: -12.599122047424316
    7. '```' → logprob: -12.974122047424316
    8. '<=' → logprob: -13.349122047424316
    9. '<|end|>' → logprob: -13.349122047424316
    10. ']==' → logprob: -14.224122047424316

Token 1443: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.250001907348633
    4. '
' → logprob: -20.125001907348633
    5. '=' → logprob: -20.375001907348633
    6. 'k' → logprob: -20.750001907348633
    7. 's' → logprob: -20.875001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '０' → logprob: -21.875001907348633
    10. 'and' → logprob: -22.125001907348633

Token 1444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. 'k' → logprob: -16.125
    4. 'm' → logprob: -19.25
    5. '
' → logprob: -20.125
    6. '۰' → logprob: -20.625
    7. '=' → logprob: -21.5
    8. 'n' → logprob: -22.0
    9. '   ' → logprob: -22.125
    10. '０' → logprob: -22.25

Token 1445: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3134123682975769
    2. 'and' → logprob: -1.3134124279022217
    3. '   ' → logprob: -9.0634126663208
    4. ':' → logprob: -11.3134126663208
    5. '           ' → logprob: -11.6884126663208
    6. '       ' → logprob: -12.1884126663208
    7. ':
' → logprob: -12.8134126663208
    8. ' ' → logprob: -13.0634126663208
    9. '	and' → logprob: -13.1884126663208
    10. '      ' → logprob: -13.9384126663208

Token 1446: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.180879816180095e-05
    2. ' m' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.125051498413086
    4. '	m' → logprob: -19.625051498413086
    5. '  ' → logprob: -20.875051498413086
    6. '
' → logprob: -21.625051498413086
    7. '    ' → logprob: -21.625051498413086
    8. ' ' → logprob: -21.750051498413086
    9. '       ' → logprob: -21.875051498413086
    10. '           ' → logprob: -22.375051498413086

Token 1447: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.313283234834671
    2. ' ==' → logprob: -1.3132832050323486
    3. '===' → logprob: -11.81328296661377
    4. '0' → logprob: -12.43828296661377
    5. ' ' → logprob: -12.93828296661377
    6. '=' → logprob: -13.06328296661377
    7. '<|end|>' → logprob: -13.18828296661377
    8. '==
' → logprob: -13.81328296661377
    9. ' ' → logprob: -14.31328296661377
    10. 'and' → logprob: -14.68828296661377

Token 1448: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -19.625030517578125
    4. '   ' → logprob: -19.750030517578125
    5. '  ' → logprob: -20.500030517578125
    6. '<|end|>' → logprob: -20.625030517578125
    7. '
' → logprob: -20.750030517578125
    8. '۰' → logprob: -21.375030517578125
    9. 'and' → logprob: -21.750030517578125
    10. '```' → logprob: -21.875030517578125

Token 1449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -19.3750057220459
    4. '<|end|>' → logprob: -20.0000057220459
    5. '۰' → logprob: -20.2500057220459
    6. '
' → logprob: -20.7500057220459
    7. 'and' → logprob: -21.6250057220459
    8. '=' → logprob: -21.7500057220459
    9. '  ' → logprob: -22.2500057220459
    10. '   ' → logprob: -22.2500057220459

Token 1450: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3133505880832672
    2. 'and' → logprob: -1.3133505582809448
    3. '           ' → logprob: -10.063350677490234
    4. '0' → logprob: -10.188350677490234
    5. '       ' → logprob: -12.313350677490234
    6. ' ' → logprob: -13.688350677490234
    7. '          ' → logprob: -14.063350677490234
    8. '        ' → logprob: -15.063350677490234
    9. '   ' → logprob: -15.313350677490234
    10. '	and' → logprob: -15.313350677490234

Token 1451: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.547789674485102e-05
    2. ' k' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.625036239624023
    4. '	k' → logprob: -20.875036239624023
    5. '0' → logprob: -22.500036239624023
    6. ' ' → logprob: -23.000036239624023
    7. '  ' → logprob: -23.375036239624023
    8. '       ' → logprob: -23.500036239624023
    9. '     ' → logprob: -25.125036239624023
    10. 'K' → logprob: -25.250036239624023

Token 1452: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812097370624542
    2. '==' → logprob: -1.4062097072601318
    3. '()==' → logprob: -11.281209945678711
    4. ')==' → logprob: -11.531209945678711
    5. '<|end|>' → logprob: -12.156209945678711
    6. '=' → logprob: -12.406209945678711
    7. ' =' → logprob: -12.406209945678711
    8. '==
' → logprob: -12.406209945678711
    9. ' ==
' → logprob: -12.531209945678711
    10. '<|end|>' → logprob: -12.781209945678711

Token 1453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -20.5
    4. '   ' → logprob: -20.875
    5. '۰' → logprob: -21.25
    6. '<|end|>' → logprob: -22.75
    7. '=' → logprob: -22.875
    8. '  ' → logprob: -23.25
    9. '০' → logprob: -23.375
    10. '०' → logprob: -24.375

Token 1454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -21.0
    4. '<|end|>' → logprob: -21.25
    5. '   ' → logprob: -21.625
    6. '-' → logprob: -22.625
    7. '<|end|>' → logprob: -23.0
    8. '#' → logprob: -23.0
    9. '০' → logprob: -23.25
    10. '=' → logprob: -23.375

Token 1455: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6439231038093567
    2. '           ' → logprob: -1.268923044204712
    3. ':' → logprob: -1.643923044204712
    4. '       ' → logprob: -8.393922805786133
    5. ':return' → logprob: -9.643922805786133
    6. '   ' → logprob: -9.893922805786133
    7. '               ' → logprob: -10.893922805786133
    8. '          ' → logprob: -11.268922805786133
    9. ',' → logprob: -11.518922805786133
    10. '):
' → logprob: -12.143922805786133

Token 1456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.493430894101039e-05
    2. ':
' → logprob: -10.250075340270996
    3. ':' → logprob: -11.000075340270996
    4. '       ' → logprob: -11.250075340270996
    5. '               ' → logprob: -13.000075340270996
    6. ',' → logprob: -13.000075340270996
    7. '          ' → logprob: -13.875075340270996
    8. '   ' → logprob: -14.250075340270996
    9. '	       ' → logprob: -14.250075340270996
    10. '<|end|>' → logprob: -14.250075340270996

Token 1457: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.47975918650627136
    2. '           ' → logprob: -0.9797592163085938
    3. 'return' → logprob: -5.979759216308594
    4. ' break' → logprob: -6.479759216308594
    5. '               ' → logprob: -6.479759216308594
    6. '		' → logprob: -10.479759216308594
    7. '	break' → logprob: -10.604759216308594
    8. '       ' → logprob: -11.354759216308594
    9. ' return' → logprob: -13.479759216308594
    10. '   ' → logprob: -14.104759216308594

Token 1458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031070110853761435
    2. 'pro' → logprob: -5.878107070922852
    3. '   ' → logprob: -8.253107070922852
    4. '        
' → logprob: -10.628107070922852
    5. '
' → logprob: -11.503107070922852
    6. ' proposals' → logprob: -13.753107070922852
    7. '	pro' → logprob: -13.753107070922852
    8. '```' → logprob: -13.878107070922852
    9. 'edges' → logprob: -13.878107070922852
    10. '           ' → logprob: -14.003107070922852

Token 1459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009865405037999153
    2. 'pro' → logprob: -4.6348652839660645
    3. '   ' → logprob: -9.509865760803223
    4. 'edges' → logprob: -10.884865760803223
    5. ' proposals' → logprob: -12.134865760803223
    6. '	pro' → logprob: -12.759865760803223
    7. '        
' → logprob: -12.884865760803223
    8. 'proposal' → logprob: -13.259865760803223
    9. '           ' → logprob: -13.884865760803223
    10. '```' → logprob: -14.509865760803223

Token 1460: ' proposals' (ID: 43772)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.04915521293878555
    2. '       ' → logprob: -3.0491552352905273
    3. ' proposals' → logprob: -7.799155235290527
    4. 'proposal' → logprob: -9.424155235290527
    5. '   ' → logprob: -9.799155235290527
    6. '```' → logprob: -11.924155235290527
    7. 'props' → logprob: -12.924155235290527
    8. '           ' → logprob: -13.049155235290527
    9. '        
' → logprob: -13.174155235290527
    10. 'edges' → logprob: -13.299155235290527

Token 1461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47421443462371826
    2. '=' → logprob: -0.9742144346237183
    3. '=[]' → logprob: -8.974214553833008
    4. '   ' → logprob: -12.474214553833008
    5. '=[]
' → logprob: -12.599214553833008
    6. '       ' → logprob: -13.599214553833008
    7. '    ' → logprob: -14.974214553833008
    8. '[]' → logprob: -14.974214553833008
    9. '=
' → logprob: -15.474214553833008
    10. '        ' → logprob: -15.849214553833008

Token 1462: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.3138459622859955
    2. '[]' → logprob: -1.3138459920883179
    3. '[' → logprob: -7.563846111297607
    4. ' []' → logprob: -10.31384563446045
    5. ' []
' → logprob: -10.68884563446045
    6. '[]

' → logprob: -12.56384563446045
    7. '[
' → logprob: -12.68884563446045
    8. '[int' → logprob: -14.43884563446045
    9. '[])
' → logprob: -14.56384563446045
    10. '[p' → logprob: -14.93884563446045

Token 1463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020989913027733564
    2. 'for' → logprob: -6.25209903717041
    3. ' for' → logprob: -8.75209903717041
    4. '```' → logprob: -11.62709903717041
    5. '   ' → logprob: -13.50209903717041
    6. '           ' → logprob: -14.12709903717041
    7. '<|end|>' → logprob: -14.62709903717041
    8. '	for' → logprob: -15.50209903717041
    9. '        
' → logprob: -16.377098083496094
    10. 'next' → logprob: -16.502098083496094

Token 1464: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005238025914877653
    2. '       ' → logprob: -5.255238056182861
    3. ' for' → logprob: -12.505237579345703
    4. '   ' → logprob: -14.630237579345703
    5. '           ' → logprob: -17.255237579345703
    6. '	for' → logprob: -17.380237579345703
    7. 'while' → logprob: -19.005237579345703
    8. '
' → logprob: -19.755237579345703
    9. '```' → logprob: -20.255237579345703
    10. '               ' → logprob: -21.380237579345703

Token 1465: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.4153549020411447e-05
    2. '_i' → logprob: -10.75002384185791
    3. '_
' → logprob: -13.50002384185791
    4. '_range' → logprob: -14.62502384185791
    5. ' _' → logprob: -15.00002384185791
    6. '_in' → logprob: -15.87502384185791
    7. '_m' → logprob: -16.250024795532227
    8. '_=' → logprob: -16.250024795532227
    9. '_j' → logprob: -17.250024795532227
    10. '_line' → logprob: -17.750024795532227

Token 1466: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9774237871170044
    2. 'range' → logprob: -0.9774237871170044
    3. ' in' → logprob: -1.4774237871170044
    4. '_' → logprob: -4.477423667907715
    5. ' range' → logprob: -4.852423667907715
    6. ' ' → logprob: -10.852423667907715
    7. ' _' → logprob: -11.852423667907715
    8. '_range' → logprob: -11.977423667907715
    9. '
' → logprob: -12.477423667907715
    10. '  ' → logprob: -12.727423667907715

Token 1467: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004320996522437781
    2. ' range' → logprob: -7.750432014465332
    3. '_range' → logprob: -13.750432014465332
    4. '_' → logprob: -15.125432014465332
    5. '	range' → logprob: -17.00043296813965
    6. '
' → logprob: -18.37543296813965
    7. '(range' → logprob: -19.00043296813965
    8. ' in' → logprob: -19.25043296813965
    9. 'in' → logprob: -19.50043296813965
    10. '   ' → logprob: -20.12543296813965

Token 1468: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002273774443892762
    2. '(m' → logprob: -8.750226974487305
    3. ' m' → logprob: -9.625226974487305
    4. 'range' → logprob: -13.750226974487305
    5. '   ' → logprob: -13.875226974487305
    6. '	m' → logprob: -14.875226974487305
    7. '       ' → logprob: -15.875226974487305
    8. '_m' → logprob: -16.000226974487305
    9. '           ' → logprob: -16.125226974487305
    10. ')m' → logprob: -16.875226974487305

Token 1469: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8513672351837158
    2. '           ' → logprob: -1.2263672351837158
    3. ':
' → logprob: -1.3513672351837158
    4. '       ' → logprob: -4.601366996765137
    5. ':' → logprob: -5.226366996765137
    6. '():
' → logprob: -6.101366996765137
    7. '):' → logprob: -7.101366996765137
    8. '   ' → logprob: -7.351366996765137
    9. ',' → logprob: -7.851366996765137
    10. '=' → logprob: -7.976366996765137

Token 1470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023214559769257903
    2. '   ' → logprob: -9.875231742858887
    3. 'line' → logprob: -9.875231742858887
    4. ' line' → logprob: -10.125231742858887
    5. '	       ' → logprob: -10.875231742858887
    6. '```' → logprob: -11.000231742858887
    7. '       ' → logprob: -11.250231742858887
    8. '            
' → logprob: -12.250231742858887
    9. 'tokens' → logprob: -12.500231742858887
    10. 'token' → logprob: -12.875231742858887

Token 1471: ' parts' (ID: 7881)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.17269399762153625
    2. 'line' → logprob: -2.172693967819214
    3. '           ' → logprob: -3.547693967819214
    4. ' u' → logprob: -5.297694206237793
    5. ' line' → logprob: -5.797694206237793
    6. 'l' → logprob: -5.797694206237793
    7. 'a' → logprob: -6.172694206237793
    8. '   ' → logprob: -7.297694206237793
    9. 's' → logprob: -7.547694206237793
    10. 'uv' → logprob: -8.297694206237793

Token 1472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16025184094905853
    2. ' =' → logprob: -1.9102518558502197
    3. '=line' → logprob: -10.91025161743164
    4. '           ' → logprob: -12.41025161743164
    5. '=
' → logprob: -13.53525161743164
    6. '(parts' → logprob: -14.03525161743164
    7. 'tokens' → logprob: -14.28525161743164
    8. 'line' → logprob: -14.66025161743164
    9. '_line' → logprob: -15.03525161743164
    10. '   ' → logprob: -15.03525161743164

Token 1473: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -2.236549335066229e-05
    2. ' next' → logprob: -10.750021934509277
    3. 'input' → logprob: -14.750021934509277
    4. 'list' → logprob: -15.625021934509277
    5. '(next' → logprob: -16.000022888183594
    6. '[next' → logprob: -16.750022888183594
    7. 'parts' → logprob: -17.750022888183594
    8. 'lines' → logprob: -19.375022888183594
    9. '.next' → logprob: -19.625022888183594
    10. '	next' → logprob: -20.125022888183594

Token 1474: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.25276076793670654
    2. 'lines' → logprob: -1.5027607679367065
    3. '(parts' → logprob: -7.252760887145996
    4. 'parts' → logprob: -10.002760887145996
    5. ' lines' → logprob: -10.627760887145996
    6. 'line' → logprob: -11.377760887145996
    7. '(line' → logprob: -11.502760887145996
    8. '	lines' → logprob: -11.627760887145996
    9. 'tokens' → logprob: -11.877760887145996
    10. '(tokens' → logprob: -12.002760887145996

Token 1475: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2352385965641588e-05
    2. '(parts' → logprob: -12.500012397766113
    3. '           ' → logprob: -13.125012397766113
    4. '()' → logprob: -13.250012397766113
    5. '()
' → logprob: -13.375012397766113
    6. '.strip' → logprob: -14.000012397766113
    7. '.split' → logprob: -14.250012397766113
    8. '(' → logprob: -14.375012397766113
    9. '('').' → logprob: -15.250012397766113
    10. '               ' → logprob: -15.625012397766113

Token 1476: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06196768581867218
    2. 'split' → logprob: -2.811967611312866
    3. 'rstrip' → logprob: -18.311967849731445
    4. ' strip' → logprob: -18.561967849731445
    5. '.strip' → logprob: -18.561967849731445
    6. '_strip' → logprob: -20.186967849731445
    7. '(strip' → logprob: -20.811967849731445
    8. '_split' → logprob: -21.061967849731445
    9. ' split' → logprob: -21.061967849731445
    10. '-strip' → logprob: -21.436967849731445

Token 1477: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5500445365905762
    2. '()
' → logprob: -1.1750445365905762
    3. '()' → logprob: -2.675044536590576
    4. '(' → logprob: -3.175044536590576
    5. '(u' → logprob: -7.175044536590576
    6. '=' → logprob: -7.800044536590576
    7. '               ' → logprob: -8.050045013427734
    8. '       ' → logprob: -8.300045013427734
    9. '
' → logprob: -8.550045013427734
    10. '(
' → logprob: -8.675045013427734

Token 1478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10374465584754944
    2. 'u' → logprob: -2.3537447452545166
    3. ' u' → logprob: -5.7287445068359375
    4. '   ' → logprob: -8.353744506835938
    5. '       ' → logprob: -10.728744506835938
    6. '	u' → logprob: -12.478744506835938
    7. '(u' → logprob: -12.478744506835938
    8. 'e' → logprob: -13.353744506835938
    9. '               ' → logprob: -13.353744506835938
    10. '```' → logprob: -13.353744506835938

Token 1479: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.0029954127967357635
    2. '           ' → logprob: -5.877995491027832
    3. ' u' → logprob: -8.627995491027832
    4. '       ' → logprob: -12.127995491027832
    5. '   ' → logprob: -12.627995491027832
    6. '	u' → logprob: -13.752995491027832
    7. 'a' → logprob: -14.252995491027832
    8. 'p' → logprob: -15.752995491027832
    9. '               ' → logprob: -16.127994537353516
    10. 'i' → logprob: -16.127994537353516

Token 1480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3911275863647461
    2. '=' → logprob: -1.141127586364746
    3. '=int' → logprob: -6.016127586364746
    4. ' =' → logprob: -6.766127586364746
    5. ',u' → logprob: -7.766127586364746
    6. '           ' → logprob: -9.266127586364746
    7. '=u' → logprob: -10.391127586364746
    8. ' ,' → logprob: -10.766127586364746
    9. '=
' → logprob: -10.766127586364746
    10. ',int' → logprob: -10.766127586364746

Token 1481: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.704273118884885e-07
    2. ' v' → logprob: -14.250000953674316
    3. 'int' → logprob: -19.125
    4. '   ' → logprob: -22.625
    5. '
' → logprob: -22.875
    6. '           ' → logprob: -23.125
    7. '	v' → logprob: -23.25
    8. '=' → logprob: -24.25
    9. '       ' → logprob: -24.375
    10. '_v' → logprob: -24.625

Token 1482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0622493214905262
    2. ',' → logprob: -3.0622494220733643
    3. ' =' → logprob: -4.312249183654785
    4. '=int' → logprob: -8.812249183654785
    5. '=
' → logprob: -11.812249183654785
    6. ' ,' → logprob: -12.937249183654785
    7. '<|end|>' → logprob: -12.937249183654785
    8. 'int' → logprob: -14.187249183654785
    9. ',u' → logprob: -14.312249183654785
    10. ',int' → logprob: -14.437249183654785

Token 1483: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030853478237986565
    2. 'map' → logprob: -3.530853509902954
    3. ' int' → logprob: -7.030853271484375
    4. ' map' → logprob: -8.530853271484375
    5. '[int' → logprob: -10.780853271484375
    6. '(int' → logprob: -16.280853271484375
    7. '=int' → logprob: -17.655853271484375
    8. '<int' → logprob: -18.155853271484375
    9. 'ints' → logprob: -18.780853271484375
    10. '(map' → logprob: -19.030853271484375

Token 1484: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.000431861262768507
    2. 'parts' → logprob: -7.750432014465332
    3. ' parts' → logprob: -13.750432014465332
    4. '(' → logprob: -16.000431060791016
    5. '(
' → logprob: -16.875431060791016
    6. '(part' → logprob: -19.250431060791016
    7. '_parts' → logprob: -19.375431060791016
    8. ' (' → logprob: -19.500431060791016
    9. '(tokens' → logprob: -19.500431060791016
    10. 'Parts' → logprob: -20.500431060791016

Token 1485: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014820091892033815
    2. '(' → logprob: -7.001482009887695
    3. '(parts' → logprob: -7.626482009887695
    4. '0' → logprob: -10.501482009887695
    5. '),' → logprob: -10.501482009887695
    6. 'parts' → logprob: -10.876482009887695
    7. ' parts' → logprob: -13.001482009887695
    8. ')' → logprob: -13.251482009887695
    9. '   ' → logprob: -13.501482009887695
    10. ',' → logprob: -13.501482009887695

Token 1486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.000006675720215
    3. '1' → logprob: -14.500006675720215
    4. ' ' → logprob: -15.875006675720215
    5. '   ' → logprob: -17.62500762939453
    6. '
' → logprob: -19.00000762939453
    7. ')' → logprob: -20.12500762939453
    8. '(' → logprob: -20.50000762939453
    9. 'parts' → logprob: -21.00000762939453
    10. '       ' → logprob: -22.25000762939453

Token 1487: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -3.650518920039758e-06
    2. ',' → logprob: -13.375003814697266
    3. ')' → logprob: -14.000003814697266
    4. '],' → logprob: -14.625003814697266
    5. '           ' → logprob: -15.250003814697266
    6. ' ),' → logprob: -15.375003814697266
    7. '       ' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.500003814697266
    9. '},' → logprob: -18.000003814697266
    10. ',),' → logprob: -18.000003814697266

Token 1488: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048170737922192
    2. ' int' → logprob: -4.511048316955566
    3. '           ' → logprob: -16.13604736328125
    4. '[int' → logprob: -16.38604736328125
    5. '=int' → logprob: -16.51104736328125
    6. '(int' → logprob: -16.63604736328125
    7. '<int' → logprob: -17.13604736328125
    8. ':int' → logprob: -17.38604736328125
    9. 'intval' → logprob: -17.51104736328125
    10. ' ' → logprob: -18.88604736328125

Token 1489: '(parts' (ID: 102573)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.4773404002189636
    2. '(parts' → logprob: -0.9773404002189636
    3. ' parts' → logprob: -5.727340221405029
    4. '
' → logprob: -14.352340698242188
    5. '_parts' → logprob: -14.477340698242188
    6. '(' → logprob: -14.477340698242188
    7. '.parts' → logprob: -15.727340698242188
    8. '1' → logprob: -15.852340698242188
    9. ')' → logprob: -15.852340698242188
    10. ' ' → logprob: -16.727340698242188

Token 1490: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003619670169427991
    2. '[' → logprob: -5.62861967086792
    3. ' ' → logprob: -12.503619194030762
    4. '
' → logprob: -12.753619194030762
    5. '   ' → logprob: -12.878619194030762
    6. '(' → logprob: -12.878619194030762
    7. '```' → logprob: -12.878619194030762
    8. ')' → logprob: -13.003619194030762
    9. 'parts' → logprob: -13.878619194030762
    10. '(parts' → logprob: -15.503619194030762

Token 1491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -18.625
    5. 'parts' → logprob: -18.875
    6. '```' → logprob: -19.75
    7. '１' → logprob: -19.875
    8. '2' → logprob: -20.5
    9. '[' → logprob: -20.625
    10. ')' → logprob: -21.25

Token 1492: '])
' (ID: 5169)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.17719444632530212
    2. ')' → logprob: -2.427194356918335
    3. ',' → logprob: -2.677194356918335
    4. ')
' → logprob: -5.552194595336914
    5. '           ' → logprob: -6.677194595336914
    6. '<|end|>' → logprob: -9.677194595336914
    7. '       ' → logprob: -10.052194595336914
    8. ' ,' → logprob: -10.677194595336914
    9. '               ' → logprob: -11.052194595336914
    10. '          ' → logprob: -12.052194595336914

Token 1493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050670426338911057
    2. 'cost' → logprob: -3.0506703853607178
    3. ',' → logprob: -6.550670623779297
    4. ' cost' → logprob: -7.550670623779297
    5. '       ' → logprob: -9.425670623779297
    6. '   ' → logprob: -10.925670623779297
    7. '```' → logprob: -11.675670623779297
    8. '          ' → logprob: -12.550670623779297
    9. '(cost' → logprob: -12.550670623779297
    10. ',c' → logprob: -12.675670623779297

Token 1494: ' w' (ID: 286)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0011734402505680919
    2. ' cost' → logprob: -6.751173496246338
    3. 'c' → logprob: -13.25117301940918
    4. '           ' → logprob: -13.50117301940918
    5. '_cost' → logprob: -17.75117301940918
    6. '(cost' → logprob: -20.00117301940918
    7. 'Cost' → logprob: -20.37617301940918
    8. '
' → logprob: -20.75117301940918
    9. 'code' → logprob: -20.87617301940918
    10. '.cost' → logprob: -21.12617301940918

Token 1495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742230474948883
    2. ' =' → logprob: -0.9742230176925659
    3. '=int' → logprob: -8.974223136901855
    4. ',' → logprob: -11.099223136901855
    5. ' ' → logprob: -13.724223136901855
    6. '=
' → logprob: -14.349223136901855
    7. '   ' → logprob: -14.349223136901855
    8. '           ' → logprob: -14.474223136901855
    9. '    ' → logprob: -15.599223136901855
    10. 'w' → logprob: -15.599223136901855

Token 1496: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002036595979006961
    2. ' int' → logprob: -8.500204086303711
    3. '=int' → logprob: -16.12520408630371
    4. '[int' → logprob: -16.75020408630371
    5. '<int' → logprob: -17.62520408630371
    6. '(int' → logprob: -17.62520408630371
    7. ':int' → logprob: -18.87520408630371
    8. '           ' → logprob: -19.62520408630371
    9. '	int' → logprob: -20.62520408630371
    10. ']int' → logprob: -20.87520408630371

Token 1497: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.306760805164231e-05
    2. 'parts' → logprob: -11.25001335144043
    3. ' parts' → logprob: -17.00001335144043
    4. '(' → logprob: -19.00001335144043
    5. '(part' → logprob: -19.25001335144043
    6. 'Parts' → logprob: -20.12501335144043
    7. '(
' → logprob: -20.37501335144043
    8. ' (' → logprob: -20.62501335144043
    9. '(points' → logprob: -21.00001335144043
    10. '(int' → logprob: -22.25001335144043

Token 1498: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5672946572303772
    2. '[' → logprob: -1.3172945976257324
    3. '(parts' → logprob: -1.8172945976257324
    4. '2' → logprob: -6.067294597625732
    5. 'parts' → logprob: -8.44229507446289
    6. ' parts' → logprob: -9.56729507446289
    7. '_parts' → logprob: -12.19229507446289
    8. '   ' → logprob: -13.06729507446289
    9. '(
' → logprob: -13.44229507446289
    10. ']' → logprob: -13.56729507446289

Token 1499: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'parts' → logprob: -16.375
    3. '   ' → logprob: -17.5
    4. '3' → logprob: -17.875
    5. '[' → logprob: -18.25
    6. '           ' → logprob: -19.625
    7. '-' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. '       ' → logprob: -20.375

Token 1500: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11971843987703323
    2. ')' → logprob: -2.369718551635742
    3. '           ' → logprob: -4.369718551635742
    4. ',' → logprob: -5.119718551635742
    5. '),' → logprob: -7.494718551635742
    6. '       ' → logprob: -9.744718551635742
    7. ')
' → logprob: -10.619718551635742
    8. '               ' → logprob: -11.494718551635742
    9. ' )
' → logprob: -11.619718551635742
    10. ');' → logprob: -12.119718551635742

Token 1501: '           ' (ID: 352)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.6529679298400879
    2. '           ' → logprob: -0.9029679298400879
    3. 'c' → logprob: -3.027967929840088
    4. ' company' → logprob: -4.527967929840088
    5. ' c' → logprob: -4.902967929840088
    6. 'comp' → logprob: -5.027967929840088
    7. 'com' → logprob: -7.402967929840088
    8. ' comp' → logprob: -9.40296745300293
    9. ',' → logprob: -9.77796745300293
    10. '       ' → logprob: -10.27796745300293

Token 1502: ' l' (ID: 305)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.08197257667779922
    2. 'c' → logprob: -2.581972599029541
    3. 'comp' → logprob: -5.956972599029541
    4. '           ' → logprob: -8.331972122192383
    5. ' company' → logprob: -9.081972122192383
    6. 'co' → logprob: -10.206972122192383
    7. 'com' → logprob: -10.456972122192383
    8. 'cmp' → logprob: -10.456972122192383
    9. ' c' → logprob: -10.956972122192383
    10. 's' → logprob: -12.456972122192383

Token 1503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2605564296245575
    2. 'abel' → logprob: -2.13555645942688
    3. 'company' → logprob: -2.63555645942688
    4. '=' → logprob: -4.385556221008301
    5. 'e' → logprob: -5.135556221008301
    6. '_company' → logprob: -5.635556221008301
    7. '           ' → logprob: -5.760556221008301
    8. '   ' → logprob: -6.010556221008301
    9. '       ' → logprob: -6.260556221008301
    10. 'etter' → logprob: -6.635556221008301

Token 1504: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.10024624317884445
    2. ' parts' → logprob: -2.3502461910247803
    3. 'str' → logprob: -10.35024642944336
    4. '(parts' → logprob: -12.10024642944336
    5. ' str' → logprob: -13.35024642944336
    6. 'part' → logprob: -15.47524642944336
    7. 'int' → logprob: -16.72524642944336
    8. ''' → logprob: -16.72524642944336
    9. ' ' → logprob: -16.72524642944336
    10. '.parts' → logprob: -17.10024642944336

Token 1505: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01604187674820423
    2. '3' → logprob: -4.1410417556762695
    3. '2' → logprob: -12.64104175567627
    4. '(' → logprob: -13.01604175567627
    5. '=' → logprob: -13.76604175567627
    6. '4' → logprob: -15.01604175567627
    7. '```' → logprob: -15.76604175567627
    8. '[-' → logprob: -15.89104175567627
    9. 'ype' → logprob: -16.016042709350586
    10. '   ' → logprob: -16.891042709350586

Token 1506: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.941850526549388e-06
    2. '-' → logprob: -12.625007629394531
    3. '2' → logprob: -13.250007629394531
    4. '[' → logprob: -13.500007629394531
    5. 'parts' → logprob: -13.750007629394531
    6. '
' → logprob: -16.62500762939453
    7. '   ' → logprob: -17.12500762939453
    8. 'str' → logprob: -18.00000762939453
    9. '[-' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.25000762939453

Token 1507: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5388721227645874
    2. ')
' → logprob: -1.1638721227645874
    3. '])
' → logprob: -2.913872241973877
    4. ']' → logprob: -3.288872241973877
    5. ')' → logprob: -5.788872241973877
    6. '[' → logprob: -5.913872241973877
    7. '       ' → logprob: -6.038872241973877
    8. '           ' → logprob: -6.163872241973877
    9. '])' → logprob: -6.413872241973877
    10. '
' → logprob: -8.663871765136719

Token 1508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.179569077678025e-05
    2. '       ' → logprob: -11.375041961669922
    3. 'pro' → logprob: -11.375041961669922
    4. ',' → logprob: -12.375041961669922
    5. '            
' → logprob: -12.500041961669922
    6. '
' → logprob: -12.625041961669922
    7. 'proposal' → logprob: -13.625041961669922
    8. '   ' → logprob: -13.750041961669922
    9. '               ' → logprob: -13.875041961669922
    10. ' =' → logprob: -13.875041961669922

Token 1509: ' proposals' (ID: 43772)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6894101500511169
    2. 'proposal' → logprob: -1.0644102096557617
    3. 'pro' → logprob: -1.9394102096557617
    4. 'p' → logprob: -5.439410209655762
    5. ' proposal' → logprob: -5.939410209655762
    6. ' proposals' → logprob: -7.189410209655762
    7. '       ' → logprob: -7.189410209655762
    8. 'prop' → logprob: -7.564410209655762
    9. ' p' → logprob: -8.939410209655762
    10. '
' → logprob: -9.189410209655762

Token 1510: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014215784904081374
    2. '.' → logprob: -8.875142097473145
    3. 'append' → logprob: -13.750142097473145
    4. ' .' → logprob: -14.125142097473145
    5. '.app' → logprob: -15.500142097473145
    6. '_append' → logprob: -15.750142097473145
    7. '.extend' → logprob: -17.00014305114746
    8. '=' → logprob: -17.75014305114746
    9. '.ap' → logprob: -17.87514305114746
    10. '.
' → logprob: -18.00014305114746

Token 1511: '(' (ID: 7)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.16245371103286743
    2. 'Island' → logprob: -1.9124536514282227
    3. ' Island' → logprob: -6.662453651428223
    4. '(' → logprob: -7.162453651428223
    5. ' Edge' → logprob: -8.912453651428223
    6. '           ' → logprob: -10.662453651428223
    7. 'Is' → logprob: -11.537453651428223
    8. '   ' → logprob: -12.537453651428223
    9. '(Is' → logprob: -14.537453651428223
    10. '       ' → logprob: -14.787453651428223

Token 1512: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.01416398212313652
    2. 'Island' → logprob: -4.264163970947266
    3. ' Island' → logprob: -15.389163970947266
    4. ' Edge' → logprob: -15.514163970947266
    5. '   ' → logprob: -16.639163970947266
    6. '       ' → logprob: -19.139163970947266
    7. '           ' → logprob: -19.389163970947266
    8. 'is' → logprob: -19.389163970947266
    9. ')' → logprob: -20.639163970947266
    10. '
' → logprob: -20.764163970947266

Token 1513: 'Proposal' (ID: 79001)
  Prédit: 'Proposal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Proposal' → logprob: -6.742448022123426e-05
    2. '(u' → logprob: -9.625067710876465
    3. 'Pro' → logprob: -13.875067710876465
    4. 'proposal' → logprob: -15.250067710876465
    5. '[u' → logprob: -16.87506675720215
    6. ' Proposal' → logprob: -18.12506675720215
    7. '(' → logprob: -18.25006675720215
    8. ')' → logprob: -18.50006675720215
    9. '```' → logprob: -18.62506675720215
    10. '(l' → logprob: -19.00006675720215

Token 1514: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.5776860184123507e-06
    2. '           ' → logprob: -13.37500286102295
    3. 'u' → logprob: -14.75000286102295
    4. '(' → logprob: -15.25000286102295
    5. '(
' → logprob: -15.50000286102295
    6. '               ' → logprob: -16.250001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '                   ' → logprob: -18.125001907348633
    9. '
' → logprob: -18.500001907348633
    10. ' u' → logprob: -18.625001907348633

Token 1515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010506733087822795
    2. ',v' → logprob: -6.8760504722595215
    3. ' ,' → logprob: -11.25105094909668
    4. '           ' → logprob: -13.12605094909668
    5. ',
' → logprob: -13.37605094909668
    6. ',u' → logprob: -14.62605094909668
    7. 'v' → logprob: -14.87605094909668
    8. '   ' → logprob: -16.25105094909668
    9. '               ' → logprob: -16.50105094909668
    10. '       ' → logprob: -16.50105094909668

Token 1516: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.836499985889532e-05
    2. ' v' → logprob: -9.7500581741333
    3. ',v' → logprob: -18.875059127807617
    4. '
' → logprob: -21.000059127807617
    5. '	v' → logprob: -21.375059127807617
    6. '           ' → logprob: -21.500059127807617
    7. ')v' → logprob: -21.750059127807617
    8. '(v' → logprob: -22.375059127807617
    9. '   ' → logprob: -22.750059127807617
    10. 'vq' → logprob: -23.750059127807617

Token 1517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005521053913980722
    2. ',l' → logprob: -5.255520820617676
    3. '           ' → logprob: -8.505520820617676
    4. ' ,' → logprob: -9.755520820617676
    5. 'l' → logprob: -11.130520820617676
    6. '               ' → logprob: -13.505520820617676
    7. ' l' → logprob: -13.630520820617676
    8. '<|end|>' → logprob: -13.630520820617676
    9. ',len' → logprob: -14.005520820617676
    10. ',u' → logprob: -14.130520820617676

Token 1518: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00023286080977413803
    2. ' w' → logprob: -8.375232696533203
    3. 'l' → logprob: -13.750232696533203
    4. '           ' → logprob: -14.750232696533203
    5. '   ' → logprob: -14.875232696533203
    6. '
' → logprob: -15.125232696533203
    7. '       ' → logprob: -16.375232696533203
    8. '    ' → logprob: -17.375232696533203
    9. ' ' → logprob: -18.375232696533203
    10. 'int' → logprob: -18.375232696533203

Token 1519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040956162847578526
    2. ',l' → logprob: -5.504095554351807
    3. '           ' → logprob: -11.504096031188965
    4. ' ,' → logprob: -12.129096031188965
    5. 'l' → logprob: -14.504096031188965
    6. ',
' → logprob: -15.254096031188965
    7. ',ll' → logprob: -15.379096031188965
    8. '   ' → logprob: -15.879096031188965
    9. '               ' → logprob: -15.879096031188965
    10. '       ' → logprob: -16.50409507751465

Token 1520: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.511406809295295e-06
    2. '           ' → logprob: -12.625006675720215
    3. ' l' → logprob: -12.750006675720215
    4. '                   ' → logprob: -16.6250057220459
    5. '               ' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.8750057220459
    7. '                                   ' → logprob: -18.2500057220459
    8. '                           ' → logprob: -18.7500057220459
    9. '       ' → logprob: -18.8750057220459
    10. '                       ' → logprob: -19.2500057220459

Token 1521: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005772719159722328
    2. ')' → logprob: -5.255772590637207
    3. '))
' → logprob: -7.630772590637207
    4. '           ' → logprob: -10.380772590637207
    5. '       ' → logprob: -11.005772590637207
    6. ')
' → logprob: -13.255772590637207
    7. ')))' → logprob: -13.505772590637207
    8. '   ' → logprob: -14.255772590637207
    9. '               ' → logprob: -14.380772590637207
    10. '));' → logprob: -15.380772590637207

Token 1522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04917065426707268
    2. '   ' → logprob: -3.299170732498169
    3. '
' → logprob: -5.42417049407959
    4. 'city' → logprob: -5.42417049407959
    5. ' city' → logprob: -7.04917049407959
    6. '        
' → logprob: -7.79917049407959
    7. '<|end|>' → logprob: -8.54917049407959
    8. '    
' → logprob: -8.67417049407959
    9. 'is' → logprob: -8.79917049407959
    10. '```' → logprob: -9.04917049407959

Token 1523: ' city' (ID: 5030)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.198592409491539
    2. 'city' (adapté à ' city') → logprob: -1.8235924243927002
    3. 'ic' → logprob: -4.823592185974121
    4. 'is' → logprob: -5.323592185974121
    5. '   ' → logprob: -5.698592185974121
    6. ' city' → logprob: -6.448592185974121
    7. 'solution' → logprob: -8.448592185974121
    8. ' island' → logprob: -8.698592185974121
    9. '
' → logprob: -9.073592185974121
    10. 'plan' → logprob: -9.823592185974121

Token 1524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017129914835095406
    2. '=' → logprob: -4.142129898071289
    3. '.City' → logprob: -7.892129898071289
    4. '.city' → logprob: -8.392129898071289
    5. '.' → logprob: -8.642129898071289
    6. '   ' → logprob: -9.267129898071289
    7. '       ' → logprob: -9.767129898071289
    8. '.minimum' → logprob: -9.892129898071289
    9. '_city' → logprob: -11.392129898071289
    10. '.Minimum' → logprob: -11.642129898071289

Token 1525: ' Island' (ID: 14226)
  Prédit: 'Island'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Island' → logprob: -0.018150413408875465
    2. ' Island' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.018150329589844
    4. 'Is' → logprob: -16.143150329589844
    5. '       ' → logprob: -16.518150329589844
    6. '
' → logprob: -16.643150329589844
    7. 'City' → logprob: -16.893150329589844
    8. 'is' → logprob: -18.268150329589844
    9. '    ' → logprob: -18.393150329589844
    10. '```' → logprob: -18.643150329589844

Token 1526: 'City' (ID: 15764)
  Prédit: 'City'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -4.36574100604048e-06
    2. '.City' → logprob: -12.625004768371582
    3. '.city' → logprob: -14.875004768371582
    4. 'city' → logprob: -16.000003814697266
    5. '.' → logprob: -16.250003814697266
    6. '_city' → logprob: -16.500003814697266
    7. ' City' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.875003814697266
    9. '       ' → logprob: -17.750003814697266
    10. '(city' → logprob: -18.000003814697266

Token 1527: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.578184497309849e-05
    2. 'n' → logprob: -9.750085830688477
    3. '(' → logprob: -10.875085830688477
    4. '       ' → logprob: -12.000085830688477
    5. '(
' → logprob: -13.500085830688477
    6. ' (' → logprob: -15.125085830688477
    7. '   ' → logprob: -15.125085830688477
    8. 'Island' → logprob: -16.375085830688477
    9. ' n' → logprob: -16.625085830688477
    10. '
' → logprob: -16.625085830688477

Token 1528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002271820092573762
    2. ',n' → logprob: -6.12727165222168
    3. '       ' → logprob: -10.62727165222168
    4. ' ,' → logprob: -11.25227165222168
    5. '   ' → logprob: -11.37727165222168
    6. 'city' → logprob: -11.37727165222168
    7. ',c' → logprob: -11.75227165222168
    8. 'n' → logprob: -12.12727165222168
    9. ',
' → logprob: -12.62727165222168
    10. 'pro' → logprob: -13.25227165222168

Token 1529: ' proposals' (ID: 43772)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.018826356157660484
    2. 'k' → logprob: -4.018826484680176
    3. ' proposals' → logprob: -7.393826484680176
    4. '           ' → logprob: -11.018826484680176
    5. '       ' → logprob: -11.143826484680176
    6. 'city' → logprob: -11.268826484680176
    7. ' k' → logprob: -12.018826484680176
    8. 'm' → logprob: -12.643826484680176
    9. 'proposal' → logprob: -12.768826484680176
    10. '   ' → logprob: -12.893826484680176

Token 1530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018411019118502736
    2. ',k' → logprob: -8.625184059143066
    3. ' ,' → logprob: -12.500184059143066
    4. ',
' → logprob: -15.375184059143066
    5. ',K' → logprob: -15.375184059143066
    6. '       ' → logprob: -16.000185012817383
    7. ',n' → logprob: -16.625185012817383
    8. ',c' → logprob: -16.750185012817383
    9. '<|end|>' → logprob: -17.125185012817383
    10. '<|end|>' → logprob: -17.875185012817383

Token 1531: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.941850526549388e-06
    2. ' k' → logprob: -11.750007629394531
    3. '       ' → logprob: -21.50000762939453
    4. '{k' → logprob: -22.37500762939453
    5. '	k' → logprob: -22.75000762939453
    6. '           ' → logprob: -23.87500762939453
    7. '   ' → logprob: -24.87500762939453
    8. '.k' → logprob: -26.00000762939453
    9. '_k' → logprob: -26.00000762939453
    10. '"k' → logprob: -26.12500762939453

Token 1532: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.27399393916130066
    2. ')' → logprob: -1.523993968963623
    3. '       ' → logprob: -4.023993968963623
    4. '   ' → logprob: -6.273993968963623
    5. 'minimum' → logprob: -6.898993968963623
    6. '.minimum' → logprob: -8.648993492126465
    7. '```' → logprob: -9.273993492126465
    8. '<|end|>' → logprob: -9.273993492126465
    9. '
' → logprob: -9.398993492126465
    10. ').' → logprob: -9.523993492126465

Token 1533: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23918414115905762
    2. 'result' → logprob: -1.8641841411590576
    3. '   ' → logprob: -3.3641841411590576
    4. 'answer' → logprob: -4.489184379577637
    5. 'res' → logprob: -5.739184379577637
    6. '       ' → logprob: -5.864184379577637
    7. '
' → logprob: -5.864184379577637
    8. '```' → logprob: -6.364184379577637
    9. 'cost' → logprob: -6.989184379577637
    10. 'ans' → logprob: -9.364184379577637

Token 1534: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014240257441997528
    2. 'result' → logprob: -4.639240264892578
    3. 'res' (adapté à ' res') → logprob: -5.764240264892578
    4. 'answer' → logprob: -7.639240264892578
    5. ' print' → logprob: -7.764240264892578
    6. '       ' → logprob: -8.139240264892578
    7. '   ' → logprob: -9.514240264892578
    8. '
' → logprob: -10.514240264892578
    9. ' result' → logprob: -11.139240264892578
    10. 'ans' → logprob: -11.764240264892578

Token 1535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057381339371204376
    2. 'ult' → logprob: -3.3073813915252686
    3. '=' → logprob: -4.8073811531066895
    4. 'ults' → logprob: -5.5573811531066895
    5. '   ' → logprob: -5.6823811531066895
    6. '=res' → logprob: -6.3073811531066895
    7. ' ' → logprob: -7.6823811531066895
    8. '       ' → logprob: -8.057381629943848
    9. 'ault' → logprob: -8.807381629943848
    10. '.append' → logprob: -8.932381629943848

Token 1536: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.16022473573684692
    2. ' city' → logprob: -1.9102246761322021
    3. '(city' → logprob: -15.035224914550781
    4. '   ' → logprob: -15.535224914550781
    5. '.city' → logprob: -16.78522491455078
    6. '       ' → logprob: -18.03522491455078
    7. '_city' → logprob: -19.28522491455078
    8. 'cities' → logprob: -19.41022491455078
    9. 'City' → logprob: -19.66022491455078
    10. '```' → logprob: -19.78522491455078

Token 1537: '.minimum' (ID: 126839)
  Prédit: '.minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.minimum' → logprob: -9.150362166110426e-05
    2. 'minimum' → logprob: -9.375091552734375
    3. '.' → logprob: -12.250091552734375
    4. '.maximum' → logprob: -14.250091552734375
    5. ' .' → logprob: -15.375091552734375
    6. '.m' → logprob: -15.375091552734375
    7. '   ' → logprob: -15.500091552734375
    8. ' minimum' → logprob: -15.625091552734375
    9. '     ' → logprob: -15.875091552734375
    10. '.Minimum' → logprob: -16.125091552734375

Token 1538: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. '_code' → logprob: -17.0
    3. 'cost' → logprob: -17.875
    4. '_COST' → logprob: -19.125
    5. 'Cost' → logprob: -20.625
    6. '_' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '_co' → logprob: -21.25
    9. '_plan' → logprob: -21.875
    10. '\' → logprob: -22.0

Token 1539: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -4.8351892473874614e-05
    2. 'plan' → logprob: -10.000048637390137
    3. 'Plan' → logprob: -13.000048637390137
    4. '       ' → logprob: -15.625048637390137
    5. '
' → logprob: -16.50004768371582
    6. '_pl' → logprob: -16.62504768371582
    7. '_PLAN' → logprob: -16.75004768371582
    8. '           ' → logprob: -16.87504768371582
    9. '   ' → logprob: -17.00004768371582
    10. '```' → logprob: -17.12504768371582

Token 1540: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053382471203804016
    2. 'print' → logprob: -3.053382396697998
    3. 'if' → logprob: -5.803382396697998
    4. '   ' → logprob: -6.928382396697998
    5. '
' → logprob: -8.178382873535156
    6. ' if' → logprob: -8.178382873535156
    7. ' print' → logprob: -9.178382873535156
    8. '```' → logprob: -9.303382873535156
    9. '<|end|>' → logprob: -11.553382873535156
    10. '(print' → logprob: -12.928382873535156

Token 1541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.153240367770195
    2. '   ' → logprob: -2.153240442276001
    3. 'print' → logprob: -3.653240442276001
    4. 'if' → logprob: -10.278240203857422
    5. '
' → logprob: -10.903240203857422
    6. '```' → logprob: -12.528240203857422
    7. ' print' → logprob: -13.153240203857422
    8. '           ' → logprob: -14.278240203857422
    9. '        
' → logprob: -14.278240203857422
    10. '    
' → logprob: -14.278240203857422

Token 1542: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4886542856693268
    2. '       ' → logprob: -0.9886542558670044
    3. 'if' → logprob: -4.238654136657715
    4. '   ' → logprob: -10.488654136657715
    5. '```' → logprob: -11.988654136657715
    6. ' print' → logprob: -12.113654136657715
    7. ' if' → logprob: -12.863654136657715
    8. '
' → logprob: -13.738654136657715
    9. '        
' → logprob: -15.363654136657715
    10. '``' → logprob: -15.363654136657715

Token 1543: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -5.860340752406046e-05
    2. 'res' → logprob: -9.7500581741333
    3. '(' → logprob: -15.2500581741333
    4. '(f' → logprob: -18.500059127807617
    5. ' res' → logprob: -19.625059127807617
    6. '$res' → logprob: -19.625059127807617
    7. '('' → logprob: -19.750059127807617
    8. '(result' → logprob: -20.000059127807617
    9. '(
' → logprob: -21.000059127807617
    10. '	res' → logprob: -21.250059127807617

Token 1544: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005110780242830515
    2. '())' → logprob: -5.380110740661621
    3. '()' → logprob: -7.630110740661621
    4. ')
' → logprob: -13.380110740661621
    5. ' )' → logprob: -13.755110740661621
    6. '   ' → logprob: -13.880110740661621
    7. '       ' → logprob: -14.505110740661621
    8. '()
' → logprob: -15.755110740661621
    9. '(' → logprob: -15.880110740661621
    10. '())
' → logprob: -16.505111694335938

Token 1545: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0031777136027812958
    2. ' res' → logprob: -5.753177642822266
    3. '(res' → logprob: -18.878177642822266
    4. '$res' → logprob: -19.378177642822266
    5. '_res' → logprob: -20.003177642822266
    6. '
' → logprob: -20.128177642822266
    7. '	res' → logprob: -20.253177642822266
    8. '   ' → logprob: -20.503177642822266
    9. 'Res' → logprob: -21.628177642822266
    10. '=res' → logprob: -21.878177642822266

Token 1546: ' is' (ID: 382)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3048110902309418
    2. ' !=' → logprob: -1.5548111200332642
    3. 'is' → logprob: -3.6798110008239746
    4. ' is' → logprob: -4.179811000823975
    5. '!=-' → logprob: -4.554811000823975
    6. '>=' → logprob: -8.179811477661133
    7. 'else' → logprob: -9.304811477661133
    8. '==' → logprob: -10.054811477661133
    9. '>' → logprob: -11.679811477661133
    10. '()!=' → logprob: -11.929811477661133

Token 1547: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.034601591527462006
    2. ' not' → logprob: -3.4096016883850098
    3. '!=' → logprob: -7.03460168838501
    4. '!=-' → logprob: -10.284601211547852
    5. 'res' → logprob: -11.284601211547852
    6. '!' → logprob: -11.784601211547852
    7. 'None' → logprob: -11.784601211547852
    8. '   ' → logprob: -12.534601211547852
    9. '!==' → logprob: -13.159601211547852
    10. ' !=' → logprob: -13.409601211547852

Token 1548: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03809909150004387
    2. '-' → logprob: -3.2880990505218506
    3. ' None' → logprob: -9.78809928894043
    4. '-none' → logprob: -14.28809928894043
    5. 'False' → logprob: -14.91309928894043
    6. ' -' → logprob: -15.28809928894043
    7. '   ' → logprob: -15.78809928894043
    8. 'print' → logprob: -16.91309928894043
    9. '-not' → logprob: -17.03809928894043
    10. 'none' → logprob: -17.16309928894043

Token 1549: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12697525322437286
    2. ' else' → logprob: -2.1269752979278564
    3. 'and' → logprob: -10.001975059509277
    4. ' and' → logprob: -13.376975059509277
    5. '   ' → logprob: -15.876975059509277
    6. '    ' → logprob: -16.626976013183594
    7. '        ' → logprob: -17.126976013183594
    8. '       ' → logprob: -17.376976013183594
    9. '```' → logprob: -17.376976013183594
    10. ' ' → logprob: -18.001976013183594

Token 1550: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006875330000184476
    2. '"' → logprob: -7.500687599182129
    3. '"-' → logprob: -9.500687599182129
    4. ' -' → logprob: -10.625687599182129
    5. '   ' → logprob: -11.250687599182129
    6. '"No' → logprob: -11.375687599182129
    7. '-im' → logprob: -13.000687599182129
    8. ''-' → logprob: -13.375687599182129
    9. ''' → logprob: -13.500687599182129
    10. '-N' → logprob: -14.375687599182129

Token 1551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '```' → logprob: -19.75
    4. '   ' → logprob: -19.875
    5. '2' → logprob: -20.125
    6. '-' → logprob: -21.25
    7. 'inf' → logprob: -21.75
    8. '１' → logprob: -21.75
    9. '``' → logprob: -21.875
    10. 'print' → logprob: -22.0

Token 1552: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004039785999339074
    2. '<|end|>' → logprob: -7.875403881072998
    3. '())' → logprob: -11.250404357910156
    4. ')
' → logprob: -12.625404357910156
    5. '```' → logprob: -12.750404357910156
    6. ' )' → logprob: -13.625404357910156
    7. ')}' → logprob: -14.625404357910156
    8. '()' → logprob: -14.750404357910156
    9. '<|end|>' → logprob: -15.000404357910156
    10. '')' → logprob: -15.125404357910156

Token 1553: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.9888433093437925e-05
    2. '```' → logprob: -10.625040054321289
    3. ' if' → logprob: -11.125040054321289
    4. '#' → logprob: -15.250040054321289
    5. '<|end|>' → logprob: -15.375040054321289
    6. '__' → logprob: -16.00004005432129
    7. '
' → logprob: -17.00004005432129
    8. 'import' → logprob: -17.25004005432129
    9. '#if' → logprob: -17.25004005432129
    10. 'If' → logprob: -17.25004005432129

Token 1554: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006716079078614712
    2. ' __' → logprob: -5.006716251373291
    3. 'name' → logprob: -14.381715774536133
    4. '.__' → logprob: -16.881715774536133
    5. '/__' → logprob: -17.131715774536133
    6. '```' → logprob: -17.631715774536133
    7. '___' → logprob: -17.756715774536133
    8. '_name' → logprob: -17.881715774536133
    9. ' ' → logprob: -18.131715774536133
    10. ''' → logprob: -18.256715774536133

Token 1555: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004813630599528551
    2. '==' → logprob: -6.2548136711120605
    3. 'name' → logprob: -6.2548136711120605
    4. ' ==' → logprob: -7.1298136711120605
    5. 'if' → logprob: -9.629813194274902
    6. '=="' → logprob: -10.254813194274902
    7. '```' → logprob: -10.754813194274902
    8. ' __' → logprob: -11.254813194274902
    9. 'main' → logprob: -12.004813194274902
    10. '__
' → logprob: -13.004813194274902

Token 1556: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0018558192532509565
    2. '==' → logprob: -6.376855850219727
    3. '=="' → logprob: -9.251855850219727
    4. '__.__' → logprob: -10.626855850219727
    5. ' ==' → logprob: -10.876855850219727
    6. '__":
' → logprob: -12.876855850219727
    7. '=='' → logprob: -13.001855850219727
    8. '```' → logprob: -13.251855850219727
    9. '____' → logprob: -13.876855850219727
    10. '__('' → logprob: -14.001855850219727

Token 1557: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05536570027470589
    2. ' ==' → logprob: -3.680365800857544
    3. '__' → logprob: -3.930365800857544
    4. '=="' → logprob: -4.930365562438965
    5. '=='' → logprob: -6.430365562438965
    6. '==
' → logprob: -9.305365562438965
    7. '```' → logprob: -9.805365562438965
    8. '()==' → logprob: -12.430365562438965
    9. 'main' → logprob: -12.555365562438965
    10. '=' → logprob: -12.680365562438965

Token 1558: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0788951888680458
    2. ''' → logprob: -2.578895092010498
    3. '__' → logprob: -12.203895568847656
    4. ' "__' → logprob: -15.203895568847656
    5. ' '__' → logprob: -17.578895568847656
    6. '   ' → logprob: -18.203895568847656
    7. 'main' → logprob: -19.078895568847656
    8. ''"' → logprob: -19.328895568847656
    9. '"'' → logprob: -19.953895568847656
    10. '"name' → logprob: -20.328895568847656

Token 1559: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2519400119781494
    2. 'main' → logprob: -1.5019400119781494
    3. '__':
' → logprob: -12.62693977355957
    4. '_main' → logprob: -12.75193977355957
    5. ' main' → logprob: -13.37693977355957
    6. 'name' → logprob: -13.62693977355957
    7. '==' → logprob: -14.75193977355957
    8. ''' → logprob: -14.87693977355957
    9. '___' → logprob: -15.25193977355957
    10. ' __' → logprob: -15.50193977355957

Token 1560: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06273836642503738
    2. '__' → logprob: -2.8127384185791016
    3. '__":
' → logprob: -7.187738418579102
    4. '__
' → logprob: -12.812738418579102
    5. '('__' → logprob: -12.937738418579102
    6. '==' → logprob: -13.312738418579102
    7. '__:' → logprob: -13.312738418579102
    8. '__.' → logprob: -13.562738418579102
    9. '__.__' → logprob: -13.687738418579102
    10. '__('' → logprob: -14.062738418579102

Token 1561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004733199253678322
    2. 'main' → logprob: -5.379733085632324
    3. '	main' → logprob: -9.379733085632324
    4. ' main' → logprob: -11.129733085632324
    5. '   ' → logprob: -11.504733085632324
    6. 'import' → logprob: -13.629733085632324
    7. '__' → logprob: -14.129733085632324
    8. '```' → logprob: -14.379733085632324
    9. '_main' → logprob: -15.004733085632324
    10. '    
' → logprob: -15.004733085632324

Token 1562: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '   ' → logprob: -19.5
    4. '	main' → logprob: -19.5
    5. 'import' → logprob: -20.0
    6. '_main' → logprob: -23.625
    7. '
' → logprob: -24.75
    8. '(main' → logprob: -25.125
    9. '.main' → logprob: -25.25
    10. '__' → logprob: -25.75

Token 1563: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1561
Tokens correctement prédits (1ère position, stricte): 575
Tokens correctement prédits (1ère position, avec adaptation): 640
Tokens correctement prédits (top 10): 1238
Précision stricte (1ère position): 36.84%
Précision adaptée (1ère position): 41.00%
Précision (top 10): 79.31%
================================================================================
