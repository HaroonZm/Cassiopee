================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
def main():
    n = int(input())
    r = list(map(float, input().split()))
    x = [0.0]*n
    for i in range(1,n):
        dist = 0.0
        for j in range(i-1,-1,-1):
            dx = math.sqrt((r[i]+r[j])**2 - (r[i]-r[j])**2)
            dist = max(dist, x[j]+dx)
        x[i] = dist
    left = min(x[i]-r[i] for i in range(n))
    right = max(x[i]+r[i] for i in range(n))
    print("{:.8f}".format(right-left))
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005013990215957165
    2. '\n' → logprob: -6.380013942718506
    3. '\' → logprob: -6.755013942718506
    4. '```' → logprob: -7.005013942718506
    5. '<|end|>' → logprob: -7.880013942718506
    6. 'import' → logprob: -8.130014419555664
    7. '.\' → logprob: -9.505014419555664
    8. '.pi' → logprob: -10.005014419555664
    9. '.
' → logprob: -10.130014419555664
    10. '.

' → logprob: -10.255014419555664

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09676574170589447
    2. ' sqrt' → logprob: -3.4717657566070557
    3. ' math' → logprob: -3.7217657566070557
    4. ' factorial' → logprob: -4.096765518188477
    5. ' calculate' → logprob: -4.471765518188477
    6. ' space' → logprob: -6.221765518188477
    7. ' f' → logprob: -6.971765518188477
    8. ' pow' → logprob: -6.971765518188477
    9. ' cube' → logprob: -7.221765518188477
    10. ' factor' → logprob: -7.471765518188477

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005172681529074907
    2. '(:' → logprob: -5.3801727294921875
    3. '():' → logprob: -8.130172729492188
    4. ':' → logprob: -8.880172729492188
    5. '(
' → logprob: -10.005172729492188
    6. ' (' → logprob: -10.380172729492188
    7. '((' → logprob: -12.255172729492188
    8. '(":' → logprob: -12.255172729492188
    9. '```' → logprob: -12.255172729492188
    10. '(`' → logprob: -12.380172729492188

Token 6: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405347347259521
    2. '   ' → logprob: -0.9155347347259521
    3. '    ' → logprob: -5.040534973144531
    4. ' ' → logprob: -5.415534973144531
    5. '\' → logprob: -6.915534973144531
    6. '    
' → logprob: -7.540534973144531
    7. ':' → logprob: -7.540534973144531
    8. ' (' → logprob: -7.665534973144531
    9. ')' → logprob: -7.915534973144531
    10. ''' → logprob: -8.040534973144531

Token 7: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.147265076637268
    2. '   ' → logprob: -1.897265076637268
    3. ' ' → logprob: -2.1472649574279785
    4. 'result' → logprob: -2.3972649574279785
    5. 'r' → logprob: -2.6472649574279785
    6. 'print' → logprob: -3.0222649574279785
    7. 'n' (adapté à ' n') → logprob: -3.2722649574279785
    8. 's' → logprob: -3.3972649574279785
    9. 'a' → logprob: -3.5222649574279785
    10. 'return' → logprob: -3.7722649574279785

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19416218996047974
    2. ' ' → logprob: -2.194162130355835
    3. '=' → logprob: -2.944162130355835
    4. '_' → logprob: -5.069162368774414
    5. '.' → logprob: -6.819162368774414
    6. '   ' → logprob: -6.819162368774414
    7. '  ' → logprob: -6.944162368774414
    8. ')' → logprob: -7.319162368774414
    9. ',' → logprob: -7.569162368774414
    10. '_space' → logprob: -8.194162368774414

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04408305883407593
    2. ' ' → logprob: -3.4190831184387207
    3. 'int' → logprob: -4.669083118438721
    4. '10' → logprob: -7.669083118438721
    5. ' input' → logprob: -9.044082641601562
    6. '0' → logprob: -9.669082641601562
    7. '5' → logprob: -9.669082641601562
    8. '20' → logprob: -9.794082641601562
    9. ' float' → logprob: -9.794082641601562
    10. '1' → logprob: -9.919082641601562

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000284696085145697
    2. '('' → logprob: -9.000285148620605
    3. ''' → logprob: -10.250285148620605
    4. '```' → logprob: -10.250285148620605
    5. ' (' → logprob: -10.875285148620605
    6. '`' → logprob: -11.000285148620605
    7. '()' → logprob: -11.375285148620605
    8. '(input' → logprob: -11.500285148620605
    9. '(n' → logprob: -11.750285148620605
    10. '(
' → logprob: -12.750285148620605

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4987185001373291
    2. '()' → logprob: -0.9987185001373291
    3. '())' → logprob: -4.37371826171875
    4. ')' → logprob: -5.37371826171875
    5. '('' → logprob: -5.37371826171875
    6. '(
' → logprob: -7.49871826171875
    7. '()))' → logprob: -7.74871826171875
    8. '(""))' → logprob: -7.87371826171875
    9. '("("' → logprob: -7.87371826171875
    10. '("")' → logprob: -8.99871826171875

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08373299986124039
    2. ' ' → logprob: -3.458733081817627
    3. '    
' → logprob: -4.833733081817627
    4. ')' → logprob: -4.958733081817627
    5. 's' → logprob: -5.083733081817627
    6. ' for' → logprob: -5.333733081817627
    7. '    ' → logprob: -5.333733081817627
    8. 'for' → logprob: -5.583733081817627
    9. ' 
' → logprob: -6.083733081817627
    10. '  ' → logprob: -6.833733081817627

Token 13: ' r' (ID: 428)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.797939419746399
    2. '   ' → logprob: -2.1729393005371094
    3. '    
' → logprob: -2.4229393005371094
    4. '`' → logprob: -2.4229393005371094
    5. '```' → logprob: -2.5479393005371094
    6. 'result' → logprob: -2.6729393005371094
    7. 's' → logprob: -2.7979393005371094
    8. ' \' → logprob: -3.4229393005371094
    9. '\n' → logprob: -3.5479393005371094
    10. ''' → logprob: -3.5479393005371094

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0792771726846695
    2. ' ' → logprob: -3.579277276992798
    3. '=' → logprob: -3.954277276992798
    4. 'adius' → logprob: -4.329277038574219
    5. 'a' → logprob: -5.079277038574219
    6. ',' → logprob: -6.329277038574219
    7. '_' → logprob: -6.829277038574219
    8. 'ange' → logprob: -6.954277038574219
    9. 'andom' → logprob: -7.079277038574219
    10. ')' → logprob: -7.079277038574219

Token 15: ' list' (ID: 1562)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.12878894805908203
    2. ' n' → logprob: -2.503788948059082
    3. ' ' → logprob: -4.003788948059082
    4. 'math' → logprob: -4.128788948059082
    5. ' int' → logprob: -5.878788948059082
    6. 'n' → logprob: -7.128788948059082
    7. '0' → logprob: -8.628788948059082
    8. '(math' → logprob: -8.628788948059082
    9. 'int' → logprob: -9.003788948059082
    10. ' (' → logprob: -9.378788948059082

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48361971974372864
    2. '(range' → logprob: -1.6086196899414062
    3. '(map' → logprob: -1.7336196899414062
    4. '(math' → logprob: -5.108619689941406
    5. '(re' → logprob: -8.858619689941406
    6. '(input' → logprob: -9.233619689941406
    7. '(r' → logprob: -9.233619689941406
    8. '()' → logprob: -9.733619689941406
    9. '(
' → logprob: -9.983619689941406
    10. '(int' → logprob: -10.108619689941406

Token 17: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.30947738885879517
    2. '(' → logprob: -1.4344773292541504
    3. '(lambda' → logprob: -4.05947732925415
    4. '(math' → logprob: -4.68447732925415
    5. ')' → logprob: -7.93447732925415
    6. '(
' → logprob: -8.059477806091309
    7. '(str' → logprob: -8.559477806091309
    8. 'int' → logprob: -8.934477806091309
    9. '<int' → logprob: -9.309477806091309
    10. '(float' → logprob: -9.559477806091309

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3494514524936676
    2. ',input' → logprob: -1.2244514226913452
    3. '(input' → logprob: -7.474451541900635
    4. '(' → logprob: -8.474451065063477
    5. ' ,' → logprob: -8.974451065063477
    6. 'input' → logprob: -10.599451065063477
    7. ',float' → logprob: -10.599451065063477
    8. ',int' → logprob: -11.349451065063477
    9. '))' → logprob: -11.974451065063477
    10. ')' → logprob: -12.599451065063477

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17994289100170135
    2. ' input' → logprob: -1.8049428462982178
    3. '(input' → logprob: -9.304943084716797
    4. ',input' → logprob: -9.804943084716797
    5. ')' → logprob: -10.429943084716797
    6. ' ' → logprob: -12.304943084716797
    7. '=input' → logprob: -12.429943084716797
    8. '))' → logprob: -12.429943084716797
    9. '	input' → logprob: -13.179943084716797
    10. '   ' → logprob: -13.429943084716797

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01669894903898239
    2. '()' → logprob: -4.516698837280273
    3. '()))' → logprob: -5.516698837280273
    4. '())' → logprob: -7.016698837280273
    5. '())))' → logprob: -8.016698837280273
    6. ')' → logprob: -8.516698837280273
    7. '))' → logprob: -9.516698837280273
    8. '()));' → logprob: -10.141698837280273
    9. ')))' → logprob: -10.266698837280273
    10. '(' → logprob: -11.391698837280273

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0020734101999551058
    2. 'strip' → logprob: -6.252073287963867
    3. 'rstrip' → logprob: -9.377073287963867
    4. ' split' → logprob: -9.752073287963867
    5. '(split' → logprob: -13.877073287963867
    6. 'spl' → logprob: -14.752073287963867
    7. ' strip' → logprob: -14.877073287963867
    8. ')' → logprob: -16.002073287963867
    9. ' ' → logprob: -16.127073287963867
    10. 's' → logprob: -17.002073287963867

Token 22: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11231058090925217
    2. '())' → logprob: -2.9873106479644775
    3. '))' → logprob: -3.1123106479644775
    4. '()' → logprob: -5.112310409545898
    5. ')' → logprob: -5.862310409545898
    6. '(' → logprob: -6.237310409545898
    7. '())))' → logprob: -8.862310409545898
    8. '()))
' → logprob: -8.987310409545898
    9. '('' → logprob: -9.487310409545898
    10. ')))' → logprob: -9.737310409545898

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011795143596827984
    2. '    
' → logprob: -5.8867950439453125
    3. '
' → logprob: -6.3867950439453125
    4. '```' → logprob: -6.5117950439453125
    5. 'r' → logprob: -6.6367950439453125
    6. ')' → logprob: -6.7617950439453125
    7. 's' → logprob: -7.0117950439453125
    8. '[' → logprob: -8.511795043945312
    9. 'd' → logprob: -8.636795043945312
    10. ' ' → logprob: -8.636795043945312

Token 24: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8752245903015137
    2. 'sum' → logprob: -2.6252245903015137
    3. '   ' → logprob: -2.7502245903015137
    4. 'total' → logprob: -2.8752245903015137
    5. 'result' → logprob: -3.0002245903015137
    6. 'd' → logprob: -3.1252245903015137
    7. 'r' → logprob: -3.5002245903015137
    8. 'max' → logprob: -3.6252245903015137
    9. ' total' → logprob: -3.7502245903015137
    10. ' s' → logprob: -4.000224590301514

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10395478457212448
    2. '[' → logprob: -3.853954792022705
    3. '=' → logprob: -4.103954792022705
    4. '_' → logprob: -4.228954792022705
    5. ' ' → logprob: -4.353954792022705
    6. '[i' → logprob: -4.978954792022705
    7. ',' → logprob: -5.103954792022705
    8. '_sum' → logprob: -6.103954792022705
    9. ')' → logprob: -6.228954792022705
    10. '0' → logprob: -6.353954792022705

Token 26: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1241438388824463
    2. ' math' → logprob: -1.8741438388824463
    3. ' r' → logprob: -1.9991438388824463
    4. ' ' → logprob: -2.1241438388824463
    5. ' [' → logprob: -2.6241438388824463
    6. 'r' → logprob: -2.8741438388824463
    7. ' sum' → logprob: -2.9991438388824463
    8. 'math' → logprob: -3.4991438388824463
    9. 'sum' → logprob: -3.9991438388824463
    10. '[' → logprob: -4.249143600463867

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.373045951128006
    2. 'r' → logprob: -1.4980459213256836
    3. 'math' → logprob: -2.9980459213256836
    4. 'float' → logprob: -4.373045921325684
    5. ' ' → logprob: -5.373045921325684
    6. ' math' → logprob: -5.748045921325684
    7. ' r' → logprob: -5.873045921325684
    8. '-' → logprob: -5.873045921325684
    9. '1' → logprob: -6.248045921325684
    10. 'abs' → logprob: -6.373045921325684

Token 28: '.' (ID: 13)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007446305826306343
    2. '.' → logprob: -5.5074462890625
    3. ']*' → logprob: -5.8824462890625
    4. ']*(' → logprob: -9.0074462890625
    5. ')]' → logprob: -9.1324462890625
    6. '0' → logprob: -9.3824462890625
    7. '.]' → logprob: -9.3824462890625
    8. ',' → logprob: -9.8824462890625
    9. ' for' → logprob: -10.2574462890625
    10. ' ]' → logprob: -10.7574462890625

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023376967757940292
    2. '5' → logprob: -3.773376941680908
    3. ']' → logprob: -10.273377418518066
    4. '1' → logprob: -11.148377418518066
    5. '2' → logprob: -11.273377418518066
    6. '3' → logprob: -11.648377418518066
    7. ']*' → logprob: -11.648377418518066
    8. '000' → logprob: -11.773377418518066
    9. 'x' → logprob: -12.023377418518066
    10. ' ' → logprob: -12.148377418518066

Token 30: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01131778210401535
    2. ']*' → logprob: -5.511317729949951
    3. ')]' → logprob: -5.761317729949951
    4. ' for' → logprob: -6.136317729949951
    5. ',' → logprob: -6.761317729949951
    6. ')' → logprob: -8.01131820678711
    7. ' ]' → logprob: -8.88631820678711
    8. ']*(' → logprob: -9.01131820678711
    9. 'for' → logprob: -9.13631820678711
    10. ']+' → logprob: -11.26131820678711

Token 31: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09432444721460342
    2. '(n' → logprob: -2.4693243503570557
    3. '(' → logprob: -5.344324588775635
    4. ' n' → logprob: -8.719324111938477
    5. ' (' → logprob: -9.469324111938477
    6. 'len' → logprob: -9.969324111938477
    7. '3' → logprob: -10.094324111938477
    8. '2' → logprob: -10.594324111938477
    9. '   ' → logprob: -10.719324111938477
    10. '(len' → logprob: -10.844324111938477

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26962655782699585
    2. '   ' → logprob: -2.0196266174316406
    3. '<|end|>' → logprob: -3.0196266174316406
    4. ' 
' → logprob: -4.144626617431641
    5. ' for' → logprob: -4.644626617431641
    6. '    
' → logprob: -4.769626617431641
    7. '\n' → logprob: -4.769626617431641
    8. '  
' → logprob: -5.269626617431641
    9. ' ' → logprob: -5.894626617431641
    10. 'for' → logprob: -7.269626617431641

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7314326167106628
    2. '<|end|>' → logprob: -0.9814326167106628
    3. 'x' → logprob: -2.8564326763153076
    4. ' x' → logprob: -3.9814326763153076
    5. ' ' → logprob: -3.9814326763153076
    6. '
' → logprob: -4.1064324378967285
    7. ' 
' → logprob: -4.3564324378967285
    8. '    
' → logprob: -4.8564324378967285
    9. '  
' → logprob: -5.8564324378967285
    10. ' for' → logprob: -6.4814324378967285

Token 34: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0697373151779175
    2. ' for' → logprob: -1.3197373151779175
    3. 'for' (adapté à ' for') → logprob: -1.5697373151779175
    4. 'x' → logprob: -2.069737434387207
    5. ' ' → logprob: -3.319737434387207
    6. ' x' → logprob: -5.319737434387207
    7. ' 
' → logprob: -5.319737434387207
    8. '    
' → logprob: -6.944737434387207
    9. '<|end|>' → logprob: -6.944737434387207
    10. '	for' → logprob: -7.069737434387207

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0342104509472847
    2. ' ' → logprob: -3.409210443496704
    3. 'i' → logprob: -7.909210681915283
    4. '_' → logprob: -9.034210205078125
    5. ' _' → logprob: -9.784210205078125
    6. ' ' → logprob: -11.909210205078125
    7. ' range' → logprob: -12.409210205078125
    8. '  ' → logprob: -12.909210205078125
    9. ' ‌' → logprob: -12.909210205078125
    10. ' in' → logprob: -13.534210205078125

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0068981824442744255
    2. 'in' → logprob: -5.131898403167725
    3. ' ' → logprob: -7.006898403167725
    4. '  ' → logprob: -10.006897926330566
    5. '	in' → logprob: -12.006897926330566
    6. ' i' → logprob: -12.756897926330566
    7. '<|end|>' → logprob: -13.631897926330566
    8. 'n' → logprob: -13.631897926330566
    9. '   ' → logprob: -14.006897926330566
    10. 'range' → logprob: -14.506897926330566

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16024251282215118
    2. 'range' → logprob: -1.9102425575256348
    3. ' ' → logprob: -11.410242080688477
    4. ' xrange' → logprob: -12.785242080688477
    5. '	range' → logprob: -12.910242080688477
    6. '  ' → logprob: -14.285242080688477
    7. '(range' → logprob: -14.535242080688477
    8. '   ' → logprob: -15.160242080688477
    9. ' in' → logprob: -15.910242080688477
    10. ')' → logprob: -16.035242080688477

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16125330328941345
    2. '(n' → logprob: -1.9112533330917358
    3. ' (' → logprob: -6.911253452301025
    4. '(
' → logprob: -11.161252975463867
    5. ' ' → logprob: -11.536252975463867
    6. '(len' → logprob: -12.786252975463867
    7. '(

' → logprob: -13.161252975463867
    8. '(i' → logprob: -13.661252975463867
    9. '<|end|>' → logprob: -15.036252975463867
    10. '(space' → logprob: -15.286252975463867

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6936229467391968
    2. 'n' → logprob: -0.6936229467391968
    3. ' n' → logprob: -7.943623065948486
    4. '   ' → logprob: -9.818622589111328
    5. ' ' → logprob: -10.818622589111328
    6. '0' → logprob: -11.193622589111328
    7. '2' → logprob: -11.443622589111328
    8. '(n' → logprob: -11.568622589111328
    9. ')n' → logprob: -12.693622589111328
    10. '	n' → logprob: -13.193622589111328

Token 40: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0401766300201416
    2. ',n' → logprob: -3.4151766300201416
    3. ' ,' → logprob: -5.0401763916015625
    4. ' n' → logprob: -10.540176391601562
    5. ' ' → logprob: -12.290176391601562
    6. 'n' → logprob: -12.915176391601562
    7. '   ' → logprob: -14.040176391601562
    8. ',len' → logprob: -14.415176391601562
    9. ' )' → logprob: -14.790176391601562
    10. ' ):' → logprob: -15.165176391601562

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008592926897108555
    2. '):
' → logprob: -7.375859260559082
    3. ' ):' → logprob: -8.500859260559082
    4. ':' → logprob: -11.125859260559082
    5. ')' → logprob: -11.375859260559082
    6. '):
' → logprob: -13.875859260559082
    7. '():' → logprob: -13.875859260559082
    8. '   ' → logprob: -15.375859260559082
    9. ',' → logprob: -15.750859260559082
    10. ' ):
' → logprob: -15.750859260559082

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2718563675880432
    2. ' ' → logprob: -2.2718563079833984
    3. '    ' → logprob: -2.5218563079833984
    4. '   ' → logprob: -3.8968563079833984
    5. ' x' → logprob: -4.271856307983398
    6. '<|end|>' → logprob: -5.396856307983398
    7. '        ' → logprob: -5.771856307983398
    8. ' 
' → logprob: -6.521856307983398
    9. '        
' → logprob: -6.646856307983398
    10. 'x' → logprob: -6.896856307983398

Token 43: ' dist' (ID: 3601)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5388376116752625
    2. ' ' → logprob: -1.0388376712799072
    3. 'x' → logprob: -3.0388376712799072
    4. '    ' → logprob: -5.913837432861328
    5. '       ' → logprob: -6.413837432861328
    6. ' math' → logprob: -6.538837432861328
    7. '        ' → logprob: -6.663837432861328
    8. 'import' → logprob: -6.913837432861328
    9. ' if' → logprob: -7.288837432861328
    10. ' )' → logprob: -7.413837432861328

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2824929356575012
    2. '=' → logprob: -1.4074928760528564
    3. 's' → logprob: -7.7824931144714355
    4. ' ' → logprob: -8.157492637634277
    5. '_' → logprob: -8.282492637634277
    6. '[i' → logprob: -10.032492637634277
    7. '[' → logprob: -10.407492637634277
    8. '   ' → logprob: -10.407492637634277
    9. 'ances' → logprob: -10.407492637634277
    10. '_squared' → logprob: -10.407492637634277

Token 45: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4191412925720215
    2. ' x' → logprob: -1.1691412925720215
    3. ' math' → logprob: -4.2941412925720215
    4. 'math' → logprob: -5.1691412925720215
    5. ' (' → logprob: -5.6691412925720215
    6. '(x' → logprob: -6.2941412925720215
    7. 'r' → logprob: -6.4191412925720215
    8. '0' → logprob: -6.9191412925720215
    9. ' ' → logprob: -7.0441412925720215
    10. ' r' → logprob: -7.0441412925720215

Token 46: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018597854301333427
    2. 'math' → logprob: -4.2685980796813965
    3. 'r' → logprob: -6.3935980796813965
    4. '0' → logprob: -6.8935980796813965
    5. '(x' → logprob: -7.0185980796813965
    6. 'abs' → logprob: -8.518597602844238
    7. '(math' → logprob: -8.768597602844238
    8. ' x' → logprob: -8.768597602844238
    9. '(r' → logprob: -9.143597602844238
    10. 'float' → logprob: -9.643597602844238

Token 47: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06051700934767723
    2. '5' → logprob: -3.5605170726776123
    3. 'x' → logprob: -4.310516834259033
    4. '1' → logprob: -4.435516834259033
    5. 'r' → logprob: -6.810516834259033
    6. '**' → logprob: -7.060516834259033
    7. '```' → logprob: -7.935516834259033
    8. '000' → logprob: -8.060517311096191
    9. ' ' → logprob: -8.185517311096191
    10. '+' → logprob: -8.435517311096191

Token 49: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42020514607429504
    2. '<|end|>' → logprob: -1.1702051162719727
    3. ' 
' → logprob: -4.795205116271973
    4. '    ' → logprob: -5.545205116271973
    5. ' for' → logprob: -5.920205116271973
    6. '
' → logprob: -6.045205116271973
    7. '       ' → logprob: -6.420205116271973
    8. 'for' → logprob: -6.420205116271973
    9. ',' → logprob: -6.670205116271973
    10. ')' → logprob: -6.670205116271973

Token 50: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3595525026321411
    2. ' for' → logprob: -1.2345525026321411
    3. 'j' → logprob: -4.984552383422852
    4. '       ' → logprob: -6.734552383422852
    5. '<|end|>' → logprob: -7.109552383422852
    6. '   ' → logprob: -7.359552383422852
    7. 'x' → logprob: -7.609552383422852
    8. ' ' → logprob: -8.109552383422852
    9. ' j' → logprob: -8.484552383422852
    10. '    ' → logprob: -8.859552383422852

Token 52: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1602393537759781
    2. ' j' → logprob: -1.910239338874817
    3. '	j' → logprob: -11.660239219665527
    4. '<|end|>' → logprob: -12.535239219665527
    5. ' ' → logprob: -14.035239219665527
    6. '   ' → logprob: -14.785239219665527
    7. '_j' → logprob: -14.910239219665527
    8. '<|end|>' → logprob: -15.035239219665527
    9. '```' → logprob: -15.160239219665527
    10. '  ' → logprob: -15.660239219665527

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006484908051788807
    2. 'in' → logprob: -5.1314849853515625
    3. ' range' → logprob: -8.006484985351562
    4. 'range' → logprob: -8.631484985351562
    5. '(' → logprob: -11.506484985351562
    6. ' ' → logprob: -11.631484985351562
    7. '<|end|>' → logprob: -11.631484985351562
    8. '(range' → logprob: -12.381484985351562
    9. '   ' → logprob: -12.631484985351562
    10. ')' → logprob: -13.256484985351562

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326597929000854
    2. ' range' → logprob: -1.3132660388946533
    3. '	range' → logprob: -13.188265800476074
    4. '   ' → logprob: -14.188265800476074
    5. ' ' → logprob: -14.438265800476074
    6. '(range' → logprob: -14.563265800476074
    7. '  ' → logprob: -15.438265800476074
    8. ')' → logprob: -16.18826675415039
    9. ' xrange' → logprob: -16.43826675415039
    10. 'ran' → logprob: -17.56326675415039

Token 55: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0060295225121080875
    2. '(' → logprob: -5.1310296058654785
    3. '(j' → logprob: -9.25602912902832
    4. ' (' → logprob: -12.50602912902832
    5. '0' → logprob: -14.13102912902832
    6. '(x' → logprob: -15.25602912902832
    7. '   ' → logprob: -16.00602912902832
    8. ')' → logprob: -16.38102912902832
    9. '(I' → logprob: -16.38102912902832
    10. '(ii' → logprob: -16.38102912902832

Token 56: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015426154248416424
    2. '):
' → logprob: -4.640426158905029
    3. '       ' → logprob: -5.890426158905029
    4. ' ):' → logprob: -6.765426158905029
    5. ')' → logprob: -6.890426158905029
    6. '0' → logprob: -8.265425682067871
    7. '   ' → logprob: -8.765425682067871
    8. '-' → logprob: -9.515425682067871
    9. '+' → logprob: -10.265425682067871
    10. '):

' → logprob: -10.390425682067871

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020342117932159454
    2. '0' → logprob: -9.375203132629395
    3. ' ' → logprob: -10.000203132629395
    4. '-' → logprob: -10.625203132629395
    5. '6' → logprob: -11.750203132629395
    6. '2' → logprob: -11.875203132629395
    7. '+' → logprob: -12.000203132629395
    8. '   ' → logprob: -12.250203132629395
    9. ' -' → logprob: -12.250203132629395
    10. '```' → logprob: -12.500203132629395

Token 58: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36444491147994995
    2. '):' → logprob: -1.8644449710845947
    3. '):
' → logprob: -2.9894449710845947
    4. ' ,' → logprob: -3.1144449710845947
    5. '+' → logprob: -3.6144449710845947
    6. ')' → logprob: -4.739444732666016
    7. ' ):' → logprob: -5.614444732666016
    8. ',-' → logprob: -5.739444732666016
    9. '       ' → logprob: -6.489444732666016
    10. ' +' → logprob: -6.489444732666016

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -15.875015258789062
    4. ' -' → logprob: -16.250015258789062
    5. '   ' → logprob: -16.625015258789062
    6. '  ' → logprob: -16.687515258789062
    7. '۱' → logprob: -17.125015258789062
    8. ',' → logprob: -17.312515258789062
    9. '```' → logprob: -17.312515258789062
    10. '-' → logprob: -17.437515258789062

Token 60: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.002146812155842781
    2. ',' → logprob: -6.2521467208862305
    3. '-' → logprob: -8.50214672088623
    4. ' ,-' → logprob: -11.62714672088623
    5. ',-

' → logprob: -13.00214672088623
    6. ',--' → logprob: -13.62714672088623
    7. ',-
' → logprob: -14.00214672088623
    8. '```' → logprob: -14.37714672088623
    9. '   ' → logprob: -15.37714672088623
    10. ' -' → logprob: -15.37714672088623

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -16.687503814697266
    4. ')' → logprob: -16.812503814697266
    5. '```' → logprob: -16.875003814697266
    6. '１' → logprob: -17.187503814697266
    7. '۱' → logprob: -17.187503814697266
    8. '
' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '

' → logprob: -17.437503814697266

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02762012928724289
    2. '):
' → logprob: -3.6526200771331787
    3. ',' → logprob: -7.902620315551758
    4. ':' → logprob: -8.027620315551758
    5. ')' → logprob: -8.777620315551758
    6. '):
' → logprob: -8.777620315551758
    7. '       ' → logprob: -8.902620315551758
    8. '-' → logprob: -9.527620315551758
    9. ' ):' → logprob: -10.277620315551758
    10. '):

' → logprob: -10.527620315551758

Token 63: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25901225209236145
    2. '       ' → logprob: -2.134012222290039
    3. '           ' → logprob: -3.634012222290039
    4. '):' → logprob: -3.634012222290039
    5. ':
' → logprob: -4.634012222290039
    6. ' :' → logprob: -4.759012222290039
    7. ',' → logprob: -4.759012222290039
    8. '<|end|>' → logprob: -4.759012222290039
    9. ' ' → logprob: -4.884012222290039
    10. '        ' → logprob: -6.009012222290039

Token 64: ' dx' (ID: 29472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18222260475158691
    2. '<|end|>' → logprob: -2.432222604751587
    3. '           ' → logprob: -3.932222604751587
    4. ' if' → logprob: -4.807222366333008
    5. '            ' → logprob: -4.932222366333008
    6. '               ' → logprob: -4.932222366333008
    7. ' )' → logprob: -5.182222366333008
    8. '       ' → logprob: -5.307222366333008
    9. '        ' → logprob: -5.307222366333008
    10. ')' → logprob: -5.682222366333008

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14278574287891388
    2. '=' → logprob: -2.0177857875823975
    3. ' ' → logprob: -10.142786026000977
    4. '=x' → logprob: -10.642786026000977
    5. 'x' → logprob: -11.392786026000977
    6. ')' → logprob: -12.017786026000977
    7. '   ' → logprob: -12.017786026000977
    8. ',' → logprob: -12.142786026000977
    9. '+' → logprob: -13.017786026000977
    10. '    ' → logprob: -13.392786026000977

Token 66: ' math' (ID: 13324)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.021497679874300957
    2. ' x' → logprob: -4.02149772644043
    3. 'abs' → logprob: -5.89649772644043
    4. ' abs' → logprob: -8.27149772644043
    5. '(x' → logprob: -8.77149772644043
    6. 'math' → logprob: -10.14649772644043
    7. ' math' → logprob: -10.27149772644043
    8. ' (' → logprob: -10.89649772644043
    9. '(abs' → logprob: -11.02149772644043
    10. ' ' → logprob: -11.27149772644043

Token 67: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0003851517685689032
    2. '.h' → logprob: -9.000385284423828
    3. '.f' → logprob: -9.500385284423828
    4. 'sqrt' → logprob: -9.750385284423828
    5. '.dist' → logprob: -10.375385284423828
    6. '.pow' → logprob: -10.875385284423828
    7. '.' → logprob: -11.000385284423828
    8. '.Sqrt' → logprob: -11.000385284423828
    9. '.abs' → logprob: -11.625385284423828
    10. 'fabs' → logprob: -11.875385284423828

Token 68: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02560300938785076
    2. '(abs' → logprob: -4.4006028175354
    3. '(' → logprob: -4.5256028175354
    4. '(x' → logprob: -6.5256028175354
    5. '(pow' → logprob: -8.275603294372559
    6. '(r' → logprob: -8.775603294372559
    7. '(max' → logprob: -9.025603294372559
    8. ' (' → logprob: -10.025603294372559
    9. '(math' → logprob: -10.150603294372559
    10. '(sum' → logprob: -10.275603294372559

Token 69: 'r' (ID: 81)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3218485713005066
    2. 'x' → logprob: -1.4468486309051514
    3. '(r' → logprob: -3.8218486309051514
    4. '(' → logprob: -4.946848392486572
    5. '2' → logprob: -5.946848392486572
    6. ' (' → logprob: -6.321848392486572
    7. '(abs' → logprob: -6.321848392486572
    8. 'abs' → logprob: -6.821848392486572
    9. '4' → logprob: -7.321848392486572
    10. '((' → logprob: -7.446848392486572

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5762736201286316
    2. '[j' → logprob: -0.8262736201286316
    3. '[' → logprob: -8.576273918151855
    4. 'j' → logprob: -9.326273918151855
    5. 'i' → logprob: -10.701273918151855
    6. '[x' → logprob: -10.701273918151855
    7. ')' → logprob: -13.451273918151855
    8. '[I' → logprob: -14.076273918151855
    9. '```' → logprob: -14.201273918151855
    10. ' j' → logprob: -14.326273918151855

Token 71: ']+' (ID: 15344)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5197270512580872
    2. '+' → logprob: -2.0197269916534424
    3. ']+' → logprob: -2.6447269916534424
    4. ']' → logprob: -2.8947269916534424
    5. '-' → logprob: -3.1447269916534424
    6. '[i' → logprob: -3.6447269916534424
    7. '[' → logprob: -4.0197272300720215
    8. '+j' → logprob: -4.0197272300720215
    9. ' +' → logprob: -4.8947272300720215
    10. '+r' → logprob: -4.8947272300720215

Token 72: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2343808114528656
    2. 'x' → logprob: -1.609380841255188
    3. ')' → logprob: -4.984380722045898
    4. '+r' → logprob: -7.484380722045898
    5. '[r' → logprob: -7.859380722045898
    6. '[' → logprob: -8.234380722045898
    7. '-r' → logprob: -8.734380722045898
    8. ')**' → logprob: -8.859380722045898
    9. '+' → logprob: -9.609380722045898
    10. '[x' → logprob: -9.609380722045898

Token 73: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.35837464465294e-05
    2. '[' → logprob: -10.375043869018555
    3. '[x' → logprob: -12.750043869018555
    4. 'j' → logprob: -12.875043869018555
    5. '```' → logprob: -12.875043869018555
    6. '[js' → logprob: -13.625043869018555
    7. '[
' → logprob: -13.875043869018555
    8. '[i' → logprob: -14.250043869018555
    9. '   ' → logprob: -15.250043869018555
    10. 'x' → logprob: -15.375043869018555

Token 74: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.04973917827010155
    2. ')' → logprob: -3.174739122390747
    3. '])' → logprob: -6.174739360809326
    4. ')*(' → logprob: -6.299739360809326
    5. ')*' → logprob: -6.424739360809326
    6. '   ' → logprob: -7.924739360809326
    7. ' )' → logprob: -8.174738883972168
    8. '）' → logprob: -8.799738883972168
    9. '))' → logprob: -9.549738883972168
    10. ' ' → logprob: -9.924738883972168

Token 75: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.01011112704873085
    2. '*' → logprob: -5.135111331939697
    3. ')' → logprob: -6.135111331939697
    4. ')*(' → logprob: -7.010111331939697
    5. ')*' → logprob: -7.135111331939697
    6. '**' → logprob: -8.385110855102539
    7. '*(' → logprob: -10.135110855102539
    8. ' )' → logprob: -11.510110855102539
    9. '2' → logprob: -11.885110855102539
    10. '*)' → logprob: -12.010110855102539

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.077528764260933e-05
    2. ' ' → logprob: -9.625081062316895
    3. '   ' → logprob: -12.000081062316895
    4. '**' → logprob: -13.500081062316895
    5. '  ' → logprob: -13.750081062316895
    6. '

' → logprob: -13.750081062316895
    7. '    ' → logprob: -14.125081062316895
    8. '
' → logprob: -14.875081062316895
    9. '```' → logprob: -14.875081062316895
    10. ')' → logprob: -15.062581062316895

Token 77: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6347193717956543
    2. ' -' → logprob: -0.7597193717956543
    3. ')' → logprob: -6.384719371795654
    4. ' ' → logprob: -8.509719848632812
    5. ')-' → logprob: -9.509719848632812
    6. ')-(' → logprob: -10.509719848632812
    7. '-)' → logprob: -10.634719848632812
    8. ' )' → logprob: -10.884719848632812
    9. '   ' → logprob: -10.884719848632812
    10. '    ' → logprob: -11.259719848632812

Token 78: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.27176034450531006
    2. ' (' → logprob: -1.52176034450531
    3. '(' → logprob: -4.7717604637146
    4. '(abs' → logprob: -5.1467604637146
    5. '(dx' → logprob: -6.1467604637146
    6. '((' → logprob: -6.3967604637146
    7. '0' → logprob: -8.146759986877441
    8. 'x' → logprob: -8.646759986877441
    9. '(r' → logprob: -8.896759986877441
    10. '1' → logprob: -8.896759986877441

Token 79: 'r' (ID: 81)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20478864014148712
    2. '(x' → logprob: -1.8297886848449707
    3. 'abs' → logprob: -4.454788684844971
    4. ' (' → logprob: -5.204788684844971
    5. ' x' → logprob: -5.329788684844971
    6. '(abs' → logprob: -6.579788684844971
    7. ' abs' → logprob: -6.954788684844971
    8. '   ' → logprob: -9.329788208007812
    9. '(' → logprob: -9.579788208007812
    10. ')x' → logprob: -10.204788208007812

Token 80: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02566993422806263
    2. '[i' → logprob: -4.025670051574707
    3. 'j' → logprob: -5.275670051574707
    4. 'x' → logprob: -6.525670051574707
    5. '[' → logprob: -7.650670051574707
    6. 'i' → logprob: -8.400670051574707
    7. '[x' → logprob: -8.775670051574707
    8. '[min' → logprob: -11.400670051574707
    9. ' j' → logprob: -11.650670051574707
    10. '   ' → logprob: -12.775670051574707

Token 81: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1903635412454605
    2. ' -' → logprob: -2.065363645553589
    3. '[' → logprob: -3.440363645553589
    4. ']' → logprob: -5.19036340713501
    5. '[j' → logprob: -5.44036340713501
    6. ']-' → logprob: -6.19036340713501
    7. 'x' → logprob: -7.69036340713501
    8. '[i' → logprob: -7.81536340713501
    9. '<|end|>' → logprob: -7.94036340713501
    10. '[-' → logprob: -8.065363883972168

Token 82: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16056428849697113
    2. 'x' → logprob: -1.9105643033981323
    3. '<|end|>' → logprob: -9.410564422607422
    4. ')' → logprob: -9.910564422607422
    5. '[j' → logprob: -10.285564422607422
    6. 'j' → logprob: -10.285564422607422
    7. ' x' → logprob: -10.660564422607422
    8. ' r' → logprob: -10.910564422607422
    9. '   ' → logprob: -11.035564422607422
    10. ')x' → logprob: -11.535564422607422

Token 83: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00034356804098933935
    2. '[' → logprob: -8.000343322753906
    3. 'j' → logprob: -12.500343322753906
    4. '[js' → logprob: -13.375343322753906
    5. '[i' → logprob: -13.875343322753906
    6. '<|end|>' → logprob: -14.375343322753906
    7. '[
' → logprob: -15.250343322753906
    8. '	j' → logprob: -15.750343322753906
    9. '<|end|>' → logprob: -16.000343322753906
    10. '][' → logprob: -16.000343322753906

Token 84: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.016901502385735512
    2. ')' → logprob: -4.51690149307251
    3. '])' → logprob: -5.26690149307251
    4. ' )' → logprob: -7.89190149307251
    5. '）' → logprob: -8.891901969909668
    6. ']' → logprob: -10.141901969909668
    7. '   ' → logprob: -11.016901969909668
    8. '))' → logprob: -11.266901969909668
    9. ')])' → logprob: -11.266901969909668
    10. '2' → logprob: -11.266901969909668

Token 85: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.09863492101430893
    2. ')' → logprob: -2.848634958267212
    3. '**' → logprob: -4.223634719848633
    4. ' )' → logprob: -4.473634719848633
    5. '*' → logprob: -5.348634719848633
    6. '2' → logprob: -6.098634719848633
    7. ')*' → logprob: -6.223634719848633
    8. '))' → logprob: -8.473634719848633
    9. ')*(' → logprob: -8.598634719848633
    10. ' ' → logprob: -9.223634719848633

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002398938377154991
    2. ' ' → logprob: -8.375240325927734
    3. ')' → logprob: -13.375240325927734
    4. '1' → logprob: -13.375240325927734
    5. '**' → logprob: -13.500240325927734
    6. '```' → logprob: -14.312740325927734
    7. '22' → logprob: -14.500240325927734
    8. '(' → logprob: -15.062740325927734
    9. '  ' → logprob: -15.375240325927734
    10. '   ' → logprob: -15.437740325927734

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019008832052350044
    2. ' )' → logprob: -4.144008636474609
    3. ')
' → logprob: -6.019008636474609
    4. ' )
' → logprob: -8.01900863647461
    5. '           ' → logprob: -9.64400863647461
    6. '       ' → logprob: -10.01900863647461
    7. ')*' → logprob: -10.89400863647461
    8. '[' → logprob: -11.01900863647461
    9. '*' → logprob: -11.89400863647461
    10. '   ' → logprob: -12.26900863647461

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06771659851074219
    2. ')' → logprob: -3.192716598510742
    3. '       ' → logprob: -4.192716598510742
    4. ')
' → logprob: -6.317716598510742
    5. '
' → logprob: -6.442716598510742
    6. '            
' → logprob: -6.567716598510742
    7. ' 
' → logprob: -6.942716598510742
    8. '  
' → logprob: -7.442716598510742
    9. '   ' → logprob: -7.692716598510742
    10. '        
' → logprob: -7.817716598510742

Token 89: ' dist' (ID: 3601)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4528677463531494
    2. ' if' → logprob: -1.4528677463531494
    3. 'x' → logprob: -2.4528677463531494
    4. '           ' → logprob: -3.4528677463531494
    5. ')' → logprob: -5.70286750793457
    6. 'if' → logprob: -6.20286750793457
    7. ' 
' → logprob: -6.32786750793457
    8. ' )' → logprob: -6.70286750793457
    9. ' ' → logprob: -7.07786750793457
    10. '       ' → logprob: -7.57786750793457

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08010143786668777
    2. '=' → logprob: -2.580101490020752
    3. '=max' → logprob: -6.830101490020752
    4. ' +=' → logprob: -10.580101013183594
    5. 'max' → logprob: -10.705101013183594
    6. '>' → logprob: -11.455101013183594
    7. '+=' → logprob: -11.455101013183594
    8. ' ' → logprob: -11.580101013183594
    9. ' <' → logprob: -11.830101013183594
    10. ' >' → logprob: -12.080101013183594

Token 91: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.012516485527157784
    2. 'max' → logprob: -4.387516498565674
    3. ' x' → logprob: -12.887516021728516
    4. '	max' → logprob: -13.012516021728516
    5. 'x' → logprob: -14.637516021728516
    6. '(max' → logprob: -14.762516021728516
    7. '[max' → logprob: -15.012516021728516
    8. ' math' → logprob: -15.512516021728516
    9. ' maximum' → logprob: -15.637516021728516
    10. ' ' → logprob: -15.637516021728516

Token 92: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0029077043291181326
    2. '(' → logprob: -6.377907752990723
    3. '(x' → logprob: -6.752907752990723
    4. '(dx' → logprob: -10.377907752990723
    5. 'dist' → logprob: -12.377907752990723
    6. '(distance' → logprob: -13.502907752990723
    7. '(d' → logprob: -15.877907752990723
    8. ' (' → logprob: -15.877907752990723
    9. 'x' → logprob: -16.252906799316406
    10. ' dist' → logprob: -16.627906799316406

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004031502641737461
    2. ' ,' → logprob: -5.879031658172607
    3. ',x' → logprob: -6.754031658172607
    4. '(x' → logprob: -10.87903118133545
    5. ')' → logprob: -11.37903118133545
    6. '),' → logprob: -11.50403118133545
    7. '(' → logprob: -12.00403118133545
    8. ',d' → logprob: -12.50403118133545
    9. 'x' → logprob: -13.12903118133545
    10. ',max' → logprob: -13.75403118133545

Token 94: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22549700736999512
    2. ' x' → logprob: -1.6004970073699951
    3. '	x' → logprob: -10.475497245788574
    4. '   ' → logprob: -11.100497245788574
    5. '(x' → logprob: -11.475497245788574
    6. ')x' → logprob: -11.725497245788574
    7. ' ' → logprob: -11.725497245788574
    8. '```' → logprob: -12.225497245788574
    9. ')' → logprob: -13.350497245788574
    10. '    ' → logprob: -13.600497245788574

Token 95: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015109812375158072
    2. '[' → logprob: -8.875150680541992
    3. ' [' → logprob: -12.875150680541992
    4. '[x' → logprob: -13.250150680541992
    5. '][' → logprob: -13.500150680541992
    6. '[i' → logprob: -13.750150680541992
    7. '[
' → logprob: -14.000150680541992
    8. '[js' → logprob: -14.125150680541992
    9. ')[' → logprob: -14.500150680541992
    10. ')' → logprob: -14.875150680541992

Token 96: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009766122326254845
    2. ']+' → logprob: -4.634766101837158
    3. ' ]' → logprob: -11.884766578674316
    4. '])' → logprob: -13.884766578674316
    5. '[j' → logprob: -14.384766578674316
    6. '])+' → logprob: -14.759766578674316
    7. '[i' → logprob: -15.009766578674316
    8. '"]' → logprob: -15.384766578674316
    9. ')' → logprob: -15.384766578674316
    10. '']' → logprob: -15.759766578674316

Token 97: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.21888814866542816
    2. '2' → logprob: -1.7188881635665894
    3. ' dx' → logprob: -4.718888282775879
    4. ' ' → logprob: -6.093888282775879
    5. 'math' → logprob: -6.593888282775879
    6. '(dx' → logprob: -6.593888282775879
    7. '(' → logprob: -7.343888282775879
    8. ' math' → logprob: -7.468888282775879
    9. ' (' → logprob: -7.718888282775879
    10. '```' → logprob: -8.093888282775879

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3906175196170807
    2. ')
' → logprob: -1.3906174898147583
    3. ' )
' → logprob: -3.265617609024048
    4. ' )' → logprob: -3.515617609024048
    5. '   ' → logprob: -5.515617370605469
    6. '       ' → logprob: -6.140617370605469
    7. ' +' → logprob: -8.765617370605469
    8. '+' → logprob: -9.265617370605469
    9. ')
' → logprob: -10.390617370605469
    10. ' ' → logprob: -11.140617370605469

Token 99: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8664461970329285
    2. '       ' → logprob: -0.9914461970329285
    3. '   ' → logprob: -2.2414462566375732
    4. ' 
' → logprob: -2.9914462566375732
    5. ' ' → logprob: -4.491446018218994
    6. '  
' → logprob: -4.616446018218994
    7. '        
' → logprob: -4.991446018218994
    8. ' x' → logprob: -5.241446018218994
    9. '   
' → logprob: -5.366446018218994
    10. '    
' → logprob: -5.366446018218994

Token 100: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7210448384284973
    2. '   ' → logprob: -1.3460447788238525
    3. 'x' (adapté à ' x') → logprob: -1.8460447788238525
    4. ' ' → logprob: -3.2210447788238525
    5. ' 
' → logprob: -3.4710447788238525
    6. ')' → logprob: -4.596045017242432
    7. '       ' → logprob: -5.221045017242432
    8. ' )' → logprob: -5.471045017242432
    9. ')
' → logprob: -7.471045017242432
    10. '<|end|>' → logprob: -7.471045017242432

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06198807805776596
    2. '[' → logprob: -2.811988115310669
    3. '[I' → logprob: -12.31198787689209
    4. '[x' → logprob: -12.81198787689209
    5. '\[' → logprob: -13.06198787689209
    6. ' [' → logprob: -13.56198787689209
    7. '[int' → logprob: -13.68698787689209
    8. '<|end|>' → logprob: -14.06198787689209
    9. '[ip' → logprob: -14.06198787689209
    10. '[
' → logprob: -14.18698787689209

Token 102: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00595261761918664
    2. '=' → logprob: -5.130952835083008
    3. ')' → logprob: -11.255952835083008
    4. ' +=' → logprob: -12.505952835083008
    5. ' =)' → logprob: -12.755952835083008
    6. ' )' → logprob: -13.130952835083008
    7. ' ' → logprob: -13.755952835083008
    8. ']' → logprob: -14.380952835083008
    9. ' ]' → logprob: -15.130952835083008
    10. ' =
' → logprob: -15.255952835083008

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050650849938393
    2. '=' → logprob: -4.511050701141357
    3. ' +=' → logprob: -12.8860502243042
    4. '+=' → logprob: -15.6360502243042
    5. ' ' → logprob: -16.886051177978516
    6. ' =
' → logprob: -17.636051177978516
    7. ' =)' → logprob: -17.761051177978516
    8. '=int' → logprob: -18.261051177978516
    9. '＝' → logprob: -18.386051177978516
    10. ' *=' → logprob: -18.886051177978516

Token 104: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.016037767753005028
    2. ' dist' → logprob: -4.141037940979004
    3. '	dist' → logprob: -13.641037940979004
    4. 'max' → logprob: -14.266037940979004
    5. '(dist' → logprob: -14.516037940979004
    6. ' ' → logprob: -15.266037940979004
    7. 'r' → logprob: -16.016036987304688
    8. '0' → logprob: -16.016036987304688
    9. 'd' → logprob: -16.016036987304688
    10. '   ' → logprob: -16.391036987304688

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05701375752687454
    2. 'print' → logprob: -3.307013750076294
    3. '<|end|>' → logprob: -4.432013988494873
    4. '
' → logprob: -5.557013988494873
    5. ' print' → logprob: -6.182013988494873
    6. '```' → logprob: -8.432013511657715
    7. ' ' → logprob: -8.557013511657715
    8. '    
' → logprob: -8.557013511657715
    9. '  
' → logprob: -9.682013511657715
    10. '  ' → logprob: -9.932013511657715

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11977988481521606
    2. 'print' → logprob: -2.2447798252105713
    3. ' print' → logprob: -4.99478006362915
    4. '
' → logprob: -9.494779586791992
    5. '```' → logprob: -10.369779586791992
    6. '    
' → logprob: -11.369779586791992
    7. '<|end|>' → logprob: -11.369779586791992
    8. ' for' → logprob: -12.119779586791992
    9. ' ' → logprob: -12.494779586791992
    10. '	print' → logprob: -12.494779586791992

Token 107: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09188535809516907
    2. 'print' → logprob: -2.8418853282928467
    3. ' print' → logprob: -3.5918853282928467
    4. ' for' → logprob: -6.591885566711426
    5. 'for' → logprob: -8.466885566711426
    6. '    
' → logprob: -8.716885566711426
    7. ' 
' → logprob: -10.091885566711426
    8. '    ' → logprob: -10.216885566711426
    9. ' ' → logprob: -10.466885566711426
    10. '```' → logprob: -10.966885566711426

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47481316328048706
    2. '=' → logprob: -0.9748131632804871
    3. 'most' → logprob: -7.974812984466553
    4. ',' → logprob: -8.224813461303711
    5. '_' → logprob: -9.474813461303711
    6. '=end' → logprob: -11.599813461303711
    7. ' ' → logprob: -12.224813461303711
    8. '<|end|>' → logprob: -12.349813461303711
    9. '_margin' → logprob: -12.599813461303711
    10. ')' → logprob: -12.599813461303711

Token 109: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2535629272460938
    2. 'min' → logprob: -1.3785629272460938
    3. ' min' → logprob: -1.5035629272460938
    4. ' -' → logprob: -2.1285629272460938
    5. '-' → logprob: -3.3785629272460938
    6. ' x' → logprob: -3.8785629272460938
    7. ' ' → logprob: -3.8785629272460938
    8. 'x' → logprob: -4.003562927246094
    9. ' max' → logprob: -4.503562927246094
    10. 'max' → logprob: -4.878562927246094

Token 110: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000309840717818588
    2. '(' → logprob: -8.125309944152832
    3. ' (' → logprob: -11.750309944152832
    4. '([' → logprob: -12.250309944152832
    5. 'x' → logprob: -13.875309944152832
    6. '(
' → logprob: -15.750309944152832
    7. '(i' → logprob: -17.000308990478516
    8. '((' → logprob: -17.375308990478516
    9. '()' → logprob: -18.125308990478516
    10. '([
' → logprob: -18.375308990478516

Token 111: '[i' (ID: 1768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08480869233608246
    2. '[i' → logprob: -3.209808588027954
    3. ' -' → logprob: -3.709808588027954
    4. '-' → logprob: -4.834808826446533
    5. ' )' → logprob: -5.834808826446533
    6. ')-' → logprob: -6.084808826446533
    7. '[' → logprob: -6.709808826446533
    8. ' ' → logprob: -7.084808826446533
    9. '   ' → logprob: -7.834808826446533
    10. '<|end|>' → logprob: -8.209808349609375

Token 112: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8921399712562561
    2. ']' → logprob: -1.0171399116516113
    3. ']-' → logprob: -1.8921399116516113
    4. ' -' → logprob: -2.8921399116516113
    5. ')' → logprob: -4.267139911651611
    6. ')-' → logprob: -5.392139911651611
    7. '[i' → logprob: -6.017139911651611
    8. ' ' → logprob: -7.892139911651611
    9. '-r' → logprob: -8.76714038848877
    10. ' ]' → logprob: -8.89214038848877

Token 113: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013278567930683494
    2. ' r' → logprob: -6.626327991485596
    3. ' ' → logprob: -14.501327514648438
    4. 'import' → logprob: -14.751327514648438
    5. '<|end|>' → logprob: -15.001327514648438
    6. '	r' → logprob: -15.376327514648438
    7. '   ' → logprob: -15.501327514648438
    8. 'math' → logprob: -16.001327514648438
    9. '  ' → logprob: -16.501327514648438
    10. ')' → logprob: -16.876327514648438

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '(i' → logprob: -12.500004768371582
    3. ')' → logprob: -14.250004768371582
    4. 'i' → logprob: -15.375004768371582
    5. '[' → logprob: -16.7500057220459
    6. ']' → logprob: -17.1250057220459
    7. ')i' → logprob: -17.2500057220459
    8. '```' → logprob: -17.3750057220459
    9. ' for' → logprob: -18.1250057220459
    10. ' ' → logprob: -18.6250057220459

Token 115: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.093510203063488
    2. ' for' → logprob: -2.468510150909424
    3. 'for' → logprob: -6.093510150909424
    4. ' )' → logprob: -6.218510150909424
    5. ' ' → logprob: -9.093510627746582
    6. '[i' → logprob: -9.593510627746582
    7. ']' → logprob: -9.968510627746582
    8. '	for' → logprob: -10.218510627746582
    9. ')
' → logprob: -11.718510627746582
    10. '   ' → logprob: -11.843510627746582

Token 116: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11052998900413513
    2. ')' → logprob: -2.735529899597168
    3. 'for' → logprob: -3.235529899597168
    4. ' )' → logprob: -8.735529899597168
    5. ' ' → logprob: -8.985529899597168
    6. ')
' → logprob: -9.860529899597168
    7. '	for' → logprob: -9.985529899597168
    8. '   ' → logprob: -10.360529899597168
    9. '  ' → logprob: -12.485529899597168
    10. ' )
' → logprob: -12.735529899597168

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519349455833435
    2. ' i' → logprob: -1.5019350051879883
    3. ' range' → logprob: -12.876935005187988
    4. ' in' → logprob: -13.126935005187988
    5. 'range' → logprob: -14.251935005187988
    6. '	i' → logprob: -15.001935005187988
    7. 'in' → logprob: -16.251934051513672
    8. '<|end|>' → logprob: -16.251934051513672
    9. ' ' → logprob: -16.876934051513672
    10. ')i' → logprob: -17.876934051513672

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1065782904624939
    2. ' range' → logprob: -2.6065783500671387
    3. 'in' → logprob: -4.106578350067139
    4. 'range' → logprob: -4.606578350067139
    5. '<|end|>' → logprob: -7.106578350067139
    6. ')' → logprob: -10.98157787322998
    7. '(range' → logprob: -11.60657787322998
    8. '<|end|>' → logprob: -12.48157787322998
    9. ' xrange' → logprob: -12.98157787322998
    10. ' ' → logprob: -12.98157787322998

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858805239200592
    2. ' range' → logprob: -3.0485880374908447
    3. '(range' → logprob: -15.173587799072266
    4. ' ' → logprob: -15.548587799072266
    5. '   ' → logprob: -16.048587799072266
    6. '	range' → logprob: -16.173587799072266
    7. ')' → logprob: -16.298587799072266
    8. '  ' → logprob: -17.798587799072266
    9. '
' → logprob: -18.548587799072266
    10. '```' → logprob: -18.673587799072266

Token 120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005757896578870714
    2. 'n' → logprob: -7.500576019287109
    3. '(' → logprob: -11.00057601928711
    4. ' n' → logprob: -12.25057601928711
    5. '(len' → logprob: -14.50057601928711
    6. ')n' → logprob: -14.50057601928711
    7. ' (' → logprob: -15.87557601928711
    8. ')' → logprob: -16.37557601928711
    9. ',n' → logprob: -16.87557601928711
    10. '(
' → logprob: -17.75057601928711

Token 121: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003186743939295411
    2. ')
' → logprob: -5.7531867027282715
    3. ' )' → logprob: -12.25318717956543
    4. '))' → logprob: -13.00318717956543
    5. '   ' → logprob: -14.00318717956543
    6. ')
' → logprob: -14.87818717956543
    7. ')

' → logprob: -15.50318717956543
    8. ' )
' → logprob: -15.62818717956543
    9. '))
' → logprob: -16.25318717956543
    10. ')+' → logprob: -16.75318717956543

Token 122: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.25354933738708496
    2. ' right' → logprob: -1.628549337387085
    3. '   ' → logprob: -3.628549337387085
    4. '	right' → logprob: -7.628549575805664
    5. '
' → logprob: -8.253549575805664
    6. '    
' → logprob: -9.003549575805664
    7. '```' → logprob: -9.378549575805664
    8. ',right' → logprob: -10.128549575805664
    9. '<|end|>' → logprob: -10.128549575805664
    10. ' ' → logprob: -11.128549575805664

Token 123: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.11574514210224152
    2. ' right' → logprob: -2.2407450675964355
    3. '   ' → logprob: -5.9907450675964355
    4. 'print' → logprob: -7.9907450675964355
    5. '	right' → logprob: -11.115745544433594
    6. 'Right' → logprob: -11.740745544433594
    7. '    
' → logprob: -11.740745544433594
    8. ' ' → logprob: -11.740745544433594
    9. 'width' → logprob: -11.990745544433594
    10. ' print' → logprob: -11.990745544433594

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.686968803405762
    4. ')' → logprob: -16.186967849731445
    5. ',' → logprob: -16.561967849731445
    6. '<|end|>' → logprob: -16.936967849731445
    7. ' =)' → logprob: -17.561967849731445
    8. '>' → logprob: -17.936967849731445
    9. ' ' → logprob: -18.186967849731445
    10. '  ' → logprob: -18.186967849731445

Token 125: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10020678490400314
    2. ' max' → logprob: -2.3502068519592285
    3. 'min' → logprob: -16.22520637512207
    4. '(max' → logprob: -16.85020637512207
    5. '   ' → logprob: -17.10020637512207
    6. '[max' → logprob: -17.72520637512207
    7. 'sum' → logprob: -18.22520637512207
    8. '=max' → logprob: -18.47520637512207
    9. 'float' → logprob: -18.60020637512207
    10. '	max' → logprob: -19.22520637512207

Token 126: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. '((' → logprob: -14.62515926361084
    4. 'x' → logprob: -14.62515926361084
    5. ' (' → logprob: -16.625160217285156
    6. '([' → logprob: -17.500160217285156
    7. '(
' → logprob: -18.250160217285156
    8. '(max' → logprob: -18.375160217285156
    9. '(float' → logprob: -18.500160217285156
    10. '()' → logprob: -19.000160217285156

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. ' [' → logprob: -16.125
    4. '[j' → logprob: -17.0
    5. 'i' → logprob: -17.375
    6. '[
' → logprob: -18.375
    7. '```' → logprob: -19.0
    8. '[I' → logprob: -19.25
    9. '[x' → logprob: -20.875
    10. '[index' → logprob: -20.875

Token 128: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22896762192249298
    2. '+r' → logprob: -2.4789676666259766
    3. '+' → logprob: -2.7289676666259766
    4. '+i' → logprob: -3.4789676666259766
    5. ' +' → logprob: -3.8539676666259766
    6. ')+' → logprob: -6.478967666625977
    7. ']+' → logprob: -6.728967666625977
    8. '[' → logprob: -8.478967666625977
    9. '[r' → logprob: -8.853967666625977
    10. '+[' → logprob: -8.853967666625977

Token 129: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.954393079970032e-05
    2. ' r' → logprob: -10.000049591064453
    3. '[r' → logprob: -12.750049591064453
    4. '[i' → logprob: -14.625049591064453
    5. '	r' → logprob: -15.625049591064453
    6. '   ' → logprob: -15.750049591064453
    7. 'i' → logprob: -15.750049591064453
    8. '(r' → logprob: -16.375049591064453
    9. ' ' → logprob: -16.875049591064453
    10. '[' → logprob: -17.125049591064453

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. '[j' → logprob: -17.0
    4. 'i' → logprob: -17.125
    5. '(i' → logprob: -18.25
    6. ' [' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. '[I' → logprob: -19.0
    9. '[
' → logprob: -19.125
    10. '   ' → logprob: -20.75

Token 131: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1573619544506073
    2. 'for' → logprob: -2.2823619842529297
    3. ')' → logprob: -3.2823619842529297
    4. ']' → logprob: -5.65736198425293
    5. ' ' → logprob: -6.40736198425293
    6. '[i' → logprob: -7.78236198425293
    7. '   ' → logprob: -8.03236198425293
    8. '	for' → logprob: -9.90736198425293
    9. '}' → logprob: -10.78236198425293
    10. '```' → logprob: -10.90736198425293

Token 132: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006719282828271389
    2. 'for' → logprob: -5.00671911239624
    3. ')' → logprob: -13.131719589233398
    4. ' ' → logprob: -13.881719589233398
    5. '	for' → logprob: -14.131719589233398
    6. '   ' → logprob: -15.756719589233398
    7. '(' → logprob: -16.7567195892334
    8. '(for' → logprob: -16.8817195892334
    9. '(i' → logprob: -17.1317195892334
    10. ' (' → logprob: -17.2567195892334

Token 133: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.260981023311615
    2. ' i' → logprob: -1.6359810829162598
    3. ' range' → logprob: -3.6359810829162598
    4. 'range' → logprob: -4.76098108291626
    5. '(i' → logprob: -11.385980606079102
    6. '(range' → logprob: -12.635980606079102
    7. '[i' → logprob: -12.885980606079102
    8. ' in' → logprob: -12.885980606079102
    9. ' ' → logprob: -13.010980606079102
    10. '   ' → logprob: -13.385980606079102

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18525560200214386
    2. ' range' → logprob: -2.185255527496338
    3. 'range' → logprob: -3.185255527496338
    4. 'in' → logprob: -4.185255527496338
    5. '(range' → logprob: -9.560256004333496
    6. 'n' → logprob: -14.185256004333496
    7. ' ' → logprob: -14.310256004333496
    8. 'i' → logprob: -14.810256004333496
    9. ')' → logprob: -15.060256004333496
    10. '   ' → logprob: -15.560256004333496

Token 135: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602507382631302
    2. ' range' → logprob: -1.9102507829666138
    3. '(range' → logprob: -10.660250663757324
    4. 'n' → logprob: -12.910250663757324
    5. '(n' → logprob: -14.410250663757324
    6. '   ' → logprob: -16.66025161743164
    7. ' n' → logprob: -17.03525161743164
    8. ' ' → logprob: -17.78525161743164
    9. '	range' → logprob: -18.16025161743164
    10. '
' → logprob: -18.66025161743164

Token 136: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0035944944247603416
    2. 'n' → logprob: -5.878594398498535
    3. 'range' → logprob: -7.378594398498535
    4. ' range' → logprob: -9.128594398498535
    5. '(range' → logprob: -10.503594398498535
    6. '(' → logprob: -10.753594398498535
    7. ' n' → logprob: -12.003594398498535
    8. ' (' → logprob: -14.378594398498535
    9. ',n' → logprob: -15.628594398498535
    10. ')' → logprob: -15.628594398498535

Token 137: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004463943187147379
    2. '))' → logprob: -5.504464149475098
    3. ')
' → logprob: -8.629464149475098
    4. ')+' → logprob: -8.629464149475098
    5. ' )' → logprob: -11.504464149475098
    6. '))
' → logprob: -11.629464149475098
    7. '   ' → logprob: -12.379464149475098
    8. '+' → logprob: -14.004464149475098
    9. '])' → logprob: -14.129464149475098
    10. ')))' → logprob: -14.504464149475098

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.113955058157444
    2. 'print' → logprob: -2.613955020904541
    3. ' print' → logprob: -3.613955020904541
    4. '    
' → logprob: -5.363955020904541
    5. ' 
' → logprob: -7.113955020904541
    6. ' return' → logprob: -7.488955020904541
    7. 'return' → logprob: -8.1139554977417
    8. '    ' → logprob: -8.2389554977417
    9. '```' → logprob: -8.6139554977417
    10. ' length' → logprob: -8.8639554977417

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.7217239737510681
    2. ' print' → logprob: -0.7217239737510681
    3. '   ' → logprob: -3.596724033355713
    4. ' length' → logprob: -8.596723556518555
    5. '    
' → logprob: -9.221723556518555
    6. 'length' → logprob: -9.596723556518555
    7. 'answer' → logprob: -10.096723556518555
    8. ' width' → logprob: -10.221723556518555
    9. ' ans' → logprob: -10.221723556518555
    10. ' answer' → logprob: -10.221723556518555

Token 140: '("{' (ID: 29673)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8006200790405273
    2. '(right' → logprob: -1.0506200790405273
    3. '((' → logprob: -1.9256200790405273
    4. '(round' → logprob: -3.4256200790405273
    5. '(int' → logprob: -5.050620079040527
    6. '()' → logprob: -5.175620079040527
    7. '(left' → logprob: -5.675620079040527
    8. '(abs' → logprob: -6.300620079040527
    9. '(f' → logprob: -6.550620079040527
    10. '(math' → logprob: -6.550620079040527

Token 141: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.017305098474025726
    2. '0' → logprob: -4.26730489730835
    3. '.' → logprob: -5.89230489730835
    4. 'right' → logprob: -8.892305374145508
    5. ':' → logprob: -9.017305374145508
    6. ':right' → logprob: -10.267305374145508
    7. '.right' → logprob: -10.517305374145508
    8. '}' → logprob: -10.642305374145508
    9. 'left' → logprob: -11.892305374145508
    10. '{' → logprob: -12.142305374145508

Token 142: '8' (ID: 23)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.793663501739502
    2. '9' → logprob: -1.418663501739502
    3. '6' → logprob: -2.043663501739502
    4. '7' → logprob: -2.668663501739502
    5. '8' → logprob: -2.793663501739502
    6. '12' → logprob: -3.918663501739502
    7. '15' → logprob: -4.043663501739502
    8. '11' → logprob: -6.168663501739502
    9. '20' → logprob: -6.918663501739502
    10. '3' → logprob: -6.918663501739502

Token 143: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.7432603272027336e-06
    2. 'g' → logprob: -13.625001907348633
    3. ' f' → logprob: -15.125001907348633
    4. 'e' → logprob: -15.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. '
' → logprob: -17.875001907348633
    7. '}' → logprob: -18.500001907348633
    8. '{' → logprob: -19.250001907348633
    9. '	f' → logprob: -19.250001907348633
    10. ''f' → logprob: -19.375001907348633

Token 144: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.3086777925491333
    2. '".' → logprob: -1.4336777925491333
    3. '"' → logprob: -3.6836776733398438
    4. '}' → logprob: -7.558677673339844
    5. '{}".' → logprob: -7.558677673339844
    6. '}"' → logprob: -8.683677673339844
    7. '")' → logprob: -8.683677673339844
    8. '"%(' → logprob: -8.933677673339844
    9. '"{' → logprob: -9.183677673339844
    10. '",' → logprob: -9.183677673339844

Token 145: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -2.696889623621246e-06
    2. ' format' → logprob: -13.50000286102295
    3. 'rstrip' → logprob: -14.37500286102295
    4. 'strip' → logprob: -15.12500286102295
    5. '	format' → logprob: -15.50000286102295
    6. 'form' → logprob: -16.000001907348633
    7. ')' → logprob: -17.125001907348633
    8. '(format' → logprob: -17.625001907348633
    9. 'ormat' → logprob: -17.750001907348633
    10. 'print' → logprob: -17.750001907348633

Token 146: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -5.097437315271236e-05
    2. 'right' → logprob: -10.00005054473877
    3. '(' → logprob: -13.00005054473877
    4. '((' → logprob: -13.25005054473877
    5. '(left' → logprob: -14.37505054473877
    6. ' right' → logprob: -15.12505054473877
    7. '(abs' → logprob: -15.50005054473877
    8. ' (' → logprob: -15.75005054473877
    9. ',right' → logprob: -16.375051498413086
    10. ')' → logprob: -16.500051498413086

Token 147: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.1531810313463211
    2. '-' → logprob: -2.1531810760498047
    3. ' -' → logprob: -3.6531810760498047
    4. '   ' → logprob: -14.278181076049805
    5. '-le' → logprob: -14.403181076049805
    6. ')' → logprob: -14.653181076049805
    7. '-right' → logprob: -15.528181076049805
    8. '-L' → logprob: -15.903181076049805
    9. '-)' → logprob: -16.153181076049805
    10. '-last' → logprob: -16.403181076049805

Token 148: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004100604448467493
    2. ')' → logprob: -5.504100799560547
    3. ' ))' → logprob: -11.504100799560547
    4. '))
' → logprob: -11.629100799560547
    5. ')))' → logprob: -13.129100799560547
    6. ' ' → logprob: -15.004100799560547
    7. '+' → logprob: -15.379100799560547
    8. ' )' → logprob: -16.004100799560547
    9. '()))' → logprob: -16.004100799560547
    10. '   ' → logprob: -16.254100799560547

Token 149: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000577696890104562
    2. '(' → logprob: -7.500577926635742
    3. '()
' → logprob: -11.375577926635742
    4. '();' → logprob: -12.625577926635742
    5. '()`' → logprob: -13.375577926635742
    6. '()

' → logprob: -13.375577926635742
    7. '())' → logprob: -13.500577926635742
    8. '()<' → logprob: -14.000577926635742
    9. '()]' → logprob: -14.000577926635742
    10. ' ()' → logprob: -14.250577926635742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 48.65%
Précision adaptée (1ère position): 50.68%
Précision (top 10): 88.51%
================================================================================
