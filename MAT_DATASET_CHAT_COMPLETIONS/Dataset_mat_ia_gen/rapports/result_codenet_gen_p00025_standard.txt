================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    a = list(map(int, line.split()))
    if len(a) < 4:
        continue
    b = list(map(int, sys.stdin.readline().split()))
    hit = sum(x == y for x, y in zip(a, b))
    blow = len(set(a) & set(b)) - hit
    print(hit, blow)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024264329113066196
    2. '  ' → logprob: -6.127426624298096
    3. ' i' → logprob: -8.377426147460938
    4. ' space' → logprob: -13.377426147460938
    5. '_' → logprob: -13.877426147460938
    6. ' )' → logprob: -14.127426147460938
    7. 'i' → logprob: -14.127426147460938
    8. ' ‌' → logprob: -14.127426147460938
    9. ' a' → logprob: -14.252426147460938
    10. '```' → logprob: -14.377426147460938

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2646585702896118
    2. 'in' → logprob: -1.5146585702896118
    3. ':' → logprob: -5.014658451080322
    4. '[' → logprob: -5.889658451080322
    5. 'import' → logprob: -7.889658451080322
    6. '```' → logprob: -7.889658451080322
    7. '[]' → logprob: -7.889658451080322
    8. '[:]' → logprob: -8.38965892791748
    9. ' ' → logprob: -8.51465892791748
    10. '[:' → logprob: -8.63965892791748

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01129148993641138
    2. 'sys' → logprob: -4.51129150390625
    3. ' ' → logprob: -9.38629150390625
    4. '=sys' → logprob: -9.51129150390625
    5. '	sys' → logprob: -10.51129150390625
    6. '(sys' → logprob: -10.76129150390625
    7. ' iter' → logprob: -11.13629150390625
    8. '```' → logprob: -12.26129150390625
    9. ' file' → logprob: -12.38629150390625
    10. ' open' → logprob: -12.51129150390625

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013267522677779198
    2. '.readline' → logprob: -4.513267517089844
    3. '.stdin' → logprob: -6.638267517089844
    4. ' .' → logprob: -7.763267517089844
    5. '.readlines' → logprob: -9.138267517089844
    6. '.argv' → logprob: -9.263267517089844
    7. ':' → logprob: -9.638267517089844
    8. '.stdout' → logprob: -9.638267517089844
    9. '```' → logprob: -10.638267517089844
    10. '[' → logprob: -11.513267517089844

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001029471677611582
    2. ' :' → logprob: -10.125102996826172
    3. ':
' → logprob: -10.625102996826172
    4. ':**' → logprob: -11.375102996826172
    5. '[:]' → logprob: -11.625102996826172
    6. '):' → logprob: -12.750102996826172
    7. '>:' → logprob: -12.875102996826172
    8. '':' → logprob: -12.875102996826172
    9. '':'' → logprob: -13.250102996826172
    10. '():' → logprob: -14.000102996826172

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018542143516242504
    2. '    
' → logprob: -8.875185012817383
    3. ' print' → logprob: -10.875185012817383
    4. '```' → logprob: -11.750185012817383
    5. 'print' → logprob: -12.375185012817383
    6. '   ' → logprob: -12.500185012817383
    7. '    ' → logprob: -12.875185012817383
    8. ' if' → logprob: -13.625185012817383
    9. '`' → logprob: -13.750185012817383
    10. ' ' → logprob: -14.250185012817383

Token 10: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1665678769350052
    2. '   ' → logprob: -2.041567802429199
    3. ' print' → logprob: -3.916567802429199
    4. '    ' → logprob: -6.916567802429199
    5. 'pass' → logprob: -6.916567802429199
    6. ' line' → logprob: -7.041567802429199
    7. 'line' → logprob: -7.791567802429199
    8. ' pass' → logprob: -8.5415678024292
    9. ' if' → logprob: -9.9165678024292
    10. 'strip' → logprob: -10.0415678024292

Token 11: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0774887800216675
    2. '.' → logprob: -2.077488899230957
    3. '.strip' → logprob: -2.077488899230957
    4. ' =' → logprob: -2.202488899230957
    5. 'dd' → logprob: -2.577488899230957
    6. 'd' → logprob: -2.577488899230957
    7. '=' → logprob: -3.327488899230957
    8. '   ' → logprob: -3.952488899230957
    9. ' ' → logprob: -4.202488899230957
    10. 'r' → logprob: -4.327488899230957

Token 12: ' list' (ID: 1562)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07553217560052872
    2. 'line' → logprob: -3.2005321979522705
    3. ' int' → logprob: -3.7005321979522705
    4. 'int' → logprob: -4.950531959533691
    5. ' float' → logprob: -9.700531959533691
    6. ' ' → logprob: -9.950531959533691
    7. '	line' → logprob: -10.450531959533691
    8. '   ' → logprob: -10.700531959533691
    9. ' a' → logprob: -11.700531959533691
    10. 'a' → logprob: -11.950531959533691

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004768191836774349
    2. '(line' → logprob: -5.879768371582031
    3. '(a' → logprob: -6.754768371582031
    4. '(range' → logprob: -8.379768371582031
    5. '(map' → logprob: -9.754768371582031
    6. '()' → logprob: -9.754768371582031
    7. '(input' → logprob: -9.754768371582031
    8. ' (' → logprob: -10.129768371582031
    9. '(filter' → logprob: -10.379768371582031
    10. '(eval' → logprob: -10.629768371582031

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2170836329460144
    2. '(' → logprob: -1.9670836925506592
    3. '(str' → logprob: -2.967083692550659
    4. '(lambda' → logprob: -6.21708345413208
    5. ')' → logprob: -7.09208345413208
    6. 'int' → logprob: -7.71708345413208
    7. 'str' → logprob: -8.967083930969238
    8. '(
' → logprob: -9.217083930969238
    9. '<int' → logprob: -9.342083930969238
    10. '(ord' → logprob: -9.967083930969238

Token 15: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.058252956718206406
    2. '(' → logprob: -2.933253049850464
    3. ')' → logprob: -7.058252811431885
    4. ' (' → logprob: -7.308252811431885
    5. '(sys' → logprob: -7.683252811431885
    6. ',' → logprob: -8.058253288269043
    7. '(token' → logprob: -8.308253288269043
    8. '))' → logprob: -9.183253288269043
    9. '(
' → logprob: -9.558253288269043
    10. '(word' → logprob: -9.808253288269043

Token 16: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.28127849102020264
    2. 'line' → logprob: -1.4062784910202026
    3. '(line' → logprob: -9.281278610229492
    4. '[line' → logprob: -11.281278610229492
    5. '	line' → logprob: -11.406278610229492
    6. '=line' → logprob: -12.531278610229492
    7. '#line' → logprob: -12.656278610229492
    8. ')' → logprob: -13.656278610229492
    9. ',line' → logprob: -13.656278610229492
    10. ' ' → logprob: -14.406278610229492

Token 17: '.split' (ID: 10347)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8462432622909546
    2. '.strip' → logprob: -1.2212432622909546
    3. '.split' → logprob: -1.8462432622909546
    4. ')' → logprob: -2.721243381500244
    5. '.rstrip' → logprob: -3.596243381500244
    6. '   ' → logprob: -5.096243381500244
    7. '.readline' → logprob: -5.096243381500244
    8. ')))' → logprob: -5.221243381500244
    9. '.' → logprob: -5.721243381500244
    10. '[' → logprob: -6.096243381500244

Token 18: '()))
' (ID: 24521)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1903170347213745
    2. '())' → logprob: -1.1903170347213745
    3. '()))' → logprob: -2.065317153930664
    4. '(' → logprob: -2.190317153930664
    5. ')' → logprob: -2.190317153930664
    6. '))' → logprob: -3.440317153930664
    7. ')))' → logprob: -5.815317153930664
    8. '())))' → logprob: -6.065317153930664
    9. '(','' → logprob: -6.565317153930664
    10. '()' → logprob: -6.565317153930664

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8435373902320862
    2. '[' → logprob: -1.3435373306274414
    3. ' if' → logprob: -3.0935373306274414
    4. '<|end|>' → logprob: -3.0935373306274414
    5. ':' → logprob: -3.2185373306274414
    6. ' ' → logprob: -3.2185373306274414
    7. '    
' → logprob: -3.3435373306274414
    8. '
' → logprob: -3.4685373306274414
    9. '\n' → logprob: -4.093537330627441
    10. '    ' → logprob: -4.593537330627441

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43498557806015015
    2. '[' → logprob: -1.684985637664795
    3. ' if' → logprob: -2.934985637664795
    4. 'if' (adapté à ' if') → logprob: -3.184985637664795
    5. '    ' → logprob: -3.934985637664795
    6. ' ' → logprob: -4.059985637664795
    7. '    
' → logprob: -5.309985637664795
    8. '       ' → logprob: -5.309985637664795
    9. '```' → logprob: -5.434985637664795
    10. '[i' → logprob: -6.059985637664795

Token 21: ' len' (ID: 4631)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.21666742861270905
    2. ' not' → logprob: -2.341667413711548
    3. ' len' → logprob: -2.591667413711548
    4. 'a' → logprob: -3.841667413711548
    5. ' ' → logprob: -6.466667652130127
    6. 'len' → logprob: -7.466667652130127
    7. 'not' → logprob: -9.716667175292969
    8. '   ' → logprob: -10.091667175292969
    9. ' ' → logprob: -10.966667175292969
    10. '  ' → logprob: -11.091667175292969

Token 22: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02054586075246334
    2. '(' → logprob: -3.8955459594726562
    3. ' (' → logprob: -13.020545959472656
    4. '(s' → logprob: -13.895545959472656
    5. ' ' → logprob: -15.645545959472656
    6. '(A' → logprob: -16.145545959472656
    7. '(ai' → logprob: -16.145545959472656
    8. 'a' → logprob: -16.395545959472656
    9. '()' → logprob: -16.520545959472656
    10. '(i' → logprob: -16.645545959472656

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020995871163904667
    2. ' )' → logprob: -6.877099514007568
    3. ' ==' → logprob: -7.627099514007568
    4. '==' → logprob: -8.752099990844727
    5. ')==' → logprob: -9.002099990844727
    6. ' ' → logprob: -9.377099990844727
    7. ' >' → logprob: -9.502099990844727
    8. ')>' → logprob: -9.752099990844727
    9. '>' → logprob: -10.002099990844727
    10. ' <' → logprob: -11.502099990844727

Token 24: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4175357520580292
    2. ' <' → logprob: -1.7925357818603516
    3. ' >' → logprob: -2.2925357818603516
    4. '==' → logprob: -3.1675357818603516
    5. '>' → logprob: -4.417535781860352
    6. ' ' → logprob: -4.667535781860352
    7. '<' → logprob: -4.917535781860352
    8. ' >=' → logprob: -6.417535781860352
    9. ')' → logprob: -7.792535781860352
    10. ' !=' → logprob: -8.542535781860352

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22719746828079224
    2. '2' → logprob: -1.9771974086761475
    3. '1' → logprob: -2.8521974086761475
    4. '3' → logprob: -4.977197647094727
    5. '4' → logprob: -9.227197647094727
    6. '=' → logprob: -10.477197647094727
    7. '5' → logprob: -11.352197647094727
    8. '>' → logprob: -11.727197647094727
    9. '6' → logprob: -12.102197647094727
    10. '10' → logprob: -13.102197647094727

Token 26: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15067142248153687
    2. '1' → logprob: -2.6506714820861816
    3. ' ' → logprob: -3.0256714820861816
    4. '3' → logprob: -3.9006714820861816
    5. '4' → logprob: -8.025671005249023
    6. '5' → logprob: -9.900671005249023
    7. '```' → logprob: -10.463171005249023
    8. '10' → logprob: -10.588171005249023
    9. '>' → logprob: -11.150671005249023
    10. '0' → logprob: -11.588171005249023

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012439649435691535
    2. ':
' → logprob: -9.500123977661133
    3. ' :' → logprob: -10.375123977661133
    4. '):' → logprob: -12.000123977661133
    5. '   ' → logprob: -12.500123977661133
    6. '       ' → logprob: -12.500123977661133
    7. ' or' → logprob: -13.625123977661133
    8. '    ' → logprob: -13.875123977661133
    9. ' and' → logprob: -14.625123977661133
    10. ':return' → logprob: -14.875123977661133

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013917774776928127
    2. '    ' → logprob: -9.500139236450195
    3. '   ' → logprob: -10.500139236450195
    4. '        
' → logprob: -11.875139236450195
    5. '     ' → logprob: -12.125139236450195
    6. '        ' → logprob: -12.125139236450195
    7. '      ' → logprob: -12.250139236450195
    8. ' ' → logprob: -12.875139236450195
    9. ':' → logprob: -13.000139236450195
    10. '           ' → logprob: -13.625139236450195

Token 29: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.15888530015945435
    2. '       ' → logprob: -2.1588852405548096
    3. '   ' → logprob: -4.033885478973389
    4. 'break' → logprob: -4.658885478973389
    5. '    ' → logprob: -5.658885478973389
    6. ' continue' → logprob: -8.03388500213623
    7. '```' → logprob: -8.53388500213623
    8. ' ' → logprob: -9.78388500213623
    9. '	break' → logprob: -10.53388500213623
    10. 'b' → logprob: -10.65888500213623

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3701758086681366
    2. '    
' → logprob: -1.370175838470459
    3. '\n' → logprob: -3.995175838470459
    4. '
' → logprob: -4.120175838470459
    5. '   
' → logprob: -5.245175838470459
    6. '```' → logprob: -5.245175838470459
    7. '  ' → logprob: -6.495175838470459
    8. '    ' → logprob: -6.495175838470459
    9. '  
' → logprob: -6.620175838470459
    10. '[' → logprob: -6.870175838470459

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3328058421611786
    2. '    
' → logprob: -1.332805871963501
    3. '\n' → logprob: -4.707805633544922
    4. '
' → logprob: -5.332805633544922
    5. '        
' → logprob: -7.082805633544922
    6. '   
' → logprob: -7.207805633544922
    7. '    ' → logprob: -7.332805633544922
    8. '```' → logprob: -7.457805633544922
    9. '\' → logprob: -7.582805633544922
    10. '     
' → logprob: -7.957805633544922

Token 32: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20123085379600525
    2. '    
' → logprob: -2.451230764389038
    3. '\n' → logprob: -2.701230764389038
    4. '    ' → logprob: -5.076231002807617
    5. '[' → logprob: -5.451231002807617
    6. '
' → logprob: -5.826231002807617
    7. ' ' → logprob: -6.076231002807617
    8. 'n' → logprob: -6.076231002807617
    9. '\' → logprob: -6.201231002807617
    10. '   
' → logprob: -6.451231002807617

Token 33: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19388432800769806
    2. ' =' → logprob: -1.8188843727111816
    3. '.append' → logprob: -5.318884372711182
    4. '=' → logprob: -6.193884372711182
    5. ',' → logprob: -6.443884372711182
    6. '[i' → logprob: -6.568884372711182
    7. '.' → logprob: -6.568884372711182
    8. '[]' → logprob: -6.943884372711182
    9. '[:]' → logprob: -7.693884372711182
    10. '   ' → logprob: -8.568883895874023

Token 34: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3263443112373352
    2. '[a' → logprob: -1.4513442516326904
    3. 'sorted' → logprob: -4.5763444900512695
    4. ' a' → logprob: -4.7013444900512695
    5. '[]' → logprob: -4.9513444900512695
    6. ' [' → logprob: -4.9513444900512695
    7. '[' → logprob: -5.5763444900512695
    8. '[max' → logprob: -5.9513444900512695
    9. ' sorted' → logprob: -7.4513444900512695
    10. '[min' → logprob: -7.5763444900512695

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0143885537981987
    2. '(' → logprob: -4.389388561248779
    3. '(a' → logprob: -6.389388561248779
    4. '(int' → logprob: -9.264388084411621
    5. '(
' → logprob: -10.889388084411621
    6. '(range' → logprob: -10.889388084411621
    7. '(set' → logprob: -11.139388084411621
    8. '(b' → logprob: -11.514388084411621
    9. '(filter' → logprob: -11.889388084411621
    10. '(s' → logprob: -12.514388084411621

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000785091076977551
    2. '(' → logprob: -7.250784873962402
    3. '(lambda' → logprob: -10.875784873962402
    4. ',int' → logprob: -11.000784873962402
    5. '(str' → logprob: -11.500784873962402
    6. '<int' → logprob: -11.500784873962402
    7. ')' → logprob: -12.375784873962402
    8. '=int' → logprob: -12.375784873962402
    9. 'int' → logprob: -12.875784873962402
    10. '(
' → logprob: -13.250784873962402

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07684070616960526
    2. '(line' → logprob: -3.20184063911438
    3. '(' → logprob: -3.45184063911438
    4. '(sys' → logprob: -7.326840877532959
    5. ',line' → logprob: -7.576840877532959
    6. ' ,' → logprob: -8.7018404006958
    7. ',(' → logprob: -8.8268404006958
    8. ' (' → logprob: -10.8268404006958
    9. '(),' → logprob: -10.9518404006958
    10. '(input' → logprob: -12.0768404006958

Token 38: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3592996299266815
    2. 'input' → logprob: -1.984299659729004
    3. ' line' → logprob: -2.234299659729004
    4. 'line' → logprob: -3.609299659729004
    5. ' sys' → logprob: -3.859299659729004
    6. 'sys' → logprob: -5.609299659729004
    7. ' str' → logprob: -6.234299659729004
    8. 'str' → logprob: -6.984299659729004
    9. ' a' → logprob: -7.234299659729004
    10. 'a' → logprob: -7.484299659729004

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005854414775967598
    2. '.argv' → logprob: -7.500585556030273
    3. '.stdout' → logprob: -10.625585556030273
    4. '.' → logprob: -12.125585556030273
    5. '.stderr' → logprob: -13.625585556030273
    6. '.std' → logprob: -14.375585556030273
    7. '.readline' → logprob: -14.375585556030273
    8. 'stdin' → logprob: -15.750585556030273
    9. '.st' → logprob: -16.250585556030273
    10. '.max' → logprob: -16.375585556030273

Token 40: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00038074489566497505
    2. '.' → logprob: -7.875380516052246
    3. '.__' → logprob: -15.250380516052246
    4. '.readlines' → logprob: -15.500380516052246
    5. ')' → logprob: -16.000381469726562
    6. '.next' → logprob: -16.625381469726562
    7. ' readline' → logprob: -17.000381469726562
    8. '))' → logprob: -18.875381469726562
    9. ' .' → logprob: -19.000381469726562
    10. 'line' → logprob: -19.625381469726562

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18706637620925903
    2. '()))' → logprob: -1.8120663166046143
    3. '()' → logprob: -5.062066555023193
    4. '())' → logprob: -7.062066555023193
    5. '()))
' → logprob: -10.812066078186035
    6. '(' → logprob: -10.937066078186035
    7. '()[' → logprob: -11.187066078186035
    8. '))' → logprob: -11.312066078186035
    9. '()));' → logprob: -11.812066078186035
    10. '())))' → logprob: -11.937066078186035

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023759808391332626
    2. 'strip' → logprob: -3.7737598419189453
    3. 'rstrip' → logprob: -7.648759841918945
    4. ' split' → logprob: -10.398759841918945
    5. ' strip' → logprob: -13.273759841918945
    6. 'read' → logprob: -13.398759841918945
    7. '(split' → logprob: -14.023759841918945
    8. ' ' → logprob: -14.148759841918945
    9. 'decode' → logprob: -14.148759841918945
    10. ')' → logprob: -14.148759841918945

Token 43: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004471896681934595
    2. '())' → logprob: -6.004471778869629
    3. '()' → logprob: -6.379471778869629
    4. '))' → logprob: -8.504471778869629
    5. '()))
' → logprob: -9.754471778869629
    6. '(' → logprob: -10.629471778869629
    7. '())))' → logprob: -11.879471778869629
    8. '()))

' → logprob: -13.379471778869629
    9. '()));' → logprob: -13.379471778869629
    10. '()))
' → logprob: -14.629471778869629

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.738048255443573
    2. ' ' → logprob: -2.2380483150482178
    3. '[' → logprob: -2.4880483150482178
    4. '<|end|>' → logprob: -2.4880483150482178
    5. '    
' → logprob: -2.7380483150482178
    6. '\n' → logprob: -2.7380483150482178
    7. '\' → logprob: -2.9880483150482178
    8. ')' → logprob: -4.363048076629639
    9. ' 
' → logprob: -4.488048076629639
    10. '
' → logprob: -4.738048076629639

Token 45: ' hit' (ID: 7103)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5650231242179871
    2. ' ' → logprob: -1.6900231838226318
    3. '[' → logprob: -2.565023183822632
    4. '\n' → logprob: -3.190023183822632
    5. ' if' → logprob: -3.690023183822632
    6. ' 
' → logprob: -3.815023183822632
    7. '    
' → logprob: -3.940023183822632
    8. '\' → logprob: -4.565022945404053
    9. ')' → logprob: -4.940022945404053
    10. '    ' → logprob: -5.065022945404053

Token 46: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9717085957527161
    2. 's' → logprob: -1.2217085361480713
    3. '_count' → logprob: -2.0967085361480713
    4. ' =' → logprob: -2.3467085361480713
    5. '=' → logprob: -2.5967085361480713
    6. ' ' → logprob: -4.47170877456665
    7. '[' → logprob: -5.22170877456665
    8. '_index' → logprob: -5.97170877456665
    9. '_points' → logprob: -6.72170877456665
    10. '_rate' → logprob: -6.97170877456665

Token 47: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45986324548721313
    2. ' ' → logprob: -1.0848631858825684
    3. ' set' → logprob: -4.959863185882568
    4. ' False' → logprob: -5.084863185882568
    5. 'False' → logprob: -5.834863185882568
    6. 'set' → logprob: -5.834863185882568
    7. ' a' → logprob: -6.084863185882568
    8. ' b' → logprob: -6.209863185882568
    9. 'a' → logprob: -6.709863185882568
    10. ' [' → logprob: -6.834863185882568

Token 48: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06427562981843948
    2. '(a' → logprob: -2.8142757415771484
    3. '(b' → logprob: -6.439275741577148
    4. '((' → logprob: -7.689275741577148
    5. '([' → logprob: -9.564275741577148
    6. '(
' → logprob: -9.939275741577148
    7. ' (' → logprob: -10.814275741577148
    8. '(abs' → logprob: -10.814275741577148
    9. '(lambda' → logprob: -10.939275741577148
    10. 'a' → logprob: -11.189275741577148

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25273752212524414
    2. '==' → logprob: -1.7527375221252441
    3. ' in' → logprob: -3.377737522125244
    4. ' for' → logprob: -5.377737522125244
    5. ' >=' → logprob: -5.627737522125244
    6. '(' → logprob: -6.002737522125244
    7. ' >' → logprob: -6.502737522125244
    8. ' ' → logprob: -7.627737522125244
    9. '(x' → logprob: -7.627737522125244
    10. '>' → logprob: -8.002737045288086

Token 50: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3487546741962433
    2. ' y' → logprob: -1.223754644393921
    3. ' ' → logprob: -9.0987548828125
    4. '1' → logprob: -9.8487548828125
    5. '0' → logprob: -10.4737548828125
    6. '	y' → logprob: -10.7237548828125
    7. 'x' → logprob: -11.2237548828125
    8. 'b' → logprob: -11.2237548828125
    9. '   ' → logprob: -11.4737548828125
    10. '  ' → logprob: -11.9112548828125

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0008135587559081614
    2. ' ' → logprob: -7.7508134841918945
    3. 'for' → logprob: -7.8758134841918945
    4. '   ' → logprob: -13.750813484191895
    5. '	for' → logprob: -14.375813484191895
    6. '  ' → logprob: -14.375813484191895
    7. ' or' → logprob: -16.12581443786621
    8. ' a' → logprob: -16.12581443786621
    9. ')' → logprob: -16.12581443786621
    10. '    ' → logprob: -16.37581443786621

Token 52: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4245453178882599
    2. ' x' → logprob: -1.1745452880859375
    3. ' zip' → logprob: -3.9245452880859375
    4. 'a' → logprob: -4.5495452880859375
    5. 'x' → logprob: -5.0495452880859375
    6. ' b' → logprob: -9.049545288085938
    7. 'zip' → logprob: -9.674545288085938
    8. ' ' → logprob: -11.049545288085938
    9. 'b' → logprob: -11.924545288085938
    10. '	a' → logprob: -12.299545288085938

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04397069662809372
    2. ',y' → logprob: -3.1689705848693848
    3. ' ,' → logprob: -7.543970584869385
    4. ',b' → logprob: -7.918970584869385
    5. ' in' → logprob: -10.543971061706543
    6. ',x' → logprob: -11.293971061706543
    7. ',user' → logprob: -11.543971061706543
    8. ',s' → logprob: -12.918971061706543
    9. ',p' → logprob: -13.043971061706543
    10. ',h' → logprob: -13.168971061706543

Token 54: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326377391815186
    2. ' y' → logprob: -1.3132637739181519
    3. 'z' → logprob: -13.813263893127441
    4. ' ' → logprob: -15.188263893127441
    5. '<|end|>' → logprob: -15.188263893127441
    6. 'b' → logprob: -16.313262939453125
    7. '	y' → logprob: -16.438262939453125
    8. '  ' → logprob: -16.438262939453125
    9. ',y' → logprob: -16.563262939453125
    10. ' z' → logprob: -16.688262939453125

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008402384701184928
    2. 'in' → logprob: -7.125840187072754
    3. ')' → logprob: -10.750840187072754
    4. '<|end|>' → logprob: -12.125840187072754
    5. ' ' → logprob: -12.750840187072754
    6. ' )' → logprob: -13.125840187072754
    7. ',' → logprob: -13.375840187072754
    8. '   ' → logprob: -14.938340187072754
    9. '<|end|>' → logprob: -15.313340187072754
    10. 'b' → logprob: -15.625840187072754

Token 56: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.00023131117632146925
    2. 'zip' → logprob: -8.375231742858887
    3. '(zip' → logprob: -14.250231742858887
    4. ' b' → logprob: -17.37523078918457
    5. '.zip' → logprob: -17.62523078918457
    6. ' ' → logprob: -18.00023078918457
    7. ' a' → logprob: -19.00023078918457
    8. 'b' → logprob: -19.50023078918457
    9. ' zipped' → logprob: -19.62523078918457
    10. '_zip' → logprob: -19.75023078918457

Token 57: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00042221311014145613
    2. '(b' → logprob: -8.000422477722168
    3. '(' → logprob: -9.375422477722168
    4. ' (' → logprob: -13.500422477722168
    5. '(
' → logprob: -15.500422477722168
    6. '(ai' → logprob: -16.12542152404785
    7. '(s' → logprob: -16.37542152404785
    8. '<|end|>' → logprob: -16.62542152404785
    9. '(A' → logprob: -17.25042152404785
    10. ')' → logprob: -17.75042152404785

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09121375530958176
    2. ',b' → logprob: -2.4662137031555176
    3. ' ,' → logprob: -6.091213703155518
    4. 'b' → logprob: -11.966214179992676
    5. ',
' → logprob: -14.216214179992676
    6. ' b' → logprob: -14.841214179992676
    7. '[' → logprob: -14.966214179992676
    8. ',a' → logprob: -15.591214179992676
    9. '   ' → logprob: -15.716214179992676
    10. ',y' → logprob: -15.966214179992676

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42870965600013733
    2. ' b' → logprob: -1.053709626197815
    3. '   ' → logprob: -13.178709983825684
    4. ')b' → logprob: -13.303709983825684
    5. '[b' → logprob: -13.928709983825684
    6. ' ' → logprob: -14.178709983825684
    7. '	b' → logprob: -14.428709983825684
    8. '(b' → logprob: -14.428709983825684
    9. '[' → logprob: -14.428709983825684
    10. ')' → logprob: -15.178709983825684

Token 60: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00024727347772568464
    2. ')' → logprob: -8.50024700164795
    3. '))
' → logprob: -10.75024700164795
    4. ')))' → logprob: -10.87524700164795
    5. '   ' → logprob: -13.75024700164795
    6. ' ))' → logprob: -13.87524700164795
    7. ' ' → logprob: -15.00024700164795
    8. '))

' → logprob: -15.37524700164795
    9. 'if' → logprob: -16.125247955322266
    10. '));' → logprob: -16.125247955322266

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8503379821777344
    2. '
' → logprob: -1.1003379821777344
    3. '\n' → logprob: -2.2253379821777344
    4. ' ' → logprob: -3.3503379821777344
    5. '    
' → logprob: -3.4753379821777344
    6. ' 
' → logprob: -3.9753379821777344
    7. ' if' → logprob: -4.475337982177734
    8. '<|end|>' → logprob: -4.475337982177734
    9. 'if' → logprob: -5.725337982177734
    10. '  
' → logprob: -5.850337982177734

Token 62: ' blow' (ID: 23420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10690710693597794
    2. 'print' → logprob: -2.3569071292877197
    3. 'if' → logprob: -5.731906890869141
    4. ' print' → logprob: -6.356906890869141
    5. ' if' → logprob: -6.481906890869141
    6. '    
' → logprob: -9.35690689086914
    7. ' ' → logprob: -10.98190689086914
    8. '<|end|>' → logprob: -11.10690689086914
    9. '
' → logprob: -11.48190689086914
    10. ')' → logprob: -11.85690689086914

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005311666056513786
    2. '=' → logprob: -5.255311489105225
    3. 's' → logprob: -9.630311965942383
    4. ' +=' → logprob: -11.880311965942383
    5. ' ' → logprob: -12.505311965942383
    6. ' s' → logprob: -13.880311965942383
    7. ' =
' → logprob: -15.630311965942383
    8. '  ' → logprob: -16.255311965942383
    9. ',' → logprob: -16.755311965942383
    10. '=s' → logprob: -16.880311965942383

Token 64: ' len' (ID: 4631)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7128979563713074
    2. 'sum' → logprob: -0.7128979563713074
    3. 'len' → logprob: -4.587897777557373
    4. ' len' → logprob: -4.837897777557373
    5. '(sum' → logprob: -7.212897777557373
    6. ' ' → logprob: -8.712898254394531
    7. 'max' → logprob: -8.962898254394531
    8. 'min' → logprob: -9.212898254394531
    9. ' max' → logprob: -9.337898254394531
    10. '4' → logprob: -9.837898254394531

Token 65: '(set' (ID: 25904)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10615729540586472
    2. '(b' → logprob: -2.6061573028564453
    3. '(set' → logprob: -3.9811573028564453
    4. '([' → logprob: -4.856157302856445
    5. '(' → logprob: -8.481157302856445
    6. '(s' → logprob: -9.106157302856445
    7. '({' → logprob: -10.231157302856445
    8. 'a' → logprob: -10.356157302856445
    9. 'b' → logprob: -10.981157302856445
    10. 'set' → logprob: -11.356157302856445

Token 66: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002382249804213643
    2. '(b' → logprob: -9.250238418579102
    3. 'a' → logprob: -9.375238418579102
    4. '(' → logprob: -10.875238418579102
    5. ')' → logprob: -11.750238418579102
    6. '([' → logprob: -11.875238418579102
    7. '(s' → logprob: -12.250238418579102
    8. '(
' → logprob: -12.750238418579102
    9. '((' → logprob: -12.750238418579102
    10. ' (' → logprob: -13.000238418579102

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04215416684746742
    2. ' )' → logprob: -3.66715407371521
    3. ' &' → logprob: -4.542154312133789
    4. '&' → logprob: -5.417154312133789
    5. '   ' → logprob: -8.542154312133789
    6. '))' → logprob: -8.917154312133789
    7. ' -' → logprob: -9.542154312133789
    8. ' ' → logprob: -9.667154312133789
    9. ')&' → logprob: -9.667154312133789
    10. '-' → logprob: -10.542154312133789

Token 68: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4689981937408447
    2. ' &' → logprob: -1.5939981937408447
    3. ' )' → logprob: -2.0939981937408447
    4. '&' → logprob: -3.8439981937408447
    5. ' -' → logprob: -4.218997955322266
    6. '.inter' → logprob: -5.093997955322266
    7. ' ' → logprob: -5.593997955322266
    8. '   ' → logprob: -7.093997955322266
    9. '-' → logprob: -7.593997955322266
    10. ')-' → logprob: -9.343997955322266

Token 69: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.04860043153166771
    2. 'set' → logprob: -3.048600435256958
    3. '(set' → logprob: -12.298600196838379
    4. ' ' → logprob: -12.923600196838379
    5. '	set' → logprob: -13.173600196838379
    6. ')set' → logprob: -13.548600196838379
    7. '<|end|>' → logprob: -13.923600196838379
    8. '=set' → logprob: -13.923600196838379
    9. '   ' → logprob: -15.548600196838379
    10. '-set' → logprob: -16.048601150512695

Token 70: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.901345038088039e-05
    2. '(' → logprob: -9.375099182128906
    3. ' (' → logprob: -11.250099182128906
    4. 'b' → logprob: -14.875099182128906
    5. '(
' → logprob: -15.250099182128906
    6. ' b' → logprob: -15.375099182128906
    7. ')' → logprob: -15.875099182128906
    8. ')b' → logprob: -16.875099182128906
    9. '(set' → logprob: -17.000099182128906
    10. '(B' → logprob: -17.000099182128906

Token 71: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009805909357964993
    2. '))' → logprob: -4.634805679321289
    3. ' )' → logprob: -10.384805679321289
    4. '   ' → logprob: -12.134805679321289
    5. ')))' → logprob: -12.509805679321289
    6. ')-' → logprob: -12.759805679321289
    7. ')
' → logprob: -13.259805679321289
    8. '`)' → logprob: -13.634805679321289
    9. '))
' → logprob: -13.759805679321289
    10. ')`' → logprob: -14.384805679321289

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09878354519605637
    2. '-' → logprob: -2.848783493041992
    3. '<|end|>' → logprob: -4.098783493041992
    4. '   ' → logprob: -4.348783493041992
    5. ')' → logprob: -5.598783493041992
    6. ' ' → logprob: -6.598783493041992
    7. ' -
' → logprob: -7.598783493041992
    8. '-
' → logprob: -8.473783493041992
    9. ')-' → logprob: -8.848783493041992
    10. '
' → logprob: -8.973783493041992

Token 73: ' hit' (ID: 7103)
  Prédit: 'hit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hit' → logprob: -0.008614808320999146
    2. ' hit' → logprob: -4.758615016937256
    3. '(hit' → logprob: -15.383614540100098
    4. '   ' → logprob: -17.383615493774414
    5. ' ' → logprob: -17.508615493774414
    6. '_hit' → logprob: -18.258615493774414
    7. '.hit' → logprob: -18.883615493774414
    8. 'Hit' → logprob: -19.008615493774414
    9. 'hits' → logprob: -19.883615493774414
    10. '1' → logprob: -20.008615493774414

Token 74: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5040683746337891
    2. '<|end|>' → logprob: -1.379068374633789
    3. '   ' → logprob: -2.504068374633789
    4. '
' → logprob: -3.004068374633789
    5. 'print' → logprob: -5.254068374633789
    6. ')' → logprob: -6.004068374633789
    7. '    
' → logprob: -6.754068374633789
    8. '```' → logprob: -7.254068374633789
    9. ' ' → logprob: -7.504068374633789
    10. '<|end|>' → logprob: -7.629068374633789

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17328260838985443
    2. '\n' → logprob: -2.5482826232910156
    3. 'print' → logprob: -3.0482826232910156
    4. '<|end|>' → logprob: -4.173282623291016
    5. '    
' → logprob: -5.298282623291016
    6. '\' → logprob: -5.923282623291016
    7. '
' → logprob: -6.048282623291016
    8. ')' → logprob: -6.048282623291016
    9. '```' → logprob: -6.423282623291016
    10. '#' → logprob: -6.673282623291016

Token 76: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06771738082170486
    2. '   ' → logprob: -2.9427173137664795
    3. ' print' → logprob: -4.942717552185059
    4. '<|end|>' → logprob: -5.692717552185059
    5. '
' → logprob: -7.192717552185059
    6. '\n' → logprob: -7.317717552185059
    7. ')' → logprob: -8.192717552185059
    8. '```' → logprob: -9.067717552185059
    9. 'if' → logprob: -9.192717552185059
    10. '    
' → logprob: -9.442717552185059

Token 77: '(hit' (ID: 147063)
  Prédit: '(hit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hit' → logprob: -0.4808647930622101
    2. '(' → logprob: -0.9808647632598877
    3. '('' → logprob: -5.730865001678467
    4. '(f' → logprob: -6.480865001678467
    5. '(h' → logprob: -6.730865001678467
    6. '("' → logprob: -7.480865001678467
    7. '((' → logprob: -8.980864524841309
    8. '()' → logprob: -10.355864524841309
    9. '(a' → logprob: -10.480864524841309
    10. 'hit' → logprob: -11.355864524841309

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009992402978241444
    2. ')' → logprob: -4.634992599487305
    3. ',)' → logprob: -9.509992599487305
    4. ' ,' → logprob: -9.884992599487305
    5. '   ' → logprob: -10.009992599487305
    6. ',b' → logprob: -10.509992599487305
    7. ',",' → logprob: -12.134992599487305
    8. '+' → logprob: -12.384992599487305
    9. ',
' → logprob: -12.384992599487305
    10. '),' → logprob: -12.384992599487305

Token 79: ' blow' (ID: 23420)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.3148494362831116
    2. ' blow' → logprob: -1.3148493766784668
    3. ' bl' → logprob: -7.189849376678467
    4. ''' → logprob: -7.564849376678467
    5. '(bl' → logprob: -9.064849853515625
    6. '"' → logprob: -9.189849853515625
    7. ' blows' → logprob: -11.064849853515625
    8. ')' → logprob: -11.189849853515625
    9. ' blo' → logprob: -11.814849853515625
    10. ' '' → logprob: -12.064849853515625

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.62500286102295
    3. ')
' → logprob: -14.12500286102295
    4. '))' → logprob: -15.12500286102295
    5. ')`' → logprob: -15.50000286102295
    6. '`)' → logprob: -17.500001907348633
    7. ')**' → logprob: -18.000001907348633
    8. '')' → logprob: -18.250001907348633
    9. '),' → logprob: -18.750001907348633
    10. ')")' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 47.44%
Précision adaptée (1ère position): 48.72%
Précision (top 10): 85.90%
================================================================================
