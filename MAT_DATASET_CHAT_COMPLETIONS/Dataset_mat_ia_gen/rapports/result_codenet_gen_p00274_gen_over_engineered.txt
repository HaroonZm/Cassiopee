================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PrizesCollection:
    def __init__(self, prize_counts):
        self.prize_counts = prize_counts
        self.total_types = len(prize_counts)

    def is_possible(self):
        return any(count >= 2 for count in self.prize_counts)

    def minimal_attempts(self):
        if not self.is_possible():
            return None
        max_count = max(self.prize_counts)
        sum_counts = sum(self.prize_counts)

        # If there's at least one prize with count >= 2, minimal attempts calculation:
        # The worst case is to get all other prizes plus one of the duplicated prize, so minimal attempts = sum of all + 1 - max duplicated count
        # Or simply minimal attempts = total number of prizes - max count + 2, reasoning from sample outputs and problem statement.
        # But sample shows minimal attempts is sum - max_count + 2
        return sum_counts - max_count + 2

class InputParser:
    def __init__(self):
        self.datasets = []

    def parse(self, lines):
        index = 0
        while index < len(lines):
            n = int(lines[index])
            index += 1
            if n == 0:
                break
            counts = list(map(int, lines[index].split()))
            index += 1
            self.datasets.append(PrizesCollection(counts))

class OutputFormatter:
    def __init__(self):
        pass

    def format_result(self, result):
        if result is None:
            return "NA"
        else:
            return str(result)

class GachaponSolver:
    def __init__(self, data_collections):
        self.data_collections = data_collections
        self.formatter = OutputFormatter()

    def solve(self):
        results = []
        for collection in self.data_collections:
            minimal = collection.minimal_attempts()
            results.append(self.formatter.format_result(minimal))
        return results

def main():
    import sys
    lines = [line.strip() for line in sys.stdin if line.strip() != '']
    parser = InputParser()
    parser.parse(lines)
    solver = GachaponSolver(parser.datasets)
    results = solver.solve()
    for res in results:
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pr' (ID: 2284)
  → Token d'amorce (pas de prédiction)

Token 2: 'izes' (ID: 6370)
  → Token d'amorce (pas de prédiction)

Token 3: 'Collection' (ID: 4160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12769997119903564
    2. '{' → logprob: -2.252699851989746
    3. '(' → logprob: -4.377699851989746
    4. '.' → logprob: -6.752699851989746
    5. ' {' → logprob: -7.002699851989746
    6. '(:' → logprob: -10.002699851989746
    7. ' :' → logprob: -10.377699851989746
    8. '```' → logprob: -10.752699851989746
    9. '({' → logprob: -11.752699851989746
    10. ':
' → logprob: -12.127699851989746

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38188832998275757
    2. '(' → logprob: -1.8818883895874023
    3. '{' → logprob: -2.0068883895874023
    4. ' {' → logprob: -3.6318883895874023
    5. '.' → logprob: -5.756888389587402
    6. ' :' → logprob: -7.506888389587402
    7. '(:' → logprob: -8.381888389587402
    8. '({' → logprob: -9.131888389587402
    9. '[' → logprob: -9.756888389587402
    10. '```' → logprob: -9.756888389587402

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06450968235731125
    2. '(' → logprob: -3.314509630203247
    3. '   ' → logprob: -4.064509868621826
    4. '```' → logprob: -4.939509868621826
    5. ':
' → logprob: -7.064509868621826
    6. '.' → logprob: -8.189509391784668
    7. '():' → logprob: -8.564509391784668
    8. '(
' → logprob: -8.814509391784668
    9. ''' → logprob: -9.564509391784668
    10. '\' → logprob: -9.939509391784668

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20958787202835083
    2. ' ' → logprob: -2.959587812423706
    3. '\' → logprob: -3.709587812423706
    4. '```' → logprob: -3.834587812423706
    5. ' def' → logprob: -4.084588050842285
    6. '    
' → logprob: -4.584588050842285
    7. '(' → logprob: -4.834588050842285
    8. ' pass' → logprob: -4.834588050842285
    9. '_' → logprob: -4.959588050842285
    10. '[' → logprob: -5.084588050842285

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01499962154775858
    2. '__' → logprob: -5.1399993896484375
    3. ' __' → logprob: -5.2649993896484375
    4. ' ' → logprob: -7.0149993896484375
    5. '  ' → logprob: -7.5149993896484375
    6. '<|end|>' → logprob: -7.7649993896484375
    7. '_' → logprob: -8.264999389648438
    8. ' add' → logprob: -8.264999389648438
    9. ' calculate' → logprob: -9.139999389648438
    10. ')' → logprob: -9.139999389648438

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.981667537620524e-06
    2. ' init' → logprob: -13.250001907348633
    3. '_init' → logprob: -15.750001907348633
    4. 'ini' → logprob: -17.625001907348633
    5. '	init' → logprob: -18.625001907348633
    6. '_' → logprob: -19.625001907348633
    7. 'inite' → logprob: -20.625001907348633
    8. 'new' → logprob: -20.625001907348633
    9. 'in' → logprob: -21.125001907348633
    10. 'innit' → logprob: -21.500001907348633

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4320070147514343
    2. '__' → logprob: -1.057007074356079
    3. '(' → logprob: -6.5570068359375
    4. '__(
' → logprob: -7.0570068359375
    5. '__((' → logprob: -7.9320068359375
    6. '_' → logprob: -8.0570068359375
    7. '__('' → logprob: -8.8070068359375
    8. '(self' → logprob: -9.5570068359375
    9. '__(*' → logprob: -10.5570068359375
    10. '___' → logprob: -10.6820068359375

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011372704990208149
    2. ' self' → logprob: -4.5113725662231445
    3. ')' → logprob: -8.136372566223145
    4. '(self' → logprob: -11.261372566223145
    5. 'pr' → logprob: -12.011372566223145
    6. ' )' → logprob: -12.511372566223145
    7. ',self' → logprob: -13.386372566223145
    8. '   ' → logprob: -14.136372566223145
    9. ' ' → logprob: -14.261372566223145
    10. '       ' → logprob: -14.386372566223145

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07379895448684692
    2. 'self' → logprob: -3.823798894882202
    3. ')' → logprob: -3.948798894882202
    4. '):' → logprob: -4.323799133300781
    5. '(self' → logprob: -5.698799133300781
    6. '(' → logprob: -5.823799133300781
    7. '_' → logprob: -5.823799133300781
    8. '<|end|>' → logprob: -6.198799133300781
    9. ' ,' → logprob: -7.073799133300781
    10. ' self' → logprob: -7.448799133300781

Token 12: ' prize' (ID: 29528)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21797603368759155
    2. 'self' → logprob: -1.8429760932922363
    3. ' prizes' → logprob: -3.7179760932922363
    4. 'pr' → logprob: -5.217976093292236
    5. ' items' → logprob: -5.717976093292236
    6. ' )' → logprob: -6.592976093292236
    7. ')' → logprob: -6.842976093292236
    8. ' prize' → logprob: -7.217976093292236
    9. ' collection' → logprob: -8.342975616455078
    10. ' collections' → logprob: -8.467975616455078

Token 13: '_counts' (ID: 61971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004787884186953306
    2. '_s' → logprob: -5.504787921905518
    3. ' s' → logprob: -7.754787921905518
    4. ')' → logprob: -9.37978744506836
    5. '_list' → logprob: -9.62978744506836
    6. ')s' → logprob: -10.37978744506836
    7. '):' → logprob: -10.87978744506836
    8. '_type' → logprob: -11.00478744506836
    9. '_items' → logprob: -11.50478744506836
    10. '_name' → logprob: -11.50478744506836

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014952288940548897
    2. ':' → logprob: -4.764952182769775
    3. '):
' → logprob: -6.014952182769775
    4. ',' → logprob: -6.014952182769775
    5. '=' → logprob: -7.139952182769775
    6. ')' → logprob: -7.889952182769775
    7. '   ' → logprob: -10.014952659606934
    8. ' ):' → logprob: -10.014952659606934
    9. '={}' → logprob: -10.639952659606934
    10. '):

' → logprob: -10.889952659606934

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00728880800306797
    2. '   ' → logprob: -5.882288932800293
    3. '    ' → logprob: -6.257288932800293
    4. '(' → logprob: -7.757288932800293
    5. '<|end|>' → logprob: -7.757288932800293
    6. '        ' → logprob: -8.007288932800293
    7. '     ' → logprob: -8.132288932800293
    8. '        
' → logprob: -8.507288932800293
    9. '[' → logprob: -8.882288932800293
    10. '      ' → logprob: -9.007288932800293

Token 16: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5214794278144836
    2. 'self' (adapté à ' self') → logprob: -1.0214793682098389
    3. ' self' → logprob: -3.271479368209839
    4. '```' → logprob: -6.021479606628418
    5. '   ' → logprob: -6.396479606628418
    6. ' ' → logprob: -7.021479606628418
    7. '        ' → logprob: -7.146479606628418
    8. '\' → logprob: -7.396479606628418
    9. '           ' → logprob: -7.646479606628418
    10. '[' → logprob: -8.146479606628418

Token 17: '.pr' (ID: 27292)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2524445354938507
    2. '.pr' → logprob: -1.5024445056915283
    3. ' .' → logprob: -7.752444744110107
    4. 'pr' → logprob: -10.37744426727295
    5. '   ' → logprob: -11.50244426727295
    6. '	pr' → logprob: -11.62744426727295
    7. '._' → logprob: -11.87744426727295
    8. '_pr' → logprob: -12.00244426727295
    9. '.
' → logprob: -12.75244426727295
    10. '.)' → logprob: -12.87744426727295

Token 18: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.06129126623272896
    2. 'izes' → logprob: -3.061291217803955
    3. 'i' → logprob: -4.936291217803955
    4. 'iz' → logprob: -5.936291217803955
    5. '   ' → logprob: -6.436291217803955
    6. ' ' → logprob: -8.061291694641113
    7. '       ' → logprob: -8.186291694641113
    8. '```' → logprob: -8.561291694641113
    9. '    ' → logprob: -9.436291694641113
    10. 'a' → logprob: -9.686291694641113

Token 19: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.03661835938692093
    2. 's' → logprob: -3.91161847114563
    3. '_s' → logprob: -4.161618232727051
    4. '_' → logprob: -8.03661823272705
    5. ' _' → logprob: -11.78661823272705
    6. ' s' → logprob: -11.91161823272705
    7. '_choices' → logprob: -12.66161823272705
    8. '_types' → logprob: -12.78661823272705
    9. '_values' → logprob: -12.91161823272705
    10. '_scores' → logprob: -13.03661823272705

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07030640542507172
    2. '=' → logprob: -2.6953063011169434
    3. '<|end|>' → logprob: -8.320306777954102
    4. '   ' → logprob: -10.445306777954102
    5. '[' → logprob: -10.695306777954102
    6. '.' → logprob: -11.195306777954102
    7. '[:]' → logprob: -11.445306777954102
    8. ')' → logprob: -11.820306777954102
    9. '<|end|>' → logprob: -11.945306777954102
    10. '.setdefault' → logprob: -12.070306777954102

Token 21: ' prize' (ID: 29528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6937516331672668
    2. ' prize' → logprob: -0.6937516331672668
    3. '{}' → logprob: -7.818751811981201
    4. '{' → logprob: -9.568751335144043
    5. ' {}' → logprob: -10.193751335144043
    6. ' pr' → logprob: -10.193751335144043
    7. '(pr' → logprob: -11.193751335144043
    8. ' {' → logprob: -12.068751335144043
    9. ' ' → logprob: -12.318751335144043
    10. 'dict' → logprob: -12.443751335144043

Token 22: '_counts' (ID: 61971)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3012433648109436
    2. 's' → logprob: -1.5512433052062988
    3. '_counts' → logprob: -3.301243305206299
    4. '_' → logprob: -4.551243305206299
    5. '_z' → logprob: -8.301243782043457
    6. '```' → logprob: -9.176243782043457
    7. 'z' → logprob: -9.551243782043457
    8. '_c' → logprob: -9.801243782043457
    9. '_scores' → logprob: -10.051243782043457
    10. '_t' → logprob: -10.426243782043457

Token 23: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2006903886795044
    2. '
' → logprob: -1.3256903886795044
    3. '[' → logprob: -2.075690269470215
    4. '   ' → logprob: -2.075690269470215
    5. '    
' → logprob: -2.950690269470215
    6. '\n' → logprob: -3.575690269470215
    7. '```' → logprob: -3.825690269470215
    8. '\' → logprob: -3.950690269470215
    9. '' → logprob: -4.575690269470215
    10. '<|end|>' → logprob: -4.825690269470215

Token 24: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1852936744689941
    2. '.' → logprob: -1.4352936744689941
    3. '[' → logprob: -1.6852936744689941
    4. '```' → logprob: -2.560293674468994
    5. '\n' → logprob: -2.810293674468994
    6. '
' → logprob: -3.185293674468994
    7. '\' → logprob: -3.435293674468994
    8. '<|end|>' → logprob: -4.310293674468994
    9. '    
' → logprob: -4.435293674468994
    10. ':' → logprob: -5.435293674468994

Token 25: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26255908608436584
    2. '   ' → logprob: -2.012559175491333
    3. '.' → logprob: -3.512559175491333
    4. '    
' → logprob: -3.637559175491333
    5. '\n' → logprob: -5.012558937072754
    6. '       ' → logprob: -5.012558937072754
    7. '\' → logprob: -5.137558937072754
    8. '<|end|>' → logprob: -5.137558937072754
    9. ' ' → logprob: -5.762558937072754
    10. '        
' → logprob: -6.262558937072754

Token 26: '.total' (ID: 23374)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0040364875458180904
    2. '._' → logprob: -6.6290364265441895
    3. ' .' → logprob: -7.0040364265441895
    4. '.values' → logprob: -8.004036903381348
    5. '.items' → logprob: -8.254036903381348
    6. '.keys' → logprob: -9.129036903381348
    7. '.available' → logprob: -9.129036903381348
    8. '.pr' → logprob: -9.504036903381348
    9. '.total' → logprob: -9.629036903381348
    10. '.count' → logprob: -9.629036903381348

Token 27: '_types' (ID: 21515)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7003397345542908
    2. '_' → logprob: -0.8253397345542908
    3. '_pr' → logprob: -3.5753397941589355
    4. '_tokens' → logprob: -4.2003397941589355
    5. '_amount' → logprob: -4.7003397941589355
    6. '_counts' → logprob: -5.4503397941589355
    7. '_points' → logprob: -5.7003397941589355
    8. '_rewards' → logprob: -6.0753397941589355
    9. '_items' → logprob: -7.5753397941589355
    10. '_space' → logprob: -7.7003397941589355

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.253013014793396
    2. '=' → logprob: -1.503013014793396
    3. '_' → logprob: -7.2530131340026855
    4. '<|end|>' → logprob: -9.003012657165527
    5. ' +=' → logprob: -9.128012657165527
    6. ' ' → logprob: -9.878012657165527
    7. '   ' → logprob: -10.378012657165527
    8. '  ' → logprob: -11.628012657165527
    9. '_count' → logprob: -11.878012657165527
    10. '_=' → logprob: -12.003012657165527

Token 29: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.00015467056073248386
    2. 'len' → logprob: -8.875154495239258
    3. ' sum' → logprob: -11.250154495239258
    4. ' ' → logprob: -13.625154495239258
    5. ' ' → logprob: -15.625154495239258
    6. '=len' → logprob: -16.000154495239258
    7. '0' → logprob: -16.500154495239258
    8. '(len' → logprob: -16.625154495239258
    9. '	len' → logprob: -17.125154495239258
    10. ' max' → logprob: -18.000154495239258

Token 30: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.0072439489886164665
    2. '(' → logprob: -5.507244110107422
    3. '(self' → logprob: -5.757244110107422
    4. '(
' → logprob: -15.507244110107422
    5. '(p' → logprob: -16.007244110107422
    6. '(

' → logprob: -16.132244110107422
    7. '(pl' → logprob: -16.882244110107422
    8. 'pr' → logprob: -17.382244110107422
    9. '(pro' → logprob: -17.632244110107422
    10. '(this' → logprob: -17.757244110107422

Token 31: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.00033296257606707513
    2. 'pr' → logprob: -9.500332832336426
    3. 'ze' → logprob: -9.750332832336426
    4. 'z' → logprob: -10.000332832336426
    5. 'iz' → logprob: -10.125332832336426
    6. 'r' → logprob: -10.750332832336426
    7. '_' → logprob: -10.875332832336426
    8. '_pr' → logprob: -11.500332832336426
    9. '```' → logprob: -11.625332832336426
    10. 'izes' → logprob: -11.750332832336426

Token 32: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -15.000000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_types' → logprob: -16.625
    5. '(_' → logprob: -18.125
    6. ' _' → logprob: -18.25
    7. '\' → logprob: -18.375
    8. '_s' → logprob: -18.5
    9. '```' → logprob: -18.625
    10. ')_' → logprob: -19.125

Token 33: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.500004768371582
    4. ' )' → logprob: -14.500004768371582
    5. '       ' → logprob: -15.500004768371582
    6. '}' → logprob: -15.750004768371582
    7. '[' → logprob: -16.0000057220459
    8. '```' → logprob: -16.0000057220459
    9. '))' → logprob: -16.5000057220459
    10. '`)' → logprob: -17.0000057220459

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0377734899520874
    2. '
' → logprob: -4.037773609161377
    3. '    
' → logprob: -5.162773609161377
    4. ' def' → logprob: -5.912773609161377
    5. 'def' → logprob: -5.912773609161377
    6. '\n' → logprob: -6.162773609161377
    7. '```' → logprob: -6.287773609161377
    8. '<|end|>' → logprob: -6.787773609161377
    9. '\' → logprob: -7.162773609161377
    10. ' ' → logprob: -7.287773609161377

Token 35: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9328014254570007
    2. 'def' (adapté à ' def') → logprob: -1.1828014850616455
    3. ' def' → logprob: -2.0578014850616455
    4. '```' → logprob: -2.8078014850616455
    5. '
' → logprob: -3.3078014850616455
    6. '\n' → logprob: -3.4328014850616455
    7. '\' → logprob: -3.6828014850616455
    8. '    
' → logprob: -4.682801246643066
    9. '<|end|>' → logprob: -6.557801246643066
    10. ' 
' → logprob: -6.932801246643066

Token 36: ' is' (ID: 382)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0054744635708630085
    2. ' calculate' → logprob: -6.63047456741333
    3. ' total' → logprob: -6.88047456741333
    4. ' space' → logprob: -7.25547456741333
    5. ' has' → logprob: -7.75547456741333
    6. ' add' → logprob: -8.255474090576172
    7. ' next' → logprob: -8.380474090576172
    8. ' count' → logprob: -8.505474090576172
    9. ' select' → logprob: -8.880474090576172
    10. ' find' → logprob: -8.880474090576172

Token 37: '_possible' (ID: 185849)
  Prédit: '_available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_available' → logprob: -0.45458298921585083
    2. '_' → logprob: -2.079582929611206
    3. '_empty' → logprob: -2.704582929611206
    4. '_valid' → logprob: -2.829582929611206
    5. ' _' → logprob: -3.329582929611206
    6. '_complete' → logprob: -4.079583168029785
    7. '_possible' → logprob: -4.204583168029785
    8. '_equal' → logprob: -5.329583168029785
    9. '_en' → logprob: -5.454583168029785
    10. '_s' → logprob: -5.454583168029785

Token 38: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08307913690805435
    2. '(self' → logprob: -2.5830790996551514
    3. '_' → logprob: -6.4580793380737305
    4. ' (' → logprob: -7.4580793380737305
    5. '_space' → logprob: -7.4580793380737305
    6. '_to' → logprob: -7.4580793380737305
    7. 'self' → logprob: -8.70807933807373
    8. '_self' → logprob: -8.95807933807373
    9. '<|end|>' → logprob: -8.95807933807373
    10. '   ' → logprob: -9.70807933807373

Token 39: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009191995486617088
    2. ' ,' → logprob: -4.884191989898682
    3. 'self' → logprob: -6.634191989898682
    4. ')' → logprob: -9.88419246673584
    5. '):' → logprob: -10.00919246673584
    6. '   ' → logprob: -10.38419246673584
    7. 'to' → logprob: -10.50919246673584
    8. '):
' → logprob: -11.25919246673584
    9. ' to' → logprob: -11.50919246673584
    10. '(self' → logprob: -11.63419246673584

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07769576460123062
    2. ':' → logprob: -3.077695846557617
    3. '(' → logprob: -3.952695846557617
    4. '\' → logprob: -6.202695846557617
    5. '   ' → logprob: -6.452695846557617
    6. '<|end|>' → logprob: -7.202695846557617
    7. ':return' → logprob: -7.327695846557617
    8. ')' → logprob: -7.327695846557617
    9. '    ' → logprob: -7.452695846557617
    10. '(
' → logprob: -7.827695846557617

Token 41: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05976170673966408
    2. ' return' → logprob: -3.9347617626190186
    3. 'return' (adapté à ' return') → logprob: -4.3097615242004395
    4. 'n' → logprob: -5.1847615242004395
    5. ' for' → logprob: -5.5597615242004395
    6. ' max' → logprob: -6.3097615242004395
    7. ' if' → logprob: -6.5597615242004395
    8. 'max' → logprob: -6.6847615242004395
    9. '\' → logprob: -6.8097615242004395
    10. '\n' → logprob: -6.8097615242004395

Token 42: ' any' (ID: 1062)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3536471426486969
    2. ' any' → logprob: -1.6036471128463745
    3. ' max' → logprob: -3.478647232055664
    4. ' sum' → logprob: -3.603647232055664
    5. ' self' → logprob: -3.978647232055664
    6. ' True' → logprob: -4.853647232055664
    7. ' len' → logprob: -5.353647232055664
    8. 'all' → logprob: -5.603647232055664
    9. 'any' → logprob: -6.853647232055664
    10. 'self' → logprob: -6.853647232055664

Token 43: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03887556493282318
    2. '(self' → logprob: -3.5388755798339844
    3. '(lambda' → logprob: -4.913875579833984
    4. '(value' → logprob: -7.038875579833984
    5. '(pr' → logprob: -8.288875579833984
    6. '(
' → logprob: -8.913875579833984
    7. '(s' → logprob: -9.413875579833984
    8. '(p' → logprob: -9.663875579833984
    9. '((' → logprob: -9.663875579833984
    10. '(count' → logprob: -9.913875579833984

Token 44: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011309645138680935
    2. '>' → logprob: -4.511309623718262
    3. ' for' → logprob: -8.761309623718262
    4. ')' → logprob: -10.261309623718262
    5. ' ' → logprob: -11.136309623718262
    6. '<|end|>' → logprob: -11.261309623718262
    7. '<|end|>' → logprob: -11.636309623718262
    8. '   ' → logprob: -11.636309623718262
    9. ')>' → logprob: -12.011309623718262
    10. 'for' → logprob: -12.261309623718262

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4574882686138153
    2. '2' → logprob: -1.0824882984161377
    3. '1' → logprob: -3.5824882984161377
    4. '3' → logprob: -7.957488059997559
    5. ' self' → logprob: -9.832488059997559
    6. '0' → logprob: -10.082488059997559
    7. ' k' → logprob: -10.207488059997559
    8. 'self' → logprob: -10.332488059997559
    9. '   ' → logprob: -11.082488059997559
    10. '4' → logprob: -11.707488059997559

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2335345596075058
    2. '1' → logprob: -1.608534574508667
    3. '3' → logprob: -5.233534336090088
    4. ' ' → logprob: -6.233534336090088
    5. '4' → logprob: -7.983534336090088
    6. 'self' → logprob: -8.983534812927246
    7. 'k' → logprob: -9.358534812927246
    8. '0' → logprob: -9.483534812927246
    9. '5' → logprob: -9.608534812927246
    10. '10' → logprob: -10.858534812927246

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03654790669679642
    2. ')' → logprob: -3.411547899246216
    3. 'for' → logprob: -6.161548137664795
    4. '       ' → logprob: -7.911548137664795
    5. ' )' → logprob: -8.161547660827637
    6. '   ' → logprob: -10.286547660827637
    7. ' ' → logprob: -10.536547660827637
    8. ' or' → logprob: -11.036547660827637
    9. '<|end|>' → logprob: -11.036547660827637
    10. ' and' → logprob: -11.286547660827637

Token 48: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.020601682364940643
    2. 'count' → logprob: -3.895601749420166
    3. '	count' → logprob: -10.770601272583008
    4. ' ' → logprob: -11.020601272583008
    5. '(count' → logprob: -12.145601272583008
    6. '<count' → logprob: -12.645601272583008
    7. '[count' → logprob: -12.770601272583008
    8. ',count' → logprob: -13.270601272583008
    9. '=count' → logprob: -13.270601272583008
    10. 'c' → logprob: -13.520601272583008

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008627340197563171
    2. 'in' → logprob: -4.758627414703369
    3. ' ' → logprob: -11.758626937866211
    4. '	in' → logprob: -13.508626937866211
    5. ')' → logprob: -14.383626937866211
    6. '<|end|>' → logprob: -14.758626937866211
    7. '  ' → logprob: -15.133626937866211
    8. '   ' → logprob: -15.133626937866211
    9. 'count' → logprob: -15.258626937866211
    10. 's' → logprob: -15.258626937866211

Token 50: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759431719779968
    2. 'self' → logprob: -0.8259431719779968
    3. '	self' → logprob: -13.450942993164062
    4. ')' → logprob: -14.325942993164062
    5. ' ' → logprob: -14.700942993164062
    6. '   ' → logprob: -14.825942993164062
    7. 'value' → logprob: -15.325942993164062
    8. ' value' → logprob: -15.450942993164062
    9. ' ' → logprob: -16.200942993164062
    10. '(self' → logprob: -16.200942993164062

Token 51: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.048958055675029755
    2. '.' → logprob: -3.0489580631256104
    3. ' .' → logprob: -7.923957824707031
    4. ').' → logprob: -12.798957824707031
    5. '	pr' → logprob: -14.048957824707031
    6. '.pl' → logprob: -14.673957824707031
    7. '.Pr' → logprob: -14.673957824707031
    8. '.p' → logprob: -14.798957824707031
    9. '.pro' → logprob: -14.798957824707031
    10. 'pr' → logprob: -15.173957824707031

Token 52: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.02780669927597046
    2. 'ze' → logprob: -3.7778067588806152
    3. 'izes' → logprob: -5.527806758880615
    4. 'e' → logprob: -8.027806282043457
    5. 'z' → logprob: -10.277806282043457
    6. 'zes' → logprob: -10.402806282043457
    7. 't' → logprob: -10.652806282043457
    8. '   ' → logprob: -10.777806282043457
    9. ' ' → logprob: -11.027806282043457
    10. '```' → logprob: -11.152806282043457

Token 53: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -13.50000286102295
    3. 'counts' → logprob: -14.50000286102295
    4. '_' → logprob: -15.00000286102295
    5. '_s' → logprob: -15.87500286102295
    6. ' _' → logprob: -17.250001907348633
    7. ')_' → logprob: -17.750001907348633
    8. '__' → logprob: -18.500001907348633
    9. '_count' → logprob: -18.500001907348633
    10. '_types' → logprob: -18.625001907348633

Token 54: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002060436672763899
    2. ' )' → logprob: -8.625205993652344
    3. '       ' → logprob: -11.125205993652344
    4. '   ' → logprob: -12.625205993652344
    5. '))' → logprob: -12.750205993652344
    6. ')
' → logprob: -13.000205993652344
    7. '())' → logprob: -14.375205993652344
    8. '[' → logprob: -14.875205993652344
    9. ')))' → logprob: -15.375205993652344
    10. '`)' → logprob: -15.375205993652344

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5056141018867493
    2. '<|end|>' → logprob: -1.2556140422821045
    3. '```' → logprob: -3.0056140422821045
    4. '   ' → logprob: -4.130614280700684
    5. '<|end|>' → logprob: -4.380614280700684
    6. 'def' → logprob: -5.130614280700684
    7. '.' → logprob: -5.255614280700684
    8. '\' → logprob: -5.630614280700684
    9. '    
' → logprob: -5.880614280700684
    10. '_' → logprob: -6.005614280700684

Token 56: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' minimal' (ID: 19957)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.32711368799209595
    2. ' max' → logprob: -2.952113628387451
    3. ' total' → logprob: -3.077113628387451
    4. ' can' → logprob: -3.202113628387451
    5. ' has' → logprob: -3.702113628387451
    6. ' collect' → logprob: -4.327113628387451
    7. ' distribute' → logprob: -4.452113628387451
    8. ' count' → logprob: -4.702113628387451
    9. ' add' → logprob: -4.702113628387451
    10. ' calculate' → logprob: -4.702113628387451

Token 58: '_attempt' (ID: 135860)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.5632255673408508
    2. '_' → logprob: -2.188225507736206
    3. '_pr' → logprob: -2.813225507736206
    4. '_count' → logprob: -3.188225507736206
    5. '_selection' → logprob: -3.688225507736206
    6. '_aw' → logprob: -4.188225746154785
    7. '_counts' → logprob: -4.438225746154785
    8. '_value' → logprob: -4.688225746154785
    9. '_difference' → logprob: -4.688225746154785
    10. '_number' → logprob: -4.813225746154785

Token 59: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004231667553540319
    2. '_' → logprob: -8.875423431396484
    3. 'ed' → logprob: -9.125423431396484
    4. '(' → logprob: -9.250423431396484
    5. '_count' → logprob: -10.250423431396484
    6. '_s' → logprob: -11.250423431396484
    7. ' s' → logprob: -11.375423431396484
    8. '(s' → logprob: -12.375423431396484
    9. '_number' → logprob: -12.500423431396484
    10. '   ' → logprob: -12.875423431396484

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009495720732957125
    2. '(' → logprob: -7.000949382781982
    3. ' (' → logprob: -10.25094985961914
    4. '   ' → logprob: -14.00094985961914
    5. '(s' → logprob: -14.25094985961914
    6. ' self' → logprob: -14.62594985961914
    7. 'self' → logprob: -14.87594985961914
    8. '(Self' → logprob: -16.00094985961914
    9. '=self' → logprob: -16.37594985961914
    10. '(
' → logprob: -16.37594985961914

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020957687869668007
    2. ',' → logprob: -4.7709574699401855
    3. '(self' → logprob: -5.3959574699401855
    4. 'self' → logprob: -6.1459574699401855
    5. '   ' → logprob: -6.3959574699401855
    6. ':' → logprob: -6.3959574699401855
    7. '():' → logprob: -7.2709574699401855
    8. '       ' → logprob: -7.3959574699401855
    9. '):
' → logprob: -7.6459574699401855
    10. '=' → logprob: -9.145957946777344

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009081309661269188
    2. ' ' → logprob: -5.3840813636779785
    3. '<|end|>' → logprob: -6.1340813636779785
    4. '        
' → logprob: -7.8840813636779785
    5. ' 
' → logprob: -8.00908088684082
    6. 'n' → logprob: -8.38408088684082
    7. '   ' → logprob: -8.50908088684082
    8. ' n' → logprob: -8.50908088684082
    9. '(n' → logprob: -8.63408088684082
    10. '        ' → logprob: -9.00908088684082

Token 63: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3812748193740845
    2. ' total' → logprob: -1.5062748193740845
    3. ' max' → logprob: -1.5062748193740845
    4. '       ' → logprob: -2.256274700164795
    5. ' attempts' → logprob: -3.006274700164795
    6. ' min' → logprob: -3.381274700164795
    7. 'total' → logprob: -3.631274700164795
    8. ' return' → logprob: -3.756274700164795
    9. ' for' → logprob: -4.006274700164795
    10. 'max' → logprob: -4.256274700164795

Token 64: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8719331622123718
    2. ' any' → logprob: -1.4969332218170166
    3. ' not' → logprob: -1.8719332218170166
    4. ' all' → logprob: -1.8719332218170166
    5. ' max' → logprob: -3.3719332218170166
    6. 'self' → logprob: -4.6219329833984375
    7. 'any' → logprob: -6.7469329833984375
    8. 'max' → logprob: -6.8719329833984375
    9. 'all' → logprob: -6.9969329833984375
    10. ' min' → logprob: -6.9969329833984375

Token 65: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.005952148232609034
    2. 'self' → logprob: -5.25595235824585
    3. ' any' → logprob: -7.25595235824585
    4. ' ' → logprob: -12.630951881408691
    5. ' ' → logprob: -13.005951881408691
    6. '    ' → logprob: -13.630951881408691
    7. '       ' → logprob: -13.755951881408691
    8. 'any' → logprob: -13.755951881408691
    9. ' all' → logprob: -14.130951881408691
    10. '        ' → logprob: -14.255951881408691

Token 66: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.008677680976688862
    2. '.' → logprob: -4.7586774826049805
    3. ' .' → logprob: -10.50867748260498
    4. '.has' → logprob: -11.13367748260498
    5. '.pos' → logprob: -11.63367748260498
    6. 'is' → logprob: -13.25867748260498
    7. '   ' → logprob: -13.75867748260498
    8. '.pr' → logprob: -13.88367748260498
    9. '.isnan' → logprob: -13.88367748260498
    10. '.can' → logprob: -14.00867748260498

Token 67: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.00011784763046307489
    2. '_pos' → logprob: -10.000118255615234
    3. '_' → logprob: -10.375118255615234
    4. ' _' → logprob: -10.625118255615234
    5. 'possible' → logprob: -12.125118255615234
    6. '_p' → logprob: -12.375118255615234
    7. ' possible' → logprob: -13.250118255615234
    8. '```' → logprob: -14.125118255615234
    9. '._' → logprob: -14.625118255615234
    10. 'Possible' → logprob: -14.750118255615234

Token 68: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001884015218820423
    2. '():
' → logprob: -9.500188827514648
    3. ' ():' → logprob: -9.625188827514648
    4. ':' → logprob: -10.500188827514648
    5. '()' → logprob: -10.875188827514648
    6. ' :' → logprob: -14.250188827514648
    7. '):' → logprob: -15.375188827514648
    8. '():
' → logprob: -16.50018882751465
    9. '(' → logprob: -17.25018882751465
    10. '():

' → logprob: -17.62518882751465

Token 69: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04215679317712784
    2. '           ' → logprob: -3.66715669631958
    3. ':
' → logprob: -4.29215669631958
    4. '       ' → logprob: -6.54215669631958
    5. ':return' → logprob: -8.042157173156738
    6. ',' → logprob: -8.792157173156738
    7. '):' → logprob: -9.542157173156738
    8. '):
' → logprob: -11.292157173156738
    9. ' return' → logprob: -11.542157173156738
    10. ' :' → logprob: -12.042157173156738

Token 70: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3731209933757782
    2. '           ' → logprob: -1.9981210231781006
    3. ' 
' → logprob: -2.2481210231781006
    4. ' return' → logprob: -2.9981210231781006
    5. 'return' (adapté à ' return') → logprob: -5.1231207847595215
    6. '\n' → logprob: -5.2481207847595215
    7. ' ' → logprob: -5.6231207847595215
    8. '       ' → logprob: -6.8731207847595215
    9. '    
' → logprob: -7.1231207847595215
    10. '
' → logprob: -7.3731207847595215

Token 71: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.534760594367981
    2. ' -' → logprob: -1.784760594367981
    3. ' ' → logprob: -2.7847604751586914
    4. ' self' → logprob: -3.4097604751586914
    5. '-' → logprob: -3.4097604751586914
    6. ' float' → logprob: -3.5347604751586914
    7. ' len' → logprob: -3.6597604751586914
    8. '0' → logprob: -4.034760475158691
    9. 'None' → logprob: -4.034760475158691
    10. ' sum' → logprob: -4.659760475158691

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05107761546969414
    2. '       ' → logprob: -3.4260776042938232
    3. '        
' → logprob: -4.176077842712402
    4. '
        
' → logprob: -7.426077842712402
    5. '<|end|>' → logprob: -7.926077842712402
    6. '\n' → logprob: -8.176077842712402
    7. '        ' → logprob: -8.926077842712402
    8. '
' → logprob: -8.926077842712402
    9. '

' → logprob: -9.301077842712402
    10. ' 
' → logprob: -9.426077842712402

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3372914791107178
    2. '
' → logprob: -1.9622914791107178
    3. '        
' → logprob: -1.9622914791107178
    4. '<|end|>' → logprob: -6.212291717529297
    5. '        ' → logprob: -6.837291717529297
    6. '
        
' → logprob: -7.837291717529297
    7. '\n' → logprob: -7.837291717529297
    8. ' 
' → logprob: -8.212291717529297
    9. '        

' → logprob: -8.712291717529297
    10. ',' → logprob: -8.712291717529297

Token 74: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6319807767868042
    2. ' max' → logprob: -1.7569807767868042
    3. ' return' → logprob: -1.8819807767868042
    4. 'return' → logprob: -3.0069808959960938
    5. 'max' (adapté à ' max') → logprob: -3.7569808959960938
    6. ' min' → logprob: -4.006980895996094
    7. ' attempts' → logprob: -4.256980895996094
    8. '        
' → logprob: -5.006980895996094
    9. 'min' → logprob: -5.506980895996094
    10. ' total' → logprob: -5.631980895996094

Token 75: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.015464887022972107
    2. '_' → logprob: -4.640464782714844
    3. '_attempt' → logprob: -5.765464782714844
    4. '_pr' → logprob: -6.265464782714844
    5. '_counts' → logprob: -9.265464782714844
    6. '_index' → logprob: -9.390464782714844
    7. '```' → logprob: -10.265464782714844
    8. '_value' → logprob: -10.515464782714844
    9. 'count' → logprob: -10.515464782714844
    10. '_repeat' → logprob: -10.515464782714844

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001050911727361381
    2. '=' → logprob: -6.87605094909668
    3. ')' → logprob: -11.87605094909668
    4. ' ' → logprob: -12.62605094909668
    5. 's' → logprob: -13.12605094909668
    6. '    ' → logprob: -13.62605094909668
    7. '   ' → logprob: -13.75105094909668
    8. ',' → logprob: -14.25105094909668
    9. '_' → logprob: -14.25105094909668
    10. ' )' → logprob: -15.00105094909668

Token 77: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0004915529862046242
    2. 'max' → logprob: -7.625491619110107
    3. ' self' → logprob: -13.37549114227295
    4. '   ' → logprob: -14.12549114227295
    5. '	max' → logprob: -14.50049114227295
    6. '(max' → logprob: -15.25049114227295
    7. '=max' → logprob: -15.75049114227295
    8. ' ' → logprob: -16.125492095947266
    9. ' min' → logprob: -16.375492095947266
    10. ' ' → logprob: -16.625492095947266

Token 78: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019307781476527452
    2. '(' → logprob: -6.2519307136535645
    3. ' (' → logprob: -14.001931190490723
    4. 'self' → logprob: -14.251931190490723
    5. '(s' → logprob: -15.251931190490723
    6. '(
' → logprob: -16.126930236816406
    7. ' self' → logprob: -16.126930236816406
    8. '(this' → logprob: -16.251930236816406
    9. '(pr' → logprob: -17.501930236816406
    10. '(i' → logprob: -17.751930236816406

Token 79: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.0008267794037237763
    2. ' .' → logprob: -7.500826835632324
    3. '.' → logprob: -8.375826835632324
    4. 'self' → logprob: -11.750826835632324
    5. ')' → logprob: -12.000826835632324
    6. '	pr' → logprob: -12.125826835632324
    7. '   ' → logprob: -12.250826835632324
    8. '(pr' → logprob: -12.625826835632324
    9. '.self' → logprob: -12.875826835632324
    10. '._' → logprob: -13.250826835632324

Token 80: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.00035083942930214107
    2. 'ze' → logprob: -8.375350952148438
    3. 'izes' → logprob: -10.250350952148438
    4. '   ' → logprob: -11.125350952148438
    5. '```' → logprob: -11.250350952148438
    6. 'e' → logprob: -11.375350952148438
    7. '       ' → logprob: -11.750350952148438
    8. '[' → logprob: -12.250350952148438
    9. 'IZE' → logprob: -12.875350952148438
    10. 'i' → logprob: -13.125350952148438

Token 81: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00021045419271104038
    2. 's' → logprob: -8.500210762023926
    3. '_' → logprob: -12.250210762023926
    4. '_s' → logprob: -14.125210762023926
    5. '_c' → logprob: -14.375210762023926
    6. ' _' → logprob: -15.500210762023926
    7. 'counts' → logprob: -15.625210762023926
    8. '   ' → logprob: -16.12520980834961
    9. '_count' → logprob: -16.37520980834961
    10. ')_' → logprob: -16.50020980834961

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02320435643196106
    2. ' )' → logprob: -4.398204326629639
    3. ')
' → logprob: -5.023204326629639
    4. '       ' → logprob: -5.773204326629639
    5. ' )
' → logprob: -7.273204326629639
    6. ')+' → logprob: -9.023204803466797
    7. '.values' → logprob: -10.023204803466797
    8. ',' → logprob: -10.898204803466797
    9. '))' → logprob: -11.273204803466797
    10. '[' → logprob: -11.898204803466797

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7080491185188293
    2. ' +' → logprob: -0.9580491185188293
    3. ' ' → logprob: -3.3330490589141846
    4. '
' → logprob: -3.7080490589141846
    5. '+' → logprob: -3.9580490589141846
    6. '        ' → logprob: -4.458049297332764
    7. ' *' → logprob: -5.083049297332764
    8. ' -' → logprob: -5.208049297332764
    9. ' 
' → logprob: -5.458049297332764
    10. '<|end|>' → logprob: -5.708049297332764

Token 84: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6359914541244507
    2. ' return' → logprob: -1.1359914541244507
    3. ' 
' → logprob: -3.5109915733337402
    4. 'return' → logprob: -3.8859915733337402
    5. ' n' → logprob: -4.13599157333374
    6. ' ' → logprob: -4.13599157333374
    7. '        
' → logprob: -4.51099157333374
    8. ' sum' → logprob: -4.51099157333374
    9. ' min' → logprob: -5.01099157333374
    10. '
' → logprob: -5.01099157333374

Token 85: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016390221193432808
    2. '_counts' → logprob: -4.766390323638916
    3. '(' → logprob: -5.391390323638916
    4. '_count' → logprob: -6.266390323638916
    5. '_pr' → logprob: -7.391390323638916
    6. '(self' → logprob: -8.266389846801758
    7. '_val' → logprob: -8.766389846801758
    8. '_s' → logprob: -9.766389846801758
    9. '_=' → logprob: -10.391389846801758
    10. 's' → logprob: -10.641389846801758

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0068505811505019665
    2. '=' → logprob: -5.006850719451904
    3. ' ' → logprob: -9.756850242614746
    4. '_' → logprob: -10.006850242614746
    5. '(' → logprob: -11.256850242614746
    6. '()' → logprob: -11.881850242614746
    7. ')' → logprob: -12.881850242614746
    8. '<|end|>' → logprob: -13.131850242614746
    9. '=sum' → logprob: -13.256850242614746
    10. '   ' → logprob: -14.006850242614746

Token 87: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.007671102415770292
    2. 'sum' → logprob: -4.882670879364014
    3. '(sum' → logprob: -9.882671356201172
    4. ' ' → logprob: -12.007671356201172
    5. ' self' → logprob: -12.132671356201172
    6. '	sum' → logprob: -13.757671356201172
    7. '=sum' → logprob: -14.757671356201172
    8. ' ' → logprob: -15.257671356201172
    9. ' len' → logprob: -15.632671356201172
    10. '_sum' → logprob: -16.257671356201172

Token 88: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3135131895542145
    2. '(' → logprob: -1.313513159751892
    3. '(s' → logprob: -8.563512802124023
    4. '(
' → logprob: -10.688512802124023
    5. '([' → logprob: -11.188512802124023
    6. '(pr' → logprob: -12.063512802124023
    7. '(i' → logprob: -12.188512802124023
    8. '(x' → logprob: -13.188512802124023
    9. ' (' → logprob: -13.313512802124023
    10. '()' → logprob: -13.313512802124023

Token 89: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.00036894375807605684
    2. '.' → logprob: -8.75036907196045
    3. '_.' → logprob: -9.87536907196045
    4. ' .' → logprob: -10.00036907196045
    5. '_pr' → logprob: -10.00036907196045
    6. '._' → logprob: -10.62536907196045
    7. ')' → logprob: -10.87536907196045
    8. '	pr' → logprob: -11.37536907196045
    9. '_counts' → logprob: -13.12536907196045
    10. '   ' → logprob: -13.12536907196045

Token 90: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0016597089124843478
    2. 'izes' → logprob: -6.876659870147705
    3. 'ze' → logprob: -8.626659393310547
    4. '_counts' → logprob: -9.001659393310547
    5. '_' → logprob: -10.001659393310547
    6. '```' → logprob: -10.251659393310547
    7. '       ' → logprob: -10.751659393310547
    8. 'iz' → logprob: -10.751659393310547
    9. 'oze' → logprob: -10.751659393310547
    10. '   ' → logprob: -10.876659393310547

Token 91: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00010878815373871475
    2. '_' → logprob: -9.25010871887207
    3. 's' → logprob: -11.87510871887207
    4. ' _' → logprob: -13.00010871887207
    5. '_c' → logprob: -13.75010871887207
    6. 'counts' → logprob: -14.50010871887207
    7. '_s' → logprob: -14.75010871887207
    8. ')_' → logprob: -15.12510871887207
    9. '_
' → logprob: -15.62510871887207
    10. ''_' → logprob: -15.87510871887207

Token 92: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02394534833729267
    2. ' )' → logprob: -3.8989453315734863
    3. ')
' → logprob: -6.398945331573486
    4. '       ' → logprob: -7.273945331573486
    5. ' -' → logprob: -7.523945331573486
    6. ' )
' → logprob: -8.023945808410645
    7. '-' → logprob: -10.023945808410645
    8. ' +' → logprob: -10.523945808410645
    9. ')-' → logprob: -10.523945808410645
    10. '()' → logprob: -10.898945808410645

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041794098913669586
    2. '
' → logprob: -3.7917940616607666
    3. '        
' → logprob: -4.041794300079346
    4. ' return' → logprob: -8.541793823242188
    5. ' 
' → logprob: -9.041793823242188
    6. 'return' → logprob: -9.166793823242188
    7. '```' → logprob: -9.416793823242188
    8. '<|end|>' → logprob: -9.791793823242188
    9. '\' → logprob: -10.166793823242188
    10. ',' → logprob: -10.291793823242188

Token 94: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5094791650772095
    2. 'return' → logprob: -1.2594791650772095
    3. ' return' → logprob: -3.13447904586792
    4. 'if' → logprob: -4.38447904586792
    5. 'attempt' → logprob: -4.38447904586792
    6. 'min' → logprob: -4.75947904586792
    7. 'for' → logprob: -4.88447904586792
    8. ' if' → logprob: -4.88447904586792
    9. ' for' → logprob: -5.25947904586792
    10. ' min' → logprob: -5.38447904586792

Token 95: ' If' (ID: 1843)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.482165813446045
    2. ' min' → logprob: -1.857165813446045
    3. 'return' → logprob: -2.107165813446045
    4. ' attempts' → logprob: -2.357165813446045
    5. ' if' → logprob: -2.482165813446045
    6. ' minimal' → logprob: -2.732165813446045
    7. ' for' → logprob: -3.232165813446045
    8. 'if' → logprob: -3.232165813446045
    9. '       ' → logprob: -3.482165813446045
    10. ' needed' → logprob: -4.107165813446045

Token 96: ' there's' (ID: 15333)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0019606323912739754
    2. ' sum' → logprob: -6.876960754394531
    3. 'max' → logprob: -7.001960754394531
    4. '(max' → logprob: -12.126960754394531
    5. ' self' → logprob: -13.001960754394531
    6. ' the' → logprob: -13.001960754394531
    7. 'sum' → logprob: -13.376960754394531
    8. ' all' → logprob: -14.126960754394531
    9. ' ' → logprob: -14.251960754394531
    10. ' (' → logprob: -14.501960754394531

Token 97: ' at' (ID: 540)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09551094472408295
    2. 'a' → logprob: -2.720510959625244
    3. ' any' → logprob: -4.595510959625244
    4. ' at' → logprob: -5.220510959625244
    5. ' one' → logprob: -5.720510959625244
    6. ' only' → logprob: -6.095510959625244
    7. ' an' → logprob: -6.345510959625244
    8. ' max' → logprob: -7.220510959625244
    9. ' no' → logprob: -7.345510959625244
    10. ' some' → logprob: -7.845510959625244

Token 98: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.10630778968334198
    2. ' a' → logprob: -2.6063077449798584
    3. 'least' → logprob: -4.6063079833984375
    4. 'a' → logprob: -5.2313079833984375
    5. ' an' → logprob: -5.6063079833984375
    6. ' any' → logprob: -5.8563079833984375
    7. ' ' → logprob: -6.1063079833984375
    8. ' only' → logprob: -6.6063079833984375
    9. ' most' → logprob: -7.2313079833984375
    10. '   ' → logprob: -8.606307983398438

Token 99: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.018736273050308228
    2. 'one' → logprob: -4.018736362457275
    3. ' a' → logprob: -7.768736362457275
    4. 'a' → logprob: -8.893735885620117
    5. ' ' → logprob: -11.018735885620117
    6. ' two' → logprob: -12.393735885620117
    7. ' an' → logprob: -12.518735885620117
    8. '   ' → logprob: -14.018735885620117
    9. '_one' → logprob: -15.143735885620117
    10. 'two' → logprob: -15.143735885620117

Token 100: ' prize' (ID: 29528)
  Prédit: ' prize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.49323341250419617
    2. 'pr' → logprob: -0.9932334423065186
    3. ' type' → logprob: -4.8682332038879395
    4. 'type' → logprob: -4.8682332038879395
    5. ' count' → logprob: -6.8682332038879395
    6. 'count' → logprob: -7.2432332038879395
    7. ' pr' → logprob: -7.4932332038879395
    8. '       ' → logprob: -7.8682332038879395
    9. '   ' → logprob: -8.118233680725098
    10. ' ' → logprob: -9.493233680725098

Token 101: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.14168375730514526
    2. 'with' → logprob: -2.26668381690979
    3. 'type' → logprob: -4.016683578491211
    4. ' that' → logprob: -5.516683578491211
    5. ' type' → logprob: -5.641683578491211
    6. '   ' → logprob: -6.391683578491211
    7. 'that' → logprob: -7.516683578491211
    8. 'class' → logprob: -8.391683578491211
    9. '       ' → logprob: -8.891683578491211
    10. '_type' → logprob: -10.141683578491211

Token 102: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4915444254875183
    2. ' count' → logprob: -1.366544485092163
    3. 'max' → logprob: -2.741544485092163
    4. ' max' → logprob: -3.116544485092163
    5. '2' → logprob: -4.741544246673584
    6. ' ' → logprob: -4.866544246673584
    7. ' at' → logprob: -5.866544246673584
    8. ' a' → logprob: -6.241544246673584
    9. 'a' → logprob: -7.366544246673584
    10. ' two' → logprob: -7.491544246673584

Token 103: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4112164080142975
    2. ' ' → logprob: -1.161216378211975
    3. ' >' → logprob: -4.5362162590026855
    4. ' greater' → logprob: -5.5362162590026855
    5. '>=' → logprob: -5.9112162590026855
    6. ' at' → logprob: -6.6612162590026855
    7. ' of' → logprob: -6.6612162590026855
    8. '>' → logprob: -6.9112162590026855
    9. ' that' → logprob: -6.9112162590026855
    10. '2' → logprob: -7.2862162590026855

Token 104: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39035776257514954
    2. ' ' → logprob: -1.1403577327728271
    3. ' max' → logprob: -6.640357971191406
    4. '1' → logprob: -6.765357971191406
    5. 'max' → logprob: -7.640357971191406
    6. ' sum' → logprob: -9.015357971191406
    7. '3' → logprob: -9.140357971191406
    8. 'sum' → logprob: -9.140357971191406
    9. ' (' → logprob: -9.515357971191406
    10. '
' → logprob: -9.765357971191406

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007752011064440012
    2. ' ' → logprob: -4.882751941680908
    3. '1' → logprob: -9.257752418518066
    4. '
' → logprob: -10.882752418518066
    5. '3' → logprob: -11.507752418518066
    6. '```' → logprob: -12.507752418518066
    7. 'sum' → logprob: -12.695252418518066
    8. '

' → logprob: -12.757752418518066
    9. '(' → logprob: -12.945252418518066
    10. ' (' → logprob: -13.070252418518066

Token 106: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7031930685043335
    2. ',' → logprob: -0.8281930685043335
    3. '       ' → logprob: -2.953193187713623
    4. ':
' → logprob: -4.328193187713623
    5. ':return' → logprob: -7.203193187713623
    6. '           ' → logprob: -7.578193187713623
    7. ' and' → logprob: -7.703193187713623
    8. ',
' → logprob: -7.703193187713623
    9. '
' → logprob: -8.953192710876465
    10. '<|end|>' → logprob: -9.078192710876465

Token 107: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12984898686408997
    2. ' return' → logprob: -2.2548489570617676
    3. 'return' → logprob: -4.254848957061768
    4. '           ' → logprob: -6.004848957061768
    5. '
' → logprob: -9.379849433898926
    6. '        
' → logprob: -10.129849433898926
    7. '```' → logprob: -11.379849433898926
    8. ' then' → logprob: -11.629849433898926
    9. '        ' → logprob: -11.629849433898926
    10. '   ' → logprob: -11.879849433898926

Token 108: ' attempts' (ID: 27747)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.05310861021280289
    2. ' =' → logprob: -4.0531086921691895
    3. ' _' → logprob: -4.3031086921691895
    4. ' ' → logprob: -4.6781086921691895
    5. ' attempts' → logprob: -5.3031086921691895
    6. '_' → logprob: -5.3031086921691895
    7. '_count' → logprob: -8.553108215332031
    8. 'attempt' → logprob: -8.928108215332031
    9. ' 
' → logprob: -9.178108215332031
    10. '   ' → logprob: -9.553108215332031

Token 109: ' calculation' (ID: 40722)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1766669899225235
    2. '=' → logprob: -2.6766669750213623
    3. ' is' → logprob: -3.0516669750213623
    4. '       ' → logprob: -3.8016669750213623
    5. ' ' → logprob: -4.301667213439941
    6. ' could' → logprob: -6.676667213439941
    7. ' are' → logprob: -6.801667213439941
    8. ' to' → logprob: -6.926667213439941
    9. ' would' → logprob: -7.051667213439941
    10. ':' → logprob: -7.176667213439941

Token 110: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7215567827224731
    2. '
' → logprob: -1.8465567827224731
    3. '<|end|>' → logprob: -2.2215566635131836
    4. ':' → logprob: -2.8465566635131836
    5. ' is' → logprob: -3.2215566635131836
    6. ' return' → logprob: -3.3465566635131836
    7. '<|end|>' → logprob: -4.096556663513184
    8. '        
' → logprob: -4.471556663513184
    9. ' 
' → logprob: -4.846556663513184
    10. ' would' → logprob: -4.846556663513184

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05419561266899109
    2. ' return' → logprob: -3.8041956424713135
    3. '        
' → logprob: -4.304195404052734
    4. '
' → logprob: -4.304195404052734
    5. 'return' → logprob: -6.304195404052734
    6. ' 
' → logprob: -7.429195404052734
    7. '```' → logprob: -8.429195404052734
    8. '           ' → logprob: -8.804195404052734
    9. '  
' → logprob: -9.054195404052734
    10. '    
' → logprob: -9.554195404052734

Token 112: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6345421671867371
    2. ' return' → logprob: -1.0095422267913818
    3. 'return' → logprob: -2.259542226791382
    4. ' attempts' → logprob: -8.134542465209961
    5. ' max' → logprob: -8.509542465209961
    6. '
' → logprob: -9.009542465209961
    7. 'attempt' → logprob: -9.259542465209961
    8. ' min' → logprob: -9.759542465209961
    9. ' sum' → logprob: -10.259542465209961
    10. 'max' → logprob: -10.259542465209961

Token 113: ' The' (ID: 623)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19811223447322845
    2. '       ' → logprob: -2.0731122493743896
    3. 'return' → logprob: -3.4481122493743896
    4. ' attempts' → logprob: -4.4481120109558105
    5. ' max' → logprob: -5.5731120109558105
    6. ' min' → logprob: -5.9481120109558105
    7. ' minimal' → logprob: -6.8231120109558105
    8. ' result' → logprob: -7.3231120109558105
    9. ' minimum' → logprob: -7.9481120109558105
    10. 'attempt' → logprob: -8.073112487792969

Token 114: ' worst' (ID: 20486)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.222436547279358
    2. ' return' → logprob: -1.472436547279358
    3. '       ' → logprob: -1.722436547279358
    4. 'return' → logprob: -1.847436547279358
    5. 'minimal' → logprob: -3.7224364280700684
    6. ' minimum' → logprob: -4.097436428070068
    7. 'minimum' → logprob: -4.222436428070068
    8. ' result' → logprob: -4.597436428070068
    9. '
' → logprob: -4.722436428070068
    10. 'max' → logprob: -5.222436428070068

Token 115: ' case' (ID: 1890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24322402477264404
    2. ' case' → logprob: -2.6182241439819336
    3. '-case' → logprob: -2.9932241439819336
    4. 'case' → logprob: -3.1182241439819336
    5. '_case' → logprob: -3.2432241439819336
    6. '       ' → logprob: -5.118224143981934
    7. '    ' → logprob: -6.118224143981934
    8. '```' → logprob: -7.993224143981934
    9. '  ' → logprob: -8.368224143981934
    10. '_' → logprob: -8.993224143981934

Token 116: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2893470227718353
    2. ' ' → logprob: -1.5393470525741577
    3. ' scenario' → logprob: -4.414347171783447
    4. ' =' → logprob: -4.789347171783447
    5. ':' → logprob: -5.914347171783447
    6. ' attempts' → logprob: -6.289347171783447
    7. ',' → logprob: -6.539347171783447
    8. ' could' → logprob: -6.914347171783447
    9. ' for' → logprob: -7.039347171783447
    10. ' number' → logprob: -7.039347171783447

Token 117: ' to' (ID: 316)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2253849357366562
    2. ' max' → logprob: -2.2253849506378174
    3. 'sum' → logprob: -2.8503849506378174
    4. ' that' → logprob: -3.7253849506378174
    5. ' trying' → logprob: -5.850384712219238
    6. 'max' → logprob: -5.850384712219238
    7. ' to' → logprob: -6.725384712219238
    8. ' ' → logprob: -6.725384712219238
    9. ' the' → logprob: -7.350384712219238
    10. 'that' → logprob: -7.350384712219238

Token 118: ' get' (ID: 717)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.9158139228820801
    2. ' pick' → logprob: -1.16581392288208
    3. ' draw' → logprob: -2.41581392288208
    4. 'try' → logprob: -3.04081392288208
    5. ' collect' → logprob: -3.41581392288208
    6. 'attempt' → logprob: -3.66581392288208
    7. 'pick' → logprob: -3.79081392288208
    8. 'draw' → logprob: -3.79081392288208
    9. ' attempt' → logprob: -4.04081392288208
    10. 'collect' → logprob: -4.91581392288208

Token 119: ' all' (ID: 722)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6105797290802002
    2. ' all' → logprob: -1.2355797290802002
    3. ' sum' → logprob: -2.1105797290802
    4. 'max' → logprob: -4.110579490661621
    5. 'sum' → logprob: -4.610579490661621
    6. 'all' → logprob: -5.110579490661621
    7. ' one' → logprob: -5.360579490661621
    8. ' (' → logprob: -6.235579490661621
    9. ' each' → logprob: -6.485579490661621
    10. ' at' → logprob: -6.860579490661621

Token 120: ' other' (ID: 1273)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.0396652221679688
    2. ' prizes' → logprob: -1.5396652221679688
    3. ' different' → logprob: -2.0396652221679688
    4. ' other' → logprob: -2.6646652221679688
    5. 'unique' → logprob: -2.6646652221679688
    6. 'pr' → logprob: -3.0396652221679688
    7. 'different' → logprob: -3.4146652221679688
    8. ' types' → logprob: -3.9146652221679688
    9. 'types' → logprob: -4.539665222167969
    10. ' max' → logprob: -4.664665222167969

Token 121: ' prizes' (ID: 44917)
  Prédit: ' prizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prizes' → logprob: -0.12246470898389816
    2. ' types' → logprob: -2.372464656829834
    3. 'pr' → logprob: -4.372464656829834
    4. 'types' → logprob: -5.872464656829834
    5. ' prize' → logprob: -5.872464656829834
    6. ' unique' → logprob: -7.122464656829834
    7. '_pr' → logprob: -7.372464656829834
    8. 's' → logprob: -7.747464656829834
    9. ' ' → logprob: -7.872464656829834
    10. '_types' → logprob: -8.122465133666992

Token 122: ' plus' (ID: 2932)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.898205041885376
    2. ' ' → logprob: -1.023205041885376
    3. ' plus' → logprob: -1.648205041885376
    4. ' before' → logprob: -4.273204803466797
    5. '+' → logprob: -4.773204803466797
    6. '   ' → logprob: -5.773204803466797
    7. ' -' → logprob: -6.273204803466797
    8. ',' → logprob: -6.273204803466797
    9. ' to' → logprob: -6.523204803466797
    10. 's' → logprob: -6.648204803466797

Token 123: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.9665372371673584
    2. ' max' → logprob: -0.9665372371673584
    3. ' the' → logprob: -2.2165372371673584
    4. ' all' → logprob: -2.8415372371673584
    5. 'max' → logprob: -3.4665372371673584
    6. ' ' → logprob: -4.3415374755859375
    7. '1' → logprob: -4.8415374755859375
    8. 'the' → logprob: -5.0915374755859375
    9. 'all' → logprob: -5.2165374755859375
    10. 'one' → logprob: -5.4665374755859375

Token 124: ' of' (ID: 328)
  Prédit: ' prize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prize' → logprob: -0.5017344951629639
    2. 'attempt' → logprob: -2.001734495162964
    3. ' attempt' → logprob: -2.626734495162964
    4. ' of' → logprob: -2.876734495162964
    5. ' from' → logprob: -3.126734495162964
    6. ' more' → logprob: -4.001734733581543
    7. 'pr' → logprob: -4.126734733581543
    8. ' ' → logprob: -4.376734733581543
    9. 'from' → logprob: -4.751734733581543
    10. ' for' → logprob: -5.376734733581543

Token 125: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23053598403930664
    2. 'the' → logprob: -1.9805359840393066
    3. ' that' → logprob: -3.2305359840393066
    4. ' this' → logprob: -4.105535984039307
    5. 'that' → logprob: -4.980535984039307
    6. 'this' → logprob: -5.730535984039307
    7. ' each' → logprob: -7.355535984039307
    8. ' a' → logprob: -7.730535984039307
    9. 'each' → logprob: -8.480535507202148
    10. ' max' → logprob: -9.105535507202148

Token 126: ' duplicated' (ID: 107680)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.554533839225769
    2. 'max' → logprob: -1.679533839225769
    3. ' max' → logprob: -2.0545339584350586
    4. ' prizes' → logprob: -4.054533958435059
    5. 'most' → logprob: -4.304533958435059
    6. ' repeated' → logprob: -4.554533958435059
    7. ' current' → logprob: -4.554533958435059
    8. 're' → logprob: -4.679533958435059
    9. ' prize' → logprob: -4.804533958435059
    10. ' duplicates' → logprob: -4.929533958435059

Token 127: ' prize' (ID: 29528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5647784471511841
    2. ' prize' → logprob: -1.189778447151184
    3. ' prizes' → logprob: -2.6897783279418945
    4. ' type' → logprob: -4.0647783279418945
    5. 's' → logprob: -4.4397783279418945
    6. 'type' → logprob: -4.5647783279418945
    7. ' types' → logprob: -4.6897783279418945
    8. 'types' → logprob: -5.3147783279418945
    9. ' ones' → logprob: -6.8147783279418945
    10. '<|end|>' → logprob: -7.0647783279418945

Token 128: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34500014781951904
    2. '       ' → logprob: -1.720000147819519
    3. '+' → logprob: -3.2200002670288086
    4. 's' → logprob: -3.9700002670288086
    5. ' -' → logprob: -4.095000267028809
    6. ' ' → logprob: -4.720000267028809
    7. '   ' → logprob: -4.970000267028809
    8. ',' → logprob: -4.970000267028809
    9. '
' → logprob: -5.970000267028809
    10. ' plus' → logprob: -6.220000267028809

Token 129: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.8189260959625244
    2. ' ' → logprob: -1.6939260959625244
    3. ' then' → logprob: -1.9439260959625244
    4. ' which' → logprob: -2.1939260959625244
    5. ' plus' → logprob: -3.1939260959625244
    6. ' and' → logprob: -3.9439260959625244
    7. ' before' → logprob: -4.068925857543945
    8. ' '' → logprob: -4.443925857543945
    9. ' 
' → logprob: -4.818925857543945
    10. ' leading' → logprob: -5.068925857543945

Token 130: ' minimal' (ID: 19957)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.44248050451278687
    2. ' max' → logprob: -1.3174805641174316
    3. 'sum' → logprob: -2.8174805641174316
    4. 'max' → logprob: -3.5674805641174316
    5. '
' → logprob: -6.942480564117432
    6. ' return' → logprob: -8.317480087280273
    7. 'return' → logprob: -8.567480087280273
    8. '       ' → logprob: -8.817480087280273
    9. '(sum' → logprob: -10.067480087280273
    10. ' min' → logprob: -10.317480087280273

Token 131: ' attempts' (ID: 27747)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.0018113177502527833
    2. 'attempt' → logprob: -7.001811504364014
    3. '_count' → logprob: -8.376811027526855
    4. '
' → logprob: -8.501811027526855
    5. '_' → logprob: -9.126811027526855
    6. ' _' → logprob: -9.501811027526855
    7. ' =' → logprob: -9.876811027526855
    8. ' attempts' → logprob: -9.876811027526855
    9. '_
' → logprob: -10.126811027526855
    10. '   ' → logprob: -10.626811027526855

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14498655498027802
    2. '=' → logprob: -2.019986629486084
    3. ' is' → logprob: -6.269986629486084
    4. '       ' → logprob: -8.269986152648926
    5. ' ' → logprob: -9.769986152648926
    6. '   ' → logprob: -10.394986152648926
    7. ' =
' → logprob: -11.394986152648926
    8. ' are' → logprob: -11.644986152648926
    9. ' to' → logprob: -11.769986152648926
    10. '    ' → logprob: -12.144986152648926

Token 133: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6378053426742554
    2. ' sum' → logprob: -0.7628053426742554
    3. '(sum' → logprob: -5.512805461883545
    4. ' (' → logprob: -7.762805461883545
    5. ' max' → logprob: -8.012804985046387
    6. 'max' → logprob: -8.137804985046387
    7. '
' → logprob: -10.262804985046387
    8. ' ' → logprob: -10.762804985046387
    9. '(' → logprob: -11.637804985046387
    10. '(max' → logprob: -12.012804985046387

Token 134: ' of' (ID: 328)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -9.043078898685053e-05
    2. '(' → logprob: -10.125090599060059
    3. '_' → logprob: -10.625090599060059
    4. '_count' → logprob: -11.125090599060059
    5. '(_' → logprob: -12.375090599060059
    6. '(count' → logprob: -12.750090599060059
    7. '\' → logprob: -14.375090599060059
    8. '(
' → logprob: -14.750090599060059
    9. '```' → logprob: -15.000090599060059
    10. '-' → logprob: -15.125090599060059

Token 135: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3577088415622711
    2. '_counts' → logprob: -2.3577089309692383
    3. 'pr' → logprob: -3.1077089309692383
    4. 'all' → logprob: -3.1077089309692383
    5. 'count' → logprob: -3.1077089309692383
    6. 'other' → logprob: -3.7327089309692383
    7. 'the' → logprob: -4.482708930969238
    8. 'counts' → logprob: -4.607708930969238
    9. ' all' → logprob: -4.982708930969238
    10. ' self' → logprob: -5.107708930969238

Token 136: ' +' (ID: 659)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.4583757519721985
    2. ' -' → logprob: -1.7083756923675537
    3. 'pr' → logprob: -2.7083756923675537
    4. ' ' → logprob: -3.8333756923675537
    5. '_pr' → logprob: -3.8333756923675537
    6. '_' → logprob: -3.9583756923675537
    7. '-' → logprob: -4.083375930786133
    8. ')' → logprob: -4.833375930786133
    9. ' counts' → logprob: -4.958375930786133
    10. ' _' → logprob: -5.333375930786133

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10156723111867905
    2. ' ' → logprob: -2.976567268371582
    3. '-' → logprob: -3.476567268371582
    4. ' -' → logprob: -4.351567268371582
    5. '0' → logprob: -7.351567268371582
    6. 'max' → logprob: -7.976567268371582
    7. '`' → logprob: -8.851567268371582
    8. '(' → logprob: -8.976567268371582
    9. ' max' → logprob: -9.351567268371582
    10. '
' → logprob: -9.476567268371582

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02077591046690941
    2. '-' → logprob: -4.14577579498291
    3. ' ' → logprob: -5.77077579498291
    4. ' -' → logprob: -7.02077579498291
    5. 'max' → logprob: -8.27077579498291
    6. '0' → logprob: -8.89577579498291
    7. '(' → logprob: -9.02077579498291
    8. '(max' → logprob: -9.77077579498291
    9. ' (' → logprob: -10.14577579498291
    10. '
' → logprob: -10.64577579498291

Token 139: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1570303738117218
    2. '<|end|>' → logprob: -2.1570303440093994
    3. ' ' → logprob: -4.4070305824279785
    4. ')' → logprob: -4.9070305824279785
    5. '<|end|>' → logprob: -6.5320305824279785
    6. 'return' → logprob: -6.5320305824279785
    7. '+' → logprob: -6.6570305824279785
    8. ' +' → logprob: -6.7820305824279785
    9. ' -' → logprob: -6.7820305824279785
    10. ' 
' → logprob: -7.1570305824279785

Token 140: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3871290683746338
    2. 'max' → logprob: -1.1371290683746338
    3. ' ' → logprob: -9.387128829956055
    4. '1' → logprob: -9.512128829956055
    5. '(max' → logprob: -9.887128829956055
    6. '<|end|>' → logprob: -11.512128829956055
    7. '[max' → logprob: -11.512128829956055
    8. '2' → logprob: -11.887128829956055
    9. ' (' → logprob: -12.512128829956055
    10. ' maximum' → logprob: -12.637128829956055

Token 141: ' duplicated' (ID: 107680)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2054880857467651
    2. '       ' → logprob: -1.3304880857467651
    3. ')' → logprob: -1.5804880857467651
    4. 'return' → logprob: -2.7054882049560547
    5. '   ' → logprob: -2.9554882049560547
    6. ' ' → logprob: -3.3304882049560547
    7. '<|end|>' → logprob: -3.5804882049560547
    8. ' return' → logprob: -5.080488204956055
    9. '_counts' → logprob: -5.205488204956055
    10. '  ' → logprob: -5.580488204956055

Token 142: ' count' (ID: 3605)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.2525981664657593
    2. ')' → logprob: -1.8775981664657593
    3. '_' → logprob: -3.252598285675049
    4. '
' → logprob: -4.752598285675049
    5. ' ' → logprob: -5.502598285675049
    6. 'count' → logprob: -5.627598285675049
    7. '\' → logprob: -5.752598285675049
    8. '_counts' → logprob: -6.127598285675049
    9. ' _' → logprob: -6.377598285675049
    10. '_pr' → logprob: -6.502598285675049

Token 143: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.685318648815155
    2. ' +' → logprob: -1.1853187084197998
    3. '+' → logprob: -2.5603187084198
    4. '       ' → logprob: -2.8103187084198
    5. ' ' → logprob: -4.185318470001221
    6. ')' → logprob: -4.935318470001221
    7. ' -' → logprob: -5.185318470001221
    8. '<|end|>' → logprob: -5.185318470001221
    9. '   ' → logprob: -5.435318470001221
    10. '\' → logprob: -6.185318470001221

Token 144: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6720919609069824
    2. ' +' → logprob: -1.1720919609069824
    3. '
' → logprob: -2.1720919609069824
    4. ' ' → logprob: -3.5470919609069824
    5. '       ' → logprob: -4.422091960906982
    6. ')' → logprob: -5.422091960906982
    7. 'return' → logprob: -5.797091960906982
    8. ' 
' → logprob: -5.922091960906982
    9. '+
' → logprob: -6.047091960906982
    10. ' +
' → logprob: -6.172091960906982

Token 145: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3075271844863892
    2. ' ' → logprob: -1.4325271844863892
    3. '       ' → logprob: -1.8075271844863892
    4. ' return' → logprob: -2.5575270652770996
    5. ')' → logprob: -2.8075270652770996
    6. 'return' → logprob: -2.8075270652770996
    7. '+' → logprob: -3.8075270652770996
    8. ' +' → logprob: -3.8075270652770996
    9. '
' → logprob: -4.3075270652771
    10. '        ' → logprob: -4.6825270652771

Token 146: ' Or' (ID: 2604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19232043623924255
    2. ' return' → logprob: -1.817320466041565
    3. 'return' → logprob: -4.567320346832275
    4. '
' → logprob: -6.317320346832275
    5. '        
' → logprob: -8.317320823669434
    6. '   ' → logprob: -11.317320823669434
    7. ' 
' → logprob: -11.442320823669434
    8. '      ' → logprob: -12.192320823669434
    9. '        ' → logprob: -12.317320823669434
    10. '```' → logprob: -12.317320823669434

Token 147: ' simply' (ID: 6462)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20867085456848145
    2. 'max' → logprob: -1.7086708545684814
    3. ' sum' → logprob: -5.833670616149902
    4. ' self' → logprob: -6.583670616149902
    5. ' return' → logprob: -6.958670616149902
    6. 'sum' → logprob: -7.083670616149902
    7. 'self' → logprob: -7.833670616149902
    8. 'return' → logprob: -8.333670616149902
    9. ' min' → logprob: -9.208670616149902
    10. '       ' → logprob: -9.208670616149902

Token 148: ' minimal' (ID: 19957)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.08252957463264465
    2. ' max' → logprob: -2.8325295448303223
    3. 'sum' → logprob: -4.332529544830322
    4. ' self' → logprob: -5.207529544830322
    5. ' return' → logprob: -6.957529544830322
    6. 'max' → logprob: -7.582529544830322
    7. 'self' → logprob: -9.45753002166748
    8. ' ' → logprob: -9.95753002166748
    9. ' min' → logprob: -10.20753002166748
    10. 'return' → logprob: -10.45753002166748

Token 149: ' attempts' (ID: 27747)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.006243380252271891
    2. ' attempts' → logprob: -6.7562432289123535
    3. 'attempt' → logprob: -7.0062432289123535
    4. '(' → logprob: -7.2562432289123535
    5. '_' → logprob: -7.3812432289123535
    6. ' sum' → logprob: -7.5062432289123535
    7. ' _' → logprob: -7.6312432289123535
    8. 'sum' → logprob: -7.8812432289123535
    9. '_count' → logprob: -8.006243705749512
    10. '(sum' → logprob: -8.256243705749512

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05625543370842934
    2. '=' → logprob: -2.931255340576172
    3. ' +' → logprob: -7.681255340576172
    4. ':' → logprob: -8.181255340576172
    5. '   ' → logprob: -8.431255340576172
    6. ' ' → logprob: -9.181255340576172
    7. '+' → logprob: -9.306255340576172
    8. '       ' → logprob: -9.806255340576172
    9. '()' → logprob: -10.306255340576172
    10. '<|end|>' → logprob: -11.056255340576172

Token 151: ' total' (ID: 3609)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01680785045027733
    2. ' sum' → logprob: -4.391808032989502
    3. 'max' → logprob: -5.516808032989502
    4. ' max' → logprob: -8.891807556152344
    5. '(sum' → logprob: -9.016807556152344
    6. '(max' → logprob: -12.016807556152344
    7. '1' → logprob: -13.516807556152344
    8. ' (' → logprob: -13.766807556152344
    9. '(' → logprob: -14.266807556152344
    10. '
' → logprob: -14.266807556152344

Token 152: ' number' (ID: 2086)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.3222382664680481
    2. '_' → logprob: -1.6972382068634033
    3. '_types' → logprob: -3.8222382068634033
    4. ' ' → logprob: -4.197238445281982
    5. '_count' → logprob: -4.572238445281982
    6. ' _' → logprob: -4.572238445281982
    7. '_attempt' → logprob: -4.572238445281982
    8. ' counts' → logprob: -5.447238445281982
    9. '   ' → logprob: -5.572238445281982
    10. 'counts' → logprob: -6.447238445281982

Token 153: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0345510244369507
    2. '_' → logprob: -1.6595510244369507
    3. 'of' → logprob: -2.1595511436462402
    4. ' of' → logprob: -2.2845511436462402
    5. ' -' → logprob: -2.9095511436462402
    6. 's' → logprob: -3.4095511436462402
    7. ' +' → logprob: -3.9095511436462402
    8. ''' → logprob: -4.15955114364624
    9. '-' → logprob: -4.15955114364624
    10. '"' → logprob: -4.28455114364624

Token 154: ' prizes' (ID: 44917)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.13225676119327545
    2. 'sum' → logprob: -2.6322567462921143
    3. ' prizes' → logprob: -3.7572567462921143
    4. ' sum' → logprob: -4.007256984710693
    5. 'unique' → logprob: -6.007256984710693
    6. 'self' → logprob: -6.257256984710693
    7. ' unique' → logprob: -6.257256984710693
    8. ' pr' → logprob: -7.007256984710693
    9. 'distinct' → logprob: -7.257256984710693
    10. 'types' → logprob: -7.632256984710693

Token 155: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6536705493927002
    2. '+' → logprob: -1.4036705493927002
    3. ' ' → logprob: -2.2786705493927
    4. '
' → logprob: -2.5286705493927
    5. ')' → logprob: -4.403670310974121
    6. '<|end|>' → logprob: -4.403670310974121
    7. ' -' → logprob: -5.278670310974121
    8. '       ' → logprob: -5.903670310974121
    9. '(' → logprob: -6.153670310974121
    10. '  
' → logprob: -6.278670310974121

Token 156: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03903275355696678
    2. ' max' → logprob: -3.9140326976776123
    3. '(max' → logprob: -4.164032936096191
    4. ' (' → logprob: -6.539032936096191
    5. '(' → logprob: -6.664032936096191
    6. '1' → logprob: -11.289032936096191
    7. ' ' → logprob: -11.664032936096191
    8. 'min' → logprob: -11.914032936096191
    9. '
' → logprob: -12.539032936096191
    10. '	max' → logprob: -12.539032936096191

Token 157: ' count' (ID: 3605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1281522661447525
    2. '_count' → logprob: -2.503152370452881
    3. '_counts' → logprob: -4.003152370452881
    4. '(' → logprob: -4.253152370452881
    5. ')' → logprob: -6.628152370452881
    6. '_
' → logprob: -7.378152370452881
    7. ' _' → logprob: -7.753152370452881
    8. '(max' → logprob: -7.753152370452881
    9. '_max' → logprob: -8.003151893615723
    10. '(self' → logprob: -8.003151893615723

Token 158: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3491121828556061
    2. '+' → logprob: -1.9741121530532837
    3. ' ' → logprob: -3.0991122722625732
    4. ')' → logprob: -3.5991122722625732
    5. '
' → logprob: -3.8491122722625732
    6. '       ' → logprob: -3.9741122722625732
    7. ' -' → logprob: -3.9741122722625732
    8. '   ' → logprob: -4.599112033843994
    9. '-' → logprob: -6.099112033843994
    10. ' +
' → logprob: -6.849112033843994

Token 159: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3159010112285614
    2. '1' → logprob: -1.3159010410308838
    3. ' ' → logprob: -5.940900802612305
    4. '   ' → logprob: -12.940900802612305
    5. '```' → logprob: -13.315900802612305
    6. '
' → logprob: -13.940900802612305
    7. '  ' → logprob: -15.128400802612305
    8. ' ' → logprob: -16.128400802612305
    9. '`' → logprob: -16.753400802612305
    10. '۲' → logprob: -16.878400802612305

Token 160: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326190233230591
    2. '2' → logprob: -0.7576190233230591
    3. ' ' → logprob: -10.88261890411377
    4. '```' → logprob: -14.75761890411377
    5. '
' → logprob: -15.00761890411377
    6. '   ' → logprob: -16.507619857788086
    7. '<|end|>' → logprob: -16.632619857788086
    8. '

' → logprob: -17.320119857788086
    9. 'max' → logprob: -17.632619857788086
    10. '۲' → logprob: -17.632619857788086

Token 161: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09621326625347137
    2. '       ' → logprob: -3.3462133407592773
    3. ' ' → logprob: -4.346213340759277
    4. ' +' → logprob: -4.596213340759277
    5. ' 
' → logprob: -4.971213340759277
    6. '+' → logprob: -5.096213340759277
    7. ')' → logprob: -5.721213340759277
    8. 'return' → logprob: -5.971213340759277
    9. '<|end|>' → logprob: -5.971213340759277
    10. '  
' → logprob: -6.221213340759277

Token 162: ' reasoning' (ID: 57927)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6712477207183838
    2. ' ' → logprob: -1.4212477207183838
    3. '<|end|>' → logprob: -2.296247720718384
    4. '
' → logprob: -2.671247720718384
    5. ' 
' → logprob: -4.671247482299805
    6. 'return' → logprob: -4.796247482299805
    7. ' but' → logprob: -5.296247482299805
    8. '   ' → logprob: -5.421247482299805
    9. '<|end|>' → logprob: -5.421247482299805
    10. '1' → logprob: -5.546247482299805

Token 163: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6582189798355103
    2. '       ' → logprob: -1.1582189798355103
    3. '        ' → logprob: -3.1582188606262207
    4. '
' → logprob: -3.7832188606262207
    5. ' 
' → logprob: -3.7832188606262207
    6. ':' → logprob: -3.9082188606262207
    7. '        
' → logprob: -4.783218860626221
    8. '<|end|>' → logprob: -4.908218860626221
    9. '    ' → logprob: -5.033218860626221
    10. '   ' → logprob: -5.283218860626221

Token 164: ' sample' (ID: 10176)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17017436027526855
    2. 'the' → logprob: -1.9201743602752686
    3. ' your' → logprob: -6.170174598693848
    4. ' max' → logprob: -6.545174598693848
    5. ' collections' → logprob: -6.795174598693848
    6. ' previous' → logprob: -6.795174598693848
    7. ' math' → logprob: -6.920174598693848
    8. ' ' → logprob: -8.420174598693848
    9. ' how' → logprob: -8.420174598693848
    10. ' another' → logprob: -8.420174598693848

Token 165: ' outputs' (ID: 32725)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7331355214118958
    2. ' +' → logprob: -1.483135461807251
    3. '+' → logprob: -2.608135461807251
    4. ' ' → logprob: -2.733135461807251
    5. ')' → logprob: -3.108135461807251
    6. '<|end|>' → logprob: -3.108135461807251
    7. '       ' → logprob: -3.858135461807251
    8. '2' → logprob: -5.35813570022583
    9. ' -' → logprob: -5.35813570022583
    10. '   ' → logprob: -5.48313570022583

Token 166: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9931707382202148
    2. '       ' → logprob: -1.4931707382202148
    3. ' +' → logprob: -2.243170738220215
    4. ')' → logprob: -2.368170738220215
    5. '+' → logprob: -2.493170738220215
    6. ' ' → logprob: -3.243170738220215
    7. 'return' → logprob: -3.743170738220215
    8. '   ' → logprob: -3.993170738220215
    9. ' return' → logprob: -5.243170738220215
    10. ' -' → logprob: -5.493170738220215

Token 167: ' problem' (ID: 4792)
  Prédit: ' logic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logic' → logprob: -0.5769795179367065
    2. '1' → logprob: -1.5769795179367065
    3. ' reasoning' → logprob: -3.201979637145996
    4. ' examples' → logprob: -3.701979637145996
    5. ' problem' → logprob: -3.826979637145996
    6. ' the' → logprob: -4.076979637145996
    7. 'examples' → logprob: -4.201979637145996
    8. ' previous' → logprob: -4.201979637145996
    9. 'logic' → logprob: -4.826979637145996
    10. ' ' → logprob: -4.951979637145996

Token 168: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0725069046020508
    2. '   ' → logprob: -1.4475069046020508
    3. '_' → logprob: -1.5725069046020508
    4. ' +' → logprob: -2.322506904602051
    5. ')' → logprob: -3.572506904602051
    6. '+' → logprob: -3.822506904602051
    7. ':' → logprob: -4.322506904602051
    8. '.' → logprob: -4.697506904602051
    9. '    ' → logprob: -4.697506904602051
    10. ' -' → logprob: -5.072506904602051

Token 169: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11072808504104614
    2. ' +' → logprob: -3.2357280254364014
    3. '       ' → logprob: -3.3607280254364014
    4. ' ' → logprob: -4.9857282638549805
    5. '+' → logprob: -5.3607282638549805
    6. '  
' → logprob: -5.6107282638549805
    7. ' 
' → logprob: -5.6107282638549805
    8. '   ' → logprob: -5.9857282638549805
    9. ' -' → logprob: -6.1107282638549805
    10. '        
' → logprob: -6.9857282638549805

Token 170: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8149258494377136
    2. '
' → logprob: -1.4399259090423584
    3. '       ' → logprob: -2.0649259090423584
    4. ' ' → logprob: -2.6899259090423584
    5. '        
' → logprob: -3.5649259090423584
    6. '  
' → logprob: -4.189925670623779
    7. 'return' → logprob: -4.689925670623779
    8. ')' → logprob: -4.814925670623779
    9. '\' → logprob: -4.814925670623779
    10. '    
' → logprob: -4.939925670623779

Token 171: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35120001435279846
    2. 'return' → logprob: -1.601199984550476
    3. ' return' → logprob: -2.4762001037597656
    4. '
' → logprob: -4.976200103759766
    5. '        
' → logprob: -6.476200103759766
    6. ' 
' → logprob: -6.601200103759766
    7. '   ' → logprob: -8.851200103759766
    8. ')' → logprob: -9.601200103759766
    9. '    
' → logprob: -9.726200103759766
    10. '	return' → logprob: -10.101200103759766

Token 172: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7831403017044067
    2. ' return' → logprob: -0.9081403017044067
    3. ' 
' → logprob: -2.533140182495117
    4. 'return' → logprob: -2.908140182495117
    5. '        
' → logprob: -5.658140182495117
    6. '
' → logprob: -6.783140182495117
    7. ' ' → logprob: -8.658140182495117
    8. '        ' → logprob: -9.033140182495117
    9. '   ' → logprob: -9.158140182495117
    10. ')' → logprob: -9.658140182495117

Token 173: ' sample' (ID: 10176)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9388176798820496
    2. '       ' → logprob: -1.3138177394866943
    3. ' max' → logprob: -1.5638177394866943
    4. ' if' → logprob: -2.8138177394866943
    5. ' self' → logprob: -3.1888177394866943
    6. ' sum' → logprob: -5.188817501068115
    7. 'return' → logprob: -5.313817501068115
    8. '   ' → logprob: -5.563817501068115
    9. 'max' → logprob: -5.688817501068115
    10. '        ' → logprob: -5.938817501068115

Token 174: ' shows' (ID: 7398)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.059999287128448486
    2. ' _' → logprob: -3.3099992275238037
    3. '_counts' → logprob: -4.059999465942383
    4. ')' → logprob: -6.684999465942383
    5. '<|end|>' → logprob: -7.309999465942383
    6. ' ' → logprob: -7.809999465942383
    7. '_
' → logprob: -7.809999465942383
    8. ' +' → logprob: -8.184999465942383
    9. '_count' → logprob: -8.684999465942383
    10. '<|end|>' → logprob: -9.059999465942383

Token 175: ' minimal' (ID: 19957)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7874436378479004
    2. '        ' → logprob: -1.6624436378479004
    3. '       ' → logprob: -2.5374436378479004
    4. '    ' → logprob: -3.2874436378479004
    5. ' return' → logprob: -3.4124436378479004
    6. ':' → logprob: -3.5374436378479004
    7. ' self' → logprob: -3.7874436378479004
    8. '1' → logprob: -4.5374436378479
    9. ' +' → logprob: -4.5374436378479
    10. ' sum' → logprob: -4.7874436378479

Token 176: ' attempts' (ID: 27747)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.10136884450912476
    2. ' _' → logprob: -2.9763689041137695
    3. '_' → logprob: -3.1013689041137695
    4. ' ' → logprob: -8.85136890411377
    5. '_count' → logprob: -9.72636890411377
    6. ' =' → logprob: -10.10136890411377
    7. ' attempts' → logprob: -10.22636890411377
    8. '_counts' → logprob: -10.22636890411377
    9. 'attempt' → logprob: -10.85136890411377
    10. '_
' → logprob: -10.85136890411377

Token 177: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0479565858840942
    2. ' +' → logprob: -1.1729565858840942
    3. ' ' → logprob: -2.4229564666748047
    4. ' -' → logprob: -2.6729564666748047
    5. '=' → logprob: -3.0479564666748047
    6. '<|end|>' → logprob: -3.5479564666748047
    7. '   ' → logprob: -3.7979564666748047
    8. '+' → logprob: -4.047956466674805
    9. '       ' → logprob: -4.047956466674805
    10. ')' → logprob: -5.047956466674805

Token 178: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.44014668464660645
    2. ' max' → logprob: -1.1901466846466064
    3. 'sum' → logprob: -3.5651466846466064
    4. 'self' → logprob: -4.440146446228027
    5. ' sum' → logprob: -4.815146446228027
    6. ' self' → logprob: -5.815146446228027
    7. '1' → logprob: -8.315146446228027
    8. '2' → logprob: -8.815146446228027
    9. '(max' → logprob: -8.940146446228027
    10. ' ' → logprob: -9.690146446228027

Token 179: ' -' (ID: 533)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.09522735327482224
    2. '_' → logprob: -2.9702272415161133
    3. '()' → logprob: -4.470227241516113
    4. '(' → logprob: -5.095227241516113
    5. ' -' → logprob: -5.220227241516113
    6. ' _' → logprob: -5.470227241516113
    7. '       ' → logprob: -6.220227241516113
    8. ')' → logprob: -6.595227241516113
    9. '   ' → logprob: -6.845227241516113
    10. '(self' → logprob: -6.970227241516113

Token 180: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.043090540915727615
    2. ' max' → logprob: -3.168090581893921
    3. '(max' → logprob: -9.7930908203125
    4. '1' → logprob: -10.6680908203125
    5. '[max' → logprob: -12.1680908203125
    6. ' ' → logprob: -13.1680908203125
    7. 'min' → logprob: -13.6680908203125
    8. ' (' → logprob: -13.9180908203125
    9. '	max' → logprob: -14.2930908203125
    10. '(' → logprob: -14.6680908203125

Token 181: '_count' (ID: 7536)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.3707522749900818
    2. '_' → logprob: -1.3707523345947266
    3. ' _' → logprob: -3.6207523345947266
    4. ' ' → logprob: -4.870752334594727
    5. ')' → logprob: -5.120752334594727
    6. ' -' → logprob: -5.245752334594727
    7. '   ' → logprob: -5.870752334594727
    8. '       ' → logprob: -6.120752334594727
    9. '_count' → logprob: -6.995752334594727
    10. '  ' → logprob: -7.620752334594727

Token 182: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46993473172187805
    2. ' +' → logprob: -1.8449347019195557
    3. '       ' → logprob: -2.2199347019195557
    4. ' -' → logprob: -3.3449347019195557
    5. '+' → logprob: -3.8449347019195557
    6. ')' → logprob: -3.9699347019195557
    7. ' ' → logprob: -4.969934940338135
    8. '-' → logprob: -5.344934940338135
    9. '   ' → logprob: -5.594934940338135
    10. ')
' → logprob: -5.969934940338135

Token 183: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16076111793518066
    2. '1' → logprob: -1.9107611179351807
    3. ' ' → logprob: -7.535760879516602
    4. '
' → logprob: -12.910760879516602
    5. '```' → logprob: -15.035760879516602
    6. '   ' → logprob: -15.410760879516602
    7. '

' → logprob: -16.6607608795166
    8. '  ' → logprob: -17.0357608795166
    9. ' ' → logprob: -17.3482608795166
    10. '	' → logprob: -17.4107608795166

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027962734922766685
    2. '1' → logprob: -3.6529626846313477
    3. ' ' → logprob: -6.402962684631348
    4. '   ' → logprob: -13.465462684631348
    5. '```' → logprob: -13.902962684631348
    6. '
' → logprob: -14.277962684631348
    7. '  ' → logprob: -15.215462684631348
    8. '0' → logprob: -16.090463638305664
    9. '3' → logprob: -16.715463638305664
    10. '(' → logprob: -16.840463638305664

Token 185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3255162835121155
    2. '
' → logprob: -1.3255162239074707
    3. '        
' → logprob: -5.950516223907471
    4. 'return' → logprob: -6.200516223907471
    5. ')' → logprob: -6.200516223907471
    6. ' 
' → logprob: -6.700516223907471
    7. ' return' → logprob: -6.700516223907471
    8. '<|end|>' → logprob: -7.575516223907471
    9. '  
' → logprob: -7.700516223907471
    10. ')
' → logprob: -7.950516223907471

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3274039030075073
    2. '
' → logprob: -1.9524039030075073
    3. ':' → logprob: -3.702404022216797
    4. 'return' → logprob: -3.827404022216797
    5. ')' → logprob: -3.952404022216797
    6. ' return' → logprob: -4.202404022216797
    7. '+' → logprob: -4.202404022216797
    8. ' +' → logprob: -4.827404022216797
    9. ':return' → logprob: -4.952404022216797
    10. '<|end|>' → logprob: -4.952404022216797

Token 187: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38675177097320557
    2. 'return' (adapté à ' return') → logprob: -2.261751651763916
    3. ')' → logprob: -2.636751651763916
    4. '
' → logprob: -2.761751651763916
    5. ' return' → logprob: -3.636751651763916
    6. ' 
' → logprob: -3.886751651763916
    7. '   ' → logprob: -4.886751651763916
    8. '        
' → logprob: -5.386751651763916
    9. ')
' → logprob: -5.636751651763916
    10. ':' → logprob: -5.636751651763916

Token 188: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.027516687288880348
    2. 'sum' → logprob: -4.277516841888428
    3. ' self' → logprob: -4.402516841888428
    4. 'self' → logprob: -7.027516841888428
    5. ' ' → logprob: -9.90251636505127
    6. '(sum' → logprob: -10.65251636505127
    7. '   ' → logprob: -10.90251636505127
    8. ' ' → logprob: -11.15251636505127
    9. ' (' → logprob: -11.65251636505127
    10. '    ' → logprob: -12.52751636505127

Token 189: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0028192552272230387
    2. '_' → logprob: -5.877819061279297
    3. '(_' → logprob: -12.502819061279297
    4. '(' → logprob: -12.752819061279297
    5. ' _' → logprob: -13.502819061279297
    6. ')_' → logprob: -13.627819061279297
    7. '_count' → logprob: -13.877819061279297
    8. '('_' → logprob: -14.002819061279297
    9. '_c' → logprob: -14.377819061279297
    10. '\' → logprob: -14.627819061279297

Token 190: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001904127886518836
    2. ' ' → logprob: -6.876904010772705
    3. '-' → logprob: -7.126904010772705
    4. ' ' → logprob: -10.626904487609863
    5. '<|end|>' → logprob: -11.376904487609863
    6. '  ' → logprob: -12.251904487609863
    7. '"' → logprob: -12.501904487609863
    8. ' -
' → logprob: -12.501904487609863
    9. '   ' → logprob: -12.626904487609863
    10. ')' → logprob: -12.751904487609863

Token 191: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16022737324237823
    2. ' max' → logprob: -1.9102274179458618
    3. '_max' → logprob: -12.91022777557373
    4. '	max' → logprob: -15.16022777557373
    5. '(max' → logprob: -15.41022777557373
    6. ' ' → logprob: -16.160226821899414
    7. '=max' → logprob: -17.410226821899414
    8. '   ' → logprob: -17.410226821899414
    9. '[max' → logprob: -17.410226821899414
    10. ',max' → logprob: -18.285226821899414

Token 192: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00023131117632146925
    2. '_counts' → logprob: -8.750231742858887
    3. '_' → logprob: -9.625231742858887
    4. ' _' → logprob: -13.000231742858887
    5. 'Count' → logprob: -14.250231742858887
    6. '_COUNT' → logprob: -14.375231742858887
    7. '_c' → logprob: -14.375231742858887
    8. ''_' → logprob: -14.500231742858887
    9. '_Count' → logprob: -14.500231742858887
    10. '_co' → logprob: -15.250231742858887

Token 193: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008659370243549347
    2. '+' → logprob: -4.758659362792969
    3. ' ' → logprob: -10.133659362792969
    4. ' ' → logprob: -12.883659362792969
    5. ' +
' → logprob: -13.508659362792969
    6. '  ' → logprob: -15.383659362792969
    7. '1' → logprob: -15.883659362792969
    8. '`' → logprob: -16.25865936279297
    9. '   ' → logprob: -16.38365936279297
    10. '2' → logprob: -16.38365936279297

Token 194: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.000709533691406
    4. '```' → logprob: -17.000709533691406
    5. '1' → logprob: -17.875709533691406
    6. '  ' → logprob: -19.500709533691406
    7. '２' → logprob: -19.625709533691406
    8. '
' → logprob: -19.938209533691406
    9. '۲' → logprob: -20.000709533691406
    10. ' ' → logprob: -20.375709533691406

Token 195: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -17.5
    4. '1' → logprob: -18.875
    5. '۲' → logprob: -19.75
    6. '２' → logprob: -20.0
    7. '   ' → logprob: -20.375
    8. '₂' → logprob: -20.75
    9. '
' → logprob: -21.25
    10. '`' → logprob: -21.625

Token 196: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7100385427474976
    2. ' Pr' → logprob: -1.3350385427474976
    3. ' Prize' → logprob: -2.210038661956787
    4. ' User' → logprob: -2.960038661956787
    5. ' Game' → logprob: -3.835038661956787
    6. ' Player' → logprob: -3.960038661956787
    7. ' Tester' → logprob: -4.710038661956787
    8. ' Solution' → logprob: -4.960038661956787
    9. ' Test' → logprob: -5.085038661956787
    10. ' Lottery' → logprob: -6.585038661956787

Token 199: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.6470465064048767
    2. 'Handler' → logprob: -1.2720465660095215
    3. 'Parser' → logprob: -2.2720465660095215
    4. 'Data' → logprob: -3.0220465660095215
    5. 'Processor' → logprob: -3.6470465660095215
    6. ':' → logprob: -4.3970465660095215
    7. '():' → logprob: -6.0220465660095215
    8. 'Manager' → logprob: -7.3970465660095215
    9. 'Provider' → logprob: -7.5220465660095215
    10. 'Validator' → logprob: -7.8970465660095215

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019458913011476398
    2. ':
' → logprob: -6.251945972442627
    3. ' :' → logprob: -11.751945495605469
    4. '(' → logprob: -12.876945495605469
    5. '):' → logprob: -13.376945495605469
    6. ':

' → logprob: -13.626945495605469
    7. ':def' → logprob: -14.001945495605469
    8. '<|end|>' → logprob: -14.001945495605469
    9. '():' → logprob: -14.376945495605469
    10. '   ' → logprob: -15.251945495605469

Token 201: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4880900979042053
    2. '<|end|>' → logprob: -1.4880900382995605
    3. '   ' → logprob: -2.1130900382995605
    4. '  
' → logprob: -4.7380900382995605
    5. '	def' → logprob: -5.3630900382995605
    6. '    
' → logprob: -5.3630900382995605
    7. 'def' → logprob: -5.4880900382995605
    8. ':' → logprob: -5.7380900382995605
    9. '<|end|>' → logprob: -5.8630900382995605
    10. ':
' → logprob: -6.2380900382995605

Token 202: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12034359574317932
    2. '   ' → logprob: -2.8703436851501465
    3. 'def' (adapté à ' def') → logprob: -2.8703436851501465
    4. '	def' → logprob: -10.745343208312988
    5. ' ' → logprob: -13.620343208312988
    6. '  ' → logprob: -14.245343208312988
    7. '```' → logprob: -14.245343208312988
    8. ':def' → logprob: -14.370343208312988
    9. '    ' → logprob: -15.245343208312988
    10. '   ' → logprob: -16.620344161987305

Token 203: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.21299493312835693
    2. ' def' → logprob: -2.3379950523376465
    3. '__' → logprob: -2.7129950523376465
    4. 'def' → logprob: -4.7129950523376465
    5. ' init' → logprob: -5.0879950523376465
    6. ' parse' → logprob: -5.0879950523376465
    7. 'init' → logprob: -5.5879950523376465
    8. '_init' → logprob: -5.8379950523376465
    9. ' ' → logprob: -8.212994575500488
    10. 'parse' → logprob: -8.337994575500488

Token 204: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.200166469876422e-06
    2. ' init' → logprob: -13.125004768371582
    3. 'new' → logprob: -13.750004768371582
    4. 'ini' → logprob: -14.125004768371582
    5. 'in' → logprob: -14.875004768371582
    6. '_init' → logprob: -15.125004768371582
    7. 'i' → logprob: -15.125004768371582
    8. 'int' → logprob: -15.375004768371582
    9. 'nit' → logprob: -16.6250057220459
    10. '__' → logprob: -17.3750057220459

Token 205: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0017904938431456685
    2. '__' → logprob: -6.376790523529053
    3. '(self' → logprob: -10.001790046691895
    4. '__(
' → logprob: -10.376790046691895
    5. '(' → logprob: -12.126790046691895
    6. '__((' → logprob: -12.376790046691895
    7. '_(' → logprob: -13.751790046691895
    8. '__[' → logprob: -15.126790046691895
    9. '___' → logprob: -15.501790046691895
    10. 'self' → logprob: -15.751790046691895

Token 206: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008848085068166256
    2. ')' → logprob: -4.758848190307617
    3. ' self' → logprob: -8.758848190307617
    4. '):
' → logprob: -10.258848190307617
    5. '
' → logprob: -10.883848190307617
    6. '):' → logprob: -11.258848190307617
    7. '(self' → logprob: -12.883848190307617
    8. ' )' → logprob: -13.633848190307617
    9. '	self' → logprob: -13.883848190307617
    10. '   ' → logprob: -14.383848190307617

Token 207: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013440792448818684
    2. 'self' → logprob: -5.2634406089782715
    3. ')' → logprob: -5.7634406089782715
    4. 'pr' → logprob: -6.2634406089782715
    5. '):' → logprob: -7.0134406089782715
    6. '_pr' → logprob: -7.2634406089782715
    7. '(pr' → logprob: -7.6384406089782715
    8. '(self' → logprob: -8.51344108581543
    9. ' ,' → logprob: -8.63844108581543
    10. ',self' → logprob: -9.01344108581543

Token 208: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018436823738738894
    2. ' self' → logprob: -6.626843452453613
    3. '   ' → logprob: -7.626843452453613
    4. '       ' → logprob: -11.126843452453613
    5. '	self' → logprob: -11.501843452453613
    6. '(self' → logprob: -12.501843452453613
    7. '
' → logprob: -14.376843452453613
    8. 'def' → logprob: -14.501843452453613
    9. '```' → logprob: -15.626843452453613
    10. ' ' → logprob: -15.876843452453613

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.056111183017492294
    2. 'pass' → logprob: -3.0561110973358154
    3. '       ' → logprob: -5.5561113357543945
    4. ' self' → logprob: -6.5561113357543945
    5. '   ' → logprob: -6.6811113357543945
    6. ' pass' → logprob: -7.6811113357543945
    7. 'def' → logprob: -7.9311113357543945
    8. '
' → logprob: -9.556111335754395
    9. '	pass' → logprob: -11.181111335754395
    10. '(self' → logprob: -11.306111335754395

Token 210: '.datasets' (ID: 136555)
  Prédit: '.pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.05939377844333649
    2. '.' → logprob: -3.184393882751465
    3. ' data' → logprob: -5.934393882751465
    4. ' .' → logprob: -6.059393882751465
    5. ' lines' → logprob: -6.434393882751465
    6. 'pr' → logprob: -6.434393882751465
    7. ' prize' → logprob: -6.559393882751465
    8. '.input' → logprob: -7.184393882751465
    9. ' buffer' → logprob: -7.309393882751465
    10. 'data' → logprob: -7.559393882751465

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6941150426864624
    2. ' =' → logprob: -0.6941150426864624
    3. '=[]' → logprob: -6.944115161895752
    4. '=[]
' → logprob: -13.319114685058594
    5. '={}' → logprob: -14.569114685058594
    6. '[]' → logprob: -15.069114685058594
    7. '=None' → logprob: -15.319114685058594
    8. '<|end|>' → logprob: -15.569114685058594
    9. '   ' → logprob: -16.694114685058594
    10. '=[]
' → logprob: -16.944114685058594

Token 212: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0024869535118341446
    2. ' []' → logprob: -6.0024871826171875
    3. '[' → logprob: -11.877487182617188
    4. '[]
' → logprob: -12.502487182617188
    5. '[]

' → logprob: -15.127487182617188
    6. '[]}' → logprob: -15.377487182617188
    7. '   ' → logprob: -16.377487182617188
    8. '[],' → logprob: -17.502487182617188
    9. ' ' → logprob: -17.752487182617188
    10. '[]"' → logprob: -17.877487182617188

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7410125732421875
    2. 'def' → logprob: -1.4910125732421875
    3. ' def' → logprob: -1.8660125732421875
    4. '
' → logprob: -2.3660125732421875
    5. '<|end|>' → logprob: -3.3660125732421875
    6. '	def' → logprob: -4.7410125732421875
    7. '    
' → logprob: -5.8660125732421875
    8. '<|end|>' → logprob: -6.3660125732421875
    9. '[' → logprob: -8.241012573242188
    10. '```' → logprob: -8.366012573242188

Token 214: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007104054093360901
    2. ' def' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.500710487365723
    4. '	def' → logprob: -19.750709533691406
    5. '
' → logprob: -21.375709533691406
    6. ' ' → logprob: -22.875709533691406
    7. 'class' → logprob: -23.125709533691406
    8. 'import' → logprob: -23.875709533691406
    9. 'de' → logprob: -24.000709533691406
    10. '    
' → logprob: -24.500709533691406

Token 215: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.259907066822052
    2. ' parse' → logprob: -1.5099070072174072
    3. 'read' → logprob: -5.259907245635986
    4. ' read' → logprob: -6.384907245635986
    5. 'add' → logprob: -7.509907245635986
    6. ' add' → logprob: -8.134906768798828
    7. 'process' → logprob: -9.509906768798828
    8. 'def' → logprob: -9.759906768798828
    9. 'load' → logprob: -10.259906768798828
    10. ' def' → logprob: -10.759906768798828

Token 216: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.020440280437469482
    2. '(' → logprob: -4.020440101623535
    3. '_line' → logprob: -6.145440101623535
    4. '_input' → logprob: -9.395440101623535
    5. '_' → logprob: -10.895440101623535
    6. '_(' → logprob: -11.145440101623535
    7. ' (' → logprob: -11.395440101623535
    8. 'self' → logprob: -11.645440101623535
    9. '(line' → logprob: -13.145440101623535
    10. '_self' → logprob: -13.270440101623535

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6345480680465698
    2. '_line' → logprob: -1.7595480680465698
    3. 'self' → logprob: -1.8845480680465698
    4. '_input' → logprob: -2.2595481872558594
    5. '_' → logprob: -4.009548187255859
    6. '_self' → logprob: -4.509548187255859
    7. '):' → logprob: -5.134548187255859
    8. '_data' → logprob: -6.509548187255859
    9. '_,' → logprob: -7.009548187255859
    10. ',_' → logprob: -7.134548187255859

Token 218: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3691370487213135
    2. ' input' → logprob: -1.4941370487213135
    3. ' lines' → logprob: -3.3691370487213135
    4. 'lines' → logprob: -3.4941370487213135
    5. 'self' → logprob: -4.494136810302734
    6. ' self' → logprob: -5.369136810302734
    7. 'data' → logprob: -6.494136810302734
    8. 'line' → logprob: -6.994136810302734
    9. ' data' → logprob: -7.369136810302734
    10. ' raw' → logprob: -8.744136810302734

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03825458139181137
    2. '):
' → logprob: -3.288254499435425
    3. 'self' → logprob: -9.413254737854004
    4. ',' → logprob: -9.788254737854004
    5. '   ' → logprob: -10.788254737854004
    6. ' ):' → logprob: -11.038254737854004
    7. '       ' → logprob: -11.038254737854004
    8. ':' → logprob: -11.663254737854004
    9. '):
' → logprob: -12.038254737854004
    10. ')' → logprob: -12.663254737854004

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033784625702537596
    2. ' self' → logprob: -8.625337600708008
    3. ' for' → logprob: -9.250337600708008
    4. 'self' → logprob: -11.000337600708008
    5. '   ' → logprob: -11.125337600708008
    6. ' lines' → logprob: -11.875337600708008
    7. ' line' → logprob: -12.125337600708008
    8. '[' → logprob: -12.625337600708008
    9. '```' → logprob: -13.000337600708008
    10. '           ' → logprob: -13.375337600708008

Token 221: ' index' (ID: 3472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5699106454849243
    2. ' lines' → logprob: -1.3199106454849243
    3. ' prize' → logprob: -2.8199105262756348
    4. '       ' → logprob: -3.1949105262756348
    5. 'for' → logprob: -3.6949105262756348
    6. 'pr' → logprob: -4.694910526275635
    7. ' prizes' → logprob: -5.194910526275635
    8. ' results' → logprob: -5.694910526275635
    9. ' idx' → logprob: -5.694910526275635
    10. ' result' → logprob: -5.819910526275635

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004093835595995188
    2. '=' → logprob: -5.504093647003174
    3. ' ' → logprob: -11.254094123840332
    4. ' +=' → logprob: -13.629094123840332
    5. ')' → logprob: -14.379094123840332
    6. '_' → logprob: -14.879094123840332
    7. '  ' → logprob: -16.129093170166016
    8. ' =
' → logprob: -17.004093170166016
    9. ' =)' → logprob: -17.129093170166016
    10. ' ' → logprob: -17.254093170166016

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003624308155849576
    2. ' ' → logprob: -5.628624439239502
    3. '1' → logprob: -10.628623962402344
    4. '   ' → logprob: -18.628623962402344
    5. '=' → logprob: -19.753623962402344
    6. '2' → logprob: -19.878623962402344
    7. '۰' → logprob: -20.066123962402344
    8. '```' → logprob: -20.066123962402344
    9. ' 
' → logprob: -20.253623962402344
    10. ' ' → logprob: -20.316123962402344

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.125009536743164
    3. '1' → logprob: -12.500009536743164
    4. '   ' → logprob: -18.750009536743164
    5. 'int' → logprob: -20.000009536743164
    6. '=' → logprob: -20.187509536743164
    7. '```' → logprob: -20.187509536743164
    8. '۰' → logprob: -20.437509536743164
    9. '2' → logprob: -20.625009536743164
    10. '  ' → logprob: -21.125009536743164

Token 225: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10337933897972107
    2. '       ' → logprob: -2.353379249572754
    3. 'while' → logprob: -6.353379249572754
    4. '<|end|>' → logprob: -7.353379249572754
    5. ' while' → logprob: -7.728379249572754
    6. '        
' → logprob: -8.853379249572754
    7. '	while' → logprob: -9.853379249572754
    8. '
' → logprob: -10.103379249572754
    9. ' 
' → logprob: -10.228379249572754
    10. '```' → logprob: -11.228379249572754

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12241945415735245
    2. ' while' → logprob: -2.2474193572998047
    3. 'while' → logprob: -5.247419357299805
    4. '
' → logprob: -5.872419357299805
    5. '	while' → logprob: -7.997419357299805
    6. '        
' → logprob: -8.372419357299805
    7. '<|end|>' → logprob: -8.497419357299805
    8. '        ' → logprob: -8.747419357299805
    9. '   ' → logprob: -8.747419357299805
    10. ' 
' → logprob: -9.372419357299805

Token 227: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.020778698846697807
    2. 'while' (adapté à ' while') → logprob: -3.8957786560058594
    3. ' n' → logprob: -8.64577865600586
    4. 'n' → logprob: -10.39577865600586
    5. ' length' → logprob: -11.52077865600586
    6. ' if' → logprob: -12.02077865600586
    7. ' lines' → logprob: -12.89577865600586
    8. ' num' → logprob: -13.39577865600586
    9. ' len' → logprob: -13.64577865600586
    10. 'length' → logprob: -13.77077865600586

Token 228: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.12692831456661224
    2. 'index' → logprob: -2.1269283294677734
    3. '	index' → logprob: -15.626928329467773
    4. ' True' → logprob: -16.501928329467773
    5. ' lines' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '(index' → logprob: -19.001928329467773
    8. '_index' → logprob: -19.126928329467773
    9. 'True' → logprob: -19.376928329467773
    10. '#index' → logprob: -19.501928329467773

Token 229: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00811817217618227
    2. '<' → logprob: -4.883118152618408
    3. ' <=' → logprob: -8.383118629455566
    4. ' ' → logprob: -8.633118629455566
    5. '<len' → logprob: -9.883118629455566
    6. ' +=' → logprob: -10.758118629455566
    7. ' <
' → logprob: -11.383118629455566
    8. '<=' → logprob: -12.133118629455566
    9. '=' → logprob: -12.758118629455566
    10. '+' → logprob: -12.883118629455566

Token 230: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16022412478923798
    2. ' len' → logprob: -1.9102240800857544
    3. '	len' → logprob: -18.66022491455078
    4. '(len' → logprob: -18.91022491455078
    5. 'lines' → logprob: -19.53522491455078
    6. '=len' → logprob: -19.66022491455078
    7. '[len' → logprob: -19.91022491455078
    8. ',len' → logprob: -20.28522491455078
    9. '<len' → logprob: -20.53522491455078
    10. 'line' → logprob: -21.41022491455078

Token 231: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00010413920972496271
    2. '(' → logprob: -9.375103950500488
    3. ' lines' → logprob: -10.875103950500488
    4. 'lines' → logprob: -15.500103950500488
    5. '(line' → logprob: -17.125104904174805
    6. '	lines' → logprob: -17.125104904174805
    7. '(
' → logprob: -17.375104904174805
    8. '_lines' → logprob: -18.500104904174805
    9. '(rows' → logprob: -18.500104904174805
    10. ' (' → logprob: -19.375104904174805

Token 232: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0312996469438076
    2. '):' → logprob: -3.531299591064453
    3. ' and' → logprob: -7.406299591064453
    4. ')' → logprob: -8.031299591064453
    5. ':' → logprob: -8.531299591064453
    6. ':
' → logprob: -8.531299591064453
    7. ' ):
' → logprob: -9.156299591064453
    8. '       ' → logprob: -9.656299591064453
    9. 'and' → logprob: -10.656299591064453
    10. '):
' → logprob: -11.906299591064453

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0075501929968595505
    2. '   ' → logprob: -5.757550239562988
    3. '```' → logprob: -6.507550239562988
    4. '       ' → logprob: -7.132550239562988
    5. ' if' → logprob: -7.507550239562988
    6. ' ' → logprob: -7.882550239562988
    7. '            
' → logprob: -8.007550239562988
    8. '    
' → logprob: -8.257550239562988
    9. '  
' → logprob: -9.382550239562988
    10. ' 
' → logprob: -9.882550239562988

Token 234: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5971822142601013
    2. ' line' → logprob: -1.222182273864746
    3. ' count' → logprob: -2.722182273864746
    4. 'n' (adapté à ' n') → logprob: -3.722182273864746
    5. ' k' → logprob: -4.222182273864746
    6. 'line' → logprob: -4.222182273864746
    7. 'count' → logprob: -4.472182273864746
    8. ' if' → logprob: -4.722182273864746
    9. ' num' → logprob: -5.472182273864746
    10. ' parts' → logprob: -5.972182273864746

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809703141450882
    2. '=' → logprob: -3.2880971431732178
    3. '=int' → logprob: -11.413097381591797
    4. '_line' → logprob: -11.538097381591797
    5. '   ' → logprob: -11.538097381591797
    6. ' ' → logprob: -11.913097381591797
    7. '=line' → logprob: -12.788097381591797
    8. '    ' → logprob: -12.788097381591797
    9. '           ' → logprob: -12.913097381591797
    10. '       ' → logprob: -13.288097381591797

Token 236: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868713080883026
    2. 'int' → logprob: -1.136871337890625
    3. '=int' → logprob: -16.511871337890625
    4. '(int' → logprob: -16.636871337890625
    5. '[int' → logprob: -16.886871337890625
    6. '	int' → logprob: -17.261871337890625
    7. ' ' → logprob: -17.761871337890625
    8. '   ' → logprob: -18.761871337890625
    9. '<int' → logprob: -19.136871337890625
    10. '    ' → logprob: -19.636871337890625

Token 237: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.011387081816792488
    2. '(' → logprob: -4.511386871337891
    3. 'lines' → logprob: -8.01138687133789
    4. ' lines' → logprob: -12.01138687133789
    5. '	lines' → logprob: -14.13638687133789
    6. '(line' → logprob: -14.88638687133789
    7. '(
' → logprob: -15.13638687133789
    8. ' (' → logprob: -16.26138687133789
    9. ')' → logprob: -17.51138687133789
    10. '_lines' → logprob: -17.63638687133789

Token 238: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0003362966235727072
    2. '[' → logprob: -8.000336647033691
    3. 'index' → logprob: -15.250336647033691
    4. '[
' → logprob: -15.375336647033691
    5. ' [' → logprob: -16.000335693359375
    6. '```' → logprob: -16.125335693359375
    7. ')' → logprob: -16.875335693359375
    8. ')[' → logprob: -17.125335693359375
    9. '(index' → logprob: -18.250335693359375
    10. '[Index' → logprob: -18.875335693359375

Token 239: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01908322051167488
    2. '].' → logprob: -4.269083023071289
    3. '])
' → logprob: -5.394083023071289
    4. ' ])' → logprob: -8.394083023071289
    5. ']' → logprob: -9.644083023071289
    6. '.strip' → logprob: -10.394083023071289
    7. ']);' → logprob: -10.769083023071289
    8. '])-' → logprob: -12.394083023071289
    9. ' ])
' → logprob: -12.769083023071289
    10. '])+' → logprob: -13.019083023071289

Token 240: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3647453784942627
    2. '           ' → logprob: -1.4897453784942627
    3. '\n' → logprob: -2.6147453784942627
    4. '       ' → logprob: -5.864745140075684
    5. '            
' → logprob: -7.239745140075684
    6. ')' → logprob: -7.364745140075684
    7. '<|end|>' → logprob: -7.364745140075684
    8. '#index' → logprob: -7.864745140075684
    9. '```' → logprob: -7.989745140075684
    10. '               ' → logprob: -7.989745140075684

Token 241: ' index' (ID: 3472)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6969957947731018
    2. '
' → logprob: -0.9469957947731018
    3. ' if' → logprob: -2.696995735168457
    4. 'index' (adapté à ' index') → logprob: -4.696995735168457
    5. ' index' → logprob: -4.821995735168457
    6. '#index' → logprob: -4.821995735168457
    7. ' 
' → logprob: -5.321995735168457
    8. '```' → logprob: -5.571995735168457
    9. '       ' → logprob: -5.821995735168457
    10. '\' → logprob: -6.071995735168457

Token 242: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.048589076846838
    2. '+=' → logprob: -3.048588991165161
    3. '+' → logprob: -13.423588752746582
    4. ']+=' → logprob: -16.6735897064209
    5. '=' → logprob: -17.1735897064209
    6. ' +' → logprob: -17.5485897064209
    7. ' =' → logprob: -17.6735897064209
    8. '```' → logprob: -17.7985897064209
    9. '+="' → logprob: -19.1735897064209
    10. ' ' → logprob: -19.2985897064209

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '
' → logprob: -20.625335693359375
    4. '2' → logprob: -20.750335693359375
    5. '   ' → logprob: -20.875335693359375
    6. '+' → logprob: -21.000335693359375
    7. '```' → logprob: -21.000335693359375
    8. '１' → logprob: -21.125335693359375
    9. '۱' → logprob: -21.500335693359375
    10. ' ' → logprob: -22.000335693359375

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -21.625
    4. '１' → logprob: -22.375
    5. '   ' → logprob: -22.5
    6. '
' → logprob: -22.5
    7. '2' → logprob: -23.25
    8. '۱' → logprob: -23.375
    9. '0' → logprob: -24.375
    10. '+' → logprob: -24.8125

Token 245: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06049008667469025
    2. '
' → logprob: -3.310490131378174
    3. ' if' → logprob: -4.310490131378174
    4. '       ' → logprob: -5.560490131378174
    5. 'if' → logprob: -5.935490131378174
    6. '            
' → logprob: -7.185490131378174
    7. '   ' → logprob: -8.435489654541016
    8. '<|end|>' → logprob: -8.435489654541016
    9. '    
' → logprob: -8.810489654541016
    10. 'pr' → logprob: -8.810489654541016

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1328706592321396
    2. ' if' → logprob: -2.882870674133301
    3. '       ' → logprob: -3.882870674133301
    4. 'pr' → logprob: -4.257870674133301
    5. 'if' → logprob: -4.507870674133301
    6. ' prize' → logprob: -4.882870674133301
    7. ' prizes' → logprob: -5.382870674133301
    8. '
' → logprob: -6.007870674133301
    9. '	pr' → logprob: -6.007870674133301
    10. ' counts' → logprob: -6.382870674133301

Token 247: ' if' (ID: 538)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7640459537506104
    2. 'counts' → logprob: -0.8890459537506104
    3. 'if' (adapté à ' if') → logprob: -2.1390459537506104
    4. 'count' → logprob: -6.514045715332031
    5. 'for' → logprob: -6.639045715332031
    6. '       ' → logprob: -6.889045715332031
    7. '   ' → logprob: -7.639045715332031
    8. '           ' → logprob: -8.389045715332031
    9. 'arr' → logprob: -8.889045715332031
    10. 'cnt' → logprob: -9.264045715332031

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1269569844007492
    2. ' n' → logprob: -2.1269569396972656
    3. ' lines' → logprob: -11.126956939697266
    4. 'lines' → logprob: -12.251956939697266
    5. ' not' → logprob: -12.876956939697266
    6. 'index' → logprob: -13.126956939697266
    7. '	n' → logprob: -13.126956939697266
    8. 'not' → logprob: -14.126956939697266
    9. ' ' → logprob: -14.501956939697266
    10. ' index' → logprob: -14.626956939697266

Token 249: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760521292686462
    2. ' ==' → logprob: -0.8260521292686462
    3. '<=' → logprob: -9.451051712036133
    4. ' <=' → logprob: -10.826051712036133
    5. '=' → logprob: -11.576051712036133
    6. '==
' → logprob: -13.576051712036133
    7. ')==' → logprob: -14.076051712036133
    8. '===' → logprob: -14.451051712036133
    9. ']==' → logprob: -14.701051712036133
    10. '```' → logprob: -14.701051712036133

Token 250: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '-' → logprob: -16.75247573852539
    4. '  ' → logprob: -17.50247573852539
    5. '۰' → logprob: -17.87747573852539
    6. ' -' → logprob: -18.25247573852539
    7. '   ' → logprob: -18.37747573852539
    8. ' ' → logprob: -18.50247573852539
    9. '
' → logprob: -19.68997573852539
    10. '_' → logprob: -19.75247573852539

Token 251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.921253225300461e-05
    2. ' ' → logprob: -10.000069618225098
    3. '-' → logprob: -10.750069618225098
    4. '```' → logprob: -14.125069618225098
    5. ' -' → logprob: -14.250069618225098
    6. ')' → logprob: -15.687569618225098
    7. '   ' → logprob: -16.12506866455078
    8. '
' → logprob: -16.12506866455078
    9. '`' → logprob: -16.31256866455078
    10. '  ' → logprob: -16.75006866455078

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20145076513290405
    2. ':
' → logprob: -1.7014508247375488
    3. ':return' → logprob: -10.70145034790039
    4. '           ' → logprob: -12.07645034790039
    5. '   ' → logprob: -12.70145034790039
    6. '               ' → logprob: -13.20145034790039
    7. '       ' → logprob: -13.95145034790039
    8. ' or' → logprob: -13.95145034790039
    9. ' :' → logprob: -14.20145034790039
    10. ':
' → logprob: -14.45145034790039

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00044830769184045494
    2. '           ' → logprob: -7.875448226928711
    3. '	           ' → logprob: -10.375448226928711
    4. '   ' → logprob: -11.500448226928711
    5. '                   ' → logprob: -11.750448226928711
    6. 'break' → logprob: -11.875448226928711
    7. ' break' → logprob: -12.500448226928711
    8. '		       ' → logprob: -13.125448226928711
    9. '       ' → logprob: -13.875448226928711
    10. '              ' → logprob: -14.000448226928711

Token 254: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.37914130091667175
    2. ' break' → logprob: -1.3791413307189941
    3. '               ' → logprob: -2.879141330718994
    4. '	break' → logprob: -5.129141330718994
    5. 'return' → logprob: -6.754141330718994
    6. '                   ' → logprob: -7.879141330718994
    7. '           ' → logprob: -10.254140853881836
    8. ' return' → logprob: -10.504140853881836
    9. '_break' → logprob: -11.004140853881836
    10. '   ' → logprob: -11.754140853881836

Token 255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04949801415205002
    2. '
' → logprob: -3.0494980812072754
    3. '            
' → logprob: -7.924498081207275
    4. '<|end|>' → logprob: -8.549497604370117
    5. '       ' → logprob: -9.174497604370117
    6. '    
' → logprob: -9.674497604370117
    7. 'n' → logprob: -10.299497604370117
    8. '   ' → logprob: -10.549497604370117
    9. '          ' → logprob: -10.674497604370117
    10. '  
' → logprob: -11.424497604370117

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01775161363184452
    2. 'pr' → logprob: -4.517751693725586
    3. '       ' → logprob: -5.267751693725586
    4. 'counts' → logprob: -8.017751693725586
    5. 'n' → logprob: -8.392751693725586
    6. '   ' → logprob: -8.642751693725586
    7. 'count' → logprob: -8.892751693725586
    8. '
' → logprob: -9.142751693725586
    9. '	pr' → logprob: -9.267751693725586
    10. ' prizes' → logprob: -9.392751693725586

Token 257: ' counts' (ID: 28991)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.42339637875556946
    2. '           ' → logprob: -1.423396348953247
    3. ' prize' → logprob: -3.173396348953247
    4. 'counts' (adapté à ' counts') → logprob: -3.548396348953247
    5. ' counts' → logprob: -3.798396348953247
    6. ' prizes' → logprob: -4.798396587371826
    7. '       ' → logprob: -6.548396587371826
    8. '	pr' → logprob: -7.548396587371826
    9. ' pr' → logprob: -7.923396587371826
    10. '   ' → logprob: -8.298396110534668

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151583150029182
    2. '=' → logprob: -4.018151760101318
    3. '=[]' → logprob: -13.89315128326416
    4. '   ' → logprob: -15.14315128326416
    5. '    ' → logprob: -16.143152236938477
    6. ' ' → logprob: -16.518152236938477
    7. '_line' → logprob: -16.768152236938477
    8. ' =[' → logprob: -17.268152236938477
    9. '=line' → logprob: -17.393152236938477
    10. '[' → logprob: -17.518152236938477

Token 259: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00012320445966906846
    2. ' list' → logprob: -9.250123023986816
    3. '[list' → logprob: -10.750123023986816
    4. '[' → logprob: -12.125123023986816
    5. '[]' → logprob: -15.750123023986816
    6. '   ' → logprob: -18.250123977661133
    7. '	list' → logprob: -18.500123977661133
    8. '[]
' → logprob: -18.500123977661133
    9. ' [' → logprob: -19.125123977661133
    10. '(list' → logprob: -19.250123977661133

Token 260: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00016229959146585315
    2. '(' → logprob: -8.750162124633789
    3. 'map' → logprob: -12.875162124633789
    4. '(int' → logprob: -14.250162124633789
    5. '()' → logprob: -14.875162124633789
    6. '(
' → logprob: -15.625162124633789
    7. '(range' → logprob: -18.00016212463379
    8. '(m' → logprob: -18.00016212463379
    9. ' map' → logprob: -18.37516212463379
    10. '	map' → logprob: -19.12516212463379

Token 261: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008814881555736065
    2. '(' → logprob: -4.758814811706543
    3. '(lambda' → logprob: -9.258814811706543
    4. 'int' → logprob: -9.883814811706543
    5. '(
' → logprob: -10.008814811706543
    6. '(str' → logprob: -11.883814811706543
    7. ' (' → logprob: -14.508814811706543
    8. '<int' → logprob: -14.633814811706543
    9. ' int' → logprob: -14.758814811706543
    10. '(

' → logprob: -14.883814811706543

Token 262: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0007386347278952599
    2. '(' → logprob: -8.000739097595215
    3. ',' → logprob: -8.125739097595215
    4. ' (' → logprob: -9.375739097595215
    5. ' lines' → logprob: -11.750739097595215
    6. ' ,' → logprob: -12.250739097595215
    7. 'lines' → logprob: -12.625739097595215
    8. '(lambda' → logprob: -13.500739097595215
    9. '	lines' → logprob: -13.500739097595215
    10. '(
' → logprob: -13.750739097595215

Token 263: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.002498609945178032
    2. ' lines' → logprob: -6.002498626708984
    3. '(lines' → logprob: -10.752498626708984
    4. 'str' → logprob: -14.252498626708984
    5. '	lines' → logprob: -14.502498626708984
    6. 'lambda' → logprob: -15.002498626708984
    7. '   ' → logprob: -17.627498626708984
    8. '
' → logprob: -17.752498626708984
    9. 'line' → logprob: -18.127498626708984
    10. 'Lines' → logprob: -18.377498626708984

Token 264: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.082895273109898e-05
    2. '[' → logprob: -10.500030517578125
    3. 'index' → logprob: -13.750030517578125
    4. '(index' → logprob: -14.625030517578125
    5. '[line' → logprob: -14.625030517578125
    6. '[
' → logprob: -14.875030517578125
    7. '[ind' → logprob: -15.250030517578125
    8. '```' → logprob: -15.250030517578125
    9. '   ' → logprob: -16.125030517578125
    10. ' [' → logprob: -16.125030517578125

Token 265: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.09892111271619797
    2. '[index' → logprob: -2.598921060562134
    3. '(index' → logprob: -4.723921298980713
    4. ']' → logprob: -5.098921298980713
    5. '.split' → logprob: -5.848921298980713
    6. '][' → logprob: -7.723921298980713
    7. '().' → logprob: -7.848921298980713
    8. ':index' → logprob: -8.598920822143555
    9. ' ].' → logprob: -8.848920822143555
    10. '   ' → logprob: -8.848920822143555

Token 266: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10021205991506577
    2. 'strip' → logprob: -2.3502120971679688
    3. 'rstrip' → logprob: -12.475212097167969
    4. ' split' → logprob: -13.725212097167969
    5. ' strip' → logprob: -15.600212097167969
    6. '.split' → logprob: -16.10021209716797
    7. '(split' → logprob: -16.10021209716797
    8. '.strip' → logprob: -16.97521209716797
    9. 'spl' → logprob: -17.60021209716797
    10. '
' → logprob: -18.60021209716797

Token 267: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1274786740541458
    2. '()' → logprob: -2.12747859954834
    3. '())))' → logprob: -8.37747859954834
    4. '()))
' → logprob: -8.87747859954834
    5. '))' → logprob: -9.50247859954834
    6. '())' → logprob: -10.00247859954834
    7. '()));' → logprob: -11.00247859954834
    8. '(' → logprob: -11.62747859954834
    9. '()
' → logprob: -11.62747859954834
    10. '('' → logprob: -12.00247859954834

Token 268: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07955442368984222
    2. '<|end|>' → logprob: -2.954554319381714
    3. '#index' → logprob: -4.954554557800293
    4. '            
' → logprob: -5.079554557800293
    5. '[index' → logprob: -6.204554557800293
    6. '```' → logprob: -6.329554557800293
    7. '       ' → logprob: -6.829554557800293
    8. '\n' → logprob: -6.954554557800293
    9. '<|end|>' → logprob: -6.954554557800293
    10. 'index' → logprob: -7.079554557800293

Token 269: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.016789443790912628
    2. '           ' → logprob: -4.516789436340332
    3. ' index' → logprob: -5.766789436340332
    4. '
' → logprob: -7.266789436340332
    5. '<|end|>' → logprob: -7.391789436340332
    6. '#index' → logprob: -7.516789436340332
    7. '[index' → logprob: -8.266789436340332
    8. '       ' → logprob: -8.641789436340332
    9. '	index' → logprob: -9.641789436340332
    10. '            
' → logprob: -10.016789436340332

Token 270: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759695172309875
    2. ' +=' → logprob: -0.8259695172309875
    3. '+' → logprob: -11.075969696044922
    4. ']+=' → logprob: -11.575969696044922
    5. '++' → logprob: -13.325969696044922
    6. '.append' → logprob: -13.825969696044922
    7. '=' → logprob: -14.575969696044922
    8. '           ' → logprob: -14.700969696044922
    9. '<|end|>' → logprob: -14.825969696044922
    10. '```' → logprob: -15.075969696044922

Token 271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.000001907348633
    4. 'n' → logprob: -20.250001907348633
    5. '１' → logprob: -20.625001907348633
    6. '۱' → logprob: -21.250001907348633
    7. '```' → logprob: -21.687501907348633
    8. '(' → logprob: -22.125001907348633
    9. 'len' → logprob: -22.250001907348633
    10. '0' → logprob: -22.375001907348633

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -21.375
    4. '１' → logprob: -21.75
    5. '۱' → logprob: -21.875
    6. '```' → logprob: -22.0
    7. '0' → logprob: -22.1875
    8. 'len' → logprob: -22.4375
    9. '
' → logprob: -22.75
    10. 'n' → logprob: -23.1875

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033180462196469307
    2. '
' → logprob: -5.878317832946777
    3. '       ' → logprob: -7.878317832946777
    4. '            
' → logprob: -10.378317832946777
    5. ' if' → logprob: -10.503317832946777
    6. 'self' → logprob: -10.503317832946777
    7. 'if' → logprob: -10.753317832946777
    8. '               ' → logprob: -11.378317832946777
    9. '		' → logprob: -13.003317832946777
    10. '        
' → logprob: -13.128317832946777

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11426699161529541
    2. 'self' → logprob: -2.489266872406006
    3. '       ' → logprob: -3.989266872406006
    4. 'if' → logprob: -5.864266872406006
    5. ' self' → logprob: -5.864266872406006
    6. ' if' → logprob: -7.364266872406006
    7. '		' → logprob: -10.239267349243164
    8. '	self' → logprob: -10.489267349243164
    9. '
' → logprob: -10.614267349243164
    10. '   ' → logprob: -10.864267349243164

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02361893467605114
    2. '           ' → logprob: -3.7736189365386963
    3. ' self' → logprob: -8.898618698120117
    4. 'pr' → logprob: -9.023618698120117
    5. 'if' → logprob: -9.148618698120117
    6. 'for' → logprob: -12.773618698120117
    7. '       ' → logprob: -13.023618698120117
    8. 'pc' → logprob: -13.398618698120117
    9. 'collection' → logprob: -13.648618698120117
    10. '               ' → logprob: -14.148618698120117

Token 276: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00010688089241739362
    2. '.datas' → logprob: -9.250106811523438
    3. '.dat' → logprob: -12.250106811523438
    4. 'datasets' → logprob: -13.000106811523438
    5. '.pr' → logprob: -13.625106811523438
    6. ' .' → logprob: -13.875106811523438
    7. '.' → logprob: -14.625106811523438
    8. '.dataset' → logprob: -15.375106811523438
    9. '.data' → logprob: -15.625106811523438
    10. '.models' → logprob: -16.125106811523438

Token 277: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00034356804098933935
    2. '.' → logprob: -8.000343322753906
    3. '.app' → logprob: -12.500343322753906
    4. '.extend' → logprob: -13.125343322753906
    5. '.ap' → logprob: -14.375343322753906
    6. ' .' → logprob: -14.375343322753906
    7. '.add' → logprob: -15.125343322753906
    8. '.setdefault' → logprob: -15.250343322753906
    9. '.py' → logprob: -15.375343322753906
    10. '.Append' → logprob: -15.625343322753906

Token 278: '(' (ID: 7)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.004892638884484768
    2. '(' → logprob: -5.504892826080322
    3. '(pr' → logprob: -7.129892826080322
    4. '(
' → logprob: -12.254892349243164
    5. '(c' → logprob: -12.629892349243164
    6. '((' → logprob: -13.754892349243164
    7. '(P' → logprob: -14.004892349243164
    8. 'Pr' → logprob: -14.129892349243164
    9. 'counts' → logprob: -14.129892349243164
    10. '(PR' → logprob: -14.504892349243164

Token 279: 'Pr' (ID: 2938)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.07957577705383301
    2. 'Pr' → logprob: -2.579575777053833
    3. 'count' → logprob: -8.204575538635254
    4. 'pr' → logprob: -8.329575538635254
    5. ' counts' → logprob: -8.829575538635254
    6. ' Pr' → logprob: -10.954575538635254
    7. 'Counts' → logprob: -12.329575538635254
    8. 'c' → logprob: -14.079575538635254
    9. 'PR' → logprob: -14.829575538635254
    10. 'Prize' → logprob: -15.204575538635254

Token 280: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -9.491498531133402e-06
    2. 'IZES' → logprob: -11.875009536743164
    3. 'iz' → logprob: -13.875009536743164
    4. 'ize' → logprob: -14.375009536743164
    5. 'zes' → logprob: -14.500009536743164
    6. 'izzes' → logprob: -15.750009536743164
    7. 'azes' → logprob: -16.500009536743164
    8. '```' → logprob: -17.250009536743164
    9. 'i' → logprob: -17.750009536743164
    10. '
' → logprob: -17.875009536743164

Token 281: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -9.519893501419574e-05
    2. 'Counts' → logprob: -10.00009536743164
    3. 's' → logprob: -10.50009536743164
    4. 'Collections' → logprob: -10.87509536743164
    5. 'C' → logprob: -14.25009536743164
    6. 'Count' → logprob: -14.62509536743164
    7. 'counts' → logprob: -14.75009536743164
    8. 'a' → logprob: -14.87509536743164
    9. 'Collect' → logprob: -15.75009536743164
    10. 'es' → logprob: -15.87509536743164

Token 282: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00012689977302215993
    2. '(' → logprob: -9.000126838684082
    3. ' (' → logprob: -13.125126838684082
    4. '(pr' → logprob: -14.250126838684082
    5. '(c' → logprob: -15.375126838684082
    6. '(
' → logprob: -15.500126838684082
    7. '(cnt' → logprob: -16.2501277923584
    8. ')(' → logprob: -16.5001277923584
    9. ')' → logprob: -17.0001277923584
    10. '[count' → logprob: -17.8751277923584

Token 283: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008675788529217243
    2. '_counts' → logprob: -4.758675575256348
    3. 'counts' → logprob: -10.883675575256348
    4. 'unts' → logprob: -11.508675575256348
    5. 'ts' → logprob: -11.508675575256348
    6. '(count' → logprob: -11.758675575256348
    7. 'cts' → logprob: -12.258675575256348
    8. ')' → logprob: -13.008675575256348
    9. 'ount' → logprob: -13.133675575256348
    10. 'nts' → logprob: -13.258675575256348

Token 284: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16022971272468567
    2. '))' → logprob: -1.9102296829223633
    3. '))
' → logprob: -13.035229682922363
    4. ')
' → logprob: -13.160229682922363
    5. ')))' → logprob: -13.910229682922363
    6. '       ' → logprob: -15.035229682922363
    7. ' )' → logprob: -16.41023063659668
    8. '())' → logprob: -17.28523063659668
    9. ')}' → logprob: -17.41023063659668
    10. ' ))' → logprob: -17.41023063659668

Token 285: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.4923250377178192
    2. 'Solution' → logprob: -1.8673250675201416
    3. 'Solver' → logprob: -2.7423250675201416
    4. 'Pr' → logprob: -2.8673250675201416
    5. 'Result' → logprob: -3.2423250675201416
    6. 'Main' → logprob: -4.4923248291015625
    7. 'Prize' → logprob: -4.4923248291015625
    8. ' Output' → logprob: -4.9923248291015625
    9. 'Processor' → logprob: -4.9923248291015625
    10. 'Game' → logprob: -5.3673248291015625

Token 287: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.5358020663261414
    2. 'Formatter' → logprob: -1.9108021259307861
    3. 'Generator' → logprob: -2.035802125930786
    4. 'Printer' → logprob: -2.410802125930786
    5. 'Handler' → logprob: -3.785802125930786
    6. 'ter' → logprob: -4.035801887512207
    7. 'Builder' → logprob: -5.410801887512207
    8. 'Manager' → logprob: -7.285801887512207
    9. 'Renderer' → logprob: -7.910801887512207
    10. 'Producer' → logprob: -8.535801887512207

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017111169872805476
    2. ':
' → logprob: -6.376710891723633
    3. ':def' → logprob: -12.001710891723633
    4. '():' → logprob: -14.251710891723633
    5. '<|end|>' → logprob: -14.876710891723633
    6. ' :' → logprob: -14.876710891723633
    7. '):' → logprob: -15.251710891723633
    8. ':

' → logprob: -15.251710891723633
    9. '(object' → logprob: -15.501710891723633
    10. '(' → logprob: -16.126710891723633

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04617517814040184
    2. 'def' → logprob: -3.796175241470337
    3. ' def' → logprob: -3.796175241470337
    4. 'class' → logprob: -9.296175003051758
    5. '	def' → logprob: -9.546175003051758
    6. '```' → logprob: -11.546175003051758
    7. '   ' → logprob: -11.671175003051758
    8. '
' → logprob: -12.171175003051758
    9. '‌' → logprob: -12.171175003051758
    10. ' class' → logprob: -12.546175003051758

Token 290: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015525942435488105
    2. ' def' → logprob: -6.501552581787109
    3. '   ' → logprob: -10.37655258178711
    4. '@' → logprob: -10.87655258178711
    5. 'class' → logprob: -15.75155258178711
    6. ' @' → logprob: -16.62655258178711
    7. '	def' → logprob: -17.37655258178711
    8. '```' → logprob: -17.87655258178711
    9. 'staticmethod' → logprob: -18.00155258178711
    10. ' ' → logprob: -18.25155258178711

Token 291: ' __' (ID: 2516)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.1664109230041504
    2. 'staticmethod' → logprob: -1.2914109230041504
    3. 'init' → logprob: -1.6664109230041504
    4. 'def' → logprob: -2.0414109230041504
    5. ' def' → logprob: -2.5414109230041504
    6. 'class' → logprob: -4.91641092300415
    7. ' format' → logprob: -5.29141092300415
    8. ' init' → logprob: -6.29141092300415
    9. 'classmethod' → logprob: -7.29141092300415
    10. 'static' → logprob: -7.54141092300415

Token 292: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0564331205387134e-05
    2. 'call' → logprob: -11.50001049041748
    3. 'def' → logprob: -14.75001049041748
    4. 'next' → logprob: -16.750011444091797
    5. ' init' → logprob: -17.625011444091797
    6. 'new' → logprob: -20.125011444091797
    7. '(init' → logprob: -20.250011444091797
    8. '_init' → logprob: -20.375011444091797
    9. 'len' → logprob: -20.625011444091797
    10. 'str' → logprob: -21.250011444091797

Token 293: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00529008824378252
    2. '__' → logprob: -5.8802900314331055
    3. '(self' → logprob: -6.1302900314331055
    4. '__(
' → logprob: -8.380290031433105
    5. '(' → logprob: -9.755290031433105
    6. '_(' → logprob: -11.505290031433105
    7. '
' → logprob: -13.130290031433105
    8. '__((' → logprob: -13.880290031433105
    9. '___' → logprob: -14.380290031433105
    10. '   ' → logprob: -14.505290031433105

Token 294: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0029438287019729614
    2. ')' → logprob: -6.127943992614746
    3. '):
' → logprob: -7.377943992614746
    4. '):' → logprob: -9.377943992614746
    5. '   ' → logprob: -10.752943992614746
    6. '
' → logprob: -11.252943992614746
    7. ' self' → logprob: -12.127943992614746
    8. ')(' → logprob: -12.877943992614746
    9. '):

' → logprob: -13.502943992614746
    10. '	self' → logprob: -13.752943992614746

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02343204990029335
    2. '):
' → logprob: -3.7734320163726807
    3. ')' → logprob: -8.773431777954102
    4. ',' → logprob: -11.148431777954102
    5. ' ):' → logprob: -12.023431777954102
    6. '   ' → logprob: -12.523431777954102
    7. '):
' → logprob: -12.523431777954102
    8. '():' → logprob: -13.273431777954102
    9. '):

' → logprob: -14.148431777954102
    10. ':' → logprob: -14.523431777954102

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2296382039785385
    2. 'self' → logprob: -1.6046382188796997
    3. '   ' → logprob: -5.60463809967041
    4. 'pass' → logprob: -8.60463809967041
    5. '
' → logprob: -8.85463809967041
    6. ' self' → logprob: -9.47963809967041
    7. 'def' → logprob: -9.60463809967041
    8. '	self' → logprob: -11.10463809967041
    9. '    
' → logprob: -11.47963809967041
    10. ')' → logprob: -11.85463809967041

Token 297: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013385500758886337
    2. '       ' → logprob: -5.13838529586792
    3. 'pass' (adapté à ' pass') → logprob: -5.63838529586792
    4. '   ' → logprob: -5.63838529586792
    5. ' self' → logprob: -8.263385772705078
    6. '
' → logprob: -10.388385772705078
    7. ' pass' → logprob: -11.263385772705078
    8. '	self' → logprob: -12.638385772705078
    9. '0' → logprob: -13.263385772705078
    10. '	pass' → logprob: -14.138385772705078

Token 298: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005987812764942646
    2. '
' → logprob: -5.630987644195557
    3. 'def' → logprob: -6.255987644195557
    4. ' def' → logprob: -8.005988121032715
    5. '<|end|>' → logprob: -9.380988121032715
    6. '    
' → logprob: -10.880988121032715
    7. ' ' → logprob: -11.380988121032715
    8. '<|end|>' → logprob: -12.505988121032715
    9. '```' → logprob: -12.755988121032715
    10. ' 
' → logprob: -13.130988121032715

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018004421144723892
    2. 'def' → logprob: -4.143004417419434
    3. ' def' → logprob: -6.518004417419434
    4. '
' → logprob: -7.768004417419434
    5. '	def' → logprob: -10.018004417419434
    6. '```' → logprob: -11.768004417419434
    7. '    
' → logprob: -12.143004417419434
    8. ' ' → logprob: -12.268004417419434
    9. '<|end|>' → logprob: -13.268004417419434
    10. 'class' → logprob: -13.893004417419434

Token 300: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.3795937522663735e-05
    2. ' def' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.00002384185791
    4. '
' → logprob: -18.875022888183594
    5. '	def' → logprob: -20.750022888183594
    6. ' ' → logprob: -21.000022888183594
    7. 'de' → logprob: -21.000022888183594
    8. '@' → logprob: -21.125022888183594
    9. 'class' → logprob: -21.375022888183594
    10. 'd' → logprob: -24.000022888183594

Token 301: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0010375719284638762
    2. ' format' → logprob: -6.87603759765625
    3. 'print' → logprob: -12.37603759765625
    4. 'display' → logprob: -16.00103759765625
    5. 'generate' → logprob: -16.12603759765625
    6. 'write' → logprob: -16.12603759765625
    7. 'render' → logprob: -16.37603759765625
    8. 'Format' → logprob: -17.37603759765625
    9. 'formats' → logprob: -17.62603759765625
    10. 'prepare' → logprob: -18.00103759765625

Token 302: '_result' (ID: 11623)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010288810590282083
    2. '(' → logprob: -7.126029014587402
    3. '_results' → logprob: -8.751029014587402
    4. '_result' → logprob: -9.876029014587402
    5. '_output' → logprob: -11.626029014587402
    6. 'self' → logprob: -13.126029014587402
    7. '_attempt' → logprob: -13.376029014587402
    8. 'results' → logprob: -14.876029014587402
    9. '(s' → logprob: -14.876029014587402
    10. '(
' → logprob: -15.376029014587402

Token 303: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012403888104017824
    2. '(' → logprob: -9.000123977661133
    3. ' (' → logprob: -15.000123977661133
    4. '(s' → logprob: -16.000123977661133
    5. '(sel' → logprob: -17.250123977661133
    6. '(
' → logprob: -17.500123977661133
    7. '(Self' → logprob: -17.875123977661133
    8. 'self' → logprob: -18.500123977661133
    9. '(se' → logprob: -18.625123977661133
    10. '   ' → logprob: -19.250123977661133

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002669384120963514
    2. ' ,' → logprob: -8.500267028808594
    3. ',self' → logprob: -9.750267028808594
    4. 'self' → logprob: -13.125267028808594
    5. ',result' → logprob: -13.625267028808594
    6. ',
' → logprob: -14.500267028808594
    7. ',s' → logprob: -14.625267028808594
    8. ',p' → logprob: -15.375267028808594
    9. '(self' → logprob: -15.750267028808594
    10. ',line' → logprob: -16.000267028808594

Token 305: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34883344173431396
    2. 'self' → logprob: -1.473833441734314
    3. 'pr' → logprob: -3.3488335609436035
    4. ' result' → logprob: -3.9738335609436035
    5. ' self' → logprob: -5.3488335609436035
    6. 'results' → logprob: -5.9738335609436035
    7. 'collection' → logprob: -6.2238335609436035
    8. 'possible' → logprob: -6.9738335609436035
    9. 'is' → logprob: -8.223833084106445
    10. 'attempt' → logprob: -8.473833084106445

Token 306: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19611842930316925
    2. '):' → logprob: -1.9461184740066528
    3. 'self' → logprob: -3.5711183547973633
    4. '):
' → logprob: -5.071118354797363
    5. '   ' → logprob: -7.946118354797363
    6. '(self' → logprob: -8.696118354797363
    7. ':' → logprob: -9.071118354797363
    8. '       ' → logprob: -9.571118354797363
    9. ' ,' → logprob: -9.946118354797363
    10. ',result' → logprob: -10.696118354797363

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000506326905451715
    2. 'self' → logprob: -8.125506401062012
    3. 'if' → logprob: -9.250506401062012
    4. '(self' → logprob: -10.000506401062012
    5. 'return' → logprob: -10.375506401062012
    6. ' if' → logprob: -11.375506401062012
    7. '           ' → logprob: -12.125506401062012
    8. '   ' → logprob: -12.375506401062012
    9. '(' → logprob: -12.500506401062012
    10. ',' → logprob: -13.000506401062012

Token 308: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2786504924297333
    2. '       ' → logprob: -2.4036505222320557
    3. ' return' → logprob: -2.4036505222320557
    4. 'if' (adapté à ' if') → logprob: -2.9036505222320557
    5. '"' → logprob: -5.778650283813477
    6. ' if' → logprob: -6.403650283813477
    7. ' f' → logprob: -7.028650283813477
    8. 'f' → logprob: -7.528650283813477
    9. '   ' → logprob: -7.653650283813477
    10. '"\' → logprob: -7.903650283813477

Token 309: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25192946195602417
    2. ' result' → logprob: -1.501929521560669
    3. '(result' → logprob: -16.001930236816406
    4. ' isinstance' → logprob: -16.001930236816406
    5. '	result' → logprob: -17.751930236816406
    6. 'not' → logprob: -18.626930236816406
    7. ' ' → logprob: -19.001930236816406
    8. 'is' → logprob: -19.001930236816406
    9. '_result' → logprob: -19.001930236816406
    10. '$result' → logprob: -19.001930236816406

Token 310: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011052182875573635
    2. 'is' → logprob: -4.511052131652832
    3. '==' → logprob: -13.011052131652832
    4. '	is' → logprob: -13.386052131652832
    5. '[' → logprob: -15.386052131652832
    6. '===' → logprob: -16.51105308532715
    7. ' ' → logprob: -16.76105308532715
    8. ' ==' → logprob: -16.76105308532715
    9. 'in' → logprob: -16.88605308532715
    10. ' in' → logprob: -17.01105308532715

Token 311: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005780545179732144
    2. ' None' → logprob: -7.625577926635742
    3. 'not' → logprob: -9.375577926635742
    4. '   ' → logprob: -13.125577926635742
    5. ' not' → logprob: -13.625577926635742
    6. 'True' → logprob: -13.750577926635742
    7. 'False' → logprob: -15.125577926635742
    8. 'N' → logprob: -15.375577926635742
    9. '(None' → logprob: -15.875577926635742
    10. 'Not' → logprob: -16.000577926635742

Token 312: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06201586127281189
    2. ':' → logprob: -2.8120157718658447
    3. ':return' → logprob: -10.687015533447266
    4. '):
' → logprob: -11.187015533447266
    5. ':
' → logprob: -12.437015533447266
    6. ' or' → logprob: -12.562015533447266
    7. ')' → logprob: -13.562015533447266
    8. '       ' → logprob: -13.687015533447266
    9. '   ' → logprob: -14.937015533447266
    10. '           ' → logprob: -15.062015533447266

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08341291546821594
    2. 'return' → logprob: -2.5834128856658936
    3. ' return' → logprob: -5.833413124084473
    4. '       ' → logprob: -6.708413124084473
    5. '
' → logprob: -8.958413124084473
    6. 'print' → logprob: -9.083413124084473
    7. '   ' → logprob: -10.708413124084473
    8. ':
' → logprob: -10.833413124084473
    9. '"' → logprob: -11.083413124084473
    10. ':return' → logprob: -11.583413124084473

Token 314: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008221632800996304
    2. '           ' → logprob: -4.883221626281738
    3. ' return' → logprob: -7.508221626281738
    4. '       ' → logprob: -9.883221626281738
    5. '"' → logprob: -11.633221626281738
    6. '   ' → logprob: -13.008221626281738
    7. '	return' → logprob: -14.008221626281738
    8. '               ' → logprob: -14.008221626281738
    9. 'eturn' → logprob: -14.758221626281738
    10. ':return' → logprob: -14.883221626281738

Token 315: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.198192298412323
    2. '"No' → logprob: -2.1981923580169678
    3. '"-' → logprob: -2.9481923580169678
    4. ''' → logprob: -5.073192119598389
    5. '-' → logprob: -6.323192119598389
    6. 'im' → logprob: -6.698192119598389
    7. ''-' → logprob: -7.198192119598389
    8. ''im' → logprob: -7.323192119598389
    9. '"N' → logprob: -7.323192119598389
    10. '"This' → logprob: -7.698192119598389

Token 316: 'NA' (ID: 9555)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.7265943288803101
    2. 'Impossible' → logprob: -1.22659432888031
    3. '-' → logprob: -2.7265944480895996
    4. 'IMP' → logprob: -3.1015944480895996
    5. 'N' → logprob: -3.8515944480895996
    6. 'No' → logprob: -4.3515944480896
    7. 'NO' → logprob: -4.7265944480896
    8. 'not' → logprob: -5.1015944480896
    9. 'Im' → logprob: -5.1015944480896
    10. 'no' → logprob: -5.3515944480896

Token 317: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.012064074166119099
    2. '"
' → logprob: -4.512063980102539
    3. '\n' → logprob: -7.012063980102539
    4. '"
' → logprob: -9.387063980102539
    5. '"\' → logprob: -11.137063980102539
    6. '")' → logprob: -12.512063980102539
    7. '"No' → logprob: -13.012063980102539
    8. 'L' → logprob: -14.012063980102539
    9. 'I' → logprob: -14.137063980102539
    10. '"N' → logprob: -14.137063980102539

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10741174221038818
    2. '
' → logprob: -2.3574118614196777
    3. '\n' → logprob: -5.232411861419678
    4. 'return' → logprob: -6.732411861419678
    5. '        
' → logprob: -7.982411861419678
    6. 'else' → logprob: -8.73241138458252
    7. '"\' → logprob: -10.10741138458252
    8. '
' → logprob: -10.23241138458252
    9. ' else' → logprob: -11.48241138458252
    10. '```' → logprob: -11.48241138458252

Token 319: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7312118411064148
    2. 'return' → logprob: -0.7312118411064148
    3. ' return' → logprob: -3.4812119007110596
    4. 'else' (adapté à ' else') → logprob: -5.6062116622924805
    5. '
' → logprob: -6.1062116622924805
    6. ' else' → logprob: -7.3562116622924805
    7. '   ' → logprob: -11.60621166229248
    8. '{return' → logprob: -11.85621166229248
    9. '        
' → logprob: -12.23121166229248
    10. '           ' → logprob: -12.73121166229248

Token 320: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08468319475650787
    2. ':
' → logprob: -3.2096831798553467
    3. ':' → logprob: -4.084683418273926
    4. 'return' → logprob: -4.459683418273926
    5. ' return' → logprob: -4.459683418273926
    6. ':return' → logprob: -7.459683418273926
    7. '          ' → logprob: -9.084683418273926
    8. '       ' → logprob: -9.959683418273926
    9. '   ' → logprob: -10.334683418273926
    10. '               ' → logprob: -10.834683418273926

Token 321: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.771966814994812
    2. ' return' → logprob: -1.021966814994812
    3. ' str' → logprob: -2.5219669342041016
    4. '           ' → logprob: -3.3969669342041016
    5. 'str' → logprob: -3.3969669342041016
    6. ' f' → logprob: -3.7719669342041016
    7. 'f' → logprob: -4.896966934204102
    8. '"' → logprob: -9.021966934204102
    9. '       ' → logprob: -9.396966934204102
    10. '               ' → logprob: -10.396966934204102

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31384724378585815
    2. 'str' → logprob: -1.313847303390503
    3. ' return' → logprob: -8.063847541809082
    4. ' str' → logprob: -8.313847541809082
    5. '           ' → logprob: -11.188847541809082
    6. 'f' → logprob: -11.438847541809082
    7. '               ' → logprob: -14.438847541809082
    8. '   ' → logprob: -15.688847541809082
    9. '(str' → logprob: -16.688846588134766
    10. '{return' → logprob: -16.688846588134766

Token 323: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0621403269469738
    2. ' str' → logprob: -2.8121402263641357
    3. 'f' → logprob: -9.187140464782715
    4. ' f' → logprob: -9.687140464782715
    5. '"' → logprob: -11.812140464782715
    6. '(str' → logprob: -14.562140464782715
    7. '	str' → logprob: -15.812140464782715
    8. '=str' → logprob: -16.9371395111084
    9. ' ' → logprob: -17.0621395111084
    10. '   ' → logprob: -17.3121395111084

Token 324: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005678066518157721
    2. '(' → logprob: -7.50056791305542
    3. 'result' → logprob: -11.125567436218262
    4. '=result' → logprob: -17.375568389892578
    5. '[result' → logprob: -18.375568389892578
    6. '(
' → logprob: -18.875568389892578
    7. ',result' → logprob: -18.875568389892578
    8. ' (' → logprob: -19.250568389892578
    9. '(results' → logprob: -19.250568389892578
    10. ' result' → logprob: -19.500568389892578

Token 325: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. '())' → logprob: -12.125008583068848
    3. '()' → logprob: -13.625008583068848
    4. ' )' → logprob: -14.125008583068848
    5. ')
' → logprob: -14.625008583068848
    6. '       ' → logprob: -15.625008583068848
    7. '))' → logprob: -15.875008583068848
    8. '   ' → logprob: -16.000009536743164
    9. ')return' → logprob: -16.125009536743164
    10. '<|end|>' → logprob: -16.875009536743164

Token 326: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5297546982765198
    2. 'class' → logprob: -1.279754638671875
    3. 'if' → logprob: -2.029754638671875
    4. '<|end|>' → logprob: -6.779754638671875
    5. '#' → logprob: -7.779754638671875
    6. '```' → logprob: -9.154754638671875
    7. 'pr' → logprob: -10.029754638671875
    8. 'import' → logprob: -10.904754638671875
    9. ' if' → logprob: -11.154754638671875
    10. '#!/' → logprob: -11.529754638671875

Token 327: ' G' (ID: 499)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.9679895639419556
    2. 'Pr' → logprob: -1.5929895639419556
    3. 'Solver' → logprob: -1.9679895639419556
    4. 'Main' → logprob: -2.217989444732666
    5. 'Prize' → logprob: -2.592989444732666
    6. 'Game' → logprob: -3.217989444732666
    7. 'Competition' → logprob: -4.717989444732666
    8. 'Runner' → logprob: -4.717989444732666
    9. 'Problem' → logprob: -4.967989444732666
    10. 'Contest' → logprob: -5.092989444732666

Token 328: 'ach' (ID: 678)
  Prédit: 'ame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ame' → logprob: -0.06151358410716057
    2. 'u' → logprob: -3.561513662338257
    3. 'amer' → logprob: -4.061513423919678
    4. 'a' → logprob: -5.561513423919678
    5. 'enerator' → logprob: -5.686513423919678
    6. 'amb' → logprob: -6.311513423919678
    7. 'ift' → logprob: -7.061513423919678
    8. 'am' → logprob: -7.186513423919678
    9. 'ames' → logprob: -7.311513423919678
    10. '`' → logprob: -7.811513423919678

Token 329: 'apon' (ID: 11518)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1144009605050087
    2. 'a' → logprob: -2.489400863647461
    3. 'ik' → logprob: -4.364400863647461
    4. 'on' → logprob: -6.114400863647461
    5. 'ikon' → logprob: -6.489400863647461
    6. 'is' → logprob: -6.614400863647461
    7. 'iko' → logprob: -7.114400863647461
    8. 'ih' → logprob: -7.364400863647461
    9. 'imon' → logprob: -7.614400863647461
    10. 'aman' → logprob: -7.614400863647461

Token 330: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6310599446296692
    2. 'Game' → logprob: -1.3810598850250244
    3. 'Simulator' → logprob: -2.1310598850250244
    4. 'Machine' → logprob: -2.5060598850250244
    5. ':
' → logprob: -4.8810601234436035
    6. 'Manager' → logprob: -6.2560601234436035
    7. '():' → logprob: -6.3810601234436035
    8. 'Solver' → logprob: -6.6310601234436035
    9. 'Engine' → logprob: -7.2560601234436035
    10. 'Handler' → logprob: -7.5060601234436035

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001333932508714497
    2. ':
' → logprob: -6.626333713531494
    3. ':def' → logprob: -12.251334190368652
    4. '(' → logprob: -14.251334190368652
    5. ' :' → logprob: -14.376334190368652
    6. '(object' → logprob: -14.501334190368652
    7. ':

' → logprob: -14.751334190368652
    8. '():' → logprob: -14.751334190368652
    9. '):' → logprob: -16.001333236694336
    10. '   ' → logprob: -16.751333236694336

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043937109876424074
    2. ' def' → logprob: -7.875439167022705
    3. 'def' → logprob: -9.750439643859863
    4. '
' → logprob: -14.375439643859863
    5. '    
' → logprob: -15.750439643859863
    6. '   ' → logprob: -15.875439643859863
    7. 'class' → logprob: -16.375438690185547
    8. '	def' → logprob: -16.875438690185547
    9. '```' → logprob: -17.750438690185547
    10. ':' → logprob: -19.125438690185547

Token 333: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2629566192626953
    2. 'def' (adapté à ' def') → logprob: -1.5129566192626953
    3. '   ' → logprob: -4.512956619262695
    4. '	def' → logprob: -14.512956619262695
    5. '@' → logprob: -15.387956619262695
    6. ' ' → logprob: -16.137956619262695
    7. ':def' → logprob: -17.012956619262695
    8. '    ' → logprob: -17.137956619262695
    9. 'class' → logprob: -17.262956619262695
    10. '  ' → logprob: -17.637956619262695

Token 334: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17295095324516296
    2. ' __' → logprob: -2.5479509830474854
    3. 'init' → logprob: -3.2979509830474854
    4. 'def' → logprob: -3.5479509830474854
    5. '__' → logprob: -5.172950744628906
    6. ' init' → logprob: -5.297950744628906
    7. '_init' → logprob: -5.547950744628906
    8. ' ' → logprob: -9.172950744628906
    9. '   ' → logprob: -9.672950744628906
    10. '```' → logprob: -9.797950744628906

Token 335: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.375
    3. 'def' → logprob: -19.5
    4. '(init' → logprob: -21.75
    5. 'int' → logprob: -22.0
    6. 'ini' → logprob: -22.375
    7. 'inite' → logprob: -22.375
    8. '_init' → logprob: -22.5
    9. '	init' → logprob: -22.5
    10. 'new' → logprob: -22.625

Token 336: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002981744706630707
    2. '(self' → logprob: -5.877981662750244
    3. '__' → logprob: -9.377982139587402
    4. '__(
' → logprob: -9.877982139587402
    5. '(' → logprob: -10.252982139587402
    6. '_(' → logprob: -12.877982139587402
    7. ' (' → logprob: -13.002982139587402
    8. 'self' → logprob: -14.752982139587402
    9. ')(' → logprob: -16.377981185913086
    10. '<>(' → logprob: -16.502981185913086

Token 337: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2246291337069124e-05
    2. ')' → logprob: -11.000021934509277
    3. '):
' → logprob: -12.625021934509277
    4. '
' → logprob: -13.875021934509277
    5. ' self' → logprob: -13.875021934509277
    6. '   ' → logprob: -16.500022888183594
    7. '       ' → logprob: -16.750022888183594
    8. '(self' → logprob: -17.000022888183594
    9. ')
' → logprob: -17.250022888183594
    10. 'pr' → logprob: -17.625022888183594

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6465710401535034
    2. 'self' → logprob: -0.8965710401535034
    3. '):
' → logprob: -3.021571159362793
    4. '):' → logprob: -4.021571159362793
    5. '(self' → logprob: -7.396571159362793
    6. ')' → logprob: -8.396571159362793
    7. '   ' → logprob: -8.521571159362793
    8. ' self' → logprob: -8.646571159362793
    9. ',self' → logprob: -9.771571159362793
    10. ' ,' → logprob: -10.021571159362793

Token 339: ' data' (ID: 1238)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.9454617500305176
    2. 'pr' → logprob: -1.3204617500305176
    3. 'self' → logprob: -2.1954617500305176
    4. '):' → logprob: -2.9454617500305176
    5. ' datasets' → logprob: -3.0704617500305176
    6. 'input' → logprob: -3.4454617500305176
    7. '):
' → logprob: -3.5704617500305176
    8. ' input' → logprob: -4.195461750030518
    9. ' lines' → logprob: -4.445461750030518
    10. 'collections' → logprob: -4.445461750030518

Token 340: '_col' (ID: 7255)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6137542724609375
    2. 'sets' → logprob: -1.4887542724609375
    3. '):
' → logprob: -1.7387542724609375
    4. 'ets' → logprob: -3.2387542724609375
    5. '_sets' → logprob: -4.3637542724609375
    6. 's' → logprob: -5.9887542724609375
    7. 'ests' → logprob: -6.3637542724609375
    8. 'aset' → logprob: -8.113754272460938
    9. 'set' → logprob: -8.238754272460938
    10. '=None' → logprob: -9.363754272460938

Token 341: 'lections' (ID: 27014)
  Prédit: 'lection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lection' → logprob: -0.19573180377483368
    2. 'lections' → logprob: -1.82073175907135
    3. 'lector' → logprob: -4.1957316398620605
    4. 'lect' → logprob: -8.320732116699219
    5. 'ector' → logprob: -8.445732116699219
    6. 'ection' → logprob: -8.445732116699219
    7. 'le' → logprob: -9.820732116699219
    8. 'ections' → logprob: -11.070732116699219
    9. 'l' → logprob: -11.445732116699219
    10. 'ectors' → logprob: -11.695732116699219

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20159763097763062
    2. '):
' → logprob: -1.7015976905822754
    3. ',' → logprob: -9.326597213745117
    4. ' ):' → logprob: -9.826597213745117
    5. '):
' → logprob: -11.326597213745117
    6. '   ' → logprob: -11.576597213745117
    7. ')' → logprob: -11.951597213745117
    8. ' ' → logprob: -12.701597213745117
    9. ':' → logprob: -13.201597213745117
    10. ' ):
' → logprob: -13.326597213745117

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012830912601202726
    2. 'self' → logprob: -7.376283168792725
    3. ' self' → logprob: -7.501283168792725
    4. '   ' → logprob: -9.751282691955566
    5. '<|end|>' → logprob: -10.876282691955566
    6. ',' → logprob: -11.001282691955566
    7. '):
' → logprob: -13.001282691955566
    8. '
' → logprob: -13.501282691955566
    9. '	self' → logprob: -13.626282691955566
    10. '(self' → logprob: -13.876282691955566

Token 344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.080012746155262
    2. ' self' → logprob: -2.580012798309326
    3. '       ' → logprob: -7.205012798309326
    4. 'data' → logprob: -8.080012321472168
    5. ' data' → logprob: -9.580012321472168
    6. '	self' → logprob: -15.580012321472168
    7. '   ' → logprob: -16.455013275146484
    8. '=self' → logprob: -16.705013275146484
    9. 'class' → logprob: -17.080013275146484
    10. '(self' → logprob: -17.080013275146484

Token 345: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0007183883571997285
    2. '.' → logprob: -7.875718593597412
    3. 'data' → logprob: -8.750718116760254
    4. '.collections' → logprob: -9.000718116760254
    5. '.pr' → logprob: -10.500718116760254
    6. 'collections' → logprob: -11.625718116760254
    7. ' .' → logprob: -11.875718116760254
    8. '.datasets' → logprob: -12.375718116760254
    9. '       ' → logprob: -13.375718116760254
    10. '   ' → logprob: -13.500718116760254

Token 346: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0025455779395997524
    2. '=' → logprob: -6.752545356750488
    3. '=data' → logprob: -7.377545356750488
    4. '_data' → logprob: -7.752545356750488
    5. ' =' → logprob: -9.252545356750488
    6. 's' → logprob: -9.502545356750488
    7. '=_' → logprob: -9.877545356750488
    8. '_' → logprob: -10.252545356750488
    9. '_Collections' → logprob: -10.752545356750488
    10. '_sets' → logprob: -11.127545356750488

Token 347: 'lections' (ID: 27014)
  Prédit: 'lections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lections' → logprob: -0.16022920608520508
    2. 'ections' → logprob: -1.910229206085205
    3. 'ectors' → logprob: -13.285228729248047
    4. 'estions' → logprob: -13.910228729248047
    5. 'l' → logprob: -14.660228729248047
    6. 'e' → logprob: -15.035228729248047
    7. 'le' → logprob: -15.160228729248047
    8. 'ctions' → logprob: -15.285228729248047
    9. 'actions' → logprob: -15.285228729248047
    10. '   ' → logprob: -15.910228729248047

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693829834461212
    2. ' =' → logprob: -2.1269383430480957
    3. '=data' → logprob: -11.501937866210938
    4. '   ' → logprob: -16.876937866210938
    5. '=self' → logprob: -17.001937866210938
    6. '=
' → logprob: -17.126937866210938
    7. ' ' → logprob: -17.501937866210938
    8. ' =
' → logprob: -18.501937866210938
    9. '    ' → logprob: -19.126937866210938
    10. '       ' → logprob: -19.251937866210938

Token 349: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.575939416885376
    2. 'data' → logprob: -0.825939416885376
    3. '	data' → logprob: -18.450939178466797
    4. 'dat' → logprob: -20.075939178466797
    5. '$data' → logprob: -20.325939178466797
    6. '[data' → logprob: -20.325939178466797
    7. '.data' → logprob: -20.450939178466797
    8. 'Data' → logprob: -20.575939178466797
    9. '   ' → logprob: -20.700939178466797
    10. '_data' → logprob: -20.700939178466797

Token 350: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0001830410328693688
    2. 'collections' → logprob: -8.62518310546875
    3. '_Collections' → logprob: -12.87518310546875
    4. 'ata' → logprob: -15.75018310546875
    5. 'col' → logprob: -15.87518310546875
    6. 'Collections' → logprob: -15.87518310546875
    7. '.collections' → logprob: -16.25018310546875
    8. '_' → logprob: -16.50018310546875
    9. 'lections' → logprob: -16.62518310546875
    10. '_data' → logprob: -16.87518310546875

Token 351: 'lections' (ID: 27014)
  Prédit: 'ections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ections' → logprob: -0.31328392028808594
    2. 'lections' → logprob: -1.313283920288086
    3. 'ctions' → logprob: -11.188283920288086
    4. 'estions' → logprob: -12.813283920288086
    5. 'ictions' → logprob: -13.063283920288086
    6. 'ectors' → logprob: -14.813283920288086
    7. 'entions' → logprob: -14.938283920288086
    8. '_' → logprob: -15.063283920288086
    9. 't' → logprob: -15.188283920288086
    10. 'actions' → logprob: -15.188283920288086

Token 352: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43322086334228516
    2. '   ' → logprob: -1.0582208633422852
    3. 'def' → logprob: -5.683220863342285
    4. '<|end|>' → logprob: -7.433220863342285
    5. '    
' → logprob: -8.183220863342285
    6. ' def' → logprob: -9.558220863342285
    7. '<|end|>' → logprob: -10.183220863342285
    8. '

' → logprob: -10.308220863342285
    9. '
' → logprob: -10.308220863342285
    10. '        
' → logprob: -11.308220863342285

Token 353: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0684015080332756
    2. '   ' → logprob: -2.818401575088501
    3. 'def' → logprob: -5.568401336669922
    4. '<|end|>' → logprob: -6.568401336669922
    5. '    
' → logprob: -7.818401336669922
    6. ' def' → logprob: -7.943401336669922
    7. '

' → logprob: -8.318401336669922
    8. '<|end|>' → logprob: -9.443401336669922
    9. '	def' → logprob: -9.943401336669922
    10. '  
' → logprob: -10.693401336669922

Token 354: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011571631766855717
    2. '
' → logprob: -4.636571407318115
    3. ' def' → logprob: -7.136571407318115
    4. 'self' (adapté à ' self') → logprob: -7.136571407318115
    5. '   ' → logprob: -8.886571884155273
    6. '

' → logprob: -10.511571884155273
    7. '    
' → logprob: -11.011571884155273
    8. '        
' → logprob: -11.011571884155273
    9. '       ' → logprob: -11.511571884155273
    10. 'pass' → logprob: -12.011571884155273

Token 355: '.format' (ID: 12277)
  Prédit: '.results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.002903658663854003
    2. '.outputs' → logprob: -6.377903461456299
    3. '.' → logprob: -7.627903461456299
    4. 'results' → logprob: -8.127903938293457
    5. '.output' → logprob: -8.627903938293457
    6. '.result' → logprob: -9.002903938293457
    7. '.answers' → logprob: -9.877903938293457
    8. '.responses' → logprob: -11.002903938293457
    9. ' .' → logprob: -12.002903938293457
    10. '.current' → logprob: -12.127903938293457

Token 356: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -1.1041145626222715e-05
    2. '_formatter' → logprob: -11.750011444091797
    3. '=' → logprob: -13.500011444091797
    4. 'er' → logprob: -13.750011444091797
    5. '_' → logprob: -15.250011444091797
    6. '   ' → logprob: -16.125011444091797
    7. 'ters' → logprob: -16.500011444091797
    8. 'terr' → logprob: -16.625011444091797
    9. 'tter' → logprob: -16.750011444091797
    10. 'te' → logprob: -17.125011444091797

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '<|end|>' → logprob: -16.186967849731445
    4. '   ' → logprob: -17.186967849731445
    5. '  ' → logprob: -17.186967849731445
    6. '=None' → logprob: -17.311967849731445
    7. ')' → logprob: -18.186967849731445
    8. '=
' → logprob: -18.186967849731445
    9. ' ' → logprob: -18.436967849731445
    10. ',' → logprob: -18.686967849731445

Token 358: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.001170225441455841
    2. ' Output' → logprob: -6.7511701583862305
    3. '	Output' → logprob: -18.001171112060547
    4. 'Input' → logprob: -20.626171112060547
    5. '(Output' → logprob: -20.626171112060547
    6. '_Output' → logprob: -20.876171112060547
    7. 'Out' → logprob: -22.251171112060547
    8. 'output' → logprob: -22.751171112060547
    9. 'Answer' → logprob: -23.251171112060547
    10. '_output' → logprob: -23.501171112060547

Token 359: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: 0.0
    2. 'Format' → logprob: -18.0
    3. 'Form' → logprob: -20.75
    4. ' Formatter' → logprob: -21.0
    5. 'formatter' → logprob: -21.125
    6. '_formatter' → logprob: -21.25
    7. 'For' → logprob: -22.5
    8. 'Tokenizer' → logprob: -23.5
    9. '   ' → logprob: -23.5
    10. 'Fetcher' → logprob: -24.125

Token 360: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5803825259208679
    2. '   ' → logprob: -0.8303825259208679
    3. 'def' → logprob: -6.455382347106934
    4. '    
' → logprob: -6.830382347106934
    5. '

' → logprob: -6.955382347106934
    6. '<|end|>' → logprob: -7.705382347106934
    7. ' def' → logprob: -8.705382347106934
    8. '  
' → logprob: -9.830382347106934
    9. '<|end|>' → logprob: -9.830382347106934
    10. '```' → logprob: -10.705382347106934

Token 361: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6697413325309753
    2. '   ' → logprob: -0.9197413325309753
    3. 'def' → logprob: -2.54474139213562
    4. ' def' → logprob: -4.544741153717041
    5. '    
' → logprob: -8.5447416305542
    6. '	def' → logprob: -9.6697416305542
    7. '<|end|>' → logprob: -9.7947416305542
    8. ' 
' → logprob: -10.5447416305542
    9. '

' → logprob: -10.6697416305542
    10. '  
' → logprob: -11.1697416305542

Token 362: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.52919222577475e-05
    2. ' def' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.750075340270996
    4. '	def' → logprob: -19.00007438659668
    5. '
' → logprob: -22.25007438659668
    6. ' ' → logprob: -23.00007438659668
    7. 'de' → logprob: -23.00007438659668
    8. '    
' → logprob: -23.62507438659668
    9. '  ' → logprob: -24.50007438659668
    10. 'Def' → logprob: -25.00007438659668

Token 363: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.008647187612950802
    2. ' solve' → logprob: -4.7586469650268555
    3. 'run' → logprob: -10.883646965026855
    4. 'compute' → logprob: -12.008646965026855
    5. 'process' → logprob: -12.383646965026855
    6. 'calculate' → logprob: -13.133646965026855
    7. ' run' → logprob: -14.133646965026855
    8. ' compute' → logprob: -15.508646965026855
    9. ' process' → logprob: -15.883646965026855
    10. 'get' → logprob: -16.133647918701172

Token 364: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010986098641296849
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -15.125109672546387
    4. '   ' → logprob: -15.625109672546387
    5. '(
' → logprob: -15.750109672546387
    6. '(s' → logprob: -16.125110626220703
    7. 'self' → logprob: -16.500110626220703
    8. '(sel' → logprob: -17.125110626220703
    9. '(se' → logprob: -17.750110626220703
    10. '       ' → logprob: -18.250110626220703

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.683112382888794
    2. ',' → logprob: -0.933112382888794
    3. '):
' → logprob: -2.308112382888794
    4. 'self' → logprob: -6.433112144470215
    5. ',self' → logprob: -7.808112144470215
    6. ' ,' → logprob: -10.183112144470215
    7. '(self' → logprob: -10.308112144470215
    8. '):
' → logprob: -10.433112144470215
    9. '   ' → logprob: -10.808112144470215
    10. ',data' → logprob: -11.183112144470215

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035267791245132685
    2. '
' → logprob: -6.37852668762207
    3. 'results' → logprob: -6.87852668762207
    4. 'result' → logprob: -7.75352668762207
    5. ' results' → logprob: -9.37852668762207
    6. 'output' → logprob: -9.75352668762207
    7. 'for' → logprob: -10.00352668762207
    8. 'self' → logprob: -10.50352668762207
    9. 'outputs' → logprob: -10.62852668762207
    10. ' for' → logprob: -10.75352668762207

Token 367: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.31541797518730164
    2. ' results' → logprob: -1.315418004989624
    3. '       ' → logprob: -6.315417766571045
    4. 'result' → logprob: -8.315418243408203
    5. 'outputs' → logprob: -9.940418243408203
    6. ' result' → logprob: -10.565418243408203
    7. 'for' → logprob: -11.690418243408203
    8. ' for' → logprob: -11.815418243408203
    9. ' outputs' → logprob: -12.315418243408203
    10. 'output' → logprob: -12.940418243408203

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693220376968384
    2. '=' → logprob: -2.126932144165039
    3. '=[]' → logprob: -12.876932144165039
    4. '=[]
' → logprob: -14.501932144165039
    5. '_' → logprob: -15.001932144165039
    6. '[]' → logprob: -15.251932144165039
    7. ' ' → logprob: -15.251932144165039
    8. '   ' → logprob: -15.376932144165039
    9. ' =
' → logprob: -17.12693214416504
    10. '[' → logprob: -17.62693214416504

Token 369: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6957814693450928
    2. '[]
' → logprob: -0.6957814693450928
    3. ' []' → logprob: -6.195781707763672
    4. ' []
' → logprob: -7.445781707763672
    5. '[' → logprob: -11.945781707763672
    6. '[]

' → logprob: -13.195781707763672
    7. '[
' → logprob: -14.820781707763672
    8. '   ' → logprob: -15.820781707763672
    9. ' ' → logprob: -16.445781707763672
    10. '[]"' → logprob: -17.320781707763672

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030262963846325874
    2. ' for' → logprob: -4.0302629470825195
    3. '
' → logprob: -4.9052629470825195
    4. 'for' → logprob: -5.4052629470825195
    5. '	for' → logprob: -9.90526294708252
    6. '<|end|>' → logprob: -10.65526294708252
    7. '        
' → logprob: -10.90526294708252
    8. '   ' → logprob: -11.15526294708252
    9. '	' → logprob: -11.28026294708252
    10. '
' → logprob: -12.53026294708252

Token 371: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011754028499126434
    2. ' for' → logprob: -4.511754035949707
    3. '       ' → logprob: -7.261754035949707
    4. '   ' → logprob: -13.136754035949707
    5. '	for' → logprob: -13.136754035949707
    6. ' ' → logprob: -16.63675308227539
    7. '
' → logprob: -17.63675308227539
    8. '	' → logprob: -19.13675308227539
    9. '```' → logprob: -19.13675308227539
    10. '  ' → logprob: -20.38675308227539

Token 372: ' collection' (ID: 5801)
  Prédit: 'collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collection' → logprob: -0.04231026768684387
    2. 'data' → logprob: -4.1673102378845215
    3. ' collection' → logprob: -4.2923102378845215
    4. 'pr' → logprob: -4.9173102378845215
    5. 'dataset' → logprob: -5.7923102378845215
    6. 'pc' → logprob: -7.0423102378845215
    7. 'dc' → logprob: -7.7923102378845215
    8. ' data' → logprob: -7.9173102378845215
    9. ' dataset' → logprob: -9.41731071472168
    10. ' prizes' → logprob: -10.16731071472168

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023256659507751465
    2. 'in' → logprob: -3.773256778717041
    3. '	in' → logprob: -12.273256301879883
    4. ' ' → logprob: -13.273256301879883
    5. '   ' → logprob: -13.773256301879883
    6. 's' → logprob: -14.398256301879883
    7. 'self' → logprob: -14.898256301879883
    8. ',' → logprob: -15.023256301879883
    9. '_in' → logprob: -15.023256301879883
    10. '.' → logprob: -15.148256301879883

Token 374: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889991998672485
    2. ' self' → logprob: -2.57889986038208
    3. '       ' → logprob: -12.203900337219238
    4. '(self' → logprob: -12.828900337219238
    5. '
' → logprob: -13.703900337219238
    6. '   ' → logprob: -14.703900337219238
    7. '	self' → logprob: -15.203900337219238
    8. '[self' → logprob: -15.453900337219238
    9. '           ' → logprob: -16.328899383544922
    10. '=self' → logprob: -16.578899383544922

Token 375: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -8.220573363360018e-05
    2. 'data' → logprob: -9.625082015991211
    3. '.' → logprob: -11.500082015991211
    4. 'self' → logprob: -12.625082015991211
    5. ' .' → logprob: -14.250082015991211
    6. '   ' → logprob: -14.500082015991211
    7. '.
' → logprob: -14.875082015991211
    8. ' data' → logprob: -15.250082015991211
    9. 's' → logprob: -16.00008201599121
    10. '       ' → logprob: -16.00008201599121

Token 376: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0003001888981088996
    2. 'collections' → logprob: -8.125300407409668
    3. '_Collections' → logprob: -13.250300407409668
    4. 'col' → logprob: -13.875300407409668
    5. 'lections' → logprob: -14.625300407409668
    6. '_collection' → logprob: -14.750300407409668
    7. '.collections' → logprob: -15.750300407409668
    8. 's' → logprob: -16.12529945373535
    9. 'Collections' → logprob: -16.37529945373535
    10. '_' → logprob: -17.12529945373535

Token 377: 'lections' (ID: 27014)
  Prédit: 'lections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lections' → logprob: -0.008615635335445404
    2. 'ections' → logprob: -4.758615493774414
    3. 'collections' → logprob: -14.508615493774414
    4. 'ctions' → logprob: -15.258615493774414
    5. '_' → logprob: -15.883615493774414
    6. 'le' → logprob: -16.758615493774414
    7. 'lection' → logprob: -17.508615493774414
    8. '.collections' → logprob: -17.758615493774414
    9. 'l' → logprob: -17.883615493774414
    10. '_le' → logprob: -18.008615493774414

Token 378: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2530796527862549
    2. ':
' → logprob: -1.5030796527862549
    3. '           ' → logprob: -7.628079414367676
    4. ',' → logprob: -8.253079414367676
    5. '       ' → logprob: -8.503079414367676
    6. '):
' → logprob: -8.753079414367676
    7. '():
' → logprob: -11.378079414367676
    8. '):' → logprob: -12.253079414367676
    9. '.' → logprob: -12.503079414367676
    10. '<|end|>' → logprob: -12.628079414367676

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026944358833134174
    2. '
' → logprob: -6.627694606781006
    3. 'results' → logprob: -6.752694606781006
    4. ' results' → logprob: -9.377694129943848
    5. 'result' → logprob: -9.752694129943848
    6. '       ' → logprob: -10.877694129943848
    7. '            
' → logprob: -11.002694129943848
    8. '```' → logprob: -12.252694129943848
    9. '    
' → logprob: -12.502694129943848
    10. '        
' → logprob: -13.252694129943848

Token 380: ' minimal' (ID: 19957)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14346852898597717
    2. 'attempt' → logprob: -2.8934686183929443
    3. ' result' → logprob: -3.5184686183929443
    4. 'res' → logprob: -4.018468379974365
    5. '           ' → logprob: -4.518468379974365
    6. 'minimal' (adapté à ' minimal') → logprob: -5.143468379974365
    7. 'if' → logprob: -5.768468379974365
    8. ' if' → logprob: -6.393468379974365
    9. 'min' → logprob: -6.518468379974365
    10. ' attempts' → logprob: -6.518468379974365

Token 381: ' =' (ID: 314)
  Prédit: '_attempt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -0.022304410114884377
    2. 'attempt' → logprob: -4.022304534912109
    3. ' =' → logprob: -5.772304534912109
    4. '=' → logprob: -7.772304534912109
    5. '_result' → logprob: -7.772304534912109
    6. '_results' → logprob: -9.52230453491211
    7. 'result' → logprob: -9.89730453491211
    8. 'results' → logprob: -11.14730453491211
    9. '   ' → logprob: -11.27230453491211
    10. '```' → logprob: -11.52230453491211

Token 382: ' collection' (ID: 5801)
  Prédit: 'collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collection' → logprob: -0.006715370807796717
    2. ' collection' → logprob: -5.006715297698975
    3. '(collection' → logprob: -17.006715774536133
    4. '           ' → logprob: -17.381715774536133
    5. '.collection' → logprob: -17.506715774536133
    6. '_collection' → logprob: -18.881715774536133
    7. 'Collection' → logprob: -20.506715774536133
    8. 'collections' → logprob: -20.881715774536133
    9. 'col' → logprob: -21.881715774536133
    10. 'collector' → logprob: -22.506715774536133

Token 383: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -8.41866585687967e-06
    2. 'minimal' → logprob: -12.000008583068848
    3. '.' → logprob: -13.750008583068848
    4. '.minimum' → logprob: -14.125008583068848
    5. '.max' → logprob: -15.750008583068848
    6. ' .' → logprob: -16.37500762939453
    7. ' minimal' → logprob: -17.12500762939453
    8. '_min' → logprob: -17.87500762939453
    9. 'min' → logprob: -18.12500762939453
    10. '.m' → logprob: -18.12500762939453

Token 384: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.875004768371582
    3. 'inal' → logprob: -14.500004768371582
    4. 'al' → logprob: -14.875004768371582
    5. 'imals' → logprob: -14.875004768371582
    6. 'iminal' → logprob: -15.500004768371582
    7. '_attempt' → logprob: -15.625004768371582
    8. '```' → logprob: -16.000003814697266
    9. 'IMAL' → logprob: -16.250003814697266
    10. '
' → logprob: -16.500003814697266

Token 385: '_attempt' (ID: 135860)
  Prédit: '_attempt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attempt' → logprob: -1.318681188422488e-05
    2. 'attempt' → logprob: -11.25001335144043
    3. 's' → logprob: -16.75001335144043
    4. ' attempts' → logprob: -17.62501335144043
    5. '_att' → logprob: -18.37501335144043
    6. '_' → logprob: -18.37501335144043
    7. 'Attempts' → logprob: -18.62501335144043
    8. '_try' → logprob: -19.50001335144043
    9. '```' → logprob: -19.50001335144043
    10. '_at' → logprob: -19.75001335144043

Token 386: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.029847231227905e-05
    2. 'pts' → logprob: -9.500080108642578
    3. 'ps' → logprob: -12.250080108642578
    4. 'ts' → logprob: -14.500080108642578
    5. 'empts' → logprob: -16.375080108642578
    6. 'sts' → logprob: -16.875080108642578
    7. 'ots' → logprob: -18.250080108642578
    8. ' s' → logprob: -18.625080108642578
    9. 'or' → logprob: -18.875080108642578
    10. 'ents' → logprob: -18.875080108642578

Token 387: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.12708643078804016
    2. '()' → logprob: -2.1270864009857178
    3. '()
' → logprob: -9.377086639404297
    4. '           ' → logprob: -9.752086639404297
    5. 'if' → logprob: -12.002086639404297
    6. 'results' → logprob: -13.127086639404297
    7. '()

' → logprob: -13.377086639404297
    8. '())' → logprob: -13.627086639404297
    9. '       ' → logprob: -13.877086639404297
    10. '())
' → logprob: -14.002086639404297

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020650967955589294
    2. '
' → logprob: -3.895650863647461
    3. '            
' → logprob: -9.770650863647461
    4. '
' → logprob: -10.645650863647461
    5. '<|end|>' → logprob: -11.645650863647461
    6. 'results' → logprob: -11.895650863647461
    7. '       ' → logprob: -12.520650863647461
    8. '<|end|>' → logprob: -13.270650863647461
    9. '        
' → logprob: -13.520650863647461
    10. '```' → logprob: -13.895650863647461

Token 389: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.007330337073653936
    2. ' results' → logprob: -5.007330417633057
    3. '           ' → logprob: -8.132329940795898
    4. 'result' → logprob: -8.507329940795898
    5. 'if' → logprob: -9.257329940795898
    6. '
' → logprob: -11.382329940795898
    7. '	results' → logprob: -12.007329940795898
    8. ' if' → logprob: -12.507329940795898
    9. '       ' → logprob: -13.382329940795898
    10. ' result' → logprob: -15.632329940795898

Token 390: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002481842413544655
    2. '.' → logprob: -6.002481937408447
    3. '.extend' → logprob: -12.002481460571289
    4. '.push' → logprob: -16.87748146057129
    5. 'append' → logprob: -17.12748146057129
    6. '.app' → logprob: -18.12748146057129
    7. '.ap' → logprob: -18.50248146057129
    8. '.Append' → logprob: -19.12748146057129
    9. '.add' → logprob: -19.25248146057129
    10. ' +=' → logprob: -19.37748146057129

Token 391: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011105302110081539
    2. '(' → logprob: -9.250110626220703
    3. 'self' → logprob: -11.125110626220703
    4. '(
' → logprob: -16.250110626220703
    5. ' self' → logprob: -18.875110626220703
    6. '[self' → logprob: -19.375110626220703
    7. '(this' → logprob: -19.875110626220703
    8. '	self' → logprob: -20.750110626220703
    9. ' (' → logprob: -20.875110626220703
    10. '       ' → logprob: -21.125110626220703

Token 392: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: 0.0
    2. 'formatter' → logprob: -16.875
    3. '.form' → logprob: -17.125
    4. '.' → logprob: -18.0
    5. ' .' → logprob: -19.375
    6. ').' → logprob: -19.625
    7. '=format' → logprob: -19.875
    8. 'format' → logprob: -20.125
    9. '
' → logprob: -20.875
    10. '.output' → logprob: -21.875

Token 393: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.0008183232857845724
    2. 'er' → logprob: -7.125818252563477
    3. '_result' → logprob: -11.875818252563477
    4. 'r' → logprob: -12.375818252563477
    5. '```' → logprob: -13.750818252563477
    6. '_formatter' → logprob: -14.875818252563477
    7. 'terr' → logprob: -15.000818252563477
    8. 'tter' → logprob: -16.125818252563477
    9. 't' → logprob: -16.250818252563477
    10. 'тер' → logprob: -16.375818252563477

Token 394: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: 0.0
    2. ').' → logprob: -18.25
    3. 'format' → logprob: -19.0
    4. '.' → logprob: -19.375
    5. '.form' → logprob: -19.375
    6. ' .' → logprob: -19.75
    7. '=format' → logprob: -20.25
    8. '".' → logprob: -20.375
    9. '`.' → logprob: -20.5
    10. '.output' → logprob: -21.25

Token 395: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.1472419600977446e-06
    2. 'result' → logprob: -13.875000953674316
    3. '_res' → logprob: -16.625001907348633
    4. '_results' → logprob: -17.500001907348633
    5. '_' → logprob: -17.625001907348633
    6. '```' → logprob: -18.875001907348633
    7. ' _' → logprob: -19.250001907348633
    8. '_r' → logprob: -19.375001907348633
    9. '_RESULT' → logprob: -19.375001907348633
    10. '"_' → logprob: -19.500001907348633

Token 396: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00020616286201402545
    2. '(' → logprob: -8.500205993652344
    3. '(
' → logprob: -13.125205993652344
    4. 'minimal' → logprob: -15.125205993652344
    5. ' minimal' → logprob: -15.875205993652344
    6. '(max' → logprob: -17.000205993652344
    7. ')' → logprob: -17.125205993652344
    8. ' (' → logprob: -17.500205993652344
    9. '(

' → logprob: -17.500205993652344
    10. '(m' → logprob: -17.750205993652344

Token 397: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -2.5822400857578032e-05
    2. 'inal' → logprob: -11.000025749206543
    3. 'al' → logprob: -12.375025749206543
    4. '(' → logprob: -12.625025749206543
    5. '`' → logprob: -15.375025749206543
    6. '   ' → logprob: -15.375025749206543
    7. 'ial' → logprob: -15.500025749206543
    8. 'imals' → logprob: -15.875025749206543
    9. '[' → logprob: -16.12502670288086
    10. '```' → logprob: -16.50002670288086

Token 398: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0209960900247097
    2. ')' → logprob: -4.52099609375
    3. '))
' → logprob: -4.64599609375
    4. '()))' → logprob: -8.27099609375
    5. '())' → logprob: -11.14599609375
    6. '()))
' → logprob: -11.14599609375
    7. '()' → logprob: -11.77099609375
    8. ')
' → logprob: -12.39599609375
    9. '))

' → logprob: -14.27099609375
    10. '(' → logprob: -14.77099609375

Token 399: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12845677137374878
    2. '       ' → logprob: -2.1284568309783936
    3. 'return' → logprob: -7.0034565925598145
    4. '
' → logprob: -7.5034565925598145
    5. '\n' → logprob: -10.503457069396973
    6. ' return' → logprob: -11.003457069396973
    7. '        
' → logprob: -11.253457069396973
    8. '    
' → logprob: -12.753457069396973
    9. '`
' → logprob: -13.378457069396973
    10. '

' → logprob: -13.753457069396973

Token 400: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016130544245243073
    2. '       ' → logprob: -7.501613140106201
    3. 'return' (adapté à ' return') → logprob: -7.501613140106201
    4. '
' → logprob: -8.126612663269043
    5. '\n' → logprob: -8.751612663269043
    6. ' return' → logprob: -10.751612663269043
    7. '        
' → logprob: -11.126612663269043
    8. '    
' → logprob: -11.876612663269043
    9. '	return' → logprob: -13.126612663269043
    10. '   ' → logprob: -13.251612663269043

Token 401: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.000157293034135364
    2. ' results' → logprob: -9.250157356262207
    3. '"\' → logprob: -10.000157356262207
    4. ''\' → logprob: -11.125157356262207
    5. '"' → logprob: -14.750157356262207
    6. '	results' → logprob: -15.375157356262207
    7. '(results' → logprob: -15.500157356262207
    8. ''' → logprob: -17.00015640258789
    9. '
' → logprob: -17.12515640258789
    10. '\n' → logprob: -17.75015640258789

Token 402: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00028290803311392665
    2. ' run' → logprob: -8.750283241271973
    3. 'main' → logprob: -9.000283241271973
    4. ' solve' → logprob: -14.250283241271973
    5. ' process' → logprob: -15.125283241271973
    6. ' read' → logprob: -16.750282287597656
    7. ' solution' → logprob: -17.250282287597656
    8. 'run' → logprob: -17.375282287597656
    9. ' parse' → logprob: -18.000282287597656
    10. '	main' → logprob: -18.000282287597656

Token 405: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.263011578586884e-05
    2. '():
' → logprob: -10.500042915344238
    3. ' ():' → logprob: -11.125042915344238
    4. '()' → logprob: -15.750042915344238
    5. '():
' → logprob: -17.000041961669922
    6. '(' → logprob: -17.250041961669922
    7. '_' → logprob: -17.500041961669922
    8. ':' → logprob: -18.500041961669922
    9. '():

' → logprob: -19.125041961669922
    10. '(":' → logprob: -19.125041961669922

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6393430829048157
    2. ' lines' → logprob: -0.8893430829048157
    3. ' import' → logprob: -2.889343023300171
    4. 'import' → logprob: -5.26434326171875
    5. ' parser' → logprob: -8.13934326171875
    6. 'lines' → logprob: -9.13934326171875
    7. ' input' → logprob: -9.26434326171875
    8. ' if' → logprob: -9.76434326171875
    9. '   ' → logprob: -10.63934326171875
    10. '	lines' → logprob: -10.88934326171875

Token 407: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.4743378758430481
    2. ' import' → logprob: -0.9743378758430481
    3. ' lines' → logprob: -8.474337577819824
    4. 'lines' → logprob: -10.099337577819824
    5. ' parser' → logprob: -12.349337577819824
    6. 'parser' → logprob: -12.724337577819824
    7. '   ' → logprob: -12.724337577819824
    8. '	import' → logprob: -15.599337577819824
    9. 'from' → logprob: -15.724337577819824
    10. ' input' → logprob: -16.22433853149414

Token 408: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06196768581867218
    2. ' sys' → logprob: -2.811967611312866
    3. '	sys' → logprob: -17.186967849731445
    4. '=sys' → logprob: -17.311967849731445
    5. '(sys' → logprob: -18.686967849731445
    6. '_sys' → logprob: -19.561967849731445
    7. '.sys' → logprob: -19.936967849731445
    8. '```' → logprob: -22.061967849731445
    9. 's' → logprob: -22.561967849731445
    10. '_' → logprob: -23.811967849731445

Token 409: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015179537003859878
    2. '    
' → logprob: -7.3765177726745605
    3. ' lines' → logprob: -8.001518249511719
    4. '
' → logprob: -8.126518249511719
    5. '	lines' → logprob: -8.751518249511719
    6. 'lines' → logprob: -10.001518249511719
    7. '_lines' → logprob: -10.376518249511719
    8. '(lines' → logprob: -11.626518249511719
    9. '<|end|>' → logprob: -12.751518249511719
    10. 'input' → logprob: -13.251518249511719

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049628470093011856
    2. ' lines' → logprob: -3.049628496170044
    3. 'lines' → logprob: -7.174628257751465
    4. '	lines' → logprob: -8.299628257751465
    5. '_lines' → logprob: -11.799628257751465
    6. '(lines' → logprob: -12.049628257751465
    7. '    
' → logprob: -13.049628257751465
    8. ' input' → logprob: -13.049628257751465
    9. '```' → logprob: -13.299628257751465
    10. 'input' → logprob: -13.424628257751465

Token 411: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.04589170962572098
    2. 'lines' (adapté à ' lines') → logprob: -3.420891761779785
    3. '   ' → logprob: -4.420891761779785
    4. ' input' → logprob: -9.295891761779785
    5. 'input' → logprob: -10.295891761779785
    6. '	lines' → logprob: -11.170891761779785
    7. '_lines' → logprob: -12.420891761779785
    8. '(lines' → logprob: -13.920891761779785
    9. ' inputs' → logprob: -14.420891761779785
    10. 'data' → logprob: -14.545891761779785

Token 412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519773542881012
    2. '=' → logprob: -1.5019773244857788
    3. '   ' → logprob: -10.50197696685791
    4. '=sys' → logprob: -11.25197696685791
    5. '=line' → logprob: -13.12697696685791
    6. '[' → logprob: -13.62697696685791
    7. '=[]' → logprob: -13.75197696685791
    8. ' =
' → logprob: -14.50197696685791
    9. ' ' → logprob: -14.75197696685791
    10. '	' → logprob: -15.00197696685791

Token 413: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3869662284851074
    2. ' sys' → logprob: -1.1369662284851074
    3. '[' → logprob: -9.761966705322266
    4. ' [' → logprob: -10.261966705322266
    5. '(sys' → logprob: -14.136966705322266
    6. '=sys' → logprob: -14.136966705322266
    7. '	sys' → logprob: -14.261966705322266
    8. '   ' → logprob: -14.636966705322266
    9. 'list' → logprob: -16.386966705322266
    10. ' list' → logprob: -17.011966705322266

Token 414: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.306760805164231e-05
    2. ' line' → logprob: -11.25001335144043
    3. 'l' → logprob: -16.75001335144043
    4. 'input' → logprob: -19.00001335144043
    5. '	line' → logprob: -19.25001335144043
    6. '(line' → logprob: -19.87501335144043
    7. '=line' → logprob: -21.37501335144043
    8. '[line' → logprob: -21.75001335144043
    9. '```' → logprob: -21.87501335144043
    10. 'sys' → logprob: -22.12501335144043

Token 415: '.strip' (ID: 40613)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.04891594499349594
    2. '.strip' → logprob: -3.0489158630371094
    3. '.' → logprob: -8.17391586303711
    4. 'rstrip' → logprob: -10.17391586303711
    5. ' for' → logprob: -12.79891586303711
    6. '[:-' → logprob: -13.17391586303711
    7. '.readline' → logprob: -13.29891586303711
    8. '().' → logprob: -13.92391586303711
    9. '.chomp' → logprob: -14.29891586303711
    10. 'for' → logprob: -15.17391586303711

Token 416: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012737659562844783
    2. 'for' → logprob: -9.000127792358398
    3. ' for' → logprob: -12.750127792358398
    4. ' ()' → logprob: -15.125127792358398
    5. '()]' → logprob: -15.250127792358398
    6. '()
' → logprob: -15.375127792358398
    7. '()\' → logprob: -15.750127792358398
    8. '('\' → logprob: -16.6251277923584
    9. ')' → logprob: -17.0001277923584
    10. '   ' → logprob: -18.2501277923584

Token 417: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6382260322570801
    2. '()' → logprob: -1.13822603225708
    3. ' for' → logprob: -1.88822603225708
    4. '   ' → logprob: -10.513225555419922
    5. '	for' → logprob: -11.388225555419922
    6. ' ' → logprob: -13.388225555419922
    7. ' ()' → logprob: -13.763225555419922
    8. '()
' → logprob: -14.013225555419922
    9. ')' → logprob: -14.388225555419922
    10. '('\' → logprob: -14.513225555419922

Token 418: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.100359246134758
    2. 'line' → logprob: -2.3503592014312744
    3. ' sys' → logprob: -8.850358963012695
    4. 'sys' → logprob: -11.850358963012695
    5. '	line' → logprob: -13.350358963012695
    6. '_line' → logprob: -14.850358963012695
    7. ' ' → logprob: -17.475358963012695
    8. ' _' → logprob: -17.725358963012695
    9. '=line' → logprob: -17.975358963012695
    10. '(line' → logprob: -18.100358963012695

Token 419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890179008245468
    2. 'in' → logprob: -2.578901767730713
    3. 'import' → logprob: -12.203902244567871
    4. 'line' → logprob: -12.953902244567871
    5. '()' → logprob: -13.453902244567871
    6. '	in' → logprob: -13.828902244567871
    7. '   ' → logprob: -13.953902244567871
    8. ' ' → logprob: -15.078902244567871
    9. 's' → logprob: -15.453902244567871
    10. 'In' → logprob: -15.953902244567871

Token 420: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0015023599844425917
    2. ' sys' → logprob: -6.501502513885498
    3. '	sys' → logprob: -17.501502990722656
    4. '(sys' → logprob: -18.626502990722656
    5. '=sys' → logprob: -19.001502990722656
    6. 'import' → logprob: -20.501502990722656
    7. 'open' → logprob: -20.876502990722656
    8. 'stdin' → logprob: -21.501502990722656
    9. '   ' → logprob: -23.376502990722656
    10. '_sys' → logprob: -23.376502990722656

Token 421: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.41866585687967e-06
    2. 'stdin' → logprob: -12.000008583068848
    3. '.' → logprob: -13.375008583068848
    4. '.stdout' → logprob: -15.500008583068848
    5. '.argv' → logprob: -15.875008583068848
    6. '(stdin' → logprob: -16.12500762939453
    7. ' stdin' → logprob: -17.00000762939453
    8. '.std' → logprob: -17.25000762939453
    9. '.readline' → logprob: -20.00000762939453
    10. 'import' → logprob: -20.62500762939453

Token 422: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03394396975636482
    2. '.readlines' → logprob: -3.4089438915252686
    3. '.readline' → logprob: -8.408944129943848
    4. '()]' → logprob: -10.408944129943848
    5. 'if' → logprob: -11.283944129943848
    6. ' ]' → logprob: -11.908944129943848
    7. ' if' → logprob: -12.283944129943848
    8. 'read' → logprob: -12.533944129943848
    9. '   ' → logprob: -12.658944129943848
    10. '`]' → logprob: -12.783944129943848

Token 423: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02975129522383213
    2. ' line' → logprob: -3.5297513008117676
    3. 'len' → logprob: -14.02975082397461
    4. '(line' → logprob: -18.02975082397461
    5. '	line' → logprob: -18.52975082397461
    6. ' len' → logprob: -18.77975082397461
    7. ' ' → logprob: -19.65475082397461
    8. '#line' → logprob: -19.65475082397461
    9. 'lin' → logprob: -19.90475082397461
    10. '
' → logprob: -20.40475082397461

Token 424: '.strip' (ID: 40613)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002217699773609638
    2. '.strip' → logprob: -6.377217769622803
    3. '<|end|>' → logprob: -7.877217769622803
    4. '.readline' → logprob: -10.127217292785645
    5. '<|end|>' → logprob: -10.377217292785645
    6. ']!=' → logprob: -11.127217292785645
    7. ']>' → logprob: -11.502217292785645
    8. ' ]' → logprob: -12.127217292785645
    9. '   ' → logprob: -12.127217292785645
    10. ']
' → logprob: -12.377217292785645

Token 425: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0018499856814742088
    2. ']' → logprob: -6.501850128173828
    3. '()' → logprob: -8.001850128173828
    4. '()]
' → logprob: -11.376850128173828
    5. '()!=' → logprob: -14.001850128173828
    6. ']()' → logprob: -15.126850128173828
    7. '()>' → logprob: -15.626850128173828
    8. ')]' → logprob: -16.876850128173828
    9. '()],' → logprob: -17.501850128173828
    10. '']' → logprob: -17.626850128173828

Token 426: ' !=' (ID: 1666)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012296605564188212
    2. '()]' → logprob: -9.125123023986816
    3. ']
' → logprob: -11.875123023986816
    4. ']!=' → logprob: -13.125123023986816
    5. ' ]' → logprob: -13.250123023986816
    6. '!=' → logprob: -13.750123023986816
    7. ']

' → logprob: -14.500123023986816
    8. ')' → logprob: -15.250123023986816
    9. ')]' → logprob: -15.500123023986816
    10. ']()' → logprob: -15.500123023986816

Token 427: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01960236392915249
    2. '"' → logprob: -4.769602298736572
    3. '''' → logprob: -4.769602298736572
    4. '""' → logprob: -6.019602298736572
    5. ' '' → logprob: -11.39460277557373
    6. ']' → logprob: -14.39460277557373
    7. '''
' → logprob: -14.76960277557373
    8. '']' → logprob: -15.14460277557373
    9. ''',' → logprob: -15.39460277557373
    10. '"":' → logprob: -15.64460277557373

Token 428: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.005265545565634966
    2. '']
' → logprob: -5.255265712738037
    3. '']

' → logprob: -10.755265235900879
    4. '0' → logprob: -11.880265235900879
    5. '"]' → logprob: -13.505265235900879
    6. ''' → logprob: -13.755265235900879
    7. ']' → logprob: -14.005265235900879
    8. '']
' → logprob: -15.505265235900879
    9. '']


' → logprob: -17.380266189575195
    10. '```' → logprob: -18.755266189575195

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009581011720001698
    2. '
' → logprob: -5.259581089019775
    3. '    
' → logprob: -6.509581089019775
    4. 'for' → logprob: -6.634581089019775
    5. ' for' → logprob: -7.009581089019775
    6. '<|end|>' → logprob: -8.134580612182617
    7. ' lines' → logprob: -8.759580612182617
    8. 'index' → logprob: -10.009580612182617
    9. 'while' → logprob: -10.884580612182617
    10. '```' → logprob: -11.009580612182617

Token 430: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.00018208740220870823
    2. ' parser' → logprob: -9.000182151794434
    3. '   ' → logprob: -9.750182151794434
    4. '```' → logprob: -15.250182151794434
    5. '
' → logprob: -16.750181198120117
    6. 'input' → logprob: -17.375181198120117
    7. '	parser' → logprob: -17.625181198120117
    8. 'Parser' → logprob: -18.000181198120117
    9. '    
' → logprob: -18.375181198120117
    10. 'parse' → logprob: -18.375181198120117

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00666078832000494
    2. '.parse' → logprob: -5.7566609382629395
    3. '=' → logprob: -6.0066609382629395
    4. '=parse' → logprob: -7.0066609382629395
    5. '.' → logprob: -9.256660461425781
    6. '.Parse' → logprob: -12.881660461425781
    7. '.parser' → logprob: -13.256660461425781
    8. ' =
' → logprob: -13.256660461425781
    9. '.Parser' → logprob: -14.131660461425781
    10. 'parse' → logprob: -14.256660461425781

Token 432: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.029750484973192215
    2. ' Input' → logprob: -3.5297505855560303
    3. '<Input' → logprob: -17.65475082397461
    4. '	Input' → logprob: -17.90475082397461
    5. '_Input' → logprob: -18.27975082397461
    6. ' input' → logprob: -18.40475082397461
    7. '\Input' → logprob: -18.77975082397461
    8. '_input' → logprob: -18.90475082397461
    9. 'input' → logprob: -20.02975082397461
    10. 'INPUT' → logprob: -21.15475082397461

Token 433: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -18.25
    3. 'Parse' → logprob: -18.875
    4. ' Parser' → logprob: -20.375
    5. '_parser' → logprob: -20.875
    6. '.Parser' → logprob: -21.5
    7. '-parser' → logprob: -21.875
    8. 'Parsed' → logprob: -22.0
    9. '(Parser' → logprob: -22.0
    10. 'Processor' → logprob: -22.25

Token 434: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5342479944229126
    2. '   ' → logprob: -1.1592479944229126
    3. '<|end|>' → logprob: -3.034247875213623
    4. '    
' → logprob: -4.534247875213623
    5. ' parser' → logprob: -4.784247875213623
    6. 'parser' → logprob: -4.909247875213623
    7. '	parser' → logprob: -5.034247875213623
    8. '(parser' → logprob: -5.409247875213623
    9. '(lines' → logprob: -5.659247875213623
    10. '_parser' → logprob: -6.034247875213623

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06918461620807648
    2. 'parser' → logprob: -2.9441845417022705
    3. ' parser' → logprob: -4.56918478012085
    4. '
' → logprob: -6.31918478012085
    5. '	parser' → logprob: -6.44418478012085
    6. '(parser' → logprob: -9.069184303283691
    7. '    
' → logprob: -9.069184303283691
    8. '<|end|>' → logprob: -9.194184303283691
    9. '_parser' → logprob: -10.194184303283691
    10. '.parser' → logprob: -10.444184303283691

Token 436: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.0004309076175559312
    2. ' parser' → logprob: -7.750431060791016
    3. 'parse' → logprob: -15.875431060791016
    4. '
' → logprob: -17.000431060791016
    5. '	parser' → logprob: -17.375431060791016
    6. '.parser' → logprob: -17.875431060791016
    7. '   ' → logprob: -18.375431060791016
    8. '(parser' → logprob: -18.625431060791016
    9. '_parser' → logprob: -19.250431060791016
    10. 'parsed' → logprob: -19.375431060791016

Token 437: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.5597102396423e-05
    2. '.' → logprob: -10.250035285949707
    3. ' .' → logprob: -16.625036239624023
    4. '.Parse' → logprob: -16.875036239624023
    5. '=parse' → logprob: -17.625036239624023
    6. '.parser' → logprob: -17.875036239624023
    7. 'parse' → logprob: -18.250036239624023
    8. '.process' → logprob: -19.500036239624023
    9. '.
' → logprob: -19.750036239624023
    10. '.p' → logprob: -20.375036239624023

Token 438: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: 0.0
    2. '(line' → logprob: -21.25
    3. '(' → logprob: -21.625
    4. ' (' → logprob: -21.875
    5. '	lines' → logprob: -22.0
    6. ' lines' → logprob: -22.5
    7. 'lines' → logprob: -22.625
    8. '(rows' → logprob: -22.625
    9. '(files' → logprob: -23.125
    10. '(points' → logprob: -23.375

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011236425780225545
    2. ')
' → logprob: -9.125112533569336
    3. ' )' → logprob: -13.750112533569336
    4. '<|end|>' → logprob: -13.750112533569336
    5. '   ' → logprob: -14.250112533569336
    6. '<|end|>' → logprob: -16.250112533569336
    7. '
' → logprob: -16.375112533569336
    8. '[' → logprob: -16.750112533569336
    9. '),' → logprob: -16.750112533569336
    10. ')
' → logprob: -16.750112533569336

Token 440: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.6565948724746704
    2. ' solver' → logprob: -1.2815948724746704
    3. '   ' → logprob: -1.6565948724746704
    4. '
' → logprob: -4.406594753265381
    5. '    
' → logprob: -8.531595230102539
    6. '_solver' → logprob: -9.281595230102539
    7. ' results' → logprob: -9.281595230102539
    8. ' for' → logprob: -9.406595230102539
    9. ' solution' → logprob: -9.906595230102539
    10. 's' → logprob: -10.031595230102539

Token 441: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.04888007044792175
    2. ' solver' → logprob: -3.048880100250244
    3. '   ' → logprob: -8.173879623413086
    4. 'sol' → logprob: -12.548879623413086
    5. 'solution' → logprob: -12.548879623413086
    6. '
' → logprob: -13.798879623413086
    7. '_solver' → logprob: -14.048879623413086
    8. ' solution' → logprob: -14.548879623413086
    9. 'Solver' → logprob: -14.923879623413086
    10. 's' → logprob: -15.173879623413086

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078997299075127
    2. '=' → logprob: -5.5040788650512695
    3. '=data' → logprob: -15.25407886505127
    4. '(' → logprob: -16.379079818725586
    5. '.' → logprob: -16.379079818725586
    6. ' =
' → logprob: -16.379079818725586
    7. '   ' → logprob: -16.754079818725586
    8. ')' → logprob: -17.754079818725586
    9. '(data' → logprob: -17.754079818725586
    10. '    ' → logprob: -17.879079818725586

Token 443: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.31326186656951904
    2. ' G' → logprob: -1.313261866569519
    3. '   ' → logprob: -16.063261032104492
    4. '	G' → logprob: -18.813261032104492
    5. ' ' → logprob: -19.938261032104492
    6. '
' → logprob: -20.313261032104492
    7. '    ' → logprob: -21.063261032104492
    8. '_G' → logprob: -21.813261032104492
    9. '  ' → logprob: -22.313261032104492
    10. '<G' → logprob: -22.688261032104492

Token 444: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.005965526681393385
    2. 'G' → logprob: -5.130965709686279
    3. 'ch' → logprob: -10.630965232849121
    4. 'Ach' → logprob: -12.630965232849121
    5. 'a' → logprob: -12.755965232849121
    6. '```' → logprob: -13.255965232849121
    7. 'achal' → logprob: -13.880965232849121
    8. 'ac' → logprob: -14.380965232849121
    9. '
' → logprob: -15.130965232849121
    10. ' G' → logprob: -15.130965232849121

Token 445: 'apon' (ID: 11518)
  Prédit: 'apon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apon' → logprob: -0.002852305769920349
    2. 'a' → logprob: -5.877852439880371
    3. 'apons' → logprob: -10.502852439880371
    4. 'ap' → logprob: -11.752852439880371
    5. '
' → logprob: -12.627852439880371
    6. '   ' → logprob: -13.377852439880371
    7. 'pon' → logprob: -13.627852439880371
    8. 'APON' → logprob: -13.752852439880371
    9. '...' → logprob: -14.752852439880371
    10. 's' → logprob: -14.752852439880371

Token 446: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -4.008129963040119e-06
    2. 'solver' → logprob: -12.500003814697266
    3. '_solver' → logprob: -16.625003814697266
    4. ' Solver' → logprob: -17.500003814697266
    5. 'Solve' → logprob: -17.500003814697266
    6. 'olver' → logprob: -18.000003814697266
    7. 'Sol' → logprob: -18.000003814697266
    8. ' solver' → logprob: -18.375003814697266
    9. '
' → logprob: -21.000003814697266
    10. 'solve' → logprob: -21.250003814697266

Token 447: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. 'parser' → logprob: -14.375007629394531
    4. '(parsed' → logprob: -15.125007629394531
    5. '(Parser' → logprob: -16.75000762939453
    6. ' (' → logprob: -17.12500762939453
    7. '(par' → logprob: -17.37500762939453
    8. '(parse' → logprob: -17.75000762939453
    9. '(
' → logprob: -18.12500762939453
    10. '(p' → logprob: -18.37500762939453

Token 448: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -1.5451681974809617e-05
    2. '.data' → logprob: -11.875015258789062
    3. '.datas' → logprob: -12.500015258789062
    4. 'datasets' → logprob: -12.750015258789062
    5. ' .' → logprob: -14.000015258789062
    6. '.dataset' → logprob: -14.375015258789062
    7. '.' → logprob: -14.625015258789062
    8. '.dat' → logprob: -17.250015258789062
    9. ' datasets' → logprob: -17.250015258789062
    10. ').' → logprob: -18.375015258789062

Token 449: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4742162227630615
    2. ')' → logprob: -0.9742162227630615
    3. '   ' → logprob: -9.22421646118164
    4. ')
' → logprob: -10.47421646118164
    5. '())
' → logprob: -12.47421646118164
    6. ' )
' → logprob: -13.22421646118164
    7. '()
' → logprob: -13.22421646118164
    8. '()' → logprob: -13.34921646118164
    9. ')

' → logprob: -14.09921646118164
    10. ' )' → logprob: -14.84921646118164

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07141894102096558
    2. 'results' → logprob: -3.0714190006256104
    3. '
' → logprob: -4.196418762207031
    4. 'for' → logprob: -5.196418762207031
    5. ' results' → logprob: -6.696418762207031
    6. ' for' → logprob: -7.821418762207031
    7. 'outputs' → logprob: -9.321418762207031
    8. '	results' → logprob: -9.446418762207031
    9. '    
' → logprob: -9.821418762207031
    10. '```' → logprob: -9.946418762207031

Token 451: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0004070778959430754
    2. ' results' → logprob: -8.250407218933105
    3. 'for' → logprob: -9.000407218933105
    4. 'outputs' → logprob: -11.625407218933105
    5. 'result' → logprob: -11.875407218933105
    6. 'output' → logprob: -12.250407218933105
    7. '   ' → logprob: -13.500407218933105
    8. 'answers' → logprob: -15.375407218933105
    9. ' for' → logprob: -15.750407218933105
    10. '
' → logprob: -16.75040626525879

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014283623546361923
    2. '=' → logprob: -4.264283657073975
    3. ' ' → logprob: -9.639283180236816
    4. '.extend' → logprob: -10.639283180236816
    5. '.' → logprob: -11.014283180236816
    6. '.append' → logprob: -12.514283180236816
    7. ' =
' → logprob: -12.514283180236816
    8. ' .=' → logprob: -13.639283180236816
    9. '[:]' → logprob: -13.889283180236816
    10. ' +=' → logprob: -14.014283180236816

Token 453: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.011047935113310814
    2. ' solver' → logprob: -4.511047840118408
    3. 'sol' → logprob: -15.761048316955566
    4. '   ' → logprob: -18.76104736328125
    5. '_solver' → logprob: -18.76104736328125
    6. 'Solver' → logprob: -20.76104736328125
    7. '(s' → logprob: -21.26104736328125
    8. 'solve' → logprob: -21.26104736328125
    9. 's' → logprob: -21.38604736328125
    10. '```' → logprob: -21.38604736328125

Token 454: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -2.927930654550437e-05
    2. '.' → logprob: -10.500029563903809
    3. ' .' → logprob: -13.375029563903809
    4. '.sol' → logprob: -15.875029563903809
    5. '.run' → logprob: -17.625028610229492
    6. '.
' → logprob: -18.000028610229492
    7. 'solve' → logprob: -18.500028610229492
    8. '.findall' → logprob: -18.750028610229492
    9. '.save' → logprob: -18.875028610229492
    10. '.perform' → logprob: -18.875028610229492

Token 455: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04004870355129242
    2. '
' → logprob: -3.415048599243164
    3. 'for' → logprob: -5.165048599243164
    4. ' for' → logprob: -7.540048599243164
    5. '    
' → logprob: -9.040048599243164
    6. '	for' → logprob: -11.165048599243164
    7. '<|end|>' → logprob: -13.915048599243164
    8. '
' → logprob: -14.165048599243164
    9. '	
' → logprob: -14.290048599243164
    10. '  
' → logprob: -14.540048599243164

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06212128326296806
    2. 'for' → logprob: -2.8121213912963867
    3. ' for' → logprob: -8.812121391296387
    4. '
' → logprob: -12.437121391296387
    5. '	for' → logprob: -14.812121391296387
    6. '    
' → logprob: -15.312121391296387
    7. '```' → logprob: -16.31212043762207
    8. 'print' → logprob: -17.43712043762207
    9. '       ' → logprob: -18.31212043762207
    10. 'import' → logprob: -19.18712043762207

Token 457: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007181499968282878
    2. '   ' → logprob: -7.250718116760254
    3. '
' → logprob: -12.250718116760254
    4. ' for' → logprob: -13.250718116760254
    5. 'print' → logprob: -13.500718116760254
    6. '	for' → logprob: -16.00071907043457
    7. '    
' → logprob: -16.12571907043457
    8. '```' → logprob: -18.75071907043457
    9. 'import' → logprob: -20.12571907043457
    10. '
' → logprob: -20.75071907043457

Token 458: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02341865748167038
    2. 'res' → logprob: -3.773418664932251
    3. ' result' → logprob: -8.773418426513672
    4. ' res' → logprob: -11.023418426513672
    5. 'r' → logprob: -13.273418426513672
    6. 'line' → logprob: -15.398418426513672
    7. 'output' → logprob: -16.023418426513672
    8. '   ' → logprob: -18.898418426513672
    9. ' r' → logprob: -18.898418426513672
    10. '	result' → logprob: -19.898418426513672

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00022439735766965896
    2. 'ult' → logprob: -8.750224113464355
    3. ' ' → logprob: -10.625224113464355
    4. 'ults' → logprob: -11.125224113464355
    5. 'ut' → logprob: -11.875224113464355
    6. 'u' → logprob: -12.500224113464355
    7. 'ault' → logprob: -12.625224113464355
    8. 'in' → logprob: -12.750224113464355
    9. '   ' → logprob: -12.875224113464355
    10. '  ' → logprob: -14.375224113464355

Token 460: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00020354038861114532
    2. ' results' → logprob: -8.500203132629395
    3. '(results' → logprob: -18.75020408630371
    4. '
' → logprob: -20.00020408630371
    5. '	results' → logprob: -20.12520408630371
    6. 'result' → logprob: -20.87520408630371
    7. '.results' → logprob: -21.87520408630371
    8. 'res' → logprob: -22.25020408630371
    9. '   ' → logprob: -22.87520408630371
    10. 'Results' → logprob: -23.25020408630371

Token 461: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4654625654220581
    2. ':' → logprob: -1.465462565422058
    3. ':
' → logprob: -2.2154626846313477
    4. 'print' → logprob: -4.715462684631348
    5. '   ' → logprob: -4.840462684631348
    6. '<|end|>' → logprob: -4.840462684631348
    7. '<|end|>' → logprob: -6.715462684631348
    8. '():
' → logprob: -6.840462684631348
    9. ',' → logprob: -7.090462684631348
    10. '.' → logprob: -7.215462684631348

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011099581606686115
    2. 'print' → logprob: -4.511099815368652
    3. ' print' → logprob: -10.261099815368652
    4. '   ' → logprob: -11.011099815368652
    5. '           ' → logprob: -15.886099815368652
    6. '```' → logprob: -16.511098861694336
    7. '
' → logprob: -17.511098861694336
    8. '      ' → logprob: -17.761098861694336
    9. '	print' → logprob: -18.136098861694336
    10. '     ' → logprob: -18.511098861694336

Token 463: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '```' → logprob: -19.000001907348633
    5. '	print' → logprob: -21.250001907348633
    6. '       ' → logprob: -21.375001907348633
    7. '``' → logprob: -24.250001907348633
    8. '
' → logprob: -25.500001907348633
    9. 'println' → logprob: -25.500001907348633
    10. '_print' → logprob: -26.000001907348633

Token 464: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.0280383548888494e-06
    2. 'res' → logprob: -14.000000953674316
    3. '(' → logprob: -16.000001907348633
    4. ' res' → logprob: -21.000001907348633
    5. '=res' → logprob: -21.500001907348633
    6. '(f' → logprob: -21.875001907348633
    7. '(
' → logprob: -21.875001907348633
    8. '	res' → logprob: -22.250001907348633
    9. '$res' → logprob: -22.500001907348633
    10. '(re' → logprob: -22.500001907348633

Token 465: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. '()' → logprob: -11.500018119812012
    3. '())' → logprob: -11.875018119812012
    4. ' )' → logprob: -15.000018119812012
    5. ')
' → logprob: -15.125018119812012
    6. '')' → logprob: -15.875018119812012
    7. '`)' → logprob: -16.125019073486328
    8. '")' → logprob: -16.125019073486328
    9. '   ' → logprob: -16.500019073486328
    10. ')`' → logprob: -16.500019073486328

Token 466: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020401719666551799
    2. '
' → logprob: -9.500204086303711
    3. '<|end|>' → logprob: -9.625204086303711
    4. '```' → logprob: -10.000204086303711
    5. ' if' → logprob: -11.125204086303711
    6. '#' → logprob: -13.375204086303711
    7. '    
' → logprob: -15.375204086303711
    8. '  
' → logprob: -15.500204086303711
    9. '\n' → logprob: -15.750204086303711
    10. '\' → logprob: -16.00020408630371

Token 467: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.030042164027690887
    2. '__' → logprob: -3.5300421714782715
    3. '_name' → logprob: -8.405041694641113
    4. 'name' → logprob: -10.405041694641113
    5. '_' → logprob: -10.655041694641113
    6. ' ' → logprob: -12.530041694641113
    7. '___' → logprob: -13.030041694641113
    8. ' name' → logprob: -13.030041694641113
    9. 'Name' → logprob: -13.530041694641113
    10. ' ' → logprob: -13.780041694641113

Token 468: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11043595522642136
    2. '==' → logprob: -2.360435962677002
    3. ' ==' → logprob: -4.735435962677002
    4. '__.__' → logprob: -7.985435962677002
    5. '=="' → logprob: -8.110435485839844
    6. 'name' → logprob: -8.235435485839844
    7. ' __' → logprob: -9.610435485839844
    8. '=='' → logprob: -9.985435485839844
    9. '__.' → logprob: -10.110435485839844
    10. '.__' → logprob: -10.235435485839844

Token 469: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.319370302458992e-06
    2. '==' → logprob: -12.500005722045898
    3. '__.__' → logprob: -13.625005722045898
    4. '=="' → logprob: -16.5000057220459
    5. ' ==' → logprob: -16.6250057220459
    6. '__
' → logprob: -17.0000057220459
    7. '__["' → logprob: -17.3750057220459
    8. '___' → logprob: -17.6250057220459
    9. '____' → logprob: -17.7500057220459
    10. '__('' → logprob: -17.8750057220459

Token 470: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09363634139299393
    2. '==' → logprob: -2.5936362743377686
    3. ' ==' → logprob: -4.343636512756348
    4. '=="' → logprob: -6.468636512756348
    5. '=='' → logprob: -9.343636512756348
    6. '___' → logprob: -13.093636512756348
    7. '_' → logprob: -13.468636512756348
    8. '"' → logprob: -13.718636512756348
    9. '__.__' → logprob: -14.093636512756348
    10. '=' → logprob: -14.218636512756348

Token 471: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03804321587085724
    2. ''' → logprob: -3.288043260574341
    3. '__' → logprob: -14.163043022155762
    4. ' "__' → logprob: -14.538043022155762
    5. '"user' → logprob: -15.413043022155762
    6. '"class' → logprob: -16.413043975830078
    7. '"name' → logprob: -16.663043975830078
    8. ' '__' → logprob: -17.788043975830078
    9. '"value' → logprob: -17.913043975830078
    10. ''"' → logprob: -18.038043975830078

Token 472: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16028058528900146
    2. '__' → logprob: -1.9102805852890015
    3. '"' → logprob: -10.035280227661133
    4. 'name' → logprob: -11.910280227661133
    5. '__":
' → logprob: -13.785280227661133
    6. ''' → logprob: -13.910280227661133
    7. '_main' → logprob: -13.910280227661133
    8. '___' → logprob: -14.160280227661133
    9. ' main' → logprob: -14.535280227661133
    10. '主' → logprob: -15.035280227661133

Token 473: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0503980815410614
    2. '__' → logprob: -3.050398111343384
    3. '__':
' → logprob: -6.800397872924805
    4. '__.' → logprob: -7.925397872924805
    5. '__.__' → logprob: -8.175397872924805
    6. '__["' → logprob: -10.300397872924805
    7. '__
' → logprob: -11.425397872924805
    8. '__
' → logprob: -12.800397872924805
    9. '__:' → logprob: -13.675397872924805
    10. '.' → logprob: -13.800397872924805

Token 474: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012327632866799831
    2. '"' → logprob: -4.887327671051025
    3. '__' → logprob: -5.512327671051025
    4. ''' → logprob: -8.262327194213867
    5. ' main' → logprob: -8.387327194213867
    6. '   ' → logprob: -8.637327194213867
    7. '	main' → logprob: -12.012327194213867
    8. '_main' → logprob: -13.762327194213867
    9. ' "__' → logprob: -14.137327194213867
    10. ' ' → logprob: -14.137327194213867

Token 475: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '   ' → logprob: -18.75
    4. '	main' → logprob: -20.375
    5. 'import' → logprob: -23.375
    6. '(main' → logprob: -25.625
    7. '.main' → logprob: -25.75
    8. 'm' → logprob: -26.125
    9. 'mai' → logprob: -26.25
    10. '_main' → logprob: -26.25

Token 476: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 474
Tokens correctement prédits (1ère position, stricte): 207
Tokens correctement prédits (1ère position, avec adaptation): 229
Tokens correctement prédits (top 10): 394
Précision stricte (1ère position): 43.67%
Précision adaptée (1ère position): 48.31%
Précision (top 10): 83.12%
================================================================================
