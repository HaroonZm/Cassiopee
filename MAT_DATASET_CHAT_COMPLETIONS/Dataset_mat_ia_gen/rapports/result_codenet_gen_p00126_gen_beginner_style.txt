================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for data_i in range(n):
    grid = []
    for _ in range(9):
        line = input().split()
        grid.append(line)

    # compter les occurrences dans les lignes
    row_counts = []
    for i in range(9):
        d = {}
        for num in grid[i]:
            d[num] = d.get(num,0)+1
        row_counts.append(d)

    # compter les occurrences dans les colonnes
    col_counts = []
    for j in range(9):
        d = {}
        for i in range(9):
            num = grid[i][j]
            d[num] = d.get(num,0)+1
        col_counts.append(d)

    # compter les occurrences dans les blocs 3x3
    block_counts = []
    for bi in range(3):
        for bj in range(3):
            d = {}
            for i in range(3):
                for j in range(3):
                    num = grid[bi*3+i][bj*3+j]
                    d[num] = d.get(num,0)+1
            block_counts.append(d)

    # checker chaque nombre si il est en double dans ligne/col/block
    for i in range(9):
        line_out = ''
        for j in range(9):
            num = grid[i][j]
            block_id = (i//3)*3 + (j//3)
            wrong = False
            if row_counts[i][num] > 1:
                wrong = True
            if col_counts[j][num] > 1:
                wrong = True
            if block_counts[block_id][num] > 1:
                wrong = True
            if wrong:
                line_out += '*' + num
            else:
                line_out += ' ' + num
        print(line_out)
    if data_i != n-1:
        print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' data' (ID: 1238)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00975313875824213
    2. ' i' → logprob: -5.259753227233887
    3. '  ' → logprob: -6.009753227233887
    4. ' n' → logprob: -6.259753227233887
    5. ' ' → logprob: -9.759753227233887
    6. 'i' → logprob: -10.759753227233887
    7. ''' → logprob: -11.634753227233887
    8. ' ' → logprob: -11.884753227233887
    9. ' ‌' → logprob: -12.009753227233887
    10. '_' → logprob: -12.134753227233887

Token 7: '_i' (ID: 10853)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03137369826436043
    2. ' in' → logprob: -4.031373500823975
    3. ':' → logprob: -5.781373500823975
    4. '.' → logprob: -5.906373500823975
    5. '[]' → logprob: -6.156373500823975
    6. ' ' → logprob: -7.281373500823975
    7. '['' → logprob: -7.406373500823975
    8. '[:' → logprob: -7.531373500823975
    9. 'data' → logprob: -7.656373500823975
    10. '[:]' → logprob: -7.906373500823975

Token 8: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2486904412508011
    2. '[' → logprob: -1.6236904859542847
    3. '[n' → logprob: -4.248690605163574
    4. '[]' → logprob: -5.123690605163574
    5. 'd' → logprob: -7.623690605163574
    6. ']' → logprob: -7.623690605163574
    7. ' in' → logprob: -8.498690605163574
    8. 'nd' → logprob: -8.623690605163574
    9. '```' → logprob: -8.748690605163574
    10. '[e' → logprob: -8.873690605163574

Token 9: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759657621383667
    2. ' range' → logprob: -0.8259657621383667
    3. 'data' → logprob: -11.450965881347656
    4. 'n' → logprob: -12.075965881347656
    5. ' data' → logprob: -12.325965881347656
    6. '```' → logprob: -13.075965881347656
    7. '	range' → logprob: -13.575965881347656
    8. ' ' → logprob: -14.200965881347656
    9. ' n' → logprob: -15.075965881347656
    10. '(range' → logprob: -15.450965881347656

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023301150649785995
    2. '(n' → logprob: -3.773301124572754
    3. '(len' → logprob: -10.148301124572754
    4. '(range' → logprob: -12.398301124572754
    5. '(`' → logprob: -13.023301124572754
    6. '(
' → logprob: -13.148301124572754
    7. ' (' → logprob: -13.148301124572754
    8. '(

' → logprob: -13.773301124572754
    9. '(length' → logprob: -13.898301124572754
    10. '((' → logprob: -14.148301124572754

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014950995100662112
    2. ')' → logprob: -6.626494884490967
    3. ':' → logprob: -9.751495361328125
    4. '[' → logprob: -9.876495361328125
    5. '+' → logprob: -10.251495361328125
    6. ' ):' → logprob: -11.626495361328125
    7. '):
' → logprob: -11.751495361328125
    8. ',' → logprob: -14.126495361328125
    9. ']:' → logprob: -14.126495361328125
    10. ' ' → logprob: -14.251495361328125

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04071057587862015
    2. ' ' → logprob: -3.915710687637329
    3. ' line' → logprob: -5.29071044921875
    4. '    ' → logprob: -5.66571044921875
    5. ' input' → logprob: -5.91571044921875
    6. ' data' → logprob: -5.91571044921875
    7. 'data' → logprob: -6.54071044921875
    8. '    
' → logprob: -7.16571044921875
    9. 'input' → logprob: -7.66571044921875
    10. ' x' → logprob: -8.04071044921875

Token 13: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6775811314582825
    2. 'x' → logprob: -2.5525810718536377
    3. ' ' → logprob: -2.6775810718536377
    4. ' x' → logprob: -2.8025810718536377
    5. ' line' → logprob: -2.8025810718536377
    6. 'a' → logprob: -3.0525810718536377
    7. 'data' → logprob: -3.6775810718536377
    8. ' data' → logprob: -4.052581310272217
    9. ' a' → logprob: -4.177581310272217
    10. 's' → logprob: -4.552581310272217

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014091627672314644
    2. '[data' → logprob: -7.87640905380249
    3. '.' → logprob: -8.251409530639648
    4. '[:]' → logprob: -9.001409530639648
    5. '[row' → logprob: -9.251409530639648
    6. '[i' → logprob: -9.251409530639648
    7. '[]' → logprob: -9.376409530639648
    8. '\[' → logprob: -9.751409530639648
    9. '[line' → logprob: -10.376409530639648
    10. '[int' → logprob: -10.376409530639648

Token 15: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5043261647224426
    2. ' [' → logprob: -1.2543261051177979
    3. '[]' → logprob: -2.379326105117798
    4. '[' → logprob: -5.504326343536377
    5. '[int' → logprob: -5.504326343536377
    6. ' [[]' → logprob: -5.879326343536377
    7. ' list' → logprob: -6.004326343536377
    8. '[list' → logprob: -6.379326343536377
    9. '[input' → logprob: -6.754326343536377
    10. 'list' → logprob: -7.004326343536377

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03798501938581467
    2. '[' → logprob: -4.037984848022461
    3. 'for' → logprob: -4.912984848022461
    4. ' for' → logprob: -5.412984848022461
    5. '       ' → logprob: -5.537984848022461
    6. '<|end|>' → logprob: -6.412984848022461
    7. '    ' → logprob: -7.287984848022461
    8. '    
' → logprob: -7.412984848022461
    9. ' ' → logprob: -8.787984848022461
    10. '[n' → logprob: -8.787984848022461

Token 17: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7913565039634705
    2. 'for' (adapté à ' for') → logprob: -1.1663565635681152
    3. '   ' → logprob: -1.5413565635681152
    4. 'row' → logprob: -4.541356563568115
    5. 'n' → logprob: -5.541356563568115
    6. ' row' → logprob: -5.541356563568115
    7. ' ' → logprob: -7.416356563568115
    8. '    ' → logprob: -7.541356563568115
    9. 'rows' → logprob: -7.666356563568115
    10. ' n' → logprob: -7.916356563568115

Token 18: ' _' (ID: 1175)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5450744032859802
    2. ' row' → logprob: -1.045074462890625
    3. ' _' → logprob: -3.545074462890625
    4. ' data' → logprob: -3.795074462890625
    5. ' i' → logprob: -5.295074462890625
    6. ' range' → logprob: -5.420074462890625
    7. ' line' → logprob: -5.670074462890625
    8. ' ' → logprob: -6.170074462890625
    9. '_' → logprob: -6.795074462890625
    10. ' grid' → logprob: -8.420074462890625

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01604633405804634
    2. 'in' → logprob: -4.141046524047852
    3. ' ' → logprob: -11.766046524047852
    4. '	in' → logprob: -14.016046524047852
    5. 'n' → logprob: -14.141046524047852
    6. 'range' → logprob: -14.391046524047852
    7. 'import' → logprob: -15.016046524047852
    8. '  ' → logprob: -15.141046524047852
    9. '```' → logprob: -15.266046524047852
    10. 'space' → logprob: -15.266046524047852

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021097958087921
    2. ' range' → logprob: -2.3502109050750732
    3. '	range' → logprob: -12.975211143493652
    4. '(range' → logprob: -13.725211143493652
    5. ' ' → logprob: -15.350211143493652
    6. 'in' → logprob: -15.725211143493652
    7. ' xrange' → logprob: -16.225210189819336
    8. 'rang' → logprob: -16.225210189819336
    9. 'ran' → logprob: -16.350210189819336
    10. '   ' → logprob: -16.975210189819336

Token 21: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3877033293247223
    2. '(' → logprob: -1.1377032995224
    3. '(int' → logprob: -7.6377034187316895
    4. '(m' → logprob: -9.137702941894531
    5. ' (' → logprob: -9.262702941894531
    6. '(len' → logprob: -10.512702941894531
    7. '(grid' → logprob: -10.762702941894531
    8. '(rows' → logprob: -11.137702941894531
    9. '(s' → logprob: -11.262702941894531
    10. '(k' → logprob: -11.262702941894531

Token 22: '9' (ID: 24)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8386737704277039
    2. '3' → logprob: -1.7136738300323486
    3. 'n' → logprob: -1.8386738300323486
    4. '4' → logprob: -2.7136738300323486
    5. 'int' → logprob: -2.9636738300323486
    6. '9' → logprob: -3.3386738300323486
    7. '6' → logprob: -3.4636738300323486
    8. '10' → logprob: -3.9636738300323486
    9. ' n' → logprob: -4.7136735916137695
    10. '8' → logprob: -5.3386735916137695

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002446162048727274
    2. ')' → logprob: -6.252446174621582
    3. ' ):' → logprob: -7.752446174621582
    4. '):
' → logprob: -9.877446174621582
    5. '   ' → logprob: -10.752446174621582
    6. ':' → logprob: -11.877446174621582
    7. ' )' → logprob: -12.252446174621582
    8. ' ' → logprob: -14.002446174621582
    9. ',' → logprob: -15.002446174621582
    10. '):
' → logprob: -15.252446174621582

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011017163284122944
    2. '   ' → logprob: -4.761017322540283
    3. ' grid' → logprob: -6.386017322540283
    4. '    ' → logprob: -8.511016845703125
    5. ' line' → logprob: -9.011016845703125
    6. 'grid' → logprob: -9.386016845703125
    7. '```' → logprob: -9.386016845703125
    8. '[' → logprob: -10.636016845703125
    9. '	   ' → logprob: -10.886016845703125
    10. ' ' → logprob: -10.886016845703125

Token 25: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2829180955886841
    2. ' grid' → logprob: -1.532918095588684
    3. 'grid' → logprob: -3.5329179763793945
    4. ' row' → logprob: -7.7829179763793945
    5. ' line' → logprob: -8.282917976379395
    6. 'data' → logprob: -8.782917976379395
    7. '   ' → logprob: -8.907917976379395
    8. ' data' → logprob: -9.282917976379395
    9. '       ' → logprob: -9.657917976379395
    10. 'row' → logprob: -9.782917976379395

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00043233807082287967
    2. '=' → logprob: -7.75043249130249
    3. ' ' → logprob: -13.750432014465332
    4. '_' → logprob: -16.12543296813965
    5. 's' → logprob: -16.25043296813965
    6. '.append' → logprob: -16.62543296813965
    7. '=input' → logprob: -16.62543296813965
    8. ' +=' → logprob: -16.75043296813965
    9. ' =
' → logprob: -17.00043296813965
    10. '=line' → logprob: -17.75043296813965

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.372653603553772
    2. ' list' → logprob: -1.372653603553772
    3. 'input' → logprob: -2.9976534843444824
    4. 'list' → logprob: -4.872653484344482
    5. ' int' → logprob: -10.37265396118164
    6. 'int' → logprob: -10.62265396118164
    7. ' [' → logprob: -10.74765396118164
    8. '   ' → logprob: -11.99765396118164
    9. ' []' → logprob: -12.24765396118164
    10. '[' → logprob: -12.49765396118164

Token 28: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.538490950129926e-05
    2. '())' → logprob: -10.250055313110352
    3. '().' → logprob: -11.125055313110352
    4. '(' → logprob: -12.625055313110352
    5. '()`' → logprob: -14.000055313110352
    6. ' ()' → logprob: -15.125055313110352
    7. ')' → logprob: -15.625055313110352
    8. '()
' → logprob: -15.625055313110352
    9. '()]' → logprob: -15.875055313110352
    10. '()

' → logprob: -16.12505531311035

Token 29: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.025664595887064934
    2. 'split' → logprob: -3.7756645679473877
    3. 'rstrip' → logprob: -6.025664806365967
    4. ' strip' → logprob: -16.525665283203125
    5. 'str' → logprob: -16.900665283203125
    6. 'rs' → logprob: -17.275665283203125
    7. ' split' → logprob: -17.900665283203125
    8. 'stri' → logprob: -18.900665283203125
    9. 'r' → logprob: -19.650665283203125
    10. 'replace' → logprob: -20.275665283203125

Token 30: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7080419063568115
    2. '(' → logprob: -1.2080419063568115
    3. '()' → logprob: -1.5830419063568115
    4. '("("' → logprob: -5.833042144775391
    5. '("' → logprob: -8.95804214477539
    6. ''' → logprob: -10.08304214477539
    7. '(`' → logprob: -10.20804214477539
    8. '   ' → logprob: -10.95804214477539
    9. '('.')' → logprob: -11.70804214477539
    10. '(()' → logprob: -12.08304214477539

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1494377702474594
    2. ')' → logprob: -2.399437665939331
    3. '<|end|>' → logprob: -3.649437665939331
    4. '   ' → logprob: -4.02443790435791
    5. 'grid' → logprob: -6.02443790435791
    6. ')
' → logprob: -8.27443790435791
    7. '
' → logprob: -8.64943790435791
    8. '           ' → logprob: -8.89943790435791
    9. ' ' → logprob: -8.89943790435791
    10. '.grid' → logprob: -9.02443790435791

Token 32: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.193055659532547
    2. '   ' → logprob: -2.1930556297302246
    3. '       ' → logprob: -3.8180556297302246
    4. ')' → logprob: -4.068055629730225
    5. ' grid' → logprob: -4.193055629730225
    6. '.grid' → logprob: -4.818055629730225
    7. '	grid' → logprob: -7.693055629730225
    8. '(grid' → logprob: -7.943055629730225
    9. '<|end|>' → logprob: -8.693056106567383
    10. '[' → logprob: -8.818056106567383

Token 33: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032316597644239664
    2. '.' → logprob: -5.753231525421143
    3. '.extend' → logprob: -10.0032320022583
    4. '.app' → logprob: -12.7532320022583
    5. 'append' → logprob: -12.8782320022583
    6. '.Append' → logprob: -14.0032320022583
    7. '.ap' → logprob: -14.1282320022583
    8. ' .' → logprob: -14.2532320022583
    9. '.add' → logprob: -15.0032320022583
    10. '   ' → logprob: -15.7532320022583

Token 34: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06568016111850739
    2. '(list' → logprob: -2.8156802654266357
    3. '([' → logprob: -6.190680027008057
    4. '(' → logprob: -6.440680027008057
    5. '[line' → logprob: -10.190680503845215
    6. '(tuple' → logprob: -11.690680503845215
    7. '([]' → logprob: -12.690680503845215
    8. '(int' → logprob: -13.065680503845215
    9. '((' → logprob: -13.690680503845215
    10. '(lines' → logprob: -13.940680503845215

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '))' → logprob: -14.875001907348633
    5. ' )' → logprob: -16.500001907348633
    6. '`)' → logprob: -17.750001907348633
    7. '）' → logprob: -17.875001907348633
    8. ')))' → logprob: -17.875001907348633
    9. ')`' → logprob: -18.375001907348633
    10. '')' → logprob: -18.500001907348633

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28634941577911377
    2. 'for' → logprob: -1.5363494157791138
    3. ' for' → logprob: -4.161349296569824
    4. '#' → logprob: -5.161349296569824
    5. 's' → logprob: -6.286349296569824
    6. '    
' → logprob: -6.536349296569824
    7. ' ' → logprob: -6.661349296569824
    8. '.' → logprob: -6.661349296569824
    9. ')' → logprob: -6.786349296569824
    10. '<|end|>' → logprob: -6.786349296569824

Token 37: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2307281196117401
    2. 'for' → logprob: -2.8557281494140625
    3. '<|end|>' → logprob: -3.2307281494140625
    4. ' for' → logprob: -3.8557281494140625
    5. '#' (adapté à ' #') → logprob: -3.9807281494140625
    6. '```' → logprob: -4.3557281494140625
    7. 'valid' → logprob: -4.6057281494140625
    8. 's' → logprob: -4.8557281494140625
    9. '
' → logprob: -4.9807281494140625
    10. ' ' → logprob: -4.9807281494140625

Token 38: ' compter' (ID: 81694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5319771766662598
    2. '   ' → logprob: -1.5319771766662598
    3. '#' → logprob: -2.1569771766662598
    4. 's' → logprob: -3.6569771766662598
    5. '    ' → logprob: -4.65697717666626
    6. 'for' → logprob: -4.65697717666626
    7. ' #' → logprob: -4.78197717666626
    8. ' for' → logprob: -4.90697717666626
    9. 'valid' → logprob: -5.65697717666626
    10. ' valid' → logprob: -6.28197717666626

Token 39: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7701576352119446
    2. 's' → logprob: -0.8951576352119446
    3. '_' → logprob: -2.2701575756073
    4. '(' → logprob: -4.645157814025879
    5. ' ' → logprob: -5.270157814025879
    6. 'u' → logprob: -6.395157814025879
    7. 'm' → logprob: -6.520157814025879
    8. 'n' → logprob: -6.520157814025879
    9. 'p' → logprob: -7.395157814025879
    10. '   ' → logprob: -7.395157814025879

Token 40: ' occurrences' (ID: 108073)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04657258838415146
    2. '_' → logprob: -3.796572685241699
    3. 's' → logprob: -4.671572685241699
    4. 'é' → logprob: -6.046572685241699
    5. 'l' → logprob: -6.171572685241699
    6. 'd' → logprob: -6.421572685241699
    7. 'n' → logprob: -6.546572685241699
    8. 'élé' → logprob: -6.796572685241699
    9. ' nombres' → logprob: -7.421572685241699
    10. 'c' → logprob: -7.671572685241699

Token 41: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06368308514356613
    2. ' ' → logprob: -3.813683032989502
    3. '   ' → logprob: -4.563683032989502
    4. 'for' → logprob: -4.563683032989502
    5. 's' → logprob: -4.688683032989502
    6. '[' → logprob: -5.938683032989502
    7. 'n' → logprob: -6.938683032989502
    8. ' for' → logprob: -7.313683032989502
    9. '  ' → logprob: -7.438683032989502
    10. 'c' → logprob: -7.563683032989502

Token 42: ' les' (ID: 1341)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.9681751132011414
    2. ' grid' → logprob: -0.9681751132011414
    3. ' ' → logprob: -2.468175172805786
    4. ' la' → logprob: -2.968175172805786
    5. 'le' → logprob: -3.843175172805786
    6. 'the' → logprob: -4.343174934387207
    7. '   ' → logprob: -4.468174934387207
    8. 'la' → logprob: -4.593174934387207
    9. ' le' → logprob: -4.968174934387207
    10. ' the' → logprob: -5.343174934387207

Token 43: ' lignes' (ID: 81687)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.31495338678359985
    2. ' ' → logprob: -2.189953327178955
    3. ' grid' → logprob: -2.439953327178955
    4. 'gr' → logprob: -4.564953327178955
    5. 'row' → logprob: -4.814953327178955
    6. 'rows' → logprob: -4.814953327178955
    7. 'for' → logprob: -5.189953327178955
    8. 'l' → logprob: -5.189953327178955
    9. 'range' → logprob: -5.314953327178955
    10. '   ' → logprob: -6.064953327178955

Token 44: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19269806146621704
    2. 'for' → logprob: -1.9426980018615723
    3. ' for' → logprob: -3.6926980018615723
    4. ' ' → logprob: -5.692698001861572
    5. '  ' → logprob: -6.567698001861572
    6. '    ' → logprob: -7.442698001861572
    7. 'n' → logprob: -7.817698001861572
    8. '    
' → logprob: -8.31769847869873
    9. 's' → logprob: -8.69269847869873
    10. '_' → logprob: -8.69269847869873

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20498880743980408
    2. 'for' → logprob: -2.954988718032837
    3. ' ' → logprob: -3.329988718032837
    4. '#' → logprob: -4.079988956451416
    5. '\' → logprob: -4.079988956451416
    6. ' for' → logprob: -4.204988956451416
    7. '
' → logprob: -4.579988956451416
    8. 'n' → logprob: -4.704988956451416
    9. '    ' → logprob: -5.579988956451416
    10. ''' → logprob: -5.704988956451416

Token 46: ' row' (ID: 5225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5113045573234558
    2. ' ' → logprob: -1.5113046169281006
    3. 'for' → logprob: -2.2613046169281006
    4. 'n' → logprob: -3.8863046169281006
    5. 't' → logprob: -4.6363043785095215
    6. '#' → logprob: -4.7613043785095215
    7. ' for' → logprob: -4.8863043785095215
    8. '    ' → logprob: -5.0113043785095215
    9. '  ' → logprob: -5.1363043785095215
    10. '_' → logprob: -5.7613043785095215

Token 47: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5092776417732239
    2. '_counts' → logprob: -1.009277582168579
    3. 's' → logprob: -3.759277582168579
    4. '_count' → logprob: -4.884277820587158
    5. '_s' → logprob: -5.884277820587158
    6. '_occ' → logprob: -7.884277820587158
    7. '_oc' → logprob: -8.13427734375
    8. '_counter' → logprob: -9.00927734375
    9. '_c' → logprob: -10.25927734375
    10. '_values' → logprob: -10.63427734375

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1469324678182602
    2. ' =' → logprob: -2.021932363510132
    3. '[' → logprob: -5.646932601928711
    4. '=[' → logprob: -8.271932601928711
    5. '=[]' → logprob: -9.021932601928711
    6. '_' → logprob: -9.146932601928711
    7. 's' → logprob: -9.646932601928711
    8. ',' → logprob: -10.521932601928711
    9. '={}' → logprob: -10.646932601928711
    10. '   ' → logprob: -10.771932601928711

Token 49: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00983424298465252
    2. '[{' → logprob: -5.259834289550781
    3. ' [' → logprob: -5.884834289550781
    4. ' [{}' → logprob: -6.759834289550781
    5. '[]' → logprob: -7.884834289550781
    6. '{}' → logprob: -9.134834289550781
    7. ' [{' → logprob: -9.134834289550781
    8. '[len' → logprob: -10.634834289550781
    9. ' []' → logprob: -11.259834289550781
    10. '{' → logprob: -11.759834289550781

Token 50: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6203513741493225
    2. ' =' → logprob: -0.8703513741493225
    3. ' for' → logprob: -3.7453513145446777
    4. '=' → logprob: -4.245351314544678
    5. '   ' → logprob: -6.495351314544678
    6. '[' → logprob: -6.745351314544678
    7. '=[]
' → logprob: -6.870351314544678
    8. '[]' → logprob: -7.120351314544678
    9. '[:]' → logprob: -8.245351791381836
    10. '=[]' → logprob: -9.245351791381836

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015358068980276585
    2. ' for' → logprob: -4.265357971191406
    3. '[' → logprob: -7.390357971191406
    4. '   ' → logprob: -8.140357971191406
    5. '[]' → logprob: -8.515357971191406
    6. ' ' → logprob: -10.015357971191406
    7. '	for' → logprob: -11.890357971191406
    8. '0' → logprob: -12.140357971191406
    9. ')' → logprob: -12.265357971191406
    10. '=' → logprob: -12.765357971191406

Token 52: ' i' (ID: 575)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5139284133911133
    2. ' i' → logprob: -1.0139284133911133
    3. 'row' → logprob: -3.7639284133911133
    4. 'i' → logprob: -4.888928413391113
    5. ' r' → logprob: -5.138928413391113
    6. ' line' → logprob: -7.388928413391113
    7. 'r' → logprob: -7.388928413391113
    8. ' ' → logprob: -8.263928413391113
    9. ' j' → logprob: -8.263928413391113
    10. ' _' → logprob: -8.638928413391113

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2547071874141693
    2. 'in' → logprob: -1.5047072172164917
    3. 'n' → logprob: -6.004707336425781
    4. ' ' → logprob: -8.254707336425781
    5. '_' → logprob: -11.254707336425781
    6. ' n' → logprob: -11.879707336425781
    7. 's' → logprob: -12.379707336425781
    8. ',' → logprob: -12.504707336425781
    9. '  ' → logprob: -12.754707336425781
    10. 'i' → logprob: -12.754707336425781

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868723213672638
    2. 'range' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.261872291564941
    4. '	range' → logprob: -15.261872291564941
    5. '(range' → logprob: -16.261873245239258
    6. 'grid' → logprob: -16.511873245239258
    7. '```' → logprob: -16.886873245239258
    8. 'rang' → logprob: -17.136873245239258
    9. '  ' → logprob: -17.511873245239258
    10. ' xrange' → logprob: -17.761873245239258

Token 55: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011901067337021232
    2. '9' → logprob: -6.751190185546875
    3. ' (' → logprob: -11.001190185546875
    4. ' ' → logprob: -13.626190185546875
    5. '(
' → logprob: -13.876190185546875
    6. '(len' → logprob: -14.251190185546875
    7. ')' → logprob: -15.501190185546875
    8. '   ' → logprob: -15.751190185546875
    9. '```' → logprob: -16.751190185546875
    10. ' ' → logprob: -18.251190185546875

Token 56: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.500205039978027
    3. ')' → logprob: -14.750205039978027
    4. '   ' → logprob: -14.750205039978027
    5. '1' → logprob: -16.25020408630371
    6. '0' → logprob: -16.75020408630371
    7. 'len' → logprob: -16.75020408630371
    8. '  ' → logprob: -17.25020408630371
    9. '```' → logprob: -17.37520408630371
    10. '(' → logprob: -17.62520408630371

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007980050519108772
    2. ')' → logprob: -4.882979869842529
    3. ' ):' → logprob: -8.007980346679688
    4. ':' → logprob: -10.757980346679688
    5. '):
' → logprob: -11.507980346679688
    6. ' )' → logprob: -12.257980346679688
    7. '   ' → logprob: -12.632980346679688
    8. ' ' → logprob: -14.882980346679688
    9. ']:' → logprob: -15.132980346679688
    10. ',' → logprob: -15.507980346679688

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061949197202920914
    2. '       ' → logprob: -3.6869492530822754
    3. '    ' → logprob: -3.9369492530822754
    4. ' ' → logprob: -4.811949253082275
    5. '_' → logprob: -5.936949253082275
    6. '[' → logprob: -6.811949253082275
    7. ':' → logprob: -7.436949253082275
    8. ')' → logprob: -7.436949253082275
    9. ' row' → logprob: -7.561949253082275
    10. 'row' → logprob: -7.811949253082275

Token 59: ' d' (ID: 272)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.2797129154205322
    2. ' row' → logprob: -1.6547129154205322
    3. 'row' → logprob: -1.9047129154205322
    4. '   ' → logprob: -2.0297129154205322
    5. 'count' → logprob: -2.1547129154205322
    6. ' counts' → logprob: -2.1547129154205322
    7. ' count' → logprob: -4.529712677001953
    8. 'counter' → logprob: -5.279712677001953
    9. ' counter' → logprob: -6.279712677001953
    10. '       ' → logprob: -7.779712677001953

Token 60: ' =' (ID: 314)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.3280567228794098
    2. 'ata' → logprob: -1.7030566930770874
    3. 'ict' → logprob: -3.328056812286377
    4. 'igits' → logprob: -3.453056812286377
    5. 'ic' → logprob: -4.953056812286377
    6. 'ef' → logprob: -4.953056812286377
    7. ' =' → logprob: -5.578056812286377
    8. 'is' → logprob: -5.953056812286377
    9. 'ig' → logprob: -6.328056812286377
    10. '_counts' → logprob: -6.953056812286377

Token 61: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0028592010494321585
    2. ' {}' → logprob: -6.002859115600586
    3. 'ict' → logprob: -8.752859115600586
    4. '{' → logprob: -9.127859115600586
    5. 'dict' → logprob: -9.627859115600586
    6. '{})' → logprob: -11.127859115600586
    7. 'ic' → logprob: -11.627859115600586
    8. '={}' → logprob: -11.877859115600586
    9. ' dict' → logprob: -12.002859115600586
    10. ' defaultdict' → logprob: -12.877859115600586

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02849247306585312
    2. ' for' → logprob: -3.7784924507141113
    3. 'for' → logprob: -5.403492450714111
    4. '   ' → logprob: -7.403492450714111
    5. ' ' → logprob: -9.77849292755127
    6. '	for' → logprob: -11.02849292755127
    7. '    ' → logprob: -11.02849292755127
    8. '      ' → logprob: -11.52849292755127
    9. '     ' → logprob: -12.02849292755127
    10. ' ' → logprob: -12.65349292755127

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10891344398260117
    2. ' for' → logprob: -2.3589134216308594
    3. '   ' → logprob: -4.983913421630859
    4. '       ' → logprob: -6.358913421630859
    5. ' ' → logprob: -10.10891342163086
    6. '	for' → logprob: -10.23391342163086
    7. '    ' → logprob: -12.48391342163086
    8. '  ' → logprob: -12.98391342163086
    9. ' ' → logprob: -13.23391342163086
    10. 'line' → logprob: -13.48391342163086

Token 64: ' num' (ID: 2269)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06701818853616714
    2. ' j' → logprob: -3.0670182704925537
    3. 'num' → logprob: -4.317018032073975
    4. 'val' → logprob: -5.692018032073975
    5. ' num' → logprob: -7.692018032073975
    6. 'value' → logprob: -7.692018032073975
    7. ' val' → logprob: -8.192018508911133
    8. 'v' → logprob: -8.942018508911133
    9. 'x' → logprob: -9.817018508911133
    10. 'cell' → logprob: -9.817018508911133

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006428056862205267
    2. 'in' → logprob: -5.131428241729736
    3. ' ' → logprob: -7.631428241729736
    4. '_' → logprob: -12.881427764892578
    5. '  ' → logprob: -13.006427764892578
    6. 's' → logprob: -13.256427764892578
    7. ' ' → logprob: -13.506427764892578
    8. ' i' → logprob: -13.631427764892578
    9. '	in' → logprob: -14.006427764892578
    10. '   ' → logprob: -14.131427764892578

Token 66: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6326231956481934
    2. ' grid' → logprob: -0.7576231956481934
    3. '(grid' → logprob: -11.882623672485352
    4. 'row' → logprob: -12.757623672485352
    5. '	grid' → logprob: -12.757623672485352
    6. 'range' → logprob: -12.882623672485352
    7. ' range' → logprob: -13.007623672485352
    8. ' ' → logprob: -13.007623672485352
    9. ':grid' → logprob: -13.882623672485352
    10. '   ' → logprob: -14.257623672485352

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015705463010817766
    2. '[' → logprob: -8.875157356262207
    3. '[I' → logprob: -11.500157356262207
    4. ' [' → logprob: -13.125157356262207
    5. '```' → logprob: -13.625157356262207
    6. '[
' → logprob: -14.375157356262207
    7. '[u' → logprob: -15.125157356262207
    8. '[s' → logprob: -15.250157356262207
    9. '\[' → logprob: -15.250157356262207
    10. ' ' → logprob: -15.375157356262207

Token 68: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02217208407819271
    2. '[i' → logprob: -4.522171974182129
    3. ']' → logprob: -5.522171974182129
    4. '):' → logprob: -6.147171974182129
    5. ']):' → logprob: -6.397171974182129
    6. ':' → logprob: -6.647171974182129
    7. '[' → logprob: -7.147171974182129
    8. '   ' → logprob: -7.897171974182129
    9. ']:
' → logprob: -8.147171974182129
    10. ' ]' → logprob: -8.772171974182129

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039825684507377446
    2. ':' → logprob: -8.125398635864258
    3. ' :' → logprob: -10.125398635864258
    4. '       ' → logprob: -10.750398635864258
    5. '               ' → logprob: -11.375398635864258
    6. '          ' → logprob: -12.125398635864258
    7. '	       ' → logprob: -12.500398635864258
    8. ' if' → logprob: -12.750398635864258
    9. '```' → logprob: -12.750398635864258
    10. '<|end|>' → logprob: -12.750398635864258

Token 70: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0574243068695068
    2. '           ' → logprob: -1.0574243068695068
    3. ' if' → logprob: -1.8074243068695068
    4. 'd' (adapté à ' d') → logprob: -2.307424306869507
    5. '               ' → logprob: -3.557424306869507
    6. 'if' → logprob: -4.682424545288086
    7. '            ' → logprob: -6.057424545288086
    8. ' ' → logprob: -7.057424545288086
    9. '       ' → logprob: -8.932424545288086
    10. '   ' → logprob: -9.057424545288086

Token 71: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.005072225816547871
    2. '.setdefault' → logprob: -6.005072116851807
    3. '[' → logprob: -6.130072116851807
    4. '.' → logprob: -9.255072593688965
    5. '[d' → logprob: -9.255072593688965
    6. '[n' → logprob: -9.505072593688965
    7. '[token' → logprob: -10.255072593688965
    8. '[val' → logprob: -10.380072593688965
    9. '[int' → logprob: -10.630072593688965
    10. '[data' → logprob: -11.380072593688965

Token 72: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04976470395922661
    2. ']=' → logprob: -3.049764633178711
    3. '=' → logprob: -7.299764633178711
    4. ']+=' → logprob: -7.799764633178711
    5. ' =' → logprob: -9.924764633178711
    6. ' ]' → logprob: -10.799764633178711
    7. '']=' → logprob: -11.924764633178711
    8. 'd' → logprob: -12.424764633178711
    9. '']' → logprob: -13.049764633178711
    10. '[' → logprob: -13.799764633178711

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005474337958730757
    2. ' =' → logprob: -7.625547409057617
    3. '+=' → logprob: -9.750547409057617
    4. '=d' → logprob: -14.500547409057617
    5. ' +=' → logprob: -15.000547409057617
    6. '=count' → logprob: -15.125547409057617
    7. '=s' → logprob: -17.750547409057617
    8. '=data' → logprob: -17.875547409057617
    9. '=int' → logprob: -18.000547409057617
    10. ']+=' → logprob: -18.000547409057617

Token 74: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31329166889190674
    2. 'd' → logprob: -1.3132916688919067
    3. ' ' → logprob: -10.813291549682617
    4. '1' → logprob: -12.563291549682617
    5. '	d' → logprob: -12.938291549682617
    6. ')d' → logprob: -13.938291549682617
    7. '0' → logprob: -14.313291549682617
    8. '>d' → logprob: -14.563291549682617
    9. '   ' → logprob: -15.125791549682617
    10. '(d' → logprob: -15.375791549682617

Token 75: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.05587729439139366
    2. '[num' → logprob: -2.930877208709717
    3. '[i' → logprob: -7.430877208709717
    4. 'get' → logprob: -7.930877208709717
    5. 'num' → logprob: -10.805877685546875
    6. ' .' → logprob: -11.305877685546875
    7. '.setdefault' → logprob: -12.555877685546875
    8. '.' → logprob: -12.930877685546875
    9. '[get' → logprob: -13.805877685546875
    10. '[' → logprob: -14.305877685546875

Token 76: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00014287306112237275
    2. '(' → logprob: -8.875143051147461
    3. 'num' → logprob: -13.625143051147461
    4. '(token' → logprob: -14.125143051147461
    5. ' (' → logprob: -14.750143051147461
    6. '(n' → logprob: -15.625143051147461
    7. ',num' → logprob: -16.00014305114746
    8. '(number' → logprob: -16.37514305114746
    9. '(numero' → logprob: -16.37514305114746
    10. ' num' → logprob: -16.87514305114746

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027423666790127754
    2. ',num' → logprob: -3.652423620223999
    3. '(num' → logprob: -7.027423858642578
    4. ' ,' → logprob: -8.652423858642578
    5. 'num' → logprob: -10.402423858642578
    6. '1' → logprob: -11.152423858642578
    7. ')' → logprob: -11.777423858642578
    8. '0' → logprob: -13.152423858642578
    9. '(' → logprob: -13.527423858642578
    10. ' num' → logprob: -14.027423858642578

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024780353996902704
    2. ' ' → logprob: -6.002478122711182
    3. ')' → logprob: -13.252477645874023
    4. ' ' → logprob: -16.314977645874023
    5. '۰' → logprob: -16.502477645874023
    6. '1' → logprob: -16.627477645874023
    7. '    ' → logprob: -16.689977645874023
    8. ' )' → logprob: -16.939977645874023
    9. '   ' → logprob: -17.064977645874023
    10. '```' → logprob: -17.502477645874023

Token 79: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009717975743114948
    2. ')+' → logprob: -4.75971794128418
    3. ' )' → logprob: -6.88471794128418
    4. '+' → logprob: -9.50971794128418
    5. ' +' → logprob: -13.00971794128418
    6. '+)' → logprob: -13.13471794128418
    7. '1' → logprob: -15.00971794128418
    8. ']+' → logprob: -15.50971794128418
    9. ')+(' → logprob: -16.00971794128418
    10. '')' → logprob: -16.25971794128418

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.750709533691406
    4. '```' → logprob: -18.875709533691406
    5. '  ' → logprob: -19.375709533691406
    6. ' ' → logprob: -20.125709533691406
    7. ')' → logprob: -21.000709533691406
    8. '+' → logprob: -21.375709533691406
    9. '0' → logprob: -21.875709533691406
    10. '    ' → logprob: -22.000709533691406

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' row' (ID: 5225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007789859548211098
    2. 'row' (adapté à ' row') → logprob: -5.2577900886535645
    3. '<|end|>' → logprob: -6.2577900886535645
    4. '       ' → logprob: -8.382789611816406
    5. ' row' → logprob: -9.507789611816406
    6. ')' → logprob: -9.507789611816406
    7. ' ' → logprob: -9.882789611816406
    8. '	row' → logprob: -10.132789611816406
    9. 'for' → logprob: -10.382789611816406
    10. '<|end|>' → logprob: -10.382789611816406

Token 84: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.00018232580623589456
    2. 's' → logprob: -9.125182151794434
    3. '_s' → logprob: -9.750182151794434
    4. '_' → logprob: -12.500182151794434
    5. '_c' → logprob: -13.125182151794434
    6. ')_' → logprob: -13.750182151794434
    7. '_results' → logprob: -13.875182151794434
    8. '_scores' → logprob: -13.875182151794434
    9. ' _' → logprob: -14.000182151794434
    10. ''_' → logprob: -15.125182151794434

Token 85: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10024042427539825
    2. '.' → logprob: -2.350240468978882
    3. '.app' → logprob: -11.600240707397461
    4. '.push' → logprob: -11.725240707397461
    5. '.setdefault' → logprob: -12.225240707397461
    6. '.Append' → logprob: -12.850240707397461
    7. ' .' → logprob: -12.975240707397461
    8. '.extend' → logprob: -13.350240707397461
    9. '<|end|>' → logprob: -13.475240707397461
    10. '.ap' → logprob: -13.850240707397461

Token 86: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0004341261519584805
    2. '(' → logprob: -7.750433921813965
    3. '(dict' → logprob: -14.000433921813965
    4. '((' → logprob: -14.000433921813965
    5. '(s' → logprob: -14.125433921813965
    6. ' (' → logprob: -14.500433921813965
    7. '(
' → logprob: -16.12543487548828
    8. '({' → logprob: -16.12543487548828
    9. '(dic' → logprob: -16.50043487548828
    10. '(D' → logprob: -16.62543487548828

Token 87: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.125006675720215
    3. ' )' → logprob: -14.125006675720215
    4. '   ' → logprob: -14.875006675720215
    5. '))' → logprob: -17.0000057220459
    6. ')return' → logprob: -17.1250057220459
    7. ')

' → logprob: -17.5000057220459
    8. '}' → logprob: -18.2500057220459
    9. '`)' → logprob: -18.7500057220459
    10. ' ' → logprob: -18.7500057220459

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2036128044128418
    2. '   ' → logprob: -2.453612804412842
    3. '<|end|>' → logprob: -2.453612804412842
    4. '    
' → logprob: -4.453612804412842
    5. '  
' → logprob: -8.95361328125
    6. '

' → logprob: -9.20361328125
    7. '<|end|>' → logprob: -9.57861328125
    8. ' ' → logprob: -9.70361328125
    9. '```' → logprob: -10.07861328125
    10. 'for' → logprob: -10.32861328125

Token 89: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3746543526649475
    2. '   ' → logprob: -1.7496542930603027
    3. '<|end|>' → logprob: -2.7496542930603027
    4. '    
' → logprob: -2.8746542930603027
    5. 'for' → logprob: -5.624654293060303
    6. 'col' → logprob: -5.749654293060303
    7. '    ' → logprob: -6.499654293060303
    8. 'column' → logprob: -6.499654293060303
    9. ' col' → logprob: -6.624654293060303
    10. '  
' → logprob: -6.749654293060303

Token 90: ' compter' (ID: 81694)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.0035642385482788
    2. '#' → logprob: -1.1285642385482788
    3. 'column' → logprob: -2.3785643577575684
    4. 'com' → logprob: -2.8785643577575684
    5. ' compter' → logprob: -3.0035643577575684
    6. 'comp' → logprob: -3.5035643577575684
    7. 'colm' → logprob: -3.6285643577575684
    8. ' col' → logprob: -4.128564357757568
    9. 'for' → logprob: -4.628564357757568
    10. 'count' → logprob: -4.753564357757568

Token 91: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.31393080949783325
    2. 'les' → logprob: -1.3139307498931885
    3. '<|end|>' → logprob: -8.31393051147461
    4. '(' → logprob: -9.43893051147461
    5. 'l' → logprob: -9.81393051147461
    6. '_' → logprob: -9.81393051147461
    7. 'occ' → logprob: -10.43893051147461
    8. ' dans' → logprob: -10.68893051147461
    9. 'dans' → logprob: -10.68893051147461
    10. ' ' → logprob: -10.81393051147461

Token 92: ' occurrences' (ID: 108073)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.46406200528144836
    2. 'occ' → logprob: -1.714061975479126
    3. ' colon' → logprob: -1.839061975479126
    4. 'col' → logprob: -4.589062213897705
    5. '_' → logprob: -5.339062213897705
    6. ' occurrences' → logprob: -5.339062213897705
    7. 'columns' → logprob: -6.214062213897705
    8. 'l' → logprob: -6.339062213897705
    9. 'occur' → logprob: -6.339062213897705
    10. 'c' → logprob: -7.214062213897705

Token 93: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.089844822883606
    2. 'dans' → logprob: -1.089844822883606
    3. ' ' → logprob: -1.714844822883606
    4. '<|end|>' → logprob: -2.4648447036743164
    5. 's' → logprob: -3.8398447036743164
    6. ' in' → logprob: -4.464844703674316
    7. '  ' → logprob: -4.589844703674316
    8. '   ' → logprob: -5.714844703674316
    9. '    ' → logprob: -5.839844703674316
    10. 'in' → logprob: -5.964844703674316

Token 94: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.023366373032331467
    2. ' les' → logprob: -3.8983664512634277
    3. 'l' → logprob: -6.148366451263428
    4. ' ' → logprob: -8.27336597442627
    5. '```' → logprob: -9.02336597442627
    6. 'col' → logprob: -9.77336597442627
    7. ' ' → logprob: -10.02336597442627
    8. '_' → logprob: -10.14836597442627
    9. 'colon' → logprob: -10.39836597442627
    10. 's' → logprob: -11.02336597442627

Token 95: ' colon' (ID: 20947)
  Prédit: 'colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colon' → logprob: -0.01257074810564518
    2. ' colon' → logprob: -5.137570858001709
    3. 'l' → logprob: -5.387570858001709
    4. 'col' → logprob: -7.262570858001709
    5. 'range' → logprob: -8.13757038116455
    6. 'columns' → logprob: -8.13757038116455
    7. ' ' → logprob: -8.51257038116455
    8. 'cols' → logprob: -8.63757038116455
    9. 'ranges' → logprob: -10.01257038116455
    10. '   ' → logprob: -10.01257038116455

Token 96: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.08686448633670807
    2. 'n' → logprob: -2.711864471435547
    3. 'es' → logprob: -4.211864471435547
    4. 's' → logprob: -6.586864471435547
    5. 'e' → logprob: -7.836864471435547
    6. 'ne' → logprob: -9.461864471435547
    7. '```' → logprob: -10.836864471435547
    8. '   ' → logprob: -11.211864471435547
    9. 't' → logprob: -11.336864471435547
    10. 'ies' → logprob: -11.586864471435547

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09915250539779663
    2. '
' → logprob: -3.3491525650024414
    3. '    
' → logprob: -3.3491525650024414
    4. '  
' → logprob: -4.724152565002441
    5. '\n' → logprob: -5.224152565002441
    6. ' for' → logprob: -5.974152565002441
    7. '   
' → logprob: -6.099152565002441
    8. '```' → logprob: -6.474152565002441
    9. 'for' → logprob: -6.974152565002441
    10. ' 
' → logprob: -7.349152565002441

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9876043200492859
    2. ' for' → logprob: -1.3626043796539307
    3. '   ' → logprob: -1.3626043796539307
    4. 'for' → logprob: -2.2376043796539307
    5. '    
' → logprob: -5.987604141235352
    6. 'n' → logprob: -6.362604141235352
    7. '```' → logprob: -6.612604141235352
    8. '  
' → logprob: -7.112604141235352
    9. ' 
' → logprob: -7.237604141235352
    10. '\n' → logprob: -7.487604141235352

Token 99: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.15797004103660583
    2. 'col' (adapté à ' col') → logprob: -2.5329699516296387
    3. ' for' → logprob: -4.407969951629639
    4. ' columns' → logprob: -4.407969951629639
    5. ' column' → logprob: -4.407969951629639
    6. ' c' → logprob: -4.782969951629639
    7. 'c' → logprob: -4.907969951629639
    8. 'column' → logprob: -5.157969951629639
    9. 'columns' → logprob: -5.782969951629639
    10. ' cols' → logprob: -6.032969951629639

Token 100: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22672997415065765
    2. '_counts' → logprob: -1.6017299890518188
    3. '_c' → logprob: -7.601729869842529
    4. 's' → logprob: -7.726729869842529
    5. ' _' → logprob: -9.101730346679688
    6. '_
' → logprob: -9.226730346679688
    7. '_s' → logprob: -9.851730346679688
    8. '_

' → logprob: -10.351730346679688
    9. '__' → logprob: -10.601730346679688
    10. '=_' → logprob: -11.726730346679688

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889308780431747
    2. '=' → logprob: -2.5788931846618652
    3. '=[]' → logprob: -12.828892707824707
    4. ' =
' → logprob: -14.953892707824707
    5. ' ' → logprob: -16.203893661499023
    6. ' =[' → logprob: -16.328893661499023
    7. '=[]
' → logprob: -16.453893661499023
    8. '=[' → logprob: -17.453893661499023
    9. 's' → logprob: -17.578893661499023
    10. '={}' → logprob: -18.578893661499023

Token 102: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7103240489959717
    2. ' []' → logprob: -0.7103240489959717
    3. '[]
' → logprob: -4.460324287414551
    4. ' []
' → logprob: -5.210324287414551
    5. '[' → logprob: -11.96032428741455
    6. ' [' → logprob: -12.58532428741455
    7. ' ' → logprob: -13.71032428741455
    8. '[]

' → logprob: -14.83532428741455
    9. ' []
' → logprob: -16.210323333740234
    10. ' []

' → logprob: -16.460323333740234

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3903219401836395
    2. 'for' → logprob: -1.515321969985962
    3. ' for' → logprob: -2.515321969985962
    4. '[' → logprob: -4.515321731567383
    5. '[]' → logprob: -4.765321731567383
    6. '<|end|>' → logprob: -7.015321731567383
    7. '[
' → logprob: -7.765321731567383
    8. ' ' → logprob: -7.890321731567383
    9. '[]
' → logprob: -8.140321731567383
    10. '[:]' → logprob: -8.640321731567383

Token 104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025517656467854977
    2. ' for' → logprob: -6.252551555633545
    3. '[]' → logprob: -7.502551555633545
    4. '[]
' → logprob: -9.627552032470703
    5. '[' → logprob: -12.627552032470703
    6. '   ' → logprob: -13.377552032470703
    7. '[
' → logprob: -14.627552032470703
    8. ' []' → logprob: -16.752552032470703
    9. '[:]' → logprob: -18.127552032470703
    10. '0' → logprob: -18.252552032470703

Token 105: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.037540655583143234
    2. 'i' → logprob: -3.5375406742095947
    3. ' range' → logprob: -4.912540435791016
    4. 'range' → logprob: -8.037540435791016
    5. ' j' → logprob: -9.537540435791016
    6. 'j' → logprob: -12.162540435791016
    7. ' ' → logprob: -12.787540435791016
    8. ' in' → logprob: -13.662540435791016
    9. '```' → logprob: -14.287540435791016
    10. ' ' → logprob: -15.412540435791016

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025188231375068426
    2. 'in' → logprob: -6.002518653869629
    3. ' ' → logprob: -10.502518653869629
    4. 'range' → logprob: -11.502518653869629
    5. 'n' → logprob: -12.877518653869629
    6. '   ' → logprob: -14.627518653869629
    7. '  ' → logprob: -15.252518653869629
    8. ' range' → logprob: -15.252518653869629
    9. 's' → logprob: -15.377518653869629
    10. '    ' → logprob: -15.502518653869629

Token 107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740775227546692
    2. 'range' → logprob: -0.9740775227546692
    3. '(range' → logprob: -14.599077224731445
    4. ' ' → logprob: -16.724077224731445
    5. '	range' → logprob: -18.349077224731445
    6. '   ' → logprob: -19.474077224731445
    7. '9' → logprob: -19.724077224731445
    8. 'ange' → logprob: -20.224077224731445
    9. 'rang' → logprob: -20.474077224731445
    10. '0' → logprob: -20.599077224731445

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.167648876318708e-05
    2. '9' → logprob: -10.125041961669922
    3. ' (' → logprob: -13.500041961669922
    4. '(
' → logprob: -16.625041961669922
    5. '   ' → logprob: -18.375041961669922
    6. ' ' → logprob: -18.750041961669922
    7. '```' → logprob: -19.125041961669922
    8. ')' → logprob: -19.750041961669922
    9. '(range' → logprob: -20.000041961669922
    10. 'def' → logprob: -20.125041961669922

Token 109: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -14.875031471252441
    4. ')' → logprob: -17.375032424926758
    5. '0' → logprob: -17.750032424926758
    6. '(' → logprob: -17.875032424926758
    7. '```' → logprob: -18.375032424926758
    8. 'range' → logprob: -18.500032424926758
    9. '  ' → logprob: -18.875032424926758
    10. '    ' → logprob: -19.750032424926758

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31429004669189453
    2. '):
' → logprob: -1.3142900466918945
    3. '   ' → logprob: -7.6892900466918945
    4. ':' → logprob: -8.064290046691895
    5. ')' → logprob: -8.564290046691895
    6. '9' → logprob: -10.814290046691895
    7. ':
' → logprob: -10.939290046691895
    8. '       ' → logprob: -11.814290046691895
    9. ' ' → logprob: -12.689290046691895
    10. '):

' → logprob: -12.689290046691895

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7048746347427368
    2. '       ' → logprob: -0.7048746347427368
    3. 'd' → logprob: -4.829874515533447
    4. '    ' → logprob: -6.329874515533447
    5. ' d' → logprob: -7.079874515533447
    6. ' ' → logprob: -7.704874515533447
    7. '  ' → logprob: -8.829874992370605
    8. ' col' → logprob: -8.829874992370605
    9. '     ' → logprob: -9.704874992370605
    10. '      ' → logprob: -10.329874992370605

Token 112: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0005545823951251805
    2. '   ' → logprob: -8.250555038452148
    3. ' d' → logprob: -8.250555038452148
    4. '       ' → logprob: -10.375555038452148
    5. ' ' → logprob: -15.375555038452148
    6. 'c' → logprob: -15.500555038452148
    7. '{
' → logprob: -16.00055503845215
    8. 'col' → logprob: -16.00055503845215
    9. '           ' → logprob: -16.25055503845215
    10. '  ' → logprob: -16.62555503845215

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408294677734375
    2. '=' → logprob: -0.9740829467773438
    3. '={}' → logprob: -12.849082946777344
    4. ' ' → logprob: -12.974082946777344
    5. ' =
' → logprob: -15.349082946777344
    6. '=
' → logprob: -15.599082946777344
    7. '=[]' → logprob: -16.099082946777344
    8. '  ' → logprob: -16.599082946777344
    9. '=

' → logprob: -16.599082946777344
    10. '   ' → logprob: -17.099082946777344

Token 114: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00034177995985373855
    2. '{}
' → logprob: -8.000341415405273
    3. ' {}' → logprob: -12.000341415405273
    4. 'dict' → logprob: -16.625341415405273
    5. ' {}
' → logprob: -16.625341415405273
    6. '{}

' → logprob: -16.750341415405273
    7. '{}\' → logprob: -16.875341415405273
    8. '{}_' → logprob: -18.125341415405273
    9. '{})' → logprob: -18.625341415405273
    10. '={}' → logprob: -18.875341415405273

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005487856455147266
    2. 'for' → logprob: -5.88048791885376
    3. '   ' → logprob: -6.50548791885376
    4. ' for' → logprob: -6.75548791885376
    5. '<|end|>' → logprob: -11.505487442016602
    6. ' ' → logprob: -12.130487442016602
    7. '	for' → logprob: -13.255487442016602
    8. '```' → logprob: -14.255487442016602
    9. '	   ' → logprob: -14.380487442016602
    10. '           ' → logprob: -15.005487442016602

Token 116: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6200929284095764
    2. 'for' (adapté à ' for') → logprob: -0.8700929284095764
    3. '   ' → logprob: -3.6200928688049316
    4. ' for' → logprob: -4.120092868804932
    5. '<|end|>' → logprob: -9.37009334564209
    6. ' ' → logprob: -9.62009334564209
    7. '	for' → logprob: -11.24509334564209
    8. '  ' → logprob: -12.87009334564209
    9. '```' → logprob: -14.24509334564209
    10. '
' → logprob: -14.74509334564209

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020925104618073
    2. ' i' → logprob: -2.3502092361450195
    3. '   ' → logprob: -13.72520923614502
    4. '	i' → logprob: -14.35020923614502
    5. ' ' → logprob: -14.47520923614502
    6. '```' → logprob: -15.47520923614502
    7. '  ' → logprob: -16.975210189819336
    8. ' ' → logprob: -17.225210189819336
    9. '    ' → logprob: -17.725210189819336
    10. 'data' → logprob: -18.350210189819336

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029770735651254654
    2. 'in' → logprob: -3.529770851135254
    3. ' ' → logprob: -12.029770851135254
    4. 'range' → logprob: -12.529770851135254
    5. '(' → logprob: -12.779770851135254
    6. '   ' → logprob: -13.279770851135254
    7. '    ' → logprob: -13.529770851135254
    8. ' range' → logprob: -13.904770851135254
    9. 'n' → logprob: -14.154770851135254
    10. '[' → logprob: -14.779770851135254

Token 119: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931489109992981
    2. 'range' → logprob: -0.6931489109992981
    3. '(range' → logprob: -13.443148612976074
    4. ' ' → logprob: -15.818148612976074
    5. '	range' → logprob: -16.69314956665039
    6. '9' → logprob: -18.44314956665039
    7. '
' → logprob: -18.94314956665039
    8. ' xrange' → logprob: -19.56814956665039
    9. '.range' → logprob: -19.56814956665039
    10. '   ' → logprob: -19.69314956665039

Token 120: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.179569077678025e-05
    2. 'range' → logprob: -10.500041961669922
    3. '(range' → logprob: -11.500041961669922
    4. ' range' → logprob: -12.750041961669922
    5. '9' → logprob: -13.750041961669922
    6. ' (' → logprob: -16.375041961669922
    7. '(
' → logprob: -17.750041961669922
    8. ' ' → logprob: -19.750041961669922
    9. 'Range' → logprob: -19.875041961669922
    10. ')' → logprob: -20.250041961669922

Token 121: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00081487005809322
    2. ' ' → logprob: -7.125814914703369
    3. '(' → logprob: -12.500814437866211
    4. '   ' → logprob: -12.875814437866211
    5. 'range' → logprob: -13.125814437866211
    6. ' range' → logprob: -13.500814437866211
    7. ')' → logprob: -15.250814437866211
    8. '       ' → logprob: -15.625814437866211
    9. '
' → logprob: -16.25081443786621
    10. '           ' → logprob: -16.50081443786621

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10542032867670059
    2. '):
' → logprob: -2.3554203510284424
    3. ':' → logprob: -5.355420112609863
    4. ')' → logprob: -8.355420112609863
    5. ':
' → logprob: -9.230420112609863
    6. '       ' → logprob: -9.605420112609863
    7. '   ' → logprob: -10.105420112609863
    8. ']:' → logprob: -11.855420112609863
    9. '):

' → logprob: -12.105420112609863
    10. '<|end|>' → logprob: -12.480420112609863

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09218914061784744
    2. 'd' → logprob: -2.592189073562622
    3. '       ' → logprob: -4.842189311981201
    4. ' d' → logprob: -5.717189311981201
    5. 'num' → logprob: -6.717189311981201
    6. '   ' → logprob: -7.967189311981201
    7. '               ' → logprob: -7.967189311981201
    8. ' num' → logprob: -10.467188835144043
    9. 'col' → logprob: -10.967188835144043
    10. '```' → logprob: -11.342188835144043

Token 124: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0013410773826763034
    2. 'd' → logprob: -7.626340866088867
    3. ' num' → logprob: -7.626340866088867
    4. '           ' → logprob: -8.501340866088867
    5. 'val' → logprob: -9.251340866088867
    6. '               ' → logprob: -11.251340866088867
    7. 'n' → logprob: -11.501340866088867
    8. 'key' → logprob: -11.626340866088867
    9. 'value' → logprob: -11.751340866088867
    10. '   ' → logprob: -12.001340866088867

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740781784057617
    2. ' =' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.599078178405762
    4. '=
' → logprob: -15.849078178405762
    5. ')' → logprob: -16.224079132080078
    6. 'd' → logprob: -16.474079132080078
    7. '=num' → logprob: -16.599079132080078
    8. '=

' → logprob: -17.099079132080078
    9. ' =
' → logprob: -17.099079132080078
    10. 's' → logprob: -17.349079132080078

Token 126: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5759442448616028
    2. ' grid' → logprob: -0.8259442448616028
    3. '(grid' → logprob: -13.325943946838379
    4. '	grid' → logprob: -13.325943946838379
    5. ' ' → logprob: -14.450943946838379
    6. '.grid' → logprob: -14.950943946838379
    7. ':grid' → logprob: -15.075943946838379
    8. '/grid' → logprob: -16.200944900512695
    9. '   ' → logprob: -16.325944900512695
    10. 'Grid' → logprob: -17.325944900512695

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -13.000006675720215
    3. '[j' → logprob: -13.125006675720215
    4. '[
' → logprob: -13.750006675720215
    5. '[I' → logprob: -14.750006675720215
    6. '
' → logprob: -16.0000057220459
    7. 'i' → logprob: -16.0000057220459
    8. ' [' → logprob: -16.1250057220459
    9. '][' → logprob: -17.0000057220459
    10. '```' → logprob: -17.2500057220459

Token 128: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.038953304290771484
    2. '[j' → logprob: -3.2889533042907715
    3. ']' → logprob: -7.9139533042907715
    4. '[' → logprob: -7.9139533042907715
    5. ' ][' → logprob: -8.78895378112793
    6. '```' → logprob: -12.28895378112793
    7. '"][' → logprob: -12.66395378112793
    8. ''][' → logprob: -12.91395378112793
    9. ' [' → logprob: -12.91395378112793
    10. '[
' → logprob: -13.16395378112793

Token 129: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029625516617670655
    2. ' j' → logprob: -8.125296592712402
    3. '	j' → logprob: -16.250295639038086
    4. '   ' → logprob: -17.625295639038086
    5. ':j' → logprob: -17.875295639038086
    6. '
' → logprob: -18.000295639038086
    7. '```' → logprob: -18.125295639038086
    8. ' ' → logprob: -18.375295639038086
    9. '[j' → logprob: -18.500295639038086
    10. '    ' → logprob: -19.000295639038086

Token 130: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005041812546551228
    2. ']
' → logprob: -8.000504493713379
    3. ' ]' → logprob: -9.750504493713379
    4. '           ' → logprob: -9.875504493713379
    5. '       ' → logprob: -10.125504493713379
    6. ')' → logprob: -11.000504493713379
    7. ']
' → logprob: -14.625504493713379
    8. '   ' → logprob: -15.125504493713379
    9. ']

' → logprob: -15.125504493713379
    10. '               ' → logprob: -15.125504493713379

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07115030288696289
    2. 'd' → logprob: -2.696150302886963
    3. ' d' → logprob: -7.446150302886963
    4. '       ' → logprob: -7.446150302886963
    5. '   ' → logprob: -10.946149826049805
    6. '               ' → logprob: -11.821149826049805
    7. '
' → logprob: -11.946149826049805
    8. '          ' → logprob: -12.446149826049805
    9. '```' → logprob: -12.571149826049805
    10. '         ' → logprob: -13.571149826049805

Token 132: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.5341768264770508
    2. ' d' → logprob: -0.9091768264770508
    3. '           ' → logprob: -4.534176826477051
    4. '       ' → logprob: -8.53417682647705
    5. '   ' → logprob: -10.40917682647705
    6. '
' → logprob: -11.40917682647705
    7. '```' → logprob: -12.53417682647705
    8. '          ' → logprob: -12.65917682647705
    9. '               ' → logprob: -12.78417682647705
    10. ' ' → logprob: -12.78417682647705

Token 133: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -9.372294698550832e-06
    2. 'num' → logprob: -11.750009536743164
    3. '[' → logprob: -14.125009536743164
    4. '=num' → logprob: -14.375009536743164
    5. '(num' → logprob: -17.000009536743164
    6. ' [' → logprob: -17.250009536743164
    7. '=' → logprob: -17.375009536743164
    8. '[n' → logprob: -17.500009536743164
    9. ' num' → logprob: -17.500009536743164
    10. ',num' → logprob: -17.875009536743164

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41094526648521423
    2. '=' → logprob: -1.1609452962875366
    3. ']=' → logprob: -3.785945177078247
    4. ' =' → logprob: -7.160945415496826
    5. 'd' → logprob: -8.160944938659668
    6. '=d' → logprob: -10.535944938659668
    7. ')' → logprob: -12.535944938659668
    8. ' ]' → logprob: -12.660944938659668
    9. '[' → logprob: -13.410944938659668
    10. ']+=' → logprob: -14.035944938659668

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014168680645525455
    2. ' =' → logprob: -4.264168739318848
    3. '=d' → logprob: -12.264168739318848
    4. 'd' → logprob: -14.514168739318848
    5. ' ' → logprob: -18.01416778564453
    6. '+=' → logprob: -18.88916778564453
    7. '   ' → logprob: -19.01416778564453
    8. '=
' → logprob: -19.38916778564453
    9. ')' → logprob: -19.63916778564453
    10. ']' → logprob: -19.76416778564453

Token 136: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6931471824645996
    2. ' d' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.443147659301758
    4. '	d' → logprob: -17.568147659301758
    5. ' ' → logprob: -17.818147659301758
    6. '   ' → logprob: -18.318147659301758
    7. '    ' → logprob: -18.943147659301758
    8. '
' → logprob: -19.193147659301758
    9. '(d' → logprob: -19.318147659301758
    10. '  ' → logprob: -19.443147659301758

Token 137: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.5822400857578032e-05
    2. ' .' → logprob: -11.125025749206543
    3. '.' → logprob: -12.000025749206543
    4. 'get' → logprob: -12.250025749206543
    5. '.ge' → logprob: -18.37502670288086
    6. 'd' → logprob: -18.50002670288086
    7. '.setdefault' → logprob: -19.12502670288086
    8. '.g' → logprob: -19.12502670288086
    9. '_get' → logprob: -19.87502670288086
    10. ' get' → logprob: -20.87502670288086

Token 138: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -5.5577775128767826e-06
    2. 'num' → logprob: -12.250005722045898
    3. ' (' → logprob: -15.500005722045898
    4. ' num' → logprob: -15.625005722045898
    5. ',num' → logprob: -15.625005722045898
    6. '<num' → logprob: -15.875005722045898
    7. '=num' → logprob: -18.0000057220459
    8. '[num' → logprob: -18.6250057220459
    9. '(' → logprob: -18.7500057220459
    10. '$num' → logprob: -18.7500057220459

Token 139: ',' (ID: 11)
  Prédit: ',num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.0017452733591198921
    2. '(num' → logprob: -7.001745223999023
    3. 'num' → logprob: -7.626745223999023
    4. ',' → logprob: -8.001745223999023
    5. '[num' → logprob: -11.626745223999023
    6. ' ,' → logprob: -13.876745223999023
    7. ' num' → logprob: -14.001745223999023
    8. '<num' → logprob: -15.876745223999023
    9. '$num' → logprob: -15.876745223999023
    10. '	num' → logprob: -16.376745223999023

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037069658283144236
    2. 'num' → logprob: -5.753706932067871
    3. ' ' → logprob: -7.628706932067871
    4. 'd' → logprob: -10.878706932067871
    5. '(num' → logprob: -11.378706932067871
    6. ' num' → logprob: -11.753706932067871
    7. '[num' → logprob: -13.253706932067871
    8. '1' → logprob: -14.003706932067871
    9. ')' → logprob: -14.503706932067871
    10. ',num' → logprob: -14.503706932067871

Token 141: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36200255155563354
    2. ')+' → logprob: -1.2370026111602783
    3. ')' → logprob: -4.737002372741699
    4. ' +' → logprob: -5.862002372741699
    5. ']+' → logprob: -6.987002372741699
    6. '()+' → logprob: -7.237002372741699
    7. '}+' → logprob: -9.2370023727417
    8. '+)' → logprob: -10.4870023727417
    9. '(+' → logprob: -11.2370023727417
    10. ' )' → logprob: -11.3620023727417

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -15.250017166137695
    4. '+' → logprob: -15.375017166137695
    5. '```' → logprob: -15.500017166137695
    6. ')' → logprob: -17.187517166137695
    7. '   ' → logprob: -17.250017166137695
    8. '`' → logprob: -17.437517166137695
    9. '
' → logprob: -18.125017166137695
    10. '۱' → logprob: -18.187517166137695

Token 143: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027182576013728976
    2. ' col' → logprob: -8.750271797180176
    3. 'col' → logprob: -9.500271797180176
    4. '   ' → logprob: -10.625271797180176
    5. '	col' → logprob: -12.500271797180176
    6. '[col' → logprob: -12.500271797180176
    7. '<|end|>' → logprob: -12.625271797180176
    8. '      ' → logprob: -14.000271797180176
    9. ')' → logprob: -14.500271797180176
    10. ',col' → logprob: -14.625271797180176

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002079716883599758
    2. 'col' → logprob: -7.127079486846924
    3. ' col' → logprob: -7.377079486846924
    4. '   ' → logprob: -7.377079486846924
    5. '	col' → logprob: -11.627079963684082
    6. '[col' → logprob: -12.127079963684082
    7. '      ' → logprob: -13.252079963684082
    8. '<|end|>' → logprob: -13.502079963684082
    9. ',col' → logprob: -13.877079963684082
    10. '     ' → logprob: -13.877079963684082

Token 145: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.037189025431871414
    2. ' col' → logprob: -3.66218900680542
    3. '   ' → logprob: -4.53718900680542
    4. '	col' → logprob: -9.912189483642578
    5. '       ' → logprob: -10.037189483642578
    6. '
' → logprob: -10.662189483642578
    7. '[col' → logprob: -12.787189483642578
    8. ' ' → logprob: -13.037189483642578
    9. 'coln' → logprob: -14.037189483642578
    10. '    
' → logprob: -14.287189483642578

Token 146: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -6.034592388459714e-06
    2. 's' → logprob: -13.375005722045898
    3. '_' → logprob: -13.500005722045898
    4. '_c' → logprob: -14.125005722045898
    5. ' _' → logprob: -14.250005722045898
    6. '_append' → logprob: -15.375005722045898
    7. ''_' → logprob: -15.375005722045898
    8. '_codes' → logprob: -15.625005722045898
    9. '.append' → logprob: -16.1250057220459
    10. ')_' → logprob: -16.5000057220459

Token 147: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.56102097814437e-05
    2. '.' → logprob: -10.125045776367188
    3. '.app' → logprob: -12.625045776367188
    4. 'append' → logprob: -13.875045776367188
    5. '.ap' → logprob: -14.750045776367188
    6. '.push' → logprob: -14.875045776367188
    7. ' .' → logprob: -15.875045776367188
    8. '.Append' → logprob: -16.250045776367188
    9. '.add' → logprob: -16.375045776367188
    10. ').' → logprob: -16.750045776367188

Token 148: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. 'd' → logprob: -16.375003814697266
    4. ' (' → logprob: -16.750003814697266
    5. '(
' → logprob: -19.000003814697266
    6. '(D' → logprob: -20.375003814697266
    7. '((' → logprob: -21.000003814697266
    8. '(s' → logprob: -21.250003814697266
    9. '
' → logprob: -21.750003814697266
    10. '(de' → logprob: -21.875003814697266

Token 149: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -14.00000286102295
    3. ' )' → logprob: -14.25000286102295
    4. '   ' → logprob: -14.62500286102295
    5. ')return' → logprob: -15.50000286102295
    6. ')

' → logprob: -17.250001907348633
    7. '}' → logprob: -17.375001907348633
    8. ' ' → logprob: -17.875001907348633
    9. ')#' → logprob: -17.875001907348633
    10. ')}' → logprob: -17.875001907348633

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05747520551085472
    2. '#' → logprob: -3.0574750900268555
    3. '<|end|>' → logprob: -5.1824750900268555
    4. '
' → logprob: -7.1824750900268555
    5. '    
' → logprob: -7.3074750900268555
    6. 'valid' → logprob: -7.3074750900268555
    7. ')' → logprob: -8.307475090026855
    8. ' ' → logprob: -8.307475090026855
    9. 'box' → logprob: -8.682475090026855
    10. '  ' → logprob: -9.432475090026855

Token 151: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1657610982656479
    2. '   ' → logprob: -2.4157609939575195
    3. 'block' → logprob: -3.5407609939575195
    4. 'box' → logprob: -4.4157609939575195
    5. 'sub' → logprob: -4.6657609939575195
    6. 'valid' → logprob: -5.0407609939575195
    7. ' #' → logprob: -6.2907609939575195
    8. 'square' → logprob: -6.9157609939575195
    9. '
' → logprob: -7.0407609939575195
    10. '    
' → logprob: -7.4157609939575195

Token 152: ' compter' (ID: 81694)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.6134741902351379
    2. '#' → logprob: -1.1134741306304932
    3. 'box' → logprob: -2.738474130630493
    4. 'sub' → logprob: -2.988474130630493
    5. ' block' → logprob: -5.488474369049072
    6. 'for' → logprob: -5.488474369049072
    7. 'bloc' → logprob: -6.363474369049072
    8. 'square' → logprob: -6.613474369049072
    9. '   ' → logprob: -7.988474369049072
    10. 'cube' → logprob: -8.488473892211914

Token 153: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1475515365600586
    2. 'les' → logprob: -2.0225515365600586
    3. '_' → logprob: -5.397551536560059
    4. '#' → logprob: -9.647551536560059
    5. '<|end|>' → logprob: -9.647551536560059
    6. ' ' → logprob: -10.147551536560059
    7. '(' → logprob: -10.272551536560059
    8. 'Les' → logprob: -11.022551536560059
    9. '```' → logprob: -11.147551536560059
    10. 'occ' → logprob: -11.522551536560059

Token 154: ' occurrences' (ID: 108073)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.08683016896247864
    2. 'car' → logprob: -3.9618301391601562
    3. ' occurrences' → logprob: -4.461830139160156
    4. 'oc' → logprob: -4.711830139160156
    5. 'occur' → logprob: -4.711830139160156
    6. ' blocs' → logprob: -4.961830139160156
    7. 'bl' → logprob: -5.586830139160156
    8. ' ' → logprob: -5.961830139160156
    9. 'l' → logprob: -6.086830139160156
    10. 'bloc' → logprob: -6.086830139160156

Token 155: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.4313039779663086
    2. ' dans' → logprob: -1.0563039779663086
    3. 'des' → logprob: -6.681303977966309
    4. ' des' → logprob: -7.556303977966309
    5. '_' → logprob: -8.306303977966309
    6. '   ' → logprob: -9.306303977966309
    7. ' ' → logprob: -9.431303977966309
    8. '#' → logprob: -9.931303977966309
    9. '<|end|>' → logprob: -9.931303977966309
    10. 'Dans' → logprob: -10.056303977966309

Token 156: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5256662964820862
    2. 'les' → logprob: -0.9006662964820862
    3. '#' → logprob: -6.775666236877441
    4. ' ' → logprob: -7.775666236877441
    5. 'Les' → logprob: -8.025666236877441
    6. '_' → logprob: -8.650666236877441
    7. 's' → logprob: -10.150666236877441
    8. '3' → logprob: -10.275666236877441
    9. '()' → logprob: -10.275666236877441
    10. ' ' → logprob: -10.400666236877441

Token 157: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.739751935005188
    2. ' blocs' → logprob: -1.364751935005188
    3. 'blocks' → logprob: -2.1147518157958984
    4. ' blocks' → logprob: -3.3647518157958984
    5. 'car' → logprob: -3.4897518157958984
    6. 'c' → logprob: -3.7397518157958984
    7. '3' → logprob: -4.489751815795898
    8. 'regions' → logprob: -4.489751815795898
    9. 'boxes' → logprob: -5.489751815795898
    10. 's' → logprob: -5.614751815795898

Token 158: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33898305892944336
    2. 'block' → logprob: -1.4639830589294434
    3. '
' → logprob: -3.5889830589294434
    4. ' block' → logprob: -4.088983058929443
    5. 'blocks' → logprob: -4.838983058929443
    6. '    
' → logprob: -6.463983058929443
    7. ' ' → logprob: -7.338983058929443
    8. ' blocks' → logprob: -7.963983058929443
    9. '(block' → logprob: -8.213983535766602
    10. '  ' → logprob: -8.713983535766602

Token 159: '3' (ID: 18)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.6572148203849792
    2. '   ' → logprob: -1.407214879989624
    3. 'blocks' → logprob: -1.782214879989624
    4. '
' → logprob: -2.907214879989624
    5. ' block' → logprob: -5.407214641571045
    6. ' blocks' → logprob: -6.032214641571045
    7. '    
' → logprob: -6.407214641571045
    8. '(block' → logprob: -6.657214641571045
    9. '_blocks' → logprob: -7.157214641571045
    10. ' ' → logprob: -7.282214641571045

Token 160: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01700768619775772
    2. ',' → logprob: -4.892007827758789
    3. '*' → logprob: -5.142007827758789
    4. '#' → logprob: -6.392007827758789
    5. ')' → logprob: -7.517007827758789
    6. ' ,' → logprob: -7.892007827758789
    7. '3' → logprob: -8.392007827758789
    8. ' x' → logprob: -8.767007827758789
    9. 'for' → logprob: -8.767007827758789
    10. ' ' → logprob: -9.267007827758789

Token 161: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.000007629394531
    3. '```' → logprob: -14.375007629394531
    4. 'for' → logprob: -14.750007629394531
    5. '   ' → logprob: -16.68750762939453
    6. ' ' → logprob: -17.00000762939453
    7. 'x' → logprob: -17.12500762939453
    8. '​' → logprob: -17.37500762939453
    9. '#' → logprob: -17.37500762939453
    10. '...' → logprob: -17.68750762939453

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31494957208633423
    2. '   ' → logprob: -1.3149495124816895
    3. '    
' → logprob: -6.6899495124816895
    4. '  
' → logprob: -8.814949989318848
    5. '   
' → logprob: -9.939949989318848
    6. ' ' → logprob: -10.064949989318848
    7. '3' → logprob: -10.439949989318848
    8. 'block' → logprob: -10.439949989318848
    9. ' 
' → logprob: -10.814949989318848
    10. ' block' → logprob: -10.814949989318848

Token 163: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28590768575668335
    2. '   ' → logprob: -1.4109077453613281
    3. '    
' → logprob: -5.660907745361328
    4. 'block' → logprob: -7.410907745361328
    5. 'blocks' → logprob: -8.660907745361328
    6. '3' → logprob: -9.285907745361328
    7. '  
' → logprob: -9.285907745361328
    8. ' block' → logprob: -10.035907745361328
    9. 'for' → logprob: -10.035907745361328
    10. '   
' → logprob: -10.160907745361328

Token 164: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.018995964899659157
    2. ' block' → logprob: -4.018995761871338
    3. 'box' → logprob: -8.143996238708496
    4. 'blk' → logprob: -8.768996238708496
    5. 'blocks' → logprob: -9.143996238708496
    6. 'bloc' → logprob: -9.143996238708496
    7. '   ' → logprob: -9.518996238708496
    8. 'for' → logprob: -10.018996238708496
    9. 'sub' → logprob: -10.518996238708496
    10. '3' → logprob: -12.143996238708496

Token 165: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.007528778165578842
    2. '_' → logprob: -5.007528781890869
    3. '_s' → logprob: -7.632528781890869
    4. 's' → logprob: -8.257528305053711
    5. ' _' → logprob: -10.132528305053711
    6. '_sizes' → logprob: -11.882528305053711
    7. '_c' → logprob: -12.757528305053711
    8. '__' → logprob: -12.882528305053711
    9. '_count' → logprob: -13.507528305053711
    10. '```' → logprob: -13.882528305053711

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809163346886635
    2. '=' → logprob: -3.2880916595458984
    3. '=[]' → logprob: -9.913091659545898
    4. '=[]
' → logprob: -14.413091659545898
    5. ' ' → logprob: -16.1630916595459
    6. '=[' → logprob: -17.5380916595459
    7. '[]' → logprob: -17.6630916595459
    8. '=[]
' → logprob: -18.4130916595459
    9. ' =[' → logprob: -18.5380916595459
    10. 's' → logprob: -18.6630916595459

Token 167: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029254881665110588
    2. '[]
' → logprob: -4.029254913330078
    3. ' []' → logprob: -4.529254913330078
    4. ' []
' → logprob: -8.279254913330078
    5. '[' → logprob: -14.029254913330078
    6. '[]

' → logprob: -15.779254913330078
    7. '[]}' → logprob: -16.904254913330078
    8. '[][]' → logprob: -17.154254913330078
    9. '{}' → logprob: -17.904254913330078
    10. ' [' → logprob: -18.029254913330078

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16059565544128418
    2. 'for' → logprob: -1.9105956554412842
    3. ' for' → logprob: -8.160595893859863
    4. '[]' → logprob: -9.785595893859863
    5. '[]
' → logprob: -10.910595893859863
    6. '    
' → logprob: -12.160595893859863
    7. '
' → logprob: -13.035595893859863
    8. '[' → logprob: -13.285595893859863
    9. '[
' → logprob: -13.910595893859863
    10. '  ' → logprob: -15.160595893859863

Token 169: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020008347928524017
    2. ' for' → logprob: -9.000200271606445
    3. '   ' → logprob: -9.500200271606445
    4. '[]' → logprob: -13.750200271606445
    5. '[]
' → logprob: -15.125200271606445
    6. '[
' → logprob: -15.250200271606445
    7. '[' → logprob: -15.750200271606445
    8. '
' → logprob: -17.250200271606445
    9. '    
' → logprob: -17.375200271606445
    10. '	for' → logprob: -17.875200271606445

Token 170: ' bi' (ID: 4424)
  Prédit: ' bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bi' → logprob: -0.6671657562255859
    2. 'bi' → logprob: -1.042165756225586
    3. 'i' → logprob: -2.542165756225586
    4. 'block' → logprob: -3.417165756225586
    5. ' block' → logprob: -4.667165756225586
    6. ' i' → logprob: -5.042165756225586
    7. 'b' → logprob: -5.792165756225586
    8. 'bx' → logprob: -6.292165756225586
    9. 'x' → logprob: -7.792165756225586
    10. 'br' → logprob: -7.917165756225586

Token 171: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5393496751785278
    2. ' in' → logprob: -1.0393496751785278
    3. 'in' → logprob: -2.7893495559692383
    4. 'x' → logprob: -7.289349555969238
    5. '0' → logprob: -7.539349555969238
    6. '_' → logprob: -8.664349555969238
    7. 'nt' → logprob: -9.414349555969238
    8. ' ' → logprob: -10.164349555969238
    9. 'range' → logprob: -10.164349555969238
    10. 'i' → logprob: -10.914349555969238

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '[' → logprob: -16.251928329467773
    4. '(range' → logprob: -19.126928329467773
    5. '0' → logprob: -19.751928329467773
    6. '	range' → logprob: -20.126928329467773
    7. '   ' → logprob: -20.876928329467773
    8. ' ' → logprob: -21.001928329467773
    9. '(' → logprob: -21.626928329467773
    10. 'Range' → logprob: -22.501928329467773

Token 173: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011066329665482044
    2. '3' → logprob: -4.511066436767578
    3. '0' → logprob: -11.011066436767578
    4. ' (' → logprob: -13.636066436767578
    5. ' ' → logprob: -14.261066436767578
    6. '   ' → logprob: -16.261066436767578
    7. '(
' → logprob: -17.011066436767578
    8. '((' → logprob: -17.511066436767578
    9. '```' → logprob: -18.386066436767578
    10. '9' → logprob: -19.011066436767578

Token 174: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009312293259426951
    2. '0' → logprob: -7.000931262969971
    3. ' ' → logprob: -10.875930786132812
    4. '(' → logprob: -15.250930786132812
    5. '   ' → logprob: -15.500930786132812
    6. '```' → logprob: -16.250930786132812
    7. '9' → logprob: -16.375930786132812
    8. '  ' → logprob: -17.500930786132812
    9. '03' → logprob: -17.875930786132812
    10. '
' → logprob: -17.875930786132812

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5235261917114258
    2. '):
' → logprob: -0.8985261917114258
    3. ':' → logprob: -9.023526191711426
    4. ')' → logprob: -9.148526191711426
    5. '   ' → logprob: -9.398526191711426
    6. '3' → logprob: -9.898526191711426
    7. '*' → logprob: -10.898526191711426
    8. '):
' → logprob: -12.273526191711426
    9. ':
' → logprob: -12.523526191711426
    10. ' ' → logprob: -12.898526191711426

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019599322229623795
    2. '   ' → logprob: -4.644599437713623
    3. ' for' → logprob: -5.269599437713623
    4. 'for' → logprob: -5.394599437713623
    5. '	   ' → logprob: -10.394598960876465
    6. '    ' → logprob: -11.019598960876465
    7. '	for' → logprob: -11.269598960876465
    8. ' ' → logprob: -11.269598960876465
    9. '     ' → logprob: -11.894598960876465
    10. '    
' → logprob: -12.144598960876465

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5515377521514893
    2. 'for' (adapté à ' for') → logprob: -1.0515377521514893
    3. '   ' → logprob: -3.3015377521514893
    4. '       ' → logprob: -3.3015377521514893
    5. ' ' → logprob: -7.30153751373291
    6. '	for' → logprob: -9.05153751373291
    7. 'block' → logprob: -9.92653751373291
    8. ' block' → logprob: -10.80153751373291
    9. '    ' → logprob: -12.17653751373291
    10. '  ' → logprob: -12.17653751373291

Token 178: ' bj' (ID: 82702)
  Prédit: 'bj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bj' → logprob: -0.011048762127757072
    2. ' bj' → logprob: -4.511048793792725
    3. 'bb' → logprob: -14.386048316955566
    4. 'block' → logprob: -15.886048316955566
    5. 'bk' → logprob: -16.511049270629883
    6. 'b' → logprob: -17.011049270629883
    7. 'bx' → logprob: -17.136049270629883
    8. 'Bj' → logprob: -17.136049270629883
    9. '
' → logprob: -17.261049270629883
    10. ' ' → logprob: -17.636049270629883

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863550886511803
    2. 'in' → logprob: -3.048635482788086
    3. 'range' → logprob: -10.048635482788086
    4. ' ' → logprob: -13.298635482788086
    5. '        ' → logprob: -14.048635482788086
    6. '    ' → logprob: -14.048635482788086
    7. ' range' → logprob: -14.048635482788086
    8. 'n' → logprob: -15.298635482788086
    9. '   ' → logprob: -15.923635482788086
    10. '0' → logprob: -15.923635482788086

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196846812963486
    2. ' range' → logprob: -2.8119685649871826
    3. '(range' → logprob: -14.686968803405762
    4. '3' → logprob: -15.436968803405762
    5. ' ' → logprob: -17.311967849731445
    6. '(' → logprob: -17.561967849731445
    7. 'in' → logprob: -17.686967849731445
    8. '0' → logprob: -18.061967849731445
    9. '[' → logprob: -18.686967849731445
    10. '   ' → logprob: -18.936967849731445

Token 181: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.246537173457909e-06
    2. 'range' → logprob: -13.000003814697266
    3. '3' → logprob: -13.250003814697266
    4. ' (' → logprob: -16.750003814697266
    5. '(
' → logprob: -18.125003814697266
    6. '(range' → logprob: -18.625003814697266
    7. ' range' → logprob: -19.250003814697266
    8. 'in' → logprob: -20.875003814697266
    9. '   ' → logprob: -21.000003814697266
    10. '4' → logprob: -21.375003814697266

Token 182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. 'range' → logprob: -14.875008583068848
    4. '   ' → logprob: -15.500008583068848
    5. '0' → logprob: -16.00000762939453
    6. '(' → logprob: -16.12500762939453
    7. 'for' → logprob: -16.43750762939453
    8. '
' → logprob: -16.50000762939453
    9. ')' → logprob: -16.87500762939453
    10. '```' → logprob: -17.06250762939453

Token 183: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6971077919006348
    2. '):' → logprob: -0.6971077919006348
    3. ':' → logprob: -5.572107791900635
    4. ':
' → logprob: -9.572107315063477
    5. '       ' → logprob: -10.697107315063477
    6. '   ' → logprob: -11.072107315063477
    7. '           ' → logprob: -11.197107315063477
    8. ')' → logprob: -11.447107315063477
    9. '):

' → logprob: -12.572107315063477
    10. '```' → logprob: -12.947107315063477

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03267331421375275
    2. '           ' → logprob: -3.7826733589172363
    3. '   ' → logprob: -5.032673358917236
    4. 'd' → logprob: -6.157673358917236
    5. ' block' → logprob: -8.407672882080078
    6. ' d' → logprob: -8.532672882080078
    7. 'block' → logprob: -8.907672882080078
    8. '        
' → logprob: -10.532672882080078
    9. '    
' → logprob: -10.907672882080078
    10. '    ' → logprob: -11.032672882080078

Token 185: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.002454726491123438
    2. ' d' → logprob: -6.12745475769043
    3. '           ' → logprob: -8.62745475769043
    4. '       ' → logprob: -10.25245475769043
    5. '   ' → logprob: -10.87745475769043
    6. 'block' → logprob: -11.00245475769043
    7. '               ' → logprob: -11.25245475769043
    8. ' ' → logprob: -13.50245475769043
    9. 'count' → logprob: -13.62745475769043
    10. ' block' → logprob: -14.25245475769043

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026749968528748
    2. ' =' → logprob: -2.3502674102783203
    3. '={}' → logprob: -9.72526741027832
    4. '={' → logprob: -14.60026741027832
    5. ' ' → logprob: -15.10026741027832
    6. '=[]' → logprob: -16.47526741027832
    7. '={}
' → logprob: -16.47526741027832
    8. '=}' → logprob: -17.10026741027832
    9. ' ={' → logprob: -17.22526741027832
    10. '{}' → logprob: -17.85026741027832

Token 187: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0003365350130479783
    2. ' {}' → logprob: -8.000336647033691
    3. '{}
' → logprob: -13.875336647033691
    4. ' ' → logprob: -17.500335693359375
    5. '={}' → logprob: -17.500335693359375
    6. '{})' → logprob: -17.625335693359375
    7. '{}

' → logprob: -18.125335693359375
    8. ' {}
' → logprob: -18.875335693359375
    9. '{},' → logprob: -19.500335693359375
    10. '  ' → logprob: -19.500335693359375

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.051066520740278e-05
    2. 'for' → logprob: -10.250060081481934
    3. '       ' → logprob: -11.250060081481934
    4. ' for' → logprob: -12.625060081481934
    5. '
' → logprob: -13.000060081481934
    6. '		' → logprob: -13.000060081481934
    7. '	       ' → logprob: -13.750060081481934
    8. '               ' → logprob: -13.875060081481934
    9. '          ' → logprob: -14.875060081481934
    10. '   ' → logprob: -15.000060081481934

Token 189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02599940076470375
    2. '           ' → logprob: -3.7759993076324463
    3. ' for' → logprob: -5.900999546051025
    4. '   ' → logprob: -12.150999069213867
    5. '       ' → logprob: -12.400999069213867
    6. '	for' → logprob: -13.025999069213867
    7. '               ' → logprob: -13.900999069213867
    8. '
' → logprob: -15.025999069213867
    9. '		' → logprob: -15.650999069213867
    10. ' ' → logprob: -15.650999069213867

Token 190: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025891728699207306
    2. 'ii' → logprob: -3.9008917808532715
    3. 'di' → logprob: -5.5258917808532715
    4. ' i' → logprob: -7.5258917808532715
    5. 'ti' → logprob: -7.6508917808532715
    6. 'oi' → logprob: -9.150891304016113
    7. 'x' → logprob: -10.275891304016113
    8. ' ii' → logprob: -10.400891304016113
    9. 'iii' → logprob: -10.525891304016113
    10. 'xi' → logprob: -10.650891304016113

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020569339394569397
    2. 'in' → logprob: -3.895569324493408
    3. ' bi' → logprob: -11.520569801330566
    4. 'bi' → logprob: -12.020569801330566
    5. ' ' → logprob: -12.395569801330566
    6. 'range' → logprob: -12.895569801330566
    7. ' range' → logprob: -13.770569801330566
    8. '            ' → logprob: -14.395569801330566
    9. '3' → logprob: -14.645569801330566
    10. 'b' → logprob: -14.770569801330566

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022585332393646
    2. ' range' → logprob: -1.9102258682250977
    3. 'bi' → logprob: -13.910225868225098
    4. '3' → logprob: -14.785225868225098
    5. '(range' → logprob: -15.410225868225098
    6. ' ' → logprob: -15.910225868225098
    7. ' bi' → logprob: -17.03522491455078
    8. 'block' → logprob: -17.41022491455078
    9. '	range' → logprob: -17.41022491455078
    10. '   ' → logprob: -17.66022491455078

Token 193: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.55916428565979
    2. '(' → logprob: -1.05916428565979
    3. 'range' → logprob: -3.05916428565979
    4. ' range' → logprob: -3.43416428565979
    5. 'bi' → logprob: -6.934164047241211
    6. '(range' → logprob: -6.934164047241211
    7. ' bi' → logprob: -8.309164047241211
    8. ' (' → logprob: -9.434164047241211
    9. 'b' → logprob: -10.059164047241211
    10. '(block' → logprob: -10.809164047241211

Token 194: '3' (ID: 18)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9599040746688843
    2. '(' → logprob: -1.8349040746688843
    3. '(b' → logprob: -1.8349040746688843
    4. '3' → logprob: -1.8349040746688843
    5. ' range' → logprob: -2.459904193878174
    6. 'bi' → logprob: -3.084904193878174
    7. ' bi' → logprob: -5.834904193878174
    8. 'b' → logprob: -6.459904193878174
    9. ' ' → logprob: -6.584904193878174
    10. ' b' → logprob: -7.709904193878174

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44671687483787537
    2. '):
' → logprob: -1.5717169046401978
    3. '*' → logprob: -1.9467169046401978
    4. '*j' → logprob: -6.071716785430908
    5. '           ' → logprob: -6.446716785430908
    6. ' *' → logprob: -6.571716785430908
    7. '*b' → logprob: -6.571716785430908
    8. '               ' → logprob: -6.821716785430908
    9. '+' → logprob: -7.571716785430908
    10. '(' → logprob: -8.321717262268066

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008019083179533482
    2. '<|end|>' → logprob: -5.883018970489502
    3. '                ' → logprob: -6.758018970489502
    4. '           ' → logprob: -7.258018970489502
    5. '       ' → logprob: -7.258018970489502
    6. '            ' → logprob: -7.383018970489502
    7. ' for' → logprob: -7.508018970489502
    8. ' ' → logprob: -8.00801944732666
    9. 'for' → logprob: -8.75801944732666
    10. '			' → logprob: -8.75801944732666

Token 197: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20135194063186646
    2. 'for' (adapté à ' for') → logprob: -2.2013518810272217
    3. '                   ' → logprob: -2.8263518810272217
    4. '   ' → logprob: -5.326352119445801
    5. ' ' → logprob: -5.451352119445801
    6. ' ' → logprob: -6.701352119445801
    7. '               ' → logprob: -6.951352119445801
    8. '                       ' → logprob: -7.951352119445801
    9. '       ' → logprob: -8.9513521194458
    10. '                ' → logprob: -9.0763521194458

Token 198: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01605384051799774
    2. ' j' → logprob: -4.141053676605225
    3. 'k' → logprob: -11.516054153442383
    4. '   ' → logprob: -13.141054153442383
    5. '```' → logprob: -13.141054153442383
    6. ' ' → logprob: -13.391054153442383
    7. '	j' → logprob: -13.766054153442383
    8. 'jj' → logprob: -14.266054153442383
    9. '    ' → logprob: -14.516054153442383
    10. 'x' → logprob: -15.266054153442383

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47409719228744507
    2. 'in' → logprob: -0.9740971922874451
    3. '                ' → logprob: -12.09909725189209
    4. '               ' → logprob: -12.34909725189209
    5. ' ' → logprob: -12.72409725189209
    6. '                   ' → logprob: -12.72409725189209
    7. 'range' → logprob: -13.84909725189209
    8. '                    ' → logprob: -14.59909725189209
    9. '<|end|>' → logprob: -14.72409725189209
    10. '```' → logprob: -15.09909725189209

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751179739832878
    2. ' range' → logprob: -3.5297510623931885
    3. '(range' → logprob: -14.90475082397461
    4. '3' → logprob: -15.52975082397461
    5. ' ' → logprob: -16.65475082397461
    6. '(' → logprob: -17.40475082397461
    7. '	range' → logprob: -17.40475082397461
    8. '[' → logprob: -17.65475082397461
    9. '   ' → logprob: -17.77975082397461
    10. '    ' → logprob: -19.40475082397461

Token 201: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009833062067627907
    2. '3' → logprob: -4.634832859039307
    3. 'range' → logprob: -9.634833335876465
    4. ' (' → logprob: -11.884833335876465
    5. ' ' → logprob: -13.509833335876465
    6. '               ' → logprob: -13.884833335876465
    7. '                   ' → logprob: -14.634833335876465
    8. ' range' → logprob: -14.759833335876465
    9. '   ' → logprob: -15.134833335876465
    10. '(
' → logprob: -15.259833335876465

Token 202: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.630610641877865e-06
    2. 'range' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.500006675720215
    4. '           ' → logprob: -15.375006675720215
    5. '               ' → logprob: -15.500006675720215
    6. '   ' → logprob: -15.875006675720215
    7. ' range' → logprob: -16.5000057220459
    8. '                   ' → logprob: -16.6250057220459
    9. '(' → logprob: -16.8750057220459
    10. '```' → logprob: -17.1250057220459

Token 203: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.33920320868492126
    2. '                   ' → logprob: -1.8392032384872437
    3. '):' → logprob: -2.339203119277954
    4. ':' → logprob: -3.964203119277954
    5. ':
' → logprob: -4.714203357696533
    6. '               ' → logprob: -6.339203357696533
    7. '                       ' → logprob: -7.339203357696533
    8. ')' → logprob: -8.214202880859375
    9. '                    ' → logprob: -8.464202880859375
    10. '```' → logprob: -8.589202880859375

Token 204: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007366903126239777
    2. ' num' → logprob: -5.757367134094238
    3. 'num' → logprob: -6.257367134094238
    4. '                    
' → logprob: -7.507367134094238
    5. '                    ' → logprob: -7.882367134094238
    6. ' ' → logprob: -8.257367134094238
    7. '                       ' → logprob: -8.257367134094238
    8. '               ' → logprob: -8.507367134094238
    9. '   ' → logprob: -9.257367134094238
    10. '                ' → logprob: -9.507367134094238

Token 205: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.018874429166316986
    2. ' num' → logprob: -4.018874645233154
    3. 'x' → logprob: -8.143874168395996
    4. '                   ' → logprob: -8.393874168395996
    5. 'row' → logprob: -9.393874168395996
    6. 'idx' → logprob: -10.268874168395996
    7. '   ' → logprob: -10.768874168395996
    8. ' ' → logprob: -11.018874168395996
    9. ' x' → logprob: -11.393874168395996
    10. 'n' → logprob: -11.518874168395996

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.501928329467773
    4. ' =
' → logprob: -16.751928329467773
    5. '=
' → logprob: -17.626928329467773
    6. '                    ' → logprob: -17.876928329467773
    7. '                ' → logprob: -18.126928329467773
    8. 'num' → logprob: -18.751928329467773
    9. '=

' → logprob: -18.876928329467773
    10. '    ' → logprob: -19.251928329467773

Token 207: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1602255403995514
    2. ' grid' → logprob: -1.910225510597229
    3. '   ' → logprob: -14.285225868225098
    4. '	grid' → logprob: -15.660225868225098
    5. '(grid' → logprob: -15.910225868225098
    6. ' ' → logprob: -15.910225868225098
    7. 'Grid' → logprob: -16.41022491455078
    8. ' ' → logprob: -16.91022491455078
    9. '.grid' → logprob: -17.03522491455078
    10. 'gr' → logprob: -17.16022491455078

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '3' → logprob: -13.750003814697266
    3. '   ' → logprob: -13.875003814697266
    4. '[b' → logprob: -14.250003814697266
    5. 'bi' → logprob: -15.125003814697266
    6. ' [' → logprob: -15.250003814697266
    7. '                   ' → logprob: -15.375003814697266
    8. '               ' → logprob: -15.375003814697266
    9. '[i' → logprob: -16.000003814697266
    10. '           ' → logprob: -16.250003814697266

Token 209: 'bi' (ID: 6738)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.47430285811424255
    2. 'bi' → logprob: -0.9743028879165649
    3. '[' → logprob: -8.974303245544434
    4. ' bi' → logprob: -9.849303245544434
    5. ' ' → logprob: -10.849303245544434
    6. 'b' → logprob: -11.349303245544434
    7. '   ' → logprob: -11.974303245544434
    8. 'block' → logprob: -12.849303245544434
    9. 'Bi' → logprob: -13.974303245544434
    10. '                   ' → logprob: -13.974303245544434

Token 210: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -9.639096970204264e-05
    2. ' *' → logprob: -9.250096321105957
    3. '][' → logprob: -15.625096321105957
    4. '3' → logprob: -17.500097274780273
    5. '[' → logprob: -17.625097274780273
    6. '*i' → logprob: -18.000097274780273
    7. '```' → logprob: -18.250097274780273
    8. '[i' → logprob: -18.375097274780273
    9. '   ' → logprob: -18.375097274780273
    10. 'i' → logprob: -19.250097274780273

Token 211: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.375046730041504
    4. '
' → logprob: -16.375045776367188
    5. '           ' → logprob: -16.500045776367188
    6. '```' → logprob: -18.125045776367188
    7. '               ' → logprob: -18.250045776367188
    8. '                   ' → logprob: -18.500045776367188
    9. '       ' → logprob: -18.562545776367188
    10. '  ' → logprob: -18.875045776367188

Token 212: '+i' (ID: 49691)
  Prédit: '+j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.5047741532325745
    2. '+' → logprob: -1.2547740936279297
    3. ' +' → logprob: -2.2547740936279297
    4. '+i' → logprob: -5.12977409362793
    5. '+k' → logprob: -8.87977409362793
    6. '+b' → logprob: -9.00477409362793
    7. '][' → logprob: -9.12977409362793
    8. '+t' → logprob: -11.75477409362793
    9. '+y' → logprob: -12.50477409362793
    10. '+x' → logprob: -12.62977409362793

Token 213: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007700824644416571
    2. '[b' → logprob: -7.625770092010498
    3. ' ][' → logprob: -8.25076961517334
    4. '   ' → logprob: -11.37576961517334
    5. ']' → logprob: -12.50076961517334
    6. '       ' → logprob: -13.62576961517334
    7. '[j' → logprob: -14.37576961517334
    8. '         ' → logprob: -14.50076961517334
    9. '```' → logprob: -14.62576961517334
    10. '[' → logprob: -14.62576961517334

Token 214: 'bj' (ID: 80099)
  Prédit: 'bj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bj' → logprob: -5.676981345459353e-06
    2. ' bj' → logprob: -12.125005722045898
    3. '(b' → logprob: -16.2500057220459
    4. 'b' → logprob: -17.0000057220459
    5. '(' → logprob: -18.3750057220459
    6. '
' → logprob: -19.5000057220459
    7. '[b' → logprob: -19.8750057220459
    8. '3' → logprob: -21.1250057220459
    9. '/b' → logprob: -21.2500057220459
    10. '   ' → logprob: -21.2500057220459

Token 215: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.000158842682139948
    2. '3' → logprob: -8.75015926361084
    3. ' *' → logprob: -15.50015926361084
    4. '```' → logprob: -16.625158309936523
    5. '*j' → logprob: -17.625158309936523
    6. '*
' → logprob: -17.750158309936523
    7. ''*' → logprob: -18.000158309936523
    8. ']*' → logprob: -18.750158309936523
    9. '"*' → logprob: -18.875158309936523
    10. '**' → logprob: -19.250158309936523

Token 216: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. 'j' → logprob: -15.125014305114746
    4. '*' → logprob: -15.375014305114746
    5. '
' → logprob: -15.875014305114746
    6. '   ' → logprob: -15.875014305114746
    7. '(' → logprob: -15.875014305114746
    8. '+' → logprob: -17.062515258789062
    9. '                   ' → logprob: -17.062515258789062
    10. '```' → logprob: -17.062515258789062

Token 217: '+j' (ID: 71365)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12702617049217224
    2. '+j' → logprob: -2.127026081085205
    3. '3' → logprob: -9.627026557922363
    4. '+' → logprob: -11.002026557922363
    5. '*j' → logprob: -12.627026557922363
    6. ' j' → logprob: -12.752026557922363
    7. '```' → logprob: -12.752026557922363
    8. '*' → logprob: -12.877026557922363
    9. '_j' → logprob: -13.627026557922363
    10. ' +' → logprob: -14.252026557922363

Token 218: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014284446835517883
    2. ']
' → logprob: -4.264284610748291
    3. '                   ' → logprob: -9.639284133911133
    4. ' ]' → logprob: -10.389284133911133
    5. '']' → logprob: -12.139284133911133
    6. '               ' → logprob: -12.389284133911133
    7. '           ' → logprob: -12.389284133911133
    8. ']
' → logprob: -12.639284133911133
    9. ']

' → logprob: -13.139284133911133
    10. '       ' → logprob: -13.639284133911133

Token 219: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07074089348316193
    2. 'd' → logprob: -2.6957409381866455
    3. ' d' → logprob: -7.945740699768066
    4. '               ' → logprob: -8.695740699768066
    5. '           ' → logprob: -9.570740699768066
    6. '                  ' → logprob: -9.695740699768066
    7. '                       ' → logprob: -10.070740699768066
    8. '       ' → logprob: -10.570740699768066
    9. ' =' → logprob: -10.820740699768066
    10. '=' → logprob: -11.070740699768066

Token 220: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.01694476045668125
    2. ' d' → logprob: -4.141944885253906
    3. '                   ' → logprob: -7.016944885253906
    4. '               ' → logprob: -12.391944885253906
    5. '                       ' → logprob: -12.891944885253906
    6. '   ' → logprob: -13.141944885253906
    7. '           ' → logprob: -13.266944885253906
    8. '       ' → logprob: -13.891944885253906
    9. '                    ' → logprob: -14.516944885253906
    10. '                  ' → logprob: -14.516944885253906

Token 221: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -1.259079363080673e-05
    2. 'num' → logprob: -11.625012397766113
    3. '[' → logprob: -13.625012397766113
    4. ' [' → logprob: -13.750012397766113
    5. '[d' → logprob: -14.375012397766113
    6. 'd' → logprob: -14.875012397766113
    7. '=num' → logprob: -15.625012397766113
    8. '   ' → logprob: -17.00001335144043
    9. ' num' → logprob: -17.12501335144043
    10. '(num' → logprob: -17.12501335144043

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17765896022319794
    2. '=' → logprob: -1.9276589155197144
    3. ']=' → logprob: -4.177659034729004
    4. ' =' → logprob: -6.302659034729004
    5. ' ]' → logprob: -9.552659034729004
    6. 'd' → logprob: -10.427659034729004
    7. ')' → logprob: -11.802659034729004
    8. '[' → logprob: -12.802659034729004
    9. ']+=' → logprob: -12.802659034729004
    10. '']=' → logprob: -14.302659034729004

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234594456851482
    2. ' =' → logprob: -5.255234718322754
    3. '=d' → logprob: -14.255234718322754
    4. 'd' → logprob: -15.755234718322754
    5. '=
' → logprob: -19.005233764648438
    6. ')' → logprob: -19.255233764648438
    7. '[' → logprob: -19.380233764648438
    8. ']' → logprob: -19.505233764648438
    9. '=num' → logprob: -19.880233764648438
    10. ']=' → logprob: -19.880233764648438

Token 224: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01250989455729723
    2. ' d' → logprob: -4.387509822845459
    3. ' ' → logprob: -15.887510299682617
    4. '   ' → logprob: -16.137510299682617
    5. '
' → logprob: -17.012510299682617
    6. '	d' → logprob: -17.825010299682617
    7. '  ' → logprob: -17.887510299682617
    8. ' ' → logprob: -18.325010299682617
    9. '```' → logprob: -18.825010299682617
    10. '    ' → logprob: -18.887510299682617

Token 225: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -7.636475493200123e-05
    2. 'get' → logprob: -9.500076293945312
    3. '.' → logprob: -13.750076293945312
    4. ' .' → logprob: -14.750076293945312
    5. 'd' → logprob: -18.500076293945312
    6. '_get' → logprob: -19.000076293945312
    7. ' get' → logprob: -19.750076293945312
    8. '.setdefault' → logprob: -19.750076293945312
    9. '```' → logprob: -20.625076293945312
    10. '.Get' → logprob: -21.250076293945312

Token 226: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -7.64839569455944e-05
    2. 'num' → logprob: -9.500076293945312
    3. '[num' → logprob: -14.750076293945312
    4. ' (' → logprob: -15.125076293945312
    5. ' num' → logprob: -15.125076293945312
    6. '<num' → logprob: -15.250076293945312
    7. ',num' → logprob: -15.500076293945312
    8. '(' → logprob: -15.750076293945312
    9. '$num' → logprob: -17.250076293945312
    10. '(n' → logprob: -17.500076293945312

Token 227: ',' (ID: 11)
  Prédit: ',num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.0036760864313691854
    2. ',' → logprob: -5.628675937652588
    3. 'num' → logprob: -10.003676414489746
    4. '(num' → logprob: -11.253676414489746
    5. '[num' → logprob: -11.378676414489746
    6. ' ,' → logprob: -12.128676414489746
    7. ' num' → logprob: -15.128676414489746
    8. '<num' → logprob: -16.12867546081543
    9. '	num' → logprob: -16.50367546081543
    10. '$num' → logprob: -16.62867546081543

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019477950409054756
    2. 'd' → logprob: -6.25194787979126
    3. ' ' → logprob: -11.001947402954102
    4. ' d' → logprob: -13.001947402954102
    5. 'num' → logprob: -15.376947402954102
    6. '
' → logprob: -17.0019474029541
    7. '```' → logprob: -18.0019474029541
    8. '   ' → logprob: -18.7519474029541
    9. ')d' → logprob: -19.0019474029541
    10. '+' → logprob: -19.8769474029541

Token 229: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.01017899438738823
    2. ')' → logprob: -4.635179042816162
    3. '+' → logprob: -8.010178565979004
    4. ']+' → logprob: -9.885178565979004
    5. '}+' → logprob: -10.760178565979004
    6. ',' → logprob: -11.135178565979004
    7. ',+' → logprob: -13.635178565979004
    8. ')+(' → logprob: -14.135178565979004
    9. ' )' → logprob: -14.260178565979004
    10. '")+' → logprob: -14.385178565979004

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.922563963802531e-05
    2. ' ' → logprob: -9.750079154968262
    3. 'd' → logprob: -10.875079154968262
    4. '+' → logprob: -14.125079154968262
    5. ' d' → logprob: -14.750079154968262
    6. '```' → logprob: -15.375079154968262
    7. ')' → logprob: -15.625079154968262
    8. '   ' → logprob: -15.625079154968262
    9. ')d' → logprob: -16.500080108642578
    10. '
' → logprob: -17.375080108642578

Token 231: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25322967767715454
    2. '               ' → logprob: -1.6282296180725098
    3. '       ' → logprob: -4.37822961807251
    4. '            ' → logprob: -5.00322961807251
    5. '		' → logprob: -6.62822961807251
    6. '          ' → logprob: -6.75322961807251
    7. '                ' → logprob: -7.00322961807251
    8. '            
' → logprob: -7.00322961807251
    9. '<|end|>' → logprob: -7.37822961807251
    10. '        ' → logprob: -7.75322961807251

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003977800370194018
    2. '               ' → logprob: -8.250397682189941
    3. 'block' → logprob: -9.125397682189941
    4. '       ' → logprob: -11.000397682189941
    5. '		' → logprob: -12.375397682189941
    6. '          ' → logprob: -13.250397682189941
    7. '   ' → logprob: -13.625397682189941
    8. '                   ' → logprob: -13.875397682189941
    9. '            ' → logprob: -14.125397682189941
    10. ' block' → logprob: -14.250397682189941

Token 233: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.030115028843283653
    2. '           ' → logprob: -3.6551151275634766
    3. ' block' → logprob: -6.155115127563477
    4. '       ' → logprob: -6.530115127563477
    5. '   ' → logprob: -8.655115127563477
    6. '               ' → logprob: -10.405115127563477
    7. '	block' → logprob: -11.655115127563477
    8. '
' → logprob: -12.655115127563477
    9. ' ' → logprob: -13.030115127563477
    10. '(block' → logprob: -13.780115127563477

Token 234: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -5.824579784530215e-05
    2. 's' → logprob: -10.0000581741333
    3. '.append' → logprob: -11.5000581741333
    4. '```' → logprob: -14.7500581741333
    5. '\' → logprob: -14.8750581741333
    6. 'append' → logprob: -15.2500581741333
    7. '_codes' → logprob: -15.3750581741333
    8. 'counts' → logprob: -15.8750581741333
    9. '_append' → logprob: -16.000059127807617
    10. '_scores' → logprob: -16.000059127807617

Token 235: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001302374730585143
    2. '.' → logprob: -9.000130653381348
    3. 'append' → logprob: -12.500130653381348
    4. '.app' → logprob: -13.375130653381348
    5. '.Append' → logprob: -14.750130653381348
    6. ' .' → logprob: -15.125130653381348
    7. '.push' → logprob: -15.125130653381348
    8. '.add' → logprob: -15.625130653381348
    9. '.ap' → logprob: -15.625130653381348
    10. '.extend' → logprob: -16.87512969970703

Token 236: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. ' (' → logprob: -17.375
    4. '(
' → logprob: -20.5
    5. 'd' → logprob: -20.75
    6. '((' → logprob: -21.625
    7. '(D' → logprob: -22.125
    8. '(de' → logprob: -22.875
    9. '(b' → logprob: -23.875
    10. '(s' → logprob: -24.125

Token 237: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.625008583068848
    4. '   ' → logprob: -15.750008583068848
    5. ' ' → logprob: -16.750009536743164
    6. ')

' → logprob: -17.500009536743164
    7. ')#' → logprob: -17.625009536743164
    8. ')return' → logprob: -17.750009536743164
    9. ')}' → logprob: -17.875009536743164
    10. '}' → logprob: -18.000009536743164

Token 238: '   ' (ID: 271)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.04996544122695923
    2. '   ' → logprob: -3.5499653816223145
    3. 'result' → logprob: -4.5499653816223145
    4. 'results' → logprob: -5.7999653816223145
    5. 'for' → logprob: -6.6749653816223145
    6. 'errors' → logprob: -7.0499653816223145
    7. 'res' → logprob: -7.0499653816223145
    8. 'correct' → logprob: -7.5499653816223145
    9. 'invalid' → logprob: -7.5499653816223145
    10. 'answer' → logprob: -7.6749653816223145

Token 239: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.03499592840671539
    2. 'result' → logprob: -4.034996032714844
    3. 'results' → logprob: -5.409996032714844
    4. '   ' → logprob: -5.659996032714844
    5. 'res' → logprob: -6.284996032714844
    6. 'answer' → logprob: -6.534996032714844
    7. 'errors' → logprob: -7.159996032714844
    8. 'for' → logprob: -7.284996032714844
    9. 'invalid' → logprob: -7.284996032714844
    10. 'answers' → logprob: -7.284996032714844

Token 240: ' checker' (ID: 75924)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.039845384657382965
    2. 'result' → logprob: -4.4148454666137695
    3. 'for' → logprob: -4.5398454666137695
    4. 'possible' → logprob: -5.6648454666137695
    5. 'res' → logprob: -6.1648454666137695
    6. 'def' → logprob: -6.5398454666137695
    7. 'is' → logprob: -6.6648454666137695
    8. 'correct' → logprob: -6.7898454666137695
    9. 'found' → logprob: -7.0398454666137695
    10. '#' → logprob: -7.2898454666137695

Token 241: ' chaque' (ID: 21194)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.2712559700012207
    2. ' valid' → logprob: -1.5212559700012207
    3. '   ' → logprob: -4.521255970001221
    4. ' for' → logprob: -6.271255970001221
    5. 'for' → logprob: -6.396255970001221
    6. 'result' → logprob: -6.896255970001221
    7. ' is' → logprob: -8.021255493164062
    8. 'invalid' → logprob: -8.021255493164062
    9. ' result' → logprob: -8.146255493164062
    10. 'answer' → logprob: -8.146255493164062

Token 242: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6055058836936951
    2. ' i' → logprob: -1.2305059432983398
    3. ' cell' → logprob: -2.48050594329834
    4. 'cell' → logprob: -2.73050594329834
    5. 'num' → logprob: -4.85550594329834
    6. ' num' → logprob: -6.98050594329834
    7. 'row' → logprob: -6.98050594329834
    8. ' cellule' → logprob: -6.98050594329834
    9. ' ' → logprob: -7.60550594329834
    10. 'for' → logprob: -7.85550594329834

Token 243: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018757911399006844
    2. ' for' → logprob: -4.1437578201293945
    3. 'for' → logprob: -6.0187578201293945
    4. '    
' → logprob: -9.268757820129395
    5. '
' → logprob: -9.393757820129395
    6. ':' → logprob: -9.768757820129395
    7. '    ' → logprob: -11.393757820129395
    8. ':
' → logprob: -11.768757820129395
    9. '       ' → logprob: -12.018757820129395
    10. '  ' → logprob: -12.268757820129395

Token 244: ' il' (ID: 1793)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.4917546510696411
    2. ' il' → logprob: -1.7417546510696411
    3. ' row' → logprob: -1.9917546510696411
    4. ' ' → logprob: -1.9917546510696411
    5. ' grid' → logprob: -2.7417545318603516
    6. 'il' → logprob: -3.3667545318603516
    7. ' not' → logprob: -3.3667545318603516
    8. 'num' → logprob: -3.9917545318603516
    9. 'not' → logprob: -3.9917545318603516
    10. ' num' → logprob: -4.116754531860352

Token 245: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.6098846793174744
    2. ' est' → logprob: -0.9848846793174744
    3. ' n' → logprob: -3.609884738922119
    4. 's' → logprob: -3.859884738922119
    5. 'n' → logprob: -4.984884738922119
    6. 'a' → logprob: -5.359884738922119
    7. ' apparaît' → logprob: -5.609884738922119
    8. ''est' → logprob: -5.859884738922119
    9. ' respecte' → logprob: -5.859884738922119
    10. ' a' → logprob: -6.234884738922119

Token 246: ' en' (ID: 469)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6718937158584595
    2. 'val' → logprob: -1.2968937158584595
    3. 'correct' → logprob: -2.29689359664917
    4. ' valide' → logprob: -3.17189359664917
    5. 'possible' → logprob: -3.29689359664917
    6. ' valid' → logprob: -4.92189359664917
    7. 'dans' → logprob: -5.29689359664917
    8. ' correct' → logprob: -5.29689359664917
    9. 'unique' → logprob: -5.92189359664917
    10. ' val' → logprob: -5.92189359664917

Token 247: ' double' (ID: 3503)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.4256279170513153
    2. 'double' → logprob: -1.3006279468536377
    3. 'dou' → logprob: -3.3006279468536377
    4. 'viol' → logprob: -5.425627708435059
    5. 'contr' → logprob: -5.550627708435059
    6. 't' → logprob: -5.675627708435059
    7. 'conf' → logprob: -5.925627708435059
    8. 'er' → logprob: -6.050627708435059
    9. 'collision' → logprob: -6.050627708435059
    10. 'vi' → logprob: -6.300627708435059

Token 248: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03554922342300415
    2. '
' → logprob: -3.5355491638183594
    3. '    
' → logprob: -6.285549163818359
    4. 'for' → logprob: -6.285549163818359
    5. ' for' → logprob: -6.410549163818359
    6. ':' → logprob: -9.03554916381836
    7. '  
' → logprob: -9.28554916381836
    8. '   
' → logprob: -9.91054916381836
    9. '    ' → logprob: -10.53554916381836
    10. 's' → logprob: -11.16054916381836

Token 249: ' ligne' (ID: 19583)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8593875765800476
    2. 'la' → logprob: -1.7343876361846924
    3. 'les' → logprob: -1.9843876361846924
    4. 'row' → logprob: -2.1093876361846924
    5. ' la' → logprob: -2.7343876361846924
    6. ' row' → logprob: -4.359387397766113
    7. ' une' → logprob: -4.359387397766113
    8. 'l' → logprob: -4.484387397766113
    9. 'ligne' → logprob: -4.484387397766113
    10. 'rows' → logprob: -5.609387397766113

Token 250: '/' (ID: 14)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2058533430099487
    2. ',' → logprob: -1.3308533430099487
    3. 's' → logprob: -1.3308533430099487
    4. ' for' → logprob: -2.8308534622192383
    5. 'for' → logprob: -2.9558534622192383
    6. ' or' → logprob: -3.4558534622192383
    7. ' ,' → logprob: -4.080853462219238
    8. ' ou' → logprob: -5.205853462219238
    9. ' i' → logprob: -5.830853462219238
    10. ' ' → logprob: -6.705853462219238

Token 251: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.11729202419519424
    2. ' colonne' → logprob: -2.2422919273376465
    3. ' col' → logprob: -6.1172919273376465
    4. 'column' → logprob: -6.6172919273376465
    5. 'colon' → logprob: -8.492292404174805
    6. ' ' → logprob: -8.992292404174805
    7. ' colon' → logprob: -9.367292404174805
    8. ' column' → logprob: -9.617292404174805
    9. '   ' → logprob: -9.867292404174805
    10. ' or' → logprob: -9.992292404174805

Token 252: '/block' (ID: 138890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005096780136227608
    2. ',' → logprob: -6.255096912384033
    3. 's' → logprob: -7.255096912384033
    4. ' or' → logprob: -7.505096912384033
    5. 'u' → logprob: -8.005096435546875
    6. 'n' → logprob: -8.130096435546875
    7. 'for' → logprob: -8.255096435546875
    8. ' for' → logprob: -9.005096435546875
    9. 'umn' → logprob: -9.005096435546875
    10. '    
' → logprob: -9.130096435546875

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022153230383992195
    2. '
' → logprob: -6.877215385437012
    3. '    
' → logprob: -7.627215385437012
    4. 'for' → logprob: -8.002215385437012
    5. ' for' → logprob: -8.252215385437012
    6. 'valid' → logprob: -9.752215385437012
    7. '   
' → logprob: -11.752215385437012
    8. '       ' → logprob: -12.252215385437012
    9. '  
' → logprob: -12.752215385437012
    10. '    ' → logprob: -13.127215385437012

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015629801899194717
    2. '
' → logprob: -5.015629768371582
    3. 'for' → logprob: -5.140629768371582
    4. ' for' → logprob: -6.015629768371582
    5. '    
' → logprob: -7.765629768371582
    6. '   
' → logprob: -10.140629768371582
    7. 'result' → logprob: -10.390629768371582
    8. 'valid' → logprob: -10.640629768371582
    9. '  
' → logprob: -11.140629768371582
    10. ' 
' → logprob: -11.765629768371582

Token 255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5428482890129089
    2. '   ' → logprob: -1.0428483486175537
    3. 'result' → logprob: -3.7928483486175537
    4. ' for' → logprob: -4.167848110198975
    5. 'errors' → logprob: -4.417848110198975
    6. 'valid' → logprob: -4.667848110198975
    7. 'res' → logprob: -6.167848110198975
    8. 'results' → logprob: -6.667848110198975
    9. 'answer' → logprob: -7.292848110198975
    10. 'answers' → logprob: -7.667848110198975

Token 256: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6326066255569458
    2. 'i' → logprob: -0.7576066255569458
    3. ' ' → logprob: -12.382606506347656
    4. '	i' → logprob: -13.382606506347656
    5. '   ' → logprob: -14.257606506347656
    6. ' ' → logprob: -15.382606506347656
    7. '  ' → logprob: -15.632606506347656
    8. '```' → logprob: -15.820106506347656
    9. '_i' → logprob: -16.070106506347656
    10. ' data' → logprob: -16.320106506347656

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01605372317135334
    2. 'in' → logprob: -4.141053676605225
    3. ' ' → logprob: -11.016054153442383
    4. '   ' → logprob: -14.391054153442383
    5. '0' → logprob: -14.891054153442383
    6. ' ' → logprob: -15.016054153442383
    7. ',' → logprob: -15.266054153442383
    8. '  ' → logprob: -15.516054153442383
    9. '    ' → logprob: -15.766054153442383
    10. '_' → logprob: -16.141054153442383

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740821421146393
    2. ' range' → logprob: -0.9740821123123169
    3. '(range' → logprob: -12.724081993103027
    4. ' ' → logprob: -14.224081993103027
    5. ' in' → logprob: -14.849081993103027
    6. ')' → logprob: -14.974081993103027
    7. 'in' → logprob: -15.349081993103027
    8. '```' → logprob: -15.474081993103027
    9. '	range' → logprob: -15.849081993103027
    10. '   ' → logprob: -16.099082946777344

Token 259: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031875784043222666
    2. '9' → logprob: -5.753187656402588
    3. ' (' → logprob: -11.75318717956543
    4. '(
' → logprob: -13.87818717956543
    5. '   ' → logprob: -14.25318717956543
    6. ' ' → logprob: -15.50318717956543
    7. '(len' → logprob: -15.62818717956543
    8. ')' → logprob: -17.87818717956543
    9. '```' → logprob: -18.12818717956543
    10. '[' → logprob: -18.62818717956543

Token 260: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.375008583068848
    4. '(' → logprob: -15.875008583068848
    5. '0' → logprob: -17.062509536743164
    6. ')' → logprob: -17.250009536743164
    7. '```' → logprob: -17.562509536743164
    8. '  ' → logprob: -17.937509536743164
    9. '1' → logprob: -17.937509536743164
    10. '       ' → logprob: -18.562509536743164

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002551050391048193
    2. '):
' → logprob: -6.252551078796387
    3. ':' → logprob: -8.252551078796387
    4. ')' → logprob: -8.627551078796387
    5. '   ' → logprob: -8.752551078796387
    6. ',' → logprob: -11.127551078796387
    7. ' ):' → logprob: -12.502551078796387
    8. '       ' → logprob: -13.627551078796387
    9. '9' → logprob: -13.627551078796387
    10. ' ' → logprob: -14.002551078796387

Token 262: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03415066376328468
    2. ' for' → logprob: -3.4091506004333496
    3. '       ' → logprob: -8.409151077270508
    4. 'for' → logprob: -8.409151077270508
    5. '	for' → logprob: -10.659151077270508
    6. '    
' → logprob: -11.409151077270508
    7. ' ' → logprob: -11.534151077270508
    8. '    ' → logprob: -12.034151077270508
    9. '<|end|>' → logprob: -12.909151077270508
    10. ':' → logprob: -13.534151077270508

Token 263: ' line' (ID: 2543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07075910270214081
    2. '   ' → logprob: -3.0707590579986572
    3. ' for' → logprob: -3.8207590579986572
    4. '       ' → logprob: -11.320758819580078
    5. '	for' → logprob: -13.070758819580078
    6. ' ' → logprob: -13.445758819580078
    7. '    ' → logprob: -14.945758819580078
    8. '  ' → logprob: -15.320758819580078
    9. '    
' → logprob: -16.570758819580078
    10. '   ' → logprob: -17.070758819580078

Token 264: '_out' (ID: 12171)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7751088738441467
    2. ' =' → logprob: -1.525108814239502
    3. ' in' → logprob: -1.900108814239502
    4. ':' → logprob: -3.150108814239502
    5. '_' → logprob: -3.150108814239502
    6. '   ' → logprob: -3.400108814239502
    7. 'for' → logprob: -4.025108814239502
    8. ' for' → logprob: -4.400108814239502
    9. '[' → logprob: -4.775108814239502
    10. 'in' → logprob: -5.525108814239502

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17108967900276184
    2. ' =' → logprob: -1.9210896492004395
    3. '_' → logprob: -4.9210896492004395
    4. '[:]' → logprob: -7.4210896492004395
    5. '=[]' → logprob: -7.4210896492004395
    6. '   ' → logprob: -7.5460896492004395
    7. '[' → logprob: -8.046090126037598
    8. ':' → logprob: -8.171090126037598
    9. '+=' → logprob: -8.546090126037598
    10. '=""' → logprob: -8.671090126037598

Token 266: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.5510095953941345
    2. '[]' → logprob: -1.0510096549987793
    3. '"' → logprob: -2.6760096549987793
    4. '''' → logprob: -6.301009654998779
    5. ' []' → logprob: -6.301009654998779
    6. ''' → logprob: -6.926009654998779
    7. '[]
' → logprob: -8.176009178161621
    8. ' ""' → logprob: -8.926009178161621
    9. '   ' → logprob: -9.176009178161621
    10. ' ' → logprob: -10.551009178161621

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035503655672073364
    2. '   ' → logprob: -3.410503625869751
    3. ' for' → logprob: -6.41050386428833
    4. 'for' → logprob: -8.535503387451172
    5. '\' → logprob: -12.285503387451172
    6. ' ' → logprob: -12.660503387451172
    7. '
' → logprob: -12.660503387451172
    8. '           ' → logprob: -13.285503387451172
    9. '\n' → logprob: -14.285503387451172
    10. '	for' → logprob: -14.285503387451172

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011088728904724121
    2. ' for' → logprob: -5.011088848114014
    3. '       ' → logprob: -6.011088848114014
    4. '   ' → logprob: -6.261088848114014
    5. ' ' → logprob: -13.386088371276855
    6. '	for' → logprob: -13.511088371276855
    7. '  ' → logprob: -15.636088371276855
    8. '_for' → logprob: -18.261089324951172
    9. '     ' → logprob: -18.636089324951172
    10. '    ' → logprob: -18.636089324951172

Token 269: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2254173904657364
    2. ' j' → logprob: -1.6004173755645752
    3. '	j' → logprob: -13.225417137145996
    4. '   ' → logprob: -13.975417137145996
    5. ' ' → logprob: -14.100417137145996
    6. '```' → logprob: -14.475417137145996
    7. '    ' → logprob: -15.100417137145996
    8. '_j' → logprob: -15.975417137145996
    9. '  ' → logprob: -16.350418090820312
    10. ' ' → logprob: -16.600418090820312

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976376049220562
    2. 'in' → logprob: -4.634763717651367
    3. ' ' → logprob: -12.134763717651367
    4. '    ' → logprob: -14.259763717651367
    5. '   ' → logprob: -14.884763717651367
    6. '0' → logprob: -14.884763717651367
    7. 'import' → logprob: -15.384763717651367
    8. '  ' → logprob: -16.134763717651367
    9. '1' → logprob: -16.259763717651367
    10. 'n' → logprob: -16.384763717651367

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197183206677437
    2. ' range' → logprob: -2.81197190284729
    3. '(range' → logprob: -12.561971664428711
    4. '9' → logprob: -15.186971664428711
    5. ' ' → logprob: -15.686971664428711
    6. '   ' → logprob: -16.56197166442871
    7. '0' → logprob: -17.06197166442871
    8. '	range' → logprob: -17.18697166442871
    9. '    ' → logprob: -17.81197166442871
    10. '(' → logprob: -18.31197166442871

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. 'range' → logprob: -14.125000953674316
    3. '(range' → logprob: -15.750000953674316
    4. '9' → logprob: -16.125001907348633
    5. ' (' → logprob: -16.125001907348633
    6. ' range' → logprob: -17.625001907348633
    7. 'in' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.750001907348633
    10. ')' → logprob: -20.000001907348633

Token 273: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.750004768371582
    3. '(' → logprob: -14.375004768371582
    4. '   ' → logprob: -14.500004768371582
    5. 'range' → logprob: -15.375004768371582
    6. '       ' → logprob: -15.500004768371582
    7. ')' → logprob: -16.000003814697266
    8. '           ' → logprob: -16.000003814697266
    9. '
' → logprob: -17.375003814697266
    10. '```' → logprob: -17.625003814697266

Token 274: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5825332999229431
    2. '):' → logprob: -0.8325332999229431
    3. ')' → logprob: -5.082533359527588
    4. '   ' → logprob: -8.70753288269043
    5. '       ' → logprob: -9.33253288269043
    6. ':' → logprob: -9.83253288269043
    7. '):
' → logprob: -10.95753288269043
    8. '):

' → logprob: -11.45753288269043
    9. ' ):' → logprob: -11.58253288269043
    10. ' ):
' → logprob: -11.95753288269043

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11426784098148346
    2. '       ' → logprob: -2.2392678260803223
    3. ' if' → logprob: -7.114267826080322
    4. '#' → logprob: -8.86426830291748
    5. '            
' → logprob: -9.48926830291748
    6. '   ' → logprob: -10.11426830291748
    7. 'if' → logprob: -10.23926830291748
    8. ' #' → logprob: -10.36426830291748
    9. '        
' → logprob: -10.48926830291748
    10. '        ' → logprob: -10.48926830291748

Token 276: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.4981744885444641
    2. 'num' (adapté à ' num') → logprob: -0.9981744885444641
    3. '           ' → logprob: -4.123174667358398
    4. ' val' → logprob: -6.123174667358398
    5. ' if' → logprob: -6.373174667358398
    6. ' x' → logprob: -7.123174667358398
    7. ' token' → logprob: -7.373174667358398
    8. ' n' → logprob: -7.873174667358398
    9. 'val' → logprob: -7.998174667358398
    10. 'token' → logprob: -7.998174667358398

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889088988304138
    2. '=' → logprob: -2.578890800476074
    3. ' ' → logprob: -13.828890800476074
    4. ' ='' → logprob: -17.20389175415039
    5. '='' → logprob: -17.32889175415039
    6. '    ' → logprob: -17.70389175415039
    7. '=line' → logprob: -17.70389175415039
    8. '   ' → logprob: -17.95389175415039
    9. ' =
' → logprob: -18.20389175415039
    10. ''' → logprob: -18.70389175415039

Token 278: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.16023580729961395
    2. 'grid' → logprob: -1.9102357625961304
    3. ' ' → logprob: -12.785235404968262
    4. '(grid' → logprob: -12.785235404968262
    5. '	grid' → logprob: -13.285235404968262
    6. ''' → logprob: -13.785235404968262
    7. ' ' → logprob: -14.285235404968262
    8. '.grid' → logprob: -14.535235404968262
    9. '`' → logprob: -14.785235404968262
    10. ':grid' → logprob: -14.910235404968262

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.611323624383658e-05
    2. '[' → logprob: -9.875065803527832
    3. '[j' → logprob: -11.500065803527832
    4. '[I' → logprob: -12.750065803527832
    5. ' [' → logprob: -13.500065803527832
    6. '```' → logprob: -17.25006675720215
    7. '[
' → logprob: -17.50006675720215
    8. 'i' → logprob: -17.75006675720215
    9. '[int' → logprob: -18.00006675720215
    10. '\[' → logprob: -18.37506675720215

Token 280: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008611999801360071
    2. '[j' → logprob: -7.250861167907715
    3. ']' → logprob: -9.000861167907715
    4. '[' → logprob: -11.375861167907715
    5. ' ][' → logprob: -11.375861167907715
    6. '   ' → logprob: -13.625861167907715
    7. ' ' → logprob: -14.500861167907715
    8. '           ' → logprob: -14.625861167907715
    9. '       ' → logprob: -14.625861167907715
    10. ''][' → logprob: -15.125861167907715

Token 281: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8670179997570813e-05
    2. ' j' → logprob: -11.000019073486328
    3. '[j' → logprob: -13.250019073486328
    4. '][' → logprob: -16.000019073486328
    5. '	j' → logprob: -17.250019073486328
    6. ' ' → logprob: -17.750019073486328
    7. '   ' → logprob: -18.500019073486328
    8. ':j' → logprob: -19.750019073486328
    9. ']' → logprob: -20.000019073486328
    10. '0' → logprob: -20.125019073486328

Token 282: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6791263818740845
    2. ')' → logprob: -1.0541263818740845
    3. ')
' → logprob: -2.429126262664795
    4. ']
' → logprob: -2.929126262664795
    5. '           ' → logprob: -5.929126262664795
    6. '       ' → logprob: -9.804126739501953
    7. '])' → logprob: -9.804126739501953
    8. '+' → logprob: -11.304126739501953
    9. ']

' → logprob: -11.304126739501953
    10. ')
' → logprob: -11.554126739501953

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006376175209879875
    2. '            
' → logprob: -6.006376266479492
    3. ' 
' → logprob: -6.006376266479492
    4. ' if' → logprob: -7.381376266479492
    5. '
' → logprob: -8.256376266479492
    6. 'if' → logprob: -8.381376266479492
    7. '       ' → logprob: -9.756376266479492
    8. '           
' → logprob: -9.756376266479492
    9. '            ' → logprob: -10.506376266479492
    10. '    
' → logprob: -10.506376266479492

Token 284: ' block' (ID: 4355)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18763025104999542
    2. 'if' → logprob: -1.812630295753479
    3. '           ' → logprob: -4.9376301765441895
    4. ' check' → logprob: -8.687630653381348
    5. ' count' → logprob: -9.062630653381348
    6. 'count' → logprob: -9.437630653381348
    7. 'space' → logprob: -9.687630653381348
    8. ' space' → logprob: -9.812630653381348
    9. 'is' → logprob: -10.562630653381348
    10. ' is' → logprob: -10.687630653381348

Token 285: '_id' (ID: 1537)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.4784625470638275
    2. '_idx' → logprob: -0.9784625768661499
    3. 'index' → logprob: -5.9784626960754395
    4. '_id' → logprob: -7.2284626960754395
    5. 'idx' → logprob: -7.6034626960754395
    6. '_counts' → logprob: -8.103462219238281
    7. ' =' → logprob: -9.228462219238281
    8. '=' → logprob: -9.353462219238281
    9. '_num' → logprob: -9.978462219238281
    10. 's' → logprob: -10.478462219238281

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020774602890015
    2. '=' → logprob: -2.350207805633545
    3. 's' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.100207328796387
    5. ' =(' → logprob: -15.725207328796387
    6. '=i' → logprob: -15.975207328796387
    7. ')' → logprob: -17.225208282470703
    8. '=(' → logprob: -17.225208282470703
    9. '```' → logprob: -17.350208282470703
    10. '=int' → logprob: -17.475208282470703

Token 287: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02105106972157955
    2. '(' → logprob: -4.021050930023193
    3. ' (' → logprob: -6.021050930023193
    4. '3' → logprob: -8.021051406860352
    5. '(b' → logprob: -8.896051406860352
    6. 'i' → logprob: -13.146051406860352
    7. '[i' → logprob: -14.521051406860352
    8. '((' → logprob: -14.646051406860352
    9. '(ii' → logprob: -15.146051406860352
    10. '(ai' → logprob: -15.396051406860352

Token 288: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027802068507298827
    2. '(i' → logprob: -8.37527847290039
    3. ' i' → logprob: -10.12527847290039
    4. '3' → logprob: -12.25027847290039
    5. ' (' → logprob: -14.12527847290039
    6. ')i' → logprob: -14.12527847290039
    7. '
' → logprob: -15.00027847290039
    8. ')' → logprob: -15.00027847290039
    9. '(' → logprob: -15.75027847290039
    10. '[i' → logprob: -16.12527847290039

Token 289: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0487237386405468
    2. ' //' → logprob: -3.0487236976623535
    3. ')' → logprob: -9.423724174499512
    4. ')//' → logprob: -10.298724174499512
    5. ' ' → logprob: -12.298724174499512
    6. 'div' → logprob: -12.548724174499512
    7. '3' → logprob: -12.548724174499512
    8. '
' → logprob: -13.048724174499512
    9. '```' → logprob: -13.048724174499512
    10. '#' → logprob: -13.173724174499512

Token 290: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -15.875021934509277
    4. '   ' → logprob: -17.00002098083496
    5. '```' → logprob: -18.00002098083496
    6. '  ' → logprob: -18.12502098083496
    7. '           ' → logprob: -19.50002098083496
    8. '
' → logprob: -19.56252098083496
    9. '    ' → logprob: -19.56252098083496
    10. '۳' → logprob: -20.00002098083496

Token 291: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.022668899968266487
    2. '*' → logprob: -4.272668838500977
    3. ')' → logprob: -4.772668838500977
    4. ' *' → logprob: -12.272668838500977
    5. ' )' → logprob: -12.397668838500977
    6. '3' → logprob: -13.397668838500977
    7. '   ' → logprob: -15.147668838500977
    8. '*)' → logprob: -15.397668838500977
    9. '```' → logprob: -15.397668838500977
    10. ']*' → logprob: -15.522668838500977

Token 292: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.37501335144043
    4. '```' → logprob: -20.37501335144043
    5. '３' → logprob: -22.06251335144043
    6. '
' → logprob: -22.37501335144043
    7. '  ' → logprob: -22.56251335144043
    8. '۳' → logprob: -22.68751335144043
    9. '৩' → logprob: -22.93751335144043
    10. '`' → logprob: -23.00001335144043

Token 293: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024269331246614456
    2. ' +' → logprob: -3.7742693424224854
    3. '+j' → logprob: -7.524269104003906
    4. '+b' → logprob: -7.649269104003906
    5. '+(' → logprob: -12.024269104003906
    6. '+
' → logprob: -14.274269104003906
    7. '+B' → logprob: -15.274269104003906
    8. ' ' → logprob: -16.774269104003906
    9. '+k' → logprob: -17.399269104003906
    10. ' +
' → logprob: -17.649269104003906

Token 294: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.1113714650273323
    2. '(b' → logprob: -2.4863715171813965
    3. ' (' → logprob: -3.9863715171813965
    4. 'bj' → logprob: -5.7363715171813965
    5. ' bj' → logprob: -8.611371040344238
    6. 'j' → logprob: -9.111371040344238
    7. '(' → logprob: -9.486371040344238
    8. '   ' → logprob: -12.611371040344238
    9. 'jb' → logprob: -12.736371040344238
    10. ' ' → logprob: -12.861371040344238

Token 295: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012595594860613346
    2. '(j' → logprob: -4.3875956535339355
    3. ' j' → logprob: -9.762595176696777
    4. 'bj' → logprob: -11.262595176696777
    5. ' (' → logprob: -11.387595176696777
    6. 'b' → logprob: -14.262595176696777
    7. '   ' → logprob: -14.387595176696777
    8. '	j' → logprob: -14.637595176696777
    9. 'jb' → logprob: -14.762595176696777
    10. '(' → logprob: -14.762595176696777

Token 296: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -2.2603901015827432e-05
    2. ')//' → logprob: -10.750022888183594
    3. ' //' → logprob: -14.375022888183594
    4. ')' → logprob: -14.750022888183594
    5. '//=' → logprob: -16.625022888183594
    6. '3' → logprob: -16.875022888183594
    7. '}//' → logprob: -17.375022888183594
    8. '#' → logprob: -17.750022888183594
    9. '```' → logprob: -18.125022888183594
    10. '[' → logprob: -18.125022888183594

Token 297: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.37500286102295
    3. '1' → logprob: -14.37500286102295
    4. ')' → logprob: -16.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -18.625001907348633
    8. '
' → logprob: -19.250001907348633
    9. '  ' → logprob: -19.875001907348633
    10. '`' → logprob: -20.375001907348633

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013034529983997345
    2. ')
' → logprob: -6.751303672790527
    3. ' )' → logprob: -10.001303672790527
    4. ']' → logprob: -10.376303672790527
    5. '')' → logprob: -11.251303672790527
    6. '           ' → logprob: -11.376303672790527
    7. ')]' → logprob: -11.501303672790527
    8. ')+' → logprob: -12.626303672790527
    9. '   ' → logprob: -13.376303672790527
    10. '       ' → logprob: -13.501303672790527

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008380529470741749
    2. ' if' → logprob: -5.38338041305542
    3. '
' → logprob: -6.13338041305542
    4. 'if' → logprob: -6.88338041305542
    5. '            
' → logprob: -8.133380889892578
    6. '       ' → logprob: -9.383380889892578
    7. ' 
' → logprob: -9.633380889892578
    8. '   ' → logprob: -9.758380889892578
    9. '    
' → logprob: -11.383380889892578
    10. '          ' → logprob: -11.383380889892578

Token 300: ' wrong' (ID: 8201)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6871116757392883
    2. 'if' → logprob: -0.8121116757392883
    3. '           ' → logprob: -2.9371116161346436
    4. '            
' → logprob: -10.937111854553223
    5. '       ' → logprob: -12.812111854553223
    6. '            ' → logprob: -13.187111854553223
    7. ' ' → logprob: -13.687111854553223
    8. ' is' → logprob: -13.937111854553223
    9. '          ' → logprob: -13.937111854553223
    10. '   ' → logprob: -13.937111854553223

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197720766067505
    2. ' =' → logprob: -2.8119771480560303
    3. 's' → logprob: -12.31197738647461
    4. '_' → logprob: -12.68697738647461
    5. '?' → logprob: -15.06197738647461
    6. '_=' → logprob: -15.06197738647461
    7. '_nums' → logprob: -15.31197738647461
    8. '_flag' → logprob: -15.31197738647461
    9. '_num' → logprob: -15.93697738647461
    10. ' ' → logprob: -16.18697738647461

Token 302: ' False' (ID: 7983)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6713427901268005
    2. ' row' → logprob: -0.9213427901268005
    3. '(row' → logprob: -2.7963428497314453
    4. '(' → logprob: -4.671342849731445
    5. ' (' → logprob: -4.671342849731445
    6. 'False' → logprob: -4.921342849731445
    7. ' False' → logprob: -5.671342849731445
    8. ' ' → logprob: -9.046342849731445
    9. '(False' → logprob: -9.296342849731445
    10. '(
' → logprob: -9.671342849731445

Token 303: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00754723884165287
    2. '<|end|>' → logprob: -5.382547378540039
    3. '            
' → logprob: -7.507547378540039
    4. '          ' → logprob: -7.632547378540039
    5. '            ' → logprob: -7.632547378540039
    6. '       ' → logprob: -7.882547378540039
    7. ' if' → logprob: -8.507547378540039
    8. ' ' → logprob: -8.757547378540039
    9. '   ' → logprob: -8.757547378540039
    10. '    ' → logprob: -9.382547378540039

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005787769798189402
    2. ' if' → logprob: -6.3807878494262695
    3. ' 
' → logprob: -7.1307878494262695
    4. '       ' → logprob: -7.1307878494262695
    5. '            
' → logprob: -7.2557878494262695
    6. '<|end|>' → logprob: -7.6307878494262695
    7. '   ' → logprob: -8.13078784942627
    8. '            ' → logprob: -8.63078784942627
    9. '
' → logprob: -8.88078784942627
    10. '          ' → logprob: -9.00578784942627

Token 305: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8115538954734802
    2. 'if' (adapté à ' if') → logprob: -1.061553955078125
    3. '           ' → logprob: -1.561553955078125
    4. '   ' → logprob: -10.436553955078125
    5. '       ' → logprob: -10.561553955078125
    6. '            
' → logprob: -11.186553955078125
    7. '            ' → logprob: -11.436553955078125
    8. '
' → logprob: -11.936553955078125
    9. ' ' → logprob: -12.686553955078125
    10. '    ' → logprob: -12.811553955078125

Token 306: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.009907185100018978
    2. 'row' → logprob: -4.634907245635986
    3. '(row' → logprob: -10.259906768798828
    4. '           ' → logprob: -10.384906768798828
    5. '            ' → logprob: -10.634906768798828
    6. ' num' → logprob: -10.634906768798828
    7. ' (' → logprob: -11.509906768798828
    8. '   ' → logprob: -12.259906768798828
    9. 'num' → logprob: -12.384906768798828
    10. '    ' → logprob: -12.509906768798828

Token 307: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -3.128163257315464e-07
    2. 'counts' → logprob: -15.375
    3. '[i' → logprob: -17.125
    4. '_checks' → logprob: -18.5
    5. '_lengths' → logprob: -19.125
    6. '_scores' → logprob: -19.375
    7. '```' → logprob: -19.625
    8. '_codes' → logprob: -19.875
    9. '[' → logprob: -19.875
    10. '[_' → logprob: -20.0

Token 308: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.036524842376821e-05
    2. '[' → logprob: -10.875040054321289
    3. ' [' → logprob: -11.250040054321289
    4. '[j' → logprob: -12.125040054321289
    5. '   ' → logprob: -14.750040054321289
    6. '[line' → logprob: -14.750040054321289
    7. '[I' → logprob: -15.375040054321289
    8. '[row' → logprob: -15.375040054321289
    9. ' ' → logprob: -15.500040054321289
    10. '```' → logprob: -15.875040054321289

Token 309: '][' (ID: 2696)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.23252877593040466
    2. '][' → logprob: -1.607528805732727
    3. '[' → logprob: -5.2325286865234375
    4. ']' → logprob: -7.1075286865234375
    5. 'num' → logprob: -8.357528686523438
    6. ' [' → logprob: -9.357528686523438
    7. '].' → logprob: -9.357528686523438
    8. '[j' → logprob: -9.607528686523438
    9. '[i' → logprob: -9.607528686523438
    10. ' ][' → logprob: -9.857528686523438

Token 310: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.3856492842023727e-06
    2. ' num' → logprob: -13.625000953674316
    3. '(num' → logprob: -16.000001907348633
    4. '[num' → logprob: -17.500001907348633
    5. ']' → logprob: -18.875001907348633
    6. '
' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '```' → logprob: -19.875001907348633
    9. '	num' → logprob: -20.625001907348633
    10. ')' → logprob: -21.375001907348633

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0629858747124672
    2. ']>' → logprob: -2.812985897064209
    3. '>' → logprob: -6.937985897064209
    4. ' ]' → logprob: -10.06298542022705
    5. '']' → logprob: -13.31298542022705
    6. ' >' → logprob: -13.81298542022705
    7. ']>=' → logprob: -14.06298542022705
    8. '>]' → logprob: -14.31298542022705
    9. '"]' → logprob: -14.81298542022705
    10. ')>' → logprob: -15.68798542022705

Token 312: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2519313097000122
    2. ' >' → logprob: -1.5019313097000122
    3. ' ' → logprob: -13.501931190490723
    4. ')>' → logprob: -14.876931190490723
    5. ' ' → logprob: -15.501931190490723
    6. ')' → logprob: -16.00193214416504
    7. '()>' → logprob: -16.87693214416504
    8. '">' → logprob: -17.50193214416504
    9. '```' → logprob: -17.87693214416504
    10. '[' → logprob: -18.25193214416504

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '
' → logprob: -18.875001907348633
    5. '```' → logprob: -18.875001907348633
    6. '>' → logprob: -19.125001907348633
    7. '۱' → logprob: -20.625001907348633
    8. ' ' → logprob: -20.875001907348633
    9. '  ' → logprob: -21.000001907348633
    10. '=' → logprob: -21.625001907348633

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '```' → logprob: -17.750001907348633
    5. '
' → logprob: -18.000001907348633
    6. '۱' → logprob: -18.500001907348633
    7. ' ' → logprob: -19.000001907348633
    8. '

' → logprob: -19.125001907348633
    9. '>' → logprob: -19.437501907348633
    10. '  ' → logprob: -19.500001907348633

Token 315: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001665065879933536
    2. '           ' → logprob: -7.001665115356445
    3. 'or' → logprob: -7.626665115356445
    4. ':' → logprob: -8.626665115356445
    5. '               ' → logprob: -10.126665115356445
    6. '            ' → logprob: -11.251665115356445
    7. ' and' → logprob: -11.376665115356445
    8. ' ' → logprob: -12.126665115356445
    9. '   ' → logprob: -12.876665115356445
    10. '       ' → logprob: -12.876665115356445

Token 316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09463053941726685
    2. '           ' → logprob: -2.469630479812622
    3. ' or' → logprob: -6.094630718231201
    4. '            ' → logprob: -6.344630718231201
    5. ' wrong' → logprob: -8.344630241394043
    6. '              ' → logprob: -8.469630241394043
    7. '            
' → logprob: -8.719630241394043
    8. '                   ' → logprob: -8.844630241394043
    9. '             ' → logprob: -9.094630241394043
    10. '                
' → logprob: -9.219630241394043

Token 317: ' wrong' (ID: 8201)
  Prédit: ' wrong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrong' → logprob: -0.07068391889333725
    2. 'wrong' (adapté à ' wrong') → logprob: -3.1956839561462402
    3. '               ' → logprob: -3.6956839561462402
    4. '           ' → logprob: -6.07068395614624
    5. ' line' → logprob: -9.945683479309082
    6. '            ' → logprob: -10.695683479309082
    7. '_wrong' → logprob: -10.945683479309082
    8. ' 
' → logprob: -10.945683479309082
    9. '                   ' → logprob: -11.195683479309082
    10. '            
' → logprob: -11.945683479309082

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32227712869644165
    2. ' =' → logprob: -1.4472770690917969
    3. ' or' → logprob: -3.322277069091797
    4. '               ' → logprob: -6.072277069091797
    5. '=True' → logprob: -7.322277069091797
    6. '           ' → logprob: -8.197277069091797
    7. ':' → logprob: -8.447277069091797
    8. '                   ' → logprob: -8.697277069091797
    9. '|' → logprob: -8.822277069091797
    10. '                ' → logprob: -9.447277069091797

Token 319: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5759394764900208
    2. 'True' → logprob: -0.8259394764900208
    3. '=True' → logprob: -17.700939178466797
    4. '(True' → logprob: -19.325939178466797
    5. '1' → logprob: -19.950939178466797
    6. 'true' → logprob: -21.325939178466797
    7. ' Tru' → logprob: -21.450939178466797
    8. ' ' → logprob: -21.575939178466797
    9. '   ' → logprob: -22.450939178466797
    10. '           ' → logprob: -22.450939178466797

Token 320: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002509687910787761
    2. ' elif' → logprob: -9.125250816345215
    3. ' else' → logprob: -10.000250816345215
    4. '            ' → logprob: -10.125250816345215
    5. '            
' → logprob: -10.500250816345215
    6. '          ' → logprob: -11.375250816345215
    7. 'elif' → logprob: -12.625250816345215
    8. '               ' → logprob: -12.750250816345215
    9. ' or' → logprob: -13.125250816345215
    10. ' 
' → logprob: -13.125250816345215

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002919638354796916
    2. ' elif' → logprob: -8.75029182434082
    3. '            
' → logprob: -9.87529182434082
    4. '            ' → logprob: -10.62529182434082
    5. ' else' → logprob: -10.75029182434082
    6. ' 
' → logprob: -11.25029182434082
    7. 'elif' → logprob: -11.62529182434082
    8. '          ' → logprob: -11.62529182434082
    9. '               ' → logprob: -14.00029182434082
    10. '           
' → logprob: -14.00029182434082

Token 322: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05004265904426575
    2. ' elif' → logprob: -3.5500426292419434
    3. ' if' → logprob: -4.050042629241943
    4. 'elif' → logprob: -6.175042629241943
    5. '       ' → logprob: -8.675043106079102
    6. 'if' (adapté à ' if') → logprob: -9.050043106079102
    7. ' else' → logprob: -9.425043106079102
    8. '            ' → logprob: -9.675043106079102
    9. '            
' → logprob: -9.925043106079102
    10. ' 
' → logprob: -10.800043106079102

Token 323: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.001932205050252378
    2. 'col' → logprob: -6.251932144165039
    3. ' row' → logprob: -12.626932144165039
    4. '	col' → logprob: -16.50193214416504
    5. '(col' → logprob: -16.75193214416504
    6. ' ' → logprob: -17.00193214416504
    7. ' space' → logprob: -17.12693214416504
    8. 'row' → logprob: -17.25193214416504
    9. ' ' → logprob: -17.50193214416504
    10. '    ' → logprob: -17.50193214416504

Token 324: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.8624639324116288e-06
    2. ' _' → logprob: -14.875001907348633
    3. '_' → logprob: -15.125001907348633
    4. '_c' → logprob: -15.500001907348633
    5. '[' → logprob: -15.750001907348633
    6. '_codes' → logprob: -16.000001907348633
    7. '```' → logprob: -16.000001907348633
    8. '
' → logprob: -16.375001907348633
    9. '[j' → logprob: -16.500001907348633
    10. '[i' → logprob: -17.000001907348633

Token 325: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.980854959692806e-05
    2. '[j' → logprob: -10.250069618225098
    3. '[' → logprob: -10.500069618225098
    4. ' [' → logprob: -12.000069618225098
    5. 'i' → logprob: -15.125069618225098
    6. '[int' → logprob: -16.625070571899414
    7. '[
' → logprob: -16.875070571899414
    8. ' ' → logprob: -17.125070571899414
    9. '[I' → logprob: -17.250070571899414
    10. '```' → logprob: -17.750070571899414

Token 326: '][' (ID: 2696)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.009508264251053333
    2. '][' → logprob: -4.75950813293457
    3. '[' → logprob: -7.13450813293457
    4. ' [' → logprob: -10.13450813293457
    5. '}[' → logprob: -11.63450813293457
    6. ')[' → logprob: -12.00950813293457
    7. '   ' → logprob: -12.13450813293457
    8. '>[' → logprob: -12.13450813293457
    9. ' ][' → logprob: -12.13450813293457
    10. 'num' → logprob: -12.25950813293457

Token 327: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0003488129877950996
    2. '[num' → logprob: -8.000349044799805
    3. ' num' → logprob: -11.250349044799805
    4. '
' → logprob: -16.750349044799805
    5. '(num' → logprob: -16.750349044799805
    6. ' ' → logprob: -17.250349044799805
    7. '	num' → logprob: -17.375349044799805
    8. '$num' → logprob: -17.875349044799805
    9. '<num' → logprob: -18.000349044799805
    10. '[' → logprob: -18.500349044799805

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7870363593101501
    2. ' >' → logprob: -0.9120363593101501
    3. '>' → logprob: -2.037036418914795
    4. ']>' → logprob: -4.537036418914795
    5. ' ]' → logprob: -6.287036418914795
    6. ' ' → logprob: -10.037035942077637
    7. '[' → logprob: -10.162035942077637
    8. ')' → logprob: -10.912035942077637
    9. ')>' → logprob: -11.537035942077637
    10. '   ' → logprob: -12.162035942077637

Token 329: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011065982282161713
    2. '>' → logprob: -4.51106595993042
    3. ' ' → logprob: -11.511066436767578
    4. '[' → logprob: -11.761066436767578
    5. ' [' → logprob: -16.261066436767578
    6. ' ' → logprob: -16.636066436767578
    7. ']' → logprob: -16.886066436767578
    8. ')>' → logprob: -17.011066436767578
    9. ' >
' → logprob: -17.136066436767578
    10. ')' → logprob: -17.511066436767578

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22541356086730957
    2. ' ' → logprob: -1.6004135608673096
    3. '   ' → logprob: -14.85041332244873
    4. '0' → logprob: -15.22541332244873
    5. '           ' → logprob: -16.475414276123047
    6. '```' → logprob: -16.475414276123047
    7. '  ' → logprob: -16.975414276123047
    8. ' ' → logprob: -16.975414276123047
    9. '
' → logprob: -17.162914276123047
    10. '>' → logprob: -17.225414276123047

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '
' → logprob: -17.37507438659668
    4. '```' → logprob: -17.62507438659668
    5. '   ' → logprob: -17.87507438659668
    6. '0' → logprob: -18.12507438659668
    7. '>' → logprob: -19.56257438659668
    8. '۱' → logprob: -20.12507438659668
    9. '[' → logprob: -20.37507438659668
    10. '  ' → logprob: -20.68757438659668

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2099020928144455
    2. '               ' → logprob: -2.459902048110962
    3. '           ' → logprob: -2.959902048110962
    4. ':
' → logprob: -3.334902048110962
    5. ' or' → logprob: -4.209902286529541
    6. ' and' → logprob: -7.209902286529541
    7. '              ' → logprob: -8.084901809692383
    8. '            ' → logprob: -8.584901809692383
    9. '          ' → logprob: -9.459901809692383
    10. '       ' → logprob: -9.709901809692383

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.721228368813172e-05
    2. '           ' → logprob: -9.500086784362793
    3. '	           ' → logprob: -13.000086784362793
    4. '			' → logprob: -13.375086784362793
    5. '            ' → logprob: -13.500086784362793
    6. '                   ' → logprob: -14.000086784362793
    7. ' or' → logprob: -14.000086784362793
    8. '                
' → logprob: -14.125086784362793
    9. '       ' → logprob: -14.250086784362793
    10. '			   ' → logprob: -14.500086784362793

Token 334: ' wrong' (ID: 8201)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6341935992240906
    2. ' wrong' → logprob: -0.7591935992240906
    3. 'wrong' (adapté à ' wrong') → logprob: -6.884193420410156
    4. ' 
' → logprob: -8.509193420410156
    5. ' True' → logprob: -9.259193420410156
    6. '           ' → logprob: -9.259193420410156
    7. ' ' → logprob: -9.884193420410156
    8. '                ' → logprob: -10.009193420410156
    9. '                   ' → logprob: -11.259193420410156
    10. '            ' → logprob: -11.384193420410156

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38696950674057007
    2. ' =' → logprob: -1.1369695663452148
    3. '=True' → logprob: -9.261969566345215
    4. '               ' → logprob: -13.636969566345215
    5. ' =
' → logprob: -14.386969566345215
    6. '==' → logprob: -14.761969566345215
    7. '=
' → logprob: -14.761969566345215
    8. '           ' → logprob: -15.261969566345215
    9. ' ' → logprob: -15.511969566345215
    10. ' ==' → logprob: -15.886969566345215

Token 336: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750484973192215
    2. ' True' → logprob: -3.5297505855560303
    3. '(True' → logprob: -17.02975082397461
    4. '=True' → logprob: -17.27975082397461
    5. '.True' → logprob: -21.40475082397461
    6. ' ' → logprob: -21.65475082397461
    7. 'true' → logprob: -22.27975082397461
    8. ' ' → logprob: -22.77975082397461
    9. 'False' → logprob: -22.77975082397461
    10. 'Tr' → logprob: -22.90475082397461

Token 337: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.47495681833243e-05
    2. '            
' → logprob: -11.750024795532227
    3. '
' → logprob: -12.000024795532227
    4. '		' → logprob: -12.250024795532227
    5. '   ' → logprob: -13.500024795532227
    6. '       ' → logprob: -13.750024795532227
    7. ' 
' → logprob: -13.875024795532227
    8. '    
' → logprob: -14.375024795532227
    9. '               ' → logprob: -14.750024795532227
    10. '          ' → logprob: -15.500024795532227

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9027791495318525e-05
    2. '       ' → logprob: -11.500019073486328
    3. '   ' → logprob: -12.750019073486328
    4. '
' → logprob: -13.375019073486328
    5. '		' → logprob: -13.500019073486328
    6. '            
' → logprob: -13.500019073486328
    7. 'if' → logprob: -14.750019073486328
    8. '```' → logprob: -15.000019073486328
    9. '               ' → logprob: -15.125019073486328
    10. '    
' → logprob: -15.750019073486328

Token 339: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004704357124865055
    2. ' if' → logprob: -5.754704475402832
    3. 'if' (adapté à ' if') → logprob: -6.504704475402832
    4. '   ' → logprob: -11.504704475402832
    5. '       ' → logprob: -11.504704475402832
    6. '```' → logprob: -12.004704475402832
    7. '               ' → logprob: -14.004704475402832
    8. ' ' → logprob: -14.254704475402832
    9. '
' → logprob: -14.754704475402832
    10. '		' → logprob: -15.004704475402832

Token 340: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.011047935113310814
    2. 'block' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.88604736328125
    4. '(block' → logprob: -17.13604736328125
    5. '	block' → logprob: -17.26104736328125
    6. ' bloc' → logprob: -17.51104736328125
    7. '   ' → logprob: -18.63604736328125
    8. '    ' → logprob: -19.51104736328125
    9. '           ' → logprob: -19.51104736328125
    10. ' ' → logprob: -19.63604736328125

Token 341: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0059470487758517265
    2. '_id' → logprob: -5.130947113037109
    3. '_ids' → logprob: -11.75594711303711
    4. 'counts' → logprob: -12.75594711303711
    5. 'block' → logprob: -12.88094711303711
    6. 's' → logprob: -13.38094711303711
    7. '```' → logprob: -13.50594711303711
    8. '[' → logprob: -14.38094711303711
    9. '_block' → logprob: -15.13094711303711
    10. '_blocks' → logprob: -15.25594711303711

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.014684110297821e-06
    2. 'block' → logprob: -11.625008583068848
    3. ' [' → logprob: -17.000009536743164
    4. '(block' → logprob: -19.250009536743164
    5. '[
' → logprob: -19.375009536743164
    6. '[int' → logprob: -20.000009536743164
    7. 'Block' → logprob: -20.125009536743164
    8. ' block' → logprob: -20.250009536743164
    9. '```' → logprob: -20.250009536743164
    10. ':block' → logprob: -20.625009536743164

Token 343: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -8.061054359131958e-06
    2. ' block' → logprob: -11.750007629394531
    3. '(block' → logprob: -17.25000762939453
    4. '	block' → logprob: -19.12500762939453
    5. ':block' → logprob: -19.25000762939453
    6. '.block' → logprob: -19.50000762939453
    7. 'bloc' → logprob: -20.25000762939453
    8. 'blockquote' → logprob: -21.25000762939453
    9. 'blok' → logprob: -21.62500762939453
    10. '<|end|>' → logprob: -22.00000762939453

Token 344: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0009134899592027068
    2. 'id' → logprob: -7.000913619995117
    3. 'block' → logprob: -13.250913619995117
    4. ' id' → logprob: -16.250913619995117
    5. '_ids' → logprob: -17.375913619995117
    6. 'Id' → logprob: -17.500913619995117
    7. '[' → logprob: -18.625913619995117
    8. ' block' → logprob: -18.875913619995117
    9. '   ' → logprob: -19.000913619995117
    10. ' ' → logprob: -19.500913619995117

Token 345: '][' (ID: 2696)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.0002823120157700032
    2. '[' → logprob: -8.250282287597656
    3. '][' → logprob: -11.250282287597656
    4. '[j' → logprob: -12.625282287597656
    5. ' [' → logprob: -13.625282287597656
    6. '[col' → logprob: -14.875282287597656
    7. 'num' → logprob: -15.000282287597656
    8. '[n' → logprob: -15.250282287597656
    9. '[node' → logprob: -15.250282287597656
    10. '[count' → logprob: -15.250282287597656

Token 346: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.1008713702030946e-06
    2. ' num' → logprob: -13.375001907348633
    3. '[num' → logprob: -14.625001907348633
    4. '(num' → logprob: -16.875001907348633
    5. '
' → logprob: -18.875001907348633
    6. '	num' → logprob: -20.875001907348633
    7. '```' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.875001907348633
    9. '$num' → logprob: -22.125001907348633
    10. '[' → logprob: -22.375001907348633

Token 347: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004319804720580578
    2. ']>' → logprob: -7.875432014465332
    3. '>' → logprob: -10.375432014465332
    4. ' ]' → logprob: -10.875432014465332
    5. ' >' → logprob: -13.375432014465332
    6. '"]' → logprob: -16.375431060791016
    7. ' ' → logprob: -16.750431060791016
    8. ')' → logprob: -16.875431060791016
    9. '']' → logprob: -17.375431060791016
    10. '   ' → logprob: -17.875431060791016

Token 348: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0788951888680458
    2. '>' → logprob: -2.578895092010498
    3. ' ' → logprob: -12.328895568847656
    4. ')>' → logprob: -15.203895568847656
    5. ')' → logprob: -15.703895568847656
    6. ' ' → logprob: -15.828895568847656
    7. '   ' → logprob: -16.203895568847656
    8. '[' → logprob: -16.453895568847656
    9. ']>' → logprob: -16.578895568847656
    10. ']' → logprob: -16.703895568847656

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.879620552062988
    4. '0' → logprob: -16.379619598388672
    5. '>' → logprob: -17.504619598388672
    6. '```' → logprob: -17.504619598388672
    7. '
' → logprob: -17.942119598388672
    8. ' ' → logprob: -19.067119598388672
    9. '=' → logprob: -19.129619598388672
    10. '  ' → logprob: -19.129619598388672

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.62507438659668
    4. '```' → logprob: -17.00007438659668
    5. '
' → logprob: -18.18757438659668
    6. '>' → logprob: -19.00007438659668
    7. '0' → logprob: -19.12507438659668
    8. '=' → logprob: -19.37507438659668
    9. '  ' → logprob: -19.43757438659668
    10. '[' → logprob: -19.68757438659668

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14767536520957947
    2. ':
' → logprob: -2.1476752758026123
    3. '               ' → logprob: -3.8976752758026123
    4. '           ' → logprob: -8.647675514221191
    5. '):
' → logprob: -10.522675514221191
    6. '):' → logprob: -11.397675514221191
    7. ')' → logprob: -11.772675514221191
    8. ' :' → logprob: -12.647675514221191
    9. ' :
' → logprob: -12.897675514221191
    10. '              ' → logprob: -13.022675514221191

Token 352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.47495681833243e-05
    2. 'wrong' → logprob: -11.125024795532227
    3. ' wrong' → logprob: -11.750024795532227
    4. '           ' → logprob: -13.750024795532227
    5. '              ' → logprob: -15.250024795532227
    6. '                   ' → logprob: -15.625024795532227
    7. '       ' → logprob: -15.750024795532227
    8. '			' → logprob: -15.875024795532227
    9. ' ' → logprob: -16.250024795532227
    10. '   ' → logprob: -16.625024795532227

Token 353: ' wrong' (ID: 8201)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3133186995983124
    2. ' True' → logprob: -1.3133187294006348
    3. '               ' → logprob: -10.313318252563477
    4. 'wrong' (adapté à ' wrong') → logprob: -11.438318252563477
    5. ' wrong' → logprob: -11.563318252563477
    6. '=True' → logprob: -13.688318252563477
    7. '           ' → logprob: -14.063318252563477
    8. 'true' → logprob: -14.188318252563477
    9. ' true' → logprob: -14.188318252563477
    10. '(True' → logprob: -16.688318252563477

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197505950927734
    2. '=' → logprob: -1.5019750595092773
    3. '=True' → logprob: -10.001975059509277
    4. ' =
' → logprob: -15.001975059509277
    5. '=
' → logprob: -16.126976013183594
    6. '=False' → logprob: -17.126976013183594
    7. '==' → logprob: -17.376976013183594
    8. '               ' → logprob: -17.501976013183594
    9. ' =)' → logprob: -17.501976013183594
    10. ' ' → logprob: -17.501976013183594

Token 355: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '=True' → logprob: -19.001171112060547
    4. '(True' → logprob: -20.376171112060547
    5. '.True' → logprob: -24.626171112060547
    6. 'False' → logprob: -25.501171112060547
    7. '_true' → logprob: -25.501171112060547
    8. 'true' → logprob: -25.501171112060547
    9. ' ' → logprob: -25.876171112060547
    10. 'Yes' → logprob: -26.126171112060547

Token 356: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.309382373117842e-05
    2. '            
' → logprob: -10.750033378601074
    3. ' if' → logprob: -13.000033378601074
    4. '
' → logprob: -13.125033378601074
    5. 'if' → logprob: -13.250033378601074
    6. ' 
' → logprob: -13.500033378601074
    7. '               ' → logprob: -13.750033378601074
    8. '       ' → logprob: -14.000033378601074
    9. '    
' → logprob: -14.875033378601074
    10. '           
' → logprob: -15.125033378601074

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.248469718324486e-05
    2. 'if' → logprob: -11.375022888183594
    3. ' if' → logprob: -12.125022888183594
    4. '            
' → logprob: -13.375022888183594
    5. '       ' → logprob: -13.875022888183594
    6. '​' → logprob: -14.375022888183594
    7. '		' → logprob: -14.500022888183594
    8. '
' → logprob: -14.625022888183594
    9. '```' → logprob: -14.875022888183594
    10. '               ' → logprob: -15.000022888183594

Token 358: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006561663467437029
    2. ' if' → logprob: -5.381561756134033
    3. 'if' (adapté à ' if') → logprob: -6.256561756134033
    4. ' line' → logprob: -11.131561279296875
    5. '       ' → logprob: -12.506561279296875
    6. 'line' → logprob: -14.006561279296875
    7. '            
' → logprob: -14.506561279296875
    8. '               ' → logprob: -14.631561279296875
    9. '   ' → logprob: -15.131561279296875
    10. '		' → logprob: -15.506561279296875

Token 359: ' wrong' (ID: 8201)
  Prédit: ' wrong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrong' → logprob: -0.07890113443136215
    2. 'wrong' → logprob: -2.5789010524749756
    3. ' not' → logprob: -11.828901290893555
    4. 'not' → logprob: -13.953901290893555
    5. 'w' → logprob: -13.953901290893555
    6. 'num' → logprob: -14.203901290893555
    7. 'wr' → logprob: -14.453901290893555
    8. ' ' → logprob: -14.828901290893555
    9. ' num' → logprob: -14.953901290893555
    10. ' ' → logprob: -16.078901290893555

Token 360: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011439992114901543
    2. ':
' → logprob: -4.511439800262451
    3. '==' → logprob: -8.63644027709961
    4. '           ' → logprob: -8.76144027709961
    5. '=' → logprob: -10.88644027709961
    6. ' ==' → logprob: -11.51144027709961
    7. ')' → logprob: -11.88644027709961
    8. '       ' → logprob: -12.63644027709961
    9. 'else' → logprob: -12.88644027709961
    10. ' =' → logprob: -13.26144027709961

Token 361: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1982223391532898
    2. ' line' → logprob: -1.9482223987579346
    3. 'line' → logprob: -3.9482223987579346
    4. '           ' → logprob: -4.0732221603393555
    5. ' print' → logprob: -7.5732221603393555
    6. 'print' → logprob: -9.073222160339355
    7. '   ' → logprob: -9.823222160339355
    8. '[line' → logprob: -9.948222160339355
    9. '#line' → logprob: -10.323222160339355
    10. '                   ' → logprob: -10.573222160339355

Token 362: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.002531310310587287
    2. ' line' → logprob: -6.2525315284729
    3. 'print' → logprob: -8.377531051635742
    4. '   ' → logprob: -9.502531051635742
    5. ''*' → logprob: -9.877531051635742
    6. ''' → logprob: -10.127531051635742
    7. '.' → logprob: -10.127531051635742
    8. '*' → logprob: -10.252531051635742
    9. 'x' → logprob: -11.002531051635742
    10. '(' → logprob: -11.002531051635742

Token 363: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -1.0087516784551553e-05
    2. 'out' → logprob: -11.75001049041748
    3. '_' → logprob: -14.00001049041748
    4. '+=' → logprob: -14.25001049041748
    5. '_output' → logprob: -14.75001049041748
    6. '=' → logprob: -16.500009536743164
    7. '+' → logprob: -17.375009536743164
    8. '+='' → logprob: -17.375009536743164
    9. '_OUT' → logprob: -18.000009536743164
    10. '__' → logprob: -18.125009536743164

Token 364: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0012685667024925351
    2. '+='' → logprob: -7.12626838684082
    3. ' +=' → logprob: -7.87626838684082
    4. '+' → logprob: -9.87626838684082
    5. '+="' → logprob: -10.37626838684082
    6. '=' → logprob: -13.75126838684082
    7. '+=(' → logprob: -14.37626838684082
    8. ']+=' → logprob: -16.75126838684082
    9. '   ' → logprob: -18.75126838684082
    10. '+-' → logprob: -18.87626838684082

Token 365: ' '*'' (ID: 89603)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.30927249789237976
    2. ''' → logprob: -1.4342725276947021
    3. '"' → logprob: -4.559272289276123
    4. '"*' → logprob: -5.059272289276123
    5. ''.' → logprob: -5.559272289276123
    6. '*' → logprob: -6.059272289276123
    7. ''x' → logprob: -6.934272289276123
    8. ''#' → logprob: -7.059272289276123
    9. '`' → logprob: -7.809272289276123
    10. 'x' → logprob: -8.059272766113281

Token 366: ' +' (ID: 659)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00269787828437984
    2. '+' → logprob: -6.127697944641113
    3. '*' → logprob: -8.627697944641113
    4. ' num' → logprob: -9.252697944641113
    5. ' +' → logprob: -9.627697944641113
    6. '*num' → logprob: -10.377697944641113
    7. ' ' → logprob: -10.502697944641113
    8. 'else' → logprob: -11.002697944641113
    9. ''*' → logprob: -11.002697944641113
    10. ''' → logprob: -11.252697944641113

Token 367: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.546478935983032e-05
    2. 'str' → logprob: -10.625025749206543
    3. ' num' → logprob: -13.750025749206543
    4. 'grid' → logprob: -18.750024795532227
    5. '(num' → logprob: -18.875024795532227
    6. '   ' → logprob: -19.500024795532227
    7. '[num' → logprob: -20.000024795532227
    8. ' ' → logprob: -20.250024795532227
    9. '	num' → logprob: -20.250024795532227
    10. ''*' → logprob: -20.250024795532227

Token 368: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13990147411823273
    2. ' else' → logprob: -2.1399013996124268
    3. '           ' → logprob: -4.639901638031006
    4. '+' → logprob: -5.889901638031006
    5. ' +' → logprob: -8.764901161193848
    6. 'elif' → logprob: -8.889901161193848
    7. '       ' → logprob: -10.014901161193848
    8. '               ' → logprob: -11.139901161193848
    9. '	else' → logprob: -11.264901161193848
    10. ' ' → logprob: -11.639901161193848

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001760744140483439
    2. 'else' → logprob: -6.376760959625244
    3. ' else' → logprob: -10.376760482788086
    4. '+' → logprob: -11.876760482788086
    5. '               ' → logprob: -12.376760482788086
    6. '		' → logprob: -13.001760482788086
    7. '          ' → logprob: -13.126760482788086
    8. '            
' → logprob: -13.126760482788086
    9. '\
' → logprob: -13.501760482788086
    10. '	       ' → logprob: -13.626760482788086

Token 370: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41309911012649536
    2. 'else' (adapté à ' else') → logprob: -1.1630990505218506
    3. ' else' → logprob: -3.6630990505218506
    4. 'elif' → logprob: -9.66309928894043
    5. '       ' → logprob: -10.28809928894043
    6. '+' → logprob: -10.66309928894043
    7. '            
' → logprob: -11.03809928894043
    8. ' line' → logprob: -11.16309928894043
    9. 'line' → logprob: -11.16309928894043
    10. '          ' → logprob: -11.28809928894043

Token 371: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008650737814605236
    2. '           ' → logprob: -5.133650779724121
    3. ' line' → logprob: -7.133650779724121
    4. '            ' → logprob: -7.383650779724121
    5. ''' → logprob: -7.758650779724121
    6. '                ' → logprob: -8.258650779724121
    7. '   ' → logprob: -8.633650779724121
    8. '              ' → logprob: -9.383650779724121
    9. '+' → logprob: -9.633650779724121
    10. '             ' → logprob: -9.883650779724121

Token 372: '               ' (ID: 506)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5552454590797424
    2. ''' → logprob: -1.1802453994750977
    3. 'line' → logprob: -2.3052453994750977
    4. '               ' → logprob: -4.680245399475098
    5. '"' → logprob: -5.305245399475098
    6. '           ' → logprob: -5.930245399475098
    7. '            ' → logprob: -6.555245399475098
    8. ' '' → logprob: -7.555245399475098
    9. '                ' → logprob: -9.055245399475098
    10. '             ' → logprob: -10.055245399475098

Token 373: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16363893449306488
    2. 'line' (adapté à ' line') → logprob: -1.913638949394226
    3. ''' → logprob: -5.788639068603516
    4. '"' → logprob: -8.538639068603516
    5. ' '' → logprob: -9.538639068603516
    6. '               ' → logprob: -10.288639068603516
    7. '                ' → logprob: -10.788639068603516
    8. '            ' → logprob: -11.788639068603516
    9. '           ' → logprob: -12.288639068603516
    10. ' ' → logprob: -12.413639068603516

Token 374: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -4.320199877838604e-07
    2. 'out' → logprob: -15.375
    3. '_' → logprob: -17.125
    4. '+=' → logprob: -17.375
    5. '+' → logprob: -18.125
    6. 'Out' → logprob: -18.125
    7. '_OUT' → logprob: -19.25
    8. '	out' → logprob: -19.75
    9. '_o' → logprob: -20.125
    10. ' out' → logprob: -20.25

Token 375: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005386725999414921
    2. ' +=' → logprob: -5.255386829376221
    3. '+' → logprob: -9.005386352539062
    4. '+='' → logprob: -10.755386352539062
    5. '+="' → logprob: -11.755386352539062
    6. ' +' → logprob: -14.880386352539062
    7. ']+=' → logprob: -14.880386352539062
    8. '=' → logprob: -16.505386352539062
    9. '.append' → logprob: -17.130386352539062
    10. '```' → logprob: -17.255386352539062

Token 376: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18854251503944397
    2. 'num' → logprob: -2.063542604446411
    3. ' num' → logprob: -3.188542604446411
    4. ' '' → logprob: -5.813542366027832
    5. ' ' → logprob: -7.813542366027832
    6. '"' → logprob: -8.938542366027832
    7. '''' → logprob: -10.188542366027832
    8. '`' → logprob: -11.813542366027832
    9. ' ' → logprob: -12.313542366027832
    10. ''n' → logprob: -12.563542366027832

Token 377: ' '' (ID: 461)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.46608343720436096
    2. ' num' → logprob: -1.4660834074020386
    3. ''' → logprob: -1.9660834074020386
    4. ' '' → logprob: -6.591083526611328
    5. ' ' → logprob: -8.091083526611328
    6. '''' → logprob: -10.841083526611328
    7. '"' → logprob: -12.716083526611328
    8. ',num' → logprob: -13.341083526611328
    9. ' ' → logprob: -13.591083526611328
    10. '(num' → logprob: -13.716083526611328

Token 378: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015943869948387146
    2. ' +' → logprob: -8.75015926361084
    3. '+
' → logprob: -14.50015926361084
    4. 'num' → logprob: -14.87515926361084
    5. ' num' → logprob: -17.500160217285156
    6. '```' → logprob: -17.500160217285156
    7. '+=' → logprob: -18.250160217285156
    8. ''+' → logprob: -18.625160217285156
    9. '+'' → logprob: -18.750160217285156
    10. '+n' → logprob: -19.000160217285156

Token 379: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -6.2729995988775045e-06
    2. ' num' → logprob: -12.000006675720215
    3. ' ' → logprob: -21.7500057220459
    4. 'nu' → logprob: -22.3750057220459
    5. '	num' → logprob: -22.8750057220459
    6. '(num' → logprob: -22.8750057220459
    7. '$num' → logprob: -23.5000057220459
    8. '   ' → logprob: -23.6250057220459
    9. '[num' → logprob: -24.0000057220459
    10. 'number' → logprob: -24.5000057220459

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10448247194290161
    2. '   ' → logprob: -2.479482412338257
    3. 'print' → logprob: -4.229482650756836
    4. ' print' → logprob: -7.104482650756836
    5. '
' → logprob: -10.354482650756836
    6. ' ' → logprob: -12.729482650756836
    7. '           ' → logprob: -13.354482650756836
    8. '	print' → logprob: -13.604482650756836
    9. '```' → logprob: -14.229482650756836
    10. '        
' → logprob: -14.604482650756836

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034165408462285995
    2. 'print' → logprob: -3.784165382385254
    3. '   ' → logprob: -4.534165382385254
    4. ' print' → logprob: -9.034165382385254
    5. '```' → logprob: -12.659165382385254
    6. '	print' → logprob: -14.409165382385254
    7. '
' → logprob: -14.534165382385254
    8. '           ' → logprob: -14.784165382385254
    9. ' ' → logprob: -15.534165382385254
    10. '<|end|>' → logprob: -16.28416633605957

Token 382: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009140860638581216
    2. '   ' → logprob: -7.250914096832275
    3. ' print' → logprob: -8.500913619995117
    4. '```' → logprob: -14.375913619995117
    5. '	print' → logprob: -16.125913619995117
    6. '
' → logprob: -16.500913619995117
    7. '       ' → logprob: -17.625913619995117
    8. ' ' → logprob: -17.875913619995117
    9. '``' → logprob: -19.750913619995117
    10. '`' → logprob: -19.875913619995117

Token 383: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.085517113911919e-05
    2. '(' → logprob: -10.00005054473877
    3. '()' → logprob: -12.75005054473877
    4. '('' → logprob: -13.00005054473877
    5. 'line' → logprob: -17.000051498413086
    6. ' (' → logprob: -17.875051498413086
    7. '[line' → logprob: -17.875051498413086
    8. '(Line' → logprob: -18.000051498413086
    9. '(len' → logprob: -18.375051498413086
    10. '(
' → logprob: -18.500051498413086

Token 384: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -1.5690089639974758e-05
    2. ')' → logprob: -11.250015258789062
    3. ')_' → logprob: -13.250015258789062
    4. 'out' → logprob: -14.875015258789062
    5. '+' → logprob: -15.125015258789062
    6. '_)' → logprob: -16.375015258789062
    7. ''_' → logprob: -17.250015258789062
    8. '       ' → logprob: -17.625015258789062
    9. '   ' → logprob: -17.750015258789062
    10. '_' → logprob: -17.750015258789062

Token 385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. '<|end|>' → logprob: -12.750009536743164
    3. '')' → logprob: -13.000009536743164
    4. ' )' → logprob: -13.250009536743164
    5. ')
' → logprob: -13.375009536743164
    6. '   ' → logprob: -14.750009536743164
    7. '())' → logprob: -16.750009536743164
    8. '")' → logprob: -17.000009536743164
    9. '```' → logprob: -17.250009536743164
    10. '()' → logprob: -17.375009536743164

Token 386: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: ' data' (ID: 1238)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008188411593437195
    2. ' ' → logprob: -5.258188247680664
    3. 'n' → logprob: -6.133188247680664
    4. ' '' → logprob: -8.508188247680664
    5. ''' → logprob: -8.633188247680664
    6. ' not' → logprob: -8.633188247680664
    7. '  ' → logprob: -9.258188247680664
    8. ' ' → logprob: -9.633188247680664
    9. ' i' → logprob: -10.383188247680664
    10. ' data' → logprob: -11.633188247680664

Token 389: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0028148628771305084
    2. '_n' → logprob: -6.127814769744873
    3. '_' → logprob: -7.627814769744873
    4. '_x' → logprob: -9.752815246582031
    5. 'x' → logprob: -10.752815246582031
    6. '>' → logprob: -11.127815246582031
    7. '==' → logprob: -11.627815246582031
    8. '!=' → logprob: -11.877815246582031
    9. '=' → logprob: -12.002815246582031
    10. 'n' → logprob: -12.252815246582031

Token 390: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5606266260147095
    2. ' <' → logprob: -0.9356266260147095
    3. '<' → logprob: -3.68562650680542
    4. '!=' → logprob: -4.68562650680542
    5. '<n' → logprob: -6.43562650680542
    6. '<data' → logprob: -8.185626983642578
    7. '<len' → logprob: -8.435626983642578
    8. '<num' → logprob: -9.060626983642578
    9. ' ==' → logprob: -9.560626983642578
    10. ' ' → logprob: -10.060626983642578

Token 391: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0067154900170862675
    2. ' n' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.506715774536133
    4. '	n' → logprob: -18.131715774536133
    5. '0' → logprob: -18.506715774536133
    6. '(n' → logprob: -18.881715774536133
    7. ' ' → logprob: -20.006715774536133
    8. '<n' → logprob: -20.006715774536133
    9. '
' → logprob: -21.256715774536133
    10. ' ' → logprob: -22.381715774536133

Token 392: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07217006385326385
    2. ' -' → logprob: -3.8221700191497803
    3. ' !=' → logprob: -4.322170257568359
    4. '<' → logprob: -4.447170257568359
    5. '!=' → logprob: -4.822170257568359
    6. '<n' → logprob: -4.947170257568359
    7. ' <' → logprob: -5.947170257568359
    8. ' ' → logprob: -6.072170257568359
    9. '  ' → logprob: -7.072170257568359
    10. ':' → logprob: -7.572170257568359

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.12500762939453
    4. '
' → logprob: -19.87500762939453
    5. '```' → logprob: -19.87500762939453
    6. '１' → logprob: -20.12500762939453
    7. '  ' → logprob: -20.62500762939453
    8. '۱' → logprob: -20.87500762939453
    9. '১' → logprob: -21.37500762939453
    10. '    ' → logprob: -22.18750762939453

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34059464931488037
    2. '   ' → logprob: -1.9655946493148804
    3. ':
' → logprob: -2.21559476852417
    4. '       ' → logprob: -3.34059476852417
    5. 'print' → logprob: -6.21559476852417
    6. ' print' → logprob: -7.84059476852417
    7. '<|end|>' → logprob: -7.84059476852417
    8. ',' → logprob: -8.215594291687012
    9. '\n' → logprob: -8.840594291687012
    10. '():
' → logprob: -8.965594291687012

Token 395: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0245618037879467
    2. ' print' → logprob: -4.399561882019043
    3. '       ' → logprob: -5.024561882019043
    4. 'print' → logprob: -5.274561882019043
    5. '
' → logprob: -8.524561882019043
    6. '    
' → logprob: -9.899561882019043
    7. '	print' → logprob: -10.524561882019043
    8. '        
' → logprob: -12.774561882019043
    9. '```' → logprob: -13.149561882019043
    10. ' 
' → logprob: -13.774561882019043

Token 396: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000181372175575234
    2. ' print' → logprob: -8.750181198120117
    3. '   ' → logprob: -10.750181198120117
    4. '    
' → logprob: -14.125181198120117
    5. '	print' → logprob: -14.875181198120117
    6. '
' → logprob: -15.250181198120117
    7. '       ' → logprob: -16.875181198120117
    8. '        
' → logprob: -17.500181198120117
    9. ' 
' → logprob: -18.500181198120117
    10. '\n' → logprob: -18.750181198120117

Token 397: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.856408536899835e-05
    2. '("")' → logprob: -10.625028610229492
    3. '()
' → logprob: -12.625028610229492
    4. '('' → logprob: -15.000028610229492
    5. ' ()' → logprob: -15.250028610229492
    6. '(' → logprob: -15.625028610229492
    7. '()\' → logprob: -16.000028610229492
    8. '""' → logprob: -17.250028610229492
    9. '()

' → logprob: -17.375028610229492
    10. '（）' → logprob: -19.125028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 395
Tokens correctement prédits (1ère position, stricte): 185
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 344
Précision stricte (1ère position): 46.84%
Précision adaptée (1ère position): 52.15%
Précision (top 10): 87.09%
================================================================================
