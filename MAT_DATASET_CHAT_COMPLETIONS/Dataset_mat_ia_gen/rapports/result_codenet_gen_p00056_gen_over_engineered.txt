================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PrimeGenerator:
    def __init__(self, limit: int):
        self.limit = limit
        self._sieve = None
        self._primes = None
        self._generate_primes()
        
    def _generate_primes(self):
        sieve = [True] * (self.limit + 1)
        sieve[0] = False
        sieve[1] = False
        for i in range(2, int(self.limit**0.5) + 1):
            if sieve[i]:
                for j in range(i*i, self.limit + 1, i):
                    sieve[j] = False
        self._sieve = sieve
        self._primes = [i for i, prime in enumerate(sieve) if prime]
    
    def is_prime(self, num: int) -> bool:
        if 0 <= num <= self.limit:
            return self._sieve[num]
        # For numbers out of precalculated range: fallback (not expected here)
        if num < 2:
            return False
        for prime in self._primes:
            if prime * prime > num:
                break
            if num % prime == 0:
                return False
        return True
    
    @property
    def primes(self):
        return self._primes


class GoldbachSolver:
    def __init__(self, max_limit: int = 50000):
        self.max_limit = max_limit
        self.prime_generator = PrimeGenerator(self.max_limit)
    
    def count_prime_sum_pairs(self, n: int) -> int:
        if n < 4:
            return 0
        count = 0
        primes = self.prime_generator.primes
        sieve = self.prime_generator._sieve
        # To avoid double counting, iterate up to n//2
        for prime in primes:
            if prime > n // 2:
                break
            complement = n - prime
            if sieve[complement]:
                count += 1
        return count


class InputOutputHandler:
    def __init__(self):
        self.solver = GoldbachSolver()
        
    def process_input(self):
        import sys
        for line in sys.stdin:
            n = line.strip()
            if not n.isdigit():
                continue
            n = int(n)
            if n == 0:
                break
            print(self.solver.count_prime_sum_pairs(n))


if __name__ == "__main__":
    io_handler = InputOutputHandler()
    io_handler.process_input()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Prime' (ID: 20134)
  → Token d'amorce (pas de prédiction)

Token 2: 'Generator' (ID: 14802)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41379621624946594
    2. '(' → logprob: -1.1637961864471436
    3. '.' → logprob: -4.288796424865723
    4. '{' → logprob: -4.538796424865723
    5. '(:' → logprob: -6.413796424865723
    6. '():' → logprob: -8.038796424865723
    7. '```' → logprob: -9.538796424865723
    8. '[' → logprob: -11.038796424865723
    9. ' :' → logprob: -11.163796424865723
    10. '(`' → logprob: -11.538796424865723

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03855697065591812
    2. '(' → logprob: -3.4135570526123047
    3. '```' → logprob: -5.663557052612305
    4. ':
' → logprob: -7.163557052612305
    5. '   ' → logprob: -8.038557052612305
    6. '():' → logprob: -8.663557052612305
    7. '(
' → logprob: -9.663557052612305
    8. '(:' → logprob: -10.663557052612305
    9. '``' → logprob: -11.538557052612305
    10. '.' → logprob: -11.538557052612305

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.517801821231842
    2. '```' → logprob: -1.8928017616271973
    3. 'def' (adapté à ' def') → logprob: -2.1428017616271973
    4. ' def' → logprob: -2.2678017616271973
    5. '(' → logprob: -4.267801761627197
    6. ':' → logprob: -4.642801761627197
    7. '\' → logprob: -6.142801761627197
    8. '``' → logprob: -6.142801761627197
    9. ' ' → logprob: -6.392801761627197
    10. '`' → logprob: -7.517801761627197

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11369610577821732
    2. '__' → logprob: -3.1136960983276367
    3. ' __' → logprob: -3.7386960983276367
    4. ' generate' → logprob: -3.9886960983276367
    5. ' ' → logprob: -5.238696098327637
    6. 'generate' → logprob: -5.488696098327637
    7. '_' → logprob: -6.363696098327637
    8. ' calculate' → logprob: -6.363696098327637
    9. '  ' → logprob: -6.988696098327637
    10. ' find' → logprob: -7.113696098327637

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.749814019713085e-06
    2. ' init' → logprob: -12.000006675720215
    3. '_init' → logprob: -14.750006675720215
    4. 'iter' → logprob: -16.87500762939453
    5. 'ini' → logprob: -17.00000762939453
    6. '	init' → logprob: -18.50000762939453
    7. 'in' → logprob: -18.62500762939453
    8. 'int' → logprob: -18.75000762939453
    9. 'inite' → logprob: -18.75000762939453
    10. 'i' → logprob: -18.87500762939453

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09854008257389069
    2. '__' → logprob: -2.4735400676727295
    3. '(' → logprob: -5.098540306091309
    4. '(self' → logprob: -5.973540306091309
    5. '__(
' → logprob: -7.848540306091309
    6. '__((' → logprob: -8.348540306091309
    7. '_' → logprob: -9.348540306091309
    8. '__('' → logprob: -10.223540306091309
    9. '__(*' → logprob: -10.348540306091309
    10. ' (' → logprob: -10.473540306091309

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004682999569922686
    2. ' self' → logprob: -5.379683017730713
    3. ')' → logprob: -10.004682540893555
    4. '(self' → logprob: -11.379682540893555
    5. ' )' → logprob: -12.629682540893555
    6. ' ' → logprob: -14.379682540893555
    7. ',self' → logprob: -14.754682540893555
    8. '[self' → logprob: -15.004682540893555
    9. '   ' → logprob: -15.629682540893555
    10. '_self' → logprob: -15.754682540893555

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06636980175971985
    2. ')' → logprob: -3.4413697719573975
    3. '_' → logprob: -4.691370010375977
    4. '):' → logprob: -4.691370010375977
    5. 'self' → logprob: -4.816370010375977
    6. ' ,' → logprob: -5.941370010375977
    7. '_self' → logprob: -7.066370010375977
    8. ' )' → logprob: -7.566370010375977
    9. ' ' → logprob: -7.816370010375977
    10. '<|end|>' → logprob: -8.191370010375977

Token 11: ' limit' (ID: 5967)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30173859000205994
    2. ' self' → logprob: -1.4267386198043823
    3. ' start' → logprob: -5.426738739013672
    4. 'start' → logprob: -5.426738739013672
    5. ' n' → logprob: -5.801738739013672
    6. '   ' → logprob: -5.801738739013672
    7. 'n' → logprob: -6.051738739013672
    8. ')' → logprob: -6.301738739013672
    9. '       ' → logprob: -7.551738739013672
    10. ' )' → logprob: -7.926738739013672

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004676711279898882
    2. ':' → logprob: -5.754676818847656
    3. '=' → logprob: -7.129676818847656
    4. ')' → logprob: -7.504676818847656
    5. '):
' → logprob: -9.754676818847656
    6. ',' → logprob: -9.879676818847656
    7. ' ):' → logprob: -10.754676818847656
    8. ' :' → logprob: -13.004676818847656
    9. '=None' → logprob: -13.004676818847656
    10. ':int' → logprob: -13.254676818847656

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759497284889221
    2. ' int' → logprob: -0.8259497284889221
    3. '=int' → logprob: -11.950949668884277
    4. ':int' → logprob: -13.575949668884277
    5. '(int' → logprob: -14.200949668884277
    6. '[int' → logprob: -14.700949668884277
    7. ' ' → logprob: -14.825949668884277
    8. '<int' → logprob: -14.950949668884277
    9. ' ' → logprob: -15.700949668884277
    10. '   ' → logprob: -16.075950622558594

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029629655182361603
    2. ')' → logprob: -5.877963066101074
    3. '):
' → logprob: -9.252963066101074
    4. ',' → logprob: -10.502963066101074
    5. '   ' → logprob: -11.127963066101074
    6. ':' → logprob: -11.502963066101074
    7. '```' → logprob: -13.502963066101074
    8. '):
' → logprob: -13.627963066101074
    9. ' ):' → logprob: -13.752963066101074
    10. '=' → logprob: -13.752963066101074

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04176459461450577
    2. '   ' → logprob: -4.416764736175537
    3. '    ' → logprob: -4.541764736175537
    4. 'self' → logprob: -5.541764736175537
    5. '        
' → logprob: -6.041764736175537
    6. '\n' → logprob: -6.291764736175537
    7. '\' → logprob: -6.291764736175537
    8. '<|end|>' → logprob: -6.416764736175537
    9. '```' → logprob: -6.541764736175537
    10. ' 
' → logprob: -7.291764736175537

Token 16: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1720896065235138
    2. '       ' → logprob: -2.2970895767211914
    3. ' self' → logprob: -2.9220895767211914
    4. '\n' → logprob: -6.797089576721191
    5. '```' → logprob: -6.797089576721191
    6. '\' → logprob: -7.422089576721191
    7. '   ' → logprob: -7.797089576721191
    8. '_self' → logprob: -9.422089576721191
    9. '        
' → logprob: -9.922089576721191
    10. ' ' → logprob: -10.047089576721191

Token 17: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.2496442347764969
    2. '.' → logprob: -1.6246442794799805
    3. '._' → logprob: -4.3746442794799805
    4. '.next' → logprob: -5.7496442794799805
    5. '.n' → logprob: -5.8746442794799805
    6. ' .' → logprob: -5.9996442794799805
    7. '.pr' → logprob: -6.8746442794799805
    8. '.num' → logprob: -7.7496442794799805
    9. '.counter' → logprob: -7.9996442794799805
    10. '.l' → logprob: -8.37464427947998

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25202634930610657
    2. '=' → logprob: -1.5020263195037842
    3. '<|end|>' → logprob: -9.627026557922363
    4. ' ' → logprob: -11.377026557922363
    5. '.' → logprob: -12.502026557922363
    6. '   ' → logprob: -12.752026557922363
    7. '_' → logprob: -13.002026557922363
    8. ' =
' → logprob: -13.002026557922363
    9. '<|end|>' → logprob: -13.377026557922363
    10. ' =)' → logprob: -13.627026557922363

Token 19: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.00462284917011857
    2. 'limit' → logprob: -5.379622936248779
    3. '(limit' → logprob: -13.004622459411621
    4. ' ' → logprob: -15.379622459411621
    5. '_limit' → logprob: -15.629622459411621
    6. '.limit' → logprob: -17.629623413085938
    7. ' ' → logprob: -18.004623413085938
    8. 'Limit' → logprob: -18.504623413085938
    9. '0' → logprob: -18.879623413085938
    10. ' limite' → logprob: -19.254623413085938

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21679288148880005
    2. '\n' → logprob: -2.8417928218841553
    3. '    
' → logprob: -2.8417928218841553
    4. '   ' → logprob: -3.3417928218841553
    5. '  
' → logprob: -4.091793060302734
    6. ' 
' → logprob: -5.216793060302734
    7. '\' → logprob: -5.216793060302734
    8. '```' → logprob: -5.591793060302734
    9. '       ' → logprob: -6.216793060302734
    10. '   
' → logprob: -6.341793060302734

Token 21: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35481852293014526
    2. '\n' → logprob: -1.97981858253479
    3. '   ' → logprob: -2.60481858253479
    4. '    
' → logprob: -3.10481858253479
    5. '```' → logprob: -4.229818344116211
    6. '  
' → logprob: -4.479818344116211
    7. '\' → logprob: -5.479818344116211
    8. '``' → logprob: -5.979818344116211
    9. ' 
' → logprob: -6.354818344116211
    10. '   
' → logprob: -6.729818344116211

Token 22: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006713955197483301
    2. '       ' → logprob: -6.0067138671875
    3. '\n' → logprob: -6.0067138671875
    4. '    
' → logprob: -7.3817138671875
    5. '   ' → logprob: -7.8817138671875
    6. '        
' → logprob: -8.1317138671875
    7. '```' → logprob: -9.2567138671875
    8. '<|end|>' → logprob: -9.3817138671875
    9. '\' → logprob: -9.5067138671875
    10. '
' → logprob: -9.6317138671875

Token 23: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.052022676914930344
    2. '._' → logprob: -3.427022695541382
    3. ' .' → logprob: -4.677022457122803
    4. '.next' → logprob: -5.927022457122803
    5. '.current' → logprob: -6.552022457122803
    6. '.n' → logprob: -6.802022457122803
    7. '.pr' → logprob: -7.052022457122803
    8. ' ' → logprob: -8.177022933959961
    9. '.value' → logprob: -8.177022933959961
    10. '.is' → logprob: -8.177022933959961

Token 24: 's' (ID: 82)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.229832723736763
    2. 'pr' → logprob: -1.7298327684402466
    3. 'next' → logprob: -3.604832649230957
    4. 'last' → logprob: -7.854832649230957
    5. 'cache' → logprob: -8.854832649230957
    6. 'is' → logprob: -9.354832649230957
    7. 'curr' → logprob: -10.479832649230957
    8. '_current' → logprob: -10.479832649230957
    9. '_pr' → logprob: -10.979832649230957
    10. 'c' → logprob: -11.104832649230957

Token 25: 'ieve' (ID: 3703)
  Prédit: 'ieved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieved' → logprob: -0.6283365488052368
    2. 'ieve' → logprob: -1.2533365488052368
    3. 'elf' → logprob: -2.3783364295959473
    4. 't' → logprob: -3.3783364295959473
    5. 'et' → logprob: -3.6283364295959473
    6. 'een' → logprob: -4.628336429595947
    7. 'e' → logprob: -4.878336429595947
    8. 'qrt' → logprob: -5.878336429595947
    9. 'p' → logprob: -7.003336429595947
    10. '_' → logprob: -7.003336429595947

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12932497262954712
    2. '=' → logprob: -2.1293249130249023
    3. '[:]' → logprob: -7.004324913024902
    4. '[' → logprob: -7.129324913024902
    5. '_' → logprob: -7.754324913024902
    6. '[]' → logprob: -8.879324913024902
    7. ' ' → logprob: -10.504324913024902
    8. '   ' → logprob: -11.004324913024902
    9. '=[]' → logprob: -11.004324913024902
    10. ':' → logprob: -11.879324913024902

Token 27: ' None' (ID: 4662)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.25196215510368347
    2. '[' → logprob: -1.5019621849060059
    3. '[]' → logprob: -11.501961708068848
    4. ' ' → logprob: -12.251961708068848
    5. ' []' → logprob: -12.376961708068848
    6. '[s' → logprob: -12.376961708068848
    7. '[self' → logprob: -12.751961708068848
    8. '[a' → logprob: -13.626961708068848
    9. '[int' → logprob: -14.001961708068848
    10. '[start' → logprob: -14.001961708068848

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005690688267350197
    2. '   ' → logprob: -6.505690574645996
    3. '    
' → logprob: -7.005690574645996
    4. '\n' → logprob: -7.130690574645996
    5. '

' → logprob: -7.255690574645996
    6. '\' → logprob: -7.505690574645996
    7. ' 
' → logprob: -8.130690574645996
    8. '<|end|>' → logprob: -8.380690574645996
    9. '  
' → logprob: -8.630690574645996
    10. '' → logprob: -8.880690574645996

Token 29: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27045145630836487
    2. '   ' → logprob: -1.8954514265060425
    3. '    
' → logprob: -3.770451545715332
    4. '<|end|>' → logprob: -3.770451545715332
    5. '\n' → logprob: -4.145451545715332
    6. '\' → logprob: -4.895451545715332
    7. '  
' → logprob: -5.395451545715332
    8. 'def' → logprob: -5.645451545715332
    9. ' 
' → logprob: -5.895451545715332
    10. ' ' → logprob: -6.770451545715332

Token 30: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4242956042289734
    2. '   ' → logprob: -1.7992956638336182
    3. 'def' → logprob: -2.424295663833618
    4. '    
' → logprob: -2.549295663833618
    5. '  
' → logprob: -5.674295425415039
    6. ' 
' → logprob: -5.799295425415039
    7. '\n' → logprob: -6.299295425415039
    8. ' def' → logprob: -6.674295425415039
    9. '        
' → logprob: -6.674295425415039
    10. '   
' → logprob: -7.299295425415039

Token 31: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06320703029632568
    2. '._' → logprob: -2.8132071495056152
    3. '.next' → logprob: -7.313207149505615
    4. '.is' → logprob: -8.563206672668457
    5. ' .' → logprob: -8.688206672668457
    6. '.has' → logprob: -10.688206672668457
    7. '.current' → logprob: -11.063206672668457
    8. '.s' → logprob: -11.188206672668457
    9. '.generate' → logprob: -11.313206672668457
    10. '.generated' → logprob: -11.563206672668457

Token 32: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.8597931265830994
    2. 's' → logprob: -1.1097931861877441
    3. 'generate' → logprob: -1.8597931861877441
    4. 'is' → logprob: -2.734793186187744
    5. 'current' → logprob: -4.359793186187744
    6. 'next' → logprob: -5.984793186187744
    7. 'prime' → logprob: -6.609793186187744
    8. 'initialized' → logprob: -6.734793186187744
    9. 'compute' → logprob: -6.984793186187744
    10. 'build' → logprob: -7.359793186187744

Token 33: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.1370818316936493
    2. 'ime' → logprob: -2.1370818614959717
    3. '_' → logprob: -5.949581623077393
    4. 'im' → logprob: -7.574581623077393
    5. 'omes' → logprob: -7.574581623077393
    6. '__' → logprob: -7.637081623077393
    7. '```' → logprob: -7.762081623077393
    8. 'i' → logprob: -8.26208209991455
    9. '#' → logprob: -8.32458209991455
    10. 'mes' → logprob: -8.63708209991455

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698186933994293
    2. '=' → logprob: -2.1269819736480713
    3. '<|end|>' → logprob: -10.876981735229492
    4. '=[]' → logprob: -11.001981735229492
    5. ' ' → logprob: -11.501981735229492
    6. '_' → logprob: -13.501981735229492
    7. '  ' → logprob: -13.626981735229492
    8. '   ' → logprob: -14.001981735229492
    9. '=None' → logprob: -14.376981735229492
    10. ')' → logprob: -14.501981735229492

Token 35: ' None' (ID: 4662)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.01818026416003704
    2. '[]' → logprob: -4.0181803703308105
    3. ' [' → logprob: -10.768179893493652
    4. ' set' → logprob: -12.643179893493652
    5. ' ' → logprob: -12.768179893493652
    6. '[' → logprob: -13.018179893493652
    7. ' []
' → logprob: -14.518179893493652
    8. 'set' → logprob: -16.01818084716797
    9. ' []

' → logprob: -16.01818084716797
    10. ' None' → logprob: -16.39318084716797

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024214524775743484
    2. '   ' → logprob: -4.274214744567871
    3. '<|end|>' → logprob: -5.024214744567871
    4. ' 
' → logprob: -6.899214744567871
    5. '    
' → logprob: -6.899214744567871
    6. '' → logprob: -8.399214744567871
    7. '\n' → logprob: -8.399214744567871
    8. '  
' → logprob: -8.524214744567871
    9. '```' → logprob: -8.649214744567871
    10. '\' → logprob: -8.899214744567871

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23999355733394623
    2. '
' → logprob: -1.8649935722351074
    3. '    
' → logprob: -3.7399935722351074
    4. '\' → logprob: -4.489993572235107
    5. '\n' → logprob: -4.614993572235107
    6. ' 
' → logprob: -5.114993572235107
    7. '```' → logprob: -6.114993572235107
    8. '  
' → logprob: -6.739993572235107
    9. 'def' → logprob: -6.989993572235107
    10. '' → logprob: -7.364993572235107

Token 38: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20940446853637695
    2. '
' → logprob: -1.959404468536377
    3. 'def' → logprob: -3.209404468536377
    4. '    
' → logprob: -5.334404468536377
    5. ' def' → logprob: -6.834404468536377
    6. '```' → logprob: -6.834404468536377
    7. '	def' → logprob: -9.084403991699219
    8. ' 
' → logprob: -9.334403991699219
    9. '\n' → logprob: -9.459403991699219
    10. '        
' → logprob: -9.709403991699219

Token 39: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10486875474452972
    2. '._' → logprob: -2.3548686504364014
    3. '.next' → logprob: -5.6048688888549805
    4. '.is' → logprob: -8.22986888885498
    5. ' .' → logprob: -8.72986888885498
    6. '.has' → logprob: -10.10486888885498
    7. '.current' → logprob: -10.35486888885498
    8. '.find' → logprob: -10.47986888885498
    9. '.reset' → logprob: -10.72986888885498
    10. '.generate' → logprob: -10.72986888885498

Token 40: 'generate' (ID: 36386)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4275464117527008
    2. 'generate' → logprob: -1.4275463819503784
    3. 'current' → logprob: -3.177546501159668
    4. 'is' → logprob: -4.552546501159668
    5. 'next' → logprob: -4.802546501159668
    6. 'initialized' → logprob: -5.052546501159668
    7. '_generate' → logprob: -5.552546501159668
    8. 'pr' → logprob: -5.552546501159668
    9. '_s' → logprob: -5.677546501159668
    10. 'initialize' → logprob: -5.802546501159668

Token 41: '_pr' (ID: 18177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.028306245803833
    2. '_pr' → logprob: -1.153306245803833
    3. '_s' → logprob: -1.528306245803833
    4. '()' → logprob: -2.403306245803833
    5. '(' → logprob: -4.028306007385254
    6. '_prime' → logprob: -7.653306007385254
    7. 's' → logprob: -8.153306007385254
    8. 'pr' → logprob: -9.028306007385254
    9. '```' → logprob: -9.403306007385254
    10. '_numbers' → logprob: -9.403306007385254

Token 42: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.044479694217443466
    2. 'ime' → logprob: -3.4194796085357666
    3. '_' → logprob: -5.919479846954346
    4. 'mes' → logprob: -5.919479846954346
    5. 'me' → logprob: -6.919479846954346
    6. '   ' → logprob: -7.294479846954346
    7. '```' → logprob: -7.731979846954346
    8. '\' → logprob: -8.794479370117188
    9. 'omes' → logprob: -8.981979370117188
    10. 'im' → logprob: -9.044479370117188

Token 43: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2527066767215729
    2. '(' → logprob: -1.5027066469192505
    3. '_' → logprob: -7.377706527709961
    4. '(
' → logprob: -9.752706527709961
    5. '()
' → logprob: -10.377706527709961
    6. ')' → logprob: -11.377706527709961
    7. ' ()' → logprob: -11.627706527709961
    8. '```' → logprob: -12.127706527709961
    9. ' ' → logprob: -12.252706527709961
    10. '_parent' → logprob: -12.377706527709961

Token 44: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6183263659477234
    2. '
' → logprob: -1.2433264255523682
    3. '<|end|>' → logprob: -2.743326425552368
    4. '```' → logprob: -3.993326425552368
    5. 'def' → logprob: -4.118326187133789
    6. '\' → logprob: -4.243326187133789
    7. '    
' → logprob: -4.243326187133789
    8. '\n' → logprob: -4.493326187133789
    9. '_' → logprob: -4.618326187133789
    10. 'n' → logprob: -5.243326187133789

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13096070289611816
    2. 'def' → logprob: -2.380960702896118
    3. ' def' → logprob: -4.630960464477539
    4. '
' → logprob: -4.755960464477539
    5. '    
' → logprob: -5.755960464477539
    6. '<|end|>' → logprob: -5.755960464477539
    7. ' ' → logprob: -6.255960464477539
    8. '```' → logprob: -6.505960464477539
    9. '  
' → logprob: -7.880960464477539
    10. '\' → logprob: -8.130960464477539

Token 46: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001600910210981965
    2. 'd' → logprob: -6.751600742340088
    3. ' def' → logprob: -8.251601219177246
    4. '   ' → logprob: -8.751601219177246
    5. '_' → logprob: -11.751601219177246
    6. ' ' → logprob: -13.126601219177246
    7. 'de' → logprob: -14.126601219177246
    8. '@' → logprob: -15.876601219177246
    9. '	def' → logprob: -15.876601219177246
    10. '_def' → logprob: -15.876601219177246

Token 47: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1334604173898697
    2. '_' → logprob: -2.633460521697998
    3. '_generate' → logprob: -3.008460521697998
    4. ' ' → logprob: -5.758460521697998
    5. '_space' → logprob: -8.50846004486084
    6. '_get' → logprob: -9.50846004486084
    7. '_find' → logprob: -10.13346004486084
    8. ' ' → logprob: -10.38346004486084
    9. '_continue' → logprob: -10.38346004486084
    10. ' def' → logprob: -10.38346004486084

Token 48: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.0003246183041483164
    2. 'gener' → logprob: -8.875324249267578
    3. '_generate' → logprob: -9.375324249267578
    4. 'g' → logprob: -9.625324249267578
    5. 'gene' → logprob: -11.000324249267578
    6. 'gen' → logprob: -12.000324249267578
    7. 'ge' → logprob: -12.625324249267578
    8. 's' → logprob: -13.375324249267578
    9. ' generate' → logprob: -13.500324249267578
    10. '_g' → logprob: -14.000324249267578

Token 49: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.014368814416229725
    2. '_' → logprob: -4.264369010925293
    3. '_s' → logprob: -9.764369010925293
    4. '_p' → logprob: -10.014369010925293
    5. '_prime' → logprob: -10.014369010925293
    6. '```' → logprob: -11.514369010925293
    7. '_pro' → logprob: -12.014369010925293
    8. '_Pr' → logprob: -12.514369010925293
    9. ' _' → logprob: -12.514369010925293
    10. '_ps' → logprob: -12.889369010925293

Token 50: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0028142668306827545
    2. '_' → logprob: -6.002814292907715
    3. 'ime' → logprob: -9.502814292907715
    4. '   ' → logprob: -10.377814292907715
    5. '```' → logprob: -10.502814292907715
    6. '{' → logprob: -10.877814292907715
    7. '_im' → logprob: -10.877814292907715
    8. '__' → logprob: -11.127814292907715
    9. '\' → logprob: -11.502814292907715
    10. '`' → logprob: -11.627814292907715

Token 51: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11372260749340057
    2. '(' → logprob: -2.238722562789917
    3. ' (' → logprob: -7.863722801208496
    4. 'self' → logprob: -8.113722801208496
    5. '   ' → logprob: -8.988722801208496
    6. ' ' → logprob: -10.238722801208496
    7. '```' → logprob: -11.488722801208496
    8. '       ' → logprob: -11.738722801208496
    9. '_self' → logprob: -11.863722801208496
    10. '(Self' → logprob: -12.238722801208496

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01304139755666256
    2. ',' → logprob: -4.5130414962768555
    3. ')' → logprob: -6.6380414962768555
    4. 'self' → logprob: -8.013041496276855
    5. ' ):' → logprob: -8.263041496276855
    6. ':' → logprob: -10.263041496276855
    7. '):
' → logprob: -11.513041496276855
    8. '_' → logprob: -11.638041496276855
    9. '(self' → logprob: -12.013041496276855
    10. '   ' → logprob: -12.263041496276855

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4460096061229706
    2. ':' → logprob: -1.071009635925293
    3. '```' → logprob: -5.071009635925293
    4. '   ' → logprob: -5.321009635925293
    5. ':
' → logprob: -6.821009635925293
    6. '\' → logprob: -6.821009635925293
    7. '():' → logprob: -7.071009635925293
    8. '    ' → logprob: -7.946009635925293
    9. '        
' → logprob: -7.946009635925293
    10. '        ' → logprob: -8.446009635925293

Token 54: ' sieve' (ID: 142781)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7713322639465332
    2. ' sieve' → logprob: -1.6463322639465332
    3. 'self' → logprob: -1.8963322639465332
    4. ' if' → logprob: -2.021332263946533
    5. 's' → logprob: -3.771332263946533
    6. '       ' → logprob: -4.146332263946533
    7. ' n' → logprob: -4.896332263946533
    8. 'if' → logprob: -5.146332263946533
    9. 'n' → logprob: -5.271332263946533
    10. ' limit' → logprob: -6.646332263946533

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007267289329320192
    2. '=' → logprob: -7.250726699829102
    3. ' ' → logprob: -11.500726699829102
    4. '[' → logprob: -12.500726699829102
    5. '   ' → logprob: -14.500726699829102
    6. ' =[' → logprob: -14.625726699829102
    7. '  ' → logprob: -15.000726699829102
    8. ',' → logprob: -15.125726699829102
    9. '[:]' → logprob: -15.625726699829102
    10. '<|end|>' → logprob: -15.875726699829102

Token 56: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018155796453356743
    2. ' [' → logprob: -4.018155574798584
    3. '[self' → logprob: -12.518156051635742
    4. '[s' → logprob: -14.143156051635742
    5. '   ' → logprob: -14.518156051635742
    6. ' ' → logprob: -14.518156051635742
    7. '[n' → logprob: -15.768156051635742
    8. '[int' → logprob: -16.143156051635742
    9. '[a' → logprob: -16.643156051635742
    10. '[start' → logprob: -16.768156051635742

Token 57: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014165159314870834
    2. ' True' → logprob: -4.264164924621582
    3. '(True' → logprob: -13.639164924621582
    4. 'False' → logprob: -14.764164924621582
    5. '   ' → logprob: -16.8891658782959
    6. 'Tr' → logprob: -19.1391658782959
    7. '.True' → logprob: -20.0141658782959
    8. '=True' → logprob: -20.3891658782959
    9. '
' → logprob: -21.2641658782959
    10. 'T' → logprob: -21.3891658782959

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07197584956884384
    2. ' for' → logprob: -2.6969759464263916
    3. ' ]' → logprob: -6.6969757080078125
    4. ']*' → logprob: -7.8219757080078125
    5. 'for' → logprob: -8.071975708007812
    6. ' ' → logprob: -10.571975708007812
    7. ',' → logprob: -10.946975708007812
    8. ']*(' → logprob: -10.946975708007812
    9. '   ' → logprob: -11.446975708007812
    10. ')' → logprob: -11.821975708007812

Token 59: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16442830860614777
    2. '<|end|>' → logprob: -3.164428234100342
    3. ' for' → logprob: -3.289428234100342
    4. '       ' → logprob: -3.914428234100342
    5. ']' → logprob: -4.539428234100342
    6. '(' → logprob: -5.039428234100342
    7. ',' → logprob: -5.039428234100342
    8. 'for' → logprob: -5.289428234100342
    9. ' ' → logprob: -5.414428234100342
    10. '   ' → logprob: -6.039428234100342

Token 60: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12792594730854034
    2. ' (' → logprob: -2.1279258728027344
    3. 'self' → logprob: -7.252925872802734
    4. ' self' → logprob: -8.502925872802734
    5. '(' → logprob: -9.377925872802734
    6. '(this' → logprob: -14.377925872802734
    7. '(max' → logprob: -14.752925872802734
    8. '(len' → logprob: -15.127925872802734
    9. '(sel' → logprob: -15.502925872802734
    10. '(s' → logprob: -16.127925872802734

Token 61: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020710527896881
    2. ' self' → logprob: -2.3502070903778076
    3. '(self' → logprob: -14.975207328796387
    4. '	self' → logprob: -16.97520637512207
    5. ' (' → logprob: -17.35020637512207
    6. ' ' → logprob: -17.72520637512207
    7. '   ' → logprob: -18.22520637512207
    8. '    ' → logprob: -19.60020637512207
    9. '_self' → logprob: -19.72520637512207
    10. '  ' → logprob: -19.97520637512207

Token 62: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.0015518791042268276
    2. 'limit' → logprob: -6.626552104949951
    3. '.' → logprob: -8.501551628112793
    4. ' .' → logprob: -11.626551628112793
    5. ' limit' → logprob: -11.751551628112793
    6. '_limit' → logprob: -12.626551628112793
    7. '.l' → logprob: -14.376551628112793
    8. 'Limit' → logprob: -15.001551628112793
    9. '-limit' → logprob: -15.126551628112793
    10. '._' → logprob: -15.251551628112793

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016049383208155632
    2. ' +' → logprob: -4.141049385070801
    3. ')' → logprob: -11.3910493850708
    4. ' )' → logprob: -13.2660493850708
    5. '+)' → logprob: -13.6410493850708
    6. ' ' → logprob: -14.3910493850708
    7. ' plus' → logprob: -16.891048431396484
    8. '2' → logprob: -17.141048431396484
    9. ')+' → logprob: -17.141048431396484
    10. '+
' → logprob: -17.266048431396484

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889022678136826
    2. ' ' → logprob: -2.578890323638916
    3. '2' → logprob: -14.828889846801758
    4. '```' → logprob: -16.328889846801758
    5. '  ' → logprob: -17.578889846801758
    6. '   ' → logprob: -17.953889846801758
    7. ')' → logprob: -18.453889846801758
    8. ' ' → logprob: -18.578889846801758
    9. '۱' → logprob: -18.953889846801758
    10. '7' → logprob: -19.266389846801758

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.750335693359375
    4. '  ' → logprob: -18.000335693359375
    5. '```' → logprob: -18.250335693359375
    6. ')' → logprob: -18.500335693359375
    7. '2' → logprob: -19.250335693359375
    8. '0' → logprob: -19.625335693359375
    9. '１' → logprob: -20.312835693359375
    10. '۱' → logprob: -20.500335693359375

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041970983147621155
    2. ')
' → logprob: -7.875419616699219
    3. ' )' → logprob: -10.875419616699219
    4. '       ' → logprob: -11.625419616699219
    5. '<|end|>' → logprob: -12.250419616699219
    6. '   ' → logprob: -13.250419616699219
    7. '[' → logprob: -14.125419616699219
    8. ')
' → logprob: -14.375419616699219
    9. '`)' → logprob: -14.500419616699219
    10. ']' → logprob: -14.875419616699219

Token 67: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5768246054649353
    2. '       ' → logprob: -1.70182466506958
    3. '<|end|>' → logprob: -1.82682466506958
    4. ' 
' → logprob: -2.95182466506958
    5. '        
' → logprob: -4.45182466506958
    6. ' ' → logprob: -4.70182466506958
    7. '\n' → logprob: -5.20182466506958
    8. ' for' → logprob: -5.82682466506958
    9. '        ' → logprob: -5.95182466506958
    10. '  
' → logprob: -6.20182466506958

Token 68: ' sieve' (ID: 142781)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8842716217041016
    2. 's' → logprob: -2.0092716217041016
    3. ' ' → logprob: -2.2592716217041016
    4. ' sieve' → logprob: -2.2592716217041016
    5. '       ' → logprob: -2.3842716217041016
    6. 'for' → logprob: -2.8842716217041016
    7. ' 
' → logprob: -3.0092716217041016
    8. '        
' → logprob: -4.009271621704102
    9. 'n' → logprob: -4.884271621704102
    10. ' i' → logprob: -5.384271621704102

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -15.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. '[:' → logprob: -15.875000953674316
    5. '[
' → logprob: -15.875000953674316
    6. '\[' → logprob: -16.375001907348633
    7. '=' → logprob: -17.500001907348633
    8. '[self' → logprob: -17.625001907348633
    9. '<|end|>' → logprob: -17.750001907348633
    10. '[s' → logprob: -18.375001907348633

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003831252979580313
    2. ' ' → logprob: -7.875382900238037
    3. ':' → logprob: -13.875383377075195
    4. '   ' → logprob: -14.250383377075195
    5. '  ' → logprob: -14.750383377075195
    6. '00' → logprob: -14.875383377075195
    7. '2' → logprob: -16.000383377075195
    8. '[' → logprob: -16.500383377075195
    9. '1' → logprob: -16.625383377075195
    10. ' :' → logprob: -16.750383377075195

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001935065840370953
    2. ' ]' → logprob: -6.251935005187988
    3. ']=' → logprob: -12.126935005187988
    4. '],' → logprob: -14.001935005187988
    5. ':' → logprob: -16.376935958862305
    6. '']' → logprob: -17.001935958862305
    7. ']==' → logprob: -17.001935958862305
    8. ')' → logprob: -17.251935958862305
    9. ']
' → logprob: -17.626935958862305
    10. ' ' → logprob: -17.626935958862305

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023285197094082832
    2. '=' → logprob: -3.773285150527954
    3. ']' → logprob: -11.273284912109375
    4. ',' → logprob: -12.023284912109375
    5. ' ' → logprob: -12.023284912109375
    6. '=False' → logprob: -12.148284912109375
    7. ' =
' → logprob: -12.523284912109375
    8. '<|end|>' → logprob: -13.648284912109375
    9. ' ==' → logprob: -14.273284912109375
    10. ' ,' → logprob: -14.398284912109375

Token 73: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931619644165039
    2. 'False' → logprob: -0.6931619644165039
    3. ' sieve' → logprob: -11.443161964416504
    4. 's' → logprob: -13.443161964416504
    5. '(False' → logprob: -13.568161964416504
    6. '=False' → logprob: -14.568161964416504
    7. '.False' → logprob: -14.943161964416504
    8. ' ' → logprob: -15.568161964416504
    9. '_false' → logprob: -16.568161010742188
    10. ' false' → logprob: -17.443161010742188

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00896387454122305
    2. ' sieve' → logprob: -4.7589640617370605
    3. '       ' → logprob: -8.008963584899902
    4. '   ' → logprob: -12.133963584899902
    5. ' ' → logprob: -12.133963584899902
    6. 'sie' → logprob: -13.258963584899902
    7. '```' → logprob: -13.633963584899902
    8. '1' → logprob: -14.133963584899902
    9. '	s' → logprob: -14.383963584899902
    10. '  ' → logprob: -14.758963584899902

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -15.250000953674316
    3. '[
' → logprob: -15.625000953674316
    4. '```' → logprob: -15.625000953674316
    5. ' [' → logprob: -15.750000953674316
    6. '<|end|>' → logprob: -16.000001907348633
    7. 's' → logprob: -17.250001907348633
    8. '\[' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -18.125001907348633
    10. '__[' → logprob: -18.625001907348633

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '[' → logprob: -15.8750581741333
    4. '  ' → logprob: -16.875059127807617
    5. '۱' → logprob: -17.750059127807617
    6. '<|end|>' → logprob: -17.875059127807617
    7. '    ' → logprob: -18.000059127807617
    8. '   ' → logprob: -18.125059127807617
    9. ']' → logprob: -18.750059127807617
    10. '```' → logprob: -18.875059127807617

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005363248288631439
    2. ' =' → logprob: -5.505363464355469
    3. '=' → logprob: -6.880363464355469
    4. ' ]' → logprob: -8.380363464355469
    5. ']=' → logprob: -10.755363464355469
    6. ')' → logprob: -12.505363464355469
    7. ' ' → logprob: -13.630363464355469
    8. '[' → logprob: -15.880363464355469
    9. '<|end|>' → logprob: -16.13036346435547
    10. '']' → logprob: -16.38036346435547

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009614814771339297
    2. '=' → logprob: -7.0009613037109375
    3. ' ' → logprob: -10.250961303710938
    4. ' =
' → logprob: -11.250961303710938
    5. '=False' → logprob: -14.000961303710938
    6. '<|end|>' → logprob: -15.250961303710938
    7. ']' → logprob: -16.250961303710938
    8. ' =
' → logprob: -16.375961303710938
    9. ' =[' → logprob: -16.625961303710938
    10. ' ]' → logprob: -16.875961303710938

Token 81: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.029750604182481766
    2. 'False' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. '(False' → logprob: -17.02975082397461
    5. ' True' → logprob: -17.52975082397461
    6. '=False' → logprob: -17.77975082397461
    7. '.False' → logprob: -18.52975082397461
    8. '_false' → logprob: -19.02975082397461
    9. ' ' → logprob: -19.52975082397461
    10. ' 
' → logprob: -20.02975082397461

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008636995335109532
    2. ' 
' → logprob: -8.000864028930664
    3. '
' → logprob: -8.625864028930664
    4. '

' → logprob: -9.125864028930664
    5. '' → logprob: -9.500864028930664
    6. '<|end|>' → logprob: -9.625864028930664
    7. '\n' → logprob: -10.750864028930664
    8. '  
' → logprob: -10.875864028930664
    9. '       ' → logprob: -11.000864028930664
    10. '        
' → logprob: -11.625864028930664

Token 83: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006858754903078079
    2. '       ' → logprob: -5.381858825683594
    3. ' 
' → logprob: -6.631858825683594
    4. '        
' → logprob: -8.381858825683594
    5. '' → logprob: -8.631858825683594
    6. '  
' → logprob: -9.006858825683594
    7. '\n' → logprob: -9.506858825683594
    8. '<|end|>' → logprob: -9.506858825683594
    9. '    
' → logprob: -9.881858825683594
    10. '```' → logprob: -10.131858825683594

Token 84: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.017415806651115417
    2. ' ' → logprob: -4.267416000366211
    3. 'n' → logprob: -6.892416000366211
    4. ' for' → logprob: -7.017416000366211
    5. ' i' → logprob: -8.392416000366211
    6. '  
' → logprob: -8.642416000366211
    7. '\n' → logprob: -8.642416000366211
    8. '
' → logprob: -9.017416000366211
    9. 'for' (adapté à ' for') → logprob: -9.517416000366211
    10. '\' → logprob: -9.517416000366211

Token 85: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31644681096076965
    2. ' i' → logprob: -1.3164467811584473
    3. 'i' → logprob: -5.816446781158447
    4. '  ' → logprob: -9.816447257995605
    5. ' _' → logprob: -10.441447257995605
    6. ' space' → logprob: -10.566447257995605
    7. ' `' → logprob: -10.816447257995605
    8. '2' → logprob: -11.316447257995605
    9. '_' → logprob: -11.566447257995605
    10. ' ,' → logprob: -12.191447257995605

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03030562959611416
    2. ' ' → logprob: -3.5303056240081787
    3. ' i' → logprob: -8.405305862426758
    4. 'in' → logprob: -8.530305862426758
    5. '  ' → logprob: -9.530305862426758
    6. '2' → logprob: -11.280305862426758
    7. '=' → logprob: -11.280305862426758
    8. ' =' → logprob: -11.905305862426758
    9. '.' → logprob: -12.155305862426758
    10. '1' → logprob: -12.530305862426758

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06461909413337708
    2. ' ' → logprob: -2.8146190643310547
    3. 'range' → logprob: -5.939619064331055
    4. '2' → logprob: -11.814619064331055
    5. '	range' → logprob: -12.564619064331055
    6. ' xrange' → logprob: -13.189619064331055
    7. '  ' → logprob: -13.939619064331055
    8. ' space' → logprob: -14.689619064331055
    9. '(range' → logprob: -15.814619064331055
    10. '_range' → logprob: -16.064619064331055

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049803148955106735
    2. '2' → logprob: -3.5498032569885254
    3. ' ' → logprob: -3.9248032569885254
    4. ' (' → logprob: -9.174802780151367
    5. '(
' → logprob: -12.924802780151367
    6. '   ' → logprob: -15.424802780151367
    7. '    ' → logprob: -15.549802780151367
    8. '  ' → logprob: -16.174802780151367
    9. ' ,' → logprob: -16.424802780151367
    10. ' 
' → logprob: -17.174802780151367

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.62548828125
    4. '  ' → logprob: -16.75048828125
    5. '    ' → logprob: -16.87548828125
    6. '(' → logprob: -17.12548828125
    7. '       ' → logprob: -17.37548828125
    8. '```' → logprob: -17.50048828125
    9. '	' → logprob: -17.87548828125
    10. '     ' → logprob: -18.12548828125

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010534939356148243
    2. ' ,' → logprob: -4.635534763336182
    3. ')' → logprob: -7.635534763336182
    4. ' )' → logprob: -9.38553524017334
    5. ' ' → logprob: -9.51053524017334
    6. ':' → logprob: -9.88553524017334
    7. ',
' → logprob: -11.01053524017334
    8. ';' → logprob: -11.26053524017334
    9. ' in' → logprob: -11.51053524017334
    10. '    ' → logprob: -12.26053524017334

Token 91: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006719282828271389
    2. 'int' → logprob: -5.00671911239624
    3. ' self' → logprob: -13.131719589233398
    4. '(int' → logprob: -14.006719589233398
    5. '   ' → logprob: -14.631719589233398
    6. ' ' → logprob: -15.381719589233398
    7. '	int' → logprob: -15.506719589233398
    8. '    ' → logprob: -16.0067195892334
    9. 'self' → logprob: -16.3817195892334
    10. '       ' → logprob: -16.5067195892334

Token 92: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024036364629864693
    2. '(self' → logprob: -3.774036407470703
    3. '(s' → logprob: -7.774036407470703
    4. ' (' → logprob: -8.774036407470703
    5. '(
' → logprob: -8.899036407470703
    6. '((' → logprob: -9.774036407470703
    7. ' ' → logprob: -11.524036407470703
    8. '(pow' → logprob: -12.149036407470703
    9. '(math' → logprob: -13.274036407470703
    10. '(

' → logprob: -13.649036407470703

Token 93: '.limit' (ID: 75191)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34458714723587036
    2. '(' → logprob: -2.4695870876312256
    3. ' ' → logprob: -2.4695870876312256
    4. '.sqrt' → logprob: -2.9695870876312256
    5. ' (' → logprob: -3.4695870876312256
    6. '(self' → logprob: -3.9695870876312256
    7. ')' → logprob: -4.594587326049805
    8. '(s' → logprob: -5.844587326049805
    9. ' self' → logprob: -6.844587326049805
    10. '[' → logprob: -6.969587326049805

Token 94: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1260634809732437
    2. ' **' → logprob: -2.251063585281372
    3. '(' → logprob: -4.376063346862793
    4. ' (' → logprob: -7.876063346862793
    5. ' ' → logprob: -9.001063346862793
    6. ')' → logprob: -10.126063346862793
    7. '(**' → logprob: -11.876063346862793
    8. ')**' → logprob: -11.876063346862793
    9. '.sqrt' → logprob: -12.501063346862793
    10. '(
' → logprob: -12.876063346862793

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '.' → logprob: -16.252805709838867
    4. '(' → logprob: -16.377805709838867
    5. ' ' → logprob: -16.877805709838867
    6. '```' → logprob: -17.502805709838867
    7. '   ' → logprob: -19.377805709838867
    8. '  ' → logprob: -19.627805709838867
    9. '2' → logprob: -20.002805709838867
    10. '۰' → logprob: -20.002805709838867

Token 96: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003855093673337251
    2. '0' → logprob: -7.875385284423828
    3. ' .' → logprob: -13.000385284423828
    4. '1' → logprob: -13.500385284423828
    5. ' ' → logprob: -14.375385284423828
    6. ')' → logprob: -15.000385284423828
    7. '2' → logprob: -15.125385284423828
    8. '5' → logprob: -15.750385284423828
    9. '3' → logprob: -16.375385284423828
    10. '   ' → logprob: -16.750385284423828

Token 97: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -13.437504768371582
    3. '   ' → logprob: -14.500004768371582
    4. '

' → logprob: -14.500004768371582
    5. '.' → logprob: -15.062504768371582
    6. '0' → logprob: -15.125004768371582
    7. '4' → logprob: -15.687504768371582
    8. ' ' → logprob: -15.875004768371582
    9. '6' → logprob: -16.0000057220459
    10. '
' → logprob: -16.6250057220459

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002239350927993655
    2. ')+' → logprob: -6.127239227294922
    3. ' )' → logprob: -9.877239227294922
    4. '()' → logprob: -13.002239227294922
    5. '+' → logprob: -15.127239227294922
    6. ' +' → logprob: -16.752239227294922
    7. '```' → logprob: -16.752239227294922
    8. '}' → logprob: -17.002239227294922
    9. '+)' → logprob: -17.002239227294922
    10. '())' → logprob: -17.002239227294922

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42973068356513977
    2. '+' → logprob: -1.0547306537628174
    3. ')+' → logprob: -7.4297308921813965
    4. ')' → logprob: -8.054730415344238
    5. ' ' → logprob: -9.304730415344238
    6. ' )' → logprob: -11.429730415344238
    7. '()+' → logprob: -11.929730415344238
    8. ']+' → logprob: -12.804730415344238
    9. '```' → logprob: -13.054730415344238
    10. ' plus' → logprob: -13.929730415344238

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028072523418813944
    2. ' ' → logprob: -5.877807140350342
    3. '2' → logprob: -14.0028076171875
    4. '   ' → logprob: -14.2528076171875
    5. '```' → logprob: -14.2528076171875
    6. ')' → logprob: -16.3778076171875
    7. '    ' → logprob: -16.8778076171875
    8. '  ' → logprob: -17.7528076171875
    9. '
' → logprob: -17.9403076171875
    10. '       ' → logprob: -18.3153076171875

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031794982496649027
    2. ' ' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.628179550170898
    4. '  ' → logprob: -15.128179550170898
    5. '```' → logprob: -16.1281795501709
    6. '    ' → logprob: -16.3781795501709
    7. ')' → logprob: -16.7531795501709
    8. '2' → logprob: -17.1281795501709
    9. '
' → logprob: -17.6281795501709
    10. '     ' → logprob: -17.8781795501709

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018329622223973274
    2. ':' → logprob: -4.018329620361328
    3. ' ):' → logprob: -9.393329620361328
    4. '):
' → logprob: -9.518329620361328
    5. ')' → logprob: -10.893329620361328
    6. ',' → logprob: -13.893329620361328
    7. '       ' → logprob: -14.018329620361328
    8. ':)' → logprob: -14.393329620361328
    9. ' :' → logprob: -14.768329620361328
    10. '():' → logprob: -14.893329620361328

Token 103: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01105937734246254
    2. ':
' → logprob: -4.636059284210205
    3. '           ' → logprob: -7.261059284210205
    4. '       ' → logprob: -7.886059284210205
    5. '   ' → logprob: -9.886059761047363
    6. ' :' → logprob: -10.011059761047363
    7. '):' → logprob: -10.136059761047363
    8. '
' → logprob: -11.011059761047363
    9. '):
' → logprob: -11.136059761047363
    10. ' :
' → logprob: -11.261059761047363

Token 104: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.710728108882904
    2. ':' → logprob: -1.3357281684875488
    3. ' if' → logprob: -2.585728168487549
    4. '            ' → logprob: -2.585728168487549
    5. '           ' → logprob: -4.335728168487549
    6. ' :' → logprob: -4.335728168487549
    7. '        ' → logprob: -4.460728168487549
    8. 'if' (adapté à ' if') → logprob: -4.710728168487549
    9. ':
' → logprob: -4.835728168487549
    10. '    ' → logprob: -4.960728168487549

Token 105: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.0028442218899726868
    2. ' ' → logprob: -6.002844333648682
    3. 's' → logprob: -8.502843856811523
    4. ' ' → logprob: -8.877843856811523
    5. '	s' → logprob: -10.877843856811523
    6. ' s' → logprob: -12.502843856811523
    7. ' not' → logprob: -14.127843856811523
    8. ' space' → logprob: -14.127843856811523
    9. '  ' → logprob: -14.502843856811523
    10. ' sift' → logprob: -14.752843856811523

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024792237672954798
    2. '[' → logprob: -6.002479076385498
    3. ' [' → logprob: -13.252479553222656
    4. '[I' → logprob: -13.752479553222656
    5. '[
' → logprob: -14.627479553222656
    6. ' ' → logprob: -16.377479553222656
    7. '```' → logprob: -17.752479553222656
    8. 'i' → logprob: -18.127479553222656
    9. '[ii' → logprob: -18.127479553222656
    10. ' i' → logprob: -18.502479553222656

Token 107: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.017306724563241005
    2. ']' → logprob: -4.142306804656982
    3. ':' → logprob: -7.392306804656982
    4. ']:
' → logprob: -8.017306327819824
    5. '):' → logprob: -8.642306327819824
    6. ' ]' → logprob: -9.142306327819824
    7. ']=' → logprob: -11.142306327819824
    8. ']==' → logprob: -11.267306327819824
    9. ':]' → logprob: -12.642306327819824
    10. ']):' → logprob: -12.892306327819824

Token 108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04524071887135506
    2. ':' → logprob: -3.420240640640259
    3. ':
' → logprob: -5.295240879058838
    4. '           ' → logprob: -6.420240879058838
    5. '
' → logprob: -6.670240879058838
    6. '                ' → logprob: -6.795240879058838
    7. '<|end|>' → logprob: -7.045240879058838
    8. '                   ' → logprob: -7.670240879058838
    9. '                
' → logprob: -8.04524040222168
    10. '            ' → logprob: -9.04524040222168

Token 109: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2605741322040558
    2. ' ' → logprob: -1.6355741024017334
    3. ' 
' → logprob: -4.7605743408203125
    4. 'for' (adapté à ' for') → logprob: -5.0105743408203125
    5. '                ' → logprob: -5.3855743408203125
    6. '    ' → logprob: -5.5105743408203125
    7. '<|end|>' → logprob: -5.7605743408203125
    8. '
' → logprob: -6.7605743408203125
    9. '               ' → logprob: -6.7605743408203125
    10. ' ' → logprob: -6.7605743408203125

Token 110: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.007647914811968803
    2. ' ' → logprob: -5.50764799118042
    3. 'j' → logprob: -5.75764799118042
    4. ' range' → logprob: -8.632647514343262
    5. '<|end|>' → logprob: -9.257647514343262
    6. '```' → logprob: -10.507647514343262
    7. ' (' → logprob: -10.757647514343262
    8. '	j' → logprob: -11.007647514343262
    9. '    ' → logprob: -11.132647514343262
    10. ' space' → logprob: -12.007647514343262

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004518177360296249
    2. ' ' → logprob: -6.254518032073975
    3. 'in' → logprob: -6.379518032073975
    4. ' =' → logprob: -7.754518032073975
    5. ' i' → logprob: -8.504518508911133
    6. '=' → logprob: -8.754518508911133
    7. '=i' → logprob: -10.254518508911133
    8. '	in' → logprob: -10.629518508911133
    9. '<|end|>' → logprob: -10.754518508911133
    10. '    ' → logprob: -13.004518508911133

Token 112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4289596676826477
    2. ' range' → logprob: -1.053959608078003
    3. '   ' → logprob: -8.928959846496582
    4. ' ' → logprob: -10.053959846496582
    5. '	range' → logprob: -10.428959846496582
    6. '(range' → logprob: -11.178959846496582
    7. '    ' → logprob: -11.678959846496582
    8. ' i' → logprob: -11.678959846496582
    9. ' xrange' → logprob: -11.678959846496582
    10. 'i' → logprob: -12.178959846496582

Token 113: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006379772676154971
    2. '(' → logprob: -7.375638008117676
    3. ' i' → logprob: -12.125638008117676
    4. ' (' → logprob: -12.875638008117676
    5. 'i' → logprob: -13.125638008117676
    6. '(
' → logprob: -14.250638008117676
    7. '	i' → logprob: -15.500638008117676
    8. ')' → logprob: -15.625638008117676
    9. '   ' → logprob: -16.37563705444336
    10. '(j' → logprob: -16.50063705444336

Token 114: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.10390052199363708
    2. '*' → logprob: -2.35390043258667
    3. ' *' → logprob: -5.60390043258667
    4. '*j' → logprob: -12.853900909423828
    5. 'i' → logprob: -14.853900909423828
    6. ' ' → logprob: -15.228900909423828
    7. '**' → logprob: -15.228900909423828
    8. ' i' → logprob: -17.103900909423828
    9. '*
' → logprob: -17.103900909423828
    10. '*,' → logprob: -17.228900909423828

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005973544903099537
    2. ',self' → logprob: -7.8755974769592285
    3. ' ,' → logprob: -8.87559700012207
    4. ',len' → logprob: -9.62559700012207
    5. '<|end|>' → logprob: -12.75059700012207
    6. ',s' → logprob: -12.87559700012207
    7. ',j' → logprob: -14.12559700012207
    8. ')' → logprob: -14.25059700012207
    9. 'self' → logprob: -14.62559700012207
    10. ';' → logprob: -14.87559700012207

Token 116: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25193676352500916
    2. 'self' → logprob: -1.5019367933273315
    3. '	self' → logprob: -12.751936912536621
    4. '    ' → logprob: -13.126936912536621
    5. '(self' → logprob: -13.876936912536621
    6. '[self' → logprob: -14.501936912536621
    7. '   ' → logprob: -14.501936912536621
    8. ' ' → logprob: -15.376936912536621
    9. ':self' → logprob: -16.001935958862305
    10. '```' → logprob: -16.376935958862305

Token 117: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.0001234428636962548
    2. 'limit' → logprob: -9.750123023986816
    3. '.' → logprob: -10.375123023986816
    4. ' .' → logprob: -10.500123023986816
    5. ' limit' → logprob: -12.500123023986816
    6. '.self' → logprob: -13.500123023986816
    7. 'self' → logprob: -14.625123023986816
    8. '   ' → logprob: -16.000123977661133
    9. '_limit' → logprob: -16.125123977661133
    10. ' ' → logprob: -16.125123977661133

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804459050297737
    2. ' +' → logprob: -3.2880446910858154
    3. '+
' → logprob: -13.538044929504395
    4. '<|end|>' → logprob: -14.163044929504395
    5. ' +
' → logprob: -14.663044929504395
    6. '+,' → logprob: -15.288044929504395
    7. ' ' → logprob: -15.413044929504395
    8. '+)' → logprob: -16.663043975830078
    9. '1' → logprob: -16.788043975830078
    10. ' plus' → logprob: -17.538043975830078

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. '
' → logprob: -15.500052452087402
    4. '   ' → logprob: -15.875052452087402
    5. '

' → logprob: -16.250051498413086
    6. '```' → logprob: -16.875051498413086
    7. '  ' → logprob: -17.250051498413086
    8. '<|end|>' → logprob: -17.750051498413086
    9. ')' → logprob: -18.062551498413086
    10. ',' → logprob: -18.125051498413086

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.00002098083496
    4. '
' → logprob: -16.75002098083496
    5. '```' → logprob: -17.62502098083496
    6. '

' → logprob: -18.12502098083496
    7. ')' → logprob: -18.37502098083496
    8. '  ' → logprob: -18.62502098083496
    9. '１' → logprob: -18.75002098083496
    10. '           ' → logprob: -18.87502098083496

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016039233014453202
    2. ',i' → logprob: -9.000160217285156
    3. ',j' → logprob: -11.125160217285156
    4. ' ,' → logprob: -11.625160217285156
    5. '                   ' → logprob: -11.875160217285156
    6. '               ' → logprob: -12.500160217285156
    7. '           ' → logprob: -14.125160217285156
    8. ':' → logprob: -14.750160217285156
    9. ',n' → logprob: -15.250160217285156
    10. ',s' → logprob: -15.875160217285156

Token 122: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16023966670036316
    2. 'i' → logprob: -1.9102396965026855
    3. '	i' → logprob: -11.160239219665527
    4. ' ' → logprob: -14.910239219665527
    5. '   ' → logprob: -15.285239219665527
    6. ')i' → logprob: -15.535239219665527
    7. ')' → logprob: -15.660239219665527
    8. '    ' → logprob: -16.535240173339844
    9. ' ' → logprob: -16.910240173339844
    10. '```' → logprob: -17.035240173339844

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0086397435516119
    2. '):
' → logprob: -4.758639812469482
    3. ' ):' → logprob: -11.133639335632324
    4. ':' → logprob: -12.133639335632324
    5. ')' → logprob: -12.508639335632324
    6. '):
' → logprob: -14.258639335632324
    7. ']:' → logprob: -14.883639335632324
    8. '):

' → logprob: -15.758639335632324
    9. ' ):
' → logprob: -16.00864028930664
    10. '}:' → logprob: -16.25864028930664

Token 124: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02751065418124199
    2. ' sieve' → logprob: -4.777510643005371
    3. '                    
' → logprob: -5.027510643005371
    4. '                       ' → logprob: -5.402510643005371
    5. '               ' → logprob: -5.777510643005371
    6. 's' → logprob: -6.402510643005371
    7. ' 
' → logprob: -6.777510643005371
    8. '                    ' → logprob: -7.777510643005371
    9. '                        
' → logprob: -8.152510643005371
    10. '                
' → logprob: -8.652510643005371

Token 125: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006001440342515707
    2. ' sieve' → logprob: -5.1310014724731445
    3. '                       ' → logprob: -9.881001472473145
    4. '                   ' → logprob: -11.131001472473145
    5. '	s' → logprob: -13.256001472473145
    6. '   ' → logprob: -13.506001472473145
    7. ' ' → logprob: -14.381001472473145
    8. 'sie' → logprob: -14.756001472473145
    9. '               ' → logprob: -15.006001472473145
    10. ' s' → logprob: -15.131001472473145

Token 126: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0003051917883567512
    2. '[' → logprob: -8.12530517578125
    3. '```' → logprob: -12.37530517578125
    4. '[js' → logprob: -13.37530517578125
    5. '[J' → logprob: -13.37530517578125
    6. '\[' → logprob: -14.12530517578125
    7. '][' → logprob: -14.37530517578125
    8. '[i' → logprob: -16.00030517578125
    9. '[
' → logprob: -16.12530517578125
    10. ']' → logprob: -16.12530517578125

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013559521175920963
    2. ' ]' → logprob: -6.62635612487793
    3. ']=' → logprob: -10.75135612487793
    4. '=' → logprob: -11.75135612487793
    5. ' =' → logprob: -14.25135612487793
    6. ' ' → logprob: -16.87635612487793
    7. ')' → logprob: -17.75135612487793
    8. ']
' → logprob: -17.87635612487793
    9. ']

' → logprob: -18.75135612487793
    10. '`]' → logprob: -19.12635612487793

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03401055932044983
    2. '=' → logprob: -3.409010648727417
    3. ']' → logprob: -8.034010887145996
    4. ' ' → logprob: -10.784010887145996
    5. '=False' → logprob: -11.659010887145996
    6. ' ]' → logprob: -12.284010887145996
    7. ']=' → logprob: -12.409010887145996
    8. ')' → logprob: -13.534010887145996
    9. 'False' → logprob: -15.159010887145996
    10. ' False' → logprob: -15.409010887145996

Token 129: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759397745132446
    2. 'False' → logprob: -0.8259397745132446
    3. '(False' → logprob: -15.700940132141113
    4. '=False' → logprob: -16.950939178466797
    5. ' True' → logprob: -17.450939178466797
    6. '.False' → logprob: -17.950939178466797
    7. 'True' → logprob: -18.450939178466797
    8. 'F' → logprob: -18.575939178466797
    9. ' 
' → logprob: -18.700939178466797
    10. ' ' → logprob: -19.075939178466797

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001324168755672872
    2. '<|end|>' → logprob: -7.12632417678833
    3. '       ' → logprob: -8.001323699951172
    4. '

' → logprob: -10.001323699951172
    5. '    
' → logprob: -10.376323699951172
    6. '\n' → logprob: -10.751323699951172
    7. ' 
' → logprob: -11.126323699951172
    8. '  
' → logprob: -11.126323699951172
    9. '        
' → logprob: -11.376323699951172
    10. '
' → logprob: -11.376323699951172

Token 131: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31533804535865784
    2. '       ' → logprob: -1.3153380155563354
    3. '        
' → logprob: -6.565338134765625
    4. '
' → logprob: -8.940338134765625
    5. '    
' → logprob: -8.940338134765625
    6. ' 
' → logprob: -9.065338134765625
    7. '  
' → logprob: -9.190338134765625
    8. '<|end|>' → logprob: -9.565338134765625
    9. '   ' → logprob: -10.440338134765625
    10. '' → logprob: -10.565338134765625

Token 132: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1947391778230667
    2. '       ' → logprob: -2.1947391033172607
    3. ' self' → logprob: -3.5697391033172607
    4. 'self' (adapté à ' self') → logprob: -3.8197391033172607
    5. '        
' → logprob: -4.69473934173584
    6. ' 
' → logprob: -5.94473934173584
    7. '  
' → logprob: -6.56973934173584
    8. ' ' → logprob: -7.31973934173584
    9. '    
' → logprob: -7.44473934173584
    10. '
' → logprob: -8.06973934173584

Token 133: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -12.12501049041748
    3. ']._' → logprob: -13.25001049041748
    4. ')._' → logprob: -13.37501049041748
    5. ' .' → logprob: -14.62501049041748
    6. '
' → logprob: -15.00001049041748
    7. '."_' → logprob: -15.50001049041748
    8. '._
' → logprob: -15.62501049041748
    9. '.'_' → logprob: -16.500009536743164
    10. '.__' → logprob: -16.625009536743164

Token 134: 's' (ID: 82)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.22564494609832764
    2. 's' → logprob: -1.6006449460983276
    3. '_s' → logprob: -9.100645065307617
    4. '_pr' → logprob: -9.100645065307617
    5. 'prime' → logprob: -13.600645065307617
    6. 'pri' → logprob: -14.100645065307617
    7. 'pro' → logprob: -14.350645065307617
    8. '_' → logprob: -14.475645065307617
    9. 'se' → logprob: -14.538145065307617
    10. '   ' → logprob: -14.663145065307617

Token 135: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0001561009994475171
    2. '_' → logprob: -10.00015640258789
    3. 'ive' → logprob: -10.62515640258789
    4. ' sieve' → logprob: -10.75015640258789
    5. 'e' → logprob: -11.37515640258789
    6. 's' → logprob: -11.50015640258789
    7. 'i' → logprob: -11.75015640258789
    8. 'iev' → logprob: -11.87515640258789
    9. ' ' → logprob: -12.37515640258789
    10. 'ieves' → logprob: -12.75015640258789

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.57594233751297
    2. '=' → logprob: -0.82594233751297
    3. ' ' → logprob: -13.325942039489746
    4. ',' → logprob: -14.450942039489746
    5. ' =
' → logprob: -15.575942039489746
    6. '＝' → logprob: -16.325942993164062
    7. '[' → logprob: -16.450942993164062
    8. ' =[' → logprob: -16.450942993164062
    9. 's' → logprob: -16.700942993164062
    10. '=s' → logprob: -17.325942993164062

Token 137: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47411173582077026
    2. ' sieve' → logprob: -0.9741117358207703
    3. '	s' → logprob: -11.349111557006836
    4. '[s' → logprob: -11.599111557006836
    5. 'sie' → logprob: -12.474111557006836
    6. ' ' → logprob: -13.099111557006836
    7. ' s' → logprob: -13.099111557006836
    8. '(s' → logprob: -14.224111557006836
    9. '```' → logprob: -14.349111557006836
    10. ' ' → logprob: -14.349111557006836

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6391732692718506
    2. '       ' → logprob: -0.7641732692718506
    3. '<|end|>' → logprob: -6.26417350769043
    4. '        
' → logprob: -6.63917350769043
    5. '  
' → logprob: -6.88917350769043
    6. '    
' → logprob: -7.76417350769043
    7. ' 
' → logprob: -7.76417350769043
    8. '   ' → logprob: -7.76417350769043
    9. 'self' → logprob: -7.88917350769043
    10. ' ' → logprob: -9.13917350769043

Token 139: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02633826434612274
    2. '       ' → logprob: -3.7763383388519287
    3. ' 
' → logprob: -6.77633810043335
    4. '  
' → logprob: -7.40133810043335
    5. '    
' → logprob: -7.90133810043335
    6. '<|end|>' → logprob: -8.151338577270508
    7. '        
' → logprob: -8.401338577270508
    8. '   ' → logprob: -8.526338577270508
    9. '' → logprob: -9.776338577270508
    10. '
' → logprob: -9.901338577270508

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013040573336184025
    2. ' self' → logprob: -4.388040542602539
    3. '       ' → logprob: -7.638040542602539
    4. '
' → logprob: -11.138040542602539
    5. '   ' → logprob: -11.388040542602539
    6. 'pr' → logprob: -11.888040542602539
    7. '        
' → logprob: -12.138040542602539
    8. ' ' → logprob: -12.138040542602539
    9. '	self' → logprob: -13.138040542602539
    10. 'se' → logprob: -14.513040542602539

Token 141: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001628956088097766
    2. '.' → logprob: -8.875163078308105
    3. ')._' → logprob: -11.250163078308105
    4. ']._' → logprob: -12.250163078308105
    5. ' .' → logprob: -13.125163078308105
    6. '
' → logprob: -14.125163078308105
    7. '.
' → logprob: -14.250163078308105
    8. '._
' → logprob: -14.750163078308105
    9. '->_' → logprob: -14.875163078308105
    10. '."_' → logprob: -15.125163078308105

Token 142: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -5.5577775128767826e-06
    2. 'p' → logprob: -12.500005722045898
    3. '_pr' → logprob: -14.125005722045898
    4. 'pri' → logprob: -14.875005722045898
    5. 'prime' → logprob: -15.500005722045898
    6. 'prim' → logprob: -16.2500057220459
    7. ' primes' → logprob: -16.6250057220459
    8. '	pr' → logprob: -16.8750057220459
    9. 'pro' → logprob: -17.5625057220459
    10. '.pr' → logprob: -17.6250057220459

Token 143: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00030042731668800116
    2. '_' → logprob: -8.875300407409668
    3. 'i' → logprob: -11.000300407409668
    4. 'mes' → logprob: -11.125300407409668
    5. 'ime' → logprob: -11.125300407409668
    6. 'im' → logprob: -11.625300407409668
    7. '   ' → logprob: -11.875300407409668
    8. 'omes' → logprob: -11.875300407409668
    9. '__' → logprob: -12.000300407409668
    10. '#' → logprob: -12.125300407409668

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302969083189964
    2. '=' → logprob: -3.6513030529022217
    3. ' =[' → logprob: -13.5263032913208
    4. ' ' → logprob: -14.2763032913208
    5. '=[]' → logprob: -15.2763032913208
    6. '[' → logprob: -15.5263032913208
    7. ' =
' → logprob: -16.651302337646484
    8. 's' → logprob: -16.651302337646484
    9. ',' → logprob: -17.026302337646484
    10. '<|end|>' → logprob: -17.151302337646484

Token 145: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5076876282691956
    2. ' [' → logprob: -1.0076875686645508
    3. '[i' → logprob: -3.507687568664551
    4. '[int' → logprob: -6.507687568664551
    5. '[j' → logprob: -8.00768756866455
    6. '[index' → logprob: -8.88268756866455
    7. '[s' → logprob: -8.88268756866455
    8. '[self' → logprob: -9.38268756866455
    9. '[list' → logprob: -9.38268756866455
    10. '[class' → logprob: -9.75768756866455

Token 146: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025324986781924963
    2. 'x' → logprob: -6.002532482147217
    3. ' i' → logprob: -10.877532958984375
    4. 'num' → logprob: -11.002532958984375
    5. 'idx' → logprob: -11.252532958984375
    6. 'index' → logprob: -12.002532958984375
    7. 'p' → logprob: -14.127532958984375
    8. 'k' → logprob: -14.252532958984375
    9. 'n' → logprob: -14.502532958984375
    10. '   ' → logprob: -15.752532958984375

Token 147: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0028109403792768717
    2. 'for' → logprob: -5.877810955047607
    3. ' ' → logprob: -12.25281047821045
    4. ' 
' → logprob: -14.62781047821045
    5. '	for' → logprob: -15.12781047821045
    6. ' f' → logprob: -16.002811431884766
    7. '
' → logprob: -16.252811431884766
    8. ' fo' → logprob: -16.252811431884766
    9. ' in' → logprob: -16.627811431884766
    10. ' 

' → logprob: -16.752811431884766

Token 148: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0034576444886624813
    2. ' range' → logprob: -6.128457546234131
    3. 'i' → logprob: -6.878457546234131
    4. ' in' → logprob: -9.628458023071289
    5. ',' → logprob: -9.753458023071289
    6. ' ' → logprob: -10.003458023071289
    7. 'range' → logprob: -10.503458023071289
    8. ' sieve' → logprob: -11.128458023071289
    9. ' xrange' → logprob: -11.253458023071289
    10. '	i' → logprob: -12.003458023071289

Token 149: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18200242519378662
    2. ',' → logprob: -1.8070024251937866
    3. 'in' → logprob: -7.057002544403076
    4. ' ,' → logprob: -7.557002544403076
    5. ' range' → logprob: -7.682002544403076
    6. ' ' → logprob: -8.557002067565918
    7. 'range' → logprob: -8.682002067565918
    8. ' i' → logprob: -11.057002067565918
    9. 's' → logprob: -11.432002067565918
    10. ' xrange' → logprob: -11.932002067565918

Token 150: ' prime' (ID: 9197)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08345010131597519
    2. ' prime' → logprob: -3.3334500789642334
    3. 'is' → logprob: -3.4584500789642334
    4. 'prime' → logprob: -4.4584503173828125
    5. ' v' → logprob: -8.208450317382812
    6. ' val' → logprob: -8.208450317382812
    7. ' valid' → logprob: -8.708450317382812
    8. ' p' → logprob: -8.958450317382812
    9. ' ' → logprob: -9.333450317382812
    10. 'v' → logprob: -9.833450317382812

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03371036425232887
    2. 'in' → logprob: -3.408710479736328
    3. ' ' → logprob: -9.908710479736328
    4. 's' → logprob: -11.533710479736328
    5. '	in' → logprob: -13.408710479736328
    6. ' i' → logprob: -13.908710479736328
    7. ',' → logprob: -14.408710479736328
    8. '<|end|>' → logprob: -15.033710479736328
    9. ' ' → logprob: -15.408710479736328
    10. 'In' → logprob: -15.783710479736328

Token 152: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.00671584764495492
    2. 'enumer' → logprob: -5.006715774536133
    3. ' enum' → logprob: -15.506715774536133
    4. ' enumer' → logprob: -15.756715774536133
    5. ' ' → logprob: -16.006715774536133
    6. ' enumeration' → logprob: -17.381715774536133
    7. 'Enumer' → logprob: -17.506715774536133
    8. ' in' → logprob: -17.506715774536133
    9. ' zip' → logprob: -17.756715774536133
    10. '```' → logprob: -18.256715774536133

Token 153: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005112441722303629
    2. '(self' → logprob: -5.505112648010254
    3. '(' → logprob: -6.880112648010254
    4. ' (' → logprob: -12.880112648010254
    5. 'self' → logprob: -13.380112648010254
    6. 's' → logprob: -13.755112648010254
    7. '(
' → logprob: -15.630112648010254
    8. '(

' → logprob: -17.255111694335938
    9. ')' → logprob: -17.380111694335938
    10. '```' → logprob: -18.005111694335938

Token 154: 'ieve' (ID: 3703)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.2047443389892578
    2. 'ieve' → logprob: -1.9547443389892578
    3. 'lf' → logprob: -3.704744338989258
    4. 'f' → logprob: -4.704744338989258
    5. 'self' → logprob: -5.829744338989258
    6. 'elve' → logprob: -5.954744338989258
    7. 'ive' → logprob: -6.329744338989258
    8. 'l' → logprob: -7.079744338989258
    9. 'e' → logprob: -7.704744338989258
    10. 'el' → logprob: -8.829744338989258

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025662644766271114
    2. ' )' → logprob: -6.002566337585449
    3. 'if' → logprob: -9.62756633758545
    4. ' if' → logprob: -10.62756633758545
    5. '()' → logprob: -16.627565383911133
    6. ')
' → logprob: -16.752565383911133
    7. '）' → logprob: -16.752565383911133
    8. ']' → logprob: -16.752565383911133
    9. ')]' → logprob: -17.627565383911133
    10. '        ' → logprob: -17.877565383911133

Token 156: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011057846248149872
    2. 'if' → logprob: -4.5110578536987305
    3. ' ' → logprob: -11.63605785369873
    4. ')' → logprob: -14.51105785369873
    5. '        ' → logprob: -15.88605785369873
    6. ']' → logprob: -16.136056900024414
    7. '    ' → logprob: -16.636056900024414
    8. '   ' → logprob: -16.886056900024414
    9. '	if' → logprob: -16.886056900024414
    10. '  ' → logprob: -17.261056900024414

Token 157: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.5759732723236084
    2. 'prime' → logprob: -0.8259732723236084
    3. 'pr' → logprob: -10.450973510742188
    4. ' ' → logprob: -13.950973510742188
    5. '_prime' → logprob: -14.075973510742188
    6. '   ' → logprob: -14.200973510742188
    7. ' primes' → logprob: -14.200973510742188
    8. 'prim' → logprob: -14.700973510742188
    9. ' ' → logprob: -15.325973510742188
    10. '(pr' → logprob: -15.450973510742188

Token 158: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005577972042374313
    2. ' ]' → logprob: -7.500557899475098
    3. ']
' → logprob: -13.000557899475098
    4. ')]' → logprob: -14.000557899475098
    5. ']

' → logprob: -14.125557899475098
    6. '()]' → logprob: -14.500557899475098
    7. ' ' → logprob: -16.00055694580078
    8. '   ' → logprob: -16.37555694580078
    9. ')' → logprob: -16.87555694580078
    10. '],' → logprob: -17.00055694580078

Token 159: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3243529200553894
    2. '<|end|>' → logprob: -1.5743529796600342
    3. '   ' → logprob: -3.324352979660034
    4. '    
' → logprob: -4.074352741241455
    5. '\n' → logprob: -4.949352741241455
    6. '\' → logprob: -6.074352741241455
    7. '  
' → logprob: -6.074352741241455
    8. ' 
' → logprob: -6.699352741241455
    9. '' → logprob: -7.324352741241455
    10. ' ' → logprob: -7.449352741241455

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24336785078048706
    2. '    
' → logprob: -1.7433679103851318
    3. '
' → logprob: -3.493367910385132
    4. ' 
' → logprob: -5.368367671966553
    5. ' ' → logprob: -6.368367671966553
    6. 'def' → logprob: -6.868367671966553
    7. '  
' → logprob: -7.118367671966553
    8. '<|end|>' → logprob: -7.243367671966553
    9. '        
' → logprob: -7.493367671966553
    10. '   
' → logprob: -7.743367671966553

Token 161: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.510934591293335
    2. '   ' → logprob: -1.010934591293335
    3. ' def' → logprob: -3.510934591293335
    4. ' ' → logprob: -5.510934829711914
    5. '    
' → logprob: -6.635934829711914
    6. ' 
' → logprob: -7.760934829711914
    7. '        
' → logprob: -9.260934829711914
    8. '  ' → logprob: -9.260934829711914
    9. '    ' → logprob: -9.385934829711914
    10. '       ' → logprob: -9.510934829711914

Token 162: ' is' (ID: 382)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.4269094467163086
    2. ' ' → logprob: -1.8019094467163086
    3. ' __' → logprob: -2.0519094467163086
    4. ' is' → logprob: -3.6769094467163086
    5. ' next' → logprob: -4.176909446716309
    6. ' primes' → logprob: -5.176909446716309
    7. ' generate' → logprob: -5.676909446716309
    8. '__' → logprob: -6.551909446716309
    9. ' def' → logprob: -7.176909446716309
    10. ' iter' → logprob: -7.426909446716309

Token 163: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16038385033607483
    2. '_prime' → logprob: -1.9103838205337524
    3. ' _' → logprob: -9.160384178161621
    4. '_pal' → logprob: -10.910384178161621
    5. '_space' → logprob: -11.660384178161621
    6. '_valid' → logprob: -11.785384178161621
    7. '_p' → logprob: -12.160384178161621
    8. '_pr' → logprob: -12.535384178161621
    9. '_prob' → logprob: -13.785384178161621
    10. ' ' → logprob: -13.910384178161621

Token 164: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760801434516907
    2. '(self' → logprob: -0.8260801434516907
    3. ' (' → logprob: -9.576080322265625
    4. '(
' → logprob: -10.326080322265625
    5. 'self' → logprob: -10.451080322265625
    6. '(sel' → logprob: -12.951080322265625
    7. '(

' → logprob: -12.951080322265625
    8. ' ' → logprob: -13.326080322265625
    9. '(s' → logprob: -13.451080322265625
    10. ' self' → logprob: -14.326080322265625

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001783594605512917
    2. ' ,' → logprob: -6.50178337097168
    3. 'self' → logprob: -8.25178337097168
    4. ',self' → logprob: -11.37678337097168
    5. ')' → logprob: -12.12678337097168
    6. '(self' → logprob: -14.00178337097168
    7. ',
' → logprob: -14.25178337097168
    8. ' self' → logprob: -14.50178337097168
    9. ',num' → logprob: -15.12678337097168
    10. ' ' → logprob: -15.25178337097168

Token 166: ' num' (ID: 2269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2797786593437195
    2. 'n' → logprob: -2.0297787189483643
    3. ' self' → logprob: -2.7797787189483643
    4. ' n' → logprob: -3.7797787189483643
    5. 'number' → logprob: -4.404778480529785
    6. 'num' → logprob: -4.529778480529785
    7. ' number' → logprob: -5.529778480529785
    8. ' num' → logprob: -7.279778480529785
    9. '   ' → logprob: -9.404778480529785
    10. '       ' → logprob: -10.029778480529785

Token 167: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036447104066610336
    2. ')' → logprob: -3.411447048187256
    3. ':' → logprob: -6.036447048187256
    4. ' ):' → logprob: -8.036447525024414
    5. '):
' → logprob: -10.161447525024414
    6. ' )' → logprob: -10.286447525024414
    7. ' ' → logprob: -11.911447525024414
    8. '   ' → logprob: -14.286447525024414
    9. ',' → logprob: -14.411447525024414
    10. '1' → logprob: -14.911447525024414

Token 168: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17392635345458984
    2. ' int' → logprob: -1.9239263534545898
    3. ')' → logprob: -4.42392635345459
    4. ' )' → logprob: -6.79892635345459
    5. ':int' → logprob: -8.17392635345459
    6. '):' → logprob: -9.17392635345459
    7. '):
' → logprob: -10.42392635345459
    8. ' ):' → logprob: -10.54892635345459
    9. '(int' → logprob: -10.79892635345459
    10. '   ' → logprob: -11.29892635345459

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008659723214805126
    2. '):' → logprob: -4.758659839630127
    3. ')->' → logprob: -10.383659362792969
    4. '):
' → logprob: -11.508659362792969
    5. ' )' → logprob: -12.633659362792969
    6. ':' → logprob: -14.883659362792969
    7. ' ):' → logprob: -15.383659362792969
    8. '   ' → logprob: -15.508659362792969
    9. '):

' → logprob: -17.25865936279297
    10. '):
' → logprob: -17.38365936279297

Token 170: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020036663860082626
    2. '):' → logprob: -4.020036697387695
    3. ')' → logprob: -6.395036697387695
    4. '():' → logprob: -9.395036697387695
    5. ')->' → logprob: -10.270036697387695
    6. ' ->' → logprob: -10.520036697387695
    7. ' :' → logprob: -10.520036697387695
    8. '->' → logprob: -11.020036697387695
    9. '>:' → logprob: -11.895036697387695
    10. ':return' → logprob: -11.895036697387695

Token 171: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3133244514465332
    2. 'bool' → logprob: -1.3133244514465332
    3. ' ' → logprob: -9.938323974609375
    4. '  ' → logprob: -12.688323974609375
    5. '   ' → logprob: -12.813323974609375
    6. ' ' → logprob: -12.813323974609375
    7. '	bool' → logprob: -13.063323974609375
    8. '<bool' → logprob: -14.188323974609375
    9. ' True' → logprob: -14.563323974609375
    10. '"' → logprob: -14.938323974609375

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015097891446202993
    2. '):' → logprob: -9.375150680541992
    3. ':
' → logprob: -9.750150680541992
    4. '():' → logprob: -12.250150680541992
    5. ':return' → logprob: -13.625150680541992
    6. ' :' → logprob: -14.625150680541992
    7. ':**' → logprob: -15.000150680541992
    8. '):
' → logprob: -15.375150680541992
    9. ':def' → logprob: -15.375150680541992
    10. ')' → logprob: -15.500150680541992

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07634283602237701
    2. '   ' → logprob: -2.951342821121216
    3. ' return' → logprob: -4.701343059539795
    4. ' ' → logprob: -4.951343059539795
    5. '    ' → logprob: -5.701343059539795
    6. ' 
' → logprob: -7.076343059539795
    7. '    
' → logprob: -8.826342582702637
    8. '     ' → logprob: -8.951342582702637
    9. '  ' → logprob: -9.201342582702637
    10. ':' → logprob: -9.576342582702637

Token 174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6202992796897888
    2. 'return' → logprob: -0.8702992796897888
    3. ' if' → logprob: -3.3702993392944336
    4. ' return' → logprob: -4.870299339294434
    5. '       ' → logprob: -6.620299339294434
    6. '```' → logprob: -12.370299339294434
    7. '   ' → logprob: -13.370299339294434
    8. ' ' → logprob: -15.245299339294434
    9. '        
' → logprob: -15.370299339294434
    10. '        ' → logprob: -15.995299339294434

Token 175: ' ' (ID: 220)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.43382787704467773
    2. ' ' → logprob: -1.3088278770446777
    3. 'num' → logprob: -2.9338278770446777
    4. '0' → logprob: -3.5588278770446777
    5. '1' → logprob: -9.183828353881836
    6. ' self' → logprob: -10.933828353881836
    7. '	num' → logprob: -11.433828353881836
    8. ' not' → logprob: -11.433828353881836
    9. '   ' → logprob: -11.683828353881836
    10. '(num' → logprob: -12.058828353881836

Token 176: '0' (ID: 15)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.22670337557792664
    2. '0' → logprob: -1.601703405380249
    3. ' num' → logprob: -6.85170316696167
    4. ' ' → logprob: -8.726703643798828
    5. '1' → logprob: -10.226703643798828
    6. 'not' → logprob: -11.726703643798828
    7. '   ' → logprob: -11.851703643798828
    8. '(num' → logprob: -12.226703643798828
    9. 'self' → logprob: -12.726703643798828
    10. '<num' → logprob: -12.726703643798828

Token 177: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16402721405029297
    2. '<=' → logprob: -1.914027214050293
    3. ' <' → logprob: -5.789027214050293
    4. '<' → logprob: -7.664027214050293
    5. ' >' → logprob: -9.039027214050293
    6. ' ' → logprob: -9.539027214050293
    7. '<num' → logprob: -9.789027214050293
    8. '>' → logprob: -11.164027214050293
    9. ' >=' → logprob: -13.414027214050293
    10. '>=' → logprob: -14.414027214050293

Token 178: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011047935113310814
    2. ' num' → logprob: -4.511047840118408
    3. '<num' → logprob: -17.01104736328125
    4. '	num' → logprob: -17.26104736328125
    5. '   ' → logprob: -17.51104736328125
    6. ' ' → logprob: -17.63604736328125
    7. 'n' → logprob: -18.26104736328125
    8. '[num' → logprob: -18.63604736328125
    9. '(num' → logprob: -19.01104736328125
    10. 'user' → logprob: -19.01104736328125

Token 179: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4742218255996704
    2. ' <=' → logprob: -0.9742218255996704
    3. ' <' → logprob: -9.599222183227539
    4. '<' → logprob: -9.849222183227539
    5. 'and' → logprob: -11.099222183227539
    6. ' and' → logprob: -11.724222183227539
    7. ' ' → logprob: -14.724222183227539
    8. 'le' → logprob: -15.599222183227539
    9. '≤' → logprob: -15.849222183227539
    10. '<len' → logprob: -16.09922218322754

Token 180: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021260380744934
    2. ' self' → logprob: -2.350212574005127
    3. '<|end|>' → logprob: -12.600213050842285
    4. ' ' → logprob: -14.350213050842285
    5. '   ' → logprob: -14.350213050842285
    6. '[self' → logprob: -14.725213050842285
    7. '	self' → logprob: -14.850213050842285
    8. '```' → logprob: -15.850213050842285
    9. '
' → logprob: -16.35021209716797
    10. '  ' → logprob: -16.47521209716797

Token 181: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -9.13388703338569e-06
    2. 'limit' → logprob: -12.375009536743164
    3. '.' → logprob: -12.750009536743164
    4. ' .' → logprob: -13.750009536743164
    5. ' limit' → logprob: -14.625009536743164
    6. '._' → logprob: -15.625009536743164
    7. '_limit' → logprob: -16.125009536743164
    8. '.l' → logprob: -16.250009536743164
    9. 'Limit' → logprob: -18.375009536743164
    10. '   ' → logprob: -18.875009536743164

Token 182: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4779973030090332
    2. ':' → logprob: -0.9779973030090332
    3. ' and' → logprob: -5.602997303009033
    4. ':return' → logprob: -9.102996826171875
    5. 'and' → logprob: -9.477996826171875
    6. ' :
' → logprob: -10.977996826171875
    7. ':

' → logprob: -11.727996826171875
    8. ' :' → logprob: -12.102996826171875
    9. ':
' → logprob: -12.227996826171875
    10. '       ' → logprob: -14.227996826171875

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.777302622795105
    2. ':' → logprob: -1.027302622795105
    3. ' and' → logprob: -2.2773027420043945
    4. ':
' → logprob: -2.6523027420043945
    5. ':return' → logprob: -5.0273027420043945
    6. ' :' → logprob: -7.1523027420043945
    7. ' :
' → logprob: -7.2773027420043945
    8. ' return' → logprob: -8.027302742004395
    9. 'and' → logprob: -8.152302742004395
    10. '       ' → logprob: -8.652302742004395

Token 184: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3140692710876465
    2. ' return' → logprob: -1.3140692710876465
    3. '           ' → logprob: -7.4390692710876465
    4. '       ' → logprob: -8.939069747924805
    5. '
' → logprob: -9.814069747924805
    6. '   ' → logprob: -11.564069747924805
    7. '               ' → logprob: -11.814069747924805
    8. ':return' → logprob: -11.939069747924805
    9. ' 
' → logprob: -12.689069747924805
    10. ' ' → logprob: -12.814069747924805

Token 185: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1269284337759018
    2. 'self' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.251928329467773
    4. '(self' → logprob: -16.626928329467773
    5. '	self' → logprob: -17.501928329467773
    6. '[self' → logprob: -17.751928329467773
    7. '           ' → logprob: -18.126928329467773
    8. 's' → logprob: -18.626928329467773
    9. '_self' → logprob: -18.876928329467773
    10. ' ' → logprob: -19.001928329467773

Token 186: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0206720617134124e-05
    2. '.' → logprob: -11.75001049041748
    3. ' .' → logprob: -13.12501049041748
    4. ' ' → logprob: -16.875009536743164
    5. ']._' → logprob: -16.875009536743164
    6. ')._' → logprob: -17.000009536743164
    7. '.__' → logprob: -18.125009536743164
    8. '."_' → logprob: -18.875009536743164
    9. '.​' → logprob: -19.000009536743164
    10. '_' → logprob: -19.000009536743164

Token 187: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00023762896307744086
    2. 'pr' → logprob: -8.375237464904785
    3. '_s' → logprob: -12.750237464904785
    4. 'prime' → logprob: -12.750237464904785
    5. ' sieve' → logprob: -14.625237464904785
    6. '_pr' → logprob: -15.375237464904785
    7. '   ' → logprob: -16.5002384185791
    8. 'is' → logprob: -16.5002384185791
    9. ' ' → logprob: -16.8752384185791
    10. '_prime' → logprob: -17.0627384185791

Token 188: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.00023858259373810142
    2. 'ive' → logprob: -8.500238418579102
    3. 'iev' → logprob: -11.625238418579102
    4. 'e' → logprob: -12.125238418579102
    5. 's' → logprob: -12.625238418579102
    6. 'i' → logprob: -12.875238418579102
    7. 't' → logprob: -13.000238418579102
    8. 'eve' → logprob: -13.375238418579102
    9. 'ieu' → logprob: -13.500238418579102
    10. 'ie' → logprob: -13.625238418579102

Token 189: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -5.872261317563243e-05
    2. '[' → logprob: -9.750059127807617
    3. ' [' → logprob: -15.125059127807617
    4. '[
' → logprob: -17.625059127807617
    5. '[number' → logprob: -19.000059127807617
    6. '   ' → logprob: -19.250059127807617
    7. '[n' → logprob: -19.250059127807617
    8. 'num' → logprob: -19.500059127807617
    9. '[i' → logprob: -20.000059127807617
    10. '[obj' → logprob: -20.000059127807617

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006211769068613648
    2. ']
' → logprob: -7.500621318817139
    3. ' ]' → logprob: -9.62562084197998
    4. ']

' → logprob: -13.25062084197998
    5. ']
' → logprob: -15.50062084197998
    6. ' ]
' → logprob: -16.125621795654297
    7. ']==' → logprob: -16.750621795654297
    8. '   ' → logprob: -17.500621795654297
    9. '']' → logprob: -17.875621795654297
    10. ' else' → logprob: -17.875621795654297

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007357738213613629
    2. '
' → logprob: -7.875735759735107
    3. 'return' → logprob: -8.625736236572266
    4. '        
' → logprob: -9.875736236572266
    5. 'else' → logprob: -10.250736236572266
    6. '	' → logprob: -10.250736236572266
    7. '   ' → logprob: -10.625736236572266
    8. '    
' → logprob: -11.875736236572266
    9. ' else' → logprob: -12.125736236572266
    10. '        ' → logprob: -12.750736236572266

Token 192: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3547806143760681
    2. 'else' → logprob: -1.354780673980713
    3. '       ' → logprob: -3.354780673980713
    4. ' else' → logprob: -6.104780673980713
    5. '   ' → logprob: -6.479780673980713
    6. ' return' → logprob: -7.229780673980713
    7. 'raise' → logprob: -7.479780673980713
    8. '        
' → logprob: -7.979780673980713
    9. '
' → logprob: -8.354780197143555
    10. 'False' → logprob: -9.479780197143555

Token 193: ' For' (ID: 2214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8275551199913025
    2. 'raise' → logprob: -1.4525551795959473
    3. ' raise' → logprob: -1.7025551795959473
    4. ' return' → logprob: -2.3275551795959473
    5. 'else' → logprob: -3.5775551795959473
    6. ' else' → logprob: -4.452555179595947
    7. '#' → logprob: -5.452555179595947
    8. '       ' → logprob: -6.577555179595947
    9. ' #' → logprob: -6.702555179595947
    10. ' if' → logprob: -7.202555179595947

Token 194: ' numbers' (ID: 8663)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.38743796944618225
    2. 'num' → logprob: -1.1374379396438599
    3. ' numbers' → logprob: -7.76243782043457
    4. 'numbers' → logprob: -10.13743782043457
    5. 'nums' → logprob: -10.38743782043457
    6. ' nums' → logprob: -10.51243782043457
    7. ' True' → logprob: -11.51243782043457
    8. ' ' → logprob: -11.76243782043457
    9. '	num' → logprob: -12.26243782043457
    10. '   ' → logprob: -12.26243782043457

Token 195: ' out' (ID: 842)
  Prédit: ' greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' greater' → logprob: -0.46093860268592834
    2. ' >' → logprob: -1.460938572883606
    3. 'greater' → logprob: -2.4609386920928955
    4. '>' → logprob: -3.3359386920928955
    5. ' larger' → logprob: -4.335938453674316
    6. ' beyond' → logprob: -6.210938453674316
    7. ' outside' → logprob: -7.960938453674316
    8. ' above' → logprob: -8.210938453674316
    9. 'larg' → logprob: -8.335938453674316
    10. ' ' → logprob: -9.710938453674316

Token 196: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11964049190282822
    2. 'side' → logprob: -2.619640588760376
    3. 'of' → logprob: -3.744640588760376
    4. '       ' → logprob: -4.619640350341797
    5. '        ' → logprob: -6.369640350341797
    6. '    ' → logprob: -6.619640350341797
    7. '_of' → logprob: -6.994640350341797
    8. '   ' → logprob: -7.369640350341797
    9. '      ' → logprob: -7.619640350341797
    10. '  ' → logprob: -8.119640350341797

Token 197: ' prec' (ID: 5074)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.035588108003139496
    2. ' range' → logprob: -3.660588026046753
    3. 'self' → logprob: -4.910588264465332
    4. 'limit' → logprob: -6.910588264465332
    5. ' the' → logprob: -8.160588264465332
    6. 'bound' → logprob: -8.285588264465332
    7. 'the' → logprob: -9.160588264465332
    8. 'scope' → logprob: -9.785588264465332
    9. '   ' → logprob: -10.035588264465332
    10. ' self' → logprob: -10.035588264465332

Token 198: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.017704879865050316
    2. 'om' → logprob: -4.892704963684082
    3. 'alculate' → logprob: -5.142704963684082
    4. 'alc' → logprob: -5.892704963684082
    5. 'ached' → logprob: -7.642704963684082
    6. 'ision' → logprob: -7.642704963684082
    7. 'ise' → logprob: -8.767704963684082
    8. 'ised' → logprob: -9.267704963684082
    9. 'computed' → logprob: -9.767704963684082
    10. 'ache' → logprob: -10.642704963684082

Token 199: 'culated' (ID: 95562)
  Prédit: 'culated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culated' → logprob: -0.019382108002901077
    2. 'ulated' → logprob: -4.019381999969482
    3. 'c' → logprob: -8.01938247680664
    4. 'culation' → logprob: -8.51938247680664
    5. 'culate' → logprob: -8.89438247680664
    6. 'uated' → logprob: -9.01938247680664
    7. 'puted' → logprob: -9.64438247680664
    8. 'ated' → logprob: -10.01938247680664
    9. 'lated' → logprob: -10.01938247680664
    10. 'd' → logprob: -10.14438247680664

Token 200: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3514607548713684
    2. 'range' → logprob: -1.2264606952667236
    3. ' limit' → logprob: -6.476460933685303
    4. 'limit' → logprob: -6.976460933685303
    5. '   ' → logprob: -8.851460456848145
    6. '范围' → logprob: -8.976460456848145
    7. 's' → logprob: -9.101460456848145
    8. '_range' → logprob: -10.101460456848145
    9. ' scope' → logprob: -10.976460456848145
    10. ' ' → logprob: -10.976460456848145

Token 201: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3827493190765381
    2. ':' → logprob: -1.257749319076538
    3. ':
' → logprob: -4.632749557495117
    4. '       ' → logprob: -4.757749557495117
    5. ' ,' → logprob: -4.882749557495117
    6. ',
' → logprob: -6.507749557495117
    7. ' :' → logprob: -6.632749557495117
    8. '   ' → logprob: -6.757749557495117
    9. '
' → logprob: -7.132749557495117
    10. ':return' → logprob: -7.507749557495117

Token 202: ' fallback' (ID: 66264)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33612051606178284
    2. 'if' → logprob: -1.9611204862594604
    3. ' for' → logprob: -2.33612060546875
    4. '       ' → logprob: -3.96112060546875
    5. 'for' → logprob: -4.08612060546875
    6. ' return' → logprob: -5.21112060546875
    7. 'return' → logprob: -5.83612060546875
    8. '   ' → logprob: -6.58612060546875
    9. 'import' → logprob: -6.83612060546875
    10. '
' → logprob: -7.58612060546875

Token 203: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6039668321609497
    2. '       ' → logprob: -1.7289668321609497
    3. ' if' → logprob: -1.8539668321609497
    4. ',' → logprob: -4.10396671295166
    5. ':' → logprob: -4.10396671295166
    6. '        
' → logprob: -4.22896671295166
    7. '
' → logprob: -4.47896671295166
    8. '   ' → logprob: -4.85396671295166
    9. ' for' → logprob: -4.85396671295166
    10. '        ' → logprob: -5.22896671295166

Token 204: 'not' (ID: 2878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4106431007385254
    2. ' if' → logprob: -1.4106431007385254
    3. 'if' → logprob: -1.7856431007385254
    4. ')' → logprob: -2.5356431007385254
    5. 'return' → logprob: -3.0356431007385254
    6. ' return' → logprob: -3.0356431007385254
    7. ')
' → logprob: -3.2856431007385254
    8. 'def' → logprob: -3.4106431007385254
    9. ' def' → logprob: -4.410643100738525
    10. ' )' → logprob: -4.535643100738525

Token 205: ' expected' (ID: 5930)
  Prédit: ' implemented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' implemented' → logprob: -0.6599115133285522
    2. 'implemented' → logprob: -0.9099115133285522
    3. ' self' → logprob: -3.784911632537842
    4. 'self' → logprob: -4.284911632537842
    5. ' optimized' → logprob: -4.409911632537842
    6. 'optimized' → logprob: -4.534911632537842
    7. 'efficient' → logprob: -4.909911632537842
    8. ' efficient' → logprob: -5.784911632537842
    9. ' recommended' → logprob: -6.284911632537842
    10. 'implement' → logprob: -6.784911632537842

Token 206: ' here' (ID: 2105)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6214579343795776
    2. ' to' → logprob: -0.8714579343795776
    3. 'to' → logprob: -3.996458053588867
    4. ' in' → logprob: -4.246458053588867
    5. ' )' → logprob: -5.496458053588867
    6. ' but' → logprob: -5.621458053588867
    7. 'in' → logprob: -6.621458053588867
    8. ' for' → logprob: -6.996458053588867
    9. 'def' → logprob: -7.996458053588867
    10. '   ' → logprob: -7.996458053588867

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026958007365465164
    2. ')
' → logprob: -3.7769579887390137
    3. '):' → logprob: -6.401957988739014
    4. '       ' → logprob: -6.776957988739014
    5. '):
' → logprob: -7.401957988739014
    6. ' )' → logprob: -9.151958465576172
    7. '   ' → logprob: -9.401958465576172
    8. ' )
' → logprob: -10.151958465576172
    9. ',' → logprob: -10.651958465576172
    10. ').' → logprob: -12.026958465576172

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14182443916797638
    2. ' return' → logprob: -2.26682448387146
    3. 'return' → logprob: -4.016824245452881
    4. ' if' → logprob: -5.141824245452881
    5. '   ' → logprob: -6.266824245452881
    6. '        
' → logprob: -6.891824245452881
    7. '
' → logprob: -7.266824245452881
    8. ' for' → logprob: -7.891824245452881
    9. 'if' → logprob: -8.266824722290039
    10. ' 
' → logprob: -9.516824722290039

Token 209: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20853392779827118
    2. 'if' (adapté à ' if') → logprob: -1.9585338830947876
    3. 'for' → logprob: -3.708534002304077
    4. ' if' → logprob: -4.958533763885498
    5. ' return' → logprob: -4.958533763885498
    6. 'import' → logprob: -5.208533763885498
    7. ' for' → logprob: -6.458533763885498
    8. '   ' → logprob: -7.208533763885498
    9. '       ' → logprob: -7.333533763885498
    10. 'from' → logprob: -9.833534240722656

Token 210: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.038113780319690704
    2. 'num' → logprob: -3.288113832473755
    3. ' ' → logprob: -10.163113594055176
    4. ' all' → logprob: -11.913113594055176
    5. ' self' → logprob: -12.038113594055176
    6. '	num' → logprob: -12.038113594055176
    7. ' any' → logprob: -12.913113594055176
    8. '   ' → logprob: -13.163113594055176
    9. '(num' → logprob: -13.413113594055176
    10. 'self' → logprob: -13.850613594055176

Token 211: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2812548279762268
    2. '<' → logprob: -1.406254768371582
    3. ' <=' → logprob: -10.781254768371582
    4. '%' → logprob: -10.906254768371582
    5. '<=' → logprob: -10.906254768371582
    6. '>' → logprob: -11.156254768371582
    7. ' ' → logprob: -11.156254768371582
    8. ' >' → logprob: -11.656254768371582
    9. ' %' → logprob: -13.031254768371582
    10. '<n' → logprob: -13.781254768371582

Token 212: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1282951980829239
    2. ' ' → logprob: -2.1282951831817627
    3. '0' → logprob: -6.628295421600342
    4. '   ' → logprob: -10.878294944763184
    5. '=' → logprob: -11.878294944763184
    6. '    ' → logprob: -12.690794944763184
    7. '       ' → logprob: -13.065794944763184
    8. '  ' → logprob: -13.065794944763184
    9. '```' → logprob: -14.003294944763184
    10. '(' → logprob: -14.315794944763184

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002612282522022724
    2. '0' → logprob: -6.002612113952637
    3. ' ' → logprob: -9.002612113952637
    4. 'self' → logprob: -12.127612113952637
    5. '=' → logprob: -13.127612113952637
    6. '   ' → logprob: -13.315112113952637
    7. '```' → logprob: -14.502612113952637
    8. '

' → logprob: -14.690112113952637
    9. '1' → logprob: -14.877612113952637
    10. '(' → logprob: -15.127612113952637

Token 214: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07649744302034378
    2. ':' → logprob: -2.8264975547790527
    3. ' or' → logprob: -4.951497554779053
    4. '       ' → logprob: -5.826497554779053
    5. ':return' → logprob: -5.826497554779053
    6. '           ' → logprob: -6.826497554779053
    7. ' :
' → logprob: -8.576497077941895
    8. '   ' → logprob: -9.701497077941895
    9. 'return' → logprob: -9.951497077941895
    10. ' return' → logprob: -10.576497077941895

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01989409700036049
    2. ' return' → logprob: -5.019894123077393
    3. ':' → logprob: -5.144894123077393
    4. ':
' → logprob: -5.519894123077393
    5. 'return' → logprob: -6.769894123077393
    6. '       ' → logprob: -6.894894123077393
    7. ':return' → logprob: -7.269894123077393
    8. '
' → logprob: -8.394893646240234
    9. ' :' → logprob: -10.144893646240234
    10. ' :
' → logprob: -10.644893646240234

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2117764800786972
    2. ' return' → logprob: -1.7117764949798584
    3. '           ' → logprob: -4.586776256561279
    4. '       ' → logprob: -9.836776733398438
    5. '
' → logprob: -10.586776733398438
    6. '   ' → logprob: -10.711776733398438
    7. ':return' → logprob: -11.711776733398438
    8. '	return' → logprob: -12.211776733398438
    9. '               ' → logprob: -12.211776733398438
    10. 'eturn' → logprob: -13.461776733398438

Token 217: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06196768581867218
    2. ' False' → logprob: -2.811967611312866
    3. '(False' → logprob: -17.811967849731445
    4. 'True' → logprob: -20.311967849731445
    5. '=False' → logprob: -20.561967849731445
    6. 'false' → logprob: -21.436967849731445
    7. ' True' → logprob: -22.061967849731445
    8. '_false' → logprob: -22.186967849731445
    9. 'F' → logprob: -22.311967849731445
    10. '   ' → logprob: -22.561967849731445

Token 218: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027416132390499115
    2. '
' → logprob: -4.152416229248047
    3. ' for' → logprob: -5.027416229248047
    4. 'for' → logprob: -6.777416229248047
    5. ' if' → logprob: -6.777416229248047
    6. 'if' → logprob: -7.027416229248047
    7. 'return' → logprob: -7.652416229248047
    8. '        
' → logprob: -7.777416229248047
    9. ',' → logprob: -9.027416229248047
    10. '   ' → logprob: -9.277416229248047

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04434811696410179
    2. '
' → logprob: -3.1693480014801025
    3. '        
' → logprob: -7.669348239898682
    4. 'for' → logprob: -8.169347763061523
    5. ' for' → logprob: -8.294347763061523
    6. 'if' → logprob: -9.044347763061523
    7. '    
' → logprob: -10.169347763061523
    8. ' if' → logprob: -10.294347763061523
    9. '  
' → logprob: -10.294347763061523
    10. '   ' → logprob: -10.669347763061523

Token 220: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12420818209648132
    2. ' for' → logprob: -2.3742082118988037
    3. '       ' → logprob: -3.7492082118988037
    4. '   ' → logprob: -8.999208450317383
    5. 'if' → logprob: -9.999208450317383
    6. ' if' → logprob: -12.874208450317383
    7. 'i' → logprob: -13.124208450317383
    8. '	for' → logprob: -13.624208450317383
    9. 'import' → logprob: -13.749208450317383
    10. '        
' → logprob: -14.249208450317383

Token 221: ' prime' (ID: 9197)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5761009454727173
    2. ' i' → logprob: -0.8261009454727173
    3. ' p' → logprob: -10.326101303100586
    4. ' ' → logprob: -10.701101303100586
    5. '   ' → logprob: -11.326101303100586
    6. '2' → logprob: -11.576101303100586
    7. 'factor' → logprob: -11.576101303100586
    8. '_' → logprob: -11.826101303100586
    9. '	i' → logprob: -11.826101303100586
    10. 'div' → logprob: -11.826101303100586

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003643430070951581
    2. 'in' → logprob: -5.62864351272583
    3. 's' → logprob: -10.878643035888672
    4. ' ' → logprob: -11.878643035888672
    5. '_in' → logprob: -12.753643035888672
    6. '	in' → logprob: -12.878643035888672
    7. ' i' → logprob: -13.378643035888672
    8. '   ' → logprob: -13.878643035888672
    9. '<|end|>' → logprob: -14.003643035888672
    10. ',' → logprob: -14.253643035888672

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013888094574213028
    2. ' self' → logprob: -4.513887882232666
    3. 'range' → logprob: -6.138887882232666
    4. ' range' → logprob: -7.388887882232666
    5. '   ' → logprob: -9.888888359069824
    6. ' ' → logprob: -13.013888359069824
    7. '[self' → logprob: -13.013888359069824
    8. '(self' → logprob: -13.138888359069824
    9. '       ' → logprob: -13.513888359069824
    10. '	self' → logprob: -13.888888359069824

Token 224: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0087516784551553e-05
    2. '   ' → logprob: -13.00001049041748
    3. '.' → logprob: -13.12501049041748
    4. '_pr' → logprob: -13.62501049041748
    5. ' ' → logprob: -14.00001049041748
    6. ' .' → logprob: -14.12501049041748
    7. '_self' → logprob: -14.50001049041748
    8. '_prime' → logprob: -14.62501049041748
    9. 'self' → logprob: -15.12501049041748
    10. '.pr' → logprob: -15.37501049041748

Token 225: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -3.4121114822482923e-06
    2. 'prime' → logprob: -13.625003814697266
    3. ' primes' → logprob: -14.375003814697266
    4. '_pr' → logprob: -14.500003814697266
    5. 'user' → logprob: -15.375003814697266
    6. 's' → logprob: -15.625003814697266
    7. '.pr' → logprob: -16.000003814697266
    8. 'pri' → logprob: -16.250003814697266
    9. '	pr' → logprob: -16.250003814697266
    10. 'prim' → logprob: -16.500003814697266

Token 226: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00044663884909823537
    2. '_' → logprob: -9.625446319580078
    3. 'ime' → logprob: -9.750446319580078
    4. 'mes' → logprob: -9.875446319580078
    5. '   ' → logprob: -11.000446319580078
    6. 'omes' → logprob: -11.000446319580078
    7. '[' → logprob: -11.062946319580078
    8. '\' → logprob: -11.187946319580078
    9. 'im' → logprob: -11.250446319580078
    10. '```' → logprob: -11.500446319580078

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027118347585201263
    2. ':
' → logprob: -3.652118444442749
    3. '       ' → logprob: -7.52711820602417
    4. '   ' → logprob: -8.652118682861328
    5. '           ' → logprob: -10.027118682861328
    6. ',' → logprob: -11.277118682861328
    7. '[' → logprob: -11.277118682861328
    8. '[:' → logprob: -12.152118682861328
    9. '        ' → logprob: -12.277118682861328
    10. '    ' → logprob: -12.527118682861328

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6878455281257629
    2. ' if' → logprob: -0.9378455281257629
    3. '       ' → logprob: -2.562845468521118
    4. ':' → logprob: -4.437845706939697
    5. ' and' → logprob: -5.562845706939697
    6. ':
' → logprob: -5.562845706939697
    7. 'if' → logprob: -6.062845706939697
    8. '   ' → logprob: -6.187845706939697
    9. '(num' → logprob: -6.437845706939697
    10. ' num' → logprob: -7.312845706939697

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.027293873950839043
    2. 'if' (adapté à ' if') → logprob: -3.6522939205169678
    3. '           ' → logprob: -7.027293682098389
    4. '       ' → logprob: -9.777294158935547
    5. '               ' → logprob: -10.527294158935547
    6. '   ' → logprob: -11.527294158935547
    7. ' ' → logprob: -12.527294158935547
    8. '        ' → logprob: -13.152294158935547
    9. '            ' → logprob: -13.152294158935547
    10. ' and' → logprob: -13.902294158935547

Token 230: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.5268107056617737
    2. 'prime' → logprob: -0.9018107056617737
    3. 'num' → logprob: -5.901810646057129
    4. ' num' → logprob: -7.026810646057129
    5. '   ' → logprob: -10.901810646057129
    6. 'pr' → logprob: -10.901810646057129
    7. '_prime' → logprob: -11.776810646057129
    8. ' primes' → logprob: -12.401810646057129
    9. ' ' → logprob: -13.276810646057129
    10. 'prim' → logprob: -13.401810646057129

Token 231: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31555214524269104
    2. ' *' → logprob: -1.3155521154403687
    3. '>' → logprob: -6.440552234649658
    4. ' >' → logprob: -7.315552234649658
    5. '*num' → logprob: -10.9405517578125
    6. 'prime' → logprob: -12.1905517578125
    7. '*p' → logprob: -13.4405517578125
    8. 'pr' → logprob: -13.9405517578125
    9. '   ' → logprob: -14.5655517578125
    10. '*pi' → logprob: -14.6905517578125

Token 232: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.10023579001426697
    2. ' prime' → logprob: -2.3502357006073
    3. '_prime' → logprob: -11.350235939025879
    4. 'prim' → logprob: -12.100235939025879
    5. 'pr' → logprob: -12.350235939025879
    6. '   ' → logprob: -12.975235939025879
    7. ' ' → logprob: -13.725235939025879
    8. 'primer' → logprob: -14.100235939025879
    9. '  ' → logprob: -14.600235939025879
    10. 'p' → logprob: -14.725235939025879

Token 233: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1427142173051834
    2. ' >' → logprob: -2.017714262008667
    3. '   ' → logprob: -11.392714500427246
    4. '()>' → logprob: -12.267714500427246
    5. '<|end|>' → logprob: -12.267714500427246
    6. '">' → logprob: -12.392714500427246
    7. '>end' → logprob: -12.767714500427246
    8. ' ' → logprob: -13.267714500427246
    9. '```' → logprob: -13.517714500427246
    10. '  ' → logprob: -13.642714500427246

Token 234: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.2519315779209137
    2. 'num' → logprob: -1.5019315481185913
    3. '	num' → logprob: -13.001931190490723
    4. '<num' → logprob: -16.62693214416504
    5. '=num' → logprob: -16.75193214416504
    6. '   ' → logprob: -17.37693214416504
    7. '[num' → logprob: -17.50193214416504
    8. '(num' → logprob: -17.62693214416504
    9. '$num' → logprob: -17.87693214416504
    10. ',num' → logprob: -17.87693214416504

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014493131078779697
    2. ':
' → logprob: -4.889492988586426
    3. ' or' → logprob: -5.389492988586426
    4. '               ' → logprob: -7.014492988586426
    5. '           ' → logprob: -7.139492988586426
    6. ':return' → logprob: -7.514492988586426
    7. '       ' → logprob: -11.014492988586426
    8. ' and' → logprob: -11.389492988586426
    9. '                   ' → logprob: -11.889492988586426
    10. '          ' → logprob: -12.264492988586426

Token 236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015559245366603136
    2. '           ' → logprob: -6.876555919647217
    3. ':' → logprob: -8.126556396484375
    4. '            ' → logprob: -9.876556396484375
    5. ' return' → logprob: -10.126556396484375
    6. '                ' → logprob: -10.501556396484375
    7. ':
' → logprob: -10.876556396484375
    8. ':return' → logprob: -11.251556396484375
    9. ' :' → logprob: -11.501556396484375
    10. ' ' → logprob: -11.626556396484375

Token 237: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16225649416446686
    2. ' return' → logprob: -2.1622564792633057
    3. '           ' → logprob: -4.662256717681885
    4. ' True' → logprob: -4.787256717681885
    5. ' break' → logprob: -4.787256717681885
    6. 'return' → logprob: -5.412256717681885
    7. ' ' → logprob: -6.037256717681885
    8. 'break' (adapté à ' break') → logprob: -7.912256717681885
    9. ' 
' → logprob: -8.287256240844727
    10. 'True' → logprob: -8.287256240844727

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1254059225320816
    2. '
' → logprob: -2.87540602684021
    3. '           ' → logprob: -3.25040602684021
    4. ' 
' → logprob: -5.250405788421631
    5. '   ' → logprob: -5.375405788421631
    6. ' if' → logprob: -5.625405788421631
    7. '    
' → logprob: -6.000405788421631
    8. '<|end|>' → logprob: -6.875405788421631
    9. ' ' → logprob: -7.125405788421631
    10. '  
' → logprob: -7.375405788421631

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46049875020980835
    2. '           ' → logprob: -1.0854988098144531
    3. '
' → logprob: -4.460498809814453
    4. '    
' → logprob: -5.335498809814453
    5. ' if' → logprob: -5.335498809814453
    6. '   ' → logprob: -5.710498809814453
    7. ' 
' → logprob: -5.960498809814453
    8. '        
' → logprob: -6.960498809814453
    9. ' and' → logprob: -7.585498809814453
    10. '  
' → logprob: -7.710498809814453

Token 240: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2612302005290985
    2. 'if' (adapté à ' if') → logprob: -1.511230230331421
    3. '           ' → logprob: -5.011229991912842
    4. '       ' → logprob: -6.636229991912842
    5. ' and' → logprob: -7.761229991912842
    6. ' ' → logprob: -8.13623046875
    7. '
' → logprob: -9.01123046875
    8. ' 
' → logprob: -9.01123046875
    9. '   ' → logprob: -9.38623046875
    10. '            
' → logprob: -9.76123046875

Token 241: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.061969365924596786
    2. 'num' → logprob: -2.81196928024292
    3. '	num' → logprob: -13.936969757080078
    4. '(num' → logprob: -14.311969757080078
    5. '<num' → logprob: -16.186969757080078
    6. '[num' → logprob: -16.436969757080078
    7. ' ' → logprob: -17.561969757080078
    8. '
' → logprob: -17.686969757080078
    9. '_num' → logprob: -17.686969757080078
    10. '=num' → logprob: -17.936969757080078

Token 242: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04859236627817154
    2. '%' → logprob: -3.0485923290252686
    3. ' ' → logprob: -12.673592567443848
    4. ' ' → logprob: -13.673592567443848
    5. '%i' → logprob: -14.423592567443848
    6. '%s' → logprob: -17.17359161376953
    7. ' %
' → logprob: -17.79859161376953
    8. ' %=' → logprob: -18.04859161376953
    9. ' %#' → logprob: -18.42359161376953
    10. '%d' → logprob: -18.54859161376953

Token 243: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.061970822513103485
    2. ' prime' → logprob: -2.8119707107543945
    3. 'pr' → logprob: -13.811970710754395
    4. 'prim' → logprob: -14.061970710754395
    5. '   ' → logprob: -14.811970710754395
    6. '_prime' → logprob: -14.936970710754395
    7. 'primer' → logprob: -15.436970710754395
    8. ' ' → logprob: -15.811970710754395
    9. 'principal' → logprob: -16.56197166442871
    10. '  ' → logprob: -17.31197166442871

Token 244: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062015749514102936
    2. '==' → logprob: -2.8120157718658447
    3. '=' → logprob: -10.062015533447266
    4. ' =' → logprob: -12.937015533447266
    5. ' ' → logprob: -13.687015533447266
    6. '0' → logprob: -14.437015533447266
    7. '===' → logprob: -14.562015533447266
    8. ')==' → logprob: -14.687015533447266
    9. ']==' → logprob: -15.187015533447266
    10. ')' → logprob: -15.812015533447266

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196768581867218
    2. ' ' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.686967849731445
    4. '  ' → logprob: -18.936967849731445
    5. '   ' → logprob: -19.561967849731445
    6. '۰' → logprob: -19.936967849731445
    7. '	' → logprob: -20.061967849731445
    8. '=' → logprob: -20.186967849731445
    9. '
' → logprob: -20.311967849731445
    10. ' ' → logprob: -20.561967849731445

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '۰' → logprob: -18.751325607299805
    4. '  ' → logprob: -19.876325607299805
    5. '   ' → logprob: -20.001325607299805
    6. ' ' → logprob: -20.563825607299805
    7. '=' → logprob: -20.751325607299805
    8. '０' → logprob: -20.813825607299805
    9. '    ' → logprob: -20.876325607299805
    10. '٠' → logprob: -20.876325607299805

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6918472051620483
    2. ':
' → logprob: -0.9418472051620483
    3. '               ' → logprob: -2.816847324371338
    4. ':return' → logprob: -3.191847324371338
    5. '           ' → logprob: -5.316847324371338
    6. ' return' → logprob: -6.816847324371338
    7. '       ' → logprob: -6.941847324371338
    8. ' :
' → logprob: -7.441847324371338
    9. '   ' → logprob: -8.06684684753418
    10. 'return' → logprob: -8.69184684753418

Token 248: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04003874212503433
    2. '           ' → logprob: -3.415038824081421
    3. ' return' → logprob: -5.540038585662842
    4. 'return' → logprob: -7.165038585662842
    5. '   ' → logprob: -7.915038585662842
    6. '
' → logprob: -7.915038585662842
    7. ' False' → logprob: -8.0400390625
    8. 'False' → logprob: -8.1650390625
    9. '       ' → logprob: -8.6650390625
    10. ' True' → logprob: -10.1650390625

Token 249: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.014743000268936157
    2. 'return' (adapté à ' return') → logprob: -4.889742851257324
    3. ' False' → logprob: -5.014742851257324
    4. 'False' → logprob: -7.764742851257324
    5. ' 
' → logprob: -10.639742851257324
    6. '               ' → logprob: -11.014742851257324
    7. '
' → logprob: -13.014742851257324
    8. ' false' → logprob: -13.639742851257324
    9. '                   ' → logprob: -13.889742851257324
    10. ' True' → logprob: -14.264742851257324

Token 250: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804149478673935
    2. ' False' → logprob: -3.288041591644287
    3. 'True' → logprob: -20.788042068481445
    4. '(False' → logprob: -20.788042068481445
    5. '=False' → logprob: -22.288042068481445
    6. 'false' → logprob: -22.913042068481445
    7. '_false' → logprob: -22.913042068481445
    8. 'F' → logprob: -23.413042068481445
    9. ' True' → logprob: -23.413042068481445
    10. ' ' → logprob: -24.038042068481445

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0114674624055624
    2. 'return' → logprob: -4.636467456817627
    3. '   ' → logprob: -7.261467456817627
    4. '
' → logprob: -7.386467456817627
    5. ' return' → logprob: -7.886467456817627
    6. '	return' → logprob: -12.386467933654785
    7. '	' → logprob: -13.636467933654785
    8. '        
' → logprob: -13.761467933654785
    9. '    
' → logprob: -13.761467933654785
    10. '      ' → logprob: -13.886467933654785

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02234066277742386
    2. '   ' → logprob: -4.647340774536133
    3. 'return' → logprob: -4.647340774536133
    4. '
' → logprob: -6.022340774536133
    5. ' return' → logprob: -7.647340774536133
    6. '    
' → logprob: -11.897340774536133
    7. '        
' → logprob: -13.022340774536133
    8. '```' → logprob: -13.272340774536133
    9. '      ' → logprob: -13.647340774536133
    10. '           ' → logprob: -13.647340774536133

Token 253: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010680977255105972
    2. ' return' → logprob: -4.76068115234375
    3. '       ' → logprob: -6.51068115234375
    4. '   ' → logprob: -7.51068115234375
    5. '
' → logprob: -10.76068115234375
    6. '	return' → logprob: -12.51068115234375
    7. '        
' → logprob: -13.13568115234375
    8. '    
' → logprob: -13.26068115234375
    9. ' ' → logprob: -15.13568115234375
    10. ' 
' → logprob: -15.76068115234375

Token 254: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750484973192215
    2. ' True' → logprob: -3.5297505855560303
    3. '(True' → logprob: -18.40475082397461
    4. '   ' → logprob: -19.27975082397461
    5. 'true' → logprob: -19.40475082397461
    6. 'False' → logprob: -19.65475082397461
    7. 'Tr' → logprob: -19.90475082397461
    8. '=True' → logprob: -20.40475082397461
    9. ' Tru' → logprob: -21.02975082397461
    10. '.True' → logprob: -21.02975082397461

Token 255: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010251892963424325
    2. '   ' → logprob: -7.001025199890137
    3. ' def' → logprob: -9.126025199890137
    4. '```' → logprob: -13.376025199890137
    5. '	def' → logprob: -13.751025199890137
    6. 'from' → logprob: -14.376025199890137
    7. '    
' → logprob: -14.501025199890137
    8. ' ' → logprob: -14.751025199890137
    9. 'class' → logprob: -15.001025199890137
    10. '  ' → logprob: -15.251025199890137

Token 257: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.786196975852363e-05
    2. ' def' → logprob: -10.375038146972656
    3. '   ' → logprob: -12.250038146972656
    4. 'from' → logprob: -14.000038146972656
    5. '__' → logprob: -14.500038146972656
    6. '```' → logprob: -15.250038146972656
    7. '    
' → logprob: -16.250038146972656
    8. 'get' → logprob: -16.625038146972656
    9. '	def' → logprob: -16.750038146972656
    10. 'class' → logprob: -17.250038146972656

Token 258: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.000954694114625454
    2. 'staticmethod' → logprob: -7.000954627990723
    3. 'classmethod' → logprob: -10.125954627990723
    4. 'proper' → logprob: -13.875954627990723
    5. 'pro' → logprob: -14.125954627990723
    6. 'dat' → logprob: -14.250954627990723
    7. 'l' → logprob: -14.375954627990723
    8. ' property' → logprob: -16.25095558166504
    9. 'p' → logprob: -17.00095558166504
    10. 'prop' → logprob: -17.37595558166504

Token 259: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005545823951251805
    2. '   ' → logprob: -8.250555038452148
    3. ' def' → logprob: -8.750555038452148
    4. '
' → logprob: -9.125555038452148
    5. '_def' → logprob: -10.875555038452148
    6. '    
' → logprob: -12.875555038452148
    7. '_pr' → logprob: -13.500555038452148
    8. '	def' → logprob: -13.500555038452148
    9. 'pr' → logprob: -14.500555038452148
    10. '  
' → logprob: -15.000555038452148

Token 260: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011224505578866228
    2. ' def' → logprob: -9.750112533569336
    3. '   ' → logprob: -10.500112533569336
    4. '
' → logprob: -10.750112533569336
    5. '_def' → logprob: -12.500112533569336
    6. '	def' → logprob: -14.875112533569336
    7. '    
' → logprob: -15.500112533569336
    8. 'pr' → logprob: -15.875112533569336
    9. ':def' → logprob: -15.875112533569336
    10. '_pr' → logprob: -16.250112533569336

Token 261: ' def' (ID: 1056)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.06211366876959801
    2. 'def' (adapté à ' def') → logprob: -2.8121137619018555
    3. '_pr' → logprob: -9.687113761901855
    4. ' def' → logprob: -10.187113761901855
    5. 'next' → logprob: -11.062113761901855
    6. ' primes' → logprob: -11.312113761901855
    7. 'prime' → logprob: -11.562113761901855
    8. 'first' → logprob: -12.687113761901855
    9. 'all' → logprob: -13.562113761901855
    10. '   ' → logprob: -13.812113761901855

Token 262: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.044044386595487595
    2. 'pr' → logprob: -3.1690444946289062
    3. ' first' → logprob: -7.669044494628906
    4. ' next' → logprob: -8.419044494628906
    5. '_pr' → logprob: -8.669044494628906
    6. ' prime' → logprob: -10.169044494628906
    7. ' count' → logprob: -10.294044494628906
    8. ' all' → logprob: -10.419044494628906
    9. 'first' → logprob: -10.669044494628906
    10. 'prime' → logprob: -11.044044494628906

Token 263: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009059838484972715
    2. 'self' → logprob: -8.125905990600586
    3. '(' → logprob: -8.375905990600586
    4. '_list' → logprob: -9.125905990600586
    5. '<|end|>' → logprob: -9.750905990600586
    6. ':' → logprob: -10.000905990600586
    7. 's' → logprob: -10.125905990600586
    8. '():' → logprob: -10.500905990600586
    9. '```' → logprob: -10.875905990600586
    10. '():
' → logprob: -11.375905990600586

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19305743277072906
    2. ')' → logprob: -2.3180575370788574
    3. '):
' → logprob: -2.5680575370788574
    4. 'self' → logprob: -8.3180570602417
    5. '):

' → logprob: -9.9430570602417
    6. '(self' → logprob: -10.1930570602417
    7. '   ' → logprob: -10.9430570602417
    8. '):
' → logprob: -11.0680570602417
    9. ':' → logprob: -11.6930570602417
    10. '():' → logprob: -12.0680570602417

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022841955069452524
    2. ' return' → logprob: -6.752284049987793
    3. 'return' → logprob: -6.877284049987793
    4. '
' → logprob: -10.252284049987793
    5. '   ' → logprob: -10.502284049987793
    6. '	return' → logprob: -12.502284049987793
    7. ':return' → logprob: -12.502284049987793
    8. '<|end|>' → logprob: -12.752284049987793
    9. '[]' → logprob: -13.002284049987793
    10. ':' → logprob: -14.002284049987793

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031226517632603645
    2. ' return' → logprob: -3.531226634979248
    3. '       ' → logprob: -6.531226634979248
    4. '   ' → logprob: -11.03122615814209
    5. '	return' → logprob: -14.15622615814209
    6. ':return' → logprob: -14.78122615814209
    7. '
' → logprob: -15.40622615814209
    8. '        
' → logprob: -16.156227111816406
    9. '{return' → logprob: -17.281227111816406
    10. 'eturn' → logprob: -17.281227111816406

Token 267: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740777611732483
    2. 'self' → logprob: -0.9740777611732483
    3. '[self' → logprob: -15.099078178405762
    4. ' ' → logprob: -15.224078178405762
    5. '   ' → logprob: -15.849078178405762
    6. '	self' → logprob: -16.349077224731445
    7. '(self' → logprob: -17.224077224731445
    8. ' ' → logprob: -17.474077224731445
    9. '_self' → logprob: -18.349077224731445
    10. '[]' → logprob: -19.224077224731445

Token 268: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: 0.0
    2. '.' → logprob: -16.75
    3. '.__' → logprob: -18.375
    4. ' .' → logprob: -19.0
    5. '._
' → logprob: -20.125
    6. '_' → logprob: -20.875
    7. 's' → logprob: -21.125
    8. 'self' → logprob: -22.0
    9. ' _' → logprob: -22.125
    10. '._

' → logprob: -22.375

Token 269: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -6.749814019713085e-06
    2. '_pr' → logprob: -12.250006675720215
    3. 'pri' → logprob: -14.125006675720215
    4. 'p' → logprob: -14.375006675720215
    5. 'prime' → logprob: -15.250006675720215
    6. 'prim' → logprob: -16.25000762939453
    7. '_' → logprob: -16.37500762939453
    8. '	pr' → logprob: -16.75000762939453
    9. '.pr' → logprob: -17.25000762939453
    10. 'pl' → logprob: -17.81250762939453

Token 270: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0013614245690405369
    2. 'mes' → logprob: -6.87636137008667
    3. 'omes' → logprob: -8.126361846923828
    4. 'es' → logprob: -12.251361846923828
    5. '_' → logprob: -12.376361846923828
    6. 'ime' → logprob: -12.501361846923828
    7. 'ames' → logprob: -12.626361846923828
    8. 'im' → logprob: -13.501361846923828
    9. '
' → logprob: -13.626361846923828
    10. 'o' → logprob: -13.626361846923828

Token 271: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4201357066631317
    2. '#' → logprob: -1.670135736465454
    3. 'p' → logprob: -2.670135736465454
    4. '[' → logprob: -3.545135736465454
    5. 'g' → logprob: -3.670135736465454
    6. '   ' → logprob: -5.295135498046875
    7. 'd' → logprob: -5.795135498046875
    8. ' ' → logprob: -6.045135498046875
    9. '```' → logprob: -6.045135498046875
    10. '<|end|>' → logprob: -6.045135498046875

Token 273: ' Gold' (ID: 9833)
  Prédit: ' Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.7570914030075073
    2. ' Perfect' → logprob: -1.6320914030075073
    3. ' Factor' → logprob: -1.6320914030075073
    4. ' Fibonacci' → logprob: -2.632091522216797
    5. ' Composite' → logprob: -3.882091522216797
    6. ' ' → logprob: -4.007091522216797
    7. ' Pal' → logprob: -4.132091522216797
    8. ' Number' → logprob: -5.007091522216797
    9. ' Twin' → logprob: -6.632091522216797
    10. ' Range' → logprob: -7.132091522216797

Token 274: 'bach' (ID: 37754)
  Prédit: 'bach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bach' → logprob: -2.1008713702030946e-06
    2. 'b' → logprob: -14.750001907348633
    3. 'back' → logprob: -15.000001907348633
    4. '_' → logprob: -15.375001907348633
    5. 'stein' → logprob: -15.375001907348633
    6. 'st' → logprob: -15.625001907348633
    7. 'ach' → logprob: -15.875001907348633
    8. ' bach' → logprob: -16.125001907348633
    9. 'stone' → logprob: -16.250001907348633
    10. 'B' → logprob: -16.375001907348633

Token 275: 'Solver' (ID: 70484)
  Prédit: 'Con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -0.03536467254161835
    2. 'Partition' → logprob: -4.035364627838135
    3. 'Pair' → logprob: -4.410364627838135
    4. ' conject' → logprob: -6.410364627838135
    5. 'Problem' → logprob: -7.285364627838135
    6. 'Solver' → logprob: -7.535364627838135
    7. 'Calculator' → logprob: -7.785364627838135
    8. ''s' → logprob: -7.910364627838135
    9. 'Generator' → logprob: -8.910365104675293
    10. 'Composition' → logprob: -9.285365104675293

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061987970024347305
    2. ':
' → logprob: -2.81198787689209
    3. ':

' → logprob: -11.81198787689209
    4. '   ' → logprob: -12.31198787689209
    5. ' :' → logprob: -12.81198787689209
    6. ':def' → logprob: -12.81198787689209
    7. ' :
' → logprob: -14.31198787689209
    8. '(object' → logprob: -14.31198787689209
    9. ':
' → logprob: -14.68698787689209
    10. '):' → logprob: -14.93698787689209

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016549108549952507
    2. ' def' → logprob: -4.141549110412598
    3. 'def' → logprob: -7.641549110412598
    4. '	def' → logprob: -11.141549110412598
    5. '    
' → logprob: -11.641549110412598
    6. ':' → logprob: -12.391549110412598
    7. '
' → logprob: -13.141549110412598
    8. ':def' → logprob: -13.766549110412598
    9. '   ' → logprob: -14.016549110412598
    10. '```' → logprob: -14.016549110412598

Token 278: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16100531816482544
    2. ' def' → logprob: -1.9110052585601807
    3. '   ' → logprob: -7.16100549697876
    4. 'class' → logprob: -12.911005020141602
    5. 'de' → logprob: -13.661005020141602
    6. ' ' → logprob: -14.661005020141602
    7. '```' → logprob: -15.411005020141602
    8. ':' → logprob: -16.5360050201416
    9. '	def' → logprob: -16.5360050201416
    10. 'import' → logprob: -16.6610050201416

Token 279: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002903658663854003
    2. ' def' → logprob: -6.002903461456299
    3. ' init' → logprob: -8.502903938293457
    4. '__' → logprob: -9.252903938293457
    5. ' _' → logprob: -9.877903938293457
    6. ' ' → logprob: -10.377903938293457
    7. ' ' → logprob: -11.002903938293457
    8. '_' → logprob: -11.252903938293457
    9. '_init' → logprob: -11.627903938293457
    10. 'def' → logprob: -12.752903938293457

Token 280: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.005826060194522142
    2. ' init' → logprob: -6.005825996398926
    3. '__' → logprob: -6.255825996398926
    4. 'def' → logprob: -7.130825996398926
    5. '_init' → logprob: -7.755825996398926
    6. ' def' → logprob: -9.380825996398926
    7. '   ' → logprob: -9.755825996398926
    8. ' __' → logprob: -10.380825996398926
    9. 'class' → logprob: -11.630825996398926
    10. '```' → logprob: -12.380825996398926

Token 281: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00559254502877593
    2. '(self' → logprob: -5.255592346191406
    3. '__' → logprob: -8.130592346191406
    4. '__(
' → logprob: -10.505592346191406
    5. '(' → logprob: -10.755592346191406
    6. '_(' → logprob: -11.505592346191406
    7. ' (' → logprob: -12.630592346191406
    8. ')(' → logprob: -14.130592346191406
    9. 'self' → logprob: -14.880592346191406
    10. '__((' → logprob: -15.130592346191406

Token 282: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.0219828002154827e-05
    2. ' self' → logprob: -10.875020027160645
    3. '
' → logprob: -14.375020027160645
    4. 'limit' → logprob: -15.375020027160645
    5. '   ' → logprob: -15.500020027160645
    6. ',' → logprob: -15.875020027160645
    7. '       ' → logprob: -16.62502098083496
    8. '(self' → logprob: -17.62502098083496
    9. '0' → logprob: -18.12502098083496
    10. ')' → logprob: -18.62502098083496

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015070053050294518
    2. 'self' → logprob: -6.501506805419922
    3. ' ,' → logprob: -12.751506805419922
    4. ' self' → logprob: -14.251506805419922
    5. '(self' → logprob: -14.626506805419922
    6. ',self' → logprob: -14.751506805419922
    7. 'limit' → logprob: -15.751506805419922
    8. '   ' → logprob: -16.376506805419922
    9. ',
' → logprob: -16.626506805419922
    10. '```' → logprob: -17.751506805419922

Token 284: ' max' (ID: 2999)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.1241980716586113
    2. 'self' → logprob: -2.8741979598999023
    3. ' limit' → logprob: -2.8741979598999023
    4. ' self' → logprob: -6.374197959899902
    5. 'max' → logprob: -7.124197959899902
    6. 'n' → logprob: -7.374197959899902
    7. '   ' → logprob: -7.499197959899902
    8. ' max' → logprob: -9.749197959899902
    9. ' n' → logprob: -10.249197959899902
    10. '100' → logprob: -10.874197959899902

Token 285: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5820616483688354
    2. '_number' → logprob: -0.8320616483688354
    3. '_num' → logprob: -5.707061767578125
    4. '_value' → logprob: -6.207061767578125
    5. '_n' → logprob: -7.582061767578125
    6. '_' → logprob: -8.957061767578125
    7. '_sum' → logprob: -9.457061767578125
    8. '_prime' → logprob: -10.582061767578125
    9. 'limit' → logprob: -12.207061767578125
    10. '_range' → logprob: -12.332061767578125

Token 286: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2292052060365677
    2. '):' → logprob: -1.7292052507400513
    3. '=' → logprob: -3.9792051315307617
    4. '):
' → logprob: -4.854205131530762
    5. ':int' → logprob: -7.854205131530762
    6. ' ):' → logprob: -7.979205131530762
    7. ' :' → logprob: -9.104205131530762
    8. '):
' → logprob: -10.729205131530762
    9. '   ' → logprob: -11.604205131530762
    10. '=None' → logprob: -11.729205131530762

Token 287: ' int' (ID: 677)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8763031959533691
    2. ' ' → logprob: -1.0013031959533691
    3. ' int' → logprob: -2.126303195953369
    4. 'int' → logprob: -2.626303195953369
    5. '10' → logprob: -4.251303195953369
    6. '   ' → logprob: -5.251303195953369
    7. ' n' → logprob: -6.626303195953369
    8. ')' → logprob: -6.751303195953369
    9. 'n' → logprob: -6.876303195953369
    10. '  ' → logprob: -8.501302719116211

Token 288: ' =' (ID: 314)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20157453417778015
    2. '):' → logprob: -1.7015745639801025
    3. ':' → logprob: -9.701574325561523
    4. '   ' → logprob: -10.076574325561523
    5. '):
' → logprob: -10.326574325561523
    6. '       ' → logprob: -10.951574325561523
    7. ' ):
' → logprob: -12.576574325561523
    8. '=' → logprob: -13.576574325561523
    9. ' ):' → logprob: -14.076574325561523
    10. ')' → logprob: -14.076574325561523

Token 289: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10773365199565887
    2. '10' → logprob: -2.357733726501465
    3. ' ' → logprob: -4.982733726501465
    4. '1' → logprob: -7.357733726501465
    5. '  ' → logprob: -12.982733726501465
    6. '   ' → logprob: -13.482733726501465
    7. '2' → logprob: -14.107733726501465
    8. '500' → logprob: -14.857733726501465
    9. '```' → logprob: -15.232733726501465
    10. '200' → logprob: -15.482733726501465

Token 290: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16060742735862732
    2. '10' → logprob: -1.9106074571609497
    3. '1' → logprob: -8.03560733795166
    4. ' ' → logprob: -9.78560733795166
    5. 'limit' → logprob: -14.03560733795166
    6. '```' → logprob: -14.16060733795166
    7. '2' → logprob: -14.91060733795166
    8. 'int' → logprob: -15.28560733795166
    9. '200' → logprob: -15.41060733795166
    10. '  ' → logprob: -15.53560733795166

Token 291: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3095158040523529
    2. '000' → logprob: -1.6845158338546753
    3. '00' → logprob: -2.5595157146453857
    4. ')' → logprob: -6.684515953063965
    5. '):' → logprob: -6.809515953063965
    6. '):
' → logprob: -7.434515953063965
    7. '_' → logprob: -9.059515953063965
    8. ' )' → logprob: -9.434515953063965
    9. ' ):' → logprob: -9.434515953063965
    10. ' ' → logprob: -10.309515953063965

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761852264404297
    2. '):
' → logprob: -0.8261852264404297
    3. '):
' → logprob: -8.82618522644043
    4. ')' → logprob: -9.45118522644043
    5. ':' → logprob: -11.45118522644043
    6. '   ' → logprob: -12.07618522644043
    7. '       ' → logprob: -13.20118522644043
    8. ' ):
' → logprob: -14.07618522644043
    9. ' ):' → logprob: -14.82618522644043
    10. '):

' → logprob: -14.95118522644043

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013119110371917486
    2. 'self' → logprob: -9.625131607055664
    3. ' self' → logprob: -9.875131607055664
    4. ':' → logprob: -12.375131607055664
    5. '   ' → logprob: -12.500131607055664
    6. ',' → logprob: -12.750131607055664
    7. '):
' → logprob: -13.500131607055664
    8. ':
' → logprob: -15.250131607055664
    9. '```' → logprob: -15.250131607055664
    10. '      ' → logprob: -15.750131607055664

Token 294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006760721560567617
    2. ' self' → logprob: -5.006760597229004
    3. '       ' → logprob: -10.006760597229004
    4. '
' → logprob: -16.13176155090332
    5. 'super' → logprob: -16.13176155090332
    6. '   ' → logprob: -17.63176155090332
    7. '	self' → logprob: -19.00676155090332
    8. ' ' → logprob: -19.13176155090332
    9. '        
' → logprob: -19.13176155090332
    10. '```' → logprob: -19.63176155090332

Token 295: '.max' (ID: 11883)
  Prédit: '.pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.057006437331438065
    2. '.max' → logprob: -3.932006359100342
    3. '._' → logprob: -4.057006359100342
    4. '.p' → logprob: -4.807006359100342
    5. '.' → logprob: -5.307006359100342
    6. ' .' → logprob: -6.057006359100342
    7. '.limit' → logprob: -6.682006359100342
    8. '.generator' → logprob: -7.057006359100342
    9. '   ' → logprob: -8.8070068359375
    10. '.gold' → logprob: -9.3070068359375

Token 296: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -1.9361264946837764e-07
    2. 'limit' → logprob: -16.875
    3. '_' → logprob: -17.25
    4. '_limits' → logprob: -17.75
    5. '_lim' → logprob: -18.125
    6. ' _' → logprob: -19.125
    7. '_LIMIT' → logprob: -19.25
    8. '=_' → logprob: -19.625
    9. '_l' → logprob: -19.875
    10. ' =' → logprob: -20.875

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740820825099945
    2. '=' → logprob: -0.9740821123123169
    3. ' ' → logprob: -12.349081993103027
    4. '   ' → logprob: -14.599081993103027
    5. '    ' → logprob: -16.224082946777344
    6. '=self' → logprob: -17.224082946777344
    7. '=int' → logprob: -17.849082946777344
    8. '  ' → logprob: -17.974082946777344
    9. '=max' → logprob: -18.099082946777344
    10. ')' → logprob: -18.474082946777344

Token 298: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.474118709564209
    2. ' max' → logprob: -0.974118709564209
    3. '500' → logprob: -10.099119186401367
    4. ' ' → logprob: -15.224119186401367
    5. '50' → logprob: -16.099119186401367
    6. '	max' → logprob: -16.474119186401367
    7. '(max' → logprob: -16.599119186401367
    8. '[max' → logprob: -17.224119186401367
    9. '=max' → logprob: -18.099119186401367
    10. '   ' → logprob: -18.349119186401367

Token 299: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00023727134976070374
    2. 'limit' → logprob: -8.375237464904785
    3. 'Limit' → logprob: -12.000237464904785
    4. '50' → logprob: -16.12523651123047
    5. '_LIMIT' → logprob: -16.25023651123047
    6. '_' → logprob: -16.87523651123047
    7. '   ' → logprob: -17.25023651123047
    8. 'lim' → logprob: -17.25023651123047
    9. 'int' → logprob: -17.37523651123047
    10. ' limit' → logprob: -17.50023651123047

Token 300: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001640876434976235
    2. 'self' → logprob: -9.125164031982422
    3. ' self' → logprob: -10.625164031982422
    4. '
' → logprob: -10.875164031982422
    5. ',' → logprob: -12.250164031982422
    6. '<|end|>' → logprob: -12.750164031982422
    7. '   ' → logprob: -13.125164031982422
    8. '        
' → logprob: -14.125164031982422
    9. '(self' → logprob: -15.500164031982422
    10. '           ' → logprob: -15.750164031982422

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001785112835932523
    2. 'self' → logprob: -8.750178337097168
    3. ' self' → logprob: -11.125178337097168
    4. '
' → logprob: -13.125178337097168
    5. '   ' → logprob: -13.125178337097168
    6. ',' → logprob: -14.875178337097168
    7. '<|end|>' → logprob: -15.000178337097168
    8. 'class' → logprob: -15.375178337097168
    9. 'def' → logprob: -16.125179290771484
    10. '        
' → logprob: -16.250179290771484

Token 302: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.877503907773644e-05
    2. ' self' → logprob: -9.750099182128906
    3. '       ' → logprob: -10.125099182128906
    4. '
' → logprob: -15.375099182128906
    5. '        
' → logprob: -16.875099182128906
    6. '   ' → logprob: -19.125099182128906
    7. '	self' → logprob: -19.125099182128906
    8. '(self' → logprob: -20.250099182128906
    9. 's' → logprob: -21.375099182128906
    10. '           ' → logprob: -21.500099182128906

Token 303: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.08909432590007782
    2. '._' → logprob: -3.339094400405884
    3. ' .' → logprob: -3.839094400405884
    4. '.generator' → logprob: -4.089094161987305
    5. ' =' → logprob: -5.714094161987305
    6. '.' → logprob: -5.839094161987305
    7. '.p' → logprob: -6.839094161987305
    8. '.g' → logprob: -6.964094161987305
    9. '_prime' → logprob: -7.214094161987305
    10. '=' → logprob: -7.714094161987305

Token 304: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.024171585217118263
    2. 'imes' → logprob: -3.7741715908050537
    3. 'imer' → logprob: -8.274171829223633
    4. 'im' → logprob: -8.524171829223633
    5. '_generator' → logprob: -10.086671829223633
    6. 'generator' → logprob: -10.336671829223633
    7. '   ' → logprob: -10.961671829223633
    8. '#' → logprob: -11.024171829223633
    9. '_' → logprob: -11.336671829223633
    10. 'ome' → logprob: -11.336671829223633

Token 305: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -0.043854113668203354
    2. 's' → logprob: -3.293853998184204
    3. '_gen' → logprob: -5.543854236602783
    4. 'gen' → logprob: -6.668854236602783
    5. 'Generator' → logprob: -7.668854236602783
    6. 'generator' → logprob: -9.293853759765625
    7. 'Gen' → logprob: -10.418853759765625
    8. 'es' → logprob: -10.793853759765625
    9. 'enerator' → logprob: -13.668853759765625
    10. 'sg' → logprob: -14.043853759765625

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407710552215576
    2. '=' → logprob: -0.9740771055221558
    3. 's' → logprob: -16.349077224731445
    4. ' ' → logprob: -18.724077224731445
    5. '  ' → logprob: -19.474077224731445
    6. ' =
' → logprob: -19.849077224731445
    7. '=
' → logprob: -20.349077224731445
    8. '＝' → logprob: -20.474077224731445
    9. '   ' → logprob: -20.599077224731445
    10. ':' → logprob: -21.474077224731445

Token 307: ' Prime' (ID: 20134)
  Prédit: ' Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.25192955136299133
    2. 'Prime' → logprob: -1.501929521560669
    3. ' prime' → logprob: -14.75192928314209
    4. '_prime' → logprob: -16.626930236816406
    5. 'prime' → logprob: -17.751930236816406
    6. '_Pr' → logprob: -19.126930236816406
    7. 'Pr' → logprob: -19.626930236816406
    8. 'Prim' → logprob: -19.876930236816406
    9. ' ' → logprob: -20.876930236816406
    10. 'Prima' → logprob: -21.001930236816406

Token 308: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -5.512236498361744e-07
    2. 'generator' → logprob: -15.625000953674316
    3. ' Generator' → logprob: -16.0
    4. '_generator' → logprob: -16.875
    5. 'Gen' → logprob: -16.875
    6. 'Gener' → logprob: -17.75
    7. 'enerator' → logprob: -18.0
    8. 'Generate' → logprob: -18.5
    9. 'Gene' → logprob: -18.875
    10. '   ' → logprob: -19.0

Token 309: '(self' (ID: 2402)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.13668043911457062
    2. '(self' → logprob: -2.1366803646087646
    3. '(' → logprob: -4.636680603027344
    4. '(
' → logprob: -11.261680603027344
    5. '(limit' → logprob: -14.386680603027344
    6. '(m' → logprob: -15.011680603027344
    7. ' (' → logprob: -15.386680603027344
    8. '((' → logprob: -15.511680603027344
    9. '(

' → logprob: -15.511680603027344
    10. '(`' → logprob: -15.761680603027344

Token 310: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0005541055579669774
    2. 'max' → logprob: -7.500554084777832
    3. '.' → logprob: -14.000554084777832
    4. ' max' → logprob: -15.250554084777832
    5. '	max' → logprob: -16.62555503845215
    6. '_max' → logprob: -18.00055503845215
    7. ',max' → logprob: -18.62555503845215
    8. ' .' → logprob: -18.75055503845215
    9. '=max' → logprob: -19.12555503845215
    10. '(max' → logprob: -19.75055503845215

Token 311: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -2.935296834039036e-06
    2. 'limit' → logprob: -12.75000286102295
    3. '_LIMIT' → logprob: -18.500003814697266
    4. 'Limit' → logprob: -19.500003814697266
    5. ' limit' → logprob: -20.125003814697266
    6. '-limit' → logprob: -20.500003814697266
    7. '_' → logprob: -21.500003814697266
    8. '.limit' → logprob: -21.750003814697266
    9. '_lim' → logprob: -21.875003814697266
    10. '   ' → logprob: -22.000003814697266

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -12.250005722045898
    3. ')
' → logprob: -15.375005722045898
    4. '))' → logprob: -16.0000057220459
    5. '       ' → logprob: -16.1250057220459
    6. '<|end|>' → logprob: -17.7500057220459
    7. ')}' → logprob: -18.1250057220459
    8. '   ' → logprob: -18.2500057220459
    9. ')

' → logprob: -19.0000057220459
    10. '),' → logprob: -19.1250057220459

Token 313: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05409420654177666
    2. 'def' → logprob: -3.9290943145751953
    3. '    
' → logprob: -4.054094314575195
    4. '<|end|>' → logprob: -4.554094314575195
    5. '   ' → logprob: -5.804094314575195
    6. ' def' → logprob: -7.054094314575195
    7. '  
' → logprob: -7.679094314575195
    8. '        
' → logprob: -8.304094314575195
    9. ' 
' → logprob: -8.554094314575195
    10. '

' → logprob: -8.679094314575195

Token 314: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044496997725218534
    2. ' def' → logprob: -7.8754448890686035
    3. '   ' → logprob: -10.000445365905762
    4. '
' → logprob: -10.875445365905762
    5. '    
' → logprob: -15.500445365905762
    6. '	def' → logprob: -15.750445365905762
    7. '

' → logprob: -15.750445365905762
    8. ' ' → logprob: -17.125444412231445
    9. '        
' → logprob: -17.500444412231445
    10. '```' → logprob: -18.125444412231445

Token 315: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.6240566083070007e-06
    2. ' def' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.375001907348633
    4. 'de' → logprob: -18.625001907348633
    5. '    
' → logprob: -19.000001907348633
    6. ' ' → logprob: -19.375001907348633
    7. '        
' → logprob: -20.375001907348633
    8. '
' → logprob: -20.500001907348633
    9. '```' → logprob: -20.875001907348633
    10. 'd' → logprob: -21.250001907348633

Token 316: ' count' (ID: 3605)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5818219780921936
    2. ' solve' → logprob: -1.5818219184875488
    3. ' gold' → logprob: -1.8318219184875488
    4. 'solve' → logprob: -3.206821918487549
    5. 'gold' → logprob: -3.706821918487549
    6. 'find' → logprob: -4.831821918487549
    7. ' can' → logprob: -7.206821918487549
    8. ' def' → logprob: -8.206822395324707
    9. ' get' → logprob: -8.331822395324707
    10. 'can' → logprob: -8.956822395324707

Token 317: '_prime' (ID: 98616)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35748767852783203
    2. '_pairs' → logprob: -2.232487678527832
    3. '(' → logprob: -2.607487678527832
    4. '_' → logprob: -2.982487678527832
    5. '_gold' → logprob: -3.232487678527832
    6. '_part' → logprob: -4.732487678527832
    7. '_s' → logprob: -5.232487678527832
    8. '_trip' → logprob: -5.982487678527832
    9. '_div' → logprob: -6.607487678527832
    10. '_g' → logprob: -6.732487678527832

Token 318: '_sum' (ID: 29859)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.17819945514202118
    2. '_part' → logprob: -2.178199529647827
    3. '_s' → logprob: -3.553199529647827
    4. '_sum' → logprob: -3.928199529647827
    5. 'pairs' → logprob: -7.428199291229248
    6. '_pair' → logprob: -7.928199291229248
    7. 'part' → logprob: -8.803199768066406
    8. 's' → logprob: -8.928199768066406
    9. '_de' → logprob: -9.053199768066406
    10. 'sum' → logprob: -9.303199768066406

Token 319: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.23322135210037231
    2. '_' → logprob: -2.1082212924957275
    3. 's' → logprob: -2.7332212924957275
    4. '_com' → logprob: -4.358221530914307
    5. '_re' → logprob: -5.358221530914307
    6. '(self' → logprob: -6.733221530914307
    7. '_part' → logprob: -6.858221530914307
    8. 'pairs' → logprob: -7.608221530914307
    9. '_de' → logprob: -7.733221530914307
    10. '_pair' → logprob: -8.858221054077148

Token 320: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002631238894537091
    2. '(' → logprob: -8.250263214111328
    3. ' (' → logprob: -13.375263214111328
    4. '(
' → logprob: -16.125263214111328
    5. '(s' → logprob: -16.500263214111328
    6. 'self' → logprob: -17.500263214111328
    7. '(sel' → logprob: -17.625263214111328
    8. '   ' → logprob: -18.125263214111328
    9. '(Self' → logprob: -18.125263214111328
    10. ' ' → logprob: -19.625263214111328

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. 'self' → logprob: -11.375024795532227
    3. ' ,' → logprob: -11.375024795532227
    4. ',num' → logprob: -13.500024795532227
    5. ',self' → logprob: -15.625024795532227
    6. '       ' → logprob: -15.875024795532227
    7. '   ' → logprob: -17.250024795532227
    8. ',
' → logprob: -17.250024795532227
    9. ',n' → logprob: -17.375024795532227
    10. '(self' → logprob: -17.625024795532227

Token 322: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3670518398284912
    2. ' self' → logprob: -1.2420518398284912
    3. 'n' → logprob: -4.49205207824707
    4. ' n' → logprob: -4.99205207824707
    5. '   ' → logprob: -8.36705207824707
    6. 'num' → logprob: -9.49205207824707
    7. '       ' → logprob: -10.36705207824707
    8. 'number' → logprob: -10.49205207824707
    9. ' number' → logprob: -10.61705207824707
    10. ' num' → logprob: -11.24205207824707

Token 323: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07063981145620346
    2. '):' → logprob: -2.6956398487091064
    3. ')' → logprob: -7.695639610290527
    4. 'self' → logprob: -9.070639610290527
    5. '):
' → logprob: -10.320639610290527
    6. ' ):' → logprob: -10.320639610290527
    7. ':int' → logprob: -10.445639610290527
    8. '   ' → logprob: -11.195639610290527
    9. ' :' → logprob: -11.820639610290527
    10. '):
' → logprob: -12.320639610290527

Token 324: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.43787679076194763
    2. ' int' → logprob: -1.06287682056427
    3. 'self' → logprob: -5.1878767013549805
    4. ' self' → logprob: -5.8128767013549805
    5. ')' → logprob: -7.6878767013549805
    6. '   ' → logprob: -10.06287670135498
    7. ' )' → logprob: -10.06287670135498
    8. ' n' → logprob: -12.56287670135498
    9. 'n' → logprob: -12.56287670135498
    10. '       ' → logprob: -12.81287670135498

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004715991672128439
    2. '):' → logprob: -5.379715919494629
    3. '):
' → logprob: -9.879715919494629
    4. '   ' → logprob: -11.004715919494629
    5. ' )' → logprob: -11.379715919494629
    6. '):
' → logprob: -11.879715919494629
    7. ':' → logprob: -12.004715919494629
    8. ')->' → logprob: -13.254715919494629
    9. '       ' → logprob: -13.629715919494629
    10. ' ):' → logprob: -15.254715919494629

Token 326: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003336777735967189
    2. '):' → logprob: -8.500333786010742
    3. ' :' → logprob: -9.500333786010742
    4. '(self' → logprob: -11.250333786010742
    5. ' ->' → logprob: -11.375333786010742
    6. '():' → logprob: -11.625333786010742
    7. '->' → logprob: -11.625333786010742
    8. ':
' → logprob: -12.500333786010742
    9. ':def' → logprob: -12.750333786010742
    10. ':self' → logprob: -13.625333786010742

Token 327: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25193271040916443
    2. ' int' → logprob: -1.5019327402114868
    3. '(int' → logprob: -13.376933097839355
    4. '   ' → logprob: -13.751933097839355
    5. ' ' → logprob: -15.126933097839355
    6. '[int' → logprob: -15.626933097839355
    7. '    ' → logprob: -16.00193214416504
    8. '0' → logprob: -16.37693214416504
    9. '	int' → logprob: -16.62693214416504
    10. ':int' → logprob: -17.00193214416504

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007761250250041485
    2. '       ' → logprob: -5.382761478424072
    3. ':
' → logprob: -6.132761478424072
    4. '(self' → logprob: -7.132761478424072
    5. '):' → logprob: -9.632761001586914
    6. '():' → logprob: -10.382761001586914
    7. '   ' → logprob: -10.507761001586914
    8. '(' → logprob: -11.132761001586914
    9. '):
' → logprob: -12.007761001586914
    10. ':self' → logprob: -12.382761001586914

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2466200292110443
    2. 'count' → logprob: -1.7466200590133667
    3. ' count' → logprob: -3.121619939804077
    4. 'result' → logprob: -10.371620178222656
    5. '   ' → logprob: -10.621620178222656
    6. ' result' → logprob: -11.121620178222656
    7. '```' → logprob: -11.371620178222656
    8. '
' → logprob: -11.621620178222656
    9. 'counter' → logprob: -12.746620178222656
    10. '      ' → logprob: -13.121620178222656

Token 330: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.03521392197581e-05
    2. '       ' → logprob: -10.750030517578125
    3. 'counter' → logprob: -12.250030517578125
    4. ' count' → logprob: -13.000030517578125
    5. 'result' → logprob: -13.500030517578125
    6. '
' → logprob: -15.125030517578125
    7. 'self' → logprob: -15.875030517578125
    8. 'cnt' → logprob: -17.125030517578125
    9. 'counts' → logprob: -17.375030517578125
    10. 'if' (adapté à ' if') → logprob: -17.625030517578125

Token 331: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3485320508480072
    2. 'n' → logprob: -1.2235320806503296
    3. ' not' → logprob: -9.848531723022461
    4. '   ' → logprob: -11.098531723022461
    5. '       ' → logprob: -11.848531723022461
    6. 'not' → logprob: -11.848531723022461
    7. 'self' → logprob: -13.723531723022461
    8. ' self' → logprob: -13.848531723022461
    9. '    ' → logprob: -14.223531723022461
    10. '	n' → logprob: -14.348531723022461

Token 332: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03828166425228119
    2. '<' → logprob: -3.2882816791534424
    3. ' <=' → logprob: -8.663281440734863
    4. ' %' → logprob: -10.663281440734863
    5. '%' → logprob: -11.038281440734863
    6. ' ' → logprob: -11.413281440734863
    7. '<=' → logprob: -11.788281440734863
    8. '   ' → logprob: -12.413281440734863
    9. ' >' → logprob: -13.538281440734863
    10. '[' → logprob: -14.413281440734863

Token 333: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.015433666296303272
    2. '2' → logprob: -4.3904337882995605
    3. ' ' → logprob: -6.1404337882995605
    4. '3' → logprob: -7.5154337882995605
    5. '6' → logprob: -8.515433311462402
    6. '5' → logprob: -11.265433311462402
    7. '   ' → logprob: -12.515433311462402
    8. '

' → logprob: -13.890433311462402
    9. '  ' → logprob: -14.265433311462402
    10. '(' → logprob: -14.702933311462402

Token 334: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12988729774951935
    2. '2' → logprob: -2.129887342453003
    3. '3' → logprob: -5.879887104034424
    4. '6' → logprob: -8.879887580871582
    5. ' ' → logprob: -11.379887580871582
    6. '0' → logprob: -12.129887580871582
    7. '

' → logprob: -13.879887580871582
    8. '5' → logprob: -14.129887580871582
    9. '   ' → logprob: -14.879887580871582
    10. '(' → logprob: -14.942387580871582

Token 335: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4320661723613739
    2. ':' → logprob: -1.1820662021636963
    3. ' or' → logprob: -3.1820662021636963
    4. '       ' → logprob: -6.182065963745117
    5. '           ' → logprob: -8.307065963745117
    6. ':return' → logprob: -8.432065963745117
    7. 'or' → logprob: -8.932065963745117
    8. '   ' → logprob: -11.432065963745117
    9. ':
' → logprob: -11.432065963745117
    10. 'return' → logprob: -13.682065963745117

Token 336: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45313960313796997
    2. '           ' → logprob: -1.0781395435333252
    3. 'return' → logprob: -3.828139543533325
    4. ' return' → logprob: -6.703139781951904
    5. '
' → logprob: -7.453139781951904
    6. '0' → logprob: -7.703139781951904
    7. '        ' → logprob: -10.203139305114746
    8. '        
' → logprob: -11.203139305114746
    9. '2' → logprob: -11.328139305114746
    10. '   ' → logprob: -11.328139305114746

Token 337: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017403149977326393
    2. ' return' → logprob: -4.2674031257629395
    3. '       ' → logprob: -5.7674031257629395
    4. '           ' → logprob: -9.267403602600098
    5. '0' → logprob: -12.392403602600098
    6. '	return' → logprob: -12.767403602600098
    7. '   ' → logprob: -12.892403602600098
    8. '
' → logprob: -13.767403602600098
    9. ':return' → logprob: -14.517403602600098
    10. '{return' → logprob: -15.142403602600098

Token 338: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '       ' → logprob: -15.625261306762695
    4. '   ' → logprob: -16.250261306762695
    5. '           ' → logprob: -16.750261306762695
    6. '     ' → logprob: -19.000261306762695
    7. '  ' → logprob: -19.000261306762695
    8. '        ' → logprob: -19.625261306762695
    9. '         ' → logprob: -19.750261306762695
    10. '    ' → logprob: -19.750261306762695

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.375011444091797
    4. '       ' → logprob: -17.750011444091797
    5. '  ' → logprob: -20.250011444091797
    6. '           ' → logprob: -20.500011444091797
    7. '۰' → logprob: -20.625011444091797
    8. '     ' → logprob: -21.125011444091797
    9. '```' → logprob: -21.125011444091797
    10. '00' → logprob: -21.500011444091797

Token 340: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009958301670849323
    2. '       ' → logprob: -5.134958267211914
    3. '        
' → logprob: -6.009958267211914
    4. ' 
' → logprob: -8.134958267211914
    5. '  
' → logprob: -8.259958267211914
    6. '\n' → logprob: -8.259958267211914
    7. '    
' → logprob: -8.384958267211914
    8. '
' → logprob: -8.509958267211914
    9. '<|end|>' → logprob: -8.634958267211914
    10. '        ' → logprob: -10.509958267211914

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43819111585617065
    2. '
' → logprob: -1.0631911754608154
    3. '        
' → logprob: -5.188190937042236
    4. '    
' → logprob: -6.938190937042236
    5. '  
' → logprob: -7.063190937042236
    6. ' 
' → logprob: -7.438190937042236
    7. '```' → logprob: -8.438191413879395
    8. '\n' → logprob: -8.688191413879395
    9. ' return' → logprob: -8.813191413879395
    10. '       
' → logprob: -9.063191413879395

Token 342: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0002601438027340919
    2. '       ' → logprob: -8.875260353088379
    3. ' count' → logprob: -9.125260353088379
    4. 'counter' → logprob: -12.250260353088379
    5. 'result' → logprob: -12.625260353088379
    6. '   ' → logprob: -14.000260353088379
    7. 'total' → logprob: -14.375260353088379
    8. '
' → logprob: -14.500260353088379
    9. 'pairs' → logprob: -15.000260353088379
    10. '```' → logprob: -15.375260353088379

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031796174589544535
    2. '=' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.253179550170898
    4. ',' → logprob: -16.2531795501709
    5. ' =
' → logprob: -17.7531795501709
    6. '_' → logprob: -17.7531795501709
    7. ' ' → logprob: -18.1281795501709
    8. '	' → logprob: -18.3781795501709
    9. '    ' → logprob: -18.3781795501709
    10. ')' → logprob: -18.5031795501709

Token 344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.130233764648438
    4. '       ' → logprob: -17.880233764648438
    5. '=' → logprob: -19.005233764648438
    6. '
' → logprob: -19.192733764648438
    7. '۰' → logprob: -19.630233764648438
    8. 'sum' → logprob: -19.880233764648438
    9. '  ' → logprob: -19.942733764648438
    10. 'self' → logprob: -20.192733764648438

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'sum' → logprob: -16.875009536743164
    4. 'len' → logprob: -19.125009536743164
    5. 'self' → logprob: -19.250009536743164
    6. '   ' → logprob: -19.250009536743164
    7. '=' → logprob: -19.937509536743164
    8. 'set' → logprob: -20.250009536743164
    9. '۰' → logprob: -20.437509536743164
    10. '1' → logprob: -20.500009536743164

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3854973614215851
    2. '
' → logprob: -1.2604973316192627
    3. ' for' → logprob: -4.135497570037842
    4. '        
' → logprob: -4.760497570037842
    5. ' 
' → logprob: -5.385497570037842
    6. '  
' → logprob: -6.260497570037842
    7. '    
' → logprob: -6.635497570037842
    8. ',' → logprob: -6.635497570037842
    9. '<|end|>' → logprob: -7.385497570037842
    10. '   
' → logprob: -8.010497093200684

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18141934275627136
    2. ' for' → logprob: -1.8064193725585938
    3. 'for' → logprob: -6.806419372558594
    4. '   ' → logprob: -8.056419372558594
    5. '    ' → logprob: -10.056419372558594
    6. ',' → logprob: -10.181419372558594
    7. '	for' → logprob: -10.556419372558594
    8. '        ' → logprob: -10.806419372558594
    9. '        
' → logprob: -10.931419372558594
    10. ' i' → logprob: -11.306419372558594

Token 348: ' primes' (ID: 104042)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018971405923366547
    2. 'left' → logprob: -4.6439714431762695
    3. '       ' → logprob: -5.5189714431762695
    4. ' for' → logprob: -5.8939714431762695
    5. 'pr' → logprob: -6.3939714431762695
    6. 'prime' → logprob: -8.14397144317627
    7. 'p' → logprob: -9.26897144317627
    8. 'half' → logprob: -9.39397144317627
    9. 'low' → logprob: -9.51897144317627
    10. 'start' → logprob: -10.01897144317627

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325037121772766
    2. '=' → logprob: -3.7732503414154053
    3. '       ' → logprob: -13.648250579833984
    4. 's' → logprob: -13.773250579833984
    5. '        ' → logprob: -14.023250579833984
    6. 'for' → logprob: -14.648250579833984
    7. '    ' → logprob: -14.773250579833984
    8. '_' → logprob: -15.148250579833984
    9. ',' → logprob: -15.773250579833984
    10. ' ' → logprob: -15.773250579833984

Token 350: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08900991827249527
    2. ' self' → logprob: -2.464010000228882
    3. '[self' → logprob: -9.839010238647461
    4. '       ' → logprob: -11.839010238647461
    5. '	self' → logprob: -12.839010238647461
    6. ' [' → logprob: -13.464010238647461
    7. '   ' → logprob: -13.464010238647461
    8. '
' → logprob: -13.589010238647461
    9. '(self' → logprob: -13.589010238647461
    10. '[' → logprob: -14.464010238647461

Token 351: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -3.130576806142926e-05
    2. '.' → logprob: -11.000031471252441
    3. 'prime' → logprob: -11.750031471252441
    4. ' .' → logprob: -12.500031471252441
    5. '.p' → logprob: -13.875031471252441
    6. 'pr' → logprob: -15.000031471252441
    7. '._' → logprob: -15.500031471252441
    8. '..' → logprob: -15.750031471252441
    9. '_prime' → logprob: -16.125030517578125
    10. '.s' → logprob: -16.250030517578125

Token 352: 'ime' (ID: 642)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.13017703592777252
    2. 'ime' → logprob: -2.1301770210266113
    3. 'imer' → logprob: -6.255177021026611
    4. 'o' → logprob: -9.25517749786377
    5. 'oves' → logprob: -9.25517749786377
    6. '[' → logprob: -9.44267749786377
    7. 'omes' → logprob: -9.50517749786377
    8. '_generator' → logprob: -9.75517749786377
    9. 'ome' → logprob: -10.13017749786377
    10. '   ' → logprob: -10.13017749786377

Token 353: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -0.0014263062039390206
    2. 'generator' → logprob: -6.6264262199401855
    3. 'self' → logprob: -10.501426696777344
    4. 'Generator' → logprob: -10.501426696777344
    5. 's' → logprob: -10.751426696777344
    6. '       ' → logprob: -12.376426696777344
    7. '
' → logprob: -13.001426696777344
    8. '[self' → logprob: -13.251426696777344
    9. ' =' → logprob: -13.376426696777344
    10. '           ' → logprob: -13.501426696777344

Token 354: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.0008105786982923746
    2. '._' → logprob: -7.125810623168945
    3. 'pr' → logprob: -12.625810623168945
    4. '.' → logprob: -13.875810623168945
    5. ' .' → logprob: -13.875810623168945
    6. '.p' → logprob: -15.250810623168945
    7. '	pr' → logprob: -15.875810623168945
    8. '_pr' → logprob: -16.875810623168945
    9. '_.' → logprob: -16.875810623168945
    10. '
' → logprob: -17.625810623168945

Token 355: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -1.8312570318812504e-05
    2. 'r' → logprob: -12.875018119812012
    3. 'mes' → logprob: -13.125018119812012
    4. '```' → logprob: -13.125018119812012
    5. '   ' → logprob: -13.375018119812012
    6. '[' → logprob: -13.625018119812012
    7. 'ime' → logprob: -14.125018119812012
    8. 'omes' → logprob: -14.125018119812012
    9. '_' → logprob: -14.500018119812012
    10. 'im' → logprob: -14.500018119812012

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12476623803377151
    2. ' for' → logprob: -2.7497663497924805
    3. '
' → logprob: -3.4997663497924805
    4. 'for' → logprob: -4.2497663497924805
    5. '        
' → logprob: -4.9997663497924805
    6. ' ' → logprob: -8.12476634979248
    7. ' 
' → logprob: -8.12476634979248
    8. '  
' → logprob: -8.24976634979248
    9. '	' → logprob: -8.62476634979248
    10. '    
' → logprob: -8.74976634979248

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030902713537216187
    2. ' for' → logprob: -3.530902624130249
    3. 'for' → logprob: -7.780902862548828
    4. '        
' → logprob: -7.905902862548828
    5. '        ' → logprob: -9.530902862548828
    6. '   ' → logprob: -9.655902862548828
    7. ' ' → logprob: -10.030902862548828
    8. '      ' → logprob: -10.780902862548828
    9. ' and' → logprob: -10.905902862548828
    10. '    ' → logprob: -11.030902862548828

Token 358: ' sieve' (ID: 142781)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.023366093635559
    2. 'left' → logprob: -1.273366093635559
    3. ' for' → logprob: -1.523366093635559
    4. ' left' → logprob: -2.3983659744262695
    5. '       ' → logprob: -3.0233659744262695
    6. 'low' → logprob: -6.6483659744262695
    7. 'start' → logprob: -7.8983659744262695
    8. 'l' → logprob: -8.02336597442627
    9. ' low' → logprob: -8.14836597442627
    10. 'i' → logprob: -8.27336597442627

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028166472911834717
    2. '=' → logprob: -5.877816677093506
    3. '
' → logprob: -13.377816200256348
    4. ',' → logprob: -13.627816200256348
    5. '    ' → logprob: -13.627816200256348
    6. '   ' → logprob: -13.752816200256348
    7. ' ' → logprob: -13.752816200256348
    8. '        ' → logprob: -14.002816200256348
    9. '[n' → logprob: -14.002816200256348
    10. '=n' → logprob: -14.002816200256348

Token 360: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693630158901215
    2. ' self' → logprob: -2.126936197280884
    3. '   ' → logprob: -13.126935958862305
    4. '[self' → logprob: -13.126935958862305
    5. ' ' → logprob: -13.376935958862305
    6. '=self' → logprob: -14.376935958862305
    7. '    ' → logprob: -14.751935958862305
    8. '       ' → logprob: -14.876935958862305
    9. '	self' → logprob: -15.376935958862305
    10. '(self' → logprob: -15.501935958862305

Token 361: '.pr' (ID: 27292)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.49657338857650757
    2. '.pr' → logprob: -1.1215734481811523
    3. '_prime' → logprob: -3.2465734481811523
    4. '_pr' → logprob: -4.871573448181152
    5. '_generator' → logprob: -5.121573448181152
    6. 'self' → logprob: -5.871573448181152
    7. '   ' → logprob: -5.996573448181152
    8. ' .' → logprob: -5.996573448181152
    9. '       ' → logprob: -6.871573448181152
    10. '
' → logprob: -7.371573448181152

Token 362: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.0008282098569907248
    2. 'prime' → logprob: -7.625828266143799
    3. 'imes' → logprob: -9.50082778930664
    4. 'me' → logprob: -10.25082778930664
    5. '_prime' → logprob: -10.43832778930664
    6. 'ine' → logprob: -10.93832778930664
    7. 'i' → logprob: -11.12582778930664
    8. '_' → logprob: -11.25082778930664
    9. '   ' → logprob: -11.25082778930664
    10. '
' → logprob: -11.37582778930664

Token 363: '_generator' (ID: 60998)
  Prédit: '_generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generator' → logprob: -0.0018796122167259455
    2. '[n' → logprob: -7.126879692077637
    3. '[' → logprob: -8.376879692077637
    4. 'generator' → logprob: -8.376879692077637
    5. 'gen' → logprob: -8.751879692077637
    6. '_gen' → logprob: -9.501879692077637
    7. 'Generator' → logprob: -9.751879692077637
    8. 'self' → logprob: -9.876879692077637
    9. 's' → logprob: -10.251879692077637
    10. 'n' → logprob: -10.626879692077637

Token 364: '._' (ID: 2697)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.31329020857810974
    2. '._' → logprob: -1.3132902383804321
    3. ' _' → logprob: -11.1882905960083
    4. '   ' → logprob: -12.3132905960083
    5. '.s' → logprob: -12.5632905960083
    6. ' ' → logprob: -12.9382905960083
    7. '  ' → logprob: -14.4382905960083
    8. '
' → logprob: -14.8132905960083
    9. '"_' → logprob: -14.8132905960083
    10. ' .' → logprob: -14.9382905960083

Token 365: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5048530030981055e-06
    2. '_s' → logprob: -14.500001907348633
    3. 'pr' → logprob: -14.625001907348633
    4. 'prime' → logprob: -16.375001907348633
    5. 'is' → logprob: -16.937501907348633
    6. '[s' → logprob: -16.937501907348633
    7. '(s' → logprob: -17.375001907348633
    8. ' s' → logprob: -17.375001907348633
    9. '{s' → logprob: -17.375001907348633
    10. '-s' → logprob: -17.437501907348633

Token 366: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.00013798571308143437
    2. 's' → logprob: -10.375138282775879
    3. 'ive' → logprob: -10.500138282775879
    4. 'e' → logprob: -10.750138282775879
    5. ' sieve' → logprob: -11.000138282775879
    6. '_' → logprob: -12.250138282775879
    7. 'iev' → logprob: -12.250138282775879
    8. 'eve' → logprob: -12.500138282775879
    9. '[' → logprob: -12.750138282775879
    10. 'i' → logprob: -13.000138282775879

Token 367: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02001071721315384
    2. '
' → logprob: -4.145010948181152
    3. ' for' → logprob: -5.895010948181152
    4. '        
' → logprob: -7.020010948181152
    5. 'for' → logprob: -8.770010948181152
    6. ',' → logprob: -10.020010948181152
    7. '  
' → logprob: -10.395010948181152
    8. '    
' → logprob: -10.895010948181152
    9. '   ' → logprob: -10.895010948181152
    10. ' 
' → logprob: -11.645010948181152

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020872578024864197
    2. ' for' → logprob: -3.8958725929260254
    3. '   ' → logprob: -8.645872116088867
    4. 'for' → logprob: -9.520872116088867
    5. '
' → logprob: -10.270872116088867
    6. '        
' → logprob: -10.395872116088867
    7. '    
' → logprob: -12.770872116088867
    8. ' ' → logprob: -13.020872116088867
    9. '	for' → logprob: -13.145872116088867
    10. '	' → logprob: -13.770872116088867

Token 369: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.045014191418886185
    2. ' for' → logprob: -3.5450141429901123
    3. '       ' → logprob: -4.420014381408691
    4. 'left' → logprob: -6.295014381408691
    5. 'i' → logprob: -7.170014381408691
    6. 'if' → logprob: -8.545014381408691
    7. 'start' → logprob: -8.920014381408691
    8. ' left' → logprob: -10.045014381408691
    9. 'low' → logprob: -10.170014381408691
    10. ' i' → logprob: -10.795014381408691

Token 370: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01037426758557558
    2. 'left' → logprob: -4.760374069213867
    3. 'if' → logprob: -7.510374069213867
    4. ' for' → logprob: -8.010374069213867
    5. '       ' → logprob: -8.010374069213867
    6. 'start' → logprob: -8.260374069213867
    7. 'i' → logprob: -8.760374069213867
    8. 'low' → logprob: -10.135374069213867
    9. 'half' → logprob: -10.385374069213867
    10. '   ' → logprob: -10.760374069213867

Token 371: ' avoid' (ID: 8397)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6176006197929382
    2. ' for' → logprob: -0.9926006197929382
    3. ' find' → logprob: -4.242600440979004
    4. 'count' → logprob: -4.492600440979004
    5. '       ' → logprob: -4.867600440979004
    6. 'n' → logprob: -4.992600440979004
    7. ' count' → logprob: -5.117600440979004
    8. 'def' → logprob: -5.117600440979004
    9. 'pr' → logprob: -5.367600440979004
    10. 'find' → logprob: -5.492600440979004

Token 372: ' double' (ID: 3503)
  Prédit: ' double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.5750772953033447
    2. 'count' → logprob: -2.3250772953033447
    3. ' counting' → logprob: -2.4500772953033447
    4. ' duplicates' → logprob: -2.4500772953033447
    5. 'double' → logprob: -2.8250772953033447
    6. 'duplicates' → logprob: -4.075077056884766
    7. ' duplicate' → logprob: -4.200077056884766
    8. 'duplicate' → logprob: -4.450077056884766
    9. ' avoid' → logprob: -4.700077056884766
    10. ' count' → logprob: -5.325077056884766

Token 373: ' counting' (ID: 43276)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.22698166966438293
    2. ' counting' → logprob: -1.7269816398620605
    3. '_count' → logprob: -3.9769816398620605
    4. ' count' → logprob: -5.9769816398620605
    5. '   ' → logprob: -6.8519816398620605
    6. '-count' → logprob: -6.9769816398620605
    7. 'counts' → logprob: -7.3519816398620605
    8. ' ' → logprob: -7.7269816398620605
    9. '-' → logprob: -8.476982116699219
    10. ' counts' → logprob: -8.726982116699219

Token 374: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48588186502456665
    2. ',' → logprob: -1.4858818054199219
    3. ' for' → logprob: -1.8608818054199219
    4. 'for' → logprob: -6.360881805419922
    5. ' ,' → logprob: -7.485881805419922
    6. '   ' → logprob: -8.110881805419922
    7. '        ' → logprob: -9.235881805419922
    8. '    ' → logprob: -9.610881805419922
    9. '        
' → logprob: -9.860881805419922
    10. ':' → logprob: -10.110881805419922

Token 375: ' iterate' (ID: 63166)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03700569272041321
    2. 'for' → logprob: -3.412005662918091
    3. ' i' → logprob: -6.66200590133667
    4. '       ' → logprob: -7.41200590133667
    5. ' limit' → logprob: -8.037005424499512
    6. ' half' → logprob: -8.287005424499512
    7. ' left' → logprob: -9.037005424499512
    8. 'i' → logprob: -9.537005424499512
    9. ' stop' → logprob: -9.537005424499512
    10. ' mid' → logprob: -9.662005424499512

Token 376: ' up' (ID: 869)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.9561519622802734
    2. ' over' → logprob: -1.3311519622802734
    3. '       ' → logprob: -1.4561519622802734
    4. 'through' → logprob: -3.3311519622802734
    5. 'over' → logprob: -3.3311519622802734
    6. '   ' → logprob: -3.9561519622802734
    7. ' up' → logprob: -4.706151962280273
    8. ' for' → logprob: -5.456151962280273
    9. 'for' → logprob: -5.831151962280273
    10. ' i' → logprob: -5.831151962280273

Token 377: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03148794546723366
    2. ' to' → logprob: -3.6564879417419434
    3. '       ' → logprob: -5.656487941741943
    4. '   ' → logprob: -6.406487941741943
    5. '    ' → logprob: -12.531488418579102
    6. '     ' → logprob: -12.531488418579102
    7. ' ' → logprob: -12.656488418579102
    8. '_to' → logprob: -12.781488418579102
    9. '  ' → logprob: -12.906488418579102
    10. '        ' → logprob: -13.531488418579102

Token 378: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03135048225522041
    2. ' n' → logprob: -3.5313503742218018
    3. '(n' → logprob: -6.906350612640381
    4. '   ' → logprob: -8.156350135803223
    5. '       ' → logprob: -8.906350135803223
    6. ' (' → logprob: -9.031350135803223
    7. '(' → logprob: -10.406350135803223
    8. '	n' → logprob: -11.781350135803223
    9. 'len' → logprob: -12.656350135803223
    10. '           ' → logprob: -12.781350135803223

Token 379: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47822266817092896
    2. ' //' → logprob: -0.978222668170929
    3. '   ' → logprob: -5.728222846984863
    4. '       ' → logprob: -7.603222846984863
    5. ' ' → logprob: -7.978222846984863
    6. '    ' → logprob: -11.478222846984863
    7. '  ' → logprob: -11.603222846984863
    8. '
' → logprob: -12.353222846984863
    9. '     ' → logprob: -12.853222846984863
    10. '```' → logprob: -12.853222846984863

Token 380: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '
' → logprob: -14.625110626220703
    4. '   ' → logprob: -15.000110626220703
    5. '

' → logprob: -15.375110626220703
    6. '```' → logprob: -16.750110626220703
    7. '۲' → logprob: -17.250110626220703
    8. '  ' → logprob: -17.312610626220703
    9. '    ' → logprob: -17.562610626220703
    10. '２' → logprob: -17.625110626220703

Token 381: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015131485648453236
    2. '
' → logprob: -4.26513147354126
    3. '        
' → logprob: -7.76513147354126
    4. ' for' → logprob: -8.265131950378418
    5. '+' → logprob: -9.265131950378418
    6. ',' → logprob: -10.015131950378418
    7. ' +' → logprob: -10.390131950378418
    8. '    
' → logprob: -11.265131950378418
    9. '<|end|>' → logprob: -11.265131950378418
    10. '  
' → logprob: -11.515131950378418

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12532536685466766
    2. '
' → logprob: -2.5003254413604736
    3. ' for' → logprob: -3.7503254413604736
    4. '        
' → logprob: -5.7503252029418945
    5. ' 
' → logprob: -5.7503252029418945
    6. '\n' → logprob: -6.2503252029418945
    7. '   ' → logprob: -6.5003252029418945
    8. '  
' → logprob: -7.3753252029418945
    9. '    
' → logprob: -7.5003252029418945
    10. ' ' → logprob: -7.8753252029418945

Token 383: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5329395532608032
    2. '       ' → logprob: -1.4079395532608032
    3. 'for' (adapté à ' for') → logprob: -1.7829395532608032
    4. '   ' → logprob: -8.532939910888672
    5. '        
' → logprob: -9.657939910888672
    6. '	for' → logprob: -10.907939910888672
    7. '
' → logprob: -11.407939910888672
    8. '        ' → logprob: -11.907939910888672
    9. ' ' → logprob: -12.032939910888672
    10. '	' → logprob: -12.157939910888672

Token 384: ' prime' (ID: 9197)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2774907648563385
    2. 'prime' → logprob: -1.6524907350540161
    3. ' p' → logprob: -3.9024908542633057
    4. ' prime' → logprob: -4.277490615844727
    5. 'i' → logprob: -4.777490615844727
    6. 'num' → logprob: -5.152490615844727
    7. ' num' → logprob: -7.027490615844727
    8. ' i' → logprob: -7.152490615844727
    9. 'x' → logprob: -8.027490615844727
    10. 'a' → logprob: -8.652490615844727

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004661165177822113
    2. 'in' → logprob: -5.3796610832214355
    3. '_in' → logprob: -11.379661560058594
    4. ' ' → logprob: -11.629661560058594
    5. ' i' → logprob: -12.004661560058594
    6. '_' → logprob: -12.129661560058594
    7. '	in' → logprob: -13.379661560058594
    8. 's' → logprob: -13.504661560058594
    9. 'i' → logprob: -13.504661560058594
    10. '  ' → logprob: -14.004661560058594

Token 386: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.20169436931610107
    2. ' primes' → logprob: -1.701694369316101
    3. '(pr' → logprob: -9.32669448852539
    4. '[' → logprob: -9.45169448852539
    5. '   ' → logprob: -10.45169448852539
    6. ' [' → logprob: -10.82669448852539
    7. 'prime' → logprob: -11.07669448852539
    8. 'p' → logprob: -11.07669448852539
    9. ' pr' → logprob: -11.82669448852539
    10. '	pr' → logprob: -11.95169448852539

Token 387: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006037696730345488
    2. ':
' → logprob: -5.131037712097168
    3. '       ' → logprob: -9.881037712097168
    4. '           ' → logprob: -10.631037712097168
    5. '   ' → logprob: -12.006037712097168
    6. ' :' → logprob: -12.131037712097168
    7. '        ' → logprob: -12.756037712097168
    8. ' if' → logprob: -12.756037712097168
    9. '		' → logprob: -12.881037712097168
    10. '    ' → logprob: -12.881037712097168

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2484993040561676
    2. ' if' → logprob: -2.4984993934631348
    3. '       ' → logprob: -2.7484993934631348
    4. ' ' → logprob: -3.1234993934631348
    5. '        ' → logprob: -4.873499393463135
    6. ':' → logprob: -5.373499393463135
    7. '   ' → logprob: -5.498499393463135
    8. '    ' → logprob: -5.498499393463135
    9. ' and' → logprob: -5.998499393463135
    10. '            ' → logprob: -6.373499393463135

Token 389: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03402242809534073
    2. ' prime' → logprob: -4.034022331237793
    3. 'if' (adapté à ' if') → logprob: -4.409022331237793
    4. 'prime' → logprob: -5.784022331237793
    5. '           ' → logprob: -8.659022331237793
    6. 'pr' → logprob: -9.409022331237793
    7. ' ' → logprob: -9.659022331237793
    8. '            ' → logprob: -10.159022331237793
    9. '    ' → logprob: -10.409022331237793
    10. '   ' → logprob: -10.659022331237793

Token 390: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.3868785798549652
    2. 'prime' → logprob: -1.1368786096572876
    3. '   ' → logprob: -12.261878967285156
    4. 'pr' → logprob: -13.386878967285156
    5. '_prime' → logprob: -14.761878967285156
    6. '>' → logprob: -15.136878967285156
    7. ' ' → logprob: -15.261878967285156
    8. 'prim' → logprob: -16.386878967285156
    9. '
' → logprob: -16.636878967285156
    10. 'Prime' → logprob: -16.761878967285156

Token 391: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740784466266632
    2. ' >' → logprob: -0.9740784168243408
    3. '>end' → logprob: -15.224078178405762
    4. ' >
' → logprob: -15.849078178405762
    5. '>=' → logprob: -16.599079132080078
    6. ' >
' → logprob: -16.724079132080078
    7. '>a' → logprob: -16.724079132080078
    8. ')>' → logprob: -16.849079132080078
    9. ' ' → logprob: -16.974079132080078
    10. '">' → logprob: -16.974079132080078

Token 392: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31327006220817566
    2. 'n' → logprob: -1.313270092010498
    3. '	n' → logprob: -12.06326961517334
    4. '
' → logprob: -14.31326961517334
    5. '(n' → logprob: -14.56326961517334
    6. '   ' → logprob: -14.81326961517334
    7. '_n' → logprob: -14.81326961517334
    8. '=n' → logprob: -14.81326961517334
    9. ' ' → logprob: -15.93826961517334
    10. ')n' → logprob: -16.563270568847656

Token 393: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3133651614189148
    2. ' //' → logprob: -1.3133652210235596
    3. ' ' → logprob: -9.93836498260498
    4. '   ' → logprob: -9.93836498260498
    5. ' ' → logprob: -13.31336498260498
    6. '/' → logprob: -13.68836498260498
    7. '
' → logprob: -13.93836498260498
    8. '       ' → logprob: -14.06336498260498
    9. '2' → logprob: -14.18836498260498
    10. '  ' → logprob: -14.93836498260498

Token 394: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.125109672546387
    3. '۲' → logprob: -15.625109672546387
    4. '   ' → logprob: -16.00010871887207
    5. '
' → logprob: -16.50010871887207
    6. '२' → logprob: -17.43760871887207
    7. '```' → logprob: -17.68760871887207
    8. '２' → logprob: -17.75010871887207
    9. '٢' → logprob: -17.75010871887207
    10. '

' → logprob: -18.06260871887207

Token 395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '
' → logprob: -17.00001335144043
    4. '۲' → logprob: -17.00001335144043
    5. '

' → logprob: -17.50001335144043
    6. '   ' → logprob: -17.62501335144043
    7. '२' → logprob: -17.93751335144043
    8. '٢' → logprob: -18.43751335144043
    9. '２' → logprob: -18.75001335144043
    10. '২' → logprob: -19.06251335144043

Token 396: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5244395136833191
    2. ':
' → logprob: -0.8994395136833191
    3. '               ' → logprob: -7.274439334869385
    4. '           ' → logprob: -7.524439334869385
    5. ' or' → logprob: -10.149439811706543
    6. ':return' → logprob: -11.274439811706543
    7. ':
' → logprob: -11.774439811706543
    8. '):
' → logprob: -11.899439811706543
    9. '       ' → logprob: -12.774439811706543
    10. ' :
' → logprob: -12.774439811706543

Token 397: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.194110756041482e-05
    2. '           ' → logprob: -9.875061988830566
    3. '       ' → logprob: -12.750061988830566
    4. '              ' → logprob: -13.500061988830566
    5. '                
' → logprob: -14.000061988830566
    6. 'break' → logprob: -14.000061988830566
    7. '<|end|>' → logprob: -14.125061988830566
    8. '   ' → logprob: -14.500061988830566
    9. '                   ' → logprob: -14.500061988830566
    10. '
' → logprob: -14.625061988830566

Token 398: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23302288353443146
    2. 'break' (adapté à ' break') → logprob: -1.608022928237915
    3. ' break' → logprob: -5.483022689819336
    4. '           ' → logprob: -5.733022689819336
    5. '	break' → logprob: -9.483022689819336
    6. '
' → logprob: -9.608022689819336
    7. '                   ' → logprob: -11.358022689819336
    8. '_break' → logprob: -11.483022689819336
    9. '   ' → logprob: -11.983022689819336
    10. '```' → logprob: -12.983022689819336

Token 399: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009555285796523094
    2. '
' → logprob: -8.625955581665039
    3. '            
' → logprob: -8.750955581665039
    4. '<|end|>' → logprob: -8.750955581665039
    5. '    
' → logprob: -9.125955581665039
    6. ' if' → logprob: -9.750955581665039
    7. ' 
' → logprob: -9.750955581665039
    8. '   ' → logprob: -10.125955581665039
    9. '   
' → logprob: -10.125955581665039
    10. '          ' → logprob: -10.750955581665039

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003754471428692341
    2. ' if' → logprob: -6.003754615783691
    3. '       ' → logprob: -8.003754615783691
    4. '   ' → logprob: -8.503754615783691
    5. ' ' → logprob: -8.628754615783691
    6. '<|end|>' → logprob: -8.753754615783691
    7. '    
' → logprob: -9.503754615783691
    8. '            
' → logprob: -9.753754615783691
    9. '
' → logprob: -10.003754615783691
    10. 'if' → logprob: -10.128754615783691

Token 401: ' complement' (ID: 21800)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3390268385410309
    2. ' if' → logprob: -1.5890268087387085
    3. '           ' → logprob: -2.714026927947998
    4. 'other' → logprob: -4.214026927947998
    5. 'partner' → logprob: -6.839026927947998
    6. ' other' → logprob: -7.339026927947998
    7. '            
' → logprob: -8.83902645111084
    8. 'com' → logprob: -9.08902645111084
    9. '   ' → logprob: -9.58902645111084
    10. '
' → logprob: -9.58902645111084

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751067981123924
    2. '=' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.77975082397461
    4. '   ' → logprob: -16.77975082397461
    5. ' =
' → logprob: -16.90475082397461
    6. '=n' → logprob: -17.52975082397461
    7. '=int' → logprob: -17.52975082397461
    8. 's' → logprob: -18.15475082397461
    9. '	' → logprob: -18.27975082397461
    10. ')' → logprob: -18.52975082397461

Token 403: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141461491584778
    2. ' n' → logprob: -1.7014145851135254
    3. '	n' → logprob: -13.701415061950684
    4. '
' → logprob: -15.951415061950684
    5. '   ' → logprob: -16.701414108276367
    6. '(n' → logprob: -18.326414108276367
    7. '_n' → logprob: -18.576414108276367
    8. ' ' → logprob: -18.826414108276367
    9. '[n' → logprob: -18.951414108276367
    10. '```' → logprob: -19.076414108276367

Token 404: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00671584764495492
    2. '-' → logprob: -5.006715774536133
    3. '-pr' → logprob: -14.631715774536133
    4. ' ' → logprob: -18.006715774536133
    5. ' ' → logprob: -19.256715774536133
    6. '-p' → logprob: -19.506715774536133
    7. '-token' → logprob: -19.506715774536133
    8. '   ' → logprob: -19.756715774536133
    9. '-space' → logprob: -19.881715774536133
    10. '<|end|>' → logprob: -20.131715774536133

Token 405: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0002614550176076591
    2. ' prime' → logprob: -8.250261306762695
    3. '_prime' → logprob: -16.750261306762695
    4. 'prim' → logprob: -17.750261306762695
    5. 'pr' → logprob: -18.250261306762695
    6. '   ' → logprob: -18.625261306762695
    7. 'primer' → logprob: -18.750261306762695
    8. 'prem' → logprob: -19.375261306762695
    9. '
' → logprob: -19.875261306762695
    10. 'principal' → logprob: -20.250261306762695

Token 406: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.204720582696609e-05
    2. ' if' → logprob: -10.500052452087402
    3. '            
' → logprob: -11.750052452087402
    4. '		' → logprob: -12.250052452087402
    5. '<|end|>' → logprob: -12.750052452087402
    6. '          ' → logprob: -13.000052452087402
    7. ',' → logprob: -13.375052452087402
    8. '
' → logprob: -13.500052452087402
    9. '       ' → logprob: -14.000052452087402
    10. 'if' → logprob: -14.250052452087402

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.190178904333152e-05
    2. '       ' → logprob: -11.500031471252441
    3. '   ' → logprob: -11.875031471252441
    4. ' if' → logprob: -12.625031471252441
    5. '            
' → logprob: -12.875031471252441
    6. '		' → logprob: -13.000031471252441
    7. '
' → logprob: -13.000031471252441
    8. '<|end|>' → logprob: -14.000031471252441
    9. '	   ' → logprob: -14.250031471252441
    10. 'if' → logprob: -14.375031471252441

Token 408: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3224354386329651
    2. ' if' → logprob: -1.3224353790283203
    3. '           ' → logprob: -4.69743537902832
    4. 'count' → logprob: -11.82243537902832
    5. '   ' → logprob: -13.44743537902832
    6. ' ' → logprob: -13.69743537902832
    7. '       ' → logprob: -14.19743537902832
    8. ' count' → logprob: -14.69743537902832
    9. '            
' → logprob: -14.69743537902832
    10. '	if' → logprob: -14.94743537902832

Token 409: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26998791098594666
    2. ' sieve' → logprob: -1.519987940788269
    3. 'com' → logprob: -4.144988059997559
    4. ' complement' → logprob: -6.894988059997559
    5. '           ' → logprob: -8.394988059997559
    6. '   ' → logprob: -8.769988059997559
    7. '	s' → logprob: -9.144988059997559
    8. 'prime' → logprob: -9.144988059997559
    9. '                   ' → logprob: -9.769988059997559
    10. ' ' → logprob: -10.019988059997559

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.375000953674316
    3. '<com' → logprob: -15.500000953674316
    4. 'com' → logprob: -16.25
    5. '=com' → logprob: -17.75
    6. '(com' → logprob: -18.0
    7. 'and' → logprob: -18.125
    8. '   ' → logprob: -19.125
    9. '           ' → logprob: -20.0
    10. '	com' → logprob: -20.0

Token 411: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -5.512236498361744e-07
    2. ' complement' → logprob: -14.625000953674316
    3. ']' → logprob: -18.25
    4. '
' → logprob: -18.375
    5. 'compl' → logprob: -18.375
    6. '[' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. '           ' → logprob: -20.375
    9. 'con' → logprob: -20.875
    10. '	com' → logprob: -21.0

Token 412: 'plement' (ID: 13429)
  Prédit: 'plement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plement' → logprob: -0.5570377111434937
    2. '[' → logprob: -0.9320377111434937
    3. 'ment' → logprob: -4.182037830352783
    4. 'nt' → logprob: -4.932037830352783
    5. 'lement' → logprob: -5.307037830352783
    6. 'pl' → logprob: -5.932037830352783
    7. 'com' → logprob: -6.807037830352783
    8. 'pt' → logprob: -7.557037830352783
    9. 'ent' → logprob: -7.932037830352783
    10. ']' → logprob: -8.307037353515625

Token 413: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07034707069396973
    2. ']:
' → logprob: -2.6953470706939697
    3. ']' → logprob: -8.44534683227539
    4. ' ]' → logprob: -9.19534683227539
    5. ']:
' → logprob: -10.19534683227539
    6. ']==' → logprob: -10.94534683227539
    7. ']:

' → logprob: -10.94534683227539
    8. ':' → logprob: -11.44534683227539
    9. ']>' → logprob: -12.07034683227539
    10. '"]:' → logprob: -13.32034683227539

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.029847231227905e-05
    2. 'count' → logprob: -9.625080108642578
    3. ' count' → logprob: -12.125080108642578
    4. '           ' → logprob: -12.625080108642578
    5. ',count' → logprob: -13.500080108642578
    6. '              ' → logprob: -14.125080108642578
    7. '[count' → logprob: -14.500080108642578
    8. '                
' → logprob: -14.625080108642578
    9. '_count' → logprob: -14.750080108642578
    10. '                   ' → logprob: -14.750080108642578

Token 415: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43770352005958557
    2. 'count' (adapté à ' count') → logprob: -1.1877034902572632
    3. ' count' → logprob: -3.0627036094665527
    4. '                   ' → logprob: -6.437703609466553
    5. '
' → logprob: -7.062703609466553
    6. '_count' → logprob: -9.312703132629395
    7. '[count' → logprob: -9.937703132629395
    8. '	count' → logprob: -10.062703132629395
    9. '           ' → logprob: -10.437703132629395
    10. '                
' → logprob: -10.687703132629395

Token 416: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759611129760742
    2. '+=' → logprob: -0.8259611129760742
    3. '+' → logprob: -10.950961112976074
    4. ']+=' → logprob: -13.325961112976074
    5. '    ' → logprob: -13.575961112976074
    6. '   ' → logprob: -14.325961112976074
    7. '=' → logprob: -15.700961112976074
    8. ' +' → logprob: -16.82596206665039
    9. '+=(' → logprob: -16.95096206665039
    10. ' ' → logprob: -16.95096206665039

Token 417: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.875431060791016
    4. ' ' → logprob: -21.250431060791016
    5. '```' → logprob: -21.250431060791016
    6. '2' → logprob: -21.500431060791016
    7. '  ' → logprob: -22.500431060791016
    8. '0' → logprob: -22.750431060791016
    9. '۱' → logprob: -23.125431060791016
    10. '
' → logprob: -23.250431060791016

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.125
    5. '2' → logprob: -21.5
    6. '۱' → logprob: -22.5
    7. '１' → logprob: -22.875
    8. '0' → logprob: -23.0
    9. '
' → logprob: -23.125
    10. '100' → logprob: -24.375

Token 419: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3936564326286316
    2. '       ' → logprob: -1.1436564922332764
    3. 'return' → logprob: -5.768656253814697
    4. '        
' → logprob: -5.893656253814697
    5. ' return' → logprob: -7.768656253814697
    6. '    
' → logprob: -8.893656730651855
    7. '
' → logprob: -9.268656730651855
    8. '  
' → logprob: -9.768656730651855
    9. '<|end|>' → logprob: -10.393656730651855
    10. ' 
' → logprob: -10.643656730651855

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031893588602542877
    2. 'return' → logprob: -6.378189563751221
    3. '
' → logprob: -6.753189563751221
    4. ' return' → logprob: -8.628189086914062
    5. '	return' → logprob: -9.378189086914062
    6. '	' → logprob: -10.753189086914062
    7. '   ' → logprob: -10.753189086914062
    8. '        
' → logprob: -11.878189086914062
    9. '    
' → logprob: -13.378189086914062
    10. '<|end|>' → logprob: -13.753189086914062

Token 421: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004231547005474567
    2. 'return' (adapté à ' return') → logprob: -5.5042314529418945
    3. '   ' → logprob: -9.254231452941895
    4. ' return' → logprob: -9.879231452941895
    5. '	return' → logprob: -12.254231452941895
    6. '	' → logprob: -14.879231452941895
    7. ' ' → logprob: -15.129231452941895
    8. '
' → logprob: -15.254231452941895
    9. '```' → logprob: -15.379231452941895
    10. '        
' → logprob: -15.879231452941895

Token 422: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.575939416885376
    2. ' count' → logprob: -0.825939416885376
    3. '	count' → logprob: -18.450939178466797
    4. '[count' → logprob: -20.075939178466797
    5. '(count' → logprob: -20.075939178466797
    6. ' ' → logprob: -20.450939178466797
    7. '$count' → logprob: -20.950939178466797
    8. 'c' → logprob: -21.325939178466797
    9. '_count' → logprob: -21.450939178466797
    10. ' coun' → logprob: -21.450939178466797

Token 423: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2240190505981445
    2. 'def' → logprob: -1.2240190505981445
    3. '<|end|>' → logprob: -1.8490190505981445
    4. 'g' → logprob: -2.3490190505981445
    5. 'solver' → logprob: -2.4740190505981445
    6. '```' → logprob: -3.2240190505981445
    7. '<|end|>' → logprob: -4.5990190505981445
    8. 'n' → logprob: -4.8490190505981445
    9. 'gold' → logprob: -5.9740190505981445
    10. 's' → logprob: -6.2240190505981445

Token 425: ' Input' (ID: 10090)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.9225465059280396
    2. ' Gold' → logprob: -1.0475465059280396
    3. ' Test' → logprob: -2.04754638671875
    4. ' Perfect' → logprob: -3.54754638671875
    5. 'Gold' → logprob: -4.42254638671875
    6. 'Solution' → logprob: -4.54754638671875
    7. ' Prime' → logprob: -4.79754638671875
    8. ' Even' → logprob: -4.92254638671875
    9. ' Pal' → logprob: -5.17254638671875
    10. ' Extended' → logprob: -5.29754638671875

Token 426: 'Output' (ID: 6310)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.2905406057834625
    2. 'Reader' → logprob: -1.7905405759811401
    3. 'Processor' → logprob: -2.6655406951904297
    4. 'Parser' → logprob: -4.54054069519043
    5. 'Output' → logprob: -6.41554069519043
    6. 'Buffer' → logprob: -7.41554069519043
    7. 'Validator' → logprob: -7.41554069519043
    8. 'Data' → logprob: -7.91554069519043
    9. 'Provider' → logprob: -8.29054069519043
    10. 'Manager' → logprob: -8.29054069519043

Token 427: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.07263277471065521
    2. ':' → logprob: -3.3226327896118164
    3. 'Manager' → logprob: -3.6976327896118164
    4. 'Processor' → logprob: -4.947632789611816
    5. '():' → logprob: -7.072632789611816
    6. 'Helper' → logprob: -7.447632789611816
    7. ':
' → logprob: -7.572632789611816
    8. 'handler' → logprob: -10.822632789611816
    9. '_Handler' → logprob: -10.947632789611816
    10. '():
' → logprob: -11.072632789611816

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01105206273496151
    2. ':
' → logprob: -4.511052131652832
    3. ':def' → logprob: -13.136052131652832
    4. ':

' → logprob: -14.136052131652832
    5. ' :' → logprob: -14.511052131652832
    6. '():' → logprob: -14.636052131652832
    7. ':
' → logprob: -16.261051177978516
    8. '<|end|>' → logprob: -16.386051177978516
    9. '):' → logprob: -16.511051177978516
    10. '():
' → logprob: -16.636051177978516

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1136581152677536
    2. ' def' → logprob: -2.2386581897735596
    3. 'def' → logprob: -7.2386579513549805
    4. '```' → logprob: -10.36365795135498
    5. ':' → logprob: -10.61365795135498
    6. '    ' → logprob: -11.11365795135498
    7. '    
' → logprob: -11.48865795135498
    8. ' class' → logprob: -11.98865795135498
    9. 'class' → logprob: -12.11365795135498
    10. '	def' → logprob: -12.73865795135498

Token 430: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03810666874051094
    2. ' def' → logprob: -3.288106679916382
    3. '   ' → logprob: -9.663106918334961
    4. 'import' → logprob: -13.663106918334961
    5. 'class' → logprob: -15.538106918334961
    6. '```' → logprob: -16.03810691833496
    7. '	def' → logprob: -16.28810691833496
    8. 'de' → logprob: -17.41310691833496
    9. '
' → logprob: -17.78810691833496
    10. ':def' → logprob: -18.03810691833496

Token 431: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08780087530612946
    2. ' def' → logprob: -2.837800979614258
    3. '__' → logprob: -3.712800979614258
    4. 'def' → logprob: -7.587800979614258
    5. ' process' → logprob: -8.212800979614258
    6. ' handle' → logprob: -9.337800979614258
    7. ' init' → logprob: -9.462800979614258
    8. ' _' → logprob: -10.087800979614258
    9. 'init' → logprob: -10.712800979614258
    10. ' ' → logprob: -10.962800979614258

Token 432: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.438573680294212e-06
    2. 'ini' → logprob: -13.125005722045898
    3. 'in' → logprob: -13.250005722045898
    4. ' init' → logprob: -14.375005722045898
    5. 'int' → logprob: -14.500005722045898
    6. 'new' → logprob: -15.375005722045898
    7. 'i' → logprob: -15.875005722045898
    8. 'inite' → logprob: -16.8750057220459
    9. 'nit' → logprob: -17.3750057220459
    10. 'innit' → logprob: -17.8750057220459

Token 433: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.010871665552258492
    2. '(self' → logprob: -4.760871887207031
    3. '(' → logprob: -6.760871887207031
    4. '__(
' → logprob: -7.260871887207031
    5. '__' → logprob: -8.010871887207031
    6. 'self' → logprob: -11.135871887207031
    7. ' (' → logprob: -11.260871887207031
    8. ')(' → logprob: -11.760871887207031
    9. '_(' → logprob: -11.885871887207031
    10. '<>(' → logprob: -12.135871887207031

Token 434: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004670153430197388
    2. ')' → logprob: -8.000467300415039
    3. '):
' → logprob: -9.250467300415039
    4. ' self' → logprob: -11.125467300415039
    5. '
' → logprob: -11.375467300415039
    6. 'max' → logprob: -12.250467300415039
    7. '   ' → logprob: -13.000467300415039
    8. '):' → logprob: -13.750467300415039
    9. '(self' → logprob: -15.250467300415039
    10. '       ' → logprob: -15.250467300415039

Token 435: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001033999491482973
    2. '):' → logprob: -7.126033782958984
    3. '):
' → logprob: -8.876033782958984
    4. 'self' → logprob: -9.376033782958984
    5. ',
' → logprob: -13.376033782958984
    6. ' ,' → logprob: -13.876033782958984
    7. ',self' → logprob: -13.876033782958984
    8. ',max' → logprob: -13.876033782958984
    9. '   ' → logprob: -15.751033782958984
    10. ' self' → logprob: -16.251033782958984

Token 436: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003595376620069146
    2. '       ' → logprob: -8.000359535217285
    3. '   ' → logprob: -11.250359535217285
    4. '
' → logprob: -11.875359535217285
    5. ' self' → logprob: -12.750359535217285
    6. 'max' → logprob: -14.375359535217285
    7. '):
' → logprob: -15.125359535217285
    8. 'def' → logprob: -16.1253604888916
    9. '(self' → logprob: -16.2503604888916
    10. '```' → logprob: -17.6253604888916

Token 437: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1238742545247078
    2. '       ' → logprob: -2.2488741874694824
    3. ' self' → logprob: -4.623874187469482
    4. 'pass' → logprob: -7.123874187469482
    5. 'import' → logprob: -9.24887466430664
    6. '   ' → logprob: -9.24887466430664
    7. 'def' → logprob: -9.62387466430664
    8. '
' → logprob: -9.74887466430664
    9. 'from' → logprob: -10.24887466430664
    10. ' pass' → logprob: -11.37387466430664

Token 438: '.s' (ID: 640)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.max' → logprob: -1.295104742050171
    2. '.pr' → logprob: -1.295104742050171
    3. '._' → logprob: -2.170104742050171
    4. '.inputs' → logprob: -2.670104742050171
    5. '.' → logprob: -2.795104742050171
    6. '.results' → logprob: -2.920104742050171
    7. '.data' → logprob: -3.170104742050171
    8. '.input' → logprob: -3.295104742050171
    9. '.buffer' → logprob: -3.420104742050171
    10. '.n' → logprob: -4.04510498046875

Token 439: 'olver' (ID: 13941)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6463180780410767
    2. 'elf' → logprob: -0.8963180780410767
    3. 'td' → logprob: -2.771317958831787
    4. 'ys' → logprob: -6.646317958831787
    5. 'tores' → logprob: -7.521317958831787
    6. 'amples' → logprob: -8.021318435668945
    7. 'ize' → logprob: -8.396318435668945
    8. 'olve' → logprob: -8.396318435668945
    9. 'trip' → logprob: -8.396318435668945
    10. 'et' → logprob: -8.521318435668945

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193557143211365
    2. '=' → logprob: -1.501935601234436
    3. ' ' → logprob: -12.876935958862305
    4. '<|end|>' → logprob: -14.001935958862305
    5. '   ' → logprob: -14.126935958862305
    6. ')' → logprob: -14.751935958862305
    7. '  ' → logprob: -15.001935958862305
    8. '=None' → logprob: -15.251935958862305
    9. ' =
' → logprob: -15.251935958862305
    10. ':' → logprob: -15.251935958862305

Token 441: ' Gold' (ID: 9833)
  Prédit: 'Gold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gold' → logprob: -0.0024756586644798517
    2. ' Gold' → logprob: -6.002475738525391
    3. 'Golden' → logprob: -16.87747573852539
    4. 'Gol' → logprob: -18.62747573852539
    5. '_gold' → logprob: -20.87747573852539
    6. 'gold' → logprob: -21.50247573852539
    7. 'G' → logprob: -22.37747573852539
    8. ' gold' → logprob: -22.50247573852539
    9. 'God' → logprob: -22.62747573852539
    10. 'Go' → logprob: -22.62747573852539

Token 442: 'bach' (ID: 37754)
  Prédit: 'bach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bach' → logprob: -3.128163257315464e-07
    2. 'b' → logprob: -16.375
    3. 'bac' → logprob: -16.375
    4. 'ba' → logprob: -17.0
    5. 'bas' → logprob: -18.75
    6. 'B' → logprob: -19.25
    7. 'бах' → logprob: -19.5
    8. 'bah' → logprob: -19.625
    9. ' bach' → logprob: -19.875
    10. 'back' → logprob: -20.125

Token 443: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.2664456789934775e-06
    2. 'solver' → logprob: -14.500000953674316
    3. 'Sol' → logprob: -15.000000953674316
    4. 'Solve' → logprob: -15.125000953674316
    5. ' Solver' → logprob: -16.000001907348633
    6. '_solver' → logprob: -17.250001907348633
    7. ' solver' → logprob: -19.125001907348633
    8. '
' → logprob: -19.500001907348633
    9. '```' → logprob: -19.750001907348633
    10. 'Solved' → logprob: -20.125001907348633

Token 444: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7968276143074036
    2. '    
' → logprob: -1.2968275547027588
    3. '   ' → logprob: -2.046827554702759
    4. '()
' → logprob: -2.296827554702759
    5. '(' → logprob: -3.671827554702759
    6. '()' → logprob: -4.046827793121338
    7. '()

' → logprob: -7.046827793121338
    8. 'def' → logprob: -7.421827793121338
    9. '(
' → logprob: -7.546827793121338
    10. '<|end|>' → logprob: -7.796827793121338

Token 445: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21597829461097717
    2. '
' → logprob: -1.7159782648086548
    3. '    
' → logprob: -4.715978145599365
    4. 'def' → logprob: -5.340978145599365
    5. ' def' → logprob: -7.465978145599365
    6. '<|end|>' → logprob: -9.215978622436523
    7. '```' → logprob: -11.465978622436523
    8. '        
' → logprob: -11.840978622436523
    9. '<|end|>' → logprob: -11.965978622436523
    10. ' 
' → logprob: -12.215978622436523

Token 446: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06461261212825775
    2. '   ' → logprob: -2.814612627029419
    3. ' def' → logprob: -5.93961238861084
    4. '
' → logprob: -12.43961238861084
    5. '	def' → logprob: -12.43961238861084
    6. 'import' → logprob: -16.064613342285156
    7. '    
' → logprob: -16.439613342285156
    8. '  ' → logprob: -16.439613342285156
    9. '```' → logprob: -16.439613342285156
    10. '       ' → logprob: -16.564613342285156

Token 447: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.7697225252486533e-06
    2. ' def' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.250003814697266
    4. 'de' → logprob: -21.500003814697266
    5. 'd' → logprob: -22.125003814697266
    6. '	def' → logprob: -23.250003814697266
    7. '
' → logprob: -23.750003814697266
    8. ' ' → logprob: -25.375003814697266
    9. 'async' → logprob: -25.500003814697266
    10. 'import' → logprob: -25.750003814697266

Token 448: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.1145460605621338
    2. 'read' → logprob: -1.3645460605621338
    3. ' process' → logprob: -1.3645460605621338
    4. ' read' → logprob: -2.114546060562134
    5. ' run' → logprob: -3.989546060562134
    6. 'run' → logprob: -4.239545822143555
    7. 'handle' → logprob: -5.614545822143555
    8. ' handle' → logprob: -5.739545822143555
    9. 'solve' → logprob: -7.989545822143555
    10. ' solve' → logprob: -9.239545822143555

Token 449: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5929824709892273
    2. '(self' → logprob: -1.217982530593872
    3. '_line' → logprob: -3.092982530593872
    4. '(' → logprob: -3.217982530593872
    5. '_' → logprob: -3.217982530593872
    6. '_inputs' → logprob: -4.467982292175293
    7. '()' → logprob: -4.842982292175293
    8. '_queries' → logprob: -5.717982292175293
    9. '_lines' → logprob: -6.342982292175293
    10. '_(' → logprob: -8.342982292175293

Token 450: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006882676389068365
    2. '(' → logprob: -5.006882667541504
    3. '_line' → logprob: -8.881882667541504
    4. 'self' → logprob: -11.256882667541504
    5. ' (' → logprob: -11.381882667541504
    6. '(
' → logprob: -13.506882667541504
    7. '(line' → logprob: -13.881882667541504
    8. 'line' → logprob: -14.631882667541504
    9. ' line' → logprob: -15.006882667541504
    10. '()' → logprob: -15.006882667541504

Token 451: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27209553122520447
    2. 'self' → logprob: -2.1470954418182373
    3. '):
' → logprob: -2.3970954418182373
    4. '):' → logprob: -3.5220954418182373
    5. '(self' → logprob: -8.647095680236816
    6. ',self' → logprob: -8.647095680236816
    7. ',line' → logprob: -9.147095680236816
    8. ' self' → logprob: -9.397095680236816
    9. '   ' → logprob: -9.522095680236816
    10. 's' → logprob: -9.647095680236816

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03523049131035805
    2. ' while' → logprob: -3.7852303981781006
    3. 'while' → logprob: -4.78523063659668
    4. ' for' → logprob: -6.53523063659668
    5. 'import' → logprob: -6.91023063659668
    6. '   ' → logprob: -7.41023063659668
    7. 'for' → logprob: -8.66023063659668
    8. 'n' → logprob: -9.28523063659668
    9. 'try' → logprob: -9.41023063659668
    10. ' import' → logprob: -9.78523063659668

Token 453: ' import' (ID: 1588)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32308271527290344
    2. ' while' → logprob: -1.323082685470581
    3. 'import' (adapté à ' import') → logprob: -5.32308292388916
    4. 'try' → logprob: -5.57308292388916
    5. '       ' → logprob: -7.32308292388916
    6. ' import' → logprob: -8.44808292388916
    7. ' try' → logprob: -8.57308292388916
    8. '   ' → logprob: -11.69808292388916
    9. 'for' → logprob: -11.69808292388916
    10. 'n' → logprob: -11.82308292388916

Token 454: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759546160697937
    2. ' sys' → logprob: -0.8259546160697937
    3. '=sys' → logprob: -11.70095443725586
    4. '	sys' → logprob: -11.95095443725586
    5. '_sys' → logprob: -15.82595443725586
    6. 's' → logprob: -16.70095443725586
    7. '(sys' → logprob: -16.70095443725586
    8. '.sys' → logprob: -17.20095443725586
    9. 'stdin' → logprob: -17.32595443725586
    10. '   ' → logprob: -18.45095443725586

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015523002482950687
    2. ' for' → logprob: -4.7655229568481445
    3. 'for' → logprob: -5.0155229568481445
    4. '        
' → logprob: -9.015522956848145
    5. '
' → logprob: -9.265522956848145
    6. '   ' → logprob: -11.765522956848145
    7. ' lines' → logprob: -11.890522956848145
    8. '```' → logprob: -12.015522956848145
    9. ',' → logprob: -12.890522956848145
    10. ' line' → logprob: -13.640522956848145

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038886726833879948
    2. ' for' → logprob: -6.1288886070251465
    3. 'for' → logprob: -6.3788886070251465
    4. '   ' → logprob: -12.753889083862305
    5. ' lines' → logprob: -14.628889083862305
    6. '        
' → logprob: -14.753889083862305
    7. '```' → logprob: -15.253889083862305
    8. '	for' → logprob: -15.503889083862305
    9. '           ' → logprob: -15.628889083862305
    10. '	' → logprob: -15.628889083862305

Token 457: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029124397784471512
    2. ' for' → logprob: -3.7791244983673096
    3. '       ' → logprob: -5.1541242599487305
    4. ' lines' → logprob: -9.90412425994873
    5. 'lines' → logprob: -10.40412425994873
    6. '   ' → logprob: -12.77912425994873
    7. '	for' → logprob: -13.40412425994873
    8. 'input' → logprob: -15.15412425994873
    9. 'while' → logprob: -15.27912425994873
    10. 'def' → logprob: -15.52912425994873

Token 458: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0005629229708574712
    2. 'line' → logprob: -7.500563144683838
    3. '	line' → logprob: -11.62556266784668
    4. '_line' → logprob: -15.25056266784668
    5. ' lin' → logprob: -15.37556266784668
    6. ' l' → logprob: -16.37556266784668
    7. ' ' → logprob: -16.50056266784668
    8. 'n' → logprob: -16.75056266784668
    9. ' linha' → logprob: -16.75056266784668
    10. ' n' → logprob: -17.12556266784668

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00038169484469108284
    2. 'in' → logprob: -7.8753814697265625
    3. ' ' → logprob: -13.875381469726562
    4. 's' → logprob: -15.125381469726562
    5. '_' → logprob: -16.250381469726562
    6. 'n' → logprob: -16.875381469726562
    7. '	in' → logprob: -17.000381469726562
    8. '_in' → logprob: -17.125381469726562
    9. 'import' → logprob: -17.250381469726562
    10. '[' → logprob: -17.500381469726562

Token 460: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31326258182525635
    2. ' sys' → logprob: -1.3132625818252563
    3. '=sys' → logprob: -14.813262939453125
    4. '	sys' → logprob: -15.063262939453125
    5. '(sys' → logprob: -15.563262939453125
    6. 'import' → logprob: -17.563262939453125
    7. 'Sys' → logprob: -19.063262939453125
    8. '.sys' → logprob: -19.438262939453125
    9. 'stdin' → logprob: -19.563262939453125
    10. 's' → logprob: -19.938262939453125

Token 461: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00132976402528584
    2. 'stdin' → logprob: -6.6263298988342285
    3. ' stdin' → logprob: -13.12632942199707
    4. 'in' → logprob: -14.50132942199707
    5. '(stdin' → logprob: -14.50132942199707
    6. '.stdout' → logprob: -14.75132942199707
    7. '.' → logprob: -15.50132942199707
    8. 'import' → logprob: -16.87632942199707
    9. '.argv' → logprob: -16.87632942199707
    10. '.readline' → logprob: -17.00132942199707

Token 462: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2126716673374176
    2. '.readline' → logprob: -2.0876717567443848
    3. ':
' → logprob: -2.9626717567443848
    4. ' in' → logprob: -4.587671756744385
    5. '.strip' → logprob: -6.087671756744385
    6. '.rstrip' → logprob: -6.462671756744385
    7. '.readlines' → logprob: -6.712671756744385
    8. '.' → logprob: -8.212671279907227
    9. '       ' → logprob: -9.337671279907227
    10. 'rstrip' → logprob: -9.462671279907227

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.7530574849806726e-05
    2. '            
' → logprob: -10.875057220458984
    3. ' line' → logprob: -11.625057220458984
    4. 'n' → logprob: -12.000057220458984
    5. '   ' → logprob: -13.000057220458984
    6. ' n' → logprob: -13.000057220458984
    7. '.strip' → logprob: -13.125057220458984
    8. ' readline' → logprob: -13.250057220458984
    9. ',' → logprob: -13.375057220458984
    10. '       ' → logprob: -13.625057220458984

Token 464: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41807234287261963
    2. 'n' (adapté à ' n') → logprob: -1.4180723428726196
    3. ' n' → logprob: -2.66807222366333
    4. 'num' → logprob: -3.66807222366333
    5. '               ' → logprob: -6.66807222366333
    6. 'number' → logprob: -6.91807222366333
    7. ' num' → logprob: -7.29307222366333
    8. ' line' → logprob: -7.66807222366333
    9. ' number' → logprob: -7.66807222366333
    10. 'line' → logprob: -7.79307222366333

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759574770927429
    2. '=' → logprob: -0.8259574770927429
    3. '=int' → logprob: -11.575957298278809
    4. '=line' → logprob: -13.075957298278809
    5. ' =
' → logprob: -13.325957298278809
    6. '.strip' → logprob: -13.575957298278809
    7. '=
' → logprob: -13.700957298278809
    8. '=

' → logprob: -14.075957298278809
    9. '.' → logprob: -14.575957298278809
    10. ' ' → logprob: -15.450957298278809

Token 466: ' line' (ID: 2543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019389885710552335
    2. ' int' → logprob: -6.251938819885254
    3. 'line' → logprob: -11.501938819885254
    4. ' line' → logprob: -15.501938819885254
    5. '(int' → logprob: -19.37693977355957
    6. '   ' → logprob: -20.62693977355957
    7. '=int' → logprob: -20.62693977355957
    8. 'in' → logprob: -21.50193977355957
    9. '<int' → logprob: -21.75193977355957
    10. 'n' → logprob: -22.00193977355957

Token 467: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0006118826568126678
    2. '.' → logprob: -8.000612258911133
    3. '.rstrip' → logprob: -8.375612258911133
    4. 'strip' → logprob: -10.000612258911133
    5. '.readline' → logprob: -15.125612258911133
    6. '.trim' → logprob: -17.000612258911133
    7. 'rstrip' → logprob: -17.000612258911133
    8. ' .' → logprob: -17.125612258911133
    9. '_strip' → logprob: -17.125612258911133
    10. '.startswith' → logprob: -17.250612258911133

Token 468: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2989547550678253
    2. '
' → logprob: -1.798954725265503
    3. '            
' → logprob: -2.423954725265503
    4. 'if' → logprob: -7.048954963684082
    5. ' 
' → logprob: -7.673954963684082
    6. ' if' → logprob: -7.798954963684082
    7. '                
' → logprob: -7.923954963684082
    8. '  
' → logprob: -7.923954963684082
    9. '```' → logprob: -8.298954963684082
    10. '               ' → logprob: -8.423954963684082

Token 470: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02331291139125824
    2. ' if' → logprob: -3.77331280708313
    3. '           ' → logprob: -9.64831256866455
    4. '
' → logprob: -13.02331256866455
    5. '       ' → logprob: -14.77331256866455
    6. '```' → logprob: -16.148313522338867
    7. '            
' → logprob: -16.523313522338867
    8. ';if' → logprob: -16.648313522338867
    9. '	if' → logprob: -17.023313522338867
    10. '   ' → logprob: -17.523313522338867

Token 471: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.46666041016578674
    2. 'n' → logprob: -1.2166603803634644
    3. 'not' → logprob: -3.091660499572754
    4. ' n' → logprob: -3.466660499572754
    5. 'n't' → logprob: -10.341660499572754
    6. '	n' → logprob: -12.466660499572754
    7. ' ' → logprob: -13.466660499572754
    8. '	not' → logprob: -13.716660499572754
    9. ' n't' → logprob: -14.591660499572754
    10. '```' → logprob: -14.716660499572754

Token 472: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.474077433347702
    2. ' n' → logprob: -0.9740774631500244
    3. '	n' → logprob: -15.474077224731445
    4. ' ' → logprob: -16.474077224731445
    5. '_n' → logprob: -17.224077224731445
    6. '<|end|>' → logprob: -17.724077224731445
    7. 'n't' → logprob: -17.849077224731445
    8. ')n' → logprob: -18.474077224731445
    9. '$n' → logprob: -18.474077224731445
    10. ' н' → logprob: -18.974077224731445

Token 473: '.is' (ID: 3109)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4642767906188965
    2. ':' → logprob: -1.5892767906188965
    3. ':
' → logprob: -1.8392767906188965
    4. 'or' → logprob: -4.8392767906188965
    5. '.is' → logprob: -8.839277267456055
    6. '.' → logprob: -9.214277267456055
    7. '   ' → logprob: -10.339277267456055
    8. ':return' → logprob: -10.339277267456055
    9. '<|end|>' → logprob: -10.464277267456055
    10. 'isdigit' → logprob: -10.839277267456055

Token 474: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0004473540757317096
    2. 'decimal' → logprob: -7.7504472732543945
    3. 'numeric' → logprob: -11.000447273254395
    4. '_digit' → logprob: -18.62544822692871
    5. 'digits' → logprob: -18.75044822692871
    6. 'alpha' → logprob: -18.87544822692871
    7. ' digit' → logprob: -18.87544822692871
    8. 'digital' → logprob: -21.12544822692871
    9. 'al' → logprob: -21.37544822692871
    10. 'dig' → logprob: -21.62544822692871

Token 475: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2040257453918457
    2. '()' → logprob: -1.7040257453918457
    3. '():
' → logprob: -5.954025745391846
    4. ':' → logprob: -11.704025268554688
    5. '(' → logprob: -12.954025268554688
    6. '():
' → logprob: -13.829025268554688
    7. ' ():' → logprob: -14.204025268554688
    8. '():

' → logprob: -14.329025268554688
    9. ' or' → logprob: -15.079025268554688
    10. '()
' → logprob: -16.329025268554688

Token 476: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012701898231171072
    2. 'break' → logprob: -9.750126838684082
    3. '	           ' → logprob: -10.500126838684082
    4. '           ' → logprob: -11.000126838684082
    5. '                   ' → logprob: -12.125126838684082
    6. ' break' → logprob: -12.625126838684082
    7. '   ' → logprob: -12.625126838684082
    8. '			' → logprob: -12.750126838684082
    9. '		       ' → logprob: -12.875126838684082
    10. '                
' → logprob: -13.250126838684082

Token 477: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07932000607252121
    2. 'break' → logprob: -2.704319953918457
    3. ' break' → logprob: -5.329319953918457
    4. '           ' → logprob: -5.704319953918457
    5. '                   ' → logprob: -7.329319953918457
    6. '
' → logprob: -8.454319953918457
    7. '	break' → logprob: -8.704319953918457
    8. 'return' → logprob: -10.204319953918457
    9. '	           ' → logprob: -10.704319953918457
    10. '                
' → logprob: -10.829319953918457

Token 478: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00320052751339972
    2. '            
' → logprob: -6.128200531005859
    3. '
' → logprob: -7.003200531005859
    4. '<|end|>' → logprob: -10.25320053100586
    5. '    
' → logprob: -11.00320053100586
    6. '  
' → logprob: -11.50320053100586
    7. '\n' → logprob: -11.75320053100586
    8. '          ' → logprob: -12.25320053100586
    9. '               ' → logprob: -12.37820053100586
    10. '		' → logprob: -12.62820053100586

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002537104592192918
    2. '            
' → logprob: -9.125253677368164
    3. '<|end|>' → logprob: -9.250253677368164
    4. '       ' → logprob: -10.625253677368164
    5. '          ' → logprob: -11.750253677368164
    6. '
' → logprob: -12.625253677368164
    7. '<|end|>' → logprob: -12.875253677368164
    8. '   ' → logprob: -13.125253677368164
    9. 'n' → logprob: -13.375253677368164
    10. '		' → logprob: -13.875253677368164

Token 480: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01771307922899723
    2. ' n' → logprob: -4.1427130699157715
    3. '           ' → logprob: -6.5177130699157715
    4. 'num' → logprob: -8.64271354675293
    5. '       ' → logprob: -11.51771354675293
    6. '   ' → logprob: -12.14271354675293
    7. ' num' → logprob: -12.76771354675293
    8. '            
' → logprob: -13.39271354675293
    9. '	n' → logprob: -13.39271354675293
    10. 'number' → logprob: -13.64271354675293

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16049940884113312
    2. '=' → logprob: -1.9104994535446167
    3. '=int' → logprob: -8.660499572753906
    4. '_int' → logprob: -9.660499572753906
    5. 'int' → logprob: -10.285499572753906
    6. '_val' → logprob: -13.785499572753906
    7. '_' → logprob: -14.285499572753906
    8. '_num' → logprob: -14.410499572753906
    9. '_value' → logprob: -14.535499572753906
    10. '_=' → logprob: -14.535499572753906

Token 482: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. '<int' → logprob: -22.37507438659668
    4. '[int' → logprob: -23.00007438659668
    5. '(int' → logprob: -23.62507438659668
    6. '	int' → logprob: -24.00007438659668
    7. '=int' → logprob: -24.25007438659668
    8. '0' → logprob: -24.37507438659668
    9. 'inti' → logprob: -25.25007438659668
    10. '   ' → logprob: -25.75007438659668

Token 483: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.380904672667384e-05
    2. 'n' → logprob: -10.875033378601074
    3. '(' → logprob: -11.125033378601074
    4. '
' → logprob: -16.87503433227539
    5. '(
' → logprob: -17.37503433227539
    6. ' (' → logprob: -18.37503433227539
    7. ')n' → logprob: -18.75003433227539
    8. ' n' → logprob: -19.25003433227539
    9. '	n' → logprob: -19.75003433227539
    10. '(line' → logprob: -20.75003433227539

Token 484: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.026734137907624245
    2. ')' → logprob: -3.6517341136932373
    3. ')
' → logprob: -7.776734352111816
    4. ' )
' → logprob: -11.526734352111816
    5. ')

' → logprob: -13.151734352111816
    6. '())
' → logprob: -14.401734352111816
    7. '           ' → logprob: -14.401734352111816
    8. ' )' → logprob: -14.776734352111816
    9. ')`
' → logprob: -15.151734352111816
    10. '               ' → logprob: -16.0267333984375

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.273621405242011e-05
    2. 'if' → logprob: -10.750032424926758
    3. '       ' → logprob: -12.000032424926758
    4. ' if' → logprob: -13.625032424926758
    5. '	       ' → logprob: -13.625032424926758
    6. '   ' → logprob: -14.250032424926758
    7. '<|end|>' → logprob: -14.375032424926758
    8. '          ' → logprob: -14.625032424926758
    9. '		' → logprob: -14.875032424926758
    10. '            
' → logprob: -16.250032424926758

Token 486: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006346796173602343
    2. '           ' → logprob: -5.756346702575684
    3. ' if' → logprob: -5.756346702575684
    4. '	if' → logprob: -14.381346702575684
    5. '   ' → logprob: -15.631346702575684
    6. 'If' → logprob: -15.631346702575684
    7. '       ' → logprob: -15.881346702575684
    8. '               ' → logprob: -16.00634765625
    9. '            
' → logprob: -16.63134765625
    10. '```' → logprob: -16.75634765625

Token 487: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38687777519226074
    2. 'n' → logprob: -1.1368777751922607
    3. '	n' → logprob: -12.51187801361084
    4. ' not' → logprob: -13.51187801361084
    5. 'n't' → logprob: -14.01187801361084
    6. ' ' → logprob: -15.63687801361084
    7. '   ' → logprob: -15.88687801361084
    8. '0' → logprob: -16.011877059936523
    9. ' ' → logprob: -16.011877059936523
    10. ')n' → logprob: -16.261877059936523

Token 488: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20155933499336243
    2. ' ==' → logprob: -1.70155930519104
    3. '=' → logprob: -9.701559066772461
    4. '<' → logprob: -10.076559066772461
    5. '<=' → logprob: -10.451559066772461
    6. '===' → logprob: -12.326559066772461
    7. ' <' → logprob: -12.326559066772461
    8. ' <=' → logprob: -13.951559066772461
    9. ')==' → logprob: -14.326559066772461
    10. ']==' → logprob: -14.701559066772461

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04299965873360634
    2. ' ' → logprob: -3.167999744415283
    3. '  ' → logprob: -15.167999267578125
    4. '   ' → logprob: -15.417999267578125
    5. ' ' → logprob: -16.792999267578125
    6. '    ' → logprob: -17.292999267578125
    7. '_' → logprob: -18.542999267578125
    8. '=' → logprob: -19.167999267578125
    9. '۰' → logprob: -19.605499267578125
    10. '	' → logprob: -19.980499267578125

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -21.75
    4. '０' → logprob: -21.875
    5. '   ' → logprob: -22.625
    6. '﻿' → logprob: -22.75
    7. '000' → logprob: -23.0
    8. '  ' → logprob: -23.125
    9. ')' → logprob: -23.125
    10. '"' → logprob: -23.25

Token 491: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3163440227508545
    2. ':' → logprob: -1.3163440227508545
    3. '           ' → logprob: -5.816344261169434
    4. '               ' → logprob: -9.566344261169434
    5. ':return' → logprob: -11.566344261169434
    6. ':
' → logprob: -11.816344261169434
    7. '   ' → logprob: -12.441344261169434
    8. ' :
' → logprob: -12.691344261169434
    9. '       ' → logprob: -12.941344261169434
    10. ' :' → logprob: -13.816344261169434

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.955703818472102e-05
    2. '           ' → logprob: -10.125059127807617
    3. 'break' → logprob: -11.375059127807617
    4. '	           ' → logprob: -13.125059127807617
    5. '                   ' → logprob: -13.250059127807617
    6. '   ' → logprob: -13.625059127807617
    7. ' break' → logprob: -14.000059127807617
    8. '       ' → logprob: -14.625059127807617
    9. '		       ' → logprob: -14.750059127807617
    10. '              ' → logprob: -15.250059127807617

Token 493: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04143514856696129
    2. '               ' → logprob: -3.7914352416992188
    3. ' break' → logprob: -4.041435241699219
    4. '           ' → logprob: -8.416435241699219
    5. 'return' → logprob: -8.666435241699219
    6. '	break' → logprob: -9.791435241699219
    7. '                   ' → logprob: -13.666435241699219
    8. '_break' → logprob: -14.166435241699219
    9. '	           ' → logprob: -14.916435241699219
    10. '
' → logprob: -15.041435241699219

Token 494: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28460490703582764
    2. '
' → logprob: -1.4096049070358276
    3. '            
' → logprob: -5.784605026245117
    4. '    
' → logprob: -8.409605026245117
    5. '        
' → logprob: -9.659605026245117
    6. '  
' → logprob: -10.034605026245117
    7. '<|end|>' → logprob: -11.284605026245117
    8. '
' → logprob: -12.159605026245117
    9. ' 
' → logprob: -12.409605026245117
    10. '

' → logprob: -12.534605026245117

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005299216136336327
    2. '
' → logprob: -6.130299091339111
    3. '       ' → logprob: -6.130299091339111
    4. '        
' → logprob: -8.00529956817627
    5. '            
' → logprob: -8.13029956817627
    6. '<|end|>' → logprob: -8.50529956817627
    7. '```' → logprob: -10.13029956817627
    8. '    
' → logprob: -10.63029956817627
    9. '<|end|>' → logprob: -11.38029956817627
    10. '  
' → logprob: -12.13029956817627

Token 496: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6565471887588501
    2. '           ' → logprob: -0.9065471887588501
    3. 'count' → logprob: -2.6565470695495605
    4. ' print' → logprob: -5.0315470695495605
    5. ' count' → logprob: -8.031547546386719
    6. 'result' → logprob: -8.406547546386719
    7. '       ' → logprob: -9.656547546386719
    8. '
' → logprob: -10.156547546386719
    9. '            
' → logprob: -10.281547546386719
    10. 'output' → logprob: -11.156547546386719

Token 497: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2523746192455292
    2. 'self' → logprob: -1.5023746490478516
    3. ' self' → logprob: -7.752374649047852
    4. '(' → logprob: -11.127374649047852
    5. '(
' → logprob: -14.752374649047852
    6. '[self' → logprob: -15.877374649047852
    7. '	self' → logprob: -16.00237464904785
    8. '=self' → logprob: -16.00237464904785
    9. ',self' → logprob: -17.25237464904785
    10. '$self' → logprob: -17.75237464904785

Token 498: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -4.286852345103398e-05
    2. '.' → logprob: -10.250042915344238
    3. ' .' → logprob: -11.875042915344238
    4. 'solver' → logprob: -14.750042915344238
    5. '.sol' → logprob: -16.125041961669922
    6. ').' → logprob: -16.750041961669922
    7. '.solve' → logprob: -18.250041961669922
    8. ')' → logprob: -18.250041961669922
    9. 's' → logprob: -18.500041961669922
    10. '..' → logprob: -19.500041961669922

Token 499: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -1.0325924449716695e-05
    2. 'over' → logprob: -12.50001049041748
    3. 'olve' → logprob: -13.12501049041748
    4. 'oler' → logprob: -13.50001049041748
    5. 'elf' → logprob: -13.87501049041748
    6. 'ol' → logprob: -14.25001049041748
    7. 'solver' → logprob: -14.62501049041748
    8. 'olv' → logprob: -15.25001049041748
    9. 'erver' → logprob: -15.25001049041748
    10. 'o' → logprob: -16.125009536743164

Token 500: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -2.339278580620885e-06
    2. ' .' → logprob: -13.750001907348633
    3. ').' → logprob: -14.250001907348633
    4. '.' → logprob: -14.875001907348633
    5. 'count' → logprob: -17.500001907348633
    6. '.process' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '`.' → logprob: -18.250001907348633
    9. '.calculate' → logprob: -18.500001907348633
    10. '	count' → logprob: -18.750001907348633

Token 501: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.375005722045898
    3. 'prime' → logprob: -14.375005722045898
    4. ')' → logprob: -15.375005722045898
    5. ')_' → logprob: -15.750005722045898
    6. '```' → logprob: -17.2500057220459
    7. '_pr' → logprob: -17.7500057220459
    8. ' prime' → logprob: -18.3750057220459
    9. 'Prime' → logprob: -18.5000057220459
    10. '_
' → logprob: -18.8750057220459

Token 502: '_sum' (ID: 29859)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.02333609201014042
    2. '_sum' → logprob: -3.773336172103882
    3. '_pairs' → logprob: -9.523336410522461
    4. '_' → logprob: -12.023336410522461
    5. '_pair' → logprob: -12.648336410522461
    6. 'prime' → logprob: -12.898336410522461
    7. ')_' → logprob: -13.898336410522461
    8. ')' → logprob: -14.023336410522461
    9. '```' → logprob: -14.148336410522461
    10. 's' → logprob: -14.398336410522461

Token 503: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.9361264946837764e-07
    2. 'pairs' → logprob: -17.0
    3. '_' → logprob: -17.625
    4. '_pair' → logprob: -19.0
    5. '
' → logprob: -19.0
    6. '_parts' → logprob: -19.375
    7. '```' → logprob: -19.375
    8. ' _' → logprob: -19.5
    9. 's' → logprob: -19.5
    10. '_p' → logprob: -20.0

Token 504: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006721298210322857
    2. '(' → logprob: -5.006721496582031
    3. ')' → logprob: -12.631721496582031
    4. '(
' → logprob: -13.381721496582031
    5. ' (' → logprob: -13.881721496582031
    6. '(

' → logprob: -16.25672149658203
    7. '((' → logprob: -16.63172149658203
    8. ')(' → logprob: -17.38172149658203
    9. '(num' → logprob: -17.88172149658203
    10. ')n' → logprob: -18.13172149658203

Token 505: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2904743552207947
    2. '())' → logprob: -1.5404744148254395
    3. '))' → logprob: -3.2904744148254395
    4. '()' → logprob: -8.040473937988281
    5. '(n' → logprob: -8.915473937988281
    6. '()))' → logprob: -9.415473937988281
    7. '(' → logprob: -11.040473937988281
    8. ' ())' → logprob: -11.790473937988281
    9. ' )' → logprob: -12.040473937988281
    10. ')))' → logprob: -12.915473937988281

Token 506: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001789881061995402
    2. 'Input' → logprob: -10.125179290771484
    3. ' if' → logprob: -10.375179290771484
    4. 'io' → logprob: -10.500179290771484
    5. 'input' → logprob: -10.500179290771484
    6. 'handler' → logprob: -10.750179290771484
    7. '```' → logprob: -11.125179290771484
    8. 'I' → logprob: -12.125179290771484
    9. 'If' → logprob: -13.000179290771484
    10. '#' → logprob: -13.375179290771484

Token 507: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006717147771269083
    2. '__' → logprob: -5.006717205047607
    3. '_name' → logprob: -13.50671672821045
    4. 'name' → logprob: -15.25671672821045
    5. '_' → logprob: -16.256717681884766
    6. '___' → logprob: -17.631717681884766
    7. ' ' → logprob: -17.631717681884766
    8. ' ' → logprob: -17.881717681884766
    9. ' "__' → logprob: -18.756717681884766
    10. '/__' → logprob: -19.006717681884766

Token 508: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20606952905654907
    2. ' __' → logprob: -1.7060694694519043
    3. ' ==' → logprob: -5.456069469451904
    4. 'name' → logprob: -9.081069946289062
    5. '==' → logprob: -9.331069946289062
    6. '.__' → logprob: -9.831069946289062
    7. '__.__' → logprob: -9.956069946289062
    8. '__.' → logprob: -10.831069946289062
    9. '_' → logprob: -11.581069946289062
    10. '.name' → logprob: -12.331069946289062

Token 509: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.491498531133402e-06
    2. '__.__' → logprob: -12.250009536743164
    3. '==' → logprob: -13.000009536743164
    4. '=="' → logprob: -14.500009536743164
    5. '__
' → logprob: -14.500009536743164
    6. '___' → logprob: -14.875009536743164
    7. '____' → logprob: -15.500009536743164
    8. '__.' → logprob: -15.500009536743164
    9. 'name' → logprob: -15.750009536743164
    10. '__["' → logprob: -15.875009536743164

Token 510: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.049705829471349716
    2. ' ==' → logprob: -3.174705743789673
    3. '==' → logprob: -5.424705982208252
    4. '=="' → logprob: -6.424705982208252
    5. '_' → logprob: -8.299705505371094
    6. '__.__' → logprob: -8.924705505371094
    7. '"' → logprob: -9.674705505371094
    8. '=='' → logprob: -9.799705505371094
    9. '__":
' → logprob: -10.049705505371094
    10. '___' → logprob: -10.674705505371094

Token 511: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00866740196943283
    2. ''' → logprob: -4.758667469024658
    3. ' "__' → logprob: -9.8836669921875
    4. ' '__' → logprob: -14.1336669921875
    5. '__' → logprob: -14.2586669921875
    6. '"name' → logprob: -16.5086669921875
    7. '"user' → logprob: -16.5086669921875
    8. '"class' → logprob: -16.7586669921875
    9. '"_' → logprob: -16.8836669921875
    10. '("__' → logprob: -18.0086669921875

Token 512: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.896309739408025e-07
    2. '__' → logprob: -14.875000953674316
    3. 'name' → logprob: -15.250000953674316
    4. '_main' → logprob: -16.75
    5. ' main' → logprob: -17.5
    6. '-main' → logprob: -20.5
    7. '	main' → logprob: -21.25
    8. '"' → logprob: -21.375
    9. '(main' → logprob: -21.625
    10. '主' → logprob: -21.875

Token 513: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1421777606010437
    2. '__' → logprob: -2.1421778202056885
    3. '__:' → logprob: -4.267177581787109
    4. ':' → logprob: -7.142177581787109
    5. '__':
' → logprob: -8.26717758178711
    6. '_' → logprob: -10.14217758178711
    7. ':
' → logprob: -11.64217758178711
    8. '":' → logprob: -11.89217758178711
    9. '__
' → logprob: -13.01717758178711
    10. '__["' → logprob: -13.39217758178711

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.229872087715194e-05
    2. ' ioh' → logprob: -10.625061988830566
    3. '   ' → logprob: -11.625061988830566
    4. ' handler' → logprob: -11.750061988830566
    5. '	handler' → logprob: -12.125061988830566
    6. ' io' → logprob: -12.500061988830566
    7. 'handler' → logprob: -12.875061988830566
    8. '	io' → logprob: -12.875061988830566
    9. '_io' → logprob: -13.500061988830566
    10. 'io' → logprob: -13.875061988830566

Token 515: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' (adapté à ' io') → logprob: -0.7015548348426819
    2. 'handler' → logprob: -0.7015548348426819
    3. ' ioh' → logprob: -5.076554775238037
    4. 'import' → logprob: -6.701554775238037
    5. ' handler' → logprob: -7.326554775238037
    6. 'Input' → logprob: -9.201555252075195
    7. 'input' → logprob: -9.951555252075195
    8. ' io' → logprob: -10.326555252075195
    9. 'IO' → logprob: -11.076555252075195
    10. '_io' → logprob: -11.826555252075195

Token 516: '_handler' (ID: 23758)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38773608207702637
    2. 'Handler' → logprob: -1.7627360820770264
    3. '=' → logprob: -2.8877360820770264
    4. '_handler' → logprob: -3.2627360820770264
    5. '_' → logprob: -3.3877360820770264
    6. '()' → logprob: -4.7627363204956055
    7. '().' → logprob: -5.7627363204956055
    8. '   ' → logprob: -6.1377363204956055
    9. '_Handler' → logprob: -6.2627363204956055
    10. '.Handler' → logprob: -6.6377363204956055

Token 517: ' =' (ID: 314)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.08667496591806412
    2. '.' → logprob: -2.586674928665161
    3. ' =' → logprob: -4.96167516708374
    4. '=' → logprob: -7.33667516708374
    5. '(process' → logprob: -10.086674690246582
    6. 'process' → logprob: -10.461674690246582
    7. '().' → logprob: -11.711674690246582
    8. ' .' → logprob: -11.836674690246582
    9. '   ' → logprob: -11.836674690246582
    10. ' process' → logprob: -13.336674690246582

Token 518: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.2014133334159851
    2. ' Input' → logprob: -1.7014133930206299
    3. '	Input' → logprob: -16.826414108276367
    4. '_Input' → logprob: -17.201414108276367
    5. ' input' → logprob: -18.076414108276367
    6. '_input' → logprob: -19.076414108276367
    7. '<Input' → logprob: -19.576414108276367
    8. '\Input' → logprob: -20.076414108276367
    9. 'input' → logprob: -20.326414108276367
    10. '.Input' → logprob: -21.951414108276367

Token 519: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -5.512236498361744e-07
    2. '	Output' → logprob: -15.500000953674316
    3. '_Output' → logprob: -16.375
    4. 'O' → logprob: -16.5
    5. '_output' → logprob: -16.625
    6. 'Handler' → logprob: -16.625
    7. 'Input' → logprob: -17.125
    8. 'output' → logprob: -17.375
    9. '-output' → logprob: -18.5
    10. 'OUTPUT' → logprob: -18.625

Token 520: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -3.128163257315464e-07
    2. '_Handler' → logprob: -16.375
    3. 'handler' → logprob: -16.75
    4. '_handler' → logprob: -17.0
    5. '_HANDLER' → logprob: -18.0
    6. 'Handle' → logprob: -19.25
    7. 'andler' → logprob: -19.875
    8. ' Handler' → logprob: -20.875
    9. '.Handler' → logprob: -21.0
    10. '(' → logprob: -22.125

Token 521: '()
' (ID: 1234)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.0007199380779638886
    2. '.' → logprob: -8.000720024108887
    3. '   ' → logprob: -8.750720024108887
    4. '
' → logprob: -8.875720024108887
    5. 'process' → logprob: -9.750720024108887
    6. '.
' → logprob: -12.375720024108887
    7. '.perform' → logprob: -12.625720024108887
    8. '(process' → logprob: -12.875720024108887
    9. '.mainloop' → logprob: -12.875720024108887
    10. '	process' → logprob: -13.125720024108887

Token 522: '   ' (ID: 271)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.04529961198568344
    2. '   ' → logprob: -3.295299530029297
    3. '	io' → logprob: -5.420299530029297
    4. ' io' → logprob: -6.045299530029297
    5. '_io' → logprob: -8.795299530029297
    6. '(io' → logprob: -9.170299530029297
    7. '/io' → logprob: -9.670299530029297
    8. '
' → logprob: -9.795299530029297
    9. '.io' → logprob: -10.170299530029297
    10. '"io' → logprob: -11.045299530029297

Token 523: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' (adapté à ' io') → logprob: -3.128163257315464e-07
    2. ' io' → logprob: -15.5
    3. '	io' → logprob: -20.75
    4. '_io' → logprob: -21.625
    5. '.io' → logprob: -22.375
    6. '   ' → logprob: -22.75
    7. '(io' → logprob: -24.25
    8. 'IO' → logprob: -24.625
    9. 'ioa' → logprob: -24.625
    10. '"io' → logprob: -25.25

Token 524: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.6240566083070007e-06
    2. '_HANDLER' → logprob: -14.500001907348633
    3. '._' → logprob: -15.250001907348633
    4. 'handler' → logprob: -15.375001907348633
    5. '_Handler' → logprob: -15.500001907348633
    6. 'Handler' → logprob: -16.000001907348633
    7. '.Handler' → logprob: -16.500001907348633
    8. '_handle' → logprob: -16.625001907348633
    9. '_hand' → logprob: -16.875001907348633
    10. '```' → logprob: -17.750001907348633

Token 525: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -17.875001907348633
    4. 'process' → logprob: -18.375001907348633
    5. '.run' → logprob: -19.750001907348633
    6. '.perform' → logprob: -20.000001907348633
    7. '.proc' → logprob: -21.375001907348633
    8. '.print' → logprob: -22.375001907348633
    9. '.Process' → logprob: -22.500001907348633
    10. '.handle' → logprob: -22.500001907348633

Token 526: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_Input' → logprob: -19.25
    4. '_in' → logprob: -20.125
    5. '_INPUT' → logprob: -20.875
    6. '_inputs' → logprob: -21.0
    7. '_line' → logprob: -21.375
    8. '__' → logprob: -21.5
    9. '_
' → logprob: -21.75
    10. ' _' → logprob: -21.875

Token 527: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0022698009852319956
    2. '()
' → logprob: -6.377269744873047
    3. '(' → logprob: -8.002269744873047
    4. '
' → logprob: -8.752269744873047
    5. '<|end|>' → logprob: -10.377269744873047
    6. '(
' → logprob: -11.502269744873047
    7. '()\' → logprob: -11.502269744873047
    8. '```' → logprob: -12.002269744873047
    9. '\n' → logprob: -12.377269744873047
    10. '()

' → logprob: -12.377269744873047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 525
Tokens correctement prédits (1ère position, stricte): 267
Tokens correctement prédits (1ère position, avec adaptation): 295
Tokens correctement prédits (top 10): 475
Précision stricte (1ère position): 50.86%
Précision adaptée (1ère position): 56.19%
Précision (top 10): 90.48%
================================================================================
