================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,*h_m = map(int,input().split())
M,*k_g = map(int,input().split())
times = []
for i in range(N):
    h, m = h_m[2*i], h_m[2*i+1]
    times.append(h*60+m)
for i in range(M):
    k, g = k_g[2*i], k_g[2*i+1]
    times.append(k*60+g)
times = sorted(set(times))
res = []
for t in times:
    h = t//60
    m = t%60
    res.append(f"{h}:{m:02d}")
print(" ".join(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',*' (ID: 65674)
  → Token d'amorce (pas de prédiction)

Token 2: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 3: '_m' (ID: 1285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2772737145423889
    2. ',' → logprob: -1.9022736549377441
    3. '[' → logprob: -3.402273654937744
    4. ';' → logprob: -3.527273654937744
    5. ')' → logprob: -4.652273654937744
    6. ' =' → logprob: -5.402273654937744
    7. '(' → logprob: -5.652273654937744
    8. '*' → logprob: -5.652273654937744
    9. 'e' → logprob: -6.277273654937744
    10. 'u' → logprob: -6.527273654937744

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34267377853393555
    2. ',' → logprob: -1.8426737785339355
    3. '[' → logprob: -2.9676737785339355
    4. ' =' → logprob: -3.0926737785339355
    5. ')' → logprob: -4.2176737785339355
    6. ';' → logprob: -4.8426737785339355
    7. ' ' → logprob: -5.9676737785339355
    8. '*' → logprob: -6.2176737785339355
    9. '_' → logprob: -6.4676737785339355
    10. '(' → logprob: -6.9676737785339355

Token 5: ' map' (ID: 4014)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2953822612762451
    2. '*' → logprob: -2.420382261276245
    3. 'map' → logprob: -2.545382261276245
    4. '[' → logprob: -2.545382261276245
    5. ' []' → logprob: -3.045382261276245
    6. 'N' → logprob: -3.170382261276245
    7. ' [' → logprob: -3.295382261276245
    8. ' ' → logprob: -3.420382261276245
    9. 'n' → logprob: -3.420382261276245
    10. '0' → logprob: -3.670382261276245

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007621414493769407
    2. '(lambda' → logprob: -5.0076212882995605
    3. '(int' → logprob: -7.5076212882995605
    4. '```' → logprob: -9.382621765136719
    5. '(str' → logprob: -9.882621765136719
    6. '<|end|>' → logprob: -10.507621765136719
    7. '[int' → logprob: -11.257621765136719
    8. '(token' → logprob: -11.382621765136719
    9. '(
' → logprob: -11.382621765136719
    10. '(n' → logprob: -11.632621765136719

Token 7: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5769757628440857
    2. ')' → logprob: -0.9519757628440857
    3. 'input' → logprob: -3.7019758224487305
    4. '(' → logprob: -4.0769758224487305
    5. ',input' → logprob: -5.7019758224487305
    6. '<|end|>' → logprob: -5.8269758224487305
    7. ',' → logprob: -6.5769758224487305
    8. ' input' → logprob: -7.8269758224487305
    9. '=input' → logprob: -8.07697582244873
    10. ')(' → logprob: -8.07697582244873

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8542688488960266
    2. '())' → logprob: -1.1042687892913818
    3. '().' → logprob: -1.9792687892913818
    4. '(' → logprob: -2.854268789291382
    5. '(()' → logprob: -4.479269027709961
    6. ')' → logprob: -4.604269027709961
    7. '('' → logprob: -5.229269027709961
    8. '`()' → logprob: -5.729269027709961
    9. '());' → logprob: -6.229269027709961
    10. '()='' → logprob: -6.229269027709961

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00028278882382437587
    2. 'strip' → logprob: -8.500283241271973
    3. 'rstrip' → logprob: -9.500283241271973
    4. ' split' → logprob: -13.250283241271973
    5. ')' → logprob: -14.125283241271973
    6. '(split' → logprob: -14.375283241271973
    7. 'spl' → logprob: -14.500283241271973
    8. 'read' → logprob: -14.750283241271973
    9. '```' → logprob: -15.000283241271973
    10. 'startswith' → logprob: -16.000282287597656

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07734948396682739
    2. ')' → logprob: -2.7023494243621826
    3. '()' → logprob: -4.952349662780762
    4. '`)' → logprob: -9.702349662780762
    5. '()))' → logprob: -9.702349662780762
    6. '))' → logprob: -9.952349662780762
    7. '(' → logprob: -10.202349662780762
    8. '('' → logprob: -10.452349662780762
    9. ' ())' → logprob: -10.577349662780762
    10. '();)' → logprob: -11.827349662780762

Token 11: 'M' (ID: 44)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.044750690460205
    2. '*' → logprob: -2.044750690460205
    3. ' ' → logprob: -2.419750690460205
    4. '<|end|>' → logprob: -2.419750690460205
    5. 'for' → logprob: -2.669750690460205
    6. '
' → logprob: -2.669750690460205
    7. ',' → logprob: -2.919750690460205
    8. ')' → logprob: -3.169750690460205
    9. '\n' → logprob: -3.544750690460205
    10. '[' → logprob: -4.294750690460205

Token 12: ',*' (ID: 65674)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044385626912117004
    2. '=' → logprob: -3.7943856716156006
    3. '_' → logprob: -4.7943854331970215
    4. ')' → logprob: -5.6693854331970215
    5. ' =' → logprob: -6.4193854331970215
    6. '[' → logprob: -6.5443854331970215
    7. '.' → logprob: -7.0443854331970215
    8. '*' → logprob: -7.2943854331970215
    9. ',h' → logprob: -7.4193854331970215
    10. ',*' → logprob: -7.4193854331970215

Token 13: 'k' (ID: 74)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02128729410469532
    2. 'a' → logprob: -4.271287441253662
    3. '_h' → logprob: -6.146287441253662
    4. 'input' → logprob: -7.396287441253662
    5. 'b' → logprob: -7.646287441253662
    6. 'm' → logprob: -7.771287441253662
    7. 's' → logprob: -7.771287441253662
    8. 'map' → logprob: -8.021286964416504
    9. 'l' → logprob: -8.146286964416504
    10. 't' → logprob: -8.146286964416504

Token 14: '_g' (ID: 5439)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.20792582631111145
    2. ',_' → logprob: -2.207925796508789
    3. '_s' → logprob: -3.207925796508789
    4. '_values' → logprob: -4.207925796508789
    5. '_vals' → logprob: -5.832925796508789
    6. ',' → logprob: -5.832925796508789
    7. '_' → logprob: -6.457925796508789
    8. '_i' → logprob: -6.707925796508789
    9. '_w' → logprob: -6.957925796508789
    10. '_k' → logprob: -6.957925796508789

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326770782470703
    2. ' =' → logprob: -1.313267707824707
    3. ',' → logprob: -13.063267707824707
    4. '_' → logprob: -13.813267707824707
    5. ' ' → logprob: -14.188267707824707
    6. '```' → logprob: -14.563267707824707
    7. 's' → logprob: -14.813267707824707
    8. '_=' → logprob: -15.063267707824707
    9. '=input' → logprob: -15.813267707824707
    10. ')' → logprob: -15.813267707824707

Token 16: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2519395649433136
    2. ' map' → logprob: -1.5019395351409912
    3. '(map' → logprob: -11.62693977355957
    4. ' ' → logprob: -14.12693977355957
    5. 'input' → logprob: -15.37693977355957
    6. 'list' → logprob: -15.37693977355957
    7. '	map' → logprob: -15.37693977355957
    8. 'm' → logprob: -17.00193977355957
    9. '.map' → logprob: -17.37693977355957
    10. '  ' → logprob: -17.62693977355957

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01160899456590414
    2. '(' → logprob: -4.511609077453613
    3. '<int' → logprob: -8.261609077453613
    4. '(lambda' → logprob: -8.886609077453613
    5. '[int' → logprob: -10.386609077453613
    6. '(input' → logprob: -10.636609077453613
    7. '(str' → logprob: -10.636609077453613
    8. '```' → logprob: -11.386609077453613
    9. '<|end|>' → logprob: -11.511609077453613
    10. 'int' → logprob: -12.136609077453613

Token 18: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1489342898130417
    2. '(input' → logprob: -2.0239343643188477
    3. ',' → logprob: -5.148934364318848
    4. '=input' → logprob: -9.148934364318848
    5. '(' → logprob: -9.773934364318848
    6. ',int' → logprob: -9.898934364318848
    7. '`,' → logprob: -10.023934364318848
    8. '[input' → logprob: -10.148934364318848
    9. '<input' → logprob: -10.398934364318848
    10. 'input' → logprob: -11.023934364318848

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.180258191714529e-06
    2. '()' → logprob: -11.875008583068848
    3. ' ().' → logprob: -14.375008583068848
    4. '()?.' → logprob: -16.50000762939453
    5. '(.' → logprob: -16.62500762939453
    6. '.readline' → logprob: -16.75000762939453
    7. '(' → logprob: -16.87500762939453
    8. '.' → logprob: -17.00000762939453
    9. '.split' → logprob: -17.25000762939453
    10. '>().' → logprob: -17.37500762939453

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.500000953674316
    3. 'spl' → logprob: -16.125
    4. '(split' → logprob: -17.625
    5. 'strip' → logprob: -18.125
    6. 'rstrip' → logprob: -18.75
    7. ')' → logprob: -19.0
    8. '```' → logprob: -19.25
    9. '_split' → logprob: -20.375
    10. 's' → logprob: -20.75

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015672404319047928
    2. '()' → logprob: -4.640672206878662
    3. ')' → logprob: -5.140672206878662
    4. '())
' → logprob: -11.39067268371582
    5. '();)' → logprob: -11.64067268371582
    6. ' ())' → logprob: -11.89067268371582
    7. '`)' → logprob: -12.51567268371582
    8. '()))' → logprob: -12.64067268371582
    9. '());' → logprob: -12.64067268371582
    10. '()]' → logprob: -13.76567268371582

Token 22: 'times' (ID: 32499)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6634823083877563
    2. 'h' → logprob: -2.038482189178467
    3. '#' → logprob: -2.413482189178467
    4. 'a' → logprob: -3.163482189178467
    5. 'n' → logprob: -3.163482189178467
    6. '[' → logprob: -3.538482189178467
    7. 'i' → logprob: -3.788482189178467
    8. 'print' → logprob: -4.163482189178467
    9. '```' → logprob: -4.163482189178467
    10. 'x' → logprob: -4.288482189178467

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24259698390960693
    2. ' =' → logprob: -1.867596983909607
    3. '_' → logprob: -2.9925971031188965
    4. 's' → logprob: -5.7425971031188965
    5. ',' → logprob: -5.9925971031188965
    6. '[' → logprob: -6.1175971031188965
    7. '=[]' → logprob: -6.9925971031188965
    8. '.' → logprob: -7.3675971031188965
    9. ')' → logprob: -8.117596626281738
    10. '_to' → logprob: -8.992596626281738

Token 24: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13082797825336456
    2. '[' → logprob: -2.7558279037475586
    3. '[h' → logprob: -3.8808279037475586
    4. 'list' → logprob: -4.630827903747559
    5. '[min' → logprob: -4.880827903747559
    6. '[k' → logprob: -5.380827903747559
    7. 'sorted' → logprob: -5.755827903747559
    8. ' []' → logprob: -5.755827903747559
    9. '[*' → logprob: -6.630827903747559
    10. '[N' → logprob: -6.755827903747559

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.036524842376821e-05
    2. ' for' → logprob: -10.375040054321289
    3. '```' → logprob: -12.125040054321289
    4. '[' → logprob: -14.125040054321289
    5. 'range' → logprob: -15.250040054321289
    6. '0' → logprob: -15.250040054321289
    7. 'h' → logprob: -15.375040054321289
    8. 'k' → logprob: -15.500040054321289
    9. 'n' → logprob: -15.625040054321289
    10. '`' → logprob: -15.750040054321289

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15660594403743744
    2. ' _' → logprob: -2.5316059589385986
    3. '_' → logprob: -2.7816059589385986
    4. ' ' → logprob: -5.9066057205200195
    5. 'i' → logprob: -7.9066057205200195
    6. ' t' → logprob: -8.65660572052002
    7. ' h' → logprob: -9.15660572052002
    8. '_i' → logprob: -10.03160572052002
    9. ' N' → logprob: -10.90660572052002
    10. ' x' → logprob: -11.40660572052002

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16111572086811066
    2. 'in' → logprob: -1.9111157655715942
    3. ' ' → logprob: -7.536115646362305
    4. 'n' → logprob: -8.161115646362305
    5. '  ' → logprob: -10.661115646362305
    6. '	in' → logprob: -10.911115646362305
    7. '_' → logprob: -11.786115646362305
    8. ' n' → logprob: -11.786115646362305
    9. ',' → logprob: -12.786115646362305
    10. 'range' → logprob: -12.911115646362305

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07957544922828674
    2. 'range' → logprob: -2.579575538635254
    3. ' h' → logprob: -7.579575538635254
    4. 'h' → logprob: -9.829575538635254
    5. ' k' → logprob: -9.829575538635254
    6. ' ' → logprob: -10.454575538635254
    7. ' N' → logprob: -11.204575538635254
    8. 'k' → logprob: -11.704575538635254
    9. ' n' → logprob: -13.079575538635254
    10. 'N' → logprob: -13.329575538635254

Token 29: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.38739046454429626
    2. '(' → logprob: -1.1373904943466187
    3. ' (' → logprob: -8.51239013671875
    4. '(len' → logprob: -8.76239013671875
    5. '(n' → logprob: -9.38739013671875
    6. '(M' → logprob: -9.76239013671875
    7. ' ' → logprob: -12.51239013671875
    8. '(s' → logprob: -12.51239013671875
    9. '(int' → logprob: -12.63739013671875
    10. ' N' → logprob: -13.51239013671875

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002684683306142688
    2. ')' → logprob: -6.127684593200684
    3. '+' → logprob: -8.127684593200684
    4. ':' → logprob: -9.002684593200684
    5. '):
' → logprob: -10.252684593200684
    6. ' ):' → logprob: -10.252684593200684
    7. ',' → logprob: -13.252684593200684
    8. ' ' → logprob: -13.502684593200684
    9. '*' → logprob: -14.127684593200684
    10. '**' → logprob: -14.127684593200684

Token 31: '   ' (ID: 271)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.16940653324127197
    2. '   ' → logprob: -2.1694064140319824
    3. 'times' → logprob: -3.9194064140319824
    4. ' ' → logprob: -4.044406414031982
    5. '    ' → logprob: -6.669406414031982
    6. '<|end|>' → logprob: -6.919406414031982
    7. '\t' → logprob: -8.04440689086914
    8. ' for' → logprob: -8.66940689086914
    9. ' t' → logprob: -8.79440689086914
    10. '    
' → logprob: -9.16940689086914

Token 32: ' h' (ID: 312)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.21374380588531494
    2. 'times' → logprob: -2.3387436866760254
    3. '   ' → logprob: -2.5887436866760254
    4. 't' → logprob: -5.338743686676025
    5. '\t' → logprob: -5.838743686676025
    6. ' t' → logprob: -6.088743686676025
    7. ' if' → logprob: -6.213743686676025
    8. ' h' → logprob: -6.463743686676025
    9. ' ' → logprob: -7.463743686676025
    10. 'if' → logprob: -7.463743686676025

Token 33: ',' (ID: 11)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -5.6934557505883276e-05
    2. '_times' → logprob: -11.125057220458984
    3. ' _' → logprob: -11.625057220458984
    4. '_' → logprob: -12.250057220458984
    5. '_s' → logprob: -12.500057220458984
    6. '_i' → logprob: -12.875057220458984
    7. ')_' → logprob: -13.000057220458984
    8. '_me' → logprob: -13.250057220458984
    9. ',_' → logprob: -13.625057220458984
    10. '_a' → logprob: -13.875057220458984

Token 34: ' m' (ID: 284)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.4302771985530853
    2. 'm' → logprob: -1.0552772283554077
    3. 'k' → logprob: -8.055276870727539
    4. '_k' → logprob: -8.430276870727539
    5. '_' → logprob: -8.805276870727539
    6. '_t' → logprob: -8.930276870727539
    7. 't' → logprob: -9.305276870727539
    8. 'g' → logprob: -9.305276870727539
    9. '=' → logprob: -9.680276870727539
    10. '_g' → logprob: -9.805276870727539

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5766401886940002
    2. '=' → logprob: -0.8266401886940002
    3. ')' → logprob: -7.7016401290893555
    4. ',' → logprob: -8.701640129089355
    5. '   ' → logprob: -10.826640129089355
    6. '=input' → logprob: -10.951640129089355
    7. ')=' → logprob: -11.576640129089355
    8. '=int' → logprob: -11.826640129089355
    9. ' ' → logprob: -11.826640129089355
    10. '  ' → logprob: -12.576640129089355

Token 36: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4323389530181885
    2. 'map' → logprob: -1.1823389530181885
    3. 'div' → logprob: -3.4323389530181885
    4. '*h' → logprob: -5.182338714599609
    5. ' map' → logprob: -5.932338714599609
    6. ' h' → logprob: -6.557338714599609
    7. '*' → logprob: -6.682338714599609
    8. 'list' → logprob: -8.30733871459961
    9. 'k' → logprob: -8.30733871459961
    10. '[h' → logprob: -8.93233871459961

Token 37: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0721699520945549
    2. '_times' → logprob: -2.6971700191497803
    3. '[i' → logprob: -7.572169780731201
    4. '[_' → logprob: -7.822169780731201
    5. '_time' → logprob: -8.19717025756836
    6. '_i' → logprob: -8.19717025756836
    7. ')' → logprob: -9.19717025756836
    8. '_s' → logprob: -9.19717025756836
    9. '[' → logprob: -9.44717025756836
    10. ')_' → logprob: -9.44717025756836

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048886653035879135
    2. '[i' → logprob: -3.04888653755188
    3. '2' → logprob: -8.1738862991333
    4. ' ' → logprob: -12.2988862991333
    5. 'i' → logprob: -12.4238862991333
    6. '   ' → logprob: -13.1738862991333
    7. '[N' → logprob: -13.7988862991333
    8. '```' → logprob: -13.9238862991333
    9. '[
' → logprob: -14.4238862991333
    10. '(' → logprob: -14.7988862991333

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18033795058727264
    2. 'i' → logprob: -1.930337905883789
    3. ' ' → logprob: -4.555337905883789
    4. ' i' → logprob: -4.680337905883789
    5. '  ' → logprob: -9.680337905883789
    6. '   ' → logprob: -10.930337905883789
    7. ']' → logprob: -11.305337905883789
    8. '(i' → logprob: -12.180337905883789
    9. '(' → logprob: -12.430337905883789
    10. '0' → logprob: -12.867837905883789

Token 40: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.003213245654478669
    2. '*' → logprob: -5.753213405609131
    3. ' *' → logprob: -10.378212928771973
    4. '*(' → logprob: -12.878212928771973
    5. '*j' → logprob: -14.128212928771973
    6. '*t' → logprob: -14.878212928771973
    7. '*x' → logprob: -16.25321388244629
    8. 'i' → logprob: -16.25321388244629
    9. '*a' → logprob: -16.37821388244629
    10. '**' → logprob: -16.37821388244629

Token 41: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.013385149650275707
    2. ']' → logprob: -4.38838529586792
    3. ' ],' → logprob: -7.13838529586792
    4. ',' → logprob: -10.513384819030762
    5. ':' → logprob: -10.513384819030762
    6. '+' → logprob: -11.763384819030762
    7. ' ]' → logprob: -12.138384819030762
    8. ':],' → logprob: -12.263384819030762
    9. ' ' → logprob: -13.138384819030762
    10. '   ' → logprob: -14.013384819030762

Token 42: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6326125860214233
    2. 'h' → logprob: -0.7576125860214233
    3. ' ' → logprob: -11.632612228393555
    4. '2' → logprob: -13.132612228393555
    5. '	h' → logprob: -13.882612228393555
    6. '    ' → logprob: -15.257612228393555
    7. '_h' → logprob: -15.382612228393555
    8. '+h' → logprob: -15.632612228393555
    9. '   ' → logprob: -15.882612228393555
    10. '  ' → logprob: -16.007612228393555

Token 43: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0001017551330733113
    2. 'm' → logprob: -9.375102043151855
    3. '+' → logprob: -11.875102043151855
    4. '[' → logprob: -13.000102043151855
    5. ' ' → logprob: -13.250102043151855
    6. '   ' → logprob: -13.375102043151855
    7. '_s' → logprob: -14.125102043151855
    8. '_' → logprob: -14.375102043151855
    9. '<|end|>' → logprob: -14.750102043151855
    10. '+m' → logprob: -15.000102043151855

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008626751601696014
    2. '2' → logprob: -4.758626937866211
    3. '[(' → logprob: -11.758626937866211
    4. '   ' → logprob: -13.258626937866211
    5. ' ' → logprob: -14.508626937866211
    6. '[
' → logprob: -15.008626937866211
    7. ' [' → logprob: -15.383626937866211
    8. '```' → logprob: -15.383626937866211
    9. '  ' → logprob: -15.633626937866211
    10. '(' → logprob: -15.633626937866211

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011689399980241433
    2. '1' → logprob: -9.375117301940918
    3. '(' → logprob: -10.750117301940918
    4. ' ' → logprob: -11.875117301940918
    5. '   ' → logprob: -12.750117301940918
    6. '  ' → logprob: -16.1251163482666
    7. '    ' → logprob: -16.3751163482666
    8. '`' → logprob: -16.8751163482666
    9. '+' → logprob: -17.0001163482666
    10. '     ' → logprob: -17.2501163482666

Token 46: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0007598382653668523
    2. 'i' → logprob: -7.250759601593018
    3. '*' → logprob: -10.125760078430176
    4. '+' → logprob: -12.250760078430176
    5. '+i' → logprob: -13.125760078430176
    6. '_i' → logprob: -14.000760078430176
    7. ' *' → logprob: -14.500760078430176
    8. ' i' → logprob: -14.500760078430176
    9. '*m' → logprob: -15.250760078430176
    10. ' ' → logprob: -15.375760078430176

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002199740381911397
    2. ' +' → logprob: -6.252199649810791
    3. ']' → logprob: -8.25220012664795
    4. '+]' → logprob: -12.12720012664795
    5. ']+' → logprob: -12.62720012664795
    6. '1' → logprob: -14.12720012664795
    7. ' ]' → logprob: -15.00220012664795
    8. '+"]' → logprob: -15.50220012664795
    9. ' ' → logprob: -16.002199172973633
    10. '2' → logprob: -16.002199172973633

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006258427165448666
    2. ']' → logprob: -5.131258487701416
    3. '0' → logprob: -8.131258010864258
    4. ' ' → logprob: -10.381258010864258
    5. 'i' → logprob: -13.381258010864258
    6. ' ]' → logprob: -14.256258010864258
    7. ')' → logprob: -14.381258010864258
    8. '<|end|>' → logprob: -14.506258010864258
    9. '   ' → logprob: -15.256258010864258
    10. '+' → logprob: -15.506258010864258

Token 49: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008842410519719124
    2. ')
' → logprob: -4.758842468261719
    3. '   ' → logprob: -9.258842468261719
    4. ')
' → logprob: -10.133842468261719
    5. ' )' → logprob: -10.508842468261719
    6. '<|end|>' → logprob: -10.883842468261719
    7. ']' → logprob: -11.133842468261719
    8. ' ' → logprob: -11.633842468261719
    9. ')

' → logprob: -12.883842468261719
    10. '<|end|>' → logprob: -13.008842468261719

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043664246797561646
    2. ' times' → logprob: -4.043664455413818
    3. 'times' → logprob: -4.293664455413818
    4. '
' → logprob: -4.793664455413818
    5. '    
' → logprob: -7.043664455413818
    6. ',' → logprob: -7.793664455413818
    7. ' for' → logprob: -8.04366397857666
    8. '```' → logprob: -8.16866397857666
    9. '<|end|>' → logprob: -8.41866397857666
    10. '    ' → logprob: -8.66866397857666

Token 51: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.5811564326286316
    2. 'times' (adapté à ' times') → logprob: -0.8311564326286316
    3. '```' → logprob: -6.331156253814697
    4. '   ' → logprob: -6.456156253814697
    5. '\t' → logprob: -8.331156730651855
    6. 't' → logprob: -8.331156730651855
    7. '
' → logprob: -8.581156730651855
    8. '``' → logprob: -9.206156730651855
    9. ' for' → logprob: -9.206156730651855
    10. '`' → logprob: -9.206156730651855

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004103454295545816
    2. '.' → logprob: -5.504103660583496
    3. ' .' → logprob: -10.879103660583496
    4. '.extend' → logprob: -12.879103660583496
    5. '.app' → logprob: -13.504103660583496
    6. '.add' → logprob: -14.504103660583496
    7. '.ap' → logprob: -15.004103660583496
    8. '.=' → logprob: -15.254103660583496
    9. ' +=' → logprob: -15.379103660583496
    10. 'append' → logprob: -15.754103660583496

Token 53: '(h' (ID: 8120)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10173413902521133
    2. '(' → logprob: -2.351734161376953
    3. '(f' → logprob: -7.101734161376953
    4. '([' → logprob: -8.726734161376953
    5. '(datetime' → logprob: -8.726734161376953
    6. '(h' → logprob: -9.226734161376953
    7. '(("' → logprob: -9.476734161376953
    8. '(((' → logprob: -9.601734161376953
    9. '(('' → logprob: -10.351734161376953
    10. '(str' → logprob: -10.476734161376953

Token 54: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09074127674102783
    2. ',' → logprob: -2.8407411575317383
    3. ',m' → logprob: -3.9657411575317383
    4. ')' → logprob: -5.715741157531738
    5. ' *' → logprob: -5.840741157531738
    6. ' ,' → logprob: -6.340741157531738
    7. ',k' → logprob: -7.465741157531738
    8. ':' → logprob: -8.715741157531738
    9. ',*' → logprob: -8.840741157531738
    10. ',h' → logprob: -9.465741157531738

Token 55: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -2.7252845029579476e-05
    2. ' ' → logprob: -10.875027656555176
    3. '600' → logprob: -12.375027656555176
    4. '6' → logprob: -12.750027656555176
    5. '360' → logprob: -13.875027656555176
    6. '   ' → logprob: -17.00002670288086
    7. '30' → logprob: -17.25002670288086
    8. '  ' → logprob: -17.37502670288086
    9. '+' → logprob: -17.75002670288086
    10. '```' → logprob: -18.12502670288086

Token 56: '+m' (ID: 139456)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018528925254940987
    2. ' +' → logprob: -4.018528938293457
    3. '+m' → logprob: -7.893528938293457
    4. '+k' → logprob: -13.268528938293457
    5. '+r' → logprob: -14.143528938293457
    6. '+t' → logprob: -14.268528938293457
    7. '+j' → logprob: -14.643528938293457
    8. ')+' → logprob: -14.768528938293457
    9. ' ' → logprob: -15.518528938293457
    10. '+h' → logprob: -15.643528938293457

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ')
' → logprob: -11.250015258789062
    3. '))' → logprob: -14.000015258789062
    4. ' )' → logprob: -14.125015258789062
    5. '`)' → logprob: -15.875015258789062
    6. ')`' → logprob: -16.125015258789062
    7. '),' → logprob: -17.000015258789062
    8. '+' → logprob: -17.250015258789062
    9. '')' → logprob: -17.500015258789062
    10. ')return' → logprob: -17.625015258789062

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04889199137687683
    2. '```' → logprob: -3.423892021179199
    3. '
' → logprob: -5.298892021179199
    4. '\n' → logprob: -5.423892021179199
    5. ' for' → logprob: -5.798892021179199
    6. 'times' → logprob: -7.173892021179199
    7. '<|end|>' → logprob: -7.173892021179199
    8. 's' → logprob: -8.9238920211792
    9. 'M' → logprob: -9.1738920211792
    10. '``' → logprob: -9.1738920211792

Token 59: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5960150957107544
    2. ' i' → logprob: -1.0960150957107544
    3. 'j' → logprob: -3.096014976501465
    4. 'i' → logprob: -3.221014976501465
    5. '_' → logprob: -4.596014976501465
    6. ' _' → logprob: -4.846014976501465
    7. ' k' → logprob: -6.096014976501465
    8. ' ' → logprob: -6.221014976501465
    9. '_j' → logprob: -6.221014976501465
    10. ' g' → logprob: -6.596014976501465

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030031390488147736
    2. 'in' → logprob: -5.878003120422363
    3. ' range' → logprob: -8.878003120422363
    4. 'range' → logprob: -9.878003120422363
    5. ' ' → logprob: -12.003003120422363
    6. '<|end|>' → logprob: -14.878003120422363
    7. 'In' → logprob: -15.503003120422363
    8. '  ' → logprob: -15.503003120422363
    9. '(range' → logprob: -16.00300407409668
    10. ' M' → logprob: -16.00300407409668

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740891456604004
    2. ' range' → logprob: -0.9740891456604004
    3. '(range' → logprob: -11.349088668823242
    4. '	range' → logprob: -15.474088668823242
    5. ' ' → logprob: -16.974088668823242
    6. 'M' → logprob: -17.724088668823242
    7. '(' → logprob: -18.974088668823242
    8. '  ' → logprob: -18.974088668823242
    9. '.range' → logprob: -19.349088668823242
    10. '_range' → logprob: -19.474088668823242

Token 62: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0001037815964082256
    2. '(' → logprob: -9.375103950500488
    3. 'M' → logprob: -11.125103950500488
    4. '(N' → logprob: -13.250103950500488
    5. '(len' → logprob: -14.500103950500488
    6. '(K' → logprob: -14.625103950500488
    7. '(m' → logprob: -14.875103950500488
    8. ' (' → logprob: -15.250103950500488
    9. 'range' → logprob: -16.000102996826172
    10. ' M' → logprob: -16.250102996826172

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20255212485790253
    2. '):
' → logprob: -1.702552080154419
    3. ':' → logprob: -6.827552318572998
    4. ')' → logprob: -10.45255184173584
    5. '):
' → logprob: -11.32755184173584
    6. ':
' → logprob: -12.45255184173584
    7. ' ):' → logprob: -12.57755184173584
    8. '   ' → logprob: -13.70255184173584
    9. ' ):
' → logprob: -14.20255184173584
    10. '}:' → logprob: -14.20255184173584

Token 64: '   ' (ID: 271)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5544924139976501
    2. 'k' → logprob: -1.554492473602295
    3. '   ' → logprob: -1.679492473602295
    4. '    ' → logprob: -4.679492473602295
    5. '```' → logprob: -5.304492473602295
    6. ' g' → logprob: -5.679492473602295
    7. 'g' → logprob: -5.804492473602295
    8. ' ' → logprob: -5.929492473602295
    9. '    
' → logprob: -7.054492473602295
    10. '  ' → logprob: -7.429492473602295

Token 65: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6558828949928284
    2. 'k' (adapté à ' k') → logprob: -1.0308828353881836
    3. ' g' → logprob: -2.6558828353881836
    4. 'g' → logprob: -3.0308828353881836
    5. '   ' → logprob: -5.280882835388184
    6. '```' → logprob: -8.155882835388184
    7. 'kg' → logprob: -9.030882835388184
    8. ' ' → logprob: -10.280882835388184
    9. '    ' → logprob: -10.280882835388184
    10. ' kg' → logprob: -10.655882835388184

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008549918420612812
    2. '_g' → logprob: -5.633549690246582
    3. ',g' → logprob: -5.883549690246582
    4. ' ,' → logprob: -7.383549690246582
    5. '_,' → logprob: -7.383549690246582
    6. ',_' → logprob: -8.008549690246582
    7. ',k' → logprob: -8.258549690246582
    8. '_' → logprob: -9.383549690246582
    9. '<|end|>' → logprob: -9.508549690246582
    10. 'g' → logprob: -10.383549690246582

Token 67: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3871433436870575
    2. ' g' → logprob: -1.1371433734893799
    3. ' ' → logprob: -8.5121431350708
    4. ',' → logprob: -10.7621431350708
    5. '   ' → logprob: -11.2621431350708
    6. '  ' → logprob: -11.5121431350708
    7. ' s' → logprob: -11.7621431350708
    8. ',g' → logprob: -12.1371431350708
    9. '_g' → logprob: -12.6371431350708
    10. 's' → logprob: -12.6371431350708

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42908671498298645
    2. ' =' → logprob: -1.054086685180664
    3. ',' → logprob: -7.929086685180664
    4. ' ' → logprob: -11.554086685180664
    5. ',k' → logprob: -12.179086685180664
    6. '=k' → logprob: -12.804086685180664
    7. 'k' → logprob: -13.679086685180664
    8. '<|end|>' → logprob: -13.929086685180664
    9. '   ' → logprob: -14.054086685180664
    10. '_' → logprob: -14.179086685180664

Token 69: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0110511165112257
    2. 'k' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.886051177978516
    4. '	k' → logprob: -14.511051177978516
    5. '_k' → logprob: -14.761051177978516
    6. ' к' → logprob: -15.136051177978516
    7. '(k' → logprob: -15.198551177978516
    8. ' ' → logprob: -15.823551177978516
    9. '<|end|>' → logprob: -15.948551177978516
    10. '-k' → logprob: -16.511051177978516

Token 70: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -5.6696149840718135e-05
    2. '_s' → logprob: -11.125056266784668
    3. '[' → logprob: -11.250056266784668
    4. 'g' → logprob: -11.750056266784668
    5. '```' → logprob: -12.125056266784668
    6. '[i' → logprob: -13.125056266784668
    7. '_m' → logprob: -13.250056266784668
    8. '_k' → logprob: -13.250056266784668
    9. '_' → logprob: -13.250056266784668
    10. '*' → logprob: -13.750056266784668

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.125
    3. '   ' → logprob: -16.375
    4. '[
' → logprob: -17.875
    5. '<|end|>' → logprob: -17.875
    6. ' ' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '[i' → logprob: -18.625
    9. ' [' → logprob: -18.75
    10. '6' → logprob: -19.0

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010413920972496271
    2. '[' → logprob: -9.875103950500488
    3. ' ' → logprob: -10.000103950500488
    4. '   ' → logprob: -12.125103950500488
    5. ']' → logprob: -14.250103950500488
    6. '  ' → logprob: -14.750103950500488
    7. '(' → logprob: -15.875103950500488
    8. '```' → logprob: -16.250104904174805
    9. '{' → logprob: -16.375104904174805
    10. '    ' → logprob: -16.875104904174805

Token 73: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.00011224505578866228
    2. 'i' → logprob: -9.250112533569336
    3. '*' → logprob: -11.125112533569336
    4. '```' → logprob: -14.750112533569336
    5. ' *' → logprob: -14.875112533569336
    6. '[i' → logprob: -15.250112533569336
    7. '*g' → logprob: -16.875112533569336
    8. '*k' → logprob: -17.000112533569336
    9. '   ' → logprob: -17.375112533569336
    10. '**' → logprob: -17.375112533569336

Token 74: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001119499676860869
    2. ']' → logprob: -7.001119613647461
    3. '+' → logprob: -8.876119613647461
    4. ' ],' → logprob: -9.626119613647461
    5. ',' → logprob: -13.876119613647461
    6. ''],' → logprob: -14.376119613647461
    7. '   ' → logprob: -15.751119613647461
    8. '),' → logprob: -16.12611961364746
    9. ':],' → logprob: -16.12611961364746
    10. ']+' → logprob: -16.25111961364746

Token 75: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.026553861796855927
    2. 'k' → logprob: -3.6515538692474365
    3. ' ' → logprob: -9.026554107666016
    4. '`' → logprob: -9.776554107666016
    5. '2' → logprob: -11.401554107666016
    6. '"' → logprob: -11.526554107666016
    7. ''' → logprob: -12.026554107666016
    8. ' ' → logprob: -12.026554107666016
    9. '<|end|>' → logprob: -12.151554107666016
    10. '	k' → logprob: -12.276554107666016

Token 76: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.003889742074534297
    2. 'g' → logprob: -5.753889560699463
    3. '[' → logprob: -7.378889560699463
    4. '*' → logprob: -9.878890037536621
    5. '*g' → logprob: -10.878890037536621
    6. '+' → logprob: -11.878890037536621
    7. '```' → logprob: -12.378890037536621
    8. '[g' → logprob: -13.003890037536621
    9. '   ' → logprob: -13.503890037536621
    10. '*_' → logprob: -14.878890037536621

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '2' → logprob: -12.62501049041748
    3. '+' → logprob: -13.25001049041748
    4. ' [' → logprob: -13.37501049041748
    5. '*[' → logprob: -13.62501049041748
    6. '   ' → logprob: -14.12501049041748
    7. '```' → logprob: -14.37501049041748
    8. '*' → logprob: -14.50001049041748
    9. '`' → logprob: -15.12501049041748
    10. ' ' → logprob: -15.62501049041748

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.877503907773644e-05
    2. ' ' → logprob: -9.375099182128906
    3. '+' → logprob: -11.875099182128906
    4. '1' → logprob: -13.000099182128906
    5. '(' → logprob: -13.000099182128906
    6. '[' → logprob: -13.250099182128906
    7. ']' → logprob: -15.375099182128906
    8. '   ' → logprob: -15.750099182128906
    9. '-' → logprob: -16.500099182128906
    10. '```' → logprob: -16.625099182128906

Token 79: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.023497028276324272
    2. '*' → logprob: -3.7734971046447754
    3. '*g' → logprob: -8.898496627807617
    4. 'i' → logprob: -10.023496627807617
    5. ']*' → logprob: -10.023496627807617
    6. '*k' → logprob: -11.523496627807617
    7. '*[' → logprob: -12.523496627807617
    8. '[i' → logprob: -13.023496627807617
    9. '*pi' → logprob: -13.148496627807617
    10. ']' → logprob: -13.273496627807617

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015586259542033076
    2. ']' → logprob: -9.625155448913574
    3. '+]' → logprob: -10.125155448913574
    4. '],' → logprob: -11.000155448913574
    5. ']+' → logprob: -11.000155448913574
    6. '1' → logprob: -11.750155448913574
    7. ' +' → logprob: -12.125155448913574
    8. '+
' → logprob: -14.125155448913574
    9. '+i' → logprob: -14.500155448913574
    10. '2' → logprob: -14.875155448913574

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '```' → logprob: -15.750000953674316
    4. ']' → logprob: -16.375
    5. '[' → logprob: -17.6875
    6. '-' → logprob: -17.875
    7. '۱' → logprob: -18.25
    8. '   ' → logprob: -18.3125
    9. '0' → logprob: -18.375
    10. '१' → logprob: -18.5625

Token 82: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026425467804074287
    2. ')
' → logprob: -3.651425361633301
    3. '   ' → logprob: -9.5264253616333
    4. ']' → logprob: -10.2764253616333
    5. '<|end|>' → logprob: -12.1514253616333
    6. '}' → logprob: -12.9014253616333
    7. '```' → logprob: -13.1514253616333
    8. ')
' → logprob: -13.5264253616333
    9. ' )' → logprob: -13.5264253616333
    10. ']
' → logprob: -14.4014253616333

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5585879683494568
    2. 'times' → logprob: -1.3085880279541016
    3. ' times' → logprob: -2.0585880279541016
    4. '```' → logprob: -4.433588027954102
    5. '
' → logprob: -4.683588027954102
    6. '    
' → logprob: -6.683588027954102
    7. '\t' → logprob: -6.808588027954102
    8. '\n' → logprob: -7.183588027954102
    9. '    ' → logprob: -7.683588027954102
    10. '`' → logprob: -7.683588027954102

Token 84: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.13345268368721008
    2. ' times' → logprob: -2.1334526538848877
    3. '   ' → logprob: -5.758452892303467
    4. 'for' → logprob: -7.258452892303467
    5. '```' → logprob: -7.258452892303467
    6. 'k' → logprob: -7.633452892303467
    7. 'if' → logprob: -7.758452892303467
    8. 'print' → logprob: -8.508452415466309
    9. 't' → logprob: -8.633452415466309
    10. ' for' → logprob: -8.883452415466309

Token 85: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18067613244056702
    2. '.' → logprob: -1.8056761026382446
    3. '.extend' → logprob: -7.805675983428955
    4. '[' → logprob: -7.930675983428955
    5. '.app' → logprob: -10.805676460266113
    6. 'append' → logprob: -10.930676460266113
    7. '+' → logprob: -11.180676460266113
    8. '.setdefault' → logprob: -11.180676460266113
    9. '46' → logprob: -11.430676460266113
    10. '.push' → logprob: -11.555676460266113

Token 86: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2522141635417938
    2. '(' → logprob: -1.5022141933441162
    3. '(g' → logprob: -8.877214431762695
    4. '((' → logprob: -9.002214431762695
    5. '(h' → logprob: -11.377214431762695
    6. 'k' → logprob: -12.627214431762695
    7. ' (' → logprob: -12.627214431762695
    8. '(
' → logprob: -14.127214431762695
    9. '('' → logprob: -14.627214431762695
    10. '(max' → logprob: -14.627214431762695

Token 87: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -4.8232690460281447e-05
    2. ' *' → logprob: -11.125048637390137
    3. ')*' → logprob: -11.500048637390137
    4. '60' → logprob: -12.000048637390137
    5. '*)' → logprob: -12.125048637390137
    6. ')' → logprob: -12.750048637390137
    7. '*g' → logprob: -12.875048637390137
    8. '**' → logprob: -13.125048637390137
    9. ''*' → logprob: -13.500048637390137
    10. '*
' → logprob: -14.750048637390137

Token 88: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.5358694731257856e-05
    2. '6' → logprob: -10.500035285949707
    3. ' ' → logprob: -12.000035285949707
    4. '+' → logprob: -14.500035285949707
    5. '360' → logprob: -15.125035285949707
    6. '30' → logprob: -15.750035285949707
    7. '600' → logprob: -15.750035285949707
    8. '1' → logprob: -15.875035285949707
    9. '   ' → logprob: -16.000036239624023
    10. '  ' → logprob: -16.125036239624023

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000841907283756882
    2. ' +' → logprob: -7.125842094421387
    3. '+)' → logprob: -11.375842094421387
    4. '+k' → logprob: -11.500842094421387
    5. '+
' → logprob: -12.750842094421387
    6. ')+' → logprob: -12.750842094421387
    7. ')' → logprob: -13.250842094421387
    8. '-' → logprob: -13.500842094421387
    9. '+m' → logprob: -13.750842094421387
    10. '+h' → logprob: -14.000842094421387

Token 90: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.2961512513575144e-05
    2. ' g' → logprob: -10.750022888183594
    3. 'k' → logprob: -15.125022888183594
    4. '60' → logprob: -15.750022888183594
    5. ' ' → logprob: -15.750022888183594
    6. '0' → logprob: -16.375022888183594
    7. '1' → logprob: -16.625022888183594
    8. ')' → logprob: -17.125022888183594
    9. '50' → logprob: -17.312522888183594
    10. '	g' → logprob: -17.375022888183594

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ')
' → logprob: -11.625011444091797
    3. ' )' → logprob: -13.750011444091797
    4. '))' → logprob: -13.875011444091797
    5. '+' → logprob: -15.875011444091797
    6. '`)' → logprob: -16.250011444091797
    7. '')' → logprob: -16.375011444091797
    8. ')`' → logprob: -16.500011444091797
    9. '```' → logprob: -16.625011444091797
    10. ')return' → logprob: -16.875011444091797

Token 92: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.0017992928624153137
    2. 't' → logprob: -7.7517991065979
    3. ' times' → logprob: -7.8767991065979
    4. 'print' → logprob: -7.8767991065979
    5. '
' → logprob: -8.626799583435059
    6. '```' → logprob: -9.251799583435059
    7. '\n' → logprob: -9.501799583435059
    8. 'sorted' → logprob: -9.626799583435059
    9. 'for' → logprob: -9.876799583435059
    10. ')' → logprob: -10.751799583435059

Token 93: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0037348796613514423
    2. ' sorted' → logprob: -5.628735065460205
    3. 'list' → logprob: -9.128734588623047
    4. '[' → logprob: -11.378734588623047
    5. 's' → logprob: -12.628734588623047
    6. 'set' → logprob: -12.753734588623047
    7. 'sort' → logprob: -13.128734588623047
    8. '(sorted' → logprob: -13.878734588623047
    9. 'sum' → logprob: -14.003734588623047
    10. ' list' → logprob: -14.003734588623047

Token 95: '(set' (ID: 25904)
  Prédit: '(times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(times' → logprob: -0.10023816674947739
    2. '(' → logprob: -2.350238084793091
    3. '(t' → logprob: -11.350237846374512
    4. '(
' → logprob: -12.100237846374512
    5. '(time' → logprob: -12.475237846374512
    6. 'times' → logprob: -12.975237846374512
    7. '((' → logprob: -13.600237846374512
    8. '(list' → logprob: -13.975237846374512
    9. '(lambda' → logprob: -14.100237846374512
    10. ' (' → logprob: -14.350237846374512

Token 96: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.750012397766113
    3. 'times' → logprob: -13.500012397766113
    4. ')' → logprob: -13.625012397766113
    5. ' (' → logprob: -14.125012397766113
    6. '()' → logprob: -14.750012397766113
    7. ')(' → logprob: -15.125012397766113
    8. '(
' → logprob: -16.625011444091797
    9. '())' → logprob: -17.625011444091797
    10. ' times' → logprob: -18.250011444091797

Token 97: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019308974733576179
    2. '))' → logprob: -6.2519307136535645
    3. ')
' → logprob: -13.501931190490723
    4. '())' → logprob: -15.501931190490723
    5. ')`' → logprob: -15.751931190490723
    6. ' )' → logprob: -15.876931190490723
    7. ')))' → logprob: -16.001930236816406
    8. '])' → logprob: -16.376930236816406
    9. ')}' → logprob: -17.001930236816406
    10. '()' → logprob: -17.001930236816406

Token 98: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19495363533496857
    2. 'print' → logprob: -2.069953680038452
    3. 'answer' → logprob: -4.444953441619873
    4. 'ans' → logprob: -5.444953441619873
    5. 'if' → logprob: -5.819953441619873
    6. 'i' → logprob: -5.819953441619873
    7. 'result' → logprob: -5.944953441619873
    8. 'd' → logprob: -6.194953441619873
    9. 'answers' → logprob: -6.194953441619873
    10. 'p' → logprob: -6.319953441619873

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018473457545042038
    2. '=' → logprob: -4.7684736251831055
    3. 'ult' → logprob: -5.1434736251831055
    4. 'ults' → logprob: -6.0184736251831055
    5. '=[]' → logprob: -7.0184736251831055
    6. 's' → logprob: -7.7684736251831055
    7. ' =[' → logprob: -10.268473625183105
    8. 'ault' → logprob: -10.393473625183105
    9. '=[]
' → logprob: -10.393473625183105
    10. '[' → logprob: -11.018473625183105

Token 100: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1123924255371094
    2. 'len' → logprob: -1.7373924255371094
    3. '[]' → logprob: -1.7373924255371094
    4. 'float' → logprob: -2.3623924255371094
    5. '10' → logprob: -2.8623924255371094
    6. 'times' → logprob: -3.1123924255371094
    7. ' ' → logprob: -3.2373924255371094
    8. ' []' → logprob: -3.8623924255371094
    9. ' times' → logprob: -4.237392425537109
    10. ' len' → logprob: -4.737392425537109

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025537241250276566
    2. 'i' → logprob: -4.275537014007568
    3. 'prev' → logprob: -5.275537014007568
    4. 'j' → logprob: -6.525537014007568
    5. 'last' → logprob: -6.900537014007568
    6. 'idx' → logprob: -7.025537014007568
    7. 'start' → logprob: -7.275537014007568
    8. 'current' → logprob: -7.400537014007568
    9. 'cur' → logprob: -7.775537014007568
    10. 'l' → logprob: -8.400537490844727

Token 102: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.11527784168720245
    2. ' time' → logprob: -2.9902777671813965
    3. ' i' → logprob: -3.2402777671813965
    4. 't' → logprob: -4.1152777671813965
    5. 'time' → logprob: -6.4902777671813965
    6. 'i' → logprob: -7.2402777671813965
    7. ' x' → logprob: -7.9902777671813965
    8. ' ' → logprob: -8.490278244018555
    9. ' _' → logprob: -8.740278244018555
    10. '_' → logprob: -10.615278244018555

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006594933103770018
    2. 'in' → logprob: -5.506595134735107
    3. ' ' → logprob: -6.006595134735107
    4. 'imes' → logprob: -10.50659465789795
    5. ' i' → logprob: -12.00659465789795
    6. 'i' → logprob: -12.63159465789795
    7. '  ' → logprob: -13.00659465789795
    8. 'ime' → logprob: -13.25659465789795
    9. ' times' → logprob: -13.38159465789795
    10. '	in' → logprob: -13.63159465789795

Token 104: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.386912077665329
    2. 'times' → logprob: -1.1369121074676514
    3. ' range' → logprob: -10.38691234588623
    4. '(times' → logprob: -12.01191234588623
    5. 'range' → logprob: -12.76191234588623
    6. ' ' → logprob: -15.13691234588623
    7. '[' → logprob: -15.76191234588623
    8. '_times' → logprob: -15.88691234588623
    9. 'imes' → logprob: -16.011911392211914
    10. '.times' → logprob: -16.136911392211914

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010359067237004638
    2. ':
' → logprob: -6.876035690307617
    3. ' :' → logprob: -14.251035690307617
    4. ',' → logprob: -15.001035690307617
    5. '=' → logprob: -15.126035690307617
    6. ':def' → logprob: -15.376035690307617
    7. ':

' → logprob: -15.501035690307617
    8. ':
' → logprob: -15.626035690307617
    9. '):' → logprob: -15.876035690307617
    10. '<|end|>' → logprob: -16.001035690307617

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020868029445409775
    2. ' res' → logprob: -3.8958680629730225
    3. 'res' → logprob: -8.520868301391602
    4. '    
' → logprob: -10.020868301391602
    5. ' if' → logprob: -10.895868301391602
    6. '
' → logprob: -10.895868301391602
    7. '```' → logprob: -11.020868301391602
    8. '	res' → logprob: -11.270868301391602
    9. ' ' → logprob: -12.770868301391602
    10. '<|end|>' → logprob: -13.020868301391602

Token 107: ' h' (ID: 312)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9871059656143188
    2. 'res' → logprob: -1.1121059656143188
    3. 'idx' → logprob: -2.2371058464050293
    4. 'while' → logprob: -2.6121058464050293
    5. '   ' → logprob: -3.3621058464050293
    6. 'count' → logprob: -3.4871058464050293
    7. 'for' → logprob: -4.987105846405029
    8. 'cnt' → logprob: -5.112105846405029
    9. 'import' → logprob: -5.237105846405029
    10. ' if' → logprob: -5.362105846405029

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.046232208609580994
    2. ',' → logprob: -3.796232223510742
    3. '=' → logprob: -3.796232223510742
    4. ' ' → logprob: -8.546232223510742
    5. '=int' → logprob: -10.671232223510742
    6. ' ,' → logprob: -11.046232223510742
    7. ')' → logprob: -11.296232223510742
    8. '  ' → logprob: -11.796232223510742
    9. '   ' → logprob: -12.796232223510742
    10. ',h' → logprob: -13.046232223510742

Token 109: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5759449005126953
    2. ' t' → logprob: -0.8259449005126953
    3. ' ' → logprob: -13.200944900512695
    4. '   ' → logprob: -13.575944900512695
    5. 'int' → logprob: -14.700944900512695
    6. '	t' → logprob: -14.700944900512695
    7. 'f' → logprob: -14.825944900512695
    8. '(t' → logprob: -15.450944900512695
    9. ' (' → logprob: -15.450944900512695
    10. '`t' → logprob: -15.700944900512695

Token 110: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20145456492900848
    2. ' //' → logprob: -1.701454520225525
    3. ' ' → logprob: -10.701454162597656
    4. ' ' → logprob: -12.201454162597656
    5. '   ' → logprob: -12.326454162597656
    6. '//=' → logprob: -13.076454162597656
    7. '```' → logprob: -13.826454162597656
    8. '#' → logprob: -13.951454162597656
    9. '	' → logprob: -14.076454162597656
    10. ')' → logprob: -14.201454162597656

Token 111: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '6' → logprob: -19.500030517578125
    4. '   ' → logprob: -19.875030517578125
    5. '```' → logprob: -20.375030517578125
    6. ' ' → logprob: -20.750030517578125
    7. '600' → logprob: -20.750030517578125
    8. '  ' → logprob: -21.000030517578125
    9. '61' → logprob: -21.500030517578125
    10. '{' → logprob: -22.375030517578125

Token 112: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025651348754763603
    2. ' ' → logprob: -4.150651454925537
    3. '<|end|>' → logprob: -5.150651454925537
    4. '    ' → logprob: -6.400651454925537
    5. '  ' → logprob: -6.900651454925537
    6. 'm' → logprob: -7.775651454925537
    7. '    
' → logprob: -8.525650978088379
    8. ' m' → logprob: -9.525650978088379
    9. ' 
' → logprob: -9.775650978088379
    10. ',' → logprob: -10.400650978088379

Token 114: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.3341432213783264
    2. 't' → logprob: -1.7091431617736816
    3. ' t' → logprob: -2.7091431617736816
    4. ' m' → logprob: -3.3341431617736816
    5. ' ' → logprob: -7.209143161773682
    6. 'h' → logprob: -10.95914363861084
    7. '   ' → logprob: -12.08414363861084
    8. '  ' → logprob: -12.20914363861084
    9. '    ' → logprob: -12.20914363861084
    10. ' h' → logprob: -12.95914363861084

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30141162872314453
    2. '<|end|>' → logprob: -1.8014116287231445
    3. ' =' → logprob: -2.8014116287231445
    4. '%' → logprob: -3.9264116287231445
    5. ' ' → logprob: -5.8014116287231445
    6. '<|end|>' → logprob: -5.8014116287231445
    7. ',' → logprob: -6.1764116287231445
    8. ')' → logprob: -6.4264116287231445
    9. '   ' → logprob: -6.9264116287231445
    10. 't' → logprob: -7.3014116287231445

Token 116: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3868718445301056
    2. ' t' → logprob: -1.1368718147277832
    3. ' ' → logprob: -14.511872291564941
    4. '	t' → logprob: -15.886872291564941
    5. '`t' → logprob: -16.386871337890625
    6. '   ' → logprob: -17.136871337890625
    7. '60' → logprob: -18.511871337890625
    8. '(t' → logprob: -19.386871337890625
    9. ' ' → logprob: -19.386871337890625
    10. '  ' → logprob: -19.761871337890625

Token 117: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0015023599844425917
    2. ' %' → logprob: -6.501502513885498
    3. '```' → logprob: -17.501502990722656
    4. ' ' → logprob: -17.876502990722656
    5. '%
' → logprob: -17.876502990722656
    6. '()%' → logprob: -17.876502990722656
    7. '
' → logprob: -18.626502990722656
    8. ')%' → logprob: -19.376502990722656
    9. '%i' → logprob: -19.501502990722656
    10. '%\' → logprob: -20.251502990722656

Token 118: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.000001907348633
    4. '6' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '  ' → logprob: -19.500001907348633
    7. '61' → logprob: -22.250001907348633
    8. '600' → logprob: -22.625001907348633
    9. '`' → logprob: -22.875001907348633
    10. '060' → logprob: -23.000001907348633

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018399957567453384
    2. '
' → logprob: -4.143400192260742
    3. '<|end|>' → logprob: -6.518400192260742
    4. '    
' → logprob: -7.518400192260742
    5. ' res' → logprob: -9.393400192260742
    6. ',' → logprob: -10.018400192260742
    7. ')' → logprob: -10.018400192260742
    8. 'res' → logprob: -10.018400192260742
    9. ' 
' → logprob: -11.143400192260742
    10. '```' → logprob: -11.393400192260742

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17044903337955475
    2. '
' → logprob: -1.9204490184783936
    3. 'res' → logprob: -5.295449256896973
    4. ' res' → logprob: -5.795449256896973
    5. '    
' → logprob: -7.045449256896973
    6. '<|end|>' → logprob: -7.295449256896973
    7. '	res' → logprob: -9.045449256896973
    8. ' ' → logprob: -9.420449256896973
    9. ' 
' → logprob: -9.795449256896973
    10. '  
' → logprob: -9.920449256896973

Token 121: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.12675327062606812
    2. ' res' → logprob: -2.251753330230713
    3. 'if' → logprob: -5.126753330230713
    4. '   ' → logprob: -5.376753330230713
    5. ' if' → logprob: -5.751753330230713
    6. '```' → logprob: -10.251752853393555
    7. 'r' → logprob: -10.876752853393555
    8. ' ' → logprob: -12.126752853393555
    9. '
' → logprob: -12.626752853393555
    10. 'print' → logprob: -12.751752853393555

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002879176288843155
    2. '.' → logprob: -5.8778791427612305
    3. '.extend' → logprob: -9.75287914276123
    4. '.app' → logprob: -11.87787914276123
    5. ' .' → logprob: -12.75287914276123
    6. 'append' → logprob: -13.25287914276123
    7. '+=' → logprob: -14.12787914276123
    8. '.=' → logprob: -14.25287914276123
    9. '.Append' → logprob: -14.37787914276123
    10. '.ap' → logprob: -14.62787914276123

Token 123: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6988939046859741
    2. '(f' → logprob: -0.8238939046859741
    3. ' f' → logprob: -3.3238940238952637
    4. '(' → logprob: -4.198894023895264
    5. '("{' → logprob: -5.448894023895264
    6. ' (' → logprob: -6.073894023895264
    7. 'str' → logprob: -6.698894023895264
    8. '(str' → logprob: -6.823894023895264
    9. '"' → logprob: -6.948894023895264
    10. '("{}' → logprob: -6.948894023895264

Token 124: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.005258303135633469
    2. ''{' → logprob: -5.255258083343506
    3. '"' → logprob: -10.880258560180664
    4. '{' → logprob: -12.255258560180664
    5. ' "{' → logprob: -15.005258560180664
    6. ''' → logprob: -15.380258560180664
    7. '"%' → logprob: -16.130258560180664
    8. 'f' → logprob: -16.255258560180664
    9. '("{' → logprob: -16.880258560180664
    10. '   ' → logprob: -17.130258560180664

Token 125: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00014883324911352247
    2. '{' → logprob: -9.00014877319336
    3. ' h' → logprob: -11.12514877319336
    4. '0' → logprob: -11.75014877319336
    5. ''{' → logprob: -13.62514877319336
    6. '00' → logprob: -15.12514877319336
    7. '"{' → logprob: -15.12514877319336
    8. 'str' → logprob: -15.12514877319336
    9. '{:' → logprob: -16.00014877319336
    10. 'hour' → logprob: -16.12514877319336

Token 126: '}:{' (ID: 139687)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011129142512800172
    2. '}:{' → logprob: -9.12511157989502
    3. '{:' → logprob: -14.12511157989502
    4. '}:' → logprob: -14.50011157989502
    5. ':{' → logprob: -15.50011157989502
    6. ' :' → logprob: -15.62511157989502
    7. '02' → logprob: -16.125110626220703
    8. '":' → logprob: -16.250110626220703
    9. '}' → logprob: -16.375110626220703
    10. '0' → logprob: -16.500110626220703

Token 127: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005010855966247618
    2. 'str' → logprob: -7.6255011558532715
    3. 'f' → logprob: -11.875500679016113
    4. ':' → logprob: -13.125500679016113
    5. ''m' → logprob: -13.500500679016113
    6. '0' → logprob: -14.250500679016113
    7. ':m' → logprob: -14.375500679016113
    8. ''{' → logprob: -14.625500679016113
    9. ' m' → logprob: -14.750500679016113
    10. '00' → logprob: -15.250500679016113

Token 128: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02325642853975296
    2. '02' → logprob: -3.773256540298462
    3. '0' → logprob: -12.273256301879883
    4. '01' → logprob: -13.023256301879883
    5. '{:' → logprob: -14.023256301879883
    6. '03' → logprob: -14.273256301879883
    7. '{' → logprob: -14.523256301879883
    8. '%' → logprob: -14.648256301879883
    9. ' ' → logprob: -14.773256301879883
    10. '00' → logprob: -15.023256301879883

Token 129: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -1.0683535037969705e-05
    2. '0' → logprob: -11.50001049041748
    3. '%' → logprob: -15.12501049041748
    4. ':' → logprob: -15.75001049041748
    5. '>' → logprob: -16.875011444091797
    6. ' ' → logprob: -17.750011444091797
    7. 'd' → logprob: -18.000011444091797
    8. '}' → logprob: -18.375011444091797
    9. '"' → logprob: -18.500011444091797
    10. '```' → logprob: -19.250011444091797

Token 130: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016873658751137555
    2. '}")' → logprob: -8.750168800354004
    3. '}' → logprob: -11.500168800354004
    4. '}"' → logprob: -16.750167846679688
    5. '}")
' → logprob: -16.875167846679688
    6. ' d' → logprob: -18.250167846679688
    7. '")' → logprob: -18.625167846679688
    8. '}")

' → logprob: -19.000167846679688
    9. 'D' → logprob: -19.500167846679688
    10. '
' → logprob: -19.625167846679688

Token 131: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.002555092331022024
    2. '")' → logprob: -6.002554893493652
    3. '}")
' → logprob: -9.877554893493652
    4. '"}' → logprob: -11.877554893493652
    5. '}' → logprob: -12.127554893493652
    6. '}"' → logprob: -12.252554893493652
    7. ' }' → logprob: -12.627554893493652
    8. ')")' → logprob: -13.002554893493652
    9. '"})' → logprob: -14.002554893493652
    10. '}")

' → logprob: -14.002554893493652

Token 132: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015042474493384361
    2. '
' → logprob: -4.390042304992676
    3. 'for' → logprob: -6.765042304992676
    4. '<|end|>' → logprob: -6.890042304992676
    5. '  
' → logprob: -9.390042304992676
    6. ' 
' → logprob: -9.890042304992676
    7. '```' → logprob: -9.890042304992676
    8. '\n' → logprob: -10.140042304992676
    9. '#' → logprob: -10.515042304992676
    10. ' print' → logprob: -10.765042304992676

Token 133: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06446698307991028
    2. '('' → logprob: -3.439466953277588
    3. '("("' → logprob: -3.814466953277588
    4. '(*' → logprob: -5.439466953277588
    5. '(res' → logprob: -5.689466953277588
    6. '("' → logprob: -7.564466953277588
    7. '(
' → logprob: -10.939467430114746
    8. '(len' → logprob: -11.064467430114746
    9. '("")' → logprob: -12.314467430114746
    10. '()' → logprob: -12.439467430114746

Token 134: ' ".' (ID: 11730)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6288578510284424
    2. ',' → logprob: -1.2538578510284424
    3. '",' → logprob: -2.8788578510284424
    4. '".' → logprob: -3.0038578510284424
    5. '"' → logprob: -3.1288578510284424
    6. ',"' → logprob: -4.253857612609863
    7. ' ".' → logprob: -5.003857612609863
    8. '"\' → logprob: -5.128857612609863
    9. ',"\' → logprob: -7.003857612609863
    10. '","' → logprob: -7.128857612609863

Token 135: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. ' join' → logprob: -14.625000953674316
    3. 'jo' → logprob: -15.125000953674316
    4. 'j' → logprob: -16.250001907348633
    5. 'print' → logprob: -17.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. '.join' → logprob: -19.250001907348633
    8. 'js' → logprob: -19.500001907348633
    9. 'joins' → logprob: -20.000001907348633
    10. ').' → logprob: -20.000001907348633

Token 136: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0001605115394340828
    2. 'res' → logprob: -8.750160217285156
    3. '(' → logprob: -13.875160217285156
    4. ')' → logprob: -14.125160217285156
    5. ' (' → logprob: -16.125160217285156
    6. ' res' → logprob: -16.500160217285156
    7. ',res' → logprob: -17.375160217285156
    8. '$res' → logprob: -17.500160217285156
    9. '	res' → logprob: -17.750160217285156
    10. '(
' → logprob: -17.875160217285156

Token 137: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04858805239200592
    2. ')' → logprob: -3.0485880374908447
    3. '))
' → logprob: -15.548587799072266
    4. ')))' → logprob: -15.548587799072266
    5. '()))' → logprob: -16.548587799072266
    6. ')
' → logprob: -16.548587799072266
    7. '())' → logprob: -17.048587799072266
    8. '])' → logprob: -17.048587799072266
    9. ' ))' → logprob: -17.673587799072266
    10. '})' → logprob: -17.798587799072266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 135
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 117
Précision stricte (1ère position): 58.52%
Précision adaptée (1ère position): 60.74%
Précision (top 10): 86.67%
================================================================================
