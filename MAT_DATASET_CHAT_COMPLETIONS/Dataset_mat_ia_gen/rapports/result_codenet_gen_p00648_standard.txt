================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def to_minutes(weekday, start):
    h = start // 100
    m = start % 100
    day = weekday
    if h >= 24:
        h -= 24
        day += 1
    return day * 1440 + h * 60 + m

def overlap(a_start, a_end, b_start, b_end):
    return not (a_end <= b_start or b_end <= a_start)

for line in sys.stdin:
    line=line.strip()
    if line=='0':
        break
    N = int(line)
    programs = {}
    times = []
    for _ in range(N):
        name, wd, st = sys.stdin.readline().split()
        wd=int(wd)
        st=int(st)
        start = to_minutes(wd, st)
        end = start + 30
        programs[name] = (start, end)
        times.append((start,end,name))
    P = int(sys.stdin.readline())
    favs = [sys.stdin.readline().strip() for _ in range(P)]
    # check if favs overlap
    fav_intervals = [programs[f] for f in favs]
    conflict = False
    fav_intervals.sort()
    for i in range(len(fav_intervals)-1):
        if overlap(fav_intervals[i][0], fav_intervals[i][1], fav_intervals[i+1][0], fav_intervals[i+1][1]):
            conflict = True
            break
    if conflict:
        print(-1)
        continue
    # filter compatible programs (no overlaps with favs)
    # also fix all program list
    fav_set = set(favs)
    fav_min = min(i[0] for i in fav_intervals)
    fav_max = max(i[1] for i in fav_intervals)
    # if favs overlap with each other no answer -> done above
    # For max number including favs:
    # We must select all favs, and we can add other programs that don't overlap with each other and with favs.
    # So first exclude programs overlapping with any fav fav_program
    def conflict_with_favs(p):
        for fs,fe in fav_intervals:
            if overlap(p[0],p[1],fs,fe):
                return True
        return False
    candidates = []
    for st,en,name in times:
        if name in fav_set:
            candidates.append((st,en,name,True))
        elif not conflict_with_favs((st,en)):
            candidates.append((st,en,name,False))
    # check if fav programs among candidates don't conflict anymore
    # now we want max set including all fav (marked True), from candidates without overlap
    # classic interval scheduling with forced intervals:
    # First sort by end time
    candidates.sort(key=lambda x:x[1])
    # We do dp indexed by sorted candidates:
    # For each candidate i, dp[i] = maximum number of programs watchable <= i including all favs
    # But forced to include all favs, so dp state must track which favs are included so far
    # Since P can be up to 500, tracking subset is impossible
    # Better approach:
    # Since fav programs do not overlap each other (already checked),
    # merge them into one single set, intervals fixed
    # Let's do interval scheduling on candidates including favs:
    # First remove non-fav programs conflicting with favs (done),
    # Then try to select all favs plus as many non-favs as possible avoiding overlap
    # Because favs don't overlap, schedule them first, then add non-favs in gaps
    # We can solve as follows:
    # Collect all fav intervals in sorted order by end time
    fav_sorted = sorted(fav_intervals,key=lambda x:x[1])
    # Now intervals: cover the line with fav intervals, between fav intervals we can add others if no conflicts
    # Extract the overall covered time by favs, and intervals between favs:
    # We'll do interval scheduling in each gap between fav intervals including left and right segments
    # plus count favs:
    total = len(fav_sorted)
    # get all candidates intervals which do not overlap any fav intervals (already filtered)
    non_fav_cands = [c for c in candidates if not c[3]]
    # add sentinel fav intervals at start and end
    starts = [-10**9]+[f[1] for f in fav_sorted]
    ends = [f[0] for f in fav_sorted]+[10**9]
    # for intervals between favs i and i+1, collect non-fav candidates fully inside (start>=ends[i], end<=starts[i+1])
    # then do interval scheduling in each gap
    for i in range(len(fav_sorted)+1):
        gap_candidates = []
        L = starts[i]
        R = ends[i]
        for st,en,name,_ in non_fav_cands:
            if st>=R and en<=L:
                # This never happens, since R > L for i in [0,len]
                # Actually intervals between favs are (fav_sorted[i-1].end, fav_sorted[i].start)
                # Correction: starts = [f[1]], ends=[f[0]], saved in order, possibly starts[i] < ends[i]
                # We fix swapped:
                # Actually starts[i]=fav end times, ends[i]=fav start times, so starts[i] > ends[i] which is reversed
                # fix: swap starts and ends usage
                pass
        # Instead:
        # Between fav intervals i-1 and i:
        # We define prev_end = fav_sorted[i-1].end if i>0 else -inf
        # next_start = fav_sorted[i].start if i<len(fav_sorted) else +inf
        # so valid intervals are [prev_end, next_start)
    gaps = []
    for i in range(len(fav_sorted)+1):
        prev_end = fav_sorted[i-1][1] if i>0 else -10**9
        next_start = fav_sorted[i][0] if i<len(fav_sorted) else 10**9
        gaps.append( (prev_end,next_start) )
    res = total
    # For each gap find max number of compatible non-fav programs inside gap
    # classic interval scheduling
    for L,R in gaps:
        # filter non_fav candidates inside [L,R)
        cand_in_gap = [ (en, st) for st,en,_,_ in non_fav_cands if st>=L and en<=R]
        cand_in_gap.sort()
        count = 0
        last_end = L
        for en, st in cand_in_gap:
            if st>=last_end:
                count+=1
                last_end = en
        res+=count
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27994534373283386
    2. '\n' → logprob: -2.0299453735351562
    3. 'import' → logprob: -3.0299453735351562
    4. '<|end|>' → logprob: -3.1549453735351562
    5. 'newline' → logprob: -5.404945373535156
    6. '\' → logprob: -5.529945373535156
    7. '<|end|>' → logprob: -5.904945373535156
    8. '' → logprob: -6.154945373535156
    9. ',' → logprob: -6.779945373535156
    10. 'print' → logprob: -6.779945373535156

Token 4: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3835870623588562
    2. ' main' → logprob: -1.883587121963501
    3. ' process' → logprob: -2.758587121963501
    4. ' space' → logprob: -3.258587121963501
    5. ' calculate' → logprob: -4.633586883544922
    6. ' read' → logprob: -4.883586883544922
    7. ' hello' → logprob: -4.883586883544922
    8. ' my' → logprob: -5.133586883544922
    9. '_' → logprob: -5.258586883544922
    10. ' a' → logprob: -5.758586883544922

Token 5: '_minutes' (ID: 174025)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.0167874526232481
    2. '_lower' → logprob: -5.141787528991699
    3. '_' → logprob: -5.391787528991699
    4. '_upper' → logprob: -6.266787528991699
    5. '_import' → logprob: -7.516787528991699
    6. ' ' → logprob: -7.516787528991699
    7. 'kens' → logprob: -8.0167875289917
    8. '_str' → logprob: -8.0167875289917
    9. 'lower' → logprob: -8.1417875289917
    10. '_print' → logprob: -8.3917875289917

Token 6: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005769872572273016
    2. '():' → logprob: -6.255769729614258
    3. '_' → logprob: -6.755769729614258
    4. '(_' → logprob: -7.380769729614258
    5. '(:' → logprob: -8.505769729614258
    6. '```' → logprob: -8.505769729614258
    7. '("("' → logprob: -8.630769729614258
    8. '(_:' → logprob: -9.005769729614258
    9. '(time' → logprob: -9.130769729614258
    10. '):' → logprob: -9.255769729614258

Token 7: 'weekday' (ID: 170230)
  Prédit: 'seconds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seconds' → logprob: -0.3158828318119049
    2. 'time' → logprob: -1.5658828020095825
    3. 'hours' → logprob: -3.815882921218872
    4. ' seconds' → logprob: -3.815882921218872
    5. ')' → logprob: -4.940882682800293
    6. 'duration' → logprob: -5.565882682800293
    7. 'total' → logprob: -6.315882682800293
    8. ' time' → logprob: -6.690882682800293
    9. 's' → logprob: -7.190882682800293
    10. 'minutes' → logprob: -7.190882682800293

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10188638418912888
    2. ')' → logprob: -2.85188627243042
    3. ',' → logprob: -3.85188627243042
    4. '_' → logprob: -4.47688627243042
    5. 's' → logprob: -5.35188627243042
    6. '):
' → logprob: -7.60188627243042
    7. ')_' → logprob: -8.101886749267578
    8. '_,' → logprob: -8.351886749267578
    9. '_day' → logprob: -9.101886749267578
    10. '_:' → logprob: -9.351886749267578

Token 9: ' start' (ID: 1604)
  Prédit: ' hour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hour' → logprob: -0.46208468079566956
    2. ' hours' → logprob: -1.9620846509933472
    3. 'hour' → logprob: -2.0870847702026367
    4. 'hours' → logprob: -2.4620847702026367
    5. ' hh' → logprob: -4.962084770202637
    6. ' time' → logprob: -5.837084770202637
    7. 'time' → logprob: -6.337084770202637
    8. 'hh' → logprob: -6.462084770202637
    9. ' start' → logprob: -6.962084770202637
    10. ' days' → logprob: -7.462084770202637

Token 10: '):
' (ID: 1883)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.18546317517757416
    2. '):' → logprob: -2.3104631900787354
    3. '_' → logprob: -2.9354631900787354
    4. ',' → logprob: -5.185462951660156
    5. ')' → logprob: -5.185462951660156
    6. '_hour' → logprob: -5.560462951660156
    7. '_minutes' → logprob: -7.560462951660156
    8. ')_' → logprob: -8.185462951660156
    9. ' ):' → logprob: -8.435462951660156
    10. '_day' → logprob: -8.810462951660156

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06939561665058136
    2. ':' → logprob: -3.0693955421447754
    3. '    ' → logprob: -4.444395542144775
    4. ''' → logprob: -5.944395542144775
    5. ' ' → logprob: -6.069395542144775
    6. ' :' → logprob: -7.069395542144775
    7. '\' → logprob: -7.444395542144775
    8. '```' → logprob: -7.444395542144775
    9. ' return' → logprob: -8.319396018981934
    10. 'return' → logprob: -8.694396018981934

Token 12: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0631042942404747
    2. ' ' → logprob: -3.5631043910980225
    3. ' return' → logprob: -4.688104152679443
    4. '    ' → logprob: -5.313104152679443
    5. 'return' → logprob: -5.563104152679443
    6. ''' → logprob: -5.688104152679443
    7. '  ' → logprob: -6.938104152679443
    8. ':' → logprob: -6.938104152679443
    9. ' if' → logprob: -7.063104152679443
    10. '"' → logprob: -7.188104152679443

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5529032349586487
    2. ',' → logprob: -1.177903175354004
    3. '   ' → logprob: -3.177903175354004
    4. 'our' → logprob: -3.427903175354004
    5. ' ' → logprob: -4.177903175354004
    6. 'ours' → logprob: -4.427903175354004
    7. '=' → logprob: -4.802903175354004
    8. '=int' → logprob: -5.927903175354004
    9. '  ' → logprob: -6.552903175354004
    10. 'h' → logprob: -6.802903175354004

Token 14: ' start' (ID: 1604)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04264502599835396
    2. 'int' → logprob: -3.29264497756958
    3. ' start' → logprob: -5.54264497756958
    4. 'start' → logprob: -7.91764497756958
    5. ' ' → logprob: -8.667645454406738
    6. '=int' → logprob: -10.167645454406738
    7. '  ' → logprob: -10.667645454406738
    8. '[int' → logprob: -11.042645454406738
    9. '   ' → logprob: -11.292645454406738
    10. '(int' → logprob: -11.667645454406738

Token 15: ' //' (ID: 602)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1542657613754272
    2. '[:]' → logprob: -1.5292657613754272
    3. '.split' → logprob: -1.9042657613754272
    4. '*' → logprob: -2.154265880584717
    5. ' *' → logprob: -2.529265880584717
    6. ':' → logprob: -2.529265880584717
    7. ' //' → logprob: -4.779265880584717
    8. '[:' → logprob: -5.404265880584717
    9. '//' → logprob: -5.654265880584717
    10. '<|end|>' → logprob: -5.779265880584717

Token 16: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.012958443723618984
    2. ' ' → logprob: -4.387958526611328
    3. '100' → logprob: -7.887958526611328
    4. '1' → logprob: -10.387958526611328
    5. '360' → logprob: -10.387958526611328
    6. '600' → logprob: -11.637958526611328
    7. '```' → logprob: -14.387958526611328
    8. '6' → logprob: -14.387958526611328
    9. '10' → logprob: -14.512958526611328
    10. '  ' → logprob: -14.637958526611328

Token 17: '100' (ID: 1353)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.03114447370171547
    2. '100' → logprob: -3.531144380569458
    3. '1' → logprob: -6.906144618988037
    4. ' ' → logprob: -8.406144142150879
    5. '360' → logprob: -8.781144142150879
    6. '10' → logprob: -12.531144142150879
    7. '```' → logprob: -12.656144142150879
    8. '600' → logprob: -12.781144142150879
    9. '   ' → logprob: -13.281144142150879
    10. '  ' → logprob: -13.906144142150879

Token 18: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.275896281003952
    2. '*' → logprob: -1.7758963108062744
    3. '<|end|>' → logprob: -3.4008963108062744
    4. '00' → logprob: -4.150896072387695
    5. '0' → logprob: -4.650896072387695
    6. ')' → logprob: -5.400896072387695
    7. ' ' → logprob: -5.400896072387695
    8. '  ' → logprob: -6.900896072387695
    9. '<|end|>' → logprob: -7.025896072387695
    10. '000' → logprob: -7.900896072387695

Token 19: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5893731713294983
    2. '*' → logprob: -1.4643731117248535
    3. ' ' → logprob: -2.3393731117248535
    4. '   ' → logprob: -2.4643731117248535
    5. ')' → logprob: -4.7143731117248535
    6. '00' → logprob: -4.7143731117248535
    7. '0' → logprob: -5.4643731117248535
    8. '    ' → logprob: -5.7143731117248535
    9. '  ' → logprob: -6.0893731117248535
    10. '<|end|>' → logprob: -7.4643731117248535

Token 20: ' m' (ID: 284)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08317962288856506
    2. ' *' → logprob: -3.4581797122955322
    3. ' ' → logprob: -3.7081797122955322
    4. '   ' → logprob: -4.458179473876953
    5. ':' → logprob: -5.333179473876953
    6. ')' → logprob: -6.583179473876953
    7. '0' → logprob: -6.583179473876953
    8. '  ' → logprob: -6.958179473876953
    9. '60' → logprob: -7.333179473876953
    10. ' (' → logprob: -7.333179473876953

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037424568086862564
    2. '=' → logprob: -3.7874245643615723
    3. ' ' → logprob: -4.287424564361572
    4. '<|end|>' → logprob: -9.16242504119873
    5. '  ' → logprob: -9.91242504119873
    6. '_' → logprob: -10.16242504119873
    7. ' ' → logprob: -10.28742504119873
    8. ')' → logprob: -10.41242504119873
    9. '<|end|>' → logprob: -10.53742504119873
    10. ' *' → logprob: -10.91242504119873

Token 22: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.10022887587547302
    2. 'start' → logprob: -2.350228786468506
    3. ' ' → logprob: -10.850229263305664
    4. '[start' → logprob: -13.725229263305664
    5. '(start' → logprob: -13.975229263305664
    6. '	start' → logprob: -14.850229263305664
    7. '=start' → logprob: -15.725229263305664
    8. ' ' → logprob: -16.350229263305664
    9. '0' → logprob: -16.600229263305664
    10. ':start' → logprob: -17.350229263305664

Token 23: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03807603940367699
    2. '%' → logprob: -3.2880759239196777
    3. ' ' → logprob: -10.288076400756836
    4. ' ' → logprob: -15.163076400756836
    5. '<|end|>' → logprob: -16.038076400756836
    6. '20' → logprob: -17.288076400756836
    7. '  ' → logprob: -17.788076400756836
    8. '٪' → logprob: -18.288076400756836
    9. '	' → logprob: -18.538076400756836
    10. '2' → logprob: -18.538076400756836

Token 24: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.023295441642403603
    2. ' ' → logprob: -3.7732954025268555
    3. '10' → logprob: -10.023295402526855
    4. '60' → logprob: -12.648295402526855
    5. '1' → logprob: -13.523295402526855
    6. '  ' → logprob: -14.023295402526855
    7. '```' → logprob: -16.273296356201172
    8. '`' → logprob: -17.523296356201172
    9. '   ' → logprob: -17.773296356201172
    10. '１００' → logprob: -18.398296356201172

Token 25: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00011570196511456743
    2. '10' → logprob: -9.375115394592285
    3. ' ' → logprob: -10.875115394592285
    4. '1' → logprob: -11.375115394592285
    5. '60' → logprob: -15.000115394592285
    6. '  ' → logprob: -17.5001163482666
    7. '```' → logprob: -18.3751163482666
    8. '   ' → logprob: -19.6251163482666
    9. '１００' → logprob: -19.8751163482666
    10. '101' → logprob: -20.5001163482666

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01888834498822689
    2. '    
' → logprob: -4.643888473510742
    3. ')' → logprob: -6.143888473510742
    4. '\n' → logprob: -6.643888473510742
    5. '    ' → logprob: -7.018888473510742
    6. '
' → logprob: -7.018888473510742
    7. ' return' → logprob: -7.768888473510742
    8. ' 
' → logprob: -7.893888473510742
    9. ' ' → logprob: -8.018888473510742
    10. '+' → logprob: -8.018888473510742

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019710374996066093
    2. '
' → logprob: -4.269710540771484
    3. '    
' → logprob: -5.894710540771484
    4. ' return' → logprob: -7.144710540771484
    5. ')' → logprob: -7.519710540771484
    6. 'return' → logprob: -8.269710540771484
    7. '    ' → logprob: -8.394710540771484
    8. '\n' → logprob: -8.894710540771484
    9. '  
' → logprob: -9.019710540771484
    10. ' 
' → logprob: -9.269710540771484

Token 28: ' day' (ID: 2163)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2281559854745865
    2. ' return' → logprob: -1.8531559705734253
    3. 'return' → logprob: -3.228156089782715
    4. ' total' → logprob: -6.353156089782715
    5. '
' → logprob: -6.978156089782715
    6. '```' → logprob: -7.103156089782715
    7. 'total' → logprob: -7.103156089782715
    8. '\n' → logprob: -7.478156089782715
    9. ' day' → logprob: -7.603156089782715
    10. '    ' → logprob: -7.978156089782715

Token 29: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02933141030371189
    2. '_' → logprob: -3.6543314456939697
    3. ' *' → logprob: -7.154331207275391
    4. ')' → logprob: -7.529331207275391
    5. '_of' → logprob: -8.15433120727539
    6. '*' → logprob: -8.15433120727539
    7. ' =' → logprob: -8.27933120727539
    8. '=' → logprob: -8.65433120727539
    9. '_s' → logprob: -8.65433120727539
    10. '_to' → logprob: -8.90433120727539

Token 30: ' weekday' (ID: 96099)
  Prédit: ' weekday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weekday' → logprob: -0.31298959255218506
    2. 'weekday' → logprob: -1.562989592552185
    3. ' {'' → logprob: -4.062989711761475
    4. ' ['' → logprob: -4.812989711761475
    5. '['' → logprob: -5.062989711761475
    6. '["' → logprob: -5.562989711761475
    7. ' {"' → logprob: -5.687989711761475
    8. ' ["' → logprob: -5.687989711761475
    9. ' weekdays' → logprob: -5.812989711761475
    10. '{'' → logprob: -6.187989711761475

Token 31: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007881415076553822
    2. '*' → logprob: -4.8828816413879395
    3. ' ' → logprob: -9.257881164550781
    4. '<|end|>' → logprob: -9.382881164550781
    5. '   ' → logprob: -10.007881164550781
    6. 'def' → logprob: -11.632881164550781
    7. '[' → logprob: -11.882881164550781
    8. '```' → logprob: -12.007881164550781
    9. '  ' → logprob: -12.132881164550781
    10. 'import' → logprob: -12.132881164550781

Token 32: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003105345880612731
    2. '*' → logprob: -5.878105163574219
    3. '<|end|>' → logprob: -8.878105163574219
    4. '   ' → logprob: -9.503105163574219
    5. ' ' → logprob: -9.878105163574219
    6. '<|end|>' → logprob: -11.753105163574219
    7. '  ' → logprob: -12.003105163574219
    8. 'def' → logprob: -12.128105163574219
    9. '```' → logprob: -12.753105163574219
    10. '    ' → logprob: -12.878105163574219

Token 33: ' if' (ID: 538)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1015469878911972
    2. '*' → logprob: -2.3515470027923584
    3. '   ' → logprob: -7.476546764373779
    4. ' ' → logprob: -7.976546764373779
    5. '<|end|>' → logprob: -9.226547241210938
    6. ')' → logprob: -9.726547241210938
    7. 'return' → logprob: -9.851547241210938
    8. '  ' → logprob: -9.976547241210938
    9. '```' → logprob: -10.476547241210938
    10. 'def' → logprob: -10.726547241210938

Token 34: ' h' (ID: 312)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.014258820563554764
    2. ' ' → logprob: -4.514258861541748
    3. ' weekday' → logprob: -6.139258861541748
    4. 'day' → logprob: -7.389258861541748
    5. ' not' → logprob: -8.76425838470459
    6. '  ' → logprob: -8.88925838470459
    7. '(day' → logprob: -9.38925838470459
    8. ' ' → logprob: -11.13925838470459
    9. 'weekday' → logprob: -11.26425838470459
    10. ' (' → logprob: -12.26425838470459

Token 35: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7223725318908691
    2. ' >=' → logprob: -1.5973725318908691
    3. ' ==' → logprob: -2.097372531890869
    4. ' *' → logprob: -2.597372531890869
    5. ' >' → logprob: -2.847372531890869
    6. '<' → logprob: -3.722372531890869
    7. '*' → logprob: -4.347372531890869
    8. '>=' → logprob: -5.222372531890869
    9. '>' → logprob: -5.472372531890869
    10. '==' → logprob: -5.472372531890869

Token 36: ' ' (ID: 220)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.6331731081008911
    2. ' ' → logprob: -0.7581731081008911
    3. '0' → logprob: -8.133172988891602
    4. '20' → logprob: -9.258172988891602
    5. '18' → logprob: -9.758172988891602
    6. '60' → logprob: -10.633172988891602
    7. '7' → logprob: -11.133172988891602
    8. '10' → logprob: -11.258172988891602
    9. '23' → logprob: -11.383172988891602
    10. '6' → logprob: -11.508172988891602

Token 37: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.00048143533058464527
    2. '0' → logprob: -8.875481605529785
    3. '7' → logprob: -9.250481605529785
    4. '6' → logprob: -10.000481605529785
    5. '10' → logprob: -10.125481605529785
    6. ' ' → logprob: -10.250481605529785
    7. '12' → logprob: -10.625481605529785
    8. '18' → logprob: -10.625481605529785
    9. '8' → logprob: -11.000481605529785
    10. '2' → logprob: -11.000481605529785

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.052872996777296066
    2. ' or' → logprob: -3.177872896194458
    3. ' :' → logprob: -4.927873134613037
    4. ':return' → logprob: -6.802873134613037
    5. '   ' → logprob: -7.427873134613037
    6. ':
' → logprob: -7.927873134613037
    7. ' and' → logprob: -8.302872657775879
    8. '       ' → logprob: -8.677872657775879
    9. ' ' → logprob: -10.427872657775879
    10. '    ' → logprob: -10.677872657775879

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.50732421875
    2. '    ' → logprob: -1.13232421875
    3. ' return' → logprob: -4.13232421875
    4. '   ' → logprob: -4.13232421875
    5. ' ' → logprob: -4.38232421875
    6. ':return' → logprob: -4.88232421875
    7. ':' → logprob: -5.13232421875
    8. '+' → logprob: -5.63232421875
    9. ' :' → logprob: -5.88232421875
    10. ' :
' → logprob: -6.75732421875

Token 40: ' h' (ID: 312)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.36920392513275146
    2. ' return' → logprob: -1.6192039251327515
    3. ' h' → logprob: -2.994204044342041
    4. 'day' → logprob: -4.119204044342041
    5. ' raise' → logprob: -4.244204044342041
    6. ' ' → logprob: -4.744204044342041
    7. '    ' → logprob: -4.869204044342041
    8. '       ' → logprob: -5.244204044342041
    9. '   ' → logprob: -5.869204044342041
    10. 'return' → logprob: -6.494204044342041

Token 41: ' -=' (ID: 12583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.742633044719696
    2. ' -=' → logprob: -0.742633044719696
    3. '=' → logprob: -3.367633104324341
    4. ' ' → logprob: -5.492632865905762
    5. ' -' → logprob: -5.742632865905762
    6. '-' → logprob: -5.992632865905762
    7. '-=' → logprob: -5.992632865905762
    8. ' +=' → logprob: -7.242632865905762
    9. ',' → logprob: -8.367632865905762
    10. ' %=' → logprob: -8.617632865905762

Token 42: ' ' (ID: 220)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.0008277330780401826
    2. ' ' → logprob: -7.125827789306641
    3. '1' → logprob: -11.25082778930664
    4. '2' → logprob: -11.62582778930664
    5. '   ' → logprob: -15.12582778930664
    6. '4' → logprob: -15.25082778930664
    7. '  ' → logprob: -15.62582778930664
    8. '12' → logprob: -15.87582778930664
    9. 'h' → logprob: -15.87582778930664
    10. '6' → logprob: -16.37582778930664

Token 43: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.00011033779446734115
    2. '1' → logprob: -9.875110626220703
    3. ' ' → logprob: -10.250110626220703
    4. '2' → logprob: -10.750110626220703
    5. '12' → logprob: -14.625110626220703
    6. '10' → logprob: -14.875110626220703
    7. '6' → logprob: -15.375110626220703
    8. '4' → logprob: -15.375110626220703
    9. '240' → logprob: -15.750110626220703
    10. '   ' → logprob: -16.250110626220703

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0667257159948349
    2. '   ' → logprob: -3.191725730895996
    3. '       ' → logprob: -4.316725730895996
    4. '<|end|>' → logprob: -5.691725730895996
    5. ' day' → logprob: -6.191725730895996
    6. '
' → logprob: -6.691725730895996
    7. ' and' → logprob: -6.941725730895996
    8. '\n' → logprob: -7.941725730895996
    9. 'day' → logprob: -7.941725730895996
    10. ' 
' → logprob: -8.191725730895996

Token 45: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21829262375831604
    2. '   ' → logprob: -2.093292713165283
    3. '<|end|>' → logprob: -3.343292713165283
    4. '       ' → logprob: -3.468292713165283
    5. ' ' → logprob: -6.343292713165283
    6. '    
' → logprob: -6.843292713165283
    7. ' 
' → logprob: -7.468292713165283
    8. ' day' → logprob: -7.843292713165283
    9. '    ' → logprob: -7.968292713165283
    10. '  
' → logprob: -8.093292236328125

Token 46: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' (adapté à ' day') → logprob: -0.5916655659675598
    2. ' day' → logprob: -0.8416655659675598
    3. '1' → logprob: -4.216665744781494
    4. '   ' → logprob: -7.966665744781494
    5. ' ' → logprob: -8.216665267944336
    6. '       ' → logprob: -8.716665267944336
    7. 'd' → logprob: -10.716665267944336
    8. '7' → logprob: -11.841665267944336
    9. '(day' → logprob: -11.841665267944336
    10. '+' → logprob: -12.591665267944336

Token 47: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18038363754749298
    2. '+=' → logprob: -1.8053836822509766
    3. '+' → logprob: -7.680383682250977
    4. '=' → logprob: -9.305383682250977
    5. ' +' → logprob: -10.430383682250977
    6. ' =' → logprob: -10.805383682250977
    7. '<|end|>' → logprob: -11.430383682250977
    8. '   ' → logprob: -11.555383682250977
    9. ' ' → logprob: -12.305383682250977
    10. '    ' → logprob: -12.680383682250977

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.000262260437012
    4. '7' → logprob: -16.125261306762695
    5. '<|end|>' → logprob: -17.375261306762695
    6. '+' → logprob: -17.750261306762695
    7. '24' → logprob: -18.125261306762695
    8. '6' → logprob: -18.187761306762695
    9. '  ' → logprob: -18.187761306762695
    10. '864' → logprob: -18.250261306762695

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.722539834911004e-05
    2. ' ' → logprob: -9.250097274780273
    3. '7' → logprob: -14.375097274780273
    4. '   ' → logprob: -16.250097274780273
    5. '24' → logprob: -16.500097274780273
    6. '864' → logprob: -16.875097274780273
    7. '+' → logprob: -17.687597274780273
    8. '6' → logprob: -17.750097274780273
    9. '0' → logprob: -17.937597274780273
    10. '  ' → logprob: -18.187597274780273

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1074496507644653
    2. '   ' → logprob: -1.1074496507644653
    3. '<|end|>' → logprob: -1.2324496507644653
    4. '    
' → logprob: -4.357449531555176
    5. '```' → logprob: -4.732449531555176
    6. ' ' → logprob: -5.107449531555176
    7. '<|end|>' → logprob: -5.732449531555176
    8. '  
' → logprob: -6.107449531555176
    9. ':' → logprob: -6.107449531555176
    10. ' return' → logprob: -6.232449531555176

Token 52: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10522323846817017
    2. ' ' → logprob: -3.7302231788635254
    3. '    
' → logprob: -4.230223178863525
    4. ' return' → logprob: -4.480223178863525
    5. '<|end|>' → logprob: -4.480223178863525
    6. 'return' (adapté à ' return') → logprob: -5.230223178863525
    7. '
' → logprob: -5.230223178863525
    8. '```' → logprob: -5.355223178863525
    9. ' 
' → logprob: -5.605223178863525
    10. '  
' → logprob: -5.855223178863525

Token 53: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.12816590070724487
    2. 'day' → logprob: -2.1281659603118896
    3. '(day' → logprob: -6.8781657218933105
    4. ' (' → logprob: -9.628166198730469
    5. '(' → logprob: -10.003166198730469
    6. ' ' → logprob: -10.503166198730469
    7. '60' → logprob: -11.128166198730469
    8. '((' → logprob: -11.253166198730469
    9. '24' → logprob: -11.628166198730469
    10. ' h' → logprob: -12.253166198730469

Token 54: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020552983507514
    2. '*' → logprob: -3.89555287361145
    3. ',' → logprob: -12.020552635192871
    4. '<|end|>' → logprob: -12.770552635192871
    5. ' ' → logprob: -14.145552635192871
    6. ' ' → logprob: -15.020552635192871
    7. ' ,' → logprob: -15.270552635192871
    8. '```' → logprob: -15.895552635192871
    9. ' **' → logprob: -16.020553588867188
    10. '**' → logprob: -16.520553588867188

Token 55: ' ' (ID: 220)
  Prédit: '144'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '144' → logprob: -0.006391456816345453
    2. '60' → logprob: -5.381391525268555
    3. '1' → logprob: -6.881391525268555
    4. ' ' → logprob: -7.256391525268555
    5. '24' → logprob: -10.881391525268555
    6. '140' → logprob: -12.006391525268555
    7. '6' → logprob: -12.381391525268555
    8. '360' → logprob: -13.131391525268555
    9. '143' → logprob: -13.256391525268555
    10. '14' → logprob: -13.381391525268555

Token 56: '144' (ID: 15363)
  Prédit: '144'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '144' → logprob: -0.018368251621723175
    2. '60' → logprob: -4.018368244171143
    3. '24' → logprob: -8.6433687210083
    4. ' ' → logprob: -10.6433687210083
    5. '1' → logprob: -11.2683687210083
    6. '(' → logprob: -13.1433687210083
    7. '360' → logprob: -13.3933687210083
    8. '140' → logprob: -14.2683687210083
    9. '600' → logprob: -14.5183687210083
    10. '6' → logprob: -14.8933687210083

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '060' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '۰' → logprob: -15.875001907348633
    5. '০' → logprob: -17.875001907348633
    6. '٠' → logprob: -17.875001907348633
    7. '０' → logprob: -18.000001907348633
    8. '012' → logprob: -18.000001907348633
    9. '024' → logprob: -18.375001907348633
    10. '०' → logprob: -18.562501907348633

Token 58: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2520138621330261
    2. '+' → logprob: -1.502013921737671
    3. '+h' → logprob: -9.62701416015625
    4. '<|end|>' → logprob: -11.50201416015625
    5. ' +
' → logprob: -12.62701416015625
    6. ' ' → logprob: -13.00201416015625
    7. '+
' → logprob: -14.00201416015625
    8. ' plus' → logprob: -14.00201416015625
    9. '+(' → logprob: -15.12701416015625
    10. ' ' → logprob: -15.12701416015625

Token 59: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005237548612058163
    2. ' h' → logprob: -5.255237579345703
    3. '(h' → logprob: -13.505237579345703
    4. '(' → logprob: -14.130237579345703
    5. '60' → logprob: -14.755237579345703
    6. '   ' → logprob: -14.755237579345703
    7. '	h' → logprob: -14.755237579345703
    8. ' ' → logprob: -15.005237579345703
    9. ' (' → logprob: -16.005237579345703
    10. '  ' → logprob: -17.130237579345703

Token 60: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0700763687491417
    2. ' *' → logprob: -2.6950764656066895
    3. ' ' → logprob: -9.195075988769531
    4. '60' → logprob: -11.445075988769531
    5. '<|end|>' → logprob: -11.570075988769531
    6. '**' → logprob: -12.195075988769531
    7. '```' → logprob: -12.820075988769531
    8. '`' → logprob: -13.320075988769531
    9. '"' → logprob: -13.695075988769531
    10. '   ' → logprob: -13.820075988769531

Token 61: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.011048170737922192
    2. ' ' → logprob: -4.511048316955566
    3. '  ' → logprob: -16.13604736328125
    4. '<|end|>' → logprob: -16.38604736328125
    5. '6' → logprob: -16.88604736328125
    6. ' ' → logprob: -17.38604736328125
    7. '30' → logprob: -17.63604736328125
    8. '```' → logprob: -18.26104736328125
    9. '   ' → logprob: -18.51104736328125
    10. '61' → logprob: -19.13604736328125

Token 62: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '6' → logprob: -16.625003814697266
    4. '```' → logprob: -18.375003814697266
    5. '600' → logprob: -19.750003814697266
    6. '  ' → logprob: -19.750003814697266
    7. '   ' → logprob: -20.375003814697266
    8. '0' → logprob: -21.125003814697266
    9. '<|end|>' → logprob: -21.250003814697266
    10. '61' → logprob: -21.375003814697266

Token 63: ' +' (ID: 659)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.01960119418799877
    2. 'm' → logprob: -4.269601345062256
    3. ' ' → logprob: -5.519601345062256
    4. ' +' → logprob: -6.644601345062256
    5. '	m' → logprob: -10.144600868225098
    6. '+' → logprob: -10.394600868225098
    7. ' ' → logprob: -11.144600868225098
    8. '  ' → logprob: -11.519600868225098
    9. '+m' → logprob: -11.519600868225098
    10. '   ' → logprob: -12.394600868225098

Token 64: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.575939953327179
    2. 'm' → logprob: -0.825939953327179
    3. ' ' → logprob: -14.950940132141113
    4. ' ' → logprob: -16.450939178466797
    5. '	m' → logprob: -17.075939178466797
    6. ' м' → logprob: -19.075939178466797
    7. '  ' → logprob: -19.575939178466797
    8. '<|end|>' → logprob: -19.700939178466797
    9. '   ' → logprob: -20.700939178466797
    10. 'м' → logprob: -20.950939178466797

Token 65: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6920910477638245
    2. '<|end|>' → logprob: -0.8170910477638245
    3. '\n' → logprob: -4.06709098815918
    4. '\' → logprob: -4.94209098815918
    5. '<|end|>' → logprob: -5.06709098815918
    6. '

' → logprob: -5.06709098815918
    7. '```' → logprob: -5.19209098815918
    8. ')' → logprob: -5.31709098815918
    9. 'newline' → logprob: -5.44209098815918
    10. '(' → logprob: -6.56709098815918

Token 66: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0695071667432785
    2. '

' → logprob: -3.194507122039795
    3. 'def' → logprob: -4.694507122039795
    4. '<|end|>' → logprob: -5.069507122039795
    5. '\n' → logprob: -5.694507122039795
    6. '```' → logprob: -5.819507122039795
    7. '\' → logprob: -7.069507122039795
    8. '' → logprob: -7.319507122039795
    9. '
' → logprob: -7.444507122039795
    10. 'newline' → logprob: -7.444507122039795

Token 67: ' overlap' (ID: 56631)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.0182386636734009
    2. ' main' → logprob: -1.6432386636734009
    3. ' convert' → logprob: -2.2682385444641113
    4. ' schedule' → logprob: -2.6432385444641113
    5. '_' → logprob: -2.8932385444641113
    6. ' process' → logprob: -3.6432385444641113
    7. ' to' → logprob: -3.7682385444641113
    8. ' ' → logprob: -3.7682385444641113
    9. ' time' → logprob: -3.8932385444641113
    10. ' get' → logprob: -4.268238544464111

Token 68: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002581604989245534
    2. '(a' → logprob: -7.127581596374512
    3. '_' → logprob: -7.502581596374512
    4. '(start' → logprob: -8.002581596374512
    5. '(begin' → logprob: -8.627581596374512
    6. '(_' → logprob: -8.877581596374512
    7. '_(' → logprob: -9.752581596374512
    8. '((' → logprob: -10.002581596374512
    9. '_time' → logprob: -10.252581596374512
    10. '(interval' → logprob: -10.377581596374512

Token 69: '_start' (ID: 10949)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005417199805378914
    2. '):' → logprob: -6.130417346954346
    3. ',b' → logprob: -6.255417346954346
    4. ' ,' → logprob: -7.880417346954346
    5. '_,' → logprob: -8.130416870117188
    6. '[' → logprob: -8.880416870117188
    7. '_' → logprob: -9.255416870117188
    8. '1' → logprob: -9.505416870117188
    9. '_start' → logprob: -9.630416870117188
    10. ')' → logprob: -9.755416870117188

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008070098701864481
    2. '_,' → logprob: -7.87580680847168
    3. ' ,' → logprob: -7.87580680847168
    4. ')' → logprob: -11.25080680847168
    5. ',a' → logprob: -12.00080680847168
    6. ',
' → logprob: -12.37580680847168
    7. '_' → logprob: -12.37580680847168
    8. '_start' → logprob: -12.50080680847168
    9. 'a' → logprob: -13.12580680847168
    10. ',start' → logprob: -13.12580680847168

Token 71: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04859304800629616
    2. ' a' → logprob: -3.048593044281006
    3. ')' → logprob: -13.298593521118164
    4. ')a' → logprob: -13.298593521118164
    5. '	a' → logprob: -13.923593521118164
    6. ' ' → logprob: -15.423593521118164
    7. '```' → logprob: -15.673593521118164
    8. '   ' → logprob: -15.673593521118164
    9. '<|end|>' → logprob: -15.798593521118164
    10. '_a' → logprob: -16.048593521118164

Token 72: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00013798571308143437
    2. '_' → logprob: -9.625138282775879
    3. '_finish' → logprob: -10.000138282775879
    4. '_stop' → logprob: -10.875138282775879
    5. 'end' → logprob: -12.375138282775879
    6. '_END' → logprob: -14.000138282775879
    7. ' _' → logprob: -14.250138282775879
    8. '_start' → logprob: -14.500138282775879
    9. ')_' → logprob: -15.625138282775879
    10. '_overlap' → logprob: -16.125137329101562

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. ' ,' → logprob: -10.37503433227539
    3. '):' → logprob: -14.12503433227539
    4. ',
' → logprob: -14.12503433227539
    5. ',a' → logprob: -14.25003433227539
    6. ',

' → logprob: -15.37503433227539
    7. '_,' → logprob: -16.00003433227539
    8. ')' → logprob: -16.00003433227539
    9. ',b' → logprob: -16.00003433227539
    10. 'a' → logprob: -16.75003433227539

Token 74: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03648342192173004
    2. 'b' → logprob: -3.6614835262298584
    3. ' a' → logprob: -4.786483287811279
    4. 'a' → logprob: -6.411483287811279
    5. ' ' → logprob: -8.911483764648438
    6. ' )' → logprob: -12.786483764648438
    7. ' ' → logprob: -13.036483764648438
    8. ')' → logprob: -13.286483764648438
    9. '	b' → logprob: -14.036483764648438
    10. '    ' → logprob: -14.411483764648438

Token 75: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.033798761665821075
    2. '_' → logprob: -3.4087986946105957
    3. ' _' → logprob: -9.408799171447754
    4. '_s' → logprob: -10.658799171447754
    5. ')_' → logprob: -11.158799171447754
    6. 'start' → logprob: -11.658799171447754
    7. '_START' → logprob: -11.658799171447754
    8. ')' → logprob: -12.658799171447754
    9. '_)' → logprob: -13.033799171447754
    10. '_end' → logprob: -13.783799171447754

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3596853831550106e-05
    2. ',b' → logprob: -10.750053405761719
    3. ' ,' → logprob: -10.750053405761719
    4. ')' → logprob: -12.250053405761719
    5. '):' → logprob: -12.500053405761719
    6. ',
' → logprob: -14.250053405761719
    7. ' ' → logprob: -15.250053405761719
    8. '),' → logprob: -15.500053405761719
    9. ',a' → logprob: -15.500053405761719
    10. '‌,' → logprob: -15.750053405761719

Token 77: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2254512459039688
    2. 'b' → logprob: -1.6004512310028076
    3. ' ' → logprob: -11.350451469421387
    4. ')' → logprob: -11.475451469421387
    5. '```' → logprob: -12.350451469421387
    6. ' б' → logprob: -12.975451469421387
    7. 'a' → logprob: -13.725451469421387
    8. '   ' → logprob: -13.850451469421387
    9. ')b' → logprob: -13.850451469421387
    10. ',' → logprob: -14.100451469421387

Token 78: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0010409059468656778
    2. 'end' → logprob: -7.501040935516357
    3. '_' → logprob: -7.751040935516357
    4. ')' → logprob: -10.7510404586792
    5. '_overlap' → logprob: -10.8760404586792
    6. '_END' → logprob: -12.3760404586792
    7. '_start' → logprob: -12.6260404586792
    8. ' end' → logprob: -13.3760404586792
    9. '_)' → logprob: -13.3760404586792
    10. ')_' → logprob: -13.8760404586792

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022205570712685585
    2. ')' → logprob: -6.127220630645752
    3. ' ):' → logprob: -10.502220153808594
    4. ':' → logprob: -12.377220153808594
    5. '):
' → logprob: -12.877220153808594
    6. '   ' → logprob: -14.502220153808594
    7. ',' → logprob: -16.002220153808594
    8. ')：' → logprob: -16.002220153808594
    9. ' ' → logprob: -16.252220153808594
    10. ' )' → logprob: -16.627220153808594

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03672201558947563
    2. ':' → logprob: -3.41172194480896
    3. '(' → logprob: -6.161722183227539
    4. ')' → logprob: -8.161722183227539
    5. ' ' → logprob: -8.536722183227539
    6. '    ' → logprob: -8.661722183227539
    7. '):' → logprob: -9.786722183227539
    8. ':
' → logprob: -10.161722183227539
    9. '  ' → logprob: -10.161722183227539
    10. ' :' → logprob: -10.286722183227539

Token 81: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022086964920163155
    2. ' return' → logprob: -4.272087097167969
    3. 'return' (adapté à ' return') → logprob: -5.147087097167969
    4. '    ' → logprob: -6.272087097167969
    5. ' ' → logprob: -9.022087097167969
    6. '  ' → logprob: -10.772087097167969
    7. '    
' → logprob: -12.022087097167969
    8. ')' → logprob: -12.647087097167969
    9. 'max' → logprob: -12.647087097167969
    10. ' max' → logprob: -12.772087097167969

Token 82: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9464610815048218
    2. ' max' → logprob: -1.4464610815048218
    3. 'a' → logprob: -1.6964610815048218
    4. 'max' → logprob: -2.4464612007141113
    5. ' a' → logprob: -2.8214612007141113
    6. 'not' → logprob: -3.4464612007141113
    7. ' (' → logprob: -5.071461200714111
    8. ' ' → logprob: -6.196461200714111
    9. ' min' → logprob: -6.321461200714111
    10. '(max' → logprob: -6.321461200714111

Token 83: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8699131608009338
    2. ' (' → logprob: -1.119913101196289
    3. '(' → logprob: -1.369913101196289
    4. '(b' → logprob: -7.494913101196289
    5. '(max' → logprob: -11.994913101196289
    6. '((' → logprob: -12.119913101196289
    7. '(
' → logprob: -12.994913101196289
    8. ' ' → logprob: -13.619913101196289
    9. '(end' → logprob: -13.619913101196289
    10. ' (
' → logprob: -14.119913101196289

Token 84: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5815338492393494
    2. ' a' → logprob: -0.8315338492393494
    3. ' b' → logprob: -5.581533908843994
    4. 'b' → logprob: -6.331533908843994
    5. ' ' → logprob: -11.081533432006836
    6. '   ' → logprob: -11.331533432006836
    7. ')' → logprob: -13.456533432006836
    8. '	a' → logprob: -13.456533432006836
    9. '(a' → logprob: -13.956533432006836
    10. '  ' → logprob: -14.331533432006836

Token 85: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.7491250875755213e-05
    2. '_start' → logprob: -11.000027656555176
    3. '_' → logprob: -11.500027656555176
    4. '_e' → logprob: -15.500027656555176
    5. '_

' → logprob: -16.50002670288086
    6. '_END' → logprob: -17.00002670288086
    7. ' _' → logprob: -17.00002670288086
    8. 'end' → logprob: -17.25002670288086
    9. ')_' → logprob: -17.25002670288086
    10. '_max' → logprob: -17.25002670288086

Token 86: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6933505535125732
    2. '<=' → logprob: -0.6933505535125732
    3. '<' → logprob: -8.693350791931152
    4. ' <' → logprob: -10.568350791931152
    5. ' ' → logprob: -11.943350791931152
    6. '```' → logprob: -13.943350791931152
    7. ')<=' → logprob: -14.193350791931152
    8. ')' → logprob: -14.318350791931152
    9. '  ' → logprob: -15.443350791931152
    10. '   ' → logprob: -15.568350791931152

Token 87: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10022716224193573
    2. 'b' → logprob: -2.350227117538452
    3. ' ' → logprob: -11.600227355957031
    4. 'a' → logprob: -11.725227355957031
    5. ' a' → logprob: -13.100227355957031
    6. '	b' → logprob: -14.975227355957031
    7. '  ' → logprob: -15.100227355957031
    8. ')b' → logprob: -15.350227355957031
    9. ' б' → logprob: -16.10022735595703
    10. '_b' → logprob: -16.85022735595703

Token 88: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.250003814697266
    3. ' _' → logprob: -14.250003814697266
    4. 'start' → logprob: -14.375003814697266
    5. '_s' → logprob: -15.625003814697266
    6. '_START' → logprob: -15.875003814697266
    7. ')_' → logprob: -17.000003814697266
    8. '_end' → logprob: -17.500003814697266
    9. ')' → logprob: -17.875003814697266
    10. ''_' → logprob: -18.625003814697266

Token 89: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0002833848411682993
    2. 'or' → logprob: -8.375283241271973
    3. ' ' → logprob: -9.875283241271973
    4. ')' → logprob: -14.250283241271973
    5. '    ' → logprob: -15.125283241271973
    6. '	or' → logprob: -15.875283241271973
    7. '   ' → logprob: -16.12528419494629
    8. ' )' → logprob: -16.62528419494629
    9. '  ' → logprob: -17.25028419494629
    10. ' ' → logprob: -18.00028419494629

Token 90: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3791760504245758
    2. 'a' → logprob: -1.8791760206222534
    3. ' b' → logprob: -2.004176139831543
    4. 'b' → logprob: -3.629176139831543
    5. ' ' → logprob: -6.754176139831543
    6. '   ' → logprob: -8.504176139831543
    7. '    ' → logprob: -9.379176139831543
    8. '	a' → logprob: -9.879176139831543
    9. ')' → logprob: -10.629176139831543
    10. '  ' → logprob: -12.254176139831543

Token 91: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0006506018689833581
    2. '_start' → logprob: -7.750650405883789
    3. '_' → logprob: -8.625650405883789
    4. ' _' → logprob: -10.750650405883789
    5. '<|end|>' → logprob: -11.875650405883789
    6. '_END' → logprob: -12.625650405883789
    7. 'end' → logprob: -13.375650405883789
    8. '._' → logprob: -13.750650405883789
    9. ')_' → logprob: -14.250650405883789
    10. ' ' → logprob: -14.500650405883789

Token 92: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.023249205201864243
    2. '<=' → logprob: -3.7732491493225098
    3. ' ' → logprob: -13.398249626159668
    4. ')<=' → logprob: -14.023249626159668
    5. ' >=' → logprob: -14.273249626159668
    6. ')' → logprob: -15.023249626159668
    7. '<|end|>' → logprob: -15.273249626159668
    8. '  ' → logprob: -16.14824867248535
    9. '>=' → logprob: -16.77324867248535
    10. '   ' → logprob: -17.14824867248535

Token 93: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519982159137726
    2. 'a' → logprob: -1.5019981861114502
    3. ' ' → logprob: -9.876997947692871
    4. '<|end|>' → logprob: -12.126997947692871
    5. '	a' → logprob: -12.251997947692871
    6. '  ' → logprob: -13.001997947692871
    7. '   ' → logprob: -13.126997947692871
    8. ')' → logprob: -13.876997947692871
    9. ')a' → logprob: -14.126997947692871
    10. '_a' → logprob: -14.626997947692871

Token 94: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0008070098701864481
    2. 'start' → logprob: -7.87580680847168
    3. '_end' → logprob: -8.00080680847168
    4. '_' → logprob: -9.37580680847168
    5. '_overlap' → logprob: -13.50080680847168
    6. '_)' → logprob: -13.62580680847168
    7. ')' → logprob: -13.62580680847168
    8. '_star' → logprob: -14.37580680847168
    9. '_START' → logprob: -14.50080680847168
    10. ' start' → logprob: -15.12580680847168

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.250001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')
' → logprob: -17.250001907348633
    5. ')`' → logprob: -18.125001907348633
    6. '())' → logprob: -18.750001907348633
    7. '`)' → logprob: -19.250001907348633
    8. ')))' → logprob: -19.500001907348633
    9. '')' → logprob: -19.500001907348633
    10. '),' → logprob: -19.500001907348633

Token 96: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24356932938098907
    2. '
' → logprob: -1.8685693740844727
    3. '<|end|>' → logprob: -3.1185693740844727
    4. '

' → logprob: -4.243569374084473
    5. '#' → logprob: -6.993569374084473
    6. '```' → logprob: -7.243569374084473
    7. '<|end|>' → logprob: -7.993569374084473
    8. '\n' → logprob: -8.868569374084473
    9. ' 

' → logprob: -8.993569374084473
    10. '  
' → logprob: -8.993569374084473

Token 97: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06784337759017944
    2. ' _' → logprob: -3.942843437194824
    3. ' i' → logprob: -4.067843437194824
    4. ' line' → logprob: -4.192843437194824
    5. ' event' → logprob: -5.442843437194824
    6. ' day' → logprob: -5.442843437194824
    7. ' item' → logprob: -6.692843437194824
    8. ' weekday' → logprob: -7.317843437194824
    9. ' sys' → logprob: -7.317843437194824
    10. ' space' → logprob: -7.942843437194824

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005675395485013723
    2. 'in' → logprob: -5.255675315856934
    3. ' ' → logprob: -7.880675315856934
    4. 's' → logprob: -11.005675315856934
    5. ' i' → logprob: -11.130675315856934
    6. ' =' → logprob: -12.130675315856934
    7. '  ' → logprob: -12.380675315856934
    8. '	in' → logprob: -12.505675315856934
    9. '_' → logprob: -12.755675315856934
    10. '(' → logprob: -13.130675315856934

Token 99: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1002165898680687
    2. 'sys' → logprob: -2.3502166271209717
    3. '	sys' → logprob: -12.10021686553955
    4. '=sys' → logprob: -12.85021686553955
    5. '(sys' → logprob: -13.47521686553955
    6. '```' → logprob: -16.475215911865234
    7. ' ' → logprob: -16.600215911865234
    8. 'stdin' → logprob: -16.600215911865234
    9. 'iter' → logprob: -17.850215911865234
    10. '   ' → logprob: -18.100215911865234

Token 100: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002626669593155384
    2. 'stdin' → logprob: -6.002626895904541
    3. '.' → logprob: -9.877626419067383
    4. '.readline' → logprob: -10.627626419067383
    5. 'in' → logprob: -10.752626419067383
    6. ' stdin' → logprob: -10.877626419067383
    7. '(stdin' → logprob: -11.127626419067383
    8. 'import' → logprob: -11.752626419067383
    9. '.readlines' → logprob: -13.002626419067383
    10. ' in' → logprob: -13.252626419067383

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3636632561683655
    2. '.readline' → logprob: -1.2386631965637207
    3. '.' → logprob: -4.738663196563721
    4. '.readlines' → logprob: -5.488663196563721
    5. '.strip' → logprob: -7.363663196563721
    6. '<|end|>' → logprob: -8.238663673400879
    7. ' in' → logprob: -8.488663673400879
    8. ' :' → logprob: -8.613663673400879
    9. ' .' → logprob: -9.113663673400879
    10. ' readline' → logprob: -9.363663673400879

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032881093211472034
    2. ' if' → logprob: -6.878288269042969
    3. ' line' → logprob: -6.878288269042969
    4. '    
' → logprob: -7.128288269042969
    5. ' lines' → logprob: -8.878288269042969
    6. ' readline' → logprob: -9.253288269042969
    7. ' parts' → logprob: -10.378288269042969
    8. '    ' → logprob: -10.753288269042969
    9. ' data' → logprob: -10.753288269042969
    10. ' input' → logprob: -11.003288269042969

Token 103: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03671649843454361
    2. ' parts' → logprob: -3.9117164611816406
    3. '   ' → logprob: -4.786716461181641
    4. ' if' → logprob: -5.536716461181641
    5. 'line' (adapté à ' line') → logprob: -6.536716461181641
    6. ' fields' → logprob: -7.286716461181641
    7. ' data' → logprob: -7.286716461181641
    8. ' lines' → logprob: -8.91171646118164
    9. ' day' → logprob: -9.28671646118164
    10. ' stripped' → logprob: -9.41171646118164

Token 104: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04925292357802391
    2. ' =' → logprob: -3.049252986907959
    3. '.strip' → logprob: -7.424252986907959
    4. 'strip' → logprob: -10.6742525100708
    5. '=line' → logprob: -11.2992525100708
    6. '.rstrip' → logprob: -11.7992525100708
    7. '_strip' → logprob: -11.9242525100708
    8. 'rstrip' → logprob: -12.4242525100708
    9. '.' → logprob: -12.5492525100708
    10. 's' → logprob: -12.6742525100708

Token 105: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00453657703474164
    2. '.rstrip' → logprob: -5.6295366287231445
    3. '.' → logprob: -7.0045366287231445
    4. '.lower' → logprob: -10.879536628723145
    5. '.split' → logprob: -13.004536628723145
    6. ' .' → logprob: -13.129536628723145
    7. '.replace' → logprob: -13.379536628723145
    8. 'strip' → logprob: -13.754536628723145
    9. ' strip' → logprob: -14.129536628723145
    10. '.trim' → logprob: -14.379536628723145

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010723850573413074
    2. '(' → logprob: -9.375106811523438
    3. '().' → logprob: -12.000106811523438
    4. '()?' → logprob: -13.000106811523438
    5. '()>' → logprob: -13.375106811523438
    6. '()`' → logprob: -13.625106811523438
    7. '()]' → logprob: -13.750106811523438
    8. '()==' → logprob: -13.750106811523438
    9. '();' → logprob: -13.750106811523438
    10. '()"' → logprob: -13.875106811523438

Token 107: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4824104309082031
    2. '   ' → logprob: -0.9824104309082031
    3. 'if' → logprob: -5.607410430908203
    4. '<|end|>' → logprob: -5.732410430908203
    5. ' ' → logprob: -7.607410430908203
    6. '    
' → logprob: -8.482410430908203
    7. ',' → logprob: -8.857410430908203
    8. '<|end|>' → logprob: -8.982410430908203
    9. '  
' → logprob: -9.482410430908203
    10. '  ' → logprob: -9.982410430908203

Token 108: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5759552121162415
    2. 'if' (adapté à ' if') → logprob: -0.8259552121162415
    3. 'i' → logprob: -11.950955390930176
    4. '   ' → logprob: -11.950955390930176
    5. ' i' → logprob: -13.450955390930176
    6. '```' → logprob: -15.450955390930176
    7. ' parts' → logprob: -15.450955390930176
    8. ' ' → logprob: -15.575955390930176
    9. '[' → logprob: -15.825955390930176
    10. '	if' → logprob: -16.07595443725586

Token 109: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023827441036701202
    2. ' line' → logprob: -3.77382755279541
    3. ' ' → logprob: -7.64882755279541
    4. 'not' → logprob: -9.27382755279541
    5. 'line' → logprob: -12.39882755279541
    6. ' len' → logprob: -12.64882755279541
    7. ' ' → logprob: -12.89882755279541
    8. ' no' → logprob: -14.64882755279541
    9. '	line' → logprob: -15.77382755279541
    10. '	not' → logprob: -15.77382755279541

Token 110: '=='' (ID: 20651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02354954183101654
    2. '==' → logprob: -3.7735495567321777
    3. '.startswith' → logprob: -8.14854907989502
    4. ' ' → logprob: -12.39854907989502
    5. '()==' → logprob: -13.52354907989502
    6. ' =="' → logprob: -13.52354907989502
    7. '.endswith' → logprob: -13.64854907989502
    8. '=="' → logprob: -13.89854907989502
    9. '.' → logprob: -14.14854907989502
    10. 'startswith' → logprob: -14.27354907989502

Token 111: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.11993627995252609
    2. 'END' → logprob: -2.494936227798462
    3. ''' → logprob: -3.869936227798462
    4. '''' → logprob: -6.744936466217041
    5. '#' → logprob: -6.744936466217041
    6. '":' → logprob: -6.869936466217041
    7. ''):' → logprob: -7.119936466217041
    8. '"":' → logprob: -7.119936466217041
    9. '```' → logprob: -7.369936466217041
    10. 'end' → logprob: -7.494936466217041

Token 112: '':
' (ID: 7669)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4329164922237396
    2. '0' → logprob: -1.182916522026062
    3. '':' → logprob: -3.1829164028167725
    4. '00' → logprob: -7.432916641235352
    5. ':' → logprob: -7.682916641235352
    6. '":' → logprob: -7.932916641235352
    7. ''' → logprob: -8.057916641235352
    8. '<|end|>' → logprob: -8.557916641235352
    9. '<|end|>' → logprob: -8.557916641235352
    10. ' quit' → logprob: -8.682916641235352

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06246122717857361
    2. '   ' → logprob: -2.8124611377716064
    3. ' break' → logprob: -8.187460899353027
    4. ' ' → logprob: -10.187460899353027
    5. '     ' → logprob: -10.312460899353027
    6. '    ' → logprob: -10.437460899353027
    7. '  ' → logprob: -10.812460899353027
    8. '      ' → logprob: -10.812460899353027
    9. '<|end|>' → logprob: -11.062460899353027
    10. '
' → logprob: -11.312460899353027

Token 114: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05270393565297127
    2. '   ' → logprob: -3.552703857421875
    3. 'break' (adapté à ' break') → logprob: -3.802703857421875
    4. '	break' → logprob: -8.302703857421875
    5. '       ' → logprob: -8.927703857421875
    6. ' ' → logprob: -14.677703857421875
    7. '```' → logprob: -15.427703857421875
    8. '_break' → logprob: -15.802703857421875
    9. '   ' → logprob: -15.927703857421875
    10. '-break' → logprob: -16.177703857421875

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.360565721988678
    2. '    
' → logprob: -1.2355656623840332
    3. '
' → logprob: -5.110565662384033
    4. '<|end|>' → logprob: -5.485565662384033
    5. '  
' → logprob: -7.485565662384033
    6. '   
' → logprob: -7.735565662384033
    7. ' 
' → logprob: -8.735566139221191
    8. '	
' → logprob: -8.985566139221191
    9. '     
' → logprob: -9.110566139221191
    10. '<|end|>' → logprob: -9.235566139221191

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02406487800180912
    2. '    
' → logprob: -3.774064779281616
    3. '
' → logprob: -7.399065017700195
    4. '  
' → logprob: -9.274065017700195
    5. '   
' → logprob: -10.149065017700195
    6. '        
' → logprob: -11.024065017700195
    7. '  ' → logprob: -11.899065017700195
    8. ' ' → logprob: -12.149065017700195
    9. 'tokens' → logprob: -12.399065017700195
    10. '```' → logprob: -12.399065017700195

Token 117: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4460304081439972
    2. ' parts' → logprob: -1.3210303783416748
    3. ' n' → logprob: -3.071030378341675
    4. ' schedule' → logprob: -4.446030616760254
    5. 'n' → logprob: -5.071030616760254
    6. ' slots' → logprob: -5.196030616760254
    7. ' days' → logprob: -5.321030616760254
    8. ' fields' → logprob: -5.821030616760254
    9. '    
' → logprob: -6.071030616760254
    10. 'parts' → logprob: -6.321030616760254

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05518454313278198
    2. '=' → logprob: -2.9301846027374268
    3. ',' → logprob: -8.430184364318848
    4. '=int' → logprob: -10.055184364318848
    5. ' ' → logprob: -10.305184364318848
    6. ' ,' → logprob: -12.680184364318848
    7. ' =
' → logprob: -13.805184364318848
    8. ')' → logprob: -13.805184364318848
    9. '    ' → logprob: -13.930184364318848
    10. ' =)' → logprob: -14.555184364318848

Token 119: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269388198852539
    2. ' int' → logprob: -2.126938819885254
    3. '[int' → logprob: -12.001938819885254
    4. '=int' → logprob: -12.751938819885254
    5. '<int' → logprob: -14.501938819885254
    6. '	int' → logprob: -14.626938819885254
    7. '(int' → logprob: -15.001938819885254
    8. '  ' → logprob: -15.751938819885254
    9. ']int' → logprob: -15.751938819885254
    10. ' ' → logprob: -15.876938819885254

Token 120: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. '(Line' → logprob: -18.000431060791016
    4. ' line' → logprob: -18.250431060791016
    5. '[line' → logprob: -18.375431060791016
    6. 'line' → logprob: -18.375431060791016
    7. '=line' → logprob: -18.625431060791016
    8. '#line' → logprob: -18.625431060791016
    9. '(lines' → logprob: -19.000431060791016
    10. '(
' → logprob: -19.750431060791016

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8908587662735954e-05
    2. '<|end|>' → logprob: -11.750019073486328
    3. ')
' → logprob: -12.125019073486328
    4. ' )' → logprob: -12.500019073486328
    5. '   ' → logprob: -14.000019073486328
    6. ')>' → logprob: -15.750019073486328
    7. '<|end|>' → logprob: -15.750019073486328
    8. ' ' → logprob: -16.125019073486328
    9. '#' → logprob: -16.500019073486328
    10. '),' → logprob: -16.625019073486328

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1172921285033226
    2. ' schedules' → logprob: -2.8672921657562256
    3. '    
' → logprob: -3.6172921657562256
    4. ' schedule' → logprob: -4.3672919273376465
    5. '
' → logprob: -5.3672919273376465
    6. '   
' → logprob: -6.4922919273376465
    7. ' slots' → logprob: -6.9922919273376465
    8. ' events' → logprob: -7.1172919273376465
    9. '    ' → logprob: -7.1172919273376465
    10. '  ' → logprob: -7.2422919273376465

Token 123: ' programs' (ID: 8094)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.997158944606781
    2. 'interval' → logprob: -2.122159004211426
    3. 'schedule' → logprob: -2.247159004211426
    4. ' intervals' → logprob: -2.747159004211426
    5. 'slots' → logprob: -2.997159004211426
    6. ' schedule' → logprob: -3.247159004211426
    7. 'times' → logprob: -3.622159004211426
    8. 'bus' → logprob: -3.622159004211426
    9. ' schedules' → logprob: -3.747159004211426
    10. ' events' → logprob: -4.122159004211426

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022813379764556885
    2. '=' → logprob: -6.127281188964844
    3. '=[]' → logprob: -9.377281188964844
    4. ' ' → logprob: -12.502281188964844
    5. '[]' → logprob: -13.377281188964844
    6. 's' → logprob: -13.502281188964844
    7. '[' → logprob: -14.002281188964844
    8. ',' → logprob: -14.127281188964844
    9. ' =[' → logprob: -14.502281188964844
    10. '   ' → logprob: -14.627281188964844

Token 125: ' {}
' (ID: 11421)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2014147937297821
    2. '[]' → logprob: -1.7014148235321045
    3. ' [' → logprob: -13.951415061950684
    4. '[' → logprob: -14.826415061950684
    5. ' []
' → logprob: -16.201414108276367
    6. '[]}' → logprob: -16.576414108276367
    7. '[]
' → logprob: -17.451414108276367
    8. '[]>' → logprob: -17.701414108276367
    9. '{}' → logprob: -18.701414108276367
    10. ' []

' → logprob: -18.826414108276367

Token 126: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6745119690895081
    2. 'for' → logprob: -0.9245119690895081
    3. '   ' → logprob: -2.4245119094848633
    4. '
' → logprob: -5.549511909484863
    5. '<|end|>' → logprob: -6.924511909484863
    6. '    
' → logprob: -8.299511909484863
    7. '	for' → logprob: -9.424511909484863
    8. ' 
' → logprob: -9.799511909484863
    9. ' ' → logprob: -10.424511909484863
    10. '  
' → logprob: -11.424511909484863

Token 127: ' times' (ID: 4238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025217996444553137
    2. ' for' → logprob: -6.002521991729736
    3. 'current' → logprob: -11.002521514892578
    4. 'day' → logprob: -11.252521514892578
    5. 'valid' → logprob: -12.502521514892578
    6. 'days' → logprob: -12.877521514892578
    7. '   ' → logprob: -13.252521514892578
    8. 'start' → logprob: -13.627521514892578
    9. 'over' → logprob: -14.002521514892578
    10. 'i' → logprob: -14.377521514892578

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06390967220067978
    2. '=' → logprob: -2.8139097690582275
    3. '   ' → logprob: -7.438909530639648
    4. ' ' → logprob: -8.313909530639648
    5. '=[]' → logprob: -8.313909530639648
    6. '[]' → logprob: -8.313909530639648
    7. '  ' → logprob: -9.188909530639648
    8. '_' → logprob: -9.188909530639648
    9. '[' → logprob: -9.313909530639648
    10. 'for' → logprob: -10.313909530639648

Token 129: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06206280738115311
    2. ' []' → logprob: -2.8120627403259277
    3. 'set' → logprob: -10.062063217163086
    4. '{}' → logprob: -10.437063217163086
    5. '[' → logprob: -11.187063217163086
    6. ' set' → logprob: -12.437063217163086
    7. '[]
' → logprob: -13.187063217163086
    8. '[]}' → logprob: -13.437063217163086
    9. '[][]' → logprob: -15.312063217163086
    10. '[]

' → logprob: -15.437063217163086

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5823395252227783
    2. 'for' → logprob: -1.2073395252227783
    3. ' for' → logprob: -1.9573395252227783
    4. '<|end|>' → logprob: -7.082339286804199
    5. '	for' → logprob: -8.5823392868042
    6. '    
' → logprob: -9.2073392868042
    7. '
' → logprob: -10.5823392868042
    8. ' ' → logprob: -11.9573392868042
    9. '<|end|>' → logprob: -12.0823392868042
    10. '    ' → logprob: -12.3323392868042

Token 131: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009164590737782419
    2. ' for' → logprob: -7.000916481018066
    3. '   ' → logprob: -12.250916481018066
    4. '	for' → logprob: -15.625916481018066
    5. '    
' → logprob: -17.75091552734375
    6. '
' → logprob: -18.37591552734375
    7. ' 
' → logprob: -18.87591552734375
    8. ' ' → logprob: -19.00091552734375
    9. '  ' → logprob: -19.25091552734375
    10. '    ' → logprob: -19.87591552734375

Token 132: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6932990550994873
    2. ' _' → logprob: -0.6932990550994873
    3. ' i' → logprob: -8.943299293518066
    4. '_i' → logprob: -10.818299293518066
    5. 'i' → logprob: -13.693299293518066
    6. ' ' → logprob: -16.06829833984375
    7. ' ' → logprob: -17.44329833984375
    8. '_program' → logprob: -17.69329833984375
    9. '  ' → logprob: -19.19329833984375
    10. '   ' → logprob: -19.44329833984375

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0020019153598695993
    2. 'in' → logprob: -6.252001762390137
    3. ' ' → logprob: -10.377001762390137
    4. 'range' → logprob: -11.127001762390137
    5. ' _' → logprob: -11.252001762390137
    6. ' i' → logprob: -11.752001762390137
    7. 'i' → logprob: -12.252001762390137
    8. ' range' → logprob: -14.252001762390137
    9. 's' → logprob: -15.627001762390137
    10. 'n' → logprob: -15.877001762390137

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. '	range' → logprob: -15.631715774536133
    4. ' ' → logprob: -16.256715774536133
    5. '(range' → logprob: -16.381715774536133
    6. 'ran' → logprob: -17.006715774536133
    7. 'program' → logprob: -17.006715774536133
    8. 'rang' → logprob: -17.381715774536133
    9. 'r' → logprob: -18.381715774536133
    10. '  ' → logprob: -18.506715774536133

Token 135: '(N' (ID: 10564)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.08511058986186981
    2. 'N' → logprob: -3.210110664367676
    3. '(N' → logprob: -3.210110664367676
    4. '(' → logprob: -7.835110664367676
    5. ' (' → logprob: -8.210110664367676
    6. ' ' → logprob: -8.710110664367676
    7. ' range' → logprob: -10.335110664367676
    8. 'range' → logprob: -12.085110664367676
    9. '<|end|>' → logprob: -12.085110664367676
    10. '	N' → logprob: -12.960110664367676

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007176140323281288
    2. '):
' → logprob: -5.132175922393799
    3. ':' → logprob: -7.257175922393799
    4. ' ):' → logprob: -7.632175922393799
    5. ')' → logprob: -10.507176399230957
    6. ' ):
' → logprob: -11.757176399230957
    7. '   ' → logprob: -11.882176399230957
    8. ',' → logprob: -12.007176399230957
    9. '():' → logprob: -13.007176399230957
    10. ' )' → logprob: -13.632176399230957

Token 137: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24457992613315582
    2. ' line' → logprob: -1.6195799112319946
    3. '       ' → logprob: -3.994580030441284
    4. '	line' → logprob: -8.494580268859863
    5. 'line' → logprob: -9.494580268859863
    6. '   ' → logprob: -10.119580268859863
    7. ' parts' → logprob: -10.119580268859863
    8. '    
' → logprob: -10.369580268859863
    9. ' lines' → logprob: -10.619580268859863
    10. ' program' → logprob: -10.994580268859863

Token 138: ' name' (ID: 1308)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.528976321220398
    2. ' parts' → logprob: -1.278976321220398
    3. ' data' → logprob: -2.5289764404296875
    4. ' entry' → logprob: -4.1539764404296875
    5. ' program' → logprob: -4.5289764404296875
    6. 'data' → logprob: -5.5289764404296875
    7. ' name' → logprob: -5.7789764404296875
    8. ' day' → logprob: -5.7789764404296875
    9. ' s' → logprob: -5.9039764404296875
    10. 'line' → logprob: -6.2789764404296875

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027045428287237883
    2. ' =' → logprob: -7.127704620361328
    3. ',time' → logprob: -7.252704620361328
    4. '=' → logprob: -7.377704620361328
    5. ',start' → logprob: -8.877704620361328
    6. ' ,' → logprob: -8.877704620361328
    7. ',line' → logprob: -8.877704620361328
    8. ',end' → logprob: -10.627704620361328
    9. '=line' → logprob: -11.002704620361328
    10. ',date' → logprob: -11.377704620361328

Token 140: ' wd' (ID: 86414)
  Prédit: 'weekday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weekday' → logprob: -0.9404821395874023
    2. 'day' → logprob: -1.6904821395874023
    3. ' day' → logprob: -1.9404821395874023
    4. ' weekday' → logprob: -2.5654821395874023
    5. 'start' → logprob: -2.9404821395874023
    6. ' start' → logprob: -3.3154821395874023
    7. 'dow' → logprob: -4.315482139587402
    8. 'd' → logprob: -4.565482139587402
    9. ' days' → logprob: -4.815482139587402
    10. 'days' → logprob: -4.815482139587402

Token 141: ',' (ID: 11)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.2825264632701874
    2. ',' → logprob: -1.4075264930725098
    3. 'ays' → logprob: -7.03252649307251
    4. ',start' → logprob: -8.407526016235352
    5. '_str' → logprob: -10.032526016235352
    6. '_,' → logprob: -10.157526016235352
    7. ' ,' → logprob: -10.157526016235352
    8. 'start' → logprob: -11.157526016235352
    9. ',_' → logprob: -11.157526016235352
    10. 'atetime' → logprob: -11.532526016235352

Token 142: ' st' (ID: 420)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09944598376750946
    2. 'st' → logprob: -3.3494460582733154
    3. 'time' → logprob: -3.7244460582733154
    4. 'sh' → logprob: -3.8494460582733154
    5. ' start' → logprob: -5.099445819854736
    6. 'stime' → logprob: -5.474445819854736
    7. 'sd' → logprob: -6.599445819854736
    8. 's' → logprob: -6.974445819854736
    9. ' time' → logprob: -7.974445819854736
    10. ' st' → logprob: -7.974445819854736

Token 143: ' =' (ID: 314)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.002289067953824997
    2. 'r' → logprob: -6.627289295196533
    3. ',' → logprob: -7.002289295196533
    4. 'rt' → logprob: -11.002288818359375
    5. 'ring' → logprob: -11.502288818359375
    6. 'ar' → logprob: -11.877288818359375
    7. ' =' → logprob: -12.127288818359375
    8. 'arth' → logprob: -12.502288818359375
    9. 'arts' → logprob: -13.127288818359375
    10. 'ate' → logprob: -13.377288818359375

Token 144: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2148081064224243
    2. ' input' → logprob: -1.2148081064224243
    3. ' sys' → logprob: -1.2148081064224243
    4. 'sys' → logprob: -2.2148079872131348
    5. 'line' → logprob: -8.214808464050293
    6. ' line' → logprob: -8.339808464050293
    7. ' ' → logprob: -12.214808464050293
    8. 'map' → logprob: -12.464808464050293
    9. ' map' → logprob: -13.214808464050293
    10. '=sys' → logprob: -13.339808464050293

Token 145: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.085517113911919e-05
    2. '.stdout' → logprob: -10.62505054473877
    3. '.argv' → logprob: -11.12505054473877
    4. 'stdin' → logprob: -11.87505054473877
    5. '.' → logprob: -12.50005054473877
    6. '.readline' → logprob: -14.87505054473877
    7. 'in' → logprob: -15.37505054473877
    8. 'd' → logprob: -15.50005054473877
    9. '.std' → logprob: -15.62505054473877
    10. 'din' → logprob: -16.625051498413086

Token 146: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4974866644479334e-05
    2. '.' → logprob: -11.125015258789062
    3. '().' → logprob: -16.125015258789062
    4. '.next' → logprob: -17.250015258789062
    5. '.readlines' → logprob: -18.125015258789062
    6. '.stdin' → logprob: -19.000015258789062
    7. '.fetchone' → logprob: -19.250015258789062
    8. '```' → logprob: -19.375015258789062
    9. '.rstrip' → logprob: -19.625015258789062
    10. '.read' → logprob: -19.750015258789062

Token 147: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006285638664849102
    2. '()' → logprob: -7.375628471374512
    3. '.split' → logprob: -14.500628471374512
    4. '.strip' → logprob: -14.750628471374512
    5. '.readline' → logprob: -15.250628471374512
    6. '.rstrip' → logprob: -15.250628471374512
    7. '()
' → logprob: -15.500628471374512
    8. '()).' → logprob: -16.000629425048828
    9. '()

' → logprob: -16.625629425048828
    10. '.' → logprob: -17.000629425048828

Token 148: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1010330393910408
    2. 'split' → logprob: -2.3510329723358154
    3. 'rstrip' → logprob: -7.1010332107543945
    4. ' strip' → logprob: -13.601033210754395
    5. ' split' → logprob: -14.851033210754395
    6. '(split' → logprob: -16.351032257080078
    7. '(strip' → logprob: -17.351032257080078
    8. 'rs' → logprob: -18.101032257080078
    9. 'read' → logprob: -18.226032257080078
    10. 'decode' → logprob: -18.351032257080078

Token 149: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03877076134085655
    2. '(' → logprob: -3.2887706756591797
    3. '('' → logprob: -7.28877067565918
    4. '(),' → logprob: -11.91377067565918
    5. '(
' → logprob: -12.03877067565918
    6. '()
' → logprob: -12.16377067565918
    7. '();' → logprob: -12.16377067565918
    8. '(',' → logprob: -12.53877067565918
    9. '(','' → logprob: -13.03877067565918
    10. '())' → logprob: -13.28877067565918

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0889885425567627
    2. '<|end|>' → logprob: -3.0889885425567627
    3. '   ' → logprob: -3.9639885425567627
    4. ' ' → logprob: -5.088988304138184
    5. '        
' → logprob: -5.338988304138184
    6. '  ' → logprob: -5.963988304138184
    7. '
' → logprob: -6.338988304138184
    8. '        ' → logprob: -6.588988304138184
    9. ',' → logprob: -7.213988304138184
    10. '    
' → logprob: -7.713988304138184

Token 151: ' wd' (ID: 86414)
  Prédit: 'wd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wd' (adapté à ' wd') → logprob: -0.3577456772327423
    2. ' wd' → logprob: -1.23274564743042
    3. 'weekday' → logprob: -5.48274564743042
    4. ' programs' → logprob: -6.10774564743042
    5. 'day' → logprob: -7.48274564743042
    6. 'w' → logprob: -7.60774564743042
    7. ' weekday' → logprob: -7.85774564743042
    8. 'program' → logprob: -7.98274564743042
    9. ' day' → logprob: -8.232746124267578
    10. 'week' → logprob: -8.607746124267578

Token 152: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3147226572036743
    2. ' =' → logprob: -1.3147226572036743
    3. '=int' → logprob: -6.564722537994385
    4. ',' → logprob: -10.314723014831543
    5. ')' → logprob: -12.064723014831543
    6. ' ' → logprob: -12.564723014831543
    7. 'int' → logprob: -13.064723014831543
    8. '<|end|>' → logprob: -13.564723014831543
    9. '   ' → logprob: -14.689723014831543
    10. '=}' → logprob: -14.814723014831543

Token 153: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.2664456789934775e-06
    2. 'wd' → logprob: -14.250000953674316
    3. 'w' → logprob: -15.125000953674316
    4. '(' → logprob: -15.875000953674316
    5. ')' → logprob: -17.875001907348633
    6. '
' → logprob: -19.000001907348633
    7. '```' → logprob: -19.000001907348633
    8. '(
' → logprob: -19.750001907348633
    9. '	w' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.000001907348633

Token 154: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.537868779967539e-06
    2. ')' → logprob: -12.750008583068848
    3. ')d' → logprob: -12.875008583068848
    4. '<|end|>' → logprob: -13.750008583068848
    5. 'D' → logprob: -13.875008583068848
    6. 'д' → logprob: -15.250008583068848
    7. '_d' → logprob: -15.375008583068848
    8. ' d' → logprob: -15.500008583068848
    9. '[' → logprob: -15.875008583068848
    10. ' ' → logprob: -16.00000762939453

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032076577190309763
    2. ')
' → logprob: -5.753207683563232
    3. ' )' → logprob: -11.253207206726074
    4. '<|end|>' → logprob: -11.253207206726074
    5. ')

' → logprob: -14.253207206726074
    6. '   ' → logprob: -14.503207206726074
    7. '),' → logprob: -14.753207206726074
    8. ')return' → logprob: -14.753207206726074
    9. '<|end|>' → logprob: -15.128207206726074
    10. ',' → logprob: -15.253207206726074

Token 156: '       ' (ID: 309)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.004024018533527851
    2. ' st' → logprob: -5.879024028778076
    3. '       ' → logprob: -6.754024028778076
    4. '	st' → logprob: -10.254023551940918
    5. 'start' → logprob: -11.504023551940918
    6. '   ' → logprob: -12.379023551940918
    7. '
' → logprob: -13.629023551940918
    8. '           ' → logprob: -14.629023551940918
    9. ' ' → logprob: -15.504023551940918
    10. '_st' → logprob: -16.254024505615234

Token 157: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' (adapté à ' st') → logprob: -2.570319702499546e-05
    2. ' st' → logprob: -10.875025749206543
    3. 'start' → logprob: -12.125025749206543
    4. '
' → logprob: -13.625025749206543
    5. '   ' → logprob: -18.250024795532227
    6. '       ' → logprob: -18.625024795532227
    7. ' ' → logprob: -19.125024795532227
    8. '
' → logprob: -19.250024795532227
    9. '	st' → logprob: -19.250024795532227
    10. 'if' → logprob: -19.500024795532227

Token 158: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696915864944458
    2. '=int' → logprob: -2.1269690990448
    3. '=
' → logprob: -11.376969337463379
    4. 'int' → logprob: -11.376969337463379
    5. ' =' → logprob: -11.501969337463379
    6. '=

' → logprob: -12.626969337463379
    7. '=}' → logprob: -13.501969337463379
    8. '=_' → logprob: -14.001969337463379
    9. ')' → logprob: -14.126969337463379
    10. ')=' → logprob: -14.376969337463379

Token 159: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -5.319370302458992e-06
    2. 'st' → logprob: -12.250005722045898
    3. '	st' → logprob: -15.750005722045898
    4. '(' → logprob: -16.6250057220459
    5. ')' → logprob: -17.0000057220459
    6. '/st' → logprob: -17.2500057220459
    7. ')(' → logprob: -17.8750057220459
    8. '(
' → logprob: -18.0000057220459
    9. ' st' → logprob: -18.1250057220459
    10. '```' → logprob: -18.1250057220459

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019348275382071733
    2. ')
' → logprob: -6.251935005187988
    3. ' )' → logprob: -12.751935005187988
    4. '   ' → logprob: -14.126935005187988
    5. ')
' → logprob: -14.251935005187988
    6. ')

' → logprob: -14.376935005187988
    7. '       ' → logprob: -14.876935005187988
    8. ' ' → logprob: -15.626935005187988
    9. '))' → logprob: -16.251934051513672
    10. ')**' → logprob: -16.251934051513672

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03041098639369011
    2. '   ' → logprob: -3.6554110050201416
    3. ' times' → logprob: -6.0304107666015625
    4. 'times' → logprob: -7.7804107666015625
    5. '<|end|>' → logprob: -8.155410766601562
    6. '
' → logprob: -8.405410766601562
    7. '        
' → logprob: -8.780410766601562
    8. ')' → logprob: -9.030410766601562
    9. '    
' → logprob: -9.155410766601562
    10. '    ' → logprob: -9.405410766601562

Token 162: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3962109684944153
    2. ' start' → logprob: -1.1462109088897705
    3. 'end' → logprob: -5.77121114730835
    4. ' end' → logprob: -6.14621114730835
    5. '   ' → logprob: -6.64621114730835
    6. ' programs' → logprob: -7.02121114730835
    7. 'time' → logprob: -8.146210670471191
    8. 'program' → logprob: -8.396210670471191
    9. ' time' → logprob: -8.521210670471191
    10. 's' → logprob: -8.646210670471191

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576029360294342
    2. '=' → logprob: -0.826029360294342
    3. ')' → logprob: -9.701029777526855
    4. '<|end|>' → logprob: -11.826029777526855
    5. '_minutes' → logprob: -11.826029777526855
    6. '_' → logprob: -12.826029777526855
    7. '_time' → logprob: -13.326029777526855
    8. 'to' → logprob: -13.951029777526855
    9. '_tokens' → logprob: -13.951029777526855
    10. 's' → logprob: -14.076029777526855

Token 164: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07888978719711304
    2. ' to' → logprob: -2.578889846801758
    3. '	to' → logprob: -19.703889846801758
    4. ' ' → logprob: -20.328889846801758
    5. '(to' → logprob: -21.203889846801758
    6. '[to' → logprob: -22.453889846801758
    7. 't' → logprob: -22.703889846801758
    8. ' ' → logprob: -22.828889846801758
    9. '   ' → logprob: -23.328889846801758
    10. '_to' → logprob: -23.453889846801758

Token 165: '_minutes' (ID: 174025)
  Prédit: '_minutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_minutes' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -12.875003814697266
    3. '_min' → logprob: -14.500003814697266
    4. '_seconds' → logprob: -14.625003814697266
    5. 'minutes' → logprob: -15.625003814697266
    6. ' _' → logprob: -15.750003814697266
    7. '_m' → logprob: -16.250003814697266
    8. '_days' → logprob: -17.250003814697266
    9. '```' → logprob: -17.375003814697266
    10. '_letters' → logprob: -17.750003814697266

Token 166: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.250001907348633
    3. 'wd' → logprob: -14.500001907348633
    4. '(
' → logprob: -18.250001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '((' → logprob: -19.000001907348633
    7. '(day' → logprob: -19.000001907348633
    8. ' wd' → logprob: -19.375001907348633
    9. ' ' → logprob: -20.250001907348633
    10. '(st' → logprob: -20.250001907348633

Token 167: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.6312321753939614e-05
    2. ',' → logprob: -11.125036239624023
    3. 'e' → logprob: -11.375036239624023
    4. 'day' → logprob: -12.875036239624023
    5. ',d' → logprob: -13.750036239624023
    6. 'weekday' → logprob: -13.875036239624023
    7. ')d' → logprob: -14.125036239624023
    8. 'д' → logprob: -14.250036239624023
    9. ' d' → logprob: -14.250036239624023
    10. ')' → logprob: -14.500036239624023

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',
' → logprob: -14.500004768371582
    4. ',start' → logprob: -14.625004768371582
    5. '(st' → logprob: -17.1250057220459
    6. '',' → logprob: -18.3750057220459
    7. '‌,' → logprob: -18.3750057220459
    8. '_,' → logprob: -18.5000057220459
    9. '1' → logprob: -18.5000057220459
    10. ')' → logprob: -18.5000057220459

Token 169: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -4.36574100604048e-06
    2. ' st' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.500003814697266
    4. '
' → logprob: -17.625003814697266
    5. ')' → logprob: -17.750003814697266
    6. '(st' → logprob: -18.000003814697266
    7. '	st' → logprob: -18.250003814697266
    8. ' ' → logprob: -18.625003814697266
    9. 'int' → logprob: -19.250003814697266
    10. '```' → logprob: -19.250003814697266

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -16.250003814697266
    4. ')

' → logprob: -17.000003814697266
    5. ')`' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '))' → logprob: -18.750003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')
' → logprob: -19.000003814697266
    10. ')**' → logprob: -19.250003814697266

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016887469682842493
    2. 'times' → logprob: -7.1266889572143555
    3. '   ' → logprob: -7.8766889572143555
    4. ' times' → logprob: -8.001688957214355
    5. '<|end|>' → logprob: -9.001688957214355
    6. '        
' → logprob: -10.626688957214355
    7. ',' → logprob: -12.751688957214355
    8. ')' → logprob: -12.876688957214355
    9. ' programs' → logprob: -13.001688957214355
    10. 'program' → logprob: -13.126688957214355

Token 172: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.24963977932929993
    2. 'program' → logprob: -1.8746397495269775
    3. 'times' → logprob: -2.9996397495269775
    4. '#' → logprob: -5.374639987945557
    5. ' programs' → logprob: -5.499639987945557
    6. 'if' → logprob: -5.499639987945557
    7. ' end' → logprob: -5.999639987945557
    8. '       ' → logprob: -6.749639987945557
    9. '   ' → logprob: -7.624639987945557
    10. ' times' → logprob: -8.374639511108398

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38716644048690796
    2. '=' → logprob: -1.1371665000915527
    3. '_' → logprob: -8.387166023254395
    4. '<|end|>' → logprob: -10.762166023254395
    5. ' ' → logprob: -11.137166023254395
    6. ',' → logprob: -11.387166023254395
    7. ')' → logprob: -11.637166023254395
    8. '<|end|>' → logprob: -13.012166023254395
    9. '_=' → logprob: -13.137166023254395
    10. 'space' → logprob: -13.887166023254395

Token 174: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.35432127118110657
    2. ' start' → logprob: -1.2293212413787842
    3. 'to' → logprob: -5.604321479797363
    4. ' to' → logprob: -6.229321479797363
    5. ' ' → logprob: -9.229321479797363
    6. ' (' → logprob: -10.854321479797363
    7. '(start' → logprob: -11.104321479797363
    8. '  ' → logprob: -11.729321479797363
    9. ' None' → logprob: -11.854321479797363
    10. 'None' → logprob: -11.854321479797363

Token 175: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14964409172534943
    2. '+' → logprob: -2.024644136428833
    3. '<|end|>' → logprob: -5.024643898010254
    4. '<|end|>' → logprob: -8.774643898010254
    5. ' +
' → logprob: -9.024643898010254
    6. '+
' → logprob: -10.399643898010254
    7. ' ' → logprob: -11.024643898010254
    8. ' +=' → logprob: -11.274643898010254
    9. ' =' → logprob: -11.399643898010254
    10. '
' → logprob: -12.274643898010254

Token 176: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.5347684621810913
    2. '60' → logprob: -1.2847684621810913
    3. ' ' → logprob: -3.159768581390381
    4. '90' → logprob: -3.409768581390381
    5. '144' → logprob: -4.034768581390381
    6. '120' → logprob: -4.659768581390381
    7. '1' → logprob: -4.909768581390381
    8. '10' → logprob: -5.034768581390381
    9. '180' → logprob: -5.534768581390381
    10. '45' → logprob: -5.534768581390381

Token 177: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.5104508399963379
    2. '60' → logprob: -1.010450839996338
    3. '90' → logprob: -4.635450839996338
    4. '120' → logprob: -5.135450839996338
    5. '144' → logprob: -5.760450839996338
    6. '180' → logprob: -5.885450839996338
    7. '1' → logprob: -6.010450839996338
    8. '45' → logprob: -6.135450839996338
    9. '10' → logprob: -6.385450839996338
    10. '15' → logprob: -6.510450839996338

Token 178: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5329728722572327
    2. '<|end|>' → logprob: -0.9079728722572327
    3. '   ' → logprob: -5.782972812652588
    4. '<|end|>' → logprob: -6.157972812652588
    5. '\n' → logprob: -6.407972812652588
    6. '    
' → logprob: -7.407972812652588
    7. ' 
' → logprob: -7.657972812652588
    8. '  
' → logprob: -7.907972812652588
    9. '       ' → logprob: -8.032973289489746
    10. ' ' → logprob: -8.032973289489746

Token 179: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03764800727367401
    2. '
' → logprob: -3.5376479625701904
    3. ' times' → logprob: -5.6626482009887695
    4. 'times' → logprob: -5.9126482009887695
    5. ')' → logprob: -7.4126482009887695
    6. '    
' → logprob: -8.03764820098877
    7. ' if' → logprob: -8.16264820098877
    8. ')
' → logprob: -8.91264820098877
    9. '       ' → logprob: -9.03764820098877
    10. '<|end|>' → logprob: -9.28764820098877

Token 180: ' programs' (ID: 8094)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30779558420181274
    2. 'times' → logprob: -1.807795524597168
    3. 'while' → logprob: -3.557795524597168
    4. 'for' → logprob: -4.057795524597168
    5. 'program' → logprob: -4.057795524597168
    6. '   ' → logprob: -4.182795524597168
    7. ' if' → logprob: -4.307795524597168
    8. ' times' → logprob: -5.307795524597168
    9. ' programs' → logprob: -6.807795524597168
    10. ' while' → logprob: -6.807795524597168

Token 181: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.03875596448779106
    2. '.setdefault' → logprob: -3.4137558937072754
    3. '[' → logprob: -5.288755893707275
    4. 'name' → logprob: -11.288756370544434
    5. '[start' → logprob: -11.663756370544434
    6. '[end' → logprob: -12.788756370544434
    7. '.' → logprob: -13.038756370544434
    8. '[...]' → logprob: -13.288756370544434
    9. '[(' → logprob: -13.413756370544434
    10. '.append' → logprob: -13.413756370544434

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006490361411124468
    2. ']=' → logprob: -5.131490230560303
    3. '].' → logprob: -8.256490707397461
    4. ')' → logprob: -9.131490707397461
    5. '[' → logprob: -10.006490707397461
    6. ',' → logprob: -10.256490707397461
    7. '.append' → logprob: -10.631490707397461
    8. ')]' → logprob: -10.881490707397461
    9. '])' → logprob: -11.006490707397461
    10. ' ]' → logprob: -11.256490707397461

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019887094385921955
    2. ' =' → logprob: -6.251988887786865
    3. '=[]' → logprob: -10.501988410949707
    4. '.append' → logprob: -11.001988410949707
    5. '[' → logprob: -11.626988410949707
    6. ',' → logprob: -13.251988410949707
    7. ')' → logprob: -13.751988410949707
    8. ']' → logprob: -13.751988410949707
    9. '.setdefault' → logprob: -14.501988410949707
    10. '=[' → logprob: -14.626988410949707

Token 184: ' (' (ID: 350)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.1607811152935028
    2. '(start' → logprob: -2.035781145095825
    3. '(' → logprob: -4.535780906677246
    4. '(times' → logprob: -5.660780906677246
    5. 'end' → logprob: -6.660780906677246
    6. '[(' → logprob: -7.035780906677246
    7. ' (' → logprob: -7.410780906677246
    8. '[end' → logprob: -8.285780906677246
    9. '[start' → logprob: -8.535780906677246
    10. 'start' → logprob: -8.660780906677246

Token 185: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0018531967652961612
    2. ' start' → logprob: -6.501852989196777
    3. '(start' → logprob: -8.001852989196777
    4. ' (' → logprob: -11.626852989196777
    5. '[start' → logprob: -12.501852989196777
    6. '(' → logprob: -12.751852989196777
    7. ')' → logprob: -15.251852989196777
    8. '   ' → logprob: -17.001853942871094
    9. '
' → logprob: -17.251853942871094
    10. '[' → logprob: -17.501853942871094

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009212272125296295
    2. ',end' → logprob: -7.000921249389648
    3. ' ,' → logprob: -11.750921249389648
    4. ',
' → logprob: -13.250921249389648
    5. 'end' → logprob: -17.12592124938965
    6. ',start' → logprob: -17.87592124938965
    7. ',

' → logprob: -18.87592124938965
    8. ',e' → logprob: -19.12592124938965
    9. ',int' → logprob: -19.37592124938965
    10. ',b' → logprob: -19.50092124938965

Token 187: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2014133334159851
    2. ' end' → logprob: -1.7014133930206299
    3. '(end' → logprob: -16.701414108276367
    4. '	end' → logprob: -18.326414108276367
    5. ' ' → logprob: -18.451414108276367
    6. 'start' → logprob: -18.576414108276367
    7. ' ' → logprob: -19.076414108276367
    8. '[end' → logprob: -19.076414108276367
    9. '   ' → logprob: -19.326414108276367
    10. ''end' → logprob: -19.451414108276367

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '}' → logprob: -16.500001907348633
    5. ')}' → logprob: -17.750001907348633
    6. '))' → logprob: -18.250001907348633
    7. ',)' → logprob: -18.625001907348633
    8. '),' → logprob: -18.750001907348633
    9. ')

' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.375001907348633

Token 189: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09832898527383804
    2. 'for' → logprob: -2.5983290672302246
    3. ' for' → logprob: -4.723329067230225
    4. '<|end|>' → logprob: -5.348329067230225
    5. '
' → logprob: -5.598329067230225
    6. '    
' → logprob: -7.098329067230225
    7. '       ' → logprob: -8.223328590393066
    8. 'while' → logprob: -8.723328590393066
    9. ')' → logprob: -8.723328590393066
    10. '<|end|>' → logprob: -9.348328590393066

Token 190: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.001588654238730669
    2. ' times' → logprob: -6.626588821411133
    3. '   ' → logprob: -8.376588821411133
    4. 'for' → logprob: -10.626588821411133
    5. 'if' → logprob: -12.876588821411133
    6. '       ' → logprob: -13.376588821411133
    7. 'time' → logprob: -14.126588821411133
    8. ' for' → logprob: -14.126588821411133
    9. ' ' → logprob: -14.751588821411133
    10. '(times' → logprob: -15.126588821411133

Token 191: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015152193373069167
    2. '.' → logprob: -6.5015153884887695
    3. '.app' → logprob: -12.50151538848877
    4. '.extend' → logprob: -12.50151538848877
    5. '.ap' → logprob: -13.37651538848877
    6. '.push' → logprob: -13.50151538848877
    7. '.setdefault' → logprob: -14.00151538848877
    8. '.add' → logprob: -14.37651538848877
    9. '.insert' → logprob: -15.62651538848877
    10. '.Append' → logprob: -15.75151538848877

Token 192: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.483744740486145
    2. '(start' → logprob: -0.983744740486145
    3. '(' → logprob: -5.3587446212768555
    4. '(end' → logprob: -5.3587446212768555
    5. '(program' → logprob: -8.608744621276855
    6. ' (' → logprob: -11.733744621276855
    7. 'start' → logprob: -11.858744621276855
    8. '(times' → logprob: -12.983744621276855
    9. '([' → logprob: -14.358744621276855
    10. '(to' → logprob: -14.608744621276855

Token 193: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0015116469003260136
    2. ' start' → logprob: -6.501511573791504
    3. 'name' → logprob: -12.376511573791504
    4. 'end' → logprob: -12.751511573791504
    5. '(start' → logprob: -14.001511573791504
    6. '   ' → logprob: -14.876511573791504
    7. 'program' → logprob: -15.251511573791504
    8. 'st' → logprob: -15.376511573791504
    9. ')' → logprob: -15.501511573791504
    10. ' ' → logprob: -16.25151252746582

Token 194: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027456742827780545
    2. ',
' → logprob: -9.250274658203125
    3. ' ,' → logprob: -9.500274658203125
    4. ')' → logprob: -10.375274658203125
    5. ',)' → logprob: -10.750274658203125
    6. ',end' → logprob: -10.875274658203125
    7. '<|end|>' → logprob: -10.875274658203125
    8. ',start' → logprob: -12.875274658203125
    9. '))' → logprob: -13.125274658203125
    10. '   ' → logprob: -14.000274658203125

Token 195: ',name' (ID: 52064)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5769606232643127
    2. ')' → logprob: -0.8269606232643127
    3. ',' → logprob: -6.951960563659668
    4. ' ))' → logprob: -10.701960563659668
    5. ' )' → logprob: -10.951960563659668
    6. ',)' → logprob: -12.326960563659668
    7. '),' → logprob: -12.451960563659668
    8. ')))' → logprob: -12.451960563659668
    9. ')
' → logprob: -12.576960563659668
    10. '))
' → logprob: -12.826960563659668

Token 196: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023266909644007683
    2. '))' → logprob: -3.7732667922973633
    3. ',' → logprob: -11.148266792297363
    4. ',)' → logprob: -12.898266792297363
    5. ')))' → logprob: -13.273266792297363
    6. ')
' → logprob: -14.023266792297363
    7. '   ' → logprob: -14.273266792297363
    8. ' )' → logprob: -14.398266792297363
    9. '),' → logprob: -14.773266792297363
    10. '))
' → logprob: -16.64826774597168

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25136756896972656
    2. '
' → logprob: -2.1263675689697266
    3. 'for' → logprob: -3.1263675689697266
    4. '<|end|>' → logprob: -4.001367568969727
    5. ' for' → logprob: -4.126367568969727
    6. '    
' → logprob: -5.001367568969727
    7. '  
' → logprob: -5.251367568969727
    8. ')' → logprob: -5.376367568969727
    9. ' ' → logprob: -5.751367568969727
    10. ',' → logprob: -6.876367568969727

Token 198: ' P' (ID: 398)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.004478185437619686
    2. '   ' → logprob: -6.1294779777526855
    3. 'for' → logprob: -6.6294779777526855
    4. ' times' → logprob: -7.7544779777526855
    5. 'program' → logprob: -9.379478454589844
    6. 'over' → logprob: -9.504478454589844
    7. '    
' → logprob: -9.504478454589844
    8. 'conf' → logprob: -9.504478454589844
    9. '```' → logprob: -9.504478454589844
    10. 'sorted' → logprob: -9.754478454589844

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4859684705734253
    2. '=' → logprob: -1.2359684705734253
    3. 'r' → logprob: -2.735968589782715
    4. 'rogram' → logprob: -5.485968589782715
    5. '   ' → logprob: -5.860968589782715
    6. ' ' → logprob: -5.985968589782715
    7. 'ro' → logprob: -5.985968589782715
    8. 'for' → logprob: -6.610968589782715
    9. 'R' → logprob: -6.735968589782715
    10. ',' → logprob: -6.735968589782715

Token 200: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5850901007652283
    2. 'int' → logprob: -0.8350901007652283
    3. ' sys' → logprob: -5.085090160369873
    4. 'sys' → logprob: -5.960090160369873
    5. 'len' → logprob: -8.960089683532715
    6. ' len' → logprob: -9.210089683532715
    7. '   ' → logprob: -10.460089683532715
    8. ' ' → logprob: -10.585089683532715
    9. '0' → logprob: -11.585089683532715
    10. ' input' → logprob: -11.710089683532715

Token 201: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00026407750556245446
    2. 'sys' → logprob: -8.250264167785645
    3. ' sys' → logprob: -13.375264167785645
    4. '=sys' → logprob: -14.000264167785645
    5. '(' → logprob: -15.125264167785645
    6. '	sys' → logprob: -15.875264167785645
    7. '()' → logprob: -17.125263214111328
    8. '_sys' → logprob: -19.375263214111328
    9. '(system' → logprob: -20.250263214111328
    10. '(Sys' → logprob: -20.250263214111328

Token 202: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010390079842181876
    2. 'stdin' → logprob: -9.250103950500488
    3. '.argv' → logprob: -12.750103950500488
    4. '.readline' → logprob: -12.875103950500488
    5. '.stdout' → logprob: -13.750103950500488
    6. '.std' → logprob: -14.500103950500488
    7. '(stdin' → logprob: -15.125103950500488
    8. '.' → logprob: -15.625103950500488
    9. ' stdin' → logprob: -16.000102996826172
    10. '.next' → logprob: -18.000102996826172

Token 203: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.500000953674316
    3. '.stdin' → logprob: -15.500000953674316
    4. '().' → logprob: -19.375
    5. 'stdin' → logprob: -19.625
    6. ')' → logprob: -20.25
    7. '.readlines' → logprob: -20.5
    8. '.)' → logprob: -20.625
    9. '())' → logprob: -20.625
    10. ' readline' → logprob: -20.75

Token 204: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0042632464319467545
    2. '()' → logprob: -5.504263401031494
    3. ')' → logprob: -9.004262924194336
    4. '().' → logprob: -9.754262924194336
    5. ' ())' → logprob: -13.254262924194336
    6. '())
' → logprob: -13.504262924194336
    7. '()
' → logprob: -15.129262924194336
    8. '(' → logprob: -15.254262924194336
    9. '();)' → logprob: -16.254262924194336
    10. '())

' → logprob: -17.129262924194336

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048512645065784454
    2. 'for' → logprob: -3.5485126972198486
    3. ' for' → logprob: -4.0485124588012695
    4. '    
' → logprob: -7.4235124588012695
    5. '<|end|>' → logprob: -8.67351245880127
    6. ' conflicts' → logprob: -9.04851245880127
    7. 'constraints' → logprob: -9.67351245880127
    8. '	for' → logprob: -9.92351245880127
    9. 'conf' → logprob: -11.04851245880127
    10. 'possible' → logprob: -11.42351245880127

Token 206: ' fav' (ID: 11726)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3219583034515381
    2. 'conf' → logprob: -1.446958303451538
    3. 'possible' → logprob: -4.446958541870117
    4. 'pairs' → logprob: -5.321958541870117
    5. 'requests' → logprob: -5.446958541870117
    6. ' conflicts' → logprob: -5.571958541870117
    7. 'constraints' → logprob: -5.946958541870117
    8. ' for' → logprob: -6.196958541870117
    9. 'compatible' → logprob: -6.571958541870117
    10. '   ' → logprob: -6.821958541870117

Token 207: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06371138244867325
    2. '_program' → logprob: -3.688711404800415
    3. '_names' → logprob: -4.438711166381836
    4. 'or' → logprob: -4.688711166381836
    5. '_pairs' → logprob: -4.813711166381836
    6. ' =' → logprob: -6.313711166381836
    7. 'program' → logprob: -6.688711166381836
    8. '_list' → logprob: -6.688711166381836
    9. '_' → logprob: -7.563711166381836
    10. '=' → logprob: -7.688711166381836

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25245174765586853
    2. '=' → logprob: -1.502451777458191
    3. ',' → logprob: -8.37745189666748
    4. '_' → logprob: -8.62745189666748
    5. '=[]' → logprob: -10.50245189666748
    6. '_names' → logprob: -10.75245189666748
    7. ')' → logprob: -11.50245189666748
    8. 's' → logprob: -11.62745189666748
    9. ' ' → logprob: -11.62745189666748
    10. '[' → logprob: -11.75245189666748

Token 209: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15702834725379944
    2. 'set' → logprob: -2.4070284366607666
    3. '{}' → logprob: -3.0320284366607666
    4. ' []' → logprob: -5.5320281982421875
    5. 'sys' → logprob: -6.4070281982421875
    6. ' set' → logprob: -7.4070281982421875
    7. '[' → logprob: -7.5320281982421875
    8. 'list' → logprob: -9.532028198242188
    9. '[]
' → logprob: -10.032028198242188
    10. ' sys' → logprob: -10.282028198242188

Token 210: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005992617807351053
    2. ']' → logprob: -7.750599384307861
    3. 'int' → logprob: -10.000598907470703
    4. ' sys' → logprob: -10.625598907470703
    5. 'input' → logprob: -10.750598907470703
    6. 'x' → logprob: -11.000598907470703
    7. '_]' → logprob: -11.000598907470703
    8. '(sys' → logprob: -11.625598907470703
    9. '[]' → logprob: -11.750598907470703
    10. '()]' → logprob: -12.125598907470703

Token 211: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.289473822107539e-05
    2. '.stdout' → logprob: -10.500062942504883
    3. 'stdin' → logprob: -11.500062942504883
    4. '._' → logprob: -11.875062942504883
    5. '.readline' → logprob: -11.875062942504883
    6. '.argv' → logprob: -12.125062942504883
    7. '.' → logprob: -13.000062942504883
    8. '.std' → logprob: -13.250062942504883
    9. '.stderr' → logprob: -15.000062942504883
    10. '(stdin' → logprob: -15.125062942504883

Token 212: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.610702363715973e-06
    2. '.' → logprob: -12.250009536743164
    3. '.read' → logprob: -12.875009536743164
    4. '.readlines' → logprob: -13.625009536743164
    5. '.stdin' → logprob: -14.625009536743164
    6. '.randint' → logprob: -15.375009536743164
    7. '```' → logprob: -16.500009536743164
    8. '.next' → logprob: -16.750009536743164
    9. '.append' → logprob: -17.250009536743164
    10. 'read' → logprob: -17.625009536743164

Token 213: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7729658540920354e-05
    2. '()' → logprob: -10.625027656555176
    3. ' ().' → logprob: -13.000027656555176
    4. '()].' → logprob: -13.875027656555176
    5. '.strip' → logprob: -16.000028610229492
    6. '()]' → logprob: -17.500028610229492
    7. '(strip' → logprob: -18.500028610229492
    8. '()).' → logprob: -18.875028610229492
    9. '.rstrip' → logprob: -19.750028610229492
    10. ' ()' → logprob: -19.750028610229492

Token 214: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.935296834039036e-06
    2. 'rstrip' → logprob: -12.75000286102295
    3. ' strip' → logprob: -17.500003814697266
    4. 'split' → logprob: -21.125003814697266
    5. '.strip' → logprob: -21.125003814697266
    6. '(strip' → logprob: -21.875003814697266
    7. '_strip' → logprob: -22.125003814697266
    8. '-strip' → logprob: -24.375003814697266
    9. 'replace' → logprob: -24.875003814697266
    10. 'read' → logprob: -25.125003814697266

Token 215: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005587508203461766
    2. '()]' → logprob: -7.625558853149414
    3. ' ()' → logprob: -9.625558853149414
    4. ' for' → logprob: -13.125558853149414
    5. 'for' → logprob: -13.875558853149414
    6. '()
' → logprob: -14.125558853149414
    7. '())' → logprob: -15.375558853149414
    8. ']' → logprob: -15.625558853149414
    9. '()]
' → logprob: -15.750558853149414
    10. ']()' → logprob: -15.875558853149414

Token 216: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11304239183664322
    2. 'for' → logprob: -2.2380423545837402
    3. '()' → logprob: -9.363042831420898
    4. '	for' → logprob: -9.488042831420898
    5. ')' → logprob: -10.363042831420898
    6. ']' → logprob: -11.113042831420898
    7. '   ' → logprob: -12.238042831420898
    8. ' ' → logprob: -12.488042831420898
    9. '<|end|>' → logprob: -14.113042831420898
    10. ' ' → logprob: -14.738042831420898

Token 217: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007907193154096603
    2. ' _' → logprob: -4.882907390594482
    3. ' range' → logprob: -8.132906913757324
    4. 'range' → logprob: -12.507906913757324
    5. '_range' → logprob: -13.007906913757324
    6. ' ' → logprob: -14.507906913757324
    7. ' i' → logprob: -15.007906913757324
    8. '_p' → logprob: -15.257906913757324
    9. ' in' → logprob: -16.25790786743164
    10. ' ' → logprob: -16.50790786743164

Token 218: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007898448035120964
    2. ' range' → logprob: -5.007898330688477
    3. 'in' → logprob: -6.757898330688477
    4. 'P' → logprob: -11.507898330688477
    5. ' in' → logprob: -11.507898330688477
    6. '(range' → logprob: -14.507898330688477
    7. ' ' → logprob: -16.507898330688477
    8. '  ' → logprob: -17.882898330688477
    9. ' P' → logprob: -17.882898330688477
    10. '   ' → logprob: -18.382898330688477

Token 219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. 'P' → logprob: -19.000709533691406
    4. '(range' → logprob: -19.375709533691406
    5. ' ' → logprob: -20.500709533691406
    6. '   ' → logprob: -21.250709533691406
    7. '
' → logprob: -21.625709533691406
    8. '	range' → logprob: -21.875709533691406
    9. '  ' → logprob: -22.625709533691406
    10. 'rang' → logprob: -23.375709533691406

Token 220: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.07890862971544266
    2. 'P' → logprob: -2.578908681869507
    3. ' P' → logprob: -11.078908920288086
    4. ' (' → logprob: -13.328908920288086
    5. '(' → logprob: -13.328908920288086
    6. '   ' → logprob: -16.828908920288086
    7. '	P' → logprob: -17.328908920288086
    8. '
' → logprob: -17.578908920288086
    9. ' ' → logprob: -18.453908920288086
    10. ',P' → logprob: -18.453908920288086

Token 221: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.40284228324890137
    2. ']' → logprob: -1.1528422832489014
    3. ')' → logprob: -4.1528425216674805
    4. ' ]' → logprob: -9.15284252166748
    5. ' )' → logprob: -11.52784252166748
    6. ']
' → logprob: -12.52784252166748
    7. '   ' → logprob: -13.27784252166748
    8. '])' → logprob: -13.77784252166748
    9. '`]' → logprob: -14.27784252166748
    10. '()]' → logprob: -15.02784252166748

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.717843770980835
    2. 'conf' → logprob: -1.342843770980835
    3. 'for' → logprob: -2.342843770980835
    4. 'valid' → logprob: -3.717843770980835
    5. ' conflicts' → logprob: -3.717843770980835
    6. 'possible' → logprob: -4.217844009399414
    7. 'f' → logprob: -4.717844009399414
    8. 'available' → logprob: -4.842844009399414
    9. ' for' → logprob: -4.967844009399414
    10. 'results' → logprob: -5.092844009399414

Token 223: ' #' (ID: 1069)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.011994937434792519
    2. 'for' → logprob: -5.1369948387146
    3. 'valid' → logprob: -6.5119948387146
    4. 'result' → logprob: -6.8869948387146
    5. 'possible' → logprob: -6.8869948387146
    6. 'fav' → logprob: -7.3869948387146
    7. 'f' → logprob: -7.7619948387146
    8. 'results' → logprob: -8.386995315551758
    9. '   ' → logprob: -8.511995315551758
    10. 'available' → logprob: -8.886995315551758

Token 224: ' check' (ID: 2371)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.03055054508149624
    2. ' conflict' → logprob: -4.280550479888916
    3. ' conflicts' → logprob: -5.030550479888916
    4. 'possible' → logprob: -6.030550479888916
    5. 'for' → logprob: -6.155550479888916
    6. 'valid' → logprob: -6.780550479888916
    7. ' for' → logprob: -7.405550479888916
    8. 'fav' → logprob: -7.405550479888916
    9. ' possible' → logprob: -7.780550479888916
    10. '   ' → logprob: -8.030550956726074

Token 225: ' if' (ID: 538)
  Prédit: ' conflicts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conflicts' → logprob: -0.572471022605896
    2. ' conflict' → logprob: -1.072471022605896
    3. 'conf' → logprob: -2.5724711418151855
    4. ' for' → logprob: -5.0724711418151855
    5. '   ' → logprob: -5.3224711418151855
    6. 'for' → logprob: -6.0724711418151855
    7. ' conflic' → logprob: -6.8224711418151855
    8. 'over' → logprob: -7.1974711418151855
    9. 'fav' → logprob: -8.072470664978027
    10. ' overlap' → logprob: -8.197470664978027

Token 226: ' fav' (ID: 11726)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.3910648822784424
    2. 'any' → logprob: -1.1410648822784424
    3. 'len' → logprob: -5.641064643859863
    4. ' there' → logprob: -8.516064643859863
    5. ' len' → logprob: -8.766064643859863
    6. 'there' → logprob: -9.016064643859863
    7. 'over' → logprob: -10.391064643859863
    8. 'all' → logprob: -10.641064643859863
    9. ' True' → logprob: -10.891064643859863
    10. ' all' → logprob: -11.391064643859863

Token 227: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6027507781982422
    2. 'or' → logprob: -0.9777507781982422
    3. '_program' → logprob: -3.352750778198242
    4. '_' → logprob: -4.352750778198242
    5. '_times' → logprob: -5.227750778198242
    6. ' =' → logprob: -5.227750778198242
    7. '_pairs' → logprob: -6.227750778198242
    8. 'program' → logprob: -6.352750778198242
    9. 'ors' → logprob: -6.477750778198242
    10. '=' → logprob: -6.477750778198242

Token 228: ' overlap' (ID: 56631)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2897899150848389
    2. '_are' → logprob: -1.4147899150848389
    3. '_conf' → logprob: -2.039789915084839
    4. '_have' → logprob: -2.414789915084839
    5. '_overlap' → logprob: -2.414789915084839
    6. '_program' → logprob: -3.664789915084839
    7. ' are' → logprob: -3.914789915084839
    8. '_possible' → logprob: -4.039790153503418
    9. '_can' → logprob: -4.289790153503418
    10. '_names' → logprob: -4.664790153503418

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1583133041858673
    2. 'conf' → logprob: -2.783313274383545
    3. 'for' → logprob: -3.408313274383545
    4. ' conflicts' → logprob: -4.408313274383545
    5. ' for' → logprob: -4.533313274383545
    6. '
' → logprob: -4.658313274383545
    7. ' conflict' → logprob: -4.908313274383545
    8. 'possible' → logprob: -5.658313274383545
    9. 'over' → logprob: -6.033313274383545
    10. 'found' → logprob: -6.158313274383545

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19836866855621338
    2. ' for' → logprob: -2.448368549346924
    3. 'for' → logprob: -2.948368549346924
    4. '
' → logprob: -3.448368549346924
    5. 'fav' → logprob: -6.198368549346924
    6. ' conflicts' → logprob: -6.698368549346924
    7. 'over' → logprob: -7.323368549346924
    8. 'conf' → logprob: -7.323368549346924
    9. '    
' → logprob: -7.448368549346924
    10. '```' → logprob: -7.573368549346924

Token 231: ' fav' (ID: 11726)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.06700469553470612
    2. 'over' → logprob: -2.817004680633545
    3. ' conflict' → logprob: -5.692004680633545
    4. 'found' → logprob: -7.692004680633545
    5. 'valid' → logprob: -8.067005157470703
    6. '   ' → logprob: -8.442005157470703
    7. 'flag' → logprob: -9.192005157470703
    8. 'for' → logprob: -9.192005157470703
    9. 'result' → logprob: -9.442005157470703
    10. 'ok' → logprob: -9.692005157470703

Token 232: '_inter' (ID: 16818)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04623118415474892
    2. '_names' → logprob: -3.921231269836426
    3. '_times' → logprob: -4.296231269836426
    4. '_' → logprob: -5.546231269836426
    5. '_set' → logprob: -6.296231269836426
    6. '_idx' → logprob: -6.546231269836426
    7. '_overlap' → logprob: -7.171231269836426
    8. '_indices' → logprob: -7.546231269836426
    9. '_idxs' → logprob: -7.546231269836426
    10. '_start' → logprob: -7.671231269836426

Token 233: 'vals' (ID: 44567)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7757461071014404
    2. 'vals' → logprob: -0.7757461071014404
    3. 'sect' → logprob: -3.6507461071014404
    4. 'al' → logprob: -4.6507463455200195
    5. 'sections' → logprob: -4.9007463455200195
    6. 'sects' → logprob: -5.0257463455200195
    7. 'als' → logprob: -5.1507463455200195
    8. 'actions' → logprob: -5.4007463455200195
    9. 's' → logprob: -5.5257463455200195
    10. 'section' → logprob: -5.7757463455200195

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04887200891971588
    2. '=' → logprob: -3.0488719940185547
    3. '=[]' → logprob: -8.173871994018555
    4. ',' → logprob: -13.923871994018555
    5. '=[' → logprob: -14.673871994018555
    6. '=[]
' → logprob: -15.298871994018555
    7. '[:]' → logprob: -15.548871994018555
    8. ')' → logprob: -15.798871994018555
    9. '[]' → logprob: -15.798871994018555
    10. ']' → logprob: -15.798871994018555

Token 235: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03600354865193367
    2. '[]' → logprob: -3.536003589630127
    3. '[(' → logprob: -6.036003589630127
    4. ' [' → logprob: -6.661003589630127
    5. '[]
' → logprob: -7.161003589630127
    6. '[p' → logprob: -8.161003112792969
    7. '[s' → logprob: -8.661003112792969
    8. '[list' → logprob: -8.661003112792969
    9. '[int' → logprob: -8.911003112792969
    10. '[]

' → logprob: -9.411003112792969

Token 236: 'program' (ID: 20298)
  Prédit: 'program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.01040387898683548
    2. '(program' → logprob: -4.635404109954834
    3. ' programs' → logprob: -7.385404109954834
    4. '   ' → logprob: -11.135403633117676
    5. ' (' → logprob: -11.760403633117676
    6. '(' → logprob: -12.885403633117676
    7. '[' → logprob: -13.760403633117676
    8. ' program' → logprob: -15.385403633117676
    9. ']' → logprob: -15.760403633117676
    10. ')' → logprob: -16.135404586791992

Token 237: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008807347039692104
    2. '[name' → logprob: -7.875880718231201
    3. 'program' → logprob: -8.12588119506836
    4. '[s' → logprob: -9.75088119506836
    5. 'name' → logprob: -9.87588119506836
    6. ' programs' → logprob: -10.62588119506836
    7. ' s' → logprob: -10.87588119506836
    8. '[' → logprob: -11.25088119506836
    9. ']' → logprob: -12.37588119506836
    10. 'Programs' → logprob: -12.50088119506836

Token 238: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.20144695043563843
    2. '[name' → logprob: -1.7014470100402832
    3. 'fav' → logprob: -10.951446533203125
    4. '[' → logprob: -11.701446533203125
    5. '[n' → logprob: -12.576446533203125
    6. '[x' → logprob: -13.451446533203125
    7. '[i' → logprob: -13.576446533203125
    8. 'name' → logprob: -14.076446533203125
    9. '[p' → logprob: -15.451446533203125
    10. '[_' → logprob: -15.451446533203125

Token 239: ']' (ID: 60)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.03942500054836273
    2. ']' → logprob: -3.2894248962402344
    3. 'avs' → logprob: -6.664424896240234
    4. 'name' → logprob: -9.539424896240234
    5. 'avorite' → logprob: -11.664424896240234
    6. 'ave' → logprob: -12.414424896240234
    7. 'fav' → logprob: -12.414424896240234
    8. 'a' → logprob: -12.789424896240234
    9. 'avorites' → logprob: -12.789424896240234
    10. '[' → logprob: -13.039424896240234

Token 240: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3871932923793793
    2. 'for' → logprob: -1.1371933221817017
    3. ']' → logprob: -8.26219367980957
    4. ' ' → logprob: -10.01219367980957
    5. '   ' → logprob: -11.63719367980957
    6. ')' → logprob: -12.01219367980957
    7. ' ]' → logprob: -12.88719367980957
    8. '	for' → logprob: -14.01219367980957
    9. '  ' → logprob: -15.26219367980957
    10. '[' → logprob: -15.38719367980957

Token 241: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31327101588249207
    2. ' f' → logprob: -1.3132710456848145
    3. '	f' → logprob: -12.563270568847656
    4. ' fav' → logprob: -12.938270568847656
    5. 'fav' → logprob: -13.063270568847656
    6. ' in' → logprob: -14.063270568847656
    7. ' ' → logprob: -15.563270568847656
    8. '_f' → logprob: -16.063270568847656
    9. ' ' → logprob: -17.063270568847656
    10. ' fave' → logprob: -17.188270568847656

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08942204713821411
    2. 'in' → logprob: -2.4644219875335693
    3. 'f' → logprob: -7.714422225952148
    4. ' ' → logprob: -11.214422225952148
    5. ' f' → logprob: -11.214422225952148
    6. 's' → logprob: -12.839422225952148
    7. ']' → logprob: -13.214422225952148
    8. 'i' → logprob: -14.339422225952148
    9. '	in' → logprob: -14.589422225952148
    10. ' ' → logprob: -14.964422225952148

Token 243: ' fav' (ID: 11726)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02473103255033493
    2. ' fav' → logprob: -3.774730920791626
    3. 'fav' → logprob: -6.524731159210205
    4. ' range' → logprob: -12.274730682373047
    5. '	f' → logprob: -12.524730682373047
    6. '   ' → logprob: -13.149730682373047
    7. ' ' → logprob: -13.399730682373047
    8. ' fave' → logprob: -13.774730682373047
    9. 'range' → logprob: -13.899730682373047
    10. '(f' → logprob: -14.149730682373047

Token 244: 's' (ID: 82)
  Prédit: 'avs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.056809935718774796
    2. 's' → logprob: -3.056809902191162
    3. 'avorites' → logprob: -4.931809902191162
    4. 'vs' → logprob: -8.05681037902832
    5. 'avor' → logprob: -8.30681037902832
    6. 'range' → logprob: -8.93181037902832
    7. ' range' → logprob: -9.05681037902832
    8. 'avorite' → logprob: -9.93181037902832
    9. 'av' → logprob: -10.05681037902832
    10. ']' → logprob: -10.68181037902832

Token 245: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025245302822440863
    2. '   ' → logprob: -6.002524375915527
    3. ' ]' → logprob: -10.377524375915527
    4. ']
' → logprob: -11.127524375915527
    5. ')' → logprob: -13.502524375915527
    6. ' if' → logprob: -14.502524375915527
    7. ')]' → logprob: -15.627524375915527
    8. '}' → logprob: -15.627524375915527
    9. 'if' → logprob: -15.877524375915527
    10. ']

' → logprob: -15.877524375915527

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6505863666534424
    2. '
' → logprob: -0.7755863666534424
    3. 'for' → logprob: -4.650586128234863
    4. 'fav' → logprob: -6.150586128234863
    5. '    
' → logprob: -6.275586128234863
    6. ' for' → logprob: -6.775586128234863
    7. 'conf' → logprob: -7.150586128234863
    8. '```' → logprob: -7.275586128234863
    9. 'over' → logprob: -8.150586128234863
    10. 'valid' → logprob: -8.525586128234863

Token 247: ' conflict' (ID: 21461)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.31460219621658325
    2. 'over' → logprob: -1.8146021366119385
    3. 'fav' → logprob: -2.6896021366119385
    4. 'for' → logprob: -3.8146021366119385
    5. '   ' → logprob: -5.189602375030518
    6. ' conflict' → logprob: -5.689602375030518
    7. 'valid' → logprob: -6.189602375030518
    8. 'result' → logprob: -7.189602375030518
    9. 'possible' → logprob: -7.314602375030518
    10. '
' → logprob: -7.314602375030518

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038445014506578445
    2. ' =' → logprob: -3.288444995880127
    3. 's' → logprob: -7.913444995880127
    4. '_found' → logprob: -10.663445472717285
    5. '_' → logprob: -11.788445472717285
    6. '=False' → logprob: -12.913445472717285
    7. '=True' → logprob: -13.538445472717285
    8. '_=' → logprob: -13.663445472717285
    9. 'ed' → logprob: -13.788445472717285
    10. '_oc' → logprob: -15.163445472717285

Token 249: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.003192685777321458
    2. ' False' → logprob: -5.753192901611328
    3. 'any' → logprob: -11.128192901611328
    4. ' any' → logprob: -15.378192901611328
    5. '(False' → logprob: -17.503192901611328
    6. 'True' → logprob: -18.753192901611328
    7. 'false' → logprob: -18.878192901611328
    8. 'Any' → logprob: -19.378192901611328
    9. '=False' → logprob: -19.628192901611328
    10. '0' → logprob: -20.878192901611328

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05727338790893555
    2. '   ' → logprob: -3.3072733879089355
    3. '<|end|>' → logprob: -4.1822733879089355
    4. ' for' → logprob: -5.9322733879089355
    5. 'for' → logprob: -7.8072733879089355
    6. '<|end|>' → logprob: -8.307273864746094
    7. '    
' → logprob: -8.557273864746094
    8. '  
' → logprob: -8.682273864746094
    9. ' 
' → logprob: -10.307273864746094
    10. '
' → logprob: -11.182273864746094

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4044445753097534
    2. '
' → logprob: -1.2794445753097534
    3. ' for' → logprob: -3.154444694519043
    4. 'for' → logprob: -4.779444694519043
    5. '<|end|>' → logprob: -5.779444694519043
    6. '    
' → logprob: -8.904444694519043
    7. '```' → logprob: -10.154444694519043
    8. '  
' → logprob: -10.404444694519043
    9. '  ' → logprob: -10.529444694519043
    10. '
' → logprob: -11.154444694519043

Token 252: ' fav' (ID: 11726)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032156186643987894
    2. ' for' → logprob: -5.753215789794922
    3. '   ' → logprob: -10.253215789794922
    4. 'fav' (adapté à ' fav') → logprob: -13.628215789794922
    5. 'if' → logprob: -13.878215789794922
    6. 'i' → logprob: -15.753215789794922
    7. '
' → logprob: -15.878215789794922
    8. 'interval' → logprob: -16.253215789794922
    9. 'n' → logprob: -16.378215789794922
    10. '	for' → logprob: -18.378215789794922

Token 253: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.013156818225979805
    2. 's' → logprob: -4.763156890869141
    3. '_' → logprob: -5.763156890869141
    4. '_times' → logprob: -8.01315689086914
    5. 'for' → logprob: -8.51315689086914
    6. '_start' → logprob: -8.63815689086914
    7. '_i' → logprob: -8.88815689086914
    8. '_count' → logprob: -8.88815689086914
    9. '_interval' → logprob: -9.76315689086914
    10. '_s' → logprob: -9.76315689086914

Token 254: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0017347980756312609
    2. 'als' → logprob: -6.751734733581543
    3. 'val' → logprob: -8.001734733581543
    4. 's' → logprob: -9.376734733581543
    5. '=' → logprob: -10.751734733581543
    6. '   ' → logprob: -10.876734733581543
    7. '[' → logprob: -11.001734733581543
    8. '```' → logprob: -11.376734733581543
    9. 'interval' → logprob: -11.501734733581543
    10. ' vals' → logprob: -12.001734733581543

Token 255: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.023997729644179344
    2. '=' → logprob: -3.7739977836608887
    3. 'sort' → logprob: -7.273997783660889
    4. ' =' → logprob: -10.02399730682373
    5. 'sorted' → logprob: -11.77399730682373
    6. '.' → logprob: -12.64899730682373
    7. '_sorted' → logprob: -13.14899730682373
    8. ' sort' → logprob: -15.02399730682373
    9. '	sort' → logprob: -15.14899730682373
    10. '=.' → logprob: -16.148998260498047

Token 256: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018272263929247856
    2. '(key' → logprob: -4.018272399902344
    3. 'key' → logprob: -9.893272399902344
    4. '()
' → logprob: -10.018272399902344
    5. '(reverse' → logprob: -10.768272399902344
    6. '(' → logprob: -13.643272399902344
    7. '```' → logprob: -14.268272399902344
    8. '()

' → logprob: -14.643272399902344
    9. ',key' → logprob: -14.643272399902344
    10. '(lambda' → logprob: -15.018272399902344

Token 257: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02818887308239937
    2. '   ' → logprob: -4.278188705444336
    3. '<|end|>' → logprob: -4.778188705444336
    4. '    
' → logprob: -5.778188705444336
    5. '  
' → logprob: -6.903188705444336
    6. ' for' → logprob: -7.403188705444336
    7. 'for' → logprob: -7.653188705444336
    8. ' 
' → logprob: -9.778188705444336
    9. '<|end|>' → logprob: -9.903188705444336
    10. '\n' → logprob: -10.153188705444336

Token 258: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001015183632262051
    2. ' for' → logprob: -7.0010151863098145
    3. '   ' → logprob: -9.251014709472656
    4. 'i' → logprob: -12.001014709472656
    5. '
' → logprob: -13.751014709472656
    6. 'prev' → logprob: -15.001014709472656
    7. '    
' → logprob: -16.251014709472656
    8. 'if' → logprob: -16.626014709472656
    9. '```' → logprob: -18.251014709472656
    10. ' i' → logprob: -18.376014709472656

Token 259: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008615515194833279
    2. 'i' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.133615493774414
    4. '	i' → logprob: -16.383615493774414
    5. '_i' → logprob: -16.508615493774414
    6. ' ' → logprob: -18.383615493774414
    7. '   ' → logprob: -19.383615493774414
    8. '(i' → logprob: -19.508615493774414
    9. ' _' → logprob: -19.508615493774414
    10. '  ' → logprob: -19.633615493774414

Token 260: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01607179269194603
    2. 'in' → logprob: -4.141071796417236
    3. ' ' → logprob: -10.891071319580078
    4. '	in' → logprob: -11.516071319580078
    5. '   ' → logprob: -12.016071319580078
    6. ',' → logprob: -14.016071319580078
    7. '  ' → logprob: -14.391071319580078
    8. ' i' → logprob: -14.516071319580078
    9. '1' → logprob: -15.391071319580078
    10. '+' → logprob: -15.516071319580078

Token 261: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693241238594055
    2. ' range' → logprob: -2.126932382583618
    3. ' ' → logprob: -12.876932144165039
    4. '(range' → logprob: -14.251932144165039
    5. '	range' → logprob: -14.376932144165039
    6. '   ' → logprob: -14.626932144165039
    7. '  ' → logprob: -16.50193214416504
    8. ' xrange' → logprob: -18.25193214416504
    9. '
' → logprob: -19.75193214416504
    10. '_range' → logprob: -20.25193214416504

Token 262: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.251948744058609
    2. '(len' → logprob: -1.5019487142562866
    3. 'len' → logprob: -11.126948356628418
    4. ' (' → logprob: -13.126948356628418
    5. ' len' → logprob: -13.501948356628418
    6. '1' → logprob: -13.501948356628418
    7. ' ' → logprob: -16.501949310302734
    8. '(
' → logprob: -19.126949310302734
    9. '[len' → logprob: -19.876949310302734
    10. '   ' → logprob: -20.126949310302734

Token 263: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.000000953674316
    3. 'fav' → logprob: -14.625000953674316
    4. 'f' → logprob: -17.375001907348633
    5. '(freq' → logprob: -18.125001907348633
    6. '	f' → logprob: -18.500001907348633
    7. '(fid' → logprob: -19.000001907348633
    8. ' (' → logprob: -20.000001907348633
    9. '(friend' → logprob: -21.250001907348633
    10. ' fav' → logprob: -21.375001907348633

Token 264: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.02835320495069027
    2. 'avs' → logprob: -4.153353214263916
    3. '-' → logprob: -4.778353214263916
    4. 'fav' → logprob: -5.653353214263916
    5. '   ' → logprob: -9.778352737426758
    6. '(' → logprob: -9.778352737426758
    7. ' -' → logprob: -10.278352737426758
    8. '(av' → logprob: -10.403352737426758
    9. '_inter' → logprob: -10.778352737426758
    10. '_av' → logprob: -11.028352737426758

Token 265: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.5048530030981055e-06
    2. 'interval' → logprob: -14.375001907348633
    3. '-' → logprob: -15.125001907348633
    4. 's' → logprob: -15.875001907348633
    5. '_' → logprob: -16.250001907348633
    6. '_interval' → logprob: -16.625001907348633
    7. 'inter' → logprob: -16.625001907348633
    8. 'Intervals' → logprob: -17.125001907348633
    9. '_intr' → logprob: -17.250001907348633
    10. '_int' → logprob: -17.500001907348633

Token 266: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.23319651186466217
    2. 'vals' → logprob: -1.608196496963501
    3. '   ' → logprob: -5.73319673538208
    4. 'al' → logprob: -6.35819673538208
    5. 'val' → logprob: -7.60819673538208
    6. 'v' → logprob: -7.98319673538208
    7. '```' → logprob: -8.233196258544922
    8. 's' → logprob: -8.483196258544922
    9. 'ls' → logprob: -8.483196258544922
    10. ' ' → logprob: -8.858196258544922

Token 267: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38743746280670166
    2. '-' → logprob: -1.1374374628067017
    3. ')' → logprob: -7.637437343597412
    4. ' ' → logprob: -9.88743782043457
    5. ')-' → logprob: -11.13743782043457
    6. '   ' → logprob: -11.26243782043457
    7. '1' → logprob: -13.13743782043457
    8. '()' → logprob: -13.26243782043457
    9. '()-' → logprob: -13.76243782043457
    10. ' ' → logprob: -15.26243782043457

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.375261306762695
    4. '```' → logprob: -16.625261306762695
    5. ')' → logprob: -18.000261306762695
    6. '  ' → logprob: -18.750261306762695
    7. '0' → logprob: -19.625261306762695
    8. '
' → logprob: -19.687761306762695
    9. '<|end|>' → logprob: -20.000261306762695
    10. '１' → logprob: -20.125261306762695

Token 269: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3873123824596405
    2. '):' → logprob: -1.137312412261963
    3. '):
' → logprob: -8.637311935424805
    4. ' ):
' → logprob: -8.887311935424805
    5. ':' → logprob: -9.637311935424805
    6. ' ):' → logprob: -9.887311935424805
    7. ')' → logprob: -13.012311935424805
    8. '):

' → logprob: -13.012311935424805
    9. '   ' → logprob: -13.137311935424805
    10. ':
' → logprob: -13.637311935424805

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2591520845890045
    2. '   ' → logprob: -1.5091520547866821
    3. '<|end|>' → logprob: -5.759151935577393
    4. ' if' → logprob: -6.634151935577393
    5. '  
' → logprob: -7.384151935577393
    6. '
' → logprob: -8.00915241241455
    7. '    ' → logprob: -8.00915241241455
    8. '    
' → logprob: -8.00915241241455
    9. ':' → logprob: -8.38415241241455
    10. '        
' → logprob: -8.63415241241455

Token 271: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29795557260513306
    2. ' if' → logprob: -1.5479555130004883
    3. '   ' → logprob: -3.1729555130004883
    4. 'if' (adapté à ' if') → logprob: -6.422955513000488
    5. '
' → logprob: -6.797955513000488
    6. '        
' → logprob: -9.547955513000488
    7. '    
' → logprob: -9.797955513000488
    8. ' ' → logprob: -10.172955513000488
    9. '  
' → logprob: -10.172955513000488
    10. '    ' → logprob: -10.297955513000488

Token 272: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.5232055187225342
    2. ' overlap' → logprob: -0.8982055187225342
    3. ' over' → logprob: -10.898205757141113
    4. '   ' → logprob: -11.148205757141113
    5. '(over' → logprob: -11.148205757141113
    6. 'fav' → logprob: -11.398205757141113
    7. ' ' → logprob: -12.148205757141113
    8. '       ' → logprob: -12.773205757141113
    9. ' not' → logprob: -13.023205757141113
    10. '
' → logprob: -13.398205757141113

Token 273: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.000263481488218531
    2. '(' → logprob: -8.250263214111328
    3. '(
' → logprob: -13.125263214111328
    4. ' (' → logprob: -16.000263214111328
    5. '(fid' → logprob: -17.750263214111328
    6. 'fav' → logprob: -18.250263214111328
    7. '(

' → logprob: -18.375263214111328
    8. 'f' → logprob: -18.500263214111328
    9. '(freq' → logprob: -18.625263214111328
    10. '(*' → logprob: -19.125263214111328

Token 274: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.02377796731889248
    2. 'fav' → logprob: -3.773777961730957
    3. '[' → logprob: -8.523777961730957
    4. '[i' → logprob: -10.023777961730957
    5. 'ov' → logprob: -10.273777961730957
    6. '   ' → logprob: -10.398777961730957
    7. ' fav' → logprob: -10.398777961730957
    8. 'v' → logprob: -10.523777961730957
    9. 'avs' → logprob: -10.773777961730957
    10. 'af' → logprob: -10.898777961730957

Token 275: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.0206720617134124e-05
    2. 'interval' → logprob: -12.37501049041748
    3. 'al' → logprob: -13.12501049041748
    4. 'inter' → logprob: -13.12501049041748
    5. '[' → logprob: -15.25001049041748
    6. 'Intervals' → logprob: -15.37501049041748
    7. 's' → logprob: -15.37501049041748
    8. '   ' → logprob: -15.75001049041748
    9. 'er' → logprob: -16.000009536743164
    10. 'l' → logprob: -16.250009536743164

Token 276: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.045212458819150925
    2. 'vals' → logprob: -3.170212507247925
    3. 'al' → logprob: -6.795212268829346
    4. '[' → logprob: -8.295212745666504
    5. '   ' → logprob: -8.920212745666504
    6. 'val' → logprob: -9.420212745666504
    7. 'interval' → logprob: -9.420212745666504
    8. '_inter' → logprob: -9.670212745666504
    9. 'ls' → logprob: -10.295212745666504
    10. '```' → logprob: -10.295212745666504

Token 277: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.380904672667384e-05
    2. '[f' → logprob: -11.125033378601074
    3. '[' → logprob: -11.750033378601074
    4. ' [' → logprob: -12.000033378601074
    5. '
' → logprob: -13.375033378601074
    6. '```' → logprob: -14.000033378601074
    7. ')[' → logprob: -14.250033378601074
    8. '   ' → logprob: -14.500033378601074
    9. 'i' → logprob: -15.250033378601074
    10. '[
' → logprob: -15.250033378601074

Token 278: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013062936253845692
    2. '[' → logprob: -4.388062953948975
    3. '
' → logprob: -8.388062477111816
    4. ' ][' → logprob: -8.763062477111816
    5. '0' → logprob: -9.763062477111816
    6. ']' → logprob: -10.138062477111816
    7. '   ' → logprob: -10.888062477111816
    8. '1' → logprob: -11.513062477111816
    9. ']
' → logprob: -12.263062477111816
    10. '+' → logprob: -12.263062477111816

Token 279: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. '
' → logprob: -10.875041007995605
    3. ' ' → logprob: -11.750041007995605
    4. '   ' → logprob: -12.375041007995605
    5. '```' → logprob: -12.500041007995605
    6. '0' → logprob: -13.500041007995605
    7. '

' → logprob: -14.187541007995605
    8. '``' → logprob: -14.312541007995605
    9. '
' → logprob: -14.875041007995605
    10. '`' → logprob: -15.000041007995605

Token 280: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008905977010726929
    2. '],' → logprob: -5.00890588760376
    3. ' ,' → logprob: -6.25890588760376
    4. '   ' → logprob: -9.008906364440918
    5. ',
' → logprob: -9.383906364440918
    6. ',f' → logprob: -10.383906364440918
    7. ' ],' → logprob: -12.008906364440918
    8. ',

' → logprob: -12.133906364440918
    9. '),' → logprob: -12.383906364440918
    10. '+' → logprob: -12.383906364440918

Token 281: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0004329341172706336
    2. ' fav' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.875432968139648
    4. 'favor' → logprob: -14.625432968139648
    5. '    ' → logprob: -15.250432968139648
    6. 'fam' → logprob: -16.25043296813965
    7. 'f' → logprob: -16.25043296813965
    8. ' ' → logprob: -16.62543296813965
    9. '
' → logprob: -16.75043296813965
    10. '       ' → logprob: -17.50043296813965

Token 282: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -9.253090865968261e-06
    2. 'inter' → logprob: -12.375009536743164
    3. 'interval' → logprob: -12.875009536743164
    4. '_interval' → logprob: -14.500009536743164
    5. '[i' → logprob: -14.750009536743164
    6. '   ' → logprob: -15.125009536743164
    7. 'f' → logprob: -15.375009536743164
    8. '[' → logprob: -15.375009536743164
    9. 'i' → logprob: -15.750009536743164
    10. 'Intervals' → logprob: -15.750009536743164

Token 283: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.6603560447692871
    2. 'vals' → logprob: -0.7853560447692871
    3. 'al' → logprob: -4.535356044769287
    4. '_inter' → logprob: -4.660356044769287
    5. 'val' → logprob: -6.285356044769287
    6. 'interval' → logprob: -6.910356044769287
    7. '[' → logprob: -7.160356044769287
    8. 'ivals' → logprob: -7.285356044769287
    9. 'ls' → logprob: -7.660356044769287
    10. '[i' → logprob: -7.785356044769287

Token 284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0032516273204237223
    2. '[' → logprob: -6.003251552581787
    3. 'i' → logprob: -7.253251552581787
    4. '][' → logprob: -10.628252029418945
    5. '+' → logprob: -11.378252029418945
    6. '   ' → logprob: -11.378252029418945
    7. '1' → logprob: -11.503252029418945
    8. ' [' → logprob: -12.378252029418945
    9. '(i' → logprob: -13.253252029418945
    10. ' ' → logprob: -13.628252029418945

Token 285: '][' (ID: 2696)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3144850432872772
    2. '][' → logprob: -1.3144850730895996
    3. ' +' → logprob: -7.0644850730896
    4. '[' → logprob: -8.189484596252441
    5. '1' → logprob: -9.814484596252441
    6. '   ' → logprob: -10.814484596252441
    7. ' ][' → logprob: -11.939484596252441
    8. '+i' → logprob: -13.314484596252441
    9. 'i' → logprob: -13.814484596252441
    10. ' ' → logprob: -13.814484596252441

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.417976379045285e-05
    2. 'i' → logprob: -10.625043869018555
    3. ' ' → logprob: -11.625043869018555
    4. '+' → logprob: -12.125043869018555
    5. '][' → logprob: -13.375043869018555
    6. '   ' → logprob: -13.750043869018555
    7. '
' → logprob: -14.000043869018555
    8. '[' → logprob: -14.500043869018555
    9. '-' → logprob: -14.625043869018555
    10. 'interval' → logprob: -15.625043869018555

Token 287: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02081548608839512
    2. ' ,' → logprob: -4.145815372467041
    3. ',f' → logprob: -5.895815372467041
    4. '   ' → logprob: -7.020815372467041
    5. ',
' → logprob: -7.395815372467041
    6. '],' → logprob: -8.0208158493042
    7. '),' → logprob: -9.6458158493042
    8. '       ' → logprob: -9.8958158493042
    9. '    ' → logprob: -10.7708158493042
    10. ' ' → logprob: -12.2708158493042

Token 288: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.00867461133748293
    2. ' fav' → logprob: -4.758674621582031
    3. '   ' → logprob: -10.008674621582031
    4. '    ' → logprob: -11.633674621582031
    5. '       ' → logprob: -13.008674621582031
    6. 'f' → logprob: -13.883674621582031
    7. '        ' → logprob: -14.008674621582031
    8. '
' → logprob: -14.758674621582031
    9. 'favor' → logprob: -14.883674621582031
    10. '           ' → logprob: -14.883674621582031

Token 289: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -2.069664333248511e-05
    2. 'f' → logprob: -11.750020980834961
    3. 'inter' → logprob: -12.000020980834961
    4. 'interval' → logprob: -12.750020980834961
    5. 'fav' → logprob: -12.875020980834961
    6. '_interval' → logprob: -15.500020980834961
    7. 's' → logprob: -15.875020980834961
    8. '[' → logprob: -16.12502098083496
    9. ' intervals' → logprob: -16.25002098083496
    10. '_intr' → logprob: -16.50002098083496

Token 290: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.7007542252540588
    2. '_inter' → logprob: -1.200754165649414
    3. 'vals' → logprob: -1.700754165649414
    4. 'al' → logprob: -4.450754165649414
    5. 'ivals' → logprob: -5.825754165649414
    6. 'ials' → logprob: -6.325754165649414
    7. 'val' → logprob: -6.825754165649414
    8. 'interval' → logprob: -7.575754165649414
    9. '[' → logprob: -7.950754165649414
    10. 'erv' → logprob: -8.450754165649414

Token 291: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025954778539016843
    2. '[' → logprob: -9.000259399414062
    3. 'i' → logprob: -10.125259399414062
    4. '][' → logprob: -10.375259399414062
    5. '   ' → logprob: -11.375259399414062
    6. '[f' → logprob: -11.375259399414062
    7. '
' → logprob: -11.625259399414062
    8. ' [' → logprob: -11.750259399414062
    9. 'f' → logprob: -12.125259399414062
    10. ')[' → logprob: -12.375259399414062

Token 292: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000332485738908872
    2. ' +' → logprob: -8.250332832336426
    3. '][' → logprob: -9.750332832336426
    4. '[i' → logprob: -11.875332832336426
    5. '[' → logprob: -12.625332832336426
    6. '   ' → logprob: -13.875332832336426
    7. '+i' → logprob: -14.375332832336426
    8. 'i' → logprob: -14.500332832336426
    9. '1' → logprob: -15.125332832336426
    10. '+[' → logprob: -16.12533187866211

Token 293: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003217879915609956
    2. '1' → logprob: -5.753217697143555
    3. '][' → logprob: -10.378217697143555
    4. ' ' → logprob: -12.003217697143555
    5. '
' → logprob: -13.378217697143555
    6. '[' → logprob: -14.378217697143555
    7. '-' → logprob: -15.003217697143555
    8. 'i' → logprob: -15.753217697143555
    9. '   ' → logprob: -15.753217697143555
    10. '```' → logprob: -17.753217697143555

Token 294: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020442712120711803
    2. '[' → logprob: -6.252044200897217
    3. ' ][' → logprob: -9.502044677734375
    4. ']' → logprob: -11.002044677734375
    5. '   ' → logprob: -11.877044677734375
    6. '0' → logprob: -12.377044677734375
    7. ')[' → logprob: -13.252044677734375
    8. ''][' → logprob: -13.252044677734375
    9. '```' → logprob: -13.627044677734375
    10. '"][' → logprob: -13.627044677734375

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '][' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '1' → logprob: -17.500001907348633
    7. '
' → logprob: -17.500001907348633
    8. '```' → logprob: -18.000001907348633
    9. '00' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.562501907348633

Token 296: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012197628384456038
    2. ' ,' → logprob: -7.376219749450684
    3. '],' → logprob: -7.626219749450684
    4. '),' → logprob: -10.001219749450684
    5. ',f' → logprob: -10.126219749450684
    6. '   ' → logprob: -11.501219749450684
    7. '(),' → logprob: -12.876219749450684
    8. ',
' → logprob: -13.126219749450684
    9. '[],' → logprob: -14.376219749450684
    10. '       ' → logprob: -14.376219749450684

Token 297: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.004626530222594738
    2. ' fav' → logprob: -5.379626750946045
    3. 'f' → logprob: -13.254626274108887
    4. '   ' → logprob: -13.504626274108887
    5. 'favor' → logprob: -13.754626274108887
    6. ' ' → logprob: -14.629626274108887
    7. '
' → logprob: -14.879626274108887
    8. 'fam' → logprob: -14.879626274108887
    9. '  ' → logprob: -15.504626274108887
    10. '    ' → logprob: -16.129627227783203

Token 298: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -3.583550642360933e-05
    2. 'fav' → logprob: -10.500036239624023
    3. 'f' → logprob: -12.250036239624023
    4. 'interval' → logprob: -14.250036239624023
    5. 'inter' → logprob: -14.250036239624023
    6. '[' → logprob: -14.375036239624023
    7. '_f' → logprob: -15.000036239624023
    8. '[f' → logprob: -15.000036239624023
    9. '[i' → logprob: -15.125036239624023
    10. '_interval' → logprob: -15.500036239624023

Token 299: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.7351706624031067
    2. 'vals' → logprob: -1.485170602798462
    3. '_inter' → logprob: -1.735170602798462
    4. 'al' → logprob: -2.485170602798462
    5. 'erv' → logprob: -4.110170841217041
    6. 'val' → logprob: -4.860170841217041
    7. 'ter' → logprob: -6.360170841217041
    8. '1' → logprob: -6.485170841217041
    9. 'inter' → logprob: -6.860170841217041
    10. '   ' → logprob: -6.985170841217041

Token 300: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20376333594322205
    2. '[' → logprob: -1.7037633657455444
    3. '][' → logprob: -6.703763484954834
    4. '+' → logprob: -7.328763484954834
    5. '1' → logprob: -8.328763008117676
    6. ')[' → logprob: -9.703763008117676
    7. 'i' → logprob: -9.703763008117676
    8. ' [' → logprob: -11.078763008117676
    9. '   ' → logprob: -11.328763008117676
    10. '+i' → logprob: -11.328763008117676

Token 301: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.40951547026634216
    2. '[' → logprob: -1.5345155000686646
    3. '+' → logprob: -2.159515380859375
    4. '1' → logprob: -5.409515380859375
    5. '   ' → logprob: -8.159515380859375
    6. ')[' → logprob: -9.034515380859375
    7. ' ][' → logprob: -9.784515380859375
    8. ' [' → logprob: -10.909515380859375
    9. '```' → logprob: -11.159515380859375
    10. ']' → logprob: -11.159515380859375

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. '[' → logprob: -14.562503814697266
    4. '2' → logprob: -14.875003814697266
    5. '```' → logprob: -15.125003814697266
    6. ']' → logprob: -15.812503814697266
    7. '   ' → logprob: -16.125003814697266
    8. '+' → logprob: -16.250003814697266
    9. '۱' → logprob: -16.375003814697266
    10. '
' → logprob: -16.500003814697266

Token 303: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011255897581577301
    2. '[' → logprob: -4.511255741119385
    3. '1' → logprob: -8.761256217956543
    4. ' ][' → logprob: -10.636256217956543
    5. ')[' → logprob: -11.761256217956543
    6. ']' → logprob: -12.011256217956543
    7. '])' → logprob: -12.261256217956543
    8. '   ' → logprob: -12.761256217956543
    9. ' [' → logprob: -14.011256217956543
    10. '```' → logprob: -14.136256217956543

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.625007629394531
    3. '[' → logprob: -13.000007629394531
    4. ']' → logprob: -14.687507629394531
    5. '```' → logprob: -15.312507629394531
    6. '][' → logprob: -15.375007629394531
    7. '   ' → logprob: -15.375007629394531
    8. '])' → logprob: -15.937507629394531
    9. '１' → logprob: -16.12500762939453
    10. '۱' → logprob: -16.31250762939453

Token 305: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009315869538113475
    2. '):
' → logprob: -7.000931739807129
    3. ')' → logprob: -11.000931739807129
    4. ' ):' → logprob: -13.500931739807129
    5. ':' → logprob: -13.625931739807129
    6. '   ' → logprob: -15.125931739807129
    7. ''):' → logprob: -15.875931739807129
    8. '):
' → logprob: -15.875931739807129
    9. '):

' → logprob: -16.750930786132812
    10. '"):' → logprob: -17.125930786132812

Token 306: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032677841372787952
    2. '   ' → logprob: -6.128267765045166
    3. ' conflict' → logprob: -7.503267765045166
    4. '           ' → logprob: -8.628268241882324
    5. ':
' → logprob: -8.628268241882324
    6. '
' → logprob: -9.378268241882324
    7. ':' → logprob: -10.128268241882324
    8. 'conf' → logprob: -10.503268241882324
    9. '):
' → logprob: -11.878268241882324
    10. '    
' → logprob: -13.378268241882324

Token 307: ' conflict' (ID: 21461)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.35797032713890076
    2. ' conflict' → logprob: -1.6079703569412231
    3. '   ' → logprob: -2.3579702377319336
    4. '       ' → logprob: -5.357970237731934
    5. '           ' → logprob: -6.982970237731934
    6. '               ' → logprob: -8.107970237731934
    7. '
' → logprob: -10.607970237731934
    8. '	conf' → logprob: -10.982970237731934
    9. ' conf' → logprob: -11.982970237731934
    10. ' ' → logprob: -12.732970237731934

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759464502334595
    2. ' =' → logprob: -0.8259464502334595
    3. '=True' → logprob: -11.950946807861328
    4. ' ' → logprob: -15.200946807861328
    5. '   ' → logprob: -16.700946807861328
    6. 's' → logprob: -16.825946807861328
    7. '=False' → logprob: -16.950946807861328
    8. ' =
' → logprob: -17.200946807861328
    9. '=
' → logprob: -17.700946807861328
    10. '    ' → logprob: -17.950946807861328

Token 309: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '=True' → logprob: -18.626928329467773
    4. '(True' → logprob: -20.376928329467773
    5. 'Tr' → logprob: -21.251928329467773
    6. ' ' → logprob: -22.376928329467773
    7. 'T' → logprob: -23.251928329467773
    8. 'False' → logprob: -23.376928329467773
    9. '1' → logprob: -23.376928329467773
    10. '   ' → logprob: -23.626928329467773

Token 310: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005961624556221068
    2. '       ' → logprob: -8.250596046447754
    3. '   ' → logprob: -8.500596046447754
    4. '
' → logprob: -9.625596046447754
    5. '               ' → logprob: -10.875596046447754
    6. '		' → logprob: -11.250596046447754
    7. '            
' → logprob: -11.375596046447754
    8. '    
' → logprob: -11.750596046447754
    9. '          ' → logprob: -12.875596046447754
    10. '            ' → logprob: -13.000596046447754

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009960101451724768
    2. '   ' → logprob: -7.125996112823486
    3. 'break' → logprob: -9.625995635986328
    4. '
' → logprob: -10.000995635986328
    5. '       ' → logprob: -10.375995635986328
    6. 'print' → logprob: -10.750995635986328
    7. ' break' → logprob: -11.250995635986328
    8. '		' → logprob: -12.375995635986328
    9. '               ' → logprob: -13.000995635986328
    10. '    
' → logprob: -13.375995635986328

Token 312: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24121253192424774
    2. ' break' → logprob: -2.2412126064300537
    3. 'break' (adapté à ' break') → logprob: -2.2412126064300537
    4. '       ' → logprob: -7.116212368011475
    5. '   ' → logprob: -7.241212368011475
    6. '	break' → logprob: -9.741212844848633
    7. '               ' → logprob: -10.491212844848633
    8. '
' → logprob: -10.866212844848633
    9. '		' → logprob: -11.616212844848633
    10. '```' → logprob: -12.616212844848633

Token 313: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4268783628940582
    2. '   ' → logprob: -1.1768783330917358
    3. 'if' → logprob: -3.3018784523010254
    4. '    
' → logprob: -6.801878452301025
    5. ' if' → logprob: -7.176878452301025
    6. '<|end|>' → logprob: -7.676878452301025
    7. '  
' → logprob: -11.176877975463867
    8. '
' → logprob: -11.801877975463867
    9. '	if' → logprob: -11.801877975463867
    10. '       ' → logprob: -12.051877975463867

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38952139019966125
    2. 'if' → logprob: -1.1395213603973389
    3. '
' → logprob: -6.514521598815918
    4. ' if' → logprob: -7.264521598815918
    5. '    
' → logprob: -7.764521598815918
    6. '<|end|>' → logprob: -11.764521598815918
    7. '       ' → logprob: -11.889521598815918
    8. '	if' → logprob: -12.389521598815918
    9. '  
' → logprob: -12.514521598815918
    10. 'print' → logprob: -12.514521598815918

Token 315: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38712984323501587
    2. 'if' (adapté à ' if') → logprob: -1.137129783630371
    3. ' if' → logprob: -8.387129783630371
    4. '    
' → logprob: -10.637129783630371
    5. '
' → logprob: -12.887129783630371
    6. '       ' → logprob: -14.012129783630371
    7. '	if' → logprob: -14.137129783630371
    8. '```' → logprob: -14.137129783630371
    9. 'print' → logprob: -14.637129783630371
    10. 'import' → logprob: -14.762129783630371

Token 316: ' conflict' (ID: 21461)
  Prédit: ' conflict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflict' → logprob: -0.0013522605877369642
    2. 'conf' → logprob: -7.251352310180664
    3. ' not' → logprob: -7.376352310180664
    4. 'not' → logprob: -11.501352310180664
    5. ' ' → logprob: -12.251352310180664
    6. ' conf' → logprob: -13.876352310180664
    7. ' conflicto' → logprob: -15.876352310180664
    8. ' conflic' → logprob: -16.376352310180664
    9. ' ' → logprob: -16.876352310180664
    10. ' conflit' → logprob: -17.001352310180664

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052428836934268475
    2. ':
' → logprob: -5.255242824554443
    3. '   ' → logprob: -12.255243301391602
    4. ' :' → logprob: -13.130243301391602
    5. 'print' → logprob: -13.880243301391602
    6. '==' → logprob: -14.130243301391602
    7. ':
' → logprob: -15.755243301391602
    8. ' print' → logprob: -15.880243301391602
    9. ' or' → logprob: -16.0052433013916
    10. ' ==' → logprob: -16.3802433013916

Token 318: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12821130454540253
    2. '       ' → logprob: -2.128211259841919
    3. ' print' → logprob: -6.753211498260498
    4. 'print' → logprob: -9.12821102142334
    5. '
' → logprob: -13.37821102142334
    6. '    
' → logprob: -13.50321102142334
    7. '	print' → logprob: -14.25321102142334
    8. '   ' → logprob: -14.37821102142334
    9. '           ' → logprob: -14.62821102142334
    10. ' ' → logprob: -14.75321102142334

Token 319: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0044625201262533665
    2. '   ' → logprob: -5.504462718963623
    3. ' print' → logprob: -7.879462718963623
    4. 'sys' → logprob: -12.754462242126465
    5. 'continue' → logprob: -14.379462242126465
    6. '       ' → logprob: -14.754462242126465
    7. '```' → logprob: -14.754462242126465
    8. ' ' → logprob: -14.879462242126465
    9. 'for' → logprob: -15.379462242126465
    10. '
' → logprob: -15.504462242126465

Token 320: '(-' (ID: 8087)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4979060888290405
    2. '("' → logprob: -1.8729060888290405
    3. '"No' → logprob: -1.8729060888290405
    4. 'NO' → logprob: -4.37290620803833
    5. 'conf' → logprob: -4.37290620803833
    6. 'No' → logprob: -4.74790620803833
    7. 'YES' → logprob: -4.87290620803833
    8. 'Yes' → logprob: -5.37290620803833
    9. 'Conflict' → logprob: -5.37290620803833
    10. ''' → logprob: -5.37290620803833

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. '2' → logprob: -10.000075340270996
    3. '-' → logprob: -11.000075340270996
    4. ' ' → logprob: -11.750075340270996
    5. '3' → logprob: -13.125075340270996
    6. '100' → logprob: -14.437575340270996
    7. '0' → logprob: -14.500075340270996
    8. '10' → logprob: -14.687575340270996
    9. '30' → logprob: -15.375075340270996
    10. '5' → logprob: -15.562575340270996

Token 322: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11747550964355469
    2. ')
' → logprob: -2.2424755096435547
    3. '   ' → logprob: -5.492475509643555
    4. '       ' → logprob: -7.617475509643555
    5. ')
' → logprob: -11.492475509643555
    6. '	continue' → logprob: -11.492475509643555
    7. ',' → logprob: -13.367475509643555
    8. ')return' → logprob: -13.617475509643555
    9. '	' → logprob: -13.742475509643555
    10. '<|end|>' → logprob: -13.867475509643555

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024327507242560387
    2. '       ' → logprob: -3.774327516555786
    3. 'else' → logprob: -7.024327278137207
    4. 'continue' → logprob: -9.399327278137207
    5. ' continue' → logprob: -9.774327278137207
    6. ' else' → logprob: -10.399327278137207
    7. '	continue' → logprob: -11.399327278137207
    8. '<|end|>' → logprob: -13.149327278137207
    9. ')' → logprob: -13.399327278137207
    10. '  ' → logprob: -14.024327278137207

Token 324: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1616319715976715
    2. 'continue' (adapté à ' continue') → logprob: -2.1616320610046387
    3. '   ' → logprob: -3.9116320610046387
    4. ' continue' → logprob: -4.286632061004639
    5. '	continue' → logprob: -8.03663158416748
    6. 'else' → logprob: -11.28663158416748
    7. ' ' → logprob: -12.03663158416748
    8. '	' → logprob: -13.03663158416748
    9. 'contin' → logprob: -13.28663158416748
    10. '_continue' → logprob: -14.03663158416748

Token 325: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015066476771607995
    2. '    
' → logprob: -6.626506805419922
    3. '#' → logprob: -9.376506805419922
    4. '    ' → logprob: -10.376506805419922
    5. '
' → logprob: -10.876506805419922
    6. 'available' → logprob: -12.251506805419922
    7. '        
' → logprob: -12.251506805419922
    8. '<|end|>' → logprob: -12.376506805419922
    9. 'total' → logprob: -12.501506805419922
    10. '```' → logprob: -12.626506805419922

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5917787551879883
    2. '#' → logprob: -1.5917787551879883
    3. 'max' → logprob: -2.9667787551879883
    4. 'possible' → logprob: -3.4667787551879883
    5. 'best' → logprob: -3.8417787551879883
    6. 'available' → logprob: -3.9667787551879883
    7. 'all' → logprob: -4.216778755187988
    8. 'else' → logprob: -4.466778755187988
    9. 'rest' → logprob: -4.841778755187988
    10. 'res' → logprob: -4.966778755187988

Token 327: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5289595127105713
    2. '#' (adapté à ' #') → logprob: -2.0289595127105713
    3. 'possible' → logprob: -2.0289595127105713
    4. 'available' → logprob: -2.1539595127105713
    5. 'all' → logprob: -2.5289595127105713
    6. 'best' → logprob: -3.1539595127105713
    7. 'max' → logprob: -3.2789595127105713
    8. 'selected' → logprob: -3.9039595127105713
    9. 'total' → logprob: -4.278959274291992
    10. 'allowed' → logprob: -4.403959274291992

Token 328: ' filter' (ID: 6690)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9234848022460938
    2. 'dp' → logprob: -1.0484848022460938
    3. 'fav' → logprob: -2.6734848022460938
    4. 'available' → logprob: -2.9234848022460938
    5. 'times' → logprob: -3.7984848022460938
    6. 'all' → logprob: -3.7984848022460938
    7. 'from' → logprob: -4.048484802246094
    8. 'possible' → logprob: -4.423484802246094
    9. 'import' → logprob: -4.798484802246094
    10. 'selected' → logprob: -4.923484802246094

Token 329: ' compatible' (ID: 24686)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.03689758852124214
    2. '   ' → logprob: -4.036897659301758
    3. 'f' → logprob: -5.161897659301758
    4. ' times' → logprob: -5.286897659301758
    5. 'program' → logprob: -6.036897659301758
    6. 'fav' → logprob: -6.286897659301758
    7. ' programs' → logprob: -7.161897659301758
    8. '_times' → logprob: -7.161897659301758
    9. '(times' → logprob: -7.911897659301758
    10. ' =' → logprob: -8.286897659301758

Token 330: ' programs' (ID: 8094)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.6276962757110596
    2. 'times' → logprob: -1.0026962757110596
    3. 'f' → logprob: -3.2526962757110596
    4. '=' → logprob: -4.1276960372924805
    5. '_program' → logprob: -4.3776960372924805
    6. '_times' → logprob: -4.5026960372924805
    7. 'pro' → logprob: -5.2526960372924805
    8. ' =' → logprob: -5.3776960372924805
    9. '_f' → logprob: -5.7526960372924805
    10. 'with' → logprob: -5.7526960372924805

Token 331: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1866697072982788
    2. 'compatible' → logprob: -2.0616698265075684
    3. ' compatible' → logprob: -3.4366698265075684
    4. ' =' → logprob: -5.186669826507568
    5. ' compatibles' → logprob: -6.561669826507568
    6. 'comp' → logprob: -7.061669826507568
    7. '=' → logprob: -7.561669826507568
    8. 'compat' → logprob: -7.686669826507568
    9. 'non' → logprob: -8.06166934967041
    10. 'with' → logprob: -8.18666934967041

Token 332: 'no' (ID: 1750)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.5031514167785645
    2. ')' → logprob: -1.5031514167785645
    3. 'f' → logprob: -2.3781514167785645
    4. ')
' → logprob: -3.5031514167785645
    5. 'for' → logprob: -4.3781514167785645
    6. 'lambda' → logprob: -5.6281514167785645
    7. '=' → logprob: -5.7531514167785645
    8. 'p' → logprob: -6.0031514167785645
    9. '[])' → logprob: -6.0031514167785645
    10. 'program' → logprob: -6.1281514167785645

Token 333: ' overlaps' (ID: 173439)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.017453515902161598
    2. ' overlaps' → logprob: -5.142453670501709
    3. ')' → logprob: -6.142453670501709
    4. 'over' → logprob: -6.267453670501709
    5. 't' → logprob: -6.392453670501709
    6. ' conflict' → logprob: -6.517453670501709
    7. '_overlap' → logprob: -6.892453670501709
    8. ' ' → logprob: -7.142453670501709
    9. ' conflicts' → logprob: -7.392453670501709
    10. ' overlapping' → logprob: -7.642453670501709

Token 334: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.7556732892990112
    2. ' with' → logprob: -1.2556732892990112
    3. ')' → logprob: -1.6306732892990112
    4. '   ' → logprob: -3.255673408508301
    5. ')
' → logprob: -4.880673408508301
    6. '=' → logprob: -6.630673408508301
    7. ',' → logprob: -6.880673408508301
    8. ' and' → logprob: -9.0056734085083
    9. ' among' → logprob: -9.0056734085083
    10. '=True' → logprob: -9.1306734085083

Token 335: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.5321559309959412
    2. 'f' → logprob: -1.532155990600586
    3. 'any' → logprob: -1.907155990600586
    4. ' any' → logprob: -3.657155990600586
    5. ' fav' → logprob: -5.282155990600586
    6. 'program' → logprob: -5.532155990600586
    7. 'the' → logprob: -5.907155990600586
    8. '   ' → logprob: -6.282155990600586
    9. 'times' → logprob: -6.532155990600586
    10. 'favorites' → logprob: -6.782155990600586

Token 336: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2943747043609619
    2. '_inter' → logprob: -1.794374704360962
    3. ')' → logprob: -2.669374704360962
    4. '_' → logprob: -4.919374465942383
    5. 'or' → logprob: -5.169374465942383
    6. 'program' → logprob: -6.669374465942383
    7. '_program' → logprob: -6.669374465942383
    8. ' intervals' → logprob: -7.294374465942383
    9. '_)' → logprob: -7.669374465942383
    10. 'interval' → logprob: -7.794374465942383

Token 337: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32824409008026123
    2. ')' → logprob: -1.3282440900802612
    3. ')
' → logprob: -4.453244209289551
    4. ',' → logprob: -7.078244209289551
    5. ' for' → logprob: -7.328244209289551
    6. ' programs' → logprob: -7.953244209289551
    7. 'compatible' → logprob: -8.20324420928955
    8. ':' → logprob: -8.45324420928955
    9. '    
' → logprob: -8.82824420928955
    10. '
' → logprob: -9.20324420928955

Token 338: '   ' (ID: 271)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.2716076374053955
    2. ' compatible' → logprob: -1.6466076374053955
    3. '   ' → logprob: -3.1466076374053955
    4. 'compat' → logprob: -7.021607398986816
    5. ' compatibles' → logprob: -7.021607398986816
    6. ' compat' → logprob: -9.271607398986816
    7. 'comp' → logprob: -9.396607398986816
    8. 'non' → logprob: -10.146607398986816
    9. 'filtered' → logprob: -10.521607398986816
    10. ' non' → logprob: -10.646607398986816

Token 339: ' #' (ID: 1069)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.016357742249965668
    2. ' compatible' → logprob: -4.641357898712158
    3. 'compat' → logprob: -5.266357898712158
    4. '   ' → logprob: -7.891357898712158
    5. 'comp' → logprob: -7.891357898712158
    6. 'non' → logprob: -8.641357421875
    7. ' compatibles' → logprob: -8.766357421875
    8. 'filtered' → logprob: -9.516357421875
    9. 'def' → logprob: -9.891357421875
    10. ' compat' → logprob: -10.266357421875

Token 340: ' also' (ID: 1217)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.022928735241293907
    2. 'compat' → logprob: -4.397928714752197
    3. 'comp' → logprob: -5.147928714752197
    4. 'non' → logprob: -7.147928714752197
    5. 'filtered' → logprob: -7.147928714752197
    6. 'def' → logprob: -7.647928714752197
    7. ' compatible' → logprob: -7.772928714752197
    8. 'others' → logprob: -8.147929191589355
    9. 'allowed' → logprob: -8.522929191589355
    10. 'fav' → logprob: -8.772929191589355

Token 341: ' fix' (ID: 9295)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.48210200667381287
    2. 'fav' → logprob: -1.4821020364761353
    3. ' compatible' → logprob: -2.4821019172668457
    4. 'f' → logprob: -4.482101917266846
    5. 'for' → logprob: -4.982101917266846
    6. 'exclude' → logprob: -5.107101917266846
    7. 'non' → logprob: -5.232101917266846
    8. '   ' → logprob: -5.357101917266846
    9. 'compat' → logprob: -5.607101917266846
    10. 'allowed' → logprob: -5.607101917266846

Token 342: ' all' (ID: 722)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.26049038767814636
    2. ' compatible' → logprob: -1.6354904174804688
    3. '   ' → logprob: -4.135490417480469
    4. 'compat' → logprob: -5.510490417480469
    5. 'for' → logprob: -6.260490417480469
    6. 'comp' → logprob: -6.260490417480469
    7. ' compatibles' → logprob: -6.385490417480469
    8. ' compat' → logprob: -6.635490417480469
    9. ' for' → logprob: -7.135490417480469
    10. 'filtered' → logprob: -7.385490417480469

Token 343: ' program' (ID: 2193)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.10000768303871155
    2. ' compatible' → logprob: -3.9750077724456787
    3. 'for' → logprob: -4.1000075340271
    4. '   ' → logprob: -4.3500075340271
    5. 'times' → logprob: -4.7250075340271
    6. 'compat' → logprob: -4.9750075340271
    7. '_' → logprob: -5.2250075340271
    8. ' for' → logprob: -5.6000075340271
    9. 'program' → logprob: -5.8500075340271
    10. 'comp' → logprob: -6.2250075340271

Token 344: ' list' (ID: 1562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0023116690572351217
    2. 'ms' → logprob: -8.252311706542969
    3. '_names' → logprob: -8.252311706542969
    4. 'times' → logprob: -8.252311706542969
    5. 'for' → logprob: -8.377311706542969
    6. '_list' → logprob: -8.502311706542969
    7. '_times' → logprob: -8.502311706542969
    8. '_end' → logprob: -9.377311706542969
    9. ' for' → logprob: -10.002311706542969
    10. 'names' → logprob: -10.002311706542969

Token 345: '
' (ID: 198)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.9354930520057678
    2. '   ' → logprob: -1.060492992401123
    3. 'filtered' → logprob: -2.310492992401123
    4. ' =' → logprob: -3.060492992401123
    5. '=' → logprob: -3.310492992401123
    6. 'fixed' → logprob: -4.060492992401123
    7. 'program' → logprob: -4.060492992401123
    8. 'new' → logprob: -4.810492992401123
    9. ' compatible' → logprob: -5.060492992401123
    10. 'comp' → logprob: -5.060492992401123

Token 346: '   ' (ID: 271)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.4157271981239319
    2. '   ' → logprob: -1.540727138519287
    3. ' compatible' → logprob: -2.165727138519287
    4. 'filtered' → logprob: -5.665727138519287
    5. 'compat' → logprob: -6.290727138519287
    6. ' compatibles' → logprob: -6.790727138519287
    7. 'non' → logprob: -7.040727138519287
    8. 'all' → logprob: -7.165727138519287
    9. 'comp' → logprob: -7.915727138519287
    10. ' non' → logprob: -8.040727615356445

Token 347: ' fav' (ID: 11726)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.011953349225223064
    2. ' compatible' → logprob: -4.886953353881836
    3. 'compat' → logprob: -6.386953353881836
    4. '   ' → logprob: -6.886953353881836
    5. 'filtered' → logprob: -7.261953353881836
    6. 'comp' → logprob: -8.886953353881836
    7. 'non' → logprob: -9.011953353881836
    8. 'valid' → logprob: -9.011953353881836
    9. ' compatibles' → logprob: -9.136953353881836
    10. 'all' → logprob: -9.386953353881836

Token 348: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.43912363052368164
    2. '_inter' → logprob: -2.1891236305236816
    3. '_names' → logprob: -2.6891236305236816
    4. 's' → logprob: -2.9391236305236816
    5. '_times' → logprob: -3.0641236305236816
    6. '_ids' → logprob: -3.5641236305236816
    7. '_end' → logprob: -4.314123630523682
    8. '_start' → logprob: -4.439123630523682
    9. '_program' → logprob: -4.939123630523682
    10. '_' → logprob: -5.564123630523682

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894454151391983
    2. '=' → logprob: -2.578944444656372
    3. '=set' → logprob: -9.828944206237793
    4. ' ' → logprob: -14.703944206237793
    5. ' ' → logprob: -16.07894515991211
    6. ',' → logprob: -16.57894515991211
    7. ' =
' → logprob: -16.57894515991211
    8. ' ={' → logprob: -16.70394515991211
    9. ')' → logprob: -17.57894515991211
    10. '={}' → logprob: -17.57894515991211

Token 350: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004078401252627373
    2. ' set' → logprob: -5.504078388214111
    3. '=set' → logprob: -18.129077911376953
    4. '	set' → logprob: -19.254077911376953
    5. '(set' → logprob: -20.004077911376953
    6. '{' → logprob: -21.504077911376953
    7. ')set' → logprob: -22.254077911376953
    8. '   ' → logprob: -23.504077911376953
    9. ' ' → logprob: -24.879077911376953
    10. '.set' → logprob: -25.129077911376953

Token 351: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. 'f' → logprob: -15.125001907348633
    4. '()' → logprob: -17.250001907348633
    5. ' (' → logprob: -18.500001907348633
    6. '	f' → logprob: -19.250001907348633
    7. '(F' → logprob: -19.625001907348633
    8. '([' → logprob: -20.750001907348633
    9. '[f' → logprob: -20.875001907348633
    10. '((' → logprob: -20.875001907348633

Token 352: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.16217581927776337
    2. 'f' → logprob: -1.9121757745742798
    3. 's' → logprob: -7.16217565536499
    4. 'av' → logprob: -7.41217565536499
    5. ')' → logprob: -8.412176132202148
    6. '(f' → logprob: -8.537176132202148
    7. 'v' → logprob: -10.412176132202148
    8. 'a' → logprob: -11.037176132202148
    9. 'fav' → logprob: -11.037176132202148
    10. ' fav' → logprob: -11.162176132202148

Token 353: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011722482740879059
    2. ')
' → logprob: -6.751172065734863
    3. ' )' → logprob: -13.501172065734863
    4. ')

' → logprob: -15.126172065734863
    5. '   ' → logprob: -15.626172065734863
    6. ')
' → logprob: -15.876172065734863
    7. '())' → logprob: -16.62617301940918
    8. '}' → logprob: -17.62617301940918
    9. '))' → logprob: -17.87617301940918
    10. '),' → logprob: -18.25117301940918

Token 354: '   ' (ID: 271)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.5524123907089233
    2. '   ' → logprob: -1.0524123907089233
    3. ' compatible' → logprob: -2.677412509918213
    4. 'available' → logprob: -6.677412509918213
    5. 'filtered' → logprob: -6.927412509918213
    6. ' compatibles' → logprob: -7.177412509918213
    7. 'compat' → logprob: -7.427412509918213
    8. 'valid' → logprob: -8.052412033081055
    9. 'rest' → logprob: -8.177412033081055
    10. 'others' → logprob: -8.177412033081055

Token 355: ' fav' (ID: 11726)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.03501584380865097
    2. ' compatible' → logprob: -4.410016059875488
    3. 'filtered' → logprob: -5.160016059875488
    4. 'comp' → logprob: -5.410016059875488
    5. '   ' → logprob: -5.535016059875488
    6. 'compat' → logprob: -5.660016059875488
    7. 'non' → logprob: -6.660016059875488
    8. 'available' → logprob: -7.535016059875488
    9. 'others' → logprob: -7.660016059875488
    10. 'valid' → logprob: -8.160016059875488

Token 356: '_min' (ID: 15950)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.30728259682655334
    2. '_set' → logprob: -2.4322826862335205
    3. '_' → logprob: -2.6822826862335205
    4. '_times' → logprob: -2.8072826862335205
    5. '_program' → logprob: -3.6822826862335205
    6. '_end' → logprob: -5.182282447814941
    7. '_list' → logprob: -5.557282447814941
    8. '_names' → logprob: -6.057282447814941
    9. '_free' → logprob: -6.307282447814941
    10. '_start' → logprob: -6.557282447814941

Token 357: ' =' (ID: 314)
  Prédit: 'utes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utes' → logprob: -0.08369746804237366
    2. 's' → logprob: -2.583697557449341
    3. ' =' → logprob: -6.458697319030762
    4. 'uts' → logprob: -6.833697319030762
    5. 'ute' → logprob: -6.958697319030762
    6. '=' → logprob: -7.083697319030762
    7. '_start' → logprob: -9.083697319030762
    8. 'ues' → logprob: -9.833697319030762
    9. '_minutes' → logprob: -10.083697319030762
    10. '_times' → logprob: -10.458697319030762

Token 358: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009957717265933752
    2. 'fav' → logprob: -7.125995635986328
    3. 'float' → logprob: -9.375995635986328
    4. ' min' → logprob: -9.500995635986328
    5. 'max' → logprob: -11.000995635986328
    6. '[min' → logprob: -13.000995635986328
    7. '100' → logprob: -13.625995635986328
    8. '	min' → logprob: -13.750995635986328
    9. 'inf' → logprob: -13.750995635986328
    10. '144' → logprob: -13.875995635986328

Token 359: '(i' (ID: 3649)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.04008546471595764
    2. '(program' → logprob: -4.290085315704346
    3. '([' → logprob: -4.540085315704346
    4. '(interval' → logprob: -4.665085315704346
    5. '(p' → logprob: -5.915085315704346
    6. '(pro' → logprob: -6.915085315704346
    7. '(fi' → logprob: -7.165085315704346
    8. '(x' → logprob: -8.165085792541504
    9. '((' → logprob: -8.415085792541504
    10. '(i' → logprob: -8.415085792541504

Token 360: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012961865402758121
    2. 'n' → logprob: -4.3879618644714355
    3. 'ter' → logprob: -8.637962341308594
    4. 't' → logprob: -9.887962341308594
    5. 'start' → logprob: -10.637962341308594
    6. ' for' → logprob: -10.637962341308594
    7. 'v' → logprob: -10.762962341308594
    8. '[n' → logprob: -11.012962341308594
    9. 'nv' → logprob: -11.012962341308594
    10. 'f' → logprob: -11.137962341308594

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08902410417795181
    2. '[' → logprob: -2.464024066925049
    3. '][' → logprob: -10.339024543762207
    4. ' ' → logprob: -10.589024543762207
    5. '(' → logprob: -11.714024543762207
    6. 'for' → logprob: -12.089024543762207
    7. 't' → logprob: -12.964024543762207
    8. '   ' → logprob: -13.089024543762207
    9. '
' → logprob: -13.464024543762207
    10. 'f' → logprob: -13.964024543762207

Token 362: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5317777395248413
    2. ']' → logprob: -1.2817777395248413
    3. ' for' → logprob: -2.031777858734131
    4. '][' → logprob: -5.906777858734131
    5. '[' → logprob: -8.531777381896973
    6. ' ' → logprob: -8.906777381896973
    7. '   ' → logprob: -9.031777381896973
    8. ')' → logprob: -9.031777381896973
    9. ' ]' → logprob: -9.406777381896973
    10. '0' → logprob: -9.531777381896973

Token 363: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34848424792289734
    2. 'for' → logprob: -1.2234842777252197
    3. ')' → logprob: -11.22348403930664
    4. '	for' → logprob: -11.84848403930664
    5. ',' → logprob: -12.47348403930664
    6. ' ' → logprob: -12.59848403930664
    7. '<|end|>' → logprob: -12.72348403930664
    8. '
' → logprob: -12.97348403930664
    9. '   ' → logprob: -13.22348403930664
    10. '()' → logprob: -13.22348403930664

Token 364: ' i' (ID: 575)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.03833660110831261
    2. ' fav' → logprob: -3.2883365154266357
    3. 'program' → logprob: -9.288336753845215
    4. 'f' → logprob: -9.913336753845215
    5. '   ' → logprob: -10.038336753845215
    6. ' ' → logprob: -10.288336753845215
    7. '	f' → logprob: -10.788336753845215
    8. '  ' → logprob: -11.788336753845215
    9. 'fv' → logprob: -12.163336753845215
    10. 'favor' → logprob: -12.288336753845215

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07010927051305771
    2. 'in' → logprob: -2.6951093673706055
    3. 'f' → logprob: -9.570109367370605
    4. 'i' → logprob: -10.195109367370605
    5. ' i' → logprob: -11.070109367370605
    6. ' ' → logprob: -11.320109367370605
    7. 'fav' → logprob: -11.445109367370605
    8. '   ' → logprob: -12.195109367370605
    9. ',f' → logprob: -12.945109367370605
    10. '
' → logprob: -13.070109367370605

Token 366: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0008598887361586094
    2. ' fav' → logprob: -7.12585973739624
    3. '   ' → logprob: -10.625860214233398
    4. ' ' → logprob: -11.250860214233398
    5. 'program' → logprob: -12.125860214233398
    6. 'favor' → logprob: -12.625860214233398
    7. '  ' → logprob: -13.125860214233398
    8. '
' → logprob: -13.625860214233398
    9. 'f' → logprob: -14.250860214233398
    10. 'fal' → logprob: -14.375860214233398

Token 367: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.002249580342322588
    2. 'interval' → logprob: -6.627249717712402
    3. 'inter' → logprob: -7.127249717712402
    4. 'program' → logprob: -10.502249717712402
    5. 'ter' → logprob: -11.002249717712402
    6. ' intervals' → logprob: -11.252249717712402
    7. '_set' → logprob: -11.627249717712402
    8. 's' → logprob: -11.752249717712402
    9. '_program' → logprob: -11.752249717712402
    10. 'f' → logprob: -12.002249717712402

Token 368: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.008120656944811344
    2. 'r' → logprob: -5.383120536804199
    3. 'als' → logprob: -5.883120536804199
    4. 'val' → logprob: -7.883120536804199
    5. 'erv' → logprob: -8.1331205368042
    6. 'interval' → logprob: -12.1331205368042
    7. ' vals' → logprob: -12.1331205368042
    8. 'c' → logprob: -12.3831205368042
    9. 'erval' → logprob: -12.7581205368042
    10. 't' → logprob: -13.0081205368042

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011373884975910187
    2. ')
' → logprob: -4.636373996734619
    3. ')-' → logprob: -6.761373996734619
    4. ' )' → logprob: -8.386373519897461
    5. '   ' → logprob: -8.636373519897461
    6. '-' → logprob: -11.511373519897461
    7. ')+' → logprob: -11.511373519897461
    8. ' )
' → logprob: -11.636373519897461
    9. 'if' → logprob: -12.011373519897461
    10. ' ' → logprob: -12.511373519897461

Token 370: '   ' (ID: 271)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.6331493258476257
    2. '   ' → logprob: -0.7581493258476257
    3. ' fav' → logprob: -8.383149147033691
    4. '
' → logprob: -9.008149147033691
    5. 'f' → logprob: -10.508149147033691
    6. 'all' → logprob: -11.008149147033691
    7. ',' → logprob: -11.008149147033691
    8. '    
' → logprob: -11.008149147033691
    9. 'max' → logprob: -11.258149147033691
    10. ' and' → logprob: -11.383149147033691

Token 371: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' (adapté à ' fav') → logprob: -0.015642596408724785
    2. '   ' → logprob: -4.2656426429748535
    3. 'filtered' → logprob: -7.7656426429748535
    4. 'all' → logprob: -8.140642166137695
    5. 'max' → logprob: -8.140642166137695
    6. 'compatible' → logprob: -9.015642166137695
    7. 'valid' → logprob: -9.515642166137695
    8. 'for' → logprob: -9.515642166137695
    9. ' fav' → logprob: -10.140642166137695
    10. 'f' → logprob: -11.015642166137695

Token 372: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00014013137842994183
    2. '_min' → logprob: -9.375140190124512
    3. 'max' → logprob: -9.875140190124512
    4. '_end' → logprob: -12.625140190124512
    5. '_set' → logprob: -15.625140190124512
    6. '_' → logprob: -16.125139236450195
    7. '_MAX' → logprob: -16.750139236450195
    8. '_start' → logprob: -16.875139236450195
    9. 'Max' → logprob: -18.125139236450195
    10. 's' → logprob: -18.125139236450195

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740793704986572
    2. ' =' → logprob: -0.9740793704986572
    3. 'for' → logprob: -14.599079132080078
    4. '=max' → logprob: -15.224079132080078
    5. '=int' → logprob: -15.349079132080078
    6. '(' → logprob: -15.349079132080078
    7. ')' → logprob: -15.349079132080078
    8. '=i' → logprob: -15.474079132080078
    9. '(i' → logprob: -15.849079132080078
    10. ' ' → logprob: -16.099079132080078

Token 374: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692831456661224
    2. ' max' → logprob: -2.1269283294677734
    3. '   ' → logprob: -16.376928329467773
    4. '	max' → logprob: -17.126928329467773
    5. '(max' → logprob: -17.501928329467773
    6. '=max' → logprob: -17.876928329467773
    7. ' ' → logprob: -18.001928329467773
    8. '_max' → logprob: -18.126928329467773
    9. '[max' → logprob: -18.501928329467773
    10. 'min' → logprob: -19.126928329467773

Token 375: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.250000953674316
    3. '[i' → logprob: -16.625001907348633
    4. '(f' → logprob: -16.875001907348633
    5. ' (' → logprob: -17.125001907348633
    6. '((' → logprob: -17.375001907348633
    7. '(' → logprob: -17.625001907348633
    8. '(j' → logprob: -18.375001907348633
    9. '([' → logprob: -19.000001907348633
    10. ' i' → logprob: -19.750001907348633

Token 376: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5038025379180908
    2. '[' → logprob: -1.5038025379180908
    3. '(i' → logprob: -1.7538025379180908
    4. 'i' → logprob: -8.128802299499512
    5. '(' → logprob: -10.003802299499512
    6. '   ' → logprob: -11.003802299499512
    7. '
' → logprob: -12.503802299499512
    8. ')[' → logprob: -13.128802299499512
    9. '[-' → logprob: -14.128802299499512
    10. '	i' → logprob: -14.253802299499512

Token 377: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16510175168514252
    2. '[' → logprob: -2.0401017665863037
    3. '1' → logprob: -3.9151017665863037
    4. '[i' → logprob: -6.290101528167725
    5. '(i' → logprob: -9.165102005004883
    6. '   ' → logprob: -9.290102005004883
    7. '(' → logprob: -9.665102005004883
    8. ' i' → logprob: -9.790102005004883
    9. 'j' → logprob: -11.040102005004883
    10. '0' → logprob: -11.665102005004883

Token 378: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038141097873449326
    2. 'for' → logprob: -3.2881410121917725
    3. ']' → logprob: -9.913141250610352
    4. ')' → logprob: -10.788141250610352
    5. ' ' → logprob: -11.538141250610352
    6. '	for' → logprob: -11.663141250610352
    7. '()' → logprob: -11.913141250610352
    8. '])' → logprob: -13.538141250610352
    9. '   ' → logprob: -13.788141250610352
    10. '
' → logprob: -14.038141250610352

Token 379: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.576143205165863
    2. 'for' → logprob: -0.826143205165863
    3. '()' → logprob: -8.826143264770508
    4. ')' → logprob: -10.451143264770508
    5. '(i' → logprob: -11.576143264770508
    6. '   ' → logprob: -12.076143264770508
    7. '+' → logprob: -12.451143264770508
    8. '	for' → logprob: -12.826143264770508
    9. ' ' → logprob: -13.201143264770508
    10. '
' → logprob: -13.576143264770508

Token 380: ' i' (ID: 575)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.758811354637146
    2. 'i' → logprob: -1.133811354637146
    3. ' i' → logprob: -2.2588114738464355
    4. ' fav' → logprob: -2.2588114738464355
    5. ' ' → logprob: -8.008810997009277
    6. '   ' → logprob: -8.133810997009277
    7. '[i' → logprob: -9.008810997009277
    8. '  ' → logprob: -9.258810997009277
    9. '(i' → logprob: -10.383810997009277
    10. '[' → logprob: -10.758810997009277

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14605306088924408
    2. 'fav' → logprob: -2.2710530757904053
    3. ' fav' → logprob: -4.771052837371826
    4. 'in' → logprob: -4.896052837371826
    5. ' ' → logprob: -5.271052837371826
    6. 'for' → logprob: -5.396052837371826
    7. '   ' → logprob: -5.896052837371826
    8. ' i' → logprob: -6.771052837371826
    9. ' for' → logprob: -6.896052837371826
    10. '  ' → logprob: -7.646052837371826

Token 382: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.02065318636596203
    2. ' fav' → logprob: -3.895653247833252
    3. ' ' → logprob: -10.020652770996094
    4. ' range' → logprob: -10.395652770996094
    5. 'range' → logprob: -11.145652770996094
    6. '   ' → logprob: -11.520652770996094
    7. '  ' → logprob: -12.145652770996094
    8. '[' → logprob: -13.895652770996094
    9. ' favor' → logprob: -14.020652770996094
    10. 'f' → logprob: -14.145652770996094

Token 383: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.004879350308328867
    2. 'interval' → logprob: -5.504879474639893
    3. 'inter' → logprob: -7.254879474639893
    4. 'n' → logprob: -10.504878997802734
    5. 'ter' → logprob: -10.504878997802734
    6. '[' → logprob: -11.379878997802734
    7. 'erv' → logprob: -11.629878997802734
    8. ' intervals' → logprob: -12.754878997802734
    9. 'erval' → logprob: -13.129878997802734
    10. '   ' → logprob: -13.254878997802734

Token 384: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.08375393599271774
    2. 'als' → logprob: -2.583753824234009
    3. 'val' → logprob: -6.208754062652588
    4. 'erv' → logprob: -6.583754062652588
    5. 'al' → logprob: -7.833754062652588
    6. 'r' → logprob: -8.33375358581543
    7. '[' → logprob: -8.70875358581543
    8. 'v' → logprob: -9.83375358581543
    9. '```' → logprob: -9.83375358581543
    10. 's' → logprob: -9.95875358581543

Token 385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.139322429895401
    2. '+' → logprob: -2.389322519302368
    3. ')+' → logprob: -3.389322519302368
    4. ' +' → logprob: -6.014322280883789
    5. '   ' → logprob: -6.764322280883789
    6. ')
' → logprob: -7.264322280883789
    7. ' )' → logprob: -8.514322280883789
    8. '<|end|>' → logprob: -9.889322280883789
    9. '+)' → logprob: -10.264322280883789
    10. '
' → logprob: -12.014322280883789

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22775354981422424
    2. 'compatible' → logprob: -1.9777535200119019
    3. ' compatible' → logprob: -2.9777536392211914
    4. '
' → logprob: -5.102753639221191
    5. ' for' → logprob: -6.602753639221191
    6. '    
' → logprob: -6.602753639221191
    7. 'for' → logprob: -7.227753639221191
    8. 'valid' → logprob: -7.227753639221191
    9. ' valid' → logprob: -7.602753639221191
    10. 'available' → logprob: -7.602753639221191

Token 387: ' #' (ID: 1069)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.059442754834890366
    2. '   ' → logprob: -4.184442520141602
    3. 'filtered' → logprob: -4.559442520141602
    4. 'c' → logprob: -4.559442520141602
    5. 'valid' → logprob: -4.809442520141602
    6. ' compatible' → logprob: -6.184442520141602
    7. 'available' → logprob: -6.184442520141602
    8. 'compat' → logprob: -6.559442520141602
    9. 'possible' → logprob: -6.684442520141602
    10. 'all' → logprob: -6.684442520141602

Token 388: ' if' (ID: 538)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.12220194190740585
    2. 'c' → logprob: -3.122201919555664
    3. ' compatible' → logprob: -3.872201919555664
    4. 'filtered' → logprob: -4.622201919555664
    5. 'available' → logprob: -4.747201919555664
    6. 'compat' → logprob: -5.247201919555664
    7. 'others' → logprob: -5.372201919555664
    8. 'valid' → logprob: -5.622201919555664
    9. 'candidate' → logprob: -5.622201919555664
    10. ' candidates' → logprob: -6.372201919555664

Token 389: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.08250278979539871
    2. ' fav' → logprob: -2.707502841949463
    3. 'len' → logprob: -5.582502841949463
    4. ' not' → logprob: -6.457502841949463
    5. ' len' → logprob: -6.457502841949463
    6. ' any' → logprob: -6.707502841949463
    7. 'not' → logprob: -6.707502841949463
    8. 'any' → logprob: -7.082502841949463
    9. 'N' → logprob: -7.957502841949463
    10. 'conf' → logprob: -8.207502365112305

Token 390: 's' (ID: 82)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.06407047063112259
    2. '_max' → logprob: -2.814070463180542
    3. '_inter' → logprob: -6.939070701599121
    4. '_set' → logprob: -7.189070701599121
    5. 's' → logprob: -8.064070701599121
    6. '_' → logprob: -10.189070701599121
    7. 'min' → logprob: -11.314070701599121
    8. '_m' → logprob: -13.064070701599121
    9. 'max' → logprob: -13.064070701599121
    10. '_program' → logprob: -13.564070701599121

Token 391: ' overlap' (ID: 56631)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.014268343336880207
    2. '_max' → logprob: -4.389268398284912
    3. 'min' → logprob: -7.514268398284912
    4. '_set' → logprob: -7.514268398284912
    5. '   ' → logprob: -9.014267921447754
    6. ' and' → logprob: -9.014267921447754
    7. '_inter' → logprob: -9.764267921447754
    8. '[' → logprob: -9.889267921447754
    9. '_' → logprob: -10.264267921447754
    10. ':' → logprob: -10.639267921447754

Token 392: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6999456286430359
    2. ':' → logprob: -1.0749456882476807
    3. ' or' → logprob: -2.5749456882476807
    4. ':
' → logprob: -3.5749456882476807
    5. 'or' → logprob: -4.199945449829102
    6. ' and' → logprob: -4.574945449829102
    7. ',' → logprob: -4.699945449829102
    8. '==' → logprob: -4.824945449829102
    9. 'and' → logprob: -5.074945449829102
    10. 'continue' → logprob: -5.574945449829102

Token 393: ' each' (ID: 2454)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.6458485126495361
    2. 'any' → logprob: -1.6458485126495361
    3. ' any' → logprob: -2.395848512649536
    4. ' times' → logprob: -2.770848512649536
    5. 'program' → logprob: -2.895848512649536
    6. 'fav' → logprob: -3.770848512649536
    7. 'range' → logprob: -3.895848512649536
    8. 'all' → logprob: -4.895848274230957
    9. 'for' → logprob: -5.395848274230957
    10. ' range' → logprob: -5.645848274230957

Token 394: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2058882713317871
    2. ' other' → logprob: -2.080888271331787
    3. 'program' → logprob: -3.830888271331787
    4. 'times' → logprob: -3.955888271331787
    5. 'time' → logprob: -5.455888271331787
    6. ' program' → logprob: -5.830888271331787
    7. ' times' → logprob: -5.955888271331787
    8. '   ' → logprob: -6.205888271331787
    9. 'for' → logprob: -6.580888271331787
    10. ' programs' → logprob: -6.705888271331787

Token 395: ' no' (ID: 860)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5634081363677979
    2. '   ' → logprob: -1.4384081363677979
    3. ' or' → logprob: -2.313408136367798
    4. ':
' → logprob: -2.938408136367798
    5. ',' → logprob: -3.688408136367798
    6. 'or' → logprob: -4.313407897949219
    7. ' and' → logprob: -7.563407897949219
    8. '       ' → logprob: -8.063407897949219
    9. '#' → logprob: -8.563407897949219
    10. 'and' → logprob: -8.563407897949219

Token 396: ' answer' (ID: 6052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.119037389755249
    2. 't' → logprob: -1.244037389755249
    3. 'continue' → logprob: -1.869037389755249
    4. ' continue' → logprob: -2.494037389755249
    5. 'print' → logprob: -2.994037389755249
    6. '#' → logprob: -4.244037628173828
    7. 'program' → logprob: -4.244037628173828
    8. 'valid' → logprob: -4.619037628173828
    9. ' print' → logprob: -4.744037628173828
    10. 's' → logprob: -4.994037628173828

Token 397: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23465894162654877
    2. 'compatible' → logprob: -2.23465895652771
    3. '
' → logprob: -2.73465895652771
    4. '    
' → logprob: -3.60965895652771
    5. 'rest' → logprob: -6.109658718109131
    6. ' compatible' → logprob: -6.609658718109131
    7. 'valid' → logprob: -6.734658718109131
    8. 'for' → logprob: -6.859658718109131
    9. 'filtered' → logprob: -7.234658718109131
    10. 'available' → logprob: -7.234658718109131

Token 398: ' done' (ID: 4167)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3366186022758484
    2. 'continue' → logprob: -1.7116186618804932
    3. '   ' → logprob: -2.836618661880493
    4. '       ' → logprob: -4.211618423461914
    5. 'pass' → logprob: -4.711618423461914
    6. ' continue' → logprob: -5.086618423461914
    7. '-' → logprob: -5.586618423461914
    8. 'if' → logprob: -5.586618423461914
    9. ' print' → logprob: -5.961618423461914
    10. '#' → logprob: -5.961618423461914

Token 399: ' above' (ID: 5151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5970737338066101
    2. 'compatible' → logprob: -0.9720737338066101
    3. 'c' → logprob: -4.097073554992676
    4. 'others' → logprob: -4.472073554992676
    5. 'all' → logprob: -5.097073554992676
    6. 'available' → logprob: -5.347073554992676
    7. 'program' → logprob: -5.472073554992676
    8. ' compatible' → logprob: -5.472073554992676
    9. 'other' → logprob: -5.597073554992676
    10. 'valid' → logprob: -5.722073554992676

Token 400: '
' (ID: 198)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.38236892223358154
    2. '   ' → logprob: -1.3823689222335815
    3. '
' → logprob: -4.257369041442871
    4. ' compatible' → logprob: -4.382369041442871
    5. '    
' → logprob: -4.757369041442871
    6. 'all' → logprob: -5.382369041442871
    7. 'rest' → logprob: -5.632369041442871
    8. 'valid' → logprob: -5.757369041442871
    9. 'available' → logprob: -5.882369041442871
    10. 'for' → logprob: -5.882369041442871

Token 401: '   ' (ID: 271)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.7129225134849548
    2. '   ' → logprob: -0.8379225134849548
    3. ' compatible' → logprob: -3.8379225730895996
    4. '
' → logprob: -3.9629225730895996
    5. '    
' → logprob: -4.5879225730896
    6. 'available' → logprob: -5.0879225730896
    7. 'rest' → logprob: -5.4629225730896
    8. 'valid' → logprob: -5.9629225730896
    9. 'filtered' → logprob: -6.4629225730896
    10. 'others' → logprob: -6.5879225730896

Token 402: ' #' (ID: 1069)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.20608387887477875
    2. '   ' → logprob: -1.95608389377594
    3. ' compatible' → logprob: -4.33108377456665
    4. 'c' → logprob: -4.45608377456665
    5. 'others' → logprob: -5.70608377456665
    6. 'available' → logprob: -5.95608377456665
    7. 'filtered' → logprob: -6.08108377456665
    8. 'valid' → logprob: -6.20608377456665
    9. 'compat' → logprob: -6.33108377456665
    10. 'all' → logprob: -6.70608377456665

Token 403: ' For' (ID: 2214)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.1796175241470337
    2. 'c' → logprob: -2.804617404937744
    3. 'filtered' → logprob: -4.304617404937744
    4. 'available' → logprob: -4.554617404937744
    5. 'others' → logprob: -4.679617404937744
    6. 'compat' → logprob: -4.679617404937744
    7. 'non' → logprob: -4.804617404937744
    8. 'valid' → logprob: -4.929617404937744
    9. 'for' → logprob: -4.929617404937744
    10. 'candidate' → logprob: -5.054617404937744

Token 404: ' max' (ID: 2999)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.3419463634490967
    2. ' other' → logprob: -1.9669463634490967
    3. ' all' → logprob: -1.9669463634490967
    4. ' rest' → logprob: -2.0919463634490967
    5. ' line' → logprob: -2.4669463634490967
    6. 'rest' → logprob: -3.3419463634490967
    7. 'all' → logprob: -3.4669463634490967
    8. ' i' → logprob: -3.8419463634490967
    9. ' non' → logprob: -3.8419463634490967
    10. 'other' → logprob: -3.8419463634490967

Token 405: ' number' (ID: 2086)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.7540535926818848
    2. '_time' → logprob: -1.0040535926818848
    3. '_dp' → logprob: -3.0040535926818848
    4. '_total' → logprob: -3.5040535926818848
    5. 'dp' → logprob: -3.8790535926818848
    6. '_duration' → logprob: -4.879053592681885
    7. '_start' → logprob: -5.004053592681885
    8. '_' → logprob: -5.004053592681885
    9. '_extra' → logprob: -5.004053592681885
    10. '_day' → logprob: -5.129053592681885

Token 406: ' including' (ID: 3463)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.9910048246383667
    2. '   ' → logprob: -1.1160048246383667
    3. ' of' → logprob: -2.2410049438476562
    4. '_of' → logprob: -3.4910049438476562
    5. '_' → logprob: -4.241004943847656
    6. '=' → logprob: -4.366004943847656
    7. '#' → logprob: -4.491004943847656
    8. ' =' → logprob: -4.491004943847656
    9. 'added' → logprob: -4.741004943847656
    10. 'possible' → logprob: -4.741004943847656

Token 407: ' fav' (ID: 11726)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1237456798553467
    2. 'fav' → logprob: -1.1237456798553467
    3. ' fav' → logprob: -2.4987456798553467
    4. ' all' → logprob: -2.9987456798553467
    5. ' programs' → logprob: -3.2487456798553467
    6. 'all' → logprob: -3.3737456798553467
    7. ' the' → logprob: -3.6237456798553467
    8. ' other' → logprob: -3.8737456798553467
    9. ' non' → logprob: -3.8737456798553467
    10. 'program' → logprob: -4.373745918273926

Token 408: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22639693319797516
    2. 's' → logprob: -2.1013970375061035
    3. 'for' → logprob: -4.6013970375061035
    4. 'imum' → logprob: -4.6013970375061035
    5. 'program' → logprob: -4.7263970375061035
    6. ' ' → logprob: -5.2263970375061035
    7. ' =' → logprob: -5.4763970375061035
    8. 'in' → logprob: -5.8513970375061035
    9. '       ' → logprob: -5.9763970375061035
    10. 'or' → logprob: -6.1013970375061035

Token 409: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018746910616755486
    2. '
' → logprob: -4.768746852874756
    3. '#' → logprob: -6.393746852874756
    4. '    
' → logprob: -6.393746852874756
    5. 'compatible' → logprob: -6.518746852874756
    6. 'max' → logprob: -7.018746852874756
    7. ',' → logprob: -7.143746852874756
    8. 'dp' → logprob: -7.518746852874756
    9. ' compatible' → logprob: -7.768746852874756
    10. 'available' → logprob: -7.768746852874756

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05720527470111847
    2. ' compatible' → logprob: -3.6822052001953125
    3. 'compatible' → logprob: -4.6822052001953125
    4. 'c' → logprob: -5.4322052001953125
    5. 'rest' → logprob: -6.4322052001953125
    6. 'available' → logprob: -6.6822052001953125
    7. ' candidates' → logprob: -6.6822052001953125
    8. 'dp' → logprob: -6.6822052001953125
    9. '    
' → logprob: -6.9322052001953125
    10. ' non' → logprob: -7.0572052001953125

Token 411: ' #' (ID: 1069)
  Prédit: ' compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compatible' → logprob: -0.8462128043174744
    2. 'compatible' → logprob: -0.8462128043174744
    3. 'dp' → logprob: -3.096212863922119
    4. 'c' → logprob: -4.221212863922119
    5. ' dp' → logprob: -4.596212863922119
    6. 'all' → logprob: -4.971212863922119
    7. '#' (adapté à ' #') → logprob: -5.096212863922119
    8. 'non' → logprob: -5.346212863922119
    9. ' non' → logprob: -5.346212863922119
    10. 'others' → logprob: -5.471212863922119

Token 412: ' We' (ID: 1416)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.9481075406074524
    2. ' compatible' → logprob: -1.3231074810028076
    3. 'dp' → logprob: -2.5731074810028076
    4. 'c' → logprob: -2.5731074810028076
    5. '#' → logprob: -3.1981074810028076
    6. 'all' → logprob: -3.6981074810028076
    7. 'others' → logprob: -4.198107719421387
    8. 'non' → logprob: -4.448107719421387
    9. ' candidates' → logprob: -4.573107719421387
    10. 'available' → logprob: -4.698107719421387

Token 413: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.7101293206214905
    2. ' want' → logprob: -1.4601292610168457
    3. '   ' → logprob: -2.5851292610168457
    4. ' can' → logprob: -2.8351292610168457
    5. '#' → logprob: -3.5851292610168457
    6. 'need' → logprob: -3.7101292610168457
    7. ' should' → logprob: -3.8351292610168457
    8. ' will' → logprob: -4.460129261016846
    9. ' continue' → logprob: -4.960129261016846
    10. ' #' → logprob: -5.085129261016846

Token 414: ' select' (ID: 4736)
  Prédit: ' include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' include' → logprob: -1.0572561025619507
    2. 'include' → logprob: -1.5572561025619507
    3. ' select' → logprob: -2.1822562217712402
    4. ' find' → logprob: -2.3072562217712402
    5. 'select' → logprob: -3.4322562217712402
    6. ' consider' → logprob: -3.6822562217712402
    7. 'exclude' → logprob: -3.6822562217712402
    8. '   ' → logprob: -3.8072562217712402
    9. 'find' → logprob: -3.9322562217712402
    10. ' check' → logprob: -3.9322562217712402

Token 415: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.2917181253433228
    2. ' other' → logprob: -1.6667181253433228
    3. 'all' → logprob: -1.7917181253433228
    4. 'other' → logprob: -2.416718006134033
    5. ' programs' → logprob: -2.541718006134033
    6. ' from' → logprob: -3.291718006134033
    7. 'program' → logprob: -3.666718006134033
    8. ' non' → logprob: -3.666718006134033
    9. 'from' → logprob: -4.041718006134033
    10. ' the' → logprob: -4.166718006134033

Token 416: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.9957799911499023
    2. ' fav' → logprob: -1.4957799911499023
    3. ' programs' → logprob: -1.6207799911499023
    4. 'f' → logprob: -2.4957799911499023
    5. ' the' → logprob: -3.4957799911499023
    6. ' other' → logprob: -3.9957799911499023
    7. ' times' → logprob: -4.370779991149902
    8. ' favorite' → logprob: -4.995779991149902
    9. ' intervals' → logprob: -4.995779991149902
    10. 'program' → logprob: -5.120779991149902

Token 417: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02198842726647854
    2. '   ' → logprob: -4.646988391876221
    3. '_set' → logprob: -4.771988391876221
    4. ' programs' → logprob: -6.146988391876221
    5. 'program' → logprob: -7.146988391876221
    6. '_program' → logprob: -7.521988391876221
    7. '_min' → logprob: -10.021988868713379
    8. ',' → logprob: -10.771988868713379
    9. ' ' → logprob: -11.021988868713379
    10. ' program' → logprob: -11.396988868713379

Token 418: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004584515001624823
    2. ',' → logprob: -5.754584312438965
    3. ' and' → logprob: -8.004584312438965
    4. '    
' → logprob: -8.629584312438965
    5. '#' → logprob: -8.754584312438965
    6. 'and' → logprob: -9.004584312438965
    7. '
' → logprob: -9.254584312438965
    8. 'compatible' → logprob: -9.379584312438965
    9. '.' → logprob: -9.754584312438965
    10. 'def' → logprob: -10.004584312438965

Token 419: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0481140613555908
    2. ' and' → logprob: -1.1731140613555908
    3. 'and' → logprob: -2.048114061355591
    4. ' so' → logprob: -2.048114061355591
    5. ' but' → logprob: -3.673114061355591
    6. '   ' → logprob: -4.548113822937012
    7. ' #' → logprob: -4.673113822937012
    8. ' plus' → logprob: -4.798113822937012
    9. 'exclude' → logprob: -5.298113822937012
    10. ' exclude' → logprob: -5.673113822937012

Token 420: ' we' (ID: 581)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' then' → logprob: -2.1403377056121826
    2. ' possibly' → logprob: -2.2653377056121826
    3. 'exclude' → logprob: -2.5153377056121826
    4. ' add' → logprob: -2.6403377056121826
    5. 'then' → logprob: -2.7653377056121826
    6. ' also' → logprob: -2.8903377056121826
    7. 'also' → logprob: -3.0153377056121826
    8. 'add' → logprob: -3.2653377056121826
    9. ' avoid' → logprob: -3.5153377056121826
    10. '   ' → logprob: -3.6403377056121826

Token 421: ' can' (ID: 665)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.5959650278091431
    2. 'must' → logprob: -1.720965027809143
    3. 'cannot' → logprob: -2.3459649085998535
    4. ' cannot' → logprob: -2.3459649085998535
    5. ' can' → logprob: -3.7209649085998535
    6. ' need' → logprob: -4.0959649085998535
    7. ' want' → logprob: -4.7209649085998535
    8. 'need' → logprob: -4.9709649085998535
    9. ' should' → logprob: -5.2209649085998535
    10. 'can' → logprob: -5.7209649085998535

Token 422: ' add' (ID: 1147)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.6154233813285828
    2. 'only' → logprob: -1.1154234409332275
    3. 'add' → logprob: -3.7404234409332275
    4. 'try' → logprob: -3.7404234409332275
    5. 'choose' → logprob: -3.7404234409332275
    6. '   ' → logprob: -4.115423202514648
    7. 'include' → logprob: -4.240423202514648
    8. ' only' → logprob: -4.740423202514648
    9. ' select' → logprob: -5.365423202514648
    10. 'also' → logprob: -5.490423202514648

Token 423: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.9959476590156555
    2. ' programs' → logprob: -1.4959475994110107
    3. 'other' → logprob: -1.6209475994110107
    4. ' any' → logprob: -2.1209475994110107
    5. 'any' → logprob: -3.1209475994110107
    6. 'program' → logprob: -4.37094783782959
    7. ' others' → logprob: -4.99594783782959
    8. 'others' → logprob: -4.99594783782959
    9. ' non' → logprob: -5.49594783782959
    10. '   ' → logprob: -5.74594783782959

Token 424: ' programs' (ID: 8094)
  Prédit: ' programs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programs' → logprob: -0.05010253190994263
    2. 'program' → logprob: -3.050102472305298
    3. 'times' → logprob: -7.425102710723877
    4. ' times' → logprob: -7.925102710723877
    5. '   ' → logprob: -9.175102233886719
    6. 'compatible' → logprob: -9.550102233886719
    7. '_program' → logprob: -10.050102233886719
    8. ' lines' → logprob: -10.175102233886719
    9. '
' → logprob: -10.425102233886719
    10. ' program' → logprob: -10.550102233886719

Token 425: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022633114829659462
    2. 'compatible' → logprob: -4.272633075714111
    3. ',' → logprob: -5.897633075714111
    4. ' compatible' → logprob: -6.272633075714111
    5. '    
' → logprob: -7.022633075714111
    6. 'available' → logprob: -7.522633075714111
    7. '.' → logprob: -7.772633075714111
    8. '#' → logprob: -8.27263355255127
    9. 'def' → logprob: -8.64763355255127
    10. 'valid' → logprob: -8.64763355255127

Token 426: ' don't' (ID: 4128)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.0344630628824234
    2. 'don't' → logprob: -3.7844631671905518
    3. ' do' → logprob: -5.034462928771973
    4. 'either' → logprob: -6.284462928771973
    5. ' don't' → logprob: -6.909462928771973
    6. 'start' → logprob: -7.284462928771973
    7. ' either' → logprob: -8.409462928771973
    8. 'dont' → logprob: -8.409462928771973
    9. 'are' → logprob: -8.659462928771973
    10. 'end' → logprob: -9.034462928771973

Token 427: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.12735840678215027
    2. ' overlap' → logprob: -2.1273584365844727
    3. '
' → logprob: -8.627358436584473
    4. 'conf' → logprob: -9.502358436584473
    5. ' over' → logprob: -9.752358436584473
    6. '_overlap' → logprob: -10.002358436584473
    7. ' conflict' → logprob: -10.252358436584473
    8. '.over' → logprob: -12.252358436584473
    9. '(over' → logprob: -12.252358436584473
    10. '```' → logprob: -12.502358436584473

Token 428: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36298346519470215
    2. 'with' → logprob: -1.6129834651947021
    3. ' with' → logprob: -2.487983465194702
    4. ',' → logprob: -5.112983703613281
    5. 'def' → logprob: -5.612983703613281
    6. '
' → logprob: -5.737983703613281
    7. ' to' → logprob: -6.987983703613281
    8. '#' → logprob: -6.987983703613281
    9. 'compatible' → logprob: -7.237983703613281
    10. 'other' → logprob: -7.487983703613281

Token 429: ' each' (ID: 2454)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.7720829844474792
    2. 'fav' → logprob: -0.8970829844474792
    3. ' any' → logprob: -2.647083044052124
    4. '(' → logprob: -4.022082805633545
    5. '
' → logprob: -4.272082805633545
    6. 'them' → logprob: -5.022082805633545
    7. ' (' → logprob: -5.272082805633545
    8. 'the' → logprob: -5.522082805633545
    9. '   ' → logprob: -6.397082805633545
    10. '(any' → logprob: -6.772082805633545

Token 430: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.007047475315630436
    2. ' other' → logprob: -5.132047653198242
    3. 'fav' → logprob: -6.882047653198242
    4. 'others' → logprob: -10.257047653198242
    5. 'f' → logprob: -11.007047653198242
    6. 'oth' → logprob: -12.257047653198242
    7. '#' → logprob: -12.257047653198242
    8. '   ' → logprob: -12.382047653198242
    9. '
' → logprob: -12.632047653198242
    10. 'favorite' → logprob: -12.882047653198242

Token 431: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07969027012586594
    2. ' and' → logprob: -3.0796902179718018
    3. 'and' → logprob: -4.204690456390381
    4. ',' → logprob: -4.954690456390381
    5. ' or' → logprob: -5.329690456390381
    6. '#' → logprob: -6.954690456390381
    7. 'or' → logprob: -7.454690456390381
    8. '.' → logprob: -7.704690456390381
    9. '
' → logprob: -8.329689979553223
    10. 'def' → logprob: -8.454689979553223

Token 432: ' with' (ID: 483)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.23861347138881683
    2. 'the' → logprob: -2.6136133670806885
    3. 'with' → logprob: -3.3636133670806885
    4. 'f' → logprob: -3.6136133670806885
    5. 'don't' → logprob: -4.363613605499268
    6. 'any' → logprob: -4.363613605499268
    7. '#' → logprob: -4.613613605499268
    8. 'do' → logprob: -4.613613605499268
    9. ' the' → logprob: -4.863613605499268
    10. 'favorites' → logprob: -5.113613605499268

Token 433: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.33117759227752686
    2. '(' → logprob: -2.3311777114868164
    3. 'any' → logprob: -2.9561777114868164
    4. 'the' → logprob: -3.2061777114868164
    5. '(f' → logprob: -3.5811777114868164
    6. ' any' → logprob: -4.206177711486816
    7. ' (' → logprob: -4.331177711486816
    8. 'f' → logprob: -4.706177711486816
    9. '   ' → logprob: -5.081177711486816
    10. ' the' → logprob: -5.456177711486816

Token 434: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020621540024876595
    2. '_set' → logprob: -3.8956215381622314
    3. 'set' → logprob: -10.645621299743652
    4. 'or' → logprob: -11.270621299743652
    5. 'als' → logprob: -11.395621299743652
    6. '_inter' → logprob: -12.270621299743652
    7. 'ms' → logprob: -12.645621299743652
    8. 'sets' → logprob: -12.770621299743652
    9. 'avs' → logprob: -12.770621299743652
    10. '   ' → logprob: -12.895621299743652

Token 435: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007197081111371517
    2. '
' → logprob: -5.38219690322876
    3. '    
' → logprob: -7.38219690322876
    4. 'compatible' → logprob: -7.63219690322876
    5. 'other' → logprob: -8.007197380065918
    6. '#' → logprob: -8.007197380065918
    7. 'def' → logprob: -9.132197380065918
    8. 'non' → logprob: -9.257197380065918
    9. 'all' → logprob: -9.382197380065918
    10. 'available' → logprob: -9.507197380065918

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9723798036575317
    2. 'compatible' → logprob: -1.4723798036575317
    3. 'available' → logprob: -2.347379684448242
    4. '#' → logprob: -2.472379684448242
    5. '
' → logprob: -2.472379684448242
    6. 'rest' → logprob: -3.597379684448242
    7. 'other' → logprob: -3.722379684448242
    8. ' compatible' → logprob: -4.097379684448242
    9. 'remaining' → logprob: -4.097379684448242
    10. 'all' → logprob: -5.347379684448242

Token 437: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7629615068435669
    2. 'compatible' → logprob: -0.8879615068435669
    3. 'others' → logprob: -3.7629613876342773
    4. 'available' → logprob: -3.8879613876342773
    5. ' compatible' → logprob: -4.137961387634277
    6. '#' (adapté à ' #') → logprob: -4.262961387634277
    7. 'other' → logprob: -4.512961387634277
    8. 'all' → logprob: -4.762961387634277
    9. 'rest' → logprob: -5.137961387634277
    10. 'non' → logprob: -5.637961387634277

Token 438: ' So' (ID: 2632)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -1.1180387735366821
    2. 'others' → logprob: -1.3680387735366821
    3. 'available' → logprob: -2.1180386543273926
    4. '   ' → logprob: -2.6180386543273926
    5. 'other' → logprob: -2.6180386543273926
    6. 'c' → logprob: -2.8680386543273926
    7. 'non' → logprob: -3.9930386543273926
    8. '#' → logprob: -3.9930386543273926
    9. ' compatible' → logprob: -4.118038654327393
    10. 'all' → logprob: -4.493038654327393

Token 439: ' first' (ID: 1577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.328052282333374
    2. '#' → logprob: -2.828052282333374
    3. 'other' → logprob: -2.953052282333374
    4. 'compatible' → logprob: -3.203052282333374
    5. 'times' → logprob: -3.828052282333374
    6. 'all' → logprob: -4.203052520751953
    7. ' other' → logprob: -4.203052520751953
    8. ' compatible' → logprob: -4.328052520751953
    9. 'rest' → logprob: -4.578052520751953
    10. 'available' → logprob: -4.703052520751953

Token 440: ' exclude' (ID: 39566)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044993218034505844
    2. 'we' → logprob: -4.5449934005737305
    3. 'times' → logprob: -4.5449934005737305
    4. '   ' → logprob: -4.7949934005737305
    5. 'filter' → logprob: -4.9199934005737305
    6. ' we' → logprob: -6.1699934005737305
    7. 'all' → logprob: -7.4199934005737305
    8. '#' → logprob: -7.6699934005737305
    9. 'sort' → logprob: -7.7949934005737305
    10. 'exclude' → logprob: -7.9199934005737305

Token 441: ' programs' (ID: 8094)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.8607709407806396
    2. ' programs' → logprob: -1.2357709407806396
    3. 'all' → logprob: -2.1107709407806396
    4. ' all' → logprob: -2.4857709407806396
    5. 'other' → logprob: -4.110771179199219
    6. ' any' → logprob: -4.235771179199219
    7. 'any' → logprob: -4.860771179199219
    8. ' the' → logprob: -4.985771179199219
    9. 'the' → logprob: -5.110771179199219
    10. 'from' → logprob: -5.360771179199219

Token 442: ' overlapping' (ID: 90457)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2184374332427979
    2. ' that' → logprob: -1.4684374332427979
    3. 'that' → logprob: -1.4684374332427979
    4. '=' → logprob: -1.9684374332427979
    5. 'outside' → logprob: -3.593437433242798
    6. '_to' → logprob: -3.718437433242798
    7. '_that' → logprob: -4.218437194824219
    8. ' outside' → logprob: -4.468437194824219
    9. 'with' → logprob: -5.093437194824219
    10. '_out' → logprob: -5.843437194824219

Token 443: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.2021702378988266
    2. ' =' → logprob: -2.5771701335906982
    3. '_with' → logprob: -3.0771701335906982
    4. ' with' → logprob: -3.9521701335906982
    5. '_' → logprob: -4.452170372009277
    6. '=' → logprob: -4.577170372009277
    7. '_list' → logprob: -5.702170372009277
    8. '_f' → logprob: -5.827170372009277
    9. '_program' → logprob: -5.952170372009277
    10. '   ' → logprob: -6.077170372009277

Token 444: ' any' (ID: 1062)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.08867146819829941
    2. 'any' → logprob: -2.9636714458465576
    3. ' any' → logprob: -4.713671684265137
    4. 'f' → logprob: -4.838671684265137
    5. '(f' → logprob: -5.588671684265137
    6. '   ' → logprob: -5.838671684265137
    7. ' (' → logprob: -6.213671684265137
    8. ' fav' → logprob: -6.463671684265137
    9. 'range' → logprob: -6.588671684265137
    10. '(' → logprob: -6.588671684265137

Token 445: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.10831210762262344
    2. ' fav' → logprob: -2.4833121299743652
    3. 'f' → logprob: -5.108312129974365
    4. '   ' → logprob: -6.108312129974365
    5. '_f' → logprob: -6.233312129974365
    6. ' of' → logprob: -6.733312129974365
    7. ' for' → logprob: -6.858312129974365
    8. 'for' → logprob: -6.858312129974365
    9. '(f' → logprob: -7.108312129974365
    10. ' in' → logprob: -7.483312129974365

Token 446: ' fav' (ID: 11726)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5431216359138489
    2. 's' → logprob: -1.043121576309204
    3. 'ors' → logprob: -2.918121576309204
    4. 'avs' → logprob: -4.793121814727783
    5. 'ours' → logprob: -7.043121814727783
    6. 'program' → logprob: -7.918121814727783
    7. 'our' → logprob: -7.918121814727783
    8. 'avorites' → logprob: -8.043121337890625
    9. 'fav' → logprob: -8.168121337890625
    10. 'av' → logprob: -8.168121337890625

Token 447: '_program' (ID: 58929)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48817524313926697
    2. 'or' → logprob: -1.6131752729415894
    3. '_inter' → logprob: -2.3631751537323
    4. 'interval' → logprob: -2.8631751537323
    5. '_interval' → logprob: -4.113175392150879
    6. 'als' → logprob: -5.238175392150879
    7. ' intervals' → logprob: -5.613175392150879
    8. 'al' → logprob: -5.988175392150879
    9. '_set' → logprob: -6.738175392150879
    10. '   ' → logprob: -6.738175392150879

Token 448: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0730280876159668
    2. 'or' → logprob: -1.4480280876159668
    3. ' =' → logprob: -2.323028087615967
    4. 'ram' → logprob: -2.573028087615967
    5. 'ams' → logprob: -3.198028087615967
    6. 'for' → logprob: -3.448028087615967
    7. '=' → logprob: -3.698028087615967
    8. 'r' → logprob: -3.823028087615967
    9. 'ms' → logprob: -3.948028087615967
    10. 'fav' → logprob: -4.198028087615967

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005151573568582535
    2. '
' → logprob: -5.880151748657227
    3. '    
' → logprob: -7.130151748657227
    4. '.' → logprob: -7.755151748657227
    5. ',' → logprob: -7.880151748657227
    6. ':' → logprob: -8.505151748657227
    7. ' for' → logprob: -9.505151748657227
    8. ' and' → logprob: -9.880151748657227
    9. ' programs' → logprob: -10.005151748657227
    10. '.
' → logprob: -10.005151748657227

Token 450: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7291356921195984
    2. 'compatible' → logprob: -0.9791356921195984
    3. 'non' → logprob: -2.979135751724243
    4. 'other' → logprob: -3.354135751724243
    5. 'others' → logprob: -3.729135751724243
    6. ' compatible' → logprob: -4.729135513305664
    7. 'excluded' → logprob: -5.354135513305664
    8. 'valid' → logprob: -5.604135513305664
    9. 'allowed' → logprob: -5.604135513305664
    10. 'filtered' → logprob: -6.354135513305664

Token 451: ' conflict' (ID: 21461)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.3688305616378784
    2. 'over' → logprob: -1.3688305616378784
    3. 'compatible' → logprob: -2.118830680847168
    4. 'is' → logprob: -2.493830680847168
    5. ' overlaps' → logprob: -2.743830680847168
    6. ' can' → logprob: -2.743830680847168
    7. 'def' → logprob: -3.368830680847168
    8. ' no' → logprob: -3.368830680847168
    9. 'can' → logprob: -3.993830680847168
    10. 'no' → logprob: -4.118830680847168

Token 452: '_with' (ID: 14161)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2992621958255768
    2. '_with' → logprob: -1.6742621660232544
    3. '(program' → logprob: -3.674262285232544
    4. '(p' → logprob: -3.799262285232544
    5. '(start' → logprob: -4.674262046813965
    6. '(s' → logprob: -5.424262046813965
    7. '_program' → logprob: -6.174262046813965
    8. '(pro' → logprob: -6.299262046813965
    9. '_free' → logprob: -6.549262046813965
    10. '_interval' → logprob: -6.924262046813965

Token 453: '_f' (ID: 1337)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.1110699325799942
    2. 'f' → logprob: -2.861069917678833
    3. 'interval' → logprob: -3.861069917678833
    4. 'start' → logprob: -4.986070156097412
    5. 'program' → logprob: -5.236070156097412
    6. '(start' → logprob: -5.236070156097412
    7. 'p' → logprob: -5.986070156097412
    8. 'prog' → logprob: -6.486070156097412
    9. 'time' → logprob: -6.986070156097412
    10. '(program' → logprob: -7.361070156097412

Token 454: 'avs' (ID: 113368)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.1400505006313324
    2. 'avs' → logprob: -2.5150504112243652
    3. 'program' → logprob: -3.2650504112243652
    4. 'avorite' → logprob: -6.140050411224365
    5. 'avorites' → logprob: -6.265050411224365
    6. '(program' → logprob: -6.390050411224365
    7. 'interval' → logprob: -7.015050411224365
    8. 'prog' → logprob: -7.390050411224365
    9. 'fav' → logprob: -8.015050888061523
    10. 'start' → logprob: -8.140050888061523

Token 455: '(p' (ID: 2407)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.2209436297416687
    2. '(p' → logprob: -2.0959436893463135
    3. '(program' → logprob: -3.4709436893463135
    4. '(pro' → logprob: -3.7209436893463135
    5. '(s' → logprob: -4.720943450927734
    6. '(interval' → logprob: -5.220943450927734
    7. '(time' → logprob: -5.970943450927734
    8. '(ps' → logprob: -7.095943450927734
    9. '(t' → logprob: -7.220943450927734
    10. '(st' → logprob: -8.095943450927734

Token 456: '):
' (ID: 1883)
  Prédit: 'rogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rogram' → logprob: -0.018303049728274345
    2. 'start' → logprob: -4.643302917480469
    3. 'ro' → logprob: -5.893302917480469
    4. '):
' → logprob: -6.268302917480469
    5. '_start' → logprob: -6.518302917480469
    6. 'p' → logprob: -7.893302917480469
    7. 'ogram' → logprob: -8.018302917480469
    8. 'name' → logprob: -8.018302917480469
    9. 'program' → logprob: -8.143302917480469
    10. '):' → logprob: -8.393302917480469

Token 457: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09247512370347977
    2. '       ' → logprob: -2.467475175857544
    3. 'start' → logprob: -6.467474937438965
    4. ' start' → logprob: -6.967474937438965
    5. '(start' → logprob: -7.592474937438965
    6. '(p' → logprob: -8.342474937438965
    7. '):' → logprob: -9.217474937438965
    8. ' (' → logprob: -10.092474937438965
    9. '):
' → logprob: -10.592474937438965
    10. ':' → logprob: -10.592474937438965

Token 458: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09204541891813278
    2. 'start' → logprob: -2.967045307159424
    3. 'for' (adapté à ' for') → logprob: -3.467045307159424
    4. 's' → logprob: -5.592045307159424
    5. 'p' → logprob: -7.342045307159424
    6. '       ' → logprob: -8.217045783996582
    7. ' for' → logprob: -8.342045783996582
    8. 'ps' → logprob: -8.592045783996582
    9. ' start' → logprob: -8.842045783996582
    10. 'pst' → logprob: -11.342045783996582

Token 459: ' fs' (ID: 16105)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6724258661270142
    2. 'fav' → logprob: -1.0474258661270142
    3. 'fs' → logprob: -2.2974257469177246
    4. 'fv' → logprob: -3.7974257469177246
    5. 'start' → logprob: -4.672425746917725
    6. 's' → logprob: -5.297425746917725
    7. 'fp' → logprob: -8.547426223754883
    8. '(f' → logprob: -8.797426223754883
    9. 'fi' → logprob: -8.922426223754883
    10. ' fav' → logprob: -9.047426223754883

Token 460: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10494872182607651
    2. 'start' → logprob: -2.4799487590789795
    3. '_start' → logprob: -4.2299485206604
    4. 's' → logprob: -7.2299485206604
    5. ',' → logprob: -7.7299485206604
    6. 'art' → logprob: -10.104948997497559
    7. ' in' → logprob: -10.354948997497559
    8. 'f' → logprob: -10.979948997497559
    9. 'in' → logprob: -11.104948997497559
    10. 'p' → logprob: -11.354948997497559

Token 461: 'fe' (ID: 2302)
  Prédit: 'fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.00012356207298580557
    2. ' fe' → logprob: -9.000123977661133
    3. 'fs' → logprob: -16.750123977661133
    4. '(fe' → logprob: -17.000123977661133
    5. '_fe' → logprob: -17.750123977661133
    6. '

' → logprob: -17.750123977661133
    7. '   ' → logprob: -17.750123977661133
    8. '  ' → logprob: -18.875123977661133
    9. 'f' → logprob: -19.125123977661133
    10. 'fm' → logprob: -19.375123977661133

Token 462: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04107962176203728
    2. ',f' → logprob: -3.916079521179199
    3. 'in' → logprob: -4.666079521179199
    4. ' in' → logprob: -5.041079521179199
    5. ' ,' → logprob: -6.041079521179199
    6. ',in' → logprob: -6.666079521179199
    7. ',p' → logprob: -7.291079521179199
    8. ' ' → logprob: -10.4160795211792
    9. 'fs' → logprob: -11.1660795211792
    10. '   ' → logprob: -11.2910795211792

Token 463: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0017508649034425616
    2. ' fav' → logprob: -6.501750946044922
    3. '   ' → logprob: -8.501750946044922
    4. 'program' → logprob: -11.626750946044922
    5. ' ' → logprob: -11.626750946044922
    6. 'f' → logprob: -12.126750946044922
    7. '[' → logprob: -12.126750946044922
    8. '    ' → logprob: -12.626750946044922
    9. '
' → logprob: -13.001750946044922
    10. '  ' → logprob: -13.001750946044922

Token 464: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00039230400579981506
    2. 'interval' → logprob: -8.125391960144043
    3. 'inter' → logprob: -9.625391960144043
    4. 'program' → logprob: -10.750391960144043
    5. '_program' → logprob: -13.000391960144043
    6. 's' → logprob: -13.125391960144043
    7. '
' → logprob: -13.625391960144043
    8. ' intervals' → logprob: -13.875391960144043
    9. '_min' → logprob: -14.875391960144043
    10. '_interval' → logprob: -14.875391960144043

Token 465: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.25097864866256714
    2. 'als' → logprob: -2.250978708267212
    3. 'r' → logprob: -2.875978708267212
    4. 'erv' → logprob: -3.125978708267212
    5. 's' → logprob: -5.000978469848633
    6. 'interval' → logprob: -6.500978469848633
    7. 'al' → logprob: -6.750978469848633
    8. 'ter' → logprob: -7.250978469848633
    9. '```' → logprob: -7.250978469848633
    10. '   ' → logprob: -7.500978469848633

Token 466: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2943675220012665
    2. ':' → logprob: -1.4193675518035889
    3. '       ' → logprob: -4.66936731338501
    4. ',' → logprob: -6.79436731338501
    5. '   ' → logprob: -7.29436731338501
    6. ' in' → logprob: -7.79436731338501
    7. '):
' → logprob: -8.044367790222168
    8. '           ' → logprob: -8.044367790222168
    9. '<|end|>' → logprob: -8.294367790222168
    10. '<|end|>' → logprob: -8.794367790222168

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11839253455400467
    2. '       ' → logprob: -2.2433924674987793
    3. ',' → logprob: -5.618392467498779
    4. ':' → logprob: -7.243392467498779
    5. ':
' → logprob: -8.493392944335938
    6. '<|end|>' → logprob: -8.493392944335938
    7. '	       ' → logprob: -8.493392944335938
    8. '<|end|>' → logprob: -8.618392944335938
    9. ' if' → logprob: -9.743392944335938
    10. '    	   ' → logprob: -9.993392944335938

Token 468: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0053522284142673016
    2. 'if' (adapté à ' if') → logprob: -5.630352020263672
    3. ' if' → logprob: -6.755352020263672
    4. 'start' → logprob: -8.130352020263672
    5. '       ' → logprob: -8.755352020263672
    6. 's' → logprob: -9.255352020263672
    7. ' s' → logprob: -11.630352020263672
    8. '   ' → logprob: -11.755352020263672
    9. ' start' → logprob: -11.755352020263672
    10. 'p' → logprob: -13.005352020263672

Token 469: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.005237548612058163
    2. ' overlap' → logprob: -5.255237579345703
    3. '(over' → logprob: -13.755237579345703
    4. '   ' → logprob: -13.755237579345703
    5. '           ' → logprob: -14.755237579345703
    6. '       ' → logprob: -14.880237579345703
    7. ' over' → logprob: -15.130237579345703
    8. '
' → logprob: -15.380237579345703
    9. 'not' → logprob: -16.380237579345703
    10. ' ' → logprob: -16.880237579345703

Token 470: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.35962051153182983
    2. '(program' → logprob: -1.2346205711364746
    3. 'program' → logprob: -4.859620571136475
    4. 'p' → logprob: -6.484620571136475
    5. '(' → logprob: -6.609620571136475
    6. '(pro' → logprob: -8.234620094299316
    7. '(start' → logprob: -9.984620094299316
    8. '(times' → logprob: -9.984620094299316
    9. ' (' → logprob: -10.484620094299316
    10. ' p' → logprob: -11.484620094299316

Token 471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002586719812825322
    2. '0' → logprob: -6.252586841583252
    3. 's' → logprob: -8.127586364746094
    4. 'p' → logprob: -8.877586364746094
    5. 'start' → logprob: -9.377586364746094
    6. ')' → logprob: -10.252586364746094
    7. ',' → logprob: -11.002586364746094
    8. ' [' → logprob: -11.127586364746094
    9. ')[' → logprob: -11.252586364746094
    10. '_start' → logprob: -11.627586364746094

Token 472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -13.250005722045898
    3. '
' → logprob: -13.875005722045898
    4. 'start' → logprob: -13.875005722045898
    5. ' ' → logprob: -14.312505722045898
    6. '1' → logprob: -14.625005722045898
    7. '   ' → logprob: -15.625005722045898
    8. '00' → logprob: -16.1250057220459
    9. '۰' → logprob: -16.4375057220459
    10. '```' → logprob: -16.5000057220459

Token 473: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.39527687430381775
    2. ',' → logprob: -1.1452769041061401
    3. '[' → logprob: -5.64527702331543
    4. '),' → logprob: -6.52027702331543
    5. ' ,' → logprob: -7.02027702331543
    6. ' ],' → logprob: -7.39527702331543
    7. ',p' → logprob: -7.52027702331543
    8. '0' → logprob: -7.52027702331543
    9. '   ' → logprob: -9.02027702331543
    10. '],[' → logprob: -9.14527702331543

Token 474: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001502717612311244
    2. ' p' → logprob: -6.501502513885498
    3. '           ' → logprob: -15.126502990722656
    4. '<|end|>' → logprob: -16.626502990722656
    5. ' ' → logprob: -16.876502990722656
    6. '   ' → logprob: -17.126502990722656
    7. ')p' → logprob: -18.001502990722656
    8. '
' → logprob: -18.126502990722656
    9. '	p' → logprob: -18.251502990722656
    10. ')' → logprob: -18.376502990722656

Token 475: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011115968227386475
    2. '[' → logprob: -4.511116027832031
    3. ' ' → logprob: -10.636116027832031
    4. '   ' → logprob: -11.136116027832031
    5. '0' → logprob: -12.011116027832031
    6. 'p' → logprob: -12.386116027832031
    7. '][' → logprob: -12.636116027832031
    8. '
' → logprob: -12.761116027832031
    9. ']' → logprob: -13.136116027832031
    10. ' p' → logprob: -13.511116027832031

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.500007629394531
    3. '
' → logprob: -13.125007629394531
    4. 'p' → logprob: -14.250007629394531
    5. '0' → logprob: -14.625007629394531
    6. '```' → logprob: -15.250007629394531
    7. '   ' → logprob: -15.312507629394531
    8. '

' → logprob: -15.500007629394531
    9. '
' → logprob: -16.43750762939453
    10. ']' → logprob: -16.56250762939453

Token 477: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017096864758059382
    2. ' ,' → logprob: -6.626709461212158
    3. '],' → logprob: -8.251709938049316
    4. '),' → logprob: -9.376709938049316
    5. '   ' → logprob: -11.876709938049316
    6. '       ' → logprob: -12.126709938049316
    7. '           ' → logprob: -12.376709938049316
    8. ',f' → logprob: -12.376709938049316
    9. ',
' → logprob: -12.626709938049316
    10. 'fs' → logprob: -12.876709938049316

Token 478: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -5.157039049663581e-05
    2. ' fs' → logprob: -9.875051498413086
    3. '(fs' → logprob: -18.375051498413086
    4. '	fs' → logprob: -18.750051498413086
    5. ' ' → logprob: -19.625051498413086
    6. '   ' → logprob: -19.750051498413086
    7. 'rs' → logprob: -20.125051498413086
    8. 'f' → logprob: -20.125051498413086
    9. '```' → logprob: -20.125051498413086
    10. '_fs' → logprob: -20.250051498413086

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022761584841646254
    2. ',p' → logprob: -8.500227928161621
    3. ' ,' → logprob: -11.750227928161621
    4. '[' → logprob: -12.250227928161621
    5. '):' → logprob: -12.375227928161621
    6. ',f' → logprob: -13.125227928161621
    7. 'p' → logprob: -13.375227928161621
    8. ')' → logprob: -14.125227928161621
    9. ',se' → logprob: -14.750227928161621
    10. ',
' → logprob: -14.750227928161621

Token 480: 'fe' (ID: 2302)
  Prédit: 'fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -2.129266067640856e-05
    2. ' fe' → logprob: -10.875020980834961
    3. '(fe' → logprob: -13.625020980834961
    4. '   ' → logprob: -15.000020980834961
    5. 'f' → logprob: -15.375020980834961
    6. '0' → logprob: -16.12502098083496
    7. ')' → logprob: -16.37502098083496
    8. 'fs' → logprob: -16.37502098083496
    9. 'xfe' → logprob: -16.87502098083496
    10. '       ' → logprob: -17.25002098083496

Token 481: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16070052981376648
    2. '):' → logprob: -1.9107005596160889
    3. '):
' → logprob: -7.78570032119751
    4. ')' → logprob: -9.910700798034668
    5. '       ' → logprob: -12.910700798034668
    6. '):

' → logprob: -13.035700798034668
    7. '           ' → logprob: -13.535700798034668
    8. '   ' → logprob: -13.785700798034668
    9. ':' → logprob: -13.910700798034668
    10. ' ):
' → logprob: -14.035700798034668

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017351951450109482
    2. '           ' → logprob: -4.392352104187012
    3. ':
' → logprob: -6.267352104187012
    4. ':' → logprob: -7.267352104187012
    5. ' return' → logprob: -7.267352104187012
    6. ':return' → logprob: -7.267352104187012
    7. '       ' → logprob: -7.892352104187012
    8. 'return' → logprob: -8.767352104187012
    9. '):
' → logprob: -9.517352104187012
    10. '              ' → logprob: -9.892352104187012

Token 483: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7748657464981079
    2. ' return' → logprob: -1.274865746498108
    3. '                   ' → logprob: -2.0248656272888184
    4. '           ' → logprob: -2.1498656272888184
    5. '               ' → logprob: -4.524865627288818
    6. '   ' → logprob: -9.149866104125977
    7. '
' → logprob: -9.399866104125977
    8. ':return' → logprob: -9.399866104125977
    9. '	return' → logprob: -9.649866104125977
    10. '       ' → logprob: -10.274866104125977

Token 484: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. 'False' → logprob: -20.250335693359375
    4. '   ' → logprob: -20.750335693359375
    5. '(True' → logprob: -21.125335693359375
    6. '=True' → logprob: -21.875335693359375
    7. '           ' → logprob: -23.000335693359375
    8. 'true' → logprob: -23.875335693359375
    9. '       ' → logprob: -24.375335693359375
    10. '               ' → logprob: -24.750335693359375

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024168188974726945
    2. '   ' → logprob: -8.62524127960205
    3. ' return' → logprob: -11.00024127960205
    4. 'return' → logprob: -11.00024127960205
    5. '<|end|>' → logprob: -11.75024127960205
    6. '           ' → logprob: -12.12524127960205
    7. '
' → logprob: -12.25024127960205
    8. '	return' → logprob: -12.62524127960205
    9. ',' → logprob: -13.00024127960205
    10. '	' → logprob: -13.87524127960205

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007685328018851578
    2. '   ' → logprob: -7.500768661499023
    3. 'return' → logprob: -9.125768661499023
    4. ' return' → logprob: -9.625768661499023
    5. '0' → logprob: -12.000768661499023
    6. '           ' → logprob: -12.000768661499023
    7. '
' → logprob: -12.125768661499023
    8. 'def' → logprob: -12.250768661499023
    9. '	return' → logprob: -12.375768661499023
    10. ',' → logprob: -13.000768661499023

Token 487: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16370299458503723
    2. '   ' → logprob: -1.9137029647827148
    3. 'return' (adapté à ' return') → logprob: -6.413702964782715
    4. ' return' → logprob: -7.288702964782715
    5. '	return' → logprob: -7.663702964782715
    6. 'def' → logprob: -7.788702964782715
    7. '	' → logprob: -9.413702964782715
    8. '
' → logprob: -9.788702964782715
    9. '           ' → logprob: -10.413702964782715
    10. '	   ' → logprob: -10.663702964782715

Token 488: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. '(False' → logprob: -20.000036239624023
    4. '   ' → logprob: -20.500036239624023
    5. 'True' → logprob: -21.625036239624023
    6. 'false' → logprob: -22.750036239624023
    7. '=False' → logprob: -23.125036239624023
    8. '_false' → logprob: -24.625036239624023
    9. '.False' → logprob: -24.750036239624023
    10. 'None' → logprob: -25.375036239624023

Token 489: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043304719030857086
    2. '   ' → logprob: -3.293304681777954
    3. '    
' → logprob: -5.418304920196533
    4. '<|end|>' → logprob: -7.918304920196533
    5. '

' → logprob: -8.418304443359375
    6. '  
' → logprob: -9.418304443359375
    7. '
    
' → logprob: -10.168304443359375
    8. '<|end|>' → logprob: -10.418304443359375
    9. '
' → logprob: -10.543304443359375
    10. '        
' → logprob: -12.043304443359375

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12026654183864594
    2. '
' → logprob: -2.4952664375305176
    3. '    
' → logprob: -4.495266437530518
    4. 'filtered' → logprob: -4.870266437530518
    5. 'compatible' → logprob: -5.245266437530518
    6. 'valid' → logprob: -6.120266437530518
    7. 'rest' → logprob: -6.370266437530518
    8. ' compatible' → logprob: -7.370266437530518
    9. 'available' → logprob: -7.620266437530518
    10. ' filtered' → logprob: -8.120266914367676

Token 491: ' candidates' (ID: 18116)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.1628335416316986
    2. 'others' → logprob: -3.0378334522247314
    3. '   ' → logprob: -3.2878334522247314
    4. ' compatible' → logprob: -3.6628334522247314
    5. 'other' → logprob: -4.6628336906433105
    6. 'c' → logprob: -5.0378336906433105
    7. 'valid' → logprob: -5.1628336906433105
    8. 'non' → logprob: -5.1628336906433105
    9. 'available' → logprob: -5.2878336906433105
    10. 'rest' → logprob: -6.2878336906433105

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03807752579450607
    2. '=' → logprob: -3.2880775928497314
    3. '=[]' → logprob: -10.413077354431152
    4. ' =[' → logprob: -12.288077354431152
    5. '=[' → logprob: -13.788077354431152
    6. '[:]' → logprob: -16.28807830810547
    7. '=list' → logprob: -16.41307830810547
    8. '[' → logprob: -16.78807830810547
    9. '=[]
' → logprob: -17.03807830810547
    10. '[]' → logprob: -17.03807830810547

Token 493: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.8191444873809814
    2. '[' → logprob: -1.3191444873809814
    3. '[name' → logprob: -2.0691444873809814
    4. '[]' → logprob: -2.5691444873809814
    5. '[]
' → logprob: -3.3191444873809814
    6. '[i' → logprob: -4.069144248962402
    7. '[p' → logprob: -4.319144248962402
    8. '[t' → logprob: -5.319144248962402
    9. '[pos' → logprob: -5.819144248962402
    10. '[k' → logprob: -6.069144248962402

Token 494: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10308250039815903
    2. '   ' → logprob: -2.3530824184417725
    3. ' for' → logprob: -5.853082656860352
    4. '
' → logprob: -15.353082656860352
    5. '    
' → logprob: -15.353082656860352
    6. '```' → logprob: -15.978082656860352
    7. ')' → logprob: -16.10308265686035
    8. '	for' → logprob: -16.60308265686035
    9. 'not' → logprob: -17.85308265686035
    10. 'c' → logprob: -18.35308265686035

Token 495: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010628487507347018
    2. '   ' → logprob: -9.500105857849121
    3. ' for' → logprob: -10.375105857849121
    4. '
' → logprob: -16.125106811523438
    5. 'non' → logprob: -19.000106811523438
    6. '```' → logprob: -19.500106811523438
    7. '	for' → logprob: -19.625106811523438
    8. '    
' → logprob: -19.750106811523438
    9. ')' → logprob: -20.125106811523438
    10. 'other' → logprob: -21.250106811523438

Token 496: ' st' (ID: 420)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11685600876808167
    2. ' start' → logprob: -2.866856098175049
    3. 'name' → logprob: -3.616856098175049
    4. 's' → logprob: -4.116856098175049
    5. '(start' → logprob: -5.741856098175049
    6. ' (' → logprob: -6.491856098175049
    7. ' s' → logprob: -6.616856098175049
    8. ' name' → logprob: -6.866856098175049
    9. 'p' → logprob: -6.991856098175049
    10. '(s' → logprob: -7.616856098175049

Token 497: ',en' (ID: 143440)
  Prédit: ',end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.41116902232170105
    2. ',' → logprob: -1.1611690521240234
    3. ',e' → logprob: -3.9111690521240234
    4. ',en' → logprob: -6.036169052124023
    5. ' ,' → logprob: -6.536169052124023
    6. 'art' → logprob: -9.536169052124023
    7. ',start' → logprob: -11.036169052124023
    8. 't' → logprob: -11.536169052124023
    9. 'e' → logprob: -11.536169052124023
    10. ',pos' → logprob: -11.911169052124023

Token 498: ',name' (ID: 52064)
  Prédit: ',name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',name' → logprob: -0.10533107072114944
    2. ',' → logprob: -2.3553311824798584
    3. ',n' → logprob: -5.730330944061279
    4. ',t' → logprob: -7.105330944061279
    5. ',p' → logprob: -7.355330944061279
    6. ',_' → logprob: -8.730331420898438
    7. ' ,' → logprob: -9.480331420898438
    8. ',(' → logprob: -9.855331420898438
    9. ',time' → logprob: -11.105331420898438
    10. ',in' → logprob: -11.230331420898438

Token 499: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014221328310668468
    2. 'in' → logprob: -4.26422119140625
    3. ',' → logprob: -10.01422119140625
    4. '   ' → logprob: -11.76422119140625
    5. ' ' → logprob: -13.13922119140625
    6. ' ,' → logprob: -14.26422119140625
    7. 's' → logprob: -14.26422119140625
    8. '    ' → logprob: -15.13922119140625
    9. '	in' → logprob: -15.13922119140625
    10. '  ' → logprob: -15.26422119140625

Token 500: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.018153218552470207
    2. ' times' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.143153190612793
    4. 'program' → logprob: -14.393153190612793
    5. '(times' → logprob: -14.768153190612793
    6. ' ' → logprob: -15.643153190612793
    7. ' programs' → logprob: -16.14315414428711
    8. 'sorted' → logprob: -16.64315414428711
    9. '  ' → logprob: -16.89315414428711
    10. '    ' → logprob: -17.26815414428711

Token 501: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21347354352474213
    2. ':
' → logprob: -1.7134735584259033
    3. '       ' → logprob: -4.463473320007324
    4. '   ' → logprob: -8.463473320007324
    5. '):
' → logprob: -8.588473320007324
    6. ':
' → logprob: -10.213473320007324
    7. '):' → logprob: -11.088473320007324
    8. ',' → logprob: -11.838473320007324
    9. '():
' → logprob: -13.588473320007324
    10. ':

' → logprob: -13.838473320007324

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002502535644453019
    2. ':' → logprob: -9.375249862670898
    3. ' if' → logprob: -9.625249862670898
    4. '   ' → logprob: -10.000249862670898
    5. ',' → logprob: -10.625249862670898
    6. '<|end|>' → logprob: -10.875249862670898
    7. '<|end|>' → logprob: -13.500249862670898
    8. ':
' → logprob: -13.500249862670898
    9. '      ' → logprob: -13.625249862670898
    10. '	   ' → logprob: -13.625249862670898

Token 503: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23810185492038727
    2. ' if' → logprob: -1.613101840019226
    3. 'if' (adapté à ' if') → logprob: -4.613101959228516
    4. '   ' → logprob: -5.988101959228516
    5. '	if' → logprob: -9.363101959228516
    6. '	   ' → logprob: -10.363101959228516
    7. '
' → logprob: -10.613101959228516
    8. '    ' → logprob: -11.363101959228516
    9. '	' → logprob: -11.738101959228516
    10. ' ' → logprob: -12.613101959228516

Token 504: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.01007408183068037
    2. 'not' → logprob: -5.010074138641357
    3. ' name' → logprob: -6.135074138641357
    4. '(name' → logprob: -7.010074138641357
    5. ' not' → logprob: -9.1350736618042
    6. '(not' → logprob: -9.3850736618042
    7. ' (' → logprob: -10.2600736618042
    8. '   ' → logprob: -10.3850736618042
    9. '(' → logprob: -11.8850736618042
    10. 'conf' → logprob: -12.0100736618042

Token 505: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36391565203666687
    2. ' not' → logprob: -1.4889156818389893
    3. 'in' → logprob: -2.6139156818389893
    4. 'not' → logprob: -5.11391544342041
    5. ' ' → logprob: -8.73891544342041
    6. '   ' → logprob: -12.73891544342041
    7. '	not' → logprob: -13.11391544342041
    8. '	in' → logprob: -13.23891544342041
    9. '==' → logprob: -13.61391544342041
    10. ')' → logprob: -13.86391544342041

Token 506: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -1.0206720617134124e-05
    2. ' fav' → logprob: -11.62501049041748
    3. 'f' → logprob: -14.25001049041748
    4. 'favor' → logprob: -15.75001049041748
    5. 'fam' → logprob: -16.375009536743164
    6. 'freq' → logprob: -16.875009536743164
    7. ' ' → logprob: -17.000009536743164
    8. 'program' → logprob: -17.125009536743164
    9. 'fab' → logprob: -17.625009536743164
    10. 'favorites' → logprob: -17.875009536743164

Token 507: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.2200749754119897e-06
    2. 'set' → logprob: -13.625001907348633
    3. 's' → logprob: -14.750001907348633
    4. '_SET' → logprob: -15.250001907348633
    5. 'Set' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.000001907348633
    7. 'f' → logprob: -16.875001907348633
    8. ' set' → logprob: -17.500001907348633
    9. '_sets' → logprob: -18.750001907348633
    10. ')' → logprob: -18.875001907348633

Token 508: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7383359670639038
    2. '       ' → logprob: -1.1133359670639038
    3. ':' → logprob: -1.9883359670639038
    4. ' or' → logprob: -3.2383360862731934
    5. '           ' → logprob: -4.113336086273193
    6. '   ' → logprob: -7.238336086273193
    7. ' and' → logprob: -8.863335609436035
    8. ' continue' → logprob: -9.988335609436035
    9. 'continue' → logprob: -9.988335609436035
    10. ',' → logprob: -10.113335609436035

Token 509: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06494960188865662
    2. '           ' → logprob: -3.0649495124816895
    3. ' continue' → logprob: -4.3149495124816895
    4. 'continue' → logprob: -6.4399495124816895
    5. ' or' → logprob: -6.9399495124816895
    6. '	continue' → logprob: -8.814949989318848
    7. ' and' → logprob: -9.814949989318848
    8. ' continues' → logprob: -10.814949989318848
    9. '   ' → logprob: -10.939949989318848
    10. ':' → logprob: -11.064949989318848

Token 510: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03664996102452278
    2. ' continue' → logprob: -3.4116499423980713
    3. 'continue' → logprob: -6.53665018081665
    4. ' candidates' → logprob: -6.91165018081665
    5. '   ' → logprob: -8.536649703979492
    6. '	continue' → logprob: -9.036649703979492
    7. 'c' → logprob: -9.286649703979492
    8. '           ' → logprob: -9.911649703979492
    9. '	c' → logprob: -10.661649703979492
    10. ' c' → logprob: -11.036649703979492

Token 511: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008625566959381104
    2. '.' → logprob: -4.758625507354736
    3. '.cont' → logprob: -12.258625984191895
    4. ' .' → logprob: -13.258625984191895
    5. 'append' → logprob: -13.383625984191895
    6. '.extend' → logprob: -14.008625984191895
    7. '.app' → logprob: -14.258625984191895
    8. '.ap' → logprob: -15.008625984191895
    9. '       ' → logprob: -15.133625984191895
    10. 'continue' → logprob: -15.258625984191895

Token 512: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.939851037808694e-05
    2. '(times' → logprob: -11.125029563903809
    3. '(program' → logprob: -11.875029563903809
    4. '(' → logprob: -12.625029563903809
    5. '(f' → logprob: -13.125029563903809
    6. '(st' → logprob: -13.500029563903809
    7. '(((' → logprob: -15.125029563903809
    8. ' ((' → logprob: -16.000028610229492
    9. '(("' → logprob: -16.125028610229492
    10. '(('' → logprob: -16.250028610229492

Token 513: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -3.547789674485102e-05
    2. ' st' → logprob: -10.875035285949707
    3. 'program' → logprob: -12.750035285949707
    4. '(st' → logprob: -12.750035285949707
    5. 'fav' → logprob: -12.750035285949707
    6. 'times' → logprob: -13.500035285949707
    7. '0' → logprob: -13.875035285949707
    8. '   ' → logprob: -14.125035285949707
    9. '	st' → logprob: -14.375035285949707
    10. ' ' → logprob: -14.500035285949707

Token 514: ',en' (ID: 143440)
  Prédit: ',en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',en' → logprob: -0.009876853786408901
    2. ',' → logprob: -4.634876728057861
    3. ' ,' → logprob: -9.38487720489502
    4. ',
' → logprob: -11.50987720489502
    5. ',name' → logprob: -11.75987720489502
    6. 'en' → logprob: -12.00987720489502
    7. '   ' → logprob: -12.38487720489502
    8. ',end' → logprob: -12.38487720489502
    9. ',len' → logprob: -14.13487720489502
    10. '
' → logprob: -14.38487720489502

Token 515: ',name' (ID: 52064)
  Prédit: ',name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',name' → logprob: -0.12724147737026215
    2. ',' → logprob: -2.127241373062134
    3. ' ,' → logprob: -8.502241134643555
    4. '))' → logprob: -9.627241134643555
    5. ',
' → logprob: -10.752241134643555
    6. ')' → logprob: -11.752241134643555
    7. ',n' → logprob: -12.377241134643555
    8. '   ' → logprob: -12.752241134643555
    9. ',true' → logprob: -13.627241134643555
    10. ',)' → logprob: -14.127241134643555

Token 516: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03890961781144142
    2. '))' → logprob: -3.913909673690796
    3. ')
' → logprob: -4.038909435272217
    4. '))
' → logprob: -7.538909435272217
    5. '       ' → logprob: -10.538909912109375
    6. ' )' → logprob: -11.913909912109375
    7. ')}' → logprob: -12.288909912109375
    8. '   ' → logprob: -12.788909912109375
    9. ')))' → logprob: -12.913909912109375
    10. ')

' → logprob: -13.538909912109375

Token 517: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03354979306459427
    2. '1' → logprob: -3.5335497856140137
    3. 'False' → logprob: -6.033549785614014
    4. '0' → logprob: -7.033549785614014
    5. ' True' → logprob: -7.783549785614014
    6. 'len' → logprob: -10.033550262451172
    7. '))' → logprob: -11.158550262451172
    8. ' ' → logprob: -11.658550262451172
    9. '
' → logprob: -12.408550262451172
    10. '   ' → logprob: -12.533550262451172

Token 518: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.391238272190094
    2. ')' → logprob: -1.1412382125854492
    3. '))
' → logprob: -6.016238212585449
    4. ')
' → logprob: -6.266238212585449
    5. '   ' → logprob: -11.89123821258545
    6. ' )' → logprob: -12.64123821258545
    7. ' ))' → logprob: -12.76623821258545
    8. ')))' → logprob: -13.01623821258545
    9. '       ' → logprob: -13.64123821258545
    10. ')

' → logprob: -14.51623821258545

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000558512459974736
    2. '<|end|>' → logprob: -7.875558376312256
    3. '   ' → logprob: -10.000558853149414
    4. ',' → logprob: -10.500558853149414
    5. 'else' → logprob: -10.500558853149414
    6. 'elif' → logprob: -10.750558853149414
    7. ' else' → logprob: -10.875558853149414
    8. ' elif' → logprob: -11.875558853149414
    9. ')' → logprob: -12.000558853149414
    10. '           ' → logprob: -12.125558853149414

Token 520: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25177061557769775
    2. '   ' → logprob: -2.376770496368408
    3. 'elif' (adapté à ' elif') → logprob: -2.376770496368408
    4. 'else' → logprob: -3.626770496368408
    5. ' else' → logprob: -5.126770496368408
    6. ' elif' → logprob: -5.501770496368408
    7. '    ' → logprob: -9.876770973205566
    8. '	elif' → logprob: -10.126770973205566
    9. '     ' → logprob: -10.376770973205566
    10. ' ' → logprob: -10.501770973205566

Token 521: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.387262761592865
    2. ' not' → logprob: -1.1372628211975098
    3. '   ' → logprob: -8.262262344360352
    4. 'conf' → logprob: -10.387262344360352
    5. '       ' → logprob: -11.012262344360352
    6. 'n' → logprob: -11.137262344360352
    7. 'all' → logprob: -11.637262344360352
    8. '(not' → logprob: -11.762262344360352
    9. '	not' → logprob: -11.887262344360352
    10. ' all' → logprob: -12.012262344360352

Token 522: ' conflict' (ID: 21461)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.007092446554452181
    2. ' conflict' → logprob: -5.007092475891113
    3. 'any' → logprob: -8.007092475891113
    4. ' any' → logprob: -10.257092475891113
    5. ' conf' → logprob: -12.507092475891113
    6. '(conf' → logprob: -12.757092475891113
    7. '   ' → logprob: -13.757092475891113
    8. ' ' → logprob: -15.007092475891113
    9. '	conf' → logprob: -15.382092475891113
    10. '
' → logprob: -16.132091522216797

Token 523: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -2.5776860184123507e-06
    2. 'with' → logprob: -13.12500286102295
    3. 'With' → logprob: -16.125001907348633
    4. '_' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '
' → logprob: -16.750001907348633
    7. '_WITH' → logprob: -16.750001907348633
    8. ' with' → logprob: -17.125001907348633
    9. '_w' → logprob: -17.875001907348633
    10. ')' → logprob: -17.875001907348633

Token 524: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.027195267379283905
    2. 'f' → logprob: -3.6521952152252197
    3. 'fav' → logprob: -7.277195453643799
    4. '(f' → logprob: -9.02719497680664
    5. '((' → logprob: -10.52719497680664
    6. '_' → logprob: -10.77719497680664
    7. 's' → logprob: -11.90219497680664
    8. ' fav' → logprob: -12.65219497680664
    9. '_(' → logprob: -12.77719497680664
    10. '	f' → logprob: -12.90219497680664

Token 525: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.00151831132825464
    2. 'av' → logprob: -6.876518249511719
    3. 'f' → logprob: -7.876518249511719
    4. 'fav' → logprob: -10.251518249511719
    5. 'afs' → logprob: -11.251518249511719
    6. '(' → logprob: -11.626518249511719
    7. 'a' → logprob: -11.751518249511719
    8. ' fav' → logprob: -11.876518249511719
    9. 's' → logprob: -12.501518249511719
    10. 'aves' → logprob: -12.876518249511719

Token 526: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004775072447955608
    2. '(st' → logprob: -5.379775047302246
    3. '(en' → logprob: -9.629775047302246
    4. '(' → logprob: -9.754775047302246
    5. ' (' → logprob: -11.504775047302246
    6. '   ' → logprob: -12.004775047302246
    7. ' ((' → logprob: -12.129775047302246
    8. ' ' → logprob: -12.754775047302246
    9. '  ' → logprob: -14.379775047302246
    10. '(
' → logprob: -14.379775047302246

Token 527: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -2.7968066206085496e-05
    2. '(st' → logprob: -10.625027656555176
    3. ' st' → logprob: -12.625027656555176
    4. '   ' → logprob: -15.750027656555176
    5. '	st' → logprob: -16.000028610229492
    6. '(' → logprob: -18.375028610229492
    7. ' ' → logprob: -18.500028610229492
    8. '_st' → logprob: -18.750028610229492
    9. '  ' → logprob: -19.000028610229492
    10. '    ' → logprob: -19.250028610229492

Token 528: ',en' (ID: 143440)
  Prédit: ',en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',en' → logprob: -0.00275602238252759
    2. 'en' → logprob: -6.377756118774414
    3. ',' → logprob: -6.877756118774414
    4. ' ,' → logprob: -11.252756118774414
    5. ',
' → logprob: -12.627756118774414
    6. '	en' → logprob: -13.002756118774414
    7. ',end' → logprob: -13.877756118774414
    8. '(en' → logprob: -14.627756118774414
    9. ' en' → logprob: -14.877756118774414
    10. '```' → logprob: -15.127756118774414

Token 529: ')):
' (ID: 22530)
  Prédit: ',name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',name' → logprob: -0.04421902075409889
    2. 'name' → logprob: -3.2942190170288086
    3. '))' → logprob: -5.419219017028809
    4. ',' → logprob: -6.544219017028809
    5. ' name' → logprob: -9.794219017028809
    6. '(name' → logprob: -10.044219017028809
    7. ')))' → logprob: -10.294219017028809
    8. ' ,' → logprob: -10.544219017028809
    9. ',en' → logprob: -10.794219017028809
    10. ')),' → logprob: -11.169219017028809

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14029721915721893
    2. ':
' → logprob: -2.3902971744537354
    3. ':' → logprob: -3.7652971744537354
    4. '       ' → logprob: -4.2652974128723145
    5. ' and' → logprob: -6.7652974128723145
    6. '):
' → logprob: -7.6402974128723145
    7. ',' → logprob: -8.390296936035156
    8. '   ' → logprob: -9.390296936035156
    9. '          ' → logprob: -10.265296936035156
    10. ' :
' → logprob: -11.015296936035156

Token 531: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0034480185713618994
    2. ' candidates' → logprob: -5.753448009490967
    3. '           ' → logprob: -8.503448486328125
    4. '       ' → logprob: -10.253448486328125
    5. '   ' → logprob: -10.628448486328125
    6. ' c' → logprob: -12.503448486328125
    7. '               ' → logprob: -12.628448486328125
    8. 'cand' → logprob: -15.378448486328125
    9. '	c' → logprob: -15.628448486328125
    10. '_candidates' → logprob: -16.128448486328125

Token 532: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.963691804325208e-05
    2. '.' → logprob: -10.500029563903809
    3. 'append' → logprob: -14.125029563903809
    4. ' .' → logprob: -14.250029563903809
    5. '.app' → logprob: -14.750029563903809
    6. '           ' → logprob: -15.625029563903809
    7. '.extend' → logprob: -17.500030517578125
    8. '.add' → logprob: -17.750030517578125
    9. ').' → logprob: -18.625030517578125
    10. '.Append' → logprob: -18.750030517578125

Token 533: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -13.125003814697266
    3. '(' → logprob: -13.625003814697266
    4. ' ((' → logprob: -14.500003814697266
    5. '(st' → logprob: -15.125003814697266
    6. ' ' → logprob: -17.625003814697266
    7. '  ' → logprob: -18.000003814697266
    8. ' (' → logprob: -18.375003814697266
    9. '(((' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 534: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.018189162015914917
    2. '(st' → logprob: -4.018188953399658
    3. ' st' → logprob: -10.518189430236816
    4. ' (' → logprob: -12.268189430236816
    5. '   ' → logprob: -12.393189430236816
    6. '	st' → logprob: -13.268189430236816
    7. '(' → logprob: -14.893189430236816
    8. '_st' → logprob: -15.893189430236816
    9. ' ' → logprob: -15.893189430236816
    10. ')' → logprob: -16.0181884765625

Token 535: ',en' (ID: 143440)
  Prédit: ',en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',en' → logprob: -0.005315462127327919
    2. 'en' → logprob: -5.25531530380249
    3. 'st' → logprob: -9.755315780639648
    4. ',' → logprob: -11.130315780639648
    5. '[' → logprob: -12.755315780639648
    6. '=en' → logprob: -13.005315780639648
    7. '_en' → logprob: -14.130315780639648
    8. '(en' → logprob: -14.380315780639648
    9. '-en' → logprob: -14.755315780639648
    10. ',end' → logprob: -14.880315780639648

Token 536: ',name' (ID: 52064)
  Prédit: ',name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',name' → logprob: -0.00010652327910065651
    2. ',' → logprob: -9.750106811523438
    3. 'name' → logprob: -10.000106811523438
    4. ' ,' → logprob: -14.125106811523438
    5. ' name' → logprob: -14.500106811523438
    6. ''name' → logprob: -14.750106811523438
    7. '"name' → logprob: -15.125106811523438
    8. '{name' → logprob: -15.375106811523438
    9. '   ' → logprob: -16.375106811523438
    10. ')' → logprob: -16.375106811523438

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005936628440394998
    2. 'False' → logprob: -7.500593662261963
    3. '(False' → logprob: -10.375594139099121
    4. ',(' → logprob: -12.250594139099121
    5. ' ,' → logprob: -12.750594139099121
    6. ',F' → logprob: -14.250594139099121
    7. ' False' → logprob: -14.750594139099121
    8. '   ' → logprob: -14.875594139099121
    9. ',false' → logprob: -15.125594139099121
    10. '),' → logprob: -16.750593185424805

Token 538: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.3544423381972592e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -15.75001335144043
    4. 'True' → logprob: -15.75001335144043
    5. '   ' → logprob: -16.50001335144043
    6. '
' → logprob: -16.75001335144043
    7. '=False' → logprob: -17.62501335144043
    8. ')' → logprob: -18.50001335144043
    9. '.False' → logprob: -19.25001335144043
    10. 'FALSE' → logprob: -19.75001335144043

Token 539: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3873327374458313
    2. ')' → logprob: -1.1373326778411865
    3. '))
' → logprob: -8.137332916259766
    4. ')
' → logprob: -9.637332916259766
    5. '   ' → logprob: -9.887332916259766
    6. ')))' → logprob: -10.512332916259766
    7. '       ' → logprob: -10.637332916259766
    8. ')}' → logprob: -14.762332916259766
    9. ' ))' → logprob: -15.137332916259766
    10. '))

' → logprob: -15.262332916259766

Token 540: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7518901824951172
    2. '
' → logprob: -1.2518901824951172
    3. '   ' → logprob: -1.6268901824951172
    4. ' candidates' → logprob: -3.376890182495117
    5. '    
' → logprob: -5.876890182495117
    6. '_candidates' → logprob: -5.876890182495117
    7. ')' → logprob: -6.126890182495117
    8. '```' → logprob: -6.876890182495117
    9. ')
' → logprob: -7.501890182495117
    10. ',c' → logprob: -7.876890182495117

Token 541: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00584476999938488
    2. '
' → logprob: -5.755844593048096
    3. ' candidates' → logprob: -6.130844593048096
    4. '   ' → logprob: -7.755844593048096
    5. '    
' → logprob: -10.880845069885254
    6. '_candidates' → logprob: -11.130845069885254
    7. '#' (adapté à ' #') → logprob: -11.755845069885254
    8. 'andidates' → logprob: -12.380845069885254
    9. '
' → logprob: -12.505845069885254
    10. 'Candidates' → logprob: -13.255845069885254

Token 542: ' check' (ID: 2371)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014824152924120426
    2. '#' → logprob: -4.514824390411377
    3. '   ' → logprob: -6.139824390411377
    4. ' candidates' → logprob: -6.514824390411377
    5. 'cand' → logprob: -10.514823913574219
    6. '
' → logprob: -10.639823913574219
    7. 'def' → logprob: -11.264823913574219
    8. 'candidate' → logprob: -11.639823913574219
    9. 'Candidates' → logprob: -11.889823913574219
    10. 'filtered' → logprob: -12.514823913574219

Token 543: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03356040641665459
    2. ' candidates' → logprob: -3.5335605144500732
    3. '   ' → logprob: -5.783560276031494
    4. '#' → logprob: -8.033560752868652
    5. '
' → logprob: -9.283560752868652
    6. ' c' → logprob: -9.658560752868652
    7. 'if' → logprob: -9.908560752868652
    8. 'andidates' → logprob: -10.158560752868652
    9. '_candidates' → logprob: -10.533560752868652
    10. 'cand' → logprob: -10.908560752868652

Token 544: ' fav' (ID: 11726)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1316591501235962
    2. 'len' → logprob: -1.6316591501235962
    3. ' not' → logprob: -2.0066590309143066
    4. ' candidates' → logprob: -2.2566590309143066
    5. ' len' → logprob: -2.7566590309143066
    6. 'not' → logprob: -2.7566590309143066
    7. ' conflict' → logprob: -3.0066590309143066
    8. ' any' → logprob: -4.256659030914307
    9. 'True' → logprob: -4.631659030914307
    10. 'all' → logprob: -4.631659030914307

Token 545: ' programs' (ID: 8094)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.5419496297836304
    2. 's' → logprob: -1.2919496297836304
    3. '_candidates' → logprob: -2.16694974899292
    4. '_' → logprob: -4.91694974899292
    5. '_set' → logprob: -5.66694974899292
    6. '_sorted' → logprob: -5.79194974899292
    7. 'inter' → logprob: -6.91694974899292
    8. '   ' → logprob: -7.16694974899292
    9. '_s' → logprob: -7.41694974899292
    10. 'andidates' → logprob: -7.54194974899292

Token 546: ' among' (ID: 6200)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.4477068185806274
    2. ' and' → logprob: -2.072706699371338
    3. 'and' → logprob: -2.322706699371338
    4. ':' → logprob: -2.322706699371338
    5. ' all' → logprob: -2.447706699371338
    6. 'all' → logprob: -2.822706699371338
    7. ')' → logprob: -3.072706699371338
    8. '_sorted' → logprob: -3.322706699371338
    9. ' are' → logprob: -3.572706699371338
    10. 'sorted' → logprob: -3.697706699371338

Token 547: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.015087920241057873
    2. '[c' → logprob: -5.515088081359863
    3. ' candidates' → logprob: -5.640088081359863
    4. '[' → logprob: -5.765088081359863
    5. 'the' → logprob: -7.140088081359863
    6. 'sorted' → logprob: -7.265088081359863
    7. '[f' → logprob: -7.515088081359863
    8. 'f' → logprob: -7.765088081359863
    9. 'any' → logprob: -8.015088081359863
    10. '[(' → logprob: -8.015088081359863

Token 548: ' don't' (ID: 4128)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6299102902412415
    2. ':' → logprob: -1.2549102306365967
    3. '.sort' → logprob: -2.2549102306365967
    4. ':
' → logprob: -3.8799102306365967
    5. '
' → logprob: -4.004910469055176
    6. ' =' → logprob: -4.754910469055176
    7. 'and' → logprob: -5.129910469055176
    8. '_candidates' → logprob: -5.254910469055176
    9. '    
' → logprob: -5.754910469055176
    10. '_sorted' → logprob: -5.879910469055176

Token 549: ' conflict' (ID: 21461)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.6479753851890564
    2. ' overlap' → logprob: -0.7729753851890564
    3. '   ' → logprob: -4.897975444793701
    4. 'conf' → logprob: -6.272975444793701
    5. '
' → logprob: -6.772975444793701
    6. '       ' → logprob: -6.897975444793701
    7. ' conflict' → logprob: -7.147975444793701
    8. 'have' → logprob: -7.397975444793701
    9. ' have' → logprob: -7.647975444793701
    10. '#' → logprob: -7.647975444793701

Token 550: ' anymore' (ID: 23680)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03628157824277878
    2. '
' → logprob: -3.7862815856933594
    3. 'for' → logprob: -4.786281585693359
    4. ':' → logprob: -7.036281585693359
    5. 'and' → logprob: -7.286281585693359
    6. ' and' → logprob: -7.536281585693359
    7. ' for' → logprob: -7.786281585693359
    8. ':
' → logprob: -8.03628158569336
    9. ',' → logprob: -8.16128158569336
    10. '    
' → logprob: -8.28628158569336

Token 551: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04471774026751518
    2. '
' → logprob: -3.169717788696289
    3. '    
' → logprob: -6.919717788696289
    4. ' candidates' → logprob: -8.669717788696289
    5. ',' → logprob: -8.919717788696289
    6. '.' → logprob: -9.419717788696289
    7. '<|end|>' → logprob: -9.419717788696289
    8. 'c' → logprob: -10.044717788696289
    9. ':' → logprob: -10.294717788696289
    10. '```' → logprob: -10.544717788696289

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008236650377511978
    2. '
' → logprob: -5.008236885070801
    3. '    
' → logprob: -7.008236885070801
    4. '.' → logprob: -8.2582368850708
    5. ',' → logprob: -9.0082368850708
    6. '<|end|>' → logprob: -9.3832368850708
    7. ':' → logprob: -10.3832368850708
    8. ')' → logprob: -10.3832368850708
    9. ' candidates' → logprob: -10.7582368850708
    10. '#' → logprob: -11.5082368850708

Token 553: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10040658712387085
    2. 'c' → logprob: -3.1004066467285156
    3. '
' → logprob: -3.3504066467285156
    4. '    
' → logprob: -4.850406646728516
    5. ' candidates' → logprob: -5.100406646728516
    6. '_candidates' → logprob: -7.475406646728516
    7. ',' → logprob: -8.600406646728516
    8. ')' → logprob: -8.975406646728516
    9. '<|end|>' → logprob: -9.100406646728516
    10. ' 
' → logprob: -9.225406646728516

Token 554: ' now' (ID: 1954)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02144319750368595
    2. '   ' → logprob: -4.2714433670043945
    3. 'f' → logprob: -5.7714433670043945
    4. '#' → logprob: -6.5214433670043945
    5. 'fav' → logprob: -7.1464433670043945
    6. 'cand' → logprob: -7.7714433670043945
    7. 'candidate' → logprob: -7.8964433670043945
    8. 'for' → logprob: -8.646443367004395
    9. ' candidates' → logprob: -9.146443367004395
    10. 'favorites' → logprob: -9.396443367004395

Token 555: ' we' (ID: 581)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5236862897872925
    2. '   ' → logprob: -1.2736862897872925
    3. ' candidates' → logprob: -2.148686408996582
    4. '
' → logprob: -4.898686408996582
    5. ',' → logprob: -6.898686408996582
    6. '#' → logprob: -6.898686408996582
    7. '    
' → logprob: -8.023686408996582
    8. 'candidate' → logprob: -8.398686408996582
    9. ' c' → logprob: -8.773686408996582
    10. 'cand' → logprob: -9.023686408996582

Token 556: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8137524724006653
    2. 'sort' → logprob: -1.3137524127960205
    3. ' sort' → logprob: -1.5637524127960205
    4. 'c' → logprob: -3.9387524127960205
    5. ' should' → logprob: -4.3137526512146
    6. '.sort' → logprob: -4.3137526512146
    7. '=' → logprob: -5.0637526512146
    8. '#' → logprob: -5.3137526512146
    9. ' need' → logprob: -5.4387526512146
    10. ' can' → logprob: -5.8137526512146

Token 557: ' max' (ID: 2999)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.40815234184265137
    2. ' to' → logprob: -1.1581523418426514
    3. 'c' → logprob: -4.1581525802612305
    4. '   ' → logprob: -5.5331525802612305
    5. ' candidates' → logprob: -6.7831525802612305
    6. '
' → logprob: -8.65815258026123
    7. '#' → logprob: -9.53315258026123
    8. '_candidates' → logprob: -10.53315258026123
    9. 'def' → logprob: -11.65815258026123
    10. 'sorted' → logprob: -11.90815258026123

Token 558: ' set' (ID: 920)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.53289794921875
    2. ' candidates' → logprob: -1.53289794921875
    3. '   ' → logprob: -2.40789794921875
    4. '_count' → logprob: -3.65789794921875
    5. 'c' → logprob: -4.03289794921875
    6. 'count' → logprob: -4.78289794921875
    7. '(' → logprob: -4.90789794921875
    8. ')' → logprob: -5.15789794921875
    9. ' count' → logprob: -5.65789794921875
    10. ',' → logprob: -6.03289794921875

Token 559: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07439015060663223
    2. '
' → logprob: -3.574390172958374
    3. ',' → logprob: -4.324389934539795
    4. ' =' → logprob: -4.449389934539795
    5. ' candidates' → logprob: -4.949389934539795
    6. '_candidates' → logprob: -5.324389934539795
    7. '    
' → logprob: -6.949389934539795
    8. '=' → logprob: -7.324389934539795
    9. ':' → logprob: -7.449389934539795
    10. '.sort' → logprob: -7.824389934539795

Token 560: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.46039319038391113
    2. 'all' → logprob: -1.2103931903839111
    3. 'f' → logprob: -3.460393190383911
    4. ' the' → logprob: -4.085392951965332
    5. 'the' → logprob: -4.460392951965332
    6. 'fav' → logprob: -4.710392951965332
    7. '   ' → logprob: -7.585392951965332
    8. ' fav' → logprob: -7.835392951965332
    9. ' at' → logprob: -8.210392951965332
    10. 'favorites' → logprob: -8.835392951965332

Token 561: ' fav' (ID: 11726)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -1.0534579753875732
    2. 'c' → logprob: -1.1784579753875732
    3. '   ' → logprob: -1.5534579753875732
    4. 'f' → logprob: -2.9284579753875732
    5. 'fav' → logprob: -3.3034579753875732
    6. ' fav' → logprob: -5.178458213806152
    7. ' the' → logprob: -5.428458213806152
    8. ' programs' → logprob: -5.553458213806152
    9. 'favorites' → logprob: -5.803458213806152
    10. ' non' → logprob: -5.803458213806152

Token 562: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9288925528526306
    2. ' candidates' → logprob: -1.1788926124572754
    3. '
' → logprob: -2.6788926124572754
    4. 'c' → logprob: -2.9288926124572754
    5. '#' → logprob: -3.0538926124572754
    6. ',' → logprob: -3.4288926124572754
    7. 's' → logprob: -3.6788926124572754
    8. '_candidates' → logprob: -4.303892612457275
    9. 'import' → logprob: -5.553892612457275
    10. 'def' → logprob: -5.553892612457275

Token 563: 'marked' (ID: 71560)
  Prédit: ' programs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programs' → logprob: -0.23986993730068207
    2. ')' → logprob: -2.4898698329925537
    3. 's' → logprob: -2.9898698329925537
    4. 'program' → logprob: -3.3648698329925537
    5. ' candidates' → logprob: -3.7398698329925537
    6. ')
' → logprob: -4.989870071411133
    7. '   ' → logprob: -5.239870071411133
    8. ',' → logprob: -5.989870071411133
    9. 'False' → logprob: -6.739870071411133
    10. '),' → logprob: -6.864870071411133

Token 564: ' True' (ID: 6432)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.05213594809174538
    2. ',' → logprob: -3.677135944366455
    3. ')' → logprob: -4.177135944366455
    4. ' as' → logprob: -5.677135944366455
    5. '),' → logprob: -6.052135944366455
    6. '=False' → logprob: -7.052135944366455
    7. ' ones' → logprob: -7.177135944366455
    8. ' programs' → logprob: -7.302135944366455
    9. 'as' → logprob: -7.552135944366455
    10. '=' → logprob: -8.177136421203613

Token 565: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09288693219423294
    2. ')
' → logprob: -2.9678869247436523
    3. ',' → logprob: -3.8428869247436523
    4. '   ' → logprob: -4.592886924743652
    5. '),' → logprob: -6.717886924743652
    6. ' programs' → logprob: -6.842886924743652
    7. ' and' → logprob: -7.092886924743652
    8. ').' → logprob: -7.592886924743652
    9. ')
' → logprob: -7.842886924743652
    10. ' candidates' → logprob: -7.967886924743652

Token 566: ' from' (ID: 591)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08381444960832596
    2. '#' → logprob: -2.8338143825531006
    3. ' candidates' → logprob: -4.58381462097168
    4. '   ' → logprob: -4.83381462097168
    5. '
' → logprob: -7.08381462097168
    6. 'and' → logprob: -7.83381462097168
    7. 'sorted' → logprob: -7.83381462097168
    8. 'which' → logprob: -8.33381462097168
    9. ' and' → logprob: -8.45881462097168
    10. ' but' → logprob: -8.58381462097168

Token 567: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018794413655996323
    2. ' candidates' → logprob: -4.268794536590576
    3. 'the' → logprob: -5.893794536590576
    4. 'sorted' → logprob: -7.018794536590576
    5. ' the' → logprob: -8.143794059753418
    6. '#' → logprob: -8.393794059753418
    7. 'candidate' → logprob: -9.893794059753418
    8. 'non' → logprob: -10.018794059753418
    9. 'all' → logprob: -10.143794059753418
    10. '   ' → logprob: -10.268794059753418

Token 568: ' without' (ID: 2935)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5129225254058838
    2. '   ' → logprob: -1.2629225254058838
    3. 'c' → logprob: -2.262922525405884
    4. ' candidates' → logprob: -5.012922286987305
    5. '    
' → logprob: -5.512922286987305
    6. ',' → logprob: -7.012922286987305
    7. '_candidates' → logprob: -7.262922286987305
    8. '.
' → logprob: -8.012922286987305
    9. ',c' → logprob: -8.137922286987305
    10. '.' → logprob: -8.512922286987305

Token 569: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.029620761051774025
    2. ' overlap' → logprob: -4.27962064743042
    3. 'conf' → logprob: -4.90462064743042
    4. ' conflicts' → logprob: -5.90462064743042
    5. ' overlaps' → logprob: -5.90462064743042
    6. ' conflict' → logprob: -6.77962064743042
    7. ' True' → logprob: -7.65462064743042
    8. 'any' → logprob: -8.279621124267578
    9. ' overlapping' → logprob: -8.779621124267578
    10. ' any' → logprob: -9.154621124267578

Token 570: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3715614676475525
    2. '
' → logprob: -1.2465615272521973
    3. 'c' → logprob: -4.746561527252197
    4. '    
' → logprob: -4.871561527252197
    5. ' candidates' → logprob: -5.746561527252197
    6. ',' → logprob: -6.996561527252197
    7. ')' → logprob: -7.746561527252197
    8. ')
' → logprob: -7.871561527252197
    9. '_candidates' → logprob: -7.871561527252197
    10. ',c' → logprob: -8.871561050415039

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6137797832489014
    2. '
' → logprob: -0.8637797832489014
    3. ' candidates' → logprob: -3.8637797832489014
    4. 'c' → logprob: -4.4887800216674805
    5. '    
' → logprob: -5.9887800216674805
    6. '_candidates' → logprob: -7.2387800216674805
    7. ')' → logprob: -7.7387800216674805
    8. ',' → logprob: -8.11378002166748
    9. 'andidates' → logprob: -8.73878002166748
    10. ')
' → logprob: -8.73878002166748

Token 572: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13275375962257385
    2. '   ' → logprob: -2.132753849029541
    3. '
' → logprob: -5.382753849029541
    4. ' candidates' → logprob: -7.257753849029541
    5. '    
' → logprob: -8.757753372192383
    6. 'candidate' → logprob: -9.507753372192383
    7. ')' → logprob: -9.757753372192383
    8. '```' → logprob: -9.757753372192383
    9. '_candidates' → logprob: -9.882753372192383
    10. ')
' → logprob: -11.132753372192383

Token 573: ' classic' (ID: 13686)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010553228668868542
    2. '   ' → logprob: -4.635553359985352
    3. ' candidates' → logprob: -7.885553359985352
    4. '
' → logprob: -8.135553359985352
    5. 'cand' → logprob: -10.510553359985352
    6. 'candidate' → logprob: -10.635553359985352
    7. '    
' → logprob: -11.385553359985352
    8. 'sorted' → logprob: -11.510553359985352
    9. '_candidates' → logprob: -11.635553359985352
    10. '#' → logprob: -11.885553359985352

Token 574: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.22931060194969177
    2. 'interval' → logprob: -2.6043105125427246
    3. ' dynamic' → logprob: -3.6043105125427246
    4. '
' → logprob: -3.9793105125427246
    5. ' =' → logprob: -4.229310512542725
    6. ' 
' → logprob: -4.604310512542725
    7. ' weighted' → logprob: -4.729310512542725
    8. ' intervals' → logprob: -4.979310512542725
    9. ' n' → logprob: -5.479310512542725
    10. '_interval' → logprob: -5.604310512542725

Token 575: ' scheduling' (ID: 51708)
  Prédit: ' scheduling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scheduling' → logprob: -0.19766820967197418
    2. 's' → logprob: -1.947668194770813
    3. '_s' → logprob: -3.8226683139801025
    4. '_' → logprob: -4.947668075561523
    5. ' _' → logprob: -6.072668075561523
    6. 'scheduler' → logprob: -6.947668075561523
    7. ' ' → logprob: -7.072668075561523
    8. '_scheduler' → logprob: -7.572668075561523
    9. 'cheduling' → logprob: -7.697668075561523
    10. '   ' → logprob: -8.072668075561523

Token 576: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31229162216186523
    2. 'c' → logprob: -1.4372916221618652
    3. '   ' → logprob: -3.6872916221618652
    4. '    
' → logprob: -5.687291622161865
    5. ' candidates' → logprob: -6.687291622161865
    6. '
' → logprob: -8.437292098999023
    7. '_candidates' → logprob: -8.437292098999023
    8. ',' → logprob: -9.312292098999023
    9. ',c' → logprob: -9.812292098999023
    10. '  
' → logprob: -10.062292098999023

Token 577: ' forced' (ID: 19387)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.5310063362121582
    2. 'c' → logprob: -2.156006336212158
    3. ' candidates' → logprob: -2.281006336212158
    4. ' dynamic' → logprob: -2.531006336212158
    5. ' sorting' → logprob: -2.531006336212158
    6. 'a' → logprob: -2.781006336212158
    7. 'dp' → logprob: -2.906006336212158
    8. ' all' → logprob: -3.031006336212158
    9. 'all' → logprob: -3.531006336212158
    10. 'False' → logprob: -3.781006336212158

Token 578: ' intervals' (ID: 49900)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023433446884155273
    2. ' inclusion' → logprob: -3.8984334468841553
    3. 'include' → logprob: -6.398433685302734
    4. 'included' → logprob: -8.023433685302734
    5. 'selection' → logprob: -8.773433685302734
    6. '_in' → logprob: -8.773433685302734
    7. 'includes' → logprob: -9.023433685302734
    8. 'interval' → logprob: -9.523433685302734
    9. 'choice' → logprob: -9.648433685302734
    10. '-in' → logprob: -10.148433685302734

Token 579: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6805659532546997
    2. '   ' → logprob: -1.4305659532546997
    3. 'c' → logprob: -1.4305659532546997
    4. '    
' → logprob: -4.68056583404541
    5. ' candidates' → logprob: -6.05556583404541
    6. ',' → logprob: -7.05556583404541
    7. '```' → logprob: -7.93056583404541
    8. '

' → logprob: -8.05556583404541
    9. ':' → logprob: -8.30556583404541
    10. '  
' → logprob: -8.43056583404541

Token 580: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14637593924999237
    2. '   ' → logprob: -2.146375894546509
    3. '
' → logprob: -4.396376132965088
    4. ' candidates' → logprob: -5.521376132965088
    5. '```' → logprob: -6.771376132965088
    6. '    
' → logprob: -7.396376132965088
    7. '#' → logprob: -7.646376132965088
    8. '``' → logprob: -8.39637565612793
    9. 'sorted' → logprob: -8.39637565612793
    10. 'candidate' → logprob: -9.89637565612793

Token 581: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02506871521472931
    2. '   ' → logprob: -4.400068759918213
    3. ' candidates' → logprob: -4.525068759918213
    4. '
' → logprob: -6.525068759918213
    5. ' c' → logprob: -9.900068283081055
    6. '#' (adapté à ' #') → logprob: -10.400068283081055
    7. '    
' → logprob: -10.400068283081055
    8. 'candidate' → logprob: -11.275068283081055
    9. 'sorted' → logprob: -11.275068283081055
    10. 'cand' → logprob: -11.400068283081055

Token 582: ' First' (ID: 8338)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007190215401351452
    2. '#' → logprob: -5.382190227508545
    3. ' candidates' → logprob: -6.382190227508545
    4. '   ' → logprob: -7.632190227508545
    5. 'selected' → logprob: -9.257189750671387
    6. 'forced' → logprob: -9.382189750671387
    7. 'cand' → logprob: -9.882189750671387
    8. 'candidate' → logprob: -10.507189750671387
    9. '
' → logprob: -10.757189750671387
    10. 'favorites' → logprob: -11.007189750671387

Token 583: ' sort' (ID: 4506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6098677515983582
    2. 'sort' → logprob: -1.109867811203003
    3. ' sort' → logprob: -2.359867811203003
    4. 'c' → logprob: -4.359867572784424
    5. ' candidates' → logprob: -4.859867572784424
    6. 'filter' → logprob: -5.859867572784424
    7. ' we' → logprob: -6.234867572784424
    8. ' mark' → logprob: -6.609867572784424
    9. ' separate' → logprob: -7.109867572784424
    10. 'we' → logprob: -7.359867572784424

Token 584: ' by' (ID: 656)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03700488805770874
    2. '(c' → logprob: -3.6620049476623535
    3. ' candidates' → logprob: -5.2870049476623535
    4. 'by' → logprob: -5.5370049476623535
    5. '   ' → logprob: -6.5370049476623535
    6. ' by' → logprob: -8.912004470825195
    7. '(' → logprob: -11.287004470825195
    8. 'candidate' → logprob: -11.287004470825195
    9. 'cand' → logprob: -11.412004470825195
    10. '_candidates' → logprob: -11.412004470825195

Token 585: ' end' (ID: 1268)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.14674648642539978
    2. 'end' → logprob: -2.2717463970184326
    3. 'lambda' → logprob: -4.646746635437012
    4. 'st' → logprob: -4.771746635437012
    5. ' en' → logprob: -4.896746635437012
    6. '   ' → logprob: -5.771746635437012
    7. ' end' → logprob: -6.521746635437012
    8. 'key' → logprob: -6.771746635437012
    9. 'start' → logprob: -7.646746635437012
    10. ' lambda' → logprob: -8.021746635437012

Token 586: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4177708625793457
    2. 'time' → logprob: -1.2927708625793457
    3. '_times' → logprob: -3.6677708625793457
    4. 'times' → logprob: -4.167770862579346
    5. ')' → logprob: -4.542770862579346
    6. ' time' → logprob: -4.792770862579346
    7. ' times' → logprob: -6.167770862579346
    8. ',' → logprob: -6.792770862579346
    9. '   ' → logprob: -7.042770862579346
    10. '=' → logprob: -7.667770862579346

Token 587: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6926223039627075
    2. 'c' → logprob: -0.8176223039627075
    3. ' =' → logprob: -3.942622184753418
    4. ' candidates' → logprob: -4.317622184753418
    5. ',' → logprob: -4.942622184753418
    6. ')
' → logprob: -5.817622184753418
    7. '=' → logprob: -6.067622184753418
    8. ',c' → logprob: -6.192622184753418
    9. '_candidates' → logprob: -6.192622184753418
    10. '(c' → logprob: -6.317622184753418

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7132664918899536
    2. 'c' → logprob: -0.8382664918899536
    3. '
' → logprob: -2.588266372680664
    4. ' candidates' → logprob: -6.713266372680664
    5. '    
' → logprob: -8.338266372680664
    6. 'sorted' → logprob: -8.713266372680664
    7. ')' → logprob: -9.213266372680664
    8. ')
' → logprob: -9.713266372680664
    9. ',' → logprob: -9.713266372680664
    10. ')c' → logprob: -9.713266372680664

Token 589: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004621187690645456
    2. '   ' → logprob: -5.6296210289001465
    3. ' candidates' → logprob: -7.2546210289001465
    4. '
' → logprob: -8.129621505737305
    5. '_candidates' → logprob: -12.254621505737305
    6. '    
' → logprob: -13.004621505737305
    7. ')c' → logprob: -13.254621505737305
    8. ')' → logprob: -13.379621505737305
    9. 'tokens' → logprob: -13.629621505737305
    10. '```' → logprob: -13.879621505737305

Token 590: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00034845535992644727
    2. '=' → logprob: -8.000348091125488
    3. '.' → logprob: -11.375348091125488
    4. 'sort' → logprob: -14.375348091125488
    5. 'sorted' → logprob: -14.625348091125488
    6. '.=' → logprob: -15.750348091125488
    7. '.sorted' → logprob: -16.000349044799805
    8. '	sort' → logprob: -17.000349044799805
    9. ' =' → logprob: -17.250349044799805
    10. '.s' → logprob: -17.375349044799805

Token 591: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0019326817709952593
    2. '()' → logprob: -6.251932621002197
    3. '()
' → logprob: -13.251933097839355
    4. 'key' → logprob: -13.751933097839355
    5. '(' → logprob: -13.751933097839355
    6. '(reverse' → logprob: -16.00193214416504
    7. ' key' → logprob: -16.75193214416504
    8. ',key' → logprob: -16.75193214416504
    9. '(lambda' → logprob: -17.75193214416504
    10. '	key' → logprob: -18.50193214416504

Token 592: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0005535095697268844
    2. '=' → logprob: -7.500553607940674
    3. 'lambda' → logprob: -14.500553131103516
    4. '=
' → logprob: -18.125553131103516
    5. '(lambda' → logprob: -19.000553131103516
    6. ' lambda' → logprob: -19.625553131103516
    7. ' =' → logprob: -19.750553131103516
    8. '=\' → logprob: -21.250553131103516
    9. '=_' → logprob: -21.500553131103516
    10. '=item' → logprob: -21.750553131103516

Token 593: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.49446824193000793
    2. ' lambda' → logprob: -1.4944682121276855
    3. 'x' → logprob: -1.8694682121276855
    4. ' x' → logprob: -4.4944682121276855
    5. '=lambda' → logprob: -8.369468688964844
    6. 'c' → logprob: -9.619468688964844
    7. '   ' → logprob: -10.994468688964844
    8. '(lambda' → logprob: -11.119468688964844
    9. 'e' → logprob: -11.744468688964844
    10. 'ambda' → logprob: -12.494468688964844

Token 594: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012674453668296337
    2. ':x' → logprob: -4.387674331665039
    3. ' :' → logprob: -8.887674331665039
    4. 'x' → logprob: -10.887674331665039
    5. ':(' → logprob: -12.637674331665039
    6. ' x' → logprob: -13.012674331665039
    7. ':
' → logprob: -13.512674331665039
    8. '   ' → logprob: -14.637674331665039
    9. '	x' → logprob: -15.637674331665039
    10. '=' → logprob: -15.637674331665039

Token 595: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006287694908678532
    2. '[' → logprob: -5.131287574768066
    3. ' ' → logprob: -8.006287574768066
    4. '   ' → logprob: -11.381287574768066
    5. ':' → logprob: -12.381287574768066
    6. '
' → logprob: -12.756287574768066
    7. 'x' → logprob: -13.131287574768066
    8. '`' → logprob: -13.506287574768066
    9. '[
' → logprob: -13.756287574768066
    10. ' [' → logprob: -14.006287574768066

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -13.375005722045898
    3. '   ' → logprob: -13.625005722045898
    4. '
' → logprob: -13.750005722045898
    5. '[' → logprob: -14.125005722045898
    6. '```' → logprob: -16.0000057220459
    7. '`' → logprob: -16.1250057220459
    8. ')' → logprob: -16.1875057220459
    9. 'x' → logprob: -16.1875057220459
    10. ']' → logprob: -16.3125057220459

Token 597: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023643692838959396
    2. ' )' → logprob: -8.375236511230469
    3. ')
' → logprob: -12.375236511230469
    4. '))' → logprob: -14.250236511230469
    5. ')#' → logprob: -15.250236511230469
    6. '   ' → logprob: -15.500236511230469
    7. '())' → logprob: -16.50023651123047
    8. ')return' → logprob: -16.50023651123047
    9. ')`' → logprob: -16.62523651123047
    10. '})' → logprob: -16.75023651123047

Token 598: '   ' (ID: 271)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.23888997733592987
    2. 'dp' → logprob: -1.8638899326324463
    3. '
' → logprob: -3.6138899326324463
    4. '   ' → logprob: -4.863890171051025
    5. ' selected' → logprob: -5.113890171051025
    6. 'chosen' → logprob: -5.488890171051025
    7. 'max' → logprob: -5.738890171051025
    8. ' dp' → logprob: -5.863890171051025
    9. ',' → logprob: -6.488890171051025
    10. '    
' → logprob: -7.488890171051025

Token 599: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019834261387586594
    2. 'selected' → logprob: -4.019834041595459
    3. 'import' → logprob: -7.644834041595459
    4. 'n' → logprob: -8.644834518432617
    5. '   ' → logprob: -8.769834518432617
    6. 'from' → logprob: -8.894834518432617
    7. '
' → logprob: -8.894834518432617
    8. '#' (adapté à ' #') → logprob: -8.894834518432617
    9. 'max' → logprob: -9.144834518432617
    10. 'chosen' → logprob: -9.269834518432617

Token 600: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.037668902426958084
    2. 'selected' → logprob: -3.4126689434051514
    3. 'import' → logprob: -6.287668704986572
    4. 'from' → logprob: -7.537668704986572
    5. ' dp' → logprob: -7.662668704986572
    6. 'n' → logprob: -8.28766918182373
    7. 'chosen' → logprob: -8.41266918182373
    8. 'max' → logprob: -8.53766918182373
    9. '#' → logprob: -9.03766918182373
    10. 'included' → logprob: -9.16266918182373

Token 601: ' do' (ID: 621)
  Prédit: 'ill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.795106053352356
    2. 'selected' → logprob: -2.1701059341430664
    3. 'dp' → logprob: -2.4201059341430664
    4. ' =' → logprob: -2.6701059341430664
    5. '   ' → logprob: -2.7951059341430664
    6. '=' → logprob: -3.0451059341430664
    7. '#' → logprob: -3.7951059341430664
    8. ' selected' → logprob: -3.7951059341430664
    9. ' dp' → logprob: -3.7951059341430664
    10. 's' → logprob: -4.170105934143066

Token 602: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7669183611869812
    2. ' dp' → logprob: -1.641918420791626
    3. 'from' → logprob: -2.266918420791626
    4. 'n' → logprob: -2.391918420791626
    5. ' from' → logprob: -3.391918420791626
    6. 's' → logprob: -3.641918420791626
    7. 'import' → logprob: -3.891918420791626
    8. 't' → logprob: -4.766918182373047
    9. ' not' → logprob: -5.141918182373047
    10. 'selected' → logprob: -5.141918182373047

Token 603: ' indexed' (ID: 44010)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08078913390636444
    2. '=' → logprob: -3.955789089202881
    3. ',' → logprob: -4.455789089202881
    4. '   ' → logprob: -4.705789089202881
    5. 'import' → logprob: -5.205789089202881
    6. 'dp' → logprob: -5.205789089202881
    7. '
' → logprob: -5.580789089202881
    8. '=[]
' → logprob: -5.705789089202881
    9. ':' → logprob: -5.830789089202881
    10. '=[]' → logprob: -5.955789089202881

Token 604: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8623574376106262
    2. ' by' → logprob: -1.8623573780059814
    3. 'by' → logprob: -2.1123573780059814
    4. '=' → logprob: -2.4873573780059814
    5. '0' → logprob: -3.2373573780059814
    6. '_candidates' → logprob: -3.2373573780059814
    7. 'i' → logprob: -3.6123573780059814
    8. 'c' → logprob: -3.9873573780059814
    9. ' ' → logprob: -4.1123576164245605
    10. ' at' → logprob: -4.3623576164245605

Token 605: ' sorted' (ID: 20099)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08021090924739838
    2. 'idx' → logprob: -3.0802109241485596
    3. 'index' → logprob: -3.9552109241485596
    4. 'len' → logprob: -5.3302106857299805
    5. ' i' → logprob: -5.4552106857299805
    6. ' idx' → logprob: -6.4552106857299805
    7. ' index' → logprob: -7.4552106857299805
    8. '0' → logprob: -7.5802106857299805
    9. 'pos' → logprob: -9.83021068572998
    10. ' len' → logprob: -11.08021068572998

Token 606: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22693748772144318
    2. '_candidates' → logprob: -2.3519375324249268
    3. ' candidates' → logprob: -2.9769375324249268
    4. '_c' → logprob: -4.101937294006348
    5. '_idx' → logprob: -4.601937294006348
    6. ' =' → logprob: -5.351937294006348
    7. 'index' → logprob: -5.601937294006348
    8. '_index' → logprob: -5.976937294006348
    9. '=' → logprob: -5.976937294006348
    10. '   ' → logprob: -6.101937294006348

Token 607: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49608558416366577
    2. ' =' → logprob: -1.8710856437683105
    3. 'dp' → logprob: -2.2460856437683105
    4. '   ' → logprob: -3.4960856437683105
    5. '
' → logprob: -3.7460856437683105
    6. ',' → logprob: -4.1210856437683105
    7. ':
' → logprob: -4.3710856437683105
    8. '[' → logprob: -4.6210856437683105
    9. '=' → logprob: -4.6210856437683105
    10. '[]' → logprob: -5.1210856437683105

Token 608: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008862383663654327
    2. 'n' → logprob: -5.258862495422363
    3. '   ' → logprob: -5.883862495422363
    4. ' dp' → logprob: -8.008862495422363
    5. '
' → logprob: -8.633862495422363
    6. 'from' → logprob: -8.758862495422363
    7. ' n' → logprob: -10.133862495422363
    8. 'import' → logprob: -10.133862495422363
    9. 'selected' → logprob: -10.758862495422363
    10. 'max' → logprob: -10.883862495422363

Token 609: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0036164664197713137
    2. 'n' → logprob: -5.7536163330078125
    3. 'import' → logprob: -8.003616333007812
    4. 'from' → logprob: -9.378616333007812
    5. '
' → logprob: -11.378616333007812
    6. ' dp' → logprob: -12.253616333007812
    7. '   ' → logprob: -13.253616333007812
    8. '#' (adapté à ' #') → logprob: -14.628616333007812
    9. ' n' → logprob: -14.878616333007812
    10. 'prev' → logprob: -15.003616333007812

Token 610: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02609347179532051
    2. 'n' → logprob: -3.7760934829711914
    3. 'import' → logprob: -6.776093482971191
    4. ' dp' → logprob: -7.401093482971191
    5. 'from' → logprob: -7.776093482971191
    6. '
' → logprob: -7.901093482971191
    7. ' n' → logprob: -8.276093482971191
    8. '#' → logprob: -11.026093482971191
    9. '   ' → logprob: -11.401093482971191
    10. ' from' → logprob: -11.901093482971191

Token 611: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35955512523651123
    2. 'each' → logprob: -1.8595551252365112
    3. ' each' → logprob: -2.734555244445801
    4. ' i' → logprob: -3.359555244445801
    5. 'dp' → logprob: -3.359555244445801
    6. ' dp' → logprob: -4.984555244445801
    7. 'idx' → logprob: -6.609555244445801
    8. ' the' → logprob: -7.359555244445801
    9. '(i' → logprob: -7.734555244445801
    10. ' idx' → logprob: -7.984555244445801

Token 612: ' candidate' (ID: 17098)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3133270740509033
    2. ' i' → logprob: -1.3133270740509033
    3. 'index' → logprob: -11.063326835632324
    4. '   ' → logprob: -11.188326835632324
    5. 'c' → logprob: -11.688326835632324
    6. 'idx' → logprob: -11.813326835632324
    7. ' index' → logprob: -12.313326835632324
    8. 'candidate' → logprob: -12.313326835632324
    9. 'def' → logprob: -13.063326835632324
    10. ' in' → logprob: -13.438326835632324

Token 613: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20985086262226105
    2. ' in' → logprob: -2.334850788116455
    3. ' i' → logprob: -3.209850788116455
    4. ':' → logprob: -3.834850788116455
    5. ' ,' → logprob: -3.959850788116455
    6. 'i' → logprob: -5.709850788116455
    7. '   ' → logprob: -6.334850788116455
    8. ',i' → logprob: -6.584850788116455
    9. 'in' → logprob: -7.084850788116455
    10. ',
' → logprob: -7.209850788116455

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14198467135429382
    2. ':' → logprob: -2.141984701156616
    3. '   ' → logprob: -5.391984462738037
    4. ' in' → logprob: -5.391984462738037
    5. ' ,' → logprob: -6.016984462738037
    6. ':
' → logprob: -7.016984462738037
    7. ',
' → logprob: -7.141984462738037
    8. 'in' → logprob: -8.266984939575195
    9. ' =' → logprob: -8.641984939575195
    10. 'import' → logprob: -9.141984939575195

Token 615: ' dp' (ID: 21546)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7922919392585754
    2. 'dp' → logprob: -1.2922918796539307
    3. ' dp' → logprob: -2.0422918796539307
    4. '   ' → logprob: -3.5422918796539307
    5. 'we' → logprob: -3.6672918796539307
    6. ' best' → logprob: -3.9172918796539307
    7. ' if' → logprob: -4.41729211807251
    8. ' for' → logprob: -4.79229211807251
    9. '#' → logprob: -5.04229211807251
    10. ' can' → logprob: -5.29229211807251

Token 616: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022873515263199806
    2. '=' → logprob: -4.397873401641846
    3. '[i' → logprob: -4.897873401641846
    4. '=[' → logprob: -6.772873401641846
    5. '   ' → logprob: -7.397873401641846
    6. '[' → logprob: -7.772873401641846
    7. '_end' → logprob: -8.897873878479004
    8. '=[]' → logprob: -9.147873878479004
    9. '	' → logprob: -10.022873878479004
    10. '_i' → logprob: -10.272873878479004

Token 617: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015968683874234557
    2. ']=' → logprob: -7.001596927642822
    3. '][' → logprob: -8.126596450805664
    4. ']=(' → logprob: -9.126596450805664
    5. ' ]' → logprob: -9.376596450805664
    6. ']={' → logprob: -9.751596450805664
    7. '],' → logprob: -10.501596450805664
    8. '   ' → logprob: -11.376596450805664
    9. ' =' → logprob: -11.376596450805664
    10. ']
' → logprob: -11.626596450805664

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12734454870224
    2. ' =' → logprob: -2.1273446083068848
    3. '   ' → logprob: -9.252344131469727
    4. '=[' → logprob: -9.377344131469727
    5. '=[]' → logprob: -10.252344131469727
    6. '={}' → logprob: -10.502344131469727
    7. 'dp' → logprob: -11.002344131469727
    8. '[' → logprob: -11.127344131469727
    9. '```' → logprob: -11.502344131469727
    10. 'start' → logprob: -11.627344131469727

Token 619: ' maximum' (ID: 10562)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7749210596084595
    2. 'max' → logprob: -1.3999210596084595
    3. '(max' → logprob: -2.02492094039917
    4. 'the' → logprob: -2.14992094039917
    5. '1' → logprob: -3.77492094039917
    6. 'maximum' → logprob: -5.64992094039917
    7. '(i' → logprob: -6.02492094039917
    8. ' the' → logprob: -6.14992094039917
    9. ' (' → logprob: -6.14992094039917
    10. 'a' → logprob: -6.39992094039917

Token 620: ' number' (ID: 2086)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5007151961326599
    2. 'number' → logprob: -1.7507152557373047
    3. 'dp' → logprob: -2.6257152557373047
    4. 'size' → logprob: -2.8757152557373047
    5. ' number' → logprob: -3.1257152557373047
    6. ' count' → logprob: -3.5007152557373047
    7. ' size' → logprob: -5.750715255737305
    8. '   ' → logprob: -5.750715255737305
    9. 'i' → logprob: -6.375715255737305
    10. '(' → logprob: -6.625715255737305

Token 621: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.7687362432479858
    2. ' of' → logprob: -1.0187362432479858
    3. '_of' → logprob: -3.1437363624572754
    4. '_candidates' → logprob: -3.2687363624572754
    5. '_tokens' → logprob: -3.8937363624572754
    6. '=' → logprob: -4.268736362457275
    7. '_items' → logprob: -5.268736362457275
    8. '
' → logprob: -5.268736362457275
    9. '[
' → logprob: -5.268736362457275
    10. ' ' → logprob: -5.393736362457275

Token 622: ' programs' (ID: 8094)
  Prédit: ' programs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programs' → logprob: -0.8597597479820251
    2. 'program' → logprob: -1.23475980758667
    3. 'c' → logprob: -2.23475980758667
    4. 'selected' → logprob: -2.35975980758667
    5. 'interval' → logprob: -3.35975980758667
    6. ' intervals' → logprob: -3.73475980758667
    7. ' selected' → logprob: -4.60975980758667
    8. '```' → logprob: -5.60975980758667
    9. ' candidates' → logprob: -5.98475980758667
    10. ' True' → logprob: -6.10975980758667

Token 623: ' watch' (ID: 5621)
  Prédit: ' including'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' including' → logprob: -0.8186644315719604
    2. ' that' → logprob: -0.9436644315719604
    3. 'including' → logprob: -3.06866455078125
    4. ' selected' → logprob: -3.31866455078125
    5. ',' → logprob: -3.94366455078125
    6. '   ' → logprob: -4.56866455078125
    7. ' =' → logprob: -4.81866455078125
    8. ' ' → logprob: -4.94366455078125
    9. 'that' → logprob: -4.94366455078125
    10. 'selected' → logprob: -5.06866455078125

Token 624: 'able' (ID: 562)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.014369276352226734
    2. 'able' → logprob: -4.264369487762451
    3. '   ' → logprob: -8.889369010925293
    4. ',' → logprob: -11.514369010925293
    5. '[i' → logprob: -11.639369010925293
    6. '=' → logprob: -11.764369010925293
    7. 'e' → logprob: -12.014369010925293
    8. 'ing' → logprob: -12.139369010925293
    9. 'd' → logprob: -12.139369010925293
    10. 'i' → logprob: -12.514369010925293

Token 625: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.994644820690155
    2. ' =' → logprob: -1.2446448802947998
    3. '   ' → logprob: -1.4946448802947998
    4. '
' → logprob: -2.4946448802948
    5. '=' → logprob: -4.369644641876221
    6. ' ' → logprob: -5.244644641876221
    7. ' with' → logprob: -5.744644641876221
    8. ')' → logprob: -6.119644641876221
    9. ' ,' → logprob: -6.619644641876221
    10. 'with' → logprob: -6.869644641876221

Token 626: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011113138869404793
    2. ' i' → logprob: -4.511113166809082
    3. '   ' → logprob: -10.011113166809082
    4. ' ' → logprob: -11.761113166809082
    5. '	i' → logprob: -12.886113166809082
    6. 'c' → logprob: -13.261113166809082
    7. '[i' → logprob: -13.386113166809082
    8. '`' → logprob: -13.511113166809082
    9. ' candidates' → logprob: -13.886113166809082
    10. '
' → logprob: -14.136113166809082

Token 627: ' including' (ID: 3463)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0047954320907593
    2. '   ' → logprob: -1.5047954320907593
    3. ' =' → logprob: -1.6297954320907593
    4. '
' → logprob: -2.254795551300049
    5. '=' → logprob: -3.129795551300049
    6. ' with' → logprob: -4.754795551300049
    7. '[i' → logprob: -5.129795551300049
    8. '[' → logprob: -5.379795551300049
    9. ' ' → logprob: -5.379795551300049
    10. ' and' → logprob: -5.379795551300049

Token 628: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1459912061691284
    2. ' i' → logprob: -1.1459912061691284
    3. 'c' → logprob: -1.7709912061691284
    4. ' the' → logprob: -2.645991325378418
    5. ' candidates' → logprob: -3.145991325378418
    6. 'candidate' → logprob: -3.645991325378418
    7. 'the' → logprob: -3.895991325378418
    8. '[i' → logprob: -4.895991325378418
    9. ' candidate' → logprob: -5.020991325378418
    10. ' all' → logprob: -5.770991325378418

Token 629: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.9442793726921082
    2. 'f' → logprob: -1.194279432296753
    3. ' True' → logprob: -2.069279432296753
    4. '   ' → logprob: -2.569279432296753
    5. 'True' → logprob: -3.069279432296753
    6. ' fav' → logprob: -3.694279432296753
    7. 'favorites' → logprob: -4.819279193878174
    8. 'c' → logprob: -5.319279193878174
    9. ' ' → logprob: -6.069279193878174
    10. ' f' → logprob: -6.319279193878174

Token 630: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05281780660152435
    2. '_' → logprob: -4.4278178215026855
    3. ')' → logprob: -4.6778178215026855
    4. '_candidates' → logprob: -4.9278178215026855
    5. '[]' → logprob: -5.3028178215026855
    6. '[i' → logprob: -5.6778178215026855
    7. '[' → logprob: -6.1778178215026855
    8. ',' → logprob: -6.4278178215026855
    9. ' =' → logprob: -6.6778178215026855
    10. ' ' → logprob: -6.9278178215026855

Token 631: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026709871366620064
    2. '=' → logprob: -4.026710033416748
    3. ',' → logprob: -5.526710033416748
    4. '
' → logprob: -6.651710033416748
    5. ' =
' → logprob: -7.651710033416748
    6. '[' → logprob: -7.776710033416748
    7. ' ' → logprob: -8.15170955657959
    8. 's' → logprob: -8.15170955657959
    9. ':' → logprob: -8.65170955657959
    10. '[]' → logprob: -8.65170955657959

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8299023509025574
    2. ',' → logprob: -1.3299024105072021
    3. ' =' → logprob: -2.579902410507202
    4. '
' → logprob: -2.829902410507202
    5. 'dp' → logprob: -3.454902410507202
    6. ' and' → logprob: -3.704902410507202
    7. ':' → logprob: -3.954902410507202
    8. '=' → logprob: -4.079902172088623
    9. ' with' → logprob: -4.704902172088623
    10. '.' → logprob: -4.954902172088623

Token 633: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012287236750125885
    2. ' dp' → logprob: -5.387287139892578
    3. '   ' → logprob: -6.137287139892578
    4. 'from' → logprob: -6.512287139892578
    5. ',' → logprob: -6.762287139892578
    6. '
' → logprob: -7.012287139892578
    7. 'import' → logprob: -7.512287139892578
    8. ' from' → logprob: -8.262287139892578
    9. '	dp' → logprob: -8.512287139892578
    10. 'n' → logprob: -8.762287139892578

Token 634: ' But' (ID: 3072)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006548631936311722
    2. 'from' → logprob: -5.6315484046936035
    3. 'import' → logprob: -6.2565484046936035
    4. ' dp' → logprob: -8.006548881530762
    5. '
' → logprob: -8.381548881530762
    6. 'prev' → logprob: -8.756548881530762
    7. 'n' → logprob: -8.881548881530762
    8. ' from' → logprob: -10.006548881530762
    9. '#' → logprob: -10.131548881530762
    10. '   ' → logprob: -10.381548881530762

Token 635: ' forced' (ID: 19387)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7741247415542603
    2. ' the' → logprob: -1.1491247415542603
    3. 'we' → logprob: -3.5241246223449707
    4. ' since' → logprob: -3.5241246223449707
    5. ' dp' → logprob: -3.7741246223449707
    6. 'the' → logprob: -4.399124622344971
    7. ' for' → logprob: -4.524124622344971
    8. ' there' → logprob: -4.524124622344971
    9. ' let's' → logprob: -4.524124622344971
    10. 'since' → logprob: -4.774124622344971

Token 636: ' to' (ID: 316)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.3910556435585022
    2. 'interval' → logprob: -2.0160555839538574
    3. '<|end|>' → logprob: -2.8910555839538574
    4. ' to' → logprob: -3.7660555839538574
    5. '
' → logprob: -4.141055583953857
    6. 'program' → logprob: -4.391055583953857
    7. '_' → logprob: -4.516055583953857
    8. '=True' → logprob: -4.516055583953857
    9. ' programs' → logprob: -5.016055583953857
    10. 'tokens' → logprob: -5.141055583953857

Token 637: ' include' (ID: 3931)
  Prédit: ' include'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' include' → logprob: -0.30741074681282043
    2. 'include' → logprob: -1.682410717010498
    3. ' select' → logprob: -3.307410717010498
    4. 'select' → logprob: -4.057410717010498
    5. ' pick' → logprob: -5.182410717010498
    6. '_include' → logprob: -5.182410717010498
    7. ' choose' → logprob: -5.307410717010498
    8. 'pick' → logprob: -6.182410717010498
    9. 'choose' → logprob: -6.432410717010498
    10. ' watch' → logprob: -6.682410717010498

Token 638: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0854202508926392
    2. ' all' → logprob: -1.2104202508926392
    3. ' at' → logprob: -2.3354201316833496
    4. ' the' → logprob: -2.7104201316833496
    5. 'the' → logprob: -3.2104201316833496
    6. 'c' → logprob: -3.4604201316833496
    7. 'i' → logprob: -4.21042013168335
    8. ' True' → logprob: -4.33542013168335
    9. '=True' → logprob: -4.58542013168335
    10. '   ' → logprob: -4.58542013168335

Token 639: ' fav' (ID: 11726)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -1.3845123052597046
    2. ' True' → logprob: -1.8845123052597046
    3. '_' → logprob: -2.259512424468994
    4. ' programs' → logprob: -2.634512424468994
    5. ' candidates' → logprob: -2.759512424468994
    6. ')' → logprob: -2.759512424468994
    7. ' intervals' → logprob: -3.259512424468994
    8. 's' → logprob: -3.509512424468994
    9. 'True' → logprob: -3.634512424468994
    10. ',' → logprob: -4.259512424468994

Token 640: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24378712475299835
    2. '   ' → logprob: -1.993787169456482
    3. 'c' → logprob: -4.2437872886657715
    4. 'i' → logprob: -4.4937872886657715
    5. 'interval' → logprob: -4.8687872886657715
    6. '       ' → logprob: -5.2437872886657715
    7. ',' → logprob: -5.4937872886657715
    8. 'ids' → logprob: -5.4937872886657715
    9. 'program' → logprob: -5.9937872886657715
    10. '           ' → logprob: -5.9937872886657715

Token 641: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06902230530977249
    2. 'dp' → logprob: -3.4440224170684814
    3. ' =' → logprob: -3.8190224170684814
    4. ',' → logprob: -5.444022178649902
    5. ':' → logprob: -6.819022178649902
    6. '=' → logprob: -7.069022178649902
    7. '
' → logprob: -7.069022178649902
    8. ',
' → logprob: -7.194022178649902
    9. 'import' → logprob: -7.444022178649902
    10. '=
' → logprob: -7.694022178649902

Token 642: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.1911704540252686
    2. 'dp' → logprob: -1.1911704540252686
    3. ' dp' → logprob: -2.3161704540252686
    4. '
' → logprob: -2.6911704540252686
    5. ' we' → logprob: -2.9411704540252686
    6. ' and' → logprob: -3.1911704540252686
    7. ' i' → logprob: -3.4411704540252686
    8. ' not' → logprob: -3.5661704540252686
    9. '#' → logprob: -4.941170692443848
    10. 'import' → logprob: -5.441170692443848

Token 643: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4877054989337921
    2. ' dp' → logprob: -1.3627054691314697
    3. ' we' → logprob: -2.3627054691314697
    4. ' the' → logprob: -4.737705707550049
    5. ' there' → logprob: -5.237705707550049
    6. 'we' → logprob: -5.487705707550049
    7. 'fav' → logprob: -5.737705707550049
    8. ' let's' → logprob: -5.987705707550049
    9. 'import' → logprob: -6.362705707550049
    10. ' for' → logprob: -6.487705707550049

Token 644: ' state' (ID: 2608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027699442580342293
    2. '=' → logprob: -3.9026994705200195
    3. '=[]' → logprob: -5.7776994705200195
    4. '=[' → logprob: -6.1526994705200195
    5. '[i' → logprob: -7.4026994705200195
    6. '=[]
' → logprob: -7.7776994705200195
    7. '_values' → logprob: -8.90269947052002
    8. '_size' → logprob: -9.02769947052002
    9. '[' → logprob: -9.02769947052002
    10. ',' → logprob: -9.40269947052002

Token 645: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7371445298194885
    2. 's' → logprob: -0.8621445298194885
    3. '=' → logprob: -2.6121444702148438
    4. '[i' → logprob: -5.112144470214844
    5. '=[]' → logprob: -5.362144470214844
    6. ' is' → logprob: -5.862144470214844
    7. ',' → logprob: -5.987144470214844
    8. '=[' → logprob: -6.112144470214844
    9. ' includes' → logprob: -6.737144470214844
    10. '=[]
' → logprob: -7.237144470214844

Token 646: ' track' (ID: 5290)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6817610859870911
    2. ' include' → logprob: -0.8067610859870911
    3. 'include' → logprob: -4.681761264801025
    4. '<|end|>' → logprob: -4.931761264801025
    5. 's' → logprob: -5.306761264801025
    6. ' =' → logprob: -5.431761264801025
    7. ',' → logprob: -5.431761264801025
    8. ' not' → logprob: -5.931761264801025
    9. '_include' → logprob: -5.931761264801025
    10. ' have' → logprob: -5.931761264801025

Token 647: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.1503169983625412
    2. ' which' → logprob: -2.5253169536590576
    3. 'selected' → logprob: -4.025317192077637
    4. 'fav' → logprob: -4.525317192077637
    5. 'the' → logprob: -4.900317192077637
    6. 'included' → logprob: -5.150317192077637
    7. 'visited' → logprob: -5.775317192077637
    8. 'whether' → logprob: -6.025317192077637
    9. 'chosen' → logprob: -6.400317192077637
    10. ' the' → logprob: -6.400317192077637

Token 648: ' fav' (ID: 11726)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2080031782388687
    2. 'fav' → logprob: -1.7080031633377075
    3. 'favorites' → logprob: -5.958003044128418
    4. ' fav' → logprob: -7.083003044128418
    5. 'forced' → logprob: -7.208003044128418
    6. 'required' → logprob: -7.833003044128418
    7. '_f' → logprob: -8.208003044128418
    8. 'program' → logprob: -8.458003044128418
    9. 'favorite' → logprob: -8.583003044128418
    10. ' forced' → logprob: -8.708003044128418

Token 649: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018038025125861168
    2. 'ored' → logprob: -5.768037796020508
    3. '_set' → logprob: -6.143037796020508
    4. 'or' → logprob: -6.143037796020508
    5. 'program' → logprob: -6.893037796020508
    6. '_program' → logprob: -7.143037796020508
    7. '_bit' → logprob: -7.143037796020508
    8. '_mask' → logprob: -7.518037796020508
    9. 'sets' → logprob: -7.768037796020508
    10. 'statuses' → logprob: -7.768037796020508

Token 650: ' are' (ID: 553)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.5204663872718811
    2. '_' → logprob: -1.8954663276672363
    3. '<|end|>' → logprob: -2.6454663276672363
    4. 's' → logprob: -3.3954663276672363
    5. ')' → logprob: -3.3954663276672363
    6. '_seen' → logprob: -4.020466327667236
    7. '_in' → logprob: -4.270466327667236
    8. '_set' → logprob: -4.270466327667236
    9. '_bit' → logprob: -4.520466327667236
    10. '_count' → logprob: -4.770466327667236

Token 651: ' included' (ID: 7360)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.03744053468108177
    2. 'covered' → logprob: -3.537440538406372
    3. ' included' → logprob: -5.537440299987793
    4. 'taken' → logprob: -6.662440299987793
    5. 'selected' → logprob: -7.162440299987793
    6. 'chosen' → logprob: -7.537440299987793
    7. 'visited' → logprob: -8.287440299987793
    8. 'already' → logprob: -8.287440299987793
    9. 'picked' → logprob: -8.412440299987793
    10. ' covered' → logprob: -9.037440299987793

Token 652: ' so' (ID: 813)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11816123127937317
    2. ',' → logprob: -3.243161201477051
    3. ',
' → logprob: -3.493161201477051
    4. '_' → logprob: -4.993161201477051
    5. '_
' → logprob: -5.118161201477051
    6. 'dp' → logprob: -5.493161201477051
    7. 'import' → logprob: -6.243161201477051
    8. '  
' → logprob: -6.368161201477051
    9. 'from' → logprob: -6.493161201477051
    10. ']' → logprob: -6.618161201477051

Token 653: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.011410413309931755
    2. ' far' → logprob: -4.511410236358643
    3. 'that' → logprob: -8.2614107131958
    4. ' that' → logprob: -9.6364107131958
    5. 'we' → logprob: -10.7614107131958
    6. '_far' → logprob: -11.8864107131958
    7. 'bit' → logprob: -12.1364107131958
    8. ' we' → logprob: -14.0114107131958
    9. '   ' → logprob: -14.3864107131958
    10. 'cannot' → logprob: -14.6364107131958

Token 654: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14848892390727997
    2. '<|end|>' → logprob: -2.773488998413086
    3. ',' → logprob: -3.148488998413086
    4. 'import' → logprob: -4.648488998413086
    5. ',
' → logprob: -5.273488998413086
    6. 'from' → logprob: -5.898488998413086
    7. '<|end|>' → logprob: -6.273488998413086
    8. '.' → logprob: -6.273488998413086
    9. ':' → logprob: -6.523488998413086
    10. ')' → logprob: -7.023488998413086

Token 655: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019000176340341568
    2. '<|end|>' → logprob: -4.644000053405762
    3. ',' → logprob: -5.644000053405762
    4. 'import' → logprob: -7.144000053405762
    5. 'from' → logprob: -7.519000053405762
    6. ')' → logprob: -7.519000053405762
    7. '<|end|>' → logprob: -7.894000053405762
    8. ',
' → logprob: -7.894000053405762
    9. ']' → logprob: -8.144000053405762
    10. '```' → logprob: -8.144000053405762

Token 656: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1521569937467575
    2. 'from' → logprob: -2.2771570682525635
    3. 'fav' → logprob: -4.652156829833984
    4. 'import' → logprob: -4.652156829833984
    5. '#' (adapté à ' #') → logprob: -5.027156829833984
    6. ' from' → logprob: -5.277156829833984
    7. 'n' → logprob: -6.402156829833984
    8. ' dp' → logprob: -6.902156829833984
    9. 'N' → logprob: -7.027156829833984
    10. '
' → logprob: -7.027156829833984

Token 657: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.610319197177887
    2. 'from' → logprob: -1.1103191375732422
    3. ' from' → logprob: -2.360319137573242
    4. 'import' → logprob: -4.860319137573242
    5. 'fav' → logprob: -4.860319137573242
    6. '#' → logprob: -5.360319137573242
    7. 'n' → logprob: -5.360319137573242
    8. ' dp' → logprob: -5.610319137573242
    9. 'max' → logprob: -6.985319137573242
    10. '
' → logprob: -7.360319137573242

Token 658: ' P' (ID: 398)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0792381763458252
    2. ' len' → logprob: -1.4542381763458252
    3. 'P' → logprob: -1.8292381763458252
    4. ' P' → logprob: -1.8292381763458252
    5. ' the' → logprob: -3.454238176345825
    6. 'fav' → logprob: -3.454238176345825
    7. 'the' → logprob: -3.829238176345825
    8. 'f' → logprob: -5.204237937927246
    9. ' ' → logprob: -5.704237937927246
    10. ' not' → logprob: -6.204237937927246

Token 659: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1276977062225342
    2. ' <=' → logprob: -1.2526977062225342
    3. '=' → logprob: -2.002697706222534
    4. ' ==' → logprob: -2.127697706222534
    5. ')' → logprob: -3.377697706222534
    6. '==' → logprob: -3.502697706222534
    7. '<=' → logprob: -3.877697706222534
    8. ' =' → logprob: -3.877697706222534
    9. ' <' → logprob: -4.377697944641113
    10. '<|end|>' → logprob: -5.377697944641113

Token 660: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.012340463697910309
    2. ' not' → logprob: -5.137340545654297
    3. 'be' → logprob: -5.887340545654297
    4. ' up' → logprob: -6.762340545654297
    5. ' at' → logprob: -7.387340545654297
    6. ' <=' → logprob: -8.012340545654297
    7. '<|end|>' → logprob: -8.012340545654297
    8. '<=' → logprob: -8.012340545654297
    9. ' is' → logprob: -8.887340545654297
    10. 'not' → logprob: -8.887340545654297

Token 661: ' up' (ID: 869)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.15637055039405823
    2. ' large' → logprob: -2.0313706398010254
    3. 'up' → logprob: -5.156370639801025
    4. 'small' → logprob: -6.156370639801025
    5. 'very' → logprob: -6.531370639801025
    6. '0' → logprob: -6.656370639801025
    7. ' up' → logprob: -7.156370639801025
    8. 'big' → logprob: -8.281370162963867
    9. ' ' → logprob: -8.406370162963867
    10. ' small' → logprob: -8.531370162963867

Token 662: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06470435857772827
    2. 'To' → logprob: -3.939704418182373
    3. '1' → logprob: -4.314704418182373
    4. '=' → logprob: -5.439704418182373
    5. ' to' → logprob: -5.439704418182373
    6. '_to' → logprob: -5.439704418182373
    7. '0' → logprob: -5.939704418182373
    8. 'per' → logprob: -5.939704418182373
    9. '16' → logprob: -6.439704418182373
    10. '100' → logprob: -6.564704418182373

Token 663: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.3648042380809784
    2. '100' → logprob: -2.114804267883301
    3. '30' → logprob: -2.364804267883301
    4. 'P' → logprob: -3.989804267883301
    5. '15' → logprob: -4.114804267883301
    6. '10' → logprob: -4.239804267883301
    7. 'N' → logprob: -4.489804267883301
    8. ' ' → logprob: -4.989804267883301
    9. 'len' → logprob: -4.989804267883301
    10. '50' → logprob: -5.364804267883301

Token 664: '500' (ID: 3234)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.12576551735401154
    2. '10' → logprob: -3.000765562057495
    3. '100' → logprob: -3.750765562057495
    4. '15' → logprob: -3.875765562057495
    5. '50' → logprob: -4.500765323638916
    6. '30' → logprob: -5.250765323638916
    7. '16' → logprob: -5.625765323638916
    8. 'P' → logprob: -6.625765323638916
    9. '12' → logprob: -6.875765323638916
    10. '5' → logprob: -7.750765323638916

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38659319281578064
    2. ':' → logprob: -1.386593222618103
    3. '<|end|>' → logprob: -3.5115931034088135
    4. ',
' → logprob: -4.886593341827393
    5. ' ,' → logprob: -5.136593341827393
    6. ':
' → logprob: -5.386593341827393
    7. '):' → logprob: -5.511593341827393
    8. ')' → logprob: -5.636593341827393
    9. '
' → logprob: -5.886593341827393
    10. '<|end|>' → logprob: -5.886593341827393

Token 666: ' tracking' (ID: 20254)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2152955532073975
    2. '#' → logprob: -2.0902955532073975
    3. ' #' → logprob: -2.5902955532073975
    4. ' import' → logprob: -2.5902955532073975
    5. '   ' → logprob: -2.7152955532073975
    6. ' continue' → logprob: -2.7152955532073975
    7. ' from' → logprob: -3.0902955532073975
    8. ' dp' → logprob: -3.0902955532073975
    9. 'dp' → logprob: -3.3402955532073975
    10. '
' → logprob: -3.4652955532073975

Token 667: ' subset' (ID: 58845)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.37558722496032715
    2. ' only' → logprob: -2.375587224960327
    3. 'only' → logprob: -3.250587224960327
    4. 'bit' → logprob: -3.500587224960327
    5. 'f' → logprob: -4.125587463378906
    6. ' subsets' → logprob: -4.125587463378906
    7. 'which' → logprob: -4.250587463378906
    8. ' a' → logprob: -4.375587463378906
    9. ' which' → logprob: -4.500587463378906
    10. ' just' → logprob: -4.750587463378906

Token 668: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 669: ' impossible' (ID: 19786)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3754575550556183
    2. 'im' → logprob: -2.125457525253296
    3. ' not' → logprob: -2.500457525253296
    4. ' impossible' → logprob: -2.500457525253296
    5. 'too' → logprob: -4.375457763671875
    6. 'in' → logprob: -4.375457763671875
    7. ' infe' → logprob: -6.125457763671875
    8. ' impr' → logprob: -7.000457763671875
    9. ' too' → logprob: -7.625457763671875
    10. 'un' → logprob: -7.750457763671875

Token 670: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2209192514419556
    2. '
' → logprob: -1.2209192514419556
    3. '   ' → logprob: -1.9709192514419556
    4. ')' → logprob: -2.595919132232666
    5. ',' → logprob: -2.970919132232666
    6. 'import' → logprob: -3.595919132232666
    7. '<|end|>' → logprob: -4.345919132232666
    8. ' for' → logprob: -4.595919132232666
    9. ',
' → logprob: -4.595919132232666
    10. ' from' → logprob: -4.720919132232666

Token 671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24217760562896729
    2. '
' → logprob: -2.2421774864196777
    3. '#' → logprob: -3.3671774864196777
    4. ',' → logprob: -3.8671774864196777
    5. ')' → logprob: -4.742177486419678
    6. '    
' → logprob: -5.242177486419678
    7. 'from' → logprob: -5.367177486419678
    8. 'i' → logprob: -5.492177486419678
    9. ' for' → logprob: -5.492177486419678
    10. ' from' → logprob: -5.617177486419678

Token 672: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.603959858417511
    2. 'dp' → logprob: -1.1039597988128662
    3. 'import' → logprob: -2.978959798812866
    4. 'from' → logprob: -3.228959798812866
    5. 'prev' → logprob: -3.853959798812866
    6. '   ' → logprob: -5.978960037231445
    7. 'last' → logprob: -6.228960037231445
    8. 'n' → logprob: -6.853960037231445
    9. 'max' → logprob: -7.353960037231445
    10. 'def' → logprob: -7.728960037231445

Token 673: ' Better' (ID: 30901)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28459057211875916
    2. 'import' → logprob: -1.7845906019210815
    3. 'from' → logprob: -2.909590482711792
    4. 'prev' → logprob: -4.034590721130371
    5. 'last' → logprob: -5.784590721130371
    6. 'dp' → logprob: -6.034590721130371
    7. '
' → logprob: -6.909590721130371
    8. 'n' → logprob: -8.534590721130371
    9. '   ' → logprob: -9.159590721130371
    10. 'p' → logprob: -9.409590721130371

Token 674: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.6907697319984436
    2. ' to' → logprob: -1.5657696723937988
    3. 'to' → logprob: -1.9407696723937988
    4. 'appro' → logprob: -2.190769672393799
    5. ':' → logprob: -3.565769672393799
    6. 'idea' → logprob: -6.315769672393799
    7. ' idea' → logprob: -6.815769672393799
    8. ',' → logprob: -7.315769672393799
    9. ':
' → logprob: -7.690769672393799
    10. ' is' → logprob: -7.815769672393799

Token 675: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7568601369857788
    2. '#' → logprob: -1.1318601369857788
    3. ' is' → logprob: -2.5068602561950684
    4. ':
' → logprob: -3.1318602561950684
    5. '   ' → logprob: -3.3818602561950684
    6. '
' → logprob: -3.6318602561950684
    7. 'is' → logprob: -5.006860256195068
    8. ' would' → logprob: -5.756860256195068
    9. 'from' → logprob: -5.756860256195068
    10. 'import' → logprob: -6.006860256195068

Token 676: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14221395552158356
    2. '   ' → logprob: -2.642214059829712
    3. ' #' → logprob: -3.642214059829712
    4. 'import' → logprob: -4.392213821411133
    5. 'from' → logprob: -4.642213821411133
    6. '
' → logprob: -5.392213821411133
    7. ' from' → logprob: -6.017213821411133
    8. 'last' → logprob: -6.392213821411133
    9. ' prev' → logprob: -6.892213821411133
    10. 'prev' → logprob: -6.892213821411133

Token 677: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.41545161604881287
    2. 'last' → logprob: -2.1654515266418457
    3. ' last' → logprob: -3.0404515266418457
    4. 'from' → logprob: -3.0404515266418457
    5. 'import' → logprob: -3.1654515266418457
    6. 'dp' → logprob: -3.1654515266418457
    7. ' #' → logprob: -4.290451526641846
    8. 'prev' → logprob: -4.665451526641846
    9. ' from' → logprob: -4.915451526641846
    10. ' dp' → logprob: -5.665451526641846

Token 678: ' Since' (ID: 12265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07857532799243927
    2. 'from' → logprob: -3.328575372695923
    3. 'prev' → logprob: -4.078575134277344
    4. 'import' → logprob: -4.453575134277344
    5. 'last' → logprob: -5.328575134277344
    6. 'We' → logprob: -6.203575134277344
    7. 'dp' → logprob: -6.328575134277344
    8. ' #' → logprob: -7.703575134277344
    9. 'Let's' → logprob: -8.203575134277344
    10. ' from' → logprob: -8.328575134277344

Token 679: ' fav' (ID: 11726)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3271890878677368
    2. ' all' → logprob: -1.3271890878677368
    3. 'fav' → logprob: -1.5771890878677368
    4. 'f' → logprob: -1.7021890878677368
    5. 'the' → logprob: -4.077188968658447
    6. ' we' → logprob: -4.202188968658447
    7. ' the' → logprob: -4.202188968658447
    8. 'we' → logprob: -4.202188968658447
    9. ' fav' → logprob: -4.827188968658447
    10. 'favorites' → logprob: -5.952188968658447

Token 680: ' programs' (ID: 8094)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004668049514293671
    2. '_set' → logprob: -6.379668235778809
    3. 'program' → logprob: -7.629668235778809
    4. '_inter' → logprob: -7.629668235778809
    5. '_program' → logprob: -7.629668235778809
    6. ' programs' → logprob: -8.129668235778809
    7. 'or' → logprob: -8.129668235778809
    8. '#' → logprob: -8.629668235778809
    9. 'ored' → logprob: -9.004668235778809
    10. 'interval' → logprob: -9.629668235778809

Token 681: ' do' (ID: 621)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.02700936794281
    2. 'must' → logprob: -1.52700936794281
    3. ' are' → logprob: -1.65200936794281
    4. 'all' → logprob: -2.5270094871520996
    5. ' must' → logprob: -3.0270094871520996
    6. 'appear' → logprob: -3.6520094871520996
    7. ' all' → logprob: -4.0270094871521
    8. '#' → logprob: -4.2770094871521
    9. 'have' → logprob: -4.5270094871521
    10. 'come' → logprob: -4.6520094871521

Token 682: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09468616545200348
    2. ' not' → logprob: -2.469686269760132
    3. 'n't' → logprob: -5.219686031341553
    4. 'all' → logprob: -9.469686508178711
    5. '   ' → logprob: -9.594686508178711
    6. 'over' → logprob: -9.594686508178711
    7. ' overlap' → logprob: -9.969686508178711
    8. 'appear' → logprob: -11.594686508178711
    9. ' all' → logprob: -11.719686508178711
    10. 'include' → logprob: -11.719686508178711

Token 683: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.1011754721403122
    2. ' overlap' → logprob: -2.351175546646118
    3. 'conf' → logprob: -8.226175308227539
    4. '
' → logprob: -8.476175308227539
    5. 'inter' → logprob: -8.726175308227539
    6. 'have' → logprob: -9.851175308227539
    7. ' over' → logprob: -10.226175308227539
    8. 'appear' → logprob: -10.351175308227539
    9. '_overlap' → logprob: -10.351175308227539
    10. ' conflict' → logprob: -10.788675308227539

Token 684: ' each' (ID: 2454)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057204265147447586
    2. ' and' → logprob: -3.557204246520996
    3. ',
' → logprob: -4.182204246520996
    4. 'and' → logprob: -4.807204246520996
    5. ':' → logprob: -6.307204246520996
    6. ':
' → logprob: -7.307204246520996
    7. '   ' → logprob: -8.307204246520996
    8. '.' → logprob: -8.932204246520996
    9. 's' → logprob: -9.307204246520996
    10. ' (' → logprob: -9.432204246520996

Token 685: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.000495605927426368
    2. ' other' → logprob: -7.750495433807373
    3. 'others' → logprob: -10.250495910644531
    4. '   ' → logprob: -11.500495910644531
    5. 'one' → logprob: -13.000495910644531
    6. 'already' → logprob: -13.125495910644531
    7. '#' → logprob: -13.250495910644531
    8. '-other' → logprob: -13.625495910644531
    9. 'all' → logprob: -14.000495910644531
    10. 'another' → logprob: -14.125495910644531

Token 686: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1475474238395691
    2. ' and' → logprob: -3.022547483444214
    3. 'and' → logprob: -3.272547483444214
    4. ',
' → logprob: -3.772547483444214
    5. '   ' → logprob: -4.147547245025635
    6. ':' → logprob: -5.022547245025635
    7. '#' → logprob: -6.022547245025635
    8. ':
' → logprob: -6.647547245025635
    9. ' or' → logprob: -7.897547245025635
    10. '.' → logprob: -8.397547721862793

Token 687: 'already' (ID: 89136)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.14764028787612915
    2. ')' → logprob: -2.1476402282714844
    3. ')
' → logprob: -4.522640228271484
    4. 'and' → logprob: -5.522640228271484
    5. ' and' → logprob: -6.022640228271484
    6. '),
' → logprob: -6.647640228271484
    7. '#' → logprob: -7.272640228271484
    8. ',' → logprob: -7.647640228271484
    9. '):
' → logprob: -8.522640228271484
    10. ' ),' → logprob: -8.897640228271484

Token 688: ' checked' (ID: 15579)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.27306419610977173
    2. 'included' → logprob: -2.398064136505127
    3. 'proved' → logprob: -4.023064136505127
    4. ' checked' → logprob: -4.148064136505127
    5. 'confirmed' → logprob: -4.148064136505127
    6. 'validated' → logprob: -4.273064136505127
    7. 'verified' → logprob: -4.273064136505127
    8. 'ens' → logprob: -4.398064136505127
    9. '),' → logprob: -4.898064136505127
    10. 'handled' → logprob: -5.148064136505127

Token 689: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11220062524080276
    2. '),
' → logprob: -2.7372007369995117
    3. ')' → logprob: -4.112200736999512
    4. ')
' → logprob: -4.112200736999512
    5. 'and' → logprob: -5.362200736999512
    6. ' and' → logprob: -6.487200736999512
    7. '):
' → logprob: -7.237200736999512
    8. ',' → logprob: -7.487200736999512
    9. '#' → logprob: -7.737200736999512
    10. '   ' → logprob: -7.862200736999512

Token 690: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10358044505119324
    2. '   ' → logprob: -2.3535804748535156
    3. ' #' → logprob: -5.728580474853516
    4. ' we' → logprob: -10.853580474853516
    5. 'and' → logprob: -10.853580474853516
    6. '```' → logprob: -11.103580474853516
    7. ' and' → logprob: -11.478580474853516
    8. '       ' → logprob: -11.603580474853516
    9. ' ' → logprob: -11.728580474853516
    10. 'we' → logprob: -11.853580474853516

Token 691: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0891605094075203
    2. '   ' → logprob: -2.464160442352295
    3. ' #' → logprob: -8.839160919189453
    4. 'continue' → logprob: -10.964160919189453
    5. '
' → logprob: -11.214160919189453
    6. 'we' → logprob: -11.464160919189453
    7. '    
' → logprob: -12.464160919189453
    8. ' we' → logprob: -12.714160919189453
    9. ' ' → logprob: -12.714160919189453
    10. 'import' → logprob: -12.964160919189453

Token 692: ' merge' (ID: 20345)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07176539301872253
    2. 'we' → logprob: -3.196765422821045
    3. 'fav' → logprob: -4.196765422821045
    4. ' #' → logprob: -5.321765422821045
    5. ' we' → logprob: -5.696765422821045
    6. '   ' → logprob: -5.946765422821045
    7. 'f' → logprob: -8.071764945983887
    8. 'split' → logprob: -8.446764945983887
    9. 'We' → logprob: -8.821764945983887
    10. 'partition' → logprob: -9.071764945983887

Token 693: ' them' (ID: 1373)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2303361892700195
    2. ' intervals' → logprob: -1.3553361892700195
    3. 'fav' → logprob: -1.8553361892700195
    4. 'the' → logprob: -2.4803361892700195
    5. ' all' → logprob: -2.7303361892700195
    6. ' them' → logprob: -3.2303361892700195
    7. 'interval' → logprob: -3.9803361892700195
    8. 'them' → logprob: -4.3553361892700195
    9. ' adjacent' → logprob: -4.4803361892700195
    10. ' fav' → logprob: -4.6053361892700195

Token 694: ' into' (ID: 1511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.961653470993042
    2. ' into' → logprob: -1.711653470993042
    3. ',' → logprob: -2.211653470993042
    4. ' intervals' → logprob: -2.211653470993042
    5. '#' → logprob: -2.961653470993042
    6. ' and' → logprob: -3.086653470993042
    7. 'interval' → logprob: -4.586653709411621
    8. 'and' → logprob: -4.711653709411621
    9. ' to' → logprob: -5.086653709411621
    10. '
' → logprob: -5.086653709411621

Token 695: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13383524119853973
    2. 'one' → logprob: -2.6338353157043457
    3. 'interval' → logprob: -3.3838353157043457
    4. ' intervals' → logprob: -4.883835315704346
    5. ' a' → logprob: -5.633835315704346
    6. 'an' → logprob: -6.133835315704346
    7. ' one' → logprob: -6.133835315704346
    8. 'segments' → logprob: -6.508835315704346
    9. 'the' → logprob: -7.633835315704346
    10. '[(' → logprob: -7.758835315704346

Token 696: ' single' (ID: 4590)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3809622526168823
    2. 'block' → logprob: -3.005962371826172
    3. ' intervals' → logprob: -3.130962371826172
    4. ' block' → logprob: -3.505962371826172
    5. ' interval' → logprob: -3.505962371826172
    6. 'def' → logprob: -4.130962371826172
    7. 'day' → logprob: -4.130962371826172
    8. 'fav' → logprob: -4.255962371826172
    9. '#' → logprob: -4.505962371826172
    10. '
' → logprob: -4.880962371826172

Token 697: ' set' (ID: 920)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.055764783173799515
    2. ' interval' → logprob: -3.680764675140381
    3. 'block' → logprob: -4.180764675140381
    4. ' block' → logprob: -4.930764675140381
    5. 'continuous' → logprob: -6.305764675140381
    6. ' continuous' → logprob: -7.430764675140381
    7. 'merged' → logprob: -7.680764675140381
    8. '
' → logprob: -7.805764675140381
    9. 'segment' → logprob: -7.930764675140381
    10. 'time' → logprob: -8.180765151977539

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9148915410041809
    2. '   ' → logprob: -1.4148914813995361
    3. ' and' → logprob: -2.414891481399536
    4. '
' → logprob: -2.914891481399536
    5. ',
' → logprob: -3.039891481399536
    6. '.' → logprob: -3.039891481399536
    7. ':' → logprob: -3.164891481399536
    8. '#' → logprob: -4.539891719818115
    9. ')' → logprob: -4.664891719818115
    10. ' intervals' → logprob: -5.039891719818115

Token 699: ' intervals' (ID: 49900)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8461309671401978
    2. '#' → logprob: -1.3461309671401978
    3. 'and' → logprob: -1.3461309671401978
    4. ' and' → logprob: -3.596130847930908
    5. 'which' → logprob: -5.471130847930908
    6. 'then' → logprob: -6.096130847930908
    7. 'def' → logprob: -6.096130847930908
    8. 'so' → logprob: -6.846130847930908
    9. 'with' → logprob: -6.971130847930908
    10. 'cover' → logprob: -7.096130847930908

Token 700: ' fixed' (ID: 13213)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.095632553100586
    2. '#' → logprob: -1.595632553100586
    3. 's' → logprob: -1.845632553100586
    4. '=[]' → logprob: -3.095632553100586
    5. '   ' → logprob: -3.345632553100586
    6. ')' → logprob: -3.345632553100586
    7. '.' → logprob: -4.095632553100586
    8. '...' → logprob: -4.095632553100586
    9. 'from' → logprob: -4.095632553100586
    10. ':' → logprob: -4.220632553100586

Token 701: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1861188411712646
    2. '.' → logprob: -1.9361188411712646
    3. ' and' → logprob: -2.1861188411712646
    4. ',
' → logprob: -2.1861188411712646
    5. '   ' → logprob: -2.6861188411712646
    6. '.
' → logprob: -3.5611188411712646
    7. 'and' → logprob: -3.6861188411712646
    8. '#' → logprob: -4.061119079589844
    9. ' to' → logprob: -4.061119079589844
    10. ':
' → logprob: -4.061119079589844

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18277841806411743
    2. ',' → logprob: -2.6827783584594727
    3. '
' → logprob: -2.9327783584594727
    4. ',
' → logprob: -4.557778358459473
    5. '#' → logprob: -4.682778358459473
    6. ' and' → logprob: -5.057778358459473
    7. '.' → logprob: -5.682778358459473
    8. 'and' → logprob: -5.682778358459473
    9. ':' → logprob: -6.057778358459473
    10. '.
' → logprob: -6.807778358459473

Token 703: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.45262080430984497
    2. '   ' → logprob: -1.2026207447052002
    3. 'c' → logprob: -3.3276207447052
    4. '
' → logprob: -4.577620983123779
    5. 'from' → logprob: -5.952620983123779
    6. 'last' → logprob: -6.077620983123779
    7. 'and' → logprob: -6.077620983123779
    8. ',' → logprob: -6.202620983123779
    9. 'interval' → logprob: -6.327620983123779
    10. ' and' → logprob: -6.577620983123779

Token 704: ' Let's' (ID: 41021)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.061743348836898804
    2. '#' → logprob: -3.0617432594299316
    3. 'interval' → logprob: -5.811743259429932
    4. '
' → logprob: -5.936743259429932
    5. '   ' → logprob: -6.561743259429932
    6. 'last' → logprob: -6.686743259429932
    7. 'fav' → logprob: -6.811743259429932
    8. 'times' → logprob: -7.311743259429932
    9. 'from' → logprob: -7.311743259429932
    10. 'import' → logprob: -7.936743259429932

Token 705: ' do' (ID: 621)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.0930253267288208
    2. 'split' → logprob: -3.9680252075195312
    3. 'collect' → logprob: -4.093025207519531
    4. 'sort' → logprob: -4.968025207519531
    5. 'process' → logprob: -5.093025207519531
    6. 'group' → logprob: -5.218025207519531
    7. ' merge' → logprob: -5.468025207519531
    8. 'combine' → logprob: -5.468025207519531
    9. 'extract' → logprob: -5.843025207519531
    10. 'define' → logprob: -5.843025207519531

Token 706: ' interval' (ID: 17116)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2390611171722412
    2. 'fav' → logprob: -1.6140611171722412
    3. '#' → logprob: -1.9890611171722412
    4. 'merged' → logprob: -2.614061117172241
    5. ' dp' → logprob: -2.739061117172241
    6. 'a' → logprob: -3.364061117172241
    7. ' a' → logprob: -3.489061117172241
    8. 'interval' → logprob: -3.864061117172241
    9. ' merged' → logprob: -3.989061117172241
    10. 'from' → logprob: -4.23906135559082

Token 707: ' scheduling' (ID: 51708)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01255286019295454
    2. 'import' → logprob: -6.012552738189697
    3. '
' → logprob: -6.637552738189697
    4. '_points' → logprob: -6.637552738189697
    5. '_end' → logprob: -7.137552738189697
    6. 'from' → logprob: -7.137552738189697
    7. 'merge' → logprob: -7.262552738189697
    8. ' scheduling' → logprob: -7.637552738189697
    9. 'tree' → logprob: -7.887552738189697
    10. '_candidates' → logprob: -8.012553215026855

Token 708: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4391220211982727
    2. 'dp' → logprob: -1.564121961593628
    3. 'from' → logprob: -3.689121961593628
    4. 'i' → logprob: -4.064122200012207
    5. 'selected' → logprob: -4.314122200012207
    6. 'last' → logprob: -4.314122200012207
    7. '#' → logprob: -4.439122200012207
    8. '
' → logprob: -4.564122200012207
    9. ',' → logprob: -4.689122200012207
    10. 'import' → logprob: -4.814122200012207

Token 709: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5410597920417786
    2. 'the' → logprob: -1.9160597324371338
    3. ' candidates' → logprob: -2.166059732437134
    4. ' the' → logprob: -2.791059732437134
    5. ' all' → logprob: -3.916059732437134
    6. 'all' → logprob: -3.916059732437134
    7. 'non' → logprob: -4.041059970855713
    8. ' intervals' → logprob: -4.166059970855713
    9. ' non' → logprob: -4.291059970855713
    10. 'a' → logprob: -6.791059970855713

Token 710: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5049731731414795
    2. ',' → logprob: -2.3799731731414795
    3. 'from' → logprob: -2.7549731731414795
    4. 'dp' → logprob: -2.7549731731414795
    5. 'import' → logprob: -3.3799731731414795
    6. '.' → logprob: -3.7549731731414795
    7. '#' → logprob: -3.7549731731414795
    8. 'i' → logprob: -4.379973411560059
    9. 'with' → logprob: -4.504973411560059
    10. '
' → logprob: -4.504973411560059

Token 711: ' fav' (ID: 11726)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6991154551506042
    2. ' all' → logprob: -1.324115514755249
    3. 'the' → logprob: -2.449115514755249
    4. 'fav' → logprob: -2.449115514755249
    5. ' the' → logprob: -3.324115514755249
    6. 'f' → logprob: -3.699115514755249
    7. 'only' → logprob: -7.07411527633667
    8. ' fav' → logprob: -7.32411527633667
    9. 'favorites' → logprob: -7.94911527633667
    10. ' only' → logprob: -8.074115753173828

Token 712: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1305377036333084
    2. 's' → logprob: -2.755537748336792
    3. '
' → logprob: -4.880537509918213
    4. '_inter' → logprob: -5.005537509918213
    5. '#' → logprob: -5.130537509918213
    6. 'interval' → logprob: -5.505537509918213
    7. 'import' → logprob: -6.005537509918213
    8. ' =' → logprob: -6.005537509918213
    9. '_set' → logprob: -6.005537509918213
    10. 'from' → logprob: -6.130537509918213

Token 713: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4868832230567932
    2. 'dp' → logprob: -1.4868831634521484
    3. 'last' → logprob: -3.2368831634521484
    4. 'import' → logprob: -3.6118831634521484
    5. '
' → logprob: -3.6118831634521484
    6. '#' → logprob: -4.236883163452148
    7. 'selected' → logprob: -4.486883163452148
    8. 'from' → logprob: -4.611883163452148
    9. ',' → logprob: -4.861883163452148
    10. 'prev' → logprob: -5.486883163452148

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05872293934226036
    2. 'dp' → logprob: -4.058722972869873
    3. '
' → logprob: -4.558722972869873
    4. 'from' → logprob: -5.058722972869873
    5. 'last' → logprob: -5.183722972869873
    6. '#' → logprob: -5.183722972869873
    7. 'prev' → logprob: -6.308722972869873
    8. 'import' → logprob: -6.558722972869873
    9. 'i' → logprob: -6.683722972869873
    10. 'n' → logprob: -6.933722972869873

Token 715: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8326716423034668
    2. 'dp' → logprob: -1.4576716423034668
    3. '   ' → logprob: -2.082671642303467
    4. 'last' → logprob: -2.832671642303467
    5. '#' (adapté à ' #') → logprob: -2.957671642303467
    6. 'from' → logprob: -3.332671642303467
    7. 'selected' → logprob: -4.582671642303467
    8. ' import' → logprob: -4.707671642303467
    9. 'prev' → logprob: -4.832671642303467
    10. ' dp' → logprob: -5.207671642303467

Token 716: ' First' (ID: 8338)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1436233520507812
    2. 'import' → logprob: -1.5186233520507812
    3. 'dp' → logprob: -1.5186233520507812
    4. 'last' → logprob: -1.7686233520507812
    5. 'from' → logprob: -3.7686233520507812
    6. 'prev' → logprob: -4.143623352050781
    7. 'selected' → logprob: -4.268623352050781
    8. 'fav' → logprob: -4.893623352050781
    9. 'next' → logprob: -6.143623352050781
    10. '   ' → logprob: -6.268623352050781

Token 717: ' remove' (ID: 6234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6977294087409973
    2. 'fav' → logprob: -0.9477294087409973
    3. '#' → logprob: -3.5727293491363525
    4. 'prev' → logprob: -4.197729587554932
    5. 'find' → logprob: -4.572729587554932
    6. 'merge' → logprob: -4.822729587554932
    7. 'import' → logprob: -5.072729587554932
    8. 'interval' → logprob: -5.072729587554932
    9. ' find' → logprob: -5.197729587554932
    10. 'def' → logprob: -5.947729587554932

Token 718: ' non' (ID: 2893)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5515912771224976
    2. 'all' → logprob: -1.3015912771224976
    3. 'c' → logprob: -3.051591396331787
    4. 'from' → logprob: -3.551591396331787
    5. ' candidates' → logprob: -4.176591396331787
    6. ' from' → logprob: -4.301591396331787
    7. 'fav' → logprob: -4.426591396331787
    8. '   ' → logprob: -4.801591396331787
    9. ' non' → logprob: -5.301591396331787
    10. ' the' → logprob: -5.426591396331787

Token 719: '-f' (ID: 3002)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.07266160100698471
    2. 'f' → logprob: -3.4476616382598877
    3. '-f' → logprob: -3.9476616382598877
    4. 'over' → logprob: -5.197661399841309
    5. 'c' → logprob: -5.447661399841309
    6. '   ' → logprob: -5.947661399841309
    7. 'conf' → logprob: -6.197661399841309
    8. 'compatible' → logprob: -7.197661399841309
    9. ' fav' → logprob: -7.572661399841309
    10. 'favorite' → logprob: -7.572661399841309

Token 720: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.05211297422647476
    2. 'avs' → logprob: -3.1771130561828613
    3. 'or' → logprob: -5.552113056182861
    4. 'avorites' → logprob: -6.677113056182861
    5. 'avored' → logprob: -6.802113056182861
    6. 'inal' → logprob: -7.677113056182861
    7. 'avorite' → logprob: -7.677113056182861
    8. 'ull' → logprob: -8.427112579345703
    9. 'avor' → logprob: -8.427112579345703
    10. 'inished' → logprob: -8.677112579345703

Token 721: ' programs' (ID: 8094)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.6541365385055542
    2. 'c' → logprob: -1.1541365385055542
    3. 's' → logprob: -2.7791366577148438
    4. ' programs' → logprob: -3.4041366577148438
    5. ',' → logprob: -4.029136657714844
    6. 'program' → logprob: -4.029136657714844
    7. '```' → logprob: -5.154136657714844
    8. ' ones' → logprob: -5.279136657714844
    9. 'andidates' → logprob: -5.529136657714844
    10. '
' → logprob: -6.029136657714844

Token 722: ' conflicting' (ID: 103913)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6077107787132263
    2. '   ' → logprob: -1.107710838317871
    3. '=' → logprob: -2.857710838317871
    4. '[]' → logprob: -4.232710838317871
    5. 'c' → logprob: -4.357710838317871
    6. '=[]' → logprob: -5.107710838317871
    7. '_candidates' → logprob: -5.357710838317871
    8. ',' → logprob: -5.607710838317871
    9. 'from' → logprob: -5.607710838317871
    10. 'and' → logprob: -5.732710838317871

Token 723: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.18769320845603943
    2. ' with' → logprob: -1.8126932382583618
    3. '   ' → logprob: -5.812693119049072
    4. '_with' → logprob: -6.187693119049072
    5. ' candidates' → logprob: -7.437693119049072
    6. '<|end|>' → logprob: -7.687693119049072
    7. '=True' → logprob: -7.812693119049072
    8. ')' → logprob: -8.68769359588623
    9. 'ing' → logprob: -8.68769359588623
    10. ',' → logprob: -8.93769359588623

Token 724: ' fav' (ID: 11726)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5576380491256714
    2. 'fav' → logprob: -0.9326380491256714
    3. 'the' → logprob: -4.057638168334961
    4. '(' → logprob: -5.057638168334961
    5. 'f' → logprob: -5.682638168334961
    6. '(f' → logprob: -6.307638168334961
    7. ' any' → logprob: -6.557638168334961
    8. 'favorites' → logprob: -7.307638168334961
    9. '(any' → logprob: -7.807638168334961
    10. 'interval' → logprob: -8.182638168334961

Token 725: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8483284115791321
    2. '_inter' → logprob: -1.2233283519744873
    3. '_set' → logprob: -2.0983283519744873
    4. '   ' → logprob: -2.7233283519744873
    5. '_min' → logprob: -3.5983283519744873
    6. 'interval' → logprob: -4.723328590393066
    7. '_candidates' → logprob: -4.723328590393066
    8. '_program' → logprob: -5.348328590393066
    9. ' =' → logprob: -5.723328590393066
    10. ' intervals' → logprob: -5.848328590393066

Token 726: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00559859536588192
    2. ',' → logprob: -7.255598545074463
    3. 'filtered' → logprob: -7.380598545074463
    4. '    
' → logprob: -7.505598545074463
    5. ')' → logprob: -7.880598545074463
    6. '
' → logprob: -7.880598545074463
    7. 'and' → logprob: -8.005599021911621
    8. '.' → logprob: -8.005599021911621
    9. 'c' → logprob: -8.005599021911621
    10. ' candidates' → logprob: -8.130599021911621

Token 727: 'done' (ID: 21715)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5923356413841248
    2. ')
' → logprob: -0.9673356413841248
    3. '#' → logprob: -3.8423357009887695
    4. '   ' → logprob: -4.2173357009887695
    5. '),' → logprob: -5.3423357009887695
    6. ').' → logprob: -5.8423357009887695
    7. '...' → logprob: -6.0923357009887695
    8. ')

' → logprob: -6.2173357009887695
    9. ' and' → logprob: -6.8423357009887695
    10. 'from' → logprob: -7.0923357009887695

Token 728: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4237682521343231
    2. ')
' → logprob: -1.1737682819366455
    3. 'already' → logprob: -3.7987682819366455
    4. ' already' → logprob: -4.923768043518066
    5. '),' → logprob: -6.048768043518066
    6. 'with' → logprob: -6.923768043518066
    7. 'above' → logprob: -7.673768043518066
    8. ')
' → logprob: -7.798768043518066
    9. ').' → logprob: -7.798768043518066
    10. ' above' → logprob: -7.923768043518066

Token 729: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3523339331150055
    2. '#' → logprob: -1.227333903312683
    3. ' #' → logprob: -6.227334022521973
    4. 'and' → logprob: -7.352334022521973
    5. 'import' → logprob: -7.852334022521973
    6. ' and' → logprob: -8.102334022521973
    7. 'from' → logprob: -8.352334022521973
    8. '
' → logprob: -8.977334022521973
    9. ')' → logprob: -10.352334022521973
    10. 'def' → logprob: -10.602334022521973

Token 730: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1724509447813034
    2. '   ' → logprob: -1.9224509000778198
    3. 'and' → logprob: -5.547451019287109
    4. ' #' → logprob: -6.172451019287109
    5. 'last' → logprob: -6.797451019287109
    6. 'import' → logprob: -7.047451019287109
    7. '
' → logprob: -7.047451019287109
    8. 'dp' → logprob: -7.297451019287109
    9. ' and' → logprob: -7.422451019287109
    10. 'prev' → logprob: -7.547451019287109

Token 731: ' Then' (ID: 7801)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15213662385940552
    2. '   ' → logprob: -2.1521365642547607
    3. 'import' → logprob: -4.77713680267334
    4. 'from' → logprob: -5.02713680267334
    5. ' #' → logprob: -5.77713680267334
    6. '
' → logprob: -5.77713680267334
    7. 'def' → logprob: -7.02713680267334
    8. 'and' → logprob: -7.40213680267334
    9. 'prev' → logprob: -7.77713680267334
    10. 'dp' → logprob: -7.90213680267334

Token 732: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9410662651062012
    2. 'filter' → logprob: -2.441066265106201
    3. ' separate' → logprob: -2.566066265106201
    4. 'find' → logprob: -2.691066265106201
    5. 'select' → logprob: -2.941066265106201
    6. 'build' → logprob: -3.066066265106201
    7. '   ' → logprob: -3.066066265106201
    8. ' find' → logprob: -3.691066265106201
    9. ' select' → logprob: -3.816066265106201
    10. 'def' → logprob: -4.066066265106201

Token 733: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7767056822776794
    2. 'to' → logprob: -0.7767056822776794
    3. '   ' → logprob: -3.276705741882324
    4. ':
' → logprob: -4.026705741882324
    5. 'ing' → logprob: -4.401705741882324
    6. ':' → logprob: -5.151705741882324
    7. 'for' → logprob: -6.401705741882324
    8. 'select' → logprob: -7.151705741882324
    9. '
' → logprob: -7.526705741882324
    10. 'def' → logprob: -8.026705741882324

Token 734: ' select' (ID: 4736)
  Prédit: 'select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'select' → logprob: -0.4717758297920227
    2. 'merge' → logprob: -2.096775770187378
    3. 'find' → logprob: -2.721775770187378
    4. 'build' → logprob: -2.721775770187378
    5. 'include' → logprob: -3.221775770187378
    6. ' select' → logprob: -3.346775770187378
    7. 'add' → logprob: -4.221776008605957
    8. ' include' → logprob: -5.471776008605957
    9. ' find' → logprob: -5.721776008605957
    10. ' add' → logprob: -5.846776008605957

Token 735: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.2657870054244995
    2. 'c' → logprob: -1.6407870054244995
    3. ' all' → logprob: -2.765787124633789
    4. 'only' → logprob: -2.765787124633789
    5. ' programs' → logprob: -2.890787124633789
    6. '   ' → logprob: -3.015787124633789
    7. 'program' → logprob: -3.015787124633789
    8. 'from' → logprob: -3.265787124633789
    9. 'i' → logprob: -3.765787124633789
    10. '[i' → logprob: -3.890787124633789

Token 736: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.3595554530620575
    2. ' non' → logprob: -2.23455548286438
    3. 'non' → logprob: -2.73455548286438
    4. '   ' → logprob: -3.10955548286438
    5. 'f' → logprob: -3.85955548286438
    6. ' programs' → logprob: -4.359555244445801
    7. ' intervals' → logprob: -4.984555244445801
    8. ' fav' → logprob: -4.984555244445801
    9. ' candidates' → logprob: -5.109555244445801
    10. 'c' → logprob: -5.609555244445801

Token 737: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15021534264087677
    2. '   ' → logprob: -2.1502153873443604
    3. ' programs' → logprob: -4.650215148925781
    4. 'program' → logprob: -5.275215148925781
    5. ' candidates' → logprob: -6.275215148925781
    6. 'for' → logprob: -6.775215148925781
    7. '_program' → logprob: -6.775215148925781
    8. '=True' → logprob: -7.025215148925781
    9. '       ' → logprob: -7.775215148925781
    10. ' =' → logprob: -8.150215148925781

Token 738: ' plus' (ID: 2932)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23288282752037048
    2. '   ' → logprob: -2.2328827381134033
    3. '#' → logprob: -3.1078827381134033
    4. 'from' → logprob: -4.357882976531982
    5. ',' → logprob: -4.982882976531982
    6. 'import' → logprob: -5.232882976531982
    7. '    
' → logprob: -5.357882976531982
    8. ',
' → logprob: -5.607882976531982
    9. 'def' → logprob: -5.607882976531982
    10. '.
' → logprob: -5.857882976531982

Token 739: ' as' (ID: 472)
  Prédit: 'others'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'others' → logprob: -1.30287504196167
    2. 'other' → logprob: -1.55287504196167
    3. 'non' → logprob: -1.67787504196167
    4. 'any' → logprob: -2.17787504196167
    5. ' other' → logprob: -3.42787504196167
    6. 'some' → logprob: -3.55287504196167
    7. ' any' → logprob: -3.80287504196167
    8. ' as' → logprob: -4.05287504196167
    9. 'possible' → logprob: -4.17787504196167
    10. 'the' → logprob: -4.30287504196167

Token 740: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.016069091856479645
    2. ' many' → logprob: -4.141068935394287
    3. '
' → logprob: -11.641069412231445
    4. 'b' → logprob: -11.766069412231445
    5. '```' → logprob: -12.516069412231445
    6. '   ' → logprob: -12.766069412231445
    7. 'much' → logprob: -13.016069412231445
    8. '_many' → logprob: -13.516069412231445
    9. 'any' → logprob: -13.516069412231445
    10. '[' → logprob: -13.766069412231445

Token 741: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.22073180973529816
    2. ' as' → logprob: -2.595731735229492
    3. ' non' → logprob: -3.220731735229492
    4. 'as' → logprob: -3.470731735229492
    5. 'others' → logprob: -3.470731735229492
    6. 'other' → logprob: -4.595731735229492
    7. '
' → logprob: -5.470731735229492
    8. '```' → logprob: -6.345731735229492
    9. ' of' → logprob: -7.345731735229492
    10. ' other' → logprob: -7.345731735229492

Token 742: '-f' (ID: 3002)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3240207433700562
    2. '   ' → logprob: -1.5740207433700562
    3. 'fav' → logprob: -2.1990208625793457
    4. '(False' → logprob: -2.4490208625793457
    5. '_f' → logprob: -2.5740208625793457
    6. 'False' → logprob: -3.0740208625793457
    7. '-f' → logprob: -3.1990208625793457
    8. 'def' → logprob: -3.6990208625793457
    9. 'f' → logprob: -3.6990208625793457
    10. '(' → logprob: -3.8240208625793457

Token 743: 'avs' (ID: 113368)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.010725783184170723
    2. 'avs' → logprob: -4.760725975036621
    3. '
' → logprob: -6.760725975036621
    4. 'fav' → logprob: -8.760725975036621
    5. '   ' → logprob: -9.010725975036621
    6. '-' → logprob: -9.135725975036621
    7. 'ac' → logprob: -10.010725975036621
    8. '```' → logprob: -10.010725975036621
    9. 'v' → logprob: -10.385725975036621
    10. '       ' → logprob: -10.385725975036621

Token 744: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.7506773471832275
    2. ' as' → logprob: -0.7506773471832275
    3. ' programs' → logprob: -3.5006773471832275
    4. 'program' → logprob: -3.8756773471832275
    5. '```' → logprob: -6.750677108764648
    6. '   ' → logprob: -6.875677108764648
    7. '
' → logprob: -7.625677108764648
    8. ' ones' → logprob: -8.000677108764648
    9. '(' → logprob: -8.625677108764648
    10. '(program' → logprob: -8.875677108764648

Token 745: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.02773365192115307
    2. ' possible' → logprob: -3.777733564376831
    3. '```' → logprob: -6.02773380279541
    4. '   ' → logprob: -6.52773380279541
    5. ' ' → logprob: -8.77773380279541
    6. '(' → logprob: -9.15273380279541
    7. ' poss' → logprob: -9.27773380279541
    8. 'pos' → logprob: -10.15273380279541
    9. '    ' → logprob: -10.27773380279541
    10. '``' → logprob: -10.40273380279541

Token 746: ' avoiding' (ID: 49354)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5871266722679138
    2. '   ' → logprob: -1.3371267318725586
    3. '#' → logprob: -2.4621267318725586
    4. 'import' → logprob: -3.5871267318725586
    5. 'last' → logprob: -3.7121267318725586
    6. 'ends' → logprob: -4.337126731872559
    7. 'end' → logprob: -4.962126731872559
    8. 'selected' → logprob: -5.087126731872559
    9. 'def' → logprob: -5.212126731872559
    10. 'n' → logprob: -5.587126731872559

Token 747: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.17344285547733307
    2. ' overlap' → logprob: -2.798442840576172
    3. ' overlaps' → logprob: -2.923442840576172
    4. ' conflicts' → logprob: -3.423442840576172
    5. 'conf' → logprob: -4.548442840576172
    6. ' conflict' → logprob: -7.048442840576172
    7. ' overlapping' → logprob: -8.798442840576172
    8. '(over' → logprob: -8.923442840576172
    9. '
' → logprob: -10.423442840576172
    10. ' any' → logprob: -10.548442840576172

Token 748: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3394874036312103
    2. '   ' → logprob: -1.5894874334335327
    3. '#' → logprob: -3.464487314224243
    4. 'last' → logprob: -4.339487552642822
    5. 'selected' → logprob: -4.589487552642822
    6. 'import' → logprob: -4.964487552642822
    7. 'ends' → logprob: -5.089487552642822
    8. '
' → logprob: -5.214487552642822
    9. 'def' → logprob: -5.464487552642822
    10. 'end' → logprob: -6.089487552642822

Token 749: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1908257156610489
    2. '   ' → logprob: -1.8158257007598877
    3. '
' → logprob: -5.190825939178467
    4. 'selected' → logprob: -6.690825939178467
    5. ' dp' → logprob: -7.065825939178467
    6. 'import' → logprob: -7.440825939178467
    7. '    
' → logprob: -7.690825939178467
    8. 'from' → logprob: -7.690825939178467
    9. 'prev' → logprob: -7.815825939178467
    10. 'def' → logprob: -8.190825462341309

Token 750: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42314139008522034
    2. 'last' → logprob: -2.4231414794921875
    3. '   ' → logprob: -2.7981414794921875
    4. 'import' → logprob: -3.0481414794921875
    5. '#' (adapté à ' #') → logprob: -3.0481414794921875
    6. 'prev' → logprob: -3.1731414794921875
    7. 'from' → logprob: -3.4231414794921875
    8. '
' → logprob: -4.5481414794921875
    9. 'def' → logprob: -5.0481414794921875
    10. 'selected' → logprob: -5.9231414794921875

Token 751: ' Because' (ID: 13602)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0122354282066226
    2. '#' → logprob: -5.887235641479492
    3. 'n' → logprob: -6.012235641479492
    4. 'last' → logprob: -6.387235641479492
    5. 'selected' → logprob: -6.887235641479492
    6. 'import' → logprob: -7.012235641479492
    7. '   ' → logprob: -7.387235641479492
    8. 'max' → logprob: -7.387235641479492
    9. '
' → logprob: -7.512235641479492
    10. 'prev' → logprob: -7.637235641479492

Token 752: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.6944971084594727
    2. 'all' → logprob: -1.4444971084594727
    3. 'f' → logprob: -1.8194971084594727
    4. 'we' → logprob: -3.3194971084594727
    5. 'the' → logprob: -3.8194971084594727
    6. ' all' → logprob: -4.194497108459473
    7. '#' → logprob: -5.069497108459473
    8. '   ' → logprob: -5.319497108459473
    9. ' we' → logprob: -5.569497108459473
    10. ' fav' → logprob: -5.819497108459473

Token 753: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27603787183761597
    2. '   ' → logprob: -1.7760379314422607
    3. ' programs' → logprob: -3.2760379314422607
    4. '_set' → logprob: -4.026037693023682
    5. ' candidates' → logprob: -5.651037693023682
    6. '_program' → logprob: -6.026037693023682
    7. '_' → logprob: -6.401037693023682
    8. 'program' → logprob: -6.526037693023682
    9. ' intervals' → logprob: -6.526037693023682
    10. '#' → logprob: -6.651037693023682

Token 754: ' don't' (ID: 4128)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.6285184025764465
    2. '   ' → logprob: -2.2535183429718018
    3. ' are' → logprob: -2.2535183429718018
    4. 'interval' → logprob: -2.6285183429718018
    5. 'program' → logprob: -3.7535183429718018
    6. 'must' → logprob: -4.128518581390381
    7. 's' → logprob: -4.128518581390381
    8. 'cannot' → logprob: -4.128518581390381
    9. ' occupy' → logprob: -4.253518581390381
    10. ' intervals' → logprob: -4.503518581390381

Token 755: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.07941624522209167
    2. ' overlap' → logprob: -2.579416275024414
    3. '
' → logprob: -8.954416275024414
    4. ' over' → logprob: -9.829416275024414
    5. 'conf' → logprob: -9.829416275024414
    6. 'have' → logprob: -10.079416275024414
    7. 'allow' → logprob: -10.204416275024414
    8. '   ' → logprob: -10.579416275024414
    9. 'change' → logprob: -10.579416275024414
    10. '_overlap' → logprob: -10.704416275024414

Token 756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11151424795389175
    2. '   ' → logprob: -2.9865143299102783
    3. '#' → logprob: -4.111514091491699
    4. ',
' → logprob: -4.111514091491699
    5. 'and' → logprob: -5.111514091491699
    6. ' and' → logprob: -5.736514091491699
    7. ')' → logprob: -5.986514091491699
    8. '.' → logprob: -5.986514091491699
    9. 'def' → logprob: -6.111514091491699
    10. 'from' → logprob: -6.611514091491699

Token 757: ' schedule' (ID: 12262)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.775498628616333
    2. '#' → logprob: -1.150498628616333
    3. 'fav' → logprob: -2.525498628616333
    4. '   ' → logprob: -2.650498628616333
    5. 'they' → logprob: -3.775498628616333
    6. 'the' → logprob: -4.150498390197754
    7. ' we' → logprob: -4.775498390197754
    8. 'f' → logprob: -5.150498390197754
    9. 'last' → logprob: -5.400498390197754
    10. 'and' → logprob: -6.150498390197754

Token 758: ' them' (ID: 1373)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07759031653404236
    2. '=' → logprob: -3.577590227127075
    3. '=[]' → logprob: -3.702590227127075
    4. 'd' → logprob: -4.827590465545654
    5. ' is' → logprob: -5.577590465545654
    6. 's' → logprob: -6.202590465545654
    7. '=[]
' → logprob: -6.327590465545654
    8. ' the' → logprob: -6.827590465545654
    9. 'end' → logprob: -7.577590465545654
    10. 'the' → logprob: -7.702590465545654

Token 759: ' first' (ID: 1577)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9920072555541992
    2. '   ' → logprob: -1.9920072555541992
    3. 'end' → logprob: -2.242007255554199
    4. 'd' → logprob: -2.867007255554199
    5. '=' → logprob: -3.117007255554199
    6. 'last' → logprob: -3.242007255554199
    7. 's' → logprob: -3.242007255554199
    8. 'ed' → logprob: -3.617007255554199
    9. ',' → logprob: -3.992007255554199
    10. 'idx' → logprob: -4.117007255554199

Token 760: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7178380489349365
    2. 'dp' → logprob: -1.7178380489349365
    3. 'last' → logprob: -2.2178380489349365
    4. 'fav' → logprob: -2.8428380489349365
    5. 'selected' → logprob: -3.4678380489349365
    6. 'f' → logprob: -3.5928380489349365
    7. '
' → logprob: -3.8428380489349365
    8. 'i' → logprob: -3.9678380489349365
    9. '#' → logprob: -3.9678380489349365
    10. 'non' → logprob: -4.467838287353516

Token 761: ' then' (ID: 1815)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.1573898792266846
    2. '#' → logprob: -2.1573898792266846
    3. 'and' → logprob: -2.1573898792266846
    4. '   ' → logprob: -2.5323898792266846
    5. ' and' → logprob: -2.6573898792266846
    6. 'i' → logprob: -2.7823898792266846
    7. ' then' → logprob: -3.2823898792266846
    8. 'dp' → logprob: -3.4073898792266846
    9. 'prev' → logprob: -3.4073898792266846
    10. ' last' → logprob: -3.6573898792266846

Token 762: ' add' (ID: 1147)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.8244406580924988
    2. 'add' → logprob: -1.9494407176971436
    3. 'insert' → logprob: -1.9494407176971436
    4. 'try' → logprob: -2.0744407176971436
    5. 'select' → logprob: -3.0744407176971436
    6. 'schedule' → logprob: -3.8244407176971436
    7. 'merge' → logprob: -4.1994404792785645
    8. ' try' → logprob: -4.6994404792785645
    9. ' fill' → logprob: -4.6994404792785645
    10. 'for' → logprob: -4.6994404792785645

Token 763: ' non' (ID: 2893)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.7174196839332581
    2. '   ' → logprob: -1.4674196243286133
    3. 'non' → logprob: -2.3424196243286133
    4. 'i' → logprob: -2.9674196243286133
    5. ' last' → logprob: -2.9674196243286133
    6. 'prev' → logprob: -3.4674196243286133
    7. ' non' → logprob: -4.592419624328613
    8. '
' → logprob: -5.342419624328613
    9. ' prev' → logprob: -5.342419624328613
    10. '```' → logprob: -5.592419624328613

Token 764: '-f' (ID: 3002)
  Prédit: '-f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-f' → logprob: -0.007135174237191677
    2. '-' → logprob: -5.257135391235352
    3. 'f' → logprob: -6.882135391235352
    4. '_f' → logprob: -7.257135391235352
    5. 'fav' → logprob: -9.382135391235352
    6. '   ' → logprob: -9.757135391235352
    7. ' -' → logprob: -11.757135391235352
    8. '	f' → logprob: -12.507135391235352
    9. '-
' → logprob: -12.882135391235352
    10. '```' → logprob: -13.507135391235352

Token 765: 'avs' (ID: 113368)
  Prédit: 'avs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.6327405571937561
    2. 'av' → logprob: -0.7577405571937561
    3. 'ав' → logprob: -10.00774097442627
    4. 'fav' → logprob: -10.75774097442627
    5. ' fav' → logprob: -11.50774097442627
    6. '
' → logprob: -11.63274097442627
    7. '

' → logprob: -12.00774097442627
    8. '-' → logprob: -12.32024097442627
    9. 'a' → logprob: -12.57024097442627
    10. 'avorites' → logprob: -12.75774097442627

Token 766: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09003197401762009
    2. 'i' → logprob: -3.090031862258911
    3. '#' → logprob: -5.09003210067749
    4. 'from' → logprob: -5.21503210067749
    5. ',' → logprob: -5.34003210067749
    6. '```' → logprob: -5.34003210067749
    7. 's' → logprob: -5.46503210067749
    8. 'c' → logprob: -5.59003210067749
    9. ' i' → logprob: -6.59003210067749
    10. '
' → logprob: -6.59003210067749

Token 767: ' gaps' (ID: 52008)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.635466456413269
    2. 'the' → logprob: -1.510466456413269
    3. '#' → logprob: -2.8854665756225586
    4. 'fav' → logprob: -2.8854665756225586
    5. 'interval' → logprob: -3.3854665756225586
    6. 'order' → logprob: -4.635466575622559
    7. 'i' → logprob: -4.635466575622559
    8. 'non' → logprob: -4.885466575622559
    9. '   ' → logprob: -4.885466575622559
    10. 'f' → logprob: -5.010466575622559

Token 768: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3724549114704132
    2. '
' → logprob: -1.3724548816680908
    3. '#' → logprob: -3.372454881668091
    4. '    
' → logprob: -4.87245512008667
    5. 'fav' → logprob: -5.99745512008667
    6. '```' → logprob: -6.37245512008667
    7. 'last' → logprob: -6.49745512008667
    8. 'def' → logprob: -6.87245512008667
    9. 'g' → logprob: -6.87245512008667
    10. 'from' → logprob: -6.99745512008667

Token 769: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3342925012111664
    2. '#' → logprob: -1.7092925310134888
    3. 'from' → logprob: -3.209292411804199
    4. 'last' → logprob: -3.834292411804199
    5. 'import' → logprob: -4.459292411804199
    6. 'dp' → logprob: -4.459292411804199
    7. 'prev' → logprob: -4.959292411804199
    8. 'i' → logprob: -6.209292411804199
    9. '
' → logprob: -6.459292411804199
    10. 'end' → logprob: -6.584292411804199

Token 770: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5022777318954468
    2. 'g' → logprob: -2.2522778511047363
    3. '
' → logprob: -2.7522778511047363
    4. '   ' → logprob: -2.7522778511047363
    5. 'last' → logprob: -2.8772778511047363
    6. 'fav' → logprob: -4.002277851104736
    7. 'f' → logprob: -4.252277851104736
    8. 'prev' → logprob: -4.502277851104736
    9. 'current' → logprob: -4.627277851104736
    10. 'from' → logprob: -4.877277851104736

Token 771: ' We' (ID: 1416)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5376047492027283
    2. '#' → logprob: -1.912604808807373
    3. '   ' → logprob: -3.162604808807373
    4. 'fav' → logprob: -3.287604808807373
    5. 'f' → logprob: -3.537604808807373
    6. 'dp' → logprob: -3.787604808807373
    7. 'gap' → logprob: -3.787604808807373
    8. 'last' → logprob: -3.787604808807373
    9. '
' → logprob: -4.287604808807373
    10. 'interval' → logprob: -4.662604808807373

Token 772: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5650219321250916
    2. '#' → logprob: -1.6900219917297363
    3. 'can' → logprob: -1.9400219917297363
    4. 'def' → logprob: -3.8150219917297363
    5. ''ll' → logprob: -4.315021991729736
    6. ' #' → logprob: -4.565021991729736
    7. '   ' → logprob: -4.565021991729736
    8. 'have' → logprob: -4.815021991729736
    9. 'll' → logprob: -5.065021991729736
    10. 'need' → logprob: -5.190021991729736

Token 773: ' solve' (ID: 17722)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.9987732768058777
    2. 'use' → logprob: -1.8737733364105225
    3. 'process' → logprob: -1.8737733364105225
    4. 'implement' → logprob: -2.7487733364105225
    5. 'select' → logprob: -3.4987733364105225
    6. 'pro' → logprob: -3.6237733364105225
    7. 'simulate' → logprob: -3.7487733364105225
    8. 'do' → logprob: -3.8737733364105225
    9. 'sort' → logprob: -3.9987733364105225
    10. 'scan' → logprob: -4.123773097991943

Token 774: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.007009506225586
    2. ' by' → logprob: -1.132009506225586
    3. 'by' → logprob: -2.007009506225586
    4. 'def' → logprob: -3.007009506225586
    5. ' the' → logprob: -3.132009506225586
    6. ' it' → logprob: -4.007009506225586
    7. 'the' → logprob: -4.132009506225586
    8. ' this' → logprob: -4.257009506225586
    9. 'for' → logprob: -5.257009506225586
    10. '```' → logprob: -5.507009506225586

Token 775: ' follows' (ID: 18183)
  Prédit: ' follows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' follows' → logprob: -0.15481169521808624
    2. 'f' → logprob: -2.7798116207122803
    3. 'a' → logprob: -3.6548116207122803
    4. ' a' → logprob: -3.7798116207122803
    5. 'two' → logprob: -5.029811859130859
    6. 'interval' → logprob: -5.029811859130859
    7. ' intervals' → logprob: -5.154811859130859
    8. ' two' → logprob: -5.529811859130859
    9. 'dp' → logprob: -5.779811859130859
    10. ' an' → logprob: -7.029811859130859

Token 776: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3679369390010834
    2. '
' → logprob: -1.2429369688034058
    3. ':' → logprob: -4.992937088012695
    4. '#' → logprob: -5.742937088012695
    5. '

' → logprob: -6.242937088012695
    6. '    
' → logprob: -6.367937088012695
    7. 'f' → logprob: -6.867937088012695
    8. '```' → logprob: -6.992937088012695
    9. 'interval' → logprob: -7.617937088012695
    10. 'fav' → logprob: -7.742937088012695

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0437198132276535
    2. '
' → logprob: -3.41871976852417
    3. '    
' → logprob: -5.66871976852417
    4. 'dp' → logprob: -6.16871976852417
    5. 'last' → logprob: -7.16871976852417
    6. '#' → logprob: -7.29371976852417
    7. 'g' → logprob: -7.66871976852417
    8. 'segments' → logprob: -7.79371976852417
    9. 'interval' → logprob: -7.91871976852417
    10. '```' → logprob: -8.543720245361328

Token 778: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9039145708084106
    2. '#' (adapté à ' #') → logprob: -1.4039145708084106
    3. 'c' → logprob: -2.653914451599121
    4. 'g' → logprob: -2.778914451599121
    5. 'f' → logprob: -3.028914451599121
    6. '   ' → logprob: -3.278914451599121
    7. 'fav' → logprob: -3.403914451599121
    8. 'last' → logprob: -3.903914451599121
    9. 'interval' → logprob: -4.278914451599121
    10. 'selected' → logprob: -5.028914451599121

Token 779: ' Collect' (ID: 30483)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.9766719937324524
    2. 'g' → logprob: -1.6016719341278076
    3. '#' → logprob: -2.2266719341278076
    4. 'merged' → logprob: -2.7266719341278076
    5. 'f' → logprob: -2.8516719341278076
    6. 'dp' → logprob: -3.1016719341278076
    7. 'interval' → logprob: -3.1016719341278076
    8. 'segments' → logprob: -3.7266719341278076
    9. 'slots' → logprob: -4.601672172546387
    10. 'schedule' → logprob: -5.101672172546387

Token 780: ' all' (ID: 722)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -1.4500513076782227
    2. 'fav' → logprob: -1.5750513076782227
    3. 'interval' → logprob: -1.8250513076782227
    4. 'g' → logprob: -1.8250513076782227
    5. 'all' → logprob: -2.8250513076782227
    6. 'segments' → logprob: -3.3250513076782227
    7. 'prev' → logprob: -3.7000513076782227
    8. 'last' → logprob: -3.8250513076782227
    9. '#' → logprob: -4.325051307678223
    10. 'merged' → logprob: -4.700051307678223

Token 781: ' fav' (ID: 11726)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.450753390789032
    2. ' intervals' → logprob: -1.5757534503936768
    3. 'fav' → logprob: -2.9507534503936768
    4. 'points' → logprob: -3.3257534503936768
    5. 'segments' → logprob: -4.200753211975098
    6. 'times' → logprob: -4.200753211975098
    7. 'time' → logprob: -5.450753211975098
    8. ' points' → logprob: -5.575753211975098
    9. 'events' → logprob: -5.575753211975098
    10. 'f' → logprob: -5.700753211975098

Token 782: ' intervals' (ID: 49900)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.2956228256225586
    2. 's' → logprob: -1.4206228256225586
    3. '_times' → logprob: -5.920622825622559
    4. 'ored' → logprob: -6.420622825622559
    5. 'or' → logprob: -6.420622825622559
    6. 'interval' → logprob: -6.545622825622559
    7. '_program' → logprob: -6.795622825622559
    8. 'ors' → logprob: -7.170622825622559
    9. '   ' → logprob: -7.295622825622559
    10. ' intervals' → logprob: -7.670622825622559

Token 783: ' in' (ID: 306)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.17111772298812866
    2. 'interval' → logprob: -2.7961177825927734
    3. '   ' → logprob: -3.0461177825927734
    4. 'f' → logprob: -4.046117782592773
    5. '
' → logprob: -4.546117782592773
    6. ' =' → logprob: -5.046117782592773
    7. ' intervals' → logprob: -5.546117782592773
    8. '_inter' → logprob: -6.171117782592773
    9. ',' → logprob: -6.921117782592773
    10. '_f' → logprob: -7.546117782592773

Token 784: ' sorted' (ID: 20099)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.3992876410484314
    2. 'a' → logprob: -1.7742877006530762
    3. 'sorted' → logprob: -2.024287700653076
    4. '[(' → logprob: -3.899287700653076
    5. '[' → logprob: -6.399287700653076
    6. '[a' → logprob: -6.899287700653076
    7. 'one' → logprob: -7.274287700653076
    8. 'interval' → logprob: -7.274287700653076
    9. 'order' → logprob: -7.399287700653076
    10. 'favor' → logprob: -7.649287700653076

Token 785: ' order' (ID: 2569)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.016616523265838623
    2. 'f' → logprob: -4.391616344451904
    3. 'interval' → logprob: -6.141616344451904
    4. ' intervals' → logprob: -7.141616344451904
    5. 'list' → logprob: -8.266616821289062
    6. ' =' → logprob: -8.641616821289062
    7. ' fav' → logprob: -8.641616821289062
    8. '```' → logprob: -9.391616821289062
    9. 'favorites' → logprob: -9.891616821289062
    10. '_f' → logprob: -10.016616821289062

Token 786: ' by' (ID: 656)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.6733214259147644
    2. 'f' → logprob: -0.7983214259147644
    3. '   ' → logprob: -3.548321485519409
    4. '
' → logprob: -4.92332124710083
    5. 'interval' → logprob: -6.42332124710083
    6. '    
' → logprob: -7.67332124710083
    7. ',' → logprob: -7.79832124710083
    8. 'favorites' → logprob: -8.423321723937988
    9. ' =' → logprob: -8.798321723937988
    10. ' fav' → logprob: -9.048321723937988

Token 787: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04786728322505951
    2. '0' → logprob: -3.5478672981262207
    3. 'lambda' → logprob: -4.172867298126221
    4. '[' → logprob: -6.422867298126221
    5. 'end' → logprob: -8.047866821289062
    6. ' start' → logprob: -9.047866821289062
    7. '1' → logprob: -9.047866821289062
    8. 'def' → logprob: -9.547866821289062
    9. '```' → logprob: -10.047866821289062
    10. 'begin' → logprob: -10.172866821289062

Token 788: ' time' (ID: 1058)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.21204112470149994
    2. ' =' → logprob: -2.587041139602661
    3. '_inter' → logprob: -3.212041139602661
    4. 'interval' → logprob: -3.837041139602661
    5. 'times' → logprob: -4.212040901184082
    6. 'f' → logprob: -4.587040901184082
    7. ':' → logprob: -4.837040901184082
    8. '=' → logprob: -5.087040901184082
    9. ':
' → logprob: -5.962040901184082
    10. '   ' → logprob: -6.087040901184082

Token 789: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6154393553733826
    2. 'fav' → logprob: -0.8654393553733826
    3. '   ' → logprob: -3.6154394149780273
    4. '
' → logprob: -4.990439414978027
    5. 'interval' → logprob: -6.740439414978027
    6. 'favorites' → logprob: -6.990439414978027
    7. '    
' → logprob: -7.615439414978027
    8. ',' → logprob: -7.990439414978027
    9. ':' → logprob: -7.990439414978027
    10. ',
' → logprob: -8.365439414978027

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20446570217609406
    2. 'fav' → logprob: -2.454465627670288
    3. 'f' → logprob: -2.829465627670288
    4. '
' → logprob: -3.454465627670288
    5. '    
' → logprob: -5.579465866088867
    6. '```' → logprob: -6.704465866088867
    7. '#' → logprob: -7.454465866088867
    8. 'interval' → logprob: -7.829465866088867
    9. 'favorites' → logprob: -7.829465866088867
    10. ',' → logprob: -8.204465866088867

Token 791: ' fav' (ID: 11726)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26192423701286316
    2. 'fav' (adapté à ' fav') → logprob: -1.5119242668151855
    3. '   ' → logprob: -4.7619242668151855
    4. '#' → logprob: -7.6369242668151855
    5. '
' → logprob: -8.136923789978027
    6. '    
' → logprob: -9.386923789978027
    7. 'favorites' → logprob: -9.386923789978027
    8. 'interval' → logprob: -9.386923789978027
    9. 'sorted' → logprob: -9.761923789978027
    10. 'all' → logprob: -10.011923789978027

Token 792: '_sorted' (ID: 104993)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.014272099360823631
    2. 's' → logprob: -4.264272212982178
    3. '_indices' → logprob: -10.13927173614502
    4. '_' → logprob: -11.01427173614502
    5. '_sorted' → logprob: -11.01427173614502
    6. '_program' → logprob: -11.76427173614502
    7. '_end' → logprob: -12.01427173614502
    8. '_list' → logprob: -12.13927173614502
    9. '_times' → logprob: -12.88927173614502
    10. '_interval' → logprob: -12.88927173614502

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005850812420248985
    2. ' =' → logprob: -5.880850791931152
    3. '.sort' → logprob: -5.880850791931152
    4. '=f' → logprob: -8.880850791931152
    5. '.' → logprob: -10.005850791931152
    6. '=[]' → logprob: -10.255850791931152
    7. '=True' → logprob: -12.505850791931152
    8. ',' → logprob: -12.505850791931152
    9. '=lambda' → logprob: -13.130850791931152
    10. ')' → logprob: -13.255850791931152

Token 794: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0005593468667939305
    2. 'fav' → logprob: -7.500559329986572
    3. '[' → logprob: -12.50055980682373
    4. ' sorted' → logprob: -13.62555980682373
    5. '[f' → logprob: -14.00055980682373
    6. '(sorted' → logprob: -14.87555980682373
    7. 'f' → logprob: -16.750558853149414
    8. '[(' → logprob: -17.000558853149414
    9. 'list' → logprob: -17.500558853149414
    10. 'sort' → logprob: -17.625558853149414

Token 795: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.000936355150770396
    2. '((' → logprob: -7.000936508178711
    3. '([(' → logprob: -11.375936508178711
    4. 'f' → logprob: -12.500936508178711
    5. '([' → logprob: -12.625936508178711
    6. '(program' → logprob: -13.375936508178711
    7. '(' → logprob: -13.625936508178711
    8. '(((' → logprob: -13.750936508178711
    9. 'fav' → logprob: -14.125936508178711
    10. 'program' → logprob: -14.625936508178711

Token 796: 'av' (ID: 407)
  Prédit: 'avs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avs' → logprob: -0.3785364031791687
    2. 'av' → logprob: -1.2535364627838135
    3. '_inter' → logprob: -3.7535364627838135
    4. 'fav' → logprob: -6.253536224365234
    5. 's' → logprob: -7.003536224365234
    6. 'avorites' → logprob: -7.378536224365234
    7. 'inter' → logprob: -7.878536224365234
    8. 'v' → logprob: -7.878536224365234
    9. 'f' → logprob: -8.128536224365234
    10. '[' → logprob: -8.628536224365234

Token 797: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.005605461075901985
    2. 'interval' → logprob: -5.255605697631836
    3. 'inter' → logprob: -8.005605697631836
    4. '_' → logprob: -11.755605697631836
    5. '_set' → logprob: -12.255605697631836
    6. '_min' → logprob: -12.630605697631836
    7. '_interval' → logprob: -12.880605697631836
    8. '(interval' → logprob: -12.880605697631836
    9. 'f' → logprob: -13.005605697631836
    10. ' intervals' → logprob: -13.005605697631836

Token 798: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.7042340636253357
    2. 'vals' → logprob: -0.7042340636253357
    3. 'interval' → logprob: -5.8292341232299805
    4. '_inter' → logprob: -6.5792341232299805
    5. 'erv' → logprob: -6.8292341232299805
    6. '[' → logprob: -7.2042341232299805
    7. 's' → logprob: -7.4542341232299805
    8. '```' → logprob: -7.4542341232299805
    9. 'ls' → logprob: -8.07923412322998
    10. ' intervals' → logprob: -8.20423412322998

Token 799: ',key' (ID: 119403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05257806181907654
    2. ',' → logprob: -3.5525779724121094
    3. ',key' → logprob: -3.8025779724121094
    4. 'key' → logprob: -8.55257797241211
    5. ')
' → logprob: -10.42757797241211
    6. '(key' → logprob: -11.55257797241211
    7. ')#' → logprob: -12.17757797241211
    8. ' key' → logprob: -12.17757797241211
    9. ' ,' → logprob: -12.92757797241211
    10. ' )' → logprob: -13.30257797241211

Token 800: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -2.935296834039036e-06
    2. '=' → logprob: -12.75000286102295
    3. 'lambda' → logprob: -17.000003814697266
    4. ' =' → logprob: -19.375003814697266
    5. '=l' → logprob: -19.875003814697266
    6. '=item' → logprob: -20.500003814697266
    7. '=len' → logprob: -21.250003814697266
    8. '=_' → logprob: -22.500003814697266
    9. '=
' → logprob: -22.625003814697266
    10. '=str' → logprob: -22.625003814697266

Token 801: ' x' (ID: 1215)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0005843686521984637
    2. 'lambda' → logprob: -7.500584602355957
    3. '=' → logprob: -10.375584602355957
    4. ' lambda' → logprob: -16.37558364868164
    5. '(lambda' → logprob: -17.12558364868164
    6. '=item' → logprob: -18.00058364868164
    7. '=l' → logprob: -18.25058364868164
    8. 'operator' → logprob: -18.87558364868164
    9. '=len' → logprob: -19.50058364868164
    10. '=
' → logprob: -20.00058364868164

Token 802: ':x' (ID: 73587)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.11509904265403748
    2. ':x' → logprob: -2.8650989532470703
    3. ':' → logprob: -3.4900989532470703
    4. 'lambda' → logprob: -3.8650989532470703
    5. '=' → logprob: -9.36509895324707
    6. '[' → logprob: -9.36509895324707
    7. 'x' → logprob: -10.24009895324707
    8. ' lambda' → logprob: -10.74009895324707
    9. '(lambda' → logprob: -11.11509895324707
    10. '=x' → logprob: -11.49009895324707

Token 803: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01817101612687111
    2. '[' → logprob: -4.0181708335876465
    3. ' ' → logprob: -12.018171310424805
    4. ' [' → logprob: -12.393171310424805
    5. '   ' → logprob: -12.393171310424805
    6. '```' → logprob: -13.143171310424805
    7. '0' → logprob: -13.643171310424805
    8. '
' → logprob: -13.643171310424805
    9. ':' → logprob: -14.393171310424805
    10. '`' → logprob: -14.643171310424805

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '0' → logprob: -12.125007629394531
    3. '[' → logprob: -14.125007629394531
    4. '
' → logprob: -14.375007629394531
    5. ' ' → logprob: -15.625007629394531
    6. '```' → logprob: -15.625007629394531
    7. '   ' → logprob: -16.00000762939453
    8. '' → logprob: -17.93750762939453
    9. '`' → logprob: -18.12500762939453
    10. '
' → logprob: -18.50000762939453

Token 805: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017314712749794126
    2. '])' → logprob: -9.125173568725586
    3. ')
' → logprob: -10.375173568725586
    4. '))' → logprob: -11.000173568725586
    5. '})' → logprob: -12.250173568725586
    6. ' )' → logprob: -12.750173568725586
    7. ')[' → logprob: -12.750173568725586
    8. '())' → logprob: -13.625173568725586
    9. ')`' → logprob: -14.125173568725586
    10. '>)' → logprob: -14.625173568725586

Token 806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38011446595191956
    2. 'last' → logprob: -2.0051145553588867
    3. '#' → logprob: -3.6301145553588867
    4. '
' → logprob: -4.005114555358887
    5. 'g' → logprob: -4.130114555358887
    6. 'merged' → logprob: -4.130114555358887
    7. 'dp' → logprob: -4.255114555358887
    8. 'available' → logprob: -4.255114555358887
    9. 'gap' → logprob: -4.505114555358887
    10. 'prev' → logprob: -4.755114555358887

Token 807: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.244148850440979
    2. 'res' → logprob: -2.9941487312316895
    3. '#' (adapté à ' #') → logprob: -3.2441487312316895
    4. 'last' → logprob: -3.3691487312316895
    5. 'result' → logprob: -3.7441487312316895
    6. 'merged' → logprob: -3.9941487312316895
    7. 'g' → logprob: -4.4941487312316895
    8. 'non' → logprob: -4.6191487312316895
    9. 'prev' → logprob: -4.9941487312316895
    10. 'all' → logprob: -5.4941487312316895

Token 808: ' Now' (ID: 6549)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28694406151771545
    2. 'result' → logprob: -2.5369441509246826
    3. 'res' → logprob: -2.9119441509246826
    4. 'last' → logprob: -3.5369441509246826
    5. 'merged' → logprob: -4.0369439125061035
    6. '#' → logprob: -4.1619439125061035
    7. 'prev' → logprob: -4.4119439125061035
    8. 'g' → logprob: -4.6619439125061035
    9. 'non' → logprob: -4.9119439125061035
    10. 'all' → logprob: -5.2869439125061035

Token 809: ' intervals' (ID: 49900)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2090248167514801
    2. '#' → logprob: -3.0840249061584473
    3. 'dp' → logprob: -3.4590249061584473
    4. 'prev' → logprob: -3.8340249061584473
    5. '   ' → logprob: -3.9590249061584473
    6. 'non' → logprob: -4.334024906158447
    7. 'last' → logprob: -4.584024906158447
    8. 'gap' → logprob: -4.584024906158447
    9. 'merged' → logprob: -5.084024906158447
    10. 'result' → logprob: -5.334024906158447

Token 810: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44390636682510376
    2. '=' → logprob: -1.318906307220459
    3. '   ' → logprob: -3.943906307220459
    4. 'points' → logprob: -5.193906307220459
    5. 'between' → logprob: -5.318906307220459
    6. 'outside' → logprob: -5.318906307220459
    7. 'merged' → logprob: -5.443906307220459
    8. '=[]' → logprob: -5.443906307220459
    9. 'before' → logprob: -5.818906307220459
    10. 'are' → logprob: -5.818906307220459

Token 811: ' cover' (ID: 4321)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.1816004514694214
    2. 'merged' → logprob: -1.1816004514694214
    3. 'interval' → logprob: -1.5566004514694214
    4. 'non' → logprob: -3.181600570678711
    5. 'combined' → logprob: -3.556600570678711
    6. 'full' → logprob: -3.931600570678711
    7. '   ' → logprob: -4.306600570678711
    8. 'g' → logprob: -4.431600570678711
    9. 'result' → logprob: -4.931600570678711
    10. 'schedule' → logprob: -5.056600570678711

Token 812: ' the' (ID: 290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6622798442840576
    2. '=' → logprob: -2.2872798442840576
    3. '   ' → logprob: -3.0372798442840576
    4. ' all' → logprob: -3.1622798442840576
    5. '=[]' → logprob: -3.1622798442840576
    6. '[]' → logprob: -3.2872798442840576
    7. 'points' → logprob: -3.4122798442840576
    8. 'all' → logprob: -3.6622798442840576
    9. '=[' → logprob: -4.287280082702637
    10. '[' → logprob: -4.537280082702637

Token 813: ' line' (ID: 2543)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.4385195970535278
    2. 'whole' → logprob: -1.4385195970535278
    3. 'ent' → logprob: -1.6885195970535278
    4. 'timeline' → logprob: -2.6885194778442383
    5. 'full' → logprob: -2.9385194778442383
    6. 'range' → logprob: -3.0635194778442383
    7. ' entire' → logprob: -3.3135194778442383
    8. 'day' → logprob: -3.4385194778442383
    9. ' whole' → logprob: -4.188519477844238
    10. 'interval' → logprob: -4.438519477844238

Token 814: ' with' (ID: 483)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.8657833337783813
    2. 'prev' → logprob: -2.115783214569092
    3. 'points' → logprob: -2.240783214569092
    4. '   ' → logprob: -2.490783214569092
    5. 'interval' → logprob: -2.615783214569092
    6. ',' → logprob: -2.865783214569092
    7. 'line' → logprob: -3.865783214569092
    8. 'segments' → logprob: -4.115783214569092
    9. 'merged' → logprob: -4.115783214569092
    10. 'current' → logprob: -4.240783214569092

Token 815: ' fav' (ID: 11726)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.6101460456848145
    2. 'segments' → logprob: -1.6101460456848145
    3. 'fav' → logprob: -1.7351460456848145
    4. '[' → logprob: -2.1101460456848145
    5. '[(' → logprob: -2.6101460456848145
    6. 'f' → logprob: -3.1101460456848145
    7. 'interval' → logprob: -3.1101460456848145
    8. 'a' → logprob: -3.8601460456848145
    9. 'the' → logprob: -3.8601460456848145
    10. '[-' → logprob: -4.2351460456848145

Token 816: ' intervals' (ID: 49900)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7793447375297546
    2. '_sorted' → logprob: -0.9043447375297546
    3. '_inter' → logprob: -2.6543447971343994
    4. '_end' → logprob: -3.4043447971343994
    5. '_start' → logprob: -4.77934455871582
    6. '_s' → logprob: -5.27934455871582
    7. '   ' → logprob: -5.90434455871582
    8. 'sorted' → logprob: -6.02934455871582
    9. '_points' → logprob: -6.65434455871582
    10. 'points' → logprob: -6.90434455871582

Token 817: ',' (ID: 11)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6473758816719055
    2. ',' → logprob: -1.7723758220672607
    3. '   ' → logprob: -2.3973758220672607
    4. 'last' → logprob: -3.1473758220672607
    5. 'and' → logprob: -3.3973758220672607
    6. 'prev' → logprob: -3.5223758220672607
    7. 'merged' → logprob: -4.02237606048584
    8. '#' → logprob: -4.14737606048584
    9. 'end' → logprob: -4.14737606048584
    10. 'interval' → logprob: -4.52237606048584

Token 818: ' between' (ID: 2870)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6131928563117981
    2. 'last' → logprob: -1.7381927967071533
    3. '#' → logprob: -1.9881927967071533
    4. 'prev' → logprob: -2.8631927967071533
    5. '   ' → logprob: -3.7381927967071533
    6. 'merged' → logprob: -4.863193035125732
    7. ' last' → logprob: -5.113193035125732
    8. 'dp' → logprob: -5.113193035125732
    9. 'current' → logprob: -5.238193035125732
    10. 'cur' → logprob: -5.238193035125732

Token 819: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.31173112988471985
    2. 'them' → logprob: -1.5617311000823975
    3. ' them' → logprob: -3.5617311000823975
    4. '0' → logprob: -4.686731338500977
    5. 'end' → logprob: -5.061731338500977
    6. 'prev' → logprob: -5.436731338500977
    7. 'interval' → logprob: -6.061731338500977
    8. 'the' → logprob: -6.186731338500977
    9. ' intervals' → logprob: -6.936731338500977
    10. ' fav' → logprob: -7.311731338500977

Token 820: ' intervals' (ID: 49900)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.3558424711227417
    2. '_inter' → logprob: -1.4808424711227417
    3. 's' → logprob: -2.8558425903320312
    4. 'interval' → logprob: -5.980842590332031
    5. ' intervals' → logprob: -6.105842590332031
    6. 'sorted' → logprob: -6.230842590332031
    7. '_' → logprob: -6.605842590332031
    8. '   ' → logprob: -6.855842590332031
    9. '_s' → logprob: -7.105842590332031
    10. '_end' → logprob: -7.105842590332031

Token 821: ' we' (ID: 581)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.1833323240280151
    2. ',' → logprob: -1.3083323240280151
    3. 'g' → logprob: -1.5583323240280151
    4. 'last' → logprob: -2.1833324432373047
    5. 'and' → logprob: -3.0583324432373047
    6. '   ' → logprob: -4.308332443237305
    7. '#' → logprob: -4.433332443237305
    8. 'interval' → logprob: -4.808332443237305
    9. 'start' → logprob: -6.058332443237305
    10. ',
' → logprob: -6.183332443237305

Token 822: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.12897013127803802
    2. ' can' → logprob: -2.878970146179199
    3. 'have' → logprob: -2.878970146179199
    4. ' have' → logprob: -6.003970146179199
    5. 'are' → logprob: -6.128970146179199
    6. 'may' → logprob: -6.628970146179199
    7. 'will' → logprob: -7.503970146179199
    8. '#' → logprob: -7.503970146179199
    9. ' are' → logprob: -8.6289701461792
    10. '<|end|>' → logprob: -8.7539701461792

Token 823: ' add' (ID: 1147)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.23298859596252441
    2. 'add' → logprob: -1.9829885959625244
    3. 'select' → logprob: -3.4829885959625244
    4. 'put' → logprob: -4.732988357543945
    5. ' insert' → logprob: -5.232988357543945
    6. 'place' → logprob: -5.232988357543945
    7. 'fill' → logprob: -5.607988357543945
    8. 'schedule' → logprob: -5.607988357543945
    9. 'choose' → logprob: -5.607988357543945
    10. 'try' → logprob: -5.732988357543945

Token 824: ' others' (ID: 5036)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.9232283234596252
    2. 'last' → logprob: -1.4232282638549805
    3. 'prev' → logprob: -2.4232282638549805
    4. 'c' → logprob: -2.7982282638549805
    5. 'g' → logprob: -2.7982282638549805
    6. 'previous' → logprob: -3.4232282638549805
    7. 'interval' → logprob: -3.7982282638549805
    8. 'times' → logprob: -4.2982282638549805
    9. 'slots' → logprob: -4.5482282638549805
    10. 'free' → logprob: -4.6732282638549805

Token 825: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.627284049987793
    2. '
' → logprob: -1.377284049987793
    3. 'prev' → logprob: -2.752284049987793
    4. 'last' → logprob: -3.002284049987793
    5. 'g' → logprob: -3.502284049987793
    6. '    
' → logprob: -3.877284049987793
    7. '#' → logprob: -4.252284049987793
    8. ',' → logprob: -5.377284049987793
    9. 'interval' → logprob: -5.377284049987793
    10. 'available' → logprob: -5.627284049987793

Token 826: ' no' (ID: 860)
  Prédit: 'they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'they' → logprob: -0.7390851974487305
    2. 'possible' → logprob: -0.9890851974487305
    3. 'not' → logprob: -2.7390851974487305
    4. ' possible' → logprob: -3.7390851974487305
    5. 'no' → logprob: -3.8640851974487305
    6. ' they' → logprob: -4.1140851974487305
    7. ' not' → logprob: -4.7390851974487305
    8. 'there' → logprob: -5.4890851974487305
    9. 'desired' → logprob: -5.4890851974487305
    10. 'non' → logprob: -6.4890851974487305

Token 827: ' conflicts' (ID: 50037)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.3971347212791443
    2. 'over' → logprob: -1.147134780883789
    3. ' conflict' → logprob: -5.647134780883789
    4. 'conf' → logprob: -5.772134780883789
    5. ' overlaps' → logprob: -6.022134780883789
    6. '_overlap' → logprob: -7.772134780883789
    7. ' conflicts' → logprob: -8.522134780883789
    8. '
' → logprob: -9.147134780883789
    9. ' overlapping' → logprob: -9.272134780883789
    10. '(over' → logprob: -9.272134780883789

Token 828: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6768662333488464
    2. '
' → logprob: -1.4268662929534912
    3. 'last' → logprob: -2.676866292953491
    4. 'prev' → logprob: -2.801866292953491
    5. '#' → logprob: -2.926866292953491
    6. '    
' → logprob: -3.676866292953491
    7. 'g' → logprob: -3.926866292953491
    8. 'available' → logprob: -5.301866054534912
    9. 'end' → logprob: -5.551866054534912
    10. 'interval' → logprob: -5.801866054534912

Token 829: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057223398238420486
    2. '
' → logprob: -3.807223320007324
    3. '#' → logprob: -4.557223320007324
    4. 'prev' → logprob: -4.932223320007324
    5. 'last' → logprob: -5.432223320007324
    6. '    
' → logprob: -5.432223320007324
    7. 'segments' → logprob: -6.432223320007324
    8. 'g' → logprob: -6.807223320007324
    9. 'interval' → logprob: -7.057223320007324
    10. 'current' → logprob: -7.432223320007324

Token 830: ' #' (ID: 1069)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.9504458904266357
    2. 'dp' → logprob: -1.8254458904266357
    3. '#' (adapté à ' #') → logprob: -1.9504458904266357
    4. 'prev' → logprob: -1.9504458904266357
    5. 'res' → logprob: -3.4504458904266357
    6. 'result' → logprob: -3.7004458904266357
    7. 'all' → logprob: -3.7004458904266357
    8. 'interval' → logprob: -4.075446128845215
    9. 'segments' → logprob: -4.575446128845215
    10. 'merged' → logprob: -4.825446128845215

Token 831: ' Extract' (ID: 39239)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0833247900009155
    2. 'res' → logprob: -1.7083247900009155
    3. 'result' → logprob: -1.8333247900009155
    4. 'last' → logprob: -1.9583247900009155
    5. 'merged' → logprob: -3.083324909210205
    6. 'prev' → logprob: -3.458324909210205
    7. 'all' → logprob: -3.708324909210205
    8. '#' → logprob: -3.958324909210205
    9. 'selected' → logprob: -4.708324909210205
    10. 'interval' → logprob: -4.833324909210205

Token 832: ' the' (ID: 290)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0505832433700562
    2. 'prev' → logprob: -1.3005832433700562
    3. 'non' → logprob: -1.6755832433700562
    4. 'g' → logprob: -2.0505833625793457
    5. 'segments' → logprob: -3.9255833625793457
    6. 'interval' → logprob: -4.425583362579346
    7. 'before' → logprob: -4.675583362579346
    8. '#' → logprob: -5.925583362579346
    9. ' last' → logprob: -6.175583362579346
    10. 'all' → logprob: -6.550583362579346

Token 833: ' overall' (ID: 10705)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7258250117301941
    2. 'g' → logprob: -1.3508250713348389
    3. 'segments' → logprob: -1.8508250713348389
    4. 'non' → logprob: -2.850825071334839
    5. ' intervals' → logprob: -4.47582483291626
    6. '#' → logprob: -4.47582483291626
    7. 'slots' → logprob: -5.22582483291626
    8. 'time' → logprob: -6.22582483291626
    9. 'free' → logprob: -6.47582483291626
    10. 'prev' → logprob: -6.85082483291626

Token 834: ' covered' (ID: 13083)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.073707938194275
    2. 'time' → logprob: -1.323707938194275
    3. 'timeline' → logprob: -1.698707938194275
    4. 'times' → logprob: -2.3237080574035645
    5. 'start' → logprob: -3.4487080574035645
    6. 'range' → logprob: -3.5737080574035645
    7. 'line' → logprob: -4.5737080574035645
    8. 'min' → logprob: -4.6987080574035645
    9. 'c' → logprob: -4.9487080574035645
    10. 'end' → logprob: -5.4487080574035645

Token 835: ' time' (ID: 1058)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2777000367641449
    2. 'range' → logprob: -2.2776999473571777
    3. 'start' → logprob: -2.7776999473571777
    4. 'ranges' → logprob: -3.6526999473571777
    5. 'line' → logprob: -3.9026999473571777
    6. 'segments' → logprob: -4.027699947357178
    7. 'points' → logprob: -5.902699947357178
    8. '_start' → logprob: -6.152699947357178
    9. 'times' → logprob: -6.777699947357178
    10. 'time' → logprob: -6.777699947357178

Token 836: ' by' (ID: 656)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.29556968808174133
    2. 'start' → logprob: -1.920569658279419
    3. 'cover' → logprob: -3.545569658279419
    4. 'min' → logprob: -4.170569896697998
    5. 'interval' → logprob: -4.295569896697998
    6. '=' → logprob: -4.795569896697998
    7. 'coverage' → logprob: -4.920569896697998
    8. ' =' → logprob: -5.295569896697998
    9. 'times' → logprob: -5.670569896697998
    10. '   ' → logprob: -5.795569896697998

Token 837: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0009399275877512991
    2. 'the' → logprob: -7.750939846038818
    3. 'f' → logprob: -8.000940322875977
    4. '#' → logprob: -9.750940322875977
    5. 'for' → logprob: -10.250940322875977
    6. 'favor' → logprob: -11.250940322875977
    7. '[(' → logprob: -11.375940322875977
    8. '[' → logprob: -11.875940322875977
    9. ' fav' → logprob: -12.375940322875977
    10. '   ' → logprob: -12.500940322875977

Token 838: 's' (ID: 82)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.0095962285995483
    2. '_start' → logprob: -1.3845962285995483
    3. 's' → logprob: -1.8845962285995483
    4. '_inter' → logprob: -2.134596347808838
    5. 'start' → logprob: -3.134596347808838
    6. 'min' → logprob: -3.634596347808838
    7. '_ranges' → logprob: -4.509596347808838
    8. '_' → logprob: -5.134596347808838
    9. 'ranges' → logprob: -5.134596347808838
    10. '_st' → logprob: -5.634596347808838

Token 839: ',' (ID: 11)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.21799685060977936
    2. 'fav' → logprob: -2.342996835708618
    3. 'interval' → logprob: -3.592996835708618
    4. 'cover' → logprob: -4.092997074127197
    5. 'total' → logprob: -4.217997074127197
    6. 'coverage' → logprob: -4.467997074127197
    7. 'start' → logprob: -4.592997074127197
    8. 'ranges' → logprob: -5.592997074127197
    9. 'overall' → logprob: -6.092997074127197
    10. '   ' → logprob: -6.217997074127197

Token 840: ' and' (ID: 326)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.726972758769989
    2. 'last' → logprob: -2.351972818374634
    3. 'total' → logprob: -2.976972818374634
    4. 'overall' → logprob: -3.101972818374634
    5. 'fav' → logprob: -3.101972818374634
    6. '   ' → logprob: -3.351972818374634
    7. 'prev' → logprob: -3.351972818374634
    8. 'start' → logprob: -3.726972818374634
    9. 'full' → logprob: -3.726972818374634
    10. 'timeline' → logprob: -3.851972818374634

Token 841: ' intervals' (ID: 49900)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.994397759437561
    2. 'the' → logprob: -1.619397759437561
    3. 'g' → logprob: -1.994397759437561
    4. 'sort' → logprob: -2.4943976402282715
    5. 'interval' → logprob: -2.9943976402282715
    6. 'find' → logprob: -3.9943976402282715
    7. 'also' → logprob: -4.1193976402282715
    8. 'split' → logprob: -4.4943976402282715
    9. 'merge' → logprob: -4.7443976402282715
    10. 'add' → logprob: -4.9943976402282715

Token 842: ' between' (ID: 2870)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.9038286805152893
    2. '=' → logprob: -1.4038286209106445
    3. ' =' → logprob: -1.5288286209106445
    4. 'between' → logprob: -3.1538286209106445
    5. 'outside' → logprob: -3.9038286209106445
    6. '=[]
' → logprob: -4.0288286209106445
    7. 'before' → logprob: -4.5288286209106445
    8. 'after' → logprob: -4.7788286209106445
    9. 's' → logprob: -4.7788286209106445
    10. 'points' → logprob: -5.5288286209106445

Token 843: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.012439602054655552
    2. 'prev' → logprob: -5.512439727783203
    3. 'interval' → logprob: -6.137439727783203
    4. 'last' → logprob: -6.512439727783203
    5. 'covered' → logprob: -6.512439727783203
    6. 'f' → logprob: -6.887439727783203
    7. '#' → logprob: -7.262439727783203
    8. 'segments' → logprob: -8.012439727783203
    9. 'covers' → logprob: -8.387439727783203
    10. 'times' → logprob: -8.887439727783203

Token 844: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10917928069829941
    2. '_inter' → logprob: -2.8591792583465576
    3. 'als' → logprob: -3.3591792583465576
    4. 'interval' → logprob: -5.484179496765137
    5. '_sorted' → logprob: -6.234179496765137
    6. 'sorted' → logprob: -6.984179496765137
    7. 'vals' → logprob: -6.984179496765137
    8. 'al' → logprob: -7.109179496765137
    9. ' intervals' → logprob: -7.484179496765137
    10. 'inter' → logprob: -7.609179496765137

Token 845: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18858347833156586
    2. 'interval' → logprob: -2.6885833740234375
    3. '   ' → logprob: -2.9385833740234375
    4. '#' → logprob: -4.4385833740234375
    5. 'g' → logprob: -4.8135833740234375
    6. ',' → logprob: -5.0635833740234375
    7. 'prev' → logprob: -5.0635833740234375
    8. 'segments' → logprob: -5.3135833740234375
    9. ',
' → logprob: -5.6885833740234375
    10. 'covered' → logprob: -6.3135833740234375

Token 846: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.708098828792572
    2. '   ' → logprob: -1.0830988883972168
    3. 'interval' → logprob: -2.208098888397217
    4. '
' → logprob: -3.458098888397217
    5. 'segments' → logprob: -4.708098888397217
    6. '    
' → logprob: -5.458098888397217
    7. '#' → logprob: -5.833098888397217
    8. 'free' → logprob: -6.083098888397217
    9. 'ranges' → logprob: -6.708098888397217
    10. '```' → logprob: -6.958098888397217

Token 847: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.24352484941482544
    2. 'interval' → logprob: -2.2435247898101807
    3. '
' → logprob: -2.8685247898101807
    4. 'segments' → logprob: -4.36852502822876
    5. 'prev' → logprob: -4.49352502822876
    6. '#' (adapté à ' #') → logprob: -4.86852502822876
    7. '   ' → logprob: -4.86852502822876
    8. 'free' → logprob: -5.61852502822876
    9. 'available' → logprob: -6.36852502822876
    10. 'gap' → logprob: -6.86852502822876

Token 848: ' We'll' (ID: 46830)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5770900845527649
    2. 'interval' → logprob: -1.2020900249481201
    3. 'segments' → logprob: -2.32709002494812
    4. 'free' → logprob: -4.702090263366699
    5. 'merged' → logprob: -5.077090263366699
    6. 'slots' → logprob: -5.327090263366699
    7. 'prev' → logprob: -5.827090263366699
    8. 'time' → logprob: -6.327090263366699
    9. 'gap' → logprob: -6.452090263366699
    10. 'fav' → logprob: -6.452090263366699

Token 849: ' do' (ID: 621)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.11089304089546204
    2. 'define' → logprob: -3.6108930110931396
    3. 'interval' → logprob: -4.610893249511719
    4. 'consider' → logprob: -4.735893249511719
    5. 'partition' → logprob: -4.860893249511719
    6. 'split' → logprob: -4.860893249511719
    7. 'use' → logprob: -5.110893249511719
    8. 'find' → logprob: -5.360893249511719
    9. ' process' → logprob: -5.360893249511719
    10. 'fill' → logprob: -5.610893249511719

Token 850: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.5818731784820557
    2. 'prev' → logprob: -1.7068731784820557
    3. 'dp' → logprob: -2.0818731784820557
    4. 'segments' → logprob: -2.3318731784820557
    5. ' intervals' → logprob: -2.3318731784820557
    6. ' prev' → logprob: -2.5818731784820557
    7. 'last' → logprob: -2.8318731784820557
    8. 'result' → logprob: -2.9568731784820557
    9. 'merged' → logprob: -3.4568731784820557
    10. 'g' → logprob: -4.331872940063477

Token 851: ' scheduling' (ID: 51708)
  Prédit: ' scheduling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scheduling' → logprob: -0.6054272651672363
    2. 's' → logprob: -0.9804272651672363
    3. 'import' → logprob: -4.355427265167236
    4. 'c' → logprob: -4.480427265167236
    5. 'i' → logprob: -5.355427265167236
    6. '#' → logprob: -5.355427265167236
    7. '   ' → logprob: -5.480427265167236
    8. 'g' → logprob: -5.730427265167236
    9. 'from' → logprob: -5.855427265167236
    10. 'last' → logprob: -5.855427265167236

Token 852: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5172958374023438
    2. '#' → logprob: -2.1422958374023438
    3. 'last' → logprob: -2.1422958374023438
    4. 'prev' → logprob: -2.2672958374023438
    5. 'between' → logprob: -2.2672958374023438
    6. 'def' → logprob: -2.7672958374023438
    7. 'g' → logprob: -3.6422958374023438
    8. ' between' → logprob: -3.7672958374023438
    9. 'interval' → logprob: -3.8922958374023438
    10. 'segments' → logprob: -4.017295837402344

Token 853: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9202913641929626
    2. 'segments' → logprob: -1.5452914237976074
    3. 'the' → logprob: -1.6702914237976074
    4. 'between' → logprob: -1.7952914237976074
    5. 'g' → logprob: -5.170291423797607
    6. 'interval' → logprob: -5.295291423797607
    7. '[' → logprob: -5.670291423797607
    8. 'pieces' → logprob: -5.670291423797607
    9. ' each' → logprob: -5.795291423797607
    10. ' segments' → logprob: -6.045291423797607

Token 854: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.047352492809295654
    2. ' gap' → logprob: -3.1723525524139404
    3. 'interval' → logprob: -6.047352313995361
    4. 'segment' → logprob: -6.797352313995361
    5. 'between' → logprob: -8.54735279083252
    6. 'prev' → logprob: -9.04735279083252
    7. '_gap' → logprob: -9.04735279083252
    8. 'range' → logprob: -9.42235279083252
    9. ' segment' → logprob: -9.79735279083252
    10. 'g' → logprob: -10.04735279083252

Token 855: ' between' (ID: 2870)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0887510776519775
    2. '
' → logprob: -1.0887510776519775
    3. '   ' → logprob: -1.3387510776519775
    4. '    
' → logprob: -3.9637510776519775
    5. 'prev' → logprob: -4.213750839233398
    6. 'interval' → logprob: -4.463750839233398
    7. 'segments' → logprob: -5.463750839233398
    8. 'gap' → logprob: -5.588750839233398
    9. '#' → logprob: -5.838750839233398
    10. 'last' → logprob: -6.588750839233398

Token 856: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0022625441197305918
    2. '(' → logprob: -7.627262592315674
    3. 'prev' → logprob: -8.502262115478516
    4. '
' → logprob: -8.752262115478516
    5. '0' → logprob: -8.877262115478516
    6. 'f' → logprob: -9.002262115478516
    7. 'interval' → logprob: -9.002262115478516
    8. 'end' → logprob: -9.002262115478516
    9. 'favorite' → logprob: -9.127262115478516
    10. 'favor' → logprob: -9.377262115478516

Token 857: ' intervals' (ID: 49900)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.6993713974952698
    2. 's' → logprob: -1.199371337890625
    3. 'f' → logprob: -2.574371337890625
    4. 'sorted' → logprob: -3.324371337890625
    5. '_sorted' → logprob: -3.574371337890625
    6. 'interval' → logprob: -3.574371337890625
    7. 'als' → logprob: -5.324371337890625
    8. '_inter' → logprob: -5.449371337890625
    9. 'vals' → logprob: -5.574371337890625
    10. 'ors' → logprob: -6.074371337890625

Token 858: ' including' (ID: 3463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19764813780784607
    2. '
' → logprob: -2.447648048400879
    3. 'g' → logprob: -2.822648048400879
    4. '    
' → logprob: -4.072648048400879
    5. 'gap' → logprob: -5.322648048400879
    6. 'interval' → logprob: -6.322648048400879
    7. 'segments' → logprob: -6.322648048400879
    8. ',' → logprob: -6.322648048400879
    9. 'last' → logprob: -6.572648048400879
    10. 'prev' → logprob: -7.072648048400879

Token 859: ' left' (ID: 3561)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.00554998591542244
    2. 'the' → logprob: -5.630549907684326
    3. 'f' → logprob: -7.380549907684326
    4. 'favorites' → logprob: -8.755550384521484
    5. 'prev' → logprob: -8.880550384521484
    6. ' fav' → logprob: -8.880550384521484
    7. 'them' → logprob: -8.880550384521484
    8. 'favorite' → logprob: -9.130550384521484
    9. 'None' → logprob: -9.255550384521484
    10. '0' → logprob: -9.380550384521484

Token 860: ' and' (ID: 326)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.17428362369537354
    2. '_end' → logprob: -2.049283504486084
    3. ',' → logprob: -5.174283504486084
    4. ',end' → logprob: -5.174283504486084
    5. ' end' → logprob: -6.174283504486084
    6. 'and' → logprob: -6.299283504486084
    7. 'endpoint' → logprob: -6.299283504486084
    8. ' and' → logprob: -6.549283504486084
    9. 'boundary' → logprob: -6.549283504486084
    10. 'interval' → logprob: -6.674283504486084

Token 861: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00044175516813993454
    2. ' right' → logprob: -7.750441551208496
    3. '	right' → logprob: -12.500441551208496
    4. 'Right' → logprob: -13.125441551208496
    5. '
' → logprob: -13.500441551208496
    6. '#' → logprob: -14.000441551208496
    7. 'fav' → logprob: -14.375441551208496
    8. 'end' → logprob: -14.500441551208496
    9. '_right' → logprob: -14.500441551208496
    10. ',right' → logprob: -14.625441551208496

Token 862: ' segments' (ID: 33749)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.73744797706604
    2. '   ' → logprob: -2.11244797706604
    3. 'prev' → logprob: -2.11244797706604
    4. 'interval' → logprob: -2.61244797706604
    5. 'gap' → logprob: -3.86244797706604
    6. '
' → logprob: -3.86244797706604
    7. 'point' → logprob: -3.98744797706604
    8. 'points' → logprob: -4.112447738647461
    9. 'start' → logprob: -4.237447738647461
    10. '#' → logprob: -4.487447738647461

Token 863: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5057225227355957
    2. '
' → logprob: -1.5057225227355957
    3. '.' → logprob: -2.8807225227355957
    4. ',' → logprob: -3.2557225227355957
    5. 'g' → logprob: -4.505722522735596
    6. '```' → logprob: -4.505722522735596
    7. ',
' → logprob: -4.880722522735596
    8. '#' → logprob: -4.880722522735596
    9. '    
' → logprob: -4.880722522735596
    10. 'prev' → logprob: -5.005722522735596

Token 864: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3801118731498718
    2. '
' → logprob: -1.7551119327545166
    3. 'prev' → logprob: -2.7551119327545166
    4. 'g' → logprob: -3.6301119327545166
    5. '    
' → logprob: -4.2551116943359375
    6. '#' → logprob: -4.8801116943359375
    7. 'gap' → logprob: -4.8801116943359375
    8. 'last' → logprob: -5.0051116943359375
    9. 'start' → logprob: -5.8801116943359375
    10. ',' → logprob: -5.8801116943359375

Token 865: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4478231370449066
    2. '   ' → logprob: -2.1978230476379395
    3. '#' (adapté à ' #') → logprob: -2.5728230476379395
    4. 'last' → logprob: -2.9478230476379395
    5. 'prev' → logprob: -3.1978230476379395
    6. 'segments' → logprob: -3.3228230476379395
    7. '
' → logprob: -3.8228230476379395
    8. 'interval' → logprob: -4.8228230476379395
    9. 'gap' → logprob: -6.1978230476379395
    10. 'all' → logprob: -6.3228230476379395

Token 866: ' plus' (ID: 2932)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2205456644296646
    2. 'prev' → logprob: -2.345545768737793
    3. 'last' → logprob: -3.345545768737793
    4. '#' → logprob: -3.970545768737793
    5. 'gap' → logprob: -4.345545768737793
    6. 'segments' → logprob: -4.470545768737793
    7. 'interval' → logprob: -5.095545768737793
    8. 'fav' → logprob: -5.845545768737793
    9. '
' → logprob: -6.220545768737793
    10. 'all' → logprob: -6.470545768737793

Token 867: ' count' (ID: 3605)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2852643728256226
    2. '#' → logprob: -1.4102643728256226
    3. '[(' → logprob: -2.160264492034912
    4. '[' → logprob: -2.785264492034912
    5. 'c' → logprob: -3.035264492034912
    6. 'len' → logprob: -3.410264492034912
    7. '[]' → logprob: -3.660264492034912
    8. '[len' → logprob: -3.660264492034912
    9. 'before' → logprob: -4.035264492034912
    10. 'all' → logprob: -4.035264492034912

Token 868: ' fav' (ID: 11726)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4018498957157135
    2. '=' → logprob: -1.4018498659133911
    3. 'total' → logprob: -3.2768499851226807
    4. 'rest' → logprob: -5.026849746704102
    5. '
' → logprob: -5.151849746704102
    6. '_total' → logprob: -5.776849746704102
    7. 's' → logprob: -5.901849746704102
    8. '#' → logprob: -6.276849746704102
    9. ' +=' → logprob: -6.276849746704102
    10. 'outside' → logprob: -6.401849746704102

Token 869: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5243726968765259
    2. 'g' → logprob: -1.8993726968765259
    3. '
' → logprob: -2.3993725776672363
    4. 'count' → logprob: -2.3993725776672363
    5. '#' → logprob: -2.5243725776672363
    6. 'last' → logprob: -2.7743725776672363
    7. 'selected' → logprob: -2.8993725776672363
    8. 'total' → logprob: -3.2743725776672363
    9. 'res' → logprob: -3.3993725776672363
    10. 'segments' → logprob: -3.3993725776672363

Token 870: ':
' (ID: 734)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.6652588844299316
    2. 'result' → logprob: -1.6652588844299316
    3. '
' → logprob: -1.9152588844299316
    4. 'dp' → logprob: -1.9152588844299316
    5. 'total' → logprob: -2.0402588844299316
    6. 'count' → logprob: -2.5402588844299316
    7. 'selected' → logprob: -3.2902588844299316
    8. '   ' → logprob: -3.9152588844299316
    9. 'max' → logprob: -4.290258884429932
    10. 'ans' → logprob: -4.790258884429932

Token 871: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8039417862892151
    2. 'count' → logprob: -1.8039417266845703
    3. '   ' → logprob: -2.4289417266845703
    4. 'res' → logprob: -2.4289417266845703
    5. 'max' → logprob: -2.6789417266845703
    6. 'result' → logprob: -2.9289417266845703
    7. 'dp' → logprob: -3.9289417266845703
    8. 'selected' → logprob: -4.05394172668457
    9. '
' → logprob: -4.17894172668457
    10. 'ans' → logprob: -5.05394172668457

Token 872: ' total' (ID: 3609)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.7094016075134277
    2. 'total' (adapté à ' total') → logprob: -1.9594016075134277
    3. '
' → logprob: -2.0844016075134277
    4. '   ' → logprob: -2.3344016075134277
    5. 'last' → logprob: -2.3344016075134277
    6. 'dp' → logprob: -2.5844016075134277
    7. 'res' → logprob: -2.5844016075134277
    8. 'count' → logprob: -3.0844016075134277
    9. 'result' → logprob: -3.2094016075134277
    10. 'selected' → logprob: -3.4594016075134277

Token 873: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34920382499694824
    2. '_count' → logprob: -1.9742038249969482
    3. '=' → logprob: -2.0992038249969482
    4. '_' → logprob: -4.349204063415527
    5. '_selected' → logprob: -4.349204063415527
    6. '_program' → logprob: -5.099204063415527
    7. '_max' → logprob: -8.224204063415527
    8. '_f' → logprob: -8.599204063415527
    9. '_cnt' → logprob: -8.599204063415527
    10. '_time' → logprob: -9.599204063415527

Token 874: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08965964615345001
    2. 'P' → logprob: -2.4646596908569336
    3. ' len' → logprob: -7.339659690856934
    4. ' P' → logprob: -9.714659690856934
    5. '   ' → logprob: -12.464659690856934
    6. '(len' → logprob: -12.839659690856934
    7. '[len' → logprob: -13.839659690856934
    8. 'p' → logprob: -14.214659690856934
    9. ' ' → logprob: -14.589659690856934
    10. '=len' → logprob: -14.714659690856934

Token 875: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -9.984787902794778e-05
    2. 'f' → logprob: -9.375100135803223
    3. '(c' → logprob: -11.375100135803223
    4. 'c' → logprob: -12.875100135803223
    5. 'fav' → logprob: -14.625100135803223
    6. '(' → logprob: -15.125100135803223
    7. '	f' → logprob: -16.375099182128906
    8. ' (' → logprob: -16.750099182128906
    9. '(p' → logprob: -17.250099182128906
    10. '[f' → logprob: -17.375099182128906

Token 876: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.6949108242988586
    2. 'avs' → logprob: -0.6949108242988586
    3. 'avorites' → logprob: -7.444911003112793
    4. 'fav' → logprob: -8.319911003112793
    5. '_sorted' → logprob: -8.444911003112793
    6. 's' → logprob: -8.694911003112793
    7. 'c' → logprob: -9.569911003112793
    8. 'avored' → logprob: -9.944911003112793
    9. 'avor' → logprob: -10.069911003112793
    10. 'avors' → logprob: -10.194911003112793

Token 877: '_sorted' (ID: 104993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36161333322525024
    2. '_set' → logprob: -1.4866132736206055
    3. '_sorted' → logprob: -2.6116132736206055
    4. '_inter' → logprob: -6.2366132736206055
    5. 'sorted' → logprob: -7.2366132736206055
    6. 'f' → logprob: -7.4866132736206055
    7. '_' → logprob: -8.361613273620605
    8. ')' → logprob: -8.736613273620605
    9. 'set' → logprob: -9.111613273620605
    10. '_s' → logprob: -10.486613273620605

Token 878: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001706963055767119
    2. ')
' → logprob: -6.376707077026367
    3. ' )' → logprob: -12.876707077026367
    4. ')
' → logprob: -14.126707077026367
    5. ')#' → logprob: -14.751707077026367
    6. ')+' → logprob: -14.876707077026367
    7. ')

' → logprob: -15.626707077026367
    8. '))' → logprob: -15.751707077026367
    9. '   ' → logprob: -16.376707077026367
    10. '#' → logprob: -16.751707077026367

Token 879: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6026162505149841
    2. 'prev' → logprob: -1.477616310119629
    3. '   ' → logprob: -1.977616310119629
    4. 'last' → logprob: -2.727616310119629
    5. '    
' → logprob: -4.852616310119629
    6. 'current' → logprob: -5.477616310119629
    7. 'g' → logprob: -6.602616310119629
    8. 'start' → logprob: -6.852616310119629
    9. '#' → logprob: -7.102616310119629
    10. 'end' → logprob: -7.352616310119629

Token 880: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.1844908446073532
    2. 'last' → logprob: -2.059490919113159
    3. 'g' → logprob: -3.559490919113159
    4. '#' (adapté à ' #') → logprob: -5.05949068069458
    5. 'points' → logprob: -6.43449068069458
    6. 'segments' → logprob: -6.80949068069458
    7. 'interval' → logprob: -6.93449068069458
    8. 'end' → logprob: -7.68449068069458
    9. 'gap' → logprob: -7.93449068069458
    10. 'previous' → logprob: -8.809491157531738

Token 881: ' get' (ID: 717)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.7590579986572266
    2. 'prev' → logprob: -0.7590579986572266
    3. 'g' → logprob: -4.009057998657227
    4. 'dp' → logprob: -4.259057998657227
    5. '#' → logprob: -5.009057998657227
    6. 'segments' → logprob: -5.259057998657227
    7. 'all' → logprob: -6.009057998657227
    8. 'interval' → logprob: -6.009057998657227
    9. 'points' → logprob: -6.134057998657227
    10. 'idx' → logprob: -6.259057998657227

Token 882: ' all' (ID: 722)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7843925356864929
    2. 'g' → logprob: -1.2843925952911377
    3. 'last' → logprob: -2.4093925952911377
    4. '#' → logprob: -2.7843925952911377
    5. 'interval' → logprob: -2.7843925952911377
    6. 'segments' → logprob: -3.2843925952911377
    7. 'all' → logprob: -5.034392356872559
    8. 'merged' → logprob: -6.409392356872559
    9. 'available' → logprob: -6.784392356872559
    10. 'gap' → logprob: -7.159392356872559

Token 883: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8754056692123413
    2. 'interval' → logprob: -1.6254056692123413
    3. 'points' → logprob: -2.000405788421631
    4. 'times' → logprob: -2.250405788421631
    5. 'non' → logprob: -2.875405788421631
    6. 'segments' → logprob: -3.375405788421631
    7. '#' → logprob: -4.250405788421631
    8. 'end' → logprob: -4.250405788421631
    9. ' intervals' → logprob: -5.500405788421631
    10. 'ends' → logprob: -5.500405788421631

Token 884: ' intervals' (ID: 49900)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.8826996088027954
    2. ' =' → logprob: -1.0076996088027954
    3. '_non' → logprob: -2.507699489593506
    4. '.append' → logprob: -3.257699489593506
    5. '   ' → logprob: -4.257699489593506
    6. 'idx' → logprob: -4.507699489593506
    7. ',' → logprob: -4.632699489593506
    8. '=' → logprob: -4.882699489593506
    9. 'interval' → logprob: -5.257699489593506
    10. 'not' → logprob: -5.382699489593506

Token 885: ' which' (ID: 1118)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.5749161839485168
    2. '   ' → logprob: -1.074916124343872
    3. 'c' → logprob: -3.574916124343872
    4. ' =' → logprob: -3.824916124343872
    5. 'interval' → logprob: -4.824916362762451
    6. 'idx' → logprob: -4.824916362762451
    7. 'all' → logprob: -5.074916362762451
    8. ',' → logprob: -5.324916362762451
    9. 'for' → logprob: -5.949916362762451
    10. '=' → logprob: -6.574916362762451

Token 886: ' do' (ID: 621)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5362316966056824
    2. ' are' → logprob: -1.2862317562103271
    3. 'do' → logprob: -2.786231756210327
    4. 'not' → logprob: -4.036231517791748
    5. 'have' → logprob: -4.286231517791748
    6. 'start' → logprob: -4.536231517791748
    7. ' do' → logprob: -4.661231517791748
    8. 'don't' → logprob: -5.036231517791748
    9. 'end' → logprob: -5.411231517791748
    10. ' have' → logprob: -5.536231517791748

Token 887: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00043794067460112274
    2. ' not' → logprob: -7.7504377365112305
    3. '_not' → logprob: -12.75043773651123
    4. '   ' → logprob: -13.87543773651123
    5. '```' → logprob: -13.87543773651123
    6. 'c' → logprob: -14.00043773651123
    7. '	not' → logprob: -15.12543773651123
    8. '(not' → logprob: -15.25043773651123
    9. 'x' → logprob: -15.75043773651123
    10. '...' → logprob: -16.000438690185547

Token 888: ' overlap' (ID: 56631)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.20508767664432526
    2. ' conflict' → logprob: -2.580087661743164
    3. 'over' → logprob: -2.705087661743164
    4. ' overlap' → logprob: -4.080087661743164
    5. 'name' → logprob: -5.080087661743164
    6. 'in' → logprob: -5.080087661743164
    7. 'flag' → logprob: -5.705087661743164
    8. 'have' → logprob: -5.830087661743164
    9. 'bel' → logprob: -6.580087661743164
    10. '
' → logprob: -6.955087661743164

Token 889: ' any' (ID: 1062)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.13570129871368408
    2. '=' → logprob: -2.8857011795043945
    3. ' =' → logprob: -2.8857011795043945
    4. '_with' → logprob: -5.1357011795043945
    5. ' with' → logprob: -5.6357011795043945
    6. '   ' → logprob: -7.5107011795043945
    7. 'before' → logprob: -7.6357011795043945
    8. '=[]
' → logprob: -7.6357011795043945
    9. '=
' → logprob: -7.8857011795043945
    10. 'for' → logprob: -8.010701179504395

Token 890: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.048682067543268204
    2. 'f' → logprob: -3.9236819744110107
    3. 'with' → logprob: -4.29868221282959
    4. ' fav' → logprob: -5.29868221282959
    5. ' with' → logprob: -5.54868221282959
    6. '   ' → logprob: -7.04868221282959
    7. 'candidate' → logprob: -7.04868221282959
    8. 'interval' → logprob: -7.29868221282959
    9. 'for' → logprob: -7.79868221282959
    10. ' of' → logprob: -8.17368221282959

Token 891: ' intervals' (ID: 49900)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9879973530769348
    2. '   ' → logprob: -1.98799729347229
    3. 's' → logprob: -2.48799729347229
    4. 'interval' → logprob: -2.98799729347229
    5. 'non' → logprob: -3.11299729347229
    6. '_sorted' → logprob: -3.11299729347229
    7. '_non' → logprob: -3.23799729347229
    8. 'program' → logprob: -3.36299729347229
    9. '_set' → logprob: -3.48799729347229
    10. 'and' → logprob: -3.98799729347229

Token 892: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45428454875946045
    2. 'non' → logprob: -1.3292845487594604
    3. 'outside' → logprob: -3.20428466796875
    4. 'g' → logprob: -3.32928466796875
    5. ',' → logprob: -4.95428466796875
    6. 'gap' → logprob: -5.57928466796875
    7. 'filtered' → logprob: -6.70428466796875
    8. '    
' → logprob: -6.82928466796875
    9. 'not' → logprob: -7.07928466796875
    10. 'and' → logprob: -7.20428466796875

Token 893: 'already' (ID: 89136)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.1561273336410522
    2. ')' → logprob: -1.2811273336410522
    3. 'and' → logprob: -1.4061273336410522
    4. ' and' → logprob: -3.031127452850342
    5. '   ' → logprob: -3.656127452850342
    6. ',' → logprob: -3.656127452850342
    7. '),' → logprob: -4.781127452850342
    8. '
' → logprob: -4.906127452850342
    9. 'except' → logprob: -5.156127452850342
    10. '#' → logprob: -5.281127452850342

Token 894: ' filtered' (ID: 31972)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5602511167526245
    2. 'excluded' → logprob: -1.6852511167526245
    3. 'conf' → logprob: -2.060251235961914
    4. 'added' → logprob: -2.185251235961914
    5. 'done' → logprob: -2.185251235961914
    6. 'filtered' → logprob: -2.560251235961914
    7. 'included' → logprob: -3.060251235961914
    8. 'removed' → logprob: -3.935251235961914
    9. 'selected' → logprob: -4.310251235961914
    10. 'over' → logprob: -4.810251235961914

Token 895: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7150136828422546
    2. ')
' → logprob: -0.7150136828422546
    3. '   ' → logprob: -5.21501350402832
    4. '):
' → logprob: -5.84001350402832
    5. '),' → logprob: -5.84001350402832
    6. 'and' → logprob: -5.96501350402832
    7. 'with' → logprob: -6.21501350402832
    8. ' yet' → logprob: -6.59001350402832
    9. 'for' → logprob: -6.84001350402832
    10. 'yet' → logprob: -7.09001350402832

Token 896: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06650298833847046
    2. '
' → logprob: -3.6915030479431152
    3. 'g' → logprob: -4.066503047943115
    4. 'segments' → logprob: -5.191503047943115
    5. '#' → logprob: -5.441503047943115
    6. '    
' → logprob: -5.816503047943115
    7. 'interval' → logprob: -6.441503047943115
    8. ',' → logprob: -6.566503047943115
    9. 'last' → logprob: -6.691503047943115
    10. 'prev' → logprob: -7.066503047943115

Token 897: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.528983473777771
    2. 'g' → logprob: -2.4039835929870605
    3. 'c' → logprob: -2.6539835929870605
    4. '   ' → logprob: -2.9039835929870605
    5. 'last' → logprob: -3.4039835929870605
    6. 'segments' → logprob: -3.4039835929870605
    7. 'interval' → logprob: -4.1539835929870605
    8. 'others' → logprob: -4.1539835929870605
    9. '#' → logprob: -4.2789835929870605
    10. 'dp' → logprob: -4.4039835929870605

Token 898: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.005478029139339924
    2. '_candidates' → logprob: -6.0054779052734375
    3. '_c' → logprob: -6.1304779052734375
    4. '   ' → logprob: -7.5054779052734375
    5. 'f' → logprob: -8.630477905273438
    6. 'c' → logprob: -9.880477905273438
    7. '_' → logprob: -11.505477905273438
    8. 'fav' → logprob: -11.630477905273438
    9. '_non' → logprob: -12.130477905273438
    10. '-f' → logprob: -13.130477905273438

Token 899: 'av' (ID: 407)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0129461288452148
    2. 'avs' → logprob: -1.7629461288452148
    3. 'or' → logprob: -1.8879461288452148
    4. 'av' → logprob: -2.012946128845215
    5. '_candidates' → logprob: -2.012946128845215
    6. 'for' → logprob: -4.262946128845215
    7. '_c' → logprob: -4.637946128845215
    8. '_st' → logprob: -5.637946128845215
    9. 'st' → logprob: -5.762946128845215
    10. '=' → logprob: -6.137946128845215

Token 900: '_c' (ID: 1303)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6150425672531128
    2. '_candidates' → logprob: -1.2400425672531128
    3. 's' → logprob: -2.2400426864624023
    4. '=' → logprob: -2.8650426864624023
    5. '_non' → logprob: -6.115042686462402
    6. '_inter' → logprob: -6.615042686462402
    7. '_' → logprob: -6.865042686462402
    8. '_only' → logprob: -7.240042686462402
    9. '_c' → logprob: -7.740042686462402
    10. '_program' → logprob: -7.990042686462402

Token 901: 'ands' (ID: 3460)
  Prédit: 'andidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.1997702419757843
    2. 'ands' → logprob: -1.824770212173462
    3. 'and' → logprob: -3.949770212173462
    4. ' =' → logprob: -8.449769973754883
    5. 'andi' → logprob: -9.199769973754883
    6. 'andidate' → logprob: -9.699769973754883
    7. '=' → logprob: -10.199769973754883
    8. 'c' → logprob: -10.449769973754883
    9. 'an' → logprob: -10.949769973754883
    10. 'andid' → logprob: -11.449769973754883

Token 902: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02498464286327362
    2. ' =' → logprob: -4.024984836578369
    3. '=[]' → logprob: -5.024984836578369
    4. '=[]
' → logprob: -8.649984359741211
    5. '=[' → logprob: -9.899984359741211
    6. '=
' → logprob: -12.149984359741211
    7. '[]' → logprob: -13.149984359741211
    8. ']' → logprob: -13.774984359741211
    9. 'for' → logprob: -13.774984359741211
    10. '=[]
' → logprob: -13.774984359741211

Token 903: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.34352362155914307
    2. '[' → logprob: -1.843523621559143
    3. '[c' → logprob: -2.3435235023498535
    4. '[i' → logprob: -3.8435235023498535
    5. '[x' → logprob: -5.7185235023498535
    6. '[p' → logprob: -6.4685235023498535
    7. '[t' → logprob: -6.5935235023498535
    8. '[name' → logprob: -7.0935235023498535
    9. '[type' → logprob: -7.2185235023498535
    10. '[s' → logprob: -7.4685235023498535

Token 904: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05766460299491882
    2. '(c' → logprob: -3.057664632797241
    3. 'x' → logprob: -5.557664394378662
    4. '(p' → logprob: -6.182664394378662
    5. 'p' → logprob: -6.932664394378662
    6. '(i' → logprob: -7.182664394378662
    7. '(x' → logprob: -7.557664394378662
    8. 'cand' → logprob: -7.807664394378662
    9. '(' → logprob: -8.30766487121582
    10. '(st' → logprob: -9.30766487121582

Token 905: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25194141268730164
    2. ' for' → logprob: -1.501941442489624
    3. '   ' → logprob: -11.501941680908203
    4. ' ' → logprob: -14.376941680908203
    5. '	for' → logprob: -14.376941680908203
    6. '[' → logprob: -14.751941680908203
    7. '
' → logprob: -15.001941680908203
    8. '  ' → logprob: -16.626941680908203
    9. ')' → logprob: -17.251941680908203
    10. '    ' → logprob: -17.251941680908203

Token 906: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.0126840758603066e-05
    2. ' c' → logprob: -10.125040054321289
    3. ' in' → logprob: -17.62504005432129
    4. 'in' → logprob: -18.37504005432129
    5. 'x' → logprob: -18.75004005432129
    6. 'cand' → logprob: -18.75004005432129
    7. '_' → logprob: -19.50004005432129
    8. '(c' → logprob: -19.62504005432129
    9. '	c' → logprob: -19.75004005432129
    10. '
' → logprob: -19.75004005432129

Token 907: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017384875565767288
    2. 'in' → logprob: -4.142385005950928
    3. 'c' → logprob: -6.642385005950928
    4. ' c' → logprob: -10.26738452911377
    5. ' ' → logprob: -12.39238452911377
    6. '   ' → logprob: -13.01738452911377
    7. '  ' → logprob: -13.89238452911377
    8. '
' → logprob: -14.01738452911377
    9. 'not' → logprob: -14.64238452911377
    10. 'i' → logprob: -14.89238452911377

Token 908: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00020473242329899222
    2. ' candidates' → logprob: -8.500205039978027
    3. 'andidates' → logprob: -14.875205039978027
    4. ' c' → logprob: -15.125205039978027
    5. 'cand' → logprob: -15.500205039978027
    6. 'candidate' → logprob: -16.12520408630371
    7. '   ' → logprob: -16.62520408630371
    8. '[c' → logprob: -16.62520408630371
    9. '
' → logprob: -17.00020408630371
    10. '...' → logprob: -17.75020408630371

Token 909: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04858975484967232
    2. 'if' → logprob: -3.0485897064208984
    3. '   ' → logprob: -13.548589706420898
    4. ' c' → logprob: -15.298589706420898
    5. '	if' → logprob: -15.673589706420898
    6. '[' → logprob: -16.2985897064209
    7. '       ' → logprob: -16.2985897064209
    8. ' ' → logprob: -16.4235897064209
    9. '    ' → logprob: -16.4235897064209
    10. '
' → logprob: -16.9235897064209

Token 910: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.017724208533763885
    2. 'c' → logprob: -4.51772403717041
    3. ' not' → logprob: -5.01772403717041
    4. '(not' → logprob: -10.51772403717041
    5. ' c' → logprob: -12.01772403717041
    6. '	not' → logprob: -14.89272403717041
    7. '!' → logprob: -15.14272403717041
    8. '
' → logprob: -16.017724990844727
    9. '(c' → logprob: -16.142724990844727
    10. '_not' → logprob: -16.267724990844727

Token 911: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00408397801220417
    2. ' c' → logprob: -5.50408411026001
    3. '_' → logprob: -12.379083633422852
    4. '_[' → logprob: -14.254083633422852
    5. '_c' → logprob: -15.004083633422852
    6. '	c' → logprob: -15.504083633422852
    7. '   ' → logprob: -16.25408363342285
    8. '[' → logprob: -17.37908363342285
    9. ' _' → logprob: -17.87908363342285
    10. '_]' → logprob: -18.00408363342285

Token 912: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006272526225075126
    2. '[-' → logprob: -7.375627040863037
    3. '[c' → logprob: -14.625627517700195
    4. ' [' → logprob: -16.125627517700195
    5. '
' → logprob: -16.500627517700195
    6. 'c' → logprob: -17.750627517700195
    7. '[len' → logprob: -18.000627517700195
    8. '\[' → logprob: -18.125627517700195
    9. '[
' → logprob: -18.250627517700195
    10. '```' → logprob: -18.500627517700195

Token 913: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0016436419682577252
    2. '-' → logprob: -6.876643657684326
    3. '[' → logprob: -7.501643657684326
    4. '
' → logprob: -10.001643180847168
    5. '```' → logprob: -12.376643180847168
    6. '[-' → logprob: -13.251643180847168
    7. ' ' → logprob: -13.626643180847168
    8. '(' → logprob: -14.001643180847168
    9. '
' → logprob: -14.126643180847168
    10. '   ' → logprob: -14.439143180847168

Token 914: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003107726341113448
    2. ' ]' → logprob: -5.87810754776001
    3. ')]' → logprob: -9.128108024597168
    4. ' and' → logprob: -9.628108024597168
    5. ']
' → logprob: -10.128108024597168
    6. ']]' → logprob: -10.253108024597168
    7. ']

' → logprob: -11.628108024597168
    8. ']==' → logprob: -12.003108024597168
    9. '}]' → logprob: -12.253108024597168
    10. ']}' → logprob: -12.378108024597168

Token 915: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23568029701709747
    2. '
' → logprob: -1.860680341720581
    3. '#' → logprob: -3.860680341720581
    4. '    
' → logprob: -3.985680341720581
    5. 'segments' → logprob: -5.610680103302002
    6. 'prev' → logprob: -6.360680103302002
    7. 'def' → logprob: -6.360680103302002
    8. 'non' → logprob: -6.985680103302002
    9. 'g' → logprob: -6.985680103302002
    10. 'interval' → logprob: -7.360680103302002

Token 916: ' #' (ID: 1069)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.5188359022140503
    2. '#' (adapté à ' #') → logprob: -1.6438359022140503
    3. 'points' → logprob: -1.7688359022140503
    4. 'import' → logprob: -2.51883602142334
    5. 'non' → logprob: -2.64383602142334
    6. 'def' → logprob: -3.14383602142334
    7. 'g' → logprob: -3.26883602142334
    8. 'last' → logprob: -3.51883602142334
    9. 'segments' → logprob: -3.64383602142334
    10. 'prev' → logprob: -3.76883602142334

Token 917: ' add' (ID: 1147)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.400605320930481
    2. 'last' → logprob: -2.0256052017211914
    3. '#' → logprob: -2.1506052017211914
    4. 'points' → logprob: -2.2756052017211914
    5. 'def' → logprob: -2.4006052017211914
    6. 'fav' → logprob: -2.6506052017211914
    7. 'import' → logprob: -2.7756052017211914
    8. 'pos' → logprob: -3.0256052017211914
    9. 'interval' → logprob: -3.2756052017211914
    10. 'segments' → logprob: -4.150605201721191

Token 918: ' sentinel' (ID: 180334)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' non' → logprob: -1.9766881465911865
    2. ' a' → logprob: -2.2266881465911865
    3. ' an' → logprob: -2.2266881465911865
    4. 'import' → logprob: -2.6016881465911865
    5. ' to' → logprob: -2.7266881465911865
    6. 'all' → logprob: -2.8516881465911865
    7. 'fav' → logprob: -2.8516881465911865
    8. 'non' → logprob: -3.1016881465911865
    9. ' all' → logprob: -3.1016881465911865
    10. 'sent' → logprob: -3.2266881465911865

Token 919: ' fav' (ID: 11726)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.9569295644760132
    2. 'non' → logprob: -1.0819295644760132
    3. ' =' → logprob: -2.0819296836853027
    4. '(' → logprob: -2.4569296836853027
    5. '=(-' → logprob: -4.081929683685303
    6. 'c' → logprob: -4.331929683685303
    7. '((-' → logprob: -4.456929683685303
    8. 'sent' → logprob: -5.831929683685303
    9. '((' → logprob: -5.831929683685303
    10. 'interval' → logprob: -5.956929683685303

Token 920: ' intervals' (ID: 49900)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.09433605521917343
    2. 'interval' → logprob: -3.9693360328674316
    3. 's' → logprob: -4.219336032867432
    4. '(' → logprob: -4.219336032867432
    5. '_inter' → logprob: -4.344336032867432
    6. ' intervals' → logprob: -5.594336032867432
    7. '   ' → logprob: -5.594336032867432
    8. 'sorted' → logprob: -5.594336032867432
    9. '((' → logprob: -5.594336032867432
    10. '(-' → logprob: -5.719336032867432

Token 921: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5596804022789001
    2. 'fav' → logprob: -1.559680461883545
    3. ' =' → logprob: -1.934680461883545
    4. '(-' → logprob: -4.059680461883545
    5. '((-' → logprob: -4.309680461883545
    6. '=(-' → logprob: -4.934680461883545
    7. ' (-' → logprob: -5.434680461883545
    8. '=' → logprob: -5.434680461883545
    9. '
' → logprob: -5.434680461883545
    10. '(' → logprob: -5.809680461883545

Token 922: ' start' (ID: 1604)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4138460159301758
    2. '(-' → logprob: -1.1638460159301758
    3. 'day' → logprob: -4.663846015930176
    4. '0' → logprob: -5.413846015930176
    5. '-' → logprob: -5.413846015930176
    6. '(day' → logprob: -5.788846015930176
    7. 'start' → logprob: -6.288846015930176
    8. 'begin' → logprob: -6.663846015930176
    9. '(start' → logprob: -7.663846015930176
    10. '((' → logprob: -8.163846015930176

Token 923: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3305163383483887
    2. ',' → logprob: -1.5805163383483887
    3. '(-' → logprob: -1.8305163383483887
    4. ' and' → logprob: -2.4555163383483887
    5. '=(-' → logprob: -2.8305163383483887
    6. '=' → logprob: -2.9555163383483887
    7. '((-' → logprob: -2.9555163383483887
    8. ' (-' → logprob: -3.4555163383483887
    9. '(' → logprob: -4.080516338348389
    10. 'and' → logprob: -4.330516338348389

Token 924: ' end' (ID: 1268)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03621132671833038
    2. '(-' → logprob: -3.5362112522125244
    3. '(end' → logprob: -5.9112114906311035
    4. ' (' → logprob: -6.1612114906311035
    5. '((' → logprob: -7.6612114906311035
    6. 'end' → logprob: -7.7862114906311035
    7. '[(' → logprob: -7.9112114906311035
    8. ' (-' → logprob: -9.911211013793945
    9. '(day' → logprob: -9.911211013793945
    10. '((-' → logprob: -9.911211013793945

Token 925: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4807193875312805
    2. 'sent' → logprob: -2.2307193279266357
    3. ' =' → logprob: -2.3557193279266357
    4. '
' → logprob: -2.7307193279266357
    5. 'fav' → logprob: -2.9807193279266357
    6. '(-' → logprob: -3.6057193279266357
    7. '((-' → logprob: -4.605719566345215
    8. '=(-' → logprob: -4.980719566345215
    9. '=' → logprob: -6.105719566345215
    10. ',' → logprob: -6.230719566345215

Token 926: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2476905584335327
    2. 'fav' → logprob: -1.3726905584335327
    3. '(-' → logprob: -1.9976905584335327
    4. '((-' → logprob: -2.7476906776428223
    5. 'sent' → logprob: -2.9976906776428223
    6. '   ' → logprob: -3.3726906776428223
    7. '[(' → logprob: -3.3726906776428223
    8. '=' → logprob: -3.6226906776428223
    9. '[-' → logprob: -3.9976906776428223
    10. '=(-' → logprob: -4.122690677642822

Token 927: ' starts' (ID: 13217)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.010901616886258125
    2. '(-' → logprob: -5.63590145111084
    3. 'sent' → logprob: -6.13590145111084
    4. 'import' → logprob: -6.38590145111084
    5. '   ' → logprob: -7.13590145111084
    6. '(' → logprob: -7.88590145111084
    7. '[-' → logprob: -8.01090145111084
    8. 'prev' → logprob: -8.01090145111084
    9. '((-' → logprob: -8.26090145111084
    10. '[(' → logprob: -8.76090145111084

Token 928: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09444551169872284
    2. ' =' → logprob: -2.4694454669952393
    3. '=[' → logprob: -5.344445705413818
    4. ',' → logprob: -7.344445705413818
    5. '=[]' → logprob: -10.09444522857666
    6. ' =[' → logprob: -12.09444522857666
    7. '=
' → logprob: -12.84444522857666
    8. '=[]
' → logprob: -12.84444522857666
    9. '=[
' → logprob: -12.96944522857666
    10. '=(-' → logprob: -13.09444522857666

Token 929: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3869035243988037
    2. '[' → logprob: -1.1369035243988037
    3. '[(' → logprob: -11.011903762817383
    4. ' [' → logprob: -12.261903762817383
    5. ' [-' → logprob: -12.261903762817383
    6. '   ' → logprob: -13.761903762817383
    7. '[
' → logprob: -14.136903762817383
    8. '0' → logprob: -14.261903762817383
    9. '([-' → logprob: -14.636903762817383
    10. '[min' → logprob: -14.636903762817383

Token 930: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33576500415802
    2. 'float' → logprob: -1.96076500415802
    3. '144' → logprob: -2.0857648849487305
    4. '10' → logprob: -4.7107648849487305
    5. '100' → logprob: -5.4607648849487305
    6. '480' → logprob: -6.3357648849487305
    7. '60' → logprob: -6.4607648849487305
    8. '30' → logprob: -6.9607648849487305
    9. 'sys' → logprob: -7.3357648849487305
    10. '999' → logprob: -7.4607648849487305

Token 931: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7611150741577148
    2. '**' → logprob: -1.1361150741577148
    3. '00' → logprob: -1.7611150741577148
    4. ',' → logprob: -4.011115074157715
    5. ']' → logprob: -4.761115074157715
    6. '0' → logprob: -5.011115074157715
    7. '144' → logprob: -6.136115074157715
    8. '^' → logprob: -6.511115074157715
    9. ']
' → logprob: -7.511115074157715
    10. '   ' → logprob: -7.636115074157715

Token 932: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03646940365433693
    2. '10' → logprob: -3.4114694595336914
    3. '15' → logprob: -6.411469459533691
    4. '8' → logprob: -7.536469459533691
    5. '7' → logprob: -7.911469459533691
    6. '12' → logprob: -8.411469459533691
    7. '6' → logprob: -10.536469459533691
    8. '11' → logprob: -11.911469459533691
    9. '14' → logprob: -12.161469459533691
    10. '18' → logprob: -12.286469459533691

Token 933: ']+' (ID: 15344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013721730560064316
    2. ']' → logprob: -4.888721942901611
    3. ']
' → logprob: -5.638721942901611
    4. ',
' → logprob: -7.388721942901611
    5. ',end' → logprob: -7.388721942901611
    6. ',-' → logprob: -7.638721942901611
    7. ',(' → logprob: -7.888721942901611
    8. ' ,' → logprob: -9.013721466064453
    9. '0' → logprob: -9.263721466064453
    10. ',total' → logprob: -9.638721466064453

Token 934: '[' (ID: 58)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.018533727154135704
    2. '[' → logprob: -4.018533706665039
    3. '[s' → logprob: -8.768533706665039
    4. '[start' → logprob: -9.143533706665039
    5. '[i' → logprob: -9.768533706665039
    6. '[t' → logprob: -10.893533706665039
    7. '[v' → logprob: -11.643533706665039
    8. ' [' → logprob: -11.768533706665039
    9. '[x' → logprob: -12.393533706665039
    10. '[a' → logprob: -12.643533706665039

Token 935: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6799923777580261
    2. 'i' → logprob: -1.554992437362671
    3. 'x' → logprob: -2.179992437362671
    4. 'fi' → logprob: -2.679992437362671
    5. 'fs' → logprob: -3.179992437362671
    6. 'iv' → logprob: -4.179992198944092
    7. 'fv' → logprob: -4.179992198944092
    8. 'interval' → logprob: -4.304992198944092
    9. 'fav' → logprob: -5.179992198944092
    10. 'end' → logprob: -5.429992198944092

Token 936: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03279295563697815
    2. 's' → logprob: -4.282793045043945
    3. 'i' → logprob: -5.032793045043945
    4. 'v' → logprob: -5.157793045043945
    5. '_sorted' → logprob: -6.032793045043945
    6. 'av' → logprob: -6.282793045043945
    7. 'or' → logprob: -7.657793045043945
    8. '[i' → logprob: -8.532793045043945
    9. 'sorted' → logprob: -9.032793045043945
    10. 'iv' → logprob: -9.032793045043945

Token 937: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06199827790260315
    2. '1' → logprob: -2.8119983673095703
    3. '
' → logprob: -11.68699836730957
    4. '[' → logprob: -11.81199836730957
    5. ' ' → logprob: -12.06199836730957
    6. '```' → logprob: -13.43699836730957
    7. '   ' → logprob: -13.68699836730957
    8. 'end' → logprob: -14.24949836730957
    9. ']' → logprob: -14.43699836730957
    10. '
' → logprob: -14.87449836730957

Token 938: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7264024615287781
    2. ' for' → logprob: -0.8514024615287781
    3. ']' → logprob: -2.726402521133423
    4. ']+' → logprob: -3.851402521133423
    5. '+' → logprob: -6.351402282714844
    6. '   ' → logprob: -7.601402282714844
    7. ' ]' → logprob: -8.226402282714844
    8. '-' → logprob: -9.601402282714844
    9. ' +' → logprob: -9.976402282714844
    10. ',' → logprob: -10.351402282714844

Token 939: ' for' (ID: 395)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.5035215616226196
    2. ']' → logprob: -1.2535215616226196
    3. ',' → logprob: -2.25352144241333
    4. ',-' → logprob: -5.87852144241333
    5. ' ]' → logprob: -7.75352144241333
    6. ' ,' → logprob: -8.253521919250488
    7. '<|end|>' → logprob: -8.253521919250488
    8. ' for' → logprob: -8.753521919250488
    9. ',
' → logprob: -8.878521919250488
    10. '
' → logprob: -8.878521919250488

Token 940: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012865942902863026
    2. 'fav' → logprob: -4.387866020202637
    3. ' f' → logprob: -8.012866020202637
    4. '	f' → logprob: -11.012866020202637
    5. ' fav' → logprob: -12.387866020202637
    6. ' ' → logprob: -14.012866020202637
    7. '
' → logprob: -14.012866020202637
    8. 'fid' → logprob: -14.262866020202637
    9. 'favor' → logprob: -14.762866020202637
    10. '   ' → logprob: -15.137866020202637

Token 941: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7749114632606506
    2. ' in' → logprob: -0.7749114632606506
    3. 'f' → logprob: -2.649911403656006
    4. ' f' → logprob: -4.899911403656006
    5. '_f' → logprob: -8.399911880493164
    6. ' ' → logprob: -9.274911880493164
    7. '<|end|>' → logprob: -10.399911880493164
    8. '_' → logprob: -11.399911880493164
    9. '<|end|>' → logprob: -11.524911880493164
    10. '
' → logprob: -11.774911880493164

Token 942: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -4.842555426876061e-06
    2. ' fav' → logprob: -12.875004768371582
    3. '
' → logprob: -14.500004768371582
    4. 'f' → logprob: -14.500004768371582
    5. 'fal' → logprob: -15.250004768371582
    6. '   ' → logprob: -15.375004768371582
    7. 'favor' → logprob: -15.500004768371582
    8. ' ' → logprob: -15.625004768371582
    9. 'fam' → logprob: -16.6250057220459
    10. '  ' → logprob: -16.7500057220459

Token 943: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -7.433829159708694e-05
    2. 'sorted' → logprob: -9.87507438659668
    3. '_inter' → logprob: -11.37507438659668
    4. '
' → logprob: -11.75007438659668
    5. 's' → logprob: -13.75007438659668
    6. ']' → logprob: -14.37507438659668
    7. 'f' → logprob: -14.62507438659668
    8. '_' → logprob: -15.37507438659668
    9. '_s' → logprob: -15.37507438659668
    10. 'Sorted' → logprob: -15.62507438659668

Token 944: ']
' (ID: 1592)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.12958407402038574
    2. ']' → logprob: -2.1295840740203857
    3. '+' → logprob: -7.129584312438965
    4. ' +' → logprob: -7.254584312438965
    5. '+[' → logprob: -7.629584312438965
    6. ' ]' → logprob: -8.004584312438965
    7. '[:-' → logprob: -9.129584312438965
    8. ']-' → logprob: -9.629584312438965
    9. '[-' → logprob: -10.004584312438965
    10. '][-' → logprob: -10.754584312438965

Token 945: '   ' (ID: 271)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.6658801436424255
    2. '
' → logprob: -0.9158801436424255
    3. '+' → logprob: -3.4158802032470703
    4. 'end' → logprob: -4.41588020324707
    5. ' +' → logprob: -4.41588020324707
    6. 'next' → logprob: -5.04088020324707
    7. '   ' → logprob: -5.29088020324707
    8. '+[' → logprob: -5.79088020324707
    9. 'times' → logprob: -6.04088020324707
    10. 'starts' → logprob: -6.16588020324707

Token 946: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' (adapté à ' ends') → logprob: -4.787507714354433e-05
    2. ' ends' → logprob: -10.00004768371582
    3. '   ' → logprob: -14.12504768371582
    4. '#' → logprob: -14.50004768371582
    5. 'for' → logprob: -15.37504768371582
    6. 'end' → logprob: -15.37504768371582
    7. '_' → logprob: -15.50004768371582
    8. 'starts' → logprob: -16.12504768371582
    9. 'interval' → logprob: -16.25004768371582
    10. '
' → logprob: -16.50004768371582

Token 947: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5786346793174744
    2. '=' → logprob: -0.8286346793174744
    3. '=[' → logprob: -5.953634738922119
    4. ' =[' → logprob: -9.328634262084961
    5. '[' → logprob: -13.328634262084961
    6. '=['' → logprob: -13.453634262084961
    7. '=[
' → logprob: -14.203634262084961
    8. '[-' → logprob: -14.453634262084961
    9. 's' → logprob: -15.078634262084961
    10. ')' → logprob: -15.078634262084961

Token 948: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5766544938087463
    2. '[' → logprob: -0.8266544938087463
    3. '   ' → logprob: -8.451654434204102
    4. ' [' → logprob: -8.701654434204102
    5. ' [-' → logprob: -9.076654434204102
    6. '[start' → logprob: -9.326654434204102
    7. '[f' → logprob: -9.951654434204102
    8. ' ' → logprob: -10.576654434204102
    9. '[:-' → logprob: -11.451654434204102
    10. '  ' → logprob: -11.576654434204102

Token 949: 'f' (ID: 69)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.05071643367409706
    2. '-' → logprob: -3.6757164001464844
    3. '[' → logprob: -4.050716400146484
    4. '-f' → logprob: -5.425716400146484
    5. '0' → logprob: -6.925716400146484
    6. '[f' → logprob: -8.175716400146484
    7. ' [-' → logprob: -8.425716400146484
    8. 'f' → logprob: -8.550716400146484
    9. '[s' → logprob: -9.550716400146484
    10. '   ' → logprob: -9.550716400146484

Token 950: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007704580668359995
    2. '(' → logprob: -6.132704734802246
    3. '0' → logprob: -6.132704734802246
    4. '[-' → logprob: -6.257704734802246
    5. '1' → logprob: -7.257704734802246
    6. '=' → logprob: -9.132704734802246
    7. 's' → logprob: -9.257704734802246
    8. 'for' → logprob: -9.757704734802246
    9. '(-' → logprob: -10.007704734802246
    10. '-' → logprob: -10.257704734802246

Token 951: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32667896151542664
    2. '1' → logprob: -1.451678991317749
    3. '[' → logprob: -3.576678991317749
    4. 'i' → logprob: -4.20167875289917
    5. '(' → logprob: -8.201679229736328
    6. '-' → logprob: -8.451679229736328
    7. '   ' → logprob: -8.451679229736328
    8. 'x' → logprob: -8.576679229736328
    9. ' ' → logprob: -8.701679229736328
    10. '[i' → logprob: -9.201679229736328

Token 952: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7301754951477051
    2. ']+' → logprob: -0.7301754951477051
    3. ']-' → logprob: -3.355175495147705
    4. ' ]' → logprob: -7.480175495147705
    5. '-' → logprob: -7.855175495147705
    6. ' for' → logprob: -8.230175018310547
    7. ',' → logprob: -9.605175018310547
    8. 'for' → logprob: -9.730175018310547
    9. ']
' → logprob: -10.605175018310547
    10. '()]' → logprob: -11.230175018310547

Token 953: ' for' (ID: 395)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.03815361112356186
    2. ']' → logprob: -3.288153648376465
    3. ']-' → logprob: -9.663153648376465
    4. ' ]' → logprob: -10.163153648376465
    5. '][-' → logprob: -12.788153648376465
    6. ']+"' → logprob: -13.288153648376465
    7. ']+\' → logprob: -14.163153648376465
    8. ',' → logprob: -14.413153648376465
    9. '+' → logprob: -14.538153648376465
    10. '+]' → logprob: -14.788153648376465

Token 954: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2861970365047455
    2. 'fav' → logprob: -1.4111970663070679
    3. '(' → logprob: -6.161197185516357
    4. ' f' → logprob: -7.286197185516357
    5. ' fav' → logprob: -8.0361967086792
    6. '(-' → logprob: -8.4111967086792
    7. '(f' → logprob: -8.4111967086792
    8. ' in' → logprob: -8.5361967086792
    9. '	f' → logprob: -8.5361967086792
    10. '[-' → logprob: -8.7861967086792

Token 955: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16030587255954742
    2. ' in' → logprob: -1.9103058576583862
    3. '   ' → logprob: -11.285305976867676
    4. ' ' → logprob: -11.535305976867676
    5. '...' → logprob: -11.535305976867676
    6. '_sorted' → logprob: -11.535305976867676
    7. 'for' → logprob: -11.660305976867676
    8. 'f' → logprob: -12.160305976867676
    9. 'i' → logprob: -12.535305976867676
    10. '(' → logprob: -12.535305976867676

Token 956: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0034230698365718126
    2. 'range' → logprob: -6.37842321395874
    3. ' fav' → logprob: -6.50342321395874
    4. ' range' → logprob: -8.503422737121582
    5. '   ' → logprob: -11.753422737121582
    6. 'favor' → logprob: -12.753422737121582
    7. '
' → logprob: -13.128422737121582
    8. 'f' → logprob: -13.878422737121582
    9. '[' → logprob: -14.128422737121582
    10. ' ' → logprob: -14.628422737121582

Token 957: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0013695230009034276
    2. 'sorted' → logprob: -6.876369476318359
    3. 'orted' → logprob: -8.00136947631836
    4. 'ort' → logprob: -14.50136947631836
    5. 'Sorted' → logprob: -14.62636947631836
    6. '_' → logprob: -15.87636947631836
    7. '(sorted' → logprob: -16.00136947631836
    8. '
' → logprob: -16.37636947631836
    9. '[' → logprob: -16.75136947631836
    10. 's' → logprob: -17.00136947631836

Token 958: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.10030921548604965
    2. ']' → logprob: -2.350309133529663
    3. '+' → logprob: -9.975309371948242
    4. ' +' → logprob: -10.975309371948242
    5. ' ]' → logprob: -10.975309371948242
    6. '+[' → logprob: -11.350309371948242
    7. ']+"' → logprob: -12.600309371948242
    8. ']+\' → logprob: -12.975309371948242
    9. '+]' → logprob: -13.475309371948242
    10. '+"]' → logprob: -13.975309371948242

Token 959: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ' [' → logprob: -13.375001907348633
    3. '10' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '[(' → logprob: -18.500001907348633
    6. '[int' → logprob: -18.500001907348633
    7. '[next' → logprob: -19.625001907348633
    8. '[to' → logprob: -19.875001907348633
    9. ' ' → logprob: -20.250001907348633
    10. '[++' → logprob: -20.375001907348633

Token 960: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -12.125009536743164
    3. '(' → logprob: -13.500009536743164
    4. 'int' → logprob: -14.375009536743164
    5. '[' → logprob: -14.750009536743164
    6. '   ' → logprob: -14.750009536743164
    7. '100' → logprob: -15.625009536743164
    8. '+' → logprob: -15.750009536743164
    9. '1' → logprob: -16.000009536743164
    10. '
' → logprob: -16.000009536743164

Token 961: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2014184147119522
    2. '**' → logprob: -1.701418399810791
    3. '```' → logprob: -13.07641887664795
    4. '10' → logprob: -13.70141887664795
    5. '^' → logprob: -14.32641887664795
    6. '
' → logprob: -14.82641887664795
    7. '18' → logprob: -15.07641887664795
    8. '09' → logprob: -15.57641887664795
    9. '``' → logprob: -15.95141887664795
    10. '*' → logprob: -16.326417922973633

Token 962: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0006340435356833041
    2. '10' → logprob: -7.87563419342041
    3. '18' → logprob: -9.00063419342041
    4. '15' → logprob: -9.12563419342041
    5. '12' → logprob: -11.12563419342041
    6. '```' → logprob: -13.31313419342041
    7. '``' → logprob: -14.00063419342041
    8. '14' → logprob: -14.31313419342041
    9. '
' → logprob: -14.56313419342041
    10. '8' → logprob: -14.75063419342041

Token 963: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004932258743792772
    2. ']
' → logprob: -5.379932403564453
    3. '   ' → logprob: -9.129932403564453
    4. ' ]' → logprob: -9.254932403564453
    5. ')' → logprob: -10.004932403564453
    6. ']

' → logprob: -10.004932403564453
    7. ']
' → logprob: -11.754932403564453
    8. '<|end|>' → logprob: -12.754932403564453
    9. '])' → logprob: -13.504932403564453
    10. '']' → logprob: -14.254932403564453

Token 964: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7924010753631592
    2. 'for' → logprob: -1.0424010753631592
    3. 'res' → logprob: -2.042401075363159
    4. 'answer' → logprob: -3.667401075363159
    5. 'ans' → logprob: -4.167401313781738
    6. '   ' → logprob: -5.042401313781738
    7. 'max' → logprob: -5.042401313781738
    8. '
' → logprob: -5.542401313781738
    9. 'selected' → logprob: -6.667401313781738
    10. 'results' → logprob: -6.667401313781738

Token 965: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018162349238991737
    2. 'res' → logprob: -5.143162250518799
    3. 'dp' → logprob: -5.268162250518799
    4. '   ' → logprob: -6.268162250518799
    5. 'result' → logprob: -6.518162250518799
    6. 'i' → logprob: -6.518162250518799
    7. 'max' → logprob: -7.643162250518799
    8. '
' → logprob: -8.018162727355957
    9. ' for' → logprob: -8.268162727355957
    10. 'ans' → logprob: -8.393162727355957

Token 966: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4169217646121979
    2. 'result' → logprob: -2.041921854019165
    3. 'res' → logprob: -2.541921854019165
    4. 'g' → logprob: -3.291921854019165
    5. 'dp' → logprob: -3.541921854019165
    6. 'segments' → logprob: -3.666921854019165
    7. 'interval' → logprob: -5.041921615600586
    8. 'ans' → logprob: -5.416921615600586
    9. 'selected' → logprob: -5.416921615600586
    10. 'gap' → logprob: -5.541921615600586

Token 967: ' intervals' (ID: 49900)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004702338483184576
    2. ' i' → logprob: -8.125470161437988
    3. 'gap' → logprob: -8.750470161437988
    4. '_i' → logprob: -12.000470161437988
    5. 'g' → logprob: -13.000470161437988
    6. ' gap' → logprob: -13.375470161437988
    7. '_gap' → logprob: -13.500470161437988
    8. 'segment' → logprob: -13.500470161437988
    9. 'interval' → logprob: -14.250470161437988
    10. 'idx' → logprob: -14.375470161437988

Token 968: ' between' (ID: 2870)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1513572633266449
    2. 'i' → logprob: -2.2763571739196777
    3. '   ' → logprob: -4.401357173919678
    4. ' in' → logprob: -4.401357173919678
    5. 'for' → logprob: -4.526357173919678
    6. 'between' → logprob: -7.026357173919678
    7. ',' → logprob: -7.526357173919678
    8. '_i' → logprob: -8.651357650756836
    9. ' i' → logprob: -8.651357650756836
    10. 'idx' → logprob: -9.026357650756836

Token 969: ' fav' (ID: 11726)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10635270178318024
    2. 'range' → logprob: -2.9813528060913086
    3. 'for' → logprob: -3.1063528060913086
    4. 'fav' → logprob: -5.731352806091309
    5. ' i' → logprob: -6.481352806091309
    6. ' range' → logprob: -8.856352806091309
    7. ' for' → logprob: -9.231352806091309
    8. '[i' → logprob: -9.856352806091309
    9. '   ' → logprob: -9.856352806091309
    10. 'in' → logprob: -9.981352806091309

Token 970: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.13169264793396
    2. 's' → logprob: -1.38169264793396
    3. 'vals' → logprob: -1.50669264793396
    4. 'interval' → logprob: -2.75669264793396
    5. '   ' → logprob: -3.38169264793396
    6. '_sorted' → logprob: -3.63169264793396
    7. 'i' → logprob: -3.88169264793396
    8. '_inter' → logprob: -3.88169264793396
    9. 'ivals' → logprob: -5.006692886352539
    10. 'val' → logprob: -5.131692886352539

Token 971: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1262577772140503
    2. ':' → logprob: -2.75125789642334
    3. ' for' → logprob: -3.87625789642334
    4. ',' → logprob: -3.87625789642334
    5. '   ' → logprob: -5.12625789642334
    6. ':
' → logprob: -5.87625789642334
    7. 'i' → logprob: -6.25125789642334
    8. 'in' → logprob: -7.37625789642334
    9. '
' → logprob: -8.00125789642334
    10. 'range' → logprob: -8.25125789642334

Token 972: ' and' (ID: 326)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.21273057162761688
    2. 'n' → logprob: -1.7127305269241333
    3. ' in' → logprob: -4.587730407714844
    4. 'i' → logprob: -7.837730407714844
    5. 'for' → logprob: -7.962730407714844
    6. '_' → logprob: -9.462730407714844
    7. '_in' → logprob: -9.712730407714844
    8. ',' → logprob: -9.837730407714844
    9. '=' → logprob: -10.837730407714844
    10. '
' → logprob: -11.087730407714844

Token 973: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08462009578943253
    2. 'range' → logprob: -2.8346199989318848
    3. ' i' → logprob: -4.334619998931885
    4. 'len' → logprob: -5.084619998931885
    5. '(i' → logprob: -6.709619998931885
    6. ' range' → logprob: -6.959619998931885
    7. 'for' → logprob: -7.959619998931885
    8. ' len' → logprob: -8.459620475769043
    9. '[i' → logprob: -9.834620475769043
    10. '
' → logprob: -9.959620475769043

Token 974: '+' (ID: 10)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40457427501678467
    2. ' in' → logprob: -1.6545742750167847
    3. 'n' → logprob: -2.654574394226074
    4. '+' → logprob: -2.904574394226074
    5. '=' → logprob: -4.779574394226074
    6. ':' → logprob: -6.529574394226074
    7. '+=' → logprob: -6.654574394226074
    8. ',' → logprob: -6.779574394226074
    9. ' =' → logprob: -6.779574394226074
    10. ' n' → logprob: -7.654574394226074

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006189120467752218
    2. 'i' → logprob: -7.500618934631348
    3. ' ' → logprob: -9.875618934631348
    4. '+' → logprob: -12.375618934631348
    5. '0' → logprob: -12.375618934631348
    6. ' i' → logprob: -12.500618934631348
    7. '```' → logprob: -13.875618934631348
    8. '   ' → logprob: -14.625618934631348
    9. '
' → logprob: -15.000618934631348
    10. '=' → logprob: -16.12561798095703

Token 976: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1502888798713684
    2. ',' → logprob: -3.0252888202667236
    3. 'for' → logprob: -3.1502888202667236
    4. '   ' → logprob: -3.5252888202667236
    5. ':
' → logprob: -4.525289058685303
    6. ' for' → logprob: -5.275289058685303
    7. '
' → logprob: -6.275289058685303
    8. '    
' → logprob: -8.525288581848145
    9. 'in' → logprob: -9.150288581848145
    10. ',i' → logprob: -9.150288581848145

Token 977: ' collect' (ID: 7916)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1936831921339035
    2. ' for' → logprob: -2.31868314743042
    3. 'i' → logprob: -3.31868314743042
    4. '   ' → logprob: -4.81868314743042
    5. 'gap' → logprob: -4.81868314743042
    6. ' i' → logprob: -5.44368314743042
    7. ' gap' → logprob: -5.44368314743042
    8. 'g' → logprob: -6.19368314743042
    9. 'segment' → logprob: -6.69368314743042
    10. 'res' → logprob: -6.69368314743042

Token 978: ' non' (ID: 2893)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.2242735624313354
    2. 'interval' → logprob: -1.5992735624313354
    3. 'gap' → logprob: -1.8492735624313354
    4. 'between' → logprob: -2.474273681640625
    5. 'valid' → logprob: -2.974273681640625
    6. 'non' → logprob: -3.099273681640625
    7. 'available' → logprob: -3.599273681640625
    8. 'block' → logprob: -3.599273681640625
    9. 'possible' → logprob: -3.974273681640625
    10. 'c' → logprob: -4.224273681640625

Token 979: '-f' (ID: 3002)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0005325406673364341
    2. '   ' → logprob: -7.750532627105713
    3. '_' → logprob: -10.000532150268555
    4. '```' → logprob: -11.250532150268555
    5. '_non' → logprob: -12.125532150268555
    6. '	f' → logprob: -12.250532150268555
    7. '       ' → logprob: -12.375532150268555
    8. '_candidates' → logprob: -13.000532150268555
    9. ' =' → logprob: -13.125532150268555
    10. 'f' → logprob: -13.125532150268555

Token 980: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.012934084981679916
    2. 'avs' → logprob: -4.38793420791626
    3. 'or' → logprob: -9.137933731079102
    4. '_av' → logprob: -9.137933731079102
    5. '_' → logprob: -10.012933731079102
    6. '_c' → logprob: -10.637933731079102
    7. '_non' → logprob: -11.387933731079102
    8. 'fav' → logprob: -11.387933731079102
    9. '```' → logprob: -11.512933731079102
    10. '
' → logprob: -11.512933731079102

Token 981: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13256020843982697
    2. '_c' → logprob: -3.1325602531433105
    3. '_candidates' → logprob: -3.2575602531433105
    4. 'interval' → logprob: -4.1325602531433105
    5. 'i' → logprob: -4.3825602531433105
    6. 'in' → logprob: -5.6325602531433105
    7. '_in' → logprob: -6.3825602531433105
    8. 'for' → logprob: -6.5075602531433105
    9. 'segments' → logprob: -6.7575602531433105
    10. 'subset' → logprob: -7.3825602531433105

Token 982: ' fully' (ID: 9637)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.2007107734680176
    2. '   ' → logprob: -1.7007107734680176
    3. 'interval' → logprob: -1.8257107734680176
    4. 'between' → logprob: -2.0757107734680176
    5. 'in' → logprob: -2.8257107734680176
    6. 'g' → logprob: -3.0757107734680176
    7. 'for' → logprob: -3.4507107734680176
    8. 'i' → logprob: -3.8257107734680176
    9. 'sections' → logprob: -4.575710773468018
    10. ',' → logprob: -5.200710773468018

Token 983: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.591112494468689
    2. 'contained' → logprob: -1.591112494468689
    3. 'in' → logprob: -1.841112494468689
    4. 'within' → logprob: -2.8411126136779785
    5. 'included' → logprob: -3.8411126136779785
    6. 'between' → logprob: -6.8411126136779785
    7. ' inside' → logprob: -7.0911126136779785
    8. ' within' → logprob: -7.4661126136779785
    9. '   ' → logprob: -8.59111213684082
    10. ' in' → logprob: -8.59111213684082

Token 984: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2098453044891357
    2. 'for' → logprob: -1.5848453044891357
    3. '(i' → logprob: -2.0848453044891357
    4. 'i' → logprob: -2.4598453044891357
    5. '[i' → logprob: -2.7098453044891357
    6. '   ' → logprob: -2.8348453044891357
    7. '(' → logprob: -2.8348453044891357
    8. '
' → logprob: -3.8348453044891357
    9. 'between' → logprob: -3.9598453044891357
    10. '[' → logprob: -4.834845542907715

Token 985: 'start' (ID: 5236)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.3289051949977875
    2. 'starts' → logprob: -2.4539051055908203
    3. '(i' → logprob: -2.5789051055908203
    4. 'i' → logprob: -3.7039051055908203
    5. '   ' → logprob: -3.8289051055908203
    6. '(' → logprob: -3.8289051055908203
    7. ')' → logprob: -4.57890510559082
    8. ' ends' → logprob: -4.57890510559082
    9. 'range' → logprob: -4.95390510559082
    10. '
' → logprob: -5.32890510559082

Token 986: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.823514461517334
    2. ' >=' → logprob: -1.448514461517334
    3. ')' → logprob: -2.448514461517334
    4. '=' → logprob: -3.198514461517334
    5. '<=' → logprob: -3.198514461517334
    6. ',' → logprob: -3.323514461517334
    7. ' <=' → logprob: -3.573514461517334
    8. '[i' → logprob: -3.823514461517334
    9. '>' → logprob: -4.573514461517334
    10. ')>=' → logprob: -4.698514461517334

Token 987: 'ends' (ID: 1847)
  Prédit: 'ends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.47425055503845215
    2. 'starts' → logprob: -0.9742505550384521
    3. ' starts' → logprob: -9.474250793457031
    4. ' ends' → logprob: -9.474250793457031
    5. '   ' → logprob: -11.474250793457031
    6. '
' → logprob: -12.349250793457031
    7. 'startswith' → logprob: -13.599250793457031
    8. 'end' → logprob: -13.849250793457031
    9. 'st' → logprob: -14.349250793457031
    10. 's' → logprob: -15.224250793457031

Token 988: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016790216614026576
    2. '   ' → logprob: -9.625167846679688
    3. 's' → logprob: -10.250167846679688
    4. '[' → logprob: -10.625167846679688
    5. ' [' → logprob: -11.000167846679688
    6. '
' → logprob: -12.125167846679688
    7. '[s' → logprob: -12.750167846679688
    8. '```' → logprob: -12.875167846679688
    9. 'i' → logprob: -13.125167846679688
    10. '[
' → logprob: -13.250167846679688

Token 989: '],' (ID: 2155)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7134318351745605
    2. ' and' → logprob: -1.2134318351745605
    3. ']' → logprob: -1.5884318351745605
    4. '[i' → logprob: -4.9634318351745605
    5. '   ' → logprob: -7.3384318351745605
    6. '])' → logprob: -7.5884318351745605
    7. ')' → logprob: -8.713432312011719
    8. ' ]' → logprob: -9.088432312011719
    9. ' ' → logprob: -9.713432312011719
    10. '][' → logprob: -10.463432312011719

Token 990: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.17176274955272675
    2. ' end' → logprob: -1.9217627048492432
    3. 'start' → logprob: -4.671762943267822
    4. 'stop' → logprob: -6.671762943267822
    5. ' start' → logprob: -8.171762466430664
    6. 'finish' → logprob: -8.296762466430664
    7. 'and' → logprob: -8.671762466430664
    8. ' stop' → logprob: -9.796762466430664
    9. ' finish' → logprob: -10.546762466430664
    10. '   ' → logprob: -10.921762466430664

Token 991: '<=' (ID: 16672)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005485490895807743
    2. '<=' → logprob: -5.505485534667969
    3. 'i' → logprob: -8.005485534667969
    4. '[' → logprob: -8.380485534667969
    5. '[j' → logprob: -8.380485534667969
    6. '```' → logprob: -8.755485534667969
    7. 'and' → logprob: -8.880485534667969
    8. ' <=' → logprob: -9.005485534667969
    9. '[
' → logprob: -9.880485534667969
    10. 's' → logprob: -10.005485534667969

Token 992: 'starts' (ID: 61429)
  Prédit: 'starts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.0007349394145421684
    2. ' starts' → logprob: -7.250734806060791
    3. '
' → logprob: -11.87573528289795
    4. 'startswith' → logprob: -11.87573528289795
    5. '   ' → logprob: -12.25073528289795
    6. 'ends' → logprob: -13.12573528289795
    7. 'st' → logprob: -13.50073528289795
    8. 'start' → logprob: -14.50073528289795
    9. 's' → logprob: -14.75073528289795
    10. '```' → logprob: -14.87573528289795

Token 993: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.596781946020201e-05
    2. '[j' → logprob: -10.500045776367188
    3. '   ' → logprob: -11.875045776367188
    4. '[' → logprob: -12.625045776367188
    5. 'i' → logprob: -12.875045776367188
    6. ' [' → logprob: -13.250045776367188
    7. '][' → logprob: -13.500045776367188
    8. ']' → logprob: -14.125045776367188
    9. '
' → logprob: -14.125045776367188
    10. '```' → logprob: -14.500045776367188

Token 994: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012684474932029843
    2. ' +' → logprob: -7.50126838684082
    3. ']+' → logprob: -8.50126838684082
    4. '])' → logprob: -8.75126838684082
    5. '+i' → logprob: -8.87626838684082
    6. ']' → logprob: -10.12626838684082
    7. '1' → logprob: -10.12626838684082
    8. '+
' → logprob: -10.37626838684082
    9. '[i' → logprob: -10.62626838684082
    10. 'i' → logprob: -11.25126838684082

Token 995: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20166757702827454
    2. '+' → logprob: -1.7016675472259521
    3. 'i' → logprob: -9.076667785644531
    4. ']+' → logprob: -9.326667785644531
    5. '])' → logprob: -11.076667785644531
    6. ']' → logprob: -11.076667785644531
    7. '```' → logprob: -11.826667785644531
    8. '+i' → logprob: -12.451667785644531
    9. ' +' → logprob: -13.451667785644531
    10. '   ' → logprob: -13.701667785644531

Token 996: '])
' (ID: 5169)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23491336405277252
    2. ')' → logprob: -2.3599133491516113
    3. '):' → logprob: -3.1099133491516113
    4. ')]' → logprob: -3.3599133491516113
    5. ']:' → logprob: -4.234913349151611
    6. '):
' → logprob: -4.984913349151611
    7. '])' → logprob: -5.234913349151611
    8. ']:
' → logprob: -6.109913349151611
    9. '   ' → logprob: -6.234913349151611
    10. ']
' → logprob: -6.234913349151611

Token 997: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15000183880329132
    2. '   ' → logprob: -2.9000017642974854
    3. '
' → logprob: -3.2750017642974854
    4. ' for' → logprob: -3.5250017642974854
    5. 'i' → logprob: -5.2750020027160645
    6. 'interval' → logprob: -5.9000020027160645
    7. 'result' → logprob: -6.5250020027160645
    8. 'selected' → logprob: -6.6500020027160645
    9. '    
' → logprob: -6.9000020027160645
    10. '```' → logprob: -6.9000020027160645

Token 998: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.582084059715271
    2. 'res' → logprob: -1.332084059715271
    3. 'result' → logprob: -2.0820841789245605
    4. 'selected' → logprob: -4.4570841789245605
    5. 'dp' → logprob: -4.7070841789245605
    6. 'g' → logprob: -5.3320841789245605
    7. 'ans' → logprob: -5.3320841789245605
    8. 'interval' → logprob: -5.4570841789245605
    9. 'gap' → logprob: -5.7070841789245605
    10. '   ' → logprob: -5.8320841789245605

Token 999: ' then' (ID: 1815)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026328863576054573
    2. 'g' → logprob: -4.526329040527344
    3. 'interval' → logprob: -5.651329040527344
    4. 'res' → logprob: -6.026329040527344
    5. '   ' → logprob: -6.026329040527344
    6. 'i' → logprob: -6.276329040527344
    7. 'gap' → logprob: -7.026329040527344
    8. '
' → logprob: -7.276329040527344
    9. 'result' → logprob: -7.276329040527344
    10. 'segments' → logprob: -7.401329040527344

Token 1000: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007914762943983078
    2. '
' → logprob: -5.2579145431518555
    3. 'result' → logprob: -6.8829145431518555
    4. '   ' → logprob: -7.2579145431518555
    5. 'res' → logprob: -7.6329145431518555
    6. ' for' → logprob: -8.257914543151855
    7. 'max' → logprob: -9.632914543151855
    8. 'total' → logprob: -10.007914543151855
    9. 'answer' → logprob: -10.382914543151855
    10. 'i' → logprob: -11.132914543151855

Token 1001: ' interval' (ID: 17116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14082008600234985
    2. ' for' → logprob: -3.015820026397705
    3. '   ' → logprob: -3.515820026397705
    4. '
' → logprob: -3.890820026397705
    5. 'def' → logprob: -4.015820026397705
    6. 'interval' → logprob: -5.140820026397705
    7. 'i' → logprob: -6.015820026397705
    8. '```' → logprob: -6.640820026397705
    9. 'from' → logprob: -7.265820026397705
    10. 'dp' → logprob: -7.265820026397705

Token 1002: ' scheduling' (ID: 51708)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39545902609825134
    2. ' scheduling' → logprob: -1.1454590559005737
    3. '_s' → logprob: -5.395459175109863
    4. '   ' → logprob: -6.770459175109863
    5. 'c' → logprob: -7.020459175109863
    6. '
' → logprob: -8.520459175109863
    7. 'selection' → logprob: -8.645459175109863
    8. ' ' → logprob: -8.645459175109863
    9. 'import' → logprob: -8.895459175109863
    10. 'sorting' → logprob: -9.020459175109863

Token 1003: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21020972728729248
    2. 'result' → logprob: -2.335209846496582
    3. 'res' → logprob: -3.585209846496582
    4. 'max' → logprob: -3.835209846496582
    5. 'def' → logprob: -4.460209846496582
    6. '   ' → logprob: -4.710209846496582
    7. 'selected' → logprob: -4.835209846496582
    8. 'results' → logprob: -5.210209846496582
    9. 'dp' → logprob: -6.710209846496582
    10. '```' → logprob: -6.710209846496582

Token 1004: ' each' (ID: 2454)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17952688038349152
    2. 'each' → logprob: -2.4295268058776855
    3. 'that' → logprob: -3.4295268058776855
    4. 'for' → logprob: -3.9295268058776855
    5. '
' → logprob: -4.0545268058776855
    6. ' range' → logprob: -6.1795268058776855
    7. 'non' → logprob: -6.8045268058776855
    8. 'between' → logprob: -6.8045268058776855
    9. '   ' → logprob: -7.5545268058776855
    10. ' that' → logprob: -7.5545268058776855

Token 1005: ' gap' (ID: 19953)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2504805028438568
    2. 'for' → logprob: -2.1254804134368896
    3. '
' → logprob: -2.8754804134368896
    4. ' range' → logprob: -3.6254804134368896
    5. 'i' → logprob: -4.500480651855469
    6. '   ' → logprob: -5.625480651855469
    7. ' for' → logprob: -6.250480651855469
    8. 'interval' → logprob: -7.750480651855469
    9. '(range' → logprob: -7.875480651855469
    10. '       ' → logprob: -8.125480651855469

Token 1006: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037428587675094604
    2. '   ' → logprob: -3.662428617477417
    3. 'result' → logprob: -5.162428379058838
    4. 'res' → logprob: -6.412428379058838
    5. 'results' → logprob: -6.537428379058838
    6. ' for' → logprob: -6.662428379058838
    7. '
' → logprob: -8.037428855895996
    8. '```' → logprob: -8.787428855895996
    9. 'selected' → logprob: -9.412428855895996
    10. 'max' → logprob: -9.537428855895996

Token 1007: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26621106266975403
    2. '   ' → logprob: -2.0162110328674316
    3. 'result' → logprob: -3.1412110328674316
    4. 'res' → logprob: -3.2662110328674316
    5. 'max' → logprob: -4.891211032867432
    6. 'results' → logprob: -5.391211032867432
    7. 'total' → logprob: -6.891211032867432
    8. 'selected' → logprob: -7.141211032867432
    9. ' for' → logprob: -7.266211032867432
    10. 'dp' → logprob: -7.391211032867432

Token 1008: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7965715527534485
    2. 'res' → logprob: -1.4215714931488037
    3. 'result' → logprob: -1.4215714931488037
    4. 'max' → logprob: -3.5465714931488037
    5. 'ans' → logprob: -4.796571731567383
    6. '   ' → logprob: -4.796571731567383
    7. 'selected' → logprob: -5.296571731567383
    8. 'total' → logprob: -5.546571731567383
    9. 'gap' → logprob: -5.921571731567383
    10. 'results' → logprob: -6.046571731567383

Token 1009: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008691861294209957
    2. ' i' → logprob: -4.758691787719727
    3. '_i' → logprob: -10.508691787719727
    4. 'range' → logprob: -11.008691787719727
    5. 'idx' → logprob: -11.383691787719727
    6. 'in' → logprob: -12.258691787719727
    7. ' ' → logprob: -13.008691787719727
    8. ' in' → logprob: -13.008691787719727
    9. ' range' → logprob: -13.133691787719727
    10. 'gap' → logprob: -13.258691787719727

Token 1010: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6937162280082703
    2. ' in' → logprob: -0.6937162280082703
    3. '   ' → logprob: -7.943716049194336
    4. '(' → logprob: -9.068716049194336
    5. '	in' → logprob: -10.443716049194336
    6. ' ' → logprob: -10.693716049194336
    7. ',' → logprob: -10.943716049194336
    8. ' (' → logprob: -12.193716049194336
    9. 'range' → logprob: -12.568716049194336
    10. '0' → logprob: -12.568716049194336

Token 1011: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052350712940096855
    2. ' range' → logprob: -5.255235195159912
    3. ' ' → logprob: -14.005234718322754
    4. '
' → logprob: -15.130234718322754
    5. '   ' → logprob: -16.00523567199707
    6. '(range' → logprob: -16.50523567199707
    7. '  ' → logprob: -16.75523567199707
    8. '0' → logprob: -18.25523567199707
    9. '	range' → logprob: -18.88023567199707
    10. '```' → logprob: -19.13023567199707

Token 1012: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.010927198454737663
    2. 'len' → logprob: -5.010927200317383
    3. '(' → logprob: -5.510927200317383
    4. ' len' → logprob: -9.260927200317383
    5. '(i' → logprob: -10.760927200317383
    6. ' (' → logprob: -10.885927200317383
    7. '1' → logprob: -11.010927200317383
    8. '0' → logprob: -12.260927200317383
    9. '   ' → logprob: -13.135927200317383
    10. '(
' → logprob: -14.635927200317383

Token 1013: '(f' (ID: 1526)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.39081570506095886
    2. '(f' → logprob: -1.8908157348632812
    3. '(' → logprob: -2.3908157348632812
    4. '(non' → logprob: -2.5158157348632812
    5. '(c' → logprob: -9.640815734863281
    6. 'non' → logprob: -10.515815734863281
    7. 'ends' → logprob: -10.515815734863281
    8. '(n' → logprob: -10.640815734863281
    9. ' (' → logprob: -11.515815734863281
    10. 'starts' → logprob: -11.640815734863281

Token 1014: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.058401282876729965
    2. 'starts' → logprob: -3.183401346206665
    3. 'or' → logprob: -4.933401107788086
    4. ' starts' → logprob: -6.433401107788086
    5. 'avs' → logprob: -6.933401107788086
    6. ')' → logprob: -7.558401107788086
    7. 'fav' → logprob: -7.808401107788086
    8. '   ' → logprob: -7.808401107788086
    9. 'avorites' → logprob: -7.933401107788086
    10. 'a' → logprob: -8.308401107788086

Token 1015: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.001105683040805161
    2. 's' → logprob: -7.876105785369873
    3. '   ' → logprob: -8.251105308532715
    4. '_s' → logprob: -9.126105308532715
    5. 'sorted' → logprob: -9.251105308532715
    6. '
' → logprob: -9.376105308532715
    7. '_' → logprob: -10.501105308532715
    8. '_inter' → logprob: -10.501105308532715
    9. ')' → logprob: -10.626105308532715
    10. '```' → logprob: -10.626105308532715

Token 1016: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3362883925437927
    2. '-' → logprob: -1.9612884521484375
    3. '):
' → logprob: -2.4612884521484375
    4. '):' → logprob: -3.3362884521484375
    5. ')+' → logprob: -4.7112884521484375
    6. ')' → logprob: -5.3362884521484375
    7. ' +' → logprob: -5.3362884521484375
    8. ' -' → logprob: -5.8362884521484375
    9. '   ' → logprob: -6.4612884521484375
    10. ')-' → logprob: -7.7112884521484375

Token 1017: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018732868193183094
    2. '2' → logprob: -8.750186920166016
    3. ' ' → logprob: -10.625186920166016
    4. '
' → logprob: -12.625186920166016
    5. '```' → logprob: -14.250186920166016
    6. '+' → logprob: -15.375186920166016
    7. '   ' → logprob: -15.625186920166016
    8. '0' → logprob: -16.500186920166016
    9. '``' → logprob: -17.000186920166016
    10. ')' → logprob: -18.187686920166016

Token 1018: '):
' (ID: 1883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39396563172340393
    2. '):
' → logprob: -1.8939656019210815
    3. ':
' → logprob: -2.143965721130371
    4. ':' → logprob: -2.893965721130371
    5. '):' → logprob: -6.268965721130371
    6. '       ' → logprob: -8.018965721130371
    7. '	' → logprob: -9.518965721130371
    8. '```' → logprob: -9.518965721130371
    9. '():
' → logprob: -10.268965721130371
    10. ')' → logprob: -10.393965721130371

Token 1019: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007339922711253166
    2. '       ' → logprob: -5.632339954376221
    3. '```' → logprob: -5.632339954376221
    4. '   ' → logprob: -9.882339477539062
    5. '    
' → logprob: -10.382339477539062
    6. '``' → logprob: -10.507339477539062
    7. 'gap' → logprob: -11.007339477539062
    8. '
' → logprob: -12.132339477539062
    9. ' gap' → logprob: -12.257339477539062
    10. '    ' → logprob: -12.632339477539062

Token 1020: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' (adapté à ' gap') → logprob: -0.008814762346446514
    2. 'segment' → logprob: -5.508814811706543
    3. '       ' → logprob: -6.508814811706543
    4. '   ' → logprob: -6.758814811706543
    5. ' gap' → logprob: -7.383814811706543
    6. 'interval' → logprob: -7.383814811706543
    7. 'seg' → logprob: -7.883814811706543
    8. 'window' → logprob: -9.508814811706543
    9. 'g' → logprob: -9.508814811706543
    10. 'subset' → logprob: -10.008814811706543

Token 1021: '_candidates' (ID: 186937)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.6405931711196899
    2. '_non' → logprob: -1.51559317111969
    3. '_st' → logprob: -2.2655930519104004
    4. '_candidates' → logprob: -2.2655930519104004
    5. '_c' → logprob: -3.6405930519104004
    6. '_inter' → logprob: -5.2655930519104
    7. '_' → logprob: -5.6405930519104
    8. ' =' → logprob: -5.8905930519104
    9. '   ' → logprob: -5.8905930519104
    10. '=' → logprob: -6.5155930519104

Token 1022: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024624725803732872
    2. ' =' → logprob: -3.774624824523926
    3. '=[]' → logprob: -6.649624824523926
    4. '=[' → logprob: -9.524624824523926
    5. '=[]
' → logprob: -11.774624824523926
    6. '   ' → logprob: -13.899624824523926
    7. '[]' → logprob: -14.024624824523926
    8. '[' → logprob: -14.149624824523926
    9. '[:]' → logprob: -16.14962387084961
    10. '=list' → logprob: -16.52462387084961

Token 1023: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5325849652290344
    2. '[c' → logprob: -1.7825849056243896
    3. '[s' → logprob: -2.5325849056243896
    4. '[i' → logprob: -2.7825849056243896
    5. '[]' → logprob: -3.2825849056243896
    6. '[]
' → logprob: -3.5325849056243896
    7. '[(' → logprob: -4.532585144042969
    8. '[x' → logprob: -4.657585144042969
    9. '[k' → logprob: -6.282585144042969
    10. '[t' → logprob: -6.282585144042969

Token 1024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003317449940368533
    2. 'for' → logprob: -5.878317356109619
    3. '   ' → logprob: -8.128317832946777
    4. ' for' → logprob: -8.503317832946777
    5. '	' → logprob: -12.503317832946777
    6. '	   ' → logprob: -12.503317832946777
    7. '	for' → logprob: -12.753317832946777
    8. '           ' → logprob: -13.003317832946777
    9. '        
' → logprob: -14.253317832946777
    10. '
' → logprob: -14.628317832946777

Token 1025: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011952288914471865
    2. '       ' → logprob: -7.251195430755615
    3. ' for' → logprob: -7.751195430755615
    4. 'j' → logprob: -10.751194953918457
    5. '   ' → logprob: -11.251194953918457
    6. 'l' → logprob: -11.751194953918457
    7. 'start' → logprob: -12.001194953918457
    8. 'left' → logprob: -12.751194953918457
    9. '	for' → logprob: -13.501194953918457
    10. 'gap' → logprob: -14.376194953918457

Token 1026: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018214678391814232
    2. ' =' → logprob: -4.018214702606201
    3. '=
' → logprob: -11.143214225769043
    4. ',' → logprob: -11.268214225769043
    5. '=end' → logprob: -12.143214225769043
    6. '=[]' → logprob: -12.268214225769043
    7. '=int' → logprob: -12.518214225769043
    8. '>=' → logprob: -12.518214225769043
    9. '=[' → logprob: -13.018214225769043
    10. '       ' → logprob: -13.018214225769043

Token 1027: ' starts' (ID: 13217)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0001261845463886857
    2. ' ends' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.125125885009766
    4. 'starts' → logprob: -14.625125885009766
    5. '       ' → logprob: -16.375125885009766
    6. 'end' → logprob: -17.375125885009766
    7. 'Ends' → logprob: -17.375125885009766
    8. 'ENDS' → logprob: -17.875125885009766
    9. 'inds' → logprob: -18.000125885009766
    10. '```' → logprob: -18.250125885009766

Token 1028: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3663626305060461e-05
    2. 'i' → logprob: -11.62501335144043
    3. '```' → logprob: -13.25001335144043
    4. '[' → logprob: -13.37501335144043
    5. ' [' → logprob: -14.62501335144043
    6. '[
' → logprob: -15.12501335144043
    7. '
' → logprob: -15.75001335144043
    8. '   ' → logprob: -15.87501335144043
    9. '\[' → logprob: -16.25001335144043
    10. '`' → logprob: -16.75001335144043

Token 1029: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2840648889541626
    2. ']' → logprob: -1.7840648889541626
    3. ']+' → logprob: -3.034064769744873
    4. '       ' → logprob: -3.534064769744873
    5. '   ' → logprob: -7.534064769744873
    6. '+' → logprob: -7.909064769744873
    7. ' ]
' → logprob: -8.284065246582031
    8. 'if' → logprob: -8.909065246582031
    9. '-' → logprob: -9.159065246582031
    10. ']-' → logprob: -9.409065246582031

Token 1030: '       ' (ID: 309)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.18007154762744904
    2. '       ' → logprob: -1.8050715923309326
    3. ' R' → logprob: -8.430071830749512
    4. '
' → logprob: -11.055071830749512
    5. 'for' → logprob: -11.180071830749512
    6. 'and' → logprob: -11.180071830749512
    7. '+' → logprob: -11.430071830749512
    8. 'U' → logprob: -11.805071830749512
    9. '   ' → logprob: -11.930071830749512
    10. 'while' → logprob: -12.180071830749512

Token 1031: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.00013977376511320472
    2. ' R' → logprob: -9.000140190124512
    3. 'U' → logprob: -11.375140190124512
    4. '   ' → logprob: -12.875140190124512
    5. '
' → logprob: -14.250140190124512
    6. '	R' → logprob: -15.000140190124512
    7. 'H' → logprob: -15.125140190124512
    8. '       ' → logprob: -15.250140190124512
    9. '    
' → logprob: -15.375140190124512
    10. '```' → logprob: -15.375140190124512

Token 1032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025811195373535
    2. ' =' → logprob: -2.3502581119537354
    3. '=
' → logprob: -9.975257873535156
    4. ' =
' → logprob: -12.975257873535156
    5. '=end' → logprob: -13.850257873535156
    6. '=

' → logprob: -14.100257873535156
    7. '   ' → logprob: -14.975257873535156
    8. '       ' → logprob: -15.975257873535156
    9. ' ' → logprob: -15.975257873535156
    10. '=int' → logprob: -16.225257873535156

Token 1033: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0024762547109276056
    2. ' ends' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.502476692199707
    4. 'Ends' → logprob: -16.00247573852539
    5. 'inds' → logprob: -16.37747573852539
    6. 'end' → logprob: -16.62747573852539
    7. 'endl' → logprob: -16.87747573852539
    8. 'ents' → logprob: -17.12747573852539
    9. 'ENDS' → logprob: -17.25247573852539
    10. ' ' → logprob: -18.62747573852539

Token 1034: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.750000953674316
    3. '```' → logprob: -14.750000953674316
    4. '[
' → logprob: -15.125000953674316
    5. '[I' → logprob: -15.625000953674316
    6. '[' → logprob: -16.375001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '+i' → logprob: -18.500001907348633
    9. '[++' → logprob: -18.625001907348633
    10. '\[' → logprob: -18.750001907348633

Token 1035: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06575639545917511
    2. '+' → logprob: -2.815756320953369
    3. ']+' → logprob: -6.065756320953369
    4. '[i' → logprob: -7.440756320953369
    5. '+i' → logprob: -7.815756320953369
    6. '+]' → logprob: -9.190756797790527
    7. '-' → logprob: -9.690756797790527
    8. '       ' → logprob: -9.690756797790527
    9. ' +' → logprob: -9.815756797790527
    10. ')' → logprob: -9.940756797790527

Token 1036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011531977215781808
    2. ' for' → logprob: -7.876152992248535
    3. '
' → logprob: -8.251152992248535
    4. '	' → logprob: -8.876152992248535
    5. 'for' → logprob: -9.126152992248535
    6. '        
' → logprob: -9.376152992248535
    7. '   ' → logprob: -9.751152992248535
    8. '	for' → logprob: -10.376152992248535
    9. '	   ' → logprob: -10.376152992248535
    10. '<|end|>' → logprob: -10.876152992248535

Token 1037: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6558087468147278
    2. 'for' (adapté à ' for') → logprob: -0.7808087468147278
    3. ' for' → logprob: -3.780808687210083
    4. '   ' → logprob: -9.405808448791504
    5. '	for' → logprob: -10.655808448791504
    6. '           ' → logprob: -11.405808448791504
    7. 'gap' → logprob: -12.280808448791504
    8. '	' → logprob: -13.030808448791504
    9. '+' → logprob: -13.155808448791504
    10. '        
' → logprob: -13.530808448791504

Token 1038: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.01745879091322422
    2. 'c' → logprob: -4.142458915710449
    3. ' st' → logprob: -7.392458915710449
    4. 'nc' → logprob: -8.26745891571045
    5. 'cand' → logprob: -8.39245891571045
    6. '(st' → logprob: -9.01745891571045
    7. 'start' → logprob: -9.26745891571045
    8. 'nst' → logprob: -9.89245891571045
    9. ' c' → logprob: -10.76745891571045
    10. '   ' → logprob: -11.76745891571045

Token 1039: ',en' (ID: 143440)
  Prédit: ',en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',en' → logprob: -0.42709454894065857
    2. ',' → logprob: -1.677094578742981
    3. ',in' → logprob: -2.1770944595336914
    4. ' in' → logprob: -4.302094459533691
    5. ' ,' → logprob: -4.427094459533691
    6. ',end' → logprob: -5.177094459533691
    7. 'in' → logprob: -5.302094459533691
    8. ',c' → logprob: -5.677094459533691
    9. ',len' → logprob: -6.052094459533691
    10. ',n' → logprob: -6.552094459533691

Token 1040: ',name' (ID: 52064)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4070557951927185
    2. 'in' → logprob: -1.6570558547973633
    3. ',' → logprob: -2.2820558547973633
    4. ',in' → logprob: -3.7820558547973633
    5. ',en' → logprob: -5.157055854797363
    6. ',c' → logprob: -5.657055854797363
    7. ' ,' → logprob: -5.782055854797363
    8. '       ' → logprob: -6.157055854797363
    9. '           ' → logprob: -6.407055854797363
    10. '        ' → logprob: -7.532055854797363

Token 1041: ',_' (ID: 46431)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17075398564338684
    2. 'in' → logprob: -1.9207539558410645
    3. ',' → logprob: -5.0457539558410645
    4. '       ' → logprob: -6.9207539558410645
    5. '           ' → logprob: -6.9207539558410645
    6. ',in' → logprob: -6.9207539558410645
    7. '	in' → logprob: -7.7957539558410645
    8. '        ' → logprob: -7.9207539558410645
    9. '          ' → logprob: -9.795754432678223
    10. ' ,' → logprob: -9.795754432678223

Token 1042: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014225916005671024
    2. 'in' → logprob: -4.264225959777832
    3. '   ' → logprob: -10.889225959777832
    4. '       ' → logprob: -11.014225959777832
    5. '	in' → logprob: -11.139225959777832
    6. '           ' → logprob: -12.389225959777832
    7. ',' → logprob: -13.139225959777832
    8. '        ' → logprob: -13.639225959777832
    9. '    ' → logprob: -13.764225959777832
    10. ' ' → logprob: -13.889225959777832

Token 1043: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.00012535012501757592
    2. ' non' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.62512493133545
    4. '
' → logprob: -14.50012493133545
    5. '(non' → logprob: -16.500125885009766
    6. ' ' → logprob: -17.750125885009766
    7. '[' → logprob: -18.000125885009766
    8. '非' → logprob: -18.000125885009766
    9. '       ' → logprob: -18.250125885009766
    10. '           ' → logprob: -18.500125885009766

Token 1044: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0015378349926322699
    2. '_c' → logprob: -6.501537799835205
    3. '_' → logprob: -10.876538276672363
    4. '_candidates' → logprob: -11.501538276672363
    5. ' _' → logprob: -12.626538276672363
    6. '       ' → logprob: -14.501538276672363
    7. 'f' → logprob: -14.626538276672363
    8. '\' → logprob: -15.001538276672363
    9. 'c' → logprob: -15.126538276672363
    10. '           ' → logprob: -15.376538276672363

Token 1045: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.0047489795833826065
    2. '_c' → logprob: -6.129748821258545
    3. '_av' → logprob: -6.504748821258545
    4. '_f' → logprob: -7.004748821258545
    5. 'avs' → logprob: -8.879749298095703
    6. '_v' → logprob: -12.254749298095703
    7. 'v' → logprob: -13.004749298095703
    8. '_' → logprob: -13.254749298095703
    9. 'fav' → logprob: -13.254749298095703
    10. '_candidates' → logprob: -14.004749298095703

Token 1046: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.003126859664916992
    2. 'c' → logprob: -5.878127098083496
    3. '_candidates' → logprob: -8.128127098083496
    4. 'cand' → logprob: -11.128127098083496
    5. '```' → logprob: -12.628127098083496
    6. 'andidates' → logprob: -13.253127098083496
    7. '
' → logprob: -13.378127098083496
    8. ' candidates' → logprob: -14.003127098083496
    9. '[' → logprob: -14.378127098083496
    10. '\' → logprob: -14.628127098083496

Token 1047: 'ands' (ID: 3460)
  Prédit: 'ands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ands' → logprob: -0.00014644917973782867
    2. 'and' → logprob: -9.000146865844727
    3. 'andidates' → logprob: -10.750146865844727
    4. '[' → logprob: -14.250146865844727
    5. 'ads' → logprob: -15.500146865844727
    6. '_' → logprob: -15.875146865844727
    7. '
' → logprob: -16.000146865844727
    8. 'ats' → logprob: -17.125146865844727
    9. 'andidate' → logprob: -17.250146865844727
    10. '   ' → logprob: -17.375146865844727

Token 1048: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057297587394714355
    2. ':' → logprob: -3.057297706604004
    3. ':
' → logprob: -4.932297706604004
    4. '       ' → logprob: -7.182297706604004
    5. ',' → logprob: -8.307297706604004
    6. '	       ' → logprob: -9.182297706604004
    7. '          ' → logprob: -9.307297706604004
    8. '<|end|>' → logprob: -9.807297706604004
    9. '               ' → logprob: -10.057297706604004
    10. '   ' → logprob: -10.682297706604004

Token 1049: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006858677952550352
    2. '<|end|>' → logprob: -8.375685691833496
    3. ' if' → logprob: -8.750685691833496
    4. '<|end|>' → logprob: -9.500685691833496
    5. '	       ' → logprob: -9.750685691833496
    6. '          ' → logprob: -9.875685691833496
    7. ',' → logprob: -10.750685691833496
    8. '            
' → logprob: -10.875685691833496
    9. ':' → logprob: -11.125685691833496
    10. '            ' → logprob: -11.500685691833496

Token 1050: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18278981745243073
    2. ' if' → logprob: -1.9327898025512695
    3. 'if' (adapté à ' if') → logprob: -3.9327898025512695
    4. '            ' → logprob: -6.5577898025512695
    5. '               ' → logprob: -7.1827898025512695
    6. ' st' → logprob: -8.05778980255127
    7. '<|end|>' → logprob: -9.55778980255127
    8. '          ' → logprob: -10.18278980255127
    9. '```' → logprob: -11.05778980255127
    10. 'st' → logprob: -11.05778980255127

Token 1051: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.4349209666252136
    2. ' st' → logprob: -1.0599210262298584
    3. ' en' → logprob: -5.559920787811279
    4. 'en' → logprob: -6.184920787811279
    5. '           ' → logprob: -8.934921264648438
    6. '   ' → logprob: -9.434921264648438
    7. '	st' → logprob: -11.309921264648438
    8. '               ' → logprob: -11.559921264648438
    9. ' ' → logprob: -11.809921264648438
    10. '(st' → logprob: -11.934921264648438

Token 1052: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2310756891965866
    2. ' >=' → logprob: -1.606075644493103
    3. '>' → logprob: -6.106075763702393
    4. '=' → logprob: -6.356075763702393
    5. '           ' → logprob: -7.981075763702393
    6. ']>=' → logprob: -8.106075286865234
    7. '       ' → logprob: -8.356075286865234
    8. ' >' → logprob: -8.731075286865234
    9. '[' → logprob: -8.856075286865234
    10. '<=' → logprob: -9.731075286865234

Token 1053: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10022424906492233
    2. 'L' → logprob: -2.350224256515503
    3. '
' → logprob: -12.225224494934082
    4. ' R' → logprob: -12.600224494934082
    5. 'ends' → logprob: -12.725224494934082
    6. '   ' → logprob: -13.975224494934082
    7. '```' → logprob: -13.975224494934082
    8. 'end' → logprob: -14.225224494934082
    9. ' L' → logprob: -14.787724494934082
    10. '
' → logprob: -14.787724494934082

Token 1054: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04860236495733261
    2. 'and' → logprob: -3.048602342605591
    3. '           ' → logprob: -11.298602104187012
    4. '            ' → logprob: -13.548602104187012
    5. '        ' → logprob: -14.798602104187012
    6. '	and' → logprob: -15.298602104187012
    7. '       ' → logprob: -15.798602104187012
    8. '          ' → logprob: -16.048603057861328
    9. '<|end|>' → logprob: -16.048603057861328
    10. '               ' → logprob: -16.673603057861328

Token 1055: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00012487331696320325
    2. ' en' → logprob: -9.00012493133545
    3. '(en' → logprob: -14.50012493133545
    4. '	en' → logprob: -14.75012493133545
    5. '_en' → logprob: -16.000123977661133
    6. '=en' → logprob: -16.375123977661133
    7. '   ' → logprob: -16.875123977661133
    8. 'EN' → logprob: -17.000123977661133
    9. ''en' → logprob: -17.125123977661133
    10. 'ene' → logprob: -17.375123977661133

Token 1056: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0003012617235071957
    2. ' <=' → logprob: -8.125301361083984
    3. '```' → logprob: -13.375301361083984
    4. ')<=' → logprob: -13.375301361083984
    5. ']<=' → logprob: -13.500301361083984
    6. '≤' → logprob: -16.000301361083984
    7. '=' → logprob: -16.250301361083984
    8. '<' → logprob: -16.375301361083984
    9. '\' → logprob: -16.500301361083984
    10. '<<' → logprob: -16.625301361083984

Token 1057: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0001818489981815219
    2. 'starts' → logprob: -8.875182151794434
    3. ' L' → logprob: -10.250182151794434
    4. 'S' → logprob: -12.875182151794434
    5. '   ' → logprob: -13.500182151794434
    6. ' starts' → logprob: -14.250182151794434
    7. 'start' → logprob: -14.375182151794434
    8. 's' → logprob: -15.500182151794434
    9. 'Ls' → logprob: -15.500182151794434
    10. '       ' → logprob: -15.875182151794434

Token 1058: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01064570527523756
    2. '):' → logprob: -5.260645866394043
    3. ':
' → logprob: -5.760645866394043
    4. ' and' → logprob: -7.385645866394043
    5. '<|end|>' → logprob: -7.760645866394043
    6. '       ' → logprob: -7.885645866394043
    7. ')' → logprob: -7.885645866394043
    8. '           ' → logprob: -8.885645866394043
    9. ' :' → logprob: -9.010645866394043
    10. ':return' → logprob: -9.635645866394043

Token 1059: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11714570224285126
    2. '           ' → logprob: -2.8671457767486572
    3. ':
' → logprob: -3.4921457767486572
    4. '               ' → logprob: -4.492145538330078
    5. ' continue' → logprob: -5.367145538330078
    6. '       ' → logprob: -6.242145538330078
    7. ' and' → logprob: -6.367145538330078
    8. '                               ' → logprob: -6.992145538330078
    9. '<|end|>' → logprob: -7.492145538330078
    10. ' :' → logprob: -7.867145538330078

Token 1060: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6310744881629944
    2. 'continue' → logprob: -1.3810744285583496
    3. ' continue' → logprob: -1.6310744285583496
    4. '           ' → logprob: -4.63107442855835
    5. ':
' → logprob: -5.75607442855835
    6. '       ' → logprob: -6.00607442855835
    7. '   ' → logprob: -7.00607442855835
    8. '               ' → logprob: -7.13107442855835
    9. '	continue' → logprob: -7.13107442855835
    10. ')' → logprob: -7.63107442855835

Token 1061: ' This' (ID: 1328)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20665305852890015
    2. 'False' → logprob: -2.581653118133545
    3. '           ' → logprob: -3.081653118133545
    4. 'True' → logprob: -4.081653118133545
    5. ')' → logprob: -4.206653118133545
    6. ' continue' → logprob: -4.331653118133545
    7. '               ' → logprob: -5.581653118133545
    8. 'if' → logprob: -5.831653118133545
    9. '):' → logprob: -5.831653118133545
    10. ':' → logprob: -5.831653118133545

Token 1062: ' never' (ID: 3779)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2822710275650024
    2. '==' → logprob: -1.5322710275650024
    3. 'continue' → logprob: -1.7822710275650024
    4. ' continue' → logprob: -2.282270908355713
    5. ' ==' → logprob: -2.657270908355713
    6. '           ' → logprob: -2.907270908355713
    7. '       ' → logprob: -4.157270908355713
    8. 'if' → logprob: -4.282270908355713
    9. ':
' → logprob: -4.407270908355713
    10. ' is' → logprob: -4.532270908355713

Token 1063: ' happens' (ID: 13367)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1885968446731567
    2. '=' → logprob: -1.9385968446731567
    3. ' continue' → logprob: -2.063596725463867
    4. ' and' → logprob: -2.313596725463867
    5. ' ==' → logprob: -2.438596725463867
    6. ' or' → logprob: -2.688596725463867
    7. 'continue' → logprob: -3.313596725463867
    8. ' not' → logprob: -3.563596725463867
    9. 'and' → logprob: -3.688596725463867
    10. ':' → logprob: -3.813596725463867

Token 1064: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045414671301841736
    2. 'continue' → logprob: -3.420414686203003
    3. ' continue' → logprob: -4.795414447784424
    4. '.' → logprob: -7.295414447784424
    5. ':
' → logprob: -7.545414447784424
    6. ')' → logprob: -7.920414447784424
    7. ',' → logprob: -7.920414447784424
    8. '           ' → logprob: -8.045414924621582
    9. '<|end|>' → logprob: -8.795414924621582
    10. '):' → logprob: -8.920414924621582

Token 1065: ' since' (ID: 3630)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5956252813339233
    2. '           ' → logprob: -1.5956252813339233
    3. ' continue' → logprob: -1.9706252813339233
    4. '               ' → logprob: -3.470625400543213
    5. 'pass' → logprob: -3.970625400543213
    6. '<|end|>' → logprob: -3.970625400543213
    7. ')' → logprob: -4.970625400543213
    8. ' pass' → logprob: -5.220625400543213
    9. ':' → logprob: -5.595625400543213
    10. '       ' → logprob: -5.970625400543213

Token 1066: ' R' (ID: 460)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.28860849142074585
    2. 'st' → logprob: -1.6636085510253906
    3. 'R' → logprob: -2.9136085510253906
    4. 'False' → logprob: -5.413608551025391
    5. 'not' → logprob: -7.038608551025391
    6. ' L' → logprob: -7.538608551025391
    7. ' st' → logprob: -8.16360855102539
    8. ' R' → logprob: -9.03860855102539
    9. '   ' → logprob: -9.28860855102539
    10. '(st' → logprob: -9.28860855102539

Token 1067: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01399284228682518
    2. ' >' → logprob: -4.638992786407471
    3. '>=' → logprob: -5.888992786407471
    4. '<=' → logprob: -7.138992786407471
    5. ' >=' → logprob: -8.638993263244629
    6. ' <=' → logprob: -9.138993263244629
    7. '>
' → logprob: -9.763993263244629
    8. ':' → logprob: -9.888993263244629
    9. '           ' → logprob: -10.263993263244629
    10. '<' → logprob: -10.388993263244629

Token 1068: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.001555567141622305
    2. ' L' → logprob: -6.501555442810059
    3. ' starts' → logprob: -11.751555442810059
    4. 'starts' → logprob: -11.751555442810059
    5. '>' → logprob: -12.001555442810059
    6. '=' → logprob: -12.001555442810059
    7. '
' → logprob: -12.251555442810059
    8. '>L' → logprob: -12.376555442810059
    9. 'start' → logprob: -13.001555442810059
    10. ' ' → logprob: -13.126555442810059

Token 1069: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8506222367286682
    2. 'continue' → logprob: -1.3506221771240234
    3. ' continue' → logprob: -1.8506221771240234
    4. '           ' → logprob: -2.4756221771240234
    5. '       ' → logprob: -4.100622177124023
    6. '.' → logprob: -4.600622177124023
    7. '               ' → logprob: -4.850622177124023
    8. ',' → logprob: -4.975622177124023
    9. '<|end|>' → logprob: -5.100622177124023
    10. '   ' → logprob: -5.600622177124023

Token 1070: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.621715784072876
    2. ' i' → logprob: -2.496715784072876
    3. '   ' → logprob: -2.621715784072876
    4. ')' → logprob: -2.871715784072876
    5. 'for' → logprob: -3.371715784072876
    6. 'True' → logprob: -3.621715784072876
    7. 'if' → logprob: -3.871715784072876
    8. '```' → logprob: -3.871715784072876
    9. 'False' → logprob: -3.871715784072876
    10. '       ' → logprob: -4.371715545654297

Token 1071: ' in' (ID: 306)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8507904410362244
    2. 'continue' → logprob: -1.1007905006408691
    3. ':' → logprob: -2.350790500640869
    4. '           ' → logprob: -2.725790500640869
    5. '       ' → logprob: -3.725790500640869
    6. ' and' → logprob: -3.975790500640869
    7. ' continues' → logprob: -4.975790500640869
    8. ':
' → logprob: -5.100790500640869
    9. '.' → logprob: -5.475790500640869
    10. '==' → logprob: -5.725790500640869

Token 1072: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010143116116523743
    2. ' range' → logprob: -4.635143280029297
    3. 'i' → logprob: -8.135143280029297
    4. '0' → logprob: -10.135143280029297
    5. 'len' → logprob: -11.135143280029297
    6. '```' → logprob: -11.510143280029297
    7. '(range' → logprob: -11.760143280029297
    8. '[i' → logprob: -12.135143280029297
    9. '[' → logprob: -12.385143280029297
    10. '+' → logprob: -12.760143280029297

Token 1073: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4844765365123749
    2. 'i' → logprob: -1.4844765663146973
    3. '...' → logprob: -2.1094765663146973
    4. ' range' → logprob: -4.609476566314697
    5. '0' → logprob: -5.109476566314697
    6. ']' → logprob: -5.609476566314697
    7. '..' → logprob: -5.734476566314697
    8. '+' → logprob: -5.984476566314697
    9. ':' → logprob: -6.359476566314697
    10. '```' → logprob: -6.359476566314697

Token 1074: ',len' (ID: 73338)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3819073736667633
    2. ']:' → logprob: -2.5069074630737305
    3. '],' → logprob: -2.6319074630737305
    4. ',' → logprob: -3.1319074630737305
    5. ':' → logprob: -3.5069074630737305
    6. ']:
' → logprob: -3.5069074630737305
    7. '+' → logprob: -3.7569074630737305
    8. 'i' → logprob: -4.5069074630737305
    9. '...' → logprob: -5.0069074630737305
    10. ':]' → logprob: -5.3819074630737305

Token 1075: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6850213408470154
    2. ']' → logprob: -1.6850214004516602
    3. ')' → logprob: -2.31002140045166
    4. '...' → logprob: -2.93502140045166
    5. 'i' → logprob: -3.43502140045166
    6. '-' → logprob: -3.56002140045166
    7. ']+' → logprob: -3.56002140045166
    8. ')]' → logprob: -4.43502140045166
    9. ',' → logprob: -4.68502140045166
    10. 'range' → logprob: -4.93502140045166

Token 1076: '               ' (ID: 506)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8345744609832764
    2. ' continue' → logprob: -1.4595744609832764
    3. '           ' → logprob: -1.5845744609832764
    4. ':' → logprob: -2.3345744609832764
    5. '       ' → logprob: -4.3345746994018555
    6. '               ' → logprob: -5.4595746994018555
    7. '   ' → logprob: -6.4595746994018555
    8. ':
' → logprob: -6.4595746994018555
    9. '<|end|>' → logprob: -6.7095746994018555
    10. ')' → logprob: -6.8345746994018555

Token 1077: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.532040536403656
    2. '           ' → logprob: -1.4070405960083008
    3. ' continue' → logprob: -1.9070405960083008
    4. '       ' → logprob: -5.032040596008301
    5. '               ' → logprob: -5.407040596008301
    6. '	continue' → logprob: -6.782040596008301
    7. '.' → logprob: -7.032040596008301
    8. '   ' → logprob: -7.032040596008301
    9. 'if' → logprob: -7.407040596008301
    10. ':' → logprob: -7.407040596008301

Token 1078: ' Actually' (ID: 50557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4614025950431824
    2. '           ' → logprob: -1.9614026546478271
    3. ' continue' → logprob: -1.9614026546478271
    4. '       ' → logprob: -2.711402654647827
    5. ':' → logprob: -4.836402416229248
    6. '   ' → logprob: -4.961402416229248
    7. '	continue' → logprob: -6.461402416229248
    8. ')' → logprob: -6.461402416229248
    9. '               ' → logprob: -7.211402416229248
    10. '):' → logprob: -7.336402416229248

Token 1079: ' intervals' (ID: 49900)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26523086428642273
    2. 'st' → logprob: -3.015230894088745
    3. 'False' → logprob: -3.265230894088745
    4. 'en' → logprob: -3.515230894088745
    5. 'True' → logprob: -3.890230894088745
    6. ' if' → logprob: -4.015230655670166
    7. 'continue' → logprob: -4.140230655670166
    8. 'L' → logprob: -4.265230655670166
    9. '#' → logprob: -4.390230655670166
    10. 'pass' → logprob: -4.515230655670166

Token 1080: ' between' (ID: 2870)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.4494227170944214
    2. 'continue' → logprob: -1.6994227170944214
    3. ')' → logprob: -2.324422836303711
    4. '>' → logprob: -2.449422836303711
    5. '<=' → logprob: -2.699422836303711
    6. 'if' → logprob: -3.199422836303711
    7. ' >=' → logprob: -3.699422836303711
    8. ':' → logprob: -3.699422836303711
    9. '           ' → logprob: -3.824422836303711
    10. 'must' → logprob: -3.949422836303711

Token 1081: ' fav' (ID: 11726)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07681465148925781
    2. 'R' → logprob: -3.576814651489258
    3. 'starts' → logprob: -3.576814651489258
    4. 'ends' → logprob: -5.076814651489258
    5. ' L' → logprob: -5.451814651489258
    6. 'fav' → logprob: -5.576814651489258
    7. 'st' → logprob: -6.576814651489258
    8. ' starts' → logprob: -7.576814651489258
    9. 'en' → logprob: -7.701814651489258
    10. 'non' → logprob: -7.701814651489258

Token 1082: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38737913966178894
    2. '_inter' → logprob: -2.6373791694641113
    3. '_sorted' → logprob: -2.7623791694641113
    4. '```' → logprob: -3.8873791694641113
    5. '       ' → logprob: -4.012379169464111
    6. '[' → logprob: -4.137379169464111
    7. 'interval' → logprob: -4.387379169464111
    8. '   ' → logprob: -4.387379169464111
    9. '[i' → logprob: -4.512379169464111
    10. '_' → logprob: -4.762379169464111

Token 1083: ' are' (ID: 553)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7110440731048584
    2. ':' → logprob: -1.3360440731048584
    3. 'and' → logprob: -2.2110440731048584
    4. '       ' → logprob: -2.9610440731048584
    5. ' continue' → logprob: -3.8360440731048584
    6. 'continue' → logprob: -4.2110443115234375
    7. '<|end|>' → logprob: -4.5860443115234375
    8. ' if' → logprob: -4.9610443115234375
    9. ' or' → logprob: -5.0860443115234375
    10. '           ' → logprob: -5.3360443115234375

Token 1084: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4812377393245697
    2. '>' → logprob: -2.7312376499176025
    3. 'in' → logprob: -2.9812376499176025
    4. 'reverse' → logprob: -3.4812376499176025
    5. '```' → logprob: -3.4812376499176025
    6. '>=' → logprob: -3.6062376499176025
    7. 'greater' → logprob: -3.7312376499176025
    8. 'sorted' → logprob: -3.7312376499176025
    9. 'back' → logprob: -4.606237888336182
    10. 'L' → logprob: -4.606237888336182

Token 1085: 'fav' (ID: 137909)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.804533839225769
    2. 'L' → logprob: -1.679533839225769
    3. 'R' → logprob: -1.929533839225769
    4. '```' → logprob: -2.5545339584350586
    5. 'i' → logprob: -2.8045339584350586
    6. 'st' → logprob: -3.1795339584350586
    7. 'en' → logprob: -4.554533958435059
    8. '[i' → logprob: -5.304533958435059
    9. 'end' → logprob: -6.054533958435059
    10. ']' → logprob: -6.054533958435059

Token 1086: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.20081044733524323
    2. '[i' → logprob: -2.325810432434082
    3. '_inter' → logprob: -3.450810432434082
    4. 's' → logprob: -4.200810432434082
    5. '_s' → logprob: -4.825810432434082
    6. '   ' → logprob: -5.575810432434082
    7. 'sorted' → logprob: -5.575810432434082
    8. '_end' → logprob: -5.700810432434082
    9. '_' → logprob: -5.825810432434082
    10. '[' → logprob: -5.950810432434082

Token 1087: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029835645109415054
    2. '[' → logprob: -4.4048357009887695
    3. '```' → logprob: -5.0298357009887695
    4. 'i' → logprob: -5.6548357009887695
    5. '
' → logprob: -6.7798357009887695
    6. ')' → logprob: -7.0298357009887695
    7. '][' → logprob: -7.1548357009887695
    8. ')[' → logprob: -7.4048357009887695
    9. '   ' → logprob: -7.7798357009887695
    10. ']' → logprob: -7.9048357009887695

Token 1088: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.271827757358551
    2. '+' → logprob: -2.1468276977539062
    3. '-' → logprob: -3.5218276977539062
    4. '],' → logprob: -3.8968276977539062
    5. '[' → logprob: -4.021827697753906
    6. '==' → logprob: -4.521827697753906
    7. ']' → logprob: -4.646827697753906
    8. '   ' → logprob: -5.021827697753906
    9. '[i' → logprob: -5.021827697753906
    10. ']][' → logprob: -5.521827697753906

Token 1089: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11948289722204208
    2. 'i' → logprob: -2.24448299407959
    3. '+' → logprob: -5.49448299407959
    4. '-' → logprob: -6.36948299407959
    5. ']' → logprob: -8.24448299407959
    6. '0' → logprob: -8.24448299407959
    7. ']+' → logprob: -8.86948299407959
    8. '],' → logprob: -10.24448299407959
    9. ' i' → logprob: -10.49448299407959
    10. '```' → logprob: -10.86948299407959

Token 1090: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.23517733812332153
    2. '[' → logprob: -2.2351772785186768
    3. '],' → logprob: -3.1101772785186768
    4. '+' → logprob: -3.7351772785186768
    5. ']' → logprob: -4.485177516937256
    6. '])' → logprob: -5.735177516937256
    7. '   ' → logprob: -5.860177516937256
    8. '```' → logprob: -6.235177516937256
    9. 'if' → logprob: -6.360177516937256
    10. ',' → logprob: -6.485177516937256

Token 1091: 'end' (ID: 419)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25478482246398926
    2. '[' → logprob: -2.5047848224639893
    3. 'i' → logprob: -3.7547848224639893
    4. '][' → logprob: -4.00478458404541
    5. ']' → logprob: -4.12978458404541
    6. ')' → logprob: -4.50478458404541
    7. 'if' → logprob: -4.62978458404541
    8. '```' → logprob: -4.62978458404541
    9. '],' → logprob: -4.75478458404541
    10. 'end' → logprob: -5.12978458404541

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11182142049074173
    2. ',i' → logprob: -2.861821413040161
    3. ' and' → logprob: -4.23682165145874
    4. 'and' → logprob: -5.11182165145874
    5. ',R' → logprob: -5.48682165145874
    6. ')' → logprob: -5.48682165145874
    7. ' ,' → logprob: -5.98682165145874
    8. '[i' → logprob: -6.11182165145874
    9. ' if' → logprob: -6.11182165145874
    10. 'if' → logprob: -6.36182165145874

Token 1093: ' fav' (ID: 11726)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.6411795020103455
    2. 'fav' → logprob: -0.8911795020103455
    3. 'L' → logprob: -4.26617956161499
    4. ')' → logprob: -4.39117956161499
    5. ' starts' → logprob: -4.76617956161499
    6. 'f' → logprob: -5.64117956161499
    7. ' fav' → logprob: -5.89117956161499
    8. 'R' → logprob: -6.01617956161499
    9. '   ' → logprob: -6.39117956161499
    10. '```' → logprob: -6.39117956161499

Token 1094: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.01480055134743452
    2. 'sorted' → logprob: -5.389800548553467
    3. '[' → logprob: -6.389800548553467
    4. 's' → logprob: -6.389800548553467
    5. '_start' → logprob: -6.389800548553467
    6. 'i' → logprob: -6.764800548553467
    7. ')' → logprob: -7.014800548553467
    8. '[i' → logprob: -7.639800548553467
    9. '_' → logprob: -8.139801025390625
    10. '_s' → logprob: -8.389801025390625

Token 1095: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1679365038871765
    2. '[' → logprob: -2.5429365634918213
    3. 'i' → logprob: -2.6679365634918213
    4. 'start' → logprob: -6.292936325073242
    5. 'end' → logprob: -7.042936325073242
    6. '][' → logprob: -7.292936325073242
    7. '(i' → logprob: -7.917936325073242
    8. '.start' → logprob: -8.417936325073242
    9. '[start' → logprob: -8.417936325073242
    10. '0' → logprob: -8.542936325073242

Token 1096: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5854226350784302
    2. '[' → logprob: -1.7104226350784302
    3. '])' → logprob: -1.7104226350784302
    4. '+' → logprob: -3.9604225158691406
    5. ']' → logprob: -4.960422515869141
    6. 'if' → logprob: -4.960422515869141
    7. '-' → logprob: -4.960422515869141
    8. 'i' → logprob: -5.085422515869141
    9. '])
' → logprob: -5.085422515869141
    10. ')[' → logprob: -5.210422515869141

Token 1097: 'start' (ID: 5236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5923329591751099
    2. 'start' → logprob: -0.8423329591751099
    3. '1' → logprob: -4.71733283996582
    4. 'end' → logprob: -4.96733283996582
    5. '[' → logprob: -8.46733283996582
    6. '_start' → logprob: -10.09233283996582
    7. '```' → logprob: -10.96733283996582
    8. 'starts' → logprob: -11.34233283996582
    9. ' start' → logprob: -11.46733283996582
    10. '-' → logprob: -11.59233283996582

Token 1098: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02157025970518589
    2. '):' → logprob: -4.771570205688477
    3. ')
' → logprob: -5.271570205688477
    4. ']' → logprob: -5.771570205688477
    5. '),' → logprob: -7.021570205688477
    6. '):
' → logprob: -7.271570205688477
    7. '+' → logprob: -7.646570205688477
    8. '...' → logprob: -8.021570205688477
    9. '#' → logprob: -8.146570205688477
    10. '       ' → logprob: -8.271570205688477

Token 1099: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7624896764755249
    2. '       ' → logprob: -1.012489676475525
    3. '           ' → logprob: -3.0124897956848145
    4. ' and' → logprob: -3.2624897956848145
    5. ')' → logprob: -3.6374897956848145
    6. '):' → logprob: -4.2624897956848145
    7. '<|end|>' → logprob: -4.7624897956848145
    8. ':
' → logprob: -5.1374897956848145
    9. ',' → logprob: -5.3874897956848145
    10. '   ' → logprob: -5.6374897956848145

Token 1100: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3151138126850128
    2. ')' → logprob: -3.3151137828826904
    3. '       ' → logprob: -3.3151137828826904
    4. ' if' → logprob: -3.4401137828826904
    5. ' and' → logprob: -3.5651137828826904
    6. ' continue' → logprob: -4.0651140213012695
    7. '):' → logprob: -4.0651140213012695
    8. 'continue' → logprob: -4.0651140213012695
    9. '<|end|>' → logprob: -4.1901140213012695
    10. 'if' → logprob: -4.3151140213012695

Token 1101: ' Correction' (ID: 134873)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5019655227661133
    2. '       ' → logprob: -2.2519655227661133
    3. ' if' → logprob: -2.5019655227661133
    4. ' continue' → logprob: -2.6269655227661133
    5. 'continue' → logprob: -3.0019655227661133
    6. ')' → logprob: -3.8769655227661133
    7. 'if' → logprob: -4.251965522766113
    8. ':' → logprob: -4.751965522766113
    9. ' and' → logprob: -4.876965522766113
    10. ',' → logprob: -5.251965522766113

Token 1102: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41890957951545715
    2. '#' → logprob: -1.9189095497131348
    3. 'for' → logprob: -2.6689095497131348
    4. 'if' → logprob: -2.6689095497131348
    5. '           ' → logprob: -3.5439095497131348
    6. ' if' → logprob: -4.543909549713135
    7. ' for' → logprob: -5.543909549713135
    8. 'starts' → logprob: -5.668909549713135
    9. '
' → logprob: -6.668909549713135
    10. '   ' → logprob: -6.793909549713135

Token 1103: ' starts' (ID: 13217)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12717556953430176
    2. ' if' → logprob: -2.8771755695343018
    3. '#' → logprob: -4.127175331115723
    4. 'L' → logprob: -4.252175331115723
    5. '       ' → logprob: -4.377175331115723
    6. '           ' → logprob: -5.002175331115723
    7. 'for' → logprob: -5.627175331115723
    8. 'continue' → logprob: -5.877175331115723
    9. 'st' → logprob: -6.127175331115723
    10. ' L' → logprob: -6.877175331115723

Token 1104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15106385946273804
    2. '[i' → logprob: -2.151063919067383
    3. '=[' → logprob: -4.776063919067383
    4. ' =' → logprob: -5.026063919067383
    5. '
' → logprob: -6.276063919067383
    6. '[' → logprob: -6.651063919067383
    7. '=
' → logprob: -6.776063919067383
    8. 'should' → logprob: -7.401063919067383
    9. '```' → logprob: -7.651063919067383
    10. '=i' → logprob: -7.776063919067383

Token 1105: ' [' (ID: 723)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.19453556835651398
    2. '[' → logprob: -1.8195356130599976
    3. 'ends' → logprob: -4.444535732269287
    4. '[end' → logprob: -7.194535732269287
    5. ' [' → logprob: -7.319535732269287
    6. '[-' → logprob: -7.444535732269287
    7. '[e' → logprob: -8.694535255432129
    8. '   ' → logprob: -9.444535255432129
    9. '[len' → logprob: -9.444535255432129
    10. '[s' → logprob: -9.444535255432129

Token 1106: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6133783459663391
    2. 'ends' → logprob: -0.9883783459663391
    3. '-' → logprob: -3.2383782863616943
    4. '10' → logprob: -3.7383782863616943
    5. '-f' → logprob: -5.613378524780273
    6. ' f' → logprob: -5.863378524780273
    7. ' ends' → logprob: -5.988378524780273
    8. 'starts' → logprob: -5.988378524780273
    9. 'fav' → logprob: -6.113378524780273
    10. '...' → logprob: -6.613378524780273

Token 1107: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06232639029622078
    2. '[' → logprob: -3.062326431274414
    3. 'i' → logprob: -4.812326431274414
    4. '(i' → logprob: -5.937326431274414
    5. '-' → logprob: -6.812326431274414
    6. '[-' → logprob: -7.437326431274414
    7. '+' → logprob: -7.562326431274414
    8. '][' → logprob: -8.937326431274414
    9. '
' → logprob: -9.062326431274414
    10. ']' → logprob: -9.312326431274414

Token 1108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2325630933046341
    2. '0' → logprob: -1.8575631380081177
    3. 'i' → logprob: -2.982563018798828
    4. '-' → logprob: -8.982563018798828
    5. '
' → logprob: -9.232563018798828
    6. '(i' → logprob: -9.357563018798828
    7. '2' → logprob: -9.607563018798828
    8. '3' → logprob: -9.732563018798828
    9. '```' → logprob: -9.732563018798828
    10. '   ' → logprob: -9.857563018798828

Token 1109: ']],' (ID: 37171)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2971535921096802
    2. 'for' → logprob: -1.4221535921096802
    3. ']' → logprob: -4.922153472900391
    4. '-' → logprob: -5.547153472900391
    5. '[i' → logprob: -7.047153472900391
    6. '[' → logprob: -7.172153472900391
    7. '][' → logprob: -7.297153472900391
    8. ' -' → logprob: -7.422153472900391
    9. ']+' → logprob: -7.672153472900391
    10. '   ' → logprob: -7.922153472900391

Token 1110: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.6287538409233093
    2. ' ends' → logprob: -0.8787538409233093
    3. '   ' → logprob: -4.503753662109375
    4. '[' → logprob: -4.628753662109375
    5. 'f' → logprob: -5.128753662109375
    6. ' f' → logprob: -5.128753662109375
    7. '       ' → logprob: -5.378753662109375
    8. '#' → logprob: -5.753753662109375
    9. ' [' → logprob: -6.003753662109375
    10. ' #' → logprob: -6.253753662109375

Token 1111: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35040509700775146
    2. ' =' → logprob: -1.4754050970077515
    3. '=[' → logprob: -2.725405216217041
    4. ' =[' → logprob: -7.600405216217041
    5. '[i' → logprob: -8.350404739379883
    6. ']' → logprob: -8.850404739379883
    7. '=
' → logprob: -9.350404739379883
    8. '+' → logprob: -9.725404739379883
    9. '+[' → logprob: -9.725404739379883
    10. '   ' → logprob: -10.100404739379883

Token 1112: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0027598219458013773
    2. '-' → logprob: -6.87775993347168
    3. 'i' → logprob: -7.12775993347168
    4. ' f' → logprob: -8.12775993347168
    5. '0' → logprob: -8.87775993347168
    6. '...' → logprob: -9.00275993347168
    7. '   ' → logprob: -10.00275993347168
    8. '-f' → logprob: -10.00275993347168
    9. '
' → logprob: -10.62775993347168
    10. '```' → logprob: -10.75275993347168

Token 1113: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38397982716560364
    2. 'i' → logprob: -1.2589797973632812
    3. '(i' → logprob: -3.8839797973632812
    4. '[' → logprob: -5.133979797363281
    5. '[i' → logprob: -5.133979797363281
    6. '1' → logprob: -6.133979797363281
    7. '(' → logprob: -8.883979797363281
    8. ' i' → logprob: -9.008979797363281
    9. '   ' → logprob: -10.133979797363281
    10. '_i' → logprob: -11.133979797363281

Token 1114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019706515595316887
    2. '1' → logprob: -4.144706726074219
    3. 'i' → logprob: -5.644706726074219
    4. '(i' → logprob: -10.394706726074219
    5. '
' → logprob: -11.144706726074219
    6. ']' → logprob: -11.707206726074219
    7. '{i' → logprob: -11.707206726074219
    8. '[' → logprob: -11.894706726074219
    9. '-' → logprob: -12.082206726074219
    10. '[i' → logprob: -12.144706726074219

Token 1115: ']],' (ID: 37171)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.38403403759002686
    2. ']' → logprob: -1.6340340375900269
    3. ']]' → logprob: -2.7590341567993164
    4. ']]
' → logprob: -3.1340341567993164
    5. ']
' → logprob: -4.884034156799316
    6. '],' → logprob: -6.009034156799316
    7. 'for' → logprob: -6.134034156799316
    8. '+' → logprob: -6.634034156799316
    9. ']]

' → logprob: -7.634034156799316
    10. ']][' → logprob: -8.134034156799316

Token 1116: ' saved' (ID: 10576)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6180524826049805
    2. ']' → logprob: -1.4930524826049805
    3. ')' → logprob: -2.8680524826049805
    4. ' if' → logprob: -2.8680524826049805
    5. 'for' → logprob: -3.7430524826049805
    6. 'if' → logprob: -3.7430524826049805
    7. ' for' → logprob: -4.3680524826049805
    8. ',' → logprob: -4.4930524826049805
    9. 'continue' → logprob: -4.8680524826049805
    10. '<|end|>' → logprob: -4.9930524826049805

Token 1117: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9894183874130249
    2. '       ' → logprob: -1.614418387413025
    3. ']' → logprob: -2.4894185066223145
    4. ' for' → logprob: -2.8644185066223145
    5. ' if' → logprob: -3.1144185066223145
    6. '<|end|>' → logprob: -3.1144185066223145
    7. 'if' → logprob: -3.3644185066223145
    8. '   ' → logprob: -3.4894185066223145
    9. '[i' → logprob: -3.6144185066223145
    10. '<|end|>' → logprob: -3.9894185066223145

Token 1118: ' order' (ID: 2569)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38421860337257385
    2. '[i' → logprob: -2.259218692779541
    3. ']' → logprob: -3.259218692779541
    4. 'reverse' → logprob: -3.259218692779541
    5. '[' → logprob: -3.759218692779541
    6. 'i' → logprob: -4.384218692779541
    7. 'for' → logprob: -4.759218692779541
    8. 're' → logprob: -4.884218692779541
    9. 'starts' → logprob: -5.009218692779541
    10. 'the' → logprob: -5.134218692779541

Token 1119: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3590559959411621
    2. ' if' → logprob: -2.484055995941162
    3. '<|end|>' → logprob: -2.984055995941162
    4. ')' → logprob: -3.484055995941162
    5. '   ' → logprob: -3.734055995941162
    6. ' for' → logprob: -3.984055995941162
    7. ']' → logprob: -4.109055995941162
    8. '...' → logprob: -4.359055995941162
    9. ',' → logprob: -4.484055995941162
    10. 'if' → logprob: -4.484055995941162

Token 1120: ' possibly' (ID: 14836)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22565560042858124
    2. ')' → logprob: -2.4756555557250977
    3. ' if' → logprob: -3.4756555557250977
    4. '<|end|>' → logprob: -4.100655555725098
    5. ']' → logprob: -4.225655555725098
    6. '           ' → logprob: -4.350655555725098
    7. ',' → logprob: -4.975655555725098
    8. '<|end|>' → logprob: -5.475655555725098
    9. '...' → logprob: -5.600655555725098
    10. 'continue' → logprob: -5.600655555725098

Token 1121: ' starts' (ID: 13217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5564415454864502
    2. 'for' → logprob: -2.55644154548645
    3. '   ' → logprob: -3.05644154548645
    4. '#' → logprob: -3.18144154548645
    5. '
' → logprob: -3.30644154548645
    6. ']' → logprob: -3.68144154548645
    7. ' for' → logprob: -4.056441307067871
    8. 'st' → logprob: -4.056441307067871
    9. 'continue' → logprob: -4.056441307067871
    10. '```' → logprob: -4.181441307067871

Token 1122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2414628565311432
    2. '=' → logprob: -2.8664629459381104
    3. ']' → logprob: -3.6164629459381104
    4. '>' → logprob: -4.116462707519531
    5. '```' → logprob: -4.116462707519531
    6. '.sort' → logprob: -4.241462707519531
    7. '[' → logprob: -4.241462707519531
    8. '[::-' → logprob: -5.116462707519531
    9. '
' → logprob: -5.366462707519531
    10. '=[' → logprob: -5.366462707519531

Token 1123: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6325408816337585
    2. ']' → logprob: -1.1325409412384033
    3. '+' → logprob: -2.3825409412384033
    4. ']+' → logprob: -4.632540702819824
    5. '-' → logprob: -4.882540702819824
    6. ']>' → logprob: -5.132540702819824
    7. ']<' → logprob: -5.132540702819824
    8. '],' → logprob: -5.632540702819824
    9. ']<=' → logprob: -5.632540702819824
    10. '```' → logprob: -5.757540702819824

Token 1124: ' <' (ID: 464)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4174703359603882
    2. ',' → logprob: -1.7924703359603882
    3. 'and' → logprob: -1.7924703359603882
    4. 'if' → logprob: -2.9174704551696777
    5. '>=' → logprob: -2.9174704551696777
    6. ' if' → logprob: -3.1674704551696777
    7. ']' → logprob: -3.2924704551696777
    8. '       ' → logprob: -3.5424704551696777
    9. '=' → logprob: -3.5424704551696777
    10. '<=' → logprob: -3.6674704551696777

Token 1125: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0010137568460777402
    2. ' ends' → logprob: -7.62601375579834
    3. 'R' → logprob: -8.00101375579834
    4. '```' → logprob: -9.50101375579834
    5. 'starts' → logprob: -10.12601375579834
    6. '   ' → logprob: -11.00101375579834
    7. '=' → logprob: -11.75101375579834
    8. 'L' → logprob: -12.12601375579834
    9. 'for' → logprob: -12.25101375579834
    10. '``' → logprob: -12.25101375579834

Token 1126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6064380407333374
    2. ']' → logprob: -1.2314380407333374
    3. '       ' → logprob: -3.356438159942627
    4. '[' → logprob: -3.856438159942627
    5. ':
' → logprob: -4.106438159942627
    6. '+' → logprob: -4.106438159942627
    7. ':' → logprob: -4.981438159942627
    8. '][' → logprob: -5.106438159942627
    9. ',' → logprob: -5.231438159942627
    10. '   ' → logprob: -5.231438159942627

Token 1127: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14409872889518738
    2. ']
' → logprob: -2.8940987586975098
    3. ']:
' → logprob: -3.0190987586975098
    4. ']:' → logprob: -3.8940987586975098
    5. '],' → logprob: -5.51909875869751
    6. '[i' → logprob: -6.39409875869751
    7. '])' → logprob: -7.14409875869751
    8. ']:

' → logprob: -7.89409875869751
    9. '```' → logprob: -8.394098281860352
    10. ']

' → logprob: -8.394098281860352

Token 1128: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6926489472389221
    2. ')' → logprob: -1.4426488876342773
    3. ' if' → logprob: -2.8176488876342773
    4. ']' → logprob: -3.0676488876342773
    5. ':' → logprob: -3.1926488876342773
    6. '<|end|>' → logprob: -3.4426488876342773
    7. '   ' → logprob: -3.8176488876342773
    8. '):' → logprob: -4.442648887634277
    9. ',' → logprob: -4.817648887634277
    10. '[i' → logprob: -5.192648887634277

Token 1129: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8978186845779419
    2. ')' → logprob: -1.272818684577942
    3. '):' → logprob: -3.0228185653686523
    4. ']' → logprob: -3.1478185653686523
    5. ':' → logprob: -3.3978185653686523
    6. 'continue' → logprob: -3.7728185653686523
    7. ' continue' → logprob: -3.7728185653686523
    8. '           ' → logprob: -3.8978185653686523
    9. ' if' → logprob: -3.8978185653686523
    10. '   ' → logprob: -4.147818565368652

Token 1130: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11916179209947586
    2. 'continue' → logprob: -3.36916184425354
    3. ' continue' → logprob: -4.369161605834961
    4. '   ' → logprob: -4.869161605834961
    5. '           ' → logprob: -4.869161605834961
    6. ' if' → logprob: -5.119161605834961
    7. ']' → logprob: -5.119161605834961
    8. 'for' → logprob: -5.244161605834961
    9. ')' → logprob: -5.369161605834961
    10. 'if' → logprob: -5.744161605834961

Token 1131: ' fix' (ID: 9295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7662458419799805
    2. 'should' → logprob: -2.0162458419799805
    3. 'for' → logprob: -2.1412458419799805
    4. ' should' → logprob: -2.7662458419799805
    5. 'continue' → logprob: -3.2662458419799805
    6. ' need' → logprob: -3.3912458419799805
    7. '#' → logprob: -3.5162458419799805
    8. 'need' → logprob: -3.8912458419799805
    9. '       ' → logprob: -4.1412458419799805
    10. ' continue' → logprob: -4.6412458419799805

Token 1132: ' swapped' (ID: 125210)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2453086376190186
    2. 'for' → logprob: -1.3703086376190186
    3. 'starts' → logprob: -2.1203086376190186
    4. '   ' → logprob: -2.4953086376190186
    5. '#' → logprob: -2.8703086376190186
    6. '
' → logprob: -2.9953086376190186
    7. ' the' → logprob: -3.2453086376190186
    8. 'L' → logprob: -3.3703086376190186
    9. ' for' → logprob: -4.495308876037598
    10. 'if' → logprob: -4.620308876037598

Token 1133: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9930552840232849
    2. '[i' → logprob: -1.8680553436279297
    3. 'for' → logprob: -1.9930553436279297
    4. ' if' → logprob: -2.2430553436279297
    5. 'if' → logprob: -2.7430553436279297
    6. '   ' → logprob: -3.1180553436279297
    7. ' for' → logprob: -3.4930553436279297
    8. '[' → logprob: -4.11805534362793
    9. '[
' → logprob: -4.36805534362793
    10. 'starts' → logprob: -4.74305534362793

Token 1134: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05799303203821182
    2. '```' → logprob: -3.057992935180664
    3. ' if' → logprob: -5.557992935180664
    4. ' for' → logprob: -6.057992935180664
    5. ',' → logprob: -7.557992935180664
    6. ' starts' → logprob: -7.682992935180664
    7. '<|end|>' → logprob: -7.932992935180664
    8. 'for' → logprob: -8.557992935180664
    9. '[' → logprob: -8.557992935180664
    10. ')' → logprob: -8.682992935180664

Token 1135: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8904327750205994
    2. 'if' → logprob: -1.0154328346252441
    3. 'for' → logprob: -2.390432834625244
    4. ' if' → logprob: -2.765432834625244
    5. '           ' → logprob: -3.015432834625244
    6. ' for' → logprob: -5.390432834625244
    7. 'continue' → logprob: -5.390432834625244
    8. '```' → logprob: -5.390432834625244
    9. '#' (adapté à ' #') → logprob: -6.390432834625244
    10. ')' → logprob: -6.765432834625244

Token 1136: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34324154257774353
    2. ' if' → logprob: -2.0932414531707764
    3. 'if' → logprob: -2.4682414531707764
    4. 'for' → logprob: -3.7182414531707764
    5. '           ' → logprob: -3.8432414531707764
    6. ')' → logprob: -4.9682416915893555
    7. '#' → logprob: -5.0932416915893555
    8. ' for' → logprob: -5.3432416915893555
    9. ']' → logprob: -5.4682416915893555
    10. 'continue' → logprob: -5.7182416915893555

Token 1137: ' starts' (ID: 13217)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.18866285681724548
    2. '#' → logprob: -2.8136627674102783
    3. 'L' → logprob: -3.0636627674102783
    4. ' starts' → logprob: -4.313663005828857
    5. 'if' → logprob: -4.938663005828857
    6. '       ' → logprob: -5.063663005828857
    7. 'for' → logprob: -5.063663005828857
    8. '           ' → logprob: -5.313663005828857
    9. ' L' → logprob: -5.813663005828857
    10. '   ' → logprob: -5.813663005828857

Token 1138: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024501310661435127
    2. ' =' → logprob: -4.149501323699951
    3. '=[' → logprob: -5.399501323699951
    4. '[i' → logprob: -5.899501323699951
    5. '```' → logprob: -8.774500846862793
    6. '=
' → logprob: -8.899500846862793
    7. '[::-' → logprob: -9.024500846862793
    8. '[' → logprob: -9.149500846862793
    9. 's' → logprob: -9.274500846862793
    10. ']' → logprob: -9.399500846862793

Token 1139: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9295393228530884
    2. '=' → logprob: -1.1795393228530884
    3. ',' → logprob: -2.679539203643799
    4. '>' → logprob: -3.054539203643799
    5. '],' → logprob: -3.179539203643799
    6. ']=' → logprob: -3.429539203643799
    7. '```' → logprob: -3.679539203643799
    8. 'should' → logprob: -3.804539203643799
    9. ' =' → logprob: -5.054539203643799
    10. 's' → logprob: -5.179539203643799

Token 1140: 'fav' (ID: 137909)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.08857841789722443
    2. 'f' → logprob: -2.588578462600708
    3. '[' → logprob: -5.838578224182129
    4. '[f' → logprob: -6.338578224182129
    5. 'fav' → logprob: -6.338578224182129
    6. 'starts' → logprob: -6.713578224182129
    7. ' ends' → logprob: -6.963578224182129
    8. '   ' → logprob: -8.838578224182129
    9. ' f' → logprob: -9.213578224182129
    10. 'end' → logprob: -9.651078224182129

Token 1141: ' end' (ID: 1268)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.003229875583201647
    2. 's' → logprob: -7.003230094909668
    3. '[i' → logprob: -7.128230094909668
    4. '[' → logprob: -8.128230094909668
    5. '```' → logprob: -8.128230094909668
    6. '_inter' → logprob: -8.628230094909668
    7. 'sorted' → logprob: -9.003230094909668
    8. '
' → logprob: -9.378230094909668
    9. '[_' → logprob: -9.378230094909668
    10. '   ' → logprob: -10.003230094909668

Token 1142: ' times' (ID: 4238)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5751882195472717
    2. '[i' → logprob: -1.700188159942627
    3. '=' → logprob: -2.200188159942627
    4. '   ' → logprob: -3.325188159942627
    5. ',' → logprob: -3.700188159942627
    6. ']=' → logprob: -4.200188159942627
    7. 's' → logprob: -4.325188159942627
    8. ']
' → logprob: -4.450188159942627
    9. 'for' → logprob: -4.700188159942627
    10. ' =' → logprob: -5.325188159942627

Token 1143: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8332316875457764
    2. ',' → logprob: -1.8332316875457764
    3. ']' → logprob: -2.2082316875457764
    4. 'if' → logprob: -2.5832316875457764
    5. ' if' → logprob: -3.0832316875457764
    6. '```' → logprob: -3.5832316875457764
    7. ':' → logprob: -3.8332316875457764
    8. '   ' → logprob: -3.9582316875457764
    9. '           ' → logprob: -3.9582316875457764
    10. '[i' → logprob: -4.4582319259643555

Token 1144: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.39722198247909546
    2. '       ' → logprob: -1.2722220420837402
    3. ' ends' → logprob: -3.8972220420837402
    4. '#' → logprob: -3.8972220420837402
    5. '```' → logprob: -5.64722204208374
    6. 'R' → logprob: -7.77222204208374
    7. 'and' → logprob: -7.77222204208374
    8. '   ' → logprob: -8.022221565246582
    9. 'Ends' → logprob: -8.272221565246582
    10. 'for' → logprob: -8.397221565246582

Token 1145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004350797680672258
    2. 'i' → logprob: -9.125434875488281
    3. '```' → logprob: -9.250434875488281
    4. '=[' → logprob: -9.625434875488281
    5. '=' → logprob: -9.875434875488281
    6. '[' → logprob: -10.000434875488281
    7. '=i' → logprob: -10.875434875488281
    8. ' =' → logprob: -11.375434875488281
    9. ']' → logprob: -12.250434875488281
    10. '[
' → logprob: -12.375434875488281

Token 1146: ']=' (ID: 9539)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10406521707773209
    2. ']=' → logprob: -2.979065179824829
    3. ']' → logprob: -3.104065179824829
    4. '=' → logprob: -6.354065418243408
    5. 'i' → logprob: -7.479065418243408
    6. '```' → logprob: -8.60406494140625
    7. '[' → logprob: -8.72906494140625
    8. '[
' → logprob: -9.47906494140625
    9. '=i' → logprob: -9.97906494140625
    10. '=[' → logprob: -9.97906494140625

Token 1147: 'fav' (ID: 137909)
  Prédit: 'fav'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.13014426827430725
    2. 'f' → logprob: -2.2551443576812744
    3. '[f' → logprob: -5.005144119262695
    4. 'starts' → logprob: -5.755144119262695
    5. '[' → logprob: -5.755144119262695
    6. 'sorted' → logprob: -7.005144119262695
    7. '[i' → logprob: -7.130144119262695
    8. '[-' → logprob: -8.505144119262695
    9. ' fav' → logprob: -8.755144119262695
    10. 'favor' → logprob: -8.755144119262695

Token 1148: ' start' (ID: 1604)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.030760150402784348
    2. 'i' → logprob: -3.7807600498199463
    3. ')' → logprob: -6.655760288238525
    4. ']' → logprob: -6.780760288238525
    5. '```' → logprob: -6.780760288238525
    6. 'start' → logprob: -7.155760288238525
    7. 'starts' → logprob: -7.530760288238525
    8. '[' → logprob: -7.530760288238525
    9. '[
' → logprob: -7.530760288238525
    10. 's' → logprob: -7.905760288238525

Token 1149: ' times' (ID: 4238)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6734110713005066
    2. ']' → logprob: -0.9234110713005066
    3. ']
' → logprob: -3.0484111309051514
    4. '[
' → logprob: -4.548410892486572
    5. 's' → logprob: -5.048410892486572
    6. ')' → logprob: -5.423410892486572
    7. '[' → logprob: -5.548410892486572
    8. '       ' → logprob: -5.798410892486572
    9. '   ' → logprob: -5.923410892486572
    10. ']:
' → logprob: -6.048410892486572

Token 1150: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09588253498077393
    2. ']' → logprob: -3.3458824157714844
    3. '[i' → logprob: -3.9708824157714844
    4. '[' → logprob: -4.970882415771484
    5. ')' → logprob: -5.095882415771484
    6. ',' → logprob: -5.470882415771484
    7. '   ' → logprob: -5.595882415771484
    8. 'for' → logprob: -5.845882415771484
    9. '```' → logprob: -5.970882415771484
    10. '[
' → logprob: -6.470882415771484

Token 1151: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3095490336418152
    2. ' if' → logprob: -2.05954909324646
    3. ')' → logprob: -3.05954909324646
    4. ' starts' → logprob: -4.809548854827881
    5. '[i' → logprob: -4.934548854827881
    6. 'i' → logprob: -4.934548854827881
    7. 'starts' → logprob: -5.184548854827881
    8. '[' → logprob: -5.184548854827881
    9. ' i' → logprob: -5.434548854827881
    10. 'if' → logprob: -5.434548854827881

Token 1152: ' starts' (ID: 13217)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.192893385887146
    2. 'for' → logprob: -1.442893385887146
    3. 'st' → logprob: -1.942893385887146
    4. 'i' → logprob: -2.4428935050964355
    5. 'L' → logprob: -2.9428935050964355
    6. ' if' → logprob: -3.4428935050964355
    7. ' for' → logprob: -3.5678935050964355
    8. ' i' → logprob: -3.9428935050964355
    9. '#' → logprob: -4.0678935050964355
    10. 'starts' → logprob: -4.1928935050964355

Token 1153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013072226196527481
    2. '=' → logprob: -5.2630720138549805
    3. '[' → logprob: -5.8880720138549805
    4. '```' → logprob: -5.8880720138549805
    5. ']' → logprob: -7.5130720138549805
    6. '[
' → logprob: -7.6380720138549805
    7. '=[' → logprob: -7.8880720138549805
    8. '>' → logprob: -8.88807201385498
    9. 'i' → logprob: -9.13807201385498
    10. ')' → logprob: -9.26307201385498

Token 1154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29922083020210266
    2. '[i' → logprob: -1.5492208003997803
    3. ']<' → logprob: -3.9242208003997803
    4. ']<=' → logprob: -5.174221038818359
    5. '```' → logprob: -5.549221038818359
    6. '<=' → logprob: -5.674221038818359
    7. ']=' → logprob: -6.049221038818359
    8. ']>' → logprob: -6.174221038818359
    9. '>' → logprob: -6.674221038818359
    10. '[' → logprob: -6.799221038818359

Token 1155: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9688392877578735
    2. '[i' → logprob: -1.0938392877578735
    3. ' <' → logprob: -2.593839168548584
    4. '<=' → logprob: -2.718839168548584
    5. '<' → logprob: -3.093839168548584
    6. ' >' → logprob: -3.343839168548584
    7. '[' → logprob: -3.593839168548584
    8. ' <=' → logprob: -4.343839168548584
    9. '```' → logprob: -5.093839168548584
    10. '<i' → logprob: -5.593839168548584

Token 1156: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0007113590254448354
    2. 'fav' → logprob: -8.250711441040039
    3. 'starts' → logprob: -8.500711441040039
    4. ' ends' → logprob: -8.625711441040039
    5. '
' → logprob: -10.875711441040039
    6. '   ' → logprob: -11.250711441040039
    7. '```' → logprob: -11.750711441040039
    8. 'f' → logprob: -12.000711441040039
    9. '=' → logprob: -12.625711441040039
    10. '[' → logprob: -13.250711441040039

Token 1157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004736514762043953
    2. '[' → logprob: -5.504736423492432
    3. ']' → logprob: -8.25473690032959
    4. '[
' → logprob: -9.00473690032959
    5. 'i' → logprob: -9.75473690032959
    6. '_i' → logprob: -10.12973690032959
    7. '```' → logprob: -10.25473690032959
    8. '_' → logprob: -10.37973690032959
    9. '(i' → logprob: -11.00473690032959
    10. '][' → logprob: -11.37973690032959

Token 1158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.694726288318634
    2. '[i' → logprob: -0.819726288318634
    3. ')' → logprob: -3.1947262287139893
    4. ']:' → logprob: -5.444726467132568
    5. '[' → logprob: -5.819726467132568
    6. ':' → logprob: -5.819726467132568
    7. '):' → logprob: -6.319726467132568
    8. '[
' → logprob: -6.694726467132568
    9. '],' → logprob: -6.944726467132568
    10. '```' → logprob: -7.319726467132568

Token 1159: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2128901183605194
    2. ']' → logprob: -2.962890148162842
    3. ')' → logprob: -3.587890148162842
    4. '[' → logprob: -3.712890148162842
    5. '   ' → logprob: -4.087890148162842
    6. '[i' → logprob: -4.337890148162842
    7. 'for' → logprob: -4.462890148162842
    8. '<|end|>' → logprob: -4.462890148162842
    9. ',' → logprob: -5.087890148162842
    10. 'continue' → logprob: -5.337890148162842

Token 1160: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.595025897026062
    2. '>' → logprob: -1.720025897026062
    3. 'should' → logprob: -1.845025897026062
    4. ']' → logprob: -2.5950260162353516
    5. '   ' → logprob: -2.8450260162353516
    6. '#' → logprob: -3.0950260162353516
    7. ':
' → logprob: -3.0950260162353516
    8. '=' → logprob: -3.7200260162353516
    9. 'is' → logprob: -3.7200260162353516
    10. ')' → logprob: -3.8450260162353516

Token 1161: ' reversed' (ID: 57184)
  Prédit: 'wrong'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrong' → logprob: -0.6455868482589722
    2. 'False' → logprob: -2.1455869674682617
    3. 'incorrect' → logprob: -2.3955869674682617
    4. 'sw' → logprob: -2.6455869674682617
    5. 'a' → logprob: -3.1455869674682617
    6. 'back' → logprob: -3.2705869674682617
    7. 'not' → logprob: -3.6455869674682617
    8. 're' → logprob: -3.7705869674682617
    9. 'True' → logprob: -4.020586967468262
    10. 'st' → logprob: -4.145586967468262

Token 1162: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4657385349273682
    2. ']' → logprob: -1.5907385349273682
    3. '[i' → logprob: -1.8407385349273682
    4. '       ' → logprob: -2.715738534927368
    5. '   ' → logprob: -2.715738534927368
    6. '[' → logprob: -2.840738534927368
    7. 'for' → logprob: -2.965738534927368
    8. '<|end|>' → logprob: -3.340738534927368
    9. ',' → logprob: -4.090738296508789
    10. ':' → logprob: -4.090738296508789

Token 1163: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4129963219165802
    2. ')' → logprob: -2.287996292114258
    3. '[i' → logprob: -2.662996292114258
    4. ':' → logprob: -3.162996292114258
    5. '[' → logprob: -3.412996292114258
    6. ']' → logprob: -3.787996292114258
    7. ':
' → logprob: -4.037996292114258
    8. '   ' → logprob: -4.412996292114258
    9. '[
' → logprob: -5.287996292114258
    10. '<|end|>' → logprob: -5.287996292114258

Token 1164: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23324619233608246
    2. '           ' → logprob: -3.233246088027954
    3. 'starts' → logprob: -3.608246088027954
    4. '```' → logprob: -3.983246088027954
    5. 'for' → logprob: -4.358246326446533
    6. '[' → logprob: -4.483246326446533
    7. ' starts' → logprob: -4.483246326446533
    8. ' if' → logprob: -4.733246326446533
    9. 'continue' → logprob: -4.733246326446533
    10. ')' → logprob: -4.858246326446533

Token 1165: ' fix' (ID: 9295)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7752742171287537
    2. ']' → logprob: -2.1502742767333984
    3. ')' → logprob: -2.6502742767333984
    4. 'if' → logprob: -2.6502742767333984
    5. 'for' → logprob: -2.7752742767333984
    6. '[i' → logprob: -3.2752742767333984
    7. '[' → logprob: -3.9002742767333984
    8. '#' → logprob: -4.025274276733398
    9. 'starts' → logprob: -4.025274276733398
    10. 'i' → logprob: -4.400274276733398

Token 1166: ':' (ID: 25)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.04886962100863457
    2. 'ends' → logprob: -3.4238696098327637
    3. '   ' → logprob: -4.548869609832764
    4. 'for' → logprob: -6.548869609832764
    5. 'L' → logprob: -6.798869609832764
    6. '#' → logprob: -7.173869609832764
    7. '       ' → logprob: -8.173870086669922
    8. '```' → logprob: -8.673870086669922
    9. '
' → logprob: -9.673870086669922
    10. 'fav' → logprob: -9.673870086669922

Token 1167: ' swap' (ID: 25489)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.004341817926615477
    2. '   ' → logprob: -6.2543416023254395
    3. 'ends' → logprob: -6.2543416023254395
    4. ' starts' → logprob: -8.754342079162598
    5. '```' → logprob: -8.754342079162598
    6. '#' → logprob: -10.129342079162598
    7. 'temp' → logprob: -11.129342079162598
    8. '``' → logprob: -11.379342079162598
    9. '
' → logprob: -11.379342079162598
    10. 'interval' → logprob: -11.504342079162598

Token 1168: ' starts' (ID: 13217)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.03230370581150055
    2. 'ends' → logprob: -3.907303810119629
    3. '   ' → logprob: -5.157303810119629
    4. 'L' → logprob: -5.657303810119629
    5. ' starts' → logprob: -6.782303810119629
    6. 'R' → logprob: -7.782303810119629
    7. '```' → logprob: -8.282303810119629
    8. '[' → logprob: -8.282303810119629
    9. 'for' → logprob: -9.907303810119629
    10. '       ' → logprob: -10.032303810119629

Token 1169: ' and' (ID: 326)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.015630390495061874
    2. ',' → logprob: -4.64063024520874
    3. 'ends' → logprob: -5.39063024520874
    4. '=' → logprob: -7.51563024520874
    5. '   ' → logprob: -8.015630722045898
    6. '[' → logprob: -9.140630722045898
    7. '```' → logprob: -9.140630722045898
    8. ' =' → logprob: -9.765630722045898
    9. ' starts' → logprob: -10.140630722045898
    10. ',
' → logprob: -10.765630722045898

Token 1170: ' ends' (ID: 17095)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -6.682846287731081e-05
    2. ' ends' → logprob: -9.625066757202148
    3. 'starts' → logprob: -14.250066757202148
    4. '   ' → logprob: -16.62506675720215
    5. 'Ends' → logprob: -19.00006675720215
    6. '
' → logprob: -19.00006675720215
    7. '#' → logprob: -19.62506675720215
    8. '```' → logprob: -19.62506675720215
    9. 'ents' → logprob: -20.75006675720215
    10. 'ENDS' → logprob: -20.87506675720215

Token 1171: ' usage' (ID: 16622)
  Prédit: 'starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starts' → logprob: -0.17118854820728302
    2. '[' → logprob: -3.1711885929107666
    3. '   ' → logprob: -3.2961885929107666
    4. 'ends' → logprob: -3.5461885929107666
    5. '       ' → logprob: -3.6711885929107666
    6. ' starts' → logprob: -4.4211883544921875
    7. '```' → logprob: -5.6711883544921875
    8. '[
' → logprob: -6.2961883544921875
    9. ',' → logprob: -6.4211883544921875
    10. 'temp' → logprob: -6.7961883544921875

Token 1172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20341499149799347
    2. 'starts' → logprob: -2.3284149169921875
    3. '[' → logprob: -3.3284149169921875
    4. '   ' → logprob: -4.7034149169921875
    5. 'ends' → logprob: -4.8284149169921875
    6. ' starts' → logprob: -5.0784149169921875
    7. '```' → logprob: -5.3284149169921875
    8. ',' → logprob: -5.4534149169921875
    9. 'for' → logprob: -5.5784149169921875
    10. '<|end|>' → logprob: -6.2034149169921875

Token 1173: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04676315560936928
    2. '[' → logprob: -4.046762943267822
    3. 'starts' → logprob: -5.046762943267822
    4. ',' → logprob: -5.421762943267822
    5. ' starts' → logprob: -5.921762943267822
    6. '   ' → logprob: -5.921762943267822
    7. '<|end|>' → logprob: -5.921762943267822
    8. '[
' → logprob: -6.796762943267822
    9. '```' → logprob: -6.796762943267822
    10. '        ' → logprob: -7.296762943267822

Token 1174: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5831689834594727
    2. 'starts' → logprob: -1.4581689834594727
    3. 'ends' → logprob: -2.4581689834594727
    4. 'for' → logprob: -2.8331689834594727
    5. '```' → logprob: -3.3331689834594727
    6. '           ' → logprob: -5.333168983459473
    7. 'L' → logprob: -5.458168983459473
    8. ' for' → logprob: -5.458168983459473
    9. '[' → logprob: -5.833168983459473
    10. '#' → logprob: -6.083168983459473

Token 1175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17564374208450317
    2. '           ' → logprob: -2.4256436824798584
    3. 'for' → logprob: -3.1756436824798584
    4. '```' → logprob: -4.6756439208984375
    5. 'continue' → logprob: -5.3006439208984375
    6. ' for' → logprob: -5.6756439208984375
    7. ' if' → logprob: -5.9256439208984375
    8. 'if' → logprob: -6.1756439208984375
    9. '   ' → logprob: -6.1756439208984375
    10. '<|end|>' → logprob: -6.1756439208984375

Token 1176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05532035976648331
    2. 'for' → logprob: -4.5553202629089355
    3. ' for' → logprob: -4.6803202629089355
    4. '<|end|>' → logprob: -4.9303202629089355
    5. '```' → logprob: -5.1803202629089355
    6. '#' → logprob: -5.1803202629089355
    7. '   ' → logprob: -5.6803202629089355
    8. '[' → logprob: -6.0553202629089355
    9. '...' → logprob: -6.1803202629089355
    10. '           ' → logprob: -6.3053202629089355

Token 1177: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03348305821418762
    2. 'starts' → logprob: -4.908483028411865
    3. 'for' → logprob: -5.033483028411865
    4. ' for' → logprob: -6.033483028411865
    5. '+' → logprob: -6.033483028411865
    6. '#' (adapté à ' #') → logprob: -6.158483028411865
    7. '           ' → logprob: -6.408483028411865
    8. ' starts' → logprob: -6.658483028411865
    9. '[' → logprob: -6.783483028411865
    10. '...' → logprob: -7.033483028411865

Token 1178: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11016007512807846
    2. 'for' → logprob: -3.1101601123809814
    3. 'if' → logprob: -3.9851601123809814
    4. '           ' → logprob: -4.610159873962402
    5. ' if' → logprob: -5.360159873962402
    6. ' for' → logprob: -5.360159873962402
    7. '#' → logprob: -5.735159873962402
    8. 'continue' → logprob: -5.860159873962402
    9. '   ' → logprob: -6.110159873962402
    10. '        ' → logprob: -6.860159873962402

Token 1179: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17261315882205963
    2. 'for' → logprob: -2.1726131439208984
    3. ' for' → logprob: -3.7976131439208984
    4. '#' → logprob: -5.172613143920898
    5. '```' → logprob: -5.422613143920898
    6. ':' → logprob: -5.797613143920898
    7. 'continue' → logprob: -5.922613143920898
    8. '   ' → logprob: -6.922613143920898
    9. 'replace' → logprob: -7.047613143920898
    10. '           ' → logprob: -7.547613143920898

Token 1180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060456305742263794
    2. '#' → logprob: -4.435456275939941
    3. 'for' → logprob: -4.435456275939941
    4. 'gap' → logprob: -4.935456275939941
    5. 'non' → logprob: -5.060456275939941
    6. 'starts' → logprob: -5.310456275939941
    7. 'L' → logprob: -5.435456275939941
    8. '+' → logprob: -5.935456275939941
    9. '```' → logprob: -5.935456275939941
    10. 'ends' → logprob: -7.060456275939941

Token 1181: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22953011095523834
    2. 'for' → logprob: -2.604530096054077
    3. 'L' → logprob: -3.104530096054077
    4. 'starts' → logprob: -3.729530096054077
    5. 'ends' → logprob: -4.354530334472656
    6. 'non' → logprob: -4.354530334472656
    7. '#' (adapté à ' #') → logprob: -4.479530334472656
    8. ' for' → logprob: -4.604530334472656
    9. ' L' → logprob: -5.854530334472656
    10. 'R' → logprob: -6.479530334472656

Token 1182: ' Between' (ID: 43355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18791896104812622
    2. 'for' → logprob: -2.4379189014434814
    3. 'starts' → logprob: -3.1879189014434814
    4. '```' → logprob: -4.3129191398620605
    5. ' for' → logprob: -4.6879191398620605
    6. '#' → logprob: -5.3129191398620605
    7. 'non' → logprob: -5.4379191398620605
    8. 'L' → logprob: -5.9379191398620605
    9. ' starts' → logprob: -6.3129191398620605
    10. 'ends' → logprob: -6.3129191398620605

Token 1183: ' fav' (ID: 11726)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.3650253117084503
    2. '   ' → logprob: -2.865025281906128
    3. 'starts' → logprob: -3.115025281906128
    4. 'for' → logprob: -3.240025281906128
    5. ' ends' → logprob: -3.240025281906128
    6. '       ' → logprob: -3.365025281906128
    7. 'R' → logprob: -3.865025281906128
    8. 'if' → logprob: -4.115025520324707
    9. '
' → logprob: -4.740025520324707
    10. ' starts' → logprob: -4.865025520324707

Token 1184: ' intervals' (ID: 49900)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.25073954463005066
    2. '_inter' → logprob: -2.375739574432373
    3. '       ' → logprob: -3.000739574432373
    4. 's' → logprob: -3.125739574432373
    5. '_' → logprob: -4.750739574432373
    6. '_s' → logprob: -4.875739574432373
    7. '```' → logprob: -5.125739574432373
    8. '   ' → logprob: -5.375739574432373
    9. 'sorted' → logprob: -6.625739574432373
    10. '
' → logprob: -6.750739574432373

Token 1185: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22116601467132568
    2. '```' → logprob: -2.8461661338806152
    3. 'for' → logprob: -2.9711661338806152
    4. ' for' → logprob: -3.7211661338806152
    5. ' if' → logprob: -3.9711661338806152
    6. ':' → logprob: -4.721166133880615
    7. 'starts' → logprob: -5.346166133880615
    8. 'if' → logprob: -5.346166133880615
    9. '           ' → logprob: -5.471166133880615
    10. ',' → logprob: -5.471166133880615

Token 1186: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8564388751983643
    2. 'for' → logprob: -1.7314388751983643
    3. ',' → logprob: -1.9814388751983643
    4. '=' → logprob: -3.1064388751983643
    5. 'and' → logprob: -3.4814388751983643
    6. ':' → logprob: -3.4814388751983643
    7. '```' → logprob: -3.8564388751983643
    8. 's' → logprob: -3.8564388751983643
    9. '   ' → logprob: -3.9814388751983643
    10. ' and' → logprob: -4.231438636779785

Token 1187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012084923684597015
    2. 'i' → logprob: -4.5120849609375
    3. '   ' → logprob: -7.7620849609375
    4. 'for' → logprob: -8.2620849609375
    5. '```' → logprob: -9.1370849609375
    6. ' ' → logprob: -10.3870849609375
    7. '+' → logprob: -10.6370849609375
    8. '#' → logprob: -10.7620849609375
    9. '...' → logprob: -11.0120849609375
    10. ' i' → logprob: -11.1370849609375

Token 1188: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2845832109451294
    2. 'and' → logprob: -1.4095832109451294
    3. '       ' → logprob: -1.9095832109451294
    4. ' and' → logprob: -1.9095832109451294
    5. '```' → logprob: -3.28458309173584
    6. '   ' → logprob: -3.53458309173584
    7. '
' → logprob: -4.03458309173584
    8. '-' → logprob: -4.03458309173584
    9. '+' → logprob: -4.28458309173584
    10. '[i' → logprob: -4.65958309173584

Token 1189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008577430271543562
    2. ' i' → logprob: -7.625857830047607
    3. 'fav' → logprob: -9.00085735321045
    4. '   ' → logprob: -9.37585735321045
    5. '
' → logprob: -9.37585735321045
    6. '```' → logprob: -11.00085735321045
    7. '[i' → logprob: -11.12585735321045
    8. '(i' → logprob: -11.37585735321045
    9. 'f' → logprob: -11.50085735321045
    10. '#' → logprob: -12.50085735321045

Token 1190: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12131105363368988
    2. ':' → logprob: -2.8713109493255615
    3. ',' → logprob: -3.8713109493255615
    4. ' if' → logprob: -5.371311187744141
    5. ' for' → logprob: -5.371311187744141
    6. '```' → logprob: -5.371311187744141
    7. 'for' → logprob: -5.496311187744141
    8. '           ' → logprob: -6.121311187744141
    9. ':
' → logprob: -6.121311187744141
    10. '#' → logprob: -6.121311187744141

Token 1191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031104613095521927
    2. '```' → logprob: -5.156104564666748
    3. 'for' → logprob: -5.656104564666748
    4. ' if' → logprob: -5.781104564666748
    5. ' for' → logprob: -5.906104564666748
    6. 'if' → logprob: -6.156104564666748
    7. 'starts' → logprob: -6.281104564666748
    8. 'ends' → logprob: -6.406104564666748
    9. '<|end|>' → logprob: -6.531104564666748
    10. '   ' → logprob: -6.781104564666748

Token 1192: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1887650042772293
    2. '```' → logprob: -2.938765048980713
    3. 'ends' → logprob: -3.563765048980713
    4. 'for' → logprob: -3.813765048980713
    5. 'starts' → logprob: -4.313765048980713
    6. '#' (adapté à ' #') → logprob: -4.313765048980713
    7. 'L' → logprob: -4.688765048980713
    8. ' for' → logprob: -5.188765048980713
    9. 'non' → logprob: -5.313765048980713
    10. 'if' → logprob: -5.813765048980713

Token 1193: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16675899922847748
    2. ' if' → logprob: -3.5417590141296387
    3. 'ends' → logprob: -3.9167590141296387
    4. 'for' → logprob: -4.166759014129639
    5. 'if' → logprob: -4.291759014129639
    6. 'starts' → logprob: -4.291759014129639
    7. ' for' → logprob: -4.666759014129639
    8. '           ' → logprob: -4.791759014129639
    9. ' ends' → logprob: -4.916759014129639
    10. '```' → logprob: -5.166759014129639

Token 1194: ' define' (ID: 13174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.165666103363037
    2. '=' → logprob: -1.540666103363037
    3. 'i' → logprob: -2.790666103363037
    4. 'if' → logprob: -3.290666103363037
    5. ' for' → logprob: -3.290666103363037
    6. 'continue' → logprob: -3.290666103363037
    7. ':' → logprob: -3.415666103363037
    8. '       ' → logprob: -3.415666103363037
    9. '```' → logprob: -3.540666103363037
    10. ' =' → logprob: -3.540666103363037

Token 1195: ' prev' (ID: 10258)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2864601612091064
    2. 'L' → logprob: -1.6614601612091064
    3. 'R' → logprob: -1.7864601612091064
    4. 'ends' → logprob: -1.7864601612091064
    5. '       ' → logprob: -2.5364601612091064
    6. 'starts' → logprob: -3.1614601612091064
    7. '#' → logprob: -4.161459922790527
    8. '```' → logprob: -4.536459922790527
    9. 'for' → logprob: -4.661459922790527
    10. 'start' → logprob: -4.786459922790527

Token 1196: '_end' (ID: 13707)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -1.2675211429595947
    2. '_' → logprob: -1.8925211429595947
    3. '_f' → logprob: -2.3925211429595947
    4. '=' → logprob: -2.5175211429595947
    5. 'f' → logprob: -3.0175211429595947
    6. 's' → logprob: -3.0175211429595947
    7. 'starts' → logprob: -3.0175211429595947
    8. ' =' → logprob: -3.1425211429595947
    9. '       ' → logprob: -3.6425211429595947
    10. '   ' → logprob: -3.7675211429595947

Token 1197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6612324714660645
    2. ' =' → logprob: -0.7862324714660645
    3. '       ' → logprob: -4.6612324714660645
    4. '   ' → logprob: -5.1612324714660645
    5. '```' → logprob: -5.1612324714660645
    6. '=end' → logprob: -5.6612324714660645
    7. '=[' → logprob: -6.5362324714660645
    8. '=
' → logprob: -8.036231994628906
    9. 'ends' → logprob: -8.786231994628906
    10. 'for' → logprob: -8.786231994628906

Token 1198: ' fav' (ID: 11726)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.08483213186264038
    2. 'fav' → logprob: -2.834832191467285
    3. '   ' → logprob: -5.209832191467285
    4. 'f' → logprob: -5.459832191467285
    5. 'if' → logprob: -5.709832191467285
    6. 'starts' → logprob: -6.084832191467285
    7. ' ends' → logprob: -6.334832191467285
    8. '0' → logprob: -6.709832191467285
    9. '(' → logprob: -7.209832191467285
    10. '-' → logprob: -7.584832191467285

Token 1199: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.21629714965820312
    2. '_start' → logprob: -2.841297149658203
    3. '_inter' → logprob: -3.216297149658203
    4. 's' → logprob: -3.716297149658203
    5. '_end' → logprob: -4.216297149658203
    6. 'start' → logprob: -4.341297149658203
    7. 'sorted' → logprob: -4.466297149658203
    8. 'end' → logprob: -4.841297149658203
    9. '```' → logprob: -5.216297149658203
    10. '_' → logprob: -5.466297149658203

Token 1200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05094790831208229
    2. 'i' → logprob: -3.425947904586792
    3. '[' → logprob: -4.925948143005371
    4. '
' → logprob: -5.550948143005371
    5. '[-' → logprob: -6.550948143005371
    6. '   ' → logprob: -7.175948143005371
    7. '```' → logprob: -7.175948143005371
    8. '`' → logprob: -7.300948143005371
    9. '[end' → logprob: -8.300948143005371
    10. '[
' → logprob: -8.425948143005371

Token 1201: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0014791482826694846
    2. '[' → logprob: -7.751479148864746
    3. 'i' → logprob: -7.876479148864746
    4. ' -' → logprob: -8.501479148864746
    5. '```' → logprob: -9.001479148864746
    6. '   ' → logprob: -9.126479148864746
    7. '][' → logprob: -9.376479148864746
    8. '[i' → logprob: -10.251479148864746
    9. ']' → logprob: -10.251479148864746
    10. '
' → logprob: -10.501479148864746

Token 1202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008726021274924278
    2. 'i' → logprob: -4.883726119995117
    3. '0' → logprob: -7.133726119995117
    4. '(i' → logprob: -9.633726119995117
    5. '-' → logprob: -9.758726119995117
    6. '```' → logprob: -9.758726119995117
    7. '   ' → logprob: -10.383726119995117
    8. '
' → logprob: -10.633726119995117
    9. '...' → logprob: -11.196226119995117
    10. '(' → logprob: -11.633726119995117

Token 1203: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8722098469734192
    2. '][' → logprob: -1.6222097873687744
    3. '[' → logprob: -2.3722097873687744
    4. '```' → logprob: -2.3722097873687744
    5. '   ' → logprob: -3.1222097873687744
    6. ']
' → logprob: -3.7472097873687744
    7. '_end' → logprob: -4.1222100257873535
    8. '],' → logprob: -4.4972100257873535
    9. '
' → logprob: -4.4972100257873535
    10. '[i' → logprob: -4.7472100257873535

Token 1204: 'end' (ID: 419)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8123177289962769
    2. 'end' → logprob: -0.9373177289962769
    3. 'i' → logprob: -3.4373178482055664
    4. 'en' → logprob: -3.6873178482055664
    5. 'if' → logprob: -3.6873178482055664
    6. 'start' → logprob: -3.8123178482055664
    7. '1' → logprob: -3.9373178482055664
    8. '[' → logprob: -4.687317848205566
    9. '
' → logprob: -4.937317848205566
    10. '```' → logprob: -5.062317848205566

Token 1205: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08170434087514877
    2. '<|end|>' → logprob: -3.3317043781280518
    3. '```' → logprob: -4.706704139709473
    4. '
' → logprob: -4.831704139709473
    5. ',' → logprob: -5.456704139709473
    6. '...' → logprob: -5.456704139709473
    7. ' if' → logprob: -5.831704139709473
    8. ')' → logprob: -5.956704139709473
    9. 'for' → logprob: -6.456704139709473
    10. 'if' → logprob: -6.581704139709473

Token 1206: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029405947774648666
    2. ' i' → logprob: -3.6544058322906494
    3. '0' → logprob: -6.7794060707092285
    4. '```' → logprob: -7.6544060707092285
    5. '   ' → logprob: -7.9044060707092285
    6. '(i' → logprob: -8.27940559387207
    7. '
' → logprob: -8.65440559387207
    8. '...' → logprob: -8.90440559387207
    9. 'None' → logprob: -9.15440559387207
    10. '-' → logprob: -9.65440559387207

Token 1207: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10461078584194183
    2. '>' → logprob: -2.6046106815338135
    3. '-' → logprob: -4.229610919952393
    4. ' ==' → logprob: -4.604610919952393
    5. '=' → logprob: -8.479610443115234
    6. ' >' → logprob: -8.604610443115234
    7. '0' → logprob: -8.604610443115234
    8. '```' → logprob: -9.229610443115234
    9. '>=' → logprob: -9.979610443115234
    10. '!=' → logprob: -10.729610443115234

Token 1208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007317200768738985
    2. '-' → logprob: -5.882317066192627
    3. 'i' → logprob: -5.882317066192627
    4. '```' → logprob: -7.382317066192627
    5. '=' → logprob: -7.882317066192627
    6. ' ' → logprob: -8.257317543029785
    7. '   ' → logprob: -9.132317543029785
    8. ' -' → logprob: -9.257317543029785
    9. '1' → logprob: -9.632317543029785
    10. ' i' → logprob: -10.132317543029785

Token 1209: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23217102885246277
    2. 'else' → logprob: -1.8571710586547852
    3. ',' → logprob: -3.982171058654785
    4. '
' → logprob: -4.357171058654785
    5. '```' → logprob: -4.482171058654785
    6. ' else' → logprob: -5.607171058654785
    7. '...' → logprob: -7.107171058654785
    8. '   ' → logprob: -7.232171058654785
    9. 'elif' → logprob: -7.607171058654785
    10. 'prev' → logprob: -7.857171058654785

Token 1210: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.577975332736969
    2. '0' → logprob: -0.952975332736969
    3. '-f' → logprob: -3.452975273132324
    4. '-start' → logprob: -4.452975273132324
    5. '10' → logprob: -5.577975273132324
    6. '-st' → logprob: -6.952975273132324
    7. 'starts' → logprob: -7.327975273132324
    8. '-L' → logprob: -7.327975273132324
    9. '-s' → logprob: -7.452975273132324
    10. '   ' → logprob: -7.452975273132324

Token 1211: 'inf' (ID: 22226)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002905334113165736
    2. '100' → logprob: -8.875290870666504
    3. '1' → logprob: -9.125290870666504
    4. '(' → logprob: -11.125290870666504
    5. 'int' → logprob: -11.125290870666504
    6. 'float' → logprob: -11.500290870666504
    7. '```' → logprob: -14.750290870666504
    8. '(-' → logprob: -15.500290870666504
    9. 'import' → logprob: -15.625290870666504
    10. '101' → logprob: -15.625290870666504

Token 1212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08599231392145157
    2. '```' → logprob: -2.9609923362731934
    3. '
' → logprob: -4.585992336273193
    4. 'prev' → logprob: -5.210992336273193
    5. '<|end|>' → logprob: -5.210992336273193
    6. ',' → logprob: -5.710992336273193
    7. '        
' → logprob: -6.835992336273193
    8. '...' → logprob: -7.085992336273193
    9. '\' → logprob: -7.335992336273193
    10. '#' → logprob: -7.460992336273193

Token 1213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08258083462715149
    2. '```' → logprob: -3.082580804824829
    3. '
' → logprob: -4.082581043243408
    4. ',' → logprob: -5.207581043243408
    5. 'prev' → logprob: -5.582581043243408
    6. '``' → logprob: -6.582581043243408
    7. '\' → logprob: -7.082581043243408
    8. '        
' → logprob: -7.207581043243408
    9. '           ' → logprob: -7.957581043243408
    10. ' and' → logprob: -7.957581043243408

Token 1214: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26538512110710144
    2. '```' → logprob: -1.6403851509094238
    3. 'prev' → logprob: -4.015385150909424
    4. '``' → logprob: -4.765385150909424
    5. '
' → logprob: -6.265385150909424
    6. ',' → logprob: -6.390385150909424
    7. '\' → logprob: -7.015385150909424
    8. '#' (adapté à ' #') → logprob: -7.015385150909424
    9. '           ' → logprob: -7.015385150909424
    10. 'continue' → logprob: -7.140385150909424

Token 1215: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1518552303314209
    2. 'prev' → logprob: -2.151855230331421
    3. '```' → logprob: -4.65185546875
    4. ' prev' → logprob: -5.77685546875
    5. ' if' → logprob: -6.02685546875
    6. 'if' → logprob: -6.15185546875
    7. 'for' → logprob: -7.02685546875
    8. 'R' → logprob: -7.02685546875
    9. 'continue' → logprob: -7.27685546875
    10. '   ' → logprob: -7.40185546875

Token 1216: '_start' (ID: 10949)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.03018130734562874
    2. 'end' → logprob: -3.655181407928467
    3. '_start' → logprob: -6.155181407928467
    4. '_' → logprob: -7.155181407928467
    5. '   ' → logprob: -7.530181407928467
    6. 'start' → logprob: -8.780180931091309
    7. '_prev' → logprob: -9.780180931091309
    8. '       ' → logprob: -9.905180931091309
    9. 'prev' → logprob: -10.405180931091309
    10. 'if' → logprob: -10.655180931091309

Token 1217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1817721575498581
    2. '=' → logprob: -1.8067721128463745
    3. '       ' → logprob: -7.431772232055664
    4. '```' → logprob: -7.556772232055664
    5. '   ' → logprob: -7.806772232055664
    6. 's' → logprob: -8.806772232055664
    7. '_' → logprob: -9.306772232055664
    8. '=i' → logprob: -10.431772232055664
    9. '=None' → logprob: -10.556772232055664
    10. '    ' → logprob: -10.556772232055664

Token 1218: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.0020697296131402254
    2. ' fav' → logprob: -7.25206995010376
    3. '10' → logprob: -7.62706995010376
    4. 'float' → logprob: -8.127069473266602
    5. '(' → logprob: -8.377069473266602
    6. '0' → logprob: -8.877069473266602
    7. '   ' → logprob: -9.627069473266602
    8. ' ' → logprob: -11.127069473266602
    9. '-' → logprob: -11.252069473266602
    10. 'prev' → logprob: -11.377069473266602

Token 1219: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0012566609075292945
    2. 'sorted' → logprob: -6.876256465911865
    3. 'i' → logprob: -9.501256942749023
    4. 'Sorted' → logprob: -9.501256942749023
    5. '```' → logprob: -11.126256942749023
    6. '[i' → logprob: -11.626256942749023
    7. '
' → logprob: -11.626256942749023
    8. '   ' → logprob: -11.751256942749023
    9. 's' → logprob: -11.751256942749023
    10. '[' → logprob: -12.251256942749023

Token 1220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.35247647762298584
    2. 'i' → logprob: -1.3524764776229858
    3. '_sorted' → logprob: -3.9774765968322754
    4. '```' → logprob: -5.352476596832275
    5. 'start' → logprob: -5.477476596832275
    6. '_start' → logprob: -6.102476596832275
    7. 'sorted' → logprob: -6.227476596832275
    8. 'end' → logprob: -6.477476596832275
    9. '
' → logprob: -6.602476596832275
    10. '   ' → logprob: -7.602476596832275

Token 1221: '].' (ID: 1651)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010102992877364159
    2. '][' → logprob: -5.260103225708008
    3. '
' → logprob: -7.010103225708008
    4. '-i' → logprob: -7.010103225708008
    5. '[i' → logprob: -7.260103225708008
    6. '```' → logprob: -7.510103225708008
    7. 'i' → logprob: -8.010103225708008
    8. ' -' → logprob: -8.135103225708008
    9. '   ' → logprob: -8.385103225708008
    10. ']' → logprob: -8.385103225708008

Token 1222: 'start' (ID: 5236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032913058530539274
    2. 'start' → logprob: -6.628291130065918
    3. '1' → logprob: -7.128291130065918
    4. 'end' → logprob: -7.378291130065918
    5. '[' → logprob: -8.003291130065918
    6. '
' → logprob: -9.378291130065918
    7. '```' → logprob: -9.503291130065918
    8. '`' → logprob: -11.628291130065918
    9. '...' → logprob: -12.003291130065918
    10. '(' → logprob: -12.128291130065918

Token 1223: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03416045755147934
    2. '
' → logprob: -4.659160614013672
    3. ' if' → logprob: -5.284160614013672
    4. '```' → logprob: -5.659160614013672
    5. '<|end|>' → logprob: -5.784160614013672
    6. '...' → logprob: -6.034160614013672
    7. ',' → logprob: -6.409160614013672
    8. 'if' → logprob: -6.534160614013672
    9. ':' → logprob: -7.159160614013672
    10. '        
' → logprob: -7.159160614013672

Token 1224: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009929620660841465
    2. ' i' → logprob: -4.634929656982422
    3. 'len' → logprob: -9.134929656982422
    4. '   ' → logprob: -10.634929656982422
    5. ' ' → logprob: -11.759929656982422
    6. '  ' → logprob: -11.884929656982422
    7. '0' → logprob: -12.009929656982422
    8. ' len' → logprob: -12.009929656982422
    9. '    ' → logprob: -12.259929656982422
    10. '     ' → logprob: -13.134929656982422

Token 1225: '<len' (ID: 141365)
  Prédit: '<len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.5824490189552307
    2. '<' → logprob: -0.8324490189552307
    3. ' <' → logprob: -5.832448959350586
    4. '<i' → logprob: -6.707448959350586
    5. '<size' → logprob: -7.332448959350586
    6. '+' → logprob: -7.707448959350586
    7. '<n' → logprob: -8.082448959350586
    8. '0' → logprob: -8.832448959350586
    9. '<int' → logprob: -8.832448959350586
    10. '<num' → logprob: -8.832448959350586

Token 1226: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.24496909976005554
    2. 'fav' → logprob: -1.619969129562378
    3. '   ' → logprob: -5.119968891143799
    4. 'f' → logprob: -5.244968891143799
    5. '+' → logprob: -6.244968891143799
    6. '
' → logprob: -6.369968891143799
    7. 'for' → logprob: -7.244968891143799
    8. 'if' → logprob: -7.744968891143799
    9. '```' → logprob: -7.994968891143799
    10. 'non' → logprob: -7.994968891143799

Token 1227: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.6935150623321533
    2. 'fav' → logprob: -0.6935150623321533
    3. 'f' → logprob: -9.193514823913574
    4. 'avored' → logprob: -9.943514823913574
    5. '```' → logprob: -10.068514823913574
    6. ' fav' → logprob: -10.193514823913574
    7. 'avs' → logprob: -10.693514823913574
    8. 'val' → logprob: -10.818514823913574
    9. '(av' → logprob: -11.193514823913574
    10. '(f' → logprob: -11.443514823913574

Token 1228: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.03736543655395508
    2. '   ' → logprob: -4.162365436553955
    3. 'fav' → logprob: -4.412365436553955
    4. 'sorted' → logprob: -5.537365436553955
    5. ')' → logprob: -7.162365436553955
    6. 'f' → logprob: -7.287365436553955
    7. 's' → logprob: -7.412365436553955
    8. '```' → logprob: -7.412365436553955
    9. '       ' → logprob: -7.537365436553955
    10. '
' → logprob: -7.787365436553955

Token 1229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5299921035766602
    2. ')+' → logprob: -0.9049921035766602
    3. 'else' → logprob: -6.15499210357666
    4. '+' → logprob: -6.77999210357666
    5. ')-' → logprob: -7.27999210357666
    6. '   ' → logprob: -7.52999210357666
    7. '):
' → logprob: -7.77999210357666
    8. ']+' → logprob: -7.90499210357666
    9. ' else' → logprob: -8.02999210357666
    10. '0' → logprob: -8.77999210357666

Token 1230: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.27936726808547974
    2. ' else' → logprob: -1.779367208480835
    3. '       ' → logprob: -3.029367208480835
    4. 'if' → logprob: -4.904367446899414
    5. '-' → logprob: -5.404367446899414
    6. '+' → logprob: -5.904367446899414
    7. '```' → logprob: -5.904367446899414
    8. '   ' → logprob: -6.529367446899414
    9. '
' → logprob: -6.654367446899414
    10. ' if' → logprob: -6.779367446899414

Token 1231: ' +' (ID: 659)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02029953896999359
    2. 'float' → logprob: -4.520299434661865
    3. ' ' → logprob: -5.020299434661865
    4. '+' → logprob: -6.770299434661865
    5. 'inf' → logprob: -7.270299434661865
    6. ' float' → logprob: -8.020299911499023
    7. 'math' → logprob: -9.020299911499023
    8. 'int' → logprob: -10.270299911499023
    9. ' +' → logprob: -10.520299911499023
    10. '(' → logprob: -10.645299911499023

Token 1232: 'inf' (ID: 22226)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03463752195239067
    2. '(' → logprob: -4.159637451171875
    3. 'float' → logprob: -4.159637451171875
    4. 'inf' → logprob: -6.909637451171875
    5. '100' → logprob: -7.284637451171875
    6. 'int' → logprob: -7.784637451171875
    7. '1' → logprob: -8.659637451171875
    8. 'math' → logprob: -8.659637451171875
    9. 'sys' → logprob: -9.284637451171875
    10. '999' → logprob: -9.784637451171875

Token 1233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021754804998636246
    2. '<|end|>' → logprob: -4.396754741668701
    3. '
' → logprob: -5.271754741668701
    4. '   ' → logprob: -6.771754741668701
    5. '        
' → logprob: -7.521754741668701
    6. '<|end|>' → logprob: -7.896754741668701
    7. '```' → logprob: -8.14675521850586
    8. ',' → logprob: -8.52175521850586
    9. '...' → logprob: -8.52175521850586
    10. 'prev' → logprob: -9.14675521850586

Token 1234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037098159082233906
    2. '<|end|>' → logprob: -6.37870979309082
    3. '```' → logprob: -7.00370979309082
    4. '   ' → logprob: -8.37870979309082
    5. '
' → logprob: -8.62870979309082
    6. '        
' → logprob: -9.12870979309082
    7. ',' → logprob: -9.37870979309082
    8. '           ' → logprob: -9.75370979309082
    9. '        ' → logprob: -9.87870979309082
    10. '\' → logprob: -10.00370979309082

Token 1235: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044300783425569534
    2. '<|end|>' → logprob: -3.5443007946014404
    3. '   ' → logprob: -5.544300556182861
    4. 'continue' → logprob: -6.544300556182861
    5. '```' → logprob: -6.544300556182861
    6. '        ' → logprob: -6.794300556182861
    7. '...' → logprob: -7.044300556182861
    8. '+' → logprob: -7.669300556182861
    9. '<|end|>' → logprob: -7.669300556182861
    10. '    ' → logprob: -7.794300556182861

Token 1236: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12944510579109192
    2. 'prev' → logprob: -2.2544450759887695
    3. '   ' → logprob: -5.1294450759887695
    4. '```' → logprob: -5.2544450759887695
    5. 'for' → logprob: -6.1294450759887695
    6. '#' → logprob: -6.8794450759887695
    7. 'L' → logprob: -7.8794450759887695
    8. 'continue' → logprob: -7.8794450759887695
    9. '
' → logprob: -8.25444507598877
    10. '           ' → logprob: -8.75444507598877

Token 1237: ' valid' (ID: 4529)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5174255967140198
    2. 'prev' → logprob: -1.017425537109375
    3. '   ' → logprob: -4.017425537109375
    4. ' prev' → logprob: -4.767425537109375
    5. '```' → logprob: -4.892425537109375
    6. '
' → logprob: -6.267425537109375
    7. 'for' → logprob: -6.267425537109375
    8. 'if' → logprob: -6.517425537109375
    9. ' for' → logprob: -7.642425537109375
    10. '#' → logprob: -7.767425537109375

Token 1238: ' intervals' (ID: 49900)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22545792162418365
    2. 'for' → logprob: -2.9754579067230225
    3. ' if' → logprob: -3.2254579067230225
    4. 'if' → logprob: -3.7254579067230225
    5. '   ' → logprob: -4.225458145141602
    6. ' for' → logprob: -4.225458145141602
    7. '           ' → logprob: -4.850458145141602
    8. 'prev' → logprob: -4.850458145141602
    9. '```' → logprob: -4.975458145141602
    10. ':' → logprob: -5.475458145141602

Token 1239: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07254818826913834
    2. '<|end|>' → logprob: -3.8225481510162354
    3. '   ' → logprob: -4.6975483894348145
    4. ':' → logprob: -5.3225483894348145
    5. ' =' → logprob: -5.5725483894348145
    6. '
' → logprob: -5.5725483894348145
    7. '```' → logprob: -5.8225483894348145
    8. ',' → logprob: -5.8225483894348145
    9. ' for' → logprob: -5.9475483894348145
    10. 'prev' → logprob: -6.1975483894348145

Token 1240: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3380420207977295
    2. ' st' → logprob: -1.5880420207977295
    3. 'st' → logprob: -1.8380420207977295
    4. 'prev' → logprob: -2.9630420207977295
    5. 'for' → logprob: -3.3380420207977295
    6. ' for' → logprob: -3.3380420207977295
    7. '           ' → logprob: -3.4630420207977295
    8. 'start' → logprob: -3.5880420207977295
    9. '(st' → logprob: -3.5880420207977295
    10. ' prev' → logprob: -3.9630420207977295

Token 1241: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.06626805663108826
    2. '(prev' → logprob: -4.691267967224121
    3. '
' → logprob: -5.191267967224121
    4. '   ' → logprob: -5.191267967224121
    5. 'ends' → logprob: -5.191267967224121
    6. 'fav' → logprob: -5.316267967224121
    7. ']' → logprob: -5.316267967224121
    8. '0' → logprob: -5.316267967224121
    9. '       ' → logprob: -5.816267967224121
    10. ')' → logprob: -5.941267967224121

Token 1242: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.003171056741848588
    2. '       ' → logprob: -7.003170967102051
    3. ']_' → logprob: -7.628170967102051
    4. '   ' → logprob: -7.878170967102051
    5. '_start' → logprob: -8.00317096710205
    6. '```' → logprob: -8.12817096710205
    7. '
' → logprob: -8.87817096710205
    8. '_' → logprob: -9.00317096710205
    9. 'end' → logprob: -10.00317096710205
    10. ''_' → logprob: -10.00317096710205

Token 1243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09171701222658157
    2. '       ' → logprob: -3.341717004776001
    3. ' if' → logprob: -4.34171724319458
    4. ' ,' → logprob: -4.46671724319458
    5. ',
' → logprob: -4.71671724319458
    6. 'if' → logprob: -4.84171724319458
    7. '
' → logprob: -5.71671724319458
    8. ',i' → logprob: -6.21671724319458
    9. ']' → logprob: -6.34171724319458
    10. '   ' → logprob: -6.71671724319458

Token 1244: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1899937093257904
    2. ' next' → logprob: -1.8149937391281128
    3. '
' → logprob: -5.189993858337402
    4. '(next' → logprob: -7.064993858337402
    5. '   ' → logprob: -7.189993858337402
    6. 'starts' → logprob: -7.564993858337402
    7. '       ' → logprob: -7.689993858337402
    8. 'non' → logprob: -8.064993858337402
    9. '```' → logprob: -8.439993858337402
    10. 'fav' → logprob: -8.814993858337402

Token 1245: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00036894375807605684
    2. 'start' → logprob: -8.62536907196045
    3. '
' → logprob: -10.00036907196045
    4. '_i' → logprob: -10.25036907196045
    5. '_end' → logprob: -10.75036907196045
    6. '   ' → logprob: -10.87536907196045
    7. '       ' → logprob: -11.00036907196045
    8. 'Start' → logprob: -11.75036907196045
    9. 'i' → logprob: -11.75036907196045
    10. '_' → logprob: -12.00036907196045

Token 1246: ')
' (ID: 446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6291450262069702
    2. ']' → logprob: -1.3791450262069702
    3. ')
' → logprob: -2.2541451454162598
    4. '       ' → logprob: -2.7541451454162598
    5. ')' → logprob: -3.2541451454162598
    6. '   ' → logprob: -5.62914514541626
    7. ']:
' → logprob: -7.12914514541626
    8. '):
' → logprob: -7.25414514541626
    9. '```' → logprob: -8.129144668579102
    10. ']

' → logprob: -8.254144668579102

Token 1247: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029678162187337875
    2. '<|end|>' → logprob: -3.9046781063079834
    3. '   ' → logprob: -6.2796783447265625
    4. '
' → logprob: -6.5296783447265625
    5. '        
' → logprob: -6.7796783447265625
    6. '...' → logprob: -6.9046783447265625
    7. '```' → logprob: -7.2796783447265625
    8. ',' → logprob: -7.5296783447265625
    9. '<|end|>' → logprob: -8.279678344726562
    10. ':' → logprob: -8.404678344726562

Token 1248: ' gaps' (ID: 52008)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2394130975008011
    2. '
' → logprob: -2.239413022994995
    3. '   ' → logprob: -2.364413022994995
    4. '        
' → logprob: -6.239413261413574
    5. '```' → logprob: -6.239413261413574
    6. 'prev' → logprob: -6.489413261413574
    7. 'for' → logprob: -6.614413261413574
    8. '    
' → logprob: -6.614413261413574
    9. '<|end|>' → logprob: -7.489413261413574
    10. '\n' → logprob: -7.614413261413574

Token 1249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025486227124929428
    2. '=' → logprob: -3.7754862308502197
    3. '=[]' → logprob: -6.400485992431641
    4. '=[' → logprob: -7.900485992431641
    5. '=[]
' → logprob: -8.65048599243164
    6. '   ' → logprob: -12.27548599243164
    7. 'def' → logprob: -12.52548599243164
    8. ':' → logprob: -12.77548599243164
    9. 's' → logprob: -12.77548599243164
    10. '=[
' → logprob: -12.90048599243164

Token 1250: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.16047899425029755
    2. '[]' → logprob: -1.910478949546814
    3. '[len' → logprob: -8.660478591918945
    4. '[(' → logprob: -9.660478591918945
    5. '[' → logprob: -11.410478591918945
    6. '[]

' → logprob: -12.535478591918945
    7. '[
' → logprob: -13.410478591918945
    8. ' []
' → logprob: -14.285478591918945
    9. '[])
' → logprob: -14.660478591918945
    10. 'len' → logprob: -15.160478591918945

Token 1251: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10447366535663605
    2. 'prev' → logprob: -2.72947359085083
    3. '   ' → logprob: -3.47947359085083
    4. 'n' → logprob: -6.85447359085083
    5. 'length' → logprob: -6.85447359085083
    6. ' for' → logprob: -7.35447359085083
    7. '
' → logprob: -8.854474067687988
    8. '```' → logprob: -9.354474067687988
    9. ' prev' → logprob: -10.479474067687988
    10. 'last' → logprob: -10.729474067687988

Token 1252: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04422471672296524
    2. 'prev' → logprob: -3.169224739074707
    3. '   ' → logprob: -7.044224739074707
    4. 'n' → logprob: -8.794224739074707
    5. 'length' → logprob: -9.169224739074707
    6. ' for' → logprob: -10.294224739074707
    7. 'fav' → logprob: -10.419224739074707
    8. 'last' → logprob: -11.419224739074707
    9. 'if' → logprob: -12.419224739074707
    10. '
' → logprob: -12.544224739074707

Token 1253: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03808235004544258
    2. ' i' → logprob: -3.2880823612213135
    3. '0' → logprob: -10.288082122802734
    4. '_i' → logprob: -13.163082122802734
    5. ' ' → logprob: -13.663082122802734
    6. 'range' → logprob: -13.788082122802734
    7. ' range' → logprob: -14.038082122802734
    8. '   ' → logprob: -14.288082122802734
    9. ' in' → logprob: -14.663082122802734
    10. '_' → logprob: -15.663082122802734

Token 1254: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6934235095977783
    2. ' in' → logprob: -0.6934235095977783
    3. ',' → logprob: -9.1934232711792
    4. '   ' → logprob: -9.4434232711792
    5. '```' → logprob: -10.8184232711792
    6. '=' → logprob: -10.9434232711792
    7. '0' → logprob: -11.3184232711792
    8. '_in' → logprob: -11.4434232711792
    9. 'i' → logprob: -11.9434232711792
    10. '_' → logprob: -12.9434232711792

Token 1255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6561198234558105
    2. '0' → logprob: -0.7811198234558105
    3. ' range' → logprob: -3.7811198234558105
    4. ' ' → logprob: -7.9061198234558105
    5. 'len' → logprob: -10.406120300292969
    6. '   ' → logprob: -10.906120300292969
    7. '-' → logprob: -11.656120300292969
    8. '1' → logprob: -12.406120300292969
    9. '
' → logprob: -12.531120300292969
    10. '(range' → logprob: -12.531120300292969

Token 1256: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2301662117242813
    2. '(len' → logprob: -1.7301661968231201
    3. '0' → logprob: -3.60516619682312
    4. '(' → logprob: -7.230166435241699
    5. ' len' → logprob: -8.4801664352417
    6. '   ' → logprob: -9.1051664352417
    7. '1' → logprob: -9.8551664352417
    8. '[len' → logprob: -11.2301664352417
    9. '-' → logprob: -11.3551664352417
    10. '+' → logprob: -11.7301664352417

Token 1257: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.1557283111615106e-05
    2. '+' → logprob: -11.000041961669922
    3. 'fav' → logprob: -11.125041961669922
    4. 'f' → logprob: -11.625041961669922
    5. '(' → logprob: -15.500041961669922
    6. '   ' → logprob: -16.000041961669922
    7. ' +' → logprob: -16.125041961669922
    8. ')' → logprob: -16.375041961669922
    9. '(g' → logprob: -16.500041961669922
    10. '	f' → logprob: -16.625041961669922

Token 1258: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.4377082884311676
    2. 'fav' → logprob: -1.4377082586288452
    3. 'sorted' → logprob: -2.9377083778381348
    4. '(sorted' → logprob: -3.6877083778381348
    5. '_sorted' → logprob: -4.187708377838135
    6. '(f' → logprob: -4.562708377838135
    7. '+' → logprob: -4.937708377838135
    8. 'Sorted' → logprob: -6.562708377838135
    9. 'aved' → logprob: -7.062708377838135
    10. 'avor' → logprob: -7.812708377838135

Token 1259: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0013245263835415244
    2. '+' → logprob: -6.876324653625488
    3. 'sorted' → logprob: -8.751324653625488
    4. '(sorted' → logprob: -10.376324653625488
    5. ')+' → logprob: -10.501324653625488
    6. '   ' → logprob: -10.626324653625488
    7. '
' → logprob: -11.001324653625488
    8. ')' → logprob: -11.501324653625488
    9. '_' → logprob: -12.126324653625488
    10. ')_' → logprob: -12.376324653625488

Token 1260: ')+' (ID: 16161)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5008600354194641
    2. '+' → logprob: -1.0008599758148193
    3. ')+' → logprob: -4.125860214233398
    4. '):' → logprob: -5.500860214233398
    5. '-' → logprob: -5.875860214233398
    6. '   ' → logprob: -6.375860214233398
    7. ' +' → logprob: -7.250860214233398
    8. ')' → logprob: -7.750860214233398
    9. '()+' → logprob: -9.000860214233398
    10. '):

' → logprob: -10.000860214233398

Token 1261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. '2' → logprob: -12.375006675720215
    3. '
' → logprob: -14.125006675720215
    4. '+' → logprob: -14.250006675720215
    5. ' ' → logprob: -15.000006675720215
    6. '   ' → logprob: -15.500006675720215
    7. 'i' → logprob: -16.1250057220459
    8. '0' → logprob: -16.1250057220459
    9. ')' → logprob: -16.5000057220459
    10. '```' → logprob: -17.5000057220459

Token 1262: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9636610150337219
    2. ':
' → logprob: -1.3386609554290771
    3. ':' → logprob: -1.5886609554290771
    4. '       ' → logprob: -2.588660955429077
    5. '   ' → logprob: -2.838660955429077
    6. '):' → logprob: -5.338661193847656
    7. '-' → logprob: -5.713661193847656
    8. ',' → logprob: -5.713661193847656
    9. '():
' → logprob: -5.713661193847656
    10. '=' → logprob: -7.088661193847656

Token 1263: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005171707598492503
    2. '```' → logprob: -8.125516891479492
    3. '   ' → logprob: -9.750516891479492
    4. '	prev' → logprob: -9.750516891479492
    5. '       ' → logprob: -9.875516891479492
    6. '
' → logprob: -11.125516891479492
    7. '    
' → logprob: -12.250516891479492
    8. '	if' → logprob: -12.500516891479492
    9. '    ' → logprob: -12.750516891479492
    10. '   ' → logprob: -12.875516891479492

Token 1264: ' prev' (ID: 10258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044200316071510315
    2. 'if' → logprob: -3.6692004203796387
    3. ' if' → logprob: -4.419200420379639
    4. 'prev' (adapté à ' prev') → logprob: -5.294200420379639
    5. ' prev' → logprob: -7.419200420379639
    6. '       ' → logprob: -10.29419994354248
    7. '	prev' → logprob: -11.41919994354248
    8. '```' → logprob: -11.54419994354248
    9. '
' → logprob: -12.16919994354248
    10. '   ' → logprob: -12.54419994354248

Token 1265: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0001478796184528619
    2. '_' → logprob: -10.125147819519043
    3. 'end' → logprob: -10.500147819519043
    4. '```' → logprob: -11.000147819519043
    5. '_prev' → logprob: -11.125147819519043
    6. '_start' → logprob: -11.875147819519043
    7. '   ' → logprob: -11.875147819519043
    8. '
' → logprob: -12.125147819519043
    9. '=' → logprob: -12.125147819519043
    10. '=_' → logprob: -12.250147819519043

Token 1266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026413440704346
    2. ' =' → logprob: -1.9102641344070435
    3. ' if' → logprob: -11.535264015197754
    4. '=
' → logprob: -11.910264015197754
    5. 'if' → logprob: -12.035264015197754
    6. '   ' → logprob: -12.035264015197754
    7. '       ' → logprob: -12.535264015197754
    8. ')' → logprob: -13.785264015197754
    9. '=None' → logprob: -13.785264015197754
    10. ' ' → logprob: -13.910264015197754

Token 1267: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.2964666187763214
    2. '-f' → logprob: -2.046466588973999
    3. '0' → logprob: -3.171466588973999
    4. '-' → logprob: -3.171466588973999
    5. '(-' → logprob: -4.296466827392578
    6. '(f' → logprob: -4.546466827392578
    7. '(' → logprob: -5.421466827392578
    8. ' -' → logprob: -6.046466827392578
    9. ' ' → logprob: -6.046466827392578
    10. '   ' → logprob: -6.171466827392578

Token 1268: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.13524645566940308
    2. 'i' → logprob: -3.010246515274048
    3. '[-' → logprob: -4.010246276855469
    4. '-' → logprob: -4.010246276855469
    5. '   ' → logprob: -4.260246276855469
    6. 'sorted' → logprob: -4.510246276855469
    7. '0' → logprob: -5.635246276855469
    8. 'fav' → logprob: -6.010246276855469
    9. '[i' → logprob: -6.760246276855469
    10. '(i' → logprob: -7.135246276855469

Token 1269: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01371079497039318
    2. 'i' → logprob: -4.513710975646973
    3. '[-' → logprob: -6.138710975646973
    4. '   ' → logprob: -8.263710975646973
    5. '-' → logprob: -9.138710975646973
    6. '
' → logprob: -10.263710975646973
    7. '[' → logprob: -10.388710975646973
    8. '(i' → logprob: -11.263710975646973
    9. 'if' → logprob: -11.638710975646973
    10. '[max' → logprob: -11.888710975646973

Token 1270: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.9186317482963204e-05
    2. ' -' → logprob: -10.625049591064453
    3. '[' → logprob: -11.875049591064453
    4. 'i' → logprob: -11.875049591064453
    5. '1' → logprob: -12.125049591064453
    6. '   ' → logprob: -13.000049591064453
    7. '][' → logprob: -14.125049591064453
    8. '[i' → logprob: -14.250049591064453
    9. '0' → logprob: -14.500049591064453
    10. 'if' → logprob: -14.625049591064453

Token 1271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14460627734661102
    2. '-' → logprob: -2.019606351852417
    3. 'i' → logprob: -7.394606113433838
    4. ' ' → logprob: -7.769606113433838
    5. '0' → logprob: -8.019606590270996
    6. '   ' → logprob: -8.644606590270996
    7. ' -' → logprob: -8.769606590270996
    8. '```' → logprob: -9.769606590270996
    9. '  ' → logprob: -10.269606590270996
    10. ']' → logprob: -10.394606590270996

Token 1272: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000920869642868638
    2. '[' → logprob: -7.62592077255249
    3. ' if' → logprob: -8.875921249389648
    4. '-' → logprob: -9.125921249389648
    5. '   ' → logprob: -9.375921249389648
    6. 'if' → logprob: -9.750921249389648
    7. ']' → logprob: -11.000921249389648
    8. ' ][' → logprob: -12.125921249389648
    9. '       ' → logprob: -12.250921249389648
    10. '0' → logprob: -12.625921249389648

Token 1273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.817902173381299e-05
    2. '0' → logprob: -10.25009822845459
    3. '
' → logprob: -10.62509822845459
    4. '   ' → logprob: -11.12509822845459
    5. '][' → logprob: -11.12509822845459
    6. 'if' → logprob: -12.50009822845459
    7. ' ' → logprob: -13.75009822845459
    8. '[' → logprob: -14.00009822845459
    9. '-' → logprob: -14.12509822845459
    10. ']' → logprob: -14.25009822845459

Token 1274: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2521958351135254
    2. 'if' → logprob: -1.5021958351135254
    3. '       ' → logprob: -8.252195358276367
    4. ')' → logprob: -13.377195358276367
    5. '   ' → logprob: -13.627195358276367
    6. ']' → logprob: -13.752195358276367
    7. '	if' → logprob: -14.502195358276367
    8. '        ' → logprob: -14.877195358276367
    9. '           ' → logprob: -14.877195358276367
    10. '
' → logprob: -15.127195358276367

Token 1275: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31411829590797424
    2. ' if' → logprob: -1.3141182661056519
    3. '       ' → logprob: -7.064118385314941
    4. '
' → logprob: -14.939118385314941
    5. '	if' → logprob: -15.064118385314941
    6. '   ' → logprob: -16.564117431640625
    7. 'If' → logprob: -17.314117431640625
    8. '        ' → logprob: -17.689117431640625
    9. '        
' → logprob: -17.689117431640625
    10. '```' → logprob: -17.689117431640625

Token 1276: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002613358374219388
    2. ' i' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.375261306762695
    4. ' ' → logprob: -20.250261306762695
    5. '0' → logprob: -20.500261306762695
    6. '  ' → logprob: -21.250261306762695
    7. '	i' → logprob: -21.750261306762695
    8. '    ' → logprob: -21.875261306762695
    9. '
' → logprob: -22.000261306762695
    10. 'I' → logprob: -22.125261306762695

Token 1277: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.044933389872312546
    2. ' >' → logprob: -3.294933319091797
    3. '0' → logprob: -5.294933319091797
    4. '-' → logprob: -7.294933319091797
    5. 'i' → logprob: -7.669933319091797
    6. '==' → logprob: -7.794933319091797
    7. '```' → logprob: -9.544933319091797
    8. ' ==' → logprob: -9.919933319091797
    9. ' i' → logprob: -10.169933319091797
    10. ')>' → logprob: -11.044933319091797

Token 1278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '=' → logprob: -16.0000057220459
    4. '   ' → logprob: -17.0000057220459
    5. 'i' → logprob: -17.1250057220459
    6. '
' → logprob: -19.0000057220459
    7. '```' → logprob: -19.2500057220459
    8. '  ' → logprob: -19.8750057220459
    9. '-' → logprob: -20.3750057220459
    10. '۰' → logprob: -20.5000057220459

Token 1279: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10102419555187225
    2. ' else' → logprob: -2.9760241508483887
    3. '       ' → logprob: -3.1010241508483887
    4. '
' → logprob: -10.601024627685547
    5. '```' → logprob: -11.101024627685547
    6. '   ' → logprob: -11.726024627685547
    7. '        ' → logprob: -11.726024627685547
    8. '	else' → logprob: -11.976024627685547
    9. ' ' → logprob: -12.351024627685547
    10. 'elif' → logprob: -12.601024627685547

Token 1280: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03093992918729782
    2. '0' → logprob: -3.530939817428589
    3. '-f' → logprob: -7.530940055847168
    4. ' -' → logprob: -7.780940055847168
    5. '-s' → logprob: -9.280940055847168
    6. '-(' → logprob: -10.655940055847168
    7. 'float' → logprob: -11.280940055847168
    8. '-l' → logprob: -11.530940055847168
    9. '-left' → logprob: -11.530940055847168
    10. '-L' → logprob: -12.155940055847168

Token 1281: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0022378049325197935
    2. '(' → logprob: -6.127237796783447
    3. 'float' → logprob: -10.752238273620605
    4. '100' → logprob: -11.127238273620605
    5. '1' → logprob: -11.377238273620605
    6. 'int' → logprob: -12.377238273620605
    7. ' ' → logprob: -14.252238273620605
    8. ' (' → logprob: -16.37723731994629
    9. '(float' → logprob: -17.12723731994629
    10. '999' → logprob: -17.50223731994629

Token 1282: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0017845372203737497
    2. '900' → logprob: -6.751784324645996
    3. '**' → logprob: -8.001784324645996
    4. '10' → logprob: -8.376784324645996
    5. '999' → logprob: -10.376784324645996
    6. '90' → logprob: -12.251784324645996
    7. '```' → logprob: -12.376784324645996
    8. '100' → logprob: -13.001784324645996
    9. '909' → logprob: -13.001784324645996
    10. '09' → logprob: -13.376784324645996

Token 1283: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.7432603272027336e-06
    2. '15' → logprob: -13.625001907348633
    3. '10' → logprob: -15.000001907348633
    4. '18' → logprob: -15.750001907348633
    5. '12' → logprob: -17.000001907348633
    6. '``' → logprob: -19.250001907348633
    7. '8' → logprob: -19.375001907348633
    8. '
' → logprob: -19.750001907348633
    9. '```' → logprob: -20.125001907348633
    10. '09' → logprob: -20.625001907348633

Token 1284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11792001873254776
    2. '
' → logprob: -2.242919921875
    3. '        
' → logprob: -5.992919921875
    4. ',' → logprob: -7.242919921875
    5. '<|end|>' → logprob: -7.242919921875
    6. '        ' → logprob: -8.117919921875
    7. '  
' → logprob: -8.492919921875
    8. '    
' → logprob: -8.617919921875
    9. '   ' → logprob: -9.242919921875
    10. ' 
' → logprob: -9.492919921875

Token 1285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16835294663906097
    2. 'next' → logprob: -2.2933528423309326
    3. ' next' → logprob: -3.6683528423309326
    4. 'prev' → logprob: -4.168353080749512
    5. '
' → logprob: -4.668353080749512
    6. '```' → logprob: -7.168353080749512
    7. ',next' → logprob: -7.293353080749512
    8. ' prev' → logprob: -7.543353080749512
    9. '(next' → logprob: -7.793353080749512
    10. '[next' → logprob: -7.918353080749512

Token 1286: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.002567098941653967
    2. '       ' → logprob: -6.752567291259766
    3. ' next' → logprob: -6.752567291259766
    4. '   ' → logprob: -8.877567291259766
    5. 'prev' → logprob: -9.502567291259766
    6. ' nxt' → logprob: -11.627567291259766
    7. 'n' → logprob: -13.127567291259766
    8. '	next' → logprob: -14.377567291259766
    9. 'curr' → logprob: -14.502567291259766
    10. '_next' → logprob: -14.752567291259766

Token 1287: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.300083648762666e-05
    2. 'start' → logprob: -9.875053405761719
    3. '```' → logprob: -14.500053405761719
    4. 'Start' → logprob: -15.125053405761719
    5. '_' → logprob: -15.250053405761719
    6. 's' → logprob: -15.875053405761719
    7. '
' → logprob: -16.12505340576172
    8. ''_' → logprob: -16.87505340576172
    9. '   ' → logprob: -17.00005340576172
    10. '``' → logprob: -17.12505340576172

Token 1288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018153101205825806
    2. ' =' → logprob: -4.018153190612793
    3. '=f' → logprob: -12.768153190612793
    4. '=
' → logprob: -15.768153190612793
    5. ' ' → logprob: -17.518152236938477
    6. '```' → logprob: -17.518152236938477
    7. '   ' → logprob: -17.893152236938477
    8. '=user' → logprob: -17.893152236938477
    9. '=int' → logprob: -18.393152236938477
    10. '＝' → logprob: -18.518152236938477

Token 1289: ' fav' (ID: 11726)
  Prédit: 'fav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fav' → logprob: -0.00026181264547631145
    2. ' fav' → logprob: -8.250262260437012
    3. 'favor' → logprob: -15.000262260437012
    4. 'fam' → logprob: -16.250261306762695
    5. '   ' → logprob: -16.625261306762695
    6. 'fal' → logprob: -16.750261306762695
    7. ' ' → logprob: -18.875261306762695
    8. 'f' → logprob: -19.125261306762695
    9. '       ' → logprob: -19.375261306762695
    10. 'fab' → logprob: -19.750261306762695

Token 1290: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.1010553389787674
    2. 'sorted' → logprob: -2.351055383682251
    3. 'fav' → logprob: -7.476055145263672
    4. 'f' → logprob: -9.101055145263672
    5. 'Sorted' → logprob: -9.351055145263672
    6. '(f' → logprob: -10.976055145263672
    7. '=f' → logprob: -11.351055145263672
    8. '[f' → logprob: -11.476055145263672
    9. '(sorted' → logprob: -11.476055145263672
    10. '=' → logprob: -11.601055145263672

Token 1291: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00029995047952979803
    2. 'i' → logprob: -8.125300407409668
    3. '[' → logprob: -13.375300407409668
    4. '{i' → logprob: -14.500300407409668
    5. ' i' → logprob: -14.625300407409668
    6. '```' → logprob: -14.625300407409668
    7. '=i' → logprob: -15.500300407409668
    8. '(i' → logprob: -15.625300407409668
    9. '[len' → logprob: -15.875300407409668
    10. '+i' → logprob: -16.12529945373535

Token 1292: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003945688367821276
    2. '[' → logprob: -8.625394821166992
    3. '   ' → logprob: -8.750394821166992
    4. '[i' → logprob: -10.875394821166992
    5. ' ][' → logprob: -10.875394821166992
    6. ')[' → logprob: -12.125394821166992
    7. ' ' → logprob: -13.375394821166992
    8. 'if' → logprob: -13.375394821166992
    9. ']' → logprob: -13.375394821166992
    10. '```' → logprob: -13.625394821166992

Token 1293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.692145012086257e-05
    2. '[' → logprob: -10.625046730041504
    3. 'i' → logprob: -11.000046730041504
    4. '][' → logprob: -13.500046730041504
    5. '   ' → logprob: -13.625046730041504
    6. ' ' → logprob: -13.875046730041504
    7. '
' → logprob: -14.000046730041504
    8. '(' → logprob: -15.000046730041504
    9. '1' → logprob: -15.625046730041504
    10. '```' → logprob: -15.812546730041504

Token 1294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34126004576683044
    2. 'if' → logprob: -1.7162600755691528
    3. ' if' → logprob: -2.2162599563598633
    4. ')' → logprob: -8.966259956359863
    5. '       ' → logprob: -9.091259956359863
    6. '   ' → logprob: -9.341259956359863
    7. ' ]' → logprob: -11.716259956359863
    8. '```' → logprob: -11.716259956359863
    9. '           ' → logprob: -12.091259956359863
    10. 'If' → logprob: -12.216259956359863

Token 1295: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.474128782749176
    2. ' if' → logprob: -0.974128782749176
    3. '<|end|>' → logprob: -10.099128723144531
    4. '       ' → logprob: -12.599128723144531
    5. '```' → logprob: -12.849128723144531
    6. '	if' → logprob: -13.224128723144531
    7. 'If' → logprob: -14.474128723144531
    8. '<|end|>' → logprob: -14.724128723144531
    9. '
' → logprob: -14.849128723144531
    10. '[' → logprob: -14.849128723144531

Token 1296: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024756586644798517
    2. ' i' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.37747573852539
    4. ' ' → logprob: -18.75247573852539
    5. '	i' → logprob: -19.50247573852539
    6. '(i' → logprob: -19.62747573852539
    7. 'True' → logprob: -20.12747573852539
    8. '  ' → logprob: -20.50247573852539
    9. '$i' → logprob: -20.75247573852539
    10. '```' → logprob: -21.00247573852539

Token 1297: '<len' (ID: 141365)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8881447911262512
    2. '<i' → logprob: -1.0131447315216064
    3. 'i' → logprob: -1.8881447315216064
    4. '<len' → logprob: -3.3881447315216064
    5. ' <' → logprob: -3.5131447315216064
    6. ' i' → logprob: -5.7631449699401855
    7. '<size' → logprob: -5.8881449699401855
    8. '[i' → logprob: -7.0131449699401855
    9. '=i' → logprob: -7.5131449699401855
    10. '<n' → logprob: -7.7631449699401855

Token 1298: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.7035084962844849
    2. 'fav' → logprob: -0.7035084962844849
    3. 'f' → logprob: -4.578508377075195
    4. ' fav' → logprob: -11.328508377075195
    5. '	f' → logprob: -11.828508377075195
    6. 'favor' → logprob: -12.453508377075195
    7. '_f' → logprob: -12.578508377075195
    8. '```' → logprob: -13.078508377075195
    9. '[f' → logprob: -13.203508377075195
    10. 'fam' → logprob: -13.328508377075195

Token 1299: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.08900752663612366
    2. 'fav' → logprob: -2.464007616043091
    3. ' fav' → logprob: -9.839007377624512
    4. 'f' → logprob: -11.839007377624512
    5. 'aw' → logprob: -13.464007377624512
    6. 'avored' → logprob: -13.964007377624512
    7. '```' → logprob: -14.464007377624512
    8. 'Fav' → logprob: -14.839007377624512
    9. 'af' → logprob: -14.964007377624512
    10. 'avs' → logprob: -15.089007377624512

Token 1300: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.01004056166857481
    2. 'sorted' → logprob: -4.760040760040283
    3. 'orted' → logprob: -6.885040760040283
    4. 'f' → logprob: -8.385040283203125
    5. 'Sorted' → logprob: -8.885040283203125
    6. 'fav' → logprob: -11.135040283203125
    7. '```' → logprob: -12.010040283203125
    8. '(sorted' → logprob: -12.885040283203125
    9. '   ' → logprob: -13.635040283203125
    10. 'ort' → logprob: -13.885040283203125

Token 1301: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0718650221824646
    2. '(f' → logprob: -3.4468650817871094
    3. 'f' → logprob: -4.446865081787109
    4. 'fav' → logprob: -4.821865081787109
    5. 'else' → logprob: -5.696865081787109
    6. ' else' → logprob: -5.946865081787109
    7. '   ' → logprob: -6.071865081787109
    8. '(sorted' → logprob: -6.196865081787109
    9. '```' → logprob: -6.446865081787109
    10. '_sorted' → logprob: -6.696865081787109

Token 1302: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20146510004997253
    2. ' else' → logprob: -1.701465129852295
    3. '```' → logprob: -10.201464653015137
    4. '       ' → logprob: -11.701464653015137
    5. '   ' → logprob: -13.201464653015137
    6. '	else' → logprob: -13.701464653015137
    7. '        ' → logprob: -14.326464653015137
    8. '           ' → logprob: -14.701464653015137
    9. ' ' → logprob: -14.826464653015137
    10. '<|end|>' → logprob: -15.201464653015137

Token 1303: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023333763238042593
    2. ' ' → logprob: -8.37523365020752
    3. '   ' → logprob: -13.37523365020752
    4. '+' → logprob: -14.50023365020752
    5. '  ' → logprob: -15.00023365020752
    6. '
' → logprob: -15.87523365020752
    7. '(' → logprob: -16.250232696533203
    8. 'int' → logprob: -16.500232696533203
    9. '    ' → logprob: -17.375232696533203
    10. 'float' → logprob: -17.375232696533203

Token 1304: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -16.625003814697266
    4. '(' → logprob: -16.750003814697266
    5. 'int' → logprob: -16.875003814697266
    6. '
' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '  ' → logprob: -18.000003814697266
    9. 'float' → logprob: -18.750003814697266
    10. '100' → logprob: -19.000003814697266

Token 1305: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.38690537214279175
    2. '**' → logprob: -1.1369054317474365
    3. '```' → logprob: -10.386905670166016
    4. '^' → logprob: -13.386905670166016
    5. '``' → logprob: -14.511905670166016
    6. '
' → logprob: -14.511905670166016
    7. '*' → logprob: -14.761905670166016
    8. '09' → logprob: -16.136905670166016
    9. '\xe2\x81' → logprob: -16.136905670166016
    10. '10' → logprob: -16.386905670166016

Token 1306: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '18' → logprob: -16.5
    3. '```' → logprob: -17.0
    4. '``' → logprob: -18.25
    5. '
' → logprob: -18.375
    6. '09' → logprob: -18.5
    7. '8' → logprob: -18.875
    8. 'nine' → logprob: -19.0
    9. '10' → logprob: -19.25
    10. '99' → logprob: -19.25

Token 1307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021846420131623745
    2. '
' → logprob: -6.752184867858887
    3. '   ' → logprob: -7.627184867858887
    4. '        
' → logprob: -9.127184867858887
    5. ',' → logprob: -9.377184867858887
    6. ')' → logprob: -9.502184867858887
    7. ' candidates' → logprob: -10.002184867858887
    8. 'g' → logprob: -10.377184867858887
    9. '```' → logprob: -10.377184867858887
    10. '_candidates' → logprob: -11.002184867858887

Token 1308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001834037946537137
    2. '   ' → logprob: -6.626833915710449
    3. '
' → logprob: -8.62683391571045
    4. '        
' → logprob: -9.50183391571045
    5. 'gap' → logprob: -9.50183391571045
    6. 'g' → logprob: -9.75183391571045
    7. '```' → logprob: -9.75183391571045
    8. '<|end|>' → logprob: -10.87683391571045
    9. '+' → logprob: -11.75183391571045
    10. ')' → logprob: -12.25183391571045

Token 1309: ' gaps' (ID: 52008)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028439868241548538
    2. 'gap' → logprob: -3.65343976020813
    3. 'g' → logprob: -6.278439998626709
    4. '   ' → logprob: -8.77843952178955
    5. ' gap' → logprob: -10.40343952178955
    6. 'c' → logprob: -10.52843952178955
    7. 'candidate' → logprob: -11.77843952178955
    8. 'segment' → logprob: -12.02843952178955
    9. 'subset' → logprob: -12.02843952178955
    10. '```' → logprob: -12.52843952178955

Token 1310: '.append' (ID: 3709)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2078544646501541
    2. '=' → logprob: -1.7078545093536377
    3. '=[]' → logprob: -5.082854270935059
    4. '       ' → logprob: -9.207854270935059
    5. '=[]
' → logprob: -9.332854270935059
    6. '_candidates' → logprob: -11.582854270935059
    7. '   ' → logprob: -12.082854270935059
    8. '=[]
' → logprob: -12.707854270935059
    9. '.append' → logprob: -13.457854270935059
    10. '=[],' → logprob: -13.582854270935059

Token 1311: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2095903903245926
    2. '(prev' → logprob: -1.7095904350280762
    3. '((' → logprob: -4.834590435028076
    4. '   ' → logprob: -9.459589958190918
    5. '(
' → logprob: -9.834589958190918
    6. ' (' → logprob: -9.959589958190918
    7. '(pre' → logprob: -12.334589958190918
    8. '[(' → logprob: -12.459589958190918
    9. '([' → logprob: -14.084589958190918
    10. '  ' → logprob: -14.084589958190918

Token 1312: ' (' (ID: 350)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0003472633252386004
    2. '(' → logprob: -8.000347137451172
    3. ' (' → logprob: -12.250347137451172
    4. '[' → logprob: -12.750347137451172
    5. '(previous' → logprob: -13.625347137451172
    6. '(next' → logprob: -13.875347137451172
    7. '   ' → logprob: -14.625347137451172
    8. '(pre' → logprob: -14.875347137451172
    9. '[(' → logprob: -15.125347137451172
    10. ')' → logprob: -15.750347137451172

Token 1313: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -9.088346359931165e-07
    2. ' prev' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.0
    4. '	prev' → logprob: -20.625
    5. '(prev' → logprob: -20.625
    6. '       ' → logprob: -22.0
    7. '.prev' → logprob: -22.375
    8. '
' → logprob: -22.625
    9. '    ' → logprob: -23.25
    10. '           ' → logprob: -23.75

Token 1314: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -8.73314929776825e-05
    2. 'end' → logprob: -9.37508773803711
    3. '   ' → logprob: -13.87508773803711
    4. 'End' → logprob: -14.87508773803711
    5. '
' → logprob: -15.62508773803711
    6. '```' → logprob: -15.75008773803711
    7. '_END' → logprob: -15.75008773803711
    8. '0' → logprob: -16.50008773803711
    9. 'def' → logprob: -16.50008773803711
    10. '       ' → logprob: -16.87508773803711

Token 1315: ',next' (ID: 129376)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5768765211105347
    2. ',next' → logprob: -0.8268765211105347
    3. ' ,' → logprob: -7.701876640319824
    4. ',
' → logprob: -7.951876640319824
    5. '[next' → logprob: -9.451876640319824
    6. ',n' → logprob: -10.326876640319824
    7. '(next' → logprob: -12.326876640319824
    8. '       ' → logprob: -12.451876640319824
    9. '
' → logprob: -12.701876640319824
    10. 'next' → logprob: -12.951876640319824

Token 1316: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.572941179503687e-05
    2. 'start' → logprob: -10.000045776367188
    3. 'Start' → logprob: -15.375045776367188
    4. '_end' → logprob: -16.500045776367188
    5. '_START' → logprob: -18.125045776367188
    6. ' start' → logprob: -20.000045776367188
    7. '
' → logprob: -20.125045776367188
    8. '   ' → logprob: -20.375045776367188
    9. '-start' → logprob: -20.375045776367188
    10. '[' → logprob: -20.500045776367188

Token 1317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015229015843942761
    2. '       ' → logprob: -8.875152587890625
    3. ' )' → logprob: -12.000152587890625
    4. ')
' → logprob: -12.750152587890625
    5. '   ' → logprob: -13.375152587890625
    6. ')`' → logprob: -14.750152587890625
    7. '))' → logprob: -14.875152587890625
    8. ',)' → logprob: -15.125152587890625
    9. ',' → logprob: -15.625152587890625
    10. ')\' → logprob: -16.250152587890625

Token 1318: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021151662804186344
    2. ')
' → logprob: -6.502115249633789
    3. ' )' → logprob: -8.002115249633789
    4. '   ' → logprob: -8.877115249633789
    5. '       ' → logprob: -9.002115249633789
    6. '
' → logprob: -11.627115249633789
    7. ' )
' → logprob: -14.002115249633789
    8. '```' → logprob: -14.377115249633789
    9. ',)' → logprob: -14.502115249633789
    10. ')

' → logprob: -14.502115249633789

Token 1319: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7526960372924805
    2. 'gap' → logprob: -1.2526960372924805
    3. 'non' → logprob: -2.2526960372924805
    4. 'for' → logprob: -2.8776960372924805
    5. 'c' → logprob: -3.1276960372924805
    6. '   ' → logprob: -3.8776960372924805
    7. '```' → logprob: -4.8776960372924805
    8. 'selected' → logprob: -5.8776960372924805
    9. 'max' → logprob: -6.5026960372924805
    10. 'interval' → logprob: -7.5026960372924805

Token 1320: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8741900324821472
    2. '       ' → logprob: -1.124190092086792
    3. 'gap' → logprob: -1.499190092086792
    4. '   ' → logprob: -4.124189853668213
    5. 'non' → logprob: -5.124189853668213
    6. 'selected' → logprob: -6.124189853668213
    7. 'c' → logprob: -6.124189853668213
    8. 'max' → logprob: -6.499189853668213
    9. 'interval' → logprob: -6.499189853668213
    10. '```' → logprob: -6.999189853668213

Token 1321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12834270298480988
    2. ' =' → logprob: -2.128342628479004
    3. '=[]' → logprob: -7.503342628479004
    4. 't' → logprob: -7.878342628479004
    5. 'ults' → logprob: -9.378342628479004
    6. 's' → logprob: -9.628342628479004
    7. '=[]
' → logprob: -9.878342628479004
    8. 'ult' → logprob: -10.003342628479004
    9. '+=' → logprob: -10.128342628479004
    10. '_' → logprob: -10.128342628479004

Token 1322: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.022776339203119278
    2. 'len' → logprob: -4.272776126861572
    3. '0' → logprob: -5.147776126861572
    4. ' total' → logprob: -6.022776126861572
    5. '[]' → logprob: -8.64777660369873
    6. '[' → logprob: -10.02277660369873
    7. ' ' → logprob: -10.27277660369873
    8. '[len' → logprob: -10.39777660369873
    9. ' len' → logprob: -10.89777660369873
    10. '   ' → logprob: -10.89777660369873

Token 1323: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053337715566158295
    2. '+' → logprob: -3.678337812423706
    3. '   ' → logprob: -4.803337574005127
    4. ' +' → logprob: -5.178337574005127
    5. 'for' → logprob: -5.428337574005127
    6. '    
' → logprob: -5.803337574005127
    7. '+
' → logprob: -6.053337574005127
    8. ' 
' → logprob: -6.803337574005127
    9. '  
' → logprob: -7.928337574005127
    10. '\n' → logprob: -8.178338050842285

Token 1324: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23949089646339417
    2. '   ' → logprob: -1.6144908666610718
    3. '```' → logprob: -4.739490985870361
    4. '``' → logprob: -7.114490985870361
    5. 'non' → logprob: -7.364490985870361
    6. 'g' → logprob: -7.489490985870361
    7. 'i' → logprob: -7.489490985870361
    8. 'gap' → logprob: -7.739490985870361
    9. 'from' → logprob: -7.864490985870361
    10. 'def' → logprob: -7.864490985870361

Token 1325: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10377871990203857
    2. '   ' → logprob: -2.728778839111328
    3. 'gap' → logprob: -3.603778839111328
    4. '```' → logprob: -5.853778839111328
    5. 'def' → logprob: -6.853778839111328
    6. '       ' → logprob: -6.978778839111328
    7. ' for' → logprob: -8.228778839111328
    8. '``' → logprob: -8.353778839111328
    9. 'interval' → logprob: -8.853778839111328
    10. 'non' → logprob: -8.978778839111328

Token 1326: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033804986625909805
    2. '   ' → logprob: -3.5338048934936523
    3. '       ' → logprob: -5.908804893493652
    4. ' for' → logprob: -7.908804893493652
    5. '```' → logprob: -8.158804893493652
    6. 'gap' → logprob: -8.658804893493652
    7. 'non' → logprob: -9.033804893493652
    8. '``' → logprob: -9.533804893493652
    9. 'i' → logprob: -9.658804893493652
    10. '#' → logprob: -9.908804893493652

Token 1327: ' each' (ID: 2454)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.08484954386949539
    2. 'start' → logprob: -3.3348495960235596
    3. 'i' → logprob: -3.9598495960235596
    4. 'prev' → logprob: -4.9598493576049805
    5. 'each' → logprob: -6.0848493576049805
    6. 'interval' → logprob: -6.2098493576049805
    7. '(start' → logprob: -6.2098493576049805
    8. ' gap' → logprob: -6.2098493576049805
    9. 'st' → logprob: -6.3348493576049805
    10. 'g' → logprob: -6.4598493576049805

Token 1328: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.013341630809009075
    2. 'i' → logprob: -4.638341426849365
    3. '
' → logprob: -6.888341426849365
    4. 'g' → logprob: -7.138341426849365
    5. ' gap' → logprob: -7.388341426849365
    6. '   ' → logprob: -8.263341903686523
    7. 'prev' → logprob: -8.888341903686523
    8. '(
' → logprob: -9.013341903686523
    9. '```' → logprob: -9.263341903686523
    10. '_gap' → logprob: -9.513341903686523

Token 1329: ' find' (ID: 1646)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4141085147857666
    2. '       ' → logprob: -1.4141085147857666
    3. ',' → logprob: -1.9141085147857666
    4. 'in' → logprob: -2.1641085147857666
    5. '   ' → logprob: -2.5391085147857666
    6. 'i' → logprob: -2.6641085147857666
    7. ' in' → logprob: -3.6641085147857666
    8. 'for' → logprob: -4.0391082763671875
    9. '```' → logprob: -4.2891082763671875
    10. '=' → logprob: -5.2891082763671875

Token 1330: ' max' (ID: 2999)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.06341470032930374
    2. '       ' → logprob: -3.3134148120880127
    3. 'c' → logprob: -4.313414573669434
    4. 'i' → logprob: -6.313414573669434
    5. '_candidates' → logprob: -6.438414573669434
    6. 'interval' → logprob: -6.688414573669434
    7. '_gap' → logprob: -6.688414573669434
    8. ' gap' → logprob: -6.938414573669434
    9. 'candidate' → logprob: -7.438414573669434
    10. 'non' → logprob: -7.688414573669434

Token 1331: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9380224347114563
    2. 'count' → logprob: -1.5630223751068115
    3. 'non' → logprob: -2.5630223751068115
    4. 'c' → logprob: -2.8130223751068115
    5. 'st' → logprob: -3.4380223751068115
    6. '       ' → logprob: -3.6880223751068115
    7. 'subset' → logprob: -3.6880223751068115
    8. 'dp' → logprob: -4.188022613525391
    9. '_subset' → logprob: -4.188022613525391
    10. '_non' → logprob: -4.438022613525391

Token 1332: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.9200311899185181
    2. '   ' → logprob: -1.170031189918518
    3. '       ' → logprob: -1.545031189918518
    4. 'possible' → logprob: -3.7950310707092285
    5. '_of' → logprob: -4.6700310707092285
    6. 'interval' → logprob: -5.2950310707092285
    7. 'from' → logprob: -5.2950310707092285
    8. '```' → logprob: -5.2950310707092285
    9. ' of' → logprob: -5.4200310707092285
    10. 'st' → logprob: -5.7950310707092285

Token 1333: ' compatible' (ID: 24686)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.05940917134284973
    2. 'interval' → logprob: -3.5594091415405273
    3. 'compatible' → logprob: -4.434409141540527
    4. '
' → logprob: -5.309409141540527
    5. ' non' → logprob: -5.434409141540527
    6. '#' → logprob: -6.059409141540527
    7. '   ' → logprob: -6.434409141540527
    8. 'added' → logprob: -6.559409141540527
    9. 'c' → logprob: -7.184409141540527
    10. 'selected' → logprob: -7.684409141540527

Token 1334: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.37441620230674744
    2. 'c' → logprob: -1.3744162321090698
    3. 'interval' → logprob: -4.749416351318359
    4. '(' → logprob: -4.749416351318359
    5. '_non' → logprob: -4.874416351318359
    6. '(
' → logprob: -5.249416351318359
    7. '_candidates' → logprob: -5.374416351318359
    8. 'st' → logprob: -5.499416351318359
    9. '   ' → logprob: -5.624416351318359
    10. '\t' → logprob: -6.499416351318359

Token 1335: '-f' (ID: 3002)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00401084590703249
    2. 'fav' → logprob: -6.2540106773376465
    3. '_' → logprob: -6.3790106773376465
    4. '   ' → logprob: -8.504011154174805
    5. '-f' → logprob: -9.504011154174805
    6. 'f' → logprob: -9.629011154174805
    7. '       ' → logprob: -11.379011154174805
    8. '-' → logprob: -12.254011154174805
    9. '_overlap' → logprob: -12.629011154174805
    10. '```' → logprob: -12.879011154174805

Token 1336: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.009092651307582855
    2. 'avs' → logprob: -5.259092807769775
    3. '_non' → logprob: -7.009092807769775
    4. 'fav' → logprob: -7.134092807769775
    5. '_candidates' → logprob: -7.884092807769775
    6. 'non' → logprob: -8.384092330932617
    7. 'v' → logprob: -8.509092330932617
    8. '_' → logprob: -8.634092330932617
    9. '```' → logprob: -8.634092330932617
    10. '_f' → logprob: -8.759092330932617

Token 1337: ' programs' (ID: 8094)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.090199589729309
    2. '_c' → logprob: -1.215199589729309
    3. 'c' → logprob: -1.715199589729309
    4. '   ' → logprob: -1.840199589729309
    5. '```' → logprob: -5.2151994705200195
    6. '       ' → logprob: -5.2151994705200195
    7. '_tokens' → logprob: -5.5901994705200195
    8. 'interval' → logprob: -5.8401994705200195
    9. ' candidates' → logprob: -6.2151994705200195
    10. 'tokens' → logprob: -6.3401994705200195

Token 1338: ' inside' (ID: 6772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067733959294855595
    2. '
' → logprob: -5.506773471832275
    3. '```' → logprob: -7.006773471832275
    4. '    
' → logprob: -7.756773471832275
    5. '       ' → logprob: -8.256772994995117
    6. ',' → logprob: -8.381772994995117
    7. 'def' → logprob: -8.506772994995117
    8. 'for' → logprob: -9.006772994995117
    9. 'from' → logprob: -10.006772994995117
    10. 'tokens' → logprob: -10.131772994995117

Token 1339: ' gap' (ID: 19953)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012524925405159593
    2. 'for' → logprob: -7.0012526512146
    3. '
' → logprob: -9.376252174377441
    4. '       ' → logprob: -9.626252174377441
    5. 'from' → logprob: -9.626252174377441
    6. ' for' → logprob: -10.376252174377441
    7. '<|end|>' → logprob: -10.626252174377441
    8. '    
' → logprob: -11.001252174377441
    9. '```' → logprob: -11.126252174377441
    10. 'import' → logprob: -11.251252174377441

Token 1340: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06455181539058685
    2. 'for' → logprob: -3.064551830291748
    3. '
' → logprob: -5.189551830291748
    4. ' for' → logprob: -5.814551830291748
    5. '    
' → logprob: -5.814551830291748
    6. 'def' → logprob: -7.189551830291748
    7. 'import' → logprob: -7.814551830291748
    8. '```' → logprob: -7.939551830291748
    9. '       ' → logprob: -8.06455135345459
    10. ',' → logprob: -8.18955135345459

Token 1341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013041982427239418
    2. 'for' → logprob: -5.138041973114014
    3. '
' → logprob: -6.013041973114014
    4. '```' → logprob: -6.013041973114014
    5. '       ' → logprob: -7.263041973114014
    6. ' for' → logprob: -7.513041973114014
    7. '    
' → logprob: -8.138042449951172
    8. ',' → logprob: -8.888042449951172
    9. 'def' → logprob: -9.638042449951172
    10. 'from' → logprob: -9.763042449951172

Token 1342: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2584432065486908
    2. 'for' → logprob: -1.5084432363510132
    3. '```' → logprob: -6.383443355560303
    4. '
' → logprob: -6.633443355560303
    5. 'gap' → logprob: -7.133443355560303
    6. '       ' → logprob: -7.133443355560303
    7. 'from' → logprob: -7.383443355560303
    8. ' for' → logprob: -7.383443355560303
    9. 'i' → logprob: -8.508442878723145
    10. '``' → logprob: -8.883442878723145

Token 1343: ' classic' (ID: 13686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8007434606552124
    2. '   ' → logprob: -0.9257434606552124
    3. 'gap' → logprob: -2.300743579864502
    4. '       ' → logprob: -3.425743579864502
    5. 'def' → logprob: -4.425743579864502
    6. 'g' → logprob: -5.550743579864502
    7. 'dp' → logprob: -6.675743579864502
    8. 'interval' → logprob: -6.800743579864502
    9. 'import' → logprob: -7.300743579864502
    10. 'non' → logprob: -7.550743579864502

Token 1344: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.38964781165122986
    2. '   ' → logprob: -1.6396478414535522
    3. 'c' → logprob: -3.6396477222442627
    4. '#' → logprob: -3.8896477222442627
    5. 'for' → logprob: -4.139647960662842
    6. 'def' → logprob: -4.389647960662842
    7. '```' → logprob: -4.639647960662842
    8. '
' → logprob: -4.889647960662842
    9. 'import' → logprob: -4.889647960662842
    10. 'dp' → logprob: -5.139647960662842

Token 1345: ' scheduling' (ID: 51708)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00047082986566238105
    2. ' scheduling' → logprob: -8.000471115112305
    3. '
' → logprob: -10.125471115112305
    4. '   ' → logprob: -10.625471115112305
    5. '_s' → logprob: -10.750471115112305
    6. 'schedule' → logprob: -11.500471115112305
    7. 'Scheduling' → logprob: -11.500471115112305
    8. 'scheduler' → logprob: -11.500471115112305
    9. 'cheduling' → logprob: -12.375471115112305
    10. 'for' → logprob: -12.500471115112305

Token 1346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30088353157043457
    2. '       ' → logprob: -1.6758835315704346
    3. 'def' → logprob: -3.6758835315704346
    4. '```' → logprob: -4.1758832931518555
    5. 'for' → logprob: -4.9258832931518555
    6. '
' → logprob: -4.9258832931518555
    7. '    
' → logprob: -6.1758832931518555
    8. 'from' → logprob: -6.3008832931518555
    9. '_candidates' → logprob: -6.3008832931518555
    10. 'import' → logprob: -6.6758832931518555

Token 1347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27753981947898865
    2. 'non' → logprob: -2.5275397300720215
    3. '       ' → logprob: -2.9025397300720215
    4. '_candidates' → logprob: -3.5275397300720215
    5. 'c' → logprob: -4.0275397300720215
    6. '
' → logprob: -4.7775397300720215
    7. '_c' → logprob: -5.4025397300720215
    8. 'with' → logprob: -5.5275397300720215
    9. '_non' → logprob: -5.6525397300720215
    10. 'for' → logprob: -5.6525397300720215

Token 1348: ' for' (ID: 395)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.4413050711154938
    2. 'for' (adapté à ' for') → logprob: -1.4413050413131714
    3. '   ' → logprob: -2.816305160522461
    4. 'non' → logprob: -2.941305160522461
    5. 'g' → logprob: -5.691305160522461
    6. 'c' → logprob: -6.191305160522461
    7. '
' → logprob: -7.566305160522461
    8. '       ' → logprob: -8.066305160522461
    9. '```' → logprob: -8.191305160522461
    10. 'i' → logprob: -8.191305160522461

Token 1349: ' L' (ID: 451)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.6995054483413696
    2. 'prev' → logprob: -1.3245054483413696
    3. 'start' → logprob: -2.82450532913208
    4. 'i' → logprob: -3.44950532913208
    5. ' prev' → logprob: -3.44950532913208
    6. ' gap' → logprob: -3.69950532913208
    7. 'L' → logprob: -3.94950532913208
    8. 'g' → logprob: -4.57450532913208
    9. ' L' → logprob: -4.57450532913208
    10. ' (' → logprob: -4.69950532913208

Token 1350: ',R' (ID: 48317)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02644961327314377
    2. ' in' → logprob: -4.026449680328369
    3. ',' → logprob: -4.901449680328369
    4. ',in' → logprob: -7.526449680328369
    5. ',next' → logprob: -9.401449203491211
    6. ',n' → logprob: -9.651449203491211
    7. ' ,' → logprob: -9.901449203491211
    8. ')' → logprob: -10.776449203491211
    9. '
' → logprob: -10.901449203491211
    10. ',L' → logprob: -10.901449203491211

Token 1351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3717696964740753
    2. 'in' → logprob: -1.871769666671753
    3. ':' → logprob: -2.121769666671753
    4. '       ' → logprob: -3.996769666671753
    5. '=' → logprob: -4.371769905090332
    6. '   ' → logprob: -5.621769905090332
    7. ',' → logprob: -7.246769905090332
    8. ':
' → logprob: -7.871769905090332
    9. ' =' → logprob: -7.996769905090332
    10. '_in' → logprob: -8.496769905090332

Token 1352: ' gaps' (ID: 52008)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00019364648323971778
    2. ' gaps' → logprob: -8.62519359588623
    3. '   ' → logprob: -11.37519359588623
    4. '
' → logprob: -13.25019359588623
    5. 'gap' → logprob: -15.12519359588623
    6. 'ranges' → logprob: -15.87519359588623
    7. ' g' → logprob: -16.250194549560547
    8. '       ' → logprob: -16.500194549560547
    9. ' ' → logprob: -16.750194549560547
    10. '(g' → logprob: -16.875194549560547

Token 1353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033283013850450516
    2. ':
' → logprob: -3.533282995223999
    3. '       ' → logprob: -5.783283233642578
    4. '   ' → logprob: -8.283283233642578
    5. ',' → logprob: -9.408283233642578
    6. '=' → logprob: -9.908283233642578
    7. ':

' → logprob: -11.158283233642578
    8. ' :' → logprob: -11.158283233642578
    9. '):
' → logprob: -11.908283233642578
    10. '[' → logprob: -12.408283233642578

Token 1354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006473870598711073
    2. '   ' → logprob: -8.00064754486084
    3. '
' → logprob: -8.62564754486084
    4. '```' → logprob: -9.12564754486084
    5. '    
' → logprob: -11.62564754486084
    6. '        
' → logprob: -11.62564754486084
    7. '``' → logprob: -13.50064754486084
    8. '      ' → logprob: -14.00064754486084
    9. '  
' → logprob: -14.50064754486084
    10. '     ' → logprob: -14.62564754486084

Token 1355: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2130177915096283
    2. 'gap' → logprob: -1.7130178213119507
    3. 'inside' → logprob: -5.58801794052124
    4. 'interval' → logprob: -5.83801794052124
    5. 'available' → logprob: -6.58801794052124
    6. 'subset' → logprob: -7.21301794052124
    7. 'c' → logprob: -7.58801794052124
    8. ' gap' → logprob: -7.71301794052124
    9. 'sub' → logprob: -8.338017463684082
    10. 'allowed' → logprob: -8.338017463684082

Token 1356: ' filter' (ID: 6690)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.167831689119339
    2. '       ' → logprob: -2.2928316593170166
    3. 'inside' → logprob: -4.167831897735596
    4. 'interval' → logprob: -5.167831897735596
    5. 'c' → logprob: -5.292831897735596
    6. 'available' → logprob: -5.667831897735596
    7. 'valid' → logprob: -5.667831897735596
    8. 'allowed' → logprob: -5.667831897735596
    9. 'subset' → logprob: -5.667831897735596
    10. 'eligible' → logprob: -5.792831897735596

Token 1357: ' non' (ID: 2893)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6160591244697571
    2. '_candidates' → logprob: -1.2410590648651123
    3. 'gap' → logprob: -2.2410590648651123
    4. '       ' → logprob: -3.4910590648651123
    5. 'cand' → logprob: -4.366059303283691
    6. 'non' → logprob: -5.241059303283691
    7. '[' → logprob: -5.866059303283691
    8. 'interval' → logprob: -6.491059303283691
    9. '_c' → logprob: -6.491059303283691
    10. 'for' → logprob: -6.491059303283691

Token 1358: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0002558561391197145
    2. '_' → logprob: -8.750255584716797
    3. '_non' → logprob: -9.875255584716797
    4. '   ' → logprob: -11.125255584716797
    5. '       ' → logprob: -11.375255584716797
    6. '_c' → logprob: -11.875255584716797
    7. 'non' → logprob: -12.625255584716797
    8. '           ' → logprob: -13.125255584716797
    9. '_n' → logprob: -13.500255584716797
    10. 'f' → logprob: -13.750255584716797

Token 1359: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.04808657616376877
    2. '_f' → logprob: -3.173086643218994
    3. '_c' → logprob: -5.548086643218994
    4. '_av' → logprob: -7.798086643218994
    5. 'avs' → logprob: -7.923086643218994
    6. 'fav' → logprob: -8.048086166381836
    7. '_v' → logprob: -10.798086166381836
    8. 'or' → logprob: -11.548086166381836
    9. 'for' → logprob: -11.673086166381836
    10. '   ' → logprob: -11.798086166381836

Token 1360: ' candidates' (ID: 18116)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.1299874633550644
    2. 'c' → logprob: -2.3799874782562256
    3. '_candidates' → logprob: -3.7549874782562256
    4. '       ' → logprob: -6.5049872398376465
    5. ' =' → logprob: -6.7549872398376465
    6. '   ' → logprob: -6.7549872398376465
    7. 'for' → logprob: -7.2549872398376465
    8. '=' → logprob: -7.5049872398376465
    9. 'program' → logprob: -8.379987716674805
    10. 'interval' → logprob: -9.004987716674805

Token 1361: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041935560293495655
    2. 'c' → logprob: -6.8791937828063965
    3. ',' → logprob: -7.8791937828063965
    4. '_candidates' → logprob: -8.004193305969238
    5. 'for' → logprob: -8.129193305969238
    6. 'tokens' → logprob: -8.129193305969238
    7. '=' → logprob: -8.379193305969238
    8. '```' → logprob: -8.504193305969238
    9. 'filtered' → logprob: -8.879193305969238
    10. 'gap' → logprob: -8.879193305969238

Token 1362: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3566814064979553
    2. 'c' → logprob: -1.6066813468933105
    3. 'gap' → logprob: -3.1066813468933105
    4. 'inside' → logprob: -4.2316813468933105
    5. 'for' → logprob: -5.2316813468933105
    6. 'cand' → logprob: -5.3566813468933105
    7. 'in' → logprob: -5.6066813468933105
    8. 'interval' → logprob: -5.6066813468933105
    9. '[c' → logprob: -5.7316813468933105
    10. '[' → logprob: -5.7316813468933105

Token 1363: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0008178464486263692
    2. ' L' → logprob: -8.000818252563477
    3. '(L' → logprob: -8.125818252563477
    4. 'st' → logprob: -9.375818252563477
    5. '   ' → logprob: -10.125818252563477
    6. '
' → logprob: -10.750818252563477
    7. ')' → logprob: -11.125818252563477
    8. ',' → logprob: -11.875818252563477
    9. ']' → logprob: -12.500818252563477
    10. ',L' → logprob: -12.875818252563477

Token 1364: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08320211619138718
    2. ' ,' → logprob: -3.0832021236419678
    3. ',R' → logprob: -4.708201885223389
    4. ' <=' → logprob: -4.833201885223389
    5. '<=' → logprob: -4.958201885223389
    6. '+' → logprob: -5.583201885223389
    7. '       ' → logprob: -6.333201885223389
    8. ' <' → logprob: -6.958201885223389
    9. ',L' → logprob: -7.083201885223389
    10. '   ' → logprob: -7.583201885223389

Token 1365: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5254154205322266
    2. ']' → logprob: -1.4004154205322266
    3. ']
' → logprob: -2.1504154205322266
    4. ']:
' → logprob: -3.9004154205322266
    5. ')' → logprob: -4.400415420532227
    6. '):
' → logprob: -5.650415420532227
    7. ']:' → logprob: -6.025415420532227
    8. ')
' → logprob: -6.025415420532227
    9. '           ' → logprob: -7.025415420532227
    10. ']
' → logprob: -7.525415420532227

Token 1366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006170084234327078
    2. 'tokens' → logprob: -9.000617027282715
    3. '```' → logprob: -9.125617027282715
    4. '_candidates' → logprob: -9.750617027282715
    5. 'c' → logprob: -10.000617027282715
    6. '           ' → logprob: -10.375617027282715
    7. ' =' → logprob: -10.375617027282715
    8. 'filtered' → logprob: -10.500617027282715
    9. ',' → logprob: -10.625617027282715
    10. '=' → logprob: -10.625617027282715

Token 1367: ' cand' (ID: 31771)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6513681411743164
    2. 'inside' → logprob: -1.4013681411743164
    3. 'gap' → logprob: -1.5263681411743164
    4. 'in' → logprob: -5.651368141174316
    5. 'interval' → logprob: -5.651368141174316
    6. 'c' → logprob: -6.776368141174316
    7. 'sub' → logprob: -6.776368141174316
    8. 'ins' → logprob: -6.901368141174316
    9. 'subset' → logprob: -6.901368141174316
    10. 'cand' (adapté à ' cand') → logprob: -7.651368141174316

Token 1368: '_in' (ID: 2267)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.0547555685043335
    2. 'id' → logprob: -1.1797555685043335
    3. ' =' → logprob: -2.054755687713623
    4. '=' → logprob: -2.679755687713623
    5. 's' → logprob: -3.179755687713623
    6. 'ates' → logprob: -3.304755687713623
    7. 'ids' → logprob: -4.054755687713623
    8. '   ' → logprob: -4.429755687713623
    9. '=[]
' → logprob: -4.804755687713623
    10. '=[]' → logprob: -4.929755687713623

Token 1369: '_gap' (ID: 131234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7247851490974426
    2. ' =' → logprob: -0.8497851490974426
    3. '=[]
' → logprob: -2.599785089492798
    4. '=[]' → logprob: -4.724785327911377
    5. '=[' → logprob: -7.224785327911377
    6. '       ' → logprob: -7.349785327911377
    7. '[]' → logprob: -7.349785327911377
    8. '[]
' → logprob: -7.349785327911377
    9. '   ' → logprob: -7.349785327911377
    10. '=[
' → logprob: -7.724785327911377

Token 1370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12834878265857697
    2. ' =' → logprob: -2.1283488273620605
    3. '=[]' → logprob: -7.1283488273620605
    4. '=[' → logprob: -7.7533488273620605
    5. '=[]
' → logprob: -8.753348350524902
    6. '=
' → logprob: -11.003348350524902
    7. '=[
' → logprob: -11.878348350524902
    8. '       ' → logprob: -13.253348350524902
    9. ' =[' → logprob: -13.628348350524902
    10. '   ' → logprob: -13.753348350524902

Token 1371: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04491584002971649
    2. '[s' → logprob: -4.294915676116943
    3. '[c' → logprob: -4.544915676116943
    4. '[x' → logprob: -4.794915676116943
    5. '[k' → logprob: -5.544915676116943
    6. '[name' → logprob: -6.294915676116943
    7. '[e' → logprob: -6.544915676116943
    8. '[i' → logprob: -6.794915676116943
    9. '[t' → logprob: -7.294915676116943
    10. '[(' → logprob: -8.044916152954102

Token 1372: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3535809814929962
    2. '(st' → logprob: -1.6035809516906738
    3. '(c' → logprob: -2.353580951690674
    4. '(s' → logprob: -6.978580951690674
    5. '(' → logprob: -8.228581428527832
    6. ' (' → logprob: -8.978581428527832
    7. 'st' → logprob: -8.978581428527832
    8. '(p' → logprob: -10.228581428527832
    9. '   ' → logprob: -10.353581428527832
    10. 'x' → logprob: -10.478581428527832

Token 1373: 'en' (ID: 262)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.1160349458805285e-05
    2. 's' → logprob: -12.125011444091797
    3. '   ' → logprob: -13.000011444091797
    4. '(st' → logprob: -13.500011444091797
    5. ' st' → logprob: -13.625011444091797
    6. 'c' → logprob: -15.250011444091797
    7. '```' → logprob: -16.500011444091797
    8. '	st' → logprob: -16.750011444091797
    9. 'start' → logprob: -16.875011444091797
    10. '
' → logprob: -17.000011444091797

Token 1374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01772233285009861
    2. 'for' → logprob: -4.767722129821777
    3. ')' → logprob: -6.017722129821777
    4. '-st' → logprob: -6.392722129821777
    5. ',c' → logprob: -6.642722129821777
    6. ' for' → logprob: -6.767722129821777
    7. ' ,' → logprob: -7.517722129821777
    8. 'st' → logprob: -7.892722129821777
    9. '       ' → logprob: -7.892722129821777
    10. ',start' → logprob: -8.142722129821777

Token 1375: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.008634308353066444
    2. '(st' → logprob: -4.758634090423584
    3. ' st' → logprob: -11.508634567260742
    4. '(' → logprob: -11.758634567260742
    5. ' (' → logprob: -13.258634567260742
    6. '	st' → logprob: -17.633634567260742
    7. '   ' → logprob: -18.133634567260742
    8. '_st' → logprob: -19.133634567260742
    9. ' ' → logprob: -19.258634567260742
    10. '(s' → logprob: -19.383634567260742

Token 1376: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8120061159133911
    2. ',name' → logprob: -1.0620061159133911
    3. ')' → logprob: -1.5620061159133911
    4. ',n' → logprob: -8.437005996704102
    5. ' ,' → logprob: -9.562005996704102
    6. '   ' → logprob: -9.812005996704102
    7. ')
' → logprob: -9.812005996704102
    8. 'for' → logprob: -10.437005996704102
    9. ',)' → logprob: -10.562005996704102
    10. '       ' → logprob: -11.062005996704102

Token 1377: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5313805937767029
    2. ' for' → logprob: -0.9063805937767029
    3. ')' → logprob: -5.531380653381348
    4. ',' → logprob: -6.531380653381348
    5. '        ' → logprob: -7.156380653381348
    6. '       ' → logprob: -7.781380653381348
    7. '           ' → logprob: -7.906380653381348
    8. '<|end|>' → logprob: -7.906380653381348
    9. '	for' → logprob: -8.406380653381348
    10. '            ' → logprob: -8.781380653381348

Token 1378: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00020652047533076257
    2. '(st' → logprob: -9.00020694732666
    3. ' st' → logprob: -9.87520694732666
    4. 'en' → logprob: -10.62520694732666
    5. '   ' → logprob: -12.25020694732666
    6. ' ' → logprob: -14.62520694732666
    7. '	st' → logprob: -14.75020694732666
    8. '(en' → logprob: -14.75020694732666
    9. '_,' → logprob: -15.00020694732666
    10. '_st' → logprob: -15.75020694732666

Token 1379: ',en' (ID: 143440)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6677982211112976
    2. ',en' → logprob: -0.9177982211112976
    3. 'in' → logprob: -2.7927982807159424
    4. ',name' → logprob: -4.417798042297363
    5. 'en' → logprob: -4.667798042297363
    6. 'st' → logprob: -5.667798042297363
    7. 'name' → logprob: -7.167798042297363
    8. ',in' → logprob: -7.667798042297363
    9. ',c' → logprob: -8.917798042297363
    10. ' in' → logprob: -9.042798042297363

Token 1380: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6934109926223755
    2. ' in' → logprob: -0.6934109926223755
    3. ',' → logprob: -8.568410873413086
    4. ',name' → logprob: -9.693410873413086
    5. ',in' → logprob: -11.818410873413086
    6. '	in' → logprob: -13.693410873413086
    7. ' ,' → logprob: -13.943410873413086
    8. ',_' → logprob: -13.943410873413086
    9. ',c' → logprob: -14.193410873413086
    10. ',n' → logprob: -14.943410873413086

Token 1381: '_,' (ID: 14152)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -6.682846287731081e-05
    2. ' name' → logprob: -9.625066757202148
    3. '[name' → logprob: -15.375066757202148
    4. ',name' → logprob: -15.750066757202148
    5. '"name' → logprob: -16.50006675720215
    6. ''name' → logprob: -16.62506675720215
    7. '	name' → logprob: -16.87506675720215
    8. ' ' → logprob: -17.37506675720215
    9. '{name' → logprob: -18.00006675720215
    10. 'c' → logprob: -18.12506675720215

Token 1382: '_' (ID: 62)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.619311974034645e-05
    2. ' False' → logprob: -10.250036239624023
    3. 'True' → logprob: -15.000036239624023
    4. '(False' → logprob: -15.375036239624023
    5. '0' → logprob: -15.750036239624023
    6. '=False' → logprob: -17.750036239624023
    7. '   ' → logprob: -19.000036239624023
    8. 'false' → logprob: -19.375036239624023
    9. '
' → logprob: -19.625036239624023
    10. '.False' → logprob: -19.750036239624023

Token 1383: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759401917457581
    2. ' in' → logprob: -0.8259401917457581
    3. '
' → logprob: -15.075940132141113
    4. ')' → logprob: -15.575940132141113
    5. ']' → logprob: -15.575940132141113
    6. ' ' → logprob: -15.825940132141113
    7. ',' → logprob: -17.95094108581543
    8. 'int' → logprob: -18.20094108581543
    9. '   ' → logprob: -18.20094108581543
    10. 'n' → logprob: -18.32594108581543

Token 1384: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.00011403311509639025
    2. ' non' → logprob: -10.375114440917969
    3. 'filter' → logprob: -10.625114440917969
    4. '(non' → logprob: -10.625114440917969
    5. '[(' → logprob: -10.875114440917969
    6. 'c' → logprob: -11.875114440917969
    7. '[' → logprob: -12.250114440917969
    8. '[c' → logprob: -13.000114440917969
    9. '((' → logprob: -14.875114440917969
    10. '   ' → logprob: -15.125114440917969

Token 1385: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -6.575563020305708e-05
    2. 'f' → logprob: -9.750065803527832
    3. '   ' → logprob: -13.000065803527832
    4. '_' → logprob: -13.375065803527832
    5. '	f' → logprob: -13.625065803527832
    6. 'fav' → logprob: -14.125065803527832
    7. '[' → logprob: -15.875065803527832
    8. 'v' → logprob: -16.000064849853516
    9. '<|end|>' → logprob: -16.000064849853516
    10. ')' → logprob: -16.125064849853516

Token 1386: 'av' (ID: 407)
  Prédit: 'av'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.5398653149604797
    2. '_c' → logprob: -0.9148653149604797
    3. 'c' → logprob: -4.664865493774414
    4. 'avs' → logprob: -5.164865493774414
    5. '_' → logprob: -7.664865493774414
    6. '[' → logprob: -8.664865493774414
    7. 'ac' → logprob: -8.664865493774414
    8. '
' → logprob: -9.164865493774414
    9. ')' → logprob: -9.664865493774414
    10. 'a' → logprob: -10.039865493774414

Token 1387: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5798135995864868
    2. '_c' → logprob: -0.8298135995864868
    3. 'cand' → logprob: -6.329813480377197
    4. '_candidates' → logprob: -6.579813480377197
    5. '   ' → logprob: -8.204813957214355
    6. '```' → logprob: -9.079813957214355
    7. '[' → logprob: -9.454813957214355
    8. ')' → logprob: -9.579813957214355
    9. '  ' → logprob: -10.329813957214355
    10. ' ' → logprob: -11.079813957214355

Token 1388: 'ands' (ID: 3460)
  Prédit: 'ands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ands' → logprob: -0.006946129258722067
    2. 'and' → logprob: -5.006946086883545
    3. 'ads' → logprob: -9.131946563720703
    4. 'andidates' → logprob: -10.506946563720703
    5. '_c' → logprob: -11.131946563720703
    6. '_' → logprob: -11.506946563720703
    7. 'c' → logprob: -11.506946563720703
    8. 's' → logprob: -11.756946563720703
    9. 'nds' → logprob: -12.006946563720703
    10. 'ats' → logprob: -12.131946563720703

Token 1389: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011314361356198788
    2. 'if' → logprob: -4.511314392089844
    3. '       ' → logprob: -8.386314392089844
    4. '           ' → logprob: -11.011314392089844
    5. '        ' → logprob: -11.136314392089844
    6. '	if' → logprob: -12.636314392089844
    7. '          ' → logprob: -14.136314392089844
    8. ']' → logprob: -14.386314392089844
    9. '         ' → logprob: -14.386314392089844
    10. '   ' → logprob: -14.886314392089844

Token 1390: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.01433520670980215
    2. ' st' → logprob: -4.3893351554870605
    3. 'L' → logprob: -6.3893351554870605
    4. '   ' → logprob: -9.639335632324219
    5. ' L' → logprob: -9.639335632324219
    6. '(st' → logprob: -12.014335632324219
    7. '	st' → logprob: -12.389335632324219
    8. ' ' → logprob: -14.264335632324219
    9. 'St' → logprob: -14.389335632324219
    10. ' ' → logprob: -14.514335632324219

Token 1391: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.009922654367983341
    2. ' >=' → logprob: -4.634922504425049
    3. ']>=' → logprob: -9.259922981262207
    4. ')>=' → logprob: -9.884922981262207
    5. '>' → logprob: -11.759922981262207
    6. '   ' → logprob: -12.884922981262207
    7. '```' → logprob: -13.134922981262207
    8. '[' → logprob: -13.259922981262207
    9. '
' → logprob: -13.509922981262207
    10. ')' → logprob: -13.884922981262207

Token 1392: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.630610641877865e-06
    2. ' L' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.125006675720215
    4. '
' → logprob: -16.3750057220459
    5. '>L' → logprob: -17.5000057220459
    6. '```' → logprob: -18.1250057220459
    7. '	L' → logprob: -18.3750057220459
    8. '       ' → logprob: -18.7500057220459
    9. '0' → logprob: -19.1250057220459
    10. ' ' → logprob: -19.2500057220459

Token 1393: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04860372841358185
    2. 'and' → logprob: -3.0486037731170654
    3. '<|end|>' → logprob: -11.173604011535645
    4. '&&' → logprob: -15.048604011535645
    5. '	and' → logprob: -15.048604011535645
    6. '<|end|>' → logprob: -15.173604011535645
    7. ' ' → logprob: -15.173604011535645
    8. '       ' → logprob: -15.548604011535645
    9. '```' → logprob: -15.548604011535645
    10. '        ' → logprob: -15.673604011535645

Token 1394: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.023250484839081764
    2. ' en' → logprob: -3.7732505798339844
    3. '	en' → logprob: -12.898250579833984
    4. '(en' → logprob: -13.523250579833984
    5. '=en' → logprob: -15.148250579833984
    6. '_en' → logprob: -15.148250579833984
    7. 'e' → logprob: -15.898250579833984
    8. ',en' → logprob: -16.023250579833984
    9. '.en' → logprob: -16.523250579833984
    10. ''en' → logprob: -16.648250579833984

Token 1395: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.01278791856020689
    2. ' <=' → logprob: -4.387787818908691
    3. '<R' → logprob: -8.512787818908691
    4. '<' → logprob: -9.762787818908691
    5. ')<=' → logprob: -11.262787818908691
    6. ' <' → logprob: -12.262787818908691
    7. ']<=' → logprob: -14.012787818908691
    8. ')' → logprob: -14.762787818908691
    9. '```' → logprob: -14.887787818908691
    10. '<len' → logprob: -15.887787818908691

Token 1396: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00014036978245712817
    2. ' R' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.500140190124512
    4. '
' → logprob: -15.625140190124512
    5. ' ' → logprob: -16.625141143798828
    6. ')' → logprob: -18.125141143798828
    7. '	R' → logprob: -18.625141143798828
    8. '[' → logprob: -18.625141143798828
    9. '  ' → logprob: -19.250141143798828
    10. ' ' → logprob: -19.375141143798828

Token 1397: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3455179035663605
    2. ']
' → logprob: -1.470517873764038
    3. '       ' → logprob: -2.845517873764038
    4. ' ]' → logprob: -6.845518112182617
    5. ' ]
' → logprob: -7.095518112182617
    6. '           ' → logprob: -7.220518112182617
    7. ' and' → logprob: -7.220518112182617
    8. ']

' → logprob: -8.720518112182617
    9. '][' → logprob: -8.720518112182617
    10. '   ' → logprob: -9.095518112182617

Token 1398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04579051211476326
    2. '.sort' → logprob: -3.170790433883667
    3. '<|end|>' → logprob: -6.920790672302246
    4. '[' → logprob: -7.545790672302246
    5. ')' → logprob: -7.795790672302246
    6. '   ' → logprob: -8.545790672302246
    7. '<|end|>' → logprob: -9.420790672302246
    8. ',' → logprob: -9.420790672302246
    9. ':' → logprob: -9.545790672302246
    10. '           ' → logprob: -10.170790672302246

Token 1399: ' cand' (ID: 31771)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.41564175486564636
    2. 'cand' (adapté à ' cand') → logprob: -1.4156417846679688
    3. 'c' → logprob: -3.0406417846679688
    4. '       ' → logprob: -4.665641784667969
    5. ')' → logprob: -4.790641784667969
    6. '.' → logprob: -4.915641784667969
    7. ')c' → logprob: -5.165641784667969
    8. '.c' → logprob: -5.790641784667969
    9. ',c' → logprob: -6.165641784667969
    10. '```' → logprob: -6.290641784667969

Token 1400: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0002681304467841983
    2. 'in' → logprob: -8.75026798248291
    3. '=' → logprob: -9.87526798248291
    4. 'In' → logprob: -11.37526798248291
    5. 's' → logprob: -11.87526798248291
    6. ' =' → logprob: -12.00026798248291
    7. '
' → logprob: -12.87526798248291
    8. '```' → logprob: -13.50026798248291
    9. '=_' → logprob: -13.62526798248291
    10. 'ection' → logprob: -13.62526798248291

Token 1401: '_gap' (ID: 131234)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.1270737200975418
    2. '_gap' → logprob: -2.1270737648010254
    3. 'cand' → logprob: -9.877073287963867
    4. 'ap' → logprob: -11.002073287963867
    5. 'g' → logprob: -11.127073287963867
    6. '[' → logprob: -11.377073287963867
    7. '-gap' → logprob: -11.502073287963867
    8. 'c' → logprob: -11.502073287963867
    9. ' gap' → logprob: -12.252073287963867
    10. '_c' → logprob: -12.627073287963867

Token 1402: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -6.8497312895488e-05
    2. 'sort' → logprob: -9.625068664550781
    3. '.' → logprob: -13.625068664550781
    4. '=' → logprob: -14.375068664550781
    5. '.reverse' → logprob: -15.625068664550781
    6. '.append' → logprob: -16.00006866455078
    7. '	sort' → logprob: -16.12506866455078
    8. ' .' → logprob: -17.25006866455078
    9. '.pop' → logprob: -17.37506866455078
    10. '.c' → logprob: -17.37506866455078

Token 1403: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1713324785232544
    2. '()
' → logprob: -2.671332359313965
    3. '[' → logprob: -2.921332359313965
    4. '   ' → logprob: -4.921332359313965
    5. '<|end|>' → logprob: -5.046332359313965
    6. 'token' → logprob: -5.921332359313965
    7. '[
' → logprob: -6.296332359313965
    8. '()[' → logprob: -6.296332359313965
    9. '[token' → logprob: -6.671332359313965
    10. '();' → logprob: -6.671332359313965

Token 1404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4466306269168854
    2. 'for' → logprob: -2.1966307163238525
    3. '   ' → logprob: -2.1966307163238525
    4. ' for' → logprob: -2.5716307163238525
    5. '<|end|>' → logprob: -3.9466307163238525
    6. '```' → logprob: -4.821630477905273
    7. '[' → logprob: -5.071630477905273
    8. '
' → logprob: -5.321630477905273
    9. '+' → logprob: -5.821630477905273
    10. 'i' → logprob: -6.196630477905273

Token 1405: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.4103738069534302
    2. 'idx' → logprob: -1.9103738069534302
    3. 'cnt' → logprob: -2.2853736877441406
    4. 'i' → logprob: -3.5353736877441406
    5. 'ptr' → logprob: -4.160373687744141
    6. 'dp' → logprob: -5.035373687744141
    7. 'chosen' → logprob: -5.160373687744141
    8. 'ans' → logprob: -5.160373687744141
    9. 'selected' → logprob: -5.410373687744141
    10. 'last' → logprob: -5.535373687744141

Token 1406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025195300579071045
    2. ' =' → logprob: -4.025195121765137
    3. '+=' → logprob: -5.275195121765137
    4. ' +=' → logprob: -7.025195121765137
    5. '<|end|>' → logprob: -7.775195121765137
    6. '+' → logprob: -8.025195121765137
    7. '(' → logprob: -8.775195121765137
    8. ')' → logprob: -11.025195121765137
    9. '_tokens' → logprob: -11.400195121765137
    10. '(
' → logprob: -11.650195121765137

Token 1407: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.250011444091797
    4. '```' → logprob: -18.000011444091797
    5. '
' → logprob: -18.375011444091797
    6. '  ' → logprob: -19.250011444091797
    7. '       ' → logprob: -19.500011444091797
    8. '=' → logprob: -19.500011444091797
    9. '     ' → logprob: -19.500011444091797
    10. 'count' → logprob: -20.000011444091797

Token 1408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.250024795532227
    4. '  ' → logprob: -19.000024795532227
    5. 'count' → logprob: -19.375024795532227
    6. '```' → logprob: -20.750024795532227
    7. '    ' → logprob: -20.875024795532227
    8. '     ' → logprob: -20.875024795532227
    9. '1' → logprob: -21.250024795532227
    10. '
' → logprob: -21.375024795532227

Token 1409: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1778535842895508
    2. 'prev' → logprob: -2.302853584289551
    3. ' prev' → logprob: -2.552853584289551
    4. '   ' → logprob: -2.552853584289551
    5. ' 
' → logprob: -2.677853584289551
    6. ' i' → logprob: -2.927853584289551
    7. '
' → logprob: -3.177853584289551
    8. '<|end|>' → logprob: -3.177853584289551
    9. ' last' → logprob: -3.427853584289551
    10. 'i' → logprob: -3.677853584289551

Token 1410: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9128755927085876
    2. ' last' → logprob: -1.4128756523132324
    3. ' prev' → logprob: -2.2878756523132324
    4. 'prev' → logprob: -2.7878756523132324
    5. ' for' → logprob: -2.9128756523132324
    6. 'i' → logprob: -3.2878756523132324
    7. '
' → logprob: -3.5378756523132324
    8. 'for' → logprob: -4.162875652313232
    9. '   ' → logprob: -4.287875652313232
    10. 'last' → logprob: -4.412875652313232

Token 1411: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.007745040114969015
    2. 'cur' → logprob: -6.132745265960693
    3. 'prev' → logprob: -6.132745265960693
    4. 'current' → logprob: -6.257745265960693
    5. 'curr' → logprob: -7.132745265960693
    6. 'end' → logprob: -8.007744789123535
    7. ' last' → logprob: -8.132744789123535
    8. '_last' → logprob: -12.257744789123535
    9. '   ' → logprob: -12.507744789123535
    10. 'idx' → logprob: -12.507744789123535

Token 1412: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.006260800175368786
    2. '_selected' → logprob: -6.006260871887207
    3. '=' → logprob: -7.131260871887207
    4. ' =' → logprob: -7.131260871887207
    5. '_finish' → logprob: -7.131260871887207
    6. '_' → logprob: -7.381260871887207
    7. 'end' → logprob: -8.131260871887207
    8. '=end' → logprob: -8.506260871887207
    9. '_time' → logprob: -9.506260871887207
    10. '_ch' → logprob: -10.131260871887207

Token 1413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009859145618975163
    2. ' =' → logprob: -4.634859085083008
    3. '=-' → logprob: -9.509859085083008
    4. '=
' → logprob: -11.009859085083008
    5. '=None' → logprob: -12.009859085083008
    6. '<|end|>' → logprob: -13.134859085083008
    7. '_=' → logprob: -13.384859085083008
    8. '```' → logprob: -14.509859085083008
    9. '	' → logprob: -15.259859085083008
    10. ' ' → logprob: -15.384859085083008

Token 1414: ' L' (ID: 451)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6240760087966919
    2. 'L' → logprob: -1.249076008796692
    3. '-L' → logprob: -1.749076008796692
    4. ' -' → logprob: -5.749075889587402
    5. ' L' → logprob: -8.749075889587402
    6. '0' → logprob: -8.999075889587402
    7. '   ' → logprob: -10.249075889587402
    8. ' ' → logprob: -11.624075889587402
    9. 'float' → logprob: -12.749075889587402
    10. '-l' → logprob: -12.874075889587402

Token 1415: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39558470249176025
    2. '<|end|>' → logprob: -1.8955847024917603
    3. '       ' → logprob: -2.7705845832824707
    4. ' 
' → logprob: -3.6455845832824707
    5. '   ' → logprob: -4.270584583282471
    6. ' for' → logprob: -4.520584583282471
    7. '<|end|>' → logprob: -4.520584583282471
    8. '  
' → logprob: -4.895584583282471
    9. ')' → logprob: -5.145584583282471
    10. 'for' → logprob: -5.270584583282471

Token 1416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12166154384613037
    2. '   ' → logprob: -3.37166166305542
    3. ' for' → logprob: -3.62166166305542
    4. 'for' → logprob: -3.74666166305542
    5. '<|end|>' → logprob: -4.99666166305542
    6. '
' → logprob: -5.37166166305542
    7. ' 
' → logprob: -5.62166166305542
    8. '  
' → logprob: -6.37166166305542
    9. 'while' → logprob: -6.74666166305542
    10. '        
' → logprob: -6.74666166305542

Token 1417: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18053372204303741
    2. ' for' → logprob: -1.805533766746521
    3. '   ' → logprob: -8.680533409118652
    4. '
' → logprob: -8.930533409118652
    5. ' 
' → logprob: -9.180533409118652
    6. 'while' → logprob: -9.555533409118652
    7. ':' → logprob: -9.680533409118652
    8. ' ' → logprob: -10.305533409118652
    9. '```' → logprob: -10.430533409118652
    10. ')' → logprob: -10.430533409118652

Token 1418: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01768180914223194
    2. 'end' → logprob: -4.26768159866333
    3. 'cand' → logprob: -6.64268159866333
    4. 'c' → logprob: -7.01768159866333
    5. 'e' → logprob: -7.64268159866333
    6. ' en' → logprob: -7.89268159866333
    7. 'ent' → logprob: -9.142682075500488
    8. 'candidate' → logprob: -9.267682075500488
    9. 'token' → logprob: -9.892682075500488
    10. 't' → logprob: -10.142682075500488

Token 1419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39306649565696716
    2. ' in' → logprob: -1.8930665254592896
    3. 'in' → logprob: -1.8930665254592896
    4. ' ,' → logprob: -4.64306640625
    5. ',in' → logprob: -5.26806640625
    6. ',en' → logprob: -5.64306640625
    7. ',
' → logprob: -6.39306640625
    8. '<|end|>' → logprob: -6.89306640625
    9. ')' → logprob: -8.14306640625
    10. '	' → logprob: -8.26806640625

Token 1420: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -4.56102097814437e-05
    2. ' st' → logprob: -10.000045776367188
    3. '	st' → logprob: -16.250045776367188
    4. '_st' → logprob: -19.125045776367188
    5. '
' → logprob: -19.250045776367188
    6. '(st' → logprob: -19.875045776367188
    7. '   ' → logprob: -20.000045776367188
    8. 'sta' → logprob: -20.125045776367188
    9. 'sp' → logprob: -20.375045776367188
    10. 'ST' → logprob: -21.000045776367188

Token 1421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0663769468665123
    2. 'in' → logprob: -2.8163769245147705
    3. ':' → logprob: -6.19137716293335
    4. '        ' → logprob: -7.81637716293335
    5. ',' → logprob: -8.066376686096191
    6. '[' → logprob: -8.191376686096191
    7. '       ' → logprob: -8.191376686096191
    8. '=' → logprob: -8.566376686096191
    9. ' :' → logprob: -9.191376686096191
    10. '	in' → logprob: -9.191376686096191

Token 1422: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.0008589350618422031
    2. ' cand' → logprob: -7.500858783721924
    3. 'c' → logprob: -8.500859260559082
    4. '   ' → logprob: -9.375859260559082
    5. 'candidate' → logprob: -12.750859260559082
    6. '    ' → logprob: -12.875859260559082
    7. 'enumer' → logprob: -13.125859260559082
    8. 'range' → logprob: -13.500859260559082
    9. 'cant' → logprob: -13.500859260559082
    10. 'sorted' → logprob: -13.750859260559082

Token 1423: '_in' (ID: 2267)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1045420169830322
    2. '_in' → logprob: -2.1045420169830322
    3. '_' → logprob: -2.2295420169830322
    4. '_f' → logprob: -2.3545420169830322
    5. '   ' → logprob: -2.8545420169830322
    6. '       ' → logprob: -2.8545420169830322
    7. 'for' → logprob: -3.7295420169830322
    8. 'if' → logprob: -3.8545420169830322
    9. '_candidates' → logprob: -3.9795420169830322
    10. ']' → logprob: -4.229541778564453

Token 1424: '_gap' (ID: 131234)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.36905521154403687
    2. '_gap' → logprob: -1.3690552711486816
    3. 'cand' → logprob: -3.4940552711486816
    4. 'range' → logprob: -4.619055271148682
    5. 'c' → logprob: -4.744055271148682
    6. '_c' → logprob: -6.369055271148682
    7. '_range' → logprob: -6.494055271148682
    8. 'g' → logprob: -7.369055271148682
    9. '
' → logprob: -7.369055271148682
    10. ')' → logprob: -8.994054794311523

Token 1425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23567096889019012
    2. ' if' → logprob: -2.735671043395996
    3. ':
' → logprob: -2.985671043395996
    4. '           ' → logprob: -3.110671043395996
    5. '       ' → logprob: -3.360671043395996
    6. '<|end|>' → logprob: -5.360671043395996
    7. 'if' → logprob: -6.485671043395996
    8. '               ' → logprob: -6.485671043395996
    9. '=' → logprob: -6.610671043395996
    10. '[' → logprob: -6.985671043395996

Token 1426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026371825486421585
    2. ' if' → logprob: -3.901371717453003
    3. '       ' → logprob: -6.151371955871582
    4. '        ' → logprob: -7.276371955871582
    5. '            ' → logprob: -7.526371955871582
    6. '               ' → logprob: -7.651371955871582
    7. '```' → logprob: -7.651371955871582
    8. ' 
' → logprob: -7.776371955871582
    9. '          ' → logprob: -8.526371955871582
    10. '		' → logprob: -8.901371955871582

Token 1427: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4772208034992218
    2. ' if' → logprob: -0.9772207736968994
    3. '           ' → logprob: -6.2272210121154785
    4. '               ' → logprob: -6.8522210121154785
    5. '```' → logprob: -9.35222053527832
    6. '                   ' → logprob: -12.47722053527832
    7. '            ' → logprob: -12.97722053527832
    8. '       ' → logprob: -12.97722053527832
    9. '                               ' → logprob: -13.47722053527832
    10. '          ' → logprob: -13.72722053527832

Token 1428: ' st' (ID: 420)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.018151935189962387
    2. ' st' → logprob: -4.018151760101318
    3. '           ' → logprob: -13.643152236938477
    4. '	st' → logprob: -14.893152236938477
    5. '(st' → logprob: -15.143152236938477
    6. '_st' → logprob: -16.268152236938477
    7. 'St' → logprob: -17.143152236938477
    8. '               ' → logprob: -18.268152236938477
    9. 'sp' → logprob: -18.393152236938477
    10. '            
' → logprob: -18.643152236938477

Token 1429: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.21538008749485016
    2. ' >=' → logprob: -1.715380072593689
    3. '<=' → logprob: -4.8403801918029785
    4. '           ' → logprob: -5.7153801918029785
    5. ' <=' → logprob: -6.3403801918029785
    6. '>' → logprob: -8.21537971496582
    7. '               ' → logprob: -8.34037971496582
    8. ' >' → logprob: -9.46537971496582
    9. '                   ' → logprob: -9.71537971496582
    10. '            ' → logprob: -9.71537971496582

Token 1430: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -5.796184723294573e-06
    2. ' last' → logprob: -12.250005722045898
    3. '
' → logprob: -13.875005722045898
    4. '   ' → logprob: -18.0000057220459
    5. '           ' → logprob: -19.3750057220459
    6. '[last' → logprob: -20.1250057220459
    7. '	last' → logprob: -20.6250057220459
    8. '(last' → logprob: -20.8750057220459
    9. '_last' → logprob: -21.0000057220459
    10. '       ' → logprob: -21.1250057220459

Token 1431: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.47495681833243e-05
    2. 'end' → logprob: -10.625024795532227
    3. '```' → logprob: -15.500024795532227
    4. 'End' → logprob: -16.375024795532227
    5. '_END' → logprob: -16.750024795532227
    6. '_' → logprob: -17.875024795532227
    7. '   ' → logprob: -17.875024795532227
    8. '
' → logprob: -18.250024795532227
    9. '>end' → logprob: -18.750024795532227
    10. '>' → logprob: -18.750024795532227

Token 1432: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32860684394836426
    2. ':' → logprob: -2.0786068439483643
    3. '               ' → logprob: -2.0786068439483643
    4. '           ' → logprob: -4.453606605529785
    5. ' and' → logprob: -4.828606605529785
    6. '):
' → logprob: -5.203606605529785
    7. '):' → logprob: -6.078606605529785
    8. 'and' → logprob: -6.828606605529785
    9. ')' → logprob: -7.078606605529785
    10. '       ' → logprob: -8.953606605529785

Token 1433: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010771531378850341
    2. '           ' → logprob: -10.000107765197754
    3. '                   ' → logprob: -11.375107765197754
    4. 'count' → logprob: -11.500107765197754
    5. '[count' → logprob: -11.625107765197754
    6. '(count' → logprob: -12.500107765197754
    7. '```' → logprob: -12.625107765197754
    8. '                
' → logprob: -12.750107765197754
    9. ' count' → logprob: -12.875107765197754
    10. '<|end|>' → logprob: -12.875107765197754

Token 1434: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.001804534113034606
    2. '               ' → logprob: -7.001804351806641
    3. 'last' → logprob: -7.251804351806641
    4. '                   ' → logprob: -8.75180435180664
    5. ' count' → logprob: -10.62680435180664
    6. '           ' → logprob: -14.62680435180664
    7. '                       ' → logprob: -15.25180435180664
    8. '                ' → logprob: -15.25180435180664
    9. ' last' → logprob: -15.50180435180664
    10. '	count' → logprob: -17.00180435180664

Token 1435: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012169362045824528
    2. ' +=' → logprob: -4.512169361114502
    3. '=' → logprob: -6.887169361114502
    4. '+' → logprob: -9.38716983795166
    5. '               ' → logprob: -11.76216983795166
    6. ']+=' → logprob: -13.51216983795166
    7. '<|end|>' → logprob: -13.63716983795166
    8. '           ' → logprob: -13.63716983795166
    9. '                   ' → logprob: -14.01216983795166
    10. ' =' → logprob: -14.26216983795166

Token 1436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.625003814697266
    4. '
' → logprob: -16.875003814697266
    5. '```' → logprob: -17.812503814697266
    6. '           ' → logprob: -18.562503814697266
    7. '+' → logprob: -19.500003814697266
    8. 'en' → logprob: -19.687503814697266
    9. '       ' → logprob: -19.875003814697266
    10. '`' → logprob: -20.000003814697266

Token 1437: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6910139322280884
    2. ' last' → logprob: -1.1910139322280884
    3. '[last' → logprob: -2.191013813018799
    4. 'last' → logprob: -2.941013813018799
    5. '                   ' → logprob: -4.316013813018799
    6. '(last' → logprob: -4.941013813018799
    7. ',last' → logprob: -5.691013813018799
    8. '
' → logprob: -5.816013813018799
    9. '                
' → logprob: -7.316013813018799
    10. '<|end|>' → logprob: -7.316013813018799

Token 1438: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012066077440977097
    2. 'last' → logprob: -4.512065887451172
    3. ' last' → logprob: -7.762065887451172
    4. '                   ' → logprob: -8.012065887451172
    5. '
' → logprob: -8.887065887451172
    6. '```' → logprob: -9.887065887451172
    7. '           ' → logprob: -10.637065887451172
    8. '                       ' → logprob: -11.012065887451172
    9. '[last' → logprob: -11.637065887451172
    10. ',last' → logprob: -11.637065887451172

Token 1439: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.06608440726995468
    2. ' last' → logprob: -2.816084384918213
    3. '               ' → logprob: -5.816084384918213
    4. '                   ' → logprob: -6.816084384918213
    5. '                       ' → logprob: -11.066084861755371
    6. '           ' → logprob: -11.441084861755371
    7. '	last' → logprob: -13.066084861755371
    8. '
' → logprob: -13.941084861755371
    9. '                ' → logprob: -14.066084861755371
    10. '                               ' → logprob: -14.566084861755371

Token 1440: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.001720996224321425
    2. '=' → logprob: -7.626720905303955
    3. '```' → logprob: -7.626720905303955
    4. ' =' → logprob: -8.126721382141113
    5. '=_' → logprob: -8.626721382141113
    6. '_' → logprob: -8.876721382141113
    7. ' _' → logprob: -9.501721382141113
    8. '\' → logprob: -11.251721382141113
    9. '=end' → logprob: -11.876721382141113
    10. 'end' → logprob: -12.126721382141113

Token 1441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006140545941889286
    2. ' =' → logprob: -5.25614070892334
    3. '=en' → logprob: -7.00614070892334
    4. '=
' → logprob: -17.381139755249023
    5. '=end' → logprob: -18.131139755249023
    6. '＝' → logprob: -20.756139755249023
    7. ' en' → logprob: -21.256139755249023
    8. ')' → logprob: -21.381139755249023
    9. '=in' → logprob: -21.381139755249023
    10. 'en' → logprob: -21.631139755249023

Token 1442: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -2.15310683415737e-05
    2. ' en' → logprob: -10.750021934509277
    3. '	en' → logprob: -18.62502098083496
    4. '(en' → logprob: -20.25002098083496
    5. '   ' → logprob: -20.87502098083496
    6. '=en' → logprob: -21.25002098083496
    7. '_en' → logprob: -21.25002098083496
    8. 'end' → logprob: -22.25002098083496
    9. 'ent' → logprob: -22.75002098083496
    10. ''en' → logprob: -23.50002098083496

Token 1443: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1444: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1445: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2812231481075287
    2. '   ' → logprob: -1.531223177909851
    3. '
' → logprob: -3.6562230587005615
    4. 'print' → logprob: -6.406223297119141
    5. '       ' → logprob: -7.406223297119141
    6. ' res' → logprob: -8.15622329711914
    7. '```' → logprob: -8.53122329711914
    8. 'result' → logprob: -8.65622329711914
    9. 'return' → logprob: -10.65622329711914
    10. 'total' → logprob: -10.90622329711914

Token 1446: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011313296854496002
    2. ' +=' → logprob: -4.511313438415527
    3. '=' → logprob: -8.761313438415527
    4. '+' → logprob: -9.261313438415527
    5. '```' → logprob: -12.011313438415527
    6. ']+=' → logprob: -12.386313438415527
    7. '+="' → logprob: -13.636313438415527
    8. '<|end|>' → logprob: -14.386313438415527
    9. ')' → logprob: -14.511313438415527
    10. '+='' → logprob: -14.636313438415527

Token 1447: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.547789674485102e-05
    2. ' count' → logprob: -10.250035285949707
    3. '1' → logprob: -21.625036239624023
    4. '(count' → logprob: -22.500036239624023
    5. '[count' → logprob: -23.375036239624023
    6. '$count' → logprob: -23.625036239624023
    7. '
' → logprob: -23.875036239624023
    8. '	count' → logprob: -24.000036239624023
    9. '```' → logprob: -24.625036239624023
    10. ' ' → logprob: -25.375036239624023

Token 1448: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5924394726753235
    2. '   ' → logprob: -1.3424394130706787
    3. '
' → logprob: -1.7174394130706787
    4. ')' → logprob: -6.092439651489258
    5. '<|end|>' → logprob: -6.217439651489258
    6. '```' → logprob: -7.217439651489258
    7. '\n' → logprob: -7.592439651489258
    8. ' print' → logprob: -7.967439651489258
    9. '    
' → logprob: -8.967439651489258
    10. '       ' → logprob: -9.967439651489258

Token 1449: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20851707458496094
    2. '   ' → logprob: -1.958517074584961
    3. '
' → logprob: -3.083517074584961
    4. '```' → logprob: -7.458517074584961
    5. '\n' → logprob: -7.958517074584961
    6. '    
' → logprob: -8.583517074584961
    7. ')' → logprob: -9.958517074584961
    8. ' print' → logprob: -9.958517074584961
    9. '  
' → logprob: -10.083517074584961
    10. '<|end|>' → logprob: -10.333517074584961

Token 1450: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.221884101862088e-05
    2. '
' → logprob: -9.500092506408691
    3. '```' → logprob: -11.125092506408691
    4. ' print' → logprob: -13.125092506408691
    5. '   ' → logprob: -14.750092506408691
    6. '``' → logprob: -15.625092506408691
    7. '    
' → logprob: -18.375091552734375
    8. '  
' → logprob: -18.875091552734375
    9. '#print' → logprob: -18.875091552734375
    10. '.print' → logprob: -19.000091552734375

Token 1451: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.47626737493556e-05
    2. 'res' → logprob: -10.75003433227539
    3. '(' → logprob: -11.25003433227539
    4. ' (' → logprob: -16.50003433227539
    5. '()' → logprob: -16.50003433227539
    6. ' res' → logprob: -16.62503433227539
    7. '('' → logprob: -19.00003433227539
    8. '```' → logprob: -19.00003433227539
    9. '$res' → logprob: -20.25003433227539
    10. '(
' → logprob: -20.25003433227539

Token 1452: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010235115041723475
    2. '```' → logprob: -9.750102043151855
    3. '<|end|>' → logprob: -11.500102043151855
    4. '()' → logprob: -11.625102043151855
    5. '`)' → logprob: -12.000102043151855
    6. ')
' → logprob: -12.125102043151855
    7. '())' → logprob: -12.750102043151855
    8. ' )' → logprob: -13.000102043151855
    9. '')' → logprob: -13.125102043151855
    10. '
' → logprob: -13.250102043151855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1450
Tokens correctement prédits (1ère position, stricte): 448
Tokens correctement prédits (1ère position, avec adaptation): 481
Tokens correctement prédits (top 10): 1034
Précision stricte (1ère position): 30.90%
Précision adaptée (1ère position): 33.17%
Précision (top 10): 71.31%
================================================================================
