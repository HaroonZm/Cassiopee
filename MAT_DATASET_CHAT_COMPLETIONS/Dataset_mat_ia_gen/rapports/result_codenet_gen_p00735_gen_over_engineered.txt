================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Dict, Set

class MondaySaturdayNumber:
    MOD_VALUES = {1, 6}
    MOD_BASE = 7

    def __init__(self, value: int):
        if value <= 1:
            raise ValueError("Monday-Saturday numbers must be greater than 1")
        if value % self.MOD_BASE not in self.MOD_VALUES:
            raise ValueError(
                f"Number {value} is not a Monday-Saturday number (mod 7 must be 1 or 6)"
            )
        self.value = value

    def is_monday_saturday(self) -> bool:
        return self.value % self.MOD_BASE in self.MOD_VALUES

    def __mul__(self, other: "MondaySaturdayNumber") -> "MondaySaturdayNumber":
        product = self.value * other.value
        return MondaySaturdayNumber(product)

    def __floordiv__(self, other: "MondaySaturdayNumber") -> "MondaySaturdayNumber":
        if self.value % other.value != 0:
            raise ValueError(f"{other.value} does not divide {self.value}")
        quotient = self.value // other.value
        return MondaySaturdayNumber(quotient)

    def divides(self, other: "MondaySaturdayNumber") -> bool:
        return other.value % self.value == 0

class MondaySaturdayPrime(MondaySaturdayNumber):
    _composite_cache: Dict[int, bool] = {}

    @classmethod
    def _is_prime_usual(cls, n: int) -> bool:
        if n < 2:
            return False
        if n in (2, 3):
            return True
        if n % 2 == 0:
            return False
        r = int(n**0.5)
        for i in range(3, r + 1, 2):
            if n % i == 0:
                return False
        return True

    @classmethod
    def is_monday_saturday_prime(cls, n: int) -> bool:
        # Memoization to save repeated checks
        if n in cls._composite_cache:
            return cls._composite_cache[n]
        # Must be Monday-Saturday number > 1
        if n <= 1 or n % 7 not in MondaySaturdayNumber.MOD_VALUES:
            cls._composite_cache[n] = False
            return False
        # If usual prime and MS number -> MS prime
        if cls._is_prime_usual(n):
            cls._composite_cache[n] = True
            return True
        # Else check if divisible by any smaller MS prime (other than 1 and n)
        # Check all proper MS divisors
        # The key property:
        # a MS prime has no MS divisors other than 1 and itself.
        # We iterate over all Monday-Saturday divisors to detect composite.
        limit = int(n ** 0.5) + 1
        for candidate in _generate_monday_saturday_numbers_up_to(limit):
            if candidate == 1 or candidate == n:
                continue
            if n % candidate == 0:
                # check if candidate is MS prime, if yes then n is not MS prime
                if cls.is_monday_saturday_prime(candidate):
                    cls._composite_cache[n] = False
                    return False
        # no MS prime divisor found, is MS prime
        cls._composite_cache[n] = True
        return True

def _generate_monday_saturday_numbers_up_to(limit: int) -> List[int]:
    # Generate all integers <= limit that are Monday-Saturday numbers
    result = []
    for k in range(1, limit // 7 + 2):
        for rem in MondaySaturdayNumber.MOD_VALUES:
            n = 7 * k + rem
            if n <= limit:
                result.append(n)
    result = list(set(result))
    result.sort()
    return result


class MondaySaturdayFactorizer:
    def __init__(self):
        self._ms_prime_cache: Dict[int, bool] = {}

    def factorize(self, number: MondaySaturdayNumber) -> Set[int]:
        # Return set of MS prime factors of number.value
        n = number.value
        factors = set()
        self._factorize_recursive(n, factors)
        return factors

    def _factorize_recursive(self, n: int, factors: Set[int]) -> None:
        if n == 1:
            return
        if n in self._ms_prime_cache:
            if self._ms_prime_cache[n]:
                factors.add(n)
            else:
                # composite in cache, continue factoring
                pass
        else:
            is_msp = MondaySaturdayPrime.is_monday_saturday_prime(n)
            self._ms_prime_cache[n] = is_msp
            if is_msp:
                factors.add(n)
                return
        # Find a MS prime divisor other than n itself
        limit = int(n ** 0.5) + 1
        for d in _generate_monday_saturday_numbers_up_to(limit):
            if d >= n:
                break
            if n % d == 0:
                if MondaySaturdayPrime.is_monday_saturday_prime(d):
                    factors.add(d)
                    self._factorize_recursive(n // d, factors)
                    return
        # If no divisor found, it must be MS prime itself
        factors.add(n)

def main():
    import sys
    factorizer = MondaySaturdayFactorizer()
    for line in sys.stdin:
        line = line.strip()
        if line == "1":
            break
        n = int(line)
        try:
            ms_number = MondaySaturdayNumber(n)
        except ValueError:
            # Input number does not qualify as Monday-Saturday number per problem statement
            # According to problem constraints, all inputs (except last '1') are MS numbers
            # So we may just ignore or raise
            continue

        factors = factorizer.factorize(ms_number)
        # Output factors sorted ascending
        factors_sorted = sorted(factors)
        print(f"{n}:" + "".join(f" {f}" for f in factors_sorted))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.014828147366642952
    2. ' Optional' → logprob: -4.889828205108643
    3. ' Any' → logprob: -5.139828205108643
    4. 'List' → logprob: -7.389828205108643
    5. ' Union' → logprob: -7.639828205108643
    6. 'Any' → logprob: -9.389827728271484
    7. ' Tuple' → logprob: -10.389827728271484
    8. 'Optional' → logprob: -10.389827728271484
    9. ' Generator' → logprob: -10.514827728271484
    10. ' Callable' → logprob: -11.014827728271484

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4787392020225525
    2. 'def' → logprob: -1.4787392616271973
    3. '<|end|>' → logprob: -3.3537392616271973
    4. '
' → logprob: -3.6037392616271973
    5. '\n' → logprob: -4.228739261627197
    6. '\' → logprob: -4.228739261627197
    7. '[' → logprob: -4.353739261627197
    8. ',' → logprob: -4.478739261627197
    9. 'import' → logprob: -4.853739261627197
    10. 'a' → logprob: -5.478739261627197

Token 5: ' Dict' (ID: 55179)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.40772536396980286
    2. 'Optional' → logprob: -1.1577253341674805
    3. ' Dict' → logprob: -4.7827253341674805
    4. 'Dict' → logprob: -4.9077253341674805
    5. 'Tuple' → logprob: -5.7827253341674805
    6. ' Tuple' → logprob: -7.0327253341674805
    7. ' Union' → logprob: -7.4077253341674805
    8. 'Union' → logprob: -9.28272533416748
    9. 'Iterable' → logprob: -10.03272533416748
    10. 'Any' → logprob: -10.53272533416748

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9728153347969055
    2. '```' → logprob: -1.2228152751922607
    3. 'import' → logprob: -2.0978152751922607
    4. 'def' → logprob: -2.3478152751922607
    5. '<|end|>' → logprob: -3.8478152751922607
    6. '\' → logprob: -4.22281551361084
    7. ' ' → logprob: -4.47281551361084
    8. '\n' → logprob: -4.72281551361084
    9. 'a' → logprob: -4.84781551361084
    10. '`' → logprob: -4.84781551361084

Token 7: ' Set' (ID: 3957)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -1.3107975721359253
    2. 'Set' → logprob: -1.4357975721359253
    3. 'Tuple' → logprob: -2.185797691345215
    4. 'Optional' → logprob: -2.560797691345215
    5. ' Union' → logprob: -2.685797691345215
    6. ' Tuple' → logprob: -2.935797691345215
    7. ' Any' → logprob: -2.935797691345215
    8. ' Optional' → logprob: -3.185797691345215
    9. 'Union' → logprob: -3.310797691345215
    10. ' Set' → logprob: -3.310797691345215

Token 8: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8846238255500793
    2. ',' → logprob: -1.2596237659454346
    3. '```' → logprob: -1.5096237659454346
    4. 'def' → logprob: -3.6346237659454346
    5. 'import' → logprob: -4.884624004364014
    6. '`' → logprob: -4.884624004364014
    7. '\[' → logprob: -4.884624004364014
    8. '\' → logprob: -5.134624004364014
    9. '<|end|>' → logprob: -5.509624004364014
    10. '.' → logprob: -5.634624004364014

Token 9: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.613795816898346
    2. 'def' → logprob: -1.1137957572937012
    3. 'import' → logprob: -3.363795757293701
    4. '```' → logprob: -3.613795757293701
    5. ',' → logprob: -4.113795757293701
    6. '`' → logprob: -4.363795757293701
    7. '[' → logprob: -4.488795757293701
    8. 'a' → logprob: -4.988795757293701
    9. 'class' → logprob: -5.238795757293701
    10. 'de' → logprob: -5.488795757293701

Token 10: ' Monday' (ID: 10715)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.6585981845855713
    2. ' ' → logprob: -0.7835981845855713
    3. ' User' → logprob: -4.783597946166992
    4. ' Data' → logprob: -5.158597946166992
    5. ' Set' → logprob: -5.908597946166992
    6. ' Space' → logprob: -6.158597946166992
    7. ' A' → logprob: -6.658597946166992
    8. ' C' → logprob: -7.158597946166992
    9. ' Token' → logprob: -7.658597946166992
    10. ' Person' → logprob: -7.908597946166992

Token 11: 'Saturday' (ID: 28077)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019520643400028348
    2. '(' → logprob: -6.751952171325684
    3. '(M' → logprob: -8.376952171325684
    4. '():' → logprob: -8.501952171325684
    5. '```' → logprob: -8.751952171325684
    6. 'Colon' → logprob: -10.001952171325684
    7. ':**' → logprob: -10.251952171325684
    8. 'Monday' → logprob: -10.501952171325684
    9. '(:' → logprob: -11.001952171325684
    10. '`:' → logprob: -12.001952171325684

Token 12: 'Number' (ID: 3695)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02445129118859768
    2. '(' → logprob: -3.77445125579834
    3. '():' → logprob: -7.64945125579834
    4. '(:' → logprob: -7.77445125579834
    5. '```' → logprob: -9.27445125579834
    6. '(M' → logprob: -10.14945125579834
    7. ' :' → logprob: -10.77445125579834
    8. '(S' → logprob: -10.77445125579834
    9. ':**' → logprob: -10.89945125579834
    10. '):' → logprob: -11.27445125579834

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3163135349750519
    2. '(' → logprob: -1.3163135051727295
    3. '(:' → logprob: -6.316313743591309
    4. '():' → logprob: -7.816313743591309
    5. '```' → logprob: -8.191313743591309
    6. 's' → logprob: -9.691313743591309
    7. '(S' → logprob: -9.691313743591309
    8. '(T' → logprob: -10.066313743591309
    9. '(
' → logprob: -10.191313743591309
    10. '):' → logprob: -10.316313743591309

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013986843638122082
    2. ':' → logprob: -5.263987064361572
    3. '```' → logprob: -5.888987064361572
    4. ' ' → logprob: -6.013987064361572
    5. '<|end|>' → logprob: -6.513987064361572
    6. '(' → logprob: -7.513987064361572
    7. '  ' → logprob: -7.638987064361572
    8. '    
' → logprob: -8.263986587524414
    9. '    ' → logprob: -8.388986587524414
    10. 'def' → logprob: -9.513986587524414

Token 15: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14230671525001526
    2. 'def' → logprob: -2.5173068046569824
    3. ' def' → logprob: -3.0173068046569824
    4. '```' → logprob: -7.142306804656982
    5. '    ' → logprob: -7.892306804656982
    6. ' ' → logprob: -7.892306804656982
    7. '_' → logprob: -8.017306327819824
    8. 's' → logprob: -8.392306327819824
    9. '(' → logprob: -8.392306327819824
    10. '    
' → logprob: -9.142306327819824

Token 16: '_VALUES' (ID: 131844)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00534867076203227
    2. '=' → logprob: -5.2553486824035645
    3. '   ' → logprob: -9.880348205566406
    4. ' ' → logprob: -10.505348205566406
    5. '_' → logprob: -11.880348205566406
    6. 'ERATOR' → logprob: -12.005348205566406
    7. ',' → logprob: -12.255348205566406
    8. '```' → logprob: -12.505348205566406
    9. ':' → logprob: -13.005348205566406
    10. '  ' → logprob: -13.130348205566406

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01784319430589676
    2. ':' → logprob: -4.517843246459961
    3. '[' → logprob: -5.642843246459961
    4. '=' → logprob: -6.142843246459961
    5. '   ' → logprob: -7.767843246459961
    6. ' :' → logprob: -8.017843246459961
    7. '[:]' → logprob: -8.767843246459961
    8. '[]' → logprob: -9.767843246459961
    9. '  ' → logprob: -10.517843246459961
    10. '```' → logprob: -10.892843246459961

Token 18: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.19578689336776733
    2. ' [' → logprob: -2.070786952972412
    3. '{' → logprob: -3.195786952972412
    4. '[' → logprob: -4.695786952972412
    5. ' ' → logprob: -7.195786952972412
    6. ' {"' → logprob: -8.195786476135254
    7. ' set' → logprob: -8.570786476135254
    8. ' {'' → logprob: -8.695786476135254
    9. 'set' → logprob: -9.945786476135254
    10. '{"' → logprob: -10.695786476135254

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0831809043884277
    2. '   ' → logprob: -1.2081809043884277
    3. '"' → logprob: -1.9581809043884277
    4. '0' → logprob: -2.4581809043884277
    5. ''' → logprob: -2.8331809043884277
    6. ''M' → logprob: -3.5831809043884277
    7. ' '' → logprob: -4.333180904388428
    8. ' ' → logprob: -4.458180904388428
    9. ''s' → logprob: -5.333180904388428
    10. '3' → logprob: -5.958180904388428

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051079992204904556
    2. ' ,' → logprob: -3.6760799884796143
    3. ':' → logprob: -3.8010799884796143
    4. '1' → logprob: -7.801080226898193
    5. ' :' → logprob: -8.301079750061035
    6. '2' → logprob: -8.426079750061035
    7. '6' → logprob: -8.426079750061035
    8. '0' → logprob: -8.551079750061035
    9. '7' → logprob: -8.676079750061035
    10. '}' → logprob: -8.801079750061035

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15378615260124207
    2. '6' → logprob: -2.6537861824035645
    3. '2' → logprob: -3.0287861824035645
    4. '3' → logprob: -4.6537861824035645
    5. '7' → logprob: -4.7787861824035645
    6. '4' → logprob: -5.4037861824035645
    7. '5' → logprob: -6.7787861824035645
    8. '14' → logprob: -9.653785705566406
    9. '8' → logprob: -10.278785705566406
    10. '9' → logprob: -11.028785705566406

Token 22: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.43756961822509766
    2. '7' → logprob: -1.6875696182250977
    3. '2' → logprob: -1.9375696182250977
    4. '5' → logprob: -4.562569618225098
    5. '4' → logprob: -4.687569618225098
    6. '3' → logprob: -5.812569618225098
    7. '8' → logprob: -7.187569618225098
    8. '14' → logprob: -7.562569618225098
    9. ' ' → logprob: -8.312569618225098
    10. '15' → logprob: -8.687569618225098

Token 23: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.009463638067245483
    2. ',' → logprob: -4.759463787078857
    3. ' }' → logprob: -7.259463787078857
    4. '7' → logprob: -9.2594633102417
    5. '9' → logprob: -11.3844633102417
    6. '1' → logprob: -11.7594633102417
    7. '0' → logprob: -11.8844633102417
    8. '6' → logprob: -12.1344633102417
    9. '   ' → logprob: -12.5094633102417
    10. '2' → logprob: -12.7594633102417

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6877717971801758
    2. '```' → logprob: -1.9377717971801758
    3. '
' → logprob: -2.312771797180176
    4. '   ' → logprob: -2.812771797180176
    5. '    
' → logprob: -3.437771797180176
    6. '.' → logprob: -3.437771797180176
    7. '\' → logprob: -3.562771797180176
    8. ',' → logprob: -3.687771797180176
    9. '\n' → logprob: -3.812771797180176
    10. '[' → logprob: -4.312771797180176

Token 25: ' MOD' (ID: 32868)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.761113703250885
    2. '   ' → logprob: -0.886113703250885
    3. 'def' → logprob: -3.0111136436462402
    4. '
' → logprob: -3.7611136436462402
    5. '    
' → logprob: -4.38611364364624
    6. '```' → logprob: -4.51111364364624
    7. ' def' → logprob: -4.88611364364624
    8. ' ' → logprob: -5.38611364364624
    9. '

' → logprob: -6.26111364364624
    10. '
' → logprob: -6.38611364364624

Token 26: '_BASE' (ID: 26857)
  Prédit: '_VALUES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_VALUES' → logprob: -0.04955926537513733
    2. '=' → logprob: -4.174559116363525
    3. ' =' → logprob: -4.299559116363525
    4. 'ULO' → logprob: -4.924559116363525
    5. 'UL' → logprob: -5.674559116363525
    6. '_' → logprob: -5.924559116363525
    7. '_VAL' → logprob: -6.049559116363525
    8. '_VALUE' → logprob: -6.424559116363525
    9. 'ULAR' → logprob: -7.924559116363525
    10. '9' → logprob: -8.049559593200684

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22553934156894684
    2. '=' → logprob: -1.6005393266677856
    3. 'S' → logprob: -9.850539207458496
    4. '   ' → logprob: -9.975539207458496
    5. ' ' → logprob: -10.975539207458496
    6. '  ' → logprob: -12.475539207458496
    7. ':' → logprob: -13.850539207458496
    8. '_VALUES' → logprob: -13.975539207458496
    9. '```' → logprob: -14.350539207458496
    10. '1' → logprob: -14.600539207458496

Token 28: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6966475248336792
    2. ' ' → logprob: -0.6966475248336792
    3. '10' → logprob: -5.821647644042969
    4. '100' → logprob: -8.071647644042969
    5. '6' → logprob: -9.946647644042969
    6. '30' → logprob: -10.571647644042969
    7. '2' → logprob: -11.196647644042969
    8. '3' → logprob: -11.196647644042969
    9. '12' → logprob: -11.196647644042969
    10. '14' → logprob: -11.446647644042969

Token 29: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00041220002458430827
    2. '10' → logprob: -8.125411987304688
    3. ' ' → logprob: -10.125411987304688
    4. '4' → logprob: -11.500411987304688
    5. '100' → logprob: -11.500411987304688
    6. '14' → logprob: -11.625411987304688
    7. '30' → logprob: -12.000411987304688
    8. '6' → logprob: -12.125411987304688
    9. '3' → logprob: -12.250411987304688
    10. '2' → logprob: -12.500411987304688

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24586957693099976
    2. '   ' → logprob: -1.7458696365356445
    3. '    
' → logprob: -3.7458696365356445
    4. 'def' → logprob: -4.6208696365356445
    5. '<|end|>' → logprob: -5.7458696365356445
    6. '```' → logprob: -6.7458696365356445
    7. '  
' → logprob: -6.8708696365356445
    8. '

' → logprob: -7.3708696365356445
    9. ' 
' → logprob: -7.4958696365356445
    10. ' def' → logprob: -7.4958696365356445

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15959669649600983
    2. 'def' → logprob: -2.1595966815948486
    3. '
' → logprob: -4.159596920013428
    4. '    
' → logprob: -4.409596920013428
    5. ' def' → logprob: -6.159596920013428
    6. '```' → logprob: -7.284596920013428
    7. ' 
' → logprob: -7.659596920013428
    8. ' ' → logprob: -7.909596920013428
    9. '  
' → logprob: -8.15959644317627
    10. '   
' → logprob: -8.78459644317627

Token 32: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002491807099431753
    2. ' def' → logprob: -8.500248908996582
    3. '   ' → logprob: -10.000248908996582
    4. '```' → logprob: -15.625248908996582
    5. '@' → logprob: -16.3752498626709
    6. ' ' → logprob: -18.3752498626709
    7. '	def' → logprob: -19.7502498626709
    8. '    ' → logprob: -20.7502498626709
    9. '``' → logprob: -20.7502498626709
    10. '  ' → logprob: -20.7502498626709

Token 33: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017407724633812904
    2. '_' → logprob: -5.3924078941345215
    3. ' _' → logprob: -5.3924078941345215
    4. ' calculate' → logprob: -5.5174078941345215
    5. ' def' → logprob: -6.0174078941345215
    6. ' get' → logprob: -7.2674078941345215
    7. ' space' → logprob: -8.017407417297363
    8. ' __' → logprob: -8.517407417297363
    9. '  ' → logprob: -9.642407417297363
    10. ' check' → logprob: -10.392407417297363

Token 34: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.2994620242971e-06
    2. 'ini' → logprob: -12.125008583068848
    3. 'i' → logprob: -13.250008583068848
    4. 'in' → logprob: -13.875008583068848
    5. 'int' → logprob: -17.12500762939453
    6. 'call' → logprob: -17.50000762939453
    7. ' init' → logprob: -18.50000762939453
    8. 'inite' → logprob: -19.50000762939453
    9. 'inti' → logprob: -19.87500762939453
    10. 'innit' → logprob: -20.00000762939453

Token 35: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009043974801898003
    2. '__' → logprob: -5.134044170379639
    3. '(self' → logprob: -6.509044170379639
    4. '__(
' → logprob: -6.884044170379639
    5. '(' → logprob: -8.00904369354248
    6. ' (' → logprob: -9.63404369354248
    7. '__((' → logprob: -10.00904369354248
    8. '__(*' → logprob: -10.00904369354248
    9. 'self' → logprob: -10.25904369354248
    10. '<|end|>' → logprob: -10.75904369354248

Token 36: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024773201439529657
    2. ' self' → logprob: -6.002477169036865
    3. ')' → logprob: -13.877477645874023
    4. '   ' → logprob: -15.127477645874023
    5. '       ' → logprob: -15.752477645874023
    6. ' ' → logprob: -16.127477645874023
    7. '0' → logprob: -16.877477645874023
    8. '(self' → logprob: -17.252477645874023
    9. '
' → logprob: -17.627477645874023
    10. '	self' → logprob: -17.627477645874023

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01943928375840187
    2. ' ,' → logprob: -4.144439220428467
    3. 'self' → logprob: -5.894439220428467
    4. ')' → logprob: -7.644439220428467
    5. ',self' → logprob: -9.894439697265625
    6. ' self' → logprob: -10.269439697265625
    7. ' )' → logprob: -10.769439697265625
    8. '_self' → logprob: -11.394439697265625
    9. ' ' → logprob: -11.519439697265625
    10. '(self' → logprob: -11.644439697265625

Token 38: ' value' (ID: 1432)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5644583106040955
    2. ' value' → logprob: -1.6894583702087402
    3. 'self' → logprob: -2.1894583702087402
    4. ' number' → logprob: -2.4394583702087402
    5. 'value' → logprob: -4.18945837020874
    6. ' day' → logprob: -4.56445837020874
    7. 'number' → logprob: -4.68945837020874
    8. ' n' → logprob: -5.81445837020874
    9. ' date' → logprob: -5.81445837020874
    10. ' year' → logprob: -6.81445837020874

Token 39: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45044124126434326
    2. ':' → logprob: -1.0754412412643433
    3. ')' → logprob: -4.325441360473633
    4. '=' → logprob: -4.950441360473633
    5. ' ):' → logprob: -6.950441360473633
    6. ':int' → logprob: -9.450441360473633
    7. ' :' → logprob: -9.575441360473633
    8. '):
' → logprob: -10.575441360473633
    9. ' )' → logprob: -11.200441360473633
    10. ',' → logprob: -11.325441360473633

Token 40: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10022865980863571
    2. 'int' → logprob: -2.3502285480499268
    3. ')' → logprob: -11.100228309631348
    4. ' )' → logprob: -12.600228309631348
    5. '[int' → logprob: -13.475228309631348
    6. ' ' → logprob: -14.225228309631348
    7. ':int' → logprob: -14.725228309631348
    8. '	int' → logprob: -15.100228309631348
    9. ']int' → logprob: -15.225228309631348
    10. ' ' → logprob: -15.850228309631348

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02346966229379177
    2. ')' → logprob: -3.7734696865081787
    3. ':' → logprob: -8.648469924926758
    4. '):
' → logprob: -10.273469924926758
    5. '=' → logprob: -12.523469924926758
    6. '   ' → logprob: -12.898469924926758
    7. ' ):' → logprob: -13.023469924926758
    8. ',' → logprob: -13.273469924926758
    9. ')->' → logprob: -14.023469924926758
    10. '=None' → logprob: -14.773469924926758

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002725821454077959
    2. '        ' → logprob: -6.002725601196289
    3. '    ' → logprob: -10.127725601196289
    4. ' ' → logprob: -10.252725601196289
    5. '   ' → logprob: -10.252725601196289
    6. '      ' → logprob: -10.877725601196289
    7. 'self' → logprob: -10.877725601196289
    8. '```' → logprob: -10.877725601196289
    9. '     ' → logprob: -11.002725601196289
    10. ' ' → logprob: -11.377725601196289

Token 43: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21358716487884521
    2. '        ' → logprob: -2.5885872840881348
    3. 'self' → logprob: -2.5885872840881348
    4. '       ' → logprob: -3.2135872840881348
    5. ' ' → logprob: -6.588587284088135
    6. ' ' → logprob: -8.213586807250977
    7. '```' → logprob: -9.713586807250977
    8. '    ' → logprob: -9.963586807250977
    9. ' if' → logprob: -10.338586807250977
    10. '      ' → logprob: -11.338586807250977

Token 44: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.029066966846585274
    2. ' not' → logprob: -4.404067039489746
    3. 'value' → logprob: -4.404067039489746
    4. ' (' → logprob: -5.529067039489746
    5. '(value' → logprob: -9.029067039489746
    6. ' ' → logprob: -10.029067039489746
    7. '        ' → logprob: -11.279067039489746
    8. ' isinstance' → logprob: -11.279067039489746
    9. 'not' → logprob: -11.404067039489746
    10. ' ' → logprob: -12.029067039489746

Token 45: ' <=' (ID: 5017)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.009730113670229912
    2. ' <' → logprob: -5.134730339050293
    3. ' ' → logprob: -6.009730339050293
    4. '%' → logprob: -7.134730339050293
    5. ' not' → logprob: -7.634730339050293
    6. '<|end|>' → logprob: -11.134730339050293
    7. ' <=' → logprob: -11.634730339050293
    8. '<' → logprob: -12.134730339050293
    9. '<|end|>' → logprob: -12.134730339050293
    10. ' <%' → logprob: -12.259730339050293

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08894830197095871
    2. '0' → logprob: -2.4639482498168945
    3. '<|end|>' → logprob: -12.838948249816895
    4. ' ' → logprob: -13.901448249816895
    5. '  ' → logprob: -14.213948249816895
    6. '1' → logprob: -14.276448249816895
    7. '```' → logprob: -14.338948249816895
    8. '>' → logprob: -15.026448249816895
    9. ',' → logprob: -15.338948249816895
    10. ')' → logprob: -15.713948249816895

Token 47: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231670141220093
    2. ' ' → logprob: -0.8981670141220093
    3. '1' → logprob: -10.77316665649414
    4. '  ' → logprob: -11.89816665649414
    5. '   ' → logprob: -12.77316665649414
    6. '<|end|>' → logprob: -13.02316665649414
    7. '```' → logprob: -13.46066665649414
    8. '6' → logprob: -13.83566665649414
    9. '-' → logprob: -13.89816665649414
    10. '2' → logprob: -14.08566665649414

Token 48: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23031820356845856
    2. ':' → logprob: -1.6053181886672974
    3. '0' → logprob: -5.980318069458008
    4. ' :' → logprob: -6.730318069458008
    5. ':
' → logprob: -7.855318069458008
    6. ' and' → logprob: -8.355318069458008
    7. 'or' → logprob: -8.605318069458008
    8. '6' → logprob: -8.980318069458008
    9. '7' → logprob: -9.355318069458008
    10. ' ' → logprob: -9.605318069458008

Token 49: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2941038906574249
    2. ':' → logprob: -2.2941038608551025
    3. '        ' → logprob: -2.7941038608551025
    4. ':
' → logprob: -3.2941038608551025
    5. '           ' → logprob: -4.044104099273682
    6. '0' → logprob: -4.169104099273682
    7. '       ' → logprob: -4.794104099273682
    8. ' and' → logprob: -5.044104099273682
    9. ' raise' → logprob: -5.919104099273682
    10. '            ' → logprob: -6.044104099273682

Token 50: ' raise' (ID: 9338)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7091779112815857
    2. 'self' → logprob: -1.4591779708862305
    3. ' raise' → logprob: -2.2091779708862305
    4. '            ' → logprob: -2.8341779708862305
    5. ' ' → logprob: -3.7091779708862305
    6. 'raise' (adapté à ' raise') → logprob: -3.7091779708862305
    7. ' value' → logprob: -3.8341779708862305
    8. '           ' → logprob: -4.0841779708862305
    9. 'value' → logprob: -4.2091779708862305
    10. '        ' → logprob: -6.5841779708862305

Token 51: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.002501579001545906
    2. 'Value' → logprob: -6.002501487731934
    3. ' ' → logprob: -11.377501487731934
    4. '	Value' → logprob: -11.877501487731934
    5. ' Val' → logprob: -12.252501487731934
    6. ' value' → logprob: -14.127501487731934
    7. '<Value' → logprob: -14.502501487731934
    8. '_Value' → logprob: -14.627501487731934
    9. ' ' → logprob: -14.627501487731934
    10. '_value' → logprob: -15.627501487731934

Token 52: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.479708194732666
    2. 'rror' → logprob: -0.979708194732666
    3. 'r' → logprob: -5.729708194732666
    4. 'ror' → logprob: -6.104708194732666
    5. 'n' → logprob: -10.104707717895508
    6. 'error' → logprob: -10.354707717895508
    7. 'rr' → logprob: -10.854707717895508
    8. 'or' → logprob: -10.979707717895508
    9. 'f' → logprob: -11.604707717895508
    10. 'l' → logprob: -12.229707717895508

Token 53: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43534621596336365
    2. '("' → logprob: -1.060346245765686
    3. '('' → logprob: -5.9353461265563965
    4. '       ' → logprob: -6.5603461265563965
    5. '(
' → logprob: -7.0603461265563965
    6. '()' → logprob: -7.8103461265563965
    7. '           ' → logprob: -7.9353461265563965
    8. ',' → logprob: -8.060346603393555
    9. ':' → logprob: -8.560346603393555
    10. '               ' → logprob: -8.810346603393555

Token 54: 'Monday' (ID: 24282)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.12893564999103546
    2. ' Value' → logprob: -2.6289355754852295
    3. ' value' → logprob: -3.5039355754852295
    4. 'value' → logprob: -4.128935813903809
    5. 'Monday' → logprob: -6.753935813903809
    6. ' Monday' → logprob: -7.878935813903809
    7. 'Invalid' → logprob: -8.128935813903809
    8. 'Number' → logprob: -8.628935813903809
    9. 'The' → logprob: -8.753935813903809
    10. '"value' → logprob: -8.878935813903809

Token 55: '-S' (ID: 6968)
  Prédit: 'Saturday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.509213924407959
    2. ' or' → logprob: -1.384213924407959
    3. ' and' → logprob: -2.259213924407959
    4. ' must' → logprob: -4.009213924407959
    5. ' number' → logprob: -5.009213924407959
    6. ' Saturday' → logprob: -5.009213924407959
    7. ' value' → logprob: -5.634213924407959
    8. ' to' → logprob: -6.509213924407959
    9. ' should' → logprob: -6.759213924407959
    10. 'Number' → logprob: -6.759213924407959

Token 56: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.0023802844807505608
    2. 'Saturday' → logprob: -6.12738037109375
    3. 'unday' → logprob: -9.37738037109375
    4. 'at' → logprob: -9.87738037109375
    5. '```' → logprob: -10.50238037109375
    6. 'atur' → logprob: -11.62738037109375
    7. 'day' → logprob: -12.87738037109375
    8. 'a' → logprob: -13.37738037109375
    9. 'based' → logprob: -13.81488037109375
    10. 'atellite' → logprob: -13.81488037109375

Token 57: ' numbers' (ID: 8663)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.12329176813364029
    2. 'Number' → logprob: -2.8732917308807373
    3. ' numbers' → logprob: -2.9982917308807373
    4. ' Number' → logprob: -5.248291969299316
    5. ' value' → logprob: -6.123291969299316
    6. 'number' → logprob: -7.248291969299316
    7. ' ' → logprob: -7.748291969299316
    8. ' values' → logprob: -7.998291969299316
    9. ' numbering' → logprob: -8.498291969299316
    10. '_number' → logprob: -9.373291969299316

Token 58: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0027699286583811045
    2. 'must' → logprob: -6.252769947052002
    3. ' should' → logprob: -7.252769947052002
    4. ' ' → logprob: -9.627769470214844
    5. ' are' → logprob: -10.627769470214844
    6. ' only' → logprob: -11.127769470214844
    7. ' can' → logprob: -11.502769470214844
    8. 'should' → logprob: -12.502769470214844
    9. ' have' → logprob: -13.002769470214844
    10. '```' → logprob: -13.940269470214844

Token 59: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.00034356804098933935
    2. ' not' → logprob: -9.375343322753906
    3. '>' → logprob: -9.625343322753906
    4. ' start' → logprob: -9.875343322753906
    5. 'be' → logprob: -10.000343322753906
    6. ' ' → logprob: -10.125343322753906
    7. ' >' → logprob: -11.250343322753906
    8. '<|end|>' → logprob: -11.750343322753906
    9. ' exceed' → logprob: -12.000343322753906
    10. ' only' → logprob: -12.125343322753906

Token 60: ' greater' (ID: 10740)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.1703312247991562
    2. ' greater' → logprob: -1.9203312397003174
    3. '>' → logprob: -4.920331001281738
    4. 'positive' → logprob: -6.670331001281738
    5. ' positive' → logprob: -7.545331001281738
    6. ' >' → logprob: -8.045331001281738
    7. 'strict' → logprob: -8.170331001281738
    8. '>=' → logprob: -8.920331001281738
    9. ' strictly' → logprob: -9.795331001281738
    10. ' at' → logprob: -10.295331001281738

Token 61: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.015314868651330471
    2. 'than' → logprob: -4.640315055847168
    3. '<|end|>' → logprob: -5.265315055847168
    4. ' ' → logprob: -8.640315055847168
    5. '_than' → logprob: -9.515315055847168
    6. '1' → logprob: -10.390315055847168
    7. '0' → logprob: -10.890315055847168
    8. ' or' → logprob: -11.890315055847168
    9. ',' → logprob: -12.015315055847168
    10. '  ' → logprob: -12.140315055847168

Token 62: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407761216163635
    2. '1' → logprob: -0.974077582359314
    3. ' one' → logprob: -15.599077224731445
    4. '```' → logprob: -16.224077224731445
    5. ' ' → logprob: -16.349077224731445
    6. '<|end|>' → logprob: -16.599077224731445
    7. 'Monday' → logprob: -16.849077224731445
    8. ' Monday' → logprob: -16.974077224731445
    9. '   ' → logprob: -17.474077224731445
    10. '  ' → logprob: -17.661577224731445

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '0' → logprob: -17.125024795532227
    4. '   ' → logprob: -17.250024795532227
    5. '`' → logprob: -18.937524795532227
    6. '<|end|>' → logprob: -19.000024795532227
    7. '۱' → logprob: -19.187524795532227
    8. '' → logprob: -19.250024795532227
    9. '```' → logprob: -19.250024795532227
    10. 'Monday' → logprob: -19.437524795532227

Token 64: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03176490217447281
    2. '")
' → logprob: -3.6567649841308594
    3. ' ")' → logprob: -6.031764984130859
    4. ')")' → logprob: -7.406764984130859
    5. '.")' → logprob: -7.656764984130859
    6. ')' → logprob: -7.656764984130859
    7. ' and' → logprob: -7.906764984130859
    8. '")
' → logprob: -8.03176498413086
    9. '       ' → logprob: -8.40676498413086
    10. ' or' → logprob: -9.15676498413086

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014284093864262104
    2. '
' → logprob: -4.514284133911133
    3. '<|end|>' → logprob: -6.514284133911133
    4. '        
' → logprob: -7.389284133911133
    5. '        ' → logprob: -7.514284133911133
    6. ' 
' → logprob: -8.389284133911133
    7. '  
' → logprob: -9.639284133911133
    8. '```' → logprob: -9.889284133911133
    9. '      ' → logprob: -10.264284133911133
    10. ' ' → logprob: -10.514284133911133

Token 66: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004323660396039486
    2. 'self' → logprob: -5.879323482513428
    3. ' self' → logprob: -6.629323482513428
    4. '
' → logprob: -9.629323959350586
    5. '```' → logprob: -10.504323959350586
    6. '<|end|>' → logprob: -11.004323959350586
    7. ' ' → logprob: -11.129323959350586
    8. '   ' → logprob: -11.254323959350586
    9. '        ' → logprob: -11.504323959350586
    10. '        
' → logprob: -11.879323959350586

Token 67: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.1096968874335289
    2. 'value' → logprob: -2.359696865081787
    3. ' (' → logprob: -5.109696865081787
    4. '(value' → logprob: -5.734696865081787
    5. ' not' → logprob: -9.859697341918945
    6. ' ' → logprob: -9.984697341918945
    7. '	value' → logprob: -10.109697341918945
    8. '(' → logprob: -11.484697341918945
    9. '   ' → logprob: -12.734697341918945
    10. '```' → logprob: -12.734697341918945

Token 68: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0021283722016960382
    2. ' ' → logprob: -6.502128601074219
    3. '%' → logprob: -7.502128601074219
    4. '<|end|>' → logprob: -10.127128601074219
    5. ' <=' → logprob: -10.877128601074219
    6. ' <' → logprob: -12.377128601074219
    7. '<|end|>' → logprob: -12.377128601074219
    8. ' ' → logprob: -13.252128601074219
    9. ' >' → logprob: -14.002128601074219
    10. '  ' → logprob: -14.002128601074219

Token 69: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7192294597625732
    2. ' self' → logprob: -0.7192294597625732
    3. '7' → logprob: -4.594229698181152
    4. ' Monday' → logprob: -4.844229698181152
    5. 'self' → logprob: -5.469229698181152
    6. 'Monday' → logprob: -7.094229698181152
    7. ' ' → logprob: -7.344229698181152
    8. '<|end|>' → logprob: -7.344229698181152
    9. '  ' → logprob: -7.844229698181152
    10. '6' → logprob: -8.219229698181152

Token 70: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.03495632857084274
    2. '.' → logprob: -3.409956216812134
    3. ' .' → logprob: -6.909956455230713
    4. 'MOD' → logprob: -8.784955978393555
    5. '.M' → logprob: -9.659955978393555
    6. '.MODE' → logprob: -10.034955978393555
    7. '.Mod' → logprob: -10.659955978393555
    8. '.__' → logprob: -12.284955978393555
    9. '_MOD' → logprob: -12.284955978393555
    10. ' MOD' → logprob: -12.659955978393555

Token 71: '_BASE' (ID: 26857)
  Prédit: '_BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_BASE' → logprob: -0.04862676560878754
    2. '_VALUES' → logprob: -3.048626661300659
    3. '_B' → logprob: -11.298626899719238
    4. '_' → logprob: -11.298626899719238
    5. '_VALUE' → logprob: -11.548626899719238
    6. ')_' → logprob: -13.798626899719238
    7. '_Base' → logprob: -13.798626899719238
    8. '```' → logprob: -14.548626899719238
    9. '_MOD' → logprob: -15.548626899719238
    10. '_VAL' → logprob: -15.673626899719238

Token 72: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0056816875003278255
    2. 'not' → logprob: -5.25568151473999
    3. ' in' → logprob: -7.88068151473999
    4. ' ' → logprob: -10.005681991577148
    5. ' no' → logprob: -11.005681991577148
    6. 'in' → logprob: -13.130681991577148
    7. ')' → logprob: -13.255681991577148
    8. '```' → logprob: -14.005681991577148
    9. '	not' → logprob: -14.005681991577148
    10. ' ' → logprob: -14.380681991577148

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8416245579719543
    2. '<|end|>' → logprob: -0.8416245579719543
    3. 'in' → logprob: -2.0916244983673096
    4. '<|end|>' → logprob: -5.341624736785889
    5. ' ' → logprob: -5.466624736785889
    6. ' to' → logprob: -6.466624736785889
    7. 'to' → logprob: -6.716624736785889
    8. '_' → logprob: -7.466624736785889
    9. '  ' → logprob: -7.966624736785889
    10. 'self' → logprob: -7.966624736785889

Token 74: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0699780061841011
    2. 'self' → logprob: -2.6949779987335205
    3. ' ' → logprob: -11.069977760314941
    4. '{' → logprob: -11.319977760314941
    5. ' {' → logprob: -12.569977760314941
    6. '(self' → logprob: -12.569977760314941
    7. '	self' → logprob: -12.819977760314941
    8. 'Monday' → logprob: -13.444977760314941
    9. ' Monday' → logprob: -13.569977760314941
    10. ' ' → logprob: -15.194977760314941

Token 75: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.01888495683670044
    2. '.' → logprob: -4.143885135650635
    3. '.M' → logprob: -6.643885135650635
    4. 'MOD' → logprob: -7.268885135650635
    5. ' .' → logprob: -7.393885135650635
    6. '.MODE' → logprob: -8.893884658813477
    7. '_MOD' → logprob: -10.893884658813477
    8. ' MOD' → logprob: -11.268884658813477
    9. '`.' → logprob: -11.393884658813477
    10. '.Mod' → logprob: -11.643884658813477

Token 76: '_VALUES' (ID: 131844)
  Prédit: '_VALUES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_VALUES' → logprob: -0.00018458699923940003
    2. 'VALUES' → logprob: -8.625185012817383
    3. '_' → logprob: -13.250185012817383
    4. '_VAL' → logprob: -13.875185012817383
    5. '_values' → logprob: -14.000185012817383
    6. 'Values' → logprob: -14.375185012817383
    7. '	values' → logprob: -15.000185012817383
    8. '_VALUE' → logprob: -15.750185012817383
    9. '.values' → logprob: -16.375185012817383
    10. '```' → logprob: -16.625185012817383

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012524253688752651
    2. ':
' → logprob: -4.512524127960205
    3. ' :' → logprob: -6.762524127960205
    4. '):' → logprob: -9.012524604797363
    5. ' and' → logprob: -9.887524604797363
    6. ' :
' → logprob: -10.012524604797363
    7. '):
' → logprob: -10.262524604797363
    8. '       ' → logprob: -10.387524604797363
    9. ' or' → logprob: -10.762524604797363
    10. ':return' → logprob: -12.512524604797363

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02564890682697296
    2. ':' → logprob: -4.275649070739746
    3. '        ' → logprob: -5.525649070739746
    4. '       ' → logprob: -5.525649070739746
    5. '            ' → logprob: -6.650649070739746
    6. ':
' → logprob: -7.275649070739746
    7. '               ' → logprob: -7.775649070739746
    8. ' raise' → logprob: -8.150649070739746
    9. ',' → logprob: -8.775649070739746
    10. '          ' → logprob: -9.650649070739746

Token 79: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0328296422958374
    2. '            ' → logprob: -3.657829761505127
    3. 'raise' (adapté à ' raise') → logprob: -5.407829761505127
    4. ' ' → logprob: -7.407829761505127
    5. '           ' → logprob: -7.532829761505127
    6. '                ' → logprob: -7.907829761505127
    7. ' 
' → logprob: -9.157829284667969
    8. '               ' → logprob: -9.157829284667969
    9. '        ' → logprob: -9.282829284667969
    10. '	raise' → logprob: -9.782829284667969

Token 80: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0001895935565698892
    2. 'Value' → logprob: -8.625189781188965
    3. ' ' → logprob: -12.250189781188965
    4. '	Value' → logprob: -12.625189781188965
    5. '_value' → logprob: -13.750189781188965
    6. '  ' → logprob: -15.500189781188965
    7. '_Value' → logprob: -15.500189781188965
    8. ' value' → logprob: -16.00018882751465
    9. '<|end|>' → logprob: -16.25018882751465
    10. ' Val' → logprob: -16.37518882751465

Token 81: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.2007883671903983e-05
    2. 'rror' → logprob: -10.750021934509277
    3. 'Value' → logprob: -15.500021934509277
    4. 'error' → logprob: -16.750022888183594
    5. '           ' → logprob: -16.875022888183594
    6. ' Error' → logprob: -17.000022888183594
    7. '	Error' → logprob: -17.375022888183594
    8. '   ' → logprob: -17.875022888183594
    9. '_Error' → logprob: -18.125022888183594
    10. '       ' → logprob: -18.250022888183594

Token 82: '(
' (ID: 1607)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10086675733327866
    2. '(' → logprob: -2.3508667945861816
    3. '(
' → logprob: -7.475866794586182
    4. '(f' → logprob: -9.350866317749023
    5. '(

' → logprob: -12.100866317749023
    6. '('' → logprob: -15.100866317749023
    7. '(
' → logprob: -15.225866317749023
    8. '("""' → logprob: -16.600866317749023
    9. '("'' → logprob: -17.100866317749023
    10. '(",' → logprob: -17.975866317749023

Token 83: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5496758818626404
    2. '"' → logprob: -0.9246758818626404
    3. 'f' → logprob: -4.674675941467285
    4. ' f' → logprob: -5.049675941467285
    5. '(f' → logprob: -5.549675941467285
    6. ' "' → logprob: -5.674675941467285
    7. '           ' → logprob: -6.549675941467285
    8. '("' → logprob: -6.799675941467285
    9. '"The' → logprob: -8.174675941467285
    10. '"This' → logprob: -10.424675941467285

Token 84: ' f' (ID: 285)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12302733212709427
    2. 'f' (adapté à ' f') → logprob: -3.1230273246765137
    3. ' f' → logprob: -3.3730273246765137
    4. '               ' → logprob: -4.123027324676514
    5. ' "' → logprob: -4.373027324676514
    6. '                   ' → logprob: -4.873027324676514
    7. '"value' → logprob: -7.248027324676514
    8. '                       ' → logprob: -9.248027801513672
    9. '"The' → logprob: -9.623027801513672
    10. '           ' → logprob: -10.248027801513672

Token 85: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14391963183879852
    2. '"value' → logprob: -2.0189197063446045
    3. '"The' → logprob: -7.143919467926025
    4. 'f' → logprob: -8.643919944763184
    5. ' "' → logprob: -9.893919944763184
    6. ''value' → logprob: -10.018919944763184
    7. 'value' → logprob: -10.143919944763184
    8. 'Value' → logprob: -10.143919944763184
    9. ' f' → logprob: -10.768919944763184
    10. '"M' → logprob: -11.268919944763184

Token 86: 'Number' (ID: 3695)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8111708760261536
    2. 'Value' → logprob: -1.5611708164215088
    3. '"value' → logprob: -2.311170816421509
    4. 'value' → logprob: -2.436170816421509
    5. 'Monday' → logprob: -2.561170816421509
    6. 'f' → logprob: -2.811170816421509
    7. ' value' → logprob: -5.061171054840088
    8. ' Monday' → logprob: -5.186171054840088
    9. ' f' → logprob: -5.436171054840088
    10. 'Invalid' → logprob: -6.311171054840088

Token 87: ' {' (ID: 354)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.05551716312766075
    2. ' {' → logprob: -3.0555171966552734
    3. ' modulo' → logprob: -6.180517196655273
    4. ' %' → logprob: -6.555517196655273
    5. '{' → logprob: -6.555517196655273
    6. 'must' → logprob: -6.805517196655273
    7. ' mod' → logprob: -9.055517196655273
    8. ' value' → logprob: -9.180517196655273
    9. ' should' → logprob: -9.305517196655273
    10. ' %{' → logprob: -9.430517196655273

Token 88: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.12700800597667694
    2. ' value' → logprob: -2.1270079612731934
    3. ' ' → logprob: -10.752008438110352
    4. '{' → logprob: -11.127008438110352
    5. ''value' → logprob: -11.502008438110352
    6. '"value' → logprob: -12.002008438110352
    7. '}' → logprob: -12.127008438110352
    8. ' {' → logprob: -12.377008438110352
    9. '	value' → logprob: -13.127008438110352
    10. '```' → logprob: -13.252008438110352

Token 89: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00019591135787777603
    2. ' }' → logprob: -8.875195503234863
    3. ' must' → logprob: -10.250195503234863
    4. 'must' → logprob: -12.000195503234863
    5. ' is' → logprob: -12.750195503234863
    6. '"' → logprob: -12.875195503234863
    7. '!' → logprob: -13.000195503234863
    8. '%' → logprob: -13.125195503234863
    9. ' ' → logprob: -13.250195503234863
    10. '"}' → logprob: -14.625195503234863

Token 90: ' is' (ID: 382)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.34388601779937744
    2. ' is' → logprob: -1.8438860177993774
    3. ' does' → logprob: -2.843885898590088
    4. 'must' → logprob: -3.093885898590088
    5. '}' → logprob: -4.093885898590088
    6. 'is' → logprob: -5.718885898590088
    7. '"' → logprob: -6.218885898590088
    8. 'does' → logprob: -6.593885898590088
    9. ' ' → logprob: -6.718885898590088
    10. '%' → logprob: -6.843885898590088

Token 91: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.015829529613256454
    2. 'not' → logprob: -4.265829563140869
    3. ' invalid' → logprob: -6.765829563140869
    4. ' neither' → logprob: -7.890829563140869
    5. 'invalid' → logprob: -9.140829086303711
    6. 'n't' → logprob: -11.640829086303711
    7. ' ' → logprob: -13.140829086303711
    8. '_invalid' → logprob: -13.140829086303711
    9. '```' → logprob: -13.390829086303711
    10. 'Invalid' → logprob: -13.390829086303711

Token 92: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.022445354610681534
    2. ' valid' → logprob: -4.522445201873779
    3. ' Monday' → logprob: -5.147445201873779
    4. ' ' → logprob: -6.522445201873779
    5. 'Monday' → logprob: -7.272445201873779
    6. ' considered' → logprob: -7.397445201873779
    7. ' in' → logprob: -7.397445201873779
    8. 'a' → logprob: -7.647445201873779
    9. ' either' → logprob: -7.772445201873779
    10. ' monday' → logprob: -8.522445678710938

Token 93: ' Monday' (ID: 10715)
  Prédit: ' Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Monday' → logprob: -0.26638659834861755
    2. ' valid' → logprob: -1.51638662815094
    3. 'Monday' → logprob: -4.39138650894165
    4. 'valid' → logprob: -7.14138650894165
    5. ' ' → logprob: -7.89138650894165
    6. ' monday' → logprob: -7.89138650894165
    7. ' '' → logprob: -10.078886985778809
    8. ' Saturday' → logprob: -10.453886985778809
    9. ' allowed' → logprob: -10.453886985778809
    10. 'Valid' → logprob: -10.578886985778809

Token 94: '-S' (ID: 6968)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7817746996879578
    2. '-S' → logprob: -0.7817746996879578
    3. ' or' → logprob: -2.6567747592926025
    4. 'Saturday' → logprob: -4.656774520874023
    5. 'or' → logprob: -5.656774520874023
    6. ' -' → logprob: -7.656774520874023
    7. '-
' → logprob: -7.906774520874023
    8. ' Saturday' → logprob: -8.781774520874023
    9. ' ' → logprob: -9.156774520874023
    10. '<|end|>' → logprob: -9.531774520874023

Token 95: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.0010823521297425032
    2. 'Saturday' → logprob: -7.001082420349121
    3. 'at' → logprob: -9.126082420349121
    4. 'a' → logprob: -10.751082420349121
    5. '```' → logprob: -11.501082420349121
    6. 'unday' → logprob: -12.001082420349121
    7. 'atur' → logprob: -12.751082420349121
    8. '#' → logprob: -13.126082420349121
    9. 'atellite' → logprob: -13.251082420349121
    10. ' Saturday' → logprob: -13.501082420349121

Token 96: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.02223842218518257
    2. 'number' → logprob: -4.022238254547119
    3. 'Number' → logprob: -5.647238254547119
    4. ' ' → logprob: -7.772238254547119
    5. ' value' → logprob: -9.772238731384277
    6. ' Number' → logprob: -10.397238731384277
    7. ' day' → logprob: -11.397238731384277
    8. ' type' → logprob: -12.022238731384277
    9. ' or' → logprob: -12.522238731384277
    10. '_number' → logprob: -12.897238731384277

Token 97: ' (' (ID: 350)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.9601075649261475
    2. '")
' → logprob: -1.4601075649261475
    3. '           ' → logprob: -1.8351075649261475
    4. '       ' → logprob: -1.9601075649261475
    5. '"' → logprob: -2.9601075649261475
    6. '.")
' → logprob: -5.085107803344727
    7. '               ' → logprob: -5.210107803344727
    8. '.")' → logprob: -5.335107803344727
    9. ',' → logprob: -5.460107803344727
    10. '.' → logprob: -5.835107803344727

Token 98: 'mod' (ID: 4847)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.105208158493042
    2. '{' → logprob: -1.480208158493042
    3. 'must' → logprob: -2.355208158493042
    4. ' valid' → logprob: -3.230208158493042
    5. ' f' → logprob: -3.230208158493042
    6. ')' → logprob: -3.605208158493042
    7. ' expected' → logprob: -3.855208158493042
    8. ' {' → logprob: -3.980208158493042
    9. ' modulo' → logprob: -3.980208158493042
    10. 'expected' → logprob: -4.105208396911621

Token 99: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09708352386951447
    2. '7' → logprob: -2.597083568572998
    3. ' {' → logprob: -4.472083568572998
    4. ')' → logprob: -6.097083568572998
    5. '{' → logprob: -6.472083568572998
    6. ' )' → logprob: -6.597083568572998
    7. '   ' → logprob: -8.47208309173584
    8. 'ulo' → logprob: -8.59708309173584
    9. '  ' → logprob: -8.97208309173584
    10. '_' → logprob: -9.22208309173584

Token 100: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.10072137415409088
    2. ' ' → logprob: -2.6007213592529297
    3. ' self' → logprob: -4.10072135925293
    4. 'self' → logprob: -5.97572135925293
    5. '{' → logprob: -6.85072135925293
    6. ' {' → logprob: -7.35072135925293
    7. ')' → logprob: -7.85072135925293
    8. ' MOD' → logprob: -8.85072135925293
    9. '   ' → logprob: -9.47572135925293
    10. ' base' → logprob: -9.97572135925293

Token 101: ' must' (ID: 2804)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.3306807279586792
    2. ')' → logprob: -2.0806808471679688
    3. ').' → logprob: -2.0806808471679688
    4. ')")
' → logprob: -4.580680847167969
    5. '{' → logprob: -4.830680847167969
    6. '}")' → logprob: -4.955680847167969
    7. ' )' → logprob: -6.330680847167969
    8. '")' → logprob: -6.705680847167969
    9. ')").' → logprob: -7.455680847167969
    10. ')"' → logprob: -7.455680847167969

Token 102: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0009356398368254304
    2. ' in' → logprob: -7.0009355545043945
    3. 'be' → logprob: -11.375935554504395
    4. 'in' → logprob: -12.000935554504395
    5. ' ' → logprob: -12.625935554504395
    6. ')' → logprob: -13.500935554504395
    7. ' not' → logprob: -13.625935554504395
    8. ' )' → logprob: -15.250935554504395
    9. ' either' → logprob: -15.375935554504395
    10. ' b' → logprob: -17.00093650817871

Token 103: ' ' (ID: 220)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18465377390384674
    2. 'in' → logprob: -2.0596537590026855
    3. '1' → logprob: -3.4346537590026855
    4. ' ' → logprob: -5.1846537590026855
    5. ' either' → logprob: -5.9346537590026855
    6. 'either' → logprob: -8.309654235839844
    7. ' one' → logprob: -8.434654235839844
    8. ')' → logprob: -10.059654235839844
    9. '6' → logprob: -10.309654235839844
    10. '{' → logprob: -10.684654235839844

Token 104: '1' (ID: 16)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1733495593070984
    2. '1' → logprob: -2.048349618911743
    3. ' in' → logprob: -3.673349618911743
    4. '{' → logprob: -5.798349380493164
    5. 'one' → logprob: -7.423349380493164
    6. 'either' → logprob: -7.548349380493164
    7. ' ' → logprob: -8.298349380493164
    8. ')' → logprob: -8.798349380493164
    9. '0' → logprob: -9.173349380493164
    10. 'self' → logprob: -10.798349380493164

Token 105: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06199133023619652
    2. 'or' → logprob: -2.8119912147521973
    3. ',' → logprob: -11.186991691589355
    4. ')' → logprob: -12.186991691589355
    5. ' ' → logprob: -13.436991691589355
    6. '6' → logprob: -14.311991691589355
    7. ' ,' → logprob: -14.436991691589355
    8. '           ' → logprob: -14.936991691589355
    9. '               ' → logprob: -15.186991691589355
    10. '   ' → logprob: -15.436991691589355

Token 106: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.08894622325897217
    2. ' ' → logprob: -2.4639463424682617
    3. '```' → logprob: -14.026446342468262
    4. ')' → logprob: -14.213946342468262
    5. '   ' → logprob: -14.213946342468262
    6. ' ' → logprob: -14.276446342468262
    7. ' six' → logprob: -14.401446342468262
    8. '           ' → logprob: -14.651446342468262
    9. '  ' → logprob: -14.963946342468262
    10. '' → logprob: -15.401446342468262

Token 107: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '
' → logprob: -15.125066757202148
    4. '   ' → logprob: -16.12506675720215
    5. '

' → logprob: -16.18756675720215
    6. '```' → logprob: -16.31256675720215
    7. '           ' → logprob: -16.81256675720215
    8. '٦' → logprob: -17.18756675720215
    9. '' → logprob: -17.50006675720215
    10. '۶' → logprob: -18.06256675720215

Token 108: ')"
' (ID: 37223)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.3418288230895996
    2. ')"' → logprob: -1.5918288230895996
    3. ')")
' → logprob: -2.9668288230895996
    4. ').' → logprob: -3.7168288230895996
    5. '")' → logprob: -5.7168288230896
    6. ')."' → logprob: -5.9668288230896
    7. '       ' → logprob: -6.3418288230896
    8. ')"
' → logprob: -6.7168288230896
    9. ')' → logprob: -6.8418288230896
    10. '           ' → logprob: -9.841829299926758

Token 109: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09903179109096527
    2. ')' → logprob: -2.474031686782837
    3. ')
' → logprob: -4.724031925201416
    4. '           ' → logprob: -6.974031925201416
    5. '   ' → logprob: -9.474031448364258
    6. '               ' → logprob: -9.974031448364258
    7. ' )' → logprob: -10.099031448364258
    8. ' )
' → logprob: -10.724031448364258
    9. '")' → logprob: -10.974031448364258
    10. '```' → logprob: -12.224031448364258

Token 110: ' )
' (ID: 3270)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01828690432012081
    2. ')' → logprob: -4.01828670501709
    3. ')
' (adapté à ' )
') → logprob: -9.39328670501709
    4. 'self' → logprob: -10.89328670501709
    5. ' )' → logprob: -11.51828670501709
    6. '   ' → logprob: -11.51828670501709
    7. '")' → logprob: -12.39328670501709
    8. '           ' → logprob: -12.51828670501709
    9. '```' → logprob: -13.76828670501709
    10. '
' → logprob: -14.01828670501709

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029160623671486974
    2. 'self' → logprob: -8.75029182434082
    3. '<|end|>' → logprob: -9.50029182434082
    4. ' self' → logprob: -10.62529182434082
    5. '
' → logprob: -10.87529182434082
    6. '   ' → logprob: -11.62529182434082
    7. '```' → logprob: -12.87529182434082
    8. '        
' → logprob: -13.50029182434082
    9. '<|end|>' → logprob: -14.62529182434082
    10. ' ' → logprob: -14.75029182434082

Token 112: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026406772434711456
    2. 'self' (adapté à ' self') → logprob: -3.776406764984131
    3. ' self' → logprob: -5.776406764984131
    4. '   ' → logprob: -9.901407241821289
    5. '
' → logprob: -12.901407241821289
    6. ' ' → logprob: -13.526407241821289
    7. '	self' → logprob: -14.026407241821289
    8. '      ' → logprob: -14.901407241821289
    9. '```' → logprob: -14.901407241821289
    10. '        
' → logprob: -15.026407241821289

Token 113: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.006754086818546057
    2. '.' → logprob: -5.006753921508789
    3. ' .' → logprob: -10.381753921508789
    4. 'value' → logprob: -12.131753921508789
    5. '._' → logprob: -13.756753921508789
    6. ' value' → logprob: -15.006753921508789
    7. '.val' → logprob: -15.381753921508789
    8. '   ' → logprob: -16.00675392150879
    9. '.Value' → logprob: -16.25675392150879
    10. '.valor' → logprob: -16.38175392150879

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326448917388916
    2. '=' → logprob: -1.3132644891738892
    3. ' ' → logprob: -13.563264846801758
    4. '   ' → logprob: -14.438264846801758
    5. ' =
' → logprob: -15.063264846801758
    6. '    ' → logprob: -15.063264846801758
    7. '<|end|>' → logprob: -16.063264846801758
    8. '	' → logprob: -16.938264846801758
    9. '＝' → logprob: -17.438264846801758
    10. '=
' → logprob: -17.563264846801758

Token 115: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.061967797577381134
    2. 'value' → logprob: -2.8119678497314453
    3. '        ' → logprob: -17.186967849731445
    4. '"value' → logprob: -17.686967849731445
    5. '	value' → logprob: -18.061967849731445
    6. ' ' → logprob: -18.186967849731445
    7. ')value' → logprob: -18.186967849731445
    8. '$value' → logprob: -18.436967849731445
    9. 'Value' → logprob: -18.686967849731445
    10. '```' → logprob: -18.686967849731445

Token 116: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.58213871717453
    2. '<|end|>' → logprob: -1.2071387767791748
    3. 'def' → logprob: -2.582138776779175
    4. '
' → logprob: -3.082138776779175
    5. ' def' → logprob: -4.457138538360596
    6. ' ' → logprob: -6.332138538360596
    7. '    
' → logprob: -6.332138538360596
    8. '<|end|>' → logprob: -6.332138538360596
    9. ')' → logprob: -6.457138538360596
    10. ':' → logprob: -7.832138538360596

Token 118: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004948154557496309
    2. '   ' → logprob: -6.004948139190674
    3. ' def' → logprob: -6.004948139190674
    4. ' ' → logprob: -13.379948616027832
    5. '@property' → logprob: -14.629948616027832
    6. '	def' → logprob: -15.379948616027832
    7. '```' → logprob: -15.379948616027832
    8. '  ' → logprob: -15.629948616027832
    9. '@' → logprob: -16.129947662353516
    10. '    
' → logprob: -16.379947662353516

Token 119: ' is' (ID: 382)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.052854787558317184
    2. ' ' → logprob: -3.1778547763824463
    3. ' add' → logprob: -5.052855014801025
    4. '__' → logprob: -7.177855014801025
    5. ' _' → logprob: -7.302855014801025
    6. ' def' → logprob: -7.427855014801025
    7. ' value' → logprob: -7.802855014801025
    8. ' ' → logprob: -8.302854537963867
    9. '  ' → logprob: -8.677854537963867
    10. ' get' → logprob: -9.177854537963867

Token 120: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.03112391196191311
    2. '_' → logprob: -4.406124114990234
    3. ' Monday' → logprob: -4.781124114990234
    4. 'Monday' → logprob: -5.531124114990234
    5. '_valid' → logprob: -6.406124114990234
    6. ' monday' → logprob: -6.656124114990234
    7. '_s' → logprob: -6.906124114990234
    8. 'm' → logprob: -7.906124114990234
    9. '_week' → logprob: -8.281124114990234
    10. '_M' → logprob: -8.406124114990234

Token 121: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.00912619661539793
    2. 'ultiple' → logprob: -5.88412618637085
    3. 'Monday' → logprob: -6.00912618637085
    4. 'onth' → logprob: -6.50912618637085
    5. 'on' → logprob: -6.75912618637085
    6. 'ond' → logprob: -8.384126663208008
    7. 'od' → logprob: -8.384126663208008
    8. 'ultip' → logprob: -8.634126663208008
    9. '```' → logprob: -8.884126663208008
    10. 'ont' → logprob: -9.884126663208008

Token 122: '_s' (ID: 1278)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019407479092478752
    2. '(' → logprob: -4.769407272338867
    3. '()' → logprob: -5.644407272338867
    4. '_s' → logprob: -6.269407272338867
    5. '_sat' → logprob: -6.269407272338867
    6. 'self' → logprob: -6.644407272338867
    7. 'Saturday' → logprob: -6.894407272338867
    8. '_or' → logprob: -7.769407272338867
    9. 's' → logprob: -9.144407272338867
    10. '_' → logprob: -9.269407272338867

Token 123: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -2.1008713702030946e-06
    2. 'Saturday' → logprob: -14.250001907348633
    3. 'unday' → logprob: -14.625001907348633
    4. 's' → logprob: -15.250001907348633
    5. 'atellite' → logprob: -15.625001907348633
    6. '```' → logprob: -16.000001907348633
    7. 'atur' → logprob: -16.125001907348633
    8. 'at' → logprob: -16.500001907348633
    9. 'atud' → logprob: -16.750001907348633
    10. 'a' → logprob: -16.875001907348633

Token 124: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012283235555514693
    2. '(' → logprob: -7.001228332519531
    3. '_number' → logprob: -8.501228332519531
    4. '()' → logprob: -9.501228332519531
    5. 'self' → logprob: -10.751228332519531
    6. '_num' → logprob: -13.126228332519531
    7. ' (' → logprob: -13.126228332519531
    8. '(
' → logprob: -13.501228332519531
    9. 'number' → logprob: -13.626228332519531
    10. '_day' → logprob: -13.626228332519531

Token 125: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20054584741592407
    2. ')' → logprob: -2.0755457878112793
    3. '(self' → logprob: -3.7005457878112793
    4. 'self' → logprob: -3.7005457878112793
    5. '):
' → logprob: -5.825545787811279
    6. ')(' → logprob: -6.075545787811279
    7. '   ' → logprob: -7.825545787811279
    8. ',' → logprob: -8.075546264648438
    9. '       ' → logprob: -8.200546264648438
    10. '(' → logprob: -9.075546264648438

Token 126: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002011314034461975
    2. 'self' → logprob: -6.252011299133301
    3. '       ' → logprob: -10.1270112991333
    4. '(' → logprob: -10.5020112991333
    5. '   ' → logprob: -12.1270112991333
    6. ' self' → logprob: -12.5020112991333
    7. '->' → logprob: -12.7520112991333
    8. ' (' → logprob: -14.1270112991333
    9. ')' → logprob: -14.5020112991333
    10. 'def' → logprob: -14.6270112991333

Token 127: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.38689401745796204
    2. ' bool' → logprob: -1.1368939876556396
    3. '   ' → logprob: -11.011894226074219
    4. 'True' → logprob: -13.386894226074219
    5. ' ' → logprob: -13.511894226074219
    6. '	bool' → logprob: -14.011894226074219
    7. '<bool' → logprob: -14.136894226074219
    8. 'Bool' → logprob: -14.386894226074219
    9. 'int' → logprob: -14.636894226074219
    10. ' True' → logprob: -14.761894226074219

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019730038475245237
    2. '():' → logprob: -6.6269731521606445
    3. '):' → logprob: -7.7519731521606445
    4. ':
' → logprob: -9.001973152160645
    5. '(self' → logprob: -10.001973152160645
    6. 'self' → logprob: -10.626973152160645
    7. ' :' → logprob: -12.126973152160645
    8. ':return' → logprob: -12.501973152160645
    9. ':self' → logprob: -12.751973152160645
    10. '(' → logprob: -12.751973152160645

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.514650183613412e-05
    2. ' return' → logprob: -10.000055313110352
    3. 'return' → logprob: -12.000055313110352
    4. '<|end|>' → logprob: -13.125055313110352
    5. '   ' → logprob: -14.875055313110352
    6. '```' → logprob: -15.000055313110352
    7. ':' → logprob: -15.625055313110352
    8. ':return' → logprob: -16.12505531311035
    9. ' ' → logprob: -16.25005531311035
    10. '#' → logprob: -16.37505531311035

Token 130: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47734713554382324
    2. 'return' (adapté à ' return') → logprob: -0.9773471355438232
    3. ' return' → logprob: -5.727347373962402
    4. '	return' → logprob: -12.852347373962402
    5. '```' → logprob: -13.352347373962402
    6. '{return' → logprob: -13.477347373962402
    7. '   ' → logprob: -13.977347373962402
    8. '
' → logprob: -13.977347373962402
    9. ':return' → logprob: -14.977347373962402
    10. ')' → logprob: -15.727347373962402

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06229379028081894
    2. ' self' → logprob: -3.062293767929077
    3. '(self' → logprob: -4.312294006347656
    4. ' (' → logprob: -8.562294006347656
    5. '   ' → logprob: -11.062294006347656
    6. '	self' → logprob: -13.437294006347656
    7. '       ' → logprob: -14.312294006347656
    8. '[self' → logprob: -14.437294006347656
    9. ' ' → logprob: -15.437294006347656
    10. '  ' → logprob: -15.937294006347656

Token 132: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00013953536108601838
    2. '.' → logprob: -9.375139236450195
    3. 'value' → logprob: -10.000139236450195
    4. '.mod' → logprob: -12.000139236450195
    5. 'MOD' → logprob: -13.375139236450195
    6. ' .' → logprob: -15.125139236450195
    7. '.MOD' → logprob: -15.125139236450195
    8. '.values' → logprob: -15.750139236450195
    9. ').' → logprob: -15.875139236450195
    10. '%' → logprob: -16.125139236450195

Token 133: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01603659801185131
    2. ' %' → logprob: -4.141036510467529
    3. ' ' → logprob: -13.516036987304688
    4. '%e' → logprob: -15.141036987304688
    5. '```' → logprob: -15.891036987304688
    6. '   ' → logprob: -17.016036987304688
    7. ' ' → logprob: -17.016036987304688
    8. '%D' → logprob: -17.141036987304688
    9. '

' → logprob: -17.266036987304688
    10. '7' → logprob: -17.266036987304688

Token 134: ' self' (ID: 1051)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.7381032109260559
    2. ' self' → logprob: -0.9881032109260559
    3. 'self' → logprob: -1.9881031513214111
    4. ' ' → logprob: -4.36310338973999
    5. '   ' → logprob: -13.613102912902832
    6. '	self' → logprob: -14.113102912902832
    7. '```' → logprob: -14.238102912902832
    8. 'Monday' → logprob: -14.363102912902832
    9. ' Monday' → logprob: -15.363102912902832
    10. ' seven' → logprob: -15.613102912902832

Token 135: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00011999329581158236
    2. '_MOD' → logprob: -9.375120162963867
    3. 'MOD' → logprob: -10.875120162963867
    4. ' .' → logprob: -11.625120162963867
    5. '._' → logprob: -12.750120162963867
    6. '.' → logprob: -13.500120162963867
    7. '.MODE' → logprob: -13.875120162963867
    8. '.Mod' → logprob: -14.125120162963867
    9. '.BASE' → logprob: -14.375120162963867
    10. '.mod' → logprob: -14.500120162963867

Token 136: '_BASE' (ID: 26857)
  Prédit: '_BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_BASE' → logprob: -2.5776860184123507e-06
    2. '_VALUES' → logprob: -13.75000286102295
    3. 'BASE' → logprob: -14.12500286102295
    4. '_VALUE' → logprob: -15.62500286102295
    5. '_Base' → logprob: -16.125001907348633
    6. 'Base' → logprob: -16.250001907348633
    7. '```' → logprob: -16.250001907348633
    8. '_' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '7' → logprob: -18.000001907348633

Token 137: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519497573375702
    2. ' in' → logprob: -1.5019497871398926
    3. ' ' → logprob: -11.126949310302734
    4. '0' → logprob: -13.626949310302734
    5. '==' → logprob: -13.751949310302734
    6. '1' → logprob: -13.876949310302734
    7. ')' → logprob: -14.126949310302734
    8. '()' → logprob: -15.251949310302734
    9. 'int' → logprob: -15.251949310302734
    10. '   ' → logprob: -15.251949310302734

Token 138: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5778030157089233
    2. 'self' → logprob: -0.8278030157089233
    3. '{' → logprob: -6.327803134918213
    4. ' {' → logprob: -9.827802658081055
    5. '	self' → logprob: -11.327802658081055
    6. '(self' → logprob: -12.077802658081055
    7. '   ' → logprob: -13.077802658081055
    8. ' ' → logprob: -14.077802658081055
    9. '<|end|>' → logprob: -14.577802658081055
    10. '{
' → logprob: -15.202802658081055

Token 139: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -6.575563020305708e-05
    2. 'MOD' → logprob: -9.750065803527832
    3. '.MODE' → logprob: -12.125065803527832
    4. '.' → logprob: -13.875065803527832
    5. '_MOD' → logprob: -14.750065803527832
    6. '.M' → logprob: -14.750065803527832
    7. '.Mod' → logprob: -16.250064849853516
    8. ' .' → logprob: -16.375064849853516
    9. '   ' → logprob: -17.625064849853516
    10. '._' → logprob: -17.875064849853516

Token 140: '_VALUES' (ID: 131844)
  Prédit: '_VALUES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_VALUES' → logprob: -0.011049000546336174
    2. 'VALUES' → logprob: -4.511048793792725
    3. '_VAL' → logprob: -15.011049270629883
    4. '_' → logprob: -16.011049270629883
    5. 'VALU' → logprob: -16.261049270629883
    6. 'Values' → logprob: -16.386049270629883
    7. '	values' → logprob: -16.386049270629883
    8. '_VALUE' → logprob: -16.636049270629883
    9. '_V' → logprob: -16.761049270629883
    10. '_values' → logprob: -16.886049270629883

Token 141: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.048885855823755264
    2. '   ' → logprob: -3.6738858222961426
    3. '<|end|>' → logprob: -3.9238858222961426
    4. ' def' → logprob: -7.173885822296143
    5. '#' → logprob: -7.548885822296143
    6. '    
' → logprob: -8.4238862991333
    7. '```' → logprob: -8.5488862991333
    8. ')' → logprob: -8.5488862991333
    9. '@property' → logprob: -8.6738862991333
    10. ' ' → logprob: -9.0488862991333

Token 144: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.36734265089035034
    2. '__' → logprob: -1.2423427104949951
    3. ' def' → logprob: -4.492342472076416
    4. 'def' → logprob: -5.242342472076416
    5. ' add' → logprob: -6.867342472076416
    6. ' ' → logprob: -7.367342472076416
    7. 'add' → logprob: -8.117342948913574
    8. '   ' → logprob: -8.742342948913574
    9. ' str' → logprob: -10.617342948913574
    10. 'str' → logprob: -10.867342948913574

Token 145: 'mul' (ID: 44857)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.004149157088249922
    2. 'init' → logprob: -5.504148960113525
    3. 'repr' → logprob: -10.254149436950684
    4. 'str' → logprob: -10.504149436950684
    5. 'int' → logprob: -11.879149436950684
    6. 'lt' → logprob: -14.129149436950684
    7. 'add' → logprob: -15.129149436950684
    8. 'hash' → logprob: -16.004148483276367
    9. '_eq' → logprob: -16.879148483276367
    10. ' eq' → logprob: -17.504148483276367

Token 146: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6933477520942688
    2. '__(' → logprob: -0.6933477520942688
    3. '__(
' → logprob: -8.693347930908203
    4. '__('' → logprob: -11.443347930908203
    5. '__(*' → logprob: -11.568347930908203
    6. '(self' → logprob: -12.068347930908203
    7. '```' → logprob: -13.193347930908203
    8. '__((' → logprob: -13.443347930908203
    9. '___' → logprob: -14.068347930908203
    10. '(' → logprob: -14.193347930908203

Token 147: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008618239313364029
    2. ' self' → logprob: -4.758618354797363
    3. ' ' → logprob: -13.008618354797363
    4. '   ' → logprob: -14.133618354797363
    5. ',' → logprob: -15.383618354797363
    6. '(self' → logprob: -15.508618354797363
    7. ')' → logprob: -15.508618354797363
    8. 'other' → logprob: -16.133617401123047
    9. '	self' → logprob: -17.758617401123047
    10. '_self' → logprob: -18.008617401123047

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2142268568277359
    2. '__,' → logprob: -2.3392269611358643
    3. '__' → logprob: -3.0892269611358643
    4. 'self' → logprob: -3.3392269611358643
    5. ' ,' → logprob: -4.964226722717285
    6. '__)' → logprob: -5.464226722717285
    7. ')' → logprob: -6.339226722717285
    8. '__(' → logprob: -6.464226722717285
    9. '<|end|>' → logprob: -8.839226722717285
    10. ' self' → logprob: -8.964226722717285

Token 149: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2519311308860779
    2. ' other' → logprob: -1.5019311904907227
    3. 'Other' → logprob: -13.751931190490723
    4. 'self' → logprob: -14.376931190490723
    5. '(other' → logprob: -16.001930236816406
    6. '_other' → logprob: -16.001930236816406
    7. ' self' → logprob: -18.001930236816406
    8. '.other' → logprob: -18.126930236816406
    9. ' ' → logprob: -18.251930236816406
    10. '其他' → logprob: -18.876930236816406

Token 150: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21469418704509735
    2. ':' → logprob: -2.3396942615509033
    3. '<|end|>' → logprob: -3.3396942615509033
    4. ')' → logprob: -3.7146942615509033
    5. '):
' → logprob: -4.089694023132324
    6. '<|end|>' → logprob: -5.214694023132324
    7. ',' → logprob: -5.339694023132324
    8. ' ):' → logprob: -5.339694023132324
    9. 'self' → logprob: -6.464694023132324
    10. ' :' → logprob: -6.714694023132324

Token 151: ' "' (ID: 392)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.2315959483385086
    2. ' Monday' → logprob: -1.7315959930419922
    3. ')' → logprob: -4.231595993041992
    4. ' ' → logprob: -4.981595993041992
    5. ' '' → logprob: -5.356595993041992
    6. ' )' → logprob: -6.856595993041992
    7. ' "' → logprob: -6.981595993041992
    8. 'int' → logprob: -7.981595993041992
    9. ''' → logprob: -8.106595993041992
    10. '"' → logprob: -8.106595993041992

Token 152: 'Monday' (ID: 24282)
  Prédit: 'Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.0001398929744027555
    2. ' Monday' → logprob: -8.875140190124512
    3. 'Mond' → logprob: -17.875139236450195
    4. ' ' → logprob: -18.750139236450195
    5. 'Tuesday' → logprob: -19.375139236450195
    6. 'Morning' → logprob: -19.750139236450195
    7. '   ' → logprob: -20.000139236450195
    8. 'm' → logprob: -20.000139236450195
    9. 'onday' → logprob: -20.250139236450195
    10. 'Mont' → logprob: -20.375139236450195

Token 153: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -3.128163257315464e-07
    2. ' Saturday' → logprob: -15.75
    3. 'aturday' → logprob: -16.5
    4. 'Sunday' → logprob: -18.375
    5. 'Monday' → logprob: -18.375
    6. 'S' → logprob: -18.875
    7. '_S' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. 'Satellite' → logprob: -20.5
    10. 'Sat' → logprob: -21.25

Token 154: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -3.173704271830502e-06
    2. '_number' → logprob: -13.00000286102295
    3. 'number' → logprob: -14.62500286102295
    4. '_Number' → logprob: -15.62500286102295
    5. ' Number' → logprob: -16.625003814697266
    6. '_NUMBER' → logprob: -17.000003814697266
    7. '```' → logprob: -17.375003814697266
    8. ' number' → logprob: -17.500003814697266
    9. 'umber' → logprob: -17.750003814697266
    10. 'Numbers' → logprob: -17.875003814697266

Token 155: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5792239904403687
    2. '"):' → logprob: -0.8292239904403687
    3. ')' → logprob: -6.329224109649658
    4. '):' → logprob: -6.829224109649658
    5. '"):
' → logprob: -7.954224109649658
    6. ')")' → logprob: -10.3292236328125
    7. '"):
' → logprob: -11.2042236328125
    8. ':' → logprob: -11.9542236328125
    9. '"' → logprob: -12.4542236328125
    10. '":' → logprob: -13.9542236328125

Token 156: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013607845176011324
    2. '):' → logprob: -9.250136375427246
    3. ':
' → logprob: -11.000136375427246
    4. ':return' → logprob: -12.250136375427246
    5. '<|end|>' → logprob: -12.375136375427246
    6. '():' → logprob: -12.375136375427246
    7. ')' → logprob: -12.750136375427246
    8. ':**' → logprob: -13.375136375427246
    9. '->' → logprob: -13.750136375427246
    10. '.' → logprob: -14.000136375427246

Token 157: ' "' (ID: 392)
  Prédit: ' Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Monday' → logprob: -0.01818588376045227
    2. 'Monday' → logprob: -4.018186092376709
    3. ' "' → logprob: -10.51818561553955
    4. '"' → logprob: -12.64318561553955
    5. ' ' → logprob: -13.26818561553955
    6. ' ' → logprob: -13.76818561553955
    7. ' None' → logprob: -14.14318561553955
    8. ' monday' → logprob: -14.39318561553955
    9. ' Montag' → logprob: -14.64318561553955
    10. ' Mondays' → logprob: -14.64318561553955

Token 158: 'Monday' (ID: 24282)
  Prédit: 'Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.001326433615759015
    2. ' Monday' → logprob: -6.626326560974121
    3. ' ' → logprob: -14.751326560974121
    4. 'Morning' → logprob: -17.751325607299805
    5. '   ' → logprob: -18.001325607299805
    6. 'M' → logprob: -18.001325607299805
    7. '```' → logprob: -18.001325607299805
    8. 'Mond' → logprob: -18.001325607299805
    9. 'Tuesday' → logprob: -18.751325607299805
    10. '  ' → logprob: -19.001325607299805

Token 159: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -3.128163257315464e-07
    2. ' Saturday' → logprob: -15.125
    3. 'Monday' → logprob: -18.0
    4. 'aturday' → logprob: -18.5
    5. 'Sunday' → logprob: -19.25
    6. 'S' → logprob: -19.5
    7. '-S' → logprob: -19.75
    8. '_S' → logprob: -19.75
    9. '*' → logprob: -20.0
    10. '```' → logprob: -20.25

Token 160: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -4.961759259458631e-06
    2. 'Saturday' → logprob: -12.250004768371582
    3. 'number' → logprob: -16.2500057220459
    4. 'Numbers' → logprob: -17.1250057220459
    5. '_number' → logprob: -17.5000057220459
    6. '```' → logprob: -18.6250057220459
    7. '_Number' → logprob: -19.2500057220459
    8. 'Monday' → logprob: -19.2500057220459
    9. ' Number' → logprob: -19.5000057220459
    10. 'umber' → logprob: -19.8750057220459

Token 161: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.018378082662820816
    2. '":
' → logprob: -4.393378257751465
    3. ':' → logprob: -5.268378257751465
    4. '):' → logprob: -8.393378257751465
    5. '":
' → logprob: -8.893378257751465
    6. '(":' → logprob: -8.893378257751465
    7. ':
' → logprob: -9.643378257751465
    8. '"' → logprob: -10.018378257751465
    9. '):
' → logprob: -10.018378257751465
    10. '"):' → logprob: -11.893378257751465

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033465633168816566
    2. 'return' → logprob: -6.6283464431762695
    3. ' return' → logprob: -7.7533464431762695
    4. ':' → logprob: -7.8783464431762695
    5. ':
' → logprob: -7.8783464431762695
    6. '):
' → logprob: -8.37834644317627
    7. '
' → logprob: -9.25334644317627
    8. ')' → logprob: -9.37834644317627
    9. '        
' → logprob: -9.37834644317627
    10. '```' → logprob: -9.75334644317627

Token 163: ' product' (ID: 1888)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.31790420413017273
    2. 'product' (adapté à ' product') → logprob: -1.5679042339324951
    3. 'value' → logprob: -3.442904233932495
    4. 'new' → logprob: -4.442903995513916
    5. '       ' → logprob: -4.692903995513916
    6. 'return' → logprob: -5.442903995513916
    7. 'prod' → logprob: -5.567903995513916
    8. 'mod' → logprob: -6.067903995513916
    9. 'temp' → logprob: -9.192904472351074
    10. ' product' → logprob: -9.317904472351074

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18295574188232422
    2. '_value' → logprob: -2.182955741882324
    3. ' =' → logprob: -2.932955741882324
    4. '_val' → logprob: -6.807955741882324
    5. 'value' → logprob: -8.932955741882324
    6. '   ' → logprob: -12.557955741882324
    7. 'Value' → logprob: -13.307955741882324
    8. '.' → logprob: -13.932955741882324
    9. '=
' → logprob: -14.307955741882324
    10. '_' → logprob: -14.557955741882324

Token 165: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7223957180976868
    2. ' (' → logprob: -0.9723957180976868
    3. ' self' → logprob: -2.472395658493042
    4. 'self' → logprob: -2.972395658493042
    5. '       ' → logprob: -7.347395896911621
    6. '(M' → logprob: -10.972395896911621
    7. ' ' → logprob: -12.222395896911621
    8. '   ' → logprob: -13.597395896911621
    9. '((' → logprob: -13.597395896911621
    10. '	self' → logprob: -14.222395896911621

Token 166: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0002627662615850568
    2. '.' → logprob: -8.250263214111328
    3. ' .' → logprob: -13.875263214111328
    4. 'value' → logprob: -14.750263214111328
    5. '.product' → logprob: -15.750263214111328
    6. '*' → logprob: -18.125263214111328
    7. '.values' → logprob: -18.625263214111328
    8. '.other' → logprob: -18.625263214111328
    9. '*.' → logprob: -18.875263214111328
    10. 'self' → logprob: -19.375263214111328

Token 167: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889099419116974
    2. '*' → logprob: -2.5788910388946533
    3. ' ' → logprob: -13.703890800476074
    4. ' ' → logprob: -17.07889175415039
    5. '%' → logprob: -18.20389175415039
    6. '**' → logprob: -18.45389175415039
    7. '*object' → logprob: -18.45389175415039
    8. '  ' → logprob: -18.82889175415039
    9. '#' → logprob: -19.32889175415039
    10. '   ' → logprob: -19.95389175415039

Token 168: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.023245595395565033
    2. ' other' → logprob: -3.7732455730438232
    3. '(other' → logprob: -16.023244857788086
    4. 'Other' → logprob: -18.398244857788086
    5. '.other' → logprob: -19.898244857788086
    6. '_other' → logprob: -20.023244857788086
    7. '其他' → logprob: -21.523244857788086
    8. ' ' → logprob: -22.273244857788086
    9. ' oth' → logprob: -22.648244857788086
    10. 'oth' → logprob: -22.898244857788086

Token 169: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00020413640595506877
    2. '.' → logprob: -8.500204086303711
    3. 'value' → logprob: -15.125204086303711
    4. ' .' → logprob: -16.37520408630371
    5. ').' → logprob: -16.37520408630371
    6. '`.' → logprob: -16.50020408630371
    7. '}.' → logprob: -17.12520408630371
    8. '```' → logprob: -18.50020408630371
    9. '.values' → logprob: -19.12520408630371
    10. '"value' → logprob: -19.25020408630371

Token 170: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1453830897808075
    2. '%' → logprob: -2.27038311958313
    3. '
' → logprob: -3.52038311958313
    4. '       ' → logprob: -6.395382881164551
    5. ' 
' → logprob: -8.14538288116455
    6. '        
' → logprob: -8.64538288116455
    7. '
' → logprob: -9.14538288116455
    8. '%
' → logprob: -9.27038288116455
    9. ' %
' → logprob: -9.89538288116455
    10. 'return' → logprob: -10.14538288116455

Token 171: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.864841639995575
    2. '       ' → logprob: -0.864841639995575
    3. '%' → logprob: -2.6148416996002197
    4. 'return' → logprob: -3.1148416996002197
    5. ' %' → logprob: -3.8648416996002197
    6. ' return' → logprob: -4.864841461181641
    7. '        
' → logprob: -4.989841461181641
    8. '
' → logprob: -6.239841461181641
    9. 'mod' → logprob: -7.114841461181641
    10. ' 
' → logprob: -7.364841461181641

Token 172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05483860895037651
    2. ' return' → logprob: -3.4298386573791504
    3. '       ' → logprob: -5.17983865737915
    4. '#' → logprob: -5.55483865737915
    5. 'product' → logprob: -5.55483865737915
    6. 'while' → logprob: -6.05483865737915
    7. 'mod' → logprob: -6.30483865737915
    8. 'if' → logprob: -6.42983865737915
    9. ' product' → logprob: -7.17983865737915
    10. ' if' → logprob: -8.179838180541992

Token 173: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.3132653534412384
    2. ' Monday' → logprob: -1.313265323638916
    3. 'self' → logprob: -12.688265800476074
    4. ' self' → logprob: -15.063265800476074
    5. '   ' → logprob: -15.938265800476074
    6. ' monday' → logprob: -16.438264846801758
    7. ' Montag' → logprob: -17.188264846801758
    8. ' ' → logprob: -17.188264846801758
    9. ' ' → logprob: -18.438264846801758
    10. '(M' → logprob: -18.563264846801758

Token 174: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -1.9361264946837764e-07
    2. ' Saturday' → logprob: -16.125
    3. 'S' → logprob: -17.625
    4. 'Satellite' → logprob: -18.125
    5. 'aturday' → logprob: -19.5
    6. 'Sunday' → logprob: -20.375
    7. 'Sat' → logprob: -21.125
    8. '```' → logprob: -21.625
    9. 'Monday' → logprob: -21.875
    10. 'SAT' → logprob: -22.375

Token 175: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9361264946837764e-07
    2. 'number' → logprob: -16.0
    3. '_number' → logprob: -17.0
    4. 'umber' → logprob: -17.125
    5. ' Number' → logprob: -18.375
    6. 'Numbers' → logprob: -18.625
    7. '_Number' → logprob: -18.75
    8. 'Saturday' → logprob: -19.25
    9. '_NUMBER' → logprob: -20.0
    10. ' number' → logprob: -20.5

Token 176: '(product' (ID: 31697)
  Prédit: '(product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.00036156410351395607
    2. '(' → logprob: -8.000361442565918
    3. '((' → logprob: -10.875361442565918
    4. 'product' → logprob: -12.125361442565918
    5. '(
' → logprob: -14.000361442565918
    6. ' (' → logprob: -14.375361442565918
    7. '(prod' → logprob: -16.000362396240234
    8. '(round' → logprob: -17.000362396240234
    9. '(f' → logprob: -17.125362396240234
    10. '(p' → logprob: -17.375362396240234

Token 177: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005819845828227699
    2. ' )' → logprob: -7.750582218170166
    3. '<|end|>' → logprob: -9.500581741333008
    4. '%' → logprob: -9.750581741333008
    5. ' %' → logprob: -11.375581741333008
    6. '<|end|>' → logprob: -12.875581741333008
    7. ')
' → logprob: -13.125581741333008
    8. '%)' → logprob: -14.875581741333008
    9. '```' → logprob: -15.125581741333008
    10. '       ' → logprob: -15.250581741333008

Token 178: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004635064862668514
    2. ' __' → logprob: -5.379634857177734
    3. 'def' → logprob: -11.754634857177734
    4. ' ' → logprob: -13.129634857177734
    5. 'pow' → logprob: -13.254634857177734
    6. '**' → logprob: -14.129634857177734
    7. '___' → logprob: -14.754634857177734
    8. 'add' → logprob: -15.129634857177734
    9. '```' → logprob: -15.129634857177734
    10. '   ' → logprob: -15.254634857177734

Token 181: 'flo' (ID: 174761)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.08916584402322769
    2. 'add' → logprob: -3.0891659259796143
    3. 'pow' → logprob: -3.3391659259796143
    4. 'mod' → logprob: -6.589165687561035
    5. 'repr' → logprob: -6.964165687561035
    6. 'rm' → logprob: -7.464165687561035
    7. 'init' → logprob: -7.464165687561035
    8. 'flo' → logprob: -7.589165687561035
    9. 'mul' → logprob: -8.214165687561035
    10. 'imul' → logprob: -10.339165687561035

Token 182: 'ord' (ID: 604)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.1008400246500969
    2. '__' → logprob: -2.3508400917053223
    3. 'ord' → logprob: -7.975840091705322
    4. '//' → logprob: -9.350839614868164
    5. '_' → logprob: -9.350839614868164
    6. 'orm' → logprob: -10.475839614868164
    7. '__
' → logprob: -10.600839614868164
    8. 'o' → logprob: -11.725839614868164
    9. '_or' → logprob: -11.850839614868164
    10. 'oor' → logprob: -11.975839614868164

Token 183: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.31537458300590515
    2. '__' → logprob: -1.3153746128082275
    3. '_div' → logprob: -6.315374374389648
    4. 'div' → logprob: -8.940374374389648
    5. 'or' → logprob: -9.690374374389648
    6. '__
' → logprob: -10.440374374389648
    7. '_iv' → logprob: -10.940374374389648
    8. '__/' → logprob: -11.065374374389648
    9. '```' → logprob: -11.815374374389648
    10. '____' → logprob: -12.315374374389648

Token 184: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07900942116975784
    2. '__' → logprob: -2.579009532928467
    3. '__('' → logprob: -10.079009056091309
    4. '__((' → logprob: -10.329009056091309
    5. '__(
' → logprob: -10.704009056091309
    6. '__(*' → logprob: -11.329009056091309
    7. '__("' → logprob: -11.579009056091309
    8. '___' → logprob: -14.204009056091309
    9. '__.__' → logprob: -16.079010009765625
    10. '(' → logprob: -16.704010009765625

Token 185: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0022148462012410164
    2. ' self' → logprob: -6.1272149085998535
    3. 'other' → logprob: -10.502214431762695
    4. '(self' → logprob: -14.127214431762695
    5. '	self' → logprob: -14.627214431762695
    6. '"' → logprob: -15.002214431762695
    7. ' other' → logprob: -15.002214431762695
    8. '__(' → logprob: -15.877214431762695
    9. ' ' → logprob: -16.002214431762695
    10. '   ' → logprob: -16.627214431762695

Token 186: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0034783126320689917
    2. '(self' → logprob: -5.878478527069092
    3. '__' → logprob: -7.503478527069092
    4. '(' → logprob: -9.753478050231934
    5. ')(' → logprob: -11.128478050231934
    6. 'self' → logprob: -11.378478050231934
    7. ' (' → logprob: -11.378478050231934
    8. ',' → logprob: -11.503478050231934
    9. '__(
' → logprob: -11.753478050231934
    10. '__("' → logprob: -13.378478050231934

Token 187: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.07971273362636566
    2. 'other' → logprob: -2.5797126293182373
    3. ' self' → logprob: -7.454712867736816
    4. 'self' → logprob: -8.329712867736816
    5. ' ' → logprob: -13.329712867736816
    6. 'Other' → logprob: -14.454712867736816
    7. '2' → logprob: -15.829712867736816
    8. '_other' → logprob: -16.4547119140625
    9. '"' → logprob: -16.5797119140625
    10. '(other' → logprob: -17.3297119140625

Token 188: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014561474381480366
    2. ' :' → logprob: -9.00014591217041
    3. '):' → logprob: -11.00014591217041
    4. ')' → logprob: -12.50014591217041
    5. '   ' → logprob: -14.00014591217041
    6. ',' → logprob: -14.37514591217041
    7. '":' → logprob: -15.75014591217041
    8. '):
' → logprob: -16.750144958496094
    9. '_:' → logprob: -17.375144958496094
    10. '       ' → logprob: -18.000144958496094

Token 189: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5222001671791077
    2. '"' → logprob: -1.147200107574463
    3. ' Monday' → logprob: -2.897200107574463
    4. 'Monday' → logprob: -3.522200107574463
    5. ' ' → logprob: -6.022200107574463
    6. ')' → logprob: -6.522200107574463
    7. ' ' → logprob: -7.772200107574463
    8. ' monday' → logprob: -10.397200584411621
    9. '"M' → logprob: -10.397200584411621
    10. '"value' → logprob: -10.897200584411621

Token 190: 'Monday' (ID: 24282)
  Prédit: 'Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.0036004253197461367
    2. ' Monday' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.628600120544434
    4. '"' → logprob: -17.12860107421875
    5. 'Mond' → logprob: -17.37860107421875
    6. 'Tuesday' → logprob: -17.50360107421875
    7. ' monday' → logprob: -18.00360107421875
    8. '   ' → logprob: -18.87860107421875
    9. 'onday' → logprob: -18.87860107421875
    10. 'Morning' → logprob: -18.87860107421875

Token 191: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -2.248469718324486e-05
    2. 'Monday' → logprob: -10.875022888183594
    3. 'Number' → logprob: -13.000022888183594
    4. ' Saturday' → logprob: -14.250022888183594
    5. '_S' → logprob: -15.250022888183594
    6. 'Sunday' → logprob: -15.375022888183594
    7. '_s' → logprob: -17.125022888183594
    8. 'aturday' → logprob: -18.375022888183594
    9. 'Tuesday' → logprob: -18.500022888183594
    10. '[' → logprob: -18.500022888183594

Token 192: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -2.45848218582978e-06
    2. 'Monday' → logprob: -13.75000286102295
    3. 'Saturday' → logprob: -14.87500286102295
    4. 'number' → logprob: -15.00000286102295
    5. ')' → logprob: -15.12500286102295
    6. '_number' → logprob: -15.62500286102295
    7. '")' → logprob: -16.500001907348633
    8. '"' → logprob: -17.625001907348633
    9. ' ' → logprob: -17.625001907348633
    10. ' Number' → logprob: -17.625001907348633

Token 193: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06197631359100342
    2. '")' → logprob: -2.811976432800293
    3. ' )' → logprob: -12.811976432800293
    4. ' ")' → logprob: -12.936976432800293
    5. '):' → logprob: -13.561976432800293
    6. ')")' → logprob: -13.561976432800293
    7. '"):' → logprob: -15.186976432800293
    8. '`)' → logprob: -15.686976432800293
    9. '):
' → logprob: -15.811976432800293
    10. '"' → logprob: -16.311975479125977

Token 194: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24155986309051514
    2. ')' → logprob: -1.6165598630905151
    3. '->' → logprob: -5.366559982299805
    4. '):' → logprob: -5.491559982299805
    5. ' ->' → logprob: -5.741559982299805
    6. ' :' → logprob: -6.491559982299805
    7. '   ' → logprob: -6.866559982299805
    8. ')->' → logprob: -7.241559982299805
    9. '(' → logprob: -8.366559982299805
    10. '       ' → logprob: -8.491559982299805

Token 195: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.7551417350769043
    2. '"' → logprob: -1.1301417350769043
    3. ' Monday' → logprob: -1.7551417350769043
    4. 'Monday' → logprob: -3.3801417350769043
    5. ' ' → logprob: -9.630142211914062
    6. ' ' → logprob: -10.380142211914062
    7. ' None' → logprob: -11.130142211914062
    8. ' int' → logprob: -12.005142211914062
    9. '"M' → logprob: -12.505142211914062
    10. 'int' → logprob: -12.630142211914062

Token 196: 'Monday' (ID: 24282)
  Prédit: 'Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.000488110730657354
    2. ' Monday' → logprob: -7.62548828125
    3. 'Mond' → logprob: -18.37548828125
    4. ' ' → logprob: -18.62548828125
    5. 'Tuesday' → logprob: -18.75048828125
    6. 'Morning' → logprob: -18.87548828125
    7. '```' → logprob: -19.25048828125
    8. 'int' → logprob: -19.37548828125
    9. '`' → logprob: -20.00048828125
    10. 'Moon' → logprob: -20.25048828125

Token 197: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.018180495128035545
    2. 'Number' → logprob: -4.0181803703308105
    3. '_number' → logprob: -11.393180847167969
    4. 'Monday' → logprob: -11.393180847167969
    5. 'Sunday' → logprob: -13.143180847167969
    6. ' Saturday' → logprob: -13.268180847167969
    7. '_Number' → logprob: -13.268180847167969
    8. '_S' → logprob: -13.518180847167969
    9. '_s' → logprob: -14.643180847167969
    10. 'number' → logprob: -15.268180847167969

Token 198: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9361264946837764e-07
    2. 'number' → logprob: -16.75
    3. 'Monday' → logprob: -17.25
    4. '_number' → logprob: -17.75
    5. ' Number' → logprob: -17.875
    6. 'Saturday' → logprob: -18.0
    7. '   ' → logprob: -18.5
    8. '_Number' → logprob: -18.5
    9. '```' → logprob: -19.375
    10. ' ' → logprob: -19.75

Token 199: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.012016956694424152
    2. '":
' → logprob: -5.012016773223877
    3. ':' → logprob: -5.512016773223877
    4. '(":' → logprob: -6.887016773223877
    5. '):' → logprob: -9.512017250061035
    6. ':
' → logprob: -10.012017250061035
    7. '"' → logprob: -10.762017250061035
    8. '():' → logprob: -10.762017250061035
    9. '":
' → logprob: -10.762017250061035
    10. '):
' → logprob: -11.137017250061035

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01522071287035942
    2. ' value' → logprob: -5.390220642089844
    3. ' quotient' → logprob: -5.890220642089844
    4. 'value' → logprob: -6.265220642089844
    5. ' if' → logprob: -6.265220642089844
    6. 'result' → logprob: -6.890220642089844
    7. 'if' → logprob: -7.140220642089844
    8. 'div' → logprob: -7.265220642089844
    9. ' divisor' → logprob: -7.765220642089844
    10. 'quot' → logprob: -7.890220642089844

Token 201: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31116390228271484
    2. 'quot' → logprob: -2.186163902282715
    3. ' quotient' → logprob: -2.811163902282715
    4. ' if' → logprob: -2.811163902282715
    5. 'result' → logprob: -4.061163902282715
    6. '       ' → logprob: -4.186163902282715
    7. 'product' → logprob: -7.061163902282715
    8. 'div' → logprob: -7.186163902282715
    9. 'value' → logprob: -8.186163902282715
    10. 'return' → logprob: -8.811163902282715

Token 202: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1324695646762848
    2. 'self' → logprob: -2.132469654083252
    3. ' other' → logprob: -5.507469654083252
    4. ' self' → logprob: -6.632469654083252
    5. 'not' → logprob: -8.882469177246094
    6. ' not' → logprob: -11.632469177246094
    7. '(other' → logprob: -12.757469177246094
    8. '(self' → logprob: -14.757469177246094
    9. 'product' → logprob: -14.757469177246094
    10. 'Other' → logprob: -15.007469177246094

Token 203: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.9027791495318525e-05
    2. 'value' → logprob: -11.125019073486328
    3. '.' → logprob: -12.500019073486328
    4. '%' → logprob: -14.875019073486328
    5. '.values' → logprob: -16.375019073486328
    6. '$value' → logprob: -17.875019073486328
    7. ' value' → logprob: -18.000019073486328
    8. '.user' → logprob: -18.625019073486328
    9. ' .' → logprob: -18.750019073486328
    10. 'Value' → logprob: -18.875019073486328

Token 204: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3132999539375305
    2. '%' → logprob: -1.3132998943328857
    3. '%s' → logprob: -10.438300132751465
    4. ' ' → logprob: -13.313300132751465
    5. ' <' → logprob: -13.563300132751465
    6. ' ' → logprob: -13.563300132751465
    7. '%d' → logprob: -13.938300132751465
    8. '<' → logprob: -13.938300132751465
    9. '%n' → logprob: -14.188300132751465
    10. '%e' → logprob: -14.688300132751465

Token 205: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0004306692280806601
    2. ' other' → logprob: -7.750430583953857
    3. '(other' → logprob: -17.875431060791016
    4. ' ' → logprob: -18.125431060791016
    5. '   ' → logprob: -19.250431060791016
    6. '_other' → logprob: -19.625431060791016
    7. '  ' → logprob: -20.000431060791016
    8. '.other' → logprob: -20.250431060791016
    9. 'Other' → logprob: -20.375431060791016
    10. '0' → logprob: -20.625431060791016

Token 206: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.750004768371582
    3. 'value' → logprob: -13.375004768371582
    4. '.values' → logprob: -17.000003814697266
    5. '.val' → logprob: -17.500003814697266
    6. ').' → logprob: -17.750003814697266
    7. ' .' → logprob: -18.375003814697266
    8. '}.' → logprob: -18.750003814697266
    9. '```' → logprob: -19.125003814697266
    10. '`.' → logprob: -19.500003814697266

Token 207: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6933202147483826
    2. '!=' → logprob: -0.6933202147483826
    3. '==' → logprob: -8.943320274353027
    4. ':' → logprob: -11.068320274353027
    5. ' ==' → logprob: -11.568320274353027
    6. ')!=' → logprob: -11.693320274353027
    7. '()!=' → logprob: -13.068320274353027
    8. '!==' → logprob: -13.443320274353027
    9. '```' → logprob: -13.693320274353027
    10. '   ' → logprob: -13.818320274353027

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.12510871887207
    4. '  ' → logprob: -18.87510871887207
    5. '       ' → logprob: -19.87510871887207
    6. '    ' → logprob: -20.62510871887207
    7. '۰' → logprob: -21.00010871887207
    8. '  ' → logprob: -21.12510871887207
    9. '```' → logprob: -21.12510871887207
    10. '     ' → logprob: -21.93760871887207

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.8750057220459
    4. '```' → logprob: -21.1250057220459
    5. '۰' → logprob: -21.6250057220459
    6. '  ' → logprob: -21.6250057220459
    7. '  ' → logprob: -22.0000057220459
    8. 'not' → logprob: -22.3750057220459
    9. '       ' → logprob: -22.7500057220459
    10. 'int' → logprob: -22.8750057220459

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6936785578727722
    2. ':
' → logprob: -0.6936785578727722
    3. ' or' → logprob: -8.068678855895996
    4. '           ' → logprob: -9.443678855895996
    5. '       ' → logprob: -9.568678855895996
    6. ' and' → logprob: -10.443678855895996
    7. ',' → logprob: -10.568678855895996
    8. ':

' → logprob: -12.068678855895996
    9. ':
' → logprob: -13.568678855895996
    10. '):
' → logprob: -13.568678855895996

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03629031032323837
    2. ' raise' → logprob: -4.036290168762207
    3. '       ' → logprob: -4.911290168762207
    4. '        ' → logprob: -5.161290168762207
    5. ' return' → logprob: -6.286290168762207
    6. '        
' → logprob: -6.911290168762207
    7. ' 
' → logprob: -7.411290168762207
    8. '            ' → logprob: -7.661290168762207
    9. 'raise' → logprob: -8.161290168762207
    10. '
' → logprob: -9.036290168762207

Token 212: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.31674107909202576
    2. 'raise' (adapté à ' raise') → logprob: -1.3167411088943481
    3. '           ' → logprob: -5.691740989685059
    4. '	raise' → logprob: -9.316740989685059
    5. '```' → logprob: -12.691740989685059
    6. '            ' → logprob: -13.441740989685059
    7. 'Raise' → logprob: -13.691740989685059
    8. '
' → logprob: -13.941740989685059
    9. '_raise' → logprob: -14.691740989685059
    10. '        ' → logprob: -14.816740989685059

Token 213: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.38689443469047546
    2. 'Value' → logprob: -1.1368944644927979
    3. 'Zero' → logprob: -11.011894226074219
    4. ' Zero' → logprob: -12.136894226074219
    5. 'Arithmetic' → logprob: -14.386894226074219
    6. '	Value' → logprob: -14.636894226074219
    7. '_value' → logprob: -15.761894226074219
    8. ' Arithmetic' → logprob: -16.01189422607422
    9. '   ' → logprob: -16.51189422607422
    10. '(Value' → logprob: -16.76189422607422

Token 214: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0005566088366322219
    2. 'rror' → logprob: -7.500556468963623
    3. 'Value' → logprob: -12.625556945800781
    4. 'SError' → logprob: -15.750556945800781
    5. 'n' → logprob: -17.12555694580078
    6. '	Error' → logprob: -17.62555694580078
    7. 'LError' → logprob: -17.87555694580078
    8. ' Error' → logprob: -17.87555694580078
    9. 'r' → logprob: -18.00055694580078
    10. 'ror' → logprob: -18.12555694580078

Token 215: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5782510638237
    2. '("' → logprob: -0.8282510638237
    3. '(
' → logprob: -6.078250885009766
    4. '(f' → logprob: -11.328250885009766
    5. '(
' → logprob: -13.203250885009766
    6. '"' → logprob: -13.953250885009766
    7. '(

' → logprob: -13.953250885009766
    8. '('' → logprob: -14.703250885009766
    9. '       ' → logprob: -15.453250885009766
    10. '           ' → logprob: -16.078250885009766

Token 216: '"{' (ID: 27510)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -8.0536883615423e-05
    2. '"The' → logprob: -10.500080108642578
    3. ' "' → logprob: -11.000080108642578
    4. 'Cannot' → logprob: -11.625080108642578
    5. ' f' → logprob: -11.875080108642578
    6. 'Division' → logprob: -12.125080108642578
    7. '"In' → logprob: -12.625080108642578
    8. 'Integer' → logprob: -13.250080108642578
    9. 'f' → logprob: -13.625080108642578
    10. ' ' → logprob: -13.625080108642578

Token 217: 'other' (ID: 2141)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5306717157363892
    2. 'other' → logprob: -0.9056717157363892
    3. ' self' → logprob: -5.5306715965271
    4. ' other' → logprob: -5.6556715965271
    5. ' ' → logprob: -10.905672073364258
    6. '}' → logprob: -11.530672073364258
    7. 'Other' → logprob: -12.405672073364258
    8. '(other' → logprob: -12.405672073364258
    9. 'value' → logprob: -12.905672073364258
    10. ''' → logprob: -12.905672073364258

Token 218: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.005159631837159395
    2. '}.' → logprob: -5.880159854888916
    3. '.' → logprob: -6.130159854888916
    4. 'value' → logprob: -9.380159378051758
    5. ').' → logprob: -10.505159378051758
    6. '".' → logprob: -10.880159378051758
    7. ' .' → logprob: -10.880159378051758
    8. '`.' → logprob: -11.505159378051758
    9. '}' → logprob: -12.505159378051758
    10. ''.' → logprob: -13.005159378051758

Token 219: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0029771067202091217
    2. '.value' → logprob: -6.627976894378662
    3. ' does' → logprob: -7.752976894378662
    4. ')' → logprob: -8.12797737121582
    5. ' is' → logprob: -9.00297737121582
    6. '"' → logprob: -9.00297737121582
    7. 'does' → logprob: -9.12797737121582
    8. ' must' → logprob: -9.25297737121582
    9. ' }' → logprob: -9.50297737121582
    10. ' ' → logprob: -9.50297737121582

Token 220: ' does' (ID: 2226)
  Prédit: ' does'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -0.054331451654434204
    2. ')' → logprob: -4.179331302642822
    3. '"' → logprob: -4.429331302642822
    4. '}' → logprob: -4.554331302642822
    5. ' is' → logprob: -5.054331302642822
    6. 'does' → logprob: -5.054331302642822
    7. ' not' → logprob: -7.179331302642822
    8. ' must' → logprob: -7.804331302642822
    9. ' ' → logprob: -8.17933177947998
    10. ' "' → logprob: -8.30433177947998

Token 221: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5759426355361938
    2. ' not' → logprob: -0.8259426355361938
    3. 'n't' → logprob: -12.825942993164062
    4. ')' → logprob: -15.575942993164062
    5. '	not' → logprob: -15.700942993164062
    6. '_not' → logprob: -17.575942993164062
    7. '<|end|>' → logprob: -17.575942993164062
    8. ' ' → logprob: -17.575942993164062
    9. '>' → logprob: -17.825942993164062
    10. '```' → logprob: -18.075942993164062

Token 222: ' divide' (ID: 38484)
  Prédit: ' divide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divide' → logprob: -0.22609366476535797
    2. 'divide' → logprob: -1.6010936498641968
    3. 'div' → logprob: -7.351093769073486
    4. ' divid' → logprob: -11.226093292236328
    5. ' divides' → logprob: -11.726093292236328
    6. ' evenly' → logprob: -12.476093292236328
    7. ' dividir' → logprob: -12.601093292236328
    8. '_div' → logprob: -12.976093292236328
    9. ' divisor' → logprob: -13.351093292236328
    10. '```' → logprob: -13.976093292236328

Token 223: ' {' (ID: 354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19244426488876343
    2. 'self' → logprob: -2.192444324493408
    3. ' into' → logprob: -3.692444324493408
    4. ' {' → logprob: -3.942444324493408
    5. ' the' → logprob: -4.442444324493408
    6. '{' → logprob: -5.567444324493408
    7. ' ' → logprob: -6.567444324493408
    8. ' ' → logprob: -6.692444324493408
    9. '```' → logprob: -8.19244384765625
    10. ' exactly' → logprob: -8.94244384765625

Token 224: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04861098527908325
    2. ' self' → logprob: -3.0486109256744385
    3. '{' → logprob: -11.04861068725586
    4. ' ' → logprob: -12.54861068725586
    5. ' {' → logprob: -13.04861068725586
    6. '[self' → logprob: -14.04861068725586
    7. '(self' → logprob: -14.92361068725586
    8. '}' → logprob: -15.17361068725586
    9. '	self' → logprob: -15.54861068725586
    10. '   ' → logprob: -16.42361068725586

Token 225: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0003213997988495976
    2. '.' → logprob: -8.375321388244629
    3. 'value' → logprob: -9.500321388244629
    4. ' .' → logprob: -11.125321388244629
    5. '}.' → logprob: -14.500321388244629
    6. ' value' → logprob: -15.000321388244629
    7. ' ' → logprob: -16.000322341918945
    8. ').' → logprob: -16.750322341918945
    9. '.code' → logprob: -17.125322341918945
    10. '.user' → logprob: -17.375322341918945

Token 226: '}")
' (ID: 23577)
  Prédit: '}")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")
' → logprob: -0.9698352217674255
    2. '")' → logprob: -1.2198352813720703
    3. '}")' → logprob: -1.3448352813720703
    4. '")
' → logprob: -3.0948352813720703
    5. ')")
' → logprob: -4.71983528137207
    6. '}' → logprob: -5.96983528137207
    7. '       ' → logprob: -5.96983528137207
    8. ' }' → logprob: -6.34483528137207
    9. ')' → logprob: -6.96983528137207
    10. ' )' → logprob: -7.09483528137207

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014859484508633614
    2. ' return' → logprob: -9.62514877319336
    3. 'return' → logprob: -10.50014877319336
    4. '
' → logprob: -10.75014877319336
    5. '        
' → logprob: -10.87514877319336
    6. '<|end|>' → logprob: -12.50014877319336
    7. '' → logprob: -12.75014877319336
    8. '   ' → logprob: -13.12514877319336
    9. '           ' → logprob: -13.87514877319336
    10. '	' → logprob: -13.87514877319336

Token 228: ' quotient' (ID: 169302)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20461039245128632
    2. '       ' → logprob: -2.2046103477478027
    3. ' return' → logprob: -2.7046103477478027
    4. 'result' → logprob: -4.954610347747803
    5. ' quotient' → logprob: -8.454610824584961
    6. 'quot' → logprob: -8.704610824584961
    7. ' result' → logprob: -8.829610824584961
    8. '
' → logprob: -9.454610824584961
    9. '        
' → logprob: -9.579610824584961
    10. '```' → logprob: -9.704610824584961

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ',' → logprob: -17.688261032104492
    4. ' ' → logprob: -18.063261032104492
    5. '=

' → logprob: -18.063261032104492
    6. ' ' → logprob: -18.188261032104492
    7. '   ' → logprob: -18.813261032104492
    8. ' =
' → logprob: -19.063261032104492
    9. '	' → logprob: -19.188261032104492
    10. '＝' → logprob: -19.688261032104492

Token 230: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03804412856698036
    2. 'self' → logprob: -3.2880442142486572
    3. '       ' → logprob: -13.038043975830078
    4. '(self' → logprob: -15.788043975830078
    5. ' ' → logprob: -15.913043975830078
    6. ' ' → logprob: -16.038043975830078
    7. '	self' → logprob: -16.413043975830078
    8. '   ' → logprob: -18.038043975830078
    9. '[self' → logprob: -18.163043975830078
    10. '           ' → logprob: -18.538043975830078

Token 231: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0006473870598711073
    2. '.' → logprob: -7.37564754486084
    3. 'value' → logprob: -10.87564754486084
    4. ' .' → logprob: -13.37564754486084
    5. '"value' → logprob: -16.250646591186523
    6. ''value' → logprob: -16.875646591186523
    7. ' value' → logprob: -17.500646591186523
    8. '$value' → logprob: -17.875646591186523
    9. '.user' → logprob: -18.125646591186523
    10. '```' → logprob: -18.250646591186523

Token 232: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.005929982289671898
    2. '//' → logprob: -5.130929946899414
    3. ' ' → logprob: -14.005929946899414
    4. ' ' → logprob: -15.630929946899414
    5. '#' → logprob: -15.755929946899414
    6. '   ' → logprob: -17.130929946899414
    7. '       ' → logprob: -17.255929946899414
    8. '```' → logprob: -17.380929946899414
    9. '"' → logprob: -17.755929946899414
    10. '//=' → logprob: -17.880929946899414

Token 233: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.02324547804892063
    2. ' other' → logprob: -3.7732455730438232
    3. '(other' → logprob: -18.398244857788086
    4. 'Other' → logprob: -19.648244857788086
    5. '_other' → logprob: -20.523244857788086
    6. '.other' → logprob: -20.523244857788086
    7. ' ' → logprob: -22.523244857788086
    8. '   ' → logprob: -22.898244857788086
    9. '其他' → logprob: -23.273244857788086
    10. '       ' → logprob: -24.023244857788086

Token 234: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00020377879263833165
    2. 'value' → logprob: -8.500204086303711
    3. ' .' → logprob: -15.875204086303711
    4. '.' → logprob: -15.875204086303711
    5. '_value' → logprob: -19.25020408630371
    6. '.values' → logprob: -20.00020408630371
    7. ' value' → logprob: -20.00020408630371
    8. ').' → logprob: -20.12520408630371
    9. ''value' → logprob: -20.50020408630371
    10. '	value' → logprob: -20.87520408630371

Token 235: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08100154995918274
    2. '       ' → logprob: -2.7060015201568604
    3. 'return' → logprob: -5.4560017585754395
    4. ' return' → logprob: -5.8310017585754395
    5. ' 
' → logprob: -6.3310017585754395
    6. '        
' → logprob: -6.7060017585754395
    7. '
' → logprob: -7.9560017585754395
    8. '  
' → logprob: -8.456001281738281
    9. '<|end|>' → logprob: -8.956001281738281
    10. '    
' → logprob: -9.956001281738281

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6369239091873169
    2. '
' → logprob: -1.136923909187317
    3. 'return' → logprob: -2.7619237899780273
    4. ' return' → logprob: -3.2619237899780273
    5. '<|end|>' → logprob: -3.6369237899780273
    6. ' 
' → logprob: -4.386923789978027
    7. '        
' → logprob: -5.136923789978027
    8. '\n' → logprob: -7.136923789978027
    9. '  
' → logprob: -7.261923789978027
    10. '
' → logprob: -7.511923789978027

Token 237: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1003919169306755
    2. ' return' → logprob: -2.3503918647766113
    3. '       ' → logprob: -8.60039234161377
    4. '
' → logprob: -13.97539234161377
    5. '```' → logprob: -15.85039234161377
    6. '	return' → logprob: -16.225391387939453
    7. '        
' → logprob: -16.350391387939453
    8. '   ' → logprob: -17.100391387939453
    9. ':return' → logprob: -18.225391387939453
    10. '{return' → logprob: -18.600391387939453

Token 238: ' Monday' (ID: 10715)
  Prédit: ' Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Monday' → logprob: -0.575939416885376
    2. 'Monday' → logprob: -0.825939416885376
    3. ' monday' → logprob: -18.825939178466797
    4. ' Montag' → logprob: -19.200939178466797
    5. '   ' → logprob: -19.825939178466797
    6. ' Mondays' → logprob: -20.450939178466797
    7. ' ' → logprob: -20.575939178466797
    8. 'Mond' → logprob: -20.700939178466797
    9. 'M' → logprob: -20.825939178466797
    10. '(M' → logprob: -21.575939178466797

Token 239: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -6.704273118884885e-07
    2. ' Saturday' → logprob: -14.250000953674316
    3. 'Sunday' → logprob: -18.125
    4. '-S' → logprob: -18.25
    5. '_S' → logprob: -18.625
    6. 'aturday' → logprob: -19.0
    7. 'S' → logprob: -19.125
    8. 'Monday' → logprob: -19.625
    9. 'Satellite' → logprob: -19.75
    10. '-' → logprob: -20.625

Token 240: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -6.704273118884885e-07
    2. 'number' → logprob: -14.500000953674316
    3. '_number' → logprob: -16.25
    4. 'Numbers' → logprob: -16.875
    5. ' Number' → logprob: -17.5
    6. '_Number' → logprob: -17.875
    7. 'Saturday' → logprob: -18.25
    8. 'umber' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. '_NUMBER' → logprob: -19.125

Token 241: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. 'quot' → logprob: -17.25
    3. ' (' → logprob: -19.0
    4. '(
' → logprob: -19.375
    5. '(qu' → logprob: -19.625
    6. '((' → logprob: -20.75
    7. '```' → logprob: -21.25
    8. '(q' → logprob: -21.75
    9. '(quantity' → logprob: -22.125
    10. '(

' → logprob: -22.375

Token 242: 'quot' (ID: 17555)
  Prédit: 'quot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -1.1472419600977446e-06
    2. ' quotient' → logprob: -13.875000953674316
    3. '       ' → logprob: -17.000001907348633
    4. 'quotation' → logprob: -17.250001907348633
    5. 'quote' → logprob: -17.500001907348633
    6. 'qu' → logprob: -18.000001907348633
    7. 'quest' → logprob: -18.750001907348633
    8. 'quit' → logprob: -19.000001907348633
    9. 'quota' → logprob: -19.000001907348633
    10. 'quo' → logprob: -19.500001907348633

Token 243: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00030388421146199107
    2. 'ent' → logprob: -8.250304222106934
    3. 'ot' → logprob: -10.125304222106934
    4. 'uent' → logprob: -13.500304222106934
    5. 'quot' → logprob: -15.500304222106934
    6. '       ' → logprob: -15.500304222106934
    7. '   ' → logprob: -16.125303268432617
    8. ')' → logprob: -16.625303268432617
    9. '```' → logprob: -16.750303268432617
    10. 'tent' → logprob: -17.000303268432617

Token 244: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.625003814697266
    3. '       ' → logprob: -16.750003814697266
    4. ' )' → logprob: -16.750003814697266
    5. ')return' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '<|end|>' → logprob: -17.125003814697266
    8. '}' → logprob: -18.625003814697266
    9. ')}' → logprob: -19.000003814697266
    10. ')

' → logprob: -19.125003814697266

Token 245: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0036771558225154877
    2. '<|end|>' → logprob: -5.7536773681640625
    3. ' def' → logprob: -8.753677368164062
    4. '   ' → logprob: -9.128677368164062
    5. '```' → logprob: -9.503677368164062
    6. '#' → logprob: -9.503677368164062
    7. '@property' → logprob: -10.003677368164062
    8. '__' → logprob: -11.753677368164062
    9. ' ' → logprob: -11.753677368164062
    10. ')' → logprob: -12.253677368164062

Token 247: ' divides' (ID: 144028)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001941726659424603
    2. ' __' → logprob: -6.251941680908203
    3. 'def' → logprob: -11.251941680908203
    4. '___' → logprob: -16.626941680908203
    5. '.__' → logprob: -17.001941680908203
    6. ' def' → logprob: -17.251941680908203
    7. 'is' → logprob: -18.376941680908203
    8. ' ' → logprob: -19.126941680908203
    9. '   ' → logprob: -19.501941680908203
    10. '**' → logprob: -19.501941680908203

Token 248: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2842308680992573e-05
    2. '(' → logprob: -10.750022888183594
    3. ' (' → logprob: -14.000022888183594
    4. 'self' → logprob: -15.375022888183594
    5. '(
' → logprob: -16.125022888183594
    6. '(other' → logprob: -16.625022888183594
    7. '(this' → logprob: -17.375022888183594
    8. '(s' → logprob: -17.750022888183594
    9. '__(' → logprob: -17.750022888183594
    10. '_(' → logprob: -18.125022888183594

Token 249: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48131388425827026
    2. '(self' → logprob: -0.9813138842582703
    3. ')' → logprob: -5.606313705444336
    4. 'other' → logprob: -6.106313705444336
    5. ' self' → logprob: -7.606313705444336
    6. ')(' → logprob: -7.731313705444336
    7. '(' → logprob: -8.856313705444336
    8. ' (' → logprob: -10.231313705444336
    9. '   ' → logprob: -10.231313705444336
    10. 'def' → logprob: -10.856313705444336

Token 250: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.48585349321365356
    2. 'self' → logprob: -0.9858534932136536
    3. ' other' → logprob: -4.485853672027588
    4. ' self' → logprob: -7.735853672027588
    5. '   ' → logprob: -13.23585319519043
    6. '_other' → logprob: -14.61085319519043
    7. '       ' → logprob: -14.86085319519043
    8. 'Other' → logprob: -14.86085319519043
    9. '(self' → logprob: -16.36085319519043
    10. '	self' → logprob: -16.36085319519043

Token 251: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02128799445927143
    2. ')' → logprob: -4.39628791809082
    3. '(self' → logprob: -5.39628791809082
    4. 'self' → logprob: -5.64628791809082
    5. '"' → logprob: -8.39628791809082
    6. '):' → logprob: -8.52128791809082
    7. '   ' → logprob: -9.77128791809082
    8. ' self' → logprob: -9.77128791809082
    9. ' :' → logprob: -10.52128791809082
    10. '")' → logprob: -10.89628791809082

Token 252: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.2265705019235611
    2. '"' → logprob: -1.6015704870224
    3. '"value' → logprob: -7.6015706062316895
    4. ')' → logprob: -8.726570129394531
    5. '"M' → logprob: -8.726570129394531
    6. 'int' → logprob: -8.976570129394531
    7. '"class' → logprob: -9.726570129394531
    8. ' ' → logprob: -10.726570129394531
    9. 'Monday' → logprob: -10.726570129394531
    10. ''' → logprob: -11.601570129394531

Token 253: 'Monday' (ID: 24282)
  Prédit: 'Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -2.339278580620885e-06
    2. ' Monday' → logprob: -13.000001907348633
    3. ' ' → logprob: -17.750001907348633
    4. '   ' → logprob: -17.750001907348633
    5. 'Tuesday' → logprob: -18.125001907348633
    6. 'Mond' → logprob: -18.125001907348633
    7. 'Sunday' → logprob: -18.250001907348633
    8. ')' → logprob: -18.625001907348633
    9. 'Saturday' → logprob: -19.250001907348633
    10. 'Wednesday' → logprob: -19.375001907348633

Token 254: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -5.512236498361744e-07
    2. ' Saturday' → logprob: -14.875000953674316
    3. 'Monday' → logprob: -17.0
    4. 'Sunday' → logprob: -17.625
    5. 'aturday' → logprob: -18.125
    6. ')' → logprob: -18.375
    7. '```' → logprob: -19.0
    8. 'Number' → logprob: -19.875
    9. 'Wednesday' → logprob: -20.25
    10. '
' → logprob: -20.5

Token 255: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: 0.0
    2. ')' → logprob: -19.125
    3. 'number' → logprob: -19.125
    4. 'Numbers' → logprob: -19.75
    5. '```' → logprob: -19.75
    6. '_number' → logprob: -20.125
    7. ' Number' → logprob: -20.75
    8. '")' → logprob: -20.75
    9. '
' → logprob: -20.875
    10. '[' → logprob: -21.125

Token 256: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.023288452997803688
    2. ')' → logprob: -3.7732884883880615
    3. ')")' → logprob: -10.52328872680664
    4. 'self' → logprob: -11.14828872680664
    5. '"' → logprob: -14.89828872680664
    6. '(self' → logprob: -15.14828872680664
    7. ' ")' → logprob: -15.14828872680664
    8. '')' → logprob: -15.64828872680664
    9. '`)' → logprob: -15.64828872680664
    10. ')"' → logprob: -16.14828872680664

Token 257: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016658969223499298
    2. '(self' → logprob: -4.766658782958984
    3. 'self' → logprob: -5.641658782958984
    4. ' ->' → logprob: -6.391658782958984
    5. '->' → logprob: -6.766658782958984
    6. ':' → logprob: -7.516658782958984
    7. '       ' → logprob: -8.016658782958984
    8. ' self' → logprob: -8.266658782958984
    9. ')->' → logprob: -8.641658782958984
    10. '")' → logprob: -8.766658782958984

Token 258: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.062020789831876755
    2. ' bool' → logprob: -2.812020778656006
    3. '(bool' → logprob: -10.562021255493164
    4. '"' → logprob: -10.937021255493164
    5. '<bool' → logprob: -12.312021255493164
    6. '	bool' → logprob: -13.562021255493164
    7. 'True' → logprob: -13.687021255493164
    8. 'Bool' → logprob: -13.812021255493164
    9. '_bool' → logprob: -14.312021255493164
    10. 'object' → logprob: -15.062021255493164

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026935948058962822
    2. '       ' → logprob: -4.776936054229736
    3. '   ' → logprob: -5.026936054229736
    4. ')' → logprob: -5.026936054229736
    5. '(self' → logprob: -5.651936054229736
    6. ':
' → logprob: -7.651936054229736
    7. '(' → logprob: -7.901936054229736
    8. '):' → logprob: -8.901935577392578
    9. '->' → logprob: -9.026935577392578
    10. ',' → logprob: -9.151935577392578

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01569012552499771
    2. ' return' → logprob: -4.265690326690674
    3. '   ' → logprob: -6.765690326690674
    4. 'return' → logprob: -8.015689849853516
    5. '
' → logprob: -10.890689849853516
    6. '	return' → logprob: -11.515689849853516
    7. ' 
' → logprob: -13.140689849853516
    8. '```' → logprob: -13.515689849853516
    9. ' ' → logprob: -13.765689849853516
    10. '    ' → logprob: -13.765689849853516

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007997421780601144
    2. '       ' → logprob: -7.375799655914307
    3. ' return' → logprob: -9.000800132751465
    4. '
' → logprob: -10.000800132751465
    5. '	return' → logprob: -13.375800132751465
    6. '```' → logprob: -13.875800132751465
    7. '{return' → logprob: -14.500800132751465
    8. 'other' → logprob: -14.625800132751465
    9. '   ' → logprob: -14.875800132751465
    10. '        
' → logprob: -15.250800132751465

Token 262: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0052874768152832985
    2. ' other' → logprob: -5.2552876472473145
    3. 'self' → logprob: -10.130287170410156
    4. '(other' → logprob: -11.255287170410156
    5. ' self' → logprob: -14.130287170410156
    6. '   ' → logprob: -17.755287170410156
    7. '(self' → logprob: -17.880287170410156
    8. ' (' → logprob: -19.505287170410156
    9. '_other' → logprob: -19.755287170410156
    10. '.other' → logprob: -19.755287170410156

Token 263: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -11.125019073486328
    3. 'value' → logprob: -12.875019073486328
    4. ' .' → logprob: -14.000019073486328
    5. '.val' → logprob: -15.375019073486328
    6. ').' → logprob: -15.500019073486328
    7. '%' → logprob: -16.375019073486328
    8. '.user' → logprob: -17.375019073486328
    9. '.mod' → logprob: -17.375019073486328
    10. '.values' → logprob: -17.625019073486328

Token 264: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38687849044799805
    2. ' %' → logprob: -1.136878490447998
    3. '%s' → logprob: -12.386878967285156
    4. ' ' → logprob: -14.386878967285156
    5. ' ' → logprob: -14.386878967285156
    6. '%e' → logprob: -14.386878967285156
    7. '%d' → logprob: -14.886878967285156
    8. '%i' → logprob: -15.136878967285156
    9. '.value' → logprob: -15.136878967285156
    10. '```' → logprob: -15.386878967285156

Token 265: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003361774142831564
    2. ' self' → logprob: -8.000336647033691
    3. '       ' → logprob: -14.250336647033691
    4. '(self' → logprob: -18.000335693359375
    5. '=self' → logprob: -19.125335693359375
    6. '	self' → logprob: -19.250335693359375
    7. '   ' → logprob: -19.375335693359375
    8. '[self' → logprob: -19.500335693359375
    9. ' ' → logprob: -20.875335693359375
    10. '           ' → logprob: -21.125335693359375

Token 266: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -4.5252596464706585e-05
    2. '.' → logprob: -10.125044822692871
    3. 'MOD' → logprob: -13.375044822692871
    4. 'value' → logprob: -13.625044822692871
    5. '.MOD' → logprob: -13.750044822692871
    6. ' .' → logprob: -14.000044822692871
    7. '.mod' → logprob: -15.000044822692871
    8. '.values' → logprob: -16.875045776367188
    9. '.val' → logprob: -17.500045776367188
    10. '_MOD' → logprob: -17.500045776367188

Token 267: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20141607522964478
    2. ' ==' → logprob: -1.701416015625
    3. '=' → logprob: -13.951416015625
    4. '===' → logprob: -14.451416015625
    5. '()==' → logprob: -14.576416015625
    6. '==
' → logprob: -15.201416015625
    7. ')==' → logprob: -15.451416015625
    8. '```' → logprob: -15.701416015625
    9. ' ' → logprob: -15.826416015625
    10. '0' → logprob: -16.826416015625

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -16.875123977661133
    4. '  ' → logprob: -19.750123977661133
    5. '۰' → logprob: -20.500123977661133
    6. '00' → logprob: -22.062623977661133
    7. '```' → logprob: -22.125123977661133
    8. '
' → logprob: -22.187623977661133
    9. '       ' → logprob: -22.250123977661133
    10. '    ' → logprob: -22.375123977661133

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.0
    4. '۰' → logprob: -20.25
    5. '  ' → logprob: -21.5
    6. '```' → logprob: -21.625
    7. '  ' → logprob: -21.75
    8. 'zero' → logprob: -22.125
    9. '٠' → logprob: -22.25
    10. '०' → logprob: -22.75

Token 270: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' Monday' (ID: 10715)
  Prédit: 'Tuesday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuesday' → logprob: -0.3004477024078369
    2. ' Tuesday' → logprob: -2.050447702407837
    3. 'Monday' → logprob: -2.675447702407837
    4. 'Sunday' → logprob: -4.425447463989258
    5. 'Saturday' → logprob: -4.675447463989258
    6. 'Set' → logprob: -5.175447463989258
    7. ' Monday' → logprob: -5.175447463989258
    8. 'Friday' → logprob: -5.300447463989258
    9. 'List' → logprob: -5.425447463989258
    10. 'Wednesday' → logprob: -5.675447463989258

Token 273: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.0009544557542540133
    2. 'Sunday' → logprob: -8.250954627990723
    3. 'Number' → logprob: -8.500954627990723
    4. 'Tuesday' → logprob: -9.500954627990723
    5. 'Friday' → logprob: -9.500954627990723
    6. 'Wednesday' → logprob: -9.625954627990723
    7. '<|end|>' → logprob: -9.875954627990723
    8. 'Monday' → logprob: -10.000954627990723
    9. ' Saturday' → logprob: -10.000954627990723
    10. 'aturday' → logprob: -10.250954627990723

Token 274: 'Prime' (ID: 43017)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.002361974911764264
    2. 'Prime' → logprob: -7.62736177444458
    3. 'Factor' → logprob: -7.75236177444458
    4. 'Set' → logprob: -8.002362251281738
    5. 'Square' → logprob: -9.002362251281738
    6. 'Product' → logprob: -9.377362251281738
    7. 'Numbers' → logprob: -9.627362251281738
    8. 'number' → logprob: -9.627362251281738
    9. 'Multip' → logprob: -9.752362251281738
    10. 'Composite' → logprob: -9.877362251281738

Token 275: '(M' (ID: 6103)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04018612951040268
    2. ':
' → logprob: -3.4151861667633057
    3. '(M' → logprob: -5.165185928344727
    4. '(' → logprob: -7.290185928344727
    5. '(List' → logprob: -10.290185928344727
    6. '(
' → logprob: -10.540185928344727
    7. 'Monday' → logprob: -11.040185928344727
    8. '):' → logprob: -11.790185928344727
    9. ':

' → logprob: -11.915185928344727
    10. '{' → logprob: -12.290185928344727

Token 276: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -4.1318875446449965e-05
    2. 'Monday' → logprob: -10.500041007995605
    3. '```' → logprob: -11.875041007995605
    4. 'on' → logprob: -12.750041007995605
    5. 'ond' → logprob: -13.250041007995605
    6. '{' → logprob: -14.375041007995605
    7. 'onda' → logprob: -14.625041007995605
    8. 'onth' → logprob: -15.125041007995605
    9. '``' → logprob: -15.250041007995605
    10. '`' → logprob: -15.875041007995605

Token 277: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -5.512236498361744e-07
    2. ' Saturday' → logprob: -15.250000953674316
    3. 'aturday' → logprob: -16.25
    4. 'Number' → logprob: -16.625
    5. 'Monday' → logprob: -16.875
    6. '```' → logprob: -18.0
    7. '_S' → logprob: -18.375
    8. 's' → logprob: -18.625
    9. 'Wednesday' → logprob: -18.625
    10. ')' → logprob: -18.75

Token 278: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.011065982282161713
    2. 'Prime' → logprob: -4.51106595993042
    3. 'number' → logprob: -11.386066436767578
    4. 'prime' → logprob: -12.761066436767578
    5. '_number' → logprob: -13.886066436767578
    6. ')' → logprob: -14.636066436767578
    7. ' Number' → logprob: -14.761066436767578
    8. ' prime' → logprob: -14.761066436767578
    9. '_prime' → logprob: -15.261066436767578
    10. ' Prime' → logprob: -15.386066436767578

Token 279: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25199079513549805
    2. '):
' → logprob: -1.501990795135498
    3. '):
' → logprob: -10.001991271972656
    4. '):

' → logprob: -11.751991271972656
    5. ')' → logprob: -12.626991271972656
    6. ',' → logprob: -13.501991271972656
    7. ' ):' → logprob: -13.876991271972656
    8. '   ' → logprob: -14.126991271972656
    9. ':' → logprob: -14.876991271972656
    10. '[]):' → logprob: -15.126991271972656

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030166389420628548
    2. 'def' → logprob: -3.5301663875579834
    3. ' def' → logprob: -7.9051666259765625
    4. 'MOD' → logprob: -10.905166625976562
    5. ')' → logprob: -11.530166625976562
    6. ':' → logprob: -12.405166625976562
    7. '	def' → logprob: -13.030166625976562
    8. '```' → logprob: -13.655166625976562
    9. 'from' → logprob: -13.780166625976562
    10. '   ' → logprob: -13.905166625976562

Token 281: ' _' (ID: 1175)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17884913086891174
    2. 'MOD' → logprob: -2.553849220275879
    3. '   ' → logprob: -2.678849220275879
    4. 'PR' → logprob: -4.303849220275879
    5. ' def' → logprob: -6.178849220275879
    6. 'from' → logprob: -7.553849220275879
    7. 'import' → logprob: -7.928849220275879
    8. 'VALID' → logprob: -8.303849220275879
    9. '_MOD' → logprob: -9.053849220275879
    10. ' MOD' → logprob: -9.303849220275879

Token 282: 'com' (ID: 639)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.15620781481266022
    2. 'known' → logprob: -2.906207799911499
    3. '_known' → logprob: -3.906207799911499
    4. '_pr' → logprob: -4.406208038330078
    5. '_values' → logprob: -4.406208038330078
    6. 'prime' → logprob: -4.531208038330078
    7. ' primes' → logprob: -5.031208038330078
    8. 'values' → logprob: -5.031208038330078
    9. 'value' → logprob: -5.281208038330078
    10. 'mod' → logprob: -5.906208038330078

Token 283: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.17463204264640808
    2. 'posit' → logprob: -3.2996320724487305
    3. 'mon' → logprob: -3.5496320724487305
    4. 'puted' → logprob: -3.6746320724487305
    5. 'p' → logprob: -4.2996320724487305
    6. '_pos' → logprob: -4.2996320724487305
    7. '_' → logprob: -4.2996320724487305
    8. 'ponents' → logprob: -4.7996320724487305
    9. 'pleted' → logprob: -5.6746320724487305
    10. '_m' → logprob: -6.1746320724487305

Token 284: '_cache' (ID: 27045)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018316576024517417
    2. '_set' → logprob: -7.501831531524658
    3. 'es' → logprob: -7.876831531524658
    4. '_s' → logprob: -8.126832008361816
    5. '_candidates' → logprob: -8.376832008361816
    6. '_values' → logprob: -9.126832008361816
    7. '_cache' → logprob: -9.126832008361816
    8. '_numbers' → logprob: -9.501832008361816
    9. '_com' → logprob: -11.251832008361816
    10. '_f' → logprob: -11.376832008361816

Token 285: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04016724228858948
    2. ' =' → logprob: -3.4151673316955566
    3. '=' → logprob: -5.040167331695557
    4. ' :' → logprob: -11.165166854858398
    5. '=set' → logprob: -12.290166854858398
    6. 's' → logprob: -12.790166854858398
    7. '_set' → logprob: -13.665166854858398
    8. ':Set' → logprob: -13.665166854858398
    9. '_:' → logprob: -13.790166854858398
    10. ':set' → logprob: -14.665166854858398

Token 286: ' Dict' (ID: 55179)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.2014790177345276
    2. 'Dict' → logprob: -1.7014789581298828
    3. 'set' → logprob: -10.451478958129883
    4. ' Set' → logprob: -11.076478958129883
    5. 'List' → logprob: -11.076478958129883
    6. ' Dict' → logprob: -12.951478958129883
    7. 'dict' → logprob: -13.701478958129883
    8. '	Set' → logprob: -14.076478958129883
    9. '   ' → logprob: -14.701478958129883
    10. 'Dictionary' → logprob: -14.951478958129883

Token 287: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00010318557906430215
    2. 'int' → logprob: -9.250102996826172
    3. '<int' → logprob: -12.625102996826172
    4. '[' → logprob: -12.875102996826172
    5. '[str' → logprob: -14.750102996826172
    6. '[in' → logprob: -15.375102996826172
    7. '[M' → logprob: -15.500102996826172
    8. '[Int' → logprob: -16.750102996826172
    9. '=int' → logprob: -17.250102996826172
    10. '	int' → logprob: -17.250102996826172

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. ',int' → logprob: -10.875059127807617
    3. ',List' → logprob: -10.875059127807617
    4. ',bool' → logprob: -11.375059127807617
    5. ' ,' → logprob: -12.250059127807617
    6. 'int' → logprob: -13.375059127807617
    7. '   ' → logprob: -14.250059127807617
    8. '[' → logprob: -14.875059127807617
    9. 'Set' → logprob: -15.000059127807617
    10. ',set' → logprob: -15.375059127807617

Token 289: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10385958105325699
    2. 'Set' → logprob: -2.4788596630096436
    3. 'List' → logprob: -4.6038594245910645
    4. ' bool' → logprob: -5.6038594245910645
    5. 'int' → logprob: -7.3538594245910645
    6. ' Set' → logprob: -8.478859901428223
    7. ' List' → logprob: -9.478859901428223
    8. 'set' → logprob: -9.603859901428223
    9. 'None' → logprob: -9.603859901428223
    10. 'False' → logprob: -11.103859901428223

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4140441635390744e-05
    2. ']=' → logprob: -12.000014305114746
    3. '"]' → logprob: -12.500014305114746
    4. ']={' → logprob: -13.125014305114746
    5. '}' → logprob: -14.500014305114746
    6. ']>' → logprob: -14.750014305114746
    7. '   ' → logprob: -14.750014305114746
    8. ' ]' → logprob: -14.875014305114746
    9. '>' → logprob: -15.375014305114746
    10. '{' → logprob: -16.12501335144043

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12731441855430603
    2. '=' → logprob: -2.127314329147339
    3. '   ' → logprob: -7.877314567565918
    4. ' ' → logprob: -12.127314567565918
    5. '  ' → logprob: -14.377314567565918
    6. '    ' → logprob: -14.752314567565918
    7. ':' → logprob: -16.1273136138916
    8. '={}' → logprob: -16.2523136138916
    9. ' ={' → logprob: -16.3773136138916
    10. '=[]' → logprob: -16.5023136138916

Token 292: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.0219828002154827e-05
    2. '{}

' → logprob: -11.125020027160645
    3. 'dict' → logprob: -12.500020027160645
    4. '{' → logprob: -13.750020027160645
    5. '{}
' → logprob: -14.750020027160645
    6. '{})' → logprob: -15.750020027160645
    7. '{},' → logprob: -17.37502098083496
    8. ' {}' → logprob: -17.50002098083496
    9. '={}' → logprob: -17.87502098083496
    10. 'set' → logprob: -18.00002098083496

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042686257511377335
    2. 'def' → logprob: -3.2926862239837646
    3. ' def' → logprob: -5.917686462402344
    4. '    
' → logprob: -6.542686462402344
    5. '
' → logprob: -7.917686462402344
    6. '@' → logprob: -10.042686462402344
    7. ')' → logprob: -10.542686462402344
    8. '        
' → logprob: -10.917686462402344
    9. ' 
' → logprob: -11.417686462402344
    10. '```' → logprob: -11.542686462402344

Token 294: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.34928083419799805
    2. 'def' → logprob: -1.224280834197998
    3. ' @' → logprob: -7.974280834197998
    4. ' def' → logprob: -8.224281311035156
    5. '   ' → logprob: -8.724281311035156
    6. 'from' → logprob: -10.974281311035156
    7. 'import' → logprob: -11.599281311035156
    8. 'PR' → logprob: -11.849281311035156
    9. '_def' → logprob: -11.974281311035156
    10. '_PR' → logprob: -12.349281311035156

Token 295: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.31326746940612793
    2. 'staticmethod' → logprob: -1.313267469406128
    3. 'property' → logprob: -12.063267707824707
    4. 'class' → logprob: -19.06326675415039
    5. 'static' → logprob: -20.68826675415039
    6. 'cache' → logprob: -21.18826675415039
    7. 'cached' → logprob: -22.31326675415039
    8. 'dat' → logprob: -22.56326675415039
    9. '@' → logprob: -23.31326675415039
    10. 'l' → logprob: -24.18826675415039

Token 296: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024164138361811638
    2. '   ' → logprob: -3.8991641998291016
    3. ' def' → logprob: -5.649164199829102
    4. '
' → logprob: -9.524164199829102
    5. '	def' → logprob: -11.899164199829102
    6. '```' → logprob: -12.649164199829102
    7. '  ' → logprob: -12.774164199829102
    8. '    
' → logprob: -13.024164199829102
    9. ' ' → logprob: -13.399164199829102
    10. '(def' → logprob: -13.774164199829102

Token 297: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004564818926155567
    2. '   ' → logprob: -5.7545647621154785
    3. ' def' → logprob: -6.6295647621154785
    4. '
' → logprob: -10.879565238952637
    5. '```' → logprob: -11.129565238952637
    6. '	def' → logprob: -11.254565238952637
    7. '    
' → logprob: -12.504565238952637
    8. '(def' → logprob: -12.629565238952637
    9. '<|end|>' → logprob: -12.629565238952637
    10. '(' → logprob: -12.754565238952637

Token 298: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.4140441635390744e-05
    2. '
' → logprob: -11.750014305114746
    3. ' def' → logprob: -12.000014305114746
    4. 'de' → logprob: -17.87501335144043
    5. '    
' → logprob: -18.25001335144043
    6. 'is' → logprob: -18.25001335144043
    7. 'from' → logprob: -18.62501335144043
    8. 'classmethod' → logprob: -18.87501335144043
    9. '  
' → logprob: -19.00001335144043
    10. '	def' → logprob: -19.12501335144043

Token 299: ' _' (ID: 1175)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.31840282678604126
    2. 'def' → logprob: -1.4434027671813965
    3. '_is' → logprob: -3.8184027671813965
    4. ' is' → logprob: -4.6934027671813965
    5. ' def' → logprob: -5.6934027671813965
    6. '__' → logprob: -6.8184027671813965
    7. 'from' → logprob: -7.3184027671813965
    8. '_def' → logprob: -9.318403244018555
    9. '_' → logprob: -10.193403244018555
    10. '_from' → logprob: -10.568403244018555

Token 300: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00013774730905424803
    2. 'check' → logprob: -9.000137329101562
    3. '_is' → logprob: -12.250137329101562
    4. 'com' → logprob: -12.625137329101562
    5. 'l' → logprob: -13.750137329101562
    6. 'cache' → logprob: -13.875137329101562
    7. 'get' → logprob: -14.125137329101562
    8. ' is' → logprob: -14.125137329101562
    9. 'has' → logprob: -15.125137329101562
    10. 'm' → logprob: -15.125137329101562

Token 301: '_prime' (ID: 98616)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.06562043726444244
    2. '_com' → logprob: -3.5656204223632812
    3. '_m' → logprob: -3.8156204223632812
    4. 'prime' → logprob: -4.815620422363281
    5. 'm' → logprob: -5.690620422363281
    6. '_prime' → logprob: -6.565620422363281
    7. 'Monday' → logprob: -8.440620422363281
    8. ' composite' → logprob: -10.565620422363281
    9. ' Monday' → logprob: -11.190620422363281
    10. '_' → logprob: -11.440620422363281

Token 302: '_us' (ID: 43779)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -6.749814019713085e-06
    2. 'cls' → logprob: -12.500006675720215
    3. '(' → logprob: -13.375006675720215
    4. '(
' → logprob: -13.750006675720215
    5. '   ' → logprob: -15.875006675720215
    6. ' cls' → logprob: -16.75000762939453
    7. 'classmethod' → logprob: -17.00000762939453
    8. ' (' → logprob: -17.50000762939453
    9. '(cl' → logprob: -18.00000762939453
    10. '(clazz' → logprob: -18.25000762939453

Token 303: 'ual' (ID: 850)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.010911292396485806
    2. 'e' → logprob: -5.260911464691162
    3. 'ed' → logprob: -5.760911464691162
    4. 'er' → logprob: -7.260911464691162
    5. 'ef' → logprob: -7.510911464691162
    6. 'ual' → logprob: -8.010910987854004
    7. '(' → logprob: -8.010910987854004
    8. '(cls' → logprob: -8.135910987854004
    9. 'ng' → logprob: -10.010910987854004
    10. 'al' → logprob: -10.135910987854004

Token 304: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.173704271830502e-06
    2. 'cls' → logprob: -13.50000286102295
    3. '(' → logprob: -13.62500286102295
    4. '(
' → logprob: -14.62500286102295
    5. '(cl' → logprob: -17.625003814697266
    6. 'classmethod' → logprob: -18.000003814697266
    7. ' (' → logprob: -18.125003814697266
    8. '(clazz' → logprob: -18.125003814697266
    9. '(k' → logprob: -18.500003814697266
    10. '```' → logprob: -18.750003814697266

Token 305: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -4.9186317482963204e-05
    2. ',' → logprob: -10.250049591064453
    3. 'cls' → logprob: -12.375049591064453
    4. '(' → logprob: -12.500049591064453
    5. '   ' → logprob: -13.000049591064453
    6. ')' → logprob: -13.750049591064453
    7. ')(' → logprob: -14.000049591064453
    8. ' (' → logprob: -14.250049591064453
    9. '(k' → logprob: -15.250049591064453
    10. ' cls' → logprob: -15.375049591064453

Token 306: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0044768815860152245
    2. 'num' → logprob: -5.879477024078369
    3. 'cls' → logprob: -6.629477024078369
    4. 'value' → logprob: -8.504476547241211
    5. ' n' → logprob: -9.254476547241211
    6. 'number' → logprob: -10.629476547241211
    7. 'x' → logprob: -11.129476547241211
    8. '   ' → logprob: -11.879476547241211
    9. '       ' → logprob: -13.379476547241211
    10. 'candidate' → logprob: -13.504476547241211

Token 307: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025742328725755215
    2. ')' → logprob: -6.127574443817139
    3. '):' → logprob: -8.37757396697998
    4. ':int' → logprob: -8.87757396697998
    5. '):
' → logprob: -11.25257396697998
    6. 'int' → logprob: -12.62757396697998
    7. '   ' → logprob: -13.00257396697998
    8. ' :' → logprob: -14.75257396697998
    9. '       ' → logprob: -15.37757396697998
    10. ' )' → logprob: -16.252574920654297

Token 308: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005624461336992681
    2. ' int' → logprob: -7.50056266784668
    3. '   ' → logprob: -12.12556266784668
    4. ')' → logprob: -12.62556266784668
    5. ' ' → logprob: -15.87556266784668
    6. '```' → logprob: -16.12556266784668
    7. '	int' → logprob: -16.62556266784668
    8. '  ' → logprob: -16.75056266784668
    9. ':int' → logprob: -16.75056266784668
    10. '       ' → logprob: -16.87556266784668

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.750004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '):' → logprob: -14.375004768371582
    5. '):
' → logprob: -15.750004768371582
    6. ':' → logprob: -16.750003814697266
    7. ',)' → logprob: -17.625003814697266
    8. '")' → logprob: -17.750003814697266
    9. ',' → logprob: -17.875003814697266
    10. ')->' → logprob: -18.000003814697266

Token 310: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.3626262843608856
    2. ':' → logprob: -1.237626314163208
    3. ' ->' → logprob: -4.612626075744629
    4. ')' → logprob: -5.862626075744629
    5. '   ' → logprob: -6.862626075744629
    6. ')->' → logprob: -8.737626075744629
    7. '       ' → logprob: -10.362626075744629
    8. ':
' → logprob: -10.612626075744629
    9. '>' → logprob: -11.112626075744629
    10. 'def' → logprob: -11.612626075744629

Token 311: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00038300611777231097
    2. ' bool' → logprob: -8.375383377075195
    3. 'int' → logprob: -8.875383377075195
    4. '(bool' → logprob: -11.875383377075195
    5. '   ' → logprob: -13.000383377075195
    6. ' ' → logprob: -14.625383377075195
    7. '	bool' → logprob: -14.625383377075195
    8. 'None' → logprob: -14.875383377075195
    9. ')' → logprob: -15.125383377075195
    10. '<bool' → logprob: -15.250383377075195

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001296073431149125
    2. ':
' → logprob: -7.126296043395996
    3. '):' → logprob: -7.876296043395996
    4. ',' → logprob: -10.376296043395996
    5. '   ' → logprob: -10.501296043395996
    6. '():' → logprob: -11.001296043395996
    7. '       ' → logprob: -11.501296043395996
    8. '<|end|>' → logprob: -11.626296043395996
    9. '):
' → logprob: -12.376296043395996
    10. ')' → logprob: -12.626296043395996

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001977999461814761
    2. ' if' → logprob: -6.376977920532227
    3. '   ' → logprob: -8.876977920532227
    4. 'if' → logprob: -9.376977920532227
    5. '    ' → logprob: -10.876977920532227
    6. '      ' → logprob: -11.126977920532227
    7. '     ' → logprob: -12.751977920532227
    8. '    ' → logprob: -12.876977920532227
    9. '        
' → logprob: -13.126977920532227
    10. '"""' → logprob: -13.751977920532227

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03487125411629677
    2. ' if' → logprob: -3.5348713397979736
    3. '       ' → logprob: -5.2848711013793945
    4. 'import' → logprob: -10.659871101379395
    5. 'i' → logprob: -11.159871101379395
    6. ' i' → logprob: -13.784871101379395
    7. 'for' → logprob: -14.034871101379395
    8. '   ' → logprob: -15.409871101379395
    9. '	if' → logprob: -15.784871101379395
    10. '```' → logprob: -16.15987205505371

Token 315: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002969703928101808
    2. ' n' → logprob: -8.125296592712402
    3. '	n' → logprob: -14.125296592712402
    4. '   ' → logprob: -16.12529754638672
    5. '       ' → logprob: -17.25029754638672
    6. '2' → logprob: -17.87529754638672
    7. '(n' → logprob: -18.12529754638672
    8. '_n' → logprob: -18.50029754638672
    9. '    ' → logprob: -18.75029754638672
    10. '```' → logprob: -18.87529754638672

Token 316: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.046591587364673615
    2. '<' → logprob: -3.2965915203094482
    3. ' <=' → logprob: -4.796591758728027
    4. ' <' → logprob: -8.296591758728027
    5. '==' → logprob: -12.171591758728027
    6. 'in' → logprob: -14.671591758728027
    7. '≤' → logprob: -15.171591758728027
    8. '%' → logprob: -15.546591758728027
    9. ' in' → logprob: -15.921591758728027
    10. '<n' → logprob: -16.42159080505371

Token 317: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.822646693966817e-06
    2. '3' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.375007629394531
    4. '```' → logprob: -16.37500762939453
    5. '4' → logprob: -16.50000762939453
    6. '5' → logprob: -16.50000762939453
    7. '   ' → logprob: -16.62500762939453
    8. '10' → logprob: -17.37500762939453
    9. '(' → logprob: -17.50000762939453
    10. '"' → logprob: -17.75000762939453

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '3' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '4' → logprob: -17.250001907348633
    6. '5' → logprob: -17.562501907348633
    7. '```' → logprob: -17.562501907348633
    8. '10' → logprob: -17.625001907348633
    9. '２' → logprob: -17.750001907348633
    10. '(' → logprob: -17.750001907348633

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0819660946726799
    2. ':
' → logprob: -2.5819661617279053
    3. '       ' → logprob: -6.331965923309326
    4. ':return' → logprob: -7.581965923309326
    5. ' or' → logprob: -7.706965923309326
    6. '           ' → logprob: -8.206966400146484
    7. '<|end|>' → logprob: -10.831966400146484
    8. ',' → logprob: -11.206966400146484
    9. ':
' → logprob: -12.206966400146484
    10. '   ' → logprob: -12.206966400146484

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020222914463374764
    2. '       ' → logprob: -9.000202178955078
    3. 'return' → logprob: -10.625202178955078
    4. ' return' → logprob: -10.875202178955078
    5. '          ' → logprob: -11.375202178955078
    6. ':' → logprob: -12.000202178955078
    7. '		' → logprob: -12.375202178955078
    8. ',' → logprob: -12.875202178955078
    9. '	       ' → logprob: -13.375202178955078
    10. '<|end|>' → logprob: -13.750202178955078

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006883622612804174
    2. ' return' → logprob: -5.50688362121582
    3. '           ' → logprob: -5.88188362121582
    4. 'False' → logprob: -12.38188362121582
    5. ':return' → logprob: -12.38188362121582
    6. '{return' → logprob: -13.75688362121582
    7. '	return' → logprob: -14.13188362121582
    8. '       ' → logprob: -14.88188362121582
    9. 'eturn' → logprob: -15.00688362121582
    10. '               ' → logprob: -15.50688362121582

Token 322: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001584850688232109
    2. ' False' → logprob: -8.750158309936523
    3. '(False' → logprob: -20.625158309936523
    4. '=False' → logprob: -22.000158309936523
    5. 'false' → logprob: -23.250158309936523
    6. 'True' → logprob: -23.375158309936523
    7. 'F' → logprob: -23.875158309936523
    8. '_false' → logprob: -24.375158309936523
    9. 'FALSE' → logprob: -24.875158309936523
    10. '   ' → logprob: -26.375158309936523

Token 323: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06256493180990219
    2. '
' → logprob: -2.9375648498535156
    3. '<|end|>' → logprob: -4.937564849853516
    4. '        
' → logprob: -8.937564849853516
    5. '  
' → logprob: -10.187564849853516
    6. '```' → logprob: -10.312564849853516
    7. '<|end|>' → logprob: -10.312564849853516
    8. ',' → logprob: -10.687564849853516
    9. ' for' → logprob: -10.812564849853516
    10. ',
' → logprob: -10.937564849853516

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025235803332179785
    2. '<|end|>' → logprob: -6.002523422241211
    3. 'import' → logprob: -11.377523422241211
    4. ',' → logprob: -11.377523422241211
    5. '<|end|>' → logprob: -11.752523422241211
    6. '
' → logprob: -12.877523422241211
    7. ' for' → logprob: -13.377523422241211
    8. '   ' → logprob: -13.502523422241211
    9. '```' → logprob: -13.502523422241211
    10. '      ' → logprob: -13.627523422241211

Token 325: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3518596887588501
    2. 'for' → logprob: -1.35185968875885
    3. 'if' (adapté à ' if') → logprob: -3.7268595695495605
    4. ' for' → logprob: -4.3518595695495605
    5. ' if' → logprob: -7.1018595695495605
    6. 'import' → logprob: -9.476860046386719
    7. '	for' → logprob: -12.226860046386719
    8. '   ' → logprob: -13.351860046386719
    9. '      ' → logprob: -13.851860046386719
    10. '	if' → logprob: -14.351860046386719

Token 326: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001801801408873871
    2. ' n' → logprob: -8.6251802444458
    3. '	n' → logprob: -14.6251802444458
    4. '(n' → logprob: -17.000179290771484
    5. '   ' → logprob: -17.375179290771484
    6. 'any' → logprob: -18.500179290771484
    7. '2' → logprob: -19.000179290771484
    8. '$n' → logprob: -19.875179290771484
    9. '```' → logprob: -19.875179290771484
    10. 'int' → logprob: -20.000179290771484

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0426708459854126
    2. '%' → logprob: -1.2926708459854126
    3. ' <=' → logprob: -1.9176708459854126
    4. '<=' → logprob: -1.9176708459854126
    5. ' %' → logprob: -3.292670726776123
    6. '==' → logprob: -3.417670726776123
    7. ' ==' → logprob: -4.792670726776123
    8. 'in' → logprob: -7.417670726776123
    9. ' ' → logprob: -9.917671203613281
    10. 'import' → logprob: -10.417671203613281

Token 328: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2794780731201172
    2. '{' → logprob: -1.5294780731201172
    3. 'cls' → logprob: -4.279478073120117
    4. '[' → logprob: -4.904478073120117
    5. '(cls' → logprob: -5.529478073120117
    6. ' (' → logprob: -6.279478073120117
    7. ' {' → logprob: -9.904478073120117
    8. ' cls' → logprob: -11.279478073120117
    9. ' [' → logprob: -12.654478073120117
    10. '   ' → logprob: -14.654478073120117

Token 329: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016325322212651372
    2. ' ' → logprob: -9.375163078308105
    3. '{' → logprob: -9.500163078308105
    4. '[' → logprob: -13.750163078308105
    5. '   ' → logprob: -14.000163078308105
    6. '(' → logprob: -14.875163078308105
    7. ' {' → logprob: -15.125163078308105
    8. '0' → logprob: -15.500163078308105
    9. ')' → logprob: -15.875163078308105
    10. '       ' → logprob: -16.000164031982422

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000916935910936445
    2. ' ,' → logprob: -7.000916957855225
    3. '3' → logprob: -12.375916481018066
    4. '   ' → logprob: -15.250916481018066
    5. ',
' → logprob: -15.375916481018066
    6. ' ' → logprob: -15.500916481018066
    7. '4' → logprob: -16.125917434692383
    8. '7' → logprob: -16.250917434692383
    9. '2' → logprob: -16.500917434692383
    10. '6' → logprob: -17.250917434692383

Token 331: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005929154809564352
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.380928993225098
    4. '    ' → logprob: -16.505929946899414
    5. '
' → logprob: -17.005929946899414
    6. '  ' → logprob: -17.130929946899414
    7. '۳' → logprob: -17.880929946899414
    8. ')' → logprob: -18.130929946899414
    9. '３' → logprob: -18.130929946899414
    10. ' 
' → logprob: -18.818429946899414

Token 332: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.500009536743164
    4. '
' → logprob: -18.625009536743164
    5. '7' → logprob: -18.750009536743164
    6. '３' → logprob: -19.000009536743164
    7. '۳' → logprob: -19.375009536743164
    8. '    ' → logprob: -19.500009536743164
    9. '  ' → logprob: -19.750009536743164
    10. '

' → logprob: -20.625009536743164

Token 333: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47419559955596924
    2. '):' → logprob: -0.9741955995559692
    3. ')' → logprob: -9.59919548034668
    4. ',' → logprob: -10.59919548034668
    5. '       ' → logprob: -11.34919548034668
    6. '):
' → logprob: -11.72419548034668
    7. '):

' → logprob: -12.84919548034668
    8. '   ' → logprob: -13.59919548034668
    9. ' ):
' → logprob: -14.34919548034668
    10. ' ):' → logprob: -14.47419548034668

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03978879749774933
    2. ':' → logprob: -3.5397887229919434
    3. ':
' → logprob: -4.789788722991943
    4. '       ' → logprob: -6.914788722991943
    5. ',' → logprob: -8.539789199829102
    6. ':return' → logprob: -8.789789199829102
    7. ' return' → logprob: -9.039789199829102
    8. '):
' → logprob: -9.789789199829102
    9. '          ' → logprob: -10.039789199829102
    10. '<|end|>' → logprob: -10.664789199829102

Token 335: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4753321409225464
    2. 'return' (adapté à ' return') → logprob: -0.9753321409225464
    3. '           ' → logprob: -6.725332260131836
    4. '       ' → logprob: -10.350332260131836
    5. 'True' → logprob: -11.600332260131836
    6. ':return' → logprob: -12.225332260131836
    7. ' True' → logprob: -12.850332260131836
    8. '               ' → logprob: -13.350332260131836
    9. '
' → logprob: -13.850332260131836
    10. '	return' → logprob: -13.975332260131836

Token 336: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -19.501928329467773
    4. 'False' → logprob: -21.376928329467773
    5. '=True' → logprob: -21.751928329467773
    6. '   ' → logprob: -22.001928329467773
    7. 'true' → logprob: -22.501928329467773
    8. '.True' → logprob: -24.751928329467773
    9. '       ' → logprob: -24.876928329467773
    10. 'TRUE' → logprob: -25.001928329467773

Token 337: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011293789139017463
    2. '<|end|>' → logprob: -7.001129150390625
    3. ',' → logprob: -9.376129150390625
    4. '.' → logprob: -9.501129150390625
    5. '<|end|>' → logprob: -11.876129150390625
    6. '```' → logprob: -12.001129150390625
    7. 'import' → logprob: -12.126129150390625
    8. '        ' → logprob: -12.251129150390625
    9. '        
' → logprob: -12.251129150390625
    10. '      ' → logprob: -12.376129150390625

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.028536492725834e-05
    2. 'import' → logprob: -10.500070571899414
    3. ',' → logprob: -11.375070571899414
    4. '<|end|>' → logprob: -11.500070571899414
    5. '   ' → logprob: -11.625070571899414
    6. ' if' → logprob: -12.875070571899414
    7. 'if' → logprob: -13.500070571899414
    8. ' for' → logprob: -13.625070571899414
    9. '```' → logprob: -14.000070571899414
    10. '
' → logprob: -14.125070571899414

Token 339: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37890538573265076
    2. ' if' → logprob: -1.6289054155349731
    3. '       ' → logprob: -2.1289052963256836
    4. 'for' → logprob: -8.378905296325684
    5. ' for' → logprob: -10.503905296325684
    6. 'import' → logprob: -11.128905296325684
    7. '	if' → logprob: -12.628905296325684
    8. '   ' → logprob: -13.253905296325684
    9. 'from' → logprob: -15.253905296325684
    10. '      ' → logprob: -15.253905296325684

Token 340: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868725001811981
    2. ' n' → logprob: -1.1368725299835205
    3. '	n' → logprob: -13.636872291564941
    4. '   ' → logprob: -15.386872291564941
    5. '(n' → logprob: -16.761873245239258
    6. '$n' → logprob: -18.136873245239258
    7. ' н' → logprob: -18.511873245239258
    8. ' any' → logprob: -18.511873245239258
    9. ' ' → logprob: -18.636873245239258
    10. '       ' → logprob: -19.261873245239258

Token 341: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10020752996206284
    2. '%' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.225207328796387
    4. ' ' → logprob: -16.850208282470703
    5. '   ' → logprob: -17.225208282470703
    6. '	' → logprob: -18.350208282470703
    7. '%i' → logprob: -18.350208282470703
    8. '%n' → logprob: -18.475208282470703
    9. '```' → logprob: -18.725208282470703
    10. '%s' → logprob: -18.850208282470703

Token 342: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -17.377185821533203
    4. '23' → logprob: -18.377185821533203
    5. '3' → logprob: -18.752185821533203
    6. '```' → logprob: -18.877185821533203
    7. '  ' → logprob: -19.127185821533203
    8. '...' → logprob: -19.377185821533203
    9. '۲' → logprob: -20.002185821533203
    10. '<|end|>' → logprob: -20.752185821533203

Token 343: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -18.12504005432129
    4. '   ' → logprob: -18.25004005432129
    5. '۲' → logprob: -19.37504005432129
    6. '23' → logprob: -19.50004005432129
    7. '  ' → logprob: -20.25004005432129
    8. '２' → logprob: -20.75004005432129
    9. '6' → logprob: -20.87504005432129
    10. 'to' → logprob: -21.06254005432129

Token 344: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2521653473377228
    2. '==' → logprob: -1.5021653175354004
    3. '0' → logprob: -8.377165794372559
    4. ' ' → logprob: -12.377165794372559
    5. '==
' → logprob: -14.502165794372559
    6. '=' → logprob: -14.627165794372559
    7. ')==' → logprob: -15.002165794372559
    8. '   ' → logprob: -15.127165794372559
    9. '===' → logprob: -16.002164840698242
    10. '()==' → logprob: -16.127164840698242

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603425107896328
    2. ' ' → logprob: -4.141034126281738
    3. '00' → logprob: -18.391035079956055
    4. '  ' → logprob: -18.578535079956055
    5. '   ' → logprob: -18.891035079956055
    6. '۰' → logprob: -19.016035079956055
    7. '=' → logprob: -19.078535079956055
    8. ' ' → logprob: -19.328535079956055
    9. '

' → logprob: -19.578535079956055
    10. '```' → logprob: -19.766035079956055

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '۰' → logprob: -17.687679290771484
    4. '00' → logprob: -18.250179290771484
    5. '   ' → logprob: -19.187679290771484
    6. '=' → logprob: -19.562679290771484
    7. '  ' → logprob: -19.625179290771484
    8. '০' → logprob: -19.687679290771484
    9. '000' → logprob: -19.812679290771484
    10. '1' → logprob: -20.000179290771484

Token 347: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010752035304903984
    2. ':' → logprob: -7.251075267791748
    3. 'or' → logprob: -8.50107479095459
    4. '0' → logprob: -9.62607479095459
    5. '           ' → logprob: -10.37607479095459
    6. '       ' → logprob: -10.62607479095459
    7. ':
' → logprob: -10.87607479095459
    8. ',' → logprob: -11.75107479095459
    9. '   ' → logprob: -12.62607479095459
    10. '<|end|>' → logprob: -12.75107479095459

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47070685029029846
    2. ' or' → logprob: -1.095706820487976
    3. '       ' → logprob: -3.2207069396972656
    4. ':' → logprob: -7.595706939697266
    5. '   ' → logprob: -8.470706939697266
    6. 'or' → logprob: -9.470706939697266
    7. ',' → logprob: -9.595706939697266
    8. ' ' → logprob: -9.720706939697266
    9. '0' → logprob: -9.845706939697266
    10. ' return' → logprob: -9.845706939697266

Token 349: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1602420061826706
    2. 'return' (adapté à ' return') → logprob: -1.910241961479187
    3. '           ' → logprob: -11.285242080688477
    4. '       ' → logprob: -12.285242080688477
    5. '	return' → logprob: -14.660242080688477
    6. '
' → logprob: -16.410242080688477
    7. ':return' → logprob: -16.410242080688477
    8. '   ' → logprob: -16.785242080688477
    9. '{return' → logprob: -18.035242080688477
    10. ' ' → logprob: -18.285242080688477

Token 350: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. 'false' → logprob: -21.500261306762695
    4. '(False' → logprob: -22.000261306762695
    5. 'True' → logprob: -22.125261306762695
    6. '=False' → logprob: -23.125261306762695
    7. '   ' → logprob: -23.750261306762695
    8. 'FALSE' → logprob: -25.125261306762695
    9. 'F' → logprob: -25.250261306762695
    10. '0' → logprob: -25.625261306762695

Token 351: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002753045642748475
    2. '<|end|>' → logprob: -6.002753257751465
    3. ',' → logprob: -9.127753257751465
    4. '   ' → logprob: -10.377753257751465
    5. '```' → logprob: -10.627753257751465
    6. '<|end|>' → logprob: -10.877753257751465
    7. '
' → logprob: -11.002753257751465
    8. '.' → logprob: -11.127753257751465
    9. 'import' → logprob: -11.377753257751465
    10. '        
' → logprob: -11.877753257751465

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023107275774236768
    2. '   ' → logprob: -9.25023078918457
    3. ' for' → logprob: -9.62523078918457
    4. '<|end|>' → logprob: -10.25023078918457
    5. ' if' → logprob: -10.75023078918457
    6. ',' → logprob: -12.87523078918457
    7. '           ' → logprob: -13.37523078918457
    8. '      ' → logprob: -13.50023078918457
    9. '```' → logprob: -13.50023078918457
    10. ' ' → logprob: -14.00023078918457

Token 353: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02310989797115326
    2. 'for' → logprob: -4.5231099128723145
    3. 'i' → logprob: -4.7731099128723145
    4. ' for' → logprob: -6.1481099128723145
    5. ' i' → logprob: -6.7731099128723145
    6. 'import' → logprob: -8.648109436035156
    7. '   ' → logprob: -10.023109436035156
    8. 'root' → logprob: -11.398109436035156
    9. 'limit' → logprob: -11.898109436035156
    10. ' ' → logprob: -13.148109436035156

Token 354: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.16398179531097412
    2. '=' → logprob: -2.5389819145202637
    3. '   ' → logprob: -3.6639819145202637
    4. ' =' → logprob: -4.788981914520264
    5. 'import' → logprob: -4.913981914520264
    6. ' ' → logprob: -5.288981914520264
    7. 'for' → logprob: -5.413981914520264
    8. 'eturn' → logprob: -5.663981914520264
    9. ' for' → logprob: -5.788981914520264
    10. '       ' → logprob: -5.913981914520264

Token 355: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28428614139556885
    2. '1' → logprob: -1.7842861413955688
    3. ' int' → logprob: -2.5342860221862793
    4. ' ' → logprob: -8.534286499023438
    5. '(int' → logprob: -11.784286499023438
    6. '   ' → logprob: -12.159286499023438
    7. '0' → logprob: -13.784286499023438
    8. '2' → logprob: -14.034286499023438
    9. '	int' → logprob: -14.534286499023438
    10. ':int' → logprob: -14.784286499023438

Token 356: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.625016212463379
    3. 'n' → logprob: -12.000016212463379
    4. '(pow' → logprob: -14.625016212463379
    5. ' n' → logprob: -15.000016212463379
    6. '((' → logprob: -15.125016212463379
    7. '	n' → logprob: -16.250017166137695
    8. '(s' → logprob: -17.500017166137695
    9. ' (' → logprob: -18.125017166137695
    10. '(math' → logprob: -18.250017166137695

Token 357: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00760698551312089
    2. ' **' → logprob: -4.8826069831848145
    3. '*' → logprob: -14.757607460021973
    4. '.sqrt' → logprob: -15.882607460021973
    5. ' ' → logprob: -16.507606506347656
    6. '
' → logprob: -16.757606506347656
    7. '0' → logprob: -16.882606506347656
    8. '.' → logprob: -17.257606506347656
    9. '**)' → logprob: -17.257606506347656
    10. 'n' → logprob: -17.882606506347656

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '.' → logprob: -18.375001907348633
    4. '**' → logprob: -20.875001907348633
    5. '```' → logprob: -21.250001907348633
    6. '(' → logprob: -23.000001907348633
    7. '   ' → logprob: -23.875001907348633
    8. '۰' → logprob: -23.875001907348633
    9. ' ' → logprob: -24.125001907348633
    10. '  ' → logprob: -24.375001907348633

Token 359: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0683535037969705e-05
    2. '0' → logprob: -11.50001049041748
    3. '5' → logprob: -14.75001049041748
    4. '1' → logprob: -16.750011444091797
    5. ' .' → logprob: -17.875011444091797
    6. '3' → logprob: -18.125011444091797
    7. '2' → logprob: -18.250011444091797
    8. '```' → logprob: -18.625011444091797
    9. '..' → logprob: -19.000011444091797
    10. ' ' → logprob: -19.375011444091797

Token 360: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. '```' → logprob: -16.0625
    4. '0' → logprob: -16.75
    5. '"' → logprob: -16.8125
    6. '   ' → logprob: -17.125
    7. '``' → logprob: -17.25
    8. '**' → logprob: -17.5625
    9. '
' → logprob: -17.5625
    10. '...' → logprob: -17.75

Token 361: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023178798437584192
    2. ')+' → logprob: -8.375231742858887
    3. ' )' → logprob: -13.750231742858887
    4. '())' → logprob: -16.500232696533203
    5. '()' → logprob: -17.375232696533203
    6. '1' → logprob: -18.500232696533203
    7. '+' → logprob: -18.750232696533203
    8. ')
' → logprob: -19.250232696533203
    9. '2' → logprob: -19.250232696533203
    10. '```' → logprob: -19.375232696533203

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00839459802955389
    2. ' +' → logprob: -5.633394718170166
    3. ' for' → logprob: -5.633394718170166
    4. '+' → logprob: -7.758394718170166
    5. '	' → logprob: -8.383394241333008
    6. '<|end|>' → logprob: -8.883394241333008
    7. '   ' → logprob: -9.383394241333008
    8. '
' → logprob: -10.008394241333008
    9. ',' → logprob: -10.008394241333008
    10. '1' → logprob: -10.133394241333008

Token 363: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37163054943084717
    2. '       ' → logprob: -1.7466305494308472
    3. 'for' (adapté à ' for') → logprob: -1.9966305494308472
    4. '	for' → logprob: -8.496630668640137
    5. '   ' → logprob: -11.121630668640137
    6. '	' → logprob: -11.871630668640137
    7. '1' → logprob: -12.746630668640137
    8. '	   ' → logprob: -13.246630668640137
    9. ':' → logprob: -13.371630668640137
    10. ' ' → logprob: -13.871630668640137

Token 364: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06206739321351051
    2. ' i' → logprob: -2.8120675086975098
    3. 'd' → logprob: -9.562067031860352
    4. 'f' → logprob: -10.812067031860352
    5. ' d' → logprob: -12.312067031860352
    6. ' f' → logprob: -13.062067031860352
    7. '	i' → logprob: -13.437067031860352
    8. 'k' → logprob: -14.187067031860352
    9. 'x' → logprob: -15.562067031860352
    10. '(i' → logprob: -15.687067031860352

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007623899728059769
    2. 'in' → logprob: -4.882623672485352
    3. ' ' → logprob: -11.382623672485352
    4. 'import' → logprob: -13.257623672485352
    5. ',' → logprob: -13.757623672485352
    6. '	in' → logprob: -14.507623672485352
    7. 'n' → logprob: -14.757623672485352
    8. 'In' → logprob: -15.132623672485352
    9. ' i' → logprob: -15.132623672485352
    10. '   ' → logprob: -15.132623672485352

Token 366: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740775227546692
    2. ' range' → logprob: -0.9740775227546692
    3. '	range' → logprob: -15.474077224731445
    4. ' ' → logprob: -15.849077224731445
    5. '   ' → logprob: -15.849077224731445
    6. '(range' → logprob: -17.849077224731445
    7. '2' → logprob: -17.974077224731445
    8. '  ' → logprob: -18.224077224731445
    9. '[' → logprob: -18.974077224731445
    10. '    ' → logprob: -19.349077224731445

Token 367: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20141616463661194
    2. '(' → logprob: -1.7014161348342896
    3. ' ' → logprob: -13.076416015625
    4. '   ' → logprob: -14.326416015625
    5. '5' → logprob: -16.951416015625
    6. '  ' → logprob: -17.326416015625
    7. ' (' → logprob: -18.076416015625
    8. '```' → logprob: -18.201416015625
    9. '    ' → logprob: -18.326416015625
    10. '[' → logprob: -18.451416015625

Token 368: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.375
    4. '(' → logprob: -19.125
    5. '  ' → logprob: -20.5
    6. '۳' → logprob: -21.0
    7. '３' → logprob: -21.125
    8. '    ' → logprob: -21.75
    9. '_' → logprob: -22.375
    10. ')' → logprob: -22.375

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. ' ,' → logprob: -12.125011444091797
    3. ',i' → logprob: -12.625011444091797
    4. ',r' → logprob: -13.000011444091797
    5. ',int' → logprob: -15.000011444091797
    6. ',
' → logprob: -15.750011444091797
    7. ',n' → logprob: -17.125011444091797
    8. '   ' → logprob: -17.250011444091797
    9. '       ' → logprob: -18.125011444091797
    10. 'r' → logprob: -18.625011444091797

Token 370: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00015860427811276168
    2. ' r' → logprob: -8.750158309936523
    3. '	r' → logprob: -17.375158309936523
    4. '   ' → logprob: -18.125158309936523
    5. 'int' → logprob: -20.875158309936523
    6. '(r' → logprob: -22.000158309936523
    7. '  ' → logprob: -22.125158309936523
    8. '    ' → logprob: -22.125158309936523
    9. '_r' → logprob: -22.750158309936523
    10. '       ' → logprob: -23.000158309936523

Token 371: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193724036216736
    2. ' +' → logprob: -1.5019372701644897
    3. ',' → logprob: -11.876936912536621
    4. '1' → logprob: -14.876936912536621
    5. '+,' → logprob: -15.376936912536621
    6. '   ' → logprob: -15.626936912536621
    7. ' ' → logprob: -15.751936912536621
    8. '+i' → logprob: -15.876936912536621
    9. ' ,' → logprob: -16.751937866210938
    10. '+
' → logprob: -16.751937866210938

Token 372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -10.75002384185791
    3. ',' → logprob: -13.87502384185791
    4. '   ' → logprob: -14.12502384185791
    5. '2' → logprob: -14.37502384185791
    6. '  ' → logprob: -16.625024795532227
    7. '    ' → logprob: -17.500024795532227
    8. '     ' → logprob: -17.750024795532227
    9. ' ,' → logprob: -18.625024795532227
    10. '       ' → logprob: -18.875024795532227

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.62501335144043
    3. '2' → logprob: -12.37501335144043
    4. '   ' → logprob: -16.37501335144043
    5. '  ' → logprob: -19.25001335144043
    6. ',' → logprob: -19.75001335144043
    7. '
' → logprob: -20.12501335144043
    8. '    ' → logprob: -20.25001335144043
    9. '       ' → logprob: -20.37501335144043
    10. '     ' → logprob: -20.37501335144043

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -11.750011444091797
    3. '2' → logprob: -12.625011444091797
    4. '   ' → logprob: -15.750011444091797
    5. '6' → logprob: -16.625011444091797
    6. '```' → logprob: -16.625011444091797
    7. '       ' → logprob: -17.000011444091797
    8. '           ' → logprob: -17.375011444091797
    9. ',
' → logprob: -18.625011444091797
    10. '+' → logprob: -18.875011444091797

Token 375: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.75103187561035
    4. '  ' → logprob: -18.87603187561035
    5. '```' → logprob: -19.25103187561035
    6. ')' → logprob: -20.50103187561035
    7. '3' → logprob: -20.75103187561035
    8. '6' → logprob: -21.00103187561035
    9. '    ' → logprob: -21.00103187561035
    10. '           ' → logprob: -21.25103187561035

Token 376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '  ' → logprob: -21.25002098083496
    4. '   ' → logprob: -21.50002098083496
    5. '```' → logprob: -21.87502098083496
    6. '۲' → logprob: -22.50002098083496
    7. '6' → logprob: -22.62502098083496
    8. '２' → logprob: -22.75002098083496
    9. '3' → logprob: -23.00002098083496
    10. ')' → logprob: -23.50002098083496

Token 377: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10225386917591095
    2. '):
' → logprob: -2.3522539138793945
    3. ':' → logprob: -6.2272539138793945
    4. ')' → logprob: -10.477253913879395
    5. ',' → logprob: -11.352253913879395
    6. '):
' → logprob: -11.477253913879395
    7. ':
' → logprob: -11.852253913879395
    8. ' ):' → logprob: -12.227253913879395
    9. '       ' → logprob: -12.477253913879395
    10. '   ' → logprob: -13.352253913879395

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002026304369792342
    2. ':' → logprob: -7.377026081085205
    3. ' if' → logprob: -7.377026081085205
    4. '       ' → logprob: -7.502026081085205
    5. 'if' → logprob: -9.377026557922363
    6. ':
' → logprob: -9.502026557922363
    7. '```' → logprob: -11.252026557922363
    8. '<|end|>' → logprob: -11.252026557922363
    9. '               ' → logprob: -12.127026557922363
    10. '	       ' → logprob: -12.252026557922363

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4905514717102051
    2. ' if' → logprob: -0.9905514717102051
    3. '           ' → logprob: -4.115551471710205
    4. '       ' → logprob: -11.615550994873047
    5. '   ' → logprob: -12.115550994873047
    6. '	if' → logprob: -12.365550994873047
    7. '	       ' → logprob: -13.365550994873047
    8. '               ' → logprob: -13.865550994873047
    9. ' ' → logprob: -14.990550994873047
    10. 'If' → logprob: -15.365550994873047

Token 380: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02975071594119072
    2. ' n' → logprob: -3.5297508239746094
    3. '	n' → logprob: -15.40475082397461
    4. '(n' → logprob: -19.15475082397461
    5. '   ' → logprob: -19.52975082397461
    6. '           ' → logprob: -20.65475082397461
    7. ' ' → logprob: -20.90475082397461
    8. '_n' → logprob: -21.02975082397461
    9. '       ' → logprob: -21.65475082397461
    10. ' н' → logprob: -22.65475082397461

Token 381: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25202563405036926
    2. '%' → logprob: -1.5020256042480469
    3. '%i' → logprob: -9.252025604248047
    4. ' ' → logprob: -15.627025604248047
    5. '%s' → logprob: -16.252025604248047
    6. '%e' → logprob: -16.502025604248047
    7. '%n' → logprob: -16.627025604248047
    8. ' ' → logprob: -17.002025604248047
    9. '%d' → logprob: -17.502025604248047
    10. '%c' → logprob: -18.002025604248047

Token 382: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001398929744027555
    2. ' i' → logprob: -8.875140190124512
    3. '	i' → logprob: -17.875139236450195
    4. '{i' → logprob: -19.000139236450195
    5. ' ' → logprob: -19.125139236450195
    6. '%i' → logprob: -19.875139236450195
    7. '*i' → logprob: -20.250139236450195
    8. '=i' → logprob: -20.500139236450195
    9. '   ' → logprob: -20.500139236450195
    10. ')i' → logprob: -20.625139236450195

Token 383: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740801155567169
    2. ' ==' → logprob: -0.9740800857543945
    3. '===' → logprob: -13.349080085754395
    4. ']==' → logprob: -14.599080085754395
    5. ')==' → logprob: -14.849080085754395
    6. '()==' → logprob: -15.599080085754395
    7. '==
' → logprob: -15.724080085754395
    8. '0' → logprob: -15.974080085754395
    9. '=' → logprob: -16.09908103942871
    10. '```' → logprob: -17.09908103942871

Token 384: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -20.375030517578125
    4. '
' → logprob: -21.125030517578125
    5. '۰' → logprob: -21.250030517578125
    6. '  ' → logprob: -21.750030517578125
    7. '=' → logprob: -22.375030517578125
    8. '```' → logprob: -22.500030517578125
    9. '00' → logprob: -22.812530517578125
    10. '    ' → logprob: -22.875030517578125

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -22.125
    4. '   ' → logprob: -23.125
    5. '  ' → logprob: -23.5
    6. '```' → logprob: -24.0
    7. '
' → logprob: -24.25
    8. '00' → logprob: -24.5
    9. '=' → logprob: -24.5
    10. 'i' → logprob: -24.625

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11849186569452286
    2. ':
' → logprob: -2.2434918880462646
    3. '               ' → logprob: -5.3684916496276855
    4. ':return' → logprob: -7.1184916496276855
    5. '           ' → logprob: -8.743492126464844
    6. '):
' → logprob: -11.993492126464844
    7. '       ' → logprob: -12.368492126464844
    8. ':
' → logprob: -12.493492126464844
    9. '):' → logprob: -13.243492126464844
    10. ':

' → logprob: -13.743492126464844

Token 387: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009924896992743015
    2. ' return' → logprob: -4.88492488861084
    3. 'return' → logprob: -6.38492488861084
    4. '           ' → logprob: -7.38492488861084
    5. '                   ' → logprob: -12.25992488861084
    6. ':return' → logprob: -13.50992488861084
    7. '	return' → logprob: -14.50992488861084
    8. '       ' → logprob: -14.75992488861084
    9. '	           ' → logprob: -15.13492488861084
    10. '              ' → logprob: -15.50992488861084

Token 388: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20277397334575653
    2. ' return' → logprob: -1.702773928642273
    3. '                   ' → logprob: -6.7027740478515625
    4. '               ' → logprob: -8.952774047851562
    5. '           ' → logprob: -13.577774047851562
    6. '   ' → logprob: -14.202774047851562
    7. '	return' → logprob: -14.702774047851562
    8. '                       ' → logprob: -15.202774047851562
    9. ':return' → logprob: -16.077774047851562
    10. '       ' → logprob: -16.702774047851562

Token 389: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. 'True' → logprob: -19.12500762939453
    4. 'false' → logprob: -22.00000762939453
    5. 'F' → logprob: -23.12500762939453
    6. '(False' → logprob: -23.75000762939453
    7. '_false' → logprob: -23.87500762939453
    8. '=False' → logprob: -24.37500762939453
    9. 'FALSE' → logprob: -25.62500762939453
    10. '.False' → logprob: -25.62500762939453

Token 390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002459129551425576
    2. '<|end|>' → logprob: -6.5024590492248535
    3. ',' → logprob: -7.8774590492248535
    4. '.' → logprob: -8.627459526062012
    5. '<|end|>' → logprob: -9.627459526062012
    6. '
' → logprob: -9.627459526062012
    7. ')' → logprob: -9.752459526062012
    8. '	' → logprob: -10.252459526062012
    9. 'return' → logprob: -10.502459526062012
    10. '   ' → logprob: -10.877459526062012

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000540762091986835
    2. '	' → logprob: -8.750540733337402
    3. ' return' → logprob: -9.125540733337402
    4. 'return' → logprob: -9.750540733337402
    5. '<|end|>' → logprob: -9.750540733337402
    6. ',' → logprob: -9.875540733337402
    7. '	return' → logprob: -10.500540733337402
    8. '           ' → logprob: -11.250540733337402
    9. '[' → logprob: -11.375540733337402
    10. ')' → logprob: -11.375540733337402

Token 392: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008738900534808636
    2. 'return' (adapté à ' return') → logprob: -5.133738994598389
    3. ' return' → logprob: -5.883738994598389
    4. '   ' → logprob: -11.13373851776123
    5. '           ' → logprob: -13.00873851776123
    6. '	return' → logprob: -13.13373851776123
    7. '
' → logprob: -14.00873851776123
    8. '<|end|>' → logprob: -14.88373851776123
    9. '               ' → logprob: -15.13373851776123
    10. '{return' → logprob: -15.25873851776123

Token 393: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. 'true' → logprob: -20.875036239624023
    4. '   ' → logprob: -21.625036239624023
    5. 'Tr' → logprob: -23.500036239624023
    6. '(True' → logprob: -23.500036239624023
    7. 'False' → logprob: -24.000036239624023
    8. '=True' → logprob: -24.125036239624023
    9. '       ' → logprob: -24.750036239624023
    10. '
' → logprob: -25.125036239624023

Token 394: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016914987936615944
    2. '<|end|>' → logprob: -4.2669148445129395
    3. '
' → logprob: -7.3919148445129395
    4. '    
' → logprob: -7.5169148445129395
    5. '```' → logprob: -7.5169148445129395
    6. 'def' → logprob: -7.6419148445129395
    7. '<|end|>' → logprob: -8.641915321350098
    8. ' def' → logprob: -9.391915321350098
    9. '@' → logprob: -9.766915321350098
    10. ' ' → logprob: -10.016915321350098

Token 396: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -5.319370302458992e-06
    2. 'def' → logprob: -12.375005722045898
    3. '   ' → logprob: -14.750005722045898
    4. ' @' → logprob: -14.875005722045898
    5. '@class' → logprob: -16.3750057220459
    6. '@property' → logprob: -16.5000057220459
    7. 'classmethod' → logprob: -17.2500057220459
    8. '@param' → logprob: -17.3750057220459
    9. '@n' → logprob: -17.3750057220459
    10. '@index' → logprob: -17.7500057220459

Token 397: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -4.842555426876061e-06
    2. 'staticmethod' → logprob: -12.250004768371582
    3. 'class' → logprob: -17.6250057220459
    4. 'property' → logprob: -19.0000057220459
    5. '@' → logprob: -19.2500057220459
    6. 'cls' → logprob: -23.6250057220459
    7. 'cache' → logprob: -23.8750057220459
    8. 'l' → logprob: -24.2500057220459
    9. 'aclass' → logprob: -25.3750057220459
    10. 'cached' → logprob: -25.3750057220459

Token 398: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1960982233285904
    2. '   ' → logprob: -2.0710983276367188
    3. ' def' → logprob: -3.0710983276367188
    4. '
' → logprob: -5.196098327636719
    5. ' ' → logprob: -10.446098327636719
    6. '(' → logprob: -10.446098327636719
    7. '	def' → logprob: -10.821098327636719
    8. '  ' → logprob: -11.696098327636719
    9. '(def' → logprob: -11.946098327636719
    10. '_def' → logprob: -12.321098327636719

Token 399: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013008922338485718
    2. ' def' → logprob: -4.638009071350098
    3. '   ' → logprob: -5.763009071350098
    4. '
' → logprob: -9.388009071350098
    5. '(' → logprob: -11.763009071350098
    6. '	def' → logprob: -12.013009071350098
    7. '(def' → logprob: -13.013009071350098
    8. ' ' → logprob: -13.388009071350098
    9. '_def' → logprob: -13.513009071350098
    10. ':' → logprob: -14.138009071350098

Token 400: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.292907877039397e-06
    2. ' def' → logprob: -12.75000286102295
    3. '
' → logprob: -15.50000286102295
    4. '@' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.875003814697266
    6. 'from' → logprob: -18.875003814697266
    7. 'async' → logprob: -19.000003814697266
    8. '    
' → logprob: -20.125003814697266
    9. 'classmethod' → logprob: -20.625003814697266
    10. 'is' → logprob: -21.125003814697266

Token 401: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09049063920974731
    2. ' def' → logprob: -3.3404905796051025
    3. '_is' → logprob: -3.5904905796051025
    4. 'is' → logprob: -3.9654905796051025
    5. 'from' → logprob: -6.340490818023682
    6. ' is' → logprob: -6.465490818023682
    7. '_def' → logprob: -7.340490818023682
    8. ' _' → logprob: -8.465490341186523
    9. '_from' → logprob: -8.590490341186523
    10. '@' → logprob: -10.590490341186523

Token 402: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0009863656014204025
    2. '_prime' → logprob: -7.625986576080322
    3. '_us' → logprob: -9.375986099243164
    4. 'Monday' → logprob: -9.625986099243164
    5. '_valid' → logprob: -9.750986099243164
    6. '_mon' → logprob: -9.875986099243164
    7. '_week' → logprob: -10.500986099243164
    8. '_s' → logprob: -10.625986099243164
    9. '_day' → logprob: -11.000986099243164
    10. '_ms' → logprob: -11.000986099243164

Token 403: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.00010652327910065651
    2. '_' → logprob: -10.125106811523438
    3. '```' → logprob: -10.750106811523438
    4. 'on' → logprob: -10.875106811523438
    5. '_m' → logprob: -11.750106811523438
    6. 'ond' → logprob: -12.500106811523438
    7. 'm' → logprob: -12.750106811523438
    8. 'onda' → logprob: -13.500106811523438
    9. 'Monday' → logprob: -13.500106811523438
    10. '__' → logprob: -13.500106811523438

Token 404: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.40998875699006e-05
    2. 'Saturday' → logprob: -9.75007438659668
    3. '_sat' → logprob: -11.87507438659668
    4. '_' → logprob: -12.75007438659668
    5. 's' → logprob: -13.00007438659668
    6. '_m' → logprob: -14.25007438659668
    7. '```' → logprob: -14.62507438659668
    8. ' _' → logprob: -14.75007438659668
    9. '<|end|>' → logprob: -15.50007438659668
    10. ' Saturday' → logprob: -15.62507438659668

Token 405: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.000462366413557902
    2. 's' → logprob: -8.000462532043457
    3. 'Saturday' → logprob: -10.125462532043457
    4. 'at' → logprob: -10.625462532043457
    5. '_s' → logprob: -11.125462532043457
    6. '_' → logprob: -11.125462532043457
    7. '```' → logprob: -12.125462532043457
    8. ' saturday' → logprob: -12.375462532043457
    9. '__' → logprob: -12.625462532043457
    10. 'atur' → logprob: -12.750462532043457

Token 406: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.06641922146081924
    2. '(cls' → logprob: -3.1914191246032715
    3. 'prime' → logprob: -3.8164191246032715
    4. '_' → logprob: -7.5664191246032715
    5. '_(' → logprob: -8.69141960144043
    6. 'cls' → logprob: -8.81641960144043
    7. '_pr' → logprob: -8.94141960144043
    8. '(' → logprob: -9.44141960144043
    9. '_number' → logprob: -10.81641960144043
    10. 'Prime' → logprob: -11.44141960144043

Token 407: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -4.320199877838604e-07
    2. 'cls' → logprob: -15.125
    3. '(' → logprob: -17.375
    4. '(
' → logprob: -17.75
    5. ' (' → logprob: -18.125
    6. '   ' → logprob: -19.75
    7. '(clazz' → logprob: -19.875
    8. 'classmethod' → logprob: -20.75
    9. '(cl' → logprob: -20.75
    10. ' cls' → logprob: -21.125

Token 408: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -6.623244553338736e-05
    2. ',' → logprob: -10.375065803527832
    3. ')(' → logprob: -10.375065803527832
    4. ' (' → logprob: -13.375065803527832
    5. 'cls' → logprob: -13.875065803527832
    6. '   ' → logprob: -14.625065803527832
    7. ')' → logprob: -14.750065803527832
    8. ' cls' → logprob: -15.250065803527832
    9. '](' → logprob: -16.75006675720215
    10. '(' → logprob: -17.00006675720215

Token 409: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8837677836418152
    2. 'value' → logprob: -0.8837677836418152
    3. 'cls' → logprob: -1.88376784324646
    4. ' n' → logprob: -4.508767604827881
    5. ' cls' → logprob: -5.633767604827881
    6. ' value' → logprob: -5.758767604827881
    7. 'candidate' → logprob: -5.883767604827881
    8. 'num' → logprob: -7.383767604827881
    9. ' candidate' → logprob: -9.008768081665039
    10. 'number' → logprob: -9.133768081665039

Token 410: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005247275810688734
    2. ')' → logprob: -5.255247116088867
    3. '   ' → logprob: -11.630247116088867
    4. '):' → logprob: -12.630247116088867
    5. ':int' → logprob: -14.005247116088867
    6. '       ' → logprob: -15.880247116088867
    7. 'int' → logprob: -16.005247116088867
    8. '):
' → logprob: -16.005247116088867
    9. '```' → logprob: -16.380247116088867
    10. '(cls' → logprob: -17.630247116088867

Token 411: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.68022444692906e-05
    2. ')' → logprob: -10.500046730041504
    3. ' int' → logprob: -11.500046730041504
    4. '   ' → logprob: -11.625046730041504
    5. '```' → logprob: -15.750046730041504
    6. '       ' → logprob: -17.12504768371582
    7. '  ' → logprob: -18.00004768371582
    8. '
' → logprob: -18.25004768371582
    9. ':int' → logprob: -18.25004768371582
    10. ' ' → logprob: -18.25004768371582

Token 412: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '")' → logprob: -17.875
    5. ',)' → logprob: -18.5
    6. '):' → logprob: -19.25
    7. ':' → logprob: -19.5
    8. '       ' → logprob: -20.25
    9. '):
' → logprob: -20.5
    10. '`)' → logprob: -21.875

Token 413: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.10562896728515625
    2. ':' → logprob: -3.2306289672851562
    3. ' ->' → logprob: -3.2306289672851562
    4. ')' → logprob: -4.230628967285156
    5. '   ' → logprob: -5.355628967285156
    6. '       ' → logprob: -6.355628967285156
    7. ':
' → logprob: -9.230628967285156
    8. ')->' → logprob: -10.230628967285156
    9. '```' → logprob: -11.605628967285156
    10. '>' → logprob: -11.855628967285156

Token 414: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00020413640595506877
    2. ' bool' → logprob: -8.500204086303711
    3. '"' → logprob: -14.875204086303711
    4. '	bool' → logprob: -16.50020408630371
    5. '   ' → logprob: -16.75020408630371
    6. ' ' → logprob: -16.75020408630371
    7. '<bool' → logprob: -17.12520408630371
    8. '(bool' → logprob: -17.75020408630371
    9. 'return' → logprob: -18.75020408630371
    10. 'boolean' → logprob: -18.75020408630371

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003102969378232956
    2. '       ' → logprob: -6.628102779388428
    3. '):' → logprob: -6.878102779388428
    4. ':
' → logprob: -7.878102779388428
    5. '):
' → logprob: -8.628103256225586
    6. ',' → logprob: -9.753103256225586
    7. '   ' → logprob: -9.878103256225586
    8. ')' → logprob: -10.128103256225586
    9. '<|end|>' → logprob: -11.378103256225586
    10. '():' → logprob: -11.753103256225586

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.301394023466855e-05
    2. 'return' → logprob: -10.375062942504883
    3. 'if' → logprob: -10.625062942504883
    4. ' if' → logprob: -12.250062942504883
    5. ' return' → logprob: -13.500062942504883
    6. '   ' → logprob: -14.500062942504883
    7. '```' → logprob: -15.000062942504883
    8. '#' → logprob: -15.875062942504883
    9. 'value' → logprob: -16.375062942504883
    10. '...' → logprob: -16.375062942504883

Token 417: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030059514567255974
    2. '       ' → logprob: -3.780059576034546
    3. 'return' → logprob: -5.155059337615967
    4. ' if' → logprob: -6.905059337615967
    5. '```' → logprob: -11.530059814453125
    6. 'try' → logprob: -12.280059814453125
    7. '
' → logprob: -13.655059814453125
    8. ' return' → logprob: -13.780059814453125
    9. '   ' → logprob: -14.280059814453125
    10. 'value' → logprob: -15.405059814453125

Token 418: ' Memo' (ID: 99417)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005325785372406244
    2. 'return' → logprob: -5.255325794219971
    3. '       ' → logprob: -9.880325317382812
    4. ' if' → logprob: -10.505325317382812
    5. '"""' → logprob: -11.630325317382812
    6. '```' → logprob: -13.005325317382812
    7. 'try' → logprob: -13.880325317382812
    8. '   ' → logprob: -14.755325317382812
    9. '#' → logprob: -15.505325317382812
    10. 'If' → logprob: -15.880325317382812

Token 419: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.09076926112174988
    2. 'ized' → logprob: -2.4657692909240723
    3. 'ize' → logprob: -6.840769290924072
    4. '   ' → logprob: -7.715769290924072
    5. ' ' → logprob: -9.215768814086914
    6. '       ' → logprob: -9.965768814086914
    7. '```' → logprob: -10.215768814086914
    8. '=' → logprob: -10.590768814086914
    9. ' =' → logprob: -10.715768814086914
    10. '  ' → logprob: -10.840768814086914

Token 420: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029784177895635366
    2. ' if' → logprob: -6.252978324890137
    3. 'if' → logprob: -7.127978324890137
    4. ':' → logprob: -9.502978324890137
    5. '```' → logprob: -9.877978324890137
    6. '   ' → logprob: -10.252978324890137
    7. ',' → logprob: -10.377978324890137
    8. '<|end|>' → logprob: -10.627978324890137
    9. '<|end|>' → logprob: -11.752978324890137
    10. '#' → logprob: -12.127978324890137

Token 421: ' save' (ID: 5093)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028483549132943153
    2. '       ' → logprob: -4.5284833908081055
    3. 'reduce' → logprob: -5.0284833908081055
    4. 'prevent' → logprob: -5.4034833908081055
    5. ' if' → logprob: -6.0284833908081055
    6. 'try' → logprob: -6.7784833908081055
    7. 'avoid' → logprob: -7.1534833908081055
    8. 'return' → logprob: -8.028483390808105
    9. '...' → logprob: -8.028483390808105
    10. 'cache' → logprob: -8.903483390808105

Token 422: ' repeated' (ID: 24161)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.07954110205173492
    2. 'computed' → logprob: -3.3295412063598633
    3. 'if' → logprob: -4.204541206359863
    4. 'results' → logprob: -4.579541206359863
    5. 'previous' → logprob: -5.704541206359863
    6. '       ' → logprob: -6.329541206359863
    7. ' computation' → logprob: -6.829541206359863
    8. 'result' → logprob: -7.204541206359863
    9. 'and' → logprob: -7.204541206359863
    10. 'comput' → logprob: -7.454541206359863

Token 423: ' checks' (ID: 22097)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.058506727218628
    2. 'calls' → logprob: -1.183506727218628
    3. 'checks' → logprob: -1.308506727218628
    4. 'comput' → logprob: -2.808506727218628
    5. 'com' → logprob: -4.808506965637207
    6. ' checks' → logprob: -5.683506965637207
    7. ' calls' → logprob: -6.308506965637207
    8. ' computations' → logprob: -6.933506965637207
    9. '   ' → logprob: -7.808506965637207
    10. 'results' → logprob: -7.808506965637207

Token 424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02246282808482647
    2. '<|end|>' → logprob: -3.897462844848633
    3. '<|end|>' → logprob: -6.772462844848633
    4. '   ' → logprob: -8.397462844848633
    5. ':' → logprob: -8.647462844848633
    6. ',' → logprob: -8.772462844848633
    7. '{' → logprob: -9.522462844848633
    8. '        
' → logprob: -10.647462844848633
    9. '```' → logprob: -10.897462844848633
    10. ' if' → logprob: -11.272462844848633

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002860073291230947
    2. '<|end|>' → logprob: -8.875286102294922
    3. '   ' → logprob: -9.625286102294922
    4. ',' → logprob: -11.250286102294922
    5. '<|end|>' → logprob: -11.500286102294922
    6. ' if' → logprob: -11.500286102294922
    7. '```' → logprob: -11.625286102294922
    8. ':' → logprob: -11.875286102294922
    9. 'if' → logprob: -11.875286102294922
    10. '        
' → logprob: -12.250286102294922

Token 426: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017226649215444922
    2. ' if' → logprob: -6.751722812652588
    3. '       ' → logprob: -7.501722812652588
    4. '   ' → logprob: -16.50172233581543
    5. '	if' → logprob: -17.00172233581543
    6. 'result' → logprob: -18.75172233581543
    7. '```' → logprob: -19.12672233581543
    8. 'cache' → logprob: -19.87672233581543
    9. 'If' → logprob: -20.00172233581543
    10. 'return' → logprob: -20.12672233581543

Token 427: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00026169343618676066
    2. ' n' → logprob: -8.250261306762695
    3. '       ' → logprob: -15.500261306762695
    4. 'not' → logprob: -16.125261306762695
    5. '   ' → logprob: -16.500261306762695
    6. '	n' → logprob: -17.000261306762695
    7. '           ' → logprob: -17.375261306762695
    8. '    ' → logprob: -18.000261306762695
    9. '(n' → logprob: -18.250261306762695
    10. '
' → logprob: -18.500261306762695

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018235161900520325
    2. 'in' → logprob: -4.018235206604004
    3. ' not' → logprob: -9.518235206604004
    4. 'not' → logprob: -11.518235206604004
    5. ' ' → logprob: -14.143235206604004
    6. 'n' → logprob: -15.018235206604004
    7. '>' → logprob: -15.768235206604004
    8. ')' → logprob: -15.893235206604004
    9. '   ' → logprob: -16.393234252929688
    10. 'In' → logprob: -16.518234252929688

Token 429: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -4.246537173457909e-06
    2. ' cls' → logprob: -12.375003814697266
    3. '(cls' → logprob: -17.625003814697266
    4. 'class' → logprob: -18.750003814697266
    5. '   ' → logprob: -19.875003814697266
    6. 'cl' → logprob: -20.625003814697266
    7. '_cls' → logprob: -21.250003814697266
    8. 'classmethod' → logprob: -21.500003814697266
    9. '.cls' → logprob: -21.500003814697266
    10. 'Cls' → logprob: -21.875003814697266

Token 430: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.3782830137643032e-05
    2. '_com' → logprob: -11.37501335144043
    3. '.' → logprob: -14.37501335144043
    4. '   ' → logprob: -14.62501335144043
    5. '_m' → logprob: -14.62501335144043
    6. '.com' → logprob: -15.87501335144043
    7. '_is' → logprob: -16.50001335144043
    8. '
' → logprob: -16.62501335144043
    9. '

' → logprob: -17.00001335144043
    10. ' .' → logprob: -17.12501335144043

Token 431: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -5.512236498361744e-07
    2. '_com' → logprob: -15.125000953674316
    3. ' composite' → logprob: -15.500000953674316
    4. '	com' → logprob: -20.875
    5. 'comic' → logprob: -21.25
    6. '<com' → logprob: -21.375
    7. 'Composite' → logprob: -21.75
    8. '(com' → logprob: -21.875
    9. '=com' → logprob: -22.125
    10. '.com' → logprob: -23.125

Token 432: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -3.464347173576243e-05
    2. '_positive' → logprob: -10.87503433227539
    3. ' composite' → logprob: -12.62503433227539
    4. 'positive' → logprob: -12.87503433227539
    5. '```' → logprob: -13.00003433227539
    6. '{' → logprob: -13.25003433227539
    7. '_' → logprob: -13.75003433227539
    8. 'Composite' → logprob: -13.87503433227539
    9. '_pos' → logprob: -14.00003433227539
    10. '_com' → logprob: -14.12503433227539

Token 433: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -5.512236498361744e-07
    2. 'cache' → logprob: -14.750000953674316
    3. 'Cache' → logprob: -17.5
    4. '_CACHE' → logprob: -19.25
    5. '_' → logprob: -19.5
    6. '\' → logprob: -21.125
    7. '
' → logprob: -21.125
    8. ' cache' → logprob: -21.125
    9. '-cache' → logprob: -21.625
    10. '	cache' → logprob: -21.625

Token 434: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14614225924015045
    2. ':' → logprob: -2.0211422443389893
    3. ' and' → logprob: -6.146142482757568
    4. 'and' → logprob: -7.146142482757568
    5. ':return' → logprob: -7.646142482757568
    6. ':

' → logprob: -11.02114200592041
    7. ' :' → logprob: -11.89614200592041
    8. '   ' → logprob: -12.02114200592041
    9. ' :
' → logprob: -12.02114200592041
    10. '):
' → logprob: -12.02114200592041

Token 435: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17923174798488617
    2. ' and' → logprob: -1.9292317628860474
    3. '           ' → logprob: -5.054231643676758
    4. ':' → logprob: -5.179231643676758
    5. ':
' → logprob: -5.929231643676758
    6. 'and' → logprob: -6.179231643676758
    7. ':return' → logprob: -7.179231643676758
    8. ' return' → logprob: -8.054231643676758
    9. ',' → logprob: -8.554231643676758
    10. '   ' → logprob: -8.554231643676758

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3162415027618408
    2. ' return' → logprob: -1.3162415027618408
    3. '           ' → logprob: -5.941241264343262
    4. '       ' → logprob: -8.066241264343262
    5. '	return' → logprob: -11.816241264343262
    6. ':return' → logprob: -11.816241264343262
    7. '               ' → logprob: -12.316241264343262
    8. '   ' → logprob: -12.566241264343262
    9. '
' → logprob: -12.566241264343262
    10. 'if' → logprob: -13.566241264343262

Token 437: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.5622653365135193
    2. 'not' → logprob: -1.437265396118164
    3. 'False' → logprob: -1.687265396118164
    4. ' not' → logprob: -5.187265396118164
    5. ' cls' → logprob: -7.062265396118164
    6. ' False' → logprob: -7.062265396118164
    7. 'True' → logprob: -9.437265396118164
    8. 'false' → logprob: -10.187265396118164
    9. '(cls' → logprob: -11.624765396118164
    10. '   ' → logprob: -11.937265396118164

Token 438: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.12127808178775e-05
    2. '.' → logprob: -11.000051498413086
    3. '_com' → logprob: -11.375051498413086
    4. ')._' → logprob: -11.875051498413086
    5. ']._' → logprob: -12.250051498413086
    6. ' ' → logprob: -12.625051498413086
    7. '.com' → logprob: -13.250051498413086
    8. '
' → logprob: -13.625051498413086
    9. 'com' → logprob: -14.000051498413086
    10. '_' → logprob: -14.125051498413086

Token 439: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00018125296628568321
    2. '_com' → logprob: -8.625181198120117
    3. '(com' → logprob: -14.500181198120117
    4. ' composite' → logprob: -15.250181198120117
    5. '.com' → logprob: -15.500181198120117
    6. '	com' → logprob: -15.750181198120117
    7. '_' → logprob: -16.000181198120117
    8. 'complex' → logprob: -16.750181198120117
    9. 'composition' → logprob: -16.750181198120117
    10. 'c' → logprob: -16.875181198120117

Token 440: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.0004903609515167773
    2. 'osite' → logprob: -8.000490188598633
    3. 'pos' → logprob: -9.750490188598633
    4. '```' → logprob: -10.375490188598633
    5. '{' → logprob: -10.875490188598633
    6. 'positive' → logprob: -12.125490188598633
    7. '
' → logprob: -12.125490188598633
    8. '[' → logprob: -12.375490188598633
    9. '_pos' → logprob: -12.625490188598633
    10. '{
' → logprob: -13.125490188598633

Token 441: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -5.228561349213123e-05
    2. 'cache' → logprob: -9.875052452087402
    3. 'Cache' → logprob: -14.375052452087402
    4. '_CACHE' → logprob: -16.250051498413086
    5. 'c' → logprob: -17.125051498413086
    6. 'n' → logprob: -17.125051498413086
    7. '_cached' → logprob: -17.250051498413086
    8. '-cache' → logprob: -17.750051498413086
    9. 'CACHE' → logprob: -17.875051498413086
    10. '	cache' → logprob: -18.500051498413086

Token 442: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00020544764993246645
    2. '.get' → logprob: -8.625205039978027
    3. '[' → logprob: -10.750205039978027
    4. 'n' → logprob: -12.375205039978027
    5. 'True' → logprob: -17.000205993652344
    6. '.setdefault' → logprob: -17.250205993652344
    7. 'get' → logprob: -17.625205993652344
    8. '[get' → logprob: -18.000205993652344
    9. 'true' → logprob: -18.875205993652344
    10. '.n' → logprob: -19.125205993652344

Token 443: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08828116953372955
    2. ']
' → logprob: -2.5882811546325684
    3. '       ' → logprob: -4.713281154632568
    4. ']==' → logprob: -8.838281631469727
    5. ']

' → logprob: -8.963281631469727
    6. ' ]' → logprob: -10.588281631469727
    7. ']
' → logprob: -10.838281631469727
    8. '
' → logprob: -11.088281631469727
    9. ']()
' → logprob: -11.588281631469727
    10. ' ]
' → logprob: -12.338281631469727

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.1928003813372925e-05
    2. '<|end|>' → logprob: -11.000051498413086
    3. '        
' → logprob: -11.500051498413086
    4. '```' → logprob: -11.875051498413086
    5. ')' → logprob: -12.750051498413086
    6. 'if' → logprob: -12.875051498413086
    7. '           ' → logprob: -13.625051498413086
    8. ' if' → logprob: -13.750051498413086
    9. '
' → logprob: -13.750051498413086
    10. '        ' → logprob: -13.875051498413086

Token 445: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009245496243238449
    2. '       ' → logprob: -5.5092453956604
    3. ' if' → logprob: -5.7592453956604
    4. '   ' → logprob: -6.2592453956604
    5. 'result' → logprob: -10.134245872497559
    6. 'is' → logprob: -10.134245872497559
    7. '```' → logprob: -13.384245872497559
    8. 'for' → logprob: -13.509245872497559
    9. 'value' → logprob: -14.134245872497559
    10. ' ' → logprob: -14.259245872497559

Token 446: ' Must' (ID: 20953)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002565552946180105
    2. '       ' → logprob: -6.502565383911133
    3. '#' → logprob: -7.627565383911133
    4. ' if' → logprob: -7.877565383911133
    5. 'If' → logprob: -9.627565383911133
    6. 'result' → logprob: -10.502565383911133
    7. '   ' → logprob: -10.877565383911133
    8. 'value' → logprob: -10.877565383911133
    9. 'Check' → logprob: -11.127565383911133
    10. 'First' → logprob: -11.377565383911133

Token 447: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.286770224571228
    2. 'be' → logprob: -1.411770224571228
    3. '%' → logprob: -1.536770224571228
    4. '=' → logprob: -2.2867703437805176
    5. 'mod' → logprob: -3.2867703437805176
    6. ' %' → logprob: -3.7867703437805176
    7. '%=' → logprob: -3.7867703437805176
    8. 'not' → logprob: -4.161770343780518
    9. 'if' → logprob: -4.411770343780518
    10. ' not' → logprob: -4.536770343780518

Token 448: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.12076320499181747
    2. 'n' → logprob: -2.2457633018493652
    3. 'cls' → logprob: -4.995763301849365
    4. '(n' → logprob: -7.745763301849365
    5. ' Monday' → logprob: -8.870762825012207
    6. '((' → logprob: -9.120762825012207
    7. '(cls' → logprob: -9.245762825012207
    8. '(M' → logprob: -9.370762825012207
    9. '(' → logprob: -9.745762825012207
    10. 'a' → logprob: -9.870762825012207

Token 449: '-S' (ID: 6968)
  Prédit: 'Saturday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.7418043613433838
    2. '       ' → logprob: -1.8668043613433838
    3. ' or' → logprob: -2.116804361343384
    4. '_s' → logprob: -2.116804361343384
    5. 'or' → logprob: -2.991804361343384
    6. '   ' → logprob: -3.866804361343384
    7. '-s' → logprob: -3.991804361343384
    8. '-S' → logprob: -4.491804122924805
    9. 's' → logprob: -4.616804122924805
    10. '_S' → logprob: -5.491804122924805

Token 450: 'aturday' (ID: 8790)
  Prédit: 'Saturday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.3873235285282135
    2. 'aturday' → logprob: -1.1373234987258911
    3. '_s' → logprob: -8.512323379516602
    4. 's' → logprob: -9.762323379516602
    5. ' Saturday' → logprob: -10.012323379516602
    6. '   ' → logprob: -10.262323379516602
    7. '_S' → logprob: -10.262323379516602
    8. 'at' → logprob: -11.262323379516602
    9. '```' → logprob: -11.262323379516602
    10. '-S' → logprob: -12.012323379516602

Token 451: ' number' (ID: 2086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8830031156539917
    2. 'if' → logprob: -1.5080031156539917
    3. ' if' → logprob: -1.6330031156539917
    4. 'number' → logprob: -2.8830032348632812
    5. ' number' → logprob: -3.3830032348632812
    6. 'mod' → logprob: -3.6330032348632812
    7. '   ' → logprob: -4.008003234863281
    8. ' and' → logprob: -4.133003234863281
    9. 'and' → logprob: -4.883003234863281
    10. '_number' → logprob: -5.508003234863281

Token 452: ' >' (ID: 1424)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024029968306422234
    2. '   ' → logprob: -4.524029731750488
    3. 'if' → logprob: -4.524029731750488
    4. ' if' → logprob: -6.274029731750488
    5. ' and' → logprob: -9.399029731750488
    6. 'and' → logprob: -10.774029731750488
    7. ',' → logprob: -11.024029731750488
    8. ' ' → logprob: -11.649029731750488
    9. '      ' → logprob: -12.024029731750488
    10. ' =' → logprob: -12.149029731750488

Token 453: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036823786795139313
    2. ' ' → logprob: -5.628682613372803
    3. 'and' → logprob: -10.503682136535645
    4. '   ' → logprob: -10.878682136535645
    5. '       ' → logprob: -11.003682136535645
    6. '           ' → logprob: -12.753682136535645
    7. ',' → logprob: -12.878682136535645
    8. ' and' → logprob: -12.878682136535645
    9. '=' → logprob: -13.003682136535645
    10. '  ' → logprob: -13.253682136535645

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '6' → logprob: -15.875009536743164
    4. '7' → logprob: -16.500009536743164
    5. '```' → logprob: -17.250009536743164
    6. '0' → logprob: -17.312509536743164
    7. '   ' → logprob: -17.687509536743164
    8. '>' → logprob: -18.062509536743164
    9. '۱' → logprob: -18.437509536743164
    10. '<|end|>' → logprob: -18.625009536743164

Token 455: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004145591985434294
    2. 'if' → logprob: -6.254145622253418
    3. ' if' → logprob: -6.629145622253418
    4. '   ' → logprob: -7.129145622253418
    5. '<|end|>' → logprob: -10.129145622253418
    6. ',' → logprob: -10.504145622253418
    7. ' and' → logprob: -11.629145622253418
    8. '        
' → logprob: -12.379145622253418
    9. ' ' → logprob: -12.504145622253418
    10. '      ' → logprob: -13.629145622253418

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007709312252700329
    2. 'if' → logprob: -5.257709503173828
    3. '   ' → logprob: -6.257709503173828
    4. ' if' → logprob: -7.507709503173828
    5. '<|end|>' → logprob: -13.007709503173828
    6. '      ' → logprob: -13.632709503173828
    7. ' ' → logprob: -13.882709503173828
    8. '        
' → logprob: -14.132709503173828
    9. '           ' → logprob: -14.382709503173828
    10. '     ' → logprob: -14.507709503173828

Token 457: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02901231124997139
    2. '       ' → logprob: -3.9040122032165527
    3. '   ' → logprob: -5.029012203216553
    4. ' if' → logprob: -6.279012203216553
    5. 'value' → logprob: -11.904012680053711
    6. '  ' → logprob: -13.654012680053711
    7. '     ' → logprob: -13.904012680053711
    8. ' ' → logprob: -14.029012680053711
    9. '      ' → logprob: -14.029012680053711
    10. '
' → logprob: -14.154012680053711

Token 458: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038321226835250854
    2. ' n' → logprob: -3.2883212566375732
    3. '       ' → logprob: -9.413321495056152
    4. 'not' → logprob: -9.663321495056152
    5. '(n' → logprob: -10.038321495056152
    6. ' not' → logprob: -10.288321495056152
    7. '   ' → logprob: -10.288321495056152
    8. ' (' → logprob: -11.413321495056152
    9. '	n' → logprob: -12.663321495056152
    10. '(' → logprob: -12.913321495056152

Token 459: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20141743123531342
    2. '<=' → logprob: -1.7014174461364746
    3. '%' → logprob: -13.326416969299316
    4. ' ' → logprob: -14.076416969299316
    5. '<' → logprob: -14.201416969299316
    6. ' <' → logprob: -14.201416969299316
    7. ' %' → logprob: -15.826416969299316
    8. '>' → logprob: -16.326417922973633
    9. '   ' → logprob: -16.326417922973633
    10. ' >' → logprob: -16.951417922973633

Token 460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.625123977661133
    4. '```' → logprob: -16.750123977661133
    5. '  ' → logprob: -17.437623977661133
    6. '0' → logprob: -18.000123977661133
    7. '۱' → logprob: -18.062623977661133
    8. '
' → logprob: -18.875123977661133
    9. '' → logprob: -19.000123977661133
    10. '१' → logprob: -19.187623977661133

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. '۱' → logprob: -19.0625057220459
    5. '１' → logprob: -19.1875057220459
    6. '
' → logprob: -19.1875057220459
    7. '```' → logprob: -19.2500057220459
    8. '  ' → logprob: -19.5625057220459
    9. '' → logprob: -19.6250057220459
    10. '१' → logprob: -19.6875057220459

Token 462: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003773716278374195
    2. 'or' → logprob: -5.6287736892700195
    3. '       ' → logprob: -9.50377368927002
    4. '           ' → logprob: -9.87877368927002
    5. ':' → logprob: -10.12877368927002
    6. '	or' → logprob: -12.75377368927002
    7. ':
' → logprob: -13.00377368927002
    8. ':return' → logprob: -14.37877368927002
    9. ',' → logprob: -14.75377368927002
    10. '   ' → logprob: -14.87877368927002

Token 463: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0022307864855974913
    2. '(n' → logprob: -6.502230644226074
    3. ' n' → logprob: -7.252230644226074
    4. ' (' → logprob: -11.877230644226074
    5. '(' → logprob: -12.002230644226074
    6. '       ' → logprob: -13.377230644226074
    7. '   ' → logprob: -13.752230644226074
    8. '           ' → logprob: -13.752230644226074
    9. '	n' → logprob: -13.752230644226074
    10. 'not' → logprob: -15.252230644226074

Token 464: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3873191475868225
    2. '%' → logprob: -1.1373190879821777
    3. ' not' → logprob: -7.762319087982178
    4. 'not' → logprob: -11.012319564819336
    5. '%n' → logprob: -13.137319564819336
    6. ')' → logprob: -13.512319564819336
    7. ' ' → logprob: -13.887319564819336
    8. '   ' → logprob: -14.887319564819336
    9. 'n' → logprob: -15.512319564819336
    10. ' ' → logprob: -15.762319564819336

Token 465: ' ' (ID: 220)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.3184860050678253
    2. '7' → logprob: -1.318485975265503
    3. ' cls' → logprob: -5.568486213684082
    4. 'Monday' → logprob: -6.693486213684082
    5. ' ' → logprob: -9.568486213684082
    6. ' Monday' → logprob: -10.443486213684082
    7. '   ' → logprob: -10.818486213684082
    8. '(cls' → logprob: -11.193486213684082
    9. 'Cls' → logprob: -12.193486213684082
    10. '```' → logprob: -12.443486213684082

Token 466: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.28168657422065735
    2. 'cls' → logprob: -1.406686544418335
    3. 'Monday' → logprob: -7.781686782836914
    4. ' cls' → logprob: -9.281686782836914
    5. '(cls' → logprob: -11.906686782836914
    6. ' ' → logprob: -12.031686782836914
    7. 'class' → logprob: -13.156686782836914
    8. '```' → logprob: -13.281686782836914
    9. 'Cls' → logprob: -13.406686782836914
    10. '.cls' → logprob: -13.906686782836914

Token 467: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06197160854935646
    2. 'not' → logprob: -2.811971664428711
    3. ')' → logprob: -12.686971664428711
    4. ' ' → logprob: -15.186971664428711
    5. '0' → logprob: -15.311971664428711
    6. '	not' → logprob: -16.56197166442871
    7. 'n' → logprob: -16.68697166442871
    8. '```' → logprob: -16.81197166442871
    9. '   ' → logprob: -17.06197166442871
    10. '1' → logprob: -17.68697166442871

Token 468: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11347892135381699
    2. ' in' → logprob: -2.238478899002075
    3. '{' → logprob: -7.488479137420654
    4. 'to' → logprob: -10.863478660583496
    5. ' {' → logprob: -10.988478660583496
    6. '  ' → logprob: -11.363478660583496
    7. ' ' → logprob: -11.488478660583496
    8. '[' → logprob: -11.613478660583496
    9. 'not' → logprob: -11.613478660583496
    10. ')' → logprob: -12.488478660583496

Token 469: ' Monday' (ID: 10715)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.4786207973957062
    2. '{' → logprob: -0.9786207675933838
    3. 'Monday' → logprob: -5.478621006011963
    4. '(' → logprob: -8.728620529174805
    5. '(cls' → logprob: -9.103620529174805
    6. ' cls' → logprob: -9.978620529174805
    7. ' {' → logprob: -11.728620529174805
    8. ' Monday' → logprob: -11.728620529174805
    9. '(M' → logprob: -11.853620529174805
    10. '[' → logprob: -12.228620529174805

Token 470: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.01422944013029337
    2. '{' → logprob: -4.2642292976379395
    3. 'Monday' → logprob: -10.264229774475098
    4. ' Saturday' → logprob: -11.389229774475098
    5. 'cls' → logprob: -12.514229774475098
    6. 'Sunday' → logprob: -12.514229774475098
    7. '[' → logprob: -12.889229774475098
    8. '(cls' → logprob: -13.389229774475098
    9. '{s' → logprob: -13.389229774475098
    10. '`' → logprob: -13.514229774475098

Token 471: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0016341203590855002
    2. 'Prime' → logprob: -6.751634120941162
    3. 'Saturday' → logprob: -8.126633644104004
    4. '{' → logprob: -8.751633644104004
    5. '`' → logprob: -12.751633644104004
    6. 'number' → logprob: -13.126633644104004
    7. 'Monday' → logprob: -13.376633644104004
    8. 'Numbers' → logprob: -14.376633644104004
    9. '```' → logprob: -14.626633644104004
    10. '[' → logprob: -14.751633644104004

Token 472: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.020243922248482704
    2. '.M' → logprob: -4.020244121551514
    3. 'MOD' → logprob: -7.020244121551514
    4. '{' → logprob: -7.645244121551514
    5. '.' → logprob: -8.020243644714355
    6. '.MODE' → logprob: -8.145243644714355
    7. '.{' → logprob: -9.770243644714355
    8. '._' → logprob: -11.520243644714355
    9. '_MOD' → logprob: -11.770243644714355
    10. ' .' → logprob: -12.020243644714355

Token 473: '_VALUES' (ID: 131844)
  Prédit: '_VALUES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_VALUES' → logprob: -0.00861468818038702
    2. 'VALUES' → logprob: -4.758614540100098
    3. 'Values' → logprob: -16.883615493774414
    4. '{' → logprob: -17.008615493774414
    5. ' VALUES' → logprob: -17.508615493774414
    6. '	values' → logprob: -17.633615493774414
    7. 'values' → logprob: -17.633615493774414
    8. '_values' → logprob: -17.633615493774414
    9. '.values' → logprob: -18.258615493774414
    10. '_' → logprob: -18.383615493774414

Token 474: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2529159188270569
    2. ':' → logprob: -1.502915859222412
    3. '       ' → logprob: -7.502915859222412
    4. '):
' → logprob: -8.25291633605957
    5. ':return' → logprob: -9.87791633605957
    6. '           ' → logprob: -10.00291633605957
    7. '   ' → logprob: -10.62791633605957
    8. '=' → logprob: -11.37791633605957
    9. '):' → logprob: -11.50291633605957
    10. ' or' → logprob: -11.87791633605957

Token 475: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3293769657611847
    2. ':' → logprob: -1.3293769359588623
    3. '           ' → logprob: -4.829377174377441
    4. ':
' → logprob: -5.079377174377441
    5. ':return' → logprob: -7.204377174377441
    6. ' or' → logprob: -7.454377174377441
    7. '):' → logprob: -9.579377174377441
    8. '):
' → logprob: -9.579377174377441
    9. ' and' → logprob: -10.329377174377441
    10. ',' → logprob: -10.454377174377441

Token 476: ' cls' (ID: 26133)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11134544759988785
    2. ' return' → logprob: -2.7363455295562744
    3. '           ' → logprob: -3.3613455295562744
    4. 'cls' (adapté à ' cls') → logprob: -5.861345291137695
    5. '       ' → logprob: -6.361345291137695
    6. '
' → logprob: -7.111345291137695
    7. ' cls' → logprob: -8.111345291137695
    8. '   ' → logprob: -9.736345291137695
    9. ':return' → logprob: -10.736345291137695
    10. ' ' → logprob: -10.861345291137695

Token 477: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.407366916188039e-05
    2. '_com' → logprob: -10.125054359436035
    3. ']._' → logprob: -11.875054359436035
    4. ')._' → logprob: -13.000054359436035
    5. '.' → logprob: -13.500054359436035
    6. '.com' → logprob: -13.625054359436035
    7. ' .' → logprob: -13.750054359436035
    8. '_' → logprob: -15.125054359436035
    9. '   ' → logprob: -15.750054359436035
    10. '       ' → logprob: -16.00005340576172

Token 478: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -3.2378600735682994e-05
    2. '_com' → logprob: -10.375032424926758
    3. ' composite' → logprob: -15.625032424926758
    4. '(com' → logprob: -16.125032424926758
    5. '<com' → logprob: -16.125032424926758
    6. 'c' → logprob: -16.250032424926758
    7. '```' → logprob: -16.500032424926758
    8. '	com' → logprob: -16.500032424926758
    9. 'comp' → logprob: -16.750032424926758
    10. '_' → logprob: -17.250032424926758

Token 479: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -7.822646693966817e-06
    2. 'pos' → logprob: -12.000007629394531
    3. '```' → logprob: -14.125007629394531
    4. 'positive' → logprob: -16.00000762939453
    5. 'posit' → logprob: -16.00000762939453
    6. '_pos' → logprob: -16.00000762939453
    7. 'osite' → logprob: -16.37500762939453
    8. '>' → logprob: -16.37500762939453
    9. 'pose' → logprob: -16.62500762939453
    10. '_' → logprob: -17.25000762939453

Token 480: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.8889261304575484e-06
    2. 'cache' → logprob: -12.500003814697266
    3. 'Cache' → logprob: -18.000003814697266
    4. '_CACHE' → logprob: -18.375003814697266
    5. '-cache' → logprob: -20.000003814697266
    6. '	cache' → logprob: -20.500003814697266
    7. '{' → logprob: -22.500003814697266
    8. 'c' → logprob: -22.500003814697266
    9. ' cache' → logprob: -22.500003814697266
    10. 'CACHE' → logprob: -22.500003814697266

Token 481: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.52788148727268e-05
    2. '[' → logprob: -9.750064849853516
    3. '=' → logprob: -12.375064849853516
    4. ' [' → logprob: -13.250064849853516
    5. ' =' → logprob: -14.250064849853516
    6. '=n' → logprob: -16.500064849853516
    7. '[...]' → logprob: -17.750064849853516
    8. '   ' → logprob: -18.000064849853516
    9. '[N' → logprob: -18.000064849853516
    10. '\[' → logprob: -18.375064849853516

Token 482: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5982978940010071
    2. ']' → logprob: -0.8482978940010071
    3. ']=' → logprob: -3.9732978343963623
    4. ' =' → logprob: -5.723298072814941
    5. '=True' → logprob: -11.348298072814941
    6. ' ]' → logprob: -12.098298072814941
    7. ')' → logprob: -12.473298072814941
    8. 'return' → logprob: -12.473298072814941
    9. '=False' → logprob: -13.098298072814941
    10. ':' → logprob: -14.848298072814941

Token 483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011705794604495168
    2. ' =' → logprob: -6.751170635223389
    3. '=True' → logprob: -15.12617015838623
    4. '=False' → logprob: -16.251171112060547
    5. '=
' → logprob: -17.376171112060547
    6. '       ' → logprob: -18.251171112060547
    7. '           ' → logprob: -18.501171112060547
    8. '   ' → logprob: -19.001171112060547
    9. ']=' → logprob: -19.376171112060547
    10. '=

' → logprob: -19.626171112060547

Token 484: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -19.25001335144043
    4. 'True' → logprob: -20.25001335144043
    5. '=False' → logprob: -20.62501335144043
    6. 'false' → logprob: -21.12501335144043
    7. '   ' → logprob: -21.37501335144043
    8. '.False' → logprob: -21.62501335144043
    9. '_false' → logprob: -22.62501335144043
    10. 'F' → logprob: -23.50001335144043

Token 485: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015038289711810648
    2. '       ' → logprob: -9.375150680541992
    3. '<|end|>' → logprob: -10.375150680541992
    4. ',' → logprob: -11.625150680541992
    5. '               ' → logprob: -11.875150680541992
    6. '   ' → logprob: -13.000150680541992
    7. 'return' → logprob: -13.000150680541992
    8. '```' → logprob: -13.125150680541992
    9. '<|end|>' → logprob: -13.125150680541992
    10. '	       ' → logprob: -13.500150680541992

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015991552209015936
    2. '       ' → logprob: -8.875160217285156
    3. '               ' → logprob: -12.125160217285156
    4. '<|end|>' → logprob: -12.125160217285156
    5. '```' → logprob: -13.250160217285156
    6. '   ' → logprob: -13.375160217285156
    7. '	       ' → logprob: -13.500160217285156
    8. ',' → logprob: -13.750160217285156
    9. '                   ' → logprob: -14.250160217285156
    10. '          ' → logprob: -14.625160217285156

Token 487: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1310867965221405
    2. 'return' (adapté à ' return') → logprob: -2.131086826324463
    3. ' return' → logprob: -5.506086826324463
    4. '       ' → logprob: -9.631086349487305
    5. '   ' → logprob: -11.256086349487305
    6. '               ' → logprob: -12.631086349487305
    7. '	return' → logprob: -12.881086349487305
    8. '          ' → logprob: -14.256086349487305
    9. '
' → logprob: -14.381086349487305
    10. ' ' → logprob: -14.506086349487305

Token 488: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. '(False' → logprob: -21.750003814697266
    4. 'false' → logprob: -22.250003814697266
    5. '=False' → logprob: -24.000003814697266
    6. 'True' → logprob: -24.250003814697266
    7. '   ' → logprob: -25.375003814697266
    8. '_false' → logprob: -25.750003814697266
    9. 'FALSE' → logprob: -26.000003814697266
    10. 'F' → logprob: -26.500003814697266

Token 489: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001513196504674852
    2. '   ' → logprob: -7.6265130043029785
    3. '<|end|>' → logprob: -7.6265130043029785
    4. '        
' → logprob: -8.501513481140137
    5. '
' → logprob: -8.876513481140137
    6. '```' → logprob: -9.251513481140137
    7. ',' → logprob: -10.876513481140137
    8. '<|end|>' → logprob: -11.501513481140137
    9. '           ' → logprob: -11.876513481140137
    10. '    
' → logprob: -11.876513481140137

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014897463843226433
    2. '   ' → logprob: -6.876489639282227
    3. '
' → logprob: -8.626489639282227
    4. '```' → logprob: -8.751489639282227
    5. '        
' → logprob: -9.876489639282227
    6. '<|end|>' → logprob: -10.876489639282227
    7. 'if' → logprob: -11.501489639282227
    8. '#' → logprob: -11.876489639282227
    9. '           ' → logprob: -12.126489639282227
    10. '    
' → logprob: -13.001489639282227

Token 491: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02145930379629135
    2. '       ' → logprob: -4.771459102630615
    3. '#' (adapté à ' #') → logprob: -4.896459102630615
    4. 'result' → logprob: -6.146459102630615
    5. '   ' → logprob: -6.646459102630615
    6. ' if' → logprob: -7.021459102630615
    7. 'is' → logprob: -7.646459102630615
    8. 'for' → logprob: -8.146459579467773
    9. '```' → logprob: -10.021459579467773
    10. 'prime' → logprob: -10.396459579467773

Token 492: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017132380977272987
    2. '#' → logprob: -4.26713228225708
    3. '       ' → logprob: -6.39213228225708
    4. 'result' → logprob: -7.26713228225708
    5. ' if' → logprob: -8.017132759094238
    6. 'is' → logprob: -9.392132759094238
    7. 'If' → logprob: -9.392132759094238
    8. '   ' → logprob: -10.642132759094238
    9. 'prime' → logprob: -10.892132759094238
    10. 'res' → logprob: -11.517132759094238

Token 493: ' usual' (ID: 19261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3652688264846802
    2. 'cls' → logprob: -1.6152688264846802
    3. 'not' → logprob: -3.3652687072753906
    4. 'Monday' → logprob: -3.4902687072753906
    5. ' not' → logprob: -3.6152687072753906
    6. ' cls' → logprob: -4.615268707275391
    7. ' n' → logprob: -5.740268707275391
    8. '(cls' → logprob: -6.990268707275391
    9. ' Monday' → logprob: -7.240268707275391
    10. '   ' → logprob: -9.74026870727539

Token 494: ' prime' (ID: 9197)
  Prédit: '_is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_is' → logprob: -0.7476898431777954
    2. 'cls' → logprob: -2.122689723968506
    3. 'is' → logprob: -2.247689723968506
    4. '_prime' → logprob: -2.372689723968506
    5. 'prime' → logprob: -2.497689723968506
    6. 'not' → logprob: -3.497689723968506
    7. '_us' → logprob: -3.747689723968506
    8. '_check' → logprob: -4.372689723968506
    9. '_checks' → logprob: -5.122689723968506
    10. '(cls' → logprob: -5.122689723968506

Token 495: ' and' (ID: 326)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.534430980682373
    2. 'check' → logprob: -1.784430980682373
    3. ' check' → logprob: -2.534430980682373
    4. '_check' → logprob: -2.784430980682373
    5. '(cls' → logprob: -2.784430980682373
    6. 'cls' → logprob: -4.409430980682373
    7. ' and' → logprob: -4.909430980682373
    8. 'and' → logprob: -5.284430980682373
    9. ':' → logprob: -5.534430980682373
    10. '   ' → logprob: -5.784430980682373

Token 496: ' MS' (ID: 15861)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.255389004945755
    2. '(n' → logprob: -1.6303889751434326
    3. 'Monday' → logprob: -4.755389213562012
    4. ' (' → logprob: -4.880389213562012
    5. ' n' → logprob: -4.880389213562012
    6. '(' → logprob: -5.880389213562012
    7. '(cls' → logprob: -7.005389213562012
    8. ' Monday' → logprob: -7.130389213562012
    9. '((' → logprob: -8.130389213562012
    10. '(M' → logprob: -8.255389213562012

Token 497: ' number' (ID: 2086)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.5505329966545105
    2. 'prime' → logprob: -1.4255330562591553
    3. ' prime' → logprob: -2.1755330562591553
    4. '_number' → logprob: -4.550532817840576
    5. ' number' → logprob: -4.800532817840576
    6. 'mod' → logprob: -5.050532817840576
    7. 'r' → logprob: -5.050532817840576
    8. '   ' → logprob: -5.550532817840576
    9. '(cls' → logprob: -5.800532817840576
    10. '       ' → logprob: -5.800532817840576

Token 498: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6968716979026794
    2. ':' → logprob: -1.0718717575073242
    3. ',' → logprob: -1.9468717575073242
    4. ' and' → logprob: -5.196871757507324
    5. ':
' → logprob: -5.571871757507324
    6. ' =' → logprob: -5.821871757507324
    7. '=' → logprob: -6.946871757507324
    8. '=True' → logprob: -6.946871757507324
    9. '           ' → logprob: -7.321871757507324
    10. ' if' → logprob: -7.696871757507324

Token 499: ' MS' (ID: 15861)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.11579345911741257
    2. ' True' → logprob: -2.365793466567993
    3. 'cls' → logprob: -5.365793228149414
    4. 'return' → logprob: -5.615793228149414
    5. ' cls' → logprob: -5.740793228149414
    6. '       ' → logprob: -6.115793228149414
    7. ' return' → logprob: -7.365793228149414
    8. 'result' → logprob: -7.990793228149414
    9. '           ' → logprob: -8.115793228149414
    10. 'true' → logprob: -8.615793228149414

Token 500: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.3176150321960449
    2. 'Prime' → logprob: -1.442615032196045
    3. '       ' → logprob: -4.567615032196045
    4. 'True' → logprob: -5.317615032196045
    5. '_number' → logprob: -6.192615032196045
    6. '_true' → logprob: -6.567615032196045
    7. 'return' → logprob: -6.567615032196045
    8. '_cache' → logprob: -6.567615032196045
    9. 'prime' → logprob: -6.567615032196045
    10. '=True' → logprob: -6.567615032196045

Token 501: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009279042482376099
    2. '<|end|>' → logprob: -4.884279251098633
    3. ' if' → logprob: -7.134279251098633
    4. ',' → logprob: -8.384279251098633
    5. '<|end|>' → logprob: -8.759279251098633
    6. 'if' → logprob: -8.884279251098633
    7. ' =' → logprob: -9.884279251098633
    8. '   ' → logprob: -9.884279251098633
    9. 's' → logprob: -10.134279251098633
    10. '=True' → logprob: -10.384279251098633

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006608496769331396
    2. '   ' → logprob: -8.12566089630127
    3. ' if' → logprob: -8.62566089630127
    4. 'if' → logprob: -8.75066089630127
    5. 'return' → logprob: -11.75066089630127
    6. '
' → logprob: -12.62566089630127
    7. '<|end|>' → logprob: -12.62566089630127
    8. 'result' → logprob: -13.00066089630127
    9. '           ' → logprob: -13.25066089630127
    10. '        
' → logprob: -13.37566089630127

Token 503: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8463953733444214
    2. 'if' (adapté à ' if') → logprob: -1.0963953733444214
    3. 'result' → logprob: -1.4713953733444214
    4. ' if' → logprob: -5.596395492553711
    5. 'is' → logprob: -6.471395492553711
    6. ' result' → logprob: -7.096395492553711
    7. '   ' → logprob: -7.346395492553711
    8. 'res' → logprob: -7.721395492553711
    9. 'return' → logprob: -9.846395492553711
    10. '      ' → logprob: -10.346395492553711

Token 504: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.016075309365987778
    2. ' cls' → logprob: -4.141075134277344
    3. 'Monday' → logprob: -10.891075134277344
    4. '(cls' → logprob: -11.641075134277344
    5. '   ' → logprob: -12.141075134277344
    6. 'not' → logprob: -12.516075134277344
    7. ' not' → logprob: -13.266075134277344
    8. ' Monday' → logprob: -14.016075134277344
    9. 'class' → logprob: -14.141075134277344
    10. ' ' → logprob: -14.766075134277344

Token 505: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.320199877838604e-07
    2. '_is' → logprob: -15.625
    3. '   ' → logprob: -16.375
    4. '.' → logprob: -17.75
    5. ')._' → logprob: -18.25
    6. '::_' → logprob: -18.375
    7. '
' → logprob: -18.625
    8. '().' → logprob: -18.875
    9. '_in' → logprob: -19.0
    10. '.is' → logprob: -19.0

Token 506: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.3856492842023727e-06
    2. '_is' → logprob: -14.875000953674316
    3. '`' → logprob: -16.000001907348633
    4. 'com' → logprob: -16.000001907348633
    5. 'class' → logprob: -16.125001907348633
    6. ' is' → logprob: -16.250001907348633
    7. 'Monday' → logprob: -16.500001907348633
    8. '```' → logprob: -16.625001907348633
    9. '_' → logprob: -17.000001907348633
    10. '
' → logprob: -17.125001907348633

Token 507: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0009164590737782419
    2. 'prime' → logprob: -7.000916481018066
    3. '_m' → logprob: -13.625916481018066
    4. '_us' → logprob: -14.000916481018066
    5. '_pr' → logprob: -14.500916481018066
    6. ' prime' → logprob: -14.625916481018066
    7. 'Prime' → logprob: -14.750916481018066
    8. 'is' → logprob: -14.875916481018066
    9. '```' → logprob: -14.875916481018066
    10. '_is' → logprob: -15.250916481018066

Token 508: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -1.9361264946837764e-07
    2. 'usual' → logprob: -16.125
    3. '(us' → logprob: -18.5
    4. 'us' → logprob: -19.25
    5. 'Us' → logprob: -19.25
    6. '(cls' → logprob: -19.5
    7. '(' → logprob: -19.875
    8. '_(' → logprob: -20.125
    9. '_US' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 509: 'ual' (ID: 850)
  Prédit: 'ual'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ual' → logprob: -0.03176964074373245
    2. 'able' → logprob: -4.156769752502441
    3. 'e' → logprob: -5.406769752502441
    4. 'prime' → logprob: -5.906769752502441
    5. 'al' → logprob: -6.281769752502441
    6. 's' → logprob: -6.656769752502441
    7. 'usual' → logprob: -7.281769752502441
    8. 'age' → logprob: -7.281769752502441
    9. 'ale' → logprob: -7.406769752502441
    10. 'ure' → logprob: -7.406769752502441

Token 510: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -14.250000953674316
    3. '(' → logprob: -14.625000953674316
    4. '(cls' → logprob: -17.500001907348633
    5. '(
' → logprob: -17.500001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '       ' → logprob: -20.250001907348633
    8. ',' → logprob: -20.875001907348633
    9. '```' → logprob: -21.000001907348633
    10. ')(' → logprob: -21.375001907348633

Token 511: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134196102619171
    2. '):
' → logprob: -1.3134195804595947
    3. ' ):' → logprob: -9.563419342041016
    4. ')' → logprob: -10.313419342041016
    5. '):
' → logprob: -10.813419342041016
    6. ' ):
' → logprob: -10.938419342041016
    7. '       ' → logprob: -11.563419342041016
    8. '   ' → logprob: -12.313419342041016
    9. '):

' → logprob: -13.938419342041016
    10. ':' → logprob: -14.313419342041016

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018823543563485146
    2. '       ' → logprob: -4.018823623657227
    3. ':' → logprob: -7.643823623657227
    4. ':
' → logprob: -9.018823623657227
    5. 'return' → logprob: -11.268823623657227
    6. '):
' → logprob: -11.518823623657227
    7. ' return' → logprob: -11.643823623657227
    8. ',' → logprob: -11.893823623657227
    9. ':return' → logprob: -12.268823623657227
    10. '{
' → logprob: -12.518823623657227

Token 513: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.00801529735326767
    2. ' cls' → logprob: -5.258015155792236
    3. '       ' → logprob: -6.883015155792236
    4. '           ' → logprob: -6.883015155792236
    5. 'result' → logprob: -7.258015155792236
    6. ' result' → logprob: -11.883015632629395
    7. 'return' → logprob: -12.008015632629395
    8. '   ' → logprob: -13.008015632629395
    9. 'true' → logprob: -13.508015632629395
    10. 'retval' → logprob: -13.633015632629395

Token 514: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.1054253011243418e-05
    2. ']._' → logprob: -11.375020980834961
    3. ')._' → logprob: -11.750020980834961
    4. '_com' → logprob: -14.125020980834961
    5. '->_' → logprob: -15.000020980834961
    6. '."_' → logprob: -16.12502098083496
    7. '.' → logprob: -16.50002098083496
    8. '::_' → logprob: -16.75002098083496
    9. '_' → logprob: -16.75002098083496
    10. '.__' → logprob: -16.87502098083496

Token 515: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -3.023293538717553e-05
    2. '_com' → logprob: -10.750030517578125
    3. 'is' → logprob: -12.750030517578125
    4. 'cache' → logprob: -13.625030517578125
    5. '(com' → logprob: -14.250030517578125
    6. '.com' → logprob: -14.625030517578125
    7. '=com' → logprob: -14.750030517578125
    8. 'comp' → logprob: -15.187530517578125
    9. 'c' → logprob: -15.375030517578125
    10. '
' → logprob: -15.500030517578125

Token 516: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.00010521204239921644
    2. '_cache' → logprob: -9.250104904174805
    3. 'positive' → logprob: -12.875104904174805
    4. 'osite' → logprob: -13.000104904174805
    5. 'cache' → logprob: -13.125104904174805
    6. 'pose' → logprob: -14.250104904174805
    7. 'pos' → logprob: -14.625104904174805
    8. '_positive' → logprob: -15.750104904174805
    9. '```' → logprob: -15.750104904174805
    10. 'plete' → logprob: -15.875104904174805

Token 517: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.5048530030981055e-06
    2. 'cache' → logprob: -13.500001907348633
    3. 'Cache' → logprob: -17.000001907348633
    4. '_cached' → logprob: -17.500001907348633
    5. '_CACHE' → logprob: -17.875001907348633
    6. '-cache' → logprob: -19.250001907348633
    7. '       ' → logprob: -19.500001907348633
    8. '_' → logprob: -19.750001907348633
    9. '	cache' → logprob: -19.750001907348633
    10. ' cache' → logprob: -20.000001907348633

Token 518: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.650518920039758e-06
    2. 'n' → logprob: -12.625003814697266
    3. '[' → logprob: -15.000003814697266
    4. ' [' → logprob: -17.625003814697266
    5. '
' → logprob: -18.500003814697266
    6. '```' → logprob: -19.250003814697266
    7. '.setdefault' → logprob: -19.875003814697266
    8. '  
' → logprob: -20.125003814697266
    9. '[N' → logprob: -20.125003814697266
    10. '[
' → logprob: -20.250003814697266

Token 519: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010375719284638762
    2. ']=' → logprob: -7.12603759765625
    3. '=' → logprob: -8.37603759765625
    4. ' =' → logprob: -13.25103759765625
    5. ' ]' → logprob: -14.12603759765625
    6. '[' → logprob: -15.75103759765625
    7. '[n' → logprob: -16.87603759765625
    8. 'n' → logprob: -17.00103759765625
    9. 's' → logprob: -17.62603759765625
    10. 'return' → logprob: -17.62603759765625

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. '=True' → logprob: -16.130233764648438
    4. '[' → logprob: -17.255233764648438
    5. '[n' → logprob: -17.380233764648438
    6. '=False' → logprob: -17.380233764648438
    7. ']' → logprob: -17.380233764648438
    8. ']=' → logprob: -18.380233764648438
    9. ' ' → logprob: -19.880233764648438
    10. '=n' → logprob: -19.880233764648438

Token 521: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. '=True' → logprob: -20.6250057220459
    4. '(True' → logprob: -20.6250057220459
    5. 'Tr' → logprob: -22.6250057220459
    6. 'true' → logprob: -23.0000057220459
    7. '.True' → logprob: -23.6250057220459
    8. '   ' → logprob: -23.8750057220459
    9. '_true' → logprob: -25.0000057220459
    10. 'False' → logprob: -25.3750057220459

Token 522: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000215457082958892
    2. 'return' → logprob: -9.125215530395508
    3. '       ' → logprob: -10.000215530395508
    4. '<|end|>' → logprob: -10.625215530395508
    5. ' return' → logprob: -11.750215530395508
    6. '               ' → logprob: -11.750215530395508
    7. ',' → logprob: -12.000215530395508
    8. '	       ' → logprob: -12.375215530395508
    9. '<|end|>' → logprob: -12.500215530395508
    10. '   ' → logprob: -13.625215530395508

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012190054985694587
    2. '       ' → logprob: -9.1251220703125
    3. '               ' → logprob: -11.7501220703125
    4. 'return' → logprob: -13.0001220703125
    5. '<|end|>' → logprob: -14.5001220703125
    6. '	       ' → logprob: -14.6251220703125
    7. '   ' → logprob: -14.7501220703125
    8. ',' → logprob: -15.0001220703125
    9. '                   ' → logprob: -15.0001220703125
    10. '          ' → logprob: -15.7501220703125

Token 524: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42959997057914734
    2. '           ' → logprob: -1.1796000003814697
    3. ' return' → logprob: -3.1796000003814697
    4. '       ' → logprob: -8.42959976196289
    5. '   ' → logprob: -12.17959976196289
    6. '	return' → logprob: -14.05459976196289
    7. '               ' → logprob: -14.17959976196289
    8. ':return' → logprob: -14.67959976196289
    9. '
' → logprob: -15.05459976196289
    10. '          ' → logprob: -15.17959976196289

Token 525: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. 'False' → logprob: -19.383615493774414
    4. '(True' → logprob: -19.883615493774414
    5. 'Tr' → logprob: -22.258615493774414
    6. 'true' → logprob: -22.383615493774414
    7. '=True' → logprob: -22.883615493774414
    8. '   ' → logprob: -23.383615493774414
    9. '
' → logprob: -23.883615493774414
    10. ' Tru' → logprob: -25.133615493774414

Token 526: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043465676717460155
    2. '
' → logprob: -6.6293463706970215
    3. 'return' → logprob: -7.0043463706970215
    4. '        
' → logprob: -7.0043463706970215
    5. '<|end|>' → logprob: -7.0043463706970215
    6. ' return' → logprob: -9.87934684753418
    7. '<|end|>' → logprob: -10.00434684753418
    8. '```' → logprob: -10.37934684753418
    9. '\
' → logprob: -10.62934684753418
    10. ',' → logprob: -10.62934684753418

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008082019630819559
    2. '<|end|>' → logprob: -8.625807762145996
    3. '```' → logprob: -8.875807762145996
    4. 'False' → logprob: -9.000807762145996
    5. '        
' → logprob: -9.500807762145996
    6. '           ' → logprob: -9.750807762145996
    7. '   ' → logprob: -10.000807762145996
    8. 'return' → logprob: -10.250807762145996
    9. 'n' → logprob: -11.125807762145996
    10. '
' → logprob: -11.250807762145996

Token 528: ' #' (ID: 1069)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0607401542365551
    2. '#' (adapté à ' #') → logprob: -3.1857402324676514
    3. '       ' → logprob: -4.435739994049072
    4. 'result' → logprob: -5.810739994049072
    5. 'return' → logprob: -6.810739994049072
    6. '   ' → logprob: -7.685739994049072
    7. 'else' → logprob: -8.31074047088623
    8. 'false' → logprob: -8.68574047088623
    9. 'False' → logprob: -8.81074047088623
    10. 'if' → logprob: -8.93574047088623

Token 529: ' Else' (ID: 42978)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.1381574422121048
    2. '#' → logprob: -2.138157367706299
    3. 'if' → logprob: -4.763157367706299
    4. 'return' → logprob: -6.763157367706299
    5. 'for' → logprob: -6.888157367706299
    6. ' cls' → logprob: -8.388157844543457
    7. '       ' → logprob: -9.638157844543457
    8. '   ' → logprob: -10.013157844543457
    9. ' #' → logprob: -10.888157844543457
    10. 'result' → logprob: -11.013157844543457

Token 530: ' check' (ID: 2371)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.003289297688752413
    2. '#' → logprob: -6.253289222717285
    3. '       ' → logprob: -7.378289222717285
    4. ' cls' → logprob: -8.128289222717285
    5. 'return' → logprob: -8.628289222717285
    6. '   ' → logprob: -9.253289222717285
    7. 'if' → logprob: -9.503289222717285
    8. 'n' → logprob: -10.628289222717285
    9. '           ' → logprob: -10.628289222717285
    10. 'for' → logprob: -11.878289222717285

Token 531: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.105340600013733
    2. 'div' → logprob: -1.480340600013733
    3. ' if' → logprob: -1.730340600013733
    4. '   ' → logprob: -2.6053404808044434
    5. ' divis' → logprob: -2.7303404808044434
    6. 'for' → logprob: -3.3553404808044434
    7. 'if' → logprob: -3.6053404808044434
    8. '#' → logprob: -3.8553404808044434
    9. '       ' → logprob: -4.105340480804443
    10. ' #' → logprob: -5.230340480804443

Token 532: ' divisible' (ID: 167813)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.630771279335022
    2. ' any' → logprob: -1.380771279335022
    3. 'n' → logprob: -2.3807711601257324
    4. ' False' → logprob: -2.6307711601257324
    5. 'any' → logprob: -3.6307711601257324
    6. ' all' → logprob: -4.130771160125732
    7. ' n' → logprob: -5.130771160125732
    8. 'all' → logprob: -6.755771160125732
    9. 'cls' → logprob: -7.630771160125732
    10. 'True' → logprob: -7.755771160125732

Token 533: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.09180086851119995
    2. 'by' → logprob: -2.4668009281158447
    3. '       ' → logprob: -6.341800689697266
    4. '   ' → logprob: -7.341800689697266
    5. ',' → logprob: -9.216800689697266
    6. '(' → logprob: -9.591800689697266
    7. ' ' → logprob: -9.841800689697266
    8. '           ' → logprob: -10.091800689697266
    9. '=' → logprob: -10.466800689697266
    10. ' (' → logprob: -10.841800689697266

Token 534: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.09954581409692764
    2. 'Monday' → logprob: -3.09954571723938
    3. ' any' → logprob: -3.09954571723938
    4. '2' → logprob: -5.724545955657959
    5. 'other' → logprob: -7.474545955657959
    6. ' Monday' → logprob: -8.7245454788208
    7. 'cls' → logprob: -9.0995454788208
    8. 'm' → logprob: -9.7245454788208
    9. '7' → logprob: -9.9745454788208
    10. 'Any' → logprob: -10.2245454788208

Token 535: ' smaller' (ID: 13679)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.45867806673049927
    2. 'm' → logprob: -1.9586780071258545
    3. 'ms' → logprob: -2.2086780071258545
    4. 'p' → logprob: -2.9586780071258545
    5. ' Monday' → logprob: -3.7086780071258545
    6. 'i' → logprob: -4.083678245544434
    7. 'k' → logprob: -4.458678245544434
    8. ' m' → logprob: -6.458678245544434
    9. 'prime' → logprob: -6.708678245544434
    10. 'x' → logprob: -6.708678245544434

Token 536: ' MS' (ID: 15861)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5877694487571716
    2. 'ms' → logprob: -1.4627695083618164
    3. 'Monday' → logprob: -1.5877695083618164
    4. ' Monday' → logprob: -5.712769508361816
    5. '_m' → logprob: -7.212769508361816
    6. 'prime' → logprob: -7.212769508361816
    7. ' monday' → logprob: -7.462769508361816
    8. 'cls' → logprob: -7.587769508361816
    9. '_ms' → logprob: -7.962769508361816
    10. 'token' → logprob: -8.087769508361816

Token 537: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.14543937146663666
    2. 'Saturday' → logprob: -2.770439386367798
    3. 'Prime' → logprob: -4.270439147949219
    4. 'prime' → logprob: -4.270439147949219
    5. 'Monday' → logprob: -4.520439147949219
    6. '_' → logprob: -5.020439147949219
    7. ' prime' → logprob: -5.145439147949219
    8. '_number' → logprob: -5.145439147949219
    9. '_s' → logprob: -5.395439147949219
    10. ' _' → logprob: -5.395439147949219

Token 538: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16329625248908997
    2. ' for' → logprob: -2.1632962226867676
    3. 'for' → logprob: -3.6632962226867676
    4. ':' → logprob: -6.163296222686768
    5. ' in' → logprob: -6.538296222686768
    6. '(' → logprob: -6.663296222686768
    7. ',' → logprob: -6.913296222686768
    8. ' (' → logprob: -7.163296222686768
    9. '(n' → logprob: -7.413296222686768
    10. '   ' → logprob: -7.788296222686768

Token 539: 'other' (ID: 2141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8958930969238281
    2. ' for' → logprob: -1.6458930969238281
    3. 'p' → logprob: -1.8958930969238281
    4. '       ' → logprob: -2.020893096923828
    5. 'for' → logprob: -3.145893096923828
    6. ' p' → logprob: -3.895893096923828
    7. ' in' → logprob: -4.895893096923828
    8. ',' → logprob: -5.020893096923828
    9. 'pr' → logprob: -5.270893096923828
    10. ' at' → logprob: -5.895893096923828

Token 540: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.18018732964992523
    2. 'than' → logprob: -1.8051873445510864
    3. '_than' → logprob: -8.805187225341797
    4. ')' → logprob: -9.055187225341797
    5. '           ' → logprob: -9.805187225341797
    6. '       ' → logprob: -10.055187225341797
    7. '               ' → logprob: -11.180187225341797
    8. ':' → logprob: -11.180187225341797
    9. '   ' → logprob: -11.180187225341797
    10. '=' → logprob: -11.805187225341797

Token 541: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022725353483110666
    2. 'n' → logprob: -7.377272605895996
    3. ' ' → logprob: -7.502272605895996
    4. '2' → logprob: -7.627272605895996
    5. '7' → logprob: -8.002272605895996
    6. 'self' → logprob: -9.252272605895996
    7. ')' → logprob: -9.877272605895996
    8. ' itself' → logprob: -10.377272605895996
    9. 'Monday' → logprob: -10.752272605895996
    10. '
' → logprob: -10.752272605895996

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005504811182618141
    2. 'n' → logprob: -5.255504608154297
    3. '2' → logprob: -9.130504608154297
    4. 'it' → logprob: -10.005504608154297
    5. 'Monday' → logprob: -10.255504608154297
    6. 'self' → logprob: -11.005504608154297
    7. '7' → logprob: -11.130504608154297
    8. '
' → logprob: -11.505504608154297
    9. ')' → logprob: -12.005504608154297
    10. ' ' → logprob: -12.255504608154297

Token 543: ' and' (ID: 326)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8166667819023132
    2. ')' → logprob: -0.9416667819023132
    3. ' or' → logprob: -3.066666841506958
    4. ' and' → logprob: -3.066666841506958
    5. '):
' → logprob: -3.566666841506958
    6. ',' → logprob: -3.691666841506958
    7. '       ' → logprob: -4.566666603088379
    8. '   ' → logprob: -5.816666603088379
    9. ')

' → logprob: -5.816666603088379
    10. '):' → logprob: -6.441666603088379

Token 544: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00917710829526186
    2. '7' → logprob: -5.759177207946777
    3. '6' → logprob: -6.134177207946777
    4. ' itself' → logprob: -6.259177207946777
    5. ' n' → logprob: -6.509177207946777
    6. 'self' → logprob: -8.884177207946777
    7. '2' → logprob: -9.634177207946777
    8. '       ' → logprob: -10.134177207946777
    9. '
' → logprob: -10.634177207946777
    10. '           ' → logprob: -11.134177207946777

Token 545: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39578887820243835
    2. '):' → logprob: -1.5207889080047607
    3. ')' → logprob: -2.3957889080047607
    4. '):
' → logprob: -4.770788669586182
    5. ')
' → logprob: -5.520788669586182
    6. ',' → logprob: -6.395788669586182
    7. '):

' → logprob: -6.895788669586182
    8. '       ' → logprob: -7.020788669586182
    9. '   ' → logprob: -8.27078914642334
    10. ' ):
' → logprob: -8.39578914642334

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020540240220725536
    2. ' for' → logprob: -6.752054214477539
    3. 'for' → logprob: -7.627054214477539
    4. ',' → logprob: -9.127054214477539
    5. '
' → logprob: -9.252054214477539
    6. '        
' → logprob: -10.127054214477539
    7. ':' → logprob: -10.502054214477539
    8. '   ' → logprob: -10.877054214477539
    9. '           ' → logprob: -11.002054214477539
    10. '#' → logprob: -11.377054214477539

Token 547: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12774990499019623
    2. '       ' → logprob: -2.2527499198913574
    3. ' for' → logprob: -4.627749919891357
    4. 'start' → logprob: -6.502749919891357
    5. 'limit' → logprob: -6.627749919891357
    6. 'mod' → logprob: -7.252749919891357
    7. 'ms' → logprob: -7.877749919891357
    8. 'm' → logprob: -8.0027494430542
    9. 'root' → logprob: -8.5027494430542
    10. 'max' → logprob: -9.0027494430542

Token 548: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1545412540435791
    2. ' for' → logprob: -2.654541254043579
    3. '       ' → logprob: -2.904541254043579
    4. 'start' → logprob: -4.154541015625
    5. 'limit' → logprob: -7.279541015625
    6. 'ms' → logprob: -8.029541015625
    7. 'm' → logprob: -8.154541015625
    8. 'min' → logprob: -9.154541015625
    9. ' start' → logprob: -9.154541015625
    10. 'root' → logprob: -9.279541015625

Token 549: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7216174602508545
    2. ' for' → logprob: -0.8466174602508545
    3. 'p' → logprob: -3.4716174602508545
    4. 'prime' → logprob: -4.096617698669434
    5. '       ' → logprob: -4.721617698669434
    6. 'pr' → logprob: -5.221617698669434
    7. ' p' → logprob: -5.346617698669434
    8. 'from' → logprob: -5.471617698669434
    9. '   ' → logprob: -5.471617698669434
    10. 'm' → logprob: -6.346617698669434

Token 550: ' proper' (ID: 7937)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.9001191854476929
    2. 'm' → logprob: -1.5251191854476929
    3. 'p' → logprob: -2.0251193046569824
    4. 'k' → logprob: -2.0251193046569824
    5. 'for' → logprob: -3.0251193046569824
    6. 'prime' → logprob: -3.6501193046569824
    7. 'i' → logprob: -3.9001193046569824
    8. 'pr' → logprob: -5.150119304656982
    9. 'possible' → logprob: -6.025119304656982
    10. 'key' → logprob: -6.400119304656982

Token 551: ' MS' (ID: 15861)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2338901162147522
    2. 'Monday' → logprob: -1.9838900566101074
    3. 'ms' → logprob: -3.1088900566101074
    4. 'multip' → logprob: -4.608890056610107
    5. ' divis' → logprob: -5.108890056610107
    6. ' Monday' → logprob: -5.358890056610107
    7. 'MS' → logprob: -6.483890056610107
    8. 'f' → logprob: -6.608890056610107
    9. 'm' → logprob: -6.733890056610107
    10. 'pr' → logprob: -7.483890056610107

Token 552: ' divis' (ID: 37826)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.045010313391685486
    2. 'prime' → logprob: -3.7950103282928467
    3. '_pr' → logprob: -5.170010089874268
    4. '_prime' → logprob: -5.295010089874268
    5. 'multip' → logprob: -5.920010089874268
    6. '_m' → logprob: -6.045010089874268
    7. 'div' → logprob: -6.420010089874268
    8. 'Monday' → logprob: -6.795010089874268
    9. '_div' → logprob: -7.170010089874268
    10. 'Saturday' → logprob: -7.795010089874268

Token 553: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.00016074994346126914
    2. 'or' → logprob: -8.750161170959473
    3. '   ' → logprob: -14.250161170959473
    4. 'ible' → logprob: -15.000161170959473
    5. '```' → logprob: -15.375161170959473
    6. 'ers' → logprob: -15.625161170959473
    7. 'iors' → logprob: -15.875161170959473
    8. '       ' → logprob: -16.250160217285156
    9. 'ores' → logprob: -16.375160217285156
    10. 'ion' → logprob: -16.500160217285156

Token 554: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.674836277961731
    2. ' for' → logprob: -0.924836277961731
    3. 'for' → logprob: -3.5498361587524414
    4. ' in' → logprob: -3.7998361587524414
    5. ':' → logprob: -4.549836158752441
    6. ' of' → logprob: -4.799836158752441
    7. ',' → logprob: -4.799836158752441
    8. ' =' → logprob: -5.674836158752441
    9. '=' → logprob: -5.799836158752441
    10. ' from' → logprob: -6.424836158752441

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004509869497269392
    2. ' for' → logprob: -5.754509925842285
    3. ' from' → logprob: -7.879509925842285
    4. ' in' → logprob: -8.004509925842285
    5. 'for' → logprob: -8.504509925842285
    6. 'from' → logprob: -8.629509925842285
    7. ',' → logprob: -9.379509925842285
    8. ' of' → logprob: -10.254509925842285
    9. ' at' → logprob: -10.754509925842285
    10. ':' → logprob: -11.004509925842285

Token 556: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5298216938972473
    2. ' for' → logprob: -1.2798216342926025
    3. '       ' → logprob: -2.0298216342926025
    4. '   ' → logprob: -7.279821872711182
    5. 'start' → logprob: -8.154821395874023
    6. 'm' → logprob: -8.654821395874023
    7. 'limit' → logprob: -8.779821395874023
    8. 'div' → logprob: -9.404821395874023
    9. 'i' → logprob: -9.654821395874023
    10. 'k' → logprob: -9.779821395874023

Token 557: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3494412899017334
    2. '       ' → logprob: -1.4744412899017334
    3. ' for' → logprob: -2.9744412899017334
    4. 'start' → logprob: -4.9744415283203125
    5. 'max' → logprob: -5.5994415283203125
    6. 'limit' → logprob: -5.8494415283203125
    7. 'root' → logprob: -8.474441528320312
    8. 'div' → logprob: -8.599441528320312
    9. 'i' → logprob: -9.099441528320312
    10. ' limit' → logprob: -9.349441528320312

Token 558: ' key' (ID: 2140)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42947906255722046
    2. ' for' → logprob: -1.9294791221618652
    3. 'max' → logprob: -1.9294791221618652
    4. 'limit' → logprob: -3.3044791221618652
    5. 'root' → logprob: -5.179479122161865
    6. ' max' → logprob: -5.429479122161865
    7. '       ' → logprob: -5.929479122161865
    8. ' limit' → logprob: -6.179479122161865
    9. 'start' → logprob: -6.304479122161865
    10. 'r' → logprob: -6.554479122161865

Token 559: ' property' (ID: 4322)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.7082875967025757
    2. 'for' → logprob: -1.8332875967025757
    3. ' =' → logprob: -1.9582875967025757
    4. ' is' → logprob: -2.5832877159118652
    5. ' step' → logprob: -2.9582877159118652
    6. '=' → logprob: -2.9582877159118652
    7. 'point' → logprob: -3.5832877159118652
    8. 'range' → logprob: -3.5832877159118652
    9. 'div' → logprob: -3.8332877159118652
    10. 'line' → logprob: -3.9582877159118652

Token 560: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.46793538331985474
    2. 'is' → logprob: -1.71793532371521
    3. '       ' → logprob: -2.84293532371521
    4. ' for' → logprob: -3.59293532371521
    5. ' that' → logprob: -3.71793532371521
    6. 'for' → logprob: -3.84293532371521
    7. ':' → logprob: -3.84293532371521
    8. 'that' → logprob: -4.717935562133789
    9. ' here' → logprob: -4.967935562133789
    10. ' =' → logprob: -5.842935562133789

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01669894903898239
    2. ' for' → logprob: -4.516698837280273
    3. '#' → logprob: -6.141698837280273
    4. 'for' → logprob: -6.141698837280273
    5. 'max' → logprob: -8.391698837280273
    6. '        
' → logprob: -8.891698837280273
    7. 'limit' → logprob: -8.891698837280273
    8. 'return' → logprob: -9.141698837280273
    9. '   ' → logprob: -9.266698837280273
    10. '```' → logprob: -9.641698837280273

Token 562: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.171142578125
    2. 'limit' → logprob: -1.546142578125
    3. 'max' → logprob: -1.671142578125
    4. '#' (adapté à ' #') → logprob: -1.921142578125
    5. '       ' → logprob: -2.296142578125
    6. 'root' → logprob: -4.296142578125
    7. ' for' → logprob: -4.671142578125
    8. 'sqrt' → logprob: -5.171142578125
    9. 'r' → logprob: -5.796142578125
    10. ' limit' → logprob: -6.921142578125

Token 563: ' a' (ID: 261)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.7007071375846863
    2. 'max' → logprob: -1.575707197189331
    3. 'for' → logprob: -1.825707197189331
    4. '#' → logprob: -2.325707197189331
    5. '       ' → logprob: -4.450706958770752
    6. ' for' → logprob: -5.325706958770752
    7. 'root' → logprob: -5.325706958770752
    8. 'r' → logprob: -5.575706958770752
    9. ' limit' → logprob: -5.950706958770752
    10. 'start' → logprob: -5.950706958770752

Token 564: ' MS' (ID: 15861)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6607394218444824
    2. '       ' → logprob: -1.7857394218444824
    3. ' s' → logprob: -2.0357394218444824
    4. ' for' → logprob: -2.0357394218444824
    5. 's' → logprob: -2.2857394218444824
    6. ' %' → logprob: -2.5357394218444824
    7. '=' → logprob: -3.0357394218444824
    8. '   ' → logprob: -3.7857394218444824
    9. 'def' → logprob: -3.7857394218444824
    10. '%' → logprob: -3.7857394218444824

Token 565: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.041170358657837
    2. 'prime' → logprob: -1.416170358657837
    3. ' prime' → logprob: -1.916170358657837
    4. 'def' → logprob: -2.291170358657837
    5. 'div' → logprob: -3.541170358657837
    6. '_number' → logprob: -3.541170358657837
    7. 'number' → logprob: -3.791170358657837
    8. '_div' → logprob: -3.916170358657837
    9. ' number' → logprob: -4.791170120239258
    10. ' divisor' → logprob: -5.291170120239258

Token 566: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.36049172282218933
    2. ' must' → logprob: -1.9854917526245117
    3. ' =' → logprob: -3.1104917526245117
    4. 'is' → logprob: -3.4854917526245117
    5. '=' → logprob: -3.9854917526245117
    6. '>' → logprob: -4.235491752624512
    7. 'must' → logprob: -4.485491752624512
    8. 's' → logprob: -4.860491752624512
    9. ' >' → logprob: -5.485491752624512
    10. ' should' → logprob: -5.735491752624512

Token 567: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.3373357355594635
    2. 'no' → logprob: -1.3373357057571411
    3. 'only' → logprob: -4.462335586547852
    4. ' only' → logprob: -4.462335586547852
    5. '   ' → logprob: -8.337335586547852
    6. ' exactly' → logprob: -9.087335586547852
    7. 'exact' → logprob: -9.212335586547852
    8. '```' → logprob: -10.337335586547852
    9. ' to' → logprob: -10.462335586547852
    10. ' ' → logprob: -10.712335586547852

Token 568: ' MS' (ID: 15861)
  Prédit: 'proper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proper' → logprob: -0.9803900718688965
    2. 'Monday' → logprob: -1.1053900718688965
    3. 'MS' → logprob: -2.1053900718688965
    4. 'div' → logprob: -2.6053900718688965
    5. ' Monday' → logprob: -3.3553900718688965
    6. 'non' → logprob: -3.8553900718688965
    7. ' proper' → logprob: -4.2303900718688965
    8. ' divis' → logprob: -4.7303900718688965
    9. 'other' → logprob: -5.4803900718688965
    10. ' MS' → logprob: -5.6053900718688965

Token 569: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2737792134284973
    2. ' divisor' → logprob: -2.1487791538238525
    3. ' divis' → logprob: -2.1487791538238525
    4. '_div' → logprob: -6.148779392242432
    5. 'prime' → logprob: -6.773779392242432
    6. 'proper' → logprob: -7.398779392242432
    7. ' prime' → logprob: -7.648779392242432
    8. ' number' → logprob: -8.148778915405273
    9. ' proper' → logprob: -8.148778915405273
    10. '<div' → logprob: -8.398778915405273

Token 570: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.16036954522132874
    2. 'or' → logprob: -1.9103695154190063
    3. '```' → logprob: -10.410369873046875
    4. 'ible' → logprob: -11.722869873046875
    5. 'is' → logprob: -12.035369873046875
    6. '>' → logprob: -12.035369873046875
    7. 'iors' → logprob: -12.097869873046875
    8. '(or' → logprob: -12.410369873046875
    9. '#' → logprob: -12.535369873046875
    10. 'ior' → logprob: -12.597869873046875

Token 571: ' other' (ID: 1273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008193019777536392
    2. ' for' → logprob: -6.258193016052246
    3. ',' → logprob: -6.633193016052246
    4. '<|end|>' → logprob: -6.883193016052246
    5. '   ' → logprob: -7.008193016052246
    6. ' (' → logprob: -7.758193016052246
    7. '        
' → logprob: -8.133193016052246
    8. 'for' → logprob: -8.383193016052246
    9. '.' → logprob: -8.383193016052246
    10. '
' → logprob: -8.508193016052246

Token 572: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.01815919391810894
    2. ' than' → logprob: -4.01815938949585
    3. '_than' → logprob: -11.893158912658691
    4. '=' → logprob: -13.018158912658691
    5. 'Than' → logprob: -16.268159866333008
    6. '-than' → logprob: -16.643159866333008
    7. 'thane' → logprob: -17.768159866333008
    8. 'that' → logprob: -17.768159866333008
    9. '           ' → logprob: -18.143159866333008
    10. '1' → logprob: -18.268159866333008

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -12.000009536743164
    3. 'it' → logprob: -13.125009536743164
    4. ' itself' → logprob: -14.250009536743164
    5. '   ' → logprob: -14.875009536743164
    6. '
' → logprob: -15.125009536743164
    7. 'Monday' → logprob: -17.500009536743164
    8. '{' → logprob: -17.875009536743164
    9. 'the' → logprob: -17.875009536743164
    10. '...' → logprob: -18.000009536743164

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. 'Monday' → logprob: -12.500003814697266
    3. ' ' → logprob: -15.250003814697266
    4. '{' → logprob: -15.625003814697266
    5. '
' → logprob: -18.125003814697266
    6. 'the' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '...' → logprob: -18.750003814697266
    9. 'class' → logprob: -19.750003814697266
    10. '[' → logprob: -20.000003814697266

Token 575: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030460478737950325
    2. ' and' → logprob: -4.655460357666016
    3. ',' → logprob: -4.905460357666016
    4. '   ' → logprob: -5.780460357666016
    5. ' for' → logprob: -6.030460357666016
    6. '<|end|>' → logprob: -6.155460357666016
    7. '.' → logprob: -6.905460357666016
    8. ')' → logprob: -7.030460357666016
    9. 'def' → logprob: -8.030460357666016
    10. 'for' → logprob: -8.030460357666016

Token 576: ' itself' (ID: 8807)
  Prédit: ' itself'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.24215570092201233
    2. 'it' → logprob: -1.74215567111969
    3. 'n' → logprob: -3.3671557903289795
    4. 'self' → logprob: -5.2421555519104
    5. 'a' → logprob: -9.992156028747559
    6. ' itse' → logprob: -10.492156028747559
    7. '
' → logprob: -10.617156028747559
    8. 'the' → logprob: -11.117156028747559
    9. ' n' → logprob: -11.242156028747559
    10. 'its' → logprob: -11.867156028747559

Token 577: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012777210213243961
    2. ' for' → logprob: -5.387777328491211
    3. '<|end|>' → logprob: -6.637777328491211
    4. 'for' → logprob: -6.762777328491211
    5. ',' → logprob: -6.887777328491211
    6. '
' → logprob: -7.387777328491211
    7. 'from' → logprob: -7.387777328491211
    8. '        
' → logprob: -7.387777328491211
    9. '   ' → logprob: -7.637777328491211
    10. '```' → logprob: -8.137777328491211

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022314980160444975
    2. '```' → logprob: -7.752231597900391
    3. ' for' → logprob: -8.00223159790039
    4. '
' → logprob: -8.00223159790039
    5. 'for' → logprob: -8.37723159790039
    6. '<|end|>' → logprob: -8.62723159790039
    7. '#' → logprob: -8.75223159790039
    8. '   ' → logprob: -8.87723159790039
    9. '        
' → logprob: -9.00223159790039
    10. ',' → logprob: -9.87723159790039

Token 579: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013238699175417423
    2. ' for' → logprob: -4.888238906860352
    3. 'for' → logprob: -5.388238906860352
    4. '
' → logprob: -8.763238906860352
    5. '        
' → logprob: -9.388238906860352
    6. 'start' → logprob: -9.513238906860352
    7. '   ' → logprob: -9.513238906860352
    8. 'next' → logprob: -9.638238906860352
    9. 'div' → logprob: -9.638238906860352
    10. '#' (adapté à ' #') → logprob: -9.763238906860352

Token 580: ' We' (ID: 1416)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.993500828742981
    2. 'for' → logprob: -1.118500828742981
    3. 'max' → logprob: -1.993500828742981
    4. '       ' → logprob: -1.993500828742981
    5. 'root' → logprob: -4.993500709533691
    6. 'r' → logprob: -4.993500709533691
    7. 'start' → logprob: -5.368500709533691
    8. ' for' → logprob: -5.743500709533691
    9. 'sqrt' → logprob: -5.993500709533691
    10. 'div' → logprob: -6.243500709533691

Token 581: ' iterate' (ID: 63166)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9866723418235779
    2. 'continue' → logprob: -1.9866724014282227
    3. '       ' → logprob: -2.1116724014282227
    4. ' for' → logprob: -2.3616724014282227
    5. 'for' → logprob: -2.4866724014282227
    6. '   ' → logprob: -2.4866724014282227
    7. ' continue' → logprob: -2.9866724014282227
    8. ' def' → logprob: -3.9866724014282227
    9. '    ' → logprob: -5.111672401428223
    10. '...' → logprob: -5.236672401428223

Token 582: ' over' (ID: 1072)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.7744370102882385
    2. 'from' → logprob: -1.6494369506835938
    3. 'through' → logprob: -1.8994369506835938
    4. ' through' → logprob: -2.2744369506835938
    5. ' over' → logprob: -2.8994369506835938
    6. 'for' → logprob: -4.024436950683594
    7. '       ' → logprob: -4.774436950683594
    8. 'i' → logprob: -5.024436950683594
    9. ' from' → logprob: -6.899436950683594
    10. ' for' → logprob: -6.899436950683594

Token 583: ' all' (ID: 722)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1750645637512207
    2. 'i' → logprob: -1.4250645637512207
    3. 'p' → logprob: -2.4250645637512207
    4. 'k' → logprob: -2.6750645637512207
    5. 'm' → logprob: -2.8000645637512207
    6. 'candidate' → logprob: -3.0500645637512207
    7. 'Monday' → logprob: -3.3000645637512207
    8. 'ms' → logprob: -3.5500645637512207
    9. 'd' → logprob: -3.6750645637512207
    10. 'cls' → logprob: -3.8000645637512207

Token 584: ' Monday' (ID: 10715)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8942263722419739
    2. 'k' → logprob: -1.269226312637329
    3. 'ms' → logprob: -2.144226312637329
    4. 'i' → logprob: -2.644226312637329
    5. 'possible' → logprob: -2.894226312637329
    6. 'candidate' → logprob: -3.394226312637329
    7. 'p' → logprob: -4.269226551055908
    8. 'Monday' → logprob: -5.144226551055908
    9. 'potential' → logprob: -5.769226551055908
    10. '   ' → logprob: -6.269226551055908

Token 585: '-S' (ID: 6968)
  Prédit: 'Saturday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -8.542423165636137e-05
    2. ' Saturday' → logprob: -9.750085830688477
    3. '_s' → logprob: -11.500085830688477
    4. '_S' → logprob: -11.875085830688477
    5. 'Sunday' → logprob: -13.500085830688477
    6. 'Monday' → logprob: -13.625085830688477
    7. 'def' → logprob: -14.375085830688477
    8. '   ' → logprob: -14.375085830688477
    9. '-S' → logprob: -14.375085830688477
    10. '       ' → logprob: -14.375085830688477

Token 586: 'aturday' (ID: 8790)
  Prédit: 'Saturday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.25203073024749756
    2. 'aturday' → logprob: -1.5020307302474976
    3. '_S' → logprob: -10.252030372619629
    4. ' Saturday' → logprob: -10.877030372619629
    5. 'Sunday' → logprob: -12.127030372619629
    6. '-S' → logprob: -12.127030372619629
    7. '```' → logprob: -12.252030372619629
    8. 'Monday' → logprob: -12.502030372619629
    9. '_s' → logprob: -12.502030372619629
    10. 'at' → logprob: -12.752030372619629

Token 587: ' divis' (ID: 37826)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.1238299235701561
    2. ' primes' → logprob: -2.7488298416137695
    3. 'numbers' → logprob: -3.2488298416137695
    4. 'prime' → logprob: -4.7488298416137695
    5. ' numbers' → logprob: -6.1238298416137695
    6. 'multip' → logprob: -6.6238298416137695
    7. ' prime' → logprob: -8.12382984161377
    8. 'values' → logprob: -8.49882984161377
    9. 'Prime' → logprob: -8.74882984161377
    10. 'Number' → logprob: -9.12382984161377

Token 588: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.00015622020873706788
    2. 'or' → logprob: -9.50015640258789
    3. '```' → logprob: -10.75015640258789
    4. '{' → logprob: -11.25015640258789
    5. 'ible' → logprob: -11.62515640258789
    6. '   ' → logprob: -11.62515640258789
    7. '
' → logprob: -12.75015640258789
    8. 'iors' → logprob: -12.87515640258789
    9. 'numbers' → logprob: -13.37515640258789
    10. '       ' → logprob: -13.50015640258789

Token 589: ' to' (ID: 316)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0194432735443115
    2. '       ' → logprob: -1.2694432735443115
    3. ',' → logprob: -2.5194432735443115
    4. 'from' → logprob: -2.7694432735443115
    5. 'in' → logprob: -3.3944432735443115
    6. ' for' → logprob: -3.5194432735443115
    7. ' from' → logprob: -3.6444432735443115
    8. ' of' → logprob: -3.7694432735443115
    9. 'for' → logprob: -4.394443511962891
    10. 'd' → logprob: -4.519443511962891

Token 590: ' detect' (ID: 11839)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.06276210397481918
    2. 'test' → logprob: -4.187762260437012
    3. ' check' → logprob: -4.437762260437012
    4. 'int' → logprob: -4.562762260437012
    5. 'find' → logprob: -4.687762260437012
    6. 'det' → logprob: -5.562762260437012
    7. 'n' → logprob: -6.062762260437012
    8. '       ' → logprob: -6.437762260437012
    9. '7' → logprob: -6.562762260437012
    10. '   ' → logprob: -6.687762260437012

Token 591: ' composite' (ID: 40773)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.3722504377365112
    2. 'any' → logprob: -1.8722504377365112
    3. 'proper' → logprob: -2.122250556945801
    4. '   ' → logprob: -2.622250556945801
    5. 'if' → logprob: -2.747250556945801
    6. 'div' → logprob: -2.872250556945801
    7. ' any' → logprob: -3.497250556945801
    8. '       ' → logprob: -3.622250556945801
    9. 'them' → logprob: -3.747250556945801
    10. 'com' → logprob: -3.747250556945801

Token 592: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1474579572677612
    2. 's' → logprob: -1.6474579572677612
    3. ':' → logprob: -2.522458076477051
    4. '   ' → logprob: -2.772458076477051
    5. ',' → logprob: -2.897458076477051
    6. 'numbers' → logprob: -3.022458076477051
    7. ' numbers' → logprob: -3.397458076477051
    8. '.' → logprob: -3.522458076477051
    9. 'div' → logprob: -3.647458076477051
    10. ':
' → logprob: -3.897458076477051

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008022417314350605
    2. '
' → logprob: -7.250802040100098
    3. '        
' → logprob: -10.750802040100098
    4. 'for' → logprob: -11.000802040100098
    5. '```' → logprob: -11.125802040100098
    6. ' for' → logprob: -11.250802040100098
    7. ',' → logprob: -12.375802040100098
    8. '#' → logprob: -12.375802040100098
    9. '   ' → logprob: -12.625802040100098
    10. 'import' → logprob: -12.750802040100098

Token 594: ' limit' (ID: 5967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013874580152332783
    2. 'for' → logprob: -4.888874530792236
    3. 'start' → logprob: -6.138874530792236
    4. ' for' → logprob: -6.263874530792236
    5. 'limit' (adapté à ' limit') → logprob: -7.513874530792236
    6. 'i' → logprob: -7.763874530792236
    7. 'div' → logprob: -8.013875007629395
    8. 'n' → logprob: -8.638875007629395
    9. '#' → logprob: -9.263875007629395
    10. 'next' → logprob: -9.388875007629395

Token 595: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153687939047813
    2. '=' → logprob: -4.018153667449951
    3. '=int' → logprob: -12.51815414428711
    4. ' ' → logprob: -17.01815414428711
    5. '   ' → logprob: -17.51815414428711
    6. 'import' → logprob: -18.14315414428711
    7. 's' → logprob: -18.39315414428711
    8. 'int' → logprob: -18.39315414428711
    9. ',' → logprob: -18.39315414428711
    10. ':' → logprob: -18.64315414428711

Token 596: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001590438769198954
    2. 'n' → logprob: -7.251590251922607
    3. ' int' → logprob: -7.251590251922607
    4. '   ' → logprob: -8.876590728759766
    5. '(int' → logprob: -11.001590728759766
    6. '       ' → logprob: -11.501590728759766
    7. '	int' → logprob: -13.501590728759766
    8. ' n' → logprob: -13.876590728759766
    9. '(n' → logprob: -15.001590728759766
    10. '    ' → logprob: -15.126590728759766

Token 597: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.842555426876061e-06
    2. 'n' → logprob: -12.875004768371582
    3. '((' → logprob: -13.750004768371582
    4. '(' → logprob: -14.000004768371582
    5. '(s' → logprob: -16.6250057220459
    6. '	n' → logprob: -16.7500057220459
    7. '(
' → logprob: -17.2500057220459
    8. '(int' → logprob: -17.3750057220459
    9. '(pow' → logprob: -17.6250057220459
    10. '```' → logprob: -19.5000057220459

Token 598: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -3.368984107510187e-05
    2. ' **' → logprob: -10.750033378601074
    3. '(n' → logprob: -11.625033378601074
    4. '(' → logprob: -13.125033378601074
    5. '0' → logprob: -13.750033378601074
    6. 'n' → logprob: -16.25003433227539
    7. '**
' → logprob: -17.25003433227539
    8. '```' → logprob: -17.62503433227539
    9. '   ' → logprob: -17.75003433227539
    10. '(**' → logprob: -17.87503433227539

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '(' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. '2' → logprob: -19.375
    7. '```' → logprob: -19.5
    8. '{' → logprob: -19.625
    9. '

' → logprob: -20.0
    10. '
' → logprob: -20.375

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '(' → logprob: -16.750001907348633
    5. '{' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '2' → logprob: -18.000001907348633
    8. '```' → logprob: -18.375001907348633
    9. '

' → logprob: -18.750001907348633
    10. '
' → logprob: -19.437501907348633

Token 601: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.60414821645827e-06
    2. '0' → logprob: -12.625004768371582
    3. '5' → logprob: -14.250004768371582
    4. '2' → logprob: -15.125004768371582
    5. '1' → logprob: -16.625003814697266
    6. ' .' → logprob: -16.625003814697266
    7. '```' → logprob: -16.750003814697266
    8. '3' → logprob: -17.375003814697266
    9. '6' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.500003814697266

Token 602: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.27099974633893e-05
    2. '.' → logprob: -11.750012397766113
    3. '```' → logprob: -13.500012397766113
    4. '   ' → logprob: -14.562512397766113
    5. '0' → logprob: -14.750012397766113
    6. '4' → logprob: -15.562512397766113
    7. '6' → logprob: -15.750012397766113
    8. '`' → logprob: -15.812512397766113
    9. '       ' → logprob: -16.00001335144043
    10. '..' → logprob: -16.12501335144043

Token 603: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045724798110313714
    2. ')+' → logprob: -8.125456809997559
    3. ')
' → logprob: -9.125456809997559
    4. '()' → logprob: -10.375456809997559
    5. '())' → logprob: -11.250456809997559
    6. ' )' → logprob: -12.375456809997559
    7. '       ' → logprob: -13.000456809997559
    8. '   ' → logprob: -13.750456809997559
    9. ')
' → logprob: -16.000457763671875
    10. ')

' → logprob: -16.250457763671875

Token 604: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1857416182756424
    2. '+' → logprob: -2.060741662979126
    3. '       ' → logprob: -3.185741662979126
    4. '
' → logprob: -7.685741424560547
    5. '+
' → logprob: -8.935741424560547
    6. ' +
' → logprob: -9.310741424560547
    7. '   ' → logprob: -9.810741424560547
    8. ')' → logprob: -10.810741424560547
    9. ')+' → logprob: -12.060741424560547
    10. ',' → logprob: -12.185741424560547

Token 605: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.12502098083496
    4. '2' → logprob: -18.87502098083496
    5. '```' → logprob: -19.37502098083496
    6. '(' → logprob: -21.37502098083496
    7. '  ' → logprob: -21.37502098083496
    8. '    ' → logprob: -21.62502098083496
    9. '۱' → logprob: -21.87502098083496
    10. ')' → logprob: -22.43752098083496

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -21.25
    4. '   ' → logprob: -21.75
    5. '2' → logprob: -21.75
    6. '۱' → logprob: -23.25
    7. '１' → logprob: -23.375
    8. '(' → logprob: -24.0
    9. '

' → logprob: -24.75
    10. '  ' → logprob: -24.75

Token 607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00871597696095705
    2. '
' → logprob: -4.758716106414795
    3. ' for' → logprob: -10.258715629577637
    4. '        
' → logprob: -11.008715629577637
    5. ',' → logprob: -11.633715629577637
    6. '   ' → logprob: -11.633715629577637
    7. ':' → logprob: -12.383715629577637
    8. '  
' → logprob: -12.383715629577637
    9. '#' → logprob: -12.633715629577637
    10. 'for' → logprob: -12.758715629577637

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004388459958136082
    2. '
' → logprob: -5.629388332366943
    3. ' for' → logprob: -7.754388332366943
    4. 'for' → logprob: -8.754388809204102
    5. '   ' → logprob: -8.879388809204102
    6. '```' → logprob: -11.004388809204102
    7. '
' → logprob: -11.504388809204102
    8. '        
' → logprob: -11.629388809204102
    9. '           ' → logprob: -12.004388809204102
    10. '	' → logprob: -12.754388809204102

Token 609: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018246285617351532
    2. '       ' → logprob: -4.018246173858643
    3. ' for' → logprob: -9.2682466506958
    4. 'i' → logprob: -13.8932466506958
    5. 'current' → logprob: -15.0182466506958
    6. '	for' → logprob: -15.2682466506958
    7. 'from' → logprob: -16.518245697021484
    8. 'k' → logprob: -16.768245697021484
    9. '   ' → logprob: -16.893245697021484
    10. 'start' → logprob: -16.893245697021484

Token 610: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.5056425333023071
    2. 'd' → logprob: -1.3806425333023071
    3. 'i' → logprob: -3.2556424140930176
    4. 'x' → logprob: -3.3806424140930176
    5. 'div' → logprob: -3.5056424140930176
    6. 'm' → logprob: -3.7556424140930176
    7. 'k' → logprob: -4.755642414093018
    8. 'ms' → logprob: -5.130642414093018
    9. 'p' → logprob: -6.630642414093018
    10. 'potential' → logprob: -6.755642414093018

Token 611: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31335991621017456
    2. ' in' → logprob: -1.3133599758148193
    3. 'value' → logprob: -10.313360214233398
    4. ' ' → logprob: -10.438360214233398
    5. '```' → logprob: -11.188360214233398
    6. '   ' → logprob: -11.688360214233398
    7. '_value' → logprob: -13.313360214233398
    8. 'i' → logprob: -13.438360214233398
    9. 'int' → logprob: -13.563360214233398
    10. 'class' → logprob: -13.938360214233398

Token 612: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04258733242750168
    2. 'Monday' → logprob: -3.2925872802734375
    3. '(range' → logprob: -6.2925872802734375
    4. 'filter' → logprob: -6.9175872802734375
    5. ' range' → logprob: -7.0425872802734375
    6. '[' → logprob: -7.7925872802734375
    7. '(M' → logprob: -9.042587280273438
    8. 'cls' → logprob: -9.042587280273438
    9. '(' → logprob: -10.167587280273438
    10. ' Monday' → logprob: -10.417587280273438

Token 613: 'generate' (ID: 36386)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012285350821912289
    2. 'Monday' → logprob: -4.512285232543945
    3. '(range' → logprob: -7.637285232543945
    4. '[' → logprob: -8.637285232543945
    5. 'filter' → logprob: -8.762285232543945
    6. ' range' → logprob: -9.262285232543945
    7. '[i' → logprob: -9.512285232543945
    8. 'candidate' → logprob: -9.887285232543945
    9. 'class' → logprob: -10.512285232543945
    10. 'cls' → logprob: -10.512285232543945

Token 614: '_m' (ID: 1285)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.02523842826485634
    2. '(' → logprob: -4.275238513946533
    3. 'm' → logprob: -5.775238513946533
    4. '_m' → logprob: -5.900238513946533
    5. ' Monday' → logprob: -6.400238513946533
    6. 'range' → logprob: -7.150238513946533
    7. '(range' → logprob: -7.275238513946533
    8. '(m' → logprob: -7.525238513946533
    9. ' monday' → logprob: -8.150238037109375
    10. 'ms' → logprob: -8.400238037109375

Token 615: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.03019021824002266
    2. 'Monday' → logprob: -3.9051902294158936
    3. 'range' → logprob: -5.4051899909973145
    4. 'od' → logprob: -6.1551899909973145
    5. 'candidate' → logprob: -7.4051899909973145
    6. 'Saturday' → logprob: -7.6551899909973145
    7. 'ond' → logprob: -7.7801899909973145
    8. 'on' → logprob: -8.030190467834473
    9. 's' → logprob: -8.155190467834473
    10. 'S' → logprob: -8.905190467834473

Token 616: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.010589085519313812
    2. 's' → logprob: -4.760589122772217
    3. 'Saturday' → logprob: -6.260589122772217
    4. '_sat' → logprob: -10.135588645935059
    5. ' saturday' → logprob: -11.135588645935059
    6. '_' → logprob: -13.510588645935059
    7. '```' → logprob: -13.760588645935059
    8. ' Saturday' → logprob: -13.885588645935059
    9. 'def' → logprob: -14.385588645935059
    10. '   ' → logprob: -14.760588645935059

Token 617: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.00018780550453811884
    2. 's' → logprob: -9.125187873840332
    3. 'Saturday' → logprob: -10.375187873840332
    4. 'at' → logprob: -10.625187873840332
    5. 'atur' → logprob: -11.500187873840332
    6. '#' → logprob: -12.250187873840332
    7. 'unday' → logprob: -13.000187873840332
    8. ' saturday' → logprob: -13.500187873840332
    9. '```' → logprob: -14.125187873840332
    10. 't' → logprob: -14.875187873840332

Token 618: '_numbers' (ID: 76842)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.8749402761459351
    2. '_numbers' → logprob: -0.9999402761459351
    3. 'numbers' → logprob: -1.999940276145935
    4. '_pr' → logprob: -3.1249403953552246
    5. 'prime' → logprob: -4.124940395355225
    6. '_candidates' → logprob: -5.124940395355225
    7. '_prime' → logprob: -5.374940395355225
    8. 'candidate' → logprob: -5.874940395355225
    9. 'c' → logprob: -6.249940395355225
    10. '_number' → logprob: -7.124940395355225

Token 619: '_up' (ID: 18721)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.01109014730900526
    2. '(' → logprob: -4.511090278625488
    3. '(start' → logprob: -10.761090278625488
    4. '(range' → logprob: -11.261090278625488
    5. '(candidate' → logprob: -13.261090278625488
    6. ' (' → logprob: -13.261090278625488
    7. 'limit' → logprob: -13.386090278625488
    8. '   ' → logprob: -14.511090278625488
    9. '(lower' → logprob: -15.136090278625488
    10. '(n' → logprob: -15.261090278625488

Token 620: '_to' (ID: 5089)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.027553100138902664
    2. '(limit' → logprob: -4.277553081512451
    3. '_to' → logprob: -5.402553081512451
    4. 'limit' → logprob: -5.652553081512451
    5. '(' → logprob: -5.902553081512451
    6. '7' → logprob: -7.527553081512451
    7. 'To' → logprob: -7.527553081512451
    8. '   ' → logprob: -7.777553081512451
    9. 'from' → logprob: -8.40255355834961
    10. '       ' → logprob: -8.77755355834961

Token 621: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.03805159032344818
    2. 'limit' → logprob: -3.2880516052246094
    3. ' limit' → logprob: -12.03805160522461
    4. '(' → logprob: -12.66305160522461
    5. ' (' → logprob: -14.28805160522461
    6. '_limit' → logprob: -15.53805160522461
    7. '```' → logprob: -16.53805160522461
    8. '(
' → logprob: -16.78805160522461
    9. 'lim' → logprob: -17.78805160522461
    10. '.limit' → logprob: -17.91305160522461

Token 622: '):
' (ID: 1883)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.19971555471420288
    2. '():' → logprob: -1.8247156143188477
    3. '(' → logprob: -4.574715614318848
    4. '()' → logprob: -5.574715614318848
    5. '()):
' → logprob: -5.949715614318848
    6. '(n' → logprob: -6.699715614318848
    7. '):
' → logprob: -7.199715614318848
    8. '       ' → logprob: -7.949715614318848
    9. '():
' → logprob: -8.324715614318848
    10. ':' → logprob: -8.824715614318848

Token 623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036611463874578476
    2. ':' → logprob: -3.661611557006836
    3. '       ' → logprob: -5.036611557006836
    4. ':
' → logprob: -5.661611557006836
    5. '():
' → logprob: -9.286611557006836
    6. '():' → logprob: -10.411611557006836
    7. ' :' → logprob: -10.661611557006836
    8. ',' → logprob: -10.661611557006836
    9. ' if' → logprob: -11.161611557006836
    10. '	       ' → logprob: -11.161611557006836

Token 624: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24812453985214233
    2. ' if' → logprob: -2.123124599456787
    3. '           ' → logprob: -2.373124599456787
    4. '               ' → logprob: -4.998124599456787
    5. '       ' → logprob: -9.123124122619629
    6. '	       ' → logprob: -11.123124122619629
    7. '   ' → logprob: -12.623124122619629
    8. '	if' → logprob: -12.748124122619629
    9. '	           ' → logprob: -13.123124122619629
    10. '
' → logprob: -13.748124122619629

Token 625: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00014740281039848924
    2. ' candidate' → logprob: -8.875147819519043
    3. '   ' → logprob: -12.750147819519043
    4. '1' → logprob: -13.375147819519043
    5. '(candidate' → logprob: -13.375147819519043
    6. 'n' → logprob: -14.375147819519043
    7. 'c' → logprob: -15.500147819519043
    8. '           ' → logprob: -15.625147819519043
    9. '_candidate' → logprob: -15.875147819519043
    10. 'Monday' → logprob: -16.125146865844727

Token 626: ' ==' (ID: 951)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.11202030628919601
    2. '==' → logprob: -3.112020254135132
    3. ' ==' → logprob: -3.862020254135132
    4. '!=' → logprob: -4.112020492553711
    5. ' !=' → logprob: -4.362020492553711
    6. '>=' → logprob: -5.737020492553711
    7. ' >=' → logprob: -5.987020492553711
    8. '.div' → logprob: -6.112020492553711
    9. 'value' → logprob: -6.862020492553711
    10. 'div' → logprob: -7.612020492553711

Token 627: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03263422101736069
    2. 'n' → logprob: -3.5326342582702637
    3. 'Monday' → logprob: -6.032634258270264
    4. ' ' → logprob: -8.032633781433105
    5. 'None' → logprob: -9.282633781433105
    6. ' Monday' → logprob: -10.407633781433105
    7. ' n' → logprob: -11.282633781433105
    8. '   ' → logprob: -12.407633781433105
    9. '```' → logprob: -13.220133781433105
    10. '"' → logprob: -13.782633781433105

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07265682518482208
    2. 'n' → logprob: -2.6976568698883057
    3. 'Monday' → logprob: -5.947656631469727
    4. 'None' → logprob: -9.572656631469727
    5. ' ' → logprob: -11.572656631469727
    6. ' Monday' → logprob: -12.322656631469727
    7. ' n' → logprob: -13.197656631469727
    8. '```' → logprob: -13.260156631469727
    9. 'cls' → logprob: -13.697656631469727
    10. '   ' → logprob: -13.697656631469727

Token 629: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.058216292411088943
    2. 'or' → logprob: -2.9332163333892822
    3. ':
' → logprob: -6.433216094970703
    4. ':' → logprob: -6.933216094970703
    5. '               ' → logprob: -7.683216094970703
    6. '           ' → logprob: -8.183216094970703
    7. '            ' → logprob: -13.433216094970703
    8. '	or' → logprob: -14.058216094970703
    9. '              ' → logprob: -14.183216094970703
    10. ',' → logprob: -14.558216094970703

Token 630: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -3.531315314830863e-06
    2. ' candidate' → logprob: -12.625003814697266
    3. '(candidate' → logprob: -17.000003814697266
    4. '           ' → logprob: -17.125003814697266
    5. '   ' → logprob: -18.625003814697266
    6. 'cand' → logprob: -18.625003814697266
    7. 'c' → logprob: -18.625003814697266
    8. 'andidate' → logprob: -20.250003814697266
    9. '
' → logprob: -20.250003814697266
    10. '       ' → logprob: -20.750003814697266

Token 631: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3579097390174866
    2. ' ==' → logprob: -1.3579096794128418
    3. '>=' → logprob: -3.357909679412842
    4. ' >=' → logprob: -4.732909679412842
    5. '<|end|>' → logprob: -10.73291015625
    6. '>' → logprob: -11.10791015625
    7. '=' → logprob: -12.60791015625
    8. '≥' → logprob: -12.85791015625
    9. '==
' → logprob: -13.10791015625
    10. '           ' → logprob: -13.23291015625

Token 632: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1875571544806007e-05
    2. ' n' → logprob: -11.375011444091797
    3. '	n' → logprob: -15.500011444091797
    4. '_n' → logprob: -17.000011444091797
    5. '9' → logprob: -17.125011444091797
    6. '<|end|>' → logprob: -17.750011444091797
    7. '2' → logprob: -17.875011444091797
    8. '=n' → logprob: -18.125011444091797
    9. ')n' → logprob: -18.125011444091797
    10. '1' → logprob: -18.375011444091797

Token 633: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1522800624370575
    2. '               ' → logprob: -2.52728009223938
    3. ' or' → logprob: -3.02728009223938
    4. ':
' → logprob: -4.902279853820801
    5. '           ' → logprob: -5.402279853820801
    6. 'or' → logprob: -7.402279853820801
    7. '<|end|>' → logprob: -8.6522798538208
    8. ',' → logprob: -10.1522798538208
    9. '              ' → logprob: -10.4022798538208
    10. 'continue' → logprob: -10.6522798538208

Token 634: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011089440435171127
    2. ':' → logprob: -5.011089324951172
    3. ':
' → logprob: -6.011089324951172
    4. '           ' → logprob: -6.511089324951172
    5. ',' → logprob: -8.761089324951172
    6. ' continue' → logprob: -9.386089324951172
    7. ' or' → logprob: -9.761089324951172
    8. '       ' → logprob: -10.386089324951172
    9. 'continue' → logprob: -10.386089324951172
    10. '              ' → logprob: -11.136089324951172

Token 635: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06482100486755371
    2. 'continue' (adapté à ' continue') → logprob: -2.8148210048675537
    3. ' continue' → logprob: -5.939821243286133
    4. '           ' → logprob: -8.689821243286133
    5. '_continue' → logprob: -11.439821243286133
    6. 'contin' → logprob: -11.689821243286133
    7. '
' → logprob: -11.814821243286133
    8. '	continue' → logprob: -12.314821243286133
    9. '	           ' → logprob: -12.939821243286133
    10. ',' → logprob: -12.939821243286133

Token 636: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011474833445390686
    2. '            
' → logprob: -10.750114440917969
    3. '       ' → logprob: -11.000114440917969
    4. '               ' → logprob: -11.125114440917969
    5. '<|end|>' → logprob: -11.125114440917969
    6. ',' → logprob: -11.250114440917969
    7. '
' → logprob: -11.750114440917969
    8. ' if' → logprob: -12.125114440917969
    9. ':' → logprob: -12.125114440917969
    10. '          ' → logprob: -13.000114440917969

Token 637: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001287736464291811
    2. '       ' → logprob: -6.751287937164307
    3. ' if' → logprob: -10.126287460327148
    4. '```' → logprob: -10.501287460327148
    5. 'if' → logprob: -11.126287460327148
    6. '<|end|>' → logprob: -11.751287460327148
    7. '               ' → logprob: -11.876287460327148
    8. ',' → logprob: -12.126287460327148
    9. '          ' → logprob: -12.501287460327148
    10. '   ' → logprob: -13.001287460327148

Token 638: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45756256580352783
    2. 'if' (adapté à ' if') → logprob: -1.0825625658035278
    3. '           ' → logprob: -3.7075624465942383
    4. '       ' → logprob: -5.582562446594238
    5. '            
' → logprob: -10.207562446594238
    6. '
' → logprob: -10.332562446594238
    7. ' ' → logprob: -11.707562446594238
    8. '   ' → logprob: -12.082562446594238
    9. 'If' → logprob: -12.207562446594238
    10. '        
' → logprob: -12.207562446594238

Token 639: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2635784149169922
    2. 'candidate' → logprob: -1.5135784149169922
    3. 'Monday' → logprob: -4.638578414916992
    4. 'cls' → logprob: -7.138578414916992
    5. '   ' → logprob: -8.263578414916992
    6. ' candidate' → logprob: -8.388578414916992
    7. ' n' → logprob: -8.638578414916992
    8. '(candidate' → logprob: -8.763578414916992
    9. ' Monday' → logprob: -9.763578414916992
    10. '           ' → logprob: -10.638578414916992

Token 640: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759636759757996
    2. ' %' → logprob: -0.8259636759757996
    3. '%c' → logprob: -10.950963973999023
    4. '%s' → logprob: -12.825963973999023
    5. '%i' → logprob: -13.950963973999023
    6. '%e' → logprob: -13.950963973999023
    7. '%d' → logprob: -14.325963973999023
    8. '%x' → logprob: -14.825963973999023
    9. '   ' → logprob: -14.825963973999023
    10. ' ' → logprob: -14.950963973999023

Token 641: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.688212614681106e-05
    2. ' candidate' → logprob: -11.000017166137695
    3. '(candidate' → logprob: -15.750017166137695
    4. '_candidate' → logprob: -20.000017166137695
    5. 'andidate' → logprob: -20.625017166137695
    6. 'c' → logprob: -20.875017166137695
    7. 'cand' → logprob: -21.750017166137695
    8. ' candidat' → logprob: -22.125017166137695
    9. 'Candidate' → logprob: -22.375017166137695
    10. ' candidato' → logprob: -23.000017166137695

Token 642: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.251953661441803
    2. '==' → logprob: -1.5019536018371582
    3. '===' → logprob: -11.501954078674316
    4. '=' → logprob: -11.626954078674316
    5. '==
' → logprob: -14.001954078674316
    6. ' ' → logprob: -14.126954078674316
    7. ')==' → logprob: -14.376954078674316
    8. ' ===' → logprob: -14.501954078674316
    9. '           ' → logprob: -14.501954078674316
    10. '()==' → logprob: -14.751954078674316

Token 643: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'candidate' → logprob: -16.125030517578125
    4. '   ' → logprob: -19.625030517578125
    5. '۰' → logprob: -20.750030517578125
    6. '  ' → logprob: -20.875030517578125
    7. '```' → logprob: -21.375030517578125
    8. '=' → logprob: -21.687530517578125
    9. 'c' → logprob: -22.062530517578125
    10. '  ' → logprob: -22.125030517578125

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.500003814697266
    4. '۰' → logprob: -19.500003814697266
    5. '<|end|>' → logprob: -20.437503814697266
    6. '  ' → logprob: -20.562503814697266
    7. '```' → logprob: -20.687503814697266
    8. '00' → logprob: -21.250003814697266
    9. '=' → logprob: -21.312503814697266
    10. 'zero' → logprob: -21.437503814697266

Token 645: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1787182241678238
    2. ':' → logprob: -2.303718328475952
    3. ' and' → logprob: -3.053718328475952
    4. '               ' → logprob: -4.428718090057373
    5. '           ' → logprob: -6.053718090057373
    6. 'and' → logprob: -6.178718090057373
    7. '       ' → logprob: -9.678718566894531
    8. ':

' → logprob: -9.803718566894531
    9. '):
' → logprob: -10.928718566894531
    10. ' :
' → logprob: -11.178718566894531

Token 646: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008392847958020866
    2. '           ' → logprob: -7.7508392333984375
    3. ' return' → logprob: -8.500839233398438
    4. ' cls' → logprob: -10.125839233398438
    5. ' and' → logprob: -10.625839233398438
    6. '              ' → logprob: -11.000839233398438
    7. '       ' → logprob: -11.250839233398438
    8. '                   ' → logprob: -11.250839233398438
    9. ',' → logprob: -11.250839233398438
    10. '                ' → logprob: -11.500839233398438

Token 647: ' #' (ID: 1069)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.02666100300848484
    2. ' cls' → logprob: -3.651660919189453
    3. '               ' → logprob: -8.276660919189453
    4. '           ' → logprob: -9.651660919189453
    5. '   ' → logprob: -11.026660919189453
    6. 'if' → logprob: -11.401660919189453
    7. '                   ' → logprob: -12.276660919189453
    8. '_cls' → logprob: -12.651660919189453
    9. 'return' → logprob: -13.651660919189453
    10. '       ' → logprob: -13.776660919189453

Token 648: ' check' (ID: 2371)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0005542247672565281
    2. ' cls' → logprob: -7.500554084777832
    3. 'if' → logprob: -14.500554084777832
    4. '           ' → logprob: -14.625554084777832
    5. '_cls' → logprob: -16.00055503845215
    6. '               ' → logprob: -16.12555503845215
    7. '(cls' → logprob: -17.50055503845215
    8. '   ' → logprob: -17.75055503845215
    9. 'classmethod' → logprob: -18.00055503845215
    10. 'class' → logprob: -18.00055503845215

Token 649: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8480086326599121
    2. ' if' → logprob: -1.098008632659912
    3. 'if' → logprob: -1.848008632659912
    4. '               ' → logprob: -3.723008632659912
    5. ' cls' → logprob: -4.098008632659912
    6. 'cls' → logprob: -4.473008632659912
    7. '   ' → logprob: -4.598008632659912
    8. 'candidate' → logprob: -4.973008632659912
    9. '           ' → logprob: -5.348008632659912
    10. '                       ' → logprob: -7.098008632659912

Token 650: ' candidate' (ID: 17098)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.2226816862821579
    2. 'cls' → logprob: -2.722681760787964
    3. ' Monday' → logprob: -2.722681760787964
    4. 'candidate' → logprob: -2.972681760787964
    5. ' candidate' → logprob: -5.347681522369385
    6. ' cls' → logprob: -5.472681522369385
    7. ' not' → logprob: -6.347681522369385
    8. '_candidate' → logprob: -6.472681522369385
    9. 'not' → logprob: -6.972681522369385
    10. '_M' → logprob: -7.347681522369385

Token 651: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0887579917907715
    2. ' in' → logprob: -1.2137579917907715
    3. 'in' → logprob: -2.5887579917907715
    4. '>=' → logprob: -3.0887579917907715
    5. '!=' → logprob: -3.2137579917907715
    6. ' is' → logprob: -3.3387579917907715
    7. '>' → logprob: -3.4637579917907715
    8. ' !=' → logprob: -3.5887579917907715
    9. '<=' → logprob: -3.7137579917907715
    10. '==' → logprob: -3.8387579917907715

Token 652: ' MS' (ID: 15861)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.005163904745131731
    2. 'cls' → logprob: -5.505163669586182
    3. ' Monday' → logprob: -6.880163669586182
    4. 'class' → logprob: -11.13016414642334
    5. ' cls' → logprob: -11.38016414642334
    6. 'not' → logprob: -12.00516414642334
    7. 'a' → logprob: -12.13016414642334
    8. '(cls' → logprob: -12.25516414642334
    9. 'Tuesday' → logprob: -12.88016414642334
    10. 'in' → logprob: -13.13016414642334

Token 653: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0022678973618894815
    2. 'Prime' → logprob: -7.377267837524414
    3. '           ' → logprob: -7.877267837524414
    4. 'prime' → logprob: -8.127267837524414
    5. '_' → logprob: -8.127267837524414
    6. ' prime' → logprob: -9.002267837524414
    7. '_s' → logprob: -9.127267837524414
    8. ' _' → logprob: -9.127267837524414
    9. '_candidate' → logprob: -9.502267837524414
    10. '_pr' → logprob: -9.502267837524414

Token 654: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04245572164654732
    2. 'and' → logprob: -3.9174556732177734
    3. '               ' → logprob: -4.417455673217773
    4. '                   ' → logprob: -5.167455673217773
    5. '           ' → logprob: -6.667455673217773
    6. ' =' → logprob: -6.792455673217773
    7. ',' → logprob: -7.542455673217773
    8. '=' → logprob: -8.542455673217773
    9. '=True' → logprob: -8.667455673217773
    10. ' or' → logprob: -9.042455673217773

Token 655: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01582459919154644
    2. ' and' → logprob: -5.015824794769287
    3. ' if' → logprob: -5.640824794769287
    4. '           ' → logprob: -6.515824794769287
    5. '                   ' → logprob: -6.515824794769287
    6. '<|end|>' → logprob: -7.140824794769287
    7. '                ' → logprob: -8.265824317932129
    8. 'and' → logprob: -8.640824317932129
    9. '                       ' → logprob: -8.890824317932129
    10. ' not' → logprob: -9.015824317932129

Token 656: ' yes' (ID: 14531)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7475369572639465
    2. 'cls' → logprob: -0.7475369572639465
    3. 'Monday' → logprob: -3.1225368976593018
    4. ' not' → logprob: -4.872537136077881
    5. ' cls' → logprob: -7.372537136077881
    6. ' Monday' → logprob: -8.747536659240723
    7. '                   ' → logprob: -9.247536659240723
    8. '   ' → logprob: -9.247536659240723
    9. '               ' → logprob: -9.622536659240723
    10. '           ' → logprob: -10.122536659240723

Token 657: ' then' (ID: 1815)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.336527943611145
    2. '               ' → logprob: -1.336527943611145
    3. '           ' → logprob: -5.0865278244018555
    4. ':' → logprob: -5.3365278244018555
    5. ',' → logprob: -5.5865278244018555
    6. ':
' → logprob: -6.0865278244018555
    7. ' and' → logprob: -6.2115278244018555
    8. ' =' → logprob: -7.0865278244018555
    9. '=True' → logprob: -7.3365278244018555
    10. '):
' → logprob: -7.4615278244018555

Token 658: ' n' (ID: 297)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.563116729259491
    2. 'if' → logprob: -1.1881167888641357
    3. ' cls' → logprob: -2.4381167888641357
    4. ' if' → logprob: -3.5631167888641357
    5. 'return' → logprob: -5.313116550445557
    6. '                   ' → logprob: -5.813116550445557
    7. ' return' → logprob: -6.938116550445557
    8. 'result' → logprob: -7.938116550445557
    9. 'candidate' → logprob: -8.188117027282715
    10. '               ' → logprob: -8.688117027282715

Token 659: ' is' (ID: 382)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6846697926521301
    2. ' %' → logprob: -0.8096697926521301
    3. ' is' → logprob: -3.4346697330474854
    4. 'is' → logprob: -4.9346699714660645
    5. '=' → logprob: -5.8096699714660645
    6. ' %=' → logprob: -5.9346699714660645
    7. '                   ' → logprob: -6.5596699714660645
    8. '               ' → logprob: -6.9346699714660645
    9. ' =' → logprob: -7.4346699714660645
    10. '           ' → logprob: -7.6846699714660645

Token 660: ' not' (ID: 625)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3496132493019104
    2. 'not' → logprob: -1.4746131896972656
    3. ' not' → logprob: -3.2246131896972656
    4. 'com' → logprob: -4.224613189697266
    5. ' False' → logprob: -4.599613189697266
    6. '_false' → logprob: -7.099613189697266
    7. ' composite' → logprob: -8.474613189697266
    8. 'false' → logprob: -8.599613189697266
    9. '               ' → logprob: -8.974613189697266
    10. '_com' → logprob: -9.099613189697266

Token 661: ' MS' (ID: 15861)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.030016249045729637
    2. ' False' → logprob: -3.5300161838531494
    3. 'True' → logprob: -9.28001594543457
    4. '_false' → logprob: -10.03001594543457
    5. '           ' → logprob: -10.15501594543457
    6. 'false' → logprob: -10.53001594543457
    7. '               ' → logprob: -11.15501594543457
    8. '
' → logprob: -11.90501594543457
    9. ' True' → logprob: -11.90501594543457
    10. '=False' → logprob: -12.15501594543457

Token 662: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.48483791947364807
    2. '_prime' → logprob: -0.9848378896713257
    3. ' prime' → logprob: -4.609838008880615
    4. '_true' → logprob: -8.109837532043457
    5. 'True' → logprob: -8.609837532043457
    6. '_false' → logprob: -9.859837532043457
    7. 'Prime' → logprob: -10.234837532043457
    8. '_com' → logprob: -10.609837532043457
    9. ' True' → logprob: -11.109837532043457
    10. 'False' → logprob: -11.109837532043457

Token 663: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06631045788526535
    2. '                   ' → logprob: -3.316310405731201
    3. '           ' → logprob: -4.441310405731201
    4. ',' → logprob: -5.566310405731201
    5. ':
' → logprob: -5.816310405731201
    6. ':' → logprob: -6.316310405731201
    7. ')' → logprob: -6.566310405731201
    8. ' and' → logprob: -7.191310405731201
    9. '                
' → logprob: -7.191310405731201
    10. '```' → logprob: -7.316310405731201

Token 664: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026585354935377836
    2. '           ' → logprob: -6.252658367156982
    3. '                   ' → logprob: -8.00265884399414
    4. ',' → logprob: -8.87765884399414
    5. ')' → logprob: -9.50265884399414
    6. '                ' → logprob: -9.87765884399414
    7. '       ' → logprob: -10.62765884399414
    8. '```' → logprob: -10.62765884399414
    9. '              ' → logprob: -11.25265884399414
    10. '                
' → logprob: -11.37765884399414

Token 665: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38761264085769653
    2. 'if' (adapté à ' if') → logprob: -1.1376125812530518
    3. '               ' → logprob: -7.262612819671631
    4. '                   ' → logprob: -11.262612342834473
    5. 'return' → logprob: -11.512612342834473
    6. ' return' → logprob: -11.762612342834473
    7. '           ' → logprob: -12.012612342834473
    8. ' and' → logprob: -14.637612342834473
    9. ' is' → logprob: -14.762612342834473
    10. '
' → logprob: -14.762612342834473

Token 666: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0012164250947535038
    2. 'Monday' → logprob: -7.376216411590576
    3. ' cls' → logprob: -7.501216411590576
    4. 'not' → logprob: -10.501216888427734
    5. ' Monday' → logprob: -12.376216888427734
    6. '(cls' → logprob: -13.001216888427734
    7. ' not' → logprob: -13.876216888427734
    8. '   ' → logprob: -14.251216888427734
    9. 'class' → logprob: -14.251216888427734
    10. 'classmethod' → logprob: -15.126216888427734

Token 667: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.007841197773814201
    2. '._' → logprob: -4.882841110229492
    3. 'is' → logprob: -8.632841110229492
    4. '.' → logprob: -10.382841110229492
    5. '_is' → logprob: -11.257841110229492
    6. '   ' → logprob: -12.257841110229492
    7. ' .' → logprob: -13.257841110229492
    8. '       ' → logprob: -13.882841110229492
    9. '(is' → logprob: -13.882841110229492
    10. ').' → logprob: -14.257841110229492

Token 668: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.001035787514410913
    2. 'Monday' → logprob: -6.876035690307617
    3. 'm' → logprob: -13.126035690307617
    4. ' Monday' → logprob: -14.501035690307617
    5. '(m' → logprob: -15.626035690307617
    6. '_M' → logprob: -16.001035690307617
    7. '```' → logprob: -16.626035690307617
    8. '_' → logprob: -18.376035690307617
    9. ' monday' → logprob: -18.376035690307617
    10. '(' → logprob: -18.501035690307617

Token 669: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -5.88418151892256e-05
    2. 'Monday' → logprob: -10.000059127807617
    3. 'on' → logprob: -11.625059127807617
    4. 'ond' → logprob: -13.375059127807617
    5. '```' → logprob: -14.500059127807617
    6. '_m' → logprob: -14.500059127807617
    7. 'unday' → logprob: -14.750059127807617
    8. 'ont' → logprob: -15.000059127807617
    9. '{' → logprob: -15.375059127807617
    10. '_' → logprob: -15.750059127807617

Token 670: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0007881867350079119
    2. 's' → logprob: -7.50078821182251
    3. 'Saturday' → logprob: -8.375787734985352
    4. '```' → logprob: -14.250787734985352
    5. '_sat' → logprob: -14.250787734985352
    6. '<|end|>' → logprob: -14.875787734985352
    7. '\' → logprob: -14.875787734985352
    8. 'a' → logprob: -15.375787734985352
    9. '[' → logprob: -15.375787734985352
    10. '_m' → logprob: -15.500787734985352

Token 671: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.0023034585174173117
    2. 's' → logprob: -6.377303600311279
    3. 'Saturday' → logprob: -7.877303600311279
    4. '```' → logprob: -9.752303123474121
    5. '_s' → logprob: -10.127303123474121
    6. 'unday' → logprob: -11.002303123474121
    7. '_' → logprob: -11.252303123474121
    8. 'atur' → logprob: -11.502303123474121
    9. 'onday' → logprob: -11.502303123474121
    10. 'm' → logprob: -11.627303123474121

Token 672: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0015078396536409855
    2. 'prime' → logprob: -6.501507759094238
    3. 'Prime' → logprob: -12.751507759094238
    4. '
' → logprob: -14.376507759094238
    5. '_candidate' → logprob: -14.376507759094238
    6. ' prime' → logprob: -14.501507759094238
    7. '```' → logprob: -14.501507759094238
    8. 'candidate' → logprob: -16.376508712768555
    9. ')' → logprob: -16.501508712768555
    10. '(candidate' → logprob: -17.251508712768555

Token 673: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -7.465036105713807e-06
    2. 'candidate' → logprob: -11.875007629394531
    3. '(' → logprob: -15.250007629394531
    4. '```' → logprob: -16.00000762939453
    5. '(
' → logprob: -16.50000762939453
    6. ' (' → logprob: -16.87500762939453
    7. '((' → logprob: -17.87500762939453
    8. ' candidate' → logprob: -18.37500762939453
    9. '   ' → logprob: -19.12500762939453
    10. '(cls' → logprob: -19.25000762939453

Token 674: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06979314237833023
    2. '()):
' → logprob: -3.069793224334717
    3. '):' → logprob: -3.944793224334717
    4. '()' → logprob: -6.944793224334717
    5. '():
' → logprob: -7.694793224334717
    6. ')' → logprob: -9.069792747497559
    7. '               ' → logprob: -10.069792747497559
    8. '):
' → logprob: -11.194792747497559
    9. '                   ' → logprob: -11.444792747497559
    10. ' ):
' → logprob: -11.819792747497559

Token 675: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014241199940443039
    2. ':' → logprob: -5.5142412185668945
    3. '                       ' → logprob: -6.0142412185668945
    4. 'False' → logprob: -6.0142412185668945
    5. '               ' → logprob: -6.5142412185668945
    6. ':
' → logprob: -7.2642412185668945
    7. '(False' → logprob: -7.3892412185668945
    8. '):' → logprob: -7.6392412185668945
    9. '():' → logprob: -8.014241218566895
    10. ':return' → logprob: -8.264241218566895

Token 676: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' (adapté à ' cls') → logprob: -0.028048627078533173
    2. '                       ' → logprob: -3.778048515319824
    3. ' cls' → logprob: -5.403048515319824
    4. '                   ' → logprob: -8.278048515319824
    5. '                      ' → logprob: -11.903048515319824
    6. '           ' → logprob: -12.028048515319824
    7. 'return' → logprob: -12.028048515319824
    8. '                     ' → logprob: -12.528048515319824
    9. '               ' → logprob: -12.653048515319824
    10. '_cls' → logprob: -13.153048515319824

Token 677: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00673005310818553
    2. '_com' → logprob: -5.006730079650879
    3. '.com' → logprob: -11.506730079650879
    4. '           ' → logprob: -13.506730079650879
    5. '.' → logprob: -14.256730079650879
    6. ']._' → logprob: -14.506730079650879
    7. '   ' → logprob: -15.256730079650879
    8. '_cache' → logprob: -15.506730079650879
    9. ')._' → logprob: -15.631730079650879
    10. '
' → logprob: -16.006729125976562

Token 678: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00044949972652830184
    2. '_com' → logprob: -7.7504496574401855
    3. 'cache' → logprob: -11.625449180603027
    4. ' composite' → logprob: -13.000449180603027
    5. 'set' → logprob: -13.375449180603027
    6. '
' → logprob: -13.375449180603027
    7. 'compose' → logprob: -14.125449180603027
    8. '(com' → logprob: -14.875449180603027
    9. '	com' → logprob: -15.125449180603027
    10. '.com' → logprob: -15.250449180603027

Token 679: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.0005903251585550606
    2. 'positive' → logprob: -8.250590324401855
    3. '_cache' → logprob: -8.875590324401855
    4. '_positive' → logprob: -9.250590324401855
    5. 'pos' → logprob: -10.000590324401855
    6. '```' → logprob: -10.875590324401855
    7. 'cache' → logprob: -11.375590324401855
    8. 'plete' → logprob: -12.250590324401855
    9. 'posit' → logprob: -12.500590324401855
    10. '_pos' → logprob: -13.250590324401855

Token 680: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.128163257315464e-07
    2. 'cache' → logprob: -15.75
    3. '_CACHE' → logprob: -17.875
    4. 'Cache' → logprob: -18.0
    5. '_cached' → logprob: -18.875
    6. 'CACHE' → logprob: -21.0
    7. '[' → logprob: -21.25
    8. '-cache' → logprob: -21.5
    9. '	cache' → logprob: -21.625
    10. '_' → logprob: -22.0

Token 681: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0002693224814720452
    2. '[c' → logprob: -8.250268936157227
    3. '[' → logprob: -12.250268936157227
    4. 'n' → logprob: -12.875268936157227
    5. '           ' → logprob: -14.625268936157227
    6. ' [' → logprob: -16.875268936157227
    7. '       ' → logprob: -17.125268936157227
    8. '   ' → logprob: -17.375268936157227
    9. '                   ' → logprob: -17.375268936157227
    10. '=' → logprob: -17.750268936157227

Token 682: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5411800742149353
    2. '=' → logprob: -1.04118013381958
    3. ' =' → logprob: -3.16618013381958
    4. ']=' → logprob: -3.79118013381958
    5. ')' → logprob: -9.666179656982422
    6. '[' → logprob: -10.166179656982422
    7. '[n' → logprob: -10.541179656982422
    8. ' ]' → logprob: -10.791179656982422
    9. ')=' → logprob: -12.166179656982422
    10. '           ' → logprob: -12.291179656982422

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198897212743759
    2. ' =' → logprob: -2.8119890689849854
    3. '=False' → logprob: -11.061988830566406
    4. '=True' → logprob: -13.311988830566406
    5. ']=' → logprob: -13.686988830566406
    6. 'False' → logprob: -13.686988830566406
    7. '                   ' → logprob: -14.186988830566406
    8. ']' → logprob: -14.311988830566406
    9. '           ' → logprob: -15.311988830566406
    10. '               ' → logprob: -16.061988830566406

Token 684: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. 'True' → logprob: -18.25000762939453
    4. '                   ' → logprob: -19.75000762939453
    5. '               ' → logprob: -21.87500762939453
    6. '           ' → logprob: -22.00000762939453
    7. '(False' → logprob: -23.25000762939453
    8. 'false' → logprob: -23.87500762939453
    9. '=False' → logprob: -24.62500762939453
    10. '                       ' → logprob: -24.87500762939453

Token 685: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017280145548284054
    2. '               ' → logprob: -7.001728057861328
    3. '           ' → logprob: -8.501728057861328
    4. '<|end|>' → logprob: -8.501728057861328
    5. '                       ' → logprob: -8.626728057861328
    6. 'return' → logprob: -9.751728057861328
    7. '```' → logprob: -10.001728057861328
    8. ')' → logprob: -10.501728057861328
    9. '                  ' → logprob: -10.876728057861328
    10. '                           ' → logprob: -11.001728057861328

Token 686: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005635190173052251
    2. '               ' → logprob: -8.000563621520996
    3. '           ' → logprob: -9.375563621520996
    4. 'return' → logprob: -10.000563621520996
    5. '                       ' → logprob: -10.375563621520996
    6. '<|end|>' → logprob: -10.750563621520996
    7. ',' → logprob: -11.875563621520996
    8. '                  ' → logprob: -11.875563621520996
    9. '       ' → logprob: -12.250563621520996
    10. ' return' → logprob: -12.375563621520996

Token 687: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002514455991331488
    2. 'return' (adapté à ' return') → logprob: -8.625251770019531
    3. ' return' → logprob: -10.625251770019531
    4. '           ' → logprob: -10.875251770019531
    5. '               ' → logprob: -11.375251770019531
    6. '                       ' → logprob: -12.000251770019531
    7. '                  ' → logprob: -12.250251770019531
    8. '                    ' → logprob: -13.000251770019531
    9. '       ' → logprob: -13.375251770019531
    10. '                           ' → logprob: -14.000251770019531

Token 688: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. 'True' → logprob: -24.00001335144043
    4. '(False' → logprob: -25.37501335144043
    5. 'false' → logprob: -26.75001335144043
    6. '_false' → logprob: -27.12501335144043
    7. '=False' → logprob: -28.75001335144043
    8. '.False' → logprob: -28.75001335144043
    9. 'F' → logprob: -28.87501335144043
    10. '   ' → logprob: -29.50001335144043

Token 689: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007636916358023882
    2. '<|end|>' → logprob: -5.007637023925781
    3. '        
' → logprob: -8.382637023925781
    4. '
' → logprob: -8.757637023925781
    5. '<|end|>' → logprob: -9.257637023925781
    6. '           ' → logprob: -9.507637023925781
    7. '.' → logprob: -9.632637023925781
    8. ',' → logprob: -9.632637023925781
    9. '```' → logprob: -9.757637023925781
    10. ')' → logprob: -10.007637023925781

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037383107701316476
    2. '           ' → logprob: -9.000373840332031
    3. '<|end|>' → logprob: -9.750373840332031
    4. 'return' → logprob: -10.000373840332031
    5. '```' → logprob: -10.875373840332031
    6. '               ' → logprob: -11.000373840332031
    7. ')' → logprob: -11.375373840332031
    8. '[' → logprob: -11.375373840332031
    9. '        
' → logprob: -11.500373840332031
    10. '+' → logprob: -11.500373840332031

Token 691: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010853286366909742
    2. 'cls' → logprob: -7.12608528137207
    3. '   ' → logprob: -8.62608528137207
    4. ' cls' → logprob: -10.62608528137207
    5. '<|end|>' → logprob: -10.87608528137207
    6. '        
' → logprob: -11.12608528137207
    7. '           ' → logprob: -11.25108528137207
    8. 'return' → logprob: -12.00108528137207
    9. '```' → logprob: -12.12608528137207
    10. '
' → logprob: -12.62608528137207

Token 692: ' no' (ID: 860)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.02401343733072281
    2. '       ' → logprob: -3.7740135192871094
    3. ' cls' → logprob: -7.649013519287109
    4. '   ' → logprob: -8.14901351928711
    5. '           ' → logprob: -14.27401351928711
    6. '#' → logprob: -15.14901351928711
    7. ' ' → logprob: -15.39901351928711
    8. 'return' → logprob: -15.52401351928711
    9. 'Cls' → logprob: -16.02401351928711
    10. '  ' → logprob: -16.14901351928711

Token 693: ' MS' (ID: 15861)
  Prédit: ' cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cls' → logprob: -0.7694852948188782
    2. 'cls' → logprob: -1.2694852352142334
    3. '       ' → logprob: -1.7694852352142334
    4. '   ' → logprob: -2.8944852352142334
    5. '_cls' → logprob: -4.2694854736328125
    6. '(cls' → logprob: -4.8944854736328125
    7. '           ' → logprob: -5.6444854736328125
    8. '
' → logprob: -7.6444854736328125
    9. 'return' → logprob: -7.7694854736328125
    10. '.cls' → logprob: -7.7694854736328125

Token 694: ' prime' (ID: 9197)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.0031859094742685556
    2. '_prime' → logprob: -6.503185749053955
    3. '_div' → logprob: -7.253185749053955
    4. '       ' → logprob: -7.878185749053955
    5. '_cache' → logprob: -7.878185749053955
    6. '_pr' → logprob: -10.003186225891113
    7. 'com' → logprob: -10.253186225891113
    8. '           ' → logprob: -10.253186225891113
    9. '   ' → logprob: -10.503186225891113
    10. 'prime' → logprob: -11.128186225891113

Token 695: ' divisor' (ID: 100482)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.3895091116428375
    2. '       ' → logprob: -2.1395092010498047
    3. '_f' → logprob: -3.2645092010498047
    4. 'candidate' → logprob: -3.6395092010498047
    5. 'f' → logprob: -3.7645092010498047
    6. 'cls' → logprob: -4.014509201049805
    7. '_candidate' → logprob: -4.139509201049805
    8. '_candidates' → logprob: -4.389509201049805
    9. ' factors' → logprob: -4.514509201049805
    10. '   ' → logprob: -4.889509201049805

Token 696: ' found' (ID: 2491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021748353901784867
    2. '
' → logprob: -9.62521743774414
    3. '   ' → logprob: -9.75021743774414
    4. ',' → logprob: -9.87521743774414
    5. '           ' → logprob: -11.75021743774414
    6. ' found' → logprob: -12.37521743774414
    7. 'cls' → logprob: -12.62521743774414
    8. 'n' → logprob: -12.75021743774414
    9. ' cls' → logprob: -12.87521743774414
    10. ' for' → logprob: -13.12521743774414

Token 697: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.787507714354433e-05
    2. ',' → logprob: -10.25004768371582
    3. '<|end|>' → logprob: -12.12504768371582
    4. '           ' → logprob: -12.87504768371582
    5. '   ' → logprob: -13.50004768371582
    6. '
' → logprob: -14.37504768371582
    7. '        
' → logprob: -14.37504768371582
    8. '```' → logprob: -14.62504768371582
    9. ',
' → logprob: -14.75004768371582
    10. 'cls' → logprob: -15.37504768371582

Token 698: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021535921841859818
    2. 'cls' → logprob: -6.252153396606445
    3. ' cls' → logprob: -8.627153396606445
    4. '   ' → logprob: -10.002153396606445
    5. '           ' → logprob: -15.252153396606445
    6. '      ' → logprob: -16.002153396606445
    7. 'return' → logprob: -16.377153396606445
    8. '     ' → logprob: -18.252153396606445
    9. '    ' → logprob: -18.502153396606445
    10. ' ' → logprob: -18.502153396606445

Token 699: ' MS' (ID: 15861)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3755122423171997
    2. ' True' → logprob: -1.8755122423171997
    3. 'True' → logprob: -2.25051212310791
    4. ' cls' → logprob: -3.25051212310791
    5. 'cls' → logprob: -4.37551212310791
    6. '   ' → logprob: -6.00051212310791
    7. '=True' → logprob: -8.75051212310791
    8. '_true' → logprob: -9.37551212310791
    9. '      ' → logprob: -10.00051212310791
    10. 'true' → logprob: -10.12551212310791

Token 700: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.36969611048698425
    2. '_com' → logprob: -1.4946961402893066
    3. '_cache' → logprob: -2.4946961402893066
    4. '           ' → logprob: -7.119696140289307
    5. 'prime' → logprob: -7.744696140289307
    6. '       ' → logprob: -7.869696140289307
    7. '_pr' → logprob: -8.119695663452148
    8. '_p' → logprob: -9.994695663452148
    9. 'Prime' → logprob: -10.119695663452148
    10. ' _' → logprob: -10.494695663452148

Token 701: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.8889261304575484e-06
    2. '           ' → logprob: -13.875003814697266
    3. '<|end|>' → logprob: -14.000003814697266
    4. ',' → logprob: -14.250003814697266
    5. '
' → logprob: -14.500003814697266
    6. '   ' → logprob: -14.750003814697266
    7. '        
' → logprob: -15.375003814697266
    8. '<|end|>' → logprob: -16.375003814697266
    9. '               ' → logprob: -17.000003814697266
    10. '```' → logprob: -17.000003814697266

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -11.500011444091797
    3. 'cls' → logprob: -14.000011444091797
    4. '           ' → logprob: -14.750011444091797
    5. ' cls' → logprob: -15.750011444091797
    6. '```' → logprob: -16.375011444091797
    7. '
' → logprob: -17.875011444091797
    8. '{
' → logprob: -18.000011444091797
    9. '      ' → logprob: -18.125011444091797
    10. '        
' → logprob: -18.125011444091797

Token 703: ' cls' (ID: 26133)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03894103318452835
    2. 'cls' (adapté à ' cls') → logprob: -3.2889411449432373
    3. '   ' → logprob: -7.038940906524658
    4. ' cls' → logprob: -10.788941383361816
    5. '           ' → logprob: -14.413941383361816
    6. 'return' → logprob: -15.163941383361816
    7. '      ' → logprob: -15.788941383361816
    8. '_cls' → logprob: -15.788941383361816
    9. 'class' → logprob: -16.2889404296875
    10. 'self' → logprob: -16.5389404296875

Token 704: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.057743949990254e-05
    2. ']._' → logprob: -11.500020980834961
    3. '_com' → logprob: -12.125020980834961
    4. ')._' → logprob: -12.625020980834961
    5. '_' → logprob: -14.000020980834961
    6. '->_' → logprob: -15.250020980834961
    7. '."_' → logprob: -16.12502098083496
    8. '   ' → logprob: -16.37502098083496
    9. '```' → logprob: -16.50002098083496
    10. '::_' → logprob: -16.87502098083496

Token 705: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -2.093505099765025e-05
    2. '_com' → logprob: -10.875020980834961
    3. ' composite' → logprob: -13.375020980834961
    4. '(com' → logprob: -15.750020980834961
    5. 'set' → logprob: -17.25002098083496
    6. 'comp' → logprob: -17.37502098083496
    7. '	com' → logprob: -17.50002098083496
    8. 'is' → logprob: -17.87502098083496
    9. 'Composite' → logprob: -18.00002098083496
    10. 'compound' → logprob: -18.00002098083496

Token 706: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -3.583550642360933e-05
    2. '_positive' → logprob: -11.125036239624023
    3. 'positive' → logprob: -11.750036239624023
    4. '_com' → logprob: -12.250036239624023
    5. '```' → logprob: -13.000036239624023
    6. 'pos' → logprob: -13.375036239624023
    7. '_cache' → logprob: -13.500036239624023
    8. '_pos' → logprob: -14.125036239624023
    9. '_' → logprob: -14.625036239624023
    10. 'osite' → logprob: -14.750036239624023

Token 707: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.128163257315464e-07
    2. '_cached' → logprob: -16.375
    3. 'Cache' → logprob: -16.75
    4. '_CACHE' → logprob: -17.0
    5. 'cache' → logprob: -17.625
    6. '\' → logprob: -19.125
    7. '_com' → logprob: -19.125
    8. '[' → logprob: -19.25
    9. '_queue' → logprob: -20.25
    10. '   ' → logprob: -20.5

Token 708: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. 'n' → logprob: -17.0
    4. ' [' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. '[N' → logprob: -18.25
    7. '[m' → logprob: -18.25
    8. '\[' → logprob: -18.375
    9. '[int' → logprob: -18.625
    10. '       ' → logprob: -19.125

Token 709: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.059192124754190445
    2. '=' → logprob: -3.059192180633545
    3. ']=' → logprob: -4.559192180633545
    4. ' =' → logprob: -9.559191703796387
    5. ' ]' → logprob: -12.184191703796387
    6. '[' → logprob: -13.059191703796387
    7. '=True' → logprob: -15.059191703796387
    8. ')' → logprob: -17.184192657470703
    9. '   ' → logprob: -17.809192657470703
    10. ']
' → logprob: -17.934192657470703

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002613358374219388
    2. ' =' → logprob: -8.250261306762695
    3. '=True' → logprob: -18.750261306762695
    4. '＝' → logprob: -22.625261306762695
    5. '=
' → logprob: -22.625261306762695
    6. '.=' → logprob: -23.750261306762695
    7. '=

' → logprob: -24.125261306762695
    8. ']=' → logprob: -24.125261306762695
    9. '[' → logprob: -24.375261306762695
    10. '   ' → logprob: -24.625261306762695

Token 711: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. 'Tr' → logprob: -21.375001907348633
    4. '(True' → logprob: -22.625001907348633
    5. 'true' → logprob: -23.250001907348633
    6. '=True' → logprob: -23.500001907348633
    7. '   ' → logprob: -24.375001907348633
    8. '.True' → logprob: -25.250001907348633
    9. 'False' → logprob: -25.875001907348633
    10. 'TRUE' → logprob: -25.875001907348633

Token 712: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042961155995726585
    2. '<|end|>' → logprob: -6.00429630279541
    3. 'return' → logprob: -7.12929630279541
    4. ' return' → logprob: -7.87929630279541
    5. ':return' → logprob: -8.75429630279541
    6. '	return' → logprob: -9.50429630279541
    7. '	' → logprob: -9.87929630279541
    8. '<|end|>' → logprob: -9.87929630279541
    9. '   ' → logprob: -10.00429630279541
    10. '
' → logprob: -10.25429630279541

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003298632800579071
    2. '	' → logprob: -8.500329971313477
    3. '<|end|>' → logprob: -10.125329971313477
    4. '   ' → logprob: -10.500329971313477
    5. 'return' → logprob: -11.000329971313477
    6. '           ' → logprob: -11.000329971313477
    7. '        
' → logprob: -12.125329971313477
    8. '               ' → logprob: -12.625329971313477
    9. ' return' → logprob: -12.625329971313477
    10. '	return' → logprob: -13.250329971313477

Token 714: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041566673666238785
    2. 'return' (adapté à ' return') → logprob: -3.2915666103363037
    3. ' return' → logprob: -5.666566848754883
    4. '   ' → logprob: -10.541566848754883
    5. '           ' → logprob: -10.541566848754883
    6. '	return' → logprob: -12.541566848754883
    7. '               ' → logprob: -13.291566848754883
    8. ':return' → logprob: -14.791566848754883
    9. '	' → logprob: -15.041566848754883
    10. '
' → logprob: -15.791566848754883

Token 715: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. 'False' → logprob: -19.251928329467773
    4. '(True' → logprob: -20.376928329467773
    5. '   ' → logprob: -21.251928329467773
    6. 'true' → logprob: -21.876928329467773
    7. '       ' → logprob: -23.001928329467773
    8. '=True' → logprob: -23.376928329467773
    9. 'Tr' → logprob: -24.251928329467773
    10. '_true' → logprob: -25.126928329467773

Token 716: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1887090504169464
    2. '
' → logprob: -1.813709020614624
    3. '   ' → logprob: -4.813709259033203
    4. '    
' → logprob: -8.563709259033203
    5. ')' → logprob: -9.063709259033203
    6. ' def' → logprob: -9.063709259033203
    7. '

' → logprob: -9.188709259033203
    8. ' 
' → logprob: -10.063709259033203
    9. '  
' → logprob: -10.438709259033203
    10. '_def' → logprob: -10.563709259033203

Token 717: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031282080453820527
    2. ':def' → logprob: -9.000312805175781
    3. '_def' → logprob: -10.000312805175781
    4. '```' → logprob: -10.000312805175781
    5. '_' → logprob: -10.500312805175781
    6. ':' → logprob: -10.500312805175781
    7. ' def' → logprob: -10.875312805175781
    8. '[' → logprob: -12.125312805175781
    9. 'd' → logprob: -12.500312805175781
    10. ')' → logprob: -12.750312805175781

Token 718: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.040494006127119064
    2. '_' → logprob: -3.540493965148926
    3. '_generate' → logprob: -4.540493965148926
    4. ' ' → logprob: -11.540493965148926
    5. ' def' → logprob: -13.290493965148926
    6. '_define' → logprob: -13.540493965148926
    7. ' ' → logprob: -13.915493965148926
    8. '_add' → logprob: -14.290493965148926
    9. '_generated' → logprob: -14.290493965148926
    10. '_generator' → logprob: -14.415493965148926

Token 719: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.00026217024424113333
    2. '_generate' → logprob: -8.250262260437012
    3. 'def' → logprob: -14.000262260437012
    4. 'define' → logprob: -18.500261306762695
    5. ' generate' → logprob: -18.875261306762695
    6. '(generate' → logprob: -19.250261306762695
    7. '.generate' → logprob: -19.625261306762695
    8. 'enerate' → logprob: -19.625261306762695
    9. 'Generate' → logprob: -20.125261306762695
    10. '_generator' → logprob: -20.625261306762695

Token 720: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.8444881536415778e-05
    2. 'm' → logprob: -11.000028610229492
    3. '(m' → logprob: -12.250028610229492
    4. 'Monday' → logprob: -12.750028610229492
    5. '(_' → logprob: -13.000028610229492
    6. '(' → logprob: -14.250028610229492
    7. '```' → logprob: -14.625028610229492
    8. 'def' → logprob: -14.875028610229492
    9. '\' → logprob: -16.125028610229492
    10. '(int' → logprob: -16.875028610229492

Token 721: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -4.127333340875339e-06
    2. 'ond' → logprob: -13.125003814697266
    3. '_' → logprob: -13.625003814697266
    4. '{' → logprob: -15.375003814697266
    5. 'on' → logprob: -15.875003814697266
    6. '```' → logprob: -15.875003814697266
    7. 'onda' → logprob: -16.500003814697266
    8. 'generate' → logprob: -16.625003814697266
    9. '_generate' → logprob: -17.000003814697266
    10. 'Monday' → logprob: -17.125003814697266

Token 722: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.3425219549390022e-05
    2. 'Saturday' → logprob: -11.62501335144043
    3. '_sat' → logprob: -12.50001335144043
    4. 'def' → logprob: -15.62501335144043
    5. 's' → logprob: -15.62501335144043
    6. '\' → logprob: -15.62501335144043
    7. '```' → logprob: -16.25001335144043
    8. ' saturday' → logprob: -16.50001335144043
    9. '_' → logprob: -17.12501335144043
    10. '_week' → logprob: -17.25001335144043

Token 723: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.50000286102295
    3. 'Saturday' → logprob: -14.25000286102295
    4. 'atur' → logprob: -15.00000286102295
    5. 'unday' → logprob: -15.87500286102295
    6. 'atellite' → logprob: -16.375001907348633
    7. '_at' → logprob: -17.125001907348633
    8. 's' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. '{' → logprob: -17.500001907348633

Token 724: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0001242772996192798
    2. '_number' → logprob: -9.000123977661133
    3. '_up' → logprob: -15.000123977661133
    4. '_n' → logprob: -15.250123977661133
    5. '_' → logprob: -16.125123977661133
    6. '_values' → logprob: -16.500123977661133
    7. 'numbers' → logprob: -17.125123977661133
    8. '```' → logprob: -17.625123977661133
    9. 'def' → logprob: -18.125123977661133
    10. 'number' → logprob: -18.125123977661133

Token 725: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -6.754368223482743e-05
    2. '_u' → logprob: -9.750067710876465
    3. '(up' → logprob: -12.625067710876465
    4. '_to' → logprob: -12.875067710876465
    5. '```' → logprob: -13.375067710876465
    6. '_until' → logprob: -14.625067710876465
    7. '_under' → logprob: -14.875067710876465
    8. '_from' → logprob: -15.250067710876465
    9. '_for' → logprob: -16.12506675720215
    10. '_(' → logprob: -16.37506675720215

Token 726: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.07893749326467514
    2. 'to' → logprob: -2.578937530517578
    3. 'To' → logprob: -10.953937530517578
    4. 't' → logprob: -11.078937530517578
    5. 'pto' → logprob: -12.453937530517578
    6. 'o' → logprob: -12.953937530517578
    7. '(to' → logprob: -13.453937530517578
    8. 'p' → logprob: -13.453937530517578
    9. 'toc' → logprob: -14.203937530517578
    10. '[to' → logprob: -14.328937530517578

Token 727: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.4746168851852417
    2. '(n' → logprob: -0.9746168851852417
    3. '(max' → logprob: -8.724617004394531
    4. '(end' → logprob: -8.974617004394531
    5. '(num' → logprob: -9.349617004394531
    6. '(' → logprob: -9.724617004394531
    7. '(number' → logprob: -10.599617004394531
    8. 'n' → logprob: -10.724617004394531
    9. 'limit' → logprob: -10.849617004394531
    10. '(up' → logprob: -11.599617004394531

Token 728: ':' (ID: 25)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.0193971898406744
    2. '(n' → logprob: -4.394397258758545
    3. ')' → logprob: -5.894397258758545
    4. '(' → logprob: -6.519397258758545
    5. '):' → logprob: -6.769397258758545
    6. ')(' → logprob: -7.269397258758545
    7. '(l' → logprob: -8.019396781921387
    8. '```' → logprob: -9.019396781921387
    9. '](' → logprob: -9.144396781921387
    10. ':' → logprob: -9.394396781921387

Token 729: ' int' (ID: 677)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.23144888877868652
    2. 'int' → logprob: -1.7314488887786865
    3. 'def' → logprob: -4.231449127197266
    4. ' limit' → logprob: -5.106449127197266
    5. 'lambda' → logprob: -5.356449127197266
    6. ')' → logprob: -6.606449127197266
    7. '(limit' → logprob: -6.981449127197266
    8. '
' → logprob: -8.106449127197266
    9. '7' → logprob: -8.106449127197266
    10. ' int' → logprob: -8.231449127197266

Token 730: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014656837447546422
    2. '):' → logprob: -9.000146865844727
    3. '):
' → logprob: -11.250146865844727
    4. '")' → logprob: -12.625146865844727
    5. ')->' → logprob: -13.000146865844727
    6. '):
' → logprob: -13.000146865844727
    7. '   ' → logprob: -13.625146865844727
    8. ':' → logprob: -14.625146865844727
    9. 'def' → logprob: -15.500146865844727
    10. '->' → logprob: -15.500146865844727

Token 731: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31579625606536865
    2. '->' → logprob: -1.9407962560653687
    3. 'def' → logprob: -2.315796375274658
    4. ':
' → logprob: -4.815796375274658
    5. '   ' → logprob: -5.065796375274658
    6. ')' → logprob: -5.190796375274658
    7. ' ->' → logprob: -5.690796375274658
    8. ':def' → logprob: -6.440796375274658
    9. '```' → logprob: -6.565796375274658
    10. '()' → logprob: -7.315796375274658

Token 732: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.02399377152323723
    2. 'range' → logprob: -4.773993968963623
    3. 'Set' → logprob: -4.898993968963623
    4. 'set' → logprob: -5.648993968963623
    5. 'list' → logprob: -6.148993968963623
    6. 'def' → logprob: -7.148993968963623
    7. '[int' → logprob: -8.148993492126465
    8. 'int' → logprob: -8.148993492126465
    9. '_list' → logprob: -8.273993492126465
    10. '_set' → logprob: -9.148993492126465

Token 733: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0007736549014225602
    2. 'int' → logprob: -7.6257734298706055
    3. '[' → logprob: -8.625773429870605
    4. '[
' → logprob: -10.500773429870605
    5. '(int' → logprob: -10.875773429870605
    6. ':' → logprob: -11.250773429870605
    7. '<int' → logprob: -11.500773429870605
    8. '=int' → logprob: -11.875773429870605
    9. '=' → logprob: -12.375773429870605
    10. ' =' → logprob: -12.375773429870605

Token 734: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5527456998825073
    2. ':
' → logprob: -1.5527456998825073
    3. ']:' → logprob: -2.177745819091797
    4. '):
' → logprob: -3.052745819091797
    5. ':' → logprob: -3.177745819091797
    6. ']' → logprob: -5.302745819091797
    7. '):' → logprob: -5.927745819091797
    8. ']:
' → logprob: -6.927745819091797
    9. '():
' → logprob: -7.302745819091797
    10. '   ' → logprob: -7.552745819091797

Token 735: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015342625556513667
    2. 'result' → logprob: -6.876534461975098
    3. ' result' → logprob: -8.126534461975098
    4. '```' → logprob: -8.751534461975098
    5. 'numbers' → logprob: -11.376534461975098
    6. 'results' → logprob: -11.501534461975098
    7. '[' → logprob: -12.001534461975098
    8. 'nums' → logprob: -12.501534461975098
    9. ' numbers' → logprob: -12.626534461975098
    10. ' results' → logprob: -12.626534461975098

Token 736: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0232832171022892
    2. 'return' → logprob: -4.523283004760742
    3. 'results' → logprob: -4.773283004760742
    4. '   ' → logprob: -5.773283004760742
    5. 'ms' → logprob: -8.148283004760742
    6. 'numbers' → logprob: -8.898283004760742
    7. 'res' → logprob: -9.523283004760742
    8. ' result' → logprob: -9.773283004760742
    9. 'nums' → logprob: -10.648283004760742
    10. '```' → logprob: -11.273283004760742

Token 737: ' Generate' (ID: 33886)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25556492805480957
    2. 'return' → logprob: -1.5055649280548096
    3. 'results' → logprob: -6.7555646896362305
    4. 'ms' → logprob: -6.7555646896362305
    5. '   ' → logprob: -7.3805646896362305
    6. 'numbers' → logprob: -8.00556468963623
    7. 'res' → logprob: -8.25556468963623
    8. 'nums' → logprob: -9.63056468963623
    9. 'values' → logprob: -11.63056468963623
    10. ' return' → logprob: -12.88056468963623

Token 738: ' all' (ID: 722)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.7110553979873657
    2. 'result' → logprob: -1.7110553979873657
    3. '[' → logprob: -2.086055278778076
    4. 'ms' → logprob: -2.711055278778076
    5. '[i' → logprob: -2.961055278778076
    6. 'nums' → logprob: -3.461055278778076
    7. 'numbers' → logprob: -4.586055278778076
    8. 'res' → logprob: -4.711055278778076
    9. '[result' → logprob: -4.836055278778076
    10. '[(' → logprob: -4.961055278778076

Token 739: ' integers' (ID: 54912)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3596898913383484
    2. 'ms' → logprob: -1.8596899509429932
    3. 'res' → logprob: -2.859689950942993
    4. 'numbers' → logprob: -2.859689950942993
    5. 'results' → logprob: -3.859689950942993
    6. 'nums' → logprob: -4.609689712524414
    7. 'values' → logprob: -8.234689712524414
    8. '   ' → logprob: -8.734689712524414
    9. 'm' → logprob: -8.734689712524414
    10. '[m' → logprob: -9.484689712524414

Token 740: ' <=' (ID: 5017)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.03149799257516861
    2. 'in' → logprob: -4.281497955322266
    3. '   ' → logprob: -5.031497955322266
    4. '[' → logprob: -6.031497955322266
    5. 'from' → logprob: -6.406497955322266
    6. 'result' → logprob: -6.406497955322266
    7. 'x' → logprob: -7.156497955322266
    8. 'i' → logprob: -7.281497955322266
    9. '[i' → logprob: -7.281497955322266
    10. '1' → logprob: -7.281497955322266

Token 741: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.935296834039036e-06
    2. ' limit' → logprob: -12.75000286102295
    3. '(limit' → logprob: -19.875003814697266
    4. '   ' → logprob: -20.500003814697266
    5. 'lim' → logprob: -21.250003814697266
    6. '
' → logprob: -21.750003814697266
    7. ' ' → logprob: -22.875003814697266
    8. '_limit' → logprob: -23.375003814697266
    9. '.limit' → logprob: -23.500003814697266
    10. '```' → logprob: -23.625003814697266

Token 742: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0021978616714478
    2. 'that' → logprob: -1.7521978616714478
    3. '[' → logprob: -1.8771978616714478
    4. 'with' → logprob: -2.127197742462158
    5. ' that' → logprob: -2.377197742462158
    6. 'result' → logprob: -3.252197742462158
    7. ' with' → logprob: -3.752197742462158
    8. '
' → logprob: -5.127197742462158
    9. '```' → logprob: -5.252197742462158
    10. ',' → logprob: -5.627197742462158

Token 743: ' are' (ID: 553)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6965497732162476
    2. ' %' → logprob: -2.071549892425537
    3. ' are' → logprob: -2.571549892425537
    4. 'mod' → logprob: -2.946549892425537
    5. 'result' → logprob: -2.946549892425537
    6. 'are' → logprob: -3.196549892425537
    7. '   ' → logprob: -3.321549892425537
    8. 'value' → logprob: -3.821549892425537
    9. 'x' → logprob: -4.071549892425537
    10. 'n' → logprob: -4.196549892425537

Token 744: ' Monday' (ID: 10715)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3163897395133972
    2. '>' → logprob: -1.691389799118042
    3. 'n' → logprob: -4.066389560699463
    4. 'x' → logprob: -4.066389560699463
    5. 'greater' → logprob: -4.441389560699463
    6. 'i' → logprob: -4.816389560699463
    7. 'Monday' → logprob: -5.191389560699463
    8. '```' → logprob: -5.566389560699463
    9. 'lambda' → logprob: -5.691389560699463
    10. 'either' → logprob: -6.066389560699463

Token 745: '-S' (ID: 6968)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1574811190366745
    2. 'Saturday' → logprob: -2.7824811935424805
    3. 'and' → logprob: -3.5324811935424805
    4. 'or' → logprob: -4.0324811935424805
    5. '-s' → logprob: -4.5324811935424805
    6. '-S' → logprob: -5.2824811935424805
    7. '_S' → logprob: -5.4074811935424805
    8. '-' → logprob: -5.4074811935424805
    9. ' or' → logprob: -5.9074811935424805
    10. '   ' → logprob: -6.0324811935424805

Token 746: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -1.5928495486150496e-05
    2. 'Saturday' → logprob: -11.125016212463379
    3. '```' → logprob: -15.125016212463379
    4. 'unday' → logprob: -15.375016212463379
    5. 'at' → logprob: -15.500016212463379
    6. 'atur' → logprob: -15.875016212463379
    7. 's' → logprob: -16.125015258789062
    8. '#' → logprob: -17.250015258789062
    9. ' saturday' → logprob: -17.625015258789062
    10. 'atellite' → logprob: -17.625015258789062

Token 747: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.16006112098693848
    2. '_numbers' → logprob: -2.1600611209869385
    3. ' numbers' → logprob: -3.9100611209869385
    4. 'number' → logprob: -5.535060882568359
    5. '_number' → logprob: -5.910060882568359
    6. '```' → logprob: -6.035060882568359
    7. '[]' → logprob: -6.785060882568359
    8. '   ' → logprob: -8.03506088256836
    9. '[i' → logprob: -8.16006088256836
    10. 'def' → logprob: -8.28506088256836

Token 748: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004287573043256998
    2. 'result' → logprob: -5.6292877197265625
    3. '[' → logprob: -8.254287719726562
    4. '```' → logprob: -8.879287719726562
    5. 'return' → logprob: -9.504287719726562
    6. ' result' → logprob: -9.629287719726562
    7. '
' → logprob: -9.879287719726562
    8. '[
' → logprob: -10.379287719726562
    9. 'def' → logprob: -10.879287719726562
    10. '[]' → logprob: -11.254287719726562

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010652327910065651
    2. 'result' → logprob: -9.500106811523438
    3. ' result' → logprob: -11.625106811523438
    4. 'def' → logprob: -11.750106811523438
    5. '```' → logprob: -12.000106811523438
    6. '[' → logprob: -13.375106811523438
    7. ',' → logprob: -13.875106811523438
    8. 'results' → logprob: -14.000106811523438
    9. 'ms' → logprob: -14.500106811523438
    10. 'numbers' → logprob: -14.625106811523438

Token 750: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31410452723503113
    2. 'return' → logprob: -1.5641045570373535
    3. 'result' (adapté à ' result') → logprob: -2.8141045570373535
    4. 'results' → logprob: -8.939104080200195
    5. 'numbers' → logprob: -9.564104080200195
    6. '```' → logprob: -9.814104080200195
    7. 'ms' → logprob: -10.564104080200195
    8. ' return' → logprob: -10.814104080200195
    9. 'nums' → logprob: -11.314104080200195
    10. 'res' → logprob: -12.314104080200195

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693534791469574
    2. ' =' → logprob: -0.693534791469574
    3. ':' → logprob: -8.318534851074219
    4. '=[]' → logprob: -8.943534851074219
    5. '=[]
' → logprob: -11.443534851074219
    6. '   ' → logprob: -13.568534851074219
    7. '[:]' → logprob: -14.568534851074219
    8. '=[' → logprob: -15.943534851074219
    9. '=[]
' → logprob: -16.31853485107422
    10. ' ' → logprob: -16.56853485107422

Token 752: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12707017362117767
    2. '[]
' → logprob: -2.127070188522339
    3. '[' → logprob: -8.877070426940918
    4. '[]

' → logprob: -13.127070426940918
    5. '[
' → logprob: -15.002070426940918
    6. ' []' → logprob: -16.5020694732666
    7. '[]"' → logprob: -17.5020694732666
    8. ' []
' → logprob: -18.2520694732666
    9. '[start' → logprob: -18.3770694732666
    10. '[int' → logprob: -18.6270694732666

Token 753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17133398354053497
    2. ' for' → logprob: -2.1713340282440186
    3. 'for' → logprob: -3.1713340282440186
    4. '```' → logprob: -6.6713337898254395
    5. '
' → logprob: -9.046334266662598
    6. 'i' → logprob: -10.796334266662598
    7. 'current' → logprob: -10.921334266662598
    8. '  ' → logprob: -11.421334266662598
    9. '[' → logprob: -11.546334266662598
    10. '	for' → logprob: -12.046334266662598

Token 754: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008234490524046123
    2. '   ' → logprob: -7.250823497772217
    3. ' for' → logprob: -9.250823020935059
    4. 'i' → logprob: -11.500823020935059
    5. 'current' → logprob: -12.875823020935059
    6. 'start' → logprob: -13.375823020935059
    7. '
' → logprob: -13.375823020935059
    8. '```' → logprob: -13.625823020935059
    9. '	for' → logprob: -15.500823020935059
    10. 'value' → logprob: -16.000823974609375

Token 755: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36816638708114624
    2. 'num' → logprob: -1.618166446685791
    3. 'i' → logprob: -2.618166446685791
    4. 'value' → logprob: -3.368166446685791
    5. 'val' → logprob: -6.618166446685791
    6. 'n' → logprob: -7.118166446685791
    7. 'v' → logprob: -8.743165969848633
    8. ' num' → logprob: -11.243165969848633
    9. 'number' → logprob: -11.368165969848633
    10. 'k' → logprob: -12.243165969848633

Token 756: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08902889490127563
    2. 'in' → logprob: -2.464028835296631
    3. '1' → logprob: -9.589029312133789
    4. ' ' → logprob: -11.964029312133789
    5. '   ' → logprob: -12.589029312133789
    6. '0' → logprob: -12.839029312133789
    7. '2' → logprob: -13.589029312133789
    8. 'k' → logprob: -13.589029312133789
    9. 'import' → logprob: -13.589029312133789
    10. '	in' → logprob: -13.964029312133789

Token 757: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015979631280060858
    2. ' range' → logprob: -8.750160217285156
    3. '1' → logprob: -14.250160217285156
    4. '(range' → logprob: -14.250160217285156
    5. '[' → logprob: -16.875160217285156
    6. '	range' → logprob: -17.125160217285156
    7. 'Monday' → logprob: -17.625160217285156
    8. 'in' → logprob: -18.625160217285156
    9. '2' → logprob: -19.000160217285156
    10. '   ' → logprob: -19.125160217285156

Token 758: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1408107727766037
    2. '(' → logprob: -2.51581072807312
    3. '2' → logprob: -3.01581072807312
    4. '(limit' → logprob: -6.890810966491699
    5. 'limit' → logprob: -7.765810966491699
    6. '0' → logprob: -9.8908109664917
    7. '((' → logprob: -10.1408109664917
    8. ' ' → logprob: -12.1408109664917
    9. '   ' → logprob: -13.7658109664917
    10. '7' → logprob: -14.0158109664917

Token 759: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2525509297847748
    2. '2' → logprob: -1.5025509595870972
    3. '0' → logprob: -7.877551078796387
    4. '(' → logprob: -8.627551078796387
    5. 'limit' → logprob: -10.002551078796387
    6. '((' → logprob: -11.252551078796387
    7. '(limit' → logprob: -13.252551078796387
    8. '3' → logprob: -14.002551078796387
    9. '7' → logprob: -14.877551078796387
    10. ' ' → logprob: -15.127551078796387

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.575563020305708e-05
    2. '*' → logprob: -10.375065803527832
    3. ' ,' → logprob: -10.375065803527832
    4. ' *' → logprob: -13.750065803527832
    5. '*,' → logprob: -14.625065803527832
    6. '0' → logprob: -15.000065803527832
    7. '7' → logprob: -15.500065803527832
    8. ',len' → logprob: -15.500065803527832
    9. '2' → logprob: -15.750065803527832
    10. '1' → logprob: -15.750065803527832

Token 761: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0206152256578207
    2. '(limit' → logprob: -3.895615339279175
    3. '(' → logprob: -10.020615577697754
    4. ' limit' → logprob: -11.520615577697754
    5. ' (' → logprob: -11.520615577697754
    6. '((' → logprob: -11.770615577697754
    7. 'lim' → logprob: -14.020615577697754
    8. '_limit' → logprob: -16.020614624023438
    9. '.limit' → logprob: -16.395614624023438
    10. '
' → logprob: -16.395614624023438

Token 762: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1306881308555603
    2. ' +' → logprob: -2.130688190460205
    3. '):
' → logprob: -5.630688190460205
    4. '*' → logprob: -9.255687713623047
    5. '):' → logprob: -10.255687713623047
    6. '   ' → logprob: -10.630687713623047
    7. ' *' → logprob: -11.630687713623047
    8. ' ' → logprob: -14.130687713623047
    9. '+
' → logprob: -15.380687713623047
    10. '  ' → logprob: -15.630687713623047

Token 763: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.875
    3. '   ' → logprob: -17.0
    4. '```' → logprob: -17.0
    5. ' ' → logprob: -17.125
    6. '6' → logprob: -17.375
    7. '
' → logprob: -18.875
    8. '``' → logprob: -19.75
    9. '  ' → logprob: -20.0
    10. '2' → logprob: -20.3125

Token 764: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.107425062713446e-06
    2. '1' → logprob: -12.125006675720215
    3. '6' → logprob: -13.500006675720215
    4. '2' → logprob: -17.00000762939453
    5. '```' → logprob: -17.12500762939453
    6. '
' → logprob: -17.25000762939453
    7. ' ' → logprob: -17.62500762939453
    8. 'Monday' → logprob: -17.87500762939453
    9. 'int' → logprob: -18.50000762939453
    10. 'k' → logprob: -18.62500762939453

Token 765: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011051355861127377
    2. ' +' → logprob: -4.511051177978516
    3. '*' → logprob: -13.136051177978516
    4. '   ' → logprob: -13.636051177978516
    5. '       ' → logprob: -16.261051177978516
    6. '+
' → logprob: -16.386051177978516
    7. '):' → logprob: -16.886051177978516
    8. '()+' → logprob: -17.136051177978516
    9. ' ' → logprob: -18.011051177978516
    10. '＋' → logprob: -18.011051177978516

Token 766: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14273498952388763
    2. '2' → logprob: -2.017735004425049
    3. ' ' → logprob: -9.76773452758789
    4. '3' → logprob: -13.64273452758789
    5. '   ' → logprob: -15.20523452758789
    6. '(' → logprob: -15.26773452758789
    7. '```' → logprob: -15.26773452758789
    8. '=' → logprob: -16.51773452758789
    9. '+' → logprob: -16.58023452758789
    10. ')' → logprob: -16.70523452758789

Token 767: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3869039714336395
    2. '1' → logprob: -1.136904001235962
    3. ' ' → logprob: -10.511903762817383
    4. '3' → logprob: -13.199403762817383
    5. '(' → logprob: -14.136903762817383
    6. '   ' → logprob: -14.261903762817383
    7. '```' → logprob: -14.824403762817383
    8. '=' → logprob: -15.011903762817383
    9. '
' → logprob: -15.824403762817383
    10. '

' → logprob: -16.199403762817383

Token 768: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014446478337049484
    2. '):' → logprob: -4.264446258544922
    3. '   ' → logprob: -9.014446258544922
    4. '):
' → logprob: -9.764446258544922
    5. '       ' → logprob: -10.264446258544922
    6. ':' → logprob: -10.514446258544922
    7. '*' → logprob: -10.639446258544922
    8. '7' → logprob: -11.764446258544922
    9. ':
' → logprob: -12.764446258544922
    10. '**' → logprob: -13.514446258544922

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017210885882377625
    2. '```' → logprob: -4.642210960388184
    3. '   ' → logprob: -5.267210960388184
    4. ' if' → logprob: -7.017210960388184
    5. 'if' → logprob: -7.767210960388184
    6. '``' → logprob: -9.142210960388184
    7. ' ' → logprob: -9.267210960388184
    8. ' for' → logprob: -9.392210960388184
    9. '	   ' → logprob: -9.517210960388184
    10. 'n' → logprob: -9.642210960388184

Token 770: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6353409290313721
    2. 'm' → logprob: -0.8853409290313721
    3. 'mon' → logprob: -4.135340690612793
    4. 'val' → logprob: -4.135340690612793
    5. 'ms' → logprob: -4.635340690612793
    6. 'result' → logprob: -5.510340690612793
    7. '       ' → logprob: -6.010340690612793
    8. ' monday' → logprob: -6.260340690612793
    9. 'candidate' → logprob: -6.510340690612793
    10. 'first' → logprob: -6.885340690612793

Token 771: ' rem' (ID: 1662)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.7045974731445312
    2. 'mod' → logprob: -1.0795974731445312
    3. 'r' → logprob: -2.3295974731445312
    4. 'm' → logprob: -3.0795974731445312
    5. 'delta' → logprob: -5.204597473144531
    6. 'x' → logprob: -5.329597473144531
    7. 're' → logprob: -5.579597473144531
    8. 'res' → logprob: -6.204597473144531
    9. 'd' → logprob: -6.454597473144531
    10. 'rem' → logprob: -6.704597473144531

Token 772: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16024768352508545
    2. 'in' → logprob: -1.9102476835250854
    3. ' ' → logprob: -10.785247802734375
    4. ',' → logprob: -13.910247802734375
    5. '	in' → logprob: -14.410247802734375
    6. '  ' → logprob: -15.285247802734375
    7. 't' → logprob: -15.785247802734375
    8. ' ' → logprob: -15.785247802734375
    9. 's' → logprob: -16.160247802734375
    10. 'token' → logprob: -16.660247802734375

Token 773: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.005316412076354027
    2. '[' → logprob: -5.505316257476807
    3. '{' → logprob: -6.755316257476807
    4. ' Monday' → logprob: -10.130316734313965
    5. '(' → logprob: -10.880316734313965
    6. '(M' → logprob: -11.630316734313965
    7. 'sorted' → logprob: -12.755316734313965
    8. 'Saturday' → logprob: -15.005316734313965
    9. 'Sunday' → logprob: -15.005316734313965
    10. '1' → logprob: -15.380316734313965

Token 774: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.0023706546053290367
    2. '_S' → logprob: -6.377370834350586
    3. ' Saturday' → logprob: -7.627370834350586
    4. '_VALUES' → logprob: -9.002370834350586
    5. 'VALUES' → logprob: -11.002370834350586
    6. 'SAT' → logprob: -11.377370834350586
    7. '   ' → logprob: -12.127370834350586
    8. 'Sunday' → logprob: -12.377370834350586
    9. '{' → logprob: -12.502370834350586
    10. 'Monday' → logprob: -12.627370834350586

Token 775: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.43789204955101013
    2. 'MOD' → logprob: -1.1878920793533325
    3. '{' → logprob: -3.312891960144043
    4. '[' → logprob: -5.062891960144043
    5. '_MOD' → logprob: -5.937891960144043
    6. 'Saturday' → logprob: -6.812891960144043
    7. '`' → logprob: -7.062891960144043
    8. 'NUMBER' → logprob: -7.687891960144043
    9. '_NUMBER' → logprob: -8.187891960144043
    10. '.MOD' → logprob: -8.437891960144043

Token 776: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0003819332632701844
    2. 'MOD' → logprob: -8.125381469726562
    3. '.' → logprob: -9.500381469726562
    4. '.MODE' → logprob: -12.875381469726562
    5. '_MOD' → logprob: -13.125381469726562
    6. '.M' → logprob: -13.375381469726562
    7. '._' → logprob: -14.000381469726562
    8. ' .' → logprob: -14.125381469726562
    9. '   ' → logprob: -14.250381469726562
    10. '{}.' → logprob: -14.625381469726562

Token 777: '_VALUES' (ID: 131844)
  Prédit: '_VALUES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_VALUES' → logprob: -0.002477081725373864
    2. 'VALUES' → logprob: -6.002477169036865
    3. '_values' → logprob: -14.127476692199707
    4. '{' → logprob: -14.627476692199707
    5. 'values' → logprob: -16.002477645874023
    6. 'Values' → logprob: -17.127477645874023
    7. '_BASE' → logprob: -17.252477645874023
    8. '	values' → logprob: -17.752477645874023
    9. ' VALUES' → logprob: -18.252477645874023
    10. '```' → logprob: -18.627477645874023

Token 778: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08925056457519531
    2. ':
' → logprob: -2.4642505645751953
    3. '       ' → logprob: -9.214250564575195
    4. '{' → logprob: -9.339250564575195
    5. '<|end|>' → logprob: -10.089250564575195
    6. '):
' → logprob: -10.464250564575195
    7. '):' → logprob: -10.839250564575195
    8. '           ' → logprob: -11.839250564575195
    9. ':
' → logprob: -12.089250564575195
    10. '=' → logprob: -12.714250564575195

Token 779: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09980012476444244
    2. '       ' → logprob: -2.8498001098632812
    3. ':' → logprob: -3.3498001098632812
    4. '```' → logprob: -7.724800109863281
    5. '<|end|>' → logprob: -8.224800109863281
    6. ':
' → logprob: -8.349800109863281
    7. '        
' → logprob: -8.599800109863281
    8. ',' → logprob: -8.849800109863281
    9. '[' → logprob: -8.974800109863281
    10. '          ' → logprob: -9.349800109863281

Token 780: ' n' (ID: 297)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.8662357330322266
    2. 'num' → logprob: -1.1162357330322266
    3. 'val' → logprob: -1.8662357330322266
    4. '           ' → logprob: -3.1162357330322266
    5. 'n' (adapté à ' n') → logprob: -3.8662357330322266
    6. 'candidate' → logprob: -4.866235733032227
    7. 'number' → logprob: -5.241235733032227
    8. ' val' → logprob: -5.366235733032227
    9. ' value' → logprob: -5.366235733032227
    10. '               ' → logprob: -5.491235733032227

Token 781: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889287173748016
    2. ' =' → logprob: -2.578892946243286
    3. '           ' → logprob: -14.078892707824707
    4. '=
' → logprob: -14.078892707824707
    5. '=k' → logprob: -14.703892707824707
    6. '   ' → logprob: -15.828892707824707
    7. '            ' → logprob: -15.953892707824707
    8. '```' → logprob: -16.078893661499023
    9. '.=' → logprob: -16.328893661499023
    10. 's' → logprob: -16.453893661499023

Token 782: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001343446783721447
    2. 'k' → logprob: -7.001343250274658
    3. '(k' → logprob: -8.501343727111816
    4. ' ' → logprob: -8.626343727111816
    5. '(' → logprob: -10.126343727111816
    6. ' (' → logprob: -12.501343727111816
    7. ' k' → logprob: -12.876343727111816
    8. '   ' → logprob: -13.626343727111816
    9. '(n' → logprob: -14.001343727111816
    10. '           ' → logprob: -14.376343727111816

Token 783: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00020067949662916362
    2. 'k' → logprob: -9.250200271606445
    3. '(' → logprob: -9.750200271606445
    4. '(k' → logprob: -10.000200271606445
    5. '(n' → logprob: -14.500200271606445
    6. ' ' → logprob: -15.250200271606445
    7. 'n' → logprob: -16.250200271606445
    8. ' (' → logprob: -18.125200271606445
    9. '((' → logprob: -19.500200271606445
    10. '6' → logprob: -20.375200271606445

Token 784: ' *' (ID: 425)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.025063013657927513
    2. '*' → logprob: -4.2750630378723145
    3. ' *' → logprob: -4.5250630378723145
    4. '*(' → logprob: -12.650062561035156
    5. 'k' → logprob: -12.900062561035156
    6. '*n' → logprob: -15.775062561035156
    7. '*c' → logprob: -16.150062561035156
    8. '*u' → logprob: -16.400062561035156
    9. '*t' → logprob: -17.025062561035156
    10. '*g' → logprob: -17.400062561035156

Token 785: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014168208464980125
    2. '(k' → logprob: -4.2641682624816895
    3. ' (' → logprob: -13.014167785644531
    4. ' k' → logprob: -13.264167785644531
    5. '(' → logprob: -14.389167785644531
    6. '   ' → logprob: -17.01416778564453
    7. '{k' → logprob: -17.13916778564453
    8. '_k' → logprob: -17.38916778564453
    9. '	k' → logprob: -17.88916778564453
    10. ',k' → logprob: -18.51416778564453

Token 786: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12694931030273438
    2. ' +' → logprob: -2.1269493103027344
    3. '-' → logprob: -10.876949310302734
    4. ' -' → logprob: -13.251949310302734
    5. ' ' → logprob: -15.751949310302734
    6. '<|end|>' → logprob: -16.001949310302734
    7. '+r' → logprob: -16.126949310302734
    8. '+x' → logprob: -16.626949310302734
    9. ' plus' → logprob: -16.626949310302734
    10. '+s' → logprob: -17.501949310302734

Token 787: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.003269568784162402
    2. '(rem' → logprob: -5.753269672393799
    3. ' rem' → logprob: -10.00326919555664
    4. '(' → logprob: -10.12826919555664
    5. 'list' → logprob: -12.62826919555664
    6. ' (' → logprob: -12.87826919555664
    7. '{' → logprob: -15.50326919555664
    8. 'reman' → logprob: -15.62826919555664
    9. '(list' → logprob: -15.75326919555664
    10. 'rm' → logprob: -16.37826919555664

Token 788: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09658555686473846
    2. '<|end|>' → logprob: -2.846585512161255
    3. '
' → logprob: -3.846585512161255
    4. '       ' → logprob: -5.471585750579834
    5. '               ' → logprob: -5.971585750579834
    6. '            
' → logprob: -6.346585750579834
    7. '<|end|>' → logprob: -6.846585750579834
    8. '  
' → logprob: -7.471585750579834
    9. ' ' → logprob: -7.721585750579834
    10. ' 
' → logprob: -7.971585750579834

Token 789: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009205120149999857
    2. ' if' → logprob: -7.625920295715332
    3. '```' → logprob: -8.625920295715332
    4. '<|end|>' → logprob: -9.000920295715332
    5. '       ' → logprob: -9.500920295715332
    6. 'if' → logprob: -10.750920295715332
    7. '               ' → logprob: -11.500920295715332
    8. '[' → logprob: -11.875920295715332
    9. '	       ' → logprob: -12.625920295715332
    10. '		' → logprob: -13.000920295715332

Token 790: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7253241539001465
    2. 'if' (adapté à ' if') → logprob: -0.9753241539001465
    3. '           ' → logprob: -1.9753241539001465
    4. '```' → logprob: -10.725324630737305
    5. '       ' → logprob: -11.350324630737305
    6. '<|end|>' → logprob: -12.975324630737305
    7. '   ' → logprob: -13.225324630737305
    8. ' ' → logprob: -13.225324630737305
    9. '	if' → logprob: -13.350324630737305
    10. '               ' → logprob: -13.975324630737305

Token 791: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001502717612311244
    2. ' n' → logprob: -6.501502513885498
    3. '	n' → logprob: -15.626502990722656
    4. '           ' → logprob: -16.001502990722656
    5. '               ' → logprob: -16.001502990722656
    6. '                   ' → logprob: -17.376502990722656
    7. '   ' → logprob: -18.126502990722656
    8. ')n' → logprob: -18.501502990722656
    9. '            ' → logprob: -18.876502990722656
    10. '```' → logprob: -19.001502990722656

Token 792: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2519964575767517
    2. '<=' → logprob: -1.5019965171813965
    3. '<|end|>' → logprob: -10.126996040344238
    4. ')<=' → logprob: -11.626996040344238
    5. '>' → logprob: -12.251996040344238
    6. '```' → logprob: -12.501996040344238
    7. ' >' → logprob: -13.126996040344238
    8. '<' → logprob: -13.251996040344238
    9. '[' → logprob: -13.626996040344238
    10. ']<=' → logprob: -13.876996040344238

Token 793: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.7610454708337784e-05
    2. ' limit' → logprob: -10.500027656555176
    3. '0' → logprob: -18.00002670288086
    4. '
' → logprob: -19.00002670288086
    5. '(limit' → logprob: -19.37502670288086
    6. '   ' → logprob: -21.12502670288086
    7. 'lim' → logprob: -21.12502670288086
    8. '1' → logprob: -22.62502670288086
    9. '.limit' → logprob: -22.62502670288086
    10. '=' → logprob: -23.25002670288086

Token 794: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08921416103839874
    2. ':' → logprob: -2.9642140865325928
    3. '               ' → logprob: -4.089214324951172
    4. ' and' → logprob: -4.214214324951172
    5. '           ' → logprob: -6.339214324951172
    6. '):
' → logprob: -8.464214324951172
    7. 'and' → logprob: -8.839214324951172
    8. ',' → logprob: -10.089214324951172
    9. ':
' → logprob: -11.339214324951172
    10. ':

' → logprob: -12.214214324951172

Token 795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027182576013728976
    2. 'result' → logprob: -8.375271797180176
    3. '```' → logprob: -11.250271797180176
    4. '<|end|>' → logprob: -11.875271797180176
    5. '           ' → logprob: -12.000271797180176
    6. ' result' → logprob: -12.125271797180176
    7. ',result' → logprob: -12.500271797180176
    8. '[result' → logprob: -13.000271797180176
    9. '(result' → logprob: -13.750271797180176
    10. '                
' → logprob: -14.375271797180176

Token 796: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.37941059470176697
    2. '               ' → logprob: -1.6294106245040894
    3. ' result' → logprob: -2.1294105052948
    4. '                   ' → logprob: -7.254410743713379
    5. '           ' → logprob: -10.129410743713379
    6. ',result' → logprob: -11.254410743713379
    7. '       ' → logprob: -11.754410743713379
    8. '   ' → logprob: -12.504410743713379
    9. '	result' → logprob: -12.754410743713379
    10. '```' → logprob: -13.254410743713379

Token 797: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007744893664494157
    2. '.' → logprob: -7.250774383544922
    3. 'append' → logprob: -10.250774383544922
    4. ' .' → logprob: -12.000774383544922
    5. '               ' → logprob: -12.125774383544922
    6. '.Append' → logprob: -12.625774383544922
    7. '.add' → logprob: -12.750774383544922
    8. '                   ' → logprob: -13.250774383544922
    9. ').' → logprob: -13.500774383544922
    10. '           ' → logprob: -13.625774383544922

Token 798: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011722482740879059
    2. 'n' → logprob: -6.751172065734863
    3. '(' → logprob: -13.251172065734863
    4. '(
' → logprob: -16.12617301940918
    5. ' n' → logprob: -16.37617301940918
    6. ')n' → logprob: -19.12617301940918
    7. ' (' → logprob: -20.50117301940918
    8. '	n' → logprob: -20.62617301940918
    9. ',n' → logprob: -22.12617301940918
    10. ')' → logprob: -23.62617301940918

Token 799: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017231622710824013
    2. '<|end|>' → logprob: -4.142231464385986
    3. '           ' → logprob: -7.767231464385986
    4. '<|end|>' → logprob: -8.267231941223145
    5. ')return' → logprob: -8.892231941223145
    6. '       ' → logprob: -9.017231941223145
    7. '   ' → logprob: -9.392231941223145
    8. ')
' → logprob: -10.142231941223145
    9. '               ' → logprob: -10.517231941223145
    10. ',' → logprob: -11.017231941223145

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12109530717134476
    2. 'return' → logprob: -2.3710954189300537
    3. ' return' → logprob: -4.246095180511475
    4. '           ' → logprob: -5.371095180511475
    5. '
' → logprob: -7.496095180511475
    6. '	return' → logprob: -7.496095180511475
    7. '```' → logprob: -8.121095657348633
    8. '       ' → logprob: -8.871095657348633
    9. ':return' → logprob: -10.246095657348633
    10. '<|end|>' → logprob: -10.246095657348633

Token 801: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5927837491035461
    2. 'return' → logprob: -0.8427837491035461
    3. ' return' → logprob: -4.0927839279174805
    4. '```' → logprob: -13.21778392791748
    5. '	return' → logprob: -13.34278392791748
    6. ' ' → logprob: -13.34278392791748
    7. ':return' → logprob: -13.46778392791748
    8. '       ' → logprob: -13.46778392791748
    9. 'result' (adapté à ' result') → logprob: -13.84278392791748
    10. '
' → logprob: -14.59278392791748

Token 802: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.43009549379348755
    2. '<|end|>' → logprob: -1.0550954341888428
    3. 'return' → logprob: -8.055095672607422
    4. 'sort' → logprob: -8.305095672607422
    5. '.' → logprob: -8.430095672607422
    6. '.reverse' → logprob: -8.555095672607422
    7. '
' → logprob: -8.680095672607422
    8. '.append' → logprob: -9.680095672607422
    9. '[:]' → logprob: -10.930095672607422
    10. '<|end|>' → logprob: -10.930095672607422

Token 803: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.01208515465259552
    2. '[' → logprob: -4.5120849609375
    3. 'list' → logprob: -7.1370849609375
    4. '[list' → logprob: -8.6370849609375
    5. '[s' → logprob: -10.6370849609375
    6. ' sorted' → logprob: -10.8870849609375
    7. '(sorted' → logprob: -12.3870849609375
    8. '[result' → logprob: -12.6370849609375
    9. ' [' → logprob: -12.7620849609375
    10. '[n' → logprob: -12.8870849609375

Token 804: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.05538859963417053
    2. '(sorted' → logprob: -3.6803886890411377
    3. 'sorted' → logprob: -4.180388450622559
    4. '(filter' → logprob: -4.930388450622559
    5. 'set' → logprob: -5.305388450622559
    6. 'filter' → logprob: -7.680388450622559
    7. '[' → logprob: -8.305388450622559
    8. 'dict' → logprob: -8.680388450622559
    9. '(dict' → logprob: -9.305388450622559
    10. '(' → logprob: -9.555388450622559

Token 805: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -3.4881879400927573e-05
    2. 'result' → logprob: -10.375035285949707
    3. '(' → logprob: -13.000035285949707
    4. '(
' → logprob: -14.125035285949707
    5. '(results' → logprob: -15.375035285949707
    6. ',result' → logprob: -16.25003433227539
    7. '=result' → logprob: -16.62503433227539
    8. ' result' → logprob: -16.87503433227539
    9. ')' → logprob: -17.00003433227539
    10. ' (' → logprob: -17.12503433227539

Token 806: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007102862582542002
    2. '())' → logprob: -7.625710487365723
    3. ')
' → logprob: -8.625710487365723
    4. '))' → logprob: -10.750710487365723
    5. '(result' → logprob: -11.500710487365723
    6. '   ' → logprob: -12.000710487365723
    7. 'result' → logprob: -13.875710487365723
    8. '())
' → logprob: -14.000710487365723
    9. ' )' → logprob: -14.375710487365723
    10. '(' → logprob: -14.625710487365723

Token 807: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.372294698550832e-06
    2. 'result' → logprob: -11.750009536743164
    3. ' result' → logprob: -14.000009536743164
    4. 'return' → logprob: -15.375009536743164
    5. '       ' → logprob: -15.625009536743164
    6. '[result' → logprob: -16.750009536743164
    7. ' return' → logprob: -17.000009536743164
    8. ',result' → logprob: -18.000009536743164
    9. '```' → logprob: -18.000009536743164
    10. '<|end|>' → logprob: -18.125009536743164

Token 808: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13054826855659485
    2. 'result' (adapté à ' result') → logprob: -2.1305482387542725
    3. ' result' → logprob: -5.630548477172852
    4. 'return' → logprob: -10.630548477172852
    5. '	result' → logprob: -14.130548477172852
    6. ' return' → logprob: -14.255548477172852
    7. '       ' → logprob: -14.755548477172852
    8. '[result' → logprob: -15.255548477172852
    9. '  ' → logprob: -15.380548477172852
    10. '(result' → logprob: -15.630548477172852

Token 809: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0005558936391025782
    2. '.' → logprob: -7.500555992126465
    3. 'sort' → logprob: -13.250555992126465
    4. '<|end|>' → logprob: -14.750555992126465
    5. ' .' → logprob: -15.625555992126465
    6. '.Sort' → logprob: -15.750555992126465
    7. '   ' → logprob: -16.00055503845215
    8. ' sort' → logprob: -16.00055503845215
    9. '	sort' → logprob: -16.37555503845215
    10. '.reverse' → logprob: -17.50055503845215

Token 810: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00287715345621109
    2. '()' → logprob: -6.502877235412598
    3. 'return' → logprob: -6.752877235412598
    4. ' return' → logprob: -8.752877235412598
    5. ':return' → logprob: -11.127877235412598
    6. '(' → logprob: -11.752877235412598
    7. ',' → logprob: -11.877877235412598
    8. '(return' → logprob: -12.002877235412598
    9. '()
' → logprob: -12.502877235412598
    10. '	return' → logprob: -13.002877235412598

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014966767048463225
    2. 'return' → logprob: -8.875149726867676
    3. ' return' → logprob: -11.750149726867676
    4. '```' → logprob: -13.375149726867676
    5. '	return' → logprob: -15.000149726867676
    6. '<|end|>' → logprob: -16.50014877319336
    7. '       ' → logprob: -17.12514877319336
    8. ':return' → logprob: -17.37514877319336
    9. '    
' → logprob: -19.00014877319336
    10. '   ' → logprob: -19.12514877319336

Token 812: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06263703852891922
    2. 'return' (adapté à ' return') → logprob: -2.8126370906829834
    3. ' return' → logprob: -7.312636852264404
    4. '```' → logprob: -13.687637329101562
    5. '	return' → logprob: -14.437637329101562
    6. '       ' → logprob: -15.562637329101562
    7. ':return' → logprob: -16.562637329101562
    8. '{return' → logprob: -17.187637329101562
    9. '  ' → logprob: -17.312637329101562
    10. ' ' → logprob: -17.437637329101562

Token 813: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0031777136027812958
    2. ' result' → logprob: -5.753177642822266
    3. '[result' → logprob: -20.128177642822266
    4. '(result' → logprob: -21.503177642822266
    5. '	result' → logprob: -22.628177642822266
    6. 'results' → logprob: -23.878177642822266
    7. '=result' → logprob: -24.753177642822266
    8. '$result' → logprob: -24.753177642822266
    9. '[' → logprob: -25.128177642822266
    10. '   ' → logprob: -25.253177642822266

Token 814: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.218684583902359
    2. '<|end|>' → logprob: -1.7186845541000366
    3. '```' → logprob: -4.843684673309326
    4. 'class' → logprob: -4.843684673309326
    5. '#' → logprob: -7.593684673309326
    6. '<|end|>' → logprob: -7.593684673309326
    7. '[' → logprob: -9.968684196472168
    8. '
' → logprob: -10.093684196472168
    9. ' def' → logprob: -10.343684196472168
    10. '@' → logprob: -10.718684196472168

Token 816: ' Monday' (ID: 10715)
  Prédit: ' Monday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Monday' → logprob: -0.1331312507390976
    2. 'Monday' → logprob: -2.133131265640259
    3. ' Prime' → logprob: -5.88313102722168
    4. ' Tuesday' → logprob: -6.63313102722168
    5. 'Prime' → logprob: -7.63313102722168
    6. 'Tuesday' → logprob: -7.88313102722168
    7. ' List' → logprob: -8.63313102722168
    8. ' ' → logprob: -8.63313102722168
    9. ' Wednesday' → logprob: -9.00813102722168
    10. ' Saturday' → logprob: -9.63313102722168

Token 817: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -1.4259644558478612e-05
    2. 'Sunday' → logprob: -12.375014305114746
    3. ' Saturday' → logprob: -12.500014305114746
    4. 'Monday' → logprob: -12.750014305114746
    5. 'Wednesday' → logprob: -14.625014305114746
    6. 'Number' → logprob: -14.625014305114746
    7. '_S' → logprob: -14.750014305114746
    8. 'aturday' → logprob: -14.875014305114746
    9. 'Friday' → logprob: -14.875014305114746
    10. 'Tuesday' → logprob: -15.250014305114746

Token 818: 'Factor' (ID: 23681)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.055216237902641296
    2. 'Number' → logprob: -2.9302163124084473
    3. '_prime' → logprob: -8.680215835571289
    4. 'prime' → logprob: -9.180215835571289
    5. '```' → logprob: -11.305215835571289
    6. ' Prime' → logprob: -11.430215835571289
    7. 'Pr' → logprob: -11.930215835571289
    8. 'Composite' → logprob: -12.305215835571289
    9. ' prime' → logprob: -12.430215835571289
    10. 'number' → logprob: -12.680215835571289

Token 819: 'izer' (ID: 4492)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.0028784610331058502
    2. 'izer' → logprob: -5.877878665924072
    3. '```' → logprob: -10.502878189086914
    4. 'iz' → logprob: -11.877878189086914
    5. '   ' → logprob: -12.127878189086914
    6. 'Chain' → logprob: -12.377878189086914
    7. ' ' → logprob: -12.752878189086914
    8. 'class' → logprob: -12.877878189086914
    9. 's' → logprob: -13.002878189086914
    10. ':' → logprob: -13.002878189086914

Token 820: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004157702904194593
    2. ':
' → logprob: -5.504157543182373
    3. '<|end|>' → logprob: -10.254158020019531
    4. '():' → logprob: -11.754158020019531
    5. ':def' → logprob: -12.004158020019531
    6. '(M' → logprob: -12.129158020019531
    7. '(object' → logprob: -12.254158020019531
    8. '(' → logprob: -12.754158020019531
    9. ':

' → logprob: -12.754158020019531
    10. '):' → logprob: -12.879158020019531

Token 821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018954371334984899
    2. 'def' → logprob: -6.751895427703857
    3. '```' → logprob: -8.126895904541016
    4. '    
' → logprob: -8.501895904541016
    5. ' def' → logprob: -8.626895904541016
    6. ':' → logprob: -11.126895904541016
    7. '
' → logprob: -11.751895904541016
    8. '<|end|>' → logprob: -11.751895904541016
    9. ':def' → logprob: -13.001895904541016
    10. '	def' → logprob: -13.126895904541016

Token 822: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14092114567756653
    2. '   ' → logprob: -2.140921115875244
    3. '@' → logprob: -4.515921115875244
    4. ' def' → logprob: -5.890921115875244
    5. 'class' → logprob: -8.765921592712402
    6. '```' → logprob: -10.390921592712402
    7. ' @' → logprob: -12.015921592712402
    8. '	def' → logprob: -13.640921592712402
    9. 'classmethod' → logprob: -14.015921592712402
    10. 'staticmethod' → logprob: -14.515921592712402

Token 823: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.562078058719635
    2. '__' → logprob: -0.937078058719635
    3. ' def' → logprob: -3.9370779991149902
    4. 'def' → logprob: -4.18707799911499
    5. 'staticmethod' → logprob: -6.31207799911499
    6. 'init' → logprob: -7.43707799911499
    7. '```' → logprob: -7.68707799911499
    8. 'classmethod' → logprob: -8.437078475952148
    9. '___' → logprob: -9.437078475952148
    10. 'class' → logprob: -9.437078475952148

Token 824: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'def' → logprob: -14.625000953674316
    3. '```' → logprob: -15.250000953674316
    4. 'class' → logprob: -15.875000953674316
    5. 'int' → logprob: -16.500001907348633
    6. 'iter' → logprob: -17.000001907348633
    7. 'classmethod' → logprob: -17.250001907348633
    8. 'it' → logprob: -17.625001907348633
    9. 'staticmethod' → logprob: -17.750001907348633
    10. 'inite' → logprob: -17.750001907348633

Token 825: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07246404141187668
    2. '__(' → logprob: -2.6974639892578125
    3. '(' → logprob: -6.8224639892578125
    4. ' (' → logprob: -7.1974639892578125
    5. '   ' → logprob: -7.8224639892578125
    6. 'self' → logprob: -8.822463989257812
    7. '__(
' → logprob: -10.322463989257812
    8. '__' → logprob: -10.822463989257812
    9. '_(' → logprob: -11.072463989257812
    10. '       ' → logprob: -11.197463989257812

Token 826: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.209963900502771e-05
    2. ')' → logprob: -9.875092506408691
    3. 'value' → logprob: -10.875092506408691
    4. ' self' → logprob: -11.500092506408691
    5. '   ' → logprob: -12.250092506408691
    6. '       ' → logprob: -13.125092506408691
    7. '{' → logprob: -13.750092506408691
    8. '(self' → logprob: -13.875092506408691
    9. '
' → logprob: -14.125092506408691
    10. '	self' → logprob: -14.250092506408691

Token 827: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36741557717323303
    2. '(self' → logprob: -1.6174155473709106
    3. 'self' → logprob: -2.2424156665802
    4. '__(' → logprob: -6.492415428161621
    5. ' self' → logprob: -7.617415428161621
    6. ' (' → logprob: -8.117415428161621
    7. '(' → logprob: -8.867415428161621
    8. '   ' → logprob: -9.117415428161621
    9. ',self' → logprob: -9.117415428161621
    10. '       ' → logprob: -9.992415428161621

Token 828: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005442808847874403
    2. '       ' → logprob: -5.8804426193237305
    3. ' self' → logprob: -6.3804426193237305
    4. '   ' → logprob: -7.0054426193237305
    5. 'def' → logprob: -10.63044261932373
    6. 'value' → logprob: -12.88044261932373
    7. '	self' → logprob: -12.88044261932373
    8. '```' → logprob: -13.38044261932373
    9. '(self' → logprob: -14.38044261932373
    10. ' def' → logprob: -14.75544261932373

Token 829: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.475395143032074
    2. 'self' (adapté à ' self') → logprob: -0.975395143032074
    3. 'pass' → logprob: -6.725395202636719
    4. ' self' → logprob: -9.225395202636719
    5. '   ' → logprob: -11.475395202636719
    6. '(self' → logprob: -12.975395202636719
    7. ' pass' → logprob: -13.475395202636719
    8. '	self' → logprob: -13.475395202636719
    9. 'def' → logprob: -13.725395202636719
    10. 'class' → logprob: -14.475395202636719

Token 830: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.04104645177721977
    2. '_cache' → logprob: -4.541046619415283
    3. '_factor' → logprob: -4.916046619415283
    4. '   ' → logprob: -5.291046619415283
    5. '.cache' → logprob: -5.541046619415283
    6. '.pr' → logprob: -5.666046619415283
    7. '.factor' → logprob: -6.041046619415283
    8. 'def' → logprob: -6.666046619415283
    9. '_prime' → logprob: -7.166046619415283
    10. '_f' → logprob: -7.416046619415283

Token 831: 'ms' (ID: 1782)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.18347549438476562
    2. 'com' → logprob: -2.4334754943847656
    3. 'f' → logprob: -3.3084754943847656
    4. 'factor' → logprob: -3.3084754943847656
    5. 'prime' → logprob: -6.058475494384766
    6. 'ms' → logprob: -6.183475494384766
    7. 'known' → logprob: -7.058475494384766
    8. 'pr' → logprob: -7.183475494384766
    9. '_cache' → logprob: -8.433475494384766
    10. 'memo' → logprob: -8.808475494384766

Token 832: '_prime' (ID: 98616)
  Prédit: '_pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.10724620521068573
    2. 'pr' → logprob: -2.482246160507202
    3. '_prime' → logprob: -4.107246398925781
    4. 'prime' → logprob: -6.732246398925781
    5. '_cache' → logprob: -8.482246398925781
    6. '_f' → logprob: -8.732246398925781
    7. '_factor' → logprob: -10.232246398925781
    8. 'f' → logprob: -10.732246398925781
    9. 'p' → logprob: -11.232246398925781
    10. '_p' → logprob: -11.607246398925781

Token 833: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.4060901403427124
    2. 's' → logprob: -1.1560901403427124
    3. 'es' → logprob: -4.406090259552002
    4. '_set' → logprob: -5.281090259552002
    5. '_list' → logprob: -7.031090259552002
    6. 'cache' → logprob: -8.281089782714844
    7. '_f' → logprob: -8.281089782714844
    8. '_candidates' → logprob: -8.656089782714844
    9. '_map' → logprob: -9.406089782714844
    10. '_generator' → logprob: -10.656089782714844

Token 834: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03990301489830017
    2. ' =' → logprob: -3.289902925491333
    3. ':' → logprob: -6.289903163909912
    4. '={}' → logprob: -12.414902687072754
    5. '=[]' → logprob: -15.414902687072754
    6. '   ' → logprob: -15.414902687072754
    7. '={' → logprob: -15.914902687072754
    8. '=set' → logprob: -16.53990364074707
    9. '={}
' → logprob: -16.66490364074707
    10. '{' → logprob: -16.78990364074707

Token 835: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.17785684764385223
    2. 'Set' → logprob: -1.9278568029403687
    3. 'List' → logprob: -4.052856922149658
    4. 'set' → logprob: -9.8028564453125
    5. '{}' → logprob: -10.8028564453125
    6. ' Dict' → logprob: -11.0528564453125
    7. 'dict' → logprob: -12.4278564453125
    8. ' Set' → logprob: -12.8028564453125
    9. '{' → logprob: -13.0528564453125
    10. '[]' → logprob: -13.5528564453125

Token 836: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0004372254479676485
    2. 'int' → logprob: -7.750437259674072
    3. '<int' → logprob: -12.500436782836914
    4. '   ' → logprob: -13.500436782836914
    5. '       ' → logprob: -14.750436782836914
    6. '=int' → logprob: -14.875436782836914
    7. '[' → logprob: -15.750436782836914
    8. ' =' → logprob: -16.375436782836914
    9. ' int' → logprob: -16.375436782836914
    10. '(int' → logprob: -16.625436782836914

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ',int' → logprob: -10.750035285949707
    3. ',bool' → logprob: -11.375035285949707
    4. 'int' → logprob: -14.250035285949707
    5. ',List' → logprob: -14.250035285949707
    6. ' ,' → logprob: -14.750035285949707
    7. ',
' → logprob: -15.625035285949707
    8. '[int' → logprob: -16.00003433227539
    9. '   ' → logprob: -16.25003433227539
    10. ']' → logprob: -16.25003433227539

Token 838: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0012189284898340702
    2. 'Monday' → logprob: -7.001218795776367
    3. 'Optional' → logprob: -8.251218795776367
    4. 'List' → logprob: -11.501218795776367
    5. 'Set' → logprob: -11.626218795776367
    6. 'None' → logprob: -11.876218795776367
    7. 'True' → logprob: -12.001218795776367
    8. 'int' → logprob: -12.876218795776367
    9. ' bool' → logprob: -12.876218795776367
    10. 'Bool' → logprob: -13.251218795776367

Token 839: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19575826823711395
    2. ']' → logprob: -1.9457582235336304
    3. ' =' → logprob: -3.44575834274292
    4. ']=' → logprob: -5.94575834274292
    5. ')' → logprob: -8.820757865905762
    6. ']={' → logprob: -9.195757865905762
    7. '={}' → logprob: -9.820757865905762
    8. '{' → logprob: -10.695757865905762
    9. '}' → logprob: -11.195757865905762
    10. '={' → logprob: -11.320757865905762

Token 840: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052414643578231335
    2. ' =' → logprob: -5.255241394042969
    3. '<|end|>' → logprob: -13.130241394042969
    4. '={}' → logprob: -13.505241394042969
    5. '       ' → logprob: -14.005241394042969
    6. '   ' → logprob: -14.505241394042969
    7. ' ' → logprob: -14.630241394042969
    8. ')' → logprob: -14.755241394042969
    9. '=[]' → logprob: -14.755241394042969
    10. ']=' → logprob: -15.380241394042969

Token 841: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1472419600977446e-06
    2. '{}

' → logprob: -14.625000953674316
    3. '{})' → logprob: -15.500000953674316
    4. '{}
' → logprob: -15.500000953674316
    5. '   ' → logprob: -16.125001907348633
    6. ' {}' → logprob: -17.250001907348633
    7. '{' → logprob: -17.875001907348633
    8. '{},' → logprob: -18.000001907348633
    9. '{}_' → logprob: -18.375001907348633
    10. '={}' → logprob: -18.500001907348633

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017028623551595956
    2. 'def' → logprob: -9.125170707702637
    3. '
' → logprob: -9.875170707702637
    4. '    
' → logprob: -12.125170707702637
    5. ' def' → logprob: -12.875170707702637
    6. '```' → logprob: -13.375170707702637
    7. '        
' → logprob: -16.12516975402832
    8. '`' → logprob: -16.87516975402832
    9. '       ' → logprob: -17.62516975402832
    10. '

' → logprob: -18.00016975402832

Token 843: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.15310683415737e-05
    2. ' def' → logprob: -11.000021934509277
    3. '   ' → logprob: -12.250021934509277
    4. '```' → logprob: -17.50002098083496
    5. '
' → logprob: -19.62502098083496
    6. '	def' → logprob: -20.00002098083496
    7. '@' → logprob: -20.75002098083496
    8. '    
' → logprob: -21.00002098083496
    9. ' ' → logprob: -22.37502098083496
    10. 'Def' → logprob: -22.87502098083496

Token 844: ' factor' (ID: 12332)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04634693264961243
    2. 'factor' → logprob: -3.67134690284729
    3. 'ms' → logprob: -4.421347141265869
    4. ' is' → logprob: -5.546347141265869
    5. '_is' → logprob: -6.796347141265869
    6. '_m' → logprob: -7.046347141265869
    7. 'get' → logprob: -7.546347141265869
    8. '_ms' → logprob: -7.796347141265869
    9. '_' → logprob: -8.046346664428711
    10. '_factor' → logprob: -8.046346664428711

Token 845: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.5020643472671509
    2. '(self' → logprob: -1.0020643472671509
    3. '   ' → logprob: -4.377064228057861
    4. '(' → logprob: -5.752064228057861
    5. '_m' → logprob: -5.752064228057861
    6. '       ' → logprob: -6.127064228057861
    7. ':' → logprob: -6.377064228057861
    8. '```' → logprob: -7.002064228057861
    9. '_' → logprob: -7.252064228057861
    10. '(n' → logprob: -7.752064228057861

Token 846: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007778270519338548
    2. '(' → logprob: -7.250777721405029
    3. '(
' → logprob: -9.625778198242188
    4. 'self' → logprob: -14.125778198242188
    5. ' (' → logprob: -14.750778198242188
    6. '   ' → logprob: -14.750778198242188
    7. '       ' → logprob: -15.250778198242188
    8. '(
' → logprob: -17.750778198242188
    9. '(

' → logprob: -18.000778198242188
    10. '(Self' → logprob: -18.000778198242188

Token 847: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011252141557633877
    2. '(' → logprob: -6.876125335693359
    3. 'self' → logprob: -10.25112533569336
    4. ' (' → logprob: -10.25112533569336
    5. '(
' → logprob: -11.25112533569336
    6. '       ' → logprob: -12.50112533569336
    7. '   ' → logprob: -12.62612533569336
    8. ')' → logprob: -14.12612533569336
    9. ')(' → logprob: -14.75112533569336
    10. ' self' → logprob: -15.25112533569336

Token 848: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0038336904253810644
    2. 'n' → logprob: -5.878833770751953
    3. ' self' → logprob: -7.503833770751953
    4. '       ' → logprob: -8.378833770751953
    5. 'number' → logprob: -8.378833770751953
    6. ' n' → logprob: -11.878833770751953
    7. 'num' → logprob: -12.003833770751953
    8. 'value' → logprob: -13.128833770751953
    9. '   ' → logprob: -13.378833770751953
    10. ' number' → logprob: -14.253833770751953

Token 849: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010203058831393719
    2. '(self' → logprob: -5.510202884674072
    3. ')' → logprob: -6.135202884674072
    4. '       ' → logprob: -6.385202884674072
    5. 'self' → logprob: -6.385202884674072
    6. '   ' → logprob: -8.01020336151123
    7. '):' → logprob: -8.63520336151123
    8. ',' → logprob: -10.88520336151123
    9. '```' → logprob: -11.26020336151123
    10. ' self' → logprob: -11.51020336151123

Token 850: ' Monday' (ID: 10715)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12747028470039368
    2. ' int' → logprob: -2.1274702548980713
    3. '   ' → logprob: -8.752470016479492
    4. 'self' → logprob: -8.877470016479492
    5. ')' → logprob: -9.127470016479492
    6. '       ' → logprob: -9.877470016479492
    7. 'Monday' → logprob: -10.502470016479492
    8. ' Monday' → logprob: -10.752470016479492
    9. '"' → logprob: -11.502470016479492
    10. ' ' → logprob: -11.752470016479492

Token 851: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -1.7432603272027336e-06
    2. ' Saturday' → logprob: -13.625001907348633
    3. 'Satellite' → logprob: -15.250001907348633
    4. '_S' → logprob: -16.000001907348633
    5. 'Sunday' → logprob: -17.250001907348633
    6. '_s' → logprob: -17.625001907348633
    7. '```' → logprob: -17.625001907348633
    8. 'Square' → logprob: -18.625001907348633
    9. '[' → logprob: -18.625001907348633
    10. 'Sat' → logprob: -18.875001907348633

Token 852: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.0445127372804563e-05
    2. '_number' → logprob: -11.87501049041748
    3. ')' → logprob: -13.00001049041748
    4. 'number' → logprob: -15.00001049041748
    5. '_Number' → logprob: -15.12501049041748
    6. '_NUMBER' → logprob: -15.25001049041748
    7. '):' → logprob: -16.250009536743164
    8. 'umber' → logprob: -16.750009536743164
    9. '   ' → logprob: -17.000009536743164
    10. ':' → logprob: -17.125009536743164

Token 853: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.877503907773644e-05
    2. 'self' → logprob: -10.375099182128906
    3. '       ' → logprob: -10.625099182128906
    4. '   ' → logprob: -10.750099182128906
    5. ',' → logprob: -11.000099182128906
    6. '(self' → logprob: -13.000099182128906
    7. '):' → logprob: -13.250099182128906
    8. ' )' → logprob: -14.500099182128906
    9. '")' → logprob: -15.500099182128906
    10. ')->' → logprob: -15.625099182128906

Token 854: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13556648790836334
    2. '       ' → logprob: -2.885566473007202
    3. ')' → logprob: -3.385566473007202
    4. '->' → logprob: -4.510566711425781
    5. '   ' → logprob: -5.010566711425781
    6. ')->' → logprob: -5.135566711425781
    7. '(' → logprob: -5.385566711425781
    8. ' ->' → logprob: -5.760566711425781
    9. 'self' → logprob: -5.760566711425781
    10. '(
' → logprob: -6.385566711425781

Token 855: ' Set' (ID: 3957)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.18275149166584015
    2. ' List' → logprob: -1.8077515363693237
    3. 'Dict' → logprob: -5.932751655578613
    4. ' Dict' → logprob: -8.307751655578613
    5. '[List' → logprob: -9.932751655578613
    6. 'dict' → logprob: -11.057751655578613
    7. 'Set' → logprob: -11.682751655578613
    8. '   ' → logprob: -12.057751655578613
    9. ' dict' → logprob: -12.057751655578613
    10. 'Optional' → logprob: -12.682751655578613

Token 856: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004082699597347528
    2. '[int' → logprob: -8.000408172607422
    3. '["' → logprob: -9.750408172607422
    4. '[
' → logprob: -11.625408172607422
    5. '[m' → logprob: -12.750408172607422
    6. '```' → logprob: -14.625408172607422
    7. '{' → logprob: -14.750408172607422
    8. 'Monday' → logprob: -14.750408172607422
    9. '[...]' → logprob: -15.125408172607422
    10. '[(' → logprob: -15.125408172607422

Token 857: ']:
' (ID: 22152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9032202363014221
    2. '):' → logprob: -1.1532201766967773
    3. '):
' → logprob: -1.4032201766967773
    4. '   ' → logprob: -3.7782201766967773
    5. ')' → logprob: -5.278220176696777
    6. '(self' → logprob: -5.778220176696777
    7. '):
' → logprob: -7.153220176696777
    8. ':' → logprob: -7.403220176696777
    9. '```' → logprob: -8.528220176696777
    10. ':
' → logprob: -8.653220176696777

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003236417192965746
    2. '```' → logprob: -5.753236293792725
    3. 'result' → logprob: -10.878236770629883
    4. 'tokens' → logprob: -11.378236770629883
    5. '[]' → logprob: -11.753236770629883
    6. '``' → logprob: -12.628236770629883
    7. '(' → logprob: -13.003236770629883
    8. '   ' → logprob: -13.128236770629883
    9. '        
' → logprob: -13.628236770629883
    10. '"""' → logprob: -13.628236770629883

Token 859: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.27746260166168213
    2. 'result' → logprob: -1.5274626016616821
    3. 'if' → logprob: -4.277462482452393
    4. '       ' → logprob: -4.527462482452393
    5. '```' → logprob: -8.02746295928955
    6. ' factors' → logprob: -9.77746295928955
    7. ' result' → logprob: -10.02746295928955
    8. 'results' → logprob: -10.15246295928955
    9. ' if' → logprob: -10.90246295928955
    10. '_f' → logprob: -11.65246295928955

Token 860: ' Return' (ID: 6318)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030547313392162323
    2. 'result' → logprob: -3.7805473804473877
    3. 'n' → logprob: -5.280547142028809
    4. 'if' → logprob: -6.530547142028809
    5. 'value' → logprob: -8.155547142028809
    6. 'number' → logprob: -8.405547142028809
    7. 'num' → logprob: -9.405547142028809
    8. 'to' → logprob: -10.155547142028809
    9. ' factors' → logprob: -11.155547142028809
    10. '       ' → logprob: -11.280547142028809

Token 861: ' set' (ID: 920)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21323846280574799
    2. 'set' → logprob: -1.7132384777069092
    3. 'result' → logprob: -4.83823823928833
    4. 'ms' → logprob: -5.71323823928833
    5. 'factor' → logprob: -8.463238716125488
    6. '{' → logprob: -8.713238716125488
    7. 'results' → logprob: -10.588238716125488
    8. 'fact' → logprob: -10.963238716125488
    9. '_f' → logprob: -11.088238716125488
    10. 'self' → logprob: -11.213238716125488

Token 862: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06689721345901489
    2. '()
' → logprob: -2.81689715385437
    3. '():' → logprob: -6.191897392272949
    4. ' =' → logprob: -6.566897392272949
    5. '       ' → logprob: -7.566897392272949
    6. ':' → logprob: -8.19189739227295
    7. '{' → logprob: -8.94189739227295
    8. '():
' → logprob: -9.31689739227295
    9. '()
' → logprob: -9.56689739227295
    10. ' of' → logprob: -9.69189739227295

Token 863: ' MS' (ID: 15861)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018695665523409843
    2. 'prime' → logprob: -4.643695831298828
    3. 'ms' → logprob: -5.018695831298828
    4. 'pr' → logprob: -7.018695831298828
    5. 'Monday' → logprob: -7.393695831298828
    6. 'factor' → logprob: -8.393695831298828
    7. '{' → logprob: -8.518695831298828
    8. 'div' → logprob: -9.393695831298828
    9. '[]' → logprob: -10.018695831298828
    10. 'MS' → logprob: -10.143695831298828

Token 864: ' prime' (ID: 9197)
  Prédit: '_pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.06621450930833817
    2. '_prime' → logprob: -3.1912145614624023
    3. '_m' → logprob: -4.066214561462402
    4. ' primes' → logprob: -6.816214561462402
    5. '       ' → logprob: -6.941214561462402
    6. '_ms' → logprob: -6.941214561462402
    7. ' _' → logprob: -6.941214561462402
    8. 'pr' → logprob: -7.066214561462402
    9. '   ' → logprob: -7.691214561462402
    10. '_f' → logprob: -8.566214561462402

Token 865: ' factors' (ID: 11652)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.4858400821685791
    2. 'f' → logprob: -0.9858400821685791
    3. 's' → logprob: -4.48583984375
    4. '       ' → logprob: -8.61083984375
    5. ' factors' → logprob: -9.11083984375
    6. '   ' → logprob: -9.73583984375
    7. '_div' → logprob: -9.86083984375
    8. '```' → logprob: -11.36083984375
    9. 'div' → logprob: -12.61083984375
    10. 'factor' → logprob: -13.36083984375

Token 866: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02147073484957218
    2. '{' → logprob: -4.521470546722412
    3. ':' → logprob: -5.271470546722412
    4. 'result' → logprob: -6.396470546722412
    5. 'if' → logprob: -7.521470546722412
    6. '[]' → logprob: -7.896470546722412
    7. ',' → logprob: -7.896470546722412
    8. '
' → logprob: -8.14647102355957
    9. '```' → logprob: -8.14647102355957
    10. '=' → logprob: -8.27147102355957

Token 867: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -6.511406809295295e-06
    2. ' number' → logprob: -12.375006675720215
    3. '(number' → logprob: -13.625006675720215
    4. '{' → logprob: -14.250006675720215
    5. 'self' → logprob: -15.125006675720215
    6. 'the' → logprob: -16.6250057220459
    7. 'set' → logprob: -17.0000057220459
    8. '[number' → logprob: -18.2500057220459
    9. 'range' → logprob: -18.3750057220459
    10. '```' → logprob: -19.7500057220459

Token 868: '.value' (ID: 4683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005392124294303358
    2. '```' → logprob: -8.37553882598877
    3. ':' → logprob: -8.62553882598877
    4. ',' → logprob: -10.00053882598877
    5. '
' → logprob: -10.37553882598877
    6. 'result' → logprob: -11.00053882598877
    7. 'tokens' → logprob: -11.87553882598877
    8. '        
' → logprob: -12.25053882598877
    9. '   ' → logprob: -12.37553882598877
    10. '{' → logprob: -12.62553882598877

Token 869: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021698898635804653
    2. '```' → logprob: -6.877170085906982
    3. ':' → logprob: -7.627170085906982
    4. '{' → logprob: -7.877170085906982
    5. ',' → logprob: -9.627169609069824
    6. '   ' → logprob: -9.752169609069824
    7. '        
' → logprob: -10.502169609069824
    8. '
' → logprob: -10.502169609069824
    9. ' =' → logprob: -11.377169609069824
    10. '=' → logprob: -11.752169609069824

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017704968340694904
    2. 'result' → logprob: -6.626770496368408
    3. '```' → logprob: -8.126770973205566
    4. 'if' → logprob: -10.001770973205566
    5. '   ' → logprob: -11.001770973205566
    6. 'tokens' → logprob: -11.251770973205566
    7. '{' → logprob: -11.626770973205566
    8. ' result' → logprob: -11.751770973205566
    9. 'factor' → logprob: -12.126770973205566
    10. '        
' → logprob: -12.251770973205566

Token 871: ' n' (ID: 297)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.024263743311166763
    2. 'result' → logprob: -3.774263858795166
    3. '       ' → logprob: -7.399263858795166
    4. 'if' → logprob: -7.899263858795166
    5. ' factors' → logprob: -11.399263381958008
    6. 'results' → logprob: -12.149263381958008
    7. 'prime' → logprob: -12.274263381958008
    8. 'factor' → logprob: -12.274263381958008
    9. '```' → logprob: -12.399263381958008
    10. 'fact' → logprob: -13.774263381958008

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06308180093765259
    2. '=' → logprob: -2.813081741333008
    3. '_value' → logprob: -6.938081741333008
    4. '   ' → logprob: -9.938081741333008
    5. 'value' → logprob: -9.938081741333008
    6. '       ' → logprob: -10.188081741333008
    7. '_val' → logprob: -12.438081741333008
    8. ' ' → logprob: -13.938081741333008
    9. '=value' → logprob: -14.438081741333008
    10. '        ' → logprob: -14.688081741333008

Token 873: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.006724368315190077
    2. ' number' → logprob: -5.0067243576049805
    3. 'self' → logprob: -12.00672435760498
    4. '       ' → logprob: -12.75672435760498
    5. 'n' → logprob: -17.131725311279297
    6. '	number' → logprob: -17.256725311279297
    7. ' self' → logprob: -17.381725311279297
    8. '[number' → logprob: -17.881725311279297
    9. '(number' → logprob: -18.506725311279297
    10. '   ' → logprob: -19.506725311279297

Token 874: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.02102947235107422
    2. '.' → logprob: -3.896029472351074
    3. 'value' → logprob: -8.896029472351074
    4. ' =' → logprob: -8.896029472351074
    5. '=' → logprob: -9.021029472351074
    6. '   ' → logprob: -10.271029472351074
    7. ' .' → logprob: -10.646029472351074
    8. '       ' → logprob: -10.896029472351074
    9. '.val' → logprob: -12.521029472351074
    10. '```' → logprob: -12.521029472351074

Token 875: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003706373507156968
    2. '
' → logprob: -5.753706455230713
    3. 'result' → logprob: -8.753705978393555
    4. '        
' → logprob: -8.878705978393555
    5. ' if' → logprob: -10.128705978393555
    6. 'if' → logprob: -10.378705978393555
    7. '   ' → logprob: -10.378705978393555
    8. ',' → logprob: -10.753705978393555
    9. '        ' → logprob: -11.003705978393555
    10. '	' → logprob: -11.253705978393555

Token 876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2419145554304123
    2. 'result' → logprob: -1.9919145107269287
    3. 'if' → logprob: -2.6169145107269287
    4. 'results' → logprob: -6.366914749145508
    5. ' factors' → logprob: -6.866914749145508
    6. 'factor' → logprob: -6.991914749145508
    7. '   ' → logprob: -7.366914749145508
    8. 'for' → logprob: -8.241914749145508
    9. 'tokens' → logprob: -8.491914749145508
    10. '```' → logprob: -8.741914749145508

Token 877: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010501964716240764
    2. 'if' → logprob: -7.501049995422363
    3. 'result' → logprob: -8.001049995422363
    4. '       ' → logprob: -8.751049995422363
    5. 'ms' → logprob: -13.626049995422363
    6. 'factor' → logprob: -13.876049995422363
    7. 'prime' → logprob: -14.626049995422363
    8. ' factors' → logprob: -15.001049995422363
    9. 'facts' → logprob: -15.126049995422363
    10. 'for' → logprob: -15.376049995422363

Token 878: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143496990203857
    2. '=' → logprob: -1.7014349699020386
    3. ':' → logprob: -11.826435089111328
    4. '=set' → logprob: -12.326435089111328
    5. '=[]' → logprob: -12.326435089111328
    6. '   ' → logprob: -12.451435089111328
    7. '={}' → logprob: -14.826435089111328
    8. ' ' → logprob: -15.201435089111328
    9. ',' → logprob: -15.701435089111328
    10. '_set' → logprob: -15.826435089111328

Token 879: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.5597102396423e-05
    2. ' set' → logprob: -10.250035285949707
    3. '{}' → logprob: -16.750036239624023
    4. '=set' → logprob: -17.875036239624023
    5. '	set' → logprob: -18.875036239624023
    6. '{' → logprob: -18.875036239624023
    7. '   ' → logprob: -19.125036239624023
    8. '(set' → logprob: -19.500036239624023
    9. ' ' → logprob: -21.625036239624023
    10. '[]' → logprob: -22.000036239624023

Token 880: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4774392545223236
    2. '()
' → logprob: -0.977439284324646
    3. '       ' → logprob: -5.7274394035339355
    4. '()
' → logprob: -9.977438926696777
    5. '()

' → logprob: -10.102438926696777
    6. '(n' → logprob: -12.977438926696777
    7. '   ' → logprob: -12.977438926696777
    8. '(' → logprob: -13.352438926696777
    9. '()\' → logprob: -13.352438926696777
    10. 'while' → logprob: -13.852438926696777

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018446780450176448
    2. '   ' → logprob: -9.125184059143066
    3. '```' → logprob: -10.250184059143066
    4. 'for' → logprob: -11.375184059143066
    5. ' for' → logprob: -12.000184059143066
    6. '        
' → logprob: -12.250184059143066
    7. ' i' → logprob: -12.250184059143066
    8. 'i' → logprob: -12.875184059143066
    9. ',' → logprob: -13.375184059143066
    10. '           ' → logprob: -13.750184059143066

Token 882: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24568329751491547
    2. 'for' → logprob: -2.245683193206787
    3. '       ' → logprob: -2.495683193206787
    4. 'div' → logprob: -3.745683193206787
    5. 'i' → logprob: -5.995683193206787
    6. 'candidate' → logprob: -6.120683193206787
    7. 'while' → logprob: -7.995683193206787
    8. 'current' → logprob: -8.245683670043945
    9. 'factor' → logprob: -8.745683670043945
    10. 'divider' → logprob: -8.995683670043945

Token 883: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.12198913842439651
    2. '.' → logprob: -2.7469892501831055
    3. '_value' → logprob: -3.9969892501831055
    4. '_factor' → logprob: -4.6219892501831055
    5. '   ' → logprob: -5.7469892501831055
    6. ' =' → logprob: -5.9969892501831055
    7. 'def' → logprob: -5.9969892501831055
    8. 'value' → logprob: -6.1219892501831055
    9. '_current' → logprob: -6.3719892501831055
    10. ' .' → logprob: -6.6219892501831055

Token 884: 'factor' (ID: 73174)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.0575256273150444
    2. 'factor' → logprob: -3.307525634765625
    3. '_ms' → logprob: -4.682525634765625
    4. '_factor' → logprob: -5.682525634765625
    5. 'find' → logprob: -5.932525634765625
    6. 'def' → logprob: -6.057525634765625
    7. 'try' → logprob: -8.682525634765625
    8. 'extract' → logprob: -9.057525634765625
    9. 'divide' → logprob: -9.057525634765625
    10. '_helper' → logprob: -9.182525634765625

Token 885: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.17353326082229614
    2. '(n' → logprob: -2.0485332012176514
    3. '       ' → logprob: -3.9235332012176514
    4. 'number' → logprob: -5.6735334396362305
    5. 'n' → logprob: -5.7985334396362305
    6. '(number' → logprob: -6.6735334396362305
    7. '_number' → logprob: -7.4235334396362305
    8. '(' → logprob: -7.5485334396362305
    9. '_' → logprob: -7.6735334396362305
    10. '```' → logprob: -7.9235334396362305

Token 886: '_recursive' (ID: 175926)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13567744195461273
    2. '(number' → logprob: -2.7606773376464844
    3. '(self' → logprob: -2.8856773376464844
    4. '_helper' → logprob: -6.260677337646484
    5. '_number' → logprob: -6.510677337646484
    6. '_recursive' → logprob: -6.635677337646484
    7. 'self' → logprob: -6.760677337646484
    8. '(' → logprob: -7.260677337646484
    9. 'number' → logprob: -7.510677337646484
    10. '_internal' → logprob: -9.010677337646484

Token 887: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.031021753326058388
    2. '(number' → logprob: -3.5310218334198
    3. '(' → logprob: -7.156021595001221
    4. ' (' → logprob: -7.781021595001221
    5. '(
' → logprob: -10.031022071838379
    6. '(self' → logprob: -10.781022071838379
    7. '       ' → logprob: -13.281022071838379
    8. 'number' → logprob: -13.406022071838379
    9. '((' → logprob: -13.781022071838379
    10. '(numbers' → logprob: -14.031022071838379

Token 888: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31755438446998596
    2. ')' → logprob: -1.3175543546676636
    3. '       ' → logprob: -5.692554473876953
    4. ',n' → logprob: -7.567554473876953
    5. '(n' → logprob: -8.817554473876953
    6. '   ' → logprob: -9.942554473876953
    7. '           ' → logprob: -9.942554473876953
    8. ',)' → logprob: -10.067554473876953
    9. ')
' → logprob: -10.317554473876953
    10. ')n' → logprob: -10.942554473876953

Token 889: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.318681188422488e-05
    2. ' factors' → logprob: -11.25001335144043
    3. 'n' → logprob: -15.62501335144043
    4. '1' → logprob: -17.50001335144043
    5. 'factor' → logprob: -17.62501335144043
    6. 'facts' → logprob: -18.75001335144043
    7. '   ' → logprob: -19.00001335144043
    8. 'fact' → logprob: -19.12501335144043
    9. 'self' → logprob: -19.87501335144043
    10. ')' → logprob: -19.87501335144043

Token 890: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576542317867279
    2. ',' → logprob: -0.826542317867279
    3. ',n' → logprob: -7.826542377471924
    4. '       ' → logprob: -8.951541900634766
    5. '(n' → logprob: -10.451541900634766
    6. '   ' → logprob: -10.576541900634766
    7. ',)' → logprob: -11.701541900634766
    8. ')n' → logprob: -12.201541900634766
    9. ' ,' → logprob: -13.201541900634766
    10. ' )' → logprob: -13.826541900634766

Token 891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029448548331856728
    2. '   ' → logprob: -3.7794485092163086
    3. '```' → logprob: -5.779448509216309
    4. ',' → logprob: -6.029448509216309
    5. '(' → logprob: -8.654448509216309
    6. ')' → logprob: -9.529448509216309
    7. '        
' → logprob: -9.529448509216309
    8. '	' → logprob: -9.529448509216309
    9. '[' → logprob: -10.154448509216309
    10. '<|end|>' → logprob: -10.279448509216309

Token 892: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.212723046541214
    2. 'return' (adapté à ' return') → logprob: -1.7127230167388916
    3. ' return' → logprob: -5.212723255157471
    4. '	return' → logprob: -5.962723255157471
    5. '
' → logprob: -7.087723255157471
    6. '   ' → logprob: -7.212723255157471
    7. '<|end|>' → logprob: -7.337723255157471
    8. '	' → logprob: -8.212722778320312
    9. '[' → logprob: -9.587722778320312
    10. ' ' → logprob: -9.712722778320312

Token 893: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011049824766814709
    2. ' factors' → logprob: -4.511049747467041
    3. 'factor' → logprob: -14.0110502243042
    4. ' f' → logprob: -14.7610502243042
    5. '	f' → logprob: -15.1360502243042
    6. 'fac' → logprob: -15.8860502243042
    7. '
' → logprob: -15.8860502243042
    8. '   ' → logprob: -16.511049270629883
    9. 'fact' → logprob: -16.761049270629883
    10. '```' → logprob: -16.886049270629883

Token 894: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28297486901283264
    2. '   ' → logprob: -1.4079748392105103
    3. 'def' → logprob: -6.657974720001221
    4. '    
' → logprob: -7.782974720001221
    5. '
' → logprob: -10.282975196838379
    6. ' def' → logprob: -10.657975196838379
    7. '```' → logprob: -11.032975196838379
    8. '	def' → logprob: -11.407975196838379
    9. '  
' → logprob: -11.907975196838379
    10. '<|end|>' → logprob: -12.032975196838379

Token 895: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5695164203643799
    2. '   ' → logprob: -1.3195164203643799
    3. 'def' → logprob: -1.8195164203643799
    4. '```' → logprob: -6.069516181945801
    5. '    
' → logprob: -6.569516181945801
    6. ' def' → logprob: -7.194516181945801
    7. '	def' → logprob: -9.4445161819458
    8. ' 
' → logprob: -10.0695161819458
    9. '<|end|>' → logprob: -10.1945161819458
    10. '
' → logprob: -10.4445161819458

Token 896: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00026264708139933646
    2. ' def' → logprob: -8.500262260437012
    3. '   ' → logprob: -9.750262260437012
    4. '
' → logprob: -14.750262260437012
    5. '	def' → logprob: -14.750262260437012
    6. '_def' → logprob: -17.375263214111328
    7. ' ' → logprob: -17.750263214111328
    8. '    
' → logprob: -17.875263214111328
    9. 'ndef' → logprob: -18.625263214111328
    10. 'de' → logprob: -18.875263214111328

Token 897: ' _' (ID: 1175)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -2.45848218582978e-06
    2. ' _' → logprob: -13.00000286102295
    3. '_fact' → logprob: -16.625001907348633
    4. '_fac' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '__' → logprob: -17.625001907348633
    7. 'factor' → logprob: -17.625001907348633
    8. '_f' → logprob: -18.125001907348633
    9. '_factory' → logprob: -18.250001907348633
    10. '_FACTOR' → logprob: -18.625001907348633

Token 898: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.00043281487887725234
    2. '_factor' → logprob: -7.750432968139648
    3. 'def' → logprob: -13.375432968139648
    4. '_ms' → logprob: -15.250432968139648
    5. ' factor' → logprob: -15.625432968139648
    6. '_m' → logprob: -16.75043296813965
    7. 'ms' → logprob: -16.87543296813965
    8. '.factor' → logprob: -17.25043296813965
    9. '_' → logprob: -18.50043296813965
    10. '-factor' → logprob: -19.12543296813965

Token 899: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -4.36574100604048e-06
    2. '_factor' → logprob: -13.625004768371582
    3. '   ' → logprob: -14.125004768371582
    4. '_recursive' → logprob: -14.375004768371582
    5. 'ialize' → logprob: -14.500004768371582
    6. '_' → logprob: -14.750004768371582
    7. 'IZE' → logprob: -15.000004768371582
    8. '```' → logprob: -15.375004768371582
    9. 'esize' → logprob: -16.500003814697266
    10. 'factor' → logprob: -16.875003814697266

Token 900: '_recursive' (ID: 175926)
  Prédit: '_recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_recursive' → logprob: -4.8828707804204896e-05
    2. '(self' → logprob: -10.500048637390137
    3. 'recursive' → logprob: -11.125048637390137
    4. '_' → logprob: -12.625048637390137
    5. '_rec' → logprob: -12.875048637390137
    6. 'self' → logprob: -14.875048637390137
    7. '(' → logprob: -15.750048637390137
    8. '   ' → logprob: -16.875049591064453
    9. '```' → logprob: -17.500049591064453
    10. '_self' → logprob: -17.750049591064453

Token 901: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -15.875021934509277
    4. ' (' → logprob: -16.25002098083496
    5. '       ' → logprob: -16.25002098083496
    6. '   ' → logprob: -17.87502098083496
    7. 'self' → logprob: -18.62502098083496
    8. '(this' → logprob: -20.50002098083496
    9. '(s' → logprob: -21.00002098083496
    10. '(Self' → logprob: -21.87502098083496

Token 902: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002020355314016342
    2. '(' → logprob: -6.377020359039307
    3. ')(' → logprob: -9.127019882202148
    4. ' (' → logprob: -9.377019882202148
    5. ',' → logprob: -9.877019882202148
    6. 'self' → logprob: -9.877019882202148
    7. '       ' → logprob: -11.752019882202148
    8. '   ' → logprob: -11.877019882202148
    9. ')' → logprob: -12.127019882202148
    10. '(
' → logprob: -14.252019882202148

Token 903: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47480979561805725
    2. 'self' → logprob: -0.9748097658157349
    3. 'number' → logprob: -7.849809646606445
    4. '       ' → logprob: -8.849809646606445
    5. 'num' → logprob: -9.599809646606445
    6. ' n' → logprob: -10.099809646606445
    7. 'value' → logprob: -10.099809646606445
    8. ' self' → logprob: -10.474809646606445
    9. '   ' → logprob: -10.849809646606445
    10. '(self' → logprob: -14.974809646606445

Token 904: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032366468803957105
    2. ':' → logprob: -8.250323295593262
    3. '   ' → logprob: -10.000323295593262
    4. '       ' → logprob: -11.500323295593262
    5. ' ,' → logprob: -12.125323295593262
    6. 'self' → logprob: -14.250323295593262
    7. ',n' → logprob: -14.625323295593262
    8. ':int' → logprob: -16.250324249267578
    9. ',self' → logprob: -17.000324249267578
    10. ',int' → logprob: -17.125324249267578

Token 905: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0014665346825495362
    2. 'n' → logprob: -6.876466751098633
    3. ' int' → logprob: -7.751466751098633
    4. ' n' → logprob: -13.626466751098633
    5. '   ' → logprob: -14.126466751098633
    6. '[int' → logprob: -14.126466751098633
    7. '       ' → logprob: -15.251466751098633
    8. '(int' → logprob: -15.876466751098633
    9. '```' → logprob: -16.626466751098633
    10. ':int' → logprob: -16.876466751098633

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022570860164705664
    2. ')' → logprob: -8.625226020812988
    3. '   ' → logprob: -10.875226020812988
    4. '):' → logprob: -11.250226020812988
    5. '       ' → logprob: -11.750226020812988
    6. '):
' → logprob: -12.750226020812988
    7. ',n' → logprob: -13.500226020812988
    8. 'self' → logprob: -14.000226020812988
    9. ' ,' → logprob: -14.125226020812988
    10. ',
' → logprob: -16.625225067138672

Token 907: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2519342601299286
    2. ' factors' → logprob: -1.501934289932251
    3. ' f' → logprob: -13.126934051513672
    4. ' ' → logprob: -13.751934051513672
    5. '   ' → logprob: -13.876934051513672
    6. '_f' → logprob: -15.126934051513672
    7. 'factor' → logprob: -15.251934051513672
    8. 'facts' → logprob: -15.251934051513672
    9. 'visited' → logprob: -16.001934051513672
    10. '  ' → logprob: -16.751934051513672

Token 908: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006850938778370619
    2. ',' → logprob: -5.006850719451904
    3. '   ' → logprob: -9.131851196289062
    4. ')' → logprob: -11.006851196289062
    5. '):' → logprob: -11.506851196289062
    6. '       ' → logprob: -15.506851196289062
    7. '  ' → logprob: -15.881851196289062
    8. ':set' → logprob: -16.006851196289062
    9. ':Set' → logprob: -16.131851196289062
    10. '):
' → logprob: -16.506851196289062

Token 909: ' Set' (ID: 3957)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00409288564696908
    2. 'Set' → logprob: -5.504092693328857
    3. ' set' → logprob: -11.254093170166016
    4. ' Set' → logprob: -13.879093170166016
    5. '_set' → logprob: -14.629093170166016
    6. ')set' → logprob: -16.379093170166016
    7. ')' → logprob: -17.129093170166016
    8. '-set' → logprob: -17.629093170166016
    9. '=set' → logprob: -19.379093170166016
    10. '(set' → logprob: -19.879093170166016

Token 910: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -14.750000953674316
    3. ')' → logprob: -15.125000953674316
    4. '):' → logprob: -15.625000953674316
    5. '):
' → logprob: -16.375001907348633
    6. '```' → logprob: -17.125001907348633
    7. '<int' → logprob: -17.250001907348633
    8. '
' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '[Int' → logprob: -17.750001907348633

Token 911: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013335755094885826
    2. '])' → logprob: -4.388335704803467
    3. '):
' → logprob: -7.263335704803467
    4. '):' → logprob: -9.513336181640625
    5. ']):
' → logprob: -10.388336181640625
    6. '   ' → logprob: -11.763336181640625
    7. ']):' → logprob: -12.513336181640625
    8. ' )' → logprob: -12.763336181640625
    9. ']' → logprob: -13.763336181640625
    10. '")' → logprob: -13.763336181640625

Token 912: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006042646709829569
    2. '   ' → logprob: -8.375604629516602
    3. '):' → logprob: -8.625604629516602
    4. ':
' → logprob: -9.125604629516602
    5. '       ' → logprob: -9.750604629516602
    6. ')' → logprob: -11.000604629516602
    7. '):
' → logprob: -12.625604629516602
    8. ':def' → logprob: -13.250604629516602
    9. '->' → logprob: -13.500604629516602
    10. '():' → logprob: -13.875604629516602

Token 913: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00696104671806097
    2. 'int' → logprob: -5.006960868835449
    3. '   ' → logprob: -8.50696086883545
    4. ' None' → logprob: -11.00696086883545
    5. 'if' → logprob: -11.38196086883545
    6. 'bool' → logprob: -12.00696086883545
    7. '       ' → logprob: -12.38196086883545
    8. 'none' → logprob: -13.38196086883545
    9. '_None' → logprob: -14.13196086883545
    10. '[int' → logprob: -14.50696086883545

Token 914: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07402734458446503
    2. '       ' → logprob: -2.6990272998809814
    3. ':
' → logprob: -5.9490275382995605
    4. '   ' → logprob: -6.9490275382995605
    5. ',' → logprob: -8.449027061462402
    6. '<|end|>' → logprob: -9.074027061462402
    7. '):' → logprob: -9.699027061462402
    8. '):
' → logprob: -10.324027061462402
    9. '<|end|>' → logprob: -10.949027061462402
    10. '():' → logprob: -11.699027061462402

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018983196059707552
    2. '   ' → logprob: -8.750189781188965
    3. ' if' → logprob: -11.625189781188965
    4. '```' → logprob: -12.250189781188965
    5. '	   ' → logprob: -12.250189781188965
    6. '	' → logprob: -12.375189781188965
    7. '    ' → logprob: -13.000189781188965
    8. '<|end|>' → logprob: -13.750189781188965
    9. '      ' → logprob: -14.125189781188965
    10. 'if' → logprob: -14.500189781188965

Token 916: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002449734602123499
    2. '       ' → logprob: -6.5024495124816895
    3. 'for' → logprob: -7.0024495124816895
    4. ' if' → logprob: -10.377449989318848
    5. '#' → logprob: -12.127449989318848
    6. '```' → logprob: -14.377449989318848
    7. '   ' → logprob: -16.75244903564453
    8. 'If' → logprob: -17.62744903564453
    9. 'from' → logprob: -17.75244903564453
    10. '	if' → logprob: -18.00244903564453

Token 917: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011272187111899257
    2. 'Monday' → logprob: -9.125112533569336
    3. ' n' → logprob: -13.000112533569336
    4. '   ' → logprob: -13.875112533569336
    5. 'self' → logprob: -16.000112533569336
    6. '_n' → logprob: -16.500112533569336
    7. ' Monday' → logprob: -16.625112533569336
    8. '	n' → logprob: -16.750112533569336
    9. 'Tuesday' → logprob: -17.375112533569336
    10. '       ' → logprob: -17.750112533569336

Token 918: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25591301918029785
    2. ' ==' → logprob: -1.5059130191802979
    3. '<=' → logprob: -5.755912780761719
    4. ' <=' → logprob: -7.130912780761719
    5. ' in' → logprob: -11.755912780761719
    6. '===' → logprob: -13.005912780761719
    7. 'in' → logprob: -14.380912780761719
    8. '=' → logprob: -14.755912780761719
    9. '<' → logprob: -15.255912780761719
    10. '   ' → logprob: -16.00591278076172

Token 919: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '0' → logprob: -16.25
    4. '7' → logprob: -18.375
    5. '```' → logprob: -18.875
    6. '2' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '6' → logprob: -19.625
    9. 'Monday' → logprob: -19.875
    10. '#' → logprob: -20.625

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '0' → logprob: -18.625
    4. '```' → logprob: -20.25
    5. '   ' → logprob: -21.5
    6. '`' → logprob: -21.75
    7. '１' → logprob: -22.0
    8. '-' → logprob: -22.125
    9. '6' → logprob: -22.25
    10. 'n' → logprob: -22.3125

Token 921: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4020928144454956
    2. ':
' → logprob: -1.2770928144454956
    3. '       ' → logprob: -3.777092933654785
    4. ' or' → logprob: -4.152092933654785
    5. ':return' → logprob: -4.652092933654785
    6. '           ' → logprob: -5.527092933654785
    7. 'return' → logprob: -10.527092933654785
    8. ':
' → logprob: -11.027092933654785
    9. ' return' → logprob: -11.152092933654785
    10. '   ' → logprob: -11.152092933654785

Token 922: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03816267475485802
    2. '       ' → logprob: -3.2881627082824707
    3. ':' → logprob: -9.288162231445312
    4. ':
' → logprob: -11.788162231445312
    5. ' return' → logprob: -12.038162231445312
    6. '	       ' → logprob: -12.788162231445312
    7. ':return' → logprob: -12.788162231445312
    8. 'return' → logprob: -13.038162231445312
    9. '   ' → logprob: -13.413162231445312
    10. '```' → logprob: -13.538162231445312

Token 923: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03824550658464432
    2. ' return' → logprob: -3.788245439529419
    3. '       ' → logprob: -4.788245677947998
    4. '           ' → logprob: -5.038245677947998
    5. '   ' → logprob: -9.78824520111084
    6. '	return' → logprob: -11.16324520111084
    7. '{return' → logprob: -12.91324520111084
    8. ':return' → logprob: -13.16324520111084
    9. '               ' → logprob: -14.41324520111084
    10. '
' → logprob: -15.28824520111084

Token 924: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01653304323554039
    2. 'for' → logprob: -4.641532897949219
    3. ' for' → logprob: -5.391532897949219
    4. '<|end|>' → logprob: -7.141532897949219
    5. 'if' → logprob: -7.391532897949219
    6. '        
' → logprob: -8.016532897949219
    7. '   ' → logprob: -8.641532897949219
    8. ' if' → logprob: -9.641532897949219
    9. '```' → logprob: -9.641532897949219
    10. '
' → logprob: -10.266532897949219

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022104429081082344
    2. 'for' → logprob: -6.50221061706543
    3. ' for' → logprob: -7.62721061706543
    4. 'if' → logprob: -9.50221061706543
    5. '```' → logprob: -9.87721061706543
    6. '   ' → logprob: -10.12721061706543
    7. '        
' → logprob: -11.00221061706543
    8. '
' → logprob: -11.62721061706543
    9. '<|end|>' → logprob: -12.12721061706543
    10. 'next' → logprob: -12.25221061706543

Token 926: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42026975750923157
    2. 'for' → logprob: -1.1702697277069092
    3. '       ' → logprob: -3.420269727706909
    4. ' if' → logprob: -9.795269966125488
    5. ' for' → logprob: -10.170269966125488
    6. 'from' → logprob: -10.920269966125488
    7. '#' → logprob: -11.295269966125488
    8. '```' → logprob: -12.170269966125488
    9. 'next' → logprob: -12.420269966125488
    10. 'token' → logprob: -12.420269966125488

Token 927: ' n' (ID: 297)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.3328642249107361
    2. 'n' → logprob: -1.3328642845153809
    3. 'self' → logprob: -3.957864284515381
    4. ' Monday' → logprob: -8.707863807678223
    5. 'Tuesday' → logprob: -10.082863807678223
    6. ' n' → logprob: -10.832863807678223
    7. 'Sunday' → logprob: -11.582863807678223
    8. 'Self' → logprob: -11.707863807678223
    9. 'Morning' → logprob: -11.770363807678223
    10. ' self' → logprob: -12.020363807678223

Token 928: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011056192219257355
    2. 'in' → logprob: -4.511056423187256
    3. ' ' → logprob: -12.761055946350098
    4. '==' → logprob: -13.011055946350098
    5. ' ==' → logprob: -13.886055946350098
    6. '%' → logprob: -14.761055946350098
    7. '<=' → logprob: -14.761055946350098
    8. '	in' → logprob: -15.011055946350098
    9. '   ' → logprob: -15.386055946350098
    10. ' <=' → logprob: -15.761055946350098

Token 929: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7729658540920354e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -16.875028610229492
    4. '[self' → logprob: -17.000028610229492
    5. 'Monday' → logprob: -17.500028610229492
    6. '{' → logprob: -18.625028610229492
    7. '[' → logprob: -19.750028610229492
    8. '       ' → logprob: -20.375028610229492
    9. '	self' → logprob: -20.750028610229492
    10. 'this' → logprob: -21.125028610229492

Token 930: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00020306356600485742
    2. '_ms' → logprob: -8.625203132629395
    3. '_self' → logprob: -11.250203132629395
    4. '_factor' → logprob: -12.375203132629395
    5. 'self' → logprob: -13.125203132629395
    6. '_f' → logprob: -13.250203132629395
    7. '_m' → logprob: -14.125203132629395
    8. '.' → logprob: -14.250203132629395
    9. '.ms' → logprob: -15.000203132629395
    10. '_s' → logprob: -15.625203132629395

Token 931: 'ms' (ID: 1782)
  Prédit: 'ms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -1.5048530030981055e-06
    2. '_ms' → logprob: -13.625001907348633
    3. 'factor' → logprob: -15.500001907348633
    4. ' ms' → logprob: -17.250001907348633
    5. '(ms' → logprob: -18.500001907348633
    6. '	ms' → logprob: -18.625001907348633
    7. '_factor' → logprob: -19.000001907348633
    8. '-ms' → logprob: -19.750001907348633
    9. 'f' → logprob: -20.000001907348633
    10. 'm' → logprob: -20.250001907348633

Token 932: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0001584850688232109
    2. 'prime' → logprob: -8.750158309936523
    3. '_factor' → logprob: -17.875158309936523
    4. '
' → logprob: -18.000158309936523
    5. '_com' → logprob: -18.125158309936523
    6. '_pr' → logprob: -18.125158309936523
    7. ' prime' → logprob: -19.000158309936523
    8. 'Prime' → logprob: -19.250158309936523
    9. '_' → logprob: -19.875158309936523
    10. '```' → logprob: -20.000158309936523

Token 933: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -2.15310683415737e-05
    2. 'cache' → logprob: -10.750021934509277
    3. 'Cache' → logprob: -18.12502098083496
    4. '_cached' → logprob: -18.62502098083496
    5. ' cache' → logprob: -19.62502098083496
    6. '_CACHE' → logprob: -20.37502098083496
    7. '	cache' → logprob: -20.62502098083496
    8. 'prime' → logprob: -20.62502098083496
    9. '
' → logprob: -21.00002098083496
    10. 'f' → logprob: -21.62502098083496

Token 934: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17090944945812225
    2. ':
' → logprob: -1.9209094047546387
    3. ' and' → logprob: -4.670909404754639
    4. 'and' → logprob: -6.920909404754639
    5. '       ' → logprob: -8.920909881591797
    6. ':return' → logprob: -9.545909881591797
    7. '           ' → logprob: -10.545909881591797
    8. '):
' → logprob: -11.295909881591797
    9. '=True' → logprob: -11.545909881591797
    10. '=' → logprob: -12.045909881591797

Token 935: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5741345286369324
    2. '           ' → logprob: -1.4491345882415771
    3. ':' → logprob: -2.449134588241577
    4. '       ' → logprob: -2.949134588241577
    5. ':
' → logprob: -3.199134588241577
    6. 'and' → logprob: -3.824134588241577
    7. ':return' → logprob: -8.574134826660156
    8. '=True' → logprob: -9.324134826660156
    9. ',' → logprob: -9.574134826660156
    10. '=' → logprob: -9.574134826660156

Token 936: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003377926768735051
    2. '           ' → logprob: -6.128377914428711
    3. 'f' → logprob: -7.503377914428711
    4. 'return' → logprob: -7.753377914428711
    5. '       ' → logprob: -9.128377914428711
    6. ' if' → logprob: -9.753377914428711
    7. 'is' → logprob: -10.253377914428711
    8. 'factor' → logprob: -12.503377914428711
    9. '```' → logprob: -13.753377914428711
    10. 'result' → logprob: -14.128377914428711

Token 937: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005738340318202972
    2. 'not' → logprob: -5.380738258361816
    3. ' self' → logprob: -6.880738258361816
    4. ' not' → logprob: -9.380738258361816
    5. '   ' → logprob: -13.505738258361816
    6. '(self' → logprob: -13.630738258361816
    7. '       ' → logprob: -13.755738258361816
    8. 'n' → logprob: -13.880738258361816
    9. '           ' → logprob: -14.880738258361816
    10. '	self' → logprob: -15.380738258361816

Token 938: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.73314929776825e-05
    2. '_ms' → logprob: -9.37508773803711
    3. '_cache' → logprob: -14.62508773803711
    4. '_m' → logprob: -14.62508773803711
    5. '_is' → logprob: -14.87508773803711
    6. '_cached' → logprob: -15.25008773803711
    7. ']._' → logprob: -15.25008773803711
    8. '->_' → logprob: -15.87508773803711
    9. ')._' → logprob: -16.50008773803711
    10. ':_' → logprob: -16.87508773803711

Token 939: 'ms' (ID: 1782)
  Prédit: 'ms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -4.723352049040841e-06
    2. 'factor' → logprob: -12.375004768371582
    3. '_ms' → logprob: -15.875004768371582
    4. '
' → logprob: -16.500003814697266
    5. ' ms' → logprob: -17.375003814697266
    6. 'mc' → logprob: -17.750003814697266
    7. 'm' → logprob: -17.750003814697266
    8. '

' → logprob: -18.000003814697266
    9. '(ms' → logprob: -18.000003814697266
    10. '```' → logprob: -18.000003814697266

Token 940: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.637786231702194e-05
    2. 'prime' → logprob: -9.375086784362793
    3. 'Prime' → logprob: -14.125086784362793
    4. '_cache' → logprob: -15.125086784362793
    5. ' prime' → logprob: -16.000085830688477
    6. '```' → logprob: -16.250085830688477
    7. '_cached' → logprob: -17.000085830688477
    8. '_pr' → logprob: -17.500085830688477
    9. '\' → logprob: -17.875085830688477
    10. '_' → logprob: -18.500085830688477

Token 941: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0009293294278904796
    2. 'cache' → logprob: -7.000929355621338
    3. '_cached' → logprob: -11.62592887878418
    4. 'Cache' → logprob: -12.75092887878418
    5. 'prime' → logprob: -13.50092887878418
    6. '_CACHE' → logprob: -13.62592887878418
    7. '_prime' → logprob: -14.37592887878418
    8. '_f' → logprob: -14.75092887878418
    9. '```' → logprob: -15.12592887878418
    10. 'cached' → logprob: -15.37592887878418

Token 942: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0019464874640107155
    2. '.get' → logprob: -6.251946449279785
    3. 'n' → logprob: -11.251946449279785
    4. '[' → logprob: -12.751946449279785
    5. 'get' → logprob: -13.376946449279785
    6. ' [' → logprob: -16.3769474029541
    7. '```' → logprob: -16.3769474029541
    8. '   ' → logprob: -16.5019474029541
    9. '[get' → logprob: -17.0019474029541
    10. '[node' → logprob: -18.0019474029541

Token 943: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6038216948509216
    2. ']:' → logprob: -1.3538217544555664
    3. ':' → logprob: -2.3538217544555664
    4. ':
' → logprob: -2.3538217544555664
    5. ']==' → logprob: -5.978821754455566
    6. ':return' → logprob: -7.478821754455566
    7. ']' → logprob: -7.603821754455566
    8. '():
' → logprob: -8.103821754455566
    9. '==' → logprob: -8.228821754455566
    10. '       ' → logprob: -8.603821754455566

Token 944: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020951027050614357
    2. ':
' → logprob: -4.395950794219971
    3. ':' → logprob: -5.270950794219971
    4. '       ' → logprob: -7.020950794219971
    5. '               ' → logprob: -7.020950794219971
    6. 'f' → logprob: -7.395950794219971
    7. 'return' → logprob: -8.520951271057129
    8. ' factors' → logprob: -8.645951271057129
    9. ':return' → logprob: -8.895951271057129
    10. '{
' → logprob: -9.895951271057129

Token 945: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004605783324223012
    2. '           ' → logprob: -8.000460624694824
    3. ' factors' → logprob: -9.000460624694824
    4. '       ' → logprob: -14.625460624694824
    5. 'factor' → logprob: -14.875460624694824
    6. '               ' → logprob: -15.000460624694824
    7. '	f' → logprob: -15.875460624694824
    8. '   ' → logprob: -16.000459671020508
    9. ' f' → logprob: -16.000459671020508
    10. '_f' → logprob: -16.125459671020508

Token 946: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.746380237629637e-05
    2. '.' → logprob: -9.250097274780273
    3. 'add' → logprob: -14.000097274780273
    4. '.Add' → logprob: -15.750097274780273
    5. '.update' → logprob: -16.500097274780273
    6. ' add' → logprob: -16.500097274780273
    7. '.append' → logprob: -16.875097274780273
    8. '_add' → logprob: -17.500097274780273
    9. ' .' → logprob: -18.250097274780273
    10. ':add' → logprob: -18.750097274780273

Token 947: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000158842682139948
    2. 'n' → logprob: -8.75015926361084
    3. '(' → logprob: -15.12515926361084
    4. '(
' → logprob: -17.375158309936523
    5. ' n' → logprob: -17.875158309936523
    6. '	n' → logprob: -18.125158309936523
    7. ' (' → logprob: -20.125158309936523
    8. '<n' → logprob: -20.625158309936523
    9. '[n' → logprob: -20.875158309936523
    10. ')n' → logprob: -21.125158309936523

Token 948: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6948479413986206
    2. ')
' → logprob: -0.6948479413986206
    3. '           ' → logprob: -6.81984806060791
    4. '       ' → logprob: -8.31984806060791
    5. '               ' → logprob: -8.69484806060791
    6. ')
' → logprob: -8.69484806060791
    7. ')return' → logprob: -11.06984806060791
    8. '):
' → logprob: -12.69484806060791
    9. ')

' → logprob: -13.06984806060791
    10. ' )
' → logprob: -13.69484806060791

Token 949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06258900463581085
    2. '       ' → logprob: -2.812588930130005
    3. 'else' → logprob: -7.937589168548584
    4. '               ' → logprob: -8.687588691711426
    5. '```' → logprob: -9.937588691711426
    6. 'return' → logprob: -10.937588691711426
    7. ' else' → logprob: -11.312588691711426
    8. 'elif' → logprob: -11.687588691711426
    9. '   ' → logprob: -13.062588691711426
    10. ',' → logprob: -13.437588691711426

Token 950: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04807646945118904
    2. 'else' (adapté à ' else') → logprob: -3.5480763912200928
    3. '       ' → logprob: -4.173076629638672
    4. ' else' → logprob: -6.423076629638672
    5. 'return' → logprob: -6.923076629638672
    6. '               ' → logprob: -9.923076629638672
    7. 'elif' → logprob: -9.923076629638672
    8. ' return' → logprob: -10.798076629638672
    9. '   ' → logprob: -11.298076629638672
    10. ' elif' → logprob: -13.173076629638672

Token 951: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5407717227935791
    2. ':
' → logprob: -2.165771722793579
    3. ':' → logprob: -2.290771722793579
    4. ':return' → logprob: -2.415771722793579
    5. '           ' → logprob: -2.665771722793579
    6. 'return' → logprob: -4.040771484375
    7. '       ' → logprob: -4.040771484375
    8. ' return' → logprob: -5.290771484375
    9. ',' → logprob: -6.540771484375
    10. '<|end|>' → logprob: -7.415771484375

Token 952: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1886035054922104
    2. '           ' → logprob: -1.9386035203933716
    3. '       ' → logprob: -4.688603401184082
    4. 'for' → logprob: -5.188603401184082
    5. ' return' → logprob: -5.438603401184082
    6. 'pass' → logprob: -5.813603401184082
    7. 'div' → logprob: -6.063603401184082
    8. 'factor' → logprob: -7.063603401184082
    9. 'self' → logprob: -7.313603401184082
    10. '               ' → logprob: -7.563603401184082

Token 953: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9227334856987
    2. 'pass' → logprob: -1.4227335453033447
    3. 'div' → logprob: -1.7977335453033447
    4. '           ' → logprob: -2.0477335453033447
    5. 'for' → logprob: -2.9227335453033447
    6. '#' (adapté à ' #') → logprob: -5.297733306884766
    7. '       ' → logprob: -6.797733306884766
    8. 'limit' → logprob: -7.047733306884766
    9. 'factor' → logprob: -7.172733306884766
    10. 'divider' → logprob: -7.297733306884766

Token 954: ' composite' (ID: 40773)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.6825512647628784
    2. 'for' → logprob: -1.4325512647628784
    3. 'div' → logprob: -1.5575512647628784
    4. '#' → logprob: -3.807551383972168
    5. '       ' → logprob: -5.057551383972168
    6. 'small' → logprob: -5.307551383972168
    7. '           ' → logprob: -5.557551383972168
    8. 'ms' → logprob: -6.307551383972168
    9. 'factor' → logprob: -6.682551383972168
    10. 'root' → logprob: -6.932551383972168

Token 955: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8911751508712769
    2. '           ' → logprob: -0.8911751508712769
    3. ':
' → logprob: -2.5161752700805664
    4. ',' → logprob: -3.2661752700805664
    5. '               ' → logprob: -4.391175270080566
    6. '       ' → logprob: -4.516175270080566
    7. 'else' → logprob: -5.016175270080566
    8. 'for' → logprob: -5.516175270080566
    9. '<|end|>' → logprob: -5.891175270080566
    10. 'n' → logprob: -6.141175270080566

Token 956: ' cache' (ID: 11956)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.68570876121521
    2. 'else' → logprob: -1.31070876121521
    3. 'this' → logprob: -2.31070876121521
    4. ' this' → logprob: -3.18570876121521
    5. ' self' → logprob: -3.68570876121521
    6. ' else' → logprob: -3.68570876121521
    7. 'n' → logprob: -3.81070876121521
    8. ' that' → logprob: -6.185708999633789
    9. 'the' → logprob: -6.560708999633789
    10. 't' → logprob: -6.685708999633789

Token 957: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11100709438323975
    2. '               ' → logprob: -2.6110072135925293
    3. 'return' → logprob: -4.111007213592529
    4. '       ' → logprob: -4.611007213592529
    5. ',' → logprob: -6.611007213592529
    6. ' return' → logprob: -6.611007213592529
    7. 'else' → logprob: -6.736007213592529
    8. 'for' → logprob: -8.486006736755371
    9. ' for' → logprob: -8.611006736755371
    10. '```' → logprob: -8.611006736755371

Token 958: ' continue' (ID: 4901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6747891902923584
    2. 'div' → logprob: -1.1747891902923584
    3. '           ' → logprob: -2.4247891902923584
    4. '#' → logprob: -2.6747891902923584
    5. 'pass' → logprob: -4.9247894287109375
    6. 'root' → logprob: -5.7997894287109375
    7. '               ' → logprob: -6.4247894287109375
    8. ' for' → logprob: -6.5497894287109375
    9. 'small' → logprob: -6.5497894287109375
    10. 'divider' → logprob: -6.5497894287109375

Token 959: ' factoring' (ID: 139906)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6826704740524292
    2. 'for' → logprob: -1.1826704740524292
    3. '       ' → logprob: -2.5576705932617188
    4. '               ' → logprob: -3.4326705932617188
    5. 'self' → logprob: -3.6826705932617188
    6. ' for' → logprob: -3.6826705932617188
    7. 'div' → logprob: -4.682670593261719
    8. 'n' → logprob: -4.932670593261719
    9. '
' → logprob: -6.182670593261719
    10. 'factor' → logprob: -6.432670593261719

Token 960: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3662683963775635
    2. '               ' → logprob: -1.6162683963775635
    3. '           ' → logprob: -2.4912683963775635
    4. 'else' → logprob: -4.991268157958984
    5. '```' → logprob: -4.991268157958984
    6. '
' → logprob: -5.616268157958984
    7. '<|end|>' → logprob: -6.366268157958984
    8. 'self' → logprob: -6.741268157958984
    9. 'n' → logprob: -6.866268157958984
    10. ',' → logprob: -7.116268157958984

Token 961: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025712696835398674
    2. 'else' → logprob: -4.400712490081787
    3. '       ' → logprob: -5.275712490081787
    4. '               ' → logprob: -5.525712490081787
    5. ' else' → logprob: -5.650712490081787
    6. '```' → logprob: -8.150712966918945
    7. ' for' → logprob: -8.900712966918945
    8. 'for' → logprob: -10.650712966918945
    9. ',' → logprob: -11.275712966918945
    10. 'self' → logprob: -11.775712966918945

Token 962: ' pass' (ID: 1853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26957967877388
    2. 'limit' → logprob: -1.5195796489715576
    3. 'div' → logprob: -5.019579887390137
    4. '           ' → logprob: -5.519579887390137
    5. '#' → logprob: -5.894579887390137
    6. 'pass' (adapté à ' pass') → logprob: -6.269579887390137
    7. '       ' → logprob: -7.519579887390137
    8. ' for' → logprob: -7.644579887390137
    9. 'factor' → logprob: -7.894579887390137
    10. 'ms' → logprob: -8.144579887390137

Token 963: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0632520243525505
    2. 'else' → logprob: -3.1882519721984863
    3. ' else' → logprob: -3.9382519721984863
    4. 'elif' → logprob: -8.188252449035645
    5. '```' → logprob: -8.688252449035645
    6. ' elif' → logprob: -10.063252449035645
    7. ' if' → logprob: -10.688252449035645
    8. ' for' → logprob: -10.938252449035645
    9. 'if' → logprob: -11.438252449035645
    10. '<|end|>' → logprob: -11.813252449035645

Token 964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.107307568192482
    2. 'else' → logprob: -2.4823076725006104
    3. ' else' → logprob: -4.107307434082031
    4. 'elif' → logprob: -6.607307434082031
    5. ' elif' → logprob: -9.107307434082031
    6. ' for' → logprob: -9.357307434082031
    7. '
' → logprob: -9.482307434082031
    8. '```' → logprob: -9.857307434082031
    9. 'for' → logprob: -10.607307434082031
    10. 'if' → logprob: -11.107307434082031

Token 965: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8005085587501526
    2. '       ' → logprob: -1.1755084991455078
    3. ' else' → logprob: -1.4255084991455078
    4. 'elif' → logprob: -6.550508499145508
    5. ' elif' → logprob: -7.925508499145508
    6. '
' → logprob: -10.925508499145508
    7. ' ' → logprob: -11.425508499145508
    8. '   ' → logprob: -11.675508499145508
    9. '```' → logprob: -12.050508499145508
    10. '	else' → logprob: -12.675508499145508

Token 966: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48163801431655884
    2. ':
' → logprob: -0.9816380143165588
    3. '       ' → logprob: -5.106637954711914
    4. '           ' → logprob: -6.856637954711914
    5. ',' → logprob: -8.981637954711914
    6. '<|end|>' → logprob: -9.356637954711914
    7. ' if' → logprob: -9.481637954711914
    8. '):
' → logprob: -10.356637954711914
    9. '<|end|>' → logprob: -10.731637954711914
    10. 'if' → logprob: -10.731637954711914

Token 967: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6029778122901917
    2. 'if' → logprob: -0.8529778122901917
    3. '       ' → logprob: -4.477977752685547
    4. ' if' → logprob: -4.852977752685547
    5. 'is' → logprob: -5.477977752685547
    6. 'for' → logprob: -6.102977752685547
    7. 'result' → logprob: -7.977977752685547
    8. 'ms' → logprob: -8.727977752685547
    9. '#' → logprob: -8.852977752685547
    10. 'self' → logprob: -8.852977752685547

Token 968: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032134840730577707
    2. 'is' (adapté à ' is') → logprob: -5.753213405609131
    3. '       ' → logprob: -11.128213882446289
    4. 'ms' → logprob: -11.378213882446289
    5. 'for' → logprob: -12.253213882446289
    6. '           ' → logprob: -13.378213882446289
    7. ' if' → logprob: -13.628213882446289
    8. 'result' → logprob: -13.628213882446289
    9. '#' → logprob: -14.628213882446289
    10. 'flag' → logprob: -15.503213882446289

Token 969: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.08232462406158447
    2. '_ms' → logprob: -2.582324504852295
    3. '_prime' → logprob: -5.707324504852295
    4. 'Monday' → logprob: -10.332324981689453
    5. '_true' → logprob: -10.457324981689453
    6. '_' → logprob: -11.457324981689453
    7. '_mon' → logprob: -12.207324981689453
    8. '_valid' → logprob: -12.332324981689453
    9. '_mc' → logprob: -12.332324981689453
    10. ' Monday' → logprob: -12.832324981689453

Token 970: 'sp' (ID: 1148)
  Prédit: 'onday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.030158406123518944
    2. '_m' → logprob: -3.530158519744873
    3. '_s' → logprob: -8.780158042907715
    4. 'Monday' → logprob: -9.405158042907715
    5. 'on' → logprob: -10.155158042907715
    6. '_ms' → logprob: -10.405158042907715
    7. 's' → logprob: -10.655158042907715
    8. 'm' → logprob: -11.280158042907715
    9. '_' → logprob: -11.280158042907715
    10. 'ond' → logprob: -11.405158042907715

Token 971: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008553704246878624
    2. ' =' → logprob: -5.758553504943848
    3. 'ime' → logprob: -5.758553504943848
    4. '_r' → logprob: -6.758553504943848
    5. '=' → logprob: -7.508553504943848
    6. 'rine' → logprob: -8.508553504943848
    7. '_prime' → logprob: -8.508553504943848
    8. '=True' → logprob: -10.633553504943848
    9. '_' → logprob: -10.883553504943848
    10. '```' → logprob: -11.258553504943848

Token 972: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -1.306760805164231e-05
    2. ' Monday' → logprob: -11.25001335144043
    3. 'Morning' → logprob: -18.25001335144043
    4. 'Tuesday' → logprob: -20.50001335144043
    5. '   ' → logprob: -20.75001335144043
    6. 'Mond' → logprob: -21.25001335144043
    7. '       ' → logprob: -21.50001335144043
    8. 'Moon' → logprob: -22.87501335144043
    9. 'Sunday' → logprob: -23.00001335144043
    10. 'Mont' → logprob: -23.37501335144043

Token 973: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -2.45848218582978e-06
    2. ' Saturday' → logprob: -13.75000286102295
    3. '_S' → logprob: -14.12500286102295
    4. 'Satellite' → logprob: -15.75000286102295
    5. '```' → logprob: -16.000001907348633
    6. '
' → logprob: -16.500001907348633
    7. 'Sunday' → logprob: -16.875001907348633
    8. 'Monday' → logprob: -17.250001907348633
    9. '_s' → logprob: -17.500001907348633
    10. '_' → logprob: -17.875001907348633

Token 974: 'Prime' (ID: 43017)
  Prédit: 'Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -1.3425219549390022e-05
    2. '_prime' → logprob: -11.62501335144043
    3. 'prime' → logprob: -12.37501335144043
    4. ' Prime' → logprob: -16.50001335144043
    5. ' prime' → logprob: -18.00001335144043
    6. '_Pr' → logprob: -19.00001335144043
    7. 'Pr' → logprob: -19.62501335144043
    8. 'Prim' → logprob: -20.25001335144043
    9. 'Prima' → logprob: -20.37501335144043
    10. 'Primer' → logprob: -20.37501335144043

Token 975: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -1.2471589798224159e-05
    2. 'is' → logprob: -11.375012397766113
    3. '.' → logprob: -14.250012397766113
    4. '   ' → logprob: -16.25001335144043
    5. ' .' → logprob: -16.75001335144043
    6. '._' → logprob: -17.00001335144043
    7. '=is' → logprob: -18.12501335144043
    8. ':is' → logprob: -18.37501335144043
    9. '`.' → logprob: -18.37501335144043
    10. '_is' → logprob: -18.62501335144043

Token 976: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.0280383548888494e-06
    2. 'Monday' → logprob: -14.000000953674316
    3. 'm' → logprob: -16.750001907348633
    4. '_' → logprob: -16.875001907348633
    5. '_s' → logprob: -18.500001907348633
    6. '_a' → logprob: -18.875001907348633
    7. 'a' → logprob: -19.500001907348633
    8. 's' → logprob: -19.750001907348633
    9. ' Monday' → logprob: -19.875001907348633
    10. '_is' → logprob: -19.875001907348633

Token 977: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.00034142236108891666
    2. 'm' → logprob: -8.750341415405273
    3. '_m' → logprob: -9.125341415405273
    4. 'on' → logprob: -10.000341415405273
    5. '_' → logprob: -11.125341415405273
    6. 'Monday' → logprob: -12.250341415405273
    7. '```' → logprob: -13.125341415405273
    8. 'ond' → logprob: -13.250341415405273
    9. '_on' → logprob: -14.500341415405273
    10. 'day' → logprob: -14.500341415405273

Token 978: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0031333938241004944
    2. '_sat' → logprob: -6.003133296966553
    3. 'Saturday' → logprob: -7.503133296966553
    4. 's' → logprob: -9.753133773803711
    5. '_prime' → logprob: -10.753133773803711
    6. ' saturday' → logprob: -11.378133773803711
    7. 'sat' → logprob: -12.878133773803711
    8. '```' → logprob: -13.128133773803711
    9. ' Saturday' → logprob: -13.253133773803711
    10. '_' → logprob: -13.253133773803711

Token 979: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.49925553798675537
    2. 'prime' → logprob: -0.9992555379867554
    3. '_prime' → logprob: -4.499255657196045
    4. 'at' → logprob: -5.624255657196045
    5. 'atellite' → logprob: -6.374255657196045
    6. '_' → logprob: -6.874255657196045
    7. 'p' → logprob: -6.999255657196045
    8. 'r' → logprob: -6.999255657196045
    9. 'unday' → logprob: -7.124255657196045
    10. '```' → logprob: -7.124255657196045

Token 980: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.9266199160483666e-05
    2. 'prime' → logprob: -10.875019073486328
    3. 'Prime' → logprob: -16.000019073486328
    4. '_pr' → logprob: -16.375019073486328
    5. '```' → logprob: -16.875019073486328
    6. '_true' → logprob: -17.875019073486328
    7. '_' → logprob: -17.875019073486328
    8. ' prime' → logprob: -18.500019073486328
    9. ' _' → logprob: -18.750019073486328
    10. '_p' → logprob: -18.750019073486328

Token 981: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -14.750000953674316
    4. '(
' → logprob: -17.125
    5. '(next' → logprob: -18.375
    6. 'n' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. '(noun' → logprob: -19.0
    9. '(num' → logprob: -19.875
    10. '(not' → logprob: -20.25

Token 982: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003115210449323058
    2. ')
' → logprob: -6.003115177154541
    3. '())' → logprob: -8.1281156539917
    4. '()' → logprob: -8.1281156539917
    5. '       ' → logprob: -11.2531156539917
    6. ' )' → logprob: -11.2531156539917
    7. ')
' → logprob: -11.8781156539917
    8. '()
' → logprob: -12.0031156539917
    9. '())
' → logprob: -12.3781156539917
    10. '           ' → logprob: -13.2531156539917

Token 983: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019307781476527452
    2. '       ' → logprob: -6.3769307136535645
    3. 'self' → logprob: -9.626931190490723
    4. '```' → logprob: -9.626931190490723
    5. '<|end|>' → logprob: -10.751931190490723
    6. '   ' → logprob: -10.751931190490723
    7. '               ' → logprob: -11.001931190490723
    8. '	       ' → logprob: -11.376931190490723
    9. '
' → logprob: -12.001931190490723
    10. ' self' → logprob: -12.376931190490723

Token 984: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06948592513799667
    2. '           ' → logprob: -2.819485902786255
    3. '       ' → logprob: -5.319486141204834
    4. ' self' → logprob: -6.069486141204834
    5. '   ' → logprob: -8.319485664367676
    6. '	self' → logprob: -10.319485664367676
    7. ' ' → logprob: -13.194485664367676
    8. '```' → logprob: -13.194485664367676
    9. '               ' → logprob: -14.569485664367676
    10. '	       ' → logprob: -14.819485664367676

Token 985: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.8624639324116288e-06
    2. '_ms' → logprob: -13.875001907348633
    3. '.' → logprob: -14.625001907348633
    4. '       ' → logprob: -15.875001907348633
    5. ')._' → logprob: -16.625001907348633
    6. ' .' → logprob: -17.000001907348633
    7. '->_' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '           ' → logprob: -17.250001907348633
    10. ']._' → logprob: -17.375001907348633

Token 986: 'ms' (ID: 1782)
  Prédit: 'ms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -2.2200749754119897e-06
    2. '_ms' → logprob: -13.125001907348633
    3. 'm' → logprob: -16.000001907348633
    4. ' ms' → logprob: -18.000001907348633
    5. '_m' → logprob: -18.375001907348633
    6. 'м' → logprob: -20.000001907348633
    7. 'mc' → logprob: -20.125001907348633
    8. 'if' → logprob: -21.125001907348633
    9. '
' → logprob: -21.375001907348633
    10. '_' → logprob: -21.500001907348633

Token 987: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00011081460979767144
    2. 'prime' → logprob: -9.125110626220703
    3. 'Prime' → logprob: -14.500110626220703
    4. '_pr' → logprob: -14.625110626220703
    5. 'p' → logprob: -15.000110626220703
    6. '_p' → logprob: -15.375110626220703
    7. '_' → logprob: -15.750110626220703
    8. 'pr' → logprob: -16.250110626220703
    9. '\' → logprob: -16.375110626220703
    10. '```' → logprob: -17.375110626220703

Token 988: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -4.246537173457909e-06
    2. 'cache' → logprob: -13.000003814697266
    3. 'Cache' → logprob: -14.000003814697266
    4. '_CACHE' → logprob: -15.125003814697266
    5. '_cached' → logprob: -15.250003814697266
    6. '           ' → logprob: -15.375003814697266
    7. '       ' → logprob: -15.625003814697266
    8. '-cache' → logprob: -17.750003814697266
    9. '   ' → logprob: -17.875003814697266
    10. ' =' → logprob: -18.375003814697266

Token 989: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. 'n' → logprob: -16.625001907348633
    4. ' [' → logprob: -17.500001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '[
' → logprob: -20.000001907348633
    7. '	n' → logprob: -20.375001907348633
    8. '```' → logprob: -20.375001907348633
    9. '=n' → logprob: -20.500001907348633
    10. '
' → logprob: -20.625001907348633

Token 990: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619712732732296
    2. ' =' → logprob: -2.8119711875915527
    3. ']' → logprob: -13.061971664428711
    4. ']=' → logprob: -13.436971664428711
    5. ')' → logprob: -17.93697166442871
    6. ')=' → logprob: -18.06197166442871
    7. '=True' → logprob: -18.18697166442871
    8. '=
' → logprob: -20.31197166442871
    9. '[' → logprob: -20.43697166442871
    10. '＝' → logprob: -20.93697166442871

Token 991: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '=True' → logprob: -20.754077911376953
    4. '=}' → logprob: -21.004077911376953
    5. '＝' → logprob: -21.379077911376953
    6. '.=' → logprob: -21.629077911376953
    7. '=
' → logprob: -21.629077911376953
    8. '=

' → logprob: -21.879077911376953
    9. '   ' → logprob: -22.254077911376953
    10. ')=' → logprob: -23.754077911376953

Token 992: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004078401252627373
    2. ' is' → logprob: -5.504078388214111
    3. '           ' → logprob: -21.379077911376953
    4. '	is' → logprob: -21.379077911376953
    5. '   ' → logprob: -22.754077911376953
    6. '(is' → logprob: -23.129077911376953
    7. 'bool' → logprob: -23.254077911376953
    8. 'isat' → logprob: -23.879077911376953
    9. '               ' → logprob: -24.254077911376953
    10. '       ' → logprob: -24.379077911376953

Token 993: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -5.180879816180095e-05
    2. '_' → logprob: -9.875051498413086
    3. '_ms' → logprob: -16.375051498413086
    4. ' _' → logprob: -16.500051498413086
    5. '_mp' → logprob: -17.375051498413086
    6. 'm' → logprob: -17.750051498413086
    7. '_mc' → logprob: -18.000051498413086
    8. '_s' → logprob: -18.000051498413086
    9. '_
' → logprob: -18.500051498413086
    10. '\' → logprob: -18.625051498413086

Token 994: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.005762407090514898
    2. 's' → logprob: -5.505762577056885
    3. 'p' → logprob: -6.505762577056885
    4. '_sp' → logprob: -9.380762100219727
    5. 'm' → logprob: -11.130762100219727
    6. '_s' → logprob: -11.380762100219727
    7. 'spart' → logprob: -11.755762100219727
    8. 'sap' → logprob: -11.880762100219727
    9. 'ap' → logprob: -12.505762100219727
    10. 'SP' → logprob: -12.630762100219727

Token 995: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02641698718070984
    2. '       ' → logprob: -3.6514170169830322
    3. '
' → logprob: -10.276416778564453
    4. '   ' → logprob: -10.401416778564453
    5. '```' → logprob: -10.901416778564453
    6. '<|end|>' → logprob: -11.276416778564453
    7. '               ' → logprob: -12.026416778564453
    8. 'if' → logprob: -12.151416778564453
    9. '	       ' → logprob: -13.276416778564453
    10. ' if' → logprob: -13.276416778564453

Token 996: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07117761671543121
    2. '       ' → logprob: -2.6961777210235596
    3. '   ' → logprob: -7.3211774826049805
    4. '```' → logprob: -8.07117748260498
    5. '
' → logprob: -9.19617748260498
    6. 'if' → logprob: -9.57117748260498
    7. '<|end|>' → logprob: -10.19617748260498
    8. ' if' → logprob: -11.07117748260498
    9. '               ' → logprob: -11.32117748260498
    10. ' ' → logprob: -11.94617748260498

Token 997: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001025895617203787
    2. '       ' → logprob: -9.750102996826172
    3. '           ' → logprob: -10.500102996826172
    4. ' if' → logprob: -11.000102996826172
    5. '   ' → logprob: -18.625102996826172
    6. 'If' → logprob: -20.125102996826172
    7. 'return' → logprob: -20.125102996826172
    8. '	if' → logprob: -20.250102996826172
    9. '
' → logprob: -20.375102996826172
    10. '```' → logprob: -21.500102996826172

Token 998: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0036032749339938164
    2. ' is' → logprob: -5.628603458404541
    3. 'not' → logprob: -12.878602981567383
    4. '   ' → logprob: -15.253602981567383
    5. ' not' → logprob: -15.503602981567383
    6. '	is' → logprob: -16.628602981567383
    7. 'n' → logprob: -17.003602981567383
    8. '           ' → logprob: -17.503602981567383
    9. '       ' → logprob: -18.253602981567383
    10. ' ' → logprob: -18.378602981567383

Token 999: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.856408536899835e-05
    2. '_' → logprob: -10.625028610229492
    3. '_s' → logprob: -13.625028610229492
    4. ':' → logprob: -14.000028610229492
    5. 'm' → logprob: -14.000028610229492
    6. '_n' → logprob: -14.500028610229492
    7. 's' → logprob: -14.750028610229492
    8. ' ' → logprob: -16.625028610229492
    9. '_:' → logprob: -16.625028610229492
    10. 'n' → logprob: -16.750028610229492

Token 1000: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.013262701220810413
    2. 'p' → logprob: -4.763262748718262
    3. 's' → logprob: -5.388262748718262
    4. '_sp' → logprob: -10.138262748718262
    5. '_s' → logprob: -11.263262748718262
    6. 'SP' → logprob: -11.763262748718262
    7. 'm' → logprob: -13.138262748718262
    8. '_p' → logprob: -13.263262748718262
    9. 'spart' → logprob: -14.138262748718262
    10. '   ' → logprob: -14.388262748718262

Token 1001: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42909175157546997
    2. ':
' → logprob: -1.5540916919708252
    3. '               ' → logprob: -2.679091691970825
    4. '           ' → logprob: -2.679091691970825
    5. ',' → logprob: -10.054091453552246
    6. '):
' → logprob: -10.179091453552246
    7. '       ' → logprob: -10.179091453552246
    8. ' and' → logprob: -10.304091453552246
    9. '<|end|>' → logprob: -10.554091453552246
    10. '=True' → logprob: -10.929091453552246

Token 1002: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18575221300125122
    2. 'f' → logprob: -1.9357521533966064
    3. '           ' → logprob: -3.6857521533966064
    4. '       ' → logprob: -9.685751914978027
    5. ' factors' → logprob: -9.810751914978027
    6. '```' → logprob: -12.935751914978027
    7. '   ' → logprob: -13.185751914978027
    8. '(f' → logprob: -13.560751914978027
    9. ',f' → logprob: -14.310751914978027
    10. '              ' → logprob: -14.310751914978027

Token 1003: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003876550472341478
    2. ' factors' → logprob: -8.000387191772461
    3. '           ' → logprob: -10.000387191772461
    4. '               ' → logprob: -12.000387191772461
    5. '       ' → logprob: -14.375387191772461
    6. '   ' → logprob: -17.12538719177246
    7. '	f' → logprob: -17.12538719177246
    8. ' f' → logprob: -17.62538719177246
    9. 'factor' → logprob: -17.62538719177246
    10. '_f' → logprob: -17.75038719177246

Token 1004: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.125001907348633
    3. '.update' → logprob: -15.625001907348633
    4. '.Add' → logprob: -18.125001907348633
    5. '.setdefault' → logprob: -18.375001907348633
    6. '.append' → logprob: -18.875001907348633
    7. 'add' → logprob: -18.875001907348633
    8. ' .' → logprob: -20.250001907348633
    9. '.insert' → logprob: -20.750001907348633
    10. '.clear' → logprob: -21.125001907348633

Token 1005: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002615742268972099
    2. 'n' → logprob: -8.250261306762695
    3. '(' → logprob: -15.250261306762695
    4. '(
' → logprob: -16.625261306762695
    5. ' n' → logprob: -17.125261306762695
    6. ' (' → logprob: -20.500261306762695
    7. '	n' → logprob: -20.750261306762695
    8. '   ' → logprob: -23.750261306762695
    9. '(

' → logprob: -23.750261306762695
    10. '_n' → logprob: -24.000261306762695

Token 1006: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17984440922737122
    2. '           ' → logprob: -1.8048443794250488
    3. 'return' → logprob: -9.804844856262207
    4. '       ' → logprob: -11.179844856262207
    5. ')' → logprob: -11.929844856262207
    6. '                   ' → logprob: -12.429844856262207
    7. '<|end|>' → logprob: -12.429844856262207
    8. '	           ' → logprob: -12.679844856262207
    9. ')return' → logprob: -12.929844856262207
    10. '
' → logprob: -13.054844856262207

Token 1007: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06060779094696045
    2. '       ' → logprob: -2.93560791015625
    3. 'else' → logprob: -5.18560791015625
    4. '               ' → logprob: -10.43560791015625
    5. ' else' → logprob: -10.68560791015625
    6. '   ' → logprob: -10.81060791015625
    7. '```' → logprob: -11.06060791015625
    8. 'elif' → logprob: -11.56060791015625
    9. 'return' → logprob: -11.81060791015625
    10. 'import' → logprob: -11.93560791015625

Token 1008: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005500310566276312
    2. '               ' → logprob: -5.255500316619873
    3. ' return' → logprob: -8.255499839782715
    4. '           ' → logprob: -12.005499839782715
    5. '   ' → logprob: -15.755499839782715
    6. '                   ' → logprob: -15.880499839782715
    7. '
' → logprob: -16.38050079345703
    8. '	return' → logprob: -17.25550079345703
    9. '       ' → logprob: -17.50550079345703
    10. '{return' → logprob: -18.13050079345703

Token 1009: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002034038072451949
    2. '
' → logprob: -6.5020341873168945
    3. '           ' → logprob: -8.627034187316895
    4. 'else' → logprob: -8.877034187316895
    5. 'if' → logprob: -9.002034187316895
    6. 'n' → logprob: -10.877034187316895
    7. '        
' → logprob: -10.877034187316895
    8. '```' → logprob: -11.002034187316895
    9. 'for' → logprob: -11.127034187316895
    10. 'elif' → logprob: -12.127034187316895

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025084958178922534
    2. '
' → logprob: -9.375250816345215
    3. 'else' → logprob: -9.625250816345215
    4. '```' → logprob: -10.000250816345215
    5. 'if' → logprob: -10.500250816345215
    6. '           ' → logprob: -12.125250816345215
    7. 'n' → logprob: -12.250250816345215
    8. 'for' → logprob: -12.500250816345215
    9. '        
' → logprob: -12.625250816345215
    10. 'elif' → logprob: -12.875250816345215

Token 1011: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.62834233045578
    2. '       ' → logprob: -0.87834233045578
    3. 'limit' → logprob: -3.003342390060425
    4. 'div' → logprob: -7.878342151641846
    5. '#' (adapté à ' #') → logprob: -8.128342628479004
    6. 'next' → logprob: -8.253342628479004
    7. '```' → logprob: -8.378342628479004
    8. 'else' → logprob: -9.503342628479004
    9. 'factor' → logprob: -10.003342628479004
    10. ' for' → logprob: -10.378342628479004

Token 1012: ' Find' (ID: 9764)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.3871457874774933
    2. 'for' → logprob: -1.137145757675171
    3. '#' → logprob: -8.63714599609375
    4. '       ' → logprob: -9.38714599609375
    5. 'lim' → logprob: -12.13714599609375
    6. 'factor' → logprob: -12.88714599609375
    7. '   ' → logprob: -13.13714599609375
    8. ' for' → logprob: -14.26214599609375
    9. ' limit' → logprob: -14.51214599609375
    10. 'max' → logprob: -14.63714599609375

Token 1013: ' a' (ID: 261)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.32014334201812744
    2. 'for' → logprob: -1.3201433420181274
    3. 'factor' → logprob: -5.570143222808838
    4. 'div' → logprob: -6.570143222808838
    5. 'candidate' → logprob: -7.070143222808838
    6. '   ' → logprob: -7.445143222808838
    7. 'ms' → logprob: -9.320143699645996
    8. '       ' → logprob: -10.320143699645996
    9. 'prime' → logprob: -10.445143699645996
    10. ' for' → logprob: -10.695143699645996

Token 1014: ' MS' (ID: 15861)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.46415212750434875
    2. 'for' → logprob: -1.2141520977020264
    3. 'factor' → logprob: -2.8391520977020264
    4. ' divisor' → logprob: -4.5891523361206055
    5. 'ms' → logprob: -6.3391523361206055
    6. 'candidate' → logprob: -6.5891523361206055
    7. 'divider' → logprob: -7.2141523361206055
    8. '#' → logprob: -7.5891523361206055
    9. 'prime' → logprob: -7.9641523361206055
    10. ' for' → logprob: -8.089152336120605

Token 1015: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.025908445939421654
    2. 'div' → logprob: -3.7759084701538086
    3. 'for' → logprob: -6.275908470153809
    4. 'candidate' → logprob: -7.900908470153809
    5. 'factor' → logprob: -9.025908470153809
    6. ' divisor' → logprob: -9.150908470153809
    7. '       ' → logprob: -9.775908470153809
    8. ' prime' → logprob: -9.900908470153809
    9. '_prime' → logprob: -10.650908470153809
    10. '#' → logprob: -11.150908470153809

Token 1016: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.25858479738235474
    2. 'factor' → logprob: -1.63358473777771
    3. ' divisor' → logprob: -3.63358473777771
    4. '       ' → logprob: -6.258584976196289
    5. 'divider' → logprob: -6.633584976196289
    6. '   ' → logprob: -6.633584976196289
    7. 'candidate' → logprob: -7.133584976196289
    8. '_div' → logprob: -7.383584976196289
    9. 'for' → logprob: -9.883584976196289
    10. ' factor' → logprob: -9.883584976196289

Token 1017: ' other' (ID: 1273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011188744247192517
    2. 'for' → logprob: -9.50011157989502
    3. ' for' → logprob: -10.87511157989502
    4. ',' → logprob: -11.50011157989502
    5. '
' → logprob: -12.50011157989502
    6. ':' → logprob: -14.12511157989502
    7. '#' → logprob: -14.25011157989502
    8. 'limit' → logprob: -14.50011157989502
    9. '        
' → logprob: -14.75011157989502
    10. '   ' → logprob: -14.75011157989502

Token 1018: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.05523485690355301
    2. ' than' → logprob: -2.930234909057617
    3. '_than' → logprob: -8.430234909057617
    4. '       ' → logprob: -9.305234909057617
    5. '=' → logprob: -11.180234909057617
    6. 'wise' → logprob: -11.680234909057617
    7. 'Than' → logprob: -12.430234909057617
    8. 'that' → logprob: -12.680234909057617
    9. '```' → logprob: -12.930234909057617
    10. 'for' → logprob: -13.555234909057617

Token 1019: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -11.000024795532227
    3. 'n' → logprob: -11.875024795532227
    4. '
' → logprob: -14.625024795532227
    5. '```' → logprob: -16.250024795532227
    6. '...' → logprob: -17.125024795532227
    7. '`' → logprob: -17.250024795532227
    8. 'one' → logprob: -17.500024795532227
    9. ' n' → logprob: -17.750024795532227
    10. '

' → logprob: -17.875024795532227

Token 1020: ' itself' (ID: 8807)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005072805215604603
    2. ',' → logprob: -8.625507354736328
    3. 'limit' → logprob: -8.750507354736328
    4. ' limit' → logprob: -9.875507354736328
    5. ' for' → logprob: -10.125507354736328
    6. 'for' → logprob: -10.250507354736328
    7. '
' → logprob: -10.500507354736328
    8. '        
' → logprob: -12.625507354736328
    9. '```' → logprob: -12.750507354736328
    10. '(limit' → logprob: -13.000507354736328

Token 1021: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.56364209135063e-05
    2. '
' → logprob: -10.125065803527832
    3. 'limit' → logprob: -11.875065803527832
    4. '```' → logprob: -11.875065803527832
    5. ',' → logprob: -12.625065803527832
    6. 'for' → logprob: -12.875065803527832
    7. '        
' → logprob: -13.500065803527832
    8. ' limit' → logprob: -13.625065803527832
    9. ' for' → logprob: -13.750065803527832
    10. '   ' → logprob: -14.125065803527832

Token 1022: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.895480277715251e-06
    2. '
' → logprob: -12.375008583068848
    3. 'for' → logprob: -13.500008583068848
    4. '   ' → logprob: -13.875008583068848
    5. ' for' → logprob: -14.375008583068848
    6. ',' → logprob: -14.500008583068848
    7. 'limit' → logprob: -14.750008583068848
    8. '```' → logprob: -15.000008583068848
    9. ' limit' → logprob: -15.750008583068848
    10. '           ' → logprob: -15.875008583068848

Token 1023: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' (adapté à ' limit') → logprob: -0.03149949759244919
    2. '       ' → logprob: -3.6564993858337402
    3. 'for' → logprob: -5.28149938583374
    4. ' limit' → logprob: -9.656499862670898
    5. '```' → logprob: -10.906499862670898
    6. '   ' → logprob: -11.406499862670898
    7. ' for' → logprob: -12.406499862670898
    8. '(limit' → logprob: -14.406499862670898
    9. '_limit' → logprob: -14.781499862670898
    10. 'lim' → logprob: -14.781499862670898

Token 1024: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869049549102783
    2. '=' → logprob: -1.1369049549102783
    3. '   ' → logprob: -11.3869047164917
    4. '=int' → logprob: -11.3869047164917
    5. '       ' → logprob: -11.6369047164917
    6. '```' → logprob: -14.3869047164917
    7. ':' → logprob: -14.5119047164917
    8. '    ' → logprob: -15.1369047164917
    9. ' ' → logprob: -15.2619047164917
    10. ',' → logprob: -15.7619047164917

Token 1025: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001584850688232109
    2. ' int' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.375158309936523
    4. '(int' → logprob: -18.250158309936523
    5. '	int' → logprob: -18.375158309936523
    6. '       ' → logprob: -18.875158309936523
    7. '```' → logprob: -19.625158309936523
    8. '<int' → logprob: -20.875158309936523
    9. '[int' → logprob: -20.875158309936523
    10. '=int' → logprob: -21.375158309936523

Token 1026: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004081128165125847
    2. 'n' → logprob: -5.5040812492370605
    3. '(' → logprob: -12.879080772399902
    4. ' n' → logprob: -16.37908172607422
    5. '	n' → logprob: -16.50408172607422
    6. '(
' → logprob: -17.37908172607422
    7. ' (' → logprob: -17.75408172607422
    8. '_n' → logprob: -18.50408172607422
    9. 'sqrt' → logprob: -18.62908172607422
    10. '(s' → logprob: -18.62908172607422

Token 1027: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03806673735380173
    2. ' **' → logprob: -3.2880666255950928
    3. '(n' → logprob: -10.788066864013672
    4. 'n' → logprob: -13.413066864013672
    5. '```' → logprob: -13.538066864013672
    6. '^' → logprob: -14.413066864013672
    7. '(' → logprob: -15.163066864013672
    8. '
' → logprob: -15.788066864013672
    9. '   ' → logprob: -16.163066864013672
    10. '*' → logprob: -16.538066864013672

Token 1028: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '.' → logprob: -16.75
    4. '(' → logprob: -17.75
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '2' → logprob: -20.375
    8. '{' → logprob: -21.375
    9. '     ' → logprob: -21.75
    10. '۰' → logprob: -21.875

Token 1029: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.000004768371582
    4. '(' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '```' → logprob: -18.500003814697266
    7. ' .' → logprob: -19.250003814697266
    8. '{' → logprob: -19.500003814697266
    9. '     ' → logprob: -20.250003814697266
    10. '    ' → logprob: -20.250003814697266

Token 1030: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1269427090883255
    2. '0' → logprob: -2.1269426345825195
    3. '```' → logprob: -11.87694263458252
    4. '2' → logprob: -12.25194263458252
    5. ' .' → logprob: -14.62694263458252
    6. '(' → logprob: -14.62694263458252
    7. ')' → logprob: -14.87694263458252
    8. '       ' → logprob: -15.62694263458252
    9. '.py' → logprob: -15.75194263458252
    10. '**' → logprob: -15.87694263458252

Token 1031: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.34965795278549194
    2. '0' → logprob: -1.2246580123901367
    3. '.' → logprob: -6.724658012390137
    4. '```' → logprob: -12.224658012390137
    5. ' ' → logprob: -13.224658012390137
    6. '2' → logprob: -14.599658012390137
    7. '50' → logprob: -14.724658012390137
    8. '52' → logprob: -14.724658012390137
    9. '500' → logprob: -14.974658012390137
    10. '53' → logprob: -14.974658012390137

Token 1032: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000591874762903899
    2. '())' → logprob: -8.000592231750488
    3. ')+' → logprob: -8.500592231750488
    4. '()' → logprob: -9.875592231750488
    5. ' )' → logprob: -14.125592231750488
    6. '   ' → logprob: -14.875592231750488
    7. '       ' → logprob: -15.750592231750488
    8. '+' → logprob: -16.250591278076172
    9. '```' → logprob: -16.375591278076172
    10. ')
' → logprob: -16.625591278076172

Token 1033: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741489291191101
    2. ' +' → logprob: -0.9741489291191101
    3. '       ' → logprob: -9.849148750305176
    4. '   ' → logprob: -12.349148750305176
    5. '+
' → logprob: -12.599148750305176
    6. ')' → logprob: -12.724148750305176
    7. '
' → logprob: -12.849148750305176
    8. '```' → logprob: -13.099148750305176
    9. ')+' → logprob: -13.224148750305176
    10. '()+' → logprob: -14.349148750305176

Token 1034: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '2' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.375003814697266
    5. '```' → logprob: -16.375003814697266
    6. '           ' → logprob: -17.000003814697266
    7. '       ' → logprob: -17.750003814697266
    8. '(' → logprob: -18.250003814697266
    9. '               ' → logprob: -19.750003814697266
    10. '
' → logprob: -20.000003814697266

Token 1035: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '2' → logprob: -11.750008583068848
    3. ' ' → logprob: -14.875008583068848
    4. '   ' → logprob: -18.12500762939453
    5. '```' → logprob: -18.25000762939453
    6. '(' → logprob: -20.00000762939453
    7. '
' → logprob: -20.37500762939453
    8. '0' → logprob: -21.00000762939453
    9. '  ' → logprob: -21.31250762939453
    10. '       ' → logprob: -21.62500762939453

Token 1036: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009372817352414131
    2. 'for' → logprob: -5.634372711181641
    3. '
' → logprob: -5.884372711181641
    4. ' for' → logprob: -6.009372711181641
    5. '   ' → logprob: -7.759372711181641
    6. ',' → logprob: -10.38437271118164
    7. '        
' → logprob: -10.75937271118164
    8. '```' → logprob: -11.25937271118164
    9. '	for' → logprob: -12.13437271118164
    10. '           ' → logprob: -12.25937271118164

Token 1037: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06108449399471283
    2. '       ' → logprob: -2.936084508895874
    3. ' for' → logprob: -5.311084270477295
    4. '   ' → logprob: -6.936084270477295
    5. '```' → logprob: -8.311084747314453
    6. '	for' → logprob: -10.686084747314453
    7. 'tokens' → logprob: -14.061084747314453
    8. '<|end|>' → logprob: -14.186084747314453
    9. '           ' → logprob: -14.561084747314453
    10. '
' → logprob: -14.686084747314453

Token 1038: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002407282590866089
    2. '       ' → logprob: -8.500240325927734
    3. ' for' → logprob: -10.625240325927734
    4. 'c' → logprob: -11.375240325927734
    5. '```' → logprob: -13.750240325927734
    6. '   ' → logprob: -15.625240325927734
    7. '	for' → logprob: -16.125240325927734
    8. 'found' → logprob: -17.000240325927734
    9. 'candidate' → logprob: -17.500240325927734
    10. '``' → logprob: -18.000240325927734

Token 1039: ' d' (ID: 272)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.04127319157123566
    2. 'div' → logprob: -3.2912731170654297
    3. 'd' → logprob: -5.79127311706543
    4. 'factor' → logprob: -9.91627311706543
    5. 'cand' → logprob: -10.04127311706543
    6. ' candidate' → logprob: -10.41627311706543
    7. 'ms' → logprob: -10.91627311706543
    8. ' divisor' → logprob: -11.54127311706543
    9. 'x' → logprob: -11.91627311706543
    10. 'i' → logprob: -12.16627311706543

Token 1040: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931508779525757
    2. ' in' → logprob: -0.6931508779525757
    3. ' ' → logprob: -13.318150520324707
    4. 'n' → logprob: -14.318150520324707
    5. 'i' → logprob: -15.568150520324707
    6. '	in' → logprob: -15.693150520324707
    7. 'k' → logprob: -15.818150520324707
    8. '   ' → logprob: -15.818150520324707
    9. ' ' → logprob: -15.818150520324707
    10. 'd' → logprob: -16.193151473999023

Token 1041: ' _' (ID: 1175)
  Prédit: '_generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generate' → logprob: -6.790129555156454e-05
    2. '_generated' → logprob: -9.875067710876465
    3. ' _' → logprob: -11.750067710876465
    4. '_m' → logprob: -12.500067710876465
    5. '_generator' → logprob: -13.375067710876465
    6. '_gener' → logprob: -13.875067710876465
    7. 'range' → logprob: -14.625067710876465
    8. '_range' → logprob: -14.750067710876465
    9. '_gen' → logprob: -15.000067710876465
    10. '_M' → logprob: -15.750067710876465

Token 1042: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.2549085319042206
    2. '_generate' → logprob: -1.504908561706543
    3. 'range' → logprob: -5.879908561706543
    4. 'd' → logprob: -9.129908561706543
    5. '7' → logprob: -9.754908561706543
    6. 'Generate' → logprob: -11.504908561706543
    7. ' generate' → logprob: -14.254908561706543
    8. 'enerate' → logprob: -14.504908561706543
    9. '(generate' → logprob: -14.879908561706543
    10. 'def' → logprob: -15.129908561706543

Token 1043: '_m' (ID: 1285)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20458948612213135
    2. '_m' → logprob: -1.7045894861221313
    3. 'Monday' → logprob: -6.579589366912842
    4. 'd' → logprob: -6.704589366912842
    5. '(d' → logprob: -8.20458984375
    6. '(m' → logprob: -8.95458984375
    7. '(' → logprob: -10.07958984375
    8. 'mond' → logprob: -10.57958984375
    9. '```' → logprob: -11.07958984375
    10. ' monday' → logprob: -11.07958984375

Token 1044: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.6223112940788269
    2. '_m' → logprob: -1.1223113536834717
    3. 'm' → logprob: -1.9973113536834717
    4. 'Monday' → logprob: -6.747311115264893
    5. '```' → logprob: -8.24731159210205
    6. 'on' → logprob: -8.62231159210205
    7. '(m' → logprob: -8.87231159210205
    8. '7' → logprob: -8.99731159210205
    9. ' monday' → logprob: -10.49731159210205
    10. 'mond' → logprob: -10.87231159210205

Token 1045: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00011188744247192517
    2. 's' → logprob: -9.87511157989502
    3. '_sat' → logprob: -10.12511157989502
    4. 'Saturday' → logprob: -11.87511157989502
    5. '_m' → logprob: -12.00011157989502
    6. '```' → logprob: -13.00011157989502
    7. '(' → logprob: -13.50011157989502
    8. 'm' → logprob: -14.00011157989502
    9. ')_' → logprob: -15.12511157989502
    10. ')' → logprob: -15.25011157989502

Token 1046: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -3.666993507067673e-05
    2. 'Saturday' → logprob: -11.125036239624023
    3. '7' → logprob: -12.750036239624023
    4. '_' → logprob: -12.875036239624023
    5. '```' → logprob: -12.875036239624023
    6. 'atellite' → logprob: -12.875036239624023
    7. 'at' → logprob: -13.250036239624023
    8. 's' → logprob: -13.500036239624023
    9. 'unday' → logprob: -13.625036239624023
    10. '{' → logprob: -13.625036239624023

Token 1047: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.07006892561912537
    2. 'numbers' → logprob: -2.695068836212158
    3. '```' → logprob: -10.070069313049316
    4. 's' → logprob: -10.320069313049316
    5. 'umbers' → logprob: -10.820069313049316
    6. 'up' → logprob: -10.945069313049316
    7. '_up' → logprob: -11.445069313049316
    8. 'Numbers' → logprob: -12.570069313049316
    9. ' numbers' → logprob: -13.570069313049316
    10. '_number' → logprob: -14.070069313049316

Token 1048: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -4.251091377227567e-05
    2. 'up' → logprob: -10.125042915344238
    3. '```' → logprob: -14.000042915344238
    4. '_u' → logprob: -14.375042915344238
    5. '_to' → logprob: -14.375042915344238
    6. 'upt' → logprob: -16.000041961669922
    7. '(up' → logprob: -16.375041961669922
    8. '`' → logprob: -17.000041961669922
    9. '_down' → logprob: -17.500041961669922
    10. '_UP' → logprob: -17.500041961669922

Token 1049: '_to' (ID: 5089)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01680867187678814
    2. '(limit' → logprob: -4.51680850982666
    3. 'limit' → logprob: -6.26680850982666
    4. '```' → logprob: -6.39180850982666
    5. '       ' → logprob: -7.51680850982666
    6. 'pto' → logprob: -7.76680850982666
    7. '(p' → logprob: -8.26680850982666
    8. '(' → logprob: -8.26680850982666
    9. '   ' → logprob: -8.89180850982666
    10. 'pt' → logprob: -9.14180850982666

Token 1050: '(limit' (ID: 112473)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0032131264451891184
    2. '(limit' → logprob: -5.753212928771973
    3. ' limit' → logprob: -10.253212928771973
    4. 'lim' → logprob: -16.62821388244629
    5. '```' → logprob: -17.00321388244629
    6. '_limit' → logprob: -17.37821388244629
    7. '.limit' → logprob: -18.37821388244629
    8. '       ' → logprob: -18.75321388244629
    9. ')' → logprob: -19.00321388244629
    10. '
' → logprob: -19.25321388244629

Token 1051: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5884990096092224
    2. ':' → logprob: -1.0884990692138672
    3. '):
' → logprob: -2.963499069213867
    4. '       ' → logprob: -3.213499069213867
    5. '():
' → logprob: -4.588499069213867
    6. '):' → logprob: -5.713499069213867
    7. '           ' → logprob: -6.838499069213867
    8. '():' → logprob: -7.338499069213867
    9. '```' → logprob: -8.088499069213867
    10. 'd' → logprob: -8.838499069213867

Token 1052: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15141414105892181
    2. ':' → logprob: -2.026414155960083
    3. ' if' → logprob: -5.651413917541504
    4. ':
' → logprob: -5.776413917541504
    5. '           ' → logprob: -7.026413917541504
    6. '<|end|>' → logprob: -7.776413917541504
    7. '[' → logprob: -8.901413917541504
    8. 'if' → logprob: -8.901413917541504
    9. '   ' → logprob: -9.026413917541504
    10. ',' → logprob: -9.526413917541504

Token 1053: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7739330530166626
    2. 'if' (adapté à ' if') → logprob: -0.8989330530166626
    3. ' if' → logprob: -2.398932933807373
    4. '       ' → logprob: -3.273932933807373
    5. '   ' → logprob: -6.398932933807373
    6. '               ' → logprob: -7.148932933807373
    7. '	       ' → logprob: -7.898932933807373
    8. '	if' → logprob: -8.523933410644531
    9. '		' → logprob: -10.523933410644531
    10. '<|end|>' → logprob: -11.023933410644531

Token 1054: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006030111573636532
    2. 'n' → logprob: -5.131030082702637
    3. ' d' → logprob: -9.256030082702637
    4. ' n' → logprob: -13.256030082702637
    5. '	d' → logprob: -13.506030082702637
    6. '   ' → logprob: -13.756030082702637
    7. '1' → logprob: -14.256030082702637
    8. ' ' → logprob: -16.131031036376953
    9. '       ' → logprob: -16.381031036376953
    10. '_d' → logprob: -16.381031036376953

Token 1055: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8101620674133301
    2. '>=' → logprob: -0.9351620674133301
    3. '==' → logprob: -2.18516206741333
    4. '!=' → logprob: -3.81016206741333
    5. ' >=' → logprob: -4.68516206741333
    6. ' ==' → logprob: -4.81016206741333
    7. ' >' → logprob: -5.18516206741333
    8. ' !=' → logprob: -5.81016206741333
    9. '>d' → logprob: -7.31016206741333
    10. 'd' → logprob: -7.56016206741333

Token 1056: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.465036105713807e-06
    2. ' n' → logprob: -11.875007629394531
    3. 'number' → logprob: -15.125007629394531
    4. '2' → logprob: -16.37500762939453
    5. 'int' → logprob: -18.00000762939453
    6. '	n' → logprob: -18.37500762939453
    7. '   ' → logprob: -18.75000762939453
    8. '10' → logprob: -18.75000762939453
    9. '9' → logprob: -19.00000762939453
    10. '1' → logprob: -19.25000762939453

Token 1057: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03636537864804268
    2. 'and' → logprob: -3.786365270614624
    3. '           ' → logprob: -4.661365509033203
    4. '               ' → logprob: -6.536365509033203
    5. ' or' → logprob: -6.911365509033203
    6. ':
' → logprob: -7.286365509033203
    7. ':' → logprob: -7.786365509033203
    8. '<|end|>' → logprob: -11.411365509033203
    9. '                       ' → logprob: -12.161365509033203
    10. '       ' → logprob: -12.786365509033203

Token 1058: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03138190135359764
    2. ' and' → logprob: -4.031382083892822
    3. '           ' → logprob: -4.781382083892822
    4. ':
' → logprob: -6.281382083892822
    5. ':' → logprob: -7.031382083892822
    6. 'and' → logprob: -7.281382083892822
    7. ' if' → logprob: -7.531382083892822
    8. ' or' → logprob: -8.156381607055664
    9. '```' → logprob: -8.906381607055664
    10. 'if' → logprob: -9.281381607055664

Token 1059: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16157282888889313
    2. 'continue' → logprob: -2.4115729331970215
    3. '           ' → logprob: -3.7865729331970215
    4. ' continue' → logprob: -4.6615729331970215
    5. ':
' → logprob: -4.7865729331970215
    6. 'break' (adapté à ' break') → logprob: -5.0365729331970215
    7. 'if' → logprob: -5.5365729331970215
    8. '                   ' → logprob: -6.2865729331970215
    9. ':' → logprob: -6.4115729331970215
    10. '```' → logprob: -6.5365729331970215

Token 1060: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1200663223862648
    2. '           ' → logprob: -2.4950664043426514
    3. ':
' → logprob: -4.120066165924072
    4. ' and' → logprob: -4.495066165924072
    5. ':' → logprob: -6.495066165924072
    6. 'and' → logprob: -8.12006664276123
    7. ' or' → logprob: -8.12006664276123
    8. ',' → logprob: -8.49506664276123
    9. ' if' → logprob: -8.49506664276123
    10. '	       ' → logprob: -8.74506664276123

Token 1061: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012819106690585613
    2. '               ' → logprob: -4.512819290161133
    3. ' if' → logprob: -7.512819290161133
    4. 'if' → logprob: -7.762819290161133
    5. ' and' → logprob: -8.137819290161133
    6. '       ' → logprob: -8.137819290161133
    7. '```' → logprob: -10.012819290161133
    8. 'and' → logprob: -10.387819290161133
    9. '<|end|>' → logprob: -10.512819290161133
    10. ',' → logprob: -10.512819290161133

Token 1062: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021301066502928734
    2. '           ' → logprob: -4.02130126953125
    3. ' if' → logprob: -5.77130126953125
    4. '       ' → logprob: -11.27130126953125
    5. '```' → logprob: -11.77130126953125
    6. '<|end|>' → logprob: -12.52130126953125
    7. '               ' → logprob: -12.89630126953125
    8. '	if' → logprob: -13.89630126953125
    9. '	       ' → logprob: -14.27130126953125
    10. '<|end|>' → logprob: -14.77130126953125

Token 1063: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031827057246118784
    2. ' n' → logprob: -5.753182888031006
    3. '           ' → logprob: -12.253182411193848
    4. '               ' → logprob: -16.378183364868164
    5. '	n' → logprob: -16.878183364868164
    6. '       ' → logprob: -17.253183364868164
    7. '   ' → logprob: -17.878183364868164
    8. '_n' → logprob: -18.128183364868164
    9. '(n' → logprob: -18.128183364868164
    10. '```' → logprob: -18.378183364868164

Token 1064: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3868755102157593
    2. ' %' → logprob: -1.1368755102157593
    3. '%d' → logprob: -12.88687515258789
    4. ' ' → logprob: -14.63687515258789
    5. '```' → logprob: -14.76187515258789
    6. '%i' → logprob: -15.13687515258789
    7. '%n' → logprob: -15.38687515258789
    8. '%s' → logprob: -15.51187515258789
    9. ')' → logprob: -16.51187515258789
    10. '%x' → logprob: -16.76187515258789

Token 1065: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004306692280806601
    2. ' d' → logprob: -7.750430583953857
    3. '           ' → logprob: -19.625431060791016
    4. '```' → logprob: -20.375431060791016
    5. '	d' → logprob: -20.375431060791016
    6. '   ' → logprob: -20.500431060791016
    7. '               ' → logprob: -21.375431060791016
    8. '_d' → logprob: -21.750431060791016
    9. ' ' → logprob: -22.250431060791016
    10. '7' → logprob: -22.875431060791016

Token 1066: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740869402885437
    2. ' ==' → logprob: -0.9740869402885437
    3. '```' → logprob: -12.97408676147461
    4. '=' → logprob: -13.34908676147461
    5. '===' → logprob: -13.47408676147461
    6. ')==' → logprob: -13.47408676147461
    7. ']==' → logprob: -14.22408676147461
    8. '==
' → logprob: -14.34908676147461
    9. ' !=' → logprob: -14.47408676147461
    10. '           ' → logprob: -14.47408676147461

Token 1067: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -21.75
    4. '۰' → logprob: -22.25
    5. '```' → logprob: -22.625
    6. 'd' → logprob: -23.125
    7. '  ' → logprob: -24.0
    8. 's' → logprob: -24.5
    9. '00' → logprob: -24.5
    10. '  ' → logprob: -24.5

Token 1068: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'd' → logprob: -19.625
    4. '   ' → logprob: -21.5
    5. '```' → logprob: -21.625
    6. '۰' → logprob: -21.875
    7. ' ' → logprob: -23.375
    8. 'int' → logprob: -23.375
    9. '  ' → logprob: -23.375
    10. '=' → logprob: -23.375

Token 1069: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37325674295425415
    2. ':
' → logprob: -1.3732566833496094
    3. '               ' → logprob: -2.8732566833496094
    4. ' and' → logprob: -6.998256683349609
    5. '           ' → logprob: -7.498256683349609
    6. 'and' → logprob: -9.37325668334961
    7. ':return' → logprob: -10.49825668334961
    8. ':

' → logprob: -10.87325668334961
    9. '<|end|>' → logprob: -10.87325668334961
    10. '):
' → logprob: -10.99825668334961

Token 1070: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.56102097814437e-05
    2. '           ' → logprob: -10.500045776367188
    3. '                   ' → logprob: -11.875045776367188
    4. '```' → logprob: -12.875045776367188
    5. '              ' → logprob: -13.500045776367188
    6. '       ' → logprob: -13.625045776367188
    7. '   ' → logprob: -13.625045776367188
    8. '<|end|>' → logprob: -14.000045776367188
    9. '                
' → logprob: -14.625045776367188
    10. 'self' → logprob: -14.750045776367188

Token 1071: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19555850327014923
    2. 'if' (adapté à ' if') → logprob: -2.445558547973633
    3. 'is' → logprob: -2.820558547973633
    4. '               ' → logprob: -3.945558547973633
    5. '                   ' → logprob: -5.195558547973633
    6. 'ms' → logprob: -5.570558547973633
    7. 'factor' → logprob: -6.570558547973633
    8. 'm' → logprob: -7.195558547973633
    9. 'div' → logprob: -8.445558547973633
    10. ' self' → logprob: -9.195558547973633

Token 1072: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.01815778948366642
    2. 'self' → logprob: -4.018157958984375
    3. ' Monday' → logprob: -12.393157958984375
    4. 'Tuesday' → logprob: -14.018157958984375
    5. 'not' → logprob: -14.143157958984375
    6. 'd' → logprob: -14.268157958984375
    7. 'Sunday' → logprob: -15.143157958984375
    8. ' self' → logprob: -15.143157958984375
    9. '(self' → logprob: -15.393157958984375
    10. 'Morning' → logprob: -15.643157958984375

Token 1073: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -7.052377623040229e-05
    2. ' Saturday' → logprob: -10.125070571899414
    3. 'Satellite' → logprob: -11.000070571899414
    4. '_S' → logprob: -12.500070571899414
    5. 'Sunday' → logprob: -12.750070571899414
    6. 'Monday' → logprob: -13.375070571899414
    7. 'Sat' → logprob: -13.750070571899414
    8. 'def' → logprob: -14.000070571899414
    9. 'South' → logprob: -14.125070571899414
    10. '_sat' → logprob: -14.500070571899414

Token 1074: 'Prime' (ID: 43017)
  Prédit: 'Prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -8.65707261255011e-06
    2. '_prime' → logprob: -12.000008583068848
    3. 'prime' → logprob: -13.500008583068848
    4. 'Factor' → logprob: -14.250008583068848
    5. ' Prime' → logprob: -15.500008583068848
    6. 'Number' → logprob: -16.375009536743164
    7. '
' → logprob: -16.750009536743164
    8. '   ' → logprob: -16.875009536743164
    9. '_Pr' → logprob: -17.875009536743164
    10. ' prime' → logprob: -18.000009536743164

Token 1075: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0010809217346832156
    2. 'is' → logprob: -6.8760809898376465
    3. '._' → logprob: -10.626080513000488
    4. '_is' → logprob: -11.251080513000488
    5. '.' → logprob: -12.626080513000488
    6. '```' → logprob: -13.626080513000488
    7. '   ' → logprob: -13.751080513000488
    8. ' .' → logprob: -13.751080513000488
    9. ').' → logprob: -13.876080513000488
    10. 'Is' → logprob: -14.001080513000488

Token 1076: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0027784891426563263
    2. 'm' → logprob: -6.25277853012085
    3. 'Monday' → logprob: -7.87777853012085
    4. 'd' → logprob: -8.127778053283691
    5. '(d' → logprob: -9.502778053283691
    6. 'is' → logprob: -10.002778053283691
    7. '_s' → logprob: -10.877778053283691
    8. '_d' → logprob: -11.502778053283691
    9. '(m' → logprob: -12.127778053283691
    10. '```' → logprob: -12.252778053283691

Token 1077: 'onday' (ID: 8426)
  Prédit: 'onday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onday' → logprob: -0.007793170865625143
    2. '_m' → logprob: -5.257792949676514
    3. 'm' → logprob: -6.257792949676514
    4. 's' → logprob: -8.007793426513672
    5. '_s' → logprob: -8.632793426513672
    6. 'ond' → logprob: -10.632793426513672
    7. 'Monday' → logprob: -11.132793426513672
    8. '```' → logprob: -11.132793426513672
    9. 'unday' → logprob: -11.507793426513672
    10. '{' → logprob: -11.507793426513672

Token 1078: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.03951026126742363
    2. 'Saturday' → logprob: -3.2895102500915527
    3. 's' → logprob: -6.789510250091553
    4. '_sat' → logprob: -8.289510726928711
    5. 'd' → logprob: -10.414510726928711
    6. '_prime' → logprob: -10.664510726928711
    7. ' Saturday' → logprob: -11.164510726928711
    8. '(d' → logprob: -12.539510726928711
    9. '```' → logprob: -12.539510726928711
    10. 'sat' → logprob: -12.914510726928711

Token 1079: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.009998777881264687
    2. 's' → logprob: -5.134998798370361
    3. '_s' → logprob: -6.009998798370361
    4. 'Saturday' → logprob: -7.009998798370361
    5. 'prime' → logprob: -8.884998321533203
    6. 'm' → logprob: -9.009998321533203
    7. '_prime' → logprob: -9.259998321533203
    8. '_' → logprob: -9.759998321533203
    9. 'r' → logprob: -10.009998321533203
    10. 'onday' → logprob: -10.384998321533203

Token 1080: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0006302326801232994
    2. 'prime' → logprob: -7.3756303787231445
    3. 'Prime' → logprob: -12.625630378723145
    4. '```' → logprob: -15.875630378723145
    5. ' prime' → logprob: -16.875629425048828
    6. '
' → logprob: -16.875629425048828
    7. '_' → logprob: -16.875629425048828
    8. ''_' → logprob: -17.000629425048828
    9. ' Prime' → logprob: -17.375629425048828
    10. '_pr' → logprob: -17.375629425048828

Token 1081: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.5
    3. '                   ' → logprob: -17.0
    4. '               ' → logprob: -17.375
    5. '(
' → logprob: -19.25
    6. '(def' → logprob: -19.5
    7. '(' → logprob: -19.625
    8. '(div' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. '((' → logprob: -21.0

Token 1082: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20159168541431427
    2. '):
' → logprob: -1.7015917301177979
    3. '               ' → logprob: -9.826591491699219
    4. '()):
' → logprob: -10.201591491699219
    5. '                   ' → logprob: -10.451591491699219
    6. ')' → logprob: -10.826591491699219
    7. '():
' → logprob: -11.326591491699219
    8. '()' → logprob: -12.076591491699219
    9. '():' → logprob: -12.451591491699219
    10. '):

' → logprob: -12.451591491699219

Token 1083: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005195216741412878
    2. '               ' → logprob: -5.630195140838623
    3. ':
' → logprob: -7.630195140838623
    4. ':' → logprob: -7.880195140838623
    5. '```' → logprob: -8.380195617675781
    6. '                       ' → logprob: -8.630195617675781
    7. '                    
' → logprob: -9.755195617675781
    8. 'self' → logprob: -10.380195617675781
    9. '
' → logprob: -10.505195617675781
    10. ':return' → logprob: -10.630195617675781

Token 1084: ' factors' (ID: 11652)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01594732701778412
    2. '                   ' → logprob: -4.265947341918945
    3. ' self' → logprob: -6.640947341918945
    4. '                       ' → logprob: -7.890947341918945
    5. '               ' → logprob: -9.890947341918945
    6. '```' → logprob: -11.265947341918945
    7. 'n' → logprob: -11.765947341918945
    8. '       ' → logprob: -11.890947341918945
    9. 'factor' → logprob: -12.015947341918945
    10. '
' → logprob: -12.265947341918945

Token 1085: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0031871015671640635
    2. '.' → logprob: -5.75318717956543
    3. ' .' → logprob: -12.62818717956543
    4. '           ' → logprob: -12.75318717956543
    5. '                   ' → logprob: -13.50318717956543
    6. '.append' → logprob: -14.62818717956543
    7. '               ' → logprob: -14.87818717956543
    8. '       ' → logprob: -15.25318717956543
    9. '.setdefault' → logprob: -15.50318717956543
    10. '   ' → logprob: -15.75318717956543

Token 1086: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00015741224342491478
    2. '(' → logprob: -9.000157356262207
    3. 'd' → logprob: -10.500157356262207
    4. '(
' → logprob: -12.000157356262207
    5. ' d' → logprob: -15.875157356262207
    6. ' (' → logprob: -16.000158309936523
    7. '	d' → logprob: -17.250158309936523
    8. '                   ' → logprob: -19.125158309936523
    9. ',d' → logprob: -19.500158309936523
    10. '((' → logprob: -19.500158309936523

Token 1087: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06632652133703232
    2. ')' → logprob: -3.44132661819458
    3. ')
' → logprob: -4.19132661819458
    4. '                    
' → logprob: -5.44132661819458
    5. '               ' → logprob: -5.56632661819458
    6. '           ' → logprob: -6.31632661819458
    7. ',' → logprob: -6.44132661819458
    8. '<|end|>' → logprob: -6.69132661819458
    9. '
' → logprob: -7.44132661819458
    10. '):
' → logprob: -8.066326141357422

Token 1088: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007447104435414076
    2. '               ' → logprob: -7.750744819641113
    3. '
' → logprob: -9.250744819641113
    4. '                    
' → logprob: -9.750744819641113
    5. '```' → logprob: -10.250744819641113
    6. '           ' → logprob: -10.500744819641113
    7. ',' → logprob: -10.750744819641113
    8. '                       ' → logprob: -10.750744819641113
    9. '		           ' → logprob: -11.500744819641113
    10. 'n' → logprob: -11.500744819641113

Token 1089: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07956290245056152
    2. 'self' (adapté à ' self') → logprob: -2.5795629024505615
    3. '               ' → logprob: -8.07956314086914
    4. ' self' → logprob: -9.07956314086914
    5. '
' → logprob: -9.20456314086914
    6. '           ' → logprob: -9.95456314086914
    7. '```' → logprob: -10.32956314086914
    8. '       ' → logprob: -10.82956314086914
    9. '   ' → logprob: -11.20456314086914
    10. '                       ' → logprob: -11.57956314086914

Token 1090: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.003244024235755205
    2. '_factor' → logprob: -6.378243923187256
    3. '
' → logprob: -7.628243923187256
    4. '```' → logprob: -8.378244400024414
    5. '                   ' → logprob: -8.628244400024414
    6. '.factor' → logprob: -8.753244400024414
    7. '               ' → logprob: -8.878244400024414
    8. '   ' → logprob: -9.253244400024414
    9. '           ' → logprob: -9.628244400024414
    10. '.' → logprob: -9.753244400024414

Token 1091: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.01815064437687397
    2. '_factor' → logprob: -4.018150806427002
    3. ' factor' → logprob: -14.393150329589844
    4. '-factor' → logprob: -16.018150329589844
    5. '.factor' → logprob: -16.393150329589844
    6. 'Factor' → logprob: -18.768150329589844
    7. '
' → logprob: -20.268150329589844
    8. '_FACTOR' → logprob: -21.268150329589844
    9. '   ' → logprob: -21.643150329589844
    10. 'for' → logprob: -21.768150329589844

Token 1092: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.000799384550191462
    2. '```' → logprob: -7.625799179077148
    3. '   ' → logprob: -9.625799179077148
    4. '       ' → logprob: -9.875799179077148
    5. '_recursive' → logprob: -10.500799179077148
    6. '_' → logprob: -10.750799179077148
    7. '                   ' → logprob: -10.750799179077148
    8. 'izer' → logprob: -10.875799179077148
    9. 'factor' → logprob: -11.125799179077148
    10. 'ialize' → logprob: -11.250799179077148

Token 1093: '_recursive' (ID: 175926)
  Prédit: '_recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_recursive' → logprob: -0.00015717383939772844
    2. '(n' → logprob: -8.875157356262207
    3. 'recursive' → logprob: -12.000157356262207
    4. '```' → logprob: -12.250157356262207
    5. '_rec' → logprob: -12.500157356262207
    6. ' _' → logprob: -14.875157356262207
    7. 'Recursive' → logprob: -15.000157356262207
    8. '       ' → logprob: -15.125157356262207
    9. 'n' → logprob: -15.375157356262207
    10. '
' → logprob: -15.500157356262207

Token 1094: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00037251986213959754
    2. '(' → logprob: -8.000372886657715
    3. '(
' → logprob: -10.875372886657715
    4. 'n' → logprob: -11.500372886657715
    5. ' (' → logprob: -11.875372886657715
    6. '```' → logprob: -14.250372886657715
    7. '((' → logprob: -15.875372886657715
    8. '   ' → logprob: -16.0003719329834
    9. ' n' → logprob: -16.5003719329834
    10. ',' → logprob: -17.5003719329834

Token 1095: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.16242077946662903
    2. '//' → logprob: -1.9124207496643066
    3. '   ' → logprob: -6.287420749664307
    4. '	' → logprob: -9.037421226501465
    5. ' ' → logprob: -9.412421226501465
    6. ' ' → logprob: -9.912421226501465
    7. '  ' → logprob: -10.787421226501465
    8. '    ' → logprob: -10.787421226501465
    9. 'd' → logprob: -11.287421226501465
    10. '```' → logprob: -11.912421226501465

Token 1096: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.639096970204264e-05
    2. ' d' → logprob: -9.250096321105957
    3. 'Monday' → logprob: -16.500097274780273
    4. '	d' → logprob: -17.125097274780273
    5. '_d' → logprob: -18.125097274780273
    6. '   ' → logprob: -18.500097274780273
    7. '```' → logprob: -18.625097274780273
    8. '*d' → logprob: -19.125097274780273
    9. '[d' → logprob: -19.750097274780273
    10. '                   ' → logprob: -19.875097274780273

Token 1097: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007847821339964867
    2. ',d' → logprob: -4.882847785949707
    3. ' ,' → logprob: -9.132847785949707
    4. '                   ' → logprob: -9.507847785949707
    5. '(d' → logprob: -10.632847785949707
    6. 'd' → logprob: -11.257847785949707
    7. '```' → logprob: -12.007847785949707
    8. ',
' → logprob: -12.382847785949707
    9. ')' → logprob: -12.507847785949707
    10. '(' → logprob: -14.007847785949707

Token 1098: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.017072025686502457
    2. ' factors' → logprob: -4.2670722007751465
    3. 'd' → logprob: -5.8920722007751465
    4. ' f' → logprob: -9.642071723937988
    5. ' d' → logprob: -10.642071723937988
    6. 'factor' → logprob: -10.642071723937988
    7. ' ' → logprob: -12.017071723937988
    8. '	f' → logprob: -12.392071723937988
    9. '   ' → logprob: -12.767071723937988
    10. 'Factors' → logprob: -13.017071723937988

Token 1099: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005167700815945864
    2. ',' → logprob: -5.630167484283447
    3. '                   ' → logprob: -6.630167484283447
    4. ')
' → logprob: -9.130167961120605
    5. '       ' → logprob: -9.630167961120605
    6. '               ' → logprob: -11.005167961120605
    7. '   ' → logprob: -11.130167961120605
    8. '(' → logprob: -11.755167961120605
    9. '())' → logprob: -12.130167961120605
    10. '<|end|>' → logprob: -12.130167961120605

Token 1100: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.7994282795116305e-05
    2. '               ' → logprob: -10.50004768371582
    3. '       ' → logprob: -12.25004768371582
    4. '                       ' → logprob: -12.37504768371582
    5. '           ' → logprob: -12.50004768371582
    6. '                    ' → logprob: -13.25004768371582
    7. '<|end|>' → logprob: -13.25004768371582
    8. '                  ' → logprob: -13.87504768371582
    9. 'return' → logprob: -14.12504768371582
    10. '   ' → logprob: -14.25004768371582

Token 1101: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002303697168827057
    2. 'return' (adapté à ' return') → logprob: -6.252303600311279
    3. '               ' → logprob: -8.502304077148438
    4. 'break' → logprob: -9.627304077148438
    5. '                       ' → logprob: -9.877304077148438
    6. '           ' → logprob: -10.877304077148438
    7. '       ' → logprob: -11.127304077148438
    8. ' return' → logprob: -12.252304077148438
    9. '                    ' → logprob: -12.502304077148438
    10. '                  ' → logprob: -12.502304077148438

Token 1102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09310819208621979
    2. '<|end|>' → logprob: -2.4681081771850586
    3. '               ' → logprob: -5.968108177185059
    4. '```' → logprob: -7.218108177185059
    5. '<|end|>' → logprob: -7.968108177185059
    6. '           ' → logprob: -9.343108177185059
    7. '                   ' → logprob: -9.343108177185059
    8. '                       ' → logprob: -9.718108177185059
    9. '        
' → logprob: -9.968108177185059
    10. '   ' → logprob: -10.093108177185059

Token 1103: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1104: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18561221659183502
    2. '<|end|>' → logprob: -1.8106122016906738
    3. 'raise' → logprob: -5.435612201690674
    4. '        ' → logprob: -8.435612678527832
    5. ' raise' → logprob: -8.560612678527832
    6. '#' (adapté à ' #') → logprob: -8.560612678527832
    7. '```' → logprob: -8.560612678527832
    8. '           ' → logprob: -8.685612678527832
    9. '<|end|>' → logprob: -9.060612678527832
    10. '   ' → logprob: -9.435612678527832

Token 1105: ' If' (ID: 1843)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.00020091790065634996
    2. '       ' → logprob: -8.750201225280762
    3. '#' → logprob: -10.250201225280762
    4. ' raise' → logprob: -12.500201225280762
    5. 'f' → logprob: -12.750201225280762
    6. 'raises' → logprob: -15.625201225280762
    7. 'def' → logprob: -16.375200271606445
    8. '	raise' → logprob: -16.500200271606445
    9. 'raising' → logprob: -16.625200271606445
    10. '           ' → logprob: -16.875200271606445

Token 1106: ' no' (ID: 860)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6192910671234131
    2. 'raise' → logprob: -1.369291067123413
    3. 'n' → logprob: -2.619291067123413
    4. 'True' → logprob: -2.744291067123413
    5. 'f' → logprob: -2.869291067123413
    6. '       ' → logprob: -5.244291305541992
    7. 'self' → logprob: -5.369291305541992
    8. 'not' → logprob: -6.119291305541992
    9. '   ' → logprob: -8.119291305541992
    10. 'False' → logprob: -8.244291305541992

Token 1107: ' divisor' (ID: 100482)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7000243067741394
    2. '#' → logprob: -1.9500243663787842
    3. ' factors' → logprob: -2.200024366378784
    4. 'f' → logprob: -2.950024366378784
    5. 'raise' → logprob: -3.325024366378784
    6. ' factor' → logprob: -3.325024366378784
    7. '       ' → logprob: -3.575024366378784
    8. 'div' → logprob: -3.700024366378784
    9. ' #' → logprob: -3.825024366378784
    10. 'n' → logprob: -4.450024127960205

Token 1108: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.3770347833633423
    2. ' found' → logprob: -1.8770347833633423
    3. '           ' → logprob: -2.8770346641540527
    4. '       ' → logprob: -3.6270346641540527
    5. ':
' → logprob: -3.7520346641540527
    6. ':' → logprob: -3.7520346641540527
    7. '_found' → logprob: -4.877034664154053
    8. '               ' → logprob: -5.502034664154053
    9. ' was' → logprob: -5.627034664154053
    10. ',' → logprob: -5.752034664154053

Token 1109: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7248206734657288
    2. '       ' → logprob: -1.349820613861084
    3. 'raise' → logprob: -1.474820613861084
    4. ':
' → logprob: -4.099820613861084
    5. ',' → logprob: -5.849820613861084
    6. ':' → logprob: -6.224820613861084
    7. 'f' → logprob: -6.349820613861084
    8. 'raises' → logprob: -6.349820613861084
    9. ' factors' → logprob: -6.849820613861084
    10. ' raise' → logprob: -7.849820613861084

Token 1110: ' it' (ID: 480)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.049214668571949005
    2. 'raise' → logprob: -3.4242146015167236
    3. '#' → logprob: -4.299214839935303
    4. '       ' → logprob: -6.674214839935303
    5. '           ' → logprob: -7.549214839935303
    6. ' factors' → logprob: -10.174214363098145
    7. ' raise' → logprob: -10.424214363098145
    8. 'raises' → logprob: -12.424214363098145
    9. '   ' → logprob: -13.299214363098145
    10. '               ' → logprob: -13.674214363098145

Token 1111: ' must' (ID: 2804)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.341431200504303
    2. ' is' → logprob: -2.716431140899658
    3. 'is' → logprob: -2.841431140899658
    4. '#' → logprob: -3.091431140899658
    5. ' raise' → logprob: -3.591431140899658
    6. '```' → logprob: -3.716431140899658
    7. 'raises' → logprob: -3.966431140899658
    8. 's' → logprob: -4.216431140899658
    9. '   ' → logprob: -4.591431140899658
    10. '       ' → logprob: -4.716431140899658

Token 1112: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.013095646165311337
    2. ' be' → logprob: -4.888095855712891
    3. 'raise' → logprob: -5.263095855712891
    4. 'return' → logprob: -8.88809585571289
    5. '           ' → logprob: -9.88809585571289
    6. 'add' → logprob: -10.26309585571289
    7. '```' → logprob: -10.63809585571289
    8. ' raise' → logprob: -11.26309585571289
    9. 'also' → logprob: -11.76309585571289
    10. '       ' → logprob: -11.76309585571289

Token 1113: ' MS' (ID: 15861)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.18112002313137054
    2. 'n' → logprob: -2.556119918823242
    3. 'None' → logprob: -3.306119918823242
    4. '1' → logprob: -3.806119918823242
    5. '#' → logprob: -4.681119918823242
    6. 'prime' → logprob: -4.806119918823242
    7. 'a' → logprob: -4.931119918823242
    8. 'True' → logprob: -6.931119918823242
    9. 'Monday' → logprob: -7.306119918823242
    10. ' factors' → logprob: -7.556119918823242

Token 1114: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.530535101890564
    2. 'prime' → logprob: -1.530535101890564
    3. ' prime' → logprob: -1.655535101890564
    4. 'Prime' → logprob: -5.5305352210998535
    5. '_p' → logprob: -9.405534744262695
    6. '_' → logprob: -9.905534744262695
    7. '_pr' → logprob: -9.905534744262695
    8. ' ' → logprob: -10.280534744262695
    9. ' Prime' → logprob: -10.405534744262695
    10. '_number' → logprob: -10.655534744262695

Token 1115: ' itself' (ID: 8807)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001818216871470213
    2. '           ' → logprob: -6.3768181800842285
    3. '               ' → logprob: -9.626818656921387
    4. '```' → logprob: -10.876818656921387
    5. ' factors' → logprob: -11.251818656921387
    6. ',' → logprob: -12.251818656921387
    7. '   ' → logprob: -12.501818656921387
    8. '<|end|>' → logprob: -12.501818656921387
    9. '                   ' → logprob: -14.001818656921387
    10. '        
' → logprob: -14.251818656921387

Token 1116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004430627159308642
    2. '           ' → logprob: -8.125443458557129
    3. ' factors' → logprob: -9.375443458557129
    4. 'f' → logprob: -9.875443458557129
    5. '               ' → logprob: -11.875443458557129
    6. '```' → logprob: -13.250443458557129
    7. ',' → logprob: -14.250443458557129
    8. '   ' → logprob: -14.625443458557129
    9. '{
' → logprob: -15.250443458557129
    10. '                   ' → logprob: -15.875443458557129

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000672043883241713
    2. '           ' → logprob: -7.750671863555908
    3. 'f' → logprob: -9.000672340393066
    4. ' factors' → logprob: -9.375672340393066
    5. '               ' → logprob: -10.875672340393066
    6. '   ' → logprob: -11.875672340393066
    7. '                   ' → logprob: -12.625672340393066
    8. '```' → logprob: -13.000672340393066
    9. '      ' → logprob: -14.750672340393066
    10. 'raise' → logprob: -15.000672340393066

Token 1118: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.045823566731997e-05
    2. '       ' → logprob: -10.875020027160645
    3. ' factors' → logprob: -14.125020027160645
    4. '   ' → logprob: -14.750020027160645
    5. '           ' → logprob: -15.500020027160645
    6. 'facts' → logprob: -16.00002098083496
    7. 'self' → logprob: -16.87502098083496
    8. 'factor' → logprob: -18.37502098083496
    9. 'if' → logprob: -18.62502098083496
    10. '               ' → logprob: -18.75002098083496

Token 1119: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -11.25001335144043
    3. 'add' → logprob: -17.25001335144043
    4. ' .' → logprob: -18.12501335144043
    5. '.Add' → logprob: -18.12501335144043
    6. '.update' → logprob: -18.12501335144043
    7. '.setdefault' → logprob: -19.12501335144043
    8. '.clear' → logprob: -19.50001335144043
    9. '.append' → logprob: -19.62501335144043
    10. '_add' → logprob: -20.00001335144043

Token 1120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47408103942871094
    2. 'n' → logprob: -0.9740810394287109
    3. '(' → logprob: -12.849081039428711
    4. ' n' → logprob: -13.974081039428711
    5. '(
' → logprob: -14.974081039428711
    6. '```' → logprob: -15.974081039428711
    7. '	n' → logprob: -16.84908103942871
    8. '_n' → logprob: -17.72408103942871
    9. ' (' → logprob: -18.34908103942871
    10. '   ' → logprob: -18.59908103942871

Token 1121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0722858102526516e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -15.000041007995605
    4. ')return' → logprob: -16.00004005432129
    5. '       ' → logprob: -16.75004005432129
    6. '   ' → logprob: -17.00004005432129
    7. ')

' → logprob: -18.00004005432129
    8. '<|end|>' → logprob: -18.12504005432129
    9. ')}' → logprob: -18.25004005432129
    10. '))' → logprob: -18.37504005432129

Token 1122: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1123: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0527821779251099
    2. 'actor' → logprob: -1.3027821779251099
    3. ' _' → logprob: -2.5527820587158203
    4. ' test' → logprob: -2.8027820587158203
    5. ' factor' → logprob: -3.0527820587158203
    6. '_' → logprob: -3.1777820587158203
    7. '_factor' → logprob: -3.3027820587158203
    8. ' Monday' → logprob: -3.3027820587158203
    9. 'Monday' → logprob: -3.9277820587158203
    10. 'factor' → logprob: -4.17778205871582

Token 1124: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02330196276307106
    2. '():
' → logprob: -3.7733020782470703
    3. '()' → logprob: -9.89830207824707
    4. '():
' → logprob: -13.02330207824707
    5. ' ():' → logprob: -13.14830207824707
    6. '():

' → logprob: -13.52330207824707
    7. '()>' → logprob: -15.39830207824707
    8. '()->' → logprob: -15.77330207824707
    9. '().' → logprob: -16.02330207824707
    10. 'def' → logprob: -16.27330207824707

Token 1125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017620481085032225
    2. '```' → logprob: -7.0017619132995605
    3. 'number' → logprob: -7.8767619132995605
    4. 'ms' → logprob: -8.876762390136719
    5. 'm' → logprob: -8.876762390136719
    6. 'def' → logprob: -9.251762390136719
    7. 'import' → logprob: -10.126762390136719
    8. 'n' → logprob: -11.501762390136719
    9. '   ' → logprob: -11.501762390136719
    10. '
' → logprob: -11.876762390136719

Token 1126: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -1.3375262022018433
    2. '   ' → logprob: -1.4625262022018433
    3. 'ms' → logprob: -1.7125262022018433
    4. 'number' → logprob: -1.7125262022018433
    5. 'numbers' → logprob: -2.837526321411133
    6. 'n' → logprob: -2.962526321411133
    7. 'num' → logprob: -4.337526321411133
    8. 'factor' → logprob: -4.587526321411133
    9. 'nums' → logprob: -5.462526321411133
    10. 'input' → logprob: -6.462526321411133

Token 1127: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008616108447313309
    2. 'math' → logprob: -4.758615970611572
    3. ' sys' → logprob: -13.63361644744873
    4. 'random' → logprob: -16.633615493774414
    5. '=sys' → logprob: -16.883615493774414
    6. '(sys' → logprob: -17.133615493774414
    7. '```' → logprob: -17.133615493774414
    8. 'typing' → logprob: -17.258615493774414
    9. ' math' → logprob: -18.133615493774414
    10. '__' → logprob: -18.133615493774414

Token 1128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4629516303539276
    2. '
' → logprob: -1.08795166015625
    3. '    
' → logprob: -4.46295166015625
    4. '```' → logprob: -4.83795166015625
    5. 'if' → logprob: -5.46295166015625
    6. 'for' → logprob: -5.96295166015625
    7. 'input' → logprob: -6.21295166015625
    8. 'args' → logprob: -6.33795166015625
    9. ' if' → logprob: -7.46295166015625
    10. 'def' → logprob: -7.58795166015625

Token 1129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002823120157700032
    2. 'if' → logprob: -9.000282287597656
    3. '
' → logprob: -9.250282287597656
    4. '```' → logprob: -10.750282287597656
    5. '    
' → logprob: -10.875282287597656
    6. 'for' → logprob: -11.625282287597656
    7. 'input' → logprob: -11.750282287597656
    8. 'def' → logprob: -12.625282287597656
    9. 'args' → logprob: -14.125282287597656
    10. ' if' → logprob: -14.500282287597656

Token 1130: ' factor' (ID: 12332)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4436289072036743
    2. 'args' → logprob: -1.6936289072036743
    3. 'if' → logprob: -2.0686287879943848
    4. 'for' → logprob: -3.6936287879943848
    5. 'input' → logprob: -4.568628787994385
    6. 'argv' → logprob: -5.193628787994385
    7. ' if' → logprob: -5.943628787994385
    8. '```' → logprob: -6.818628787994385
    9. 'def' → logprob: -7.193628787994385
    10. '    
' → logprob: -7.443628787994385

Token 1131: 'izer' (ID: 4492)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.057317059487104416
    2. 'izer' → logprob: -2.932317018508911
    3. '   ' → logprob: -6.80731725692749
    4. '=' → logprob: -7.30731725692749
    5. ' =' → logprob: -7.93231725692749
    6. '       ' → logprob: -8.557316780090332
    7. 'ialize' → logprob: -10.432316780090332
    8. '_' → logprob: -10.807316780090332
    9. '```' → logprob: -11.182316780090332
    10. ' ' → logprob: -11.932316780090332

Token 1132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3225398361682892
    2. '=' → logprob: -1.3225398063659668
    3. '   ' → logprob: -4.697539806365967
    4. '.' → logprob: -9.697540283203125
    5. '  ' → logprob: -11.447540283203125
    6. ' ' → logprob: -11.572540283203125
    7. '()' → logprob: -12.197540283203125
    8. '.py' → logprob: -12.197540283203125
    9. '    ' → logprob: -12.322540283203125
    10. ')' → logprob: -12.697540283203125

Token 1133: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.01814994215965271
    2. ' Monday' → logprob: -4.0181498527526855
    3. 'Mond' → logprob: -17.893150329589844
    4. '   ' → logprob: -18.893150329589844
    5. 'Tuesday' → logprob: -19.393150329589844
    6. '```' → logprob: -19.768150329589844
    7. ' ' → logprob: -20.143150329589844
    8. ' monday' → logprob: -20.268150329589844
    9. 'Morning' → logprob: -20.393150329589844
    10. ' Montag' → logprob: -20.768150329589844

Token 1134: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -4.961759259458631e-06
    2. ' Saturday' → logprob: -12.375004768371582
    3. 'Satellite' → logprob: -14.750004768371582
    4. '   ' → logprob: -17.1250057220459
    5. '_S' → logprob: -17.2500057220459
    6. 'Sunday' → logprob: -17.3750057220459
    7. 'Sat' → logprob: -18.3750057220459
    8. '```' → logprob: -18.8750057220459
    9. 'aturday' → logprob: -19.0000057220459
    10. 'Scheduler' → logprob: -19.1250057220459

Token 1135: 'Factor' (ID: 23681)
  Prédit: 'Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.029781503602862358
    2. 'Number' → logprob: -3.5297815799713135
    3. 'factor' → logprob: -10.404781341552734
    4. '_factor' → logprob: -14.904781341552734
    5. ' factor' → logprob: -16.029781341552734
    6. 'Prime' → logprob: -16.279781341552734
    7. 'number' → logprob: -16.904781341552734
    8. '```' → logprob: -17.029781341552734
    9. ' Factor' → logprob: -17.279781341552734
    10. 'Fact' → logprob: -18.404781341552734

Token 1136: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -1.0564331205387134e-05
    2. 'Number' → logprob: -12.62501049041748
    3. '   ' → logprob: -13.00001049041748
    4. 'er' → logprob: -13.37501049041748
    5. 'Factor' → logprob: -13.87501049041748
    6. 'factor' → logprob: -13.87501049041748
    7. 'IZER' → logprob: -15.00001049041748
    8. 'zer' → logprob: -15.00001049041748
    9. 'iz' → logprob: -16.000011444091797
    10. 'ize' → logprob: -16.000011444091797

Token 1137: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08121678233146667
    2. '
' → logprob: -2.581216812133789
    3. '    
' → logprob: -6.581216812133789
    4. 'for' → logprob: -7.206216812133789
    5. '```' → logprob: -9.331216812133789
    6. '(' → logprob: -10.956216812133789
    7. ' for' → logprob: -11.081216812133789
    8. '[' → logprob: -11.081216812133789
    9. '(
' → logprob: -11.206216812133789
    10. 'def' → logprob: -11.956216812133789

Token 1138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.0259150157216936e-05
    2. '
' → logprob: -10.37505054473877
    3. '    
' → logprob: -11.37505054473877
    4. 'for' → logprob: -12.00005054473877
    5. '```' → logprob: -14.37505054473877
    6. ' for' → logprob: -14.62505054473877
    7. '    ' → logprob: -16.500049591064453
    8. 'input' → logprob: -17.250049591064453
    9. '       ' → logprob: -17.375049591064453
    10. '        
' → logprob: -18.000049591064453

Token 1139: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006880664732307196
    2. '   ' → logprob: -5.006880760192871
    3. ' for' → logprob: -9.006880760192871
    4. 'lines' → logprob: -10.506880760192871
    5. 'if' → logprob: -11.256880760192871
    6. 'args' → logprob: -13.631880760192871
    7. 'input' → logprob: -14.381880760192871
    8. 'line' → logprob: -15.506880760192871
    9. ' lines' → logprob: -15.631880760192871
    10. '```' → logprob: -16.631879806518555

Token 1140: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25193771719932556
    2. ' line' → logprob: -1.501937747001648
    3. 'arg' → logprob: -11.751937866210938
    4. ' arg' → logprob: -14.751937866210938
    5. '	line' → logprob: -16.001937866210938
    6. 'number' → logprob: -16.126937866210938
    7. ' ' → logprob: -16.251937866210938
    8. 'num' → logprob: -17.376937866210938
    9. '(line' → logprob: -18.501937866210938
    10. 'raw' → logprob: -18.501937866210938

Token 1141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017721657641232014
    2. 'in' → logprob: -6.376772403717041
    3. '   ' → logprob: -9.751771926879883
    4. '()' → logprob: -11.876771926879883
    5. '	in' → logprob: -13.751771926879883
    6. '_in' → logprob: -13.876771926879883
    7. 'In' → logprob: -14.876771926879883
    8. '       ' → logprob: -15.126771926879883
    9. '```' → logprob: -15.126771926879883
    10. ' ' → logprob: -15.251771926879883

Token 1142: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00861528143286705
    2. ' sys' → logprob: -4.758615493774414
    3. '=sys' → logprob: -14.508615493774414
    4. '(sys' → logprob: -16.258615493774414
    5. '	sys' → logprob: -16.633615493774414
    6. 'import' → logprob: -17.008615493774414
    7. 'stdin' → logprob: -17.133615493774414
    8. '```' → logprob: -19.258615493774414
    9. 'in' → logprob: -19.883615493774414
    10. '   ' → logprob: -20.008615493774414

Token 1143: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.049270518124103546
    2. ' in' → logprob: -3.5492706298828125
    3. 'stdin' → logprob: -4.7992706298828125
    4. 'in' → logprob: -5.0492706298828125
    5. '(stdin' → logprob: -6.2992706298828125
    6. ' stdin' → logprob: -7.0492706298828125
    7. '   ' → logprob: -7.5492706298828125
    8. '.readline' → logprob: -7.6742706298828125
    9. 'import' → logprob: -7.7992706298828125
    10. '.' → logprob: -8.549270629882812

Token 1144: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7953557372093201
    2. ':' → logprob: -1.6703557968139648
    3. '.strip' → logprob: -2.045355796813965
    4. ':
' → logprob: -2.170355796813965
    5. '():
' → logprob: -3.420355796813965
    6. '.rstrip' → logprob: -3.545355796813965
    7. ' in' → logprob: -3.795355796813965
    8. '   ' → logprob: -4.545355796813965
    9. '       ' → logprob: -4.920355796813965
    10. '.readlines' → logprob: -5.170355796813965

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003954678773880005
    2. '   ' → logprob: -5.628954887390137
    3. '```' → logprob: -8.253954887390137
    4. '        
' → logprob: -10.628954887390137
    5. '    
' → logprob: -10.753954887390137
    6. 'tokens' → logprob: -11.628954887390137
    7. '    ' → logprob: -12.253954887390137
    8. ' line' → logprob: -12.378954887390137
    9. ' token' → logprob: -12.378954887390137
    10. 'token' → logprob: -12.503954887390137

Token 1146: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7546800374984741
    2. ' line' → logprob: -0.7546800374984741
    3. 'line' (adapté à ' line') → logprob: -3.1296801567077637
    4. ' value' → logprob: -5.129680156707764
    5. ' number' → logprob: -5.379680156707764
    6. 'value' → logprob: -5.879680156707764
    7. '   ' → logprob: -7.379680156707764
    8. 'number' → logprob: -7.754680156707764
    9. ' s' → logprob: -8.254679679870605
    10. 'num' → logprob: -8.504679679870605

Token 1147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5275420546531677
    2. ' =' → logprob: -1.0275421142578125
    3. '=line' → logprob: -3.6525421142578125
    4. '_strip' → logprob: -3.9025421142578125
    5. '.strip' → logprob: -5.2775421142578125
    6. 'strip' → logprob: -7.4025421142578125
    7. '_str' → logprob: -8.777542114257812
    8. '=
' → logprob: -10.777542114257812
    9. '_line' → logprob: -11.152542114257812
    10. '=str' → logprob: -11.527542114257812

Token 1148: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007099286303855479
    2. ' line' → logprob: -7.2507100105285645
    3. '=line' → logprob: -20.125709533691406
    4. '#line' → logprob: -21.250709533691406
    5. '(line' → logprob: -21.250709533691406
    6. '	line' → logprob: -21.250709533691406
    7. '_line' → logprob: -24.125709533691406
    8. '   ' → logprob: -25.000709533691406
    9. '[line' → logprob: -25.000709533691406
    10. 'Line' → logprob: -25.250709533691406

Token 1149: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00015669701679144055
    2. '.' → logprob: -9.37515640258789
    3. '.rstrip' → logprob: -9.62515640258789
    4. 'strip' → logprob: -12.12515640258789
    5. '().' → logprob: -16.37515640258789
    6. '_strip' → logprob: -16.50015640258789
    7. ' .' → logprob: -16.75015640258789
    8. '(strip' → logprob: -17.00015640258789
    9. '.split' → logprob: -17.12515640258789
    10. '.trim' → logprob: -17.12515640258789

Token 1150: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5675502419471741
    2. '()' → logprob: -1.3175501823425293
    3. '()
' → logprob: -1.8175501823425293
    4. '():
' → logprob: -6.192550182342529
    5. ':
' → logprob: -8.192550659179688
    6. ',' → logprob: -9.442550659179688
    7. '<|end|>' → logprob: -9.442550659179688
    8. ':' → logprob: -9.817550659179688
    9. '()\' → logprob: -10.192550659179688
    10. '(),' → logprob: -10.192550659179688

Token 1151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.24310302757658e-05
    2. 'if' → logprob: -10.500072479248047
    3. ' if' → logprob: -10.750072479248047
    4. '   ' → logprob: -11.000072479248047
    5. '<|end|>' → logprob: -12.625072479248047
    6. ',' → logprob: -13.625072479248047
    7. '```' → logprob: -14.125072479248047
    8. '           ' → logprob: -14.125072479248047
    9. '        
' → logprob: -15.125072479248047
    10. '<|end|>' → logprob: -16.000072479248047

Token 1152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.0590548703912646e-05
    2. '       ' → logprob: -11.000030517578125
    3. ' if' → logprob: -11.250030517578125
    4. '```' → logprob: -14.875030517578125
    5. 'try' → logprob: -15.250030517578125
    6. '
' → logprob: -15.625030517578125
    7. '           ' → logprob: -17.125030517578125
    8. '        
' → logprob: -18.250030517578125
    9. 'If' → logprob: -18.875030517578125
    10. '   ' → logprob: -18.875030517578125

Token 1153: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.006773634348064661
    2. ' not' → logprob: -5.006773471832275
    3. 'line' → logprob: -9.756773948669434
    4. ' line' → logprob: -15.006773948669434
    5. '   ' → logprob: -17.631772994995117
    6. '```' → logprob: -18.506772994995117
    7. '
' → logprob: -18.631772994995117
    8. 'no' → logprob: -19.881772994995117
    9. '!' → logprob: -20.256772994995117
    10. '

' → logprob: -20.256772994995117

Token 1154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932015419006348
    2. ' ==' → logprob: -0.6932015419006348
    3. '.startswith' → logprob: -10.818201065063477
    4. '()==' → logprob: -11.193201065063477
    5. '=="' → logprob: -12.318201065063477
    6. '==
' → logprob: -12.318201065063477
    7. '===' → logprob: -12.818201065063477
    8. '```' → logprob: -13.068201065063477
    9. '=' → logprob: -13.318201065063477
    10. ')==' → logprob: -13.693201065063477

Token 1155: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.051820311695337296
    2. '""' → logprob: -3.5518202781677246
    3. '"":' → logprob: -4.051820278167725
    4. '''' → logprob: -5.551820278167725
    5. ''' → logprob: -7.676820278167725
    6. ''ex' → logprob: -9.426820755004883
    7. ' "":
' → logprob: -12.051820755004883
    8. '":' → logprob: -14.051820755004883
    9. '"B' → logprob: -14.051820755004883
    10. '"",' → logprob: -14.426820755004883

Token 1156: '1' (ID: 16)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.12406644970178604
    2. '"' → logprob: -2.8740663528442383
    3. '""' → logprob: -3.8740663528442383
    4. '"":' → logprob: -3.8740663528442383
    5. '":
' → logprob: -4.624066352844238
    6. 'exit' → logprob: -4.874066352844238
    7. 'quit' → logprob: -7.624066352844238
    8. '":
' → logprob: -8.249066352844238
    9. 'end' → logprob: -8.749066352844238
    10. '```' → logprob: -9.499066352844238

Token 1157: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.013913251459598541
    2. '":' → logprob: -4.388913154602051
    3. '"' → logprob: -7.388913154602051
    4. '\n' → logprob: -7.638913154602051
    5. '0' → logprob: -9.13891315460205
    6. '":
' → logprob: -9.26391315460205
    7. ':
' → logprob: -10.01391315460205
    8. '"):
' → logprob: -10.88891315460205
    9. '):
' → logprob: -11.76391315460205
    10. '   ' → logprob: -12.13891315460205

Token 1158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.600714161526412e-05
    2. '       ' → logprob: -9.750076293945312
    3. ':' → logprob: -12.250076293945312
    4. '	       ' → logprob: -12.750076293945312
    5. '		' → logprob: -13.000076293945312
    6. '               ' → logprob: -13.250076293945312
    7. 'continue' → logprob: -13.875076293945312
    8. '          ' → logprob: -13.875076293945312
    9. '```' → logprob: -13.875076293945312
    10. ':
' → logprob: -14.000076293945312

Token 1159: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03887350112199783
    2. '       ' → logprob: -3.7888734340667725
    3. 'continue' → logprob: -4.788873672485352
    4. '           ' → logprob: -5.038873672485352
    5. ' break' → logprob: -7.413873672485352
    6. 'return' → logprob: -10.038873672485352
    7. 'print' → logprob: -11.163873672485352
    8. '```' → logprob: -11.288873672485352
    9. '
' → logprob: -11.538873672485352
    10. ' continue' → logprob: -11.663873672485352

Token 1160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.953082341467962e-05
    2. '        
' → logprob: -11.000039100646973
    3. '
' → logprob: -11.250039100646973
    4. '<|end|>' → logprob: -12.000039100646973
    5. '           ' → logprob: -13.875039100646973
    6. '   ' → logprob: -14.125039100646973
    7. '```' → logprob: -14.125039100646973
    8. '      ' → logprob: -15.125039100646973
    9. ',' → logprob: -15.625039100646973
    10. '        ' → logprob: -16.50004005432129

Token 1161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.7697225252486533e-06
    2. '<|end|>' → logprob: -13.500003814697266
    3. '           ' → logprob: -13.750003814697266
    4. '        
' → logprob: -14.500003814697266
    5. '```' → logprob: -14.750003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '      ' → logprob: -16.125003814697266
    8. '
' → logprob: -17.375003814697266
    9. '        ' → logprob: -17.875003814697266
    10. '	' → logprob: -18.000003814697266

Token 1162: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34569051861763
    2. 'try' → logprob: -1.3456904888153076
    3. 'number' → logprob: -3.5956904888153076
    4. 'num' → logprob: -6.095690727233887
    5. 'value' → logprob: -6.595690727233887
    6. 'n' (adapté à ' n') → logprob: -7.220690727233887
    7. 'ms' → logprob: -10.095690727233887
    8. '   ' → logprob: -10.345690727233887
    9. ' try' → logprob: -10.970690727233887
    10. '```' → logprob: -11.220690727233887

Token 1163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008632414974272251
    2. '=' → logprob: -4.758632183074951
    3. '_value' → logprob: -11.25863265991211
    4. '   ' → logprob: -13.50863265991211
    5. '=int' → logprob: -13.88363265991211
    6. '_val' → logprob: -14.25863265991211
    7. '_int' → logprob: -14.75863265991211
    8. ' ' → logprob: -14.88363265991211
    9. '        ' → logprob: -15.75863265991211
    10. '       ' → logprob: -15.75863265991211

Token 1164: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931505799293518
    2. 'Monday' → logprob: -0.6931505799293518
    3. ' Monday' → logprob: -13.193150520324707
    4. ' int' → logprob: -13.943150520324707
    5. '[int' → logprob: -15.193150520324707
    6. '(int' → logprob: -15.443150520324707
    7. '   ' → logprob: -16.568151473999023
    8. 'Tuesday' → logprob: -16.693151473999023
    9. 'Mond' → logprob: -17.068151473999023
    10. '<int' → logprob: -17.318151473999023

Token 1165: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.0325924449716695e-05
    2. 'line' → logprob: -11.75001049041748
    3. '(' → logprob: -13.12501049041748
    4. '[line' → logprob: -15.75001049041748
    5. ' line' → logprob: -16.500009536743164
    6. '=line' → logprob: -16.500009536743164
    7. '#line' → logprob: -17.000009536743164
    8. '	line' → logprob: -18.875009536743164
    9. '(
' → logprob: -19.125009536743164
    10. '(n' → logprob: -19.500009536743164

Token 1166: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07156665623188019
    2. ')' → logprob: -3.196566581726074
    3. '       ' → logprob: -3.571566581726074
    4. '   ' → logprob: -10.321566581726074
    5. ')
' → logprob: -11.696566581726074
    6. ' )
' → logprob: -11.696566581726074
    7. ' )' → logprob: -14.696566581726074
    8. '
' → logprob: -14.821566581726074
    9. '           ' → logprob: -15.446566581726074
    10. '      ' → logprob: -15.446566581726074

Token 1167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.045823566731997e-05
    2. '   ' → logprob: -11.125020027160645
    3. 'try' → logprob: -12.500020027160645
    4. ' try' → logprob: -13.750020027160645
    5. '           ' → logprob: -14.625020027160645
    6. '```' → logprob: -16.12502098083496
    7. '      ' → logprob: -16.25002098083496
    8. '<|end|>' → logprob: -16.50002098083496
    9. '        
' → logprob: -17.37502098083496
    10. '     ' → logprob: -17.37502098083496

Token 1168: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43749964237213135
    2. 'try' (adapté à ' try') → logprob: -1.3124996423721313
    3. 'number' → logprob: -3.062499523162842
    4. 'num' → logprob: -3.812499523162842
    5. 'ms' → logprob: -4.937499523162842
    6. ' try' → logprob: -5.187499523162842
    7. ' number' → logprob: -6.312499523162842
    8. '   ' → logprob: -7.062499523162842
    9. ' ms' → logprob: -8.1875
    10. 'if' → logprob: -8.6875

Token 1169: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7194750905036926
    2. ':
' → logprob: -1.0944750308990479
    3. ':' → logprob: -2.094475030899048
    4. '       ' → logprob: -2.969475030899048
    5. '):
' → logprob: -6.219475269317627
    6. '<|end|>' → logprob: -6.844475269317627
    7. '        ' → logprob: -8.719474792480469
    8. '<|end|>' → logprob: -9.219474792480469
    9. '):' → logprob: -9.344474792480469
    10. '	       ' → logprob: -9.469474792480469

Token 1170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031723443418741226
    2. '       ' → logprob: -3.5317234992980957
    3. ':
' → logprob: -7.156723499298096
    4. '	       ' → logprob: -7.906723499298096
    5. ':' → logprob: -8.531723022460938
    6. 'value' → logprob: -9.031723022460938
    7. '<|end|>' → logprob: -9.031723022460938
    8. 'n' → logprob: -9.531723022460938
    9. '```' → logprob: -9.531723022460938
    10. '   ' → logprob: -9.906723022460938

Token 1171: ' ms' (ID: 15217)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0126087665557861
    2. 'number' → logprob: -1.1376087665557861
    3. '           ' → logprob: -2.137608766555786
    4. ' number' → logprob: -2.137608766555786
    5. ' num' → logprob: -3.012608766555786
    6. 'ms' (adapté à ' ms') → logprob: -4.262608528137207
    7. ' ms' → logprob: -4.887608528137207
    8. '       ' → logprob: -5.387608528137207
    9. 'value' → logprob: -6.012608528137207
    10. 'm' → logprob: -6.512608528137207

Token 1172: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.08101660758256912
    2. '_num' → logprob: -2.5810165405273438
    3. 'num' → logprob: -6.456016540527344
    4. 'number' → logprob: -7.706016540527344
    5. 'n' → logprob: -10.081016540527344
    6. '_prime' → logprob: -10.456016540527344
    7. '_n' → logprob: -10.581016540527344
    8. '_value' → logprob: -13.331016540527344
    9. '_factor' → logprob: -13.581016540527344
    10. '_' → logprob: -13.581016540527344

Token 1173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.188261032104492
    4. '=
' → logprob: -17.563261032104492
    5. ' =
' → logprob: -17.938261032104492
    6. '       ' → logprob: -17.938261032104492
    7. ' ' → logprob: -18.313261032104492
    8. '＝' → logprob: -18.813261032104492
    9. ',' → logprob: -19.188261032104492
    10. ')' → logprob: -19.188261032104492

Token 1174: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -3.547789674485102e-05
    2. ' Monday' → logprob: -10.250035285949707
    3. 'Mond' → logprob: -20.875036239624023
    4. '   ' → logprob: -21.250036239624023
    5. 'Morning' → logprob: -23.750036239624023
    6. 'Tuesday' → logprob: -23.750036239624023
    7. 'Mont' → logprob: -25.000036239624023
    8. 'Moon' → logprob: -25.125036239624023
    9. '```' → logprob: -25.250036239624023
    10. ' monday' → logprob: -25.250036239624023

Token 1175: 'Saturday' (ID: 28077)
  Prédit: 'Saturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -4.320199877838604e-07
    2. ' Saturday' → logprob: -15.125
    3. 'Satellite' → logprob: -17.0
    4. 'Monday' → logprob: -17.5
    5. 'Sunday' → logprob: -17.875
    6. 'Number' → logprob: -17.875
    7. '_S' → logprob: -18.125
    8. '```' → logprob: -19.75
    9. 'S' → logprob: -19.875
    10. 'aturday' → logprob: -20.0

Token 1176: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9361264946837764e-07
    2. 'Saturday' → logprob: -16.75
    3. 'number' → logprob: -17.125
    4. '_number' → logprob: -17.375
    5. 'Numbers' → logprob: -19.0
    6. ' Number' → logprob: -19.0
    7. '_Number' → logprob: -19.375
    8. 'Prime' → logprob: -20.375
    9. '```' → logprob: -21.125
    10. ' number' → logprob: -21.375

Token 1177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.375032424926758
    3. '(
' → logprob: -14.125032424926758
    4. 'n' → logprob: -17.875032424926758
    5. '(
' → logprob: -18.750032424926758
    6. '(

' → logprob: -19.500032424926758
    7. ' (' → logprob: -19.500032424926758
    8. '       ' → logprob: -19.750032424926758
    9. '[n' → logprob: -20.250032424926758
    10. ')' → logprob: -20.250032424926758

Token 1178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038224976509809494
    2. ')
' → logprob: -3.288224935531616
    3. '           ' → logprob: -8.663225173950195
    4. ')
' → logprob: -12.163225173950195
    5. '       ' → logprob: -12.413225173950195
    6. '               ' → logprob: -14.663225173950195
    7. ')`
' → logprob: -14.913225173950195
    8. ')

' → logprob: -15.288225173950195
    9. ' )' → logprob: -16.038225173950195
    10. '),' → logprob: -16.913225173950195

Token 1179: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2180170863866806
    2. '<|end|>' → logprob: -2.218017101287842
    3. '       ' → logprob: -2.468017101287842
    4. '<|end|>' → logprob: -7.093017101287842
    5. ')' → logprob: -7.343017101287842
    6. ',' → logprob: -8.718016624450684
    7. '```' → logprob: -9.093016624450684
    8. '
' → logprob: -9.343016624450684
    9. '               ' → logprob: -9.468016624450684
    10. 'except' → logprob: -9.593016624450684

Token 1180: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012233782559633255
    2. '           ' → logprob: -5.012233734130859
    3. '<|end|>' → logprob: -5.887233734130859
    4. ')' → logprob: -7.012233734130859
    5. 'except' (adapté à ' except') → logprob: -7.512233734130859
    6. ' except' → logprob: -7.762233734130859
    7. '        
' → logprob: -8.01223373413086
    8. '.' → logprob: -9.38723373413086
    9. '<|end|>' → logprob: -9.51223373413086
    10. ',' → logprob: -9.88723373413086

Token 1181: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.6931635141372681
    2. ' Value' → logprob: -0.6931635141372681
    3. '	Value' → logprob: -11.818163871765137
    4. '_value' → logprob: -12.568163871765137
    5. '_Value' → logprob: -13.318163871765137
    6. '.Value' → logprob: -13.318163871765137
    7. '(Value' → logprob: -13.693163871765137
    8. '<Value' → logprob: -14.318163871765137
    9. ' value' → logprob: -14.818163871765137
    10. ' ' → logprob: -16.94316291809082

Token 1182: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.45848218582978e-06
    2. 'rror' → logprob: -13.12500286102295
    3. 'Value' → logprob: -14.75000286102295
    4. 'Errors' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.500001907348633
    6. 'Warning' → logprob: -18.750001907348633
    7. '```' → logprob: -19.625001907348633
    8. 'LError' → logprob: -19.625001907348633
    9. '("' → logprob: -19.750001907348633
    10. '           ' → logprob: -20.250001907348633

Token 1183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3704892098903656
    2. '():' → logprob: -1.245489239692688
    3. ' as' → logprob: -4.120489120483398
    4. '(' → logprob: -5.745489120483398
    5. '()' → logprob: -6.995489120483398
    6. ':
' → logprob: -7.620489120483398
    7. '("' → logprob: -8.120489120483398
    8. '(
' → logprob: -8.370489120483398
    9. '):' → logprob: -8.620489120483398
    10. '():
' → logprob: -9.120489120483398

Token 1184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03989361599087715
    2. ' continue' → logprob: -3.289893627166748
    3. ' as' → logprob: -6.914893627166748
    4. 'continue' → logprob: -7.664893627166748
    5. ':' → logprob: -8.28989315032959
    6. ':
' → logprob: -11.03989315032959
    7. ' continues' → logprob: -11.16489315032959
    8. ' ' → logprob: -11.28989315032959
    9. ' continued' → logprob: -11.28989315032959
    10. '          ' → logprob: -11.66489315032959

Token 1185: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11020374298095703
    2. '       ' → logprob: -2.485203742980957
    3. ' continue' → logprob: -3.985203742980957
    4. 'continue' → logprob: -6.110203742980957
    5. ' print' → logprob: -9.360203742980957
    6. '```' → logprob: -9.735203742980957
    7. 'print' → logprob: -9.860203742980957
    8. '               ' → logprob: -10.985203742980957
    9. '   ' → logprob: -11.735203742980957
    10. '_continue' → logprob: -13.110203742980957

Token 1186: ' Input' (ID: 10090)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0966300293803215
    2. '           ' → logprob: -3.096630096435547
    3. 'print' → logprob: -3.346630096435547
    4. ' continue' → logprob: -4.596630096435547
    5. '       ' → logprob: -6.721630096435547
    6. '```' → logprob: -8.346630096435547
    7. ' print' → logprob: -9.346630096435547
    8. '   ' → logprob: -9.596630096435547
    9. '
' → logprob: -11.846630096435547
    10. '               ' → logprob: -11.846630096435547

Token 1187: ' number' (ID: 2086)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.341642826795578
    2. ' continue' → logprob: -1.7166428565979004
    3. ' continues' → logprob: -2.8416428565979004
    4. '           ' → logprob: -3.4666428565979004
    5. '_continue' → logprob: -4.9666428565979
    6. '       ' → logprob: -5.7166428565979
    7. '.' → logprob: -5.9666428565979
    8. '   ' → logprob: -6.4666428565979
    9. '	continue' → logprob: -6.8416428565979
    10. '               ' → logprob: -7.0916428565979

Token 1188: ' does' (ID: 2226)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32706570625305176
    2. 'continue' → logprob: -1.4520657062530518
    3. '       ' → logprob: -4.202065467834473
    4. '   ' → logprob: -4.452065467834473
    5. ' continue' → logprob: -5.327065467834473
    6. ' continues' → logprob: -5.827065467834473
    7. ' is' → logprob: -6.202065467834473
    8. '               ' → logprob: -6.452065467834473
    9. '=' → logprob: -7.077065467834473
    10. '#' → logprob: -7.202065467834473

Token 1189: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01152544654905796
    2. ' not' → logprob: -4.511525630950928
    3. 'continue' → logprob: -7.886525630950928
    4. '           ' → logprob: -9.26152515411377
    5. '   ' → logprob: -12.51152515411377
    6. '       ' → logprob: -13.63652515411377
    7. ' continue' → logprob: -14.01152515411377
    8. '	not' → logprob: -15.38652515411377
    9. 'n't' → logprob: -15.76152515411377
    10. '
' → logprob: -15.76152515411377

Token 1190: ' qualify' (ID: 32123)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qual' → logprob: -1.305822730064392
    2. 'pass' → logprob: -2.1808228492736816
    3. ' qualify' → logprob: -2.4308228492736816
    4. ' satisfy' → logprob: -2.6808228492736816
    5. ' pass' → logprob: -2.8058228492736816
    6. 's' → logprob: -2.8058228492736816
    7. ' follow' → logprob: -2.9308228492736816
    8. ' conform' → logprob: -3.1808228492736816
    9. 'meet' → logprob: -3.3058228492736816
    10. 'continue' → logprob: -3.8058228492736816

Token 1191: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05756862089037895
    2. 'continue' → logprob: -3.1825685501098633
    3. ' continue' → logprob: -4.557568550109863
    4. '               ' → logprob: -6.432568550109863
    5. ' for' → logprob: -7.307568550109863
    6. '
' → logprob: -7.307568550109863
    7. ' as' → logprob: -7.682568550109863
    8. ' to' → logprob: -8.557568550109863
    9. '       ' → logprob: -8.932568550109863
    10. 'for' → logprob: -9.307568550109863

Token 1192: ' Monday' (ID: 10715)
  Prédit: 'Monday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Monday' → logprob: -0.025343384593725204
    2. 'a' → logprob: -3.775343418121338
    3. ' Monday' → logprob: -6.650343418121338
    4. '"' → logprob: -7.275343418121338
    5. ' a' → logprob: -9.52534294128418
    6. '"a' → logprob: -11.77534294128418
    7. '#' → logprob: -12.27534294128418
    8. '   ' → logprob: -12.65034294128418
    9. 'm' → logprob: -12.65034294128418
    10. 'Mond' → logprob: -12.77534294128418

Token 1193: '-S' (ID: 6968)
  Prédit: 'Saturday'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Saturday' → logprob: -0.3518262207508087
    2. '-S' → logprob: -1.2268261909484863
    3. '-' → logprob: -5.726826190948486
    4. '_S' → logprob: -10.851826667785645
    5. '-
' → logprob: -11.101826667785645
    6. '           ' → logprob: -11.101826667785645
    7. '```' → logprob: -11.226826667785645
    8. '
' → logprob: -11.226826667785645
    9. '–' → logprob: -12.101826667785645
    10. 'Sunday' → logprob: -12.351826667785645

Token 1194: 'aturday' (ID: 8790)
  Prédit: 'aturday'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aturday' → logprob: -0.043191127479076385
    2. 'Saturday' → logprob: -3.1681911945343018
    3. 's' → logprob: -8.793190956115723
    4. '```' → logprob: -11.293190956115723
    5. 'at' → logprob: -11.918190956115723
    6. ' saturday' → logprob: -12.168190956115723
    7. '-' → logprob: -12.668190956115723
    8. ' Saturday' → logprob: -13.293190956115723
    9. '-s' → logprob: -13.668190956115723
    10. '#' → logprob: -13.793190956115723

Token 1195: ' number' (ID: 2086)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.18800471723079681
    2. ' number' → logprob: -2.188004732131958
    3. 'number' → logprob: -3.188004732131958
    4. '_number' → logprob: -4.063004493713379
    5. ' Number' → logprob: -7.188004493713379
    6. '_Number' → logprob: -10.438004493713379
    7. '-number' → logprob: -12.563004493713379
    8. ' ' → logprob: -12.938004493713379
    9. ' numbers' → logprob: -13.188004493713379
    10. '_NUMBER' → logprob: -13.563004493713379

Token 1196: ' per' (ID: 777)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004858458414673805
    2. ',' → logprob: -7.750485897064209
    3. '               ' → logprob: -10.12548542022705
    4. '       ' → logprob: -12.37548542022705
    5. 'continue' → logprob: -12.37548542022705
    6. '
' → logprob: -13.62548542022705
    7. '<|end|>' → logprob: -13.62548542022705
    8. ' continue' → logprob: -14.25048542022705
    9. '```' → logprob: -14.75048542022705
    10. ':' → logprob: -14.75048542022705

Token 1197: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.14869000017642975
    2. 'mod' → logprob: -2.5236899852752686
    3. ' the' → logprob: -4.898690223693848
    4. 'code' → logprob: -4.898690223693848
    5. 'specified' → logprob: -4.898690223693848
    6. 't' → logprob: -5.148690223693848
    7. '```' → logprob: -5.773690223693848
    8. 'mitted' → logprob: -5.898690223693848
    9. 'criteria' → logprob: -6.023690223693848
    10. 'spec' → logprob: -6.148690223693848

Token 1198: ' statement' (ID: 9710)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001127836643718183
    2. '               ' → logprob: -7.50112771987915
    3. ',' → logprob: -8.501128196716309
    4. '       ' → logprob: -8.876128196716309
    5. '
' → logprob: -9.501128196716309
    6. ':
' → logprob: -9.751128196716309
    7. 'continue' → logprob: -10.126128196716309
    8. ':' → logprob: -10.376128196716309
    9. ')' → logprob: -12.501128196716309
    10. ' continue' → logprob: -12.751128196716309

Token 1199: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.12127808178775e-05
    2. '
' → logprob: -11.125051498413086
    3. '       ' → logprob: -11.125051498413086
    4. ',' → logprob: -11.625051498413086
    5. 'continue' → logprob: -12.000051498413086
    6. ' continue' → logprob: -12.750051498413086
    7. '               ' → logprob: -13.250051498413086
    8. '```' → logprob: -14.250051498413086
    9. '<|end|>' → logprob: -14.750051498413086
    10. '          ' → logprob: -16.000051498413086

Token 1200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.182190554682165e-05
    2. '```' → logprob: -10.750061988830566
    3. 'continue' → logprob: -11.125061988830566
    4. ' continue' → logprob: -11.250061988830566
    5. '               ' → logprob: -12.000061988830566
    6. '       ' → logprob: -12.375061988830566
    7. '<|end|>' → logprob: -14.375061988830566
    8. ',' → logprob: -14.375061988830566
    9. '_continue' → logprob: -15.500061988830566
    10. 'Continue' → logprob: -15.875061988830566

Token 1201: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3185494840145111
    2. '           ' → logprob: -1.3185495138168335
    3. 'continue' → logprob: -5.318549633026123
    4. ' continue' → logprob: -8.193549156188965
    5. 'print' → logprob: -10.068549156188965
    6. '   ' → logprob: -10.068549156188965
    7. '```' → logprob: -11.568549156188965
    8. '
' → logprob: -13.818549156188965
    9. '	continue' → logprob: -14.193549156188965
    10. '               ' → logprob: -14.443549156188965

Token 1202: ' According' (ID: 16344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18610161542892456
    2. '           ' → logprob: -1.9361016750335693
    3. 'continue' → logprob: -3.6861016750335693
    4. ' continue' → logprob: -8.311101913452148
    5. 'print' → logprob: -8.561101913452148
    6. '   ' → logprob: -10.436101913452148
    7. '```' → logprob: -12.686101913452148
    8. '	continue' → logprob: -12.811101913452148
    9. '               ' → logprob: -13.936101913452148
    10. '_continue' → logprob: -14.186101913452148

Token 1203: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5683947205543518
    2. 'to' → logprob: -1.068394660949707
    3. ' to' → logprob: -2.568394660949707
    4. '       ' → logprob: -4.568394660949707
    5. 'continue' → logprob: -6.568394660949707
    6. '```' → logprob: -7.818394660949707
    7. '   ' → logprob: -8.693394660949707
    8. '
' → logprob: -8.818394660949707
    9. 'for' → logprob: -8.943394660949707
    10. '               ' → logprob: -9.068394660949707

Token 1204: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.1184968426823616
    2. 'the' → logprob: -2.368496894836426
    3. '#' → logprob: -4.743496894836426
    4. 'prompt' → logprob: -5.368496894836426
    5. ' problem' → logprob: -6.118496894836426
    6. 'spec' → logprob: -7.243496894836426
    7. 'instructions' → logprob: -7.493496894836426
    8. 'original' → logprob: -8.618496894836426
    9. 'comment' → logprob: -8.618496894836426
    10. 'description' → logprob: -8.618496894836426

Token 1205: ' constraints' (ID: 31060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.748939037322998
    2. ',' → logprob: -1.498939037322998
    3. 'continue' → logprob: -1.873939037322998
    4. '       ' → logprob: -2.748939037322998
    5. 'statement' → logprob: -3.123939037322998
    6. ' statement' → logprob: -4.123939037322998
    7. '               ' → logprob: -5.498939037322998
    8. ' continue' → logprob: -5.498939037322998
    9. ':' → logprob: -5.498939037322998
    10. '
' → logprob: -6.123939037322998

Token 1206: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004390134708955884
    2. 'continue' → logprob: -8.500438690185547
    3. ' continue' → logprob: -8.875438690185547
    4. '       ' → logprob: -9.500438690185547
    5. '               ' → logprob: -11.875438690185547
    6. ',' → logprob: -12.375438690185547
    7. '
' → logprob: -13.000438690185547
    8. '```' → logprob: -13.000438690185547
    9. '_continue' → logprob: -13.875438690185547
    10. '<|end|>' → logprob: -13.875438690185547

Token 1207: ' all' (ID: 722)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.205710306763649
    2. '       ' → logprob: -2.4557104110717773
    3. ' continue' → logprob: -2.8307104110717773
    4. '           ' → logprob: -3.2057104110717773
    5. '#' → logprob: -8.580710411071777
    6. 'print' → logprob: -8.955710411071777
    7. '	continue' → logprob: -9.455710411071777
    8. '   ' → logprob: -9.705710411071777
    9. '```' → logprob: -9.830710411071777
    10. 'break' → logprob: -10.205710411071777

Token 1208: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.4320906698703766
    2. 'valid' → logprob: -1.3070906400680542
    3. 'input' → logprob: -3.3070907592773438
    4. ' valid' → logprob: -3.9320907592773438
    5. 'numbers' → logprob: -4.682090759277344
    6. ' inputs' → logprob: -4.932090759277344
    7. ' input' → logprob: -6.557090759277344
    8. 'qualified' → logprob: -6.932090759277344
    9. '#' → logprob: -7.307090759277344
    10. 'such' → logprob: -7.557090759277344

Token 1209: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17117266356945038
    2. 'continue' → logprob: -2.796172618865967
    3. ' continue' → logprob: -2.921172618865967
    4. '               ' → logprob: -3.671172618865967
    5. ' are' → logprob: -4.546172618865967
    6. ' should' → logprob: -6.171172618865967
    7. ' must' → logprob: -6.796172618865967
    8. '```' → logprob: -6.921172618865967
    9. '       ' → logprob: -7.921172618865967
    10. 'should' → logprob: -8.171173095703125

Token 1210: 'except' (ID: 25035)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.757678747177124
    2. ' are' → logprob: -2.382678747177124
    3. ')' → logprob: -2.507678747177124
    4. 'should' → logprob: -2.507678747177124
    5. '           ' → logprob: -2.882678747177124
    6. 'are' → logprob: -3.007678747177124
    7. ' should' → logprob: -3.007678747177124
    8. '```' → logprob: -3.007678747177124
    9. ' must' → logprob: -4.007678985595703
    10. ' #' → logprob: -4.132678985595703

Token 1211: ' last' (ID: 2174)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1393270045518875
    2. '1' → logprob: -2.764327049255371
    3. 'break' → logprob: -3.639327049255371
    4. 'the' → logprob: -4.389327049255371
    5. 'possibly' → logprob: -4.514327049255371
    6. ' possibly' → logprob: -5.889327049255371
    7. ''' → logprob: -6.264327049255371
    8. 'for' → logprob: -6.389327049255371
    9. 'line' → logprob: -6.514327049255371
    10. '```' → logprob: -6.639327049255371

Token 1212: ' '' (ID: 461)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5304258465766907
    2. ')' → logprob: -1.405425786972046
    3. 'line' → logprob: -2.030425786972046
    4. '0' → logprob: -3.905425786972046
    5. '   ' → logprob: -5.155426025390625
    6. '"' → logprob: -5.530426025390625
    7. ' "' → logprob: -6.405426025390625
    8. ' ' → logprob: -6.905426025390625
    9. '")' → logprob: -7.405426025390625
    10. ' one' → logprob: -7.530426025390625

Token 1213: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018789494410157204
    2. '1' → logprob: -4.768789291381836
    3. ' ' → logprob: -5.268789291381836
    4. '"' → logprob: -5.768789291381836
    5. ''' → logprob: -6.518789291381836
    6. '\n' → logprob: -8.643789291381836
    7. ')' → logprob: -9.393789291381836
    8. '   ' → logprob: -10.268789291381836
    9. 'line' → logprob: -10.768789291381836
    10. '")' → logprob: -11.018789291381836

Token 1214: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003000696888193488
    2. ')
' → logprob: -9.125300407409668
    3. '")' → logprob: -9.250300407409668
    4. '')' → logprob: -9.500300407409668
    5. '       ' → logprob: -11.375300407409668
    6. '#' → logprob: -12.625300407409668
    7. '`)' → logprob: -13.625300407409668
    8. ' )' → logprob: -13.750300407409668
    9. '           ' → logprob: -14.000300407409668
    10. '   ' → logprob: -14.125300407409668

Token 1215: ' are' (ID: 553)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010162943974137306
    2. 'continue' → logprob: -5.135162830352783
    3. ' continue' → logprob: -5.760162830352783
    4. ' are' → logprob: -7.135162830352783
    5. '               ' → logprob: -9.760163307189941
    6. ' will' → logprob: -10.010163307189941
    7. '       ' → logprob: -10.010163307189941
    8. ' should' → logprob: -10.385163307189941
    9. '
' → logprob: -10.760163307189941
    10. 'are' → logprob: -11.010163307189941

Token 1216: ' MS' (ID: 15861)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.6883593797683716
    2. 'Monday' → logprob: -1.0633593797683716
    3. ' Monday' → logprob: -2.438359260559082
    4. 'valid' → logprob: -3.188359260559082
    5. ' guaranteed' → logprob: -4.188359260559082
    6. 'MS' → logprob: -6.313359260559082
    7. ' always' → logprob: -6.813359260559082
    8. ' validated' → logprob: -7.063359260559082
    9. ' MS' → logprob: -7.313359260559082
    10. 'validated' → logprob: -7.438359260559082

Token 1217: ' numbers' (ID: 8663)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.4025612771511078
    2. '_' → logprob: -1.1525613069534302
    3. ' _' → logprob: -4.652561187744141
    4. '_numbers' → logprob: -5.527561187744141
    5. 'Number' → logprob: -7.152561187744141
    6. '_Number' → logprob: -8.15256118774414
    7. '_n' → logprob: -8.40256118774414
    8. ')' → logprob: -8.52756118774414
    9. '_NUMBER' → logprob: -9.27756118774414
    10. 'number' → logprob: -9.77756118774414

Token 1218: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.338466093642637e-05
    2. '       ' → logprob: -10.375073432922363
    3. 'continue' → logprob: -11.000073432922363
    4. ' continue' → logprob: -11.375073432922363
    5. ',' → logprob: -12.250073432922363
    6. '               ' → logprob: -12.500073432922363
    7. '<|end|>' → logprob: -12.500073432922363
    8. '<|end|>' → logprob: -15.000073432922363
    9. '_continue' → logprob: -15.250073432922363
    10. '          ' → logprob: -15.625073432922363

Token 1219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002087853499688208
    2. '       ' → logprob: -8.500208854675293
    3. '               ' → logprob: -12.625208854675293
    4. ' continue' → logprob: -13.625208854675293
    5. 'continue' → logprob: -14.625208854675293
    6. '          ' → logprob: -16.375207901000977
    7. '
' → logprob: -17.000207901000977
    8. ',' → logprob: -17.500207901000977
    9. '<|end|>' → logprob: -17.500207901000977
    10. '		' → logprob: -17.500207901000977

Token 1220: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4033738672733307
    2. 'continue' → logprob: -1.1533738374710083
    3. '       ' → logprob: -4.153373718261719
    4. ' continue' → logprob: -7.403373718261719
    5. '               ' → logprob: -11.278373718261719
    6. 'print' → logprob: -11.278373718261719
    7. 'break' → logprob: -11.778373718261719
    8. '   ' → logprob: -12.153373718261719
    9. '```' → logprob: -12.653373718261719
    10. '	continue' → logprob: -12.778373718261719

Token 1221: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09908609837293625
    2. '       ' → logprob: -2.849086046218872
    3. 'continue' → logprob: -3.349086046218872
    4. ' continue' → logprob: -6.724086284637451
    5. '```' → logprob: -9.724085807800293
    6. '   ' → logprob: -10.599085807800293
    7. '
' → logprob: -11.349085807800293
    8. 'print' → logprob: -11.474085807800293
    9. '               ' → logprob: -11.724085807800293
    10. '	continue' → logprob: -13.599085807800293

Token 1222: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25482869148254395
    2. 'continue' → logprob: -1.504828691482544
    3. '       ' → logprob: -6.504828453063965
    4. ' continue' → logprob: -6.629828453063965
    5. '   ' → logprob: -10.254828453063965
    6. '               ' → logprob: -10.629828453063965
    7. '	continue' → logprob: -11.629828453063965
    8. 'print' → logprob: -12.129828453063965
    9. '```' → logprob: -13.504828453063965
    10. 'break' → logprob: -13.754828453063965

Token 1223: ' may' (ID: 1340)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.01125212199985981
    2. '           ' → logprob: -5.261251926422119
    3. '       ' → logprob: -5.886251926422119
    4. ' continue' → logprob: -6.011251926422119
    5. '   ' → logprob: -7.261251926422119
    6. '```' → logprob: -10.886252403259277
    7. 'print' → logprob: -11.136252403259277
    8. '	continue' → logprob: -11.386252403259277
    9. 'raise' → logprob: -11.386252403259277
    10. '
' → logprob: -12.261252403259277

Token 1224: ' just' (ID: 1327)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.04891026392579079
    2. '           ' → logprob: -3.42391037940979
    3. ' continue' → logprob: -4.798910140991211
    4. '```' → logprob: -5.423910140991211
    5. '       ' → logprob: -6.798910140991211
    6. '   ' → logprob: -7.048910140991211
    7. 'return' → logprob: -8.548910140991211
    8. 'raise' → logprob: -8.923910140991211
    9. 'pass' → logprob: -10.048910140991211
    10. 'skip' → logprob: -10.423910140991211

Token 1225: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -7.636475493200123e-05
    2. ' continue' → logprob: -9.750076293945312
    3. '   ' → logprob: -12.000076293945312
    4. '           ' → logprob: -12.000076293945312
    5. '```' → logprob: -12.625076293945312
    6. 'break' → logprob: -13.875076293945312
    7. 'return' → logprob: -14.000076293945312
    8. '       ' → logprob: -15.125076293945312
    9. '               ' → logprob: -16.125076293945312
    10. '	continue' → logprob: -16.625076293945312

Token 1226: ' or' (ID: 503)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1453823745250702
    2. '           ' → logprob: -2.5203824043273926
    3. '       ' → logprob: -3.1453824043273926
    4. ' continue' → logprob: -5.645382404327393
    5. 'line' → logprob: -6.020382404327393
    6. '
' → logprob: -6.270382404327393
    7. ' line' → logprob: -6.645382404327393
    8. 'the' → logprob: -6.645382404327393
    9. '   ' → logprob: -7.770382404327393
    10. ' the' → logprob: -8.395381927490234

Token 1227: ' raise' (ID: 9338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0028581321239471436
    2. 'break' → logprob: -6.5028581619262695
    3. 'raise' → logprob: -7.2528581619262695
    4. 'print' → logprob: -7.5028581619262695
    5. ' continue' → logprob: -10.00285816192627
    6. 'return' → logprob: -10.50285816192627
    7. 'pass' → logprob: -11.75285816192627
    8. '   ' → logprob: -11.87785816192627
    9. '```' → logprob: -12.50285816192627
    10. '       ' → logprob: -13.50285816192627

Token 1228: '
' (ID: 198)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.13369549810886383
    2. ' Value' → logprob: -2.133695602416992
    3. 'Runtime' → logprob: -5.883695602416992
    4. '           ' → logprob: -6.508695602416992
    5. ' Runtime' → logprob: -7.133695602416992
    6. 'Exception' → logprob: -7.758695602416992
    7. '
' → logprob: -9.008695602416992
    8. '

' → logprob: -9.008695602416992
    9. '(Value' → logprob: -9.008695602416992
    10. '            
' → logprob: -9.133695602416992

Token 1229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.240481914370321e-05
    2. 'continue' → logprob: -10.250052452087402
    3. ' continue' → logprob: -11.875052452087402
    4. '       ' → logprob: -12.250052452087402
    5. '```' → logprob: -12.500052452087402
    6. '               ' → logprob: -14.250052452087402
    7. 'raise' → logprob: -14.250052452087402
    8. '
' → logprob: -16.000051498413086
    9. '          ' → logprob: -16.750051498413086
    10. '		' → logprob: -16.875051498413086

Token 1230: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0894283726811409
    2. 'continue' (adapté à ' continue') → logprob: -2.589428424835205
    3. ' continue' → logprob: -4.589428424835205
    4. 'raise' → logprob: -8.214427947998047
    5. '       ' → logprob: -10.714427947998047
    6. '               ' → logprob: -11.339427947998047
    7. ' raise' → logprob: -12.214427947998047
    8. 'return' → logprob: -12.339427947998047
    9. '		' → logprob: -12.964427947998047
    10. '   ' → logprob: -13.089427947998047

Token 1231: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004490177612751722
    2. '<|end|>' → logprob: -5.879490375518799
    3. '        
' → logprob: -6.504490375518799
    4. '
' → logprob: -9.37948989868164
    5. '```' → logprob: -10.00448989868164
    6. '<|end|>' → logprob: -10.62948989868164
    7. '           ' → logprob: -11.75448989868164
    8. '  
' → logprob: -12.25448989868164
    9. '    
' → logprob: -12.37948989868164
    10. '   ' → logprob: -12.62948989868164

Token 1232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038905765395611525
    2. '   ' → logprob: -5.753890514373779
    3. 'result' → logprob: -8.253890991210938
    4. '        
' → logprob: -8.878890991210938
    5. '```' → logprob: -9.378890991210938
    6. '<|end|>' → logprob: -9.503890991210938
    7. 'factor' → logprob: -9.628890991210938
    8. 'tokens' → logprob: -10.253890991210938
    9. 'results' → logprob: -10.753890991210938
    10. '    
' → logprob: -11.753890991210938

Token 1233: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001597460824996233
    2. '       ' → logprob: -6.6265974044799805
    3. 'factor' → logprob: -8.37659740447998
    4. ' factors' → logprob: -10.75159740447998
    5. 'ms' → logprob: -11.75159740447998
    6. 'fact' → logprob: -12.75159740447998
    7. '   ' → logprob: -12.87659740447998
    8. 'prime' → logprob: -12.87659740447998
    9. '	f' → logprob: -14.12659740447998
    10. '_f' → logprob: -14.50159740447998

Token 1234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8863869309425354
    2. ' =' → logprob: -0.8863869309425354
    3. '.' → logprob: -2.6363868713378906
    4. '.add' → logprob: -2.7613868713378906
    5. '.update' → logprob: -3.3863868713378906
    6. '.=' → logprob: -5.511386871337891
    7. '   ' → logprob: -6.761386871337891
    8. '       ' → logprob: -7.761386871337891
    9. '.setdefault' → logprob: -7.761386871337891
    10. ' .' → logprob: -8.63638687133789

Token 1235: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.06196846812963486
    2. ' factor' → logprob: -2.8119685649871826
    3. '   ' → logprob: -15.311968803405762
    4. 'fact' → logprob: -15.436968803405762
    5. '       ' → logprob: -16.936967849731445
    6. 'set' → logprob: -17.311967849731445
    7. ' fator' → logprob: -17.311967849731445
    8. ' ' → logprob: -17.811967849731445
    9. '.factor' → logprob: -17.811967849731445
    10. 'Factor' → logprob: -18.061967849731445

Token 1236: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.0001334559783572331
    2. 'ize' → logprob: -9.000133514404297
    3. '       ' → logprob: -11.875133514404297
    4. 'izers' → logprob: -13.375133514404297
    5. ' =' → logprob: -14.875133514404297
    6. 'er' → logprob: -15.000133514404297
    7. 'ized' → logprob: -15.125133514404297
    8. '   ' → logprob: -15.250133514404297
    9. 'iz' → logprob: -16.125133514404297
    10. 'IZER' → logprob: -16.500133514404297

Token 1237: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0009236076730303466
    2. 'factor' → logprob: -7.0009236335754395
    3. ' .' → logprob: -11.750923156738281
    4. '   ' → logprob: -13.375923156738281
    5. '_factor' → logprob: -13.625923156738281
    6. '.' → logprob: -14.500923156738281
    7. '=' → logprob: -15.000923156738281
    8. ' factor' → logprob: -15.375923156738281
    9. ' =' → logprob: -15.500923156738281
    10. '.fac' → logprob: -16.37592315673828

Token 1238: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -7.896309739408025e-07
    2. '{' → logprob: -15.750000953674316
    3. '```' → logprob: -16.125
    4. '   ' → logprob: -16.375
    5. 'ialize' → logprob: -16.5
    6. '(' → logprob: -16.5
    7. '_' → logprob: -16.625
    8. '       ' → logprob: -17.5
    9. 'izes' → logprob: -17.875
    10. 'i' → logprob: -18.0

Token 1239: '(ms' (ID: 77927)
  Prédit: '(ms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ms' → logprob: -0.00023393364972434938
    2. '(f' → logprob: -9.12523365020752
    3. 'ms' → logprob: -9.62523365020752
    4. '(M' → logprob: -9.87523365020752
    5. 'f' → logprob: -12.87523365020752
    6. '	ms' → logprob: -13.75023365020752
    7. '(
' → logprob: -14.12523365020752
    8. '(' → logprob: -14.37523365020752
    9. '(m' → logprob: -14.50023365020752
    10. '(n' → logprob: -14.50023365020752

Token 1240: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.001014706795103848
    2. 'number' → logprob: -7.001014709472656
    3. '(ms' → logprob: -10.001014709472656
    4. 'ms' → logprob: -10.126014709472656
    5. '_ms' → logprob: -11.501014709472656
    6. '(number' → logprob: -12.751014709472656
    7. '(n' → logprob: -13.376014709472656
    8. '_n' → logprob: -14.126014709472656
    9. '_numbers' → logprob: -14.501014709472656
    10. '(m' → logprob: -15.251014709472656

Token 1241: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07306845486164093
    2. '()' → logprob: -3.073068380355835
    3. '()
' → logprob: -4.073068618774414
    4. ',' → logprob: -5.698068618774414
    5. ')' → logprob: -6.698068618774414
    6. '<|end|>' → logprob: -7.073068618774414
    7. '(' → logprob: -8.073068618774414
    8. '())' → logprob: -8.323068618774414
    9. '(
' → logprob: -8.698068618774414
    10. '        
' → logprob: -8.823068618774414

Token 1242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023047674039844424
    2. '   ' → logprob: -9.12523078918457
    3. '        
' → logprob: -9.50023078918457
    4. '<|end|>' → logprob: -10.12523078918457
    5. '           ' → logprob: -13.50023078918457
    6. '```' → logprob: -13.62523078918457
    7. '
' → logprob: -13.87523078918457
    8. 'for' → logprob: -13.87523078918457
    9. '    
' → logprob: -14.62523078918457
    10. 'print' → logprob: -14.62523078918457

Token 1243: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028109403792768717
    2. 'sorted' → logprob: -7.002810955047607
    3. 'print' → logprob: -7.127810955047607
    4. 'for' → logprob: -7.627810955047607
    5. 'f' → logprob: -7.877810955047607
    6. 'factor' → logprob: -9.25281047821045
    7. '```' → logprob: -9.62781047821045
    8. 'output' → logprob: -11.12781047821045
    9. '   ' → logprob: -11.25281047821045
    10. 'results' → logprob: -11.37781047821045

Token 1244: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19679482281208038
    2. 'for' → logprob: -2.4467947483062744
    3. 'f' → logprob: -3.1967947483062744
    4. '       ' → logprob: -3.4467947483062744
    5. 'sorted' → logprob: -4.0717949867248535
    6. 'output' → logprob: -6.1967949867248535
    7. 'result' → logprob: -9.196794509887695
    8. 'if' → logprob: -10.196794509887695
    9. 'factor' → logprob: -10.321794509887695
    10. '   ' → logprob: -10.821794509887695

Token 1245: ' factors' (ID: 11652)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2532616853713989
    2. 'print' → logprob: -1.503261685371399
    3. 'for' → logprob: -7.128261566162109
    4. ' print' → logprob: -7.878261566162109
    5. 'f' → logprob: -10.00326156616211
    6. 'sorted' → logprob: -10.25326156616211
    7. 'output' → logprob: -10.75326156616211
    8. 'tokens' → logprob: -10.87826156616211
    9. '```' → logprob: -11.50326156616211
    10. ' for' → logprob: -11.62826156616211

Token 1246: ' sorted' (ID: 20099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029029499273747206
    2. ',' → logprob: -9.500289916992188
    3. '(sorted' → logprob: -9.875289916992188
    4. ' for' → logprob: -10.125289916992188
    5. 'sorted' → logprob: -10.250289916992188
    6. ' sorted' → logprob: -10.375289916992188
    7. 'for' → logprob: -10.750289916992188
    8. ':' → logprob: -12.125289916992188
    9. '```' → logprob: -12.125289916992188
    10. '   ' → logprob: -12.500289916992188

Token 1247: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021771252155303955
    2. '(sorted' → logprob: -4.896771430969238
    3. 'sorted' → logprob: -5.271771430969238
    4. '(f' → logprob: -5.896771430969238
    5. ',' → logprob: -6.521771430969238
    6. '   ' → logprob: -7.021771430969238
    7. 'f' → logprob: -7.271771430969238
    8. '(' → logprob: -7.271771430969238
    9. 'tokens' → logprob: -7.271771430969238
    10. 'factor' → logprob: -8.021771430969238

Token 1248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010848517995327711
    2. ',' → logprob: -6.876084804534912
    3. 'print' → logprob: -10.75108528137207
    4. 'sorted' → logprob: -11.87608528137207
    5. '   ' → logprob: -12.00108528137207
    6. ',
' → logprob: -12.87608528137207
    7. '
' → logprob: -12.87608528137207
    8. '```' → logprob: -13.12608528137207
    9. '(sorted' → logprob: -13.62608528137207
    10. 'f' → logprob: -13.87608528137207

Token 1249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031434930860996246
    2. 'for' → logprob: -6.253143310546875
    3. 'print' → logprob: -6.878143310546875
    4. '```' → logprob: -9.628143310546875
    5. 'sorted' → logprob: -10.253143310546875
    6. '   ' → logprob: -10.253143310546875
    7. ' for' → logprob: -10.753143310546875
    8. 'output' → logprob: -12.003143310546875
    9. ',' → logprob: -12.003143310546875
    10. 'factor' → logprob: -12.253143310546875

Token 1250: ' factors' (ID: 11652)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4570596218109131
    2. '       ' → logprob: -1.207059621810913
    3. 'for' → logprob: -2.707059621810913
    4. 'f' → logprob: -8.082059860229492
    5. ' print' → logprob: -8.707059860229492
    6. ' for' → logprob: -8.707059860229492
    7. 'output' → logprob: -8.707059860229492
    8. 'sorted' → logprob: -8.707059860229492
    9. 'factor' → logprob: -10.332059860229492
    10. '```' → logprob: -10.332059860229492

Token 1251: '_sorted' (ID: 104993)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2676391899585724
    2. '=' → logprob: -1.64263916015625
    3. '_sorted' → logprob: -3.39263916015625
    4. '_list' → logprob: -5.01763916015625
    5. '   ' → logprob: -7.64263916015625
    6. 'sorted' → logprob: -7.76763916015625
    7. '.sort' → logprob: -10.39263916015625
    8. '_' → logprob: -10.64263916015625
    9. '_tokens' → logprob: -10.89263916015625
    10. '       ' → logprob: -10.89263916015625

Token 1252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25251805782318115
    2. ' =' → logprob: -1.5025180578231812
    3. '_f' → logprob: -8.377517700195312
    4. '=f' → logprob: -9.127517700195312
    5. '   ' → logprob: -9.252517700195312
    6. 'f' → logprob: -9.877517700195312
    7. '()' → logprob: -10.502517700195312
    8. '_list' → logprob: -10.877517700195312
    9. '=list' → logprob: -11.127517700195312
    10. '_sorted' → logprob: -11.627517700195312

Token 1253: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.306760805164231e-05
    2. ' sorted' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.62501335144043
    4. 'list' → logprob: -19.12501335144043
    5. '(sorted' → logprob: -19.75001335144043
    6. 'sort' → logprob: -22.00001335144043
    7. '.sorted' → logprob: -23.00001335144043
    8. '  ' → logprob: -24.00001335144043
    9. 'Sorted' → logprob: -24.50001335144043
    10. '       ' → logprob: -24.75001335144043

Token 1254: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.248469718324486e-05
    2. 'f' → logprob: -10.750022888183594
    3. '(' → logprob: -14.375022888183594
    4. '(list' → logprob: -15.375022888183594
    5. '(
' → logprob: -16.250022888183594
    6. 'list' → logprob: -17.375022888183594
    7. '	f' → logprob: -18.125022888183594
    8. '()' → logprob: -19.250022888183594
    9. ' factors' → logprob: -19.375022888183594
    10. 'Factors' → logprob: -19.375022888183594

Token 1255: 'actors' (ID: 37126)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.004124349914491177
    2. 'f' → logprob: -5.504124164581299
    3. 'actors' → logprob: -10.379124641418457
    4. '(list' → logprob: -11.754124641418457
    5. 'list' → logprob: -12.129124641418457
    6. '	f' → logprob: -14.254124641418457
    7. ' factors' → logprob: -15.129124641418457
    8. 'Factors' → logprob: -15.379124641418457
    9. ')' → logprob: -15.504124641418457
    10. '.f' → logprob: -16.50412368774414

Token 1256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4031389653682709
    2. '()' → logprob: -2.2781388759613037
    3. ')
' → logprob: -2.7781388759613037
    4. '()
' → logprob: -2.7781388759613037
    5. '(f' → logprob: -3.1531388759613037
    6. ',' → logprob: -3.4031388759613037
    7. '())' → logprob: -4.653139114379883
    8. '(' → logprob: -4.778139114379883
    9. '())
' → logprob: -5.278139114379883
    10. '       ' → logprob: -6.278139114379883

Token 1257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029947367147542536
    2. 'for' → logprob: -8.750299453735352
    3. '   ' → logprob: -9.250299453735352
    4. ' for' → logprob: -10.375299453735352
    5. 'print' → logprob: -11.625299453735352
    6. '```' → logprob: -12.500299453735352
    7. '`' → logprob: -15.125299453735352
    8. ',' → logprob: -15.375299453735352
    9. '           ' → logprob: -15.500299453735352
    10. '        
' → logprob: -16.25029945373535

Token 1258: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48949339985847473
    2. 'print' (adapté à ' print') → logprob: -0.9894933700561523
    3. 'for' → logprob: -4.239493370056152
    4. ' for' → logprob: -7.739493370056152
    5. ' print' → logprob: -7.864493370056152
    6. '```' → logprob: -9.989493370056152
    7. '   ' → logprob: -11.239493370056152
    8. '           ' → logprob: -13.614493370056152
    9. '`' → logprob: -13.739493370056152
    10. '
' → logprob: -13.989493370056152

Token 1259: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06851082295179367
    2. '('' → logprob: -2.8185107707977295
    3. '(*' → logprob: -5.068511009216309
    4. '(' → logprob: -8.818511009216309
    5. '"' → logprob: -9.943511009216309
    6. '(f' → logprob: -10.443511009216309
    7. ''' → logprob: -12.818511009216309
    8. '(",' → logprob: -13.943511009216309
    9. '(
' → logprob: -15.068511009216309
    10. '("("' → logprob: -15.693511009216309

Token 1260: '"{' (ID: 27510)
  Prédit: 'actors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.005655487067997456
    2. '"' → logprob: -5.505655288696289
    3. ''' → logprob: -6.630655288696289
    4. 'actor' → logprob: -9.130655288696289
    5. '"{' → logprob: -9.755655288696289
    6. '(' → logprob: -10.755655288696289
    7. '('' → logprob: -10.880655288696289
    8. '("' → logprob: -11.255655288696289
    9. '(*' → logprob: -11.255655288696289
    10. 'act' → logprob: -12.130655288696289

Token 1261: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016814647242426872
    2. '',' → logprob: -4.516814708709717
    3. 'f' → logprob: -5.641814708709717
    4. ''n' → logprob: -7.016814708709717
    5. 'n' → logprob: -7.766814708709717
    6. ' '' → logprob: -8.516814231872559
    7. '','.' → logprob: -8.516814231872559
    8. ''f' → logprob: -8.891814231872559
    9. ''m' → logprob: -9.141814231872559
    10. ''s' → logprob: -9.516814231872559

Token 1262: '}' (ID: 92)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2127254456281662
    2. '}:' → logprob: -1.9627254009246826
    3. '}' → logprob: -3.9627254009246826
    4. '":' → logprob: -4.212725639343262
    5. ' :' → logprob: -5.712725639343262
    6. ' {'' → logprob: -6.087725639343262
    7. ':",' → logprob: -6.212725639343262
    8. ' =' → logprob: -6.462725639343262
    9. '}:{' → logprob: -6.587725639343262
    10. '=' → logprob: -6.587725639343262

Token 1263: ':"' (ID: 5731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24582305550575256
    2. ' =' → logprob: -2.7458231449127197
    3. ' {'' → logprob: -3.6208231449127197
    4. '{' → logprob: -3.7458231449127197
    5. '":' → logprob: -3.7458231449127197
    6. '=' → logprob: -3.9958231449127197
    7. ',' → logprob: -4.120822906494141
    8. ' :' → logprob: -4.495822906494141
    9. '{'' → logprob: -4.495822906494141
    10. '"' → logprob: -5.120822906494141

Token 1264: ' +' (ID: 659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11216353625059128
    2. ' ' → logprob: -3.237163543701172
    3. ''' → logprob: -4.237163543701172
    4. ' "' → logprob: -4.612163543701172
    5. ' f' → logprob: -4.737163543701172
    6. '    ' → logprob: -5.362163543701172
    7. ' {'' → logprob: -5.362163543701172
    8. ' {' → logprob: -5.612163543701172
    9. '<|end|>' → logprob: -5.737163543701172
    10. ' {"' → logprob: -5.862163543701172

Token 1265: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.010045873932540417
    2. ''' → logprob: -4.760046005249023
    3. ' "' → logprob: -7.010046005249023
    4. ' f' → logprob: -8.010046005249023
    5. 'f' → logprob: -9.260046005249023
    6. ' '' → logprob: -9.885046005249023
    7. '""' → logprob: -11.010046005249023
    8. '('' → logprob: -12.010046005249023
    9. '<|end|>' → logprob: -12.010046005249023
    10. '("' → logprob: -12.135046005249023

Token 1266: 'join' (ID: 10891)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002060330705717206
    2. ''' → logprob: -6.502060413360596
    3. 'f' → logprob: -8.877059936523438
    4. ' "' → logprob: -9.377059936523438
    5. ' ' → logprob: -9.627059936523438
    6. '("' → logprob: -9.752059936523438
    7. '```' → logprob: -10.002059936523438
    8. ' f' → logprob: -10.377059936523438
    9. 'for' → logprob: -11.002059936523438
    10. '
' → logprob: -11.252059936523438

Token 1267: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08102167397737503
    2. ' f' → logprob: -2.831021785736084
    3. '[f' → logprob: -4.206021785736084
    4. '"' → logprob: -5.831021785736084
    5. '(f' → logprob: -6.956021785736084
    6. '[' → logprob: -9.706021308898926
    7. ''' → logprob: -12.331021308898926
    8. '```' → logprob: -12.581021308898926
    9. '["' → logprob: -12.706021308898926
    10. '
' → logprob: -13.706021308898926

Token 1268: '"' (ID: 1)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1866832673549652
    2. 'f' → logprob: -2.311683177947998
    3. '"' → logprob: -2.686683177947998
    4. '[f' → logprob: -5.936683177947998
    5. '(f' → logprob: -8.186683654785156
    6. '[' → logprob: -10.061683654785156
    7. ' "' → logprob: -10.436683654785156
    8. ' [' → logprob: -10.936683654785156
    9. '   ' → logprob: -11.311683654785156
    10. '["' → logprob: -11.311683654785156

Token 1269: ' {' (ID: 354)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.009022239595651627
    2. ' {' → logprob: -5.634022235870361
    3. 'f' → logprob: -5.884022235870361
    4. '"' → logprob: -6.259022235870361
    5. ' ' → logprob: -7.759022235870361
    6. '{' → logprob: -9.13402271270752
    7. ' {"' → logprob: -10.00902271270752
    8. '(f' → logprob: -10.38402271270752
    9. ' ' → logprob: -10.50902271270752
    10. ' (' → logprob: -10.50902271270752

Token 1270: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10135871171951294
    2. 'factor' → logprob: -2.351358652114868
    3. '{' → logprob: -6.851358890533447
    4. 'fact' → logprob: -9.601358413696289
    5. 'x' → logprob: -11.726358413696289
    6. 'fac' → logprob: -11.851358413696289
    7. 'p' → logprob: -12.226358413696289
    8. 'fs' → logprob: -13.351358413696289
    9. ' f' → logprob: -14.351358413696289
    10. 'str' → logprob: -14.476358413696289

Token 1271: '}"' (ID: 21503)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.021876230835914612
    2. '}{' → logprob: -4.021876335144043
    3. '{' → logprob: -6.021876335144043
    4. '}' → logprob: -7.646876335144043
    5. 'act' → logprob: -8.271876335144043
    6. '}")' → logprob: -8.521876335144043
    7. 'actors' → logprob: -8.771876335144043
    8. 'factor' → logprob: -9.521876335144043
    9. 'f' → logprob: -10.021876335144043
    10. '}"' → logprob: -10.771876335144043

Token 1272: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11552703380584717
    2. ' for' → logprob: -2.4905271530151367
    3. ')' → logprob: -4.490527153015137
    4. '{' → logprob: -4.740527153015137
    5. 'f' → logprob: -5.240527153015137
    6. ' f' → logprob: -7.240527153015137
    7. '       ' → logprob: -9.990527153015137
    8. '(f' → logprob: -10.115527153015137
    9. '   ' → logprob: -10.240527153015137
    10. '}' → logprob: -10.365527153015137

Token 1273: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.2729995988775045e-06
    2. ' f' → logprob: -12.000006675720215
    3. 'factor' → logprob: -16.7500057220459
    4. '	f' → logprob: -17.0000057220459
    5. '_f' → logprob: -20.1250057220459
    6. '
' → logprob: -20.7500057220459
    7. 'fact' → logprob: -21.1250057220459
    8. '   ' → logprob: -21.6250057220459
    9. ' ' → logprob: -22.1250057220459
    10. ',f' → logprob: -22.5000057220459

Token 1274: ' in' (ID: 306)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0067154900170862675
    2. ' f' → logprob: -5.006715297698975
    3. '	f' → logprob: -16.881715774536133
    4. ' in' → logprob: -17.006715774536133
    5. ',f' → logprob: -17.256715774536133
    6. 'factor' → logprob: -17.256715774536133
    7. '_f' → logprob: -17.381715774536133
    8. 'fact' → logprob: -19.881715774536133
    9. '(f' → logprob: -20.256715774536133
    10. ' ' → logprob: -20.256715774536133

Token 1275: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.5597102396423e-05
    2. ' factors' → logprob: -10.250035285949707
    3. 'factor' → logprob: -15.875035285949707
    4. 'fact' → logprob: -17.625036239624023
    5. 'sorted' → logprob: -17.875036239624023
    6. 'facts' → logprob: -18.250036239624023
    7. '   ' → logprob: -18.375036239624023
    8. 'fac' → logprob: -18.625036239624023
    9. '	f' → logprob: -19.875036239624023
    10. ' f' → logprob: -20.375036239624023

Token 1276: '_sorted' (ID: 104993)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008388153510168195
    2. '<|end|>' → logprob: -7.625838756561279
    3. ')}' → logprob: -8.500839233398438
    4. ')}}' → logprob: -10.875839233398438
    5. '))' → logprob: -11.250839233398438
    6. '}' → logprob: -11.375839233398438
    7. '       ' → logprob: -11.500839233398438
    8. '<|end|>' → logprob: -11.875839233398438
    9. '")' → logprob: -12.000839233398438
    10. ' )' → logprob: -12.125839233398438

Token 1277: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011434339685365558
    2. '))' → logprob: -6.876143455505371
    3. ')")' → logprob: -9.876143455505371
    4. '")' → logprob: -10.626143455505371
    5. '())' → logprob: -11.376143455505371
    6. '})' → logprob: -11.501143455505371
    7. ')
' → logprob: -12.251143455505371
    8. ')}' → logprob: -12.376143455505371
    9. '}")' → logprob: -13.251143455505371
    10. ')`' → logprob: -14.626143455505371

Token 1278: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1279: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03804286941885948
    2. ' __' → logprob: -3.2880427837371826
    3. 'True' → logprob: -14.538043022155762
    4. '___' → logprob: -15.038043022155762
    5. ' True' → logprob: -16.038042068481445
    6. 'name' → logprob: -16.038042068481445
    7. '```' → logprob: -16.163042068481445
    8. 'if' → logprob: -16.288042068481445
    9. '_name' → logprob: -16.788042068481445
    10. '_' → logprob: -16.788042068481445

Token 1280: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009548415429890156
    2. '==' → logprob: -5.259548187255859
    3. ' ==' → logprob: -5.759548187255859
    4. '=="' → logprob: -7.384548187255859
    5. 'if' → logprob: -8.38454818725586
    6. 'name' → logprob: -9.25954818725586
    7. ' __' → logprob: -9.38454818725586
    8. '```' → logprob: -10.13454818725586
    9. '.__' → logprob: -11.50954818725586
    10. '[' → logprob: -11.50954818725586

Token 1281: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015949610387906432
    2. '==' → logprob: -6.7515950202941895
    3. '=="' → logprob: -7.8765950202941895
    4. ' ==' → logprob: -10.876594543457031
    5. '__.__' → logprob: -11.751594543457031
    6. '```' → logprob: -12.001594543457031
    7. '__["' → logprob: -12.751594543457031
    8. '__":
' → logprob: -12.876594543457031
    9. '=='' → logprob: -13.126594543457031
    10. '"' → logprob: -13.876594543457031

Token 1282: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4573824107646942
    2. '__' → logprob: -1.2073824405670166
    3. '=="' → logprob: -3.0823824405670166
    4. ' ==' → logprob: -3.8323824405670166
    5. '=='' → logprob: -7.9573822021484375
    6. '["' → logprob: -9.832382202148438
    7. '__["' → logprob: -9.957382202148438
    8. '[' → logprob: -10.207382202148438
    9. '__.__' → logprob: -10.457382202148438
    10. '==
' → logprob: -11.707382202148438

Token 1283: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011144026182591915
    2. ''' → logprob: -4.511144161224365
    3. '__' → logprob: -9.261143684387207
    4. ' "__' → logprob: -14.136143684387207
    5. '   ' → logprob: -15.511143684387207
    6. '"name' → logprob: -16.261144638061523
    7. ''"' → logprob: -17.011144638061523
    8. '"default' → logprob: -17.261144638061523
    9. 'main' → logprob: -17.386144638061523
    10. '"user' → logprob: -17.636144638061523

Token 1284: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.8206473871250637e-05
    2. '"' → logprob: -11.000028610229492
    3. 'name' → logprob: -12.000028610229492
    4. ''' → logprob: -12.750028610229492
    5. '__' → logprob: -13.250028610229492
    6. ' main' → logprob: -14.875028610229492
    7. '_main' → logprob: -15.875028610229492
    8. ''m' → logprob: -16.750028610229492
    9. '(main' → logprob: -17.125028610229492
    10. '	main' → logprob: -17.750028610229492

Token 1285: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20901669561862946
    2. '__' → logprob: -1.7090166807174683
    3. '__':
' → logprob: -5.209016799926758
    4. '__["' → logprob: -7.459016799926758
    5. '.__' → logprob: -7.959016799926758
    6. '.' → logprob: -8.334016799926758
    7. '__.' → logprob: -8.584016799926758
    8. '==' → logprob: -9.209016799926758
    9. '__.__' → logprob: -9.209016799926758
    10. '[' → logprob: -9.334016799926758

Token 1286: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.052060019224882126
    2. '   ' → logprob: -3.677060127258301
    3. ' main' → logprob: -3.802060127258301
    4. '	main' → logprob: -6.052060127258301
    5. '__' → logprob: -7.927060127258301
    6. '_main' → logprob: -8.8020601272583
    7. '(main' → logprob: -9.0520601272583
    8. '    
' → logprob: -9.9270601272583
    9. '```' → logprob: -10.3020601272583
    10. 'import' → logprob: -10.8020601272583

Token 1287: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.875
    3. '	main' → logprob: -17.875
    4. '_main' → logprob: -19.375
    5. '   ' → logprob: -19.625
    6. 'import' → logprob: -20.375
    7. '(main' → logprob: -20.625
    8. '__' → logprob: -21.25
    9. '```' → logprob: -22.625
    10. '.main' → logprob: -22.75

Token 1288: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1286
Tokens correctement prédits (1ère position, stricte): 538
Tokens correctement prédits (1ère position, avec adaptation): 585
Tokens correctement prédits (top 10): 1068
Précision stricte (1ère position): 41.84%
Précision adaptée (1ère position): 45.49%
Précision (top 10): 83.05%
================================================================================
