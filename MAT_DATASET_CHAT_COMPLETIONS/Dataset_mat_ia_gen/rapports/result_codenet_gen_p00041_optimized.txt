================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from itertools import permutations, product

ops = [('+', lambda x,y: x+y), ('-', lambda x,y: x-y), ('*', lambda x,y: x*y)]

# 5 formes d'expressions parenthésées avec 4 nombres et 3 opérateurs
def expressions(nums, ops_seq):
    a,b,c,d = nums
    op1, op2, op3 = ops_seq
    # ((a op b) op c) op d
    yield f"(({a} {op1[0]} {b}) {op2[0]} {c}) {op3[0]} {d}", op3[1](op2[1](op1[1](a,b), c), d)
    # (a op (b op c)) op d
    val1 = op1[1](a, op2[1](b,c))
    yield f"({a} {op1[0]} ({b} {op2[0]} {c})) {op3[0]} {d}", op3[1](val1, d)
    # a op ((b op c) op d)
    val2 = op3[1](op2[1](b,c), d)
    yield f"{a} {op1[0]} (({b} {op2[0]} {c}) {op3[0]} {d})", op1[1](a, val2)
    # a op (b op (c op d))
    val3 = op3[1](c,d)
    val4 = op2[1](b,val3)
    yield f"{a} {op1[0]} ({b} {op2[0]} ({c} {op3[0]} {d}))", op1[1](a,val4)
    # (a op b) op (c op d)
    val5 = op1[1](a,b)
    val6 = op3[1](c,d)
    yield f"({a} {op1[0]} {b}) {op2[0]} ({c} {op3[0]} {d})", op2[1](val5,val6)

for line in sys.stdin:
    if not line.strip():
        continue
    parts = line.strip().split()
    if len(parts)!=4:
        continue
    a,b,c,d = map(int, parts)
    if a==0 and b==0 and c==0 and d==0:
        break
    found = False
    for nums in permutations([a,b,c,d]):
        for ops_seq in product(ops, repeat=3):
            for expr_s, val in expressions(nums, ops_seq):
                if val == 10:
                    if len(expr_s) <= 1024:
                        print(expr_s)
                        found = True
                        break
            if found:
                break
        if found:
            break
    if not found:
        print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.018864832818508148
    2. 'os' → logprob: -4.268864631652832
    3. ' collections' → logprob: -6.643864631652832
    4. ' math' → logprob: -7.518864631652832
    5. ' Py' → logprob: -7.518864631652832
    6. ' pathlib' → logprob: -7.518864631652832
    7. ' ' → logprob: -7.893864631652832
    8. ' typing' → logprob: -8.393864631652832
    9. 'collections' → logprob: -8.518864631652832
    10. ' datetime' → logprob: -8.643864631652832

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.26193737983703613
    2. 'import' → logprob: -1.5119373798370361
    3. '.' → logprob: -4.636937141418457
    4. '	import' → logprob: -9.261937141418457
    5. '.import' → logprob: -9.511937141418457
    6. ' .' → logprob: -10.011937141418457
    7. ' ' → logprob: -11.136937141418457
    8. '<|end|>' → logprob: -11.386937141418457
    9. '_import' → logprob: -12.011937141418457
    10. '.im' → logprob: -12.636937141418457

Token 6: ' permutations' (ID: 174595)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0789483785629272
    2. 'chain' → logprob: -2.203948497772217
    3. 'com' → logprob: -2.328948497772217
    4. 'product' → logprob: -2.328948497772217
    5. 'group' → logprob: -2.453948497772217
    6. 'cycle' → logprob: -2.703948497772217
    7. ' group' → logprob: -3.203948497772217
    8. 'per' → logprob: -3.328948497772217
    9. ' chain' → logprob: -3.578948497772217
    10. ' permutations' → logprob: -3.703948497772217

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11342145502567291
    2. '\' → logprob: -3.2384214401245117
    3. '\n' → logprob: -3.4884214401245117
    4. '.' → logprob: -4.113421440124512
    5. 'import' → logprob: -5.363421440124512
    6. '\(' → logprob: -5.738421440124512
    7. '(
' → logprob: -5.863421440124512
    8. '```' → logprob: -6.363421440124512
    9. 'newline' → logprob: -6.738421440124512
    10. '<|end|>' → logprob: -6.988421440124512

Token 8: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.45226770639419556
    2. ' combinations' → logprob: -1.4522676467895508
    3. ' product' → logprob: -2.577267646789551
    4. 'product' → logprob: -2.952267646789551
    5. 'chain' → logprob: -7.577267646789551
    6. '```' → logprob: -8.20226764678955
    7. ' chain' → logprob: -8.45226764678955
    8. '	com' → logprob: -8.70226764678955
    9. ' ' → logprob: -8.95226764678955
    10. ' combin' → logprob: -9.82726764678955

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1652216911315918
    2. '<|end|>' → logprob: -1.1652216911315918
    3. '(' → logprob: -2.415221691131592
    4. '```' → logprob: -2.540221691131592
    5. '\' → logprob: -2.540221691131592
    6. 'import' → logprob: -3.290221691131592
    7. '<|end|>' → logprob: -3.415221691131592
    8. ',' → logprob: -4.165221691131592
    9. 'newline' → logprob: -4.540221691131592
    10. '.' → logprob: -5.290221691131592

Token 10: 'ops' (ID: 4645)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.585627019405365
    2. '```' → logprob: -2.2106270790100098
    3. '\' → logprob: -2.7106270790100098
    4. 'for' → logprob: -2.8356270790100098
    5. '.' → logprob: -3.0856270790100098
    6. ',' → logprob: -3.3356270790100098
    7. '\n' → logprob: -3.3356270790100098
    8. 'def' → logprob: -3.5856270790100098
    9. '(' → logprob: -4.33562707901001
    10. '`' → logprob: -4.58562707901001

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4393303394317627
    2. '=' → logprob: -1.0643303394317627
    3. '.' → logprob: -4.814330101013184
    4. '[' → logprob: -6.814330101013184
    5. '(' → logprob: -7.939330101013184
    6. '_' → logprob: -8.189330101013184
    7. ')' → logprob: -8.564330101013184
    8. ' ' → logprob: -9.064330101013184
    9. '_ops' → logprob: -9.439330101013184
    10. 'space' → logprob: -10.189330101013184

Token 12: ' [' (ID: 723)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.711520791053772
    2. ' ['' → logprob: -0.711520791053772
    3. '["' → logprob: -4.711520671844482
    4. ' ["' → logprob: -5.711520671844482
    5. '[' → logprob: -6.336520671844482
    6. '["+' → logprob: -6.336520671844482
    7. ' [' → logprob: -7.336520671844482
    8. ''+' → logprob: -8.33652114868164
    9. ''' → logprob: -8.33652114868164
    10. '[
' → logprob: -8.46152114868164

Token 13: '('+' (ID: 108514)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.18898193538188934
    2. ''' → logprob: -1.9389818906784058
    3. ''*' → logprob: -4.063982009887695
    4. ' '+'' → logprob: -5.188982009887695
    5. ' '+' → logprob: -5.813982009887695
    6. '"+' → logprob: -7.188982009887695
    7. '"+"' → logprob: -7.563982009887695
    8. '('+' → logprob: -8.438982009887695
    9. '"' → logprob: -9.063982009887695
    10. ''op' → logprob: -9.063982009887695

Token 14: '',' (ID: 787)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.08148591965436935
    2. '',' → logprob: -2.5814859867095947
    3. ''' → logprob: -7.331485748291016
    4. '+' → logprob: -7.581485748291016
    5. '-' → logprob: -7.706485748291016
    6. '','' → logprob: -7.831485748291016
    7. ',' → logprob: -8.706485748291016
    8. ' '' → logprob: -8.831485748291016
    9. '')' → logprob: -9.831485748291016
    10. '),' → logprob: -9.956485748291016

Token 15: ' lambda' (ID: 27871)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.1521133929491043
    2. ' '-')' → logprob: -2.152113437652588
    3. ' '-' → logprob: -3.902113437652588
    4. ''' → logprob: -6.402113437652588
    5. ' '-',' → logprob: -6.402113437652588
    6. ''*' → logprob: -7.652113437652588
    7. ' ' → logprob: -8.02711296081543
    8. ' '*' → logprob: -8.77711296081543
    9. ' '-'' → logprob: -8.77711296081543
    10. ' '' → logprob: -9.15211296081543

Token 16: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16161543130874634
    2. 'x' → logprob: -2.6616153717041016
    3. ' a' → logprob: -2.7866153717041016
    4. 'a' → logprob: -4.036615371704102
    5. ' lambda' → logprob: -10.286615371704102
    6. ' ' → logprob: -10.536615371704102
    7. 'lambda' → logprob: -11.161615371704102
    8. ' l' → logprob: -11.661615371704102
    9. 'l' → logprob: -11.911615371704102
    10. ' y' → logprob: -13.036615371704102

Token 17: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04310116171836853
    2. ' ,' → logprob: -3.1681010723114014
    3. ',x' → logprob: -9.54310131072998
    4. ' ' → logprob: -11.66810131072998
    5. ',y' → logprob: -11.79310131072998
    6. ' x' → logprob: -12.54310131072998
    7. ',k' → logprob: -13.41810131072998
    8. ',t' → logprob: -13.91810131072998
    9. '+,' → logprob: -13.91810131072998
    10. ',n' → logprob: -14.16810131072998

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016414029523730278
    2. ' :' → logprob: -4.141414165496826
    3. ':x' → logprob: -7.891414165496826
    4. ',' → logprob: -13.391413688659668
    5. ':y' → logprob: -13.766413688659668
    6. ',x' → logprob: -14.016413688659668
    7. ':return' → logprob: -14.516413688659668
    8. ':t' → logprob: -15.141413688659668
    9. ',:' → logprob: -15.266413688659668
    10. ':f' → logprob: -15.766413688659668

Token 19: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25194013118743896
    2. 'x' → logprob: -1.501940131187439
    3. ' ' → logprob: -12.25193977355957
    4. ')' → logprob: -13.12693977355957
    5. ')x' → logprob: -13.75193977355957
    6. ' ' → logprob: -13.87693977355957
    7. '	x' → logprob: -14.37693977355957
    8. ' (' → logprob: -15.25193977355957
    9. '(x' → logprob: -15.25193977355957
    10. 'a' → logprob: -15.75193977355957

Token 20: '+y' (ID: 102753)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5316001176834106
    2. '+' → logprob: -0.9066001176834106
    3. '+y' → logprob: -4.781599998474121
    4. ' ' → logprob: -10.906599998474121
    5. '+x' → logprob: -11.031599998474121
    6. ' plus' → logprob: -11.781599998474121
    7. ' y' → logprob: -12.406599998474121
    8. ' ' → logprob: -13.156599998474121
    9. ')' → logprob: -13.906599998474121
    10. '+b' → logprob: -14.031599998474121

Token 21: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004235462285578251
    2. '),
' → logprob: -5.75423526763916
    3. ')' → logprob: -7.62923526763916
    4. ''),' → logprob: -7.75423526763916
    5. ' ),' → logprob: -9.62923526763916
    6. '),

' → logprob: -10.25423526763916
    7. '),
' → logprob: -11.75423526763916
    8. ',' → logprob: -11.87923526763916
    9. '),(' → logprob: -11.87923526763916
    10. ' ' → logprob: -12.25423526763916

Token 22: ' ('' (ID: 9906)
  Prédit: ' (''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.3850169777870178
    2. '('-',' → logprob: -1.635016918182373
    3. '('-' → logprob: -3.385016918182373
    4. '('' → logprob: -3.635016918182373
    5. '('*' → logprob: -3.760016918182373
    6. ''-' → logprob: -4.135016918182373
    7. ''' → logprob: -4.260016918182373
    8. ' '' → logprob: -5.760016918182373
    9. ''*' → logprob: -6.010016918182373
    10. ' ' → logprob: -6.260016918182373

Token 23: '-',' (ID: 139636)
  Prédit: '-','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-',' → logprob: -0.06586188077926636
    2. '*' → logprob: -3.440861940383911
    3. ''-' → logprob: -4.065861701965332
    4. '-' → logprob: -4.440861701965332
    5. ''*' → logprob: -6.190861701965332
    6. '-'' → logprob: -7.690861701965332
    7. ' '-',' → logprob: -9.565861701965332
    8. '',' → logprob: -10.065861701965332
    9. '-'+' → logprob: -10.190861701965332
    10. ''' → logprob: -10.315861701965332

Token 24: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.018264437094330788
    2. 'lambda' → logprob: -4.018264293670654
    3. '=lambda' → logprob: -9.768264770507812
    4. ' ' → logprob: -10.768264770507812
    5. '(lambda' → logprob: -11.018264770507812
    6. '<|end|>' → logprob: -11.768264770507812
    7. ' lamb' → logprob: -12.018264770507812
    8. ')' → logprob: -13.393264770507812
    9. ' λ' → logprob: -13.518264770507812
    10. '_lambda' → logprob: -14.018264770507812

Token 25: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07890520989894867
    2. 'x' → logprob: -2.5789051055908203
    3. ' ' → logprob: -11.20390510559082
    4. '	x' → logprob: -14.45390510559082
    5. ',' → logprob: -14.95390510559082
    6. ' ' → logprob: -14.95390510559082
    7. '<|end|>' → logprob: -15.32890510559082
    8. ',x' → logprob: -16.20390510559082
    9. ' ,' → logprob: -16.64140510559082
    10. '  ' → logprob: -16.76640510559082

Token 26: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.16968020796775818
    2. ',' → logprob: -1.9196802377700806
    3. ' ,' → logprob: -4.669680118560791
    4. ',x' → logprob: -10.41968059539795
    5. ' y' → logprob: -12.91968059539795
    6. 'y' → logprob: -14.29468059539795
    7. ',b' → logprob: -14.29468059539795
    8. ',Y' → logprob: -14.66968059539795
    9. ' ' → logprob: -15.04468059539795
    10. ',v' → logprob: -15.41968059539795

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008016457431949675
    2. ' :' → logprob: -7.5008015632629395
    3. ':x' → logprob: -8.375802040100098
    4. ',x' → logprob: -11.625802040100098
    5. ',' → logprob: -12.125802040100098
    6. ' x' → logprob: -14.125802040100098
    7. ':y' → logprob: -14.125802040100098
    8. '-' → logprob: -15.000802040100098
    9. ',:' → logprob: -15.375802040100098
    10. ' ' → logprob: -15.375802040100098

Token 28: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.023250484839081764
    2. 'x' → logprob: -3.7732505798339844
    3. ' ' → logprob: -13.023250579833984
    4. ' ' → logprob: -13.398250579833984
    5. '	x' → logprob: -14.648250579833984
    6. ')x' → logprob: -15.273250579833984
    7. ')' → logprob: -15.898250579833984
    8. '<|end|>' → logprob: -16.023250579833984
    9. '  ' → logprob: -16.460750579833984
    10. '```' → logprob: -17.023250579833984

Token 29: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.6382206678390503
    2. '-' → logprob: -1.1382206678390503
    3. ' -' → logprob: -1.8882206678390503
    4. '+y' → logprob: -11.63822078704834
    5. ' ' → logprob: -12.01322078704834
    6. ' y' → logprob: -12.26322078704834
    7. 'y' → logprob: -12.51322078704834
    8. '-)' → logprob: -12.88822078704834
    9. '+' → logprob: -13.01322078704834
    10. ')' → logprob: -13.63822078704834

Token 30: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.001091639045625925
    2. ')' → logprob: -6.876091480255127
    3. ')]' → logprob: -10.126091957092285
    4. ' ),' → logprob: -12.126091957092285
    5. ')],' → logprob: -12.126091957092285
    6. ''),' → logprob: -12.501091957092285
    7. '),
' → logprob: -13.501091957092285
    8. ',' → logprob: -14.001091957092285
    9. '),

' → logprob: -14.126091957092285
    10. '],' → logprob: -15.376091957092285

Token 31: ' ('' (ID: 9906)
  Prédit: ' (''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.04413462057709694
    2. '('' → logprob: -3.1691346168518066
    3. ' ' → logprob: -8.294135093688965
    4. ' '' → logprob: -8.294135093688965
    5. '('*' → logprob: -8.669135093688965
    6. ''' → logprob: -8.919135093688965
    7. '('+' → logprob: -9.419135093688965
    8. ' (' → logprob: -10.044135093688965
    9. '(',',' → logprob: -10.544135093688965
    10. '[' → logprob: -10.544135093688965

Token 32: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20657296478748322
    2. '*,' → logprob: -1.7065730094909668
    3. ''*' → logprob: -5.456573009490967
    4. ' *,' → logprob: -8.456572532653809
    5. ' *' → logprob: -8.456572532653809
    6. '*)' → logprob: -9.456572532653809
    7. ' '*' → logprob: -9.456572532653809
    8. ''' → logprob: -9.706572532653809
    9. ',' → logprob: -9.831572532653809
    10. ' ' → logprob: -10.456572532653809

Token 33: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0023391391150653362
    2. ',' → logprob: -6.2523393630981445
    3. ' ',' → logprob: -7.8773393630981445
    4. '<|end|>' → logprob: -11.877339363098145
    5. ' ,' → logprob: -12.002339363098145
    6. ' x' → logprob: -12.252339363098145
    7. ''' → logprob: -12.627339363098145
    8. '','' → logprob: -13.002339363098145
    9. '')' → logprob: -13.627339363098145
    10. '",' → logprob: -13.752339363098145

Token 34: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.10192492604255676
    2. 'lambda' → logprob: -2.4769248962402344
    3. ' x' → logprob: -4.476924896240234
    4. '<|end|>' → logprob: -7.976924896240234
    5. '=lambda' → logprob: -7.976924896240234
    6. ' ' → logprob: -8.226924896240234
    7. ',' → logprob: -8.601924896240234
    8. 'x' → logprob: -8.601924896240234
    9. ')' → logprob: -9.726924896240234
    10. ' lamb' → logprob: -9.726924896240234

Token 35: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14270615577697754
    2. 'x' → logprob: -2.0177061557769775
    3. ' ' → logprob: -10.642705917358398
    4. ',x' → logprob: -13.017705917358398
    5. ',' → logprob: -13.517705917358398
    6. ')x' → logprob: -14.017705917358398
    7. '<|end|>' → logprob: -14.517705917358398
    8. '	x' → logprob: -14.642705917358398
    9. '(x' → logprob: -14.767705917358398
    10. ')' → logprob: -15.017705917358398

Token 36: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.012525658123195171
    2. ',' → logprob: -4.38752555847168
    3. ' ,' → logprob: -11.38752555847168
    4. 'y' → logprob: -13.26252555847168
    5. ',x' → logprob: -14.51252555847168
    6. ',Y' → logprob: -14.76252555847168
    7. '<|end|>' → logprob: -14.88752555847168
    8. '*y' → logprob: -15.01252555847168
    9. '*,' → logprob: -15.76252555847168
    10. ' ' → logprob: -15.88752555847168

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030996911227703094
    2. ')' → logprob: -4.405996799468994
    3. '),' → logprob: -4.530996799468994
    4. '):' → logprob: -5.030996799468994
    5. ',' → logprob: -7.405996799468994
    6. ' :' → logprob: -8.780997276306152
    7. ':x' → logprob: -9.530997276306152
    8. ' ),' → logprob: -10.280997276306152
    9. ' )' → logprob: -10.530997276306152
    10. '))' → logprob: -10.780997276306152

Token 38: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0890587717294693
    2. 'x' → logprob: -2.4640588760375977
    3. ' lambda' → logprob: -9.464058876037598
    4. 'lambda' → logprob: -10.339058876037598
    5. ' ' → logprob: -12.464058876037598
    6. ')' → logprob: -12.964058876037598
    7. ')x' → logprob: -13.714058876037598
    8. ' ' → logprob: -14.339058876037598
    9. '	x' → logprob: -14.964058876037598
    10. '<|end|>' → logprob: -16.02655792236328

Token 39: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.1032114252448082
    2. '*' → logprob: -2.3532114028930664
    3. '*x' → logprob: -6.603211402893066
    4. '*)' → logprob: -6.853211402893066
    5. ' *' → logprob: -8.853211402893066
    6. '+y' → logprob: -9.228211402893066
    7. ')' → logprob: -9.353211402893066
    8. '),' → logprob: -9.603211402893066
    9. '*z' → logprob: -10.103211402893066
    10. ',y' → logprob: -10.728211402893066

Token 40: ')]

' (ID: 56882)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03836505487561226
    2. ')]' → logprob: -3.413365125656128
    3. ')' → logprob: -5.413364887237549
    4. ')],' → logprob: -9.038365364074707
    5. ' ),' → logprob: -9.288365364074707
    6. ' )' → logprob: -11.413365364074707
    7. ')])' → logprob: -12.163365364074707
    8. '),
' → logprob: -12.163365364074707
    9. '))' → logprob: -12.663365364074707
    10. ')}' → logprob: -12.913365364074707

Token 41: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16397349536418915
    2. 'def' → logprob: -2.163973569869995
    3. '
' → logprob: -3.413973569869995
    4. '

' → logprob: -6.788973331451416
    5. '\n' → logprob: -7.038973331451416
    6. 'result' → logprob: -7.913973331451416
    7. ' for' → logprob: -8.163973808288574
    8. '\' → logprob: -8.413973808288574
    9. '#' → logprob: -9.288973808288574
    10. ' 
' → logprob: -9.663973808288574

Token 42: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3689320385456085
    2. ' def' → logprob: -1.4939320087432861
    3. ' Define' → logprob: -4.243932247161865
    4. ' Write' → logprob: -4.743932247161865
    5. 'for' → logprob: -4.868932247161865
    6. ' Given' → logprob: -4.868932247161865
    7. '#' → logprob: -4.868932247161865
    8. ' for' → logprob: -4.868932247161865
    9. 'Define' → logprob: -5.993932247161865
    10. ' Find' → logprob: -6.556432247161865

Token 43: '5' (ID: 20)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15725460648536682
    2. 'for' → logprob: -3.657254695892334
    3. 'numbers' → logprob: -4.032254695892334
    4. '#' → logprob: -4.407254695892334
    5. 'Given' → logprob: -4.657254695892334
    6. 'nums' → logprob: -4.782254695892334
    7. 'Generate' → logprob: -5.032254695892334
    8. 'Write' → logprob: -5.032254695892334
    9. 'digits' → logprob: -5.532254695892334
    10. 'Define' → logprob: -5.532254695892334

Token 44: ' formes' (ID: 75326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3378413915634155
    2. 'def' → logprob: -2.087841510772705
    3. '#' → logprob: -2.962841510772705
    4. ')' → logprob: -3.962841510772705
    5. '0' → logprob: -4.337841510772705
    6. ':' → logprob: -4.712841510772705
    7. ']' → logprob: -4.837841510772705
    8. '.' → logprob: -4.962841510772705
    9. ',' → logprob: -5.212841510772705
    10. '+' → logprob: -5.587841510772705

Token 45: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43384039402008057
    2. ':' → logprob: -2.183840274810791
    3. ' =' → logprob: -2.808840274810791
    4. 's' → logprob: -3.183840274810791
    5. '=' → logprob: -3.433840274810791
    6. ',' → logprob: -3.558840274810791
    7. '#' → logprob: -4.308840274810791
    8. '_' → logprob: -4.558840274810791
    9. ''' → logprob: -4.683840274810791
    10. ')' → logprob: -5.308840274810791

Token 46: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.8139969706535339
    2. ''' → logprob: -0.9389969706535339
    3. 'e' → logprob: -2.8139970302581787
    4. ''é' → logprob: -3.4389970302581787
    5. 'a' → logprob: -4.1889967918396
    6. 'u' → logprob: -4.5639967918396
    7. ''espace' → logprob: -4.5639967918396
    8. '’expression' → logprob: -5.0639967918396
    9. 'é' → logprob: -5.4389967918396
    10. ''entrée' → logprob: -5.9389967918396

Token 47: 'pressions' (ID: 69735)
  Prédit: 'erc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erc' → logprob: -0.7600513100624084
    2. 'pression' → logprob: -1.8850512504577637
    3. 'er' → logprob: -2.0100512504577637
    4. 'pressions' → logprob: -2.7600512504577637
    5. 'em' → logprob: -3.3850512504577637
    6. 'ercice' → logprob: -3.3850512504577637
    7. 'pr' → logprob: -3.5100512504577637
    8. 'e' → logprob: -4.260051250457764
    9. 'emple' → logprob: -4.635051250457764
    10. 'erce' → logprob: -4.760051250457764

Token 48: ' parent' (ID: 5980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1566773653030396
    2. ' :' → logprob: -1.1566773653030396
    3. ':' → logprob: -1.7816773653030396
    4. ' =' → logprob: -2.53167724609375
    5. 's' → logprob: -3.03167724609375
    6. '_' → logprob: -4.15667724609375
    7. ' ,' → logprob: -4.28167724609375
    8. ',' → logprob: -4.53167724609375
    9. '[' → logprob: -5.28167724609375
    10. 'e' → logprob: -5.28167724609375

Token 49: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00015920029545668513
    2. 'hes' → logprob: -9.37515926361084
    3. 'hé' → logprob: -10.62515926361084
    4. 'és' → logprob: -11.25015926361084
    5. 'hs' → logprob: -11.25015926361084
    6. 'heses' → logprob: -12.12515926361084
    7. 'é' → logprob: -12.37515926361084
    8. '```' → logprob: -12.87515926361084
    9. '#' → logprob: -13.25015926361084
    10. 'éis' → logprob: -13.62515926361084

Token 50: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.2723536491394043
    2. 's' → logprob: -2.6473536491394043
    3. 'z' → logprob: -2.8973536491394043
    4. 'ées' → logprob: -2.8973536491394043
    5. 'é' → logprob: -3.6473536491394043
    6. 'isées' → logprob: -4.647353649139404
    7. 'èses' → logprob: -4.647353649139404
    8. 'ès' → logprob: -5.897353649139404
    9. 'es' → logprob: -6.147353649139404
    10. 'è' → logprob: -6.647353649139404

Token 51: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.17671823501586914
    2. 'es' → logprob: -2.926718235015869
    3. 'd' → logprob: -3.426718235015869
    4. 'z' → logprob: -3.926718235015869
    5. 'é' → logprob: -4.051718235015869
    6. 's' → logprob: -4.301718235015869
    7. 'és' → logprob: -4.426718235015869
    8. 'nées' → logprob: -5.801718235015869
    9. 'isées' → logprob: -6.426718235015869
    10. '```' → logprob: -6.551718235015869

Token 52: ' avec' (ID: 3937)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8707109093666077
    2. ':' → logprob: -0.9957109093666077
    3. ',' → logprob: -2.745710849761963
    4. ' :' → logprob: -2.995710849761963
    5. 'def' → logprob: -3.870710849761963
    6. '[' → logprob: -4.120710849761963
    7. '(' → logprob: -4.245710849761963
    8. ' ' → logprob: -4.620710849761963
    9. ' #' → logprob: -4.870710849761963
    10. '\' → logprob: -5.495710849761963

Token 53: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05936434492468834
    2. '4' → logprob: -3.4343643188476562
    3. ' ' → logprob: -4.059364318847656
    4. ' trois' → logprob: -5.684364318847656
    5. '5' → logprob: -7.434364318847656
    6. ' quatre' → logprob: -7.559364318847656
    7. '(' → logprob: -7.809364318847656
    8. '2' → logprob: -7.934364318847656
    9. 'qu' → logprob: -8.059364318847656
    10. 'n' → logprob: -8.184364318847656

Token 54: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.017992481589317322
    2. '4' → logprob: -4.1429924964904785
    3. ' ' → logprob: -6.7679924964904785
    4. 'n' → logprob: -8.76799201965332
    5. 'qu' → logprob: -9.26799201965332
    6. '5' → logprob: -9.39299201965332
    7. 'three' → logprob: -9.39299201965332
    8. ' trois' → logprob: -9.76799201965332
    9. 'tro' → logprob: -9.89299201965332
    10. '2' → logprob: -9.89299201965332

Token 55: ' nombres' (ID: 76205)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8495673537254333
    2. ' espaces' → logprob: -1.4745674133300781
    3. '(' → logprob: -2.849567413330078
    4. ' (' → logprob: -3.224567413330078
    5. 'spaces' → logprob: -3.224567413330078
    6. ' spaces' → logprob: -3.224567413330078
    7. 'tokens' → logprob: -3.599567413330078
    8. ' numbers' → logprob: -3.599567413330078
    9. '<|end|>' → logprob: -4.099567413330078
    10. 'space' → logprob: -4.349567413330078

Token 56: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6320491433143616
    2. ',' → logprob: -1.7570490837097168
    3. '#' → logprob: -2.757049083709717
    4. 'def' → logprob: -3.007049083709717
    5. '[' → logprob: -3.382049083709717
    6. 'n' → logprob: -3.632049083709717
    7. '4' → logprob: -4.007049083709717
    8. ':
' → logprob: -4.382049083709717
    9. '<|end|>' → logprob: -4.507049083709717
    10. ']' → logprob: -4.757049083709717

Token 57: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11300492286682129
    2. ' ' → logprob: -2.2380049228668213
    3. ' trois' → logprob: -8.863004684448242
    4. ' ' → logprob: -11.363004684448242
    5. '```' → logprob: -11.488004684448242
    6. ' three' → logprob: -12.863004684448242
    7. '_' → logprob: -12.863004684448242
    8. '<|end|>' → logprob: -13.863004684448242
    9. '4' → logprob: -14.175504684448242
    10. '  ' → logprob: -14.238004684448242

Token 58: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005328505299985409
    2. ' ' → logprob: -5.25532865524292
    3. ' trois' → logprob: -10.255328178405762
    4. '```' → logprob: -11.630328178405762
    5. 'ops' → logprob: -12.192828178405762
    6. 'tro' → logprob: -12.255328178405762
    7. '4' → logprob: -12.380328178405762
    8. 'l' → logprob: -13.005328178405762
    9. '1' → logprob: -13.130328178405762
    10. '_' → logprob: -13.255328178405762

Token 59: ' opér' (ID: 65915)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -1.462483286857605
    2. 'ops' → logprob: -1.587483286857605
    3. ' opér' → logprob: -2.0874834060668945
    4. ' espaces' → logprob: -2.2124834060668945
    5. 'op' → logprob: -2.4624834060668945
    6. ' op' → logprob: -2.5874834060668945
    7. ' ' → logprob: -3.3374834060668945
    8. ' operators' → logprob: -3.8374834060668945
    9. ' opérations' → logprob: -3.8374834060668945
    10. ' oper' → logprob: -3.9624834060668945

Token 60: 'ateurs' (ID: 19727)
  Prédit: 'ateurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateurs' → logprob: -0.07279461622238159
    2. 'es' → logprob: -4.572794437408447
    3. '```' → logprob: -4.572794437408447
    4. 'ateur' → logprob: -5.197794437408447
    5. 'ates' → logprob: -5.197794437408447
    6. 's' → logprob: -5.322794437408447
    7. 'as' → logprob: -5.572794437408447
    8. 'ations' → logprob: -5.572794437408447
    9. 'at' → logprob: -5.572794437408447
    10. 'a' → logprob: -5.822794437408447

Token 61: '
' (ID: 198)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.7292906045913696
    2. 'def' → logprob: -1.8542906045913696
    3. 'expr' → logprob: -1.9792906045913696
    4. '#' → logprob: -3.10429048538208
    5. 'expression' → logprob: -3.22929048538208
    6. '[
' → logprob: -3.85429048538208
    7. '(
' → logprob: -4.10429048538208
    8. 'expl' → logprob: -4.10429048538208
    9. 'form' → logprob: -4.22929048538208
    10. ')' → logprob: -4.22929048538208

Token 62: 'def' (ID: 1314)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -1.1845660209655762
    2. '(' → logprob: -1.6845660209655762
    3. 'expr' → logprob: -1.9345660209655762
    4. '[' → logprob: -2.559566020965576
    5. '[
' → logprob: -2.809566020965576
    6. 'def' → logprob: -2.934566020965576
    7. '(
' → logprob: -3.309566020965576
    8. 'forms' → logprob: -3.684566020965576
    9. 'expression' → logprob: -3.684566020965576
    10. '#' → logprob: -4.184566020965576

Token 63: ' expressions' (ID: 43578)
  Prédit: ' expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.41667062044143677
    2. ' generate' → logprob: -1.416670560836792
    3. ' expressions' → logprob: -3.416670560836792
    4. ' all' → logprob: -3.666670560836792
    5. ' expression' → logprob: -4.791670799255371
    6. ' parent' → logprob: -4.791670799255371
    7. ' form' → logprob: -5.166670799255371
    8. ' ' → logprob: -5.791670799255371
    9. ' gen' → logprob: -5.916670799255371
    10. ' parentheses' → logprob: -6.541670799255371

Token 64: '(nums' (ID: 40372)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023454640060663223
    2. '_' → logprob: -3.8984546661376953
    3. '_(' → logprob: -7.398454666137695
    4. ' (' → logprob: -7.898454666137695
    5. '_parent' → logprob: -8.398454666137695
    6. '_four' → logprob: -8.523454666137695
    7. '(a' → logprob: -8.773454666137695
    8. '((' → logprob: -8.773454666137695
    9. '_list' → logprob: -9.523454666137695
    10. '():' → logprob: -9.648454666137695

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018634299049153924
    2. ' ,' → logprob: -6.876863479614258
    3. '):' → logprob: -7.126863479614258
    4. ',n' → logprob: -11.626863479614258
    5. ' ):' → logprob: -12.376863479614258
    6. ',p' → logprob: -13.251863479614258
    7. ',a' → logprob: -13.626863479614258
    8. ')' → logprob: -13.751863479614258
    9. ':' → logprob: -14.251863479614258
    10. '   ' → logprob: -14.626863479614258

Token 66: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.062470078468322754
    2. ' ops' → logprob: -2.812469959259033
    3. '_ops' → logprob: -8.437470436096191
    4. '.ops' → logprob: -9.437470436096191
    5. '```' → logprob: -10.062470436096191
    6. ' ' → logprob: -10.437470436096191
    7. 'op' → logprob: -10.562470436096191
    8. ')' → logprob: -10.937470436096191
    9. '   ' → logprob: -10.937470436096191
    10. ' op' → logprob: -11.062470436096191

Token 67: '_seq' (ID: 34260)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10041423887014389
    2. ',' → logprob: -2.350414276123047
    3. ')' → logprob: -8.850414276123047
    4. '):
' → logprob: -10.725414276123047
    5. ' ):' → logprob: -10.975414276123047
    6. ':' → logprob: -11.350414276123047
    7. ' ,' → logprob: -12.850414276123047
    8. 's' → logprob: -13.350414276123047
    9. ')):' → logprob: -13.725414276123047
    10. '   ' → logprob: -13.725414276123047

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004194267094135284
    2. ')' → logprob: -5.629194259643555
    3. '):
' → logprob: -7.754194259643555
    4. ',' → logprob: -8.754194259643555
    5. ' ):' → logprob: -12.879194259643555
    6. '):

' → logprob: -13.879194259643555
    7. '):
' → logprob: -14.004194259643555
    8. ':' → logprob: -14.379194259643555
    9. 's' → logprob: -14.379194259643555
    10. '),' → logprob: -15.504194259643555

Token 69: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2144138067960739
    2. '   ' → logprob: -1.7144137620925903
    3. '):' → logprob: -5.714413642883301
    4. ' :' → logprob: -5.839413642883301
    5. ':
' → logprob: -6.089413642883301
    6. '    
' → logprob: -6.464413642883301
    7. ',' → logprob: -7.464413642883301
    8. '():' → logprob: -7.714413642883301
    9. '):
' → logprob: -8.7144136428833
    10. '    ' → logprob: -8.8394136428833

Token 70: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03767947107553482
    2. '    ' → logprob: -4.162679672241211
    3. ' yield' → logprob: -4.787679672241211
    4. ':' → logprob: -5.287679672241211
    5. '    
' → logprob: -6.537679672241211
    6. ' if' → logprob: -6.912679672241211
    7. 'yield' → logprob: -6.912679672241211
    8. '[' → logprob: -7.162679672241211
    9. ' ' → logprob: -7.662679672241211
    10. '     
' → logprob: -7.912679672241211

Token 71: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30794158577919006
    2. ',b' → logprob: -1.4329415559768677
    3. ' =' → logprob: -4.182941436767578
    4. ' ,' → logprob: -5.182941436767578
    5. 'r' → logprob: -6.182941436767578
    6. 'b' → logprob: -6.932941436767578
    7. 'll' → logprob: -7.682941436767578
    8. 's' → logprob: -8.182941436767578
    9. ',a' → logprob: -8.182941436767578
    10. ',l' → logprob: -8.307941436767578

Token 72: ',c' (ID: 22261)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5863265991210938
    2. ',' → logprob: -1.0863265991210938
    3. ',c' → logprob: -2.3363265991210938
    4. ' =' → logprob: -5.086326599121094
    5. ' ,' → logprob: -6.211326599121094
    6. ',d' → logprob: -7.836326599121094
    7. ',e' → logprob: -8.086326599121094
    8. ',a' → logprob: -9.336326599121094
    9. '=' → logprob: -9.461326599121094
    10. ',v' → logprob: -10.086326599121094

Token 73: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3176327347755432
    2. ',d' → logprob: -1.3176326751708984
    3. ' ,' → logprob: -5.817632675170898
    4. ' =' → logprob: -6.942632675170898
    5. ',b' → logprob: -8.442632675170898
    6. ',a' → logprob: -10.317632675170898
    7. '=' → logprob: -10.442632675170898
    8. ',e' → logprob: -10.442632675170898
    9. ',c' → logprob: -10.817632675170898
    10. ',s' → logprob: -11.442632675170898

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024914182722568512
    2. '=' → logprob: -3.774914264678955
    3. ',' → logprob: -6.399914264678955
    4. ' ,' → logprob: -13.024913787841797
    5. ')' → logprob: -13.274913787841797
    6. ' =)' → logprob: -15.399913787841797
    7. ' ' → logprob: -15.524913787841797
    8. '  ' → logprob: -15.649913787841797
    9. ' =
' → logprob: -15.899913787841797
    10. '   ' → logprob: -16.149913787841797

Token 75: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.007614201866090298
    2. 'nums' → logprob: -4.8826141357421875
    3. ' num' → logprob: -12.632614135742188
    4. '_nums' → logprob: -13.257614135742188
    5. '(nums' → logprob: -13.382614135742188
    6. ' ' → logprob: -14.632614135742188
    7. 'num' → logprob: -15.132614135742188
    8. 'Nums' → logprob: -15.132614135742188
    9. ' map' → logprob: -16.132614135742188
    10. ' ' → logprob: -16.382614135742188

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36794742941856384
    2. '   ' → logprob: -1.8679474592208862
    3. '    
' → logprob: -2.2429473400115967
    4. '  
' → logprob: -4.117947578430176
    5. ',' → logprob: -4.367947578430176
    6. ' 
' → logprob: -5.242947578430176
    7. '	
' → logprob: -6.117947578430176
    8. ' ' → logprob: -6.117947578430176
    9. ',
' → logprob: -6.492947578430176
    10. '\n' → logprob: -6.492947578430176

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2241837978363037
    2. ',' → logprob: -1.7241837978363037
    3. '    
' → logprob: -1.9741837978363037
    4. '   ' → logprob: -2.0991837978363037
    5. '  
' → logprob: -2.2241837978363037
    6. ',
' → logprob: -3.0991837978363037
    7. ' 
' → logprob: -3.2241837978363037
    8. '\n' → logprob: -3.8491837978363037
    9. '   
' → logprob: -4.349184036254883
    10. '<|end|>' → logprob: -5.099184036254883

Token 78: ' op' (ID: 991)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.7993738651275635
    2. ' res' → logprob: -1.5493738651275635
    3. ' expr' → logprob: -1.9243738651275635
    4. '   ' → logprob: -2.5493738651275635
    5. ' results' → logprob: -3.0493738651275635
    6. ' result' → logprob: -3.9243738651275635
    7. ' return' → logprob: -4.549373626708984
    8. ' for' → logprob: -4.799373626708984
    9. 'yield' → logprob: -4.924373626708984
    10. 'res' → logprob: -5.674373626708984

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004613707307726145
    2. 's' → logprob: -5.504613876342773
    3. '0' → logprob: -8.504613876342773
    4. '_seq' → logprob: -8.629613876342773
    5. 'a' → logprob: -9.254613876342773
    6. '_' → logprob: -10.254613876342773
    7. 'seq' → logprob: -11.379613876342773
    8. '_a' → logprob: -13.379613876342773
    9. 'es' → logprob: -13.504613876342773
    10. 'er' → logprob: -13.754613876342773

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029819828923791647
    2. '=' → logprob: -7.002982139587402
    3. ' =' → logprob: -7.127982139587402
    4. 's' → logprob: -7.627982139587402
    5. '_op' → logprob: -8.627982139587402
    6. ' ,' → logprob: -8.752982139587402
    7. ',s' → logprob: -8.877982139587402
    8. '1' → logprob: -9.752982139587402
    9. '_sym' → logprob: -9.877982139587402
    10. ',n' → logprob: -10.377982139587402

Token 81: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.2524455487728119
    2. 'op' → logprob: -1.5024455785751343
    3. 'ops' → logprob: -8.252445220947266
    4. ' =' → logprob: -8.877445220947266
    5. ' ops' → logprob: -10.627445220947266
    6. '<|end|>' → logprob: -10.627445220947266
    7. '=' → logprob: -10.877445220947266
    8. '	op' → logprob: -11.252445220947266
    9. '_op' → logprob: -11.252445220947266
    10. '(op' → logprob: -11.502445220947266

Token 82: '2' (ID: 17)
  Prédit: '_seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.32819342613220215
    2. 's' → logprob: -1.7031934261322021
    3. '=' → logprob: -3.578193426132202
    4. ' =' → logprob: -3.703193426132202
    5. ',' → logprob: -4.078193664550781
    6. '1' → logprob: -4.203193664550781
    7. 'seq' → logprob: -4.578193664550781
    8. '2' → logprob: -6.578193664550781
    9. '_sequence' → logprob: -7.703193664550781
    10. '_SEQ' → logprob: -8.703193664550781

Token 83: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38377487659454346
    2. ',' → logprob: -1.2587748765945435
    3. '=' → logprob: -3.383774757385254
    4. '<|end|>' → logprob: -7.258774757385254
    5. ' ,' → logprob: -9.883774757385254
    6. ' ' → logprob: -11.383774757385254
    7. '<|end|>' → logprob: -11.633774757385254
    8. 's' → logprob: -11.883774757385254
    9. ')' → logprob: -12.883774757385254
    10. '```' → logprob: -13.508774757385254

Token 84: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.28132715821266174
    2. 'op' → logprob: -1.4063271284103394
    3. ' =' → logprob: -10.156327247619629
    4. '	op' → logprob: -10.406327247619629
    5. '_op' → logprob: -10.718827247619629
    6. '(op' → logprob: -11.343827247619629
    7. ' ' → logprob: -11.406327247619629
    8. '=' → logprob: -11.531327247619629
    9. ' and' → logprob: -11.718827247619629
    10. ',' → logprob: -12.531327247619629

Token 85: '3' (ID: 18)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8803141713142395
    2. '_seq' → logprob: -1.0053141117095947
    3. '3' → logprob: -1.6303141117095947
    4. 'seq' → logprob: -3.8803141117095947
    5. 'Seq' → logprob: -7.130314350128174
    6. '_sequence' → logprob: -7.130314350128174
    7. '1' → logprob: -7.755314350128174
    8. '=' → logprob: -8.630313873291016
    9. ' =' → logprob: -8.630313873291016
    10. '_SEQ' → logprob: -9.005313873291016

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.576414108276367
    4. '   ' → logprob: -16.326414108276367
    5. ',' → logprob: -16.826414108276367
    6. '    ' → logprob: -17.326414108276367
    7. '  ' → logprob: -18.201414108276367
    8. ')' → logprob: -18.201414108276367
    9. '＝' → logprob: -18.951414108276367
    10. ' ' → logprob: -20.201414108276367

Token 87: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.16023671627044678
    2. ' ops' → logprob: -1.9102367162704468
    3. '.ops' → logprob: -12.535236358642578
    4. '[' → logprob: -13.285236358642578
    5. '_ops' → logprob: -13.285236358642578
    6. ' ' → logprob: -13.410236358642578
    7. '   ' → logprob: -13.660236358642578
    8. 'op' → logprob: -13.910236358642578
    9. ' op' → logprob: -14.910236358642578
    10. 'Ops' → logprob: -15.410236358642578

Token 88: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -7.896309739408025e-07
    2. '_se' → logprob: -14.875000953674316
    3. 'seq' → logprob: -15.750000953674316
    4. '_' → logprob: -16.125
    5. '_SEQ' → logprob: -17.375
    6. 'Seq' → logprob: -17.625
    7. '_sep' → logprob: -17.625
    8. '_seg' → logprob: -18.0
    9. '_sequence' → logprob: -18.25
    10. '_sq' → logprob: -19.0

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2565898299217224
    2. '
' → logprob: -1.7565898895263672
    3. '    
' → logprob: -3.006589889526367
    4. '  
' → logprob: -6.881589889526367
    5. ')' → logprob: -7.631589889526367
    6. '#' → logprob: -8.131589889526367
    7. 'def' → logprob: -8.256589889526367
    8. 'yield' → logprob: -8.506589889526367
    9. ')
' → logprob: -8.631589889526367
    10. ' 
' → logprob: -8.631589889526367

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056103069335222244
    2. '
' → logprob: -3.181102991104126
    3. 'yield' → logprob: -5.181103229522705
    4. '    
' → logprob: -5.431103229522705
    5. ' yield' → logprob: -6.181103229522705
    6. '	yield' → logprob: -8.806102752685547
    7. '  
' → logprob: -8.931102752685547
    8. ' yields' → logprob: -9.056102752685547
    9. ':' → logprob: -9.181102752685547
    10. ')' → logprob: -9.431102752685547

Token 91: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26265203952789307
    2. ' yield' → logprob: -2.0126519203186035
    3. ' return' → logprob: -3.0126519203186035
    4. ' results' → logprob: -4.5126519203186035
    5. ' expr' → logprob: -4.8876519203186035
    6. ' res' → logprob: -5.2626519203186035
    7. ' result' → logprob: -5.3876519203186035
    8. 'yield' → logprob: -5.5126519203186035
    9. ' [
' → logprob: -6.1376519203186035
    10. '[' → logprob: -6.5126519203186035

Token 92: ' ((' (ID: 3536)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.3855674266815186
    2. ' res' → logprob: -1.7605674266815186
    3. ' yield' → logprob: -1.8855674266815186
    4. '#' → logprob: -2.6355674266815186
    5. 'return' → logprob: -2.8855674266815186
    6. 'yield' → logprob: -3.0105674266815186
    7. 'res' → logprob: -3.2605674266815186
    8. ' #' → logprob: -3.3855674266815186
    9. '[
' → logprob: -3.6355674266815186
    10. 'result' → logprob: -3.8855674266815186

Token 93: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.054500666621607e-06
    2. ' a' → logprob: -12.87500286102295
    3. '(a' → logprob: -15.00000286102295
    4. '(' → logprob: -17.625003814697266
    5. ' (' → logprob: -18.750003814697266
    6. '((' → logprob: -19.250003814697266
    7. '	a' → logprob: -19.750003814697266
    8. ' ' → logprob: -19.875003814697266
    9. '   ' → logprob: -20.500003814697266
    10. 'а' → logprob: -20.750003814697266

Token 94: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.014583475887775421
    2. 'op' → logprob: -4.264583587646484
    3. ' ' → logprob: -8.014583587646484
    4. ' +' → logprob: -10.014583587646484
    5. '+' → logprob: -11.639583587646484
    6. '  ' → logprob: -11.889583587646484
    7. ' ' → logprob: -12.139583587646484
    8. '	op' → logprob: -12.514583587646484
    9. ' ops' → logprob: -12.514583587646484
    10. 'a' → logprob: -12.639583587646484

Token 95: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0646243467926979
    2. ' b' → logprob: -2.814624309539795
    3. 'b' → logprob: -5.939624309539795
    4. ' ' → logprob: -10.939624786376953
    5. ' op' → logprob: -13.064624786376953
    6. '```' → logprob: -16.314624786376953
    7. 'op' → logprob: -17.189624786376953
    8. '(b' → logprob: -17.314624786376953
    9. ' (' → logprob: -17.314624786376953
    10. '   ' → logprob: -17.314624786376953

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003361774142831564
    2. ' )' → logprob: -8.000336647033691
    3. '))' → logprob: -15.750336647033691
    4. ')
' → logprob: -15.875336647033691
    5. '   ' → logprob: -16.625335693359375
    6. ' ' → logprob: -16.875335693359375
    7. ' ' → logprob: -16.875335693359375
    8. ')

' → logprob: -17.000335693359375
    9. '1' → logprob: -17.000335693359375
    10. '')' → logprob: -17.250335693359375

Token 97: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.5391018986701965
    2. ')' → logprob: -1.0391018390655518
    3. ' )' → logprob: -2.9141018390655518
    4. 'op' → logprob: -5.414102077484131
    5. '1' → logprob: -5.539102077484131
    6. ' ' → logprob: -9.164101600646973
    7. ' ops' → logprob: -9.414101600646973
    8. '3' → logprob: -10.914101600646973
    9. '```' → logprob: -11.164101600646973
    10. '4' → logprob: -11.289101600646973

Token 98: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0028136710170656443
    2. 'c' → logprob: -5.877813816070557
    3. '1' → logprob: -12.377813339233398
    4. ' ' → logprob: -12.877813339233398
    5. ' op' → logprob: -14.377813339233398
    6. '  ' → logprob: -14.752813339233398
    7. ')' → logprob: -15.377813339233398
    8. ' (' → logprob: -15.627813339233398
    9. '   ' → logprob: -15.752813339233398
    10. '(c' → logprob: -15.877813339233398

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.236549335066229e-05
    2. ' )' → logprob: -10.750021934509277
    3. '))' → logprob: -14.250021934509277
    4. ')`' → logprob: -16.875022888183594
    5. '),' → logprob: -17.125022888183594
    6. '1' → logprob: -17.250022888183594
    7. ')
' → logprob: -17.625022888183594
    8. '')' → logprob: -18.000022888183594
    9. ')#' → logprob: -18.250022888183594
    10. ')

' → logprob: -18.750022888183594

Token 100: ' op' (ID: 991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17767181992530823
    2. ' op' → logprob: -2.5526719093322754
    3. ' )' → logprob: -2.6776719093322754
    4. ' ' → logprob: -5.177671909332275
    5. '<|end|>' → logprob: -6.302671909332275
    6. 'op' → logprob: -6.427671909332275
    7. ' ' → logprob: -6.552671909332275
    8. ',' → logprob: -7.052671909332275
    9. '1' → logprob: -7.177671909332275
    10. ' ')'' → logprob: -7.302671909332275

Token 101: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0010365027701482177
    2. 'd' → logprob: -6.876036643981934
    3. ' ' → logprob: -12.751036643981934
    4. '	d' → logprob: -15.126036643981934
    5. '  ' → logprob: -15.376036643981934
    6. ' ' → logprob: -16.126035690307617
    7. '_d' → logprob: -17.126035690307617
    8. ' д' → logprob: -17.376035690307617
    9. '   ' → logprob: -17.501035690307617
    10. ')' → logprob: -18.126035690307617

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12713231146335602
    2. ')' → logprob: -3.2521324157714844
    3. '):' → logprob: -3.2521324157714844
    4. ':' → logprob: -4.002132415771484
    5. '):
' → logprob: -4.752132415771484
    6. '
' → logprob: -5.627132415771484
    7. ')
' → logprob: -5.752132415771484
    8. '    
' → logprob: -6.127132415771484
    9. ':
' → logprob: -6.377132415771484
    10. ' )' → logprob: -7.252132415771484

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040857069194316864
    2. 'res' → logprob: -5.040856838226318
    3. 'result' → logprob: -5.040856838226318
    4. 'expr' → logprob: -5.040856838226318
    5. ' result' → logprob: -5.415856838226318
    6. ' expr' → logprob: -5.665856838226318
    7. ' res' → logprob: -5.665856838226318
    8. ' =' → logprob: -6.165856838226318
    9. ':' → logprob: -6.290856838226318
    10. '    
' → logprob: -6.915856838226318

Token 104: ' yield' (ID: 14376)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6005145311355591
    2. ' yield' → logprob: -1.975514531135559
    3. ' expr' → logprob: -2.1005144119262695
    4. 'res' → logprob: -2.6005144119262695
    5. 'expr' → logprob: -3.3505144119262695
    6. '   ' → logprob: -3.6005144119262695
    7. 'yield' (adapté à ' yield') → logprob: -3.8505144119262695
    8. ' result' → logprob: -3.9755144119262695
    9. 'result' → logprob: -5.4755144119262695
    10. ' left' → logprob: -6.8505144119262695

Token 105: ' f' (ID: 285)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8635128736495972
    2. '(op' → logprob: -1.7385128736495972
    3. ' (' → logprob: -1.8635128736495972
    4. ' op' → logprob: -1.8635128736495972
    5. '((' → logprob: -2.9885129928588867
    6. '(' → logprob: -3.6135129928588867
    7. ' ((' → logprob: -5.238512992858887
    8. '(((' → logprob: -5.988512992858887
    9. '   ' → logprob: -6.363512992858887
    10. ' ' → logprob: -6.613512992858887

Token 106: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0475861132144928
    2. ''' → logprob: -3.92258620262146
    3. '(f' → logprob: -4.297585964202881
    4. '((' → logprob: -5.297585964202881
    5. '(' → logprob: -5.797585964202881
    6. 'f' → logprob: -6.797585964202881
    7. '   ' → logprob: -6.922585964202881
    8. ' (' → logprob: -6.922585964202881
    9. ' ((' → logprob: -7.422585964202881
    10. '"(' → logprob: -7.672585964202881

Token 107: '(({' (ID: 66373)
  Prédit: '(({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(({' → logprob: -0.5763885974884033
    2. '((' → logprob: -0.8263885974884033
    3. '({' → logprob: -8.076388359069824
    4. '(' → logprob: -10.076388359069824
    5. ' ((' → logprob: -10.076388359069824
    6. '(((' → logprob: -10.701388359069824
    7. '(('' → logprob: -11.076388359069824
    8. '(("' → logprob: -11.326388359069824
    9. '(([' → logprob: -13.951388359069824
    10. '{' → logprob: -14.076388359069824

Token 108: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.696889623621246e-06
    2. ' a' → logprob: -13.00000286102295
    3. '{' → logprob: -15.00000286102295
    4. '   ' → logprob: -18.375001907348633
    5. '(a' → logprob: -19.875001907348633
    6. '	a' → logprob: -20.000001907348633
    7. ''a' → logprob: -20.500001907348633
    8. '}' → logprob: -20.625001907348633
    9. ' ' → logprob: -20.625001907348633
    10. '(' → logprob: -21.125001907348633

Token 109: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00019018957391381264
    2. '{' → logprob: -9.375189781188965
    3. '}{' → logprob: -9.500189781188965
    4. ' {' → logprob: -11.000189781188965
    5. ' }' → logprob: -11.250189781188965
    6. 'f' → logprob: -15.000189781188965
    7. '"' → logprob: -16.25019073486328
    8. ')' → logprob: -16.37519073486328
    9. 'op' → logprob: -16.50019073486328
    10. 'a' → logprob: -17.50019073486328

Token 110: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0067161982879042625
    2. '{' → logprob: -5.006716251373291
    3. '}' → logprob: -14.381715774536133
    4. ')' → logprob: -16.131715774536133
    5. ' op' → logprob: -16.381715774536133
    6. ' ' → logprob: -16.631715774536133
    7. ' {}' → logprob: -18.256715774536133
    8. ' ' → logprob: -18.506715774536133
    9. 'op' → logprob: -18.631715774536133
    10. ' )' → logprob: -18.756715774536133

Token 111: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.5213274309644476e-05
    2. ' op' → logprob: -11.125015258789062
    3. '{' → logprob: -15.000015258789062
    4. 'ops' → logprob: -17.750015258789062
    5. '	op' → logprob: -18.125015258789062
    6. '(op' → logprob: -18.250015258789062
    7. '}' → logprob: -19.000015258789062
    8. 'f' → logprob: -19.125015258789062
    9. '   ' → logprob: -19.250015258789062
    10. ' ' → logprob: -19.625015258789062

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. '}' → logprob: -11.250014305114746
    3. '[' → logprob: -14.250014305114746
    4. '{' → logprob: -16.37501335144043
    5. 'er' → logprob: -16.50001335144043
    6. '})' → logprob: -16.75001335144043
    7. 'r' → logprob: -16.93751335144043
    8. 's' → logprob: -17.00001335144043
    9. '```' → logprob: -17.31251335144043
    10. 'op' → logprob: -17.50001335144043

Token 113: '[' (ID: 58)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.006055355537682772
    2. '})' → logprob: -5.1310553550720215
    3. '[' → logprob: -9.63105583190918
    4. ')' → logprob: -10.75605583190918
    5. '}))' → logprob: -11.13105583190918
    6. '.value' → logprob: -11.63105583190918
    7. ')}' → logprob: -12.38105583190918
    8. ' }' → logprob: -12.50605583190918
    9. '.operator' → logprob: -14.00605583190918
    10. '}")' → logprob: -14.00605583190918

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011341434437781572
    2. '}' → logprob: -7.126133918762207
    3. '[' → logprob: -8.126133918762207
    4. '})' → logprob: -10.501133918762207
    5. 'symbol' → logprob: -12.626133918762207
    6. ' ' → logprob: -14.001133918762207
    7. '{' → logprob: -14.251133918762207
    8. 'name' → logprob: -14.501133918762207
    9. '1' → logprob: -15.376133918762207
    10. 'op' → logprob: -15.876133918762207

Token 115: ']}' (ID: 28000)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '})' → logprob: -0.5766475796699524
    2. '}' → logprob: -0.8266475796699524
    3. ')' → logprob: -8.201647758483887
    4. '}))' → logprob: -8.451647758483887
    5. ')}' → logprob: -9.201647758483887
    6. ' })' → logprob: -9.951647758483887
    7. '}")' → logprob: -10.451647758483887
    8. '}')' → logprob: -10.826647758483887
    9. ' }' → logprob: -11.576647758483887
    10. ''})' → logprob: -12.576647758483887

Token 116: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.1426316499710083
    2. '{' → logprob: -2.1426315307617188
    3. 'b' → logprob: -4.767631530761719
    4. ' b' → logprob: -5.267631530761719
    5. '}' → logprob: -6.267631530761719
    6. ' ' → logprob: -11.142631530761719
    7. ')' → logprob: -11.767631530761719
    8. ' }' → logprob: -13.392631530761719
    9. ' ' → logprob: -14.267631530761719
    10. 'f' → logprob: -14.642631530761719

Token 117: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -16.875
    3. ')b' → logprob: -18.625
    4. '}' → logprob: -20.0
    5. '{' → logprob: -20.5
    6. ''b' → logprob: -21.25
    7. '   ' → logprob: -22.5
    8. '(b' → logprob: -22.625
    9. '	b' → logprob: -22.75
    10. ' ' → logprob: -23.125

Token 118: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.03831573948264122
    2. ')' → logprob: -3.288315773010254
    3. '}' → logprob: -8.538315773010254
    4. ' })' → logprob: -10.538315773010254
    5. '")' → logprob: -10.788315773010254
    6. ')}' → logprob: -11.663315773010254
    7. '}))' → logprob: -11.788315773010254
    8. '`)' → logprob: -12.163315773010254
    9. '}")' → logprob: -12.288315773010254
    10. '"})' → logprob: -13.413315773010254

Token 119: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.07551902532577515
    2. '{' → logprob: -3.20051908493042
    3. ')' → logprob: -3.45051908493042
    4. ' )' → logprob: -8.575518608093262
    5. '}' → logprob: -10.200518608093262
    6. ' ){' → logprob: -10.700518608093262
    7. '){' → logprob: -11.575518608093262
    8. ' ' → logprob: -12.950518608093262
    9. ' op' → logprob: -13.075518608093262
    10. '"' → logprob: -13.200518608093262

Token 120: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.935296834039036e-06
    2. ' op' → logprob: -12.75000286102295
    3. ' ' → logprob: -19.125003814697266
    4. '(op' → logprob: -19.250003814697266
    5. '}' → logprob: -19.750003814697266
    6. '{' → logprob: -19.750003814697266
    7. '	op' → logprob: -19.875003814697266
    8. '   ' → logprob: -20.000003814697266
    9. '  ' → logprob: -20.375003814697266
    10. ''op' → logprob: -20.750003814697266

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03809897601604462
    2. '1' → logprob: -3.2880990505218506
    3. '3' → logprob: -10.03809928894043
    4. '[' → logprob: -11.28809928894043
    5. '}' → logprob: -15.66309928894043
    6. '```' → logprob: -15.91309928894043
    7. '(' → logprob: -16.03809928894043
    8. '{' → logprob: -16.10059928894043
    9. '``' → logprob: -16.28809928894043
    10. '
' → logprob: -16.28809928894043

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. ' [' → logprob: -13.62500286102295
    3. '}' → logprob: -14.62500286102295
    4. '0' → logprob: -14.62500286102295
    5. '{' → logprob: -15.50000286102295
    6. ' ' → logprob: -15.62500286102295
    7. '   ' → logprob: -16.625001907348633
    8. 'f' → logprob: -17.375001907348633
    9. ')}' → logprob: -17.375001907348633
    10. ')' → logprob: -17.500001907348633

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017624642350710928
    2. '[' → logprob: -8.875176429748535
    3. ' ' → logprob: -10.250176429748535
    4. '{' → logprob: -15.250176429748535
    5. '1' → logprob: -15.250176429748535
    6. '(' → logprob: -16.62517547607422
    7. '   ' → logprob: -16.62517547607422
    8. ' [' → logprob: -16.75017547607422
    9. '  ' → logprob: -17.00017547607422
    10. ')' → logprob: -17.25017547607422

Token 124: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -4.334533878136426e-05
    2. '})' → logprob: -10.750042915344238
    3. ' }' → logprob: -11.375042915344238
    4. ')}' → logprob: -12.500042915344238
    5. '`}' → logprob: -12.750042915344238
    6. ''}' → logprob: -13.750042915344238
    7. '"}' → logprob: -13.750042915344238
    8. '}}' → logprob: -14.625042915344238
    9. ']}' → logprob: -15.250042915344238
    10. '()}' → logprob: -15.250042915344238

Token 125: ' {' (ID: 354)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.22783584892749786
    2. ' {' → logprob: -2.1028358936309814
    3. ' c' → logprob: -2.7278358936309814
    4. 'f' → logprob: -4.852835655212402
    5. 'c' → logprob: -5.352835655212402
    6. '{' → logprob: -5.727835655212402
    7. ' ' → logprob: -8.102835655212402
    8. ' (' → logprob: -9.727835655212402
    9. ' {(' → logprob: -10.227835655212402
    10. ')' → logprob: -10.352835655212402

Token 126: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4498052223643754e-05
    2. ' c' → logprob: -11.250014305114746
    3. ')c' → logprob: -14.125014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '	c' → logprob: -15.875014305114746
    6. ' ' → logprob: -16.375015258789062
    7. '}' → logprob: -16.625015258789062
    8. 'f' → logprob: -16.625015258789062
    9. '
' → logprob: -17.750015258789062
    10. '(c' → logprob: -18.250015258789062

Token 127: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008214225526899099
    2. '})' → logprob: -7.125821590423584
    3. ')}' → logprob: -12.625821113586426
    4. '}' → logprob: -12.625821113586426
    5. ' )' → logprob: -12.625821113586426
    6. '")' → logprob: -12.750821113586426
    7. '))' → logprob: -12.875821113586426
    8. ' })' → logprob: -14.375821113586426
    9. '')' → logprob: -15.125821113586426
    10. '`)' → logprob: -15.125821113586426

Token 128: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.09292180836200714
    2. ')' → logprob: -2.467921733856201
    3. '{' → logprob: -6.092921733856201
    4. ' )' → logprob: -6.467921733856201
    5. ' op' → logprob: -9.46792221069336
    6. '}' → logprob: -9.96792221069336
    7. '")' → logprob: -11.34292221069336
    8. ' ' → logprob: -11.59292221069336
    9. '"' → logprob: -12.09292221069336
    10. ' }' → logprob: -12.09292221069336

Token 129: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -3.547789674485102e-05
    2. ' op' → logprob: -10.500035285949707
    3. 'd' → logprob: -11.750035285949707
    4. '	op' → logprob: -18.125036239624023
    5. '(op' → logprob: -19.000036239624023
    6. ''op' → logprob: -19.250036239624023
    7. ' ' → logprob: -19.500036239624023
    8. '_op' → logprob: -20.000036239624023
    9. '  ' → logprob: -20.125036239624023
    10. 'opt' → logprob: -20.375036239624023

Token 130: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.750000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '

' → logprob: -17.1875
    5. '۳' → logprob: -17.375
    6. 'd' → logprob: -17.4375
    7. ')' → logprob: -17.8125
    8. '৩' → logprob: -18.1875
    9. '   ' → logprob: -18.3125
    10. '３' → logprob: -18.75

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. '0' → logprob: -11.250015258789062
    3. ' [' → logprob: -13.625015258789062
    4. '}' → logprob: -14.875015258789062
    5. '(' → logprob: -15.375015258789062
    6. ' ' → logprob: -16.000015258789062
    7. '   ' → logprob: -17.000015258789062
    8. '{' → logprob: -17.000015258789062
    9. '"' → logprob: -17.125015258789062
    10. ')' → logprob: -17.375015258789062

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003628342878073454
    2. '[' → logprob: -5.628628253936768
    3. ' ' → logprob: -11.128628730773926
    4. '(' → logprob: -12.253628730773926
    5. '}' → logprob: -13.628628730773926
    6. '   ' → logprob: -13.878628730773926
    7. ')' → logprob: -14.003628730773926
    8. '```' → logprob: -14.003628730773926
    9. ''' → logprob: -14.253628730773926
    10. '"' → logprob: -14.441128730773926

Token 133: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -9.543733904138207e-05
    2. ' }' → logprob: -10.12509536743164
    3. '"}' → logprob: -10.75009536743164
    4. '`}' → logprob: -11.62509536743164
    5. ')}' → logprob: -12.00009536743164
    6. '}}' → logprob: -12.25009536743164
    7. '}")' → logprob: -12.75009536743164
    8. ''}' → logprob: -12.75009536743164
    9. '}"' → logprob: -12.75009536743164
    10. '")}' → logprob: -13.50009536743164

Token 134: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.007958289235830307
    2. ' d' → logprob: -5.25795841217041
    3. '{' → logprob: -6.50795841217041
    4. '}' → logprob: -6.75795841217041
    5. ' ' → logprob: -10.38295841217041
    6. 'd' → logprob: -10.75795841217041
    7. ')' → logprob: -12.38295841217041
    8. ' }' → logprob: -12.38295841217041
    9. ' ({' → logprob: -12.75795841217041
    10. ' (' → logprob: -14.00795841217041

Token 135: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.1008713702030946e-06
    2. ' d' → logprob: -13.125001907348633
    3. ')d' → logprob: -18.250001907348633
    4. '	d' → logprob: -18.750001907348633
    5. '"d' → logprob: -19.000001907348633
    6. '}' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.375001907348633
    8. ''d' → logprob: -19.625001907348633
    9. '```' → logprob: -20.125001907348633
    10. '
' → logprob: -20.250001907348633

Token 136: '}",' (ID: 20115)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.4809822738170624
    2. '}"' → logprob: -0.9809823036193848
    3. '}"
' → logprob: -5.730982303619385
    4. ')"
' → logprob: -6.230982303619385
    5. '})' → logprob: -7.355982303619385
    6. ')' → logprob: -7.605982303619385
    7. '"' → logprob: -8.355981826782227
    8. '}' → logprob: -8.730981826782227
    9. ')}' → logprob: -9.480981826782227
    10. '}")' → logprob: -10.355981826782227

Token 137: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.42547380924224854
    2. ' op' → logprob: -1.1754738092422485
    3. '(op' → logprob: -4.425473690032959
    4. 'eval' → logprob: -4.675473690032959
    5. ' eval' → logprob: -5.300473690032959
    6. 'lambda' → logprob: -5.425473690032959
    7. ' (' → logprob: -6.175473690032959
    8. ' lambda' → logprob: -6.550473690032959
    9. '(lambda' → logprob: -6.800473690032959
    10. 'ops' → logprob: -7.050473690032959

Token 138: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07900875806808472
    2. '3' → logprob: -2.5790088176727295
    3. '(op' → logprob: -9.829009056091309
    4. '[' → logprob: -10.579009056091309
    5. 's' → logprob: -10.704009056091309
    6. ' op' → logprob: -12.204009056091309
    7. 'er' → logprob: -12.329009056091309
    8. '(' → logprob: -12.454009056091309
    9. 'op' → logprob: -14.204009056091309
    10. 'ops' → logprob: -15.079009056091309

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0051406621932983
    2. '(' → logprob: -1.5051406621932983
    3. 'ops' → logprob: -1.5051406621932983
    4. 'op' → logprob: -2.755140781402588
    5. '(op' → logprob: -3.130140781402588
    6. '(lambda' → logprob: -4.130140781402588
    7. '(None' → logprob: -4.630140781402588
    8. '((' → logprob: -4.880140781402588
    9. '1' → logprob: -5.380140781402588
    10. '<|end|>' → logprob: -5.505140781402588

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00266852299682796
    2. '2' → logprob: -6.002668380737305
    3. '(' → logprob: -9.752668380737305
    4. 'lambda' → logprob: -9.752668380737305
    5. '[' → logprob: -10.127668380737305
    6. '(lambda' → logprob: -11.627668380737305
    7. '```' → logprob: -12.565168380737305
    8. ' ' → logprob: -13.002668380737305
    9. '-' → logprob: -13.190168380737305
    10. '(op' → logprob: -13.252668380737305

Token 141: '](' (ID: 20614)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.7333190441131592
    2. '((' → logprob: -1.4833190441131592
    3. '(' → logprob: -1.7333190441131592
    4. '(
' → logprob: -3.233319044113159
    5. '(((' → logprob: -3.983319044113159
    6. ')' → logprob: -4.233319282531738
    7. 'op' → logprob: -4.608319282531738
    8. ')(' → logprob: -4.858319282531738
    9. ')((' → logprob: -5.108319282531738
    10. ' (' → logprob: -5.733319282531738

Token 142: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -6.20603168499656e-05
    2. ' op' → logprob: -9.750061988830566
    3. '(op' → logprob: -12.625061988830566
    4. '	op' → logprob: -15.500061988830566
    5. '  ' → logprob: -17.125062942504883
    6. '(' → logprob: -17.500062942504883
    7. '   ' → logprob: -17.500062942504883
    8. '
' → logprob: -17.625062942504883
    9. 'ops' → logprob: -17.875062942504883
    10. 'opf' → logprob: -18.625062942504883

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0042036441154778
    2. '1' → logprob: -5.879203796386719
    3. '3' → logprob: -6.629203796386719
    4. '(op' → logprob: -10.129203796386719
    5. '(' → logprob: -10.754203796386719
    6. '[' → logprob: -11.379203796386719
    7. '_' → logprob: -14.316703796386719
    8. 'op' → logprob: -15.066703796386719
    9. '{' → logprob: -15.316703796386719
    10. ' op' → logprob: -15.379203796386719

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.3451433409936726e-05
    2. '1' → logprob: -10.375033378601074
    3. '(' → logprob: -14.000033378601074
    4. ')' → logprob: -16.00003433227539
    5. '[
' → logprob: -16.00003433227539
    6. '
' → logprob: -16.12503433227539
    7. '```' → logprob: -16.12503433227539
    8. 'def' → logprob: -16.12503433227539
    9. '.' → logprob: -16.62503433227539
    10. ')[' → logprob: -16.75003433227539

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. '[' → logprob: -11.000027656555176
    3. '(' → logprob: -12.500027656555176
    4. '0' → logprob: -12.500027656555176
    5. ' ' → logprob: -13.625027656555176
    6. '{' → logprob: -15.000027656555176
    7. '```' → logprob: -15.250027656555176
    8. '(op' → logprob: -15.375027656555176
    9. '   ' → logprob: -15.500027656555176
    10. ']' → logprob: -15.687527656555176

Token 146: '](' (ID: 20614)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.0014397578779608011
    2. 'op' → logprob: -7.001439571380615
    3. '(' → logprob: -8.626440048217773
    4. ')(' → logprob: -8.876440048217773
    5. ' (' → logprob: -9.251440048217773
    6. '((' → logprob: -9.876440048217773
    7. '}(' → logprob: -11.001440048217773
    8. ')' → logprob: -11.876440048217773
    9. '](' → logprob: -11.876440048217773
    10. '(
' → logprob: -12.001440048217773

Token 147: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.069664333248511e-05
    2. ' op' → logprob: -11.000020980834961
    3. '(op' → logprob: -12.500020980834961
    4. '(' → logprob: -16.25002098083496
    5. '
' → logprob: -16.37502098083496
    6. '	op' → logprob: -18.00002098083496
    7. ' ' → logprob: -18.87502098083496
    8. '_op' → logprob: -18.87502098083496
    9. '

' → logprob: -19.00002098083496
    10. '   ' → logprob: -19.50002098083496

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012044520117342472
    2. '3' → logprob: -4.637044429779053
    3. '2' → logprob: -6.387044429779053
    4. '(op' → logprob: -8.012044906616211
    5. 'op' → logprob: -9.262044906616211
    6. '(' → logprob: -9.512044906616211
    7. '[' → logprob: -10.387044906616211
    8. '((' → logprob: -11.824544906616211
    9. '(a' → logprob: -12.199544906616211
    10. '
' → logprob: -12.387044906616211

Token 149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05854858085513115
    2. '1' → logprob: -3.93354868888855
    3. '(a' → logprob: -4.058548450469971
    4. '(b' → logprob: -4.933548450469971
    5. '(op' → logprob: -5.308548450469971
    6. '(' → logprob: -5.433548450469971
    7. 'a' → logprob: -7.558548450469971
    8. '(eval' → logprob: -7.683548450469971
    9. '((' → logprob: -8.308548927307129
    10. '(c' → logprob: -8.308548927307129

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003866823622956872
    2. '[' → logprob: -6.003866672515869
    3. '(a' → logprob: -8.003867149353027
    4. '(' → logprob: -8.253867149353027
    5. '(x' → logprob: -9.003867149353027
    6. '0' → logprob: -9.003867149353027
    7. 'a' → logprob: -9.253867149353027
    8. '(b' → logprob: -9.878867149353027
    9. ']' → logprob: -9.941367149353027
    10. '][' → logprob: -10.066367149353027

Token 151: '](' (ID: 20614)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.9838688969612122
    2. 'op' → logprob: -1.9838688373565674
    3. '(' → logprob: -2.1088688373565674
    4. '((' → logprob: -2.3588688373565674
    5. '(a' → logprob: -2.8588688373565674
    6. 'a' → logprob: -2.8588688373565674
    7. ')(' → logprob: -4.1088690757751465
    8. '(x' → logprob: -4.2338690757751465
    9. '
' → logprob: -4.4838690757751465
    10. '(
' → logprob: -4.7338690757751465

Token 152: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.15441757265944e-05
    2. ' a' → logprob: -10.375031471252441
    3. ' ' → logprob: -16.000032424926758
    4. '(a' → logprob: -16.500032424926758
    5. '   ' → logprob: -16.875032424926758
    6. ')a' → logprob: -18.500032424926758
    7. '	a' → logprob: -18.500032424926758
    8. '  ' → logprob: -18.750032424926758
    9. ')' → logprob: -18.750032424926758
    10. '(' → logprob: -19.250032424926758

Token 153: ',b' (ID: 17568)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7208005785942078
    2. ',' → logprob: -0.8458005785942078
    3. ',b' → logprob: -2.5958006381988525
    4. ' b' → logprob: -4.720800399780273
    5. ' ,' → logprob: -7.095800399780273
    6. ' ' → logprob: -9.470800399780273
    7. '<|end|>' → logprob: -12.095800399780273
    8. ')b' → logprob: -12.470800399780273
    9. ')' → logprob: -12.595800399780273
    10. '  ' → logprob: -13.220800399780273

Token 154: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2651607394218445
    2. ',' → logprob: -2.2651607990264893
    3. 'c' → logprob: -2.3901607990264893
    4. ',c' → logprob: -3.7651607990264893
    5. ')c' → logprob: -4.64016056060791
    6. ')' → logprob: -6.39016056060791
    7. ' ),' → logprob: -6.89016056060791
    8. ' ,' → logprob: -7.01516056060791
    9. ' c' → logprob: -7.01516056060791
    10. '   ' → logprob: -9.39016056060791

Token 155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018077615823131055
    2. ' c' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.750181198120117
    4. ')c' → logprob: -14.875181198120117
    5. ' ' → logprob: -15.500181198120117
    6. '	c' → logprob: -16.375181198120117
    7. '  ' → logprob: -16.750181198120117
    8. '
' → logprob: -18.000181198120117
    9. ')' → logprob: -18.000181198120117
    10. '       ' → logprob: -18.375181198120117

Token 156: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00036537862615659833
    2. ')' → logprob: -9.125365257263184
    3. 'd' → logprob: -9.125365257263184
    4. ',' → logprob: -9.500365257263184
    5. ' ),' → logprob: -10.375365257263184
    6. ',d' → logprob: -10.875365257263184
    7. '(d' → logprob: -12.000365257263184
    8. ')d' → logprob: -12.125365257263184
    9. '[' → logprob: -12.500365257263184
    10. ')),' → logprob: -13.125365257263184

Token 157: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005542247672565281
    2. ' d' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.750554084777832
    4. '	d' → logprob: -15.000554084777832
    5. ' ' → logprob: -15.500554084777832
    6. ')d' → logprob: -15.875554084777832
    7. '  ' → logprob: -16.62555503845215
    8. '    ' → logprob: -17.50055503845215
    9. '       ' → logprob: -17.62555503845215
    10. '     ' → logprob: -17.87555503845215

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002727793762460351
    2. ')
' → logprob: -8.250272750854492
    3. ' )' → logprob: -12.125272750854492
    4. '   ' → logprob: -12.750272750854492
    5. '))' → logprob: -13.375272750854492
    6. ' ' → logprob: -14.750272750854492
    7. ')

' → logprob: -15.000272750854492
    8. ')))' → logprob: -16.000272750854492
    9. ')
' → logprob: -16.125272750854492
    10. '       ' → logprob: -16.125272750854492

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15226295590400696
    2. '
' → logprob: -2.0272629261016846
    3. '    
' → logprob: -5.027263164520264
    4. 'yield' → logprob: -6.527263164520264
    5. '	yield' → logprob: -7.902263164520264
    6. '\n' → logprob: -8.152262687683105
    7. '  
' → logprob: -8.777262687683105
    8. ' yield' → logprob: -8.777262687683105
    9. ')' → logprob: -9.027262687683105
    10. '```' → logprob: -9.277262687683105

Token 160: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060236796736717224
    2. '
' → logprob: -2.935236692428589
    3. 'yield' → logprob: -5.810236930847168
    4. '    
' → logprob: -7.060236930847168
    5. ' yield' → logprob: -7.310236930847168
    6. '\n' → logprob: -7.935236930847168
    7. '#' (adapté à ' #') → logprob: -9.185236930847168
    8. '	yield' → logprob: -9.310236930847168
    9. '  
' → logprob: -9.560236930847168
    10. ' ' → logprob: -9.810236930847168

Token 161: ' (' (ID: 350)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.5262797474861145
    2. ' yield' → logprob: -1.0262796878814697
    3. ' f' → logprob: -3.4012796878814697
    4. 'f' → logprob: -4.151279926300049
    5. '(f' → logprob: -7.151279926300049
    6. ' (' → logprob: -8.40127944946289
    7. '   ' → logprob: -8.65127944946289
    8. ' ' → logprob: -8.65127944946289
    9. '((' → logprob: -9.27627944946289
    10. '	yield' → logprob: -9.65127944946289

Token 162: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6014643907546997
    2. '{' → logprob: -1.3514643907546997
    3. 'f' → logprob: -2.10146427154541
    4. '(a' → logprob: -2.97646427154541
    5. '(f' → logprob: -3.97646427154541
    6. '({' → logprob: -7.60146427154541
    7. '(' → logprob: -8.60146427154541
    8. ' (' → logprob: -9.10146427154541
    9. ' {' → logprob: -9.10146427154541
    10. ' a' → logprob: -9.85146427154541

Token 163: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.05435008183121681
    2. ' {' → logprob: -3.3043501377105713
    3. 'op' → logprob: -4.554349899291992
    4. ' f' → logprob: -5.429349899291992
    5. ' ' → logprob: -7.679349899291992
    6. 'f' → logprob: -7.679349899291992
    7. '{' → logprob: -8.929349899291992
    8. ' ' → logprob: -9.304349899291992
    9. ' (' → logprob: -9.554349899291992
    10. '	op' → logprob: -11.304349899291992

Token 164: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1282142549753189
    2. ' b' → logprob: -2.2532143592834473
    3. '{' → logprob: -4.628214359283447
    4. ' {' → logprob: -6.003214359283447
    5. ' op' → logprob: -6.253214359283447
    6. 'op' → logprob: -7.253214359283447
    7. ' (' → logprob: -8.503213882446289
    8. '(' → logprob: -9.503213882446289
    9. '(op' → logprob: -9.878213882446289
    10. '(b' → logprob: -10.003213882446289

Token 165: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016909420082811266
    2. ' b' → logprob: -8.750168800354004
    3. '{' → logprob: -12.000168800354004
    4. '(b' → logprob: -12.500168800354004
    5. 'a' → logprob: -14.750168800354004
    6. ' ' → logprob: -15.875168800354004
    7. ' (' → logprob: -16.12516975402832
    8. '(' → logprob: -17.25016975402832
    9. '   ' → logprob: -17.50016975402832
    10. '_b' → logprob: -18.25016975402832

Token 166: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.17514897882938385
    2. '[' → logprob: -2.1751489639282227
    3. 'op' → logprob: -3.1751489639282227
    4. ' {' → logprob: -6.300148963928223
    5. ' ' → logprob: -6.550148963928223
    6. ' [' → logprob: -7.175148963928223
    7. '1' → logprob: -7.175148963928223
    8. ')' → logprob: -8.925148963928223
    9. '{' → logprob: -8.925148963928223
    10. ' (' → logprob: -9.800148963928223

Token 167: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6178597211837769
    2. ' c' → logprob: -0.9928597211837769
    3. 'b' → logprob: -2.7428598403930664
    4. ' b' → logprob: -4.242859840393066
    5. '{' → logprob: -5.492859840393066
    6. ' (' → logprob: -6.617859840393066
    7. '(' → logprob: -6.617859840393066
    8. ' op' → logprob: -6.742859840393066
    9. ')' → logprob: -6.992859840393066
    10. ' {' → logprob: -7.242859840393066

Token 168: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47751572728157043
    2. '))' → logprob: -0.977515697479248
    3. ')[' → logprob: -7.352515697479248
    4. '))
' → logprob: -7.477515697479248
    5. '))[' → logprob: -7.477515697479248
    6. '[' → logprob: -7.727515697479248
    7. ')"' → logprob: -7.852515697479248
    8. ')`' → logprob: -8.227516174316406
    9. ')
' → logprob: -8.852516174316406
    10. ')")' → logprob: -8.977516174316406

Token 169: ' op' (ID: 991)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.24070709943771362
    2. 'yield' → logprob: -1.9907071590423584
    3. '   ' → logprob: -2.7407071590423584
    4. ' f' → logprob: -4.865706920623779
    5. ')' → logprob: -6.615706920623779
    6. 'f' → logprob: -6.990706920623779
    7. '	yield' → logprob: -7.115706920623779
    8. ',' → logprob: -7.615706920623779
    9. ' ' → logprob: -7.990706920623779
    10. '    ' → logprob: -8.240707397460938

Token 170: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5245548486709595
    2. 'd' → logprob: -0.8995548486709595
    3. ' op' → logprob: -7.52455472946167
    4. ' (' → logprob: -8.024555206298828
    5. 'op' → logprob: -9.274555206298828
    6. '(d' → logprob: -9.274555206298828
    7. '{' → logprob: -9.399555206298828
    8. '(' → logprob: -9.774555206298828
    9. '```' → logprob: -9.774555206298828
    10. '_d' → logprob: -10.149555206298828

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33847707509994507
    2. ' yield' → logprob: -1.8384771347045898
    3. 'yield' → logprob: -2.08847713470459
    4. '	yield' → logprob: -6.21347713470459
    5. '
' → logprob: -6.33847713470459
    6. ' yields' → logprob: -8.71347713470459
    7. '  ' → logprob: -9.46347713470459
    8. ',' → logprob: -9.46347713470459
    9. '    ' → logprob: -10.71347713470459
    10. ' ,' → logprob: -10.96347713470459

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6170278191566467
    2. 'yield' → logprob: -0.9920278191566467
    3. ' yield' → logprob: -2.617027759552002
    4. '	yield' → logprob: -4.117027759552002
    5. ',' → logprob: -9.61702823638916
    6. ' yields' → logprob: -9.86702823638916
    7. '  ' → logprob: -9.99202823638916
    8. '
' → logprob: -10.24202823638916
    9. '    
' → logprob: -10.61702823638916
    10. ' ' → logprob: -10.86702823638916

Token 173: ' val' (ID: 1459)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.10069442540407181
    2. 'yield' → logprob: -2.350694417953491
    3. '   ' → logprob: -7.72569465637207
    4. '	yield' → logprob: -10.72569465637207
    5. ' y' → logprob: -11.47569465637207
    6. ' f' → logprob: -12.60069465637207
    7. '    ' → logprob: -12.60069465637207
    8. 'y' → logprob: -13.10069465637207
    9. '
' → logprob: -13.35069465637207
    10. 'f' → logprob: -13.47569465637207

Token 174: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11832665652036667
    2. ' =' → logprob: -2.3683266639709473
    3. 'f' → logprob: -5.368326663970947
    4. '   ' → logprob: -5.743326663970947
    5. '"' → logprob: -6.243326663970947
    6. '=f' → logprob: -6.243326663970947
    7. 'yield' → logprob: -6.868326663970947
    8. 'ue' → logprob: -7.243326663970947
    9. '="' → logprob: -7.743326663970947
    10. 'y' → logprob: -7.743326663970947

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.546286940574646
    2. '=' → logprob: -0.921286940574646
    3. ' yield' → logprob: -4.7962870597839355
    4. ',' → logprob: -5.4212870597839355
    5. 'yield' → logprob: -5.6712870597839355
    6. ' f' → logprob: -5.7962870597839355
    7. '=f' → logprob: -6.2962870597839355
    8. 'f' → logprob: -7.1712870597839355
    9. '   ' → logprob: -7.7962870597839355
    10. ' ,' → logprob: -8.671286582946777

Token 176: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.25211235880851746
    2. ' op' → logprob: -1.5021123886108398
    3. '(op' → logprob: -9.75211238861084
    4. 'ops' → logprob: -10.00211238861084
    5. ' ' → logprob: -10.75211238861084
    6. 'f' → logprob: -10.87711238861084
    7. '	op' → logprob: -12.50211238861084
    8. 'b' → logprob: -12.50211238861084
    9. 'val' → logprob: -12.62711238861084
    10. '(' → logprob: -12.75211238861084

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11348393559455872
    2. '2' → logprob: -2.2384839057922363
    3. '[' → logprob: -7.863483905792236
    4. '3' → logprob: -8.363484382629395
    5. '_' → logprob: -11.238484382629395
    6. '0' → logprob: -11.363484382629395
    7. '(' → logprob: -12.488484382629395
    8. '```' → logprob: -12.488484382629395
    9. '   ' → logprob: -13.113484382629395
    10. '=' → logprob: -14.113484382629395

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011117222311440855
    2. '1' → logprob: -9.12511157989502
    3. '(' → logprob: -13.62511157989502
    4. ',' → logprob: -14.75011157989502
    5. '.' → logprob: -15.37511157989502
    6. ' [' → logprob: -16.500110626220703
    7. '<|end|>' → logprob: -16.750110626220703
    8. ' ' → logprob: -16.875110626220703
    9. '   ' → logprob: -17.000110626220703
    10. '<|end|>' → logprob: -17.437610626220703

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011117222311440855
    2. '[' → logprob: -9.25011157989502
    3. '(' → logprob: -11.37511157989502
    4. ' ' → logprob: -13.62511157989502
    5. '][' → logprob: -15.06261157989502
    6. '```' → logprob: -15.12511157989502
    7. '0' → logprob: -15.87511157989502
    8. ']' → logprob: -16.000110626220703
    9. '('' → logprob: -16.062610626220703
    10. '-' → logprob: -16.125110626220703

Token 180: '](' (ID: 20614)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25238627195358276
    2. '(b' → logprob: -1.5023863315582275
    3. '](' → logprob: -8.252386093139648
    4. 'a' → logprob: -9.752386093139648
    5. '(' → logprob: -9.877386093139648
    6. ' (' → logprob: -10.252386093139648
    7. ')(' → logprob: -10.502386093139648
    8. 'b' → logprob: -11.127386093139648
    9. ']' → logprob: -13.127386093139648
    10. '}(' → logprob: -13.252386093139648

Token 181: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.3080716346157715e-05
    2. 'b' → logprob: -11.000022888183594
    3. ' a' → logprob: -12.000022888183594
    4. '   ' → logprob: -16.000022888183594
    5. '	a' → logprob: -16.750022888183594
    6. '(a' → logprob: -17.500022888183594
    7. ')' → logprob: -17.750022888183594
    8. ')a' → logprob: -17.750022888183594
    9. ' ' → logprob: -18.375022888183594
    10. '
' → logprob: -18.875022888183594

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002864319598302245
    2. ',b' → logprob: -6.502864360809326
    3. ' ,' → logprob: -7.252864360809326
    4. 'b' → logprob: -7.627864360809326
    5. ')' → logprob: -9.752863883972168
    6. ',val' → logprob: -10.002863883972168
    7. ',(' → logprob: -10.627863883972168
    8. 'op' → logprob: -11.002863883972168
    9. '(' → logprob: -12.252863883972168
    10. ' (' → logprob: -12.377863883972168

Token 183: ' op' (ID: 991)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6944896578788757
    2. 'op' → logprob: -0.6944896578788757
    3. ' op' → logprob: -7.194489479064941
    4. 'val' → logprob: -7.694489479064941
    5. ' b' → logprob: -9.194489479064941
    6. '(op' → logprob: -11.319489479064941
    7. 'ops' → logprob: -12.069489479064941
    8. ')' → logprob: -12.444489479064941
    9. '(b' → logprob: -13.069489479064941
    10. '   ' → logprob: -13.569489479064941

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011093381908722222
    2. '1' → logprob: -9.125110626220703
    3. '[' → logprob: -13.375110626220703
    4. '
' → logprob: -16.250110626220703
    5. '0' → logprob: -16.375110626220703
    6. '(' → logprob: -16.687610626220703
    7. '```' → logprob: -17.062610626220703
    8. '

' → logprob: -17.437610626220703
    9. '3' → logprob: -17.750110626220703
    10. '   ' → logprob: -17.812610626220703

Token 185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012868782505393028
    2. '1' → logprob: -9.000128746032715
    3. '(' → logprob: -12.250128746032715
    4. ' (' → logprob: -15.875128746032715
    5. '-' → logprob: -16.6251277923584
    6. '2' → logprob: -17.2501277923584
    7. '```' → logprob: -17.2501277923584
    8. ' ' → logprob: -17.3751277923584
    9. '   ' → logprob: -17.6251277923584
    10. 's' → logprob: -17.8126277923584

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -11.500020980834961
    3. '[' → logprob: -11.625020980834961
    4. '-' → logprob: -15.250020980834961
    5. '0' → logprob: -15.375020980834961
    6. ' ' → logprob: -15.375020980834961
    7. '```' → logprob: -15.562520980834961
    8. '
' → logprob: -16.43752098083496
    9. ']' → logprob: -16.56252098083496
    10. ')' → logprob: -17.12502098083496

Token 187: '](' (ID: 20614)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.029969394207000732
    2. '](' → logprob: -3.7799694538116455
    3. '(' → logprob: -5.904969215393066
    4. 'b' → logprob: -6.779969215393066
    5. ']' → logprob: -7.029969215393066
    6. ')(' → logprob: -7.154969215393066
    7. ' (' → logprob: -7.529969215393066
    8. '[' → logprob: -8.529969215393066
    9. '1' → logprob: -9.029969215393066
    10. ')' → logprob: -9.279969215393066

Token 188: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. ')b' → logprob: -18.625001907348633
    4. '(b' → logprob: -19.250001907348633
    5. '
' → logprob: -19.625001907348633
    6. ')' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '	b' → logprob: -20.750001907348633
    9. ' ' → logprob: -21.750001907348633
    10. '[b' → logprob: -21.875001907348633

Token 189: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4837707281112671
    2. ',c' → logprob: -0.9837707281112671
    3. ',b' → logprob: -4.733770847320557
    4. ' ,' → logprob: -8.358770370483398
    5. 'c' → logprob: -8.483770370483398
    6. ',d' → logprob: -8.733770370483398
    7. ',y' → logprob: -8.733770370483398
    8. ')' → logprob: -10.233770370483398
    9. ',a' → logprob: -12.108770370483398
    10. ',k' → logprob: -12.108770370483398

Token 190: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014399961801245809
    2. ')' → logprob: -6.751440048217773
    3. '))
' → logprob: -8.251440048217773
    4. ' ))' → logprob: -12.501440048217773
    5. ')))' → logprob: -12.876440048217773
    6. '))
' → logprob: -14.001440048217773
    7. '))

' → logprob: -14.626440048217773
    8. ' ' → logprob: -14.876440048217773
    9. '),' → logprob: -15.126440048217773
    10. ')
' → logprob: -15.251440048217773

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18239296972751617
    2. 'yield' → logprob: -2.1823930740356445
    3. '
' → logprob: -3.6823930740356445
    4. ' yield' → logprob: -3.9323930740356445
    5. ')
' → logprob: -5.9323930740356445
    6. ',' → logprob: -6.4323930740356445
    7. '	yield' → logprob: -6.4323930740356445
    8. ')' → logprob: -7.5573930740356445
    9. 'val' → logprob: -7.5573930740356445
    10. '")' → logprob: -7.6823930740356445

Token 192: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.3187653124332428
    2. 'yield' (adapté à ' yield') → logprob: -1.6937652826309204
    3. '   ' → logprob: -2.69376540184021
    4. '
' → logprob: -3.94376540184021
    5. '	yield' → logprob: -7.068765163421631
    6. ',' → logprob: -7.818765163421631
    7. ' ,' → logprob: -8.568765640258789
    8. '    ' → logprob: -8.818765640258789
    9. ' y' → logprob: -9.068765640258789
    10. ' ' → logprob: -9.318765640258789

Token 193: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.16112342476844788
    2. ' f' → logprob: -1.9111233949661255
    3. '(f' → logprob: -7.036123275756836
    4. ' ' → logprob: -11.286123275756836
    5. '   ' → logprob: -12.161123275756836
    6. ' (' → logprob: -13.911123275756836
    7. '  ' → logprob: -15.411123275756836
    8. '	f' → logprob: -15.536123275756836
    9. '[f' → logprob: -16.786123275756836
    10. '    ' → logprob: -16.911123275756836

Token 194: '"' (ID: 1)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6512451767921448
    2. 'f' → logprob: -0.7762451767921448
    3. '(f' → logprob: -4.0262451171875
    4. ' (' → logprob: -8.2762451171875
    5. ' ' → logprob: -8.4012451171875
    6. '"' → logprob: -9.5262451171875
    7. '   ' → logprob: -9.9012451171875
    8. '(' → logprob: -11.9012451171875
    9. '  ' → logprob: -12.2762451171875
    10. '    ' → logprob: -12.9012451171875

Token 195: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.07565950602293015
    2. '(a' → logprob: -2.8256595134735107
    3. '(f' → logprob: -4.325659275054932
    4. '(({' → logprob: -9.20065975189209
    5. 'f' → logprob: -9.45065975189209
    6. '(' → logprob: -9.57565975189209
    7. '((' → logprob: -9.95065975189209
    8. ' (' → logprob: -10.32565975189209
    9. ' ({' → logprob: -10.82565975189209
    10. '{' → logprob: -11.20065975189209

Token 196: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.392202976712724e-06
    2. ' a' → logprob: -12.625006675720215
    3. '{' → logprob: -12.750006675720215
    4. '   ' → logprob: -16.3750057220459
    5. 'f' → logprob: -16.6250057220459
    6. ' ' → logprob: -16.7500057220459
    7. '	a' → logprob: -18.0000057220459
    8. '}' → logprob: -18.3750057220459
    9. '  ' → logprob: -18.7500057220459
    10. 'b' → logprob: -19.1250057220459

Token 197: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.21582871675491333
    2. ' f' → logprob: -1.8408286571502686
    3. ' {' → logprob: -3.4658286571502686
    4. 'f' → logprob: -5.840828895568848
    5. ' ' → logprob: -7.340828895568848
    6. '{' → logprob: -7.965828895568848
    7. ' }' → logprob: -8.840828895568848
    8. ')' → logprob: -9.590828895568848
    9. ' ' → logprob: -10.215828895568848
    10. '"' → logprob: -11.090828895568848

Token 198: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.014088637195527554
    2. ' f' → logprob: -4.3890886306762695
    3. '{' → logprob: -6.5140886306762695
    4. ' ' → logprob: -9.51408863067627
    5. '}' → logprob: -11.88908863067627
    6. 'f' → logprob: -11.88908863067627
    7. ')' → logprob: -12.63908863067627
    8. ' ' → logprob: -12.76408863067627
    9. ' op' → logprob: -14.63908863067627
    10. ' {}' → logprob: -15.26408863067627

Token 199: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -6.988221684878226e-06
    2. ' op' → logprob: -11.875006675720215
    3. '(op' → logprob: -18.00000762939453
    4. '	op' → logprob: -18.50000762939453
    5. 'opt' → logprob: -19.12500762939453
    6. ' ' → logprob: -19.87500762939453
    7. '   ' → logprob: -19.87500762939453
    8. 'opf' → logprob: -20.37500762939453
    9. '  ' → logprob: -20.87500762939453
    10. '_op' → logprob: -21.00000762939453

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009184435941278934
    2. 'op' → logprob: -4.75918436050415
    3. '_op' → logprob: -8.634184837341309
    4. '[' → logprob: -8.759184837341309
    5. '3' → logprob: -9.384184837341309
    6. ' op' → logprob: -9.384184837341309
    7. '_' → logprob: -10.384184837341309
    8. '2' → logprob: -11.384184837341309
    9. '(op' → logprob: -11.759184837341309
    10. ' ' → logprob: -12.259184837341309

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '{' → logprob: -13.125004768371582
    3. ' [' → logprob: -13.250004768371582
    4. '}' → logprob: -15.375004768371582
    5. '0' → logprob: -16.125003814697266
    6. ' ' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.375003814697266
    8. '(' → logprob: -17.125003814697266
    9. 'op' → logprob: -17.625003814697266
    10. '  ' → logprob: -18.500003814697266

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008660420775413513
    2. '[' → logprob: -4.758660316467285
    3. ' ' → logprob: -10.633660316467285
    4. '{' → logprob: -11.383660316467285
    5. '(' → logprob: -12.883660316467285
    6. '1' → logprob: -13.883660316467285
    7. ' [' → logprob: -13.883660316467285
    8. ''' → logprob: -14.008660316467285
    9. '   ' → logprob: -14.071160316467285
    10. '  ' → logprob: -14.821160316467285

Token 203: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -1.3782830137643032e-05
    2. ' }' → logprob: -11.37501335144043
    3. '}}' → logprob: -14.00001335144043
    4. '[' → logprob: -14.50001335144043
    5. ')}' → logprob: -14.75001335144043
    6. '})' → logprob: -15.62501335144043
    7. '()}' → logprob: -16.87501335144043
    8. '(' → logprob: -16.87501335144043
    9. '}{' → logprob: -16.87501335144043
    10. '{' → logprob: -17.00001335144043

Token 204: ' ({' (ID: 16472)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15980428457260132
    2. '(b' → logprob: -3.159804344177246
    3. '({' → logprob: -3.159804344177246
    4. ' ({' → logprob: -3.159804344177246
    5. '(op' → logprob: -4.784804344177246
    6. '(' → logprob: -4.909804344177246
    7. ' {' → logprob: -5.784804344177246
    8. '{' → logprob: -6.659804344177246
    9. '(f' → logprob: -9.159804344177246
    10. ' ' → logprob: -9.159804344177246

Token 205: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -13.750000953674316
    3. 'f' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.625001907348633
    5. ')b' → logprob: -19.125001907348633
    6. '{' → logprob: -19.500001907348633
    7. '	b' → logprob: -19.875001907348633
    8. ' ' → logprob: -20.125001907348633
    9. ''b' → logprob: -20.500001907348633
    10. 'str' → logprob: -20.500001907348633

Token 206: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.04122137278318405
    2. 'op' → logprob: -3.9162213802337646
    3. ' op' → logprob: -4.1662211418151855
    4. '[' → logprob: -5.6662211418151855
    5. ' }' → logprob: -7.5412211418151855
    6. ')' → logprob: -7.6662211418151855
    7. ' ' → logprob: -8.166221618652344
    8. ' ' → logprob: -9.791221618652344
    9. '{' → logprob: -10.166221618652344
    10. '0' → logprob: -10.791221618652344

Token 207: ' {' (ID: 354)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.4029797315597534
    2. ' {' → logprob: -1.6529797315597534
    3. '[' → logprob: -2.902979850769043
    4. 'op' → logprob: -2.902979850769043
    5. '}' → logprob: -4.402979850769043
    6. ' ' → logprob: -4.652979850769043
    7. '{' → logprob: -4.902979850769043
    8. ')' → logprob: -7.777979850769043
    9. '0' → logprob: -7.902979850769043
    10. ' [' → logprob: -8.652979850769043

Token 208: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.5048530030981055e-06
    2. ' op' → logprob: -13.500001907348633
    3. 'ops' → logprob: -18.375001907348633
    4. '2' → logprob: -18.625001907348633
    5. '	op' → logprob: -20.000001907348633
    6. ' ' → logprob: -20.500001907348633
    7. '(op' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '[' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.625001907348633

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00695323059335351
    2. '1' → logprob: -5.006953239440918
    3. '[' → logprob: -8.506953239440918
    4. '3' → logprob: -11.569453239440918
    5. '
' → logprob: -12.131953239440918
    6. ' ' → logprob: -12.631953239440918
    7. '(' → logprob: -12.819453239440918
    8. '0' → logprob: -12.944453239440918
    9. '   ' → logprob: -13.194453239440918
    10. '```' → logprob: -13.381953239440918

Token 210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.50000286102295
    4. ' [' → logprob: -17.250001907348633
    5. '(' → logprob: -17.875001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '1' → logprob: -18.250001907348633
    8. '  ' → logprob: -18.750001907348633
    9. '    ' → logprob: -19.500001907348633
    10. ')' → logprob: -20.000001907348633

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019364648323971778
    2. '[' → logprob: -8.62519359588623
    3. '1' → logprob: -11.75019359588623
    4. ' ' → logprob: -12.37519359588623
    5. '   ' → logprob: -14.37519359588623
    6. '(' → logprob: -14.50019359588623
    7. '
' → logprob: -15.62519359588623
    8. '  ' → logprob: -15.81269359588623
    9. ''' → logprob: -16.625194549560547
    10. '{' → logprob: -16.812694549560547

Token 212: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.31338658928871155
    2. '[' → logprob: -1.3133865594863892
    3. '}[' → logprob: -9.563386917114258
    4. ' }' → logprob: -10.813386917114258
    5. ']}' → logprob: -11.438386917114258
    6. ')}' → logprob: -12.063386917114258
    7. '0' → logprob: -12.313386917114258
    8. ']' → logprob: -13.188386917114258
    9. '
' → logprob: -13.188386917114258
    10. '{' → logprob: -13.313386917114258

Token 213: ' {' (ID: 354)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004404482431709766
    2. ' c' → logprob: -6.004404544830322
    3. '{' → logprob: -6.254404544830322
    4. ' {' → logprob: -12.379404067993164
    5. ' ' → logprob: -15.379404067993164
    6. '}' → logprob: -15.504404067993164
    7. 'op' → logprob: -16.254404067993164
    8. '   ' → logprob: -16.254404067993164
    9. ')c' → logprob: -16.254404067993164
    10. '%c' → logprob: -16.504404067993164

Token 214: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.7835754988482222e-05
    2. ' c' → logprob: -11.000018119812012
    3. ')c' → logprob: -14.125018119812012
    4. '   ' → logprob: -15.375018119812012
    5. '	c' → logprob: -15.875018119812012
    6. ' ' → logprob: -17.375017166137695
    7. '}' → logprob: -18.000017166137695
    8. 'с' → logprob: -18.125017166137695
    9. '  ' → logprob: -18.250017166137695
    10. '$c' → logprob: -18.375017166137695

Token 215: '}))' (ID: 144625)
  Prédit: '}))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}))' → logprob: -0.00019626895664259791
    2. '}' → logprob: -8.75019645690918
    3. '))' → logprob: -10.87519645690918
    4. '})' → logprob: -12.00019645690918
    5. ')))' → logprob: -12.37519645690918
    6. ' }))' → logprob: -12.62519645690918
    7. ']))' → logprob: -13.50019645690918
    8. '}))
' → logprob: -13.75019645690918
    9. ' ' → logprob: -14.50019645690918
    10. ')}' → logprob: -14.62519645690918

Token 216: ' {' (ID: 354)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020867353305220604
    2. ' {' → logprob: -6.502086639404297
    3. ' )' → logprob: -7.752086639404297
    4. '{' → logprob: -8.877086639404297
    5. '}' → logprob: -11.627086639404297
    6. '){' → logprob: -12.877086639404297
    7. '")' → logprob: -13.002086639404297
    8. ' ){' → logprob: -14.502086639404297
    9. ' }' → logprob: -15.877086639404297
    10. ' ' → logprob: -16.127086639404297

Token 217: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.1517960956552997e-05
    2. ' op' → logprob: -11.375011444091797
    3. '	op' → logprob: -19.000011444091797
    4. '(op' → logprob: -19.500011444091797
    5. '   ' → logprob: -20.125011444091797
    6. ' ' → logprob: -21.000011444091797
    7. 'opt' → logprob: -21.500011444091797
    8. '  ' → logprob: -22.000011444091797
    9. 'оп' → logprob: -22.125011444091797
    10. '_op' → logprob: -22.125011444091797

Token 218: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.856408536899835e-05
    2. '[' → logprob: -10.875028610229492
    3. '1' → logprob: -12.250028610229492
    4. '2' → logprob: -13.250028610229492
    5. '_' → logprob: -14.062528610229492
    6. 'op' → logprob: -14.250028610229492
    7. '```' → logprob: -14.750028610229492
    8. '(' → logprob: -16.125028610229492
    9. '['' → logprob: -16.437528610229492
    10. ' ' → logprob: -16.562528610229492

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '(' → logprob: -16.375001907348633
    5. '0' → logprob: -17.625001907348633
    6. '  ' → logprob: -17.750001907348633
    7. ' ' → logprob: -17.750001907348633
    8. '    ' → logprob: -17.875001907348633
    9. '```' → logprob: -18.500001907348633
    10. ' (' → logprob: -19.250001907348633

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47416427731513977
    2. '[' → logprob: -0.9741642475128174
    3. ' ' → logprob: -9.599164009094238
    4. ''[' → logprob: -11.599164009094238
    5. ' [' → logprob: -12.099164009094238
    6. '(' → logprob: -13.474164009094238
    7. '   ' → logprob: -14.099164009094238
    8. ''' → logprob: -14.349164009094238
    9. '  ' → logprob: -14.599164009094238
    10. '{' → logprob: -15.099164009094238

Token 221: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00015788905147928745
    2. ' }' → logprob: -9.125158309936523
    3. '`}' → logprob: -10.625158309936523
    4. '"}' → logprob: -11.125158309936523
    5. '}}' → logprob: -12.750158309936523
    6. ''}' → logprob: -13.375158309936523
    7. ')}' → logprob: -13.375158309936523
    8. 'f' → logprob: -14.250158309936523
    9. '}`}' → logprob: -14.750158309936523
    10. '>}' → logprob: -14.750158309936523

Token 222: ' {' (ID: 354)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.21238897740840912
    2. ' {' → logprob: -1.7123889923095703
    3. 'd' → logprob: -5.21238899230957
    4. '{' → logprob: -5.21238899230957
    5. ' ' → logprob: -11.96238899230957
    6. ' f' → logprob: -12.08738899230957
    7. ' ' → logprob: -12.71238899230957
    8. '{}' → logprob: -13.71238899230957
    9. '}' → logprob: -14.46238899230957
    10. '`' → logprob: -15.08738899230957

Token 223: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.157039049663581e-05
    2. ' d' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.750051498413086
    4. '
' → logprob: -18.500051498413086
    5. '	d' → logprob: -18.500051498413086
    6. ' ' → logprob: -19.000051498413086
    7. '{' → logprob: -19.000051498413086
    8. '}' → logprob: -19.000051498413086
    9. '```' → logprob: -19.125051498413086
    10. ')d' → logprob: -20.000051498413086

Token 224: '}",' (ID: 20115)
  Prédit: '}",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}",' → logprob: -0.17309312522411346
    2. '",' → logprob: -2.42309308052063
    3. ')",' → logprob: -2.67309308052063
    4. '}"' → logprob: -7.548093318939209
    5. '}' → logprob: -7.923093318939209
    6. '},' → logprob: -8.67309284210205
    7. '"' → logprob: -9.79809284210205
    8. ')' → logprob: -10.17309284210205
    9. '),' → logprob: -10.17309284210205
    10. ')"' → logprob: -10.54809284210205

Token 225: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4741205871105194
    2. ' op' → logprob: -0.9741206169128418
    3. 'val' → logprob: -10.474120140075684
    4. '(op' → logprob: -11.849120140075684
    5. ' val' → logprob: -12.099120140075684
    6. ' ' → logprob: -14.724120140075684
    7. ' ' → logprob: -14.849120140075684
    8. 'ops' → logprob: -15.099120140075684
    9. 'f' → logprob: -15.224120140075684
    10. '_op' → logprob: -15.349120140075684

Token 226: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -14.125003814697266
    3. '_' → logprob: -14.375003814697266
    4. '(' → logprob: -14.375003814697266
    5. '[' → logprob: -14.375003814697266
    6. '1' → logprob: -14.500003814697266
    7. '2' → logprob: -15.125003814697266
    8. 'op' → logprob: -15.500003814697266
    9. '
' → logprob: -16.625003814697266
    10. 'ops' → logprob: -17.812503814697266

Token 227: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '3' → logprob: -14.875000953674316
    3. '_' → logprob: -15.625000953674316
    4. '```' → logprob: -16.125
    5. '(' → logprob: -16.375
    6. '<|end|>' → logprob: -17.375
    7. '1' → logprob: -17.5
    8. '‌' → logprob: -17.875
    9. ' [' → logprob: -18.375
    10. '_[' → logprob: -18.5

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001034595537930727
    2. '[' → logprob: -6.876034736633301
    3. ' ' → logprob: -13.5010347366333
    4. '```' → logprob: -16.126033782958984
    5. '<|end|>' → logprob: -17.001033782958984
    6. '   ' → logprob: -17.126033782958984
    7. ' [' → logprob: -17.251033782958984
    8. '(' → logprob: -17.501033782958984
    9. '
' → logprob: -17.688533782958984
    10. '<|end|>' → logprob: -18.001033782958984

Token 229: '](' (ID: 20614)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1374136507511139
    2. '(op' → logprob: -2.387413740158081
    3. '(val' → logprob: -3.387413740158081
    4. '1' → logprob: -6.762413501739502
    5. '(' → logprob: -7.387413501739502
    6. '](' → logprob: -7.512413501739502
    7. ']' → logprob: -8.88741397857666
    8. '[val' → logprob: -9.01241397857666
    9. 'val' → logprob: -10.01241397857666
    10. ' (' → logprob: -10.76241397857666

Token 230: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3856492842023727e-06
    2. ' val' → logprob: -13.750000953674316
    3. '(val' → logprob: -15.375000953674316
    4. '[val' → logprob: -17.875001907348633
    5. 'op' → logprob: -18.750001907348633
    6. '	val' → logprob: -19.375001907348633
    7. '1' → logprob: -19.625001907348633
    8. '(' → logprob: -20.625001907348633
    9. ',val' → logprob: -21.375001907348633
    10. 'v' → logprob: -21.375001907348633

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03162989765405655
    2. '[' → logprob: -3.781629800796509
    3. 'val' → logprob: -5.156630039215088
    4. '(val' → logprob: -6.531630039215088
    5. '[val' → logprob: -7.156630039215088
    6. '(' → logprob: -8.78162956237793
    7. ' val' → logprob: -9.78162956237793
    8. '```' → logprob: -10.65662956237793
    9. '   ' → logprob: -11.15662956237793
    10. ' ' → logprob: -11.40662956237793

Token 232: ',' (ID: 11)
  Prédit: ',val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.16092005372047424
    2. ',' → logprob: -1.9109200239181519
    3. '(val' → logprob: -8.160920143127441
    4. ' val' → logprob: -8.660920143127441
    5. 'val' → logprob: -9.285920143127441
    6. ' ,' → logprob: -9.660920143127441
    7. ',y' → logprob: -10.035920143127441
    8. ')' → logprob: -11.285920143127441
    9. '[val' → logprob: -11.285920143127441
    10. '(' → logprob: -12.535920143127441

Token 233: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004315036640036851
    2. ' d' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.250431060791016
    4. '
' → logprob: -15.500431060791016
    5. ')d' → logprob: -16.250431060791016
    6. ')' → logprob: -16.375431060791016
    7. '	d' → logprob: -17.000431060791016
    8. '```' → logprob: -18.250431060791016
    9. ' ' → logprob: -18.750431060791016
    10. '  ' → logprob: -18.750431060791016

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018065694894175977
    2. ')
' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.1251802444458
    4. ' )' → logprob: -15.1251802444458
    5. '<|end|>' → logprob: -15.8751802444458
    6. ')

' → logprob: -16.125181198120117
    7. ')#' → logprob: -16.375181198120117
    8. ')}' → logprob: -16.375181198120117
    9. ')
' → logprob: -16.500181198120117
    10. '))' → logprob: -17.000181198120117

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002537140157073736
    2. '#' → logprob: -6.002537250518799
    3. '
' → logprob: -10.75253677368164
    4. ')' → logprob: -11.00253677368164
    5. '    
' → logprob: -11.25253677368164
    6. '<|end|>' → logprob: -12.25253677368164
    7. '  ' → logprob: -13.75253677368164
    8. ' #' → logprob: -13.75253677368164
    9. ',' → logprob: -14.50253677368164
    10. '  
' → logprob: -15.00253677368164

Token 236: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02994035929441452
    2. '#' (adapté à ' #') → logprob: -3.529940366744995
    3. '
' → logprob: -9.029940605163574
    4. ' #' → logprob: -9.779940605163574
    5. '    
' → logprob: -12.154940605163574
    6. '  ' → logprob: -12.904940605163574
    7. ' ' → logprob: -13.529940605163574
    8. ')' → logprob: -13.904940605163574
    9. '    ' → logprob: -14.404940605163574
    10. '```' → logprob: -14.404940605163574

Token 237: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.48319846391677856
    2. ' (' → logprob: -1.9831984043121338
    3. 'a' → logprob: -2.233198404312134
    4. '   ' → logprob: -2.483198404312134
    5. ' a' → logprob: -3.483198404312134
    6. '(' → logprob: -4.858198642730713
    7. ' ' → logprob: -4.983198642730713
    8. '#' → logprob: -5.983198642730713
    9. '(op' → logprob: -6.358198642730713
    10. '{' → logprob: -6.733198642730713

Token 238: ' op' (ID: 991)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.004534319508820772
    2. '{' → logprob: -6.5045342445373535
    3. ' ' → logprob: -6.5045342445373535
    4. ' op' → logprob: -6.8795342445373535
    5. 'op' → logprob: -9.004534721374512
    6. ' f' → logprob: -9.504534721374512
    7. 'f' → logprob: -9.504534721374512
    8. ' ' → logprob: -9.629534721374512
    9. ' {}' → logprob: -10.379534721374512
    10. '}' → logprob: -11.379534721374512

Token 239: ' ((' (ID: 3536)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0818939283490181
    2. ' (' → logprob: -3.2068939208984375
    3. ' ' → logprob: -4.3318939208984375
    4. ' f' → logprob: -4.3318939208984375
    5. '{' → logprob: -4.5818939208984375
    6. '(' → logprob: -7.5818939208984375
    7. ' {(' → logprob: -7.8318939208984375
    8. ' ({' → logprob: -8.081893920898438
    9. 'f' → logprob: -8.456893920898438
    10. ' ' → logprob: -9.456893920898438

Token 240: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023247458040714264
    2. 'a' → logprob: -3.773247480392456
    3. ' b' → logprob: -13.148247718811035
    4. ' a' → logprob: -16.77324676513672
    5. '{' → logprob: -18.02324676513672
    6. 'c' → logprob: -18.14824676513672
    7. '   ' → logprob: -20.64824676513672
    8. '(b' → logprob: -20.77324676513672
    9. 'd' → logprob: -21.14824676513672
    10. ')' → logprob: -21.39824676513672

Token 241: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.03189516067504883
    2. 'op' → logprob: -3.781895160675049
    3. ' {' → logprob: -4.906895160675049
    4. '{' → logprob: -7.656895160675049
    5. ' ' → logprob: -8.15689468383789
    6. ' ops' → logprob: -8.15689468383789
    7. ' f' → logprob: -9.15689468383789
    8. ' ' → logprob: -11.15689468383789
    9. 'ops' → logprob: -11.15689468383789
    10. '[' → logprob: -11.40689468383789

Token 242: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001574971480295062
    2. ' c' → logprob: -6.501574993133545
    3. '{' → logprob: -10.251574516296387
    4. '(' → logprob: -10.376574516296387
    5. ' ' → logprob: -13.001574516296387
    6. ' (' → logprob: -13.626574516296387
    7. ''' → logprob: -14.251574516296387
    8. '(c' → logprob: -15.126574516296387
    9. '   ' → logprob: -15.251574516296387
    10. '}' → logprob: -15.251574516296387

Token 243: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.255023956531659e-05
    2. '[' → logprob: -9.625072479248047
    3. ')[' → logprob: -12.750072479248047
    4. ' )' → logprob: -13.375072479248047
    5. '))' → logprob: -13.500072479248047
    6. ')
' → logprob: -14.375072479248047
    7. ')

' → logprob: -17.500072479248047
    8. ']' → logprob: -17.500072479248047
    9. ')`' → logprob: -17.625072479248047
    10. 'op' → logprob: -17.750072479248047

Token 244: ' op' (ID: 991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16559311747550964
    2. '[' → logprob: -2.540593147277832
    3. '{' → logprob: -3.540593147277832
    4. ' op' → logprob: -3.915593147277832
    5. 'op' → logprob: -4.290593147277832
    6. ' {' → logprob: -4.790593147277832
    7. ' f' → logprob: -6.540593147277832
    8. ' ' → logprob: -7.915593147277832
    9. ' )' → logprob: -8.415593147277832
    10. ' [' → logprob: -8.540593147277832

Token 245: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04858759790658951
    2. ' d' → logprob: -3.0485875606536865
    3. '_d' → logprob: -16.298587799072266
    4. '(d' → logprob: -17.173587799072266
    5. ' ' → logprob: -17.548587799072266
    6. ' ' → logprob: -17.548587799072266
    7. ''d' → logprob: -17.673587799072266
    8. '	d' → logprob: -17.798587799072266
    9. 'b' → logprob: -18.173587799072266
    10. '`' → logprob: -18.298587799072266

Token 246: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038993898779153824
    2. ')' → logprob: -3.4139938354492188
    3. '   ' → logprob: -5.538993835449219
    4. '")
' → logprob: -7.038993835449219
    5. '")' → logprob: -8.288993835449219
    6. 'yield' → logprob: -8.413993835449219
    7. '}
' → logprob: -11.538993835449219
    8. '```' → logprob: -11.663993835449219
    9. '')
' → logprob: -12.413993835449219
    10. ')"
' → logprob: -12.538993835449219

Token 247: '   ' (ID: 271)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.11090777069330215
    2. '   ' → logprob: -2.860907793045044
    3. ' yield' → logprob: -3.110907793045044
    4. '
' → logprob: -5.860907554626465
    5. '	yield' → logprob: -8.235907554626465
    6. '```' → logprob: -10.735907554626465
    7. '    
' → logprob: -11.235907554626465
    8. '  ' → logprob: -11.610907554626465
    9. '\
' → logprob: -12.110907554626465
    10. ' ' → logprob: -12.235907554626465

Token 248: ' val' (ID: 1459)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.009789382107555866
    2. ' yield' → logprob: -4.63478946685791
    3. '
' → logprob: -10.88478946685791
    4. 'f' → logprob: -12.25978946685791
    5. '	yield' → logprob: -12.25978946685791
    6. '   ' → logprob: -12.50978946685791
    7. 'Yield' → logprob: -14.63478946685791
    8. 'y' → logprob: -15.38478946685791
    9. '```' → logprob: -15.50978946685791
    10. '    
' → logprob: -15.75978946685791

Token 249: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01476413756608963
    2. '3' → logprob: -4.889764308929443
    3. '2' → logprob: -5.389764308929443
    4. '=' → logprob: -6.264764308929443
    5. ' =' → logprob: -7.389764308929443
    6. 'val' → logprob: -11.389763832092285
    7. ' ' → logprob: -11.514763832092285
    8. '_' → logprob: -11.764763832092285
    9. '_val' → logprob: -11.764763832092285
    10. '   ' → logprob: -12.889763832092285

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. ' ' → logprob: -15.943147659301758
    4. ')' → logprob: -16.193147659301758
    5. '   ' → logprob: -16.443147659301758
    6. '=}' → logprob: -16.943147659301758
    7. '=
' → logprob: -17.068147659301758
    8. '```' → logprob: -17.318147659301758
    9. ',' → logprob: -17.818147659301758
    10. '}' → logprob: -17.818147659301758

Token 251: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00672211404889822
    2. ' op' → logprob: -5.0067219734191895
    3. 'a' → logprob: -12.381722450256348
    4. 'b' → logprob: -13.756722450256348
    5. 'ops' → logprob: -14.381722450256348
    6. '(op' → logprob: -15.631722450256348
    7. '	op' → logprob: -15.756722450256348
    8. 'c' → logprob: -16.00672149658203
    9. '   ' → logprob: -16.38172149658203
    10. 'val' → logprob: -16.63172149658203

Token 252: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1799972653388977
    2. '1' → logprob: -1.804997205734253
    3. '3' → logprob: -8.929997444152832
    4. '[' → logprob: -9.054997444152832
    5. '```' → logprob: -13.554997444152832
    6. '_' → logprob: -14.492497444152832
    7. '(' → logprob: -14.617497444152832
    8. ' ' → logprob: -15.429997444152832
    9. '   ' → logprob: -15.429997444152832
    10. '
' → logprob: -16.429996490478516

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.500001907348633
    3. '
' → logprob: -17.375001907348633
    4. '```' → logprob: -17.875001907348633
    5. '(' → logprob: -18.000001907348633
    6. ' [' → logprob: -18.250001907348633
    7. '2' → logprob: -19.125001907348633
    8. '.' → logprob: -19.312501907348633
    9. '...' → logprob: -19.562501907348633
    10. '[
' → logprob: -19.625001907348633

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015048631466925144
    2. '[' → logprob: -6.501504898071289
    3. ' ' → logprob: -13.001504898071289
    4. '-' → logprob: -16.75150489807129
    5. '   ' → logprob: -16.75150489807129
    6. '(' → logprob: -17.00150489807129
    7. '```' → logprob: -17.25150489807129
    8. ']' → logprob: -18.06400489807129
    9. '
' → logprob: -18.43900489807129
    10. '0' → logprob: -18.56400489807129

Token 255: '](' (ID: 20614)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.0043714940547943115
    2. '(b' → logprob: -5.504371643066406
    3. '(' → logprob: -8.504371643066406
    4. ' (' → logprob: -9.504371643066406
    5. '](' → logprob: -11.754371643066406
    6. ')(' → logprob: -13.004371643066406
    7. 'op' → logprob: -13.129371643066406
    8. '(val' → logprob: -13.754371643066406
    9. '(
' → logprob: -14.254371643066406
    10. ']' → logprob: -14.754371643066406

Token 256: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.008925477042794228
    2. 'b' → logprob: -4.758925437927246
    3. ' op' → logprob: -8.133925437927246
    4. 'val' → logprob: -11.883925437927246
    5. '   ' → logprob: -12.883925437927246
    6. '  ' → logprob: -12.883925437927246
    7. ' b' → logprob: -13.508925437927246
    8. ' ' → logprob: -13.883925437927246
    9. '(op' → logprob: -14.383925437927246
    10. '    ' → logprob: -14.508925437927246

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.558399319241289e-05
    2. '[' → logprob: -10.750025749206543
    3. '1' → logprob: -12.500025749206543
    4. '
' → logprob: -15.250025749206543
    5. '```' → logprob: -16.562524795532227
    6. ' ' → logprob: -16.750024795532227
    7. 'def' → logprob: -17.312524795532227
    8. '(' → logprob: -17.812524795532227
    9. '２' → logprob: -18.250024795532227
    10. '۲' → logprob: -18.562524795532227

Token 258: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.0
    3. '(' → logprob: -19.0
    4. '[
' → logprob: -19.5
    5. '<|end|>' → logprob: -19.75
    6. ' [' → logprob: -20.625
    7. '_' → logprob: -20.625
    8. '<|end|>' → logprob: -20.75
    9. '```' → logprob: -20.875
    10. '
' → logprob: -21.375

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05489548668265343
    2. '[' → logprob: -2.9298954010009766
    3. '(' → logprob: -11.679895401000977
    4. ' ' → logprob: -13.054895401000977
    5. '<|end|>' → logprob: -14.304895401000977
    6. '<|end|>' → logprob: -14.554895401000977
    7. '```' → logprob: -14.929895401000977
    8. '[](' → logprob: -16.179895401000977
    9. ']' → logprob: -16.242395401000977
    10. '[
' → logprob: -16.367395401000977

Token 260: '](' (ID: 20614)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.25275805592536926
    2. '[' → logprob: -1.7527580261230469
    3. '1' → logprob: -3.127758026123047
    4. '(' → logprob: -5.877758026123047
    5. '](' → logprob: -6.127758026123047
    6. ' (' → logprob: -7.252758026123047
    7. ']' → logprob: -8.002758026123047
    8. '][' → logprob: -9.877758026123047
    9. '```' → logprob: -10.377758026123047
    10. '[b' → logprob: -10.752758026123047

Token 261: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.13388703338569e-06
    2. ' b' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.750009536743164
    4. '1' → logprob: -14.875009536743164
    5. '(b' → logprob: -15.000009536743164
    6. ')b' → logprob: -17.000009536743164
    7. '	b' → logprob: -17.750009536743164
    8. ' ' → logprob: -17.875009536743164
    9. '[b' → logprob: -18.000009536743164
    10. '(' → logprob: -18.125009536743164

Token 262: ',c' (ID: 22261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029765060171484947
    2. '1' → logprob: -4.1547651290893555
    3. '(' → logprob: -5.4047651290893555
    4. 'c' → logprob: -5.5297651290893555
    5. ',' → logprob: -5.9047651290893555
    6. ',c' → logprob: -6.4047651290893555
    7. '(c' → logprob: -8.029765129089355
    8. ' [' → logprob: -8.529765129089355
    9. '[c' → logprob: -8.654765129089355
    10. ' c' → logprob: -11.029765129089355

Token 263: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -8.292095299111679e-05
    2. ',' → logprob: -9.625082969665527
    3. ')' → logprob: -11.750082969665527
    4. ' ),' → logprob: -12.000082969665527
    5. 'd' → logprob: -13.500082969665527
    6. '],' → logprob: -14.750082969665527
    7. '   ' → logprob: -15.250082969665527
    8. ',),' → logprob: -15.250082969665527
    9. '},' → logprob: -16.00008201599121
    10. ' ' → logprob: -16.37508201599121

Token 264: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004078639671206474
    2. ' d' → logprob: -5.5040788650512695
    3. '	d' → logprob: -16.379077911376953
    4. '   ' → logprob: -16.504077911376953
    5. ')d' → logprob: -17.254077911376953
    6. ' ' → logprob: -18.879077911376953
    7. '    ' → logprob: -19.504077911376953
    8. ')' → logprob: -19.754077911376953
    9. '  ' → logprob: -19.754077911376953
    10. '[d' → logprob: -20.379077911376953

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008679928258061409
    2. ')
' → logprob: -4.7586798667907715
    3. '   ' → logprob: -9.75868034362793
    4. ')
' → logprob: -12.50868034362793
    5. ' )' → logprob: -12.88368034362793
    6. '  ' → logprob: -14.88368034362793
    7. ' ' → logprob: -15.50868034362793
    8. '),' → logprob: -15.75868034362793
    9. ' )
' → logprob: -15.88368034362793
    10. ')

' → logprob: -15.88368034362793

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44118061661720276
    2. 'yield' → logprob: -1.0661805868148804
    3. ' yield' → logprob: -4.56618070602417
    4. '
' → logprob: -6.56618070602417
    5. '	yield' → logprob: -7.56618070602417
    6. '    
' → logprob: -10.066180229187012
    7. ')
' → logprob: -11.691180229187012
    8. 'Yield' → logprob: -12.066180229187012
    9. '```' → logprob: -12.441180229187012
    10. ')' → logprob: -13.191180229187012

Token 267: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.0648842379450798
    2. ' yield' → logprob: -2.8148841857910156
    3. '
' → logprob: -7.064884185791016
    4. 'f' → logprob: -7.189884185791016
    5. ',' → logprob: -7.439884185791016
    6. '	yield' → logprob: -8.314884185791016
    7. '",' → logprob: -9.064884185791016
    8. '   ' → logprob: -9.189884185791016
    9. ' f' → logprob: -9.439884185791016
    10. ' ,' → logprob: -10.814884185791016

Token 268: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.251990407705307
    2. ' f' → logprob: -1.5019904375076294
    3. 'a' → logprob: -10.37699031829834
    4. ' a' → logprob: -11.00199031829834
    5. ' ' → logprob: -11.62699031829834
    6. '   ' → logprob: -13.12699031829834
    7. '(f' → logprob: -13.37699031829834
    8. ' (' → logprob: -14.37699031829834
    9. '  ' → logprob: -14.87699031829834
    10. '    ' → logprob: -16.376991271972656

Token 269: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1604124903678894
    2. ' f' → logprob: -1.9104125499725342
    3. '"{' → logprob: -8.785412788391113
    4. '{' → logprob: -11.160412788391113
    5. '(f' → logprob: -12.160412788391113
    6. 'a' → logprob: -12.160412788391113
    7. ' ' → logprob: -12.410412788391113
    8. '"' → logprob: -13.410412788391113
    9. '   ' → logprob: -13.535412788391113
    10. '
' → logprob: -13.535412788391113

Token 270: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.696889623621246e-06
    2. ' a' → logprob: -12.87500286102295
    3. '{' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '
' → logprob: -18.875001907348633
    6. '}' → logprob: -19.125001907348633
    7. ' ' → logprob: -19.250001907348633
    8. '	a' → logprob: -19.625001907348633
    9. '"a' → logprob: -20.000001907348633
    10. '  ' → logprob: -20.500001907348633

Token 271: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -3.893480243277736e-05
    2. ' {' → logprob: -11.125039100646973
    3. ' }' → logprob: -11.375039100646973
    4. '[' → logprob: -12.250039100646973
    5. ' ' → logprob: -12.750039100646973
    6. '"' → logprob: -13.250039100646973
    7. '{' → logprob: -13.250039100646973
    8. 'f' → logprob: -14.125039100646973
    9. ' f' → logprob: -15.250039100646973
    10. '}{' → logprob: -16.125038146972656

Token 272: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0003110327525064349
    2. '{' → logprob: -8.750310897827148
    3. ' f' → logprob: -8.875310897827148
    4. ' ' → logprob: -12.000310897827148
    5. '}' → logprob: -12.750310897827148
    6. '"' → logprob: -13.500310897827148
    7. 'f' → logprob: -14.250310897827148
    8. ' ' → logprob: -14.750310897827148
    9. ' `' → logprob: -14.875310897827148
    10. ' "' → logprob: -15.000310897827148

Token 273: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.339278580620885e-06
    2. ' op' → logprob: -13.000001907348633
    3. 'opt' → logprob: -20.000001907348633
    4. '	op' → logprob: -20.000001907348633
    5. '_op' → logprob: -21.125001907348633
    6. '(op' → logprob: -21.500001907348633
    7. '   ' → logprob: -21.750001907348633
    8. 'opf' → logprob: -21.875001907348633
    9. '[' → logprob: -22.125001907348633
    10. ''op' → logprob: -22.250001907348633

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015288250870071352
    2. '[' → logprob: -8.875152587890625
    3. '3' → logprob: -11.500152587890625
    4. '```' → logprob: -14.125152587890625
    5. ' ' → logprob: -14.375152587890625
    6. '2' → logprob: -14.750152587890625
    7. '
' → logprob: -15.375152587890625
    8. '``' → logprob: -15.500152587890625
    9. '(' → logprob: -15.625152587890625
    10. 'op' → logprob: -15.750152587890625

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.75
    3. '0' → logprob: -15.875
    4. '   ' → logprob: -16.875
    5. '(' → logprob: -17.75
    6. '1' → logprob: -17.875
    7. '_' → logprob: -18.375
    8. 'op' → logprob: -18.875
    9. ' ' → logprob: -18.875
    10. '```' → logprob: -19.0

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0336565300822258
    2. '[' → logprob: -3.408656597137451
    3. ' ' → logprob: -12.033656120300293
    4. '(' → logprob: -12.783656120300293
    5. '```' → logprob: -15.033656120300293
    6. ' [' → logprob: -15.158656120300293
    7. '{' → logprob: -15.158656120300293
    8. '1' → logprob: -15.658656120300293
    9. ''' → logprob: -15.971156120300293
    10. '   ' → logprob: -16.03365707397461

Token 277: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -7.624555291840807e-05
    2. ' }' → logprob: -9.500076293945312
    3. '`}' → logprob: -14.875076293945312
    4. '}}' → logprob: -15.250076293945312
    5. ''}' → logprob: -15.250076293945312
    6. '}{' → logprob: -15.625076293945312
    7. '"}' → logprob: -16.375076293945312
    8. '```' → logprob: -16.500076293945312
    9. '{' → logprob: -17.000076293945312
    10. '}(' → logprob: -17.625076293945312

Token 278: ' ((' (ID: 3536)
  Prédit: ' (('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.23250535130500793
    2. ' ({' → logprob: -1.7325053215026855
    3. ' (' → logprob: -3.9825053215026855
    4. '(({' → logprob: -4.7325053215026855
    5. '((' → logprob: -5.9825053215026855
    6. ' ' → logprob: -8.107505798339844
    7. '(' → logprob: -8.482505798339844
    8. '({' → logprob: -9.232505798339844
    9. ' {(' → logprob: -11.232505798339844
    10. ' {' → logprob: -11.482505798339844

Token 279: '{' (ID: 90)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -18.0
    3. '{' → logprob: -18.5
    4. ')b' → logprob: -21.375
    5. '	b' → logprob: -23.0
    6. '   ' → logprob: -23.25
    7. '```' → logprob: -23.5
    8. '
' → logprob: -23.5
    9. '(b' → logprob: -23.75
    10. '<b' → logprob: -23.875

Token 280: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -17.25
    3. '   ' → logprob: -22.375
    4. '	b' → logprob: -23.0
    5. ''b' → logprob: -23.125
    6. ' ' → logprob: -24.0
    7. ')b' → logprob: -24.0
    8. '{' → logprob: -24.875
    9. '"' → logprob: -25.25
    10. '
' → logprob: -25.5

Token 281: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00025275684311054647
    2. ' }' → logprob: -8.875252723693848
    3. '[' → logprob: -10.125252723693848
    4. ' op' → logprob: -10.375252723693848
    5. 'op' → logprob: -10.625252723693848
    6. ' {' → logprob: -11.750252723693848
    7. ' ' → logprob: -12.250252723693848
    8. '{' → logprob: -12.875252723693848
    9. ' ' → logprob: -13.875252723693848
    10. '[]}' → logprob: -15.500252723693848

Token 282: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.4438481032848358
    2. ' op' → logprob: -1.5688481330871582
    3. '{' → logprob: -2.693848133087158
    4. 'op' → logprob: -3.193848133087158
    5. '}' → logprob: -3.318848133087158
    6. ' ' → logprob: -5.693848133087158
    7. ' ' → logprob: -6.568848133087158
    8. '[' → logprob: -8.44384765625
    9. ')' → logprob: -9.44384765625
    10. ' }' → logprob: -9.94384765625

Token 283: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.896309739408025e-07
    2. ' op' → logprob: -14.125000953674316
    3. 'ops' → logprob: -17.875
    4. '	op' → logprob: -18.875
    5. ''op' → logprob: -20.375
    6. '(op' → logprob: -21.125
    7. '   ' → logprob: -21.125
    8. ' ' → logprob: -21.125
    9. '  ' → logprob: -21.5
    10. 'ot' → logprob: -21.75

Token 284: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4153549020411447e-05
    2. '[' → logprob: -11.00002384185791
    3. '1' → logprob: -12.62502384185791
    4. ' ' → logprob: -13.75002384185791
    5. '_' → logprob: -14.43752384185791
    6. '
' → logprob: -14.68752384185791
    7. '```' → logprob: -14.93752384185791
    8. '(' → logprob: -15.06252384185791
    9. '   ' → logprob: -15.18752384185791
    10. 'op' → logprob: -15.56252384185791

Token 285: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3425219549390022e-05
    2. '0' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.50001335144043
    4. ' [' → logprob: -16.50001335144043
    5. '(' → logprob: -16.62501335144043
    6. '```' → logprob: -17.25001335144043
    7. '{' → logprob: -17.75001335144043
    8. '  ' → logprob: -17.87501335144043
    9. ' ' → logprob: -18.75001335144043
    10. '1' → logprob: -19.56251335144043

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017484845593571663
    2. '[' → logprob: -6.376748561859131
    3. ' ' → logprob: -10.626748085021973
    4. '1' → logprob: -11.251748085021973
    5. '(' → logprob: -12.939248085021973
    6. '   ' → logprob: -13.689248085021973
    7. '  ' → logprob: -14.126748085021973
    8. '{' → logprob: -14.626748085021973
    9. ' [' → logprob: -14.939248085021973
    10. '
' → logprob: -15.001748085021973

Token 287: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00012701898231171072
    2. '[' → logprob: -9.375126838684082
    3. ']}' → logprob: -10.375126838684082
    4. ' }' → logprob: -11.750126838684082
    5. '`}' → logprob: -13.875126838684082
    6. ']' → logprob: -14.875126838684082
    7. '[]}' → logprob: -15.000126838684082
    8. ')}' → logprob: -15.375126838684082
    9. '}[' → logprob: -15.625126838684082
    10. '}}' → logprob: -15.875126838684082

Token 288: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.34939271211624146
    2. 'c' → logprob: -1.3493926525115967
    3. ' c' → logprob: -3.9743926525115967
    4. ' {' → logprob: -4.099392890930176
    5. '}' → logprob: -10.849392890930176
    6. '(c' → logprob: -10.974392890930176
    7. '{}' → logprob: -11.099392890930176
    8. '	c' → logprob: -11.224392890930176
    9. ' ' → logprob: -11.474392890930176
    10. ' ' → logprob: -11.474392890930176

Token 289: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.869017852295656e-06
    2. ' c' → logprob: -12.000006675720215
    3. ')c' → logprob: -14.750006675720215
    4. '	c' → logprob: -15.750006675720215
    5. '}' → logprob: -16.62500762939453
    6. '   ' → logprob: -16.75000762939453
    7. ' ' → logprob: -18.25000762939453
    8. '{' → logprob: -18.87500762939453
    9. '%c' → logprob: -19.50000762939453
    10. '
' → logprob: -19.50000762939453

Token 290: '})' (ID: 9263)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0556924007833004
    2. '})' → logprob: -3.055692434310913
    3. ')' → logprob: -5.180692195892334
    4. ')}' → logprob: -6.555692195892334
    5. ' }' → logprob: -11.180692672729492
    6. ' })' → logprob: -12.305692672729492
    7. '[' → logprob: -13.055692672729492
    8. '`}' → logprob: -13.055692672729492
    9. '}))' → logprob: -13.180692672729492
    10. '`)' → logprob: -13.430692672729492

Token 291: ' {' (ID: 354)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.46320608258247375
    2. ' {' → logprob: -1.0882060527801514
    3. ')' → logprob: -3.7132060527801514
    4. '}' → logprob: -5.3382062911987305
    5. 'op' → logprob: -6.3382062911987305
    6. '{' → logprob: -6.5882062911987305
    7. ' )' → logprob: -7.2132062911987305
    8. ' ' → logprob: -8.21320629119873
    9. ' }' → logprob: -8.33820629119873
    10. ' ' → logprob: -8.96320629119873

Token 292: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -3.7697225252486533e-06
    2. ' op' → logprob: -12.625003814697266
    3. '0' → logprob: -15.125003814697266
    4. '3' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '	op' → logprob: -17.500003814697266
    7. '1' → logprob: -18.000003814697266
    8. '[' → logprob: -18.250003814697266
    9. '}' → logprob: -18.625003814697266
    10. '  ' → logprob: -18.625003814697266

Token 293: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10139522701501846
    2. '1' → logprob: -2.3513951301574707
    3. '2' → logprob: -7.226395130157471
    4. '[' → logprob: -7.851395130157471
    5. ' ' → logprob: -10.351395606994629
    6. '   ' → logprob: -11.476395606994629
    7. '```' → logprob: -11.476395606994629
    8. '
' → logprob: -12.101395606994629
    9. '(' → logprob: -12.601395606994629
    10. '  ' → logprob: -13.226395606994629

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -14.000001907348633
    3. '1' → logprob: -14.250001907348633
    4. '{' → logprob: -14.750001907348633
    5. '(' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.500001907348633
    7. ' [' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. '  ' → logprob: -18.375001907348633
    10. '2' → logprob: -18.625001907348633

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08009648323059082
    2. '[' → logprob: -2.955096483230591
    3. '1' → logprob: -3.705096483230591
    4. '(' → logprob: -8.955096244812012
    5. ' ' → logprob: -8.955096244812012
    6. '```' → logprob: -11.580096244812012
    7. '   ' → logprob: -11.892596244812012
    8. '-' → logprob: -12.205096244812012
    9. '
' → logprob: -12.392596244812012
    10. ')' → logprob: -12.892596244812012

Token 296: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.9623810658231378e-05
    2. ' }' → logprob: -11.000020027160645
    3. '`}' → logprob: -13.625020027160645
    4. ')}' → logprob: -14.250020027160645
    5. ']}' → logprob: -14.625020027160645
    6. '})' → logprob: -15.125020027160645
    7. '}}' → logprob: -15.750020027160645
    8. '```' → logprob: -16.375019073486328
    9. '},' → logprob: -17.000019073486328
    10. '"}' → logprob: -17.250019073486328

Token 297: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3290403187274933
    2. ' {' → logprob: -1.329040288925171
    3. ' d' → logprob: -4.70404052734375
    4. 'd' → logprob: -5.20404052734375
    5. '}' → logprob: -6.82904052734375
    6. ' ' → logprob: -11.32904052734375
    7. ' ' → logprob: -12.32904052734375
    8. '{}' → logprob: -13.32904052734375
    9. '```' → logprob: -14.57904052734375
    10. '`' → logprob: -15.45404052734375

Token 298: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.620622712536715e-05
    2. ' d' → logprob: -10.000045776367188
    3. '}' → logprob: -14.250045776367188
    4. '	d' → logprob: -16.375045776367188
    5. ')d' → logprob: -16.750045776367188
    6. '   ' → logprob: -18.000045776367188
    7. ' ' → logprob: -18.875045776367188
    8. '
' → logprob: -19.625045776367188
    9. '```' → logprob: -19.875045776367188
    10. '$d' → logprob: -20.250045776367188

Token 299: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -9.865583706414327e-05
    2. ')}' → logprob: -10.12509822845459
    3. ')' → logprob: -11.00009822845459
    4. ' })' → logprob: -11.25009822845459
    5. '}"' → logprob: -12.00009822845459
    6. '}")' → logprob: -12.00009822845459
    7. ')"' → logprob: -12.12509822845459
    8. '}' → logprob: -12.25009822845459
    9. '}))' → logprob: -13.00009822845459
    10. '))' → logprob: -13.50009822845459

Token 300: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0013909504050388932
    2. ',' → logprob: -6.6263909339904785
    3. '"' → logprob: -10.251391410827637
    4. '}",' → logprob: -11.376391410827637
    5. ' ",' → logprob: -11.626391410827637
    6. ',",' → logprob: -12.626391410827637
    7. '",
' → logprob: -13.626391410827637
    8. ')",' → logprob: -13.876391410827637
    9. ' ,' → logprob: -14.251391410827637
    10. '',' → logprob: -14.376391410827637

Token 301: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5759469270706177
    2. ' op' → logprob: -0.8259469270706177
    3. ' ' → logprob: -13.200946807861328
    4. '(op' → logprob: -13.825946807861328
    5. '	op' → logprob: -13.950946807861328
    6. '    ' → logprob: -14.325946807861328
    7. '  ' → logprob: -14.325946807861328
    8. '_op' → logprob: -14.575946807861328
    9. ' ' → logprob: -14.825946807861328
    10. 'x' → logprob: -14.950946807861328

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018041854491457343
    2. '3' → logprob: -9.0001802444458
    3. 'op' → logprob: -10.3751802444458
    4. '[' → logprob: -11.2501802444458
    5. '(' → logprob: -11.5001802444458
    6. '(op' → logprob: -13.3751802444458
    7. '```' → logprob: -14.3751802444458
    8. '_' → logprob: -16.125181198120117
    9. '_op' → logprob: -16.500181198120117
    10. ' op' → logprob: -16.500181198120117

Token 303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.625
    3. ' [' → logprob: -17.375
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -18.875
    6. '_' → logprob: -19.0
    7. '	' → logprob: -19.25
    8. '_[' → logprob: -20.0
    9. '(' → logprob: -20.5
    10. ')[' → logprob: -20.625

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017031522002071142
    2. '[' → logprob: -6.376703262329102
    3. ' ' → logprob: -14.751703262329102
    4. '(' → logprob: -15.751703262329102
    5. '0' → logprob: -16.3767032623291
    6. '```' → logprob: -16.5017032623291
    7. ' [' → logprob: -17.0017032623291
    8. '][' → logprob: -17.1267032623291
    9. '   ' → logprob: -17.6267032623291
    10. '-' → logprob: -18.0642032623291

Token 305: '](' (ID: 20614)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014743000268936157
    2. '(x' → logprob: -4.264742851257324
    3. '(' → logprob: -7.639742851257324
    4. ' (' → logprob: -9.639742851257324
    5. '[' → logprob: -11.139742851257324
    6. '](' → logprob: -11.889742851257324
    7. '(op' → logprob: -12.639742851257324
    8. ']' → logprob: -12.889742851257324
    9. '```' → logprob: -13.389742851257324
    10. ')(' → logprob: -13.764742851257324

Token 306: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.125
    3. '
' → logprob: -21.5
    4. '	a' → logprob: -21.5
    5. '```' → logprob: -22.0
    6. ')a' → logprob: -22.125
    7. '<|end|>' → logprob: -22.625
    8. '(a' → logprob: -23.0
    9. '   ' → logprob: -23.0
    10. ')' → logprob: -23.375

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5025481581687927
    2. ',val' → logprob: -1.0025482177734375
    3. 'val' → logprob: -4.5025482177734375
    4. ',y' → logprob: -4.6275482177734375
    5. 'op' → logprob: -6.1275482177734375
    6. 'y' → logprob: -6.6275482177734375
    7. '[' → logprob: -6.7525482177734375
    8. ',b' → logprob: -6.7525482177734375
    9. '[val' → logprob: -7.6275482177734375
    10. 'b' → logprob: -7.8775482177734375

Token 308: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009114635176956654
    2. ' val' → logprob: -7.000911235809326
    3. '(val' → logprob: -19.250911712646484
    4. '	val' → logprob: -19.250911712646484
    5. '_val' → logprob: -20.000911712646484
    6. '[val' → logprob: -20.500911712646484
    7. ',val' → logprob: -22.250911712646484
    8. '.val' → logprob: -22.500911712646484
    9. 'Val' → logprob: -22.625911712646484
    10. '-val' → logprob: -23.000911712646484

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010115911572938785
    2. '(' → logprob: -9.375101089477539
    3. '[' → logprob: -11.125101089477539
    4. '1' → logprob: -14.625101089477539
    5. ' ' → logprob: -15.125101089477539
    6. ' (' → logprob: -15.250101089477539
    7. ')' → logprob: -15.750101089477539
    8. '```' → logprob: -16.50010108947754
    9. '_' → logprob: -16.62510108947754
    10. '₂' → logprob: -16.75010108947754

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023512568441219628
    2. ')
' → logprob: -8.375235557556152
    3. '<|end|>' → logprob: -13.125235557556152
    4. ' )' → logprob: -13.750235557556152
    5. '   ' → logprob: -14.375235557556152
    6. '}' → logprob: -15.375235557556152
    7. ')}' → logprob: -15.875235557556152
    8. ')

' → logprob: -16.125234603881836
    9. ')
' → logprob: -16.625234603881836
    10. '))' → logprob: -16.625234603881836

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03826513513922691
    2. '#' → logprob: -3.2882652282714844
    3. '```' → logprob: -8.413265228271484
    4. ' #' → logprob: -14.413265228271484
    5. '  ' → logprob: -15.163265228271484
    6. '    
' → logprob: -15.288265228271484
    7. ' ' → logprob: -15.413265228271484
    8. '``' → logprob: -15.663265228271484
    9. '
' → logprob: -15.788265228271484
    10. '       ' → logprob: -17.288265228271484

Token 312: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07890410721302032
    2. '#' (adapté à ' #') → logprob: -2.578904151916504
    3. ' #' → logprob: -11.328904151916504
    4. ' ' → logprob: -13.953904151916504
    5. '  ' → logprob: -14.078904151916504
    6. '```' → logprob: -14.328904151916504
    7. '    
' → logprob: -16.828903198242188
    8. '    ' → logprob: -17.078903198242188
    9. 'from' → logprob: -17.828903198242188
    10. '       ' → logprob: -17.953903198242188

Token 313: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5849071741104126
    2. 'a' → logprob: -1.4599071741104126
    3. '(a' → logprob: -1.7099071741104126
    4. 'f' → logprob: -4.959907054901123
    5. ' (' → logprob: -5.084907054901123
    6. ' #' → logprob: -5.334907054901123
    7. ' a' → logprob: -5.459907054901123
    8. '   ' → logprob: -5.709907054901123
    9. '#a' → logprob: -6.959907054901123
    10. ' ' → logprob: -7.084907054901123

Token 314: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.13805422186851501
    2. 'op' → logprob: -2.138054132461548
    3. ' ' → logprob: -5.138054370880127
    4. ' ' → logprob: -6.263054370880127
    5. ' f' → logprob: -6.888054370880127
    6. 'f' → logprob: -7.513054370880127
    7. '}' → logprob: -7.763054370880127
    8. ')' → logprob: -8.013053894042969
    9. '[' → logprob: -8.388053894042969
    10. '  ' → logprob: -9.138053894042969

Token 315: ' (' (ID: 350)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.029467418789863586
    2. '{' → logprob: -3.9044673442840576
    3. ' ({' → logprob: -5.404467582702637
    4. '(' → logprob: -5.779467582702637
    5. ' {' → logprob: -7.404467582702637
    6. '(op' → logprob: -8.404467582702637
    7. 'op' → logprob: -8.654467582702637
    8. ' ' → logprob: -9.279467582702637
    9. ' (' → logprob: -9.779467582702637
    10. ' op' → logprob: -10.029467582702637

Token 316: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048606667667627335
    2. '{' → logprob: -3.0486066341400146
    3. ' b' → logprob: -11.048606872558594
    4. '(b' → logprob: -13.048606872558594
    5. '{}' → logprob: -14.673606872558594
    6. '_b' → logprob: -14.923606872558594
    7. ' {' → logprob: -15.048606872558594
    8. '	b' → logprob: -16.673606872558594
    9. '({' → logprob: -17.423606872558594
    10. 'f' → logprob: -17.923606872558594

Token 317: ' op' (ID: 991)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.4339422583580017
    2. '[' → logprob: -1.1839423179626465
    3. ' op' → logprob: -3.8089423179626465
    4. '{' → logprob: -4.4339423179626465
    5. 'op' → logprob: -5.9339423179626465
    6. ' ' → logprob: -6.0589423179626465
    7. ' ' → logprob: -6.0589423179626465
    8. ')' → logprob: -6.1839423179626465
    9. ' [' → logprob: -6.3089423179626465
    10. ' f' → logprob: -8.433941841125488

Token 318: ' (' (ID: 350)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.32325097918510437
    2. '(' → logprob: -1.6982510089874268
    3. ' (' → logprob: -2.6982510089874268
    4. ' ({' → logprob: -4.698250770568848
    5. '(c' → logprob: -4.823250770568848
    6. '{' → logprob: -5.198250770568848
    7. 'c' → logprob: -6.198250770568848
    8. '(f' → logprob: -7.448250770568848
    9. ' ' → logprob: -8.198250770568848
    10. ' {' → logprob: -9.323250770568848

Token 319: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.676292231422849e-05
    2. ' c' → logprob: -11.000017166137695
    3. '{' → logprob: -16.875017166137695
    4. ')c' → logprob: -19.125017166137695
    5. '(c' → logprob: -19.625017166137695
    6. '	c' → logprob: -19.625017166137695
    7. '_c' → logprob: -21.125017166137695
    8. 'с' → logprob: -21.250017166137695
    9. ' ' → logprob: -21.250017166137695
    10. '   ' → logprob: -22.000017166137695

Token 320: ' op' (ID: 991)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006073490716516972
    2. 'op' → logprob: -5.881073474884033
    3. '{' → logprob: -6.506073474884033
    4. ' ' → logprob: -7.381073474884033
    5. ' op' → logprob: -7.881073474884033
    6. 'c' → logprob: -9.006073951721191
    7. ')' → logprob: -9.006073951721191
    8. '1' → logprob: -9.256073951721191
    9. '(' → logprob: -9.381073951721191
    10. ' {' → logprob: -9.631073951721191

Token 321: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.056772198528051376
    2. 'c' → logprob: -2.931772232055664
    3. ' d' → logprob: -6.306772232055664
    4. ' ' → logprob: -11.056772232055664
    5. '   ' → logprob: -11.181772232055664
    6. ' c' → logprob: -11.681772232055664
    7. '[' → logprob: -12.056772232055664
    8. '{' → logprob: -12.056772232055664
    9. ')' → logprob: -12.681772232055664
    10. '  ' → logprob: -12.681772232055664

Token 322: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2529103457927704
    2. ')' → logprob: -1.5029103755950928
    3. '))
' → logprob: -8.002910614013672
    4. ')`
' → logprob: -8.377910614013672
    5. ')"
' → logprob: -8.627910614013672
    6. ')")
' → logprob: -9.002910614013672
    7. ')
' → logprob: -10.502910614013672
    8. '))' → logprob: -10.752910614013672
    9. ')`' → logprob: -10.752910614013672
    10. ')"' → logprob: -11.502910614013672

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010143466293811798
    2. 'yield' → logprob: -5.260143280029297
    3. 'val' → logprob: -5.385143280029297
    4. '
' → logprob: -8.260143280029297
    5. ' val' → logprob: -10.635143280029297
    6. ' yield' → logprob: -11.510143280029297
    7. '    
' → logprob: -12.385143280029297
    8. '```' → logprob: -12.385143280029297
    9. '  ' → logprob: -12.510143280029297
    10. '	yield' → logprob: -12.635143280029297

Token 324: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.08336444199085236
    2. ' val' → logprob: -2.583364486694336
    3. '   ' → logprob: -5.833364486694336
    4. 'yield' → logprob: -6.583364486694336
    5. ' yield' → logprob: -8.833364486694336
    6. 'value' → logprob: -11.958364486694336
    7. ' value' → logprob: -14.958364486694336
    8. '	val' → logprob: -15.583364486694336
    9. '  ' → logprob: -16.083364486694336
    10. '
' → logprob: -16.083364486694336

Token 325: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011165725067257881
    2. '2' → logprob: -4.761165618896484
    3. '=' → logprob: -6.136165618896484
    4. '_' → logprob: -8.511165618896484
    5. ' =' → logprob: -9.261165618896484
    6. '3' → logprob: -9.761165618896484
    7. ' ' → logprob: -11.886165618896484
    8. '   ' → logprob: -12.136165618896484
    9. '[' → logprob: -12.261165618896484
    10. '=_' → logprob: -12.386165618896484

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. '   ' → logprob: -15.688261985778809
    4. ' ' → logprob: -17.438261032104492
    5. '=}' → logprob: -18.813261032104492
    6. '=
' → logprob: -19.188261032104492
    7. '  ' → logprob: -19.438261032104492
    8. '	' → logprob: -19.563261032104492
    9. '```' → logprob: -19.563261032104492
    10. ' ' → logprob: -19.688261032104492

Token 327: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0024768433067947626
    2. ' op' → logprob: -6.002476692199707
    3. 'ops' → logprob: -14.752476692199707
    4. '	op' → logprob: -15.252476692199707
    5. 'val' → logprob: -15.877476692199707
    6. ' ' → logprob: -16.377477645874023
    7. '   ' → logprob: -16.377477645874023
    8. '_op' → logprob: -16.502477645874023
    9. '  ' → logprob: -16.752477645874023
    10. '(op' → logprob: -17.377477645874023

Token 328: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00931506510823965
    2. '1' → logprob: -5.009315013885498
    3. '3' → logprob: -6.009315013885498
    4. '[' → logprob: -8.884315490722656
    5. '```' → logprob: -14.009315490722656
    6. ' ' → logprob: -15.134315490722656
    7. '
' → logprob: -15.509315490722656
    8. '(' → logprob: -15.509315490722656
    9. '_' → logprob: -16.009315490722656
    10. '   ' → logprob: -16.134315490722656

Token 329: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.750001907348633
    3. '(' → logprob: -14.750001907348633
    4. '.' → logprob: -15.625001907348633
    5. '_' → logprob: -15.625001907348633
    6. '```' → logprob: -16.125001907348633
    7. ',' → logprob: -16.875001907348633
    8. ' (' → logprob: -17.250001907348633
    9. '<|end|>' → logprob: -17.250001907348633
    10. ' [' → logprob: -17.250001907348633

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009156247251667082
    2. '[' → logprob: -7.00091552734375
    3. '(' → logprob: -13.25091552734375
    4. ' ' → logprob: -13.37591552734375
    5. '```' → logprob: -15.75091552734375
    6. '   ' → logprob: -15.93841552734375
    7. '-' → logprob: -16.12591552734375
    8. ']' → logprob: -16.62591552734375
    9. '
' → logprob: -17.12591552734375
    10. '' → logprob: -17.50091552734375

Token 331: '](' (ID: 20614)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.03301743417978287
    2. '(' → logprob: -4.033017635345459
    3. '(b' → logprob: -4.283017635345459
    4. '](' → logprob: -7.533017635345459
    5. '1' → logprob: -8.6580171585083
    6. ']' → logprob: -9.4080171585083
    7. ' (' → logprob: -9.6580171585083
    8. '(c' → logprob: -9.7830171585083
    9. '(val' → logprob: -10.9080171585083
    10. ' ' → logprob: -12.4080171585083

Token 332: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013971416046842933
    2. 'op' → logprob: -6.626397132873535
    3. ' c' → logprob: -10.251397132873535
    4. '   ' → logprob: -11.376397132873535
    5. ' op' → logprob: -12.001397132873535
    6. 'val' → logprob: -12.126397132873535
    7. '(c' → logprob: -12.626397132873535
    8. '(op' → logprob: -12.626397132873535
    9. '	c' → logprob: -13.001397132873535
    10. ')c' → logprob: -13.751397132873535

Token 333: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3515283465385437
    2. '[' → logprob: -1.2265284061431885
    3. '1' → logprob: -5.976528167724609
    4. ',c' → logprob: -8.97652816772461
    5. '(' → logprob: -9.10152816772461
    6. ')' → logprob: -9.60152816772461
    7. ' ,' → logprob: -9.60152816772461
    8. 'op' → logprob: -10.35152816772461
    9. ',y' → logprob: -10.35152816772461
    10. ',val' → logprob: -10.35152816772461

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002313643693924
    2. ')
' → logprob: -2.350231409072876
    3. ')
' → logprob: -11.100231170654297
    4. '))' → logprob: -12.850231170654297
    5. ' )' → logprob: -13.100231170654297
    6. ' )
' → logprob: -13.225231170654297
    7. '   ' → logprob: -13.350231170654297
    8. ' ' → logprob: -14.475231170654297
    9. ')`
' → logprob: -15.100231170654297
    10. '))
' → logprob: -15.350231170654297

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008490587584674358
    2. '
' → logprob: -5.508490562438965
    3. 'yield' → logprob: -6.133490562438965
    4. 'val' → logprob: -6.258490562438965
    5. '    
' → logprob: -8.758490562438965
    6. '```' → logprob: -9.758490562438965
    7. ')' → logprob: -10.758490562438965
    8. '	yield' → logprob: -10.883490562438965
    9. '  
' → logprob: -11.508490562438965
    10. '  ' → logprob: -11.633490562438965

Token 336: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3239470422267914
    2. 'yield' → logprob: -1.4489470720291138
    3. 'val' (adapté à ' val') → logprob: -3.198946952819824
    4. ' yield' → logprob: -7.448946952819824
    5. '
' → logprob: -8.573946952819824
    6. '	yield' → logprob: -9.198946952819824
    7. ' val' → logprob: -9.448946952819824
    8. '    
' → logprob: -9.948946952819824
    9. '   ' → logprob: -10.198946952819824
    10. 'y' → logprob: -11.573946952819824

Token 337: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.282218873500824
    2. '4' → logprob: -1.4072189331054688
    3. '=' → logprob: -7.657218933105469
    4. '3' → logprob: -8.157218933105469
    5. ' =' → logprob: -8.782218933105469
    6. '_' → logprob: -8.907218933105469
    7. '1' → logprob: -12.407218933105469
    8. ' ' → logprob: -13.032218933105469
    9. '5' → logprob: -13.407218933105469
    10. '   ' → logprob: -13.532218933105469

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '   ' → logprob: -16.78522491455078
    4. ' ' → logprob: -18.28522491455078
    5. '＝' → logprob: -19.16022491455078
    6. '```' → logprob: -19.16022491455078
    7. '`' → logprob: -19.28522491455078
    8. '=`' → logprob: -19.66022491455078
    9. '=
' → logprob: -19.91022491455078
    10. 'a' → logprob: -20.16022491455078

Token 339: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.06198740750551224
    2. ' op' → logprob: -2.8119874000549316
    3. ' ' → logprob: -11.68698787689209
    4. '   ' → logprob: -12.18698787689209
    5. '  ' → logprob: -12.56198787689209
    6. '	op' → logprob: -13.68698787689209
    7. 'ops' → logprob: -14.43698787689209
    8. '(op' → logprob: -15.18698787689209
    9. '    ' → logprob: -15.31198787689209
    10. '_op' → logprob: -15.56198787689209

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020783171930816025
    2. '[' → logprob: -8.500207901000977
    3. '1' → logprob: -12.625207901000977
    4. ' ' → logprob: -14.875207901000977
    5. '```' → logprob: -15.625207901000977
    6. '_' → logprob: -16.125207901000977
    7. '3' → logprob: -16.375207901000977
    8. '   ' → logprob: -16.750207901000977
    9. '(' → logprob: -16.875207901000977
    10. '
' → logprob: -17.375207901000977

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.25000286102295
    3. '1' → logprob: -14.75000286102295
    4. '	' → logprob: -14.75000286102295
    5. '(' → logprob: -15.62500286102295
    6. '```' → logprob: -16.250003814697266
    7. '=' → logprob: -16.875003814697266
    8. '_' → logprob: -16.875003814697266
    9. ' [' → logprob: -16.875003814697266
    10. '...' → logprob: -17.000003814697266

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815474033355713
    2. '[' → logprob: -4.018154621124268
    3. '(' → logprob: -12.518155097961426
    4. ' ' → logprob: -14.268155097961426
    5. '```' → logprob: -16.14315414428711
    6. '   ' → logprob: -16.39315414428711
    7. '[](' → logprob: -16.64315414428711
    8. ']' → logprob: -16.89315414428711
    9. '۱' → logprob: -17.51815414428711
    10. '0' → logprob: -17.64315414428711

Token 343: '](' (ID: 20614)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.04245172068476677
    2. '](' → logprob: -3.2924516201019287
    3. '[' → logprob: -5.542451858520508
    4. '(y' → logprob: -8.667451858520508
    5. ' (' → logprob: -9.292451858520508
    6. ')(' → logprob: -9.542451858520508
    7. ']' → logprob: -9.792451858520508
    8. '(' → logprob: -10.292451858520508
    9. '[b' → logprob: -10.792451858520508
    10. '[](' → logprob: -11.542451858520508

Token 344: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.3458322731312364e-06
    2. ' b' → logprob: -11.875007629394531
    3. '(b' → logprob: -15.625007629394531
    4. '   ' → logprob: -16.12500762939453
    5. 'y' → logprob: -16.75000762939453
    6. ')b' → logprob: -16.87500762939453
    7. '[b' → logprob: -17.25000762939453
    8. '[' → logprob: -17.50000762939453
    9. '	b' → logprob: -17.50000762939453
    10. ' ' → logprob: -17.62500762939453

Token 345: ',val' (ID: 126054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2667909562587738
    2. ',val' → logprob: -2.1417908668518066
    3. '[' → logprob: -2.2667908668518066
    4. ',y' → logprob: -4.641790866851807
    5. ')' → logprob: -6.641790866851807
    6. ' ,' → logprob: -6.891790866851807
    7. '1' → logprob: -7.516790866851807
    8. ',x' → logprob: -8.766791343688965
    9. ',[' → logprob: -9.141791343688965
    10. '(' → logprob: -9.516791343688965

Token 346: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006987344822846353
    2. '[' → logprob: -8.125699043273926
    3. '1' → logprob: -8.250699043273926
    4. '(' → logprob: -8.875699043273926
    5. '4' → logprob: -14.125699043273926
    6. '
' → logprob: -15.625699043273926
    7. '   ' → logprob: -15.750699043273926
    8. ')' → logprob: -15.750699043273926
    9. ' (' → logprob: -16.25069808959961
    10. ' ' → logprob: -16.62569808959961

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014169269241392612
    2. ')
' → logprob: -4.264169216156006
    3. ')
' → logprob: -12.639169692993164
    4. '   ' → logprob: -14.264169692993164
    5. ' )' → logprob: -14.389169692993164
    6. '),' → logprob: -14.514169692993164
    7. ')

' → logprob: -14.889169692993164
    8. ')y' → logprob: -15.639169692993164
    9. ')`' → logprob: -16.514169692993164
    10. ' )
' → logprob: -16.764169692993164

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008689268492162228
    2. 'yield' → logprob: -4.7586894035339355
    3. ' yield' → logprob: -10.633688926696777
    4. '
' → logprob: -10.758688926696777
    5. '```' → logprob: -10.883688926696777
    6. '	yield' → logprob: -11.883688926696777
    7. '    
' → logprob: -13.258688926696777
    8. 'Yield' → logprob: -14.383688926696777
    9. '``' → logprob: -15.258688926696777
    10. ')' → logprob: -15.508688926696777

Token 349: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.12790067493915558
    2. '   ' → logprob: -2.1279006004333496
    3. ' yield' → logprob: -7.00290060043335
    4. '	yield' → logprob: -10.252901077270508
    5. '```' → logprob: -10.752901077270508
    6. 'Yield' → logprob: -12.752901077270508
    7. 'y' → logprob: -13.502901077270508
    8. '
' → logprob: -14.502901077270508
    9. '``' → logprob: -15.127901077270508
    10. '    
' → logprob: -15.377901077270508

Token 350: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.048587486147880554
    2. ' f' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.923587799072266
    4. ' ' → logprob: -16.923587799072266
    5. '(f' → logprob: -17.298587799072266
    6. '	f' → logprob: -17.673587799072266
    7. '  ' → logprob: -20.048587799072266
    8. 'a' → logprob: -21.298587799072266
    9. ' (' → logprob: -21.548587799072266
    10. '    ' → logprob: -21.798587799072266

Token 351: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011201671324670315
    2. ' f' → logprob: -4.511201858520508
    3. '{' → logprob: -9.261201858520508
    4. '"{' → logprob: -9.761201858520508
    5. '(f' → logprob: -14.136201858520508
    6. '   ' → logprob: -15.011201858520508
    7. ' ' → logprob: -15.761201858520508
    8. '	f' → logprob: -17.261201858520508
    9. '  ' → logprob: -18.261201858520508
    10. '"' → logprob: -18.386201858520508

Token 352: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07695562392473221
    2. 'f' → logprob: -3.076955556869507
    3. '{' → logprob: -3.576955556869507
    4. '"{' → logprob: -12.576955795288086
    5. ' f' → logprob: -12.701955795288086
    6. ' a' → logprob: -12.951955795288086
    7. '{}' → logprob: -16.951955795288086
    8. '   ' → logprob: -17.326955795288086
    9. '"a' → logprob: -18.076955795288086
    10. '#a' → logprob: -18.201955795288086

Token 353: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -3.4121114822482923e-06
    2. ' }' → logprob: -12.625003814697266
    3. 'f' → logprob: -18.375003814697266
    4. ' ' → logprob: -18.375003814697266
    5. '"' → logprob: -18.500003814697266
    6. '[' → logprob: -18.500003814697266
    7. '}{' → logprob: -18.875003814697266
    8. '}}' → logprob: -19.750003814697266
    9. '```' → logprob: -20.250003814697266
    10. '`' → logprob: -20.500003814697266

Token 354: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.11576882004737854
    2. ' f' → logprob: -2.2407689094543457
    3. '}' → logprob: -6.615768909454346
    4. '"' → logprob: -7.615768909454346
    5. '{' → logprob: -7.615768909454346
    6. 'f' → logprob: -8.115768432617188
    7. ' ' → logprob: -8.240768432617188
    8. ' ' → logprob: -10.865768432617188
    9. ''' → logprob: -11.115768432617188
    10. '`' → logprob: -11.865768432617188

Token 355: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.5048530030981055e-06
    2. ' op' → logprob: -13.500001907348633
    3. '_op' → logprob: -17.125001907348633
    4. '(op' → logprob: -19.875001907348633
    5. 'opt' → logprob: -20.000001907348633
    6. '	op' → logprob: -20.125001907348633
    7. ''op' → logprob: -20.875001907348633
    8. '.op' → logprob: -22.000001907348633
    9. 'opf' → logprob: -22.000001907348633
    10. 'f' → logprob: -22.500001907348633

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.375012397766113
    3. ' ' → logprob: -15.375012397766113
    4. '```' → logprob: -15.625012397766113
    5. 'op' → logprob: -16.125011444091797
    6. '   ' → logprob: -17.750011444091797
    7. '
' → logprob: -17.875011444091797
    8. '  ' → logprob: -18.000011444091797
    9. '`' → logprob: -18.625011444091797
    10. '_' → logprob: -19.000011444091797

Token 357: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '0' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.125
    5. '    ' → logprob: -17.375
    6. '(' → logprob: -17.625
    7. '  ' → logprob: -18.25
    8. '```' → logprob: -18.875
    9. '_' → logprob: -19.375
    10. ' ' → logprob: -19.375

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197575107216835
    2. '[' → logprob: -2.8119757175445557
    3. ' ' → logprob: -12.686975479125977
    4. '(' → logprob: -13.436975479125977
    5. ''' → logprob: -13.561975479125977
    6. '{' → logprob: -14.186975479125977
    7. ''[' → logprob: -14.436975479125977
    8. '  ' → logprob: -15.686975479125977
    9. '   ' → logprob: -15.811975479125977
    10. '```' → logprob: -16.311975479125977

Token 359: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.8670179997570813e-05
    2. ' }' → logprob: -11.000019073486328
    3. '[' → logprob: -14.500019073486328
    4. '}}' → logprob: -14.875019073486328
    5. '`}' → logprob: -15.125019073486328
    6. ']}' → logprob: -15.625019073486328
    7. '()}' → logprob: -15.625019073486328
    8. '"}' → logprob: -16.500019073486328
    9. ''}' → logprob: -16.625019073486328
    10. '[]}' → logprob: -16.875019073486328

Token 360: ' ({' (ID: 16472)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09996937960386276
    2. ' ({' → logprob: -3.4749693870544434
    3. '(b' → logprob: -3.5999693870544434
    4. '(' → logprob: -3.5999693870544434
    5. '({' → logprob: -5.224969387054443
    6. '}' → logprob: -6.099969387054443
    7. '(f' → logprob: -6.599969387054443
    8. '"' → logprob: -7.974969387054443
    9. ' ' → logprob: -10.599968910217285
    10. '((' → logprob: -10.599968910217285

Token 361: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -15.75
    3. '{' → logprob: -20.875
    4. '   ' → logprob: -21.25
    5. '	b' → logprob: -21.625
    6. ')b' → logprob: -22.0
    7. 'f' → logprob: -22.5
    8. ''b' → logprob: -23.375
    9. 'б' → logprob: -23.625
    10. '"' → logprob: -23.625

Token 362: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.005272653419524431
    2. '[' → logprob: -5.25527286529541
    3. ' ' → logprob: -11.00527286529541
    4. '"' → logprob: -12.38027286529541
    5. ' }' → logprob: -12.38027286529541
    6. '`' → logprob: -12.63027286529541
    7. 'op' → logprob: -13.00527286529541
    8. ' ' → logprob: -13.00527286529541
    9. '{' → logprob: -13.50527286529541
    10. ')' → logprob: -13.63027286529541

Token 363: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.16226856410503387
    2. '{' → logprob: -2.03726863861084
    3. '}' → logprob: -4.41226863861084
    4. '[' → logprob: -5.28726863861084
    5. ' op' → logprob: -6.53726863861084
    6. 'op' → logprob: -8.03726863861084
    7. ' ' → logprob: -8.28726863861084
    8. ' ' → logprob: -8.91226863861084
    9. ' f' → logprob: -10.91226863861084
    10. ' [' → logprob: -11.53726863861084

Token 364: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.8624639324116288e-06
    2. ' op' → logprob: -13.375001907348633
    3. '[' → logprob: -16.000001907348633
    4. 'ops' → logprob: -16.750001907348633
    5. ''op' → logprob: -18.250001907348633
    6. '	op' → logprob: -18.250001907348633
    7. 'opt' → logprob: -19.000001907348633
    8. '0' → logprob: -19.875001907348633
    9. '(op' → logprob: -19.875001907348633
    10. 'Op' → logprob: -20.000001907348633

Token 365: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3386150598526001
    2. '2' → logprob: -1.3386150598526
    3. '1' → logprob: -3.7136149406433105
    4. '0' → logprob: -7.4636149406433105
    5. '(' → logprob: -10.963615417480469
    6. '
' → logprob: -11.088615417480469
    7. '```' → logprob: -11.463615417480469
    8. '   ' → logprob: -11.588615417480469
    9. ' ' → logprob: -12.463615417480469
    10. ' [' → logprob: -12.588615417480469

Token 366: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.25
    5. '(' → logprob: -16.75
    6. '```' → logprob: -17.75
    7. '  ' → logprob: -18.375
    8. ' ' → logprob: -19.125
    9. '	' → logprob: -19.625
    10. '
' → logprob: -19.75

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021303594112396
    2. '[' → logprob: -2.350213050842285
    3. ' ' → logprob: -13.350213050842285
    4. '1' → logprob: -13.725213050842285
    5. '(' → logprob: -14.100213050842285
    6. '   ' → logprob: -14.350213050842285
    7. '{' → logprob: -14.725213050842285
    8. '```' → logprob: -14.975213050842285
    9. ' [' → logprob: -15.100213050842285
    10. '-' → logprob: -15.850213050842285

Token 368: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.10041218996047974
    2. '[' → logprob: -2.350412130355835
    3. ']}' → logprob: -8.975412368774414
    4. '0' → logprob: -10.225412368774414
    5. ' }' → logprob: -10.350412368774414
    6. '}[' → logprob: -12.600412368774414
    7. ']' → logprob: -12.975412368774414
    8. '`}' → logprob: -13.475412368774414
    9. '[]}' → logprob: -13.600412368774414
    10. '```' → logprob: -14.100412368774414

Token 369: ' ({' (ID: 16472)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08918306976556778
    2. 'op' → logprob: -3.2141830921173096
    3. ' op' → logprob: -3.7141830921173096
    4. ' {' → logprob: -4.3391828536987305
    5. 'f' → logprob: -5.9641828536987305
    6. '(op' → logprob: -6.0891828536987305
    7. '}' → logprob: -6.8391828536987305
    8. ' ' → logprob: -7.5891828536987305
    9. ' f' → logprob: -7.7141828536987305
    10. '(' → logprob: -7.9641828536987305

Token 370: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: 0.0
    2. ' c' → logprob: -16.75
    3. '	c' → logprob: -19.625
    4. '   ' → logprob: -20.375
    5. ')c' → logprob: -20.5
    6. '$c' → logprob: -22.25
    7. '  ' → logprob: -24.125
    8. '
' → logprob: -24.25
    9. '     ' → logprob: -24.75
    10. '    ' → logprob: -25.0

Token 371: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5390781760215759
    2. 'op' → logprob: -1.0390782356262207
    3. '[' → logprob: -2.7890782356262207
    4. '3' → logprob: -7.664078235626221
    5. '{' → logprob: -8.164077758789062
    6. ' op' → logprob: -8.414077758789062
    7. ' ' → logprob: -8.664077758789062
    8. '```' → logprob: -9.539077758789062
    9. '   ' → logprob: -9.789077758789062
    10. 'ops' → logprob: -10.414077758789062

Token 372: ' {' (ID: 354)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.04941542074084282
    2. ' op' → logprob: -3.924415349960327
    3. '{' → logprob: -4.299415588378906
    4. ' {' → logprob: -4.924415588378906
    5. '[' → logprob: -5.174415588378906
    6. '}' → logprob: -6.424415588378906
    7. ' ' → logprob: -9.049415588378906
    8. '_op' → logprob: -9.299415588378906
    9. ' ' → logprob: -10.549415588378906
    10. ')' → logprob: -10.674415588378906

Token 373: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.896309739408025e-07
    2. 'ops' → logprob: -14.625000953674316
    3. '3' → logprob: -16.0
    4. ' op' → logprob: -16.0
    5. '
' → logprob: -16.875
    6. '   ' → logprob: -18.125
    7. '	op' → logprob: -18.625
    8. '  ' → logprob: -19.0
    9. '[' → logprob: -19.5
    10. ' ' → logprob: -19.75

Token 374: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.500001907348633
    3. '1' → logprob: -14.875001907348633
    4. '2' → logprob: -15.750001907348633
    5. '
' → logprob: -15.875001907348633
    6. '```' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.937501907348633
    8. '

' → logprob: -18.062501907348633
    9. ' ' → logprob: -18.375001907348633
    10. '0' → logprob: -18.500001907348633

Token 375: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.676292231422849e-05
    2. '0' → logprob: -11.000017166137695
    3. '(' → logprob: -17.625017166137695
    4. '   ' → logprob: -17.625017166137695
    5. '{' → logprob: -18.375017166137695
    6. ' [' → logprob: -19.250017166137695
    7. '```' → logprob: -19.500017166137695
    8. ' ' → logprob: -19.875017166137695
    9. '
' → logprob: -20.000017166137695
    10. '1' → logprob: -20.375017166137695

Token 376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011055010370910168
    2. '[' → logprob: -4.511054992675781
    3. ' ' → logprob: -12.761054992675781
    4. '1' → logprob: -13.011054992675781
    5. '   ' → logprob: -14.386054992675781
    6. '
' → logprob: -14.886054992675781
    7. '(' → logprob: -15.386054992675781
    8. '{' → logprob: -15.511054992675781
    9. '  ' → logprob: -15.761054992675781
    10. ''[' → logprob: -16.19855499267578

Token 377: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00014203863975126296
    2. '[' → logprob: -9.375142097473145
    3. ']}' → logprob: -11.000142097473145
    4. '`}' → logprob: -11.250142097473145
    5. ' }' → logprob: -12.000142097473145
    6. '[]}' → logprob: -12.125142097473145
    7. ')}' → logprob: -12.625142097473145
    8. '"}' → logprob: -13.125142097473145
    9. '}}' → logprob: -13.125142097473145
    10. '}))' → logprob: -13.625142097473145

Token 378: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.01785220578312874
    2. ' {' → logprob: -4.267852306365967
    3. 'd' → logprob: -5.642852306365967
    4. ' d' → logprob: -9.017851829528809
    5. '}' → logprob: -11.267851829528809
    6. '{}' → logprob: -12.517851829528809
    7. ' ' → logprob: -14.392851829528809
    8. '{sub' → logprob: -15.392851829528809
    9. '_d' → logprob: -15.892851829528809
    10. '`' → logprob: -16.142852783203125

Token 379: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001242772996192798
    2. ' d' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.375123977661133
    4. '	d' → logprob: -15.500123977661133
    5. ')d' → logprob: -16.125123977661133
    6. ' ' → logprob: -16.250123977661133
    7. '"d' → logprob: -16.375123977661133
    8. '  ' → logprob: -17.250123977661133
    9. '    ' → logprob: -17.500123977661133
    10. ''d' → logprob: -17.625123977661133

Token 380: '}))' (ID: 144625)
  Prédit: '}))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}))' → logprob: -0.0009307525469921529
    2. '))' → logprob: -7.5009307861328125
    3. '}' → logprob: -8.500930786132812
    4. '})' → logprob: -9.250930786132812
    5. ')))' → logprob: -9.750930786132812
    6. ')' → logprob: -12.000930786132812
    7. ' }))' → logprob: -12.250930786132812
    8. ')}' → logprob: -12.500930786132812
    9. ']))' → logprob: -12.625930786132812
    10. '}))
' → logprob: -14.000930786132812

Token 381: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.002585408743470907
    2. ')",' → logprob: -6.127585411071777
    3. '}",' → logprob: -7.877585411071777
    4. '"' → logprob: -11.127585411071777
    5. ' ",' → logprob: -13.127585411071777
    6. '")' → logprob: -13.502585411071777
    7. ',' → logprob: -13.877585411071777
    8. '),' → logprob: -14.502585411071777
    9. '"),' → logprob: -14.877585411071777
    10. ')' → logprob: -15.752585411071777

Token 382: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.3868716359138489
    2. 'op' → logprob: -1.136871576309204
    3. '(op' → logprob: -15.386871337890625
    4. '_op' → logprob: -15.511871337890625
    5. '	op' → logprob: -15.761871337890625
    6. ' ' → logprob: -17.011871337890625
    7. '.op' → logprob: -18.636871337890625
    8. ' ' → logprob: -18.886871337890625
    9. 'val' → logprob: -19.261871337890625
    10. 'Op' → logprob: -19.386871337890625

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00118677644059062
    2. '[' → logprob: -6.751186847686768
    3. '(' → logprob: -11.37618637084961
    4. 'op' → logprob: -12.25118637084961
    5. '```' → logprob: -16.00118637084961
    6. ' ' → logprob: -16.37618637084961
    7. '_' → logprob: -17.12618637084961
    8. ' (' → logprob: -18.37618637084961
    9. ' [' → logprob: -18.75118637084961
    10. '`' → logprob: -18.87618637084961

Token 384: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.875
    3. '   ' → logprob: -16.5
    4. ' [' → logprob: -17.25
    5. '	' → logprob: -17.875
    6. '(' → logprob: -18.0
    7. ',' → logprob: -18.625
    8. '1' → logprob: -19.125
    9. '\[' → logprob: -19.25
    10. ')[' → logprob: -19.375

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. '[' → logprob: -10.125045776367188
    3. ' ' → logprob: -12.250045776367188
    4. '
' → logprob: -15.000045776367188
    5. '0' → logprob: -16.000045776367188
    6. '   ' → logprob: -16.125045776367188
    7. '(' → logprob: -17.000045776367188
    8. ']' → logprob: -17.562545776367188
    9. '```' → logprob: -17.562545776367188
    10. '

' → logprob: -17.625045776367188

Token 386: '](' (ID: 20614)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12331684678792953
    2. '](' → logprob: -2.873316764831543
    3. '(' → logprob: -3.623316764831543
    4. '[' → logprob: -3.748316764831543
    5. ']' → logprob: -5.248316764831543
    6. ' (' → logprob: -5.998316764831543
    7. ')(' → logprob: -7.373316764831543
    8. '(y' → logprob: -8.248316764831543
    9. '```' → logprob: -8.873316764831543
    10. '(a' → logprob: -9.248316764831543

Token 387: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. 'x' → logprob: -13.750000953674316
    3. ' a' → logprob: -16.625001907348633
    4. '	a' → logprob: -22.625001907348633
    5. ')a' → logprob: -22.750001907348633
    6. '```' → logprob: -23.250001907348633
    7. '(a' → logprob: -23.500001907348633
    8. ')' → logprob: -23.625001907348633
    9. '"a' → logprob: -23.875001907348633
    10. '   ' → logprob: -24.000001907348633

Token 388: ',val' (ID: 126054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4994804263114929
    2. ',' → logprob: -0.9994804263114929
    3. ',y' → logprob: -4.374480247497559
    4. ',b' → logprob: -5.124480247497559
    5. ',[' → logprob: -5.374480247497559
    6. '1' → logprob: -7.124480247497559
    7. '(' → logprob: -7.624480247497559
    8. ',x' → logprob: -7.874480247497559
    9. ',(' → logprob: -8.749480247497559
    10. ' ,' → logprob: -10.749480247497559

Token 389: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.375
    3. '(' → logprob: -18.75
    4. '[' → logprob: -19.625
    5. '3' → logprob: -20.75
    6. '４' → logprob: -21.625
    7. '
' → logprob: -21.625
    8. '۴' → logprob: -21.875
    9. 'al' → logprob: -23.0
    10. '```' → logprob: -23.125

Token 390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038264848990365863
    2. ')
' → logprob: -7.875382423400879
    3. ' )' → logprob: -13.625382423400879
    4. ')

' → logprob: -14.625382423400879
    5. '))' → logprob: -15.000382423400879
    6. ')}' → logprob: -16.000383377075195
    7. '),' → logprob: -16.125383377075195
    8. ')
' → logprob: -16.125383377075195
    9. '<|end|>' → logprob: -16.375383377075195
    10. '   ' → logprob: -17.000383377075195

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01815345324575901
    2. '#' → logprob: -4.018153667449951
    3. ' #' → logprob: -13.143153190612793
    4. '```' → logprob: -14.643153190612793
    5. '  ' → logprob: -14.768153190612793
    6. ' ' → logprob: -15.018153190612793
    7. '    
' → logprob: -15.518153190612793
    8. '       ' → logprob: -16.51815414428711
    9. '    ' → logprob: -17.14315414428711
    10. '<|end|>' → logprob: -17.26815414428711

Token 392: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10022974759340286
    2. '   ' → logprob: -2.3502297401428223
    3. ' #' → logprob: -10.85023021697998
    4. '  ' → logprob: -13.47523021697998
    5. 'yield' → logprob: -14.10023021697998
    6. ' ' → logprob: -14.72523021697998
    7. '((' → logprob: -15.72523021697998
    8. '(' → logprob: -15.85023021697998
    9. '```' → logprob: -15.85023021697998
    10. '    ' → logprob: -16.225229263305664

Token 393: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01462587807327509
    2. '(a' → logprob: -4.5146260261535645
    3. '(' → logprob: -6.3896260261535645
    4. '({' → logprob: -7.1396260261535645
    5. '(op' → logprob: -7.6396260261535645
    6. '(f' → logprob: -7.8896260261535645
    7. '(({' → logprob: -9.139625549316406
    8. ' (' → logprob: -10.014625549316406
    9. '{' → logprob: -10.264625549316406
    10. ' ((' → logprob: -10.764625549316406

Token 394: 'a' (ID: 64)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9087296724319458
    2. '({' → logprob: -0.9087296724319458
    3. '(a' → logprob: -2.1587295532226562
    4. '(' → logprob: -2.9087295532226562
    5. 'a' → logprob: -3.7837295532226562
    6. '(f' → logprob: -6.908729553222656
    7. 'f' → logprob: -9.408729553222656
    8. ' (' → logprob: -10.033729553222656
    9. '(({' → logprob: -11.408729553222656
    10. '(
' → logprob: -11.658729553222656

Token 395: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1694057285785675
    2. ' op' → logprob: -2.294405698776245
    3. ' {' → logprob: -3.294405698776245
    4. '{' → logprob: -4.544405937194824
    5. ')' → logprob: -5.294405937194824
    6. ' (' → logprob: -7.169405937194824
    7. ' ' → logprob: -7.169405937194824
    8. '(op' → logprob: -8.419405937194824
    9. '_op' → logprob: -9.294405937194824
    10. '}' → logprob: -9.544405937194824

Token 396: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.27653107047080994
    2. '{' → logprob: -1.6515311002731323
    3. 'op' → logprob: -3.1515309810638428
    4. 'a' → logprob: -6.026531219482422
    5. 'f' → logprob: -6.026531219482422
    6. ' {' → logprob: -6.651531219482422
    7. ' ' → logprob: -7.776531219482422
    8. ' b' → logprob: -9.151531219482422
    9. '   ' → logprob: -9.401531219482422
    10. '({' → logprob: -9.651531219482422

Token 397: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030895359814167023
    2. '[' → logprob: -5.878089427947998
    3. ')[' → logprob: -9.378089904785156
    4. '){' → logprob: -10.003089904785156
    5. '{' → logprob: -10.128089904785156
    6. ' )' → logprob: -10.253089904785156
    7. '   ' → logprob: -10.253089904785156
    8. ')
' → logprob: -11.128089904785156
    9. 'op' → logprob: -11.503089904785156
    10. 'def' → logprob: -12.753089904785156

Token 398: ' op' (ID: 991)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6896710991859436
    2. '[' → logprob: -1.5646710395812988
    3. ' op' → logprob: -2.064671039581299
    4. '   ' → logprob: -3.064671039581299
    5. ' {' → logprob: -3.564671039581299
    6. 'f' → logprob: -4.064671039581299
    7. 'yield' → logprob: -4.189671039581299
    8. ',' → logprob: -4.314671039581299
    9. 'op' → logprob: -4.314671039581299
    10. ' yield' → logprob: -4.564671039581299

Token 399: ' (' (ID: 350)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6189625263214111
    2. 'c' → logprob: -0.8689625263214111
    3. ' {' → logprob: -3.618962526321411
    4. '{' → logprob: -4.368962287902832
    5. ' f' → logprob: -6.868962287902832
    6. ' ' → logprob: -7.868962287902832
    7. ' (' → logprob: -7.993962287902832
    8. ' op' → logprob: -8.368962287902832
    9. '(c' → logprob: -8.993962287902832
    10. '   ' → logprob: -8.993962287902832

Token 400: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010553701780736446
    2. '(c' → logprob: -5.01055383682251
    3. ' c' → logprob: -5.76055383682251
    4. '{' → logprob: -8.010553359985352
    5. ' (' → logprob: -8.135553359985352
    6. '(' → logprob: -10.135553359985352
    7. ' {' → logprob: -11.635553359985352
    8. '(op' → logprob: -12.385553359985352
    9. '({' → logprob: -13.260553359985352
    10. 'op' → logprob: -14.010553359985352

Token 401: ' op' (ID: 991)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23014330863952637
    2. ' op' → logprob: -2.2301433086395264
    3. 'op' → logprob: -2.3551433086395264
    4. ' [' → logprob: -6.1051435470581055
    5. '```' → logprob: -8.105143547058105
    6. ' {' → logprob: -8.980143547058105
    7. ' ' → logprob: -8.980143547058105
    8. '1' → logprob: -8.980143547058105
    9. '_op' → logprob: -9.605143547058105
    10. ')' → logprob: -9.605143547058105

Token 402: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004084097687155008
    2. ' c' → logprob: -5.50408411026001
    3. '```' → logprob: -12.879083633422852
    4. ' ' → logprob: -13.629083633422852
    5. '   ' → logprob: -14.254083633422852
    6. ')' → logprob: -14.629083633422852
    7. ')c' → logprob: -15.379083633422852
    8. '{' → logprob: -15.629083633422852
    9. '	c' → logprob: -16.00408363342285
    10. ' ' → logprob: -16.25408363342285

Token 403: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009095486253499985
    2. ')' → logprob: -5.134095668792725
    3. '   ' → logprob: -5.884095668792725
    4. ')"
' → logprob: -8.384095191955566
    5. ')
' → logprob: -9.384095191955566
    6. '")
' → logprob: -11.009095191955566
    7. ')")
' → logprob: -11.259095191955566
    8. ')`
' → logprob: -11.384095191955566
    9. ')"' → logprob: -12.259095191955566
    10. ')",' → logprob: -12.634095191955566

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08379779011011124
    2. 'val' → logprob: -2.8337976932525635
    3. 'yield' → logprob: -3.9587976932525635
    4. '
' → logprob: -6.833797931671143
    5. ' val' → logprob: -6.833797931671143
    6. ' yield' → logprob: -8.208797454833984
    7. '    
' → logprob: -10.083797454833984
    8. '	yield' → logprob: -11.208797454833984
    9. '```' → logprob: -11.958797454833984
    10. '	val' → logprob: -12.458797454833984

Token 405: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.31635263562202454
    2. ' val' → logprob: -1.3163526058197021
    3. 'yield' → logprob: -6.191352844238281
    4. '   ' → logprob: -7.316352844238281
    5. ' yield' → logprob: -7.941352844238281
    6. '
' → logprob: -12.316352844238281
    7. '_val' → logprob: -12.691352844238281
    8. '	val' → logprob: -13.441352844238281
    9. ' ' → logprob: -13.566352844238281
    10. 'temp' → logprob: -13.691352844238281

Token 406: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0043405103497207165
    2. '2' → logprob: -5.504340648651123
    3. '5' → logprob: -8.254340171813965
    4. 'a' → logprob: -14.629340171813965
    5. '3' → logprob: -14.879340171813965
    6. '=' → logprob: -15.754340171813965
    7. '4' → logprob: -15.754340171813965
    8. '_' → logprob: -16.00434112548828
    9. 'val' → logprob: -16.00434112548828
    10. '0' → logprob: -16.25434112548828

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759733319282532
    2. ' =' → logprob: -0.8259733319282532
    3. '1' → logprob: -10.825973510742188
    4. 'val' → logprob: -12.200973510742188
    5. 'a' → logprob: -12.700973510742188
    6. '_val' → logprob: -13.200973510742188
    7. '   ' → logprob: -13.950973510742188
    8. ' ' → logprob: -14.700973510742188
    9. '=
' → logprob: -14.700973510742188
    10. '```' → logprob: -14.700973510742188

Token 408: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0019289902411401272
    2. ' op' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.87692928314209
    4. '	op' → logprob: -16.126928329467773
    5. ' ' → logprob: -17.251928329467773
    6. 'ops' → logprob: -17.376928329467773
    7. '  ' → logprob: -17.501928329467773
    8. '    ' → logprob: -17.751928329467773
    9. '
' → logprob: -18.001928329467773
    10. '(op' → logprob: -18.501928329467773

Token 409: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004627480171620846
    2. '1' → logprob: -5.379627704620361
    3. '[' → logprob: -12.379627227783203
    4. '3' → logprob: -13.504627227783203
    5. ' ' → logprob: -13.879627227783203
    6. '```' → logprob: -15.254627227783203
    7. 'op' → logprob: -15.754627227783203
    8. '
' → logprob: -15.879627227783203
    9. '   ' → logprob: -16.504627227783203
    10. '(' → logprob: -16.692127227783203

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.709308167453855e-05
    2. '1' → logprob: -9.375086784362793
    3. '(' → logprob: -14.500086784362793
    4. '
' → logprob: -15.250086784362793
    5. '```' → logprob: -15.375086784362793
    6. '   ' → logprob: -15.750086784362793
    7. ' [' → logprob: -16.00008773803711
    8. '_' → logprob: -16.12508773803711
    9. 's' → logprob: -16.37508773803711
    10. '5' → logprob: -16.37508773803711

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519592046737671
    2. '[' → logprob: -1.501959204673767
    3. '(' → logprob: -11.001958847045898
    4. '```' → logprob: -12.626958847045898
    5. ' ' → logprob: -13.126958847045898
    6. ']' → logprob: -13.251958847045898
    7. '
' → logprob: -13.501958847045898
    8. ' [' → logprob: -14.001958847045898
    9. '][' → logprob: -14.251958847045898
    10. '   ' → logprob: -14.376958847045898

Token 412: '](' (ID: 20614)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006790562998503447
    2. '](' → logprob: -5.006790637969971
    3. 'a' → logprob: -10.006790161132812
    4. '```' → logprob: -11.381790161132812
    5. '(' → logprob: -11.881790161132812
    6. '}(' → logprob: -12.381790161132812
    7. ' (' → logprob: -12.631790161132812
    8. ']' → logprob: -13.256790161132812
    9. '>(' → logprob: -14.131790161132812
    10. '"](' → logprob: -14.631790161132812

Token 413: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.250004768371582
    3. '(a' → logprob: -17.3750057220459
    4. '<|end|>' → logprob: -18.2500057220459
    5. '	a' → logprob: -18.5000057220459
    6. '   ' → logprob: -19.3750057220459
    7. '#a' → logprob: -19.3750057220459
    8. ')a' → logprob: -20.3750057220459
    9. ' ' → logprob: -20.6250057220459
    10. '(' → logprob: -21.1250057220459

Token 414: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.1520155966281891
    2. ',' → logprob: -2.6520156860351562
    3. 'b' → logprob: -2.6520156860351562
    4. ' ,' → logprob: -12.027015686035156
    5. ' b' → logprob: -14.027015686035156
    6. '[' → logprob: -15.902015686035156
    7. '(b' → logprob: -15.902015686035156
    8. ',val' → logprob: -16.402015686035156
    9. ')b' → logprob: -17.152015686035156
    10. ')' → logprob: -17.777015686035156

Token 415: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007674891501665115
    2. ')' → logprob: -4.882674694061279
    3. '),' → logprob: -10.132675170898438
    4. ')
' → logprob: -11.132675170898438
    5. ',' → logprob: -11.882675170898438
    6. 'val' → logprob: -12.632675170898438
    7. '   ' → logprob: -13.257675170898438
    8. ')

' → logprob: -13.507675170898438
    9. ' )
' → logprob: -14.757675170898438
    10. ',val' → logprob: -15.382675170898438

Token 416: '   ' (ID: 271)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.039260074496269226
    2. '   ' → logprob: -3.789260149002075
    3. '
' → logprob: -4.289259910583496
    4. ' val' → logprob: -6.414259910583496
    5. '_val' → logprob: -8.664259910583496
    6. ',val' → logprob: -9.539259910583496
    7. '    
' → logprob: -9.664259910583496
    8. '```' → logprob: -9.914259910583496
    9. '
' → logprob: -10.164259910583496
    10. '	val' → logprob: -10.789259910583496

Token 417: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.06438852101564407
    2. ' val' → logprob: -2.9393885135650635
    3. '   ' → logprob: -4.814388751983643
    4. '
' → logprob: -7.439388751983643
    5. '_val' → logprob: -7.689388751983643
    6. 'op' → logprob: -8.939388275146484
    7. ' op' → logprob: -10.439388275146484
    8. ',val' → logprob: -10.564388275146484
    9. '    
' → logprob: -10.689388275146484
    10. '	val' → logprob: -11.189388275146484

Token 418: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010894970037043095
    2. '4' → logprob: -7.626089572906494
    3. '5' → logprob: -8.251089096069336
    4. '_' → logprob: -8.376089096069336
    5. '3' → logprob: -10.501089096069336
    6. '=' → logprob: -10.626089096069336
    7. '
' → logprob: -11.001089096069336
    8. 'val' → logprob: -11.376089096069336
    9. ' ' → logprob: -11.751089096069336
    10. ' =' → logprob: -12.501089096069336

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014947235584259
    2. ' =' → logprob: -1.7014946937561035
    3. '[' → logprob: -9.701495170593262
    4. ',' → logprob: -11.201495170593262
    5. '   ' → logprob: -12.951495170593262
    6. ' ' → logprob: -13.826495170593262
    7. '=
' → logprob: -14.326495170593262
    8. ' [' → logprob: -14.826495170593262
    9. ' op' → logprob: -14.951495170593262
    10. 'op' → logprob: -15.076495170593262

Token 420: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.001034595537930727
    2. ' op' → logprob: -6.876034736633301
    3. 'ops' → logprob: -13.5010347366333
    4. '	op' → logprob: -15.1260347366333
    5. ' ' → logprob: -15.8760347366333
    6. '   ' → logprob: -16.876033782958984
    7. 'opf' → logprob: -17.001033782958984
    8. '  ' → logprob: -17.376033782958984
    9. '
' → logprob: -17.626033782958984
    10. '(op' → logprob: -17.751033782958984

Token 421: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003670364967547357
    2. '[' → logprob: -8.000367164611816
    3. '3' → logprob: -10.625367164611816
    4. '1' → logprob: -12.125367164611816
    5. '```' → logprob: -14.750367164611816
    6. '
' → logprob: -14.875367164611816
    7. '(' → logprob: -15.125367164611816
    8. ' ' → logprob: -15.687867164611816
    9. 'op' → logprob: -15.937867164611816
    10. '{' → logprob: -16.8128662109375

Token 422: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.375000953674316
    3. ' [' → logprob: -16.125
    4. '1' → logprob: -16.5
    5. '```' → logprob: -16.625
    6. '   ' → logprob: -16.75
    7. '#' → logprob: -18.25
    8. '
' → logprob: -18.375
    9. '_' → logprob: -19.125
    10. 'def' → logprob: -19.25

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14272072911262512
    2. '[' → logprob: -2.0177206993103027
    3. '(' → logprob: -10.517721176147461
    4. ' ' → logprob: -11.642721176147461
    5. '```' → logprob: -12.767721176147461
    6. ']' → logprob: -12.892721176147461
    7. '][' → logprob: -14.267721176147461
    8. '[](' → logprob: -14.767721176147461
    9. ' [' → logprob: -14.830221176147461
    10. '
' → logprob: -14.830221176147461

Token 424: '](' (ID: 20614)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1270792931318283
    2. '](' → logprob: -2.1270792484283447
    3. '}(' → logprob: -10.252079010009766
    4. ']' → logprob: -10.627079010009766
    5. '```' → logprob: -10.627079010009766
    6. ' (' → logprob: -10.877079010009766
    7. '(' → logprob: -11.252079010009766
    8. '
' → logprob: -11.502079010009766
    9. '>(' → logprob: -12.127079010009766
    10. '[](' → logprob: -12.377079010009766

Token 425: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.727905979962088e-05
    2. ' c' → logprob: -10.00004768371582
    3. '(c' → logprob: -14.25004768371582
    4. '	c' → logprob: -14.25004768371582
    5. '   ' → logprob: -15.00004768371582
    6. ')c' → logprob: -16.12504768371582
    7. ' ' → logprob: -16.87504768371582
    8. '
' → logprob: -17.12504768371582
    9. '  ' → logprob: -18.25004768371582
    10. ',c' → logprob: -18.75004768371582

Token 426: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.009437658824026585
    2. ',c' → logprob: -5.259437561035156
    3. ',' → logprob: -5.509437561035156
    4. ' ,' → logprob: -9.134437561035156
    5. '[' → logprob: -10.634437561035156
    6. 'd' → logprob: -12.634437561035156
    7. ',k' → logprob: -13.009437561035156
    8. '1' → logprob: -13.259437561035156
    9. ',g' → logprob: -13.634437561035156
    10. 'c' → logprob: -13.884437561035156

Token 427: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048624154180288315
    2. ')' → logprob: -3.048624038696289
    3. '   ' → logprob: -10.798624038696289
    4. ')
' → logprob: -11.048624038696289
    5. ')

' → logprob: -15.673624038696289
    6. ' )
' → logprob: -16.29862403869629
    7. '),' → logprob: -16.42362403869629
    8. ')`
' → logprob: -16.79862403869629
    9. 'def' → logprob: -18.04862403869629
    10. '))
' → logprob: -18.17362403869629

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02176145277917385
    2. 'yield' → logprob: -3.896761417388916
    3. '
' → logprob: -7.396761417388916
    4. ' yield' → logprob: -8.021761894226074
    5. 'val' → logprob: -8.896761894226074
    6. '    
' → logprob: -9.771761894226074
    7. '```' → logprob: -10.146761894226074
    8. '	yield' → logprob: -10.396761894226074
    9. '   ' → logprob: -12.021761894226074
    10. 'Yield' → logprob: -13.521761894226074

Token 429: ' yield' (ID: 14376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3325955271720886
    2. 'yield' (adapté à ' yield') → logprob: -1.3325955867767334
    3. ' yield' → logprob: -3.9575955867767334
    4. '	yield' → logprob: -10.332595825195312
    5. '```' → logprob: -13.082595825195312
    6. 'Yield' → logprob: -13.457595825195312
    7. '
' → logprob: -13.457595825195312
    8. '    
' → logprob: -14.207595825195312
    9. 'y' → logprob: -15.457595825195312
    10. ' yields' → logprob: -15.457595825195312

Token 430: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008822914212942123
    2. ' f' → logprob: -4.758822917938232
    3. '(f' → logprob: -8.508822441101074
    4. '   ' → logprob: -12.508822441101074
    5. ' ' → logprob: -13.133822441101074
    6. ' (' → logprob: -14.383822441101074
    7. '(' → logprob: -16.25882339477539
    8. '  ' → logprob: -16.63382339477539
    9. '	f' → logprob: -16.63382339477539
    10. '
' → logprob: -17.25882339477539

Token 431: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5635169148445129
    2. ' f' → logprob: -1.0635168552398682
    3. '({' → logprob: -2.688516855239868
    4. ' ({' → logprob: -4.688517093658447
    5. '(f' → logprob: -4.938517093658447
    6. '"' → logprob: -6.813517093658447
    7. ' ' → logprob: -10.063516616821289
    8. '(({' → logprob: -10.188516616821289
    9. '   ' → logprob: -10.688516616821289
    10. '{' → logprob: -12.688516616821289

Token 432: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -9.088346359931165e-07
    2. ' ({' → logprob: -14.750000953674316
    3. '{' → logprob: -15.500000953674316
    4. 'f' → logprob: -16.0
    5. '(f' → logprob: -16.125
    6. '(({' → logprob: -16.875
    7. '[{' → logprob: -19.625
    8. '([{' → logprob: -20.625
    9. '   ' → logprob: -21.125
    10. '"' → logprob: -21.125

Token 433: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ' a' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.0
    4. '{' → logprob: -18.5
    5. 'val' → logprob: -19.0
    6. ' ' → logprob: -20.5
    7. '    ' → logprob: -20.75
    8. '	a' → logprob: -20.75
    9. '
' → logprob: -21.375
    10. '  ' → logprob: -21.625

Token 434: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -3.4121114822482923e-06
    2. ' }' → logprob: -12.750003814697266
    3. '[' → logprob: -14.875003814697266
    4. ' ' → logprob: -17.375003814697266
    5. 'op' → logprob: -17.375003814697266
    6. '```' → logprob: -17.375003814697266
    7. '1' → logprob: -17.500003814697266
    8. '}{' → logprob: -17.750003814697266
    9. 'f' → logprob: -17.750003814697266
    10. '{' → logprob: -17.875003814697266

Token 435: ' {' (ID: 354)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.49080580472946167
    2. ' val' → logprob: -1.2408058643341064
    3. 'op' → logprob: -2.6158058643341064
    4. 'val' → logprob: -3.7408058643341064
    5. '}' → logprob: -6.615805625915527
    6. '{' → logprob: -8.115805625915527
    7. ' {' → logprob: -9.115805625915527
    8. ' ' → logprob: -9.365805625915527
    9. '[val' → logprob: -10.990805625915527
    10. ' ' → logprob: -12.115805625915527

Token 436: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.1008713702030946e-06
    2. ' op' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '
' → logprob: -17.625001907348633
    5. 'opt' → logprob: -18.875001907348633
    6. '
' → logprob: -19.625001907348633
    7. ' ' → logprob: -19.625001907348633
    8. '#' → logprob: -19.625001907348633
    9. 'val' → logprob: -19.875001907348633
    10. '	op' → logprob: -20.000001907348633

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023092885967344046
    2. 'op' → logprob: -6.127309322357178
    3. '[' → logprob: -9.25230884552002
    4. '2' → logprob: -10.87730884552002
    5. '0' → logprob: -12.37730884552002
    6. '```' → logprob: -13.25230884552002
    7. '
' → logprob: -14.00230884552002
    8. ' op' → logprob: -14.50230884552002
    9. '``' → logprob: -14.62730884552002
    10. '(op' → logprob: -15.50230884552002

Token 438: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.125
    4. ' [' → logprob: -16.75
    5. '1' → logprob: -18.5
    6. '(' → logprob: -18.5
    7. '}[' → logprob: -18.625
    8. '       ' → logprob: -18.875
    9. ' ' → logprob: -19.0
    10. '{' → logprob: -19.0

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061972957104444504
    2. '[' → logprob: -2.8119728565216064
    3. ' ' → logprob: -12.686972618103027
    4. '   ' → logprob: -14.186972618103027
    5. ''' → logprob: -15.061972618103027
    6. ''[' → logprob: -15.436972618103027
    7. '(' → logprob: -15.561972618103027
    8. '1' → logprob: -16.436973571777344
    9. '  ' → logprob: -16.436973571777344
    10. '
' → logprob: -16.436973571777344

Token 440: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -8.061054359131958e-06
    2. ' }' → logprob: -11.875007629394531
    3. '[' → logprob: -14.750007629394531
    4. ' ' → logprob: -15.125007629394531
    5. ')}' → logprob: -16.37500762939453
    6. '"}' → logprob: -16.50000762939453
    7. '()}' → logprob: -16.62500762939453
    8. '`}' → logprob: -16.62500762939453
    9. '}}' → logprob: -16.87500762939453
    10. ']}' → logprob: -17.50000762939453

Token 441: ' {' (ID: 354)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00494969729334116
    2. '{' → logprob: -6.004949569702148
    3. ' b' → logprob: -6.004949569702148
    4. ' {' → logprob: -12.504949569702148
    5. '}' → logprob: -15.254949569702148
    6. '	b' → logprob: -15.629949569702148
    7. ')b' → logprob: -16.00494956970215
    8. '   ' → logprob: -16.37994956970215
    9. 'c' → logprob: -16.62994956970215
    10. '$b' → logprob: -17.00494956970215

Token 442: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -14.250000953674316
    3. 'c' → logprob: -14.875000953674316
    4. '   ' → logprob: -17.875001907348633
    5. ')b' → logprob: -17.875001907348633
    6. '}' → logprob: -18.250001907348633
    7. '	b' → logprob: -19.125001907348633
    8. ' ' → logprob: -20.500001907348633
    9. '```' → logprob: -21.000001907348633
    10. '
' → logprob: -21.375001907348633

Token 443: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.07024095207452774
    2. ')' → logprob: -2.6952409744262695
    3. '}' → logprob: -9.19524097442627
    4. ')}' → logprob: -9.32024097442627
    5. '")' → logprob: -9.82024097442627
    6. ' })' → logprob: -10.19524097442627
    7. '`)' → logprob: -12.07024097442627
    8. '"})' → logprob: -12.57024097442627
    9. '])' → logprob: -12.82024097442627
    10. '[' → logprob: -13.69524097442627

Token 444: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.32806721329689026
    2. ')' → logprob: -1.3280671834945679
    3. '{' → logprob: -4.328067302703857
    4. '}' → logprob: -6.578067302703857
    5. ' )' → logprob: -9.7030668258667
    6. ' op' → logprob: -10.2030668258667
    7. '")' → logprob: -12.7030668258667
    8. '   ' → logprob: -12.9530668258667
    9. ' ' → logprob: -13.2030668258667
    10. ' (' → logprob: -13.5780668258667

Token 445: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.941850526549388e-06
    2. ' op' → logprob: -11.750007629394531
    3. ' ' → logprob: -18.87500762939453
    4. '   ' → logprob: -19.37500762939453
    5. '	op' → logprob: -19.87500762939453
    6. '  ' → logprob: -20.00000762939453
    7. 'opt' → logprob: -20.50000762939453
    8. 'f' → logprob: -20.75000762939453
    9. '}' → logprob: -21.12500762939453
    10. '    ' → logprob: -22.00000762939453

Token 446: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023712508846074343
    2. 'op' → logprob: -6.252371311187744
    3. '[' → logprob: -7.752371311187744
    4. ' op' → logprob: -12.127370834350586
    5. '(' → logprob: -13.502370834350586
    6. ' ' → logprob: -13.502370834350586
    7. '_' → logprob: -14.127370834350586
    8. '_op' → logprob: -14.127370834350586
    9. '```' → logprob: -14.252370834350586
    10. '1' → logprob: -14.502370834350586

Token 447: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.750005722045898
    3. ' [' → logprob: -13.250005722045898
    4. '   ' → logprob: -14.500005722045898
    5. ' (' → logprob: -15.125005722045898
    6. '0' → logprob: -16.0000057220459
    7. ' ' → logprob: -16.3750057220459
    8. '{' → logprob: -17.0000057220459
    9. '  ' → logprob: -17.0000057220459
    10. '_' → logprob: -17.0000057220459

Token 448: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47414565086364746
    2. '0' → logprob: -0.9741456508636475
    3. ' ' → logprob: -10.099145889282227
    4. '(' → logprob: -11.349145889282227
    5. '{' → logprob: -11.724145889282227
    6. ' [' → logprob: -12.724145889282227
    7. '   ' → logprob: -14.224145889282227
    8. ')' → logprob: -14.599145889282227
    9. '  ' → logprob: -14.599145889282227
    10. '```' → logprob: -14.849145889282227

Token 449: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -6.2729995988775045e-06
    2. ' }' → logprob: -12.500006675720215
    3. '`}' → logprob: -14.125006675720215
    4. '"}' → logprob: -14.500006675720215
    5. ''}' → logprob: -15.000006675720215
    6. '()}' → logprob: -15.250006675720215
    7. '{' → logprob: -15.500006675720215
    8. '[' → logprob: -16.1250057220459
    9. '}}' → logprob: -16.3750057220459
    10. '>}' → logprob: -16.7500057220459

Token 450: ' ({' (ID: 16472)
  Prédit: ' ({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ({' → logprob: -0.23327100276947021
    2. '({' → logprob: -1.9832710027694702
    3. ' (' → logprob: -3.2332711219787598
    4. '(f' → logprob: -4.35827112197876
    5. ' f' → logprob: -5.10827112197876
    6. 'f' → logprob: -5.35827112197876
    7. ' {' → logprob: -5.35827112197876
    8. '{' → logprob: -6.35827112197876
    9. '(c' → logprob: -7.23327112197876
    10. '}' → logprob: -8.983270645141602

Token 451: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9361264946837764e-07
    2. ' c' → logprob: -16.25
    3. ')c' → logprob: -18.625
    4. '	c' → logprob: -18.875
    5. '   ' → logprob: -20.25
    6. '$c' → logprob: -20.5
    7. '%c' → logprob: -20.75
    8. '
' → logprob: -20.75
    9. 'f' → logprob: -21.25
    10. 'с' → logprob: -22.25

Token 452: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0006591808632947505
    2. '[' → logprob: -7.375658988952637
    3. 'op' → logprob: -10.875658988952637
    4. 'a' → logprob: -12.000658988952637
    5. '{' → logprob: -12.500658988952637
    6. ' op' → logprob: -13.875658988952637
    7. ' ' → logprob: -14.250658988952637
    8. '1' → logprob: -14.750658988952637
    9. '0' → logprob: -14.750658988952637
    10. ' ' → logprob: -14.875658988952637

Token 453: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08227817714214325
    2. ' {' → logprob: -2.707278251647949
    3. 'c' → logprob: -4.582278251647949
    4. 'op' → logprob: -6.332278251647949
    5. ' c' → logprob: -9.20727825164795
    6. ' op' → logprob: -9.95727825164795
    7. '}' → logprob: -10.58227825164795
    8. '{}' → logprob: -10.58227825164795
    9. ' ' → logprob: -10.70727825164795
    10. '[' → logprob: -10.95727825164795

Token 454: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.9361264946837764e-07
    2. ' op' → logprob: -16.625
    3. 'ops' → logprob: -17.375
    4. '	op' → logprob: -20.125
    5. '   ' → logprob: -20.625
    6. '  ' → logprob: -21.0
    7. '
' → logprob: -21.375
    8. 'Op' → logprob: -21.875
    9. '_op' → logprob: -21.875
    10. '(op' → logprob: -22.0

Token 455: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008263026247732341
    2. '[' → logprob: -8.000825881958008
    3. '2' → logprob: -8.125825881958008
    4. '1' → logprob: -8.875825881958008
    5. '0' → logprob: -10.000825881958008
    6. '
' → logprob: -13.500825881958008
    7. 'op' → logprob: -13.813325881958008
    8. 'o' → logprob: -14.000825881958008
    9. '```' → logprob: -14.000825881958008
    10. '_' → logprob: -14.250825881958008

Token 456: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -17.625003814697266
    5. ' [' → logprob: -18.125003814697266
    6. '(' → logprob: -18.625003814697266
    7. ' ' → logprob: -18.625003814697266
    8. '  ' → logprob: -18.750003814697266
    9. ')' → logprob: -18.750003814697266
    10. '{' → logprob: -18.875003814697266

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026302969083189964
    2. '[' → logprob: -3.6513030529022217
    3. '1' → logprob: -14.1513032913208
    4. '(' → logprob: -14.4013032913208
    5. ' ' → logprob: -14.4013032913208
    6. '```' → logprob: -15.5263032913208
    7. '   ' → logprob: -15.7763032913208
    8. '{' → logprob: -16.151302337646484
    9. '  ' → logprob: -16.901302337646484
    10. 'o' → logprob: -17.151302337646484

Token 458: ']}' (ID: 28000)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005616719368845224
    2. '0' → logprob: -5.880616664886475
    3. '}' → logprob: -5.880616664886475
    4. '}[' → logprob: -11.755617141723633
    5. '{' → logprob: -12.755617141723633
    6. ']' → logprob: -14.505617141723633
    7. '   ' → logprob: -14.505617141723633
    8. ' }' → logprob: -14.630617141723633
    9. ' [' → logprob: -14.880617141723633
    10. ']}' → logprob: -15.005617141723633

Token 459: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.009225660935044289
    2. ' {' → logprob: -4.759225845336914
    3. '[' → logprob: -8.259225845336914
    4. '0' → logprob: -8.384225845336914
    5. '{o' → logprob: -9.759225845336914
    6. '}' → logprob: -10.259225845336914
    7. ' ' → logprob: -11.134225845336914
    8. 'd' → logprob: -12.134225845336914
    9. '{}' → logprob: -13.134225845336914
    10. 'c' → logprob: -13.384225845336914

Token 460: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016158436483237892
    2. ' d' → logprob: -8.750161170959473
    3. '}' → logprob: -13.750161170959473
    4. ')d' → logprob: -14.375161170959473
    5. '	d' → logprob: -14.750161170959473
    6. '0' → logprob: -15.125161170959473
    7. ' ' → logprob: -15.125161170959473
    8. '{' → logprob: -15.375161170959473
    9. '   ' → logprob: -16.12516212463379
    10. 'c' → logprob: -16.25016212463379

Token 461: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0006734743365086615
    2. ')",' → logprob: -8.000673294067383
    3. ' })' → logprob: -9.000673294067383
    4. ')' → logprob: -9.375673294067383
    5. ')}' → logprob: -10.000673294067383
    6. '")' → logprob: -10.375673294067383
    7. ')"' → logprob: -10.625673294067383
    8. '}",' → logprob: -11.625673294067383
    9. '])' → logprob: -12.250673294067383
    10. '}' → logprob: -12.625673294067383

Token 462: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0003241414960939437
    2. ')",' → logprob: -8.375324249267578
    3. '"' → logprob: -9.625324249267578
    4. '}",' → logprob: -10.875324249267578
    5. ' ",' → logprob: -12.875324249267578
    6. ',' → logprob: -13.375324249267578
    7. '),' → logprob: -14.000324249267578
    8. '")' → logprob: -14.125324249267578
    9. '"),' → logprob: -14.375324249267578
    10. 'yield' → logprob: -14.750324249267578

Token 463: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1602315455675125
    2. ' op' → logprob: -1.910231590270996
    3. 'val' → logprob: -12.160231590270996
    4. '   ' → logprob: -14.535231590270996
    5. ' ' → logprob: -15.160231590270996
    6. '	op' → logprob: -15.160231590270996
    7. ' ' → logprob: -15.285231590270996
    8. '(op' → logprob: -15.535231590270996
    9. '    ' → logprob: -15.535231590270996
    10. '_op' → logprob: -16.53523063659668

Token 464: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.875001907348633
    3. '1' → logprob: -14.875001907348633
    4. 'val' → logprob: -16.250001907348633
    5. 'op' → logprob: -17.125001907348633
    6. '```' → logprob: -19.000001907348633
    7. '(' → logprob: -19.500001907348633
    8. '
' → logprob: -20.750001907348633
    9. 'def' → logprob: -20.875001907348633
    10. 'f' → logprob: -21.375001907348633

Token 465: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '1' → logprob: -18.25
    4. 'op' → logprob: -18.5
    5. '   ' → logprob: -19.25
    6. '(' → logprob: -19.375
    7. '_' → logprob: -20.0
    8. ' [' → logprob: -20.375
    9. 'def' → logprob: -20.5
    10. '-' → logprob: -20.625

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011785586830228567
    2. '[' → logprob: -6.751178741455078
    3. ' ' → logprob: -12.001178741455078
    4. '```' → logprob: -14.001178741455078
    5. '   ' → logprob: -14.501178741455078
    6. '(' → logprob: -16.188678741455078
    7. '
' → logprob: -16.376178741455078
    8. '...' → logprob: -16.688678741455078
    9. '  ' → logprob: -16.938678741455078
    10. '-' → logprob: -16.938678741455078

Token 467: '](' (ID: 20614)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.047711923718452454
    2. '(val' → logprob: -3.2977118492126465
    3. '(' → logprob: -4.6727118492126465
    4. '](' → logprob: -8.672712326049805
    5. '[' → logprob: -9.797712326049805
    6. '[val' → logprob: -10.797712326049805
    7. ']' → logprob: -11.547712326049805
    8. ' (' → logprob: -12.547712326049805
    9. '(eval' → logprob: -12.672712326049805
    10. ')(' → logprob: -12.672712326049805

Token 468: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.128163257315464e-07
    2. ' val' → logprob: -15.5
    3. '(val' → logprob: -18.25
    4. 'op' → logprob: -19.125
    5. '	val' → logprob: -21.375
    6. '[val' → logprob: -21.75
    7. ',val' → logprob: -21.75
    8. '   ' → logprob: -23.625
    9. 'Val' → logprob: -23.75
    10. '_val' → logprob: -23.75

Token 469: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.39548608660697937
    2. '1' → logprob: -1.1454861164093018
    3. '[' → logprob: -4.770485877990723
    4. 'val' → logprob: -9.520485877990723
    5. '(' → logprob: -10.895485877990723
    6. '4' → logprob: -12.770485877990723
    7. '```' → logprob: -13.145485877990723
    8. 'op' → logprob: -14.270485877990723
    9. '6' → logprob: -14.770485877990723
    10. '
' → logprob: -14.895485877990723

Token 470: ',val' (ID: 126054)
  Prédit: ',val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.10079175233840942
    2. ',' → logprob: -2.3507916927337646
    3. '(val' → logprob: -7.725791931152344
    4. '[' → logprob: -10.100791931152344
    5. '(' → logprob: -10.100791931152344
    6. '[val' → logprob: -10.475791931152344
    7. 'val' → logprob: -10.600791931152344
    8. ' ,' → logprob: -12.350791931152344
    9. '1' → logprob: -13.225791931152344
    10. ' val' → logprob: -13.475791931152344

Token 471: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0005736440070904791
    2. '1' → logprob: -7.750573635101318
    3. '5' → logprob: -8.875574111938477
    4. '[' → logprob: -13.250574111938477
    5. '(' → logprob: -14.125574111938477
    6. 'op' → logprob: -15.500574111938477
    7. '4' → logprob: -16.125574111938477
    8. 'val' → logprob: -16.250574111938477
    9. '   ' → logprob: -16.625574111938477
    10. '2' → logprob: -16.875574111938477

Token 472: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.875008583068848
    4. ')}' → logprob: -16.250009536743164
    5. '   ' → logprob: -16.500009536743164
    6. '}' → logprob: -16.500009536743164
    7. '))' → logprob: -17.000009536743164
    8. ')

' → logprob: -17.375009536743164
    9. '<|end|>' → logprob: -17.500009536743164
    10. ')#' → logprob: -18.000009536743164

Token 473: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5840355753898621
    2. 'for' → logprob: -0.8340355753898621
    3. '#' → logprob: -5.209035396575928
    4. 'import' → logprob: -6.834035396575928
    5. 'target' → logprob: -7.834035396575928
    6. ' for' → logprob: -7.959035396575928
    7. 'nums' → logprob: -8.709035873413086
    8. '```' → logprob: -8.834035873413086
    9. 'if' → logprob: -9.084035873413086
    10. 'result' → logprob: -9.959035873413086

Token 474: ' line' (ID: 2543)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.06258127093315125
    2. 'nums' → logprob: -2.8125813007354736
    3. '(nums' → logprob: -8.437581062316895
    4. ' num' → logprob: -9.187581062316895
    5. ' perm' → logprob: -9.812581062316895
    6. '_nums' → logprob: -10.062581062316895
    7. 'n' → logprob: -10.312581062316895
    8. ' n' → logprob: -10.437581062316895
    9. 'Nums' → logprob: -10.562581062316895
    10. 'num' → logprob: -10.812581062316895

Token 475: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004719784017652273
    2. 'in' → logprob: -5.3797197341918945
    3. 's' → logprob: -10.379719734191895
    4. ' ' → logprob: -10.379719734191895
    5. ' =' → logprob: -11.004719734191895
    6. '_' → logprob: -12.129719734191895
    7. '  ' → logprob: -13.129719734191895
    8. 'import' → logprob: -13.567219734191895
    9. '	in' → logprob: -13.567219734191895
    10. '1' → logprob: -13.692219734191895

Token 476: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.061970487236976624
    2. ' sys' → logprob: -2.8119704723358154
    3. '(sys' → logprob: -13.686970710754395
    4. '	sys' → logprob: -13.686970710754395
    5. '=sys' → logprob: -14.686970710754395
    6. 'open' → logprob: -16.561969757080078
    7. ' ' → logprob: -17.436969757080078
    8. '```' → logprob: -17.561969757080078
    9. 'iter' → logprob: -18.061969757080078
    10. '   ' → logprob: -18.061969757080078

Token 477: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3218008577823639
    2. 'stdin' → logprob: -1.8218008279800415
    3. 'in' → logprob: -2.196800947189331
    4. 'input' → logprob: -6.571800708770752
    5. 'import' → logprob: -7.696800708770752
    6. '```' → logprob: -9.32180118560791
    7. '(stdin' → logprob: -9.69680118560791
    8. ':' → logprob: -10.32180118560791
    9. ' stdin' → logprob: -10.32180118560791
    10. 'argv' → logprob: -10.44680118560791

Token 478: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016624432755634189
    2. ':
' → logprob: -7.126662254333496
    3. '.readline' → logprob: -7.126662254333496
    4. '.readlines' → logprob: -11.001662254333496
    5. ' in' → logprob: -11.251662254333496
    6. '():' → logprob: -12.376662254333496
    7. '):' → logprob: -12.501662254333496
    8. ' :' → logprob: -12.501662254333496
    9. 'in' → logprob: -12.876662254333496
    10. '.strip' → logprob: -13.251662254333496

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005170781631022692
    2. ' nums' → logprob: -5.380170822143555
    3. ' line' → logprob: -7.755170822143555
    4. 'nums' → logprob: -10.130170822143555
    5. ' numbers' → logprob: -10.505170822143555
    6. ' num' → logprob: -11.255170822143555
    7. ' n' → logprob: -11.630170822143555
    8. ' s' → logprob: -11.755170822143555
    9. '    
' → logprob: -12.505170822143555
    10. 'n' → logprob: -12.755170822143555

Token 480: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2409056425094604
    2. ' line' → logprob: -1.4909056425094604
    3. '   ' → logprob: -1.8659056425094604
    4. ' n' → logprob: -2.61590576171875
    5. 'nums' → logprob: -2.74090576171875
    6. ' nums' → logprob: -2.86590576171875
    7. ' numbers' → logprob: -3.36590576171875
    8. 'line' → logprob: -3.61590576171875
    9. 's' → logprob: -3.99090576171875
    10. 'data' → logprob: -4.49090576171875

Token 481: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2712298631668091
    2. ' line' → logprob: -2.1462297439575195
    3. 'line' → logprob: -2.3962297439575195
    4. 'not' → logprob: -3.5212297439575195
    5. ' ' → logprob: -12.77122974395752
    6. '=line' → logprob: -13.27122974395752
    7. '#line' → logprob: -13.52122974395752
    8. '	line' → logprob: -14.02122974395752
    9. ' ' → logprob: -14.02122974395752
    10. '(line' → logprob: -14.52122974395752

Token 482: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.47407716512680054
    2. ' line' → logprob: -0.9740771651268005
    3. '	line' → logprob: -17.349077224731445
    4. '(line' → logprob: -17.474077224731445
    5. '#line' → logprob: -18.349077224731445
    6. ' ' → logprob: -18.724077224731445
    7. '=line' → logprob: -18.724077224731445
    8. 'ine' → logprob: -18.849077224731445
    9. '_line' → logprob: -19.724077224731445
    10. ' ' → logprob: -19.974077224731445

Token 483: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.006791513413190842
    2. '.' → logprob: -5.006791591644287
    3. 'strip' → logprob: -10.256791114807129
    4. '.rstrip' → logprob: -10.506791114807129
    5. '.startswith' → logprob: -12.131791114807129
    6. ' .' → logprob: -12.381791114807129
    7. ' strip' → logprob: -13.256791114807129
    8. '_strip' → logprob: -13.631791114807129
    9. '.chomp' → logprob: -15.006791114807129
    10. '.readline' → logprob: -15.381791114807129

Token 484: '():
' (ID: 8595)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5164268612861633
    2. ':' → logprob: -1.0164268016815186
    3. '():
' → logprob: -3.2664268016815186
    4. '():' → logprob: -5.766427040100098
    5. ':return' → logprob: -9.766427040100098
    6. ' :
' → logprob: -10.141427040100098
    7. ' :' → logprob: -10.266427040100098
    8. '   ' → logprob: -10.516427040100098
    9. 'continue' → logprob: -11.891427040100098
    10. '       ' → logprob: -12.016427040100098

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030948311905376613
    2. '   ' → logprob: -8.125309944152832
    3. '<|end|>' → logprob: -12.750309944152832
    4. ',' → logprob: -13.125309944152832
    5. ' break' → logprob: -13.375309944152832
    6. '	   ' → logprob: -13.500309944152832
    7. '	' → logprob: -13.875309944152832
    8. '           ' → logprob: -14.000309944152832
    9. '     ' → logprob: -14.250309944152832
    10. '<|end|>' → logprob: -14.750309944152832

Token 486: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.015391412191092968
    2. ' break' → logprob: -4.2653913497924805
    3. '   ' → logprob: -6.7653913497924805
    4. '	break' → logprob: -10.14039134979248
    5. 'continue' (adapté à ' continue') → logprob: -10.76539134979248
    6. '       ' → logprob: -11.26539134979248
    7. '
' → logprob: -15.89039134979248
    8. '```' → logprob: -15.89039134979248
    9. '_break' → logprob: -15.89039134979248
    10. ' continue' → logprob: -16.265392303466797

Token 487: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008445297717116773
    2. 'nums' → logprob: -8.000844955444336
    3. '    
' → logprob: -8.125844955444336
    4. 'tokens' → logprob: -9.500844955444336
    5. 'n' → logprob: -10.000844955444336
    6. 'num' → logprob: -10.500844955444336
    7. 'numbers' → logprob: -10.750844955444336
    8. '
' → logprob: -11.000844955444336
    9. ' nums' → logprob: -11.375844955444336
    10. 'input' → logprob: -12.875844955444336

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01463116891682148
    2. 'nums' → logprob: -4.639631271362305
    3. 'n' → logprob: -5.764631271362305
    4. 'numbers' → logprob: -7.889631271362305
    5. 'tokens' → logprob: -7.889631271362305
    6. ' nums' → logprob: -8.014631271362305
    7. 'num' → logprob: -8.389631271362305
    8. 'digits' → logprob: -9.514631271362305
    9. '    
' → logprob: -9.639631271362305
    10. ' n' → logprob: -10.014631271362305

Token 489: ' parts' (ID: 7881)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.2673083543777466
    2. 'n' → logprob: -2.767308235168457
    3. 'numbers' → logprob: -2.767308235168457
    4. 'parts' (adapté à ' parts') → logprob: -3.642308235168457
    5. 'target' → logprob: -3.767308235168457
    6. 'tokens' → logprob: -4.392308235168457
    7. '   ' → logprob: -4.642308235168457
    8. 'data' → logprob: -4.642308235168457
    9. 'values' → logprob: -4.642308235168457
    10. 'expr' → logprob: -4.892308235168457

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510590255260468
    2. '=' → logprob: -4.387510776519775
    3. '=line' → logprob: -14.137510299682617
    4. '   ' → logprob: -16.637510299682617
    5. ',' → logprob: -17.137510299682617
    6. ')' → logprob: -17.387510299682617
    7. ' ' → logprob: -17.637510299682617
    8. ' =
' → logprob: -17.637510299682617
    9. '＝' → logprob: -17.762510299682617
    10. 'tokens' → logprob: -17.762510299682617

Token 491: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0008619115105830133
    2. 'list' → logprob: -7.750862121582031
    3. ' line' → logprob: -7.750862121582031
    4. '[line' → logprob: -14.625862121582031
    5. ' list' → logprob: -15.375862121582031
    6. '   ' → logprob: -16.37586212158203
    7. '[' → logprob: -17.25086212158203
    8. '(line' → logprob: -18.62586212158203
    9. '	line' → logprob: -18.75086212158203
    10. '=line' → logprob: -19.87586212158203

Token 492: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05443429946899414
    2. '().' → logprob: -3.179434299468994
    3. '.split' → logprob: -4.679434299468994
    4. '.' → logprob: -6.429434299468994
    5. '.rstrip' → logprob: -7.804434299468994
    6. ' .' → logprob: -11.179433822631836
    7. 'strip' → logprob: -11.554433822631836
    8. '   ' → logprob: -11.679433822631836
    9. '=' → logprob: -11.804433822631836
    10. '()' → logprob: -11.929433822631836

Token 493: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.302704761968926e-05
    2. '.split' → logprob: -9.875073432922363
    3. '()' → logprob: -10.750073432922363
    4. '()
' → logprob: -16.625072479248047
    5. '.' → logprob: -17.625072479248047
    6. ' ().' → logprob: -18.000072479248047
    7. ' .' → logprob: -18.250072479248047
    8. '   ' → logprob: -18.625072479248047
    9. 'split' → logprob: -18.750072479248047
    10. '=' → logprob: -19.125072479248047

Token 494: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.75
    3. '(split' → logprob: -18.625
    4. 'spl' → logprob: -19.625
    5. 'replace' → logprob: -20.875
    6. '.split' → logprob: -21.25
    7. 'strip' → logprob: -22.25
    8. 'rstrip' → logprob: -22.625
    9. 'rs' → logprob: -24.375
    10. 'plit' → logprob: -24.375

Token 495: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016742297448217869
    2. '('' → logprob: -6.876674175262451
    3. '()
' → logprob: -8.37667465209961
    4. '()[' → logprob: -9.00167465209961
    5. '(',' → logprob: -9.62667465209961
    6. '(' → logprob: -9.87667465209961
    7. '('='' → logprob: -10.25167465209961
    8. '('.')' → logprob: -10.87667465209961
    9. '())' → logprob: -11.12667465209961
    10. '(','' → logprob: -11.12667465209961

Token 496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35240986943244934
    2. 'nums' → logprob: -1.227409839630127
    3. ' nums' → logprob: -5.977409839630127
    4. 'numbers' → logprob: -6.852409839630127
    5. 'num' → logprob: -9.102410316467285
    6. 'n' → logprob: -9.477410316467285
    7. '```' → logprob: -9.977410316467285
    8. ' numbers' → logprob: -10.352410316467285
    9. 'if' → logprob: -10.602410316467285
    10. 'digits' → logprob: -10.602410316467285

Token 497: ' if' (ID: 538)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.025368493050336838
    2. 'numbers' → logprob: -4.025368690490723
    3. 'if' (adapté à ' if') → logprob: -5.025368690490723
    4. '   ' → logprob: -8.275368690490723
    5. 'digits' → logprob: -9.025368690490723
    6. 'n' → logprob: -9.150368690490723
    7. ' nums' → logprob: -10.150368690490723
    8. 'try' → logprob: -10.275368690490723
    9. 'num' → logprob: -10.525368690490723
    10. '    
' → logprob: -10.900368690490723

Token 498: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002668192028068006
    2. 'parts' → logprob: -8.250267028808594
    3. ' len' → logprob: -12.125267028808594
    4. '(len' → logprob: -17.125267028808594
    5. 'not' → logprob: -19.125267028808594
    6. ' parts' → logprob: -19.250267028808594
    7. 'all' → logprob: -19.250267028808594
    8. '	len' → logprob: -19.375267028808594
    9. '   ' → logprob: -19.625267028808594
    10. '=len' → logprob: -20.375267028808594

Token 499: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0003166353271808475
    2. ' parts' → logprob: -8.375316619873047
    3. 'parts' → logprob: -9.375316619873047
    4. ' (' → logprob: -14.250316619873047
    5. ' ==' → logprob: -15.750316619873047
    6. '   ' → logprob: -16.125316619873047
    7. '(' → logprob: -16.250316619873047
    8. '==' → logprob: -16.250316619873047
    9. ' ' → logprob: -17.125316619873047
    10. '(part' → logprob: -17.250316619873047

Token 500: ')!=' (ID: 86517)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8156781792640686
    2. '==' → logprob: -1.5656781196594238
    3. ')' → logprob: -1.6906781196594238
    4. ' !=' → logprob: -1.9406781196594238
    5. '!=' → logprob: -4.315678119659424
    6. ' <' → logprob: -5.315678119659424
    7. '<' → logprob: -6.565678119659424
    8. ' )' → logprob: -7.690678119659424
    9. ')==' → logprob: -7.815678119659424
    10. ')!=' → logprob: -9.815678596496582

Token 501: '4' (ID: 19)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.14312785863876343
    2. '4' → logprob: -2.018127918243408
    3. '5' → logprob: -7.893127918243408
    4. '8' → logprob: -10.51812744140625
    5. '10' → logprob: -11.45562744140625
    6. ' ' → logprob: -11.64312744140625
    7. '```' → logprob: -12.33062744140625
    8. '9' → logprob: -12.45562744140625
    9. '6' → logprob: -12.58062744140625
    10. '``' → logprob: -12.89312744140625

Token 502: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41206517815589905
    2. ' or' → logprob: -1.9120651483535767
    3. ':' → logprob: -2.037065267562866
    4. '   ' → logprob: -3.037065267562866
    5. '       ' → logprob: -4.662065029144287
    6. 'or' → logprob: -6.287065029144287
    7. 'continue' → logprob: -9.412065505981445
    8. ':return' → logprob: -9.787065505981445
    9. '    ' → logprob: -10.787065505981445
    10. ' continue' → logprob: -10.912065505981445

Token 503: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001992755103856325
    2. '       ' → logprob: -6.626992702484131
    3. 'continue' → logprob: -7.876992702484131
    4. ' continue' → logprob: -8.251993179321289
    5. '	continue' → logprob: -11.126993179321289
    6. 'print' → logprob: -12.501993179321289
    7. ' print' → logprob: -12.876993179321289
    8. ' ' → logprob: -13.376993179321289
    9. '   ' → logprob: -13.501993179321289
    10. '```' → logprob: -13.626993179321289

Token 504: ' continue' (ID: 4901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5089887976646423
    2. 'continue' (adapté à ' continue') → logprob: -1.008988857269287
    3. '   ' → logprob: -3.758988857269287
    4. ' continue' → logprob: -5.258988857269287
    5. ' print' → logprob: -6.008988857269287
    6. 'break' → logprob: -6.133988857269287
    7. '       ' → logprob: -7.508988857269287
    8. 'sys' → logprob: -7.508988857269287
    9. 'raise' → logprob: -10.758988380432129
    10. ' break' → logprob: -11.008988380432129

Token 505: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027257908135652542
    2. 'nums' → logprob: -3.6522579193115234
    3. '    
' → logprob: -7.652257919311523
    4. ' nums' → logprob: -8.777257919311523
    5. 'numbers' → logprob: -8.902257919311523
    6. 'num' → logprob: -9.777257919311523
    7. 'try' → logprob: -9.902257919311523
    8. '
' → logprob: -10.152257919311523
    9. 'n' → logprob: -10.277257919311523
    10. '   
' → logprob: -12.527257919311523

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10182522982358932
    2. 'nums' → logprob: -2.35182523727417
    3. ' nums' → logprob: -7.22682523727417
    4. '    
' → logprob: -8.476824760437012
    5. 'num' → logprob: -8.601824760437012
    6. 'numbers' → logprob: -8.601824760437012
    7. 'try' → logprob: -8.726824760437012
    8. 'n' → logprob: -8.976824760437012
    9. '
' → logprob: -11.726824760437012
    10. 'tokens' → logprob: -12.101824760437012

Token 507: ' a' (ID: 261)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.20265473425388336
    2. 'try' → logprob: -1.7026547193527222
    3. 'numbers' → logprob: -7.202654838562012
    4. '   ' → logprob: -8.327654838562012
    5. ' nums' → logprob: -8.952654838562012
    6. '    
' → logprob: -9.827654838562012
    7. ' try' → logprob: -10.202654838562012
    8. 'num' → logprob: -11.077654838562012
    9. 'n' → logprob: -11.827654838562012
    10. '```' → logprob: -12.202654838562012

Token 508: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9075611233711243
    2. ' =' → logprob: -1.1575610637664795
    3. ',b' → logprob: -1.7825610637664795
    4. 's' → logprob: -2.2825610637664795
    5. '=' → logprob: -5.157561302185059
    6. ',s' → logprob: -6.157561302185059
    7. ',a' → logprob: -6.532561302185059
    8. 'nums' → logprob: -6.907561302185059
    9. ',n' → logprob: -7.532561302185059
    10. ',num' → logprob: -7.907561302185059

Token 509: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.018167732283473015
    2. ',' → logprob: -4.018167495727539
    3. ' ,' → logprob: -11.643167495727539
    4. ',b' → logprob: -12.143167495727539
    5. ' =' → logprob: -13.268167495727539
    6. ',int' → logprob: -14.268167495727539
    7. ',e' → logprob: -14.893167495727539
    8. 'c' → logprob: -15.393167495727539
    9. '=' → logprob: -15.768167495727539
    10. ',C' → logprob: -16.01816749572754

Token 510: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -1.2233183042553719e-05
    2. ',' → logprob: -11.375012397766113
    3. ' ,' → logprob: -14.375012397766113
    4. 'd' → logprob: -16.375011444091797
    5. ',de' → logprob: -17.625011444091797
    6. ',c' → logprob: -17.875011444091797
    7. ',a' → logprob: -18.125011444091797
    8. ' =' → logprob: -18.375011444091797
    9. ',b' → logprob: -18.375011444091797
    10. '_,' → logprob: -18.375011444091797

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04869217425584793
    2. ' =' → logprob: -3.048692226409912
    3. '=int' → logprob: -9.173691749572754
    4. '=a' → logprob: -14.673691749572754
    5. '=list' → logprob: -15.173691749572754
    6. '=input' → logprob: -16.54869270324707
    7. '=parse' → logprob: -16.54869270324707
    8. 'a' → logprob: -16.79869270324707
    9. '=float' → logprob: -17.04869270324707
    10. 'int' → logprob: -17.54869270324707

Token 512: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0002668192028068006
    2. ' map' → logprob: -8.250267028808594
    3. '(map' → logprob: -12.250267028808594
    4. 'int' → logprob: -14.125267028808594
    5. '[int' → logprob: -17.125267028808594
    6. '   ' → logprob: -17.625267028808594
    7. '	map' → logprob: -18.875267028808594
    8. '[' → logprob: -19.000267028808594
    9. '  ' → logprob: -19.375267028808594
    10. 'list' → logprob: -19.500267028808594

Token 513: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031840058509260416
    2. '(int' → logprob: -5.753183841705322
    3. ' int' → logprob: -12.00318431854248
    4. '[int' → logprob: -16.378183364868164
    5. '=int' → logprob: -18.253183364868164
    6. 'str' → logprob: -18.253183364868164
    7. ',int' → logprob: -18.378183364868164
    8. '	int' → logprob: -18.503183364868164
    9. '<int' → logprob: -18.753183364868164
    10. '```' → logprob: -18.878183364868164

Token 514: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.28216078877449036
    2. 'parts' → logprob: -1.532160758972168
    3. ',' → logprob: -3.532160758972168
    4. ' parts' → logprob: -7.532160758972168
    5. ')' → logprob: -14.782160758972168
    6. '
' → logprob: -15.032160758972168
    7. '.parts' → logprob: -15.282160758972168
    8. '   ' → logprob: -15.407160758972168
    9. ' ,' → logprob: -15.532160758972168
    10. '_parts' → logprob: -15.782160758972168

Token 515: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.003636892419308424
    2. ' parts' → logprob: -5.628636837005615
    3. '(parts' → logprob: -10.378637313842773
    4. '   ' → logprob: -12.378637313842773
    5. ')' → logprob: -15.003637313842773
    6. 'part' → logprob: -15.253637313842773
    7. ' ' → logprob: -15.378637313842773
    8. '  ' → logprob: -16.003637313842773
    9. '
' → logprob: -16.003637313842773
    10. '           ' → logprob: -16.253637313842773

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.75001049041748
    3. '[' → logprob: -13.62501049041748
    4. ' )' → logprob: -14.37501049041748
    5. ')`' → logprob: -15.25001049041748
    6. '[:' → logprob: -15.50001049041748
    7. '))' → logprob: -16.250011444091797
    8. ')}' → logprob: -16.250011444091797
    9. ')return' → logprob: -16.750011444091797
    10. '   ' → logprob: -17.625011444091797

Token 517: '   ' (ID: 271)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.08290742337703705
    2. 'for' → logprob: -3.0829074382781982
    3. 'results' → logprob: -3.9579074382781982
    4. '   ' → logprob: -5.457907199859619
    5. 'result' → logprob: -6.082907199859619
    6. 'nums' → logprob: -6.207907199859619
    7. 'answers' → logprob: -6.582907199859619
    8. 'all' → logprob: -6.707907199859619
    9. 'solutions' → logprob: -6.832907199859619
    10. 'res' → logprob: -7.332907199859619

Token 518: ' if' (ID: 538)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.23544111847877502
    2. 'for' → logprob: -1.9854410886764526
    3. 'results' → logprob: -2.860441207885742
    4. 'best' → logprob: -5.610441207885742
    5. 'result' → logprob: -5.985441207885742
    6. 'target' → logprob: -6.110441207885742
    7. 'nums' → logprob: -6.235441207885742
    8. 'all' → logprob: -6.485441207885742
    9. 'numbers' → logprob: -6.735441207885742
    10. 'solutions' → logprob: -7.360441207885742

Token 519: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8918333053588867
    2. 'a' → logprob: -1.0168333053588867
    3. ' (' → logprob: -2.5168333053588867
    4. '(a' → logprob: -2.5168333053588867
    5. ' any' → logprob: -4.016833305358887
    6. ' abs' → logprob: -4.516833305358887
    7. '{' → logprob: -4.891833305358887
    8. ' len' → logprob: -5.141833305358887
    9. ' all' → logprob: -5.266833305358887
    10. ' {' → logprob: -5.766833305358887

Token 520: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36229997873306274
    2. ' +' → logprob: -2.112299919128418
    3. '==' → logprob: -2.362299919128418
    4. '+' → logprob: -3.612299919128418
    5. ' >' → logprob: -3.737299919128418
    6. ' <' → logprob: -4.737299919128418
    7. ' ' → logprob: -4.862299919128418
    8. ' in' → logprob: -5.237299919128418
    9. ' <=' → logprob: -5.612299919128418
    10. ' >=' → logprob: -5.987299919128418

Token 521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5774163007736206
    2. 'b' → logprob: -0.8274163007736206
    3. ' ' → logprob: -6.70241641998291
    4. ' b' → logprob: -8.70241641998291
    5. '7' → logprob: -10.82741641998291
    6. '1' → logprob: -11.32741641998291
    7. '100' → logprob: -11.95241641998291
    8. '99' → logprob: -12.07741641998291
    9. '24' → logprob: -12.32741641998291
    10. '9' → logprob: -12.45241641998291

Token 522: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20144988596439362
    2. 'and' → logprob: -1.7014498710632324
    3. ' or' → logprob: -10.45145034790039
    4. ' ' → logprob: -12.57645034790039
    5. '==' → logprob: -12.95145034790039
    6. ':' → logprob: -14.32645034790039
    7. '   ' → logprob: -14.70145034790039
    8. '	and' → logprob: -15.45145034790039
    9. ' ==' → logprob: -15.70145034790039
    10. 'or' → logprob: -16.20145034790039

Token 523: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012356207298580557
    2. ' b' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. ' ' → logprob: -18.000123977661133
    5. '	b' → logprob: -18.500123977661133
    6. '  ' → logprob: -19.000123977661133
    7. 'a' → logprob: -21.125123977661133
    8. '
' → logprob: -22.125123977661133
    9. ' ' → logprob: -22.125123977661133
    10. '    ' → logprob: -22.250123977661133

Token 524: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00016396844875998795
    2. ' ==' → logprob: -8.750164031982422
    3. '0' → logprob: -12.875164031982422
    4. '=' → logprob: -13.125164031982422
    5. '===' → logprob: -14.875164031982422
    6. 'c' → logprob: -15.125164031982422
    7. ']==' → logprob: -16.750164031982422
    8. '()==' → logprob: -17.125164031982422
    9. '==
' → logprob: -17.500164031982422
    10. ')==' → logprob: -17.500164031982422

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'a' → logprob: -14.750031471252441
    4. 'b' → logprob: -16.625032424926758
    5. 'c' → logprob: -18.000032424926758
    6. '۰' → logprob: -18.125032424926758
    7. '1' → logprob: -18.375032424926758
    8. '
' → logprob: -18.437532424926758
    9. '```' → logprob: -19.187532424926758
    10. '=' → logprob: -19.375032424926758

Token 526: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20160932838916779
    2. ' and' → logprob: -1.7016093730926514
    3. '==' → logprob: -8.57660961151123
    4. ' ' → logprob: -12.32660961151123
    5. '0' → logprob: -13.57660961151123
    6. ' ==' → logprob: -13.57660961151123
    7. '	and' → logprob: -15.70160961151123
    8. '===' → logprob: -16.326608657836914
    9. '<|end|>' → logprob: -16.826608657836914
    10. '&&' → logprob: -16.826608657836914

Token 527: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010099459905177355
    2. '0' → logprob: -7.251009941101074
    3. ' c' → logprob: -8.126009941101074
    4. ' ' → logprob: -12.376009941101074
    5. '  ' → logprob: -17.25101089477539
    6. '   ' → logprob: -17.50101089477539
    7. '	c' → logprob: -18.00101089477539
    8. '
' → logprob: -19.50101089477539
    9. 'and' → logprob: -20.50101089477539
    10. ')c' → logprob: -20.50101089477539

Token 528: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1398757123970427e-05
    2. ' ==' → logprob: -12.250011444091797
    3. '0' → logprob: -12.500011444091797
    4. '=' → logprob: -12.875011444091797
    5. '===' → logprob: -16.250011444091797
    6. '==
' → logprob: -16.500011444091797
    7. ']==' → logprob: -17.375011444091797
    8. '```' → logprob: -17.375011444091797
    9. '()==' → logprob: -17.750011444091797
    10. 'd' → logprob: -17.875011444091797

Token 529: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'and' → logprob: -17.500001907348633
    4. ' and' → logprob: -19.125001907348633
    5. '۰' → logprob: -19.625001907348633
    6. '```' → logprob: -20.000001907348633
    7. '  ' → logprob: -20.312501907348633
    8. '=' → logprob: -20.500001907348633
    9. '<|end|>' → logprob: -20.750001907348633
    10. '==' → logprob: -20.812501907348633

Token 530: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759949088096619
    2. ' and' → logprob: -0.8259949088096619
    3. ' ' → logprob: -10.825994491577148
    4. '==' → logprob: -10.825994491577148
    5. '0' → logprob: -11.075994491577148
    6. ' ==' → logprob: -15.825994491577148
    7. ' ' → logprob: -17.20099449157715
    8. '	and' → logprob: -17.20099449157715
    9. '```' → logprob: -17.70099449157715
    10. 'd' → logprob: -17.95099449157715

Token 531: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00019412329129409045
    2. ' d' → logprob: -8.750194549560547
    3. '0' → logprob: -10.250194549560547
    4. ' ' → logprob: -16.625194549560547
    5. '  ' → logprob: -18.000194549560547
    6. '	d' → logprob: -18.000194549560547
    7. '
' → logprob: -18.750194549560547
    8. '   ' → logprob: -19.250194549560547
    9. '_d' → logprob: -20.500194549560547
    10. ' ' → logprob: -20.750194549560547

Token 532: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.6166903151315637e-05
    2. ' ==' → logprob: -11.125016212463379
    3. '0' → logprob: -14.000016212463379
    4. '=' → logprob: -14.750016212463379
    5. '==
' → logprob: -16.750015258789062
    6. ']==' → logprob: -17.375015258789062
    7. ')==' → logprob: -17.500015258789062
    8. '()==' → logprob: -17.750015258789062
    9. '===' → logprob: -17.875015258789062
    10. '==(' → logprob: -18.500015258789062

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.875031471252441
    4. '  ' → logprob: -16.562532424926758
    5. '1' → logprob: -16.750032424926758
    6. '۰' → logprob: -17.062532424926758
    7. '```' → logprob: -17.562532424926758
    8. '<|end|>' → logprob: -17.687532424926758
    9. '=' → logprob: -17.812532424926758
    10. '-' → logprob: -18.500032424926758

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7272031903266907
    2. ':
' → logprob: -0.7272031903266907
    3. '   ' → logprob: -3.477203130722046
    4. '       ' → logprob: -5.977203369140625
    5. '):
' → logprob: -11.602203369140625
    6. '	break' → logprob: -11.977203369140625
    7. ' ' → logprob: -12.102203369140625
    8. ':
' → logprob: -12.102203369140625
    9. ' :
' → logprob: -12.477203369140625
    10. '  ' → logprob: -12.477203369140625

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017100441036745906
    2. '   ' → logprob: -6.376709938049316
    3. ' break' → logprob: -12.501709938049316
    4. 'break' → logprob: -13.001709938049316
    5. '           ' → logprob: -13.751709938049316
    6. '     ' → logprob: -14.626709938049316
    7. '	break' → logprob: -15.376709938049316
    8. '      ' → logprob: -15.751709938049316
    9. '```' → logprob: -17.001710891723633
    10. '	   ' → logprob: -17.251710891723633

Token 536: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0071032168343663216
    2. ' break' → logprob: -5.007103443145752
    3. '       ' → logprob: -8.007102966308594
    4. '	break' → logprob: -10.132102966308594
    5. '   ' → logprob: -11.132102966308594
    6. '
' → logprob: -16.257102966308594
    7. '_break' → logprob: -16.257102966308594
    8. '           ' → logprob: -17.132102966308594
    9. '        
' → logprob: -18.007102966308594
    10. 'sys' → logprob: -18.132102966308594

Token 537: '
' (ID: 198)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.19446539878845215
    2. '   ' → logprob: -2.444465398788452
    3. 'target' → logprob: -3.944465398788452
    4. 'solutions' → logprob: -4.194465637207031
    5. 'nums' → logprob: -4.569465637207031
    6. 'results' → logprob: -4.569465637207031
    7. 'for' → logprob: -4.694465637207031
    8. 'answers' → logprob: -4.819465637207031
    9. 'all' → logprob: -5.444465637207031
    10. 'possible' → logprob: -5.944465637207031

Token 538: '   ' (ID: 271)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.20730650424957275
    2. '   ' → logprob: -2.832306385040283
    3. 'for' → logprob: -2.832306385040283
    4. 'results' → logprob: -3.207306385040283
    5. 'nums' → logprob: -4.707306385040283
    6. 'answers' → logprob: -4.957306385040283
    7. 'result' → logprob: -5.832306385040283
    8. 'target' → logprob: -5.832306385040283
    9. 'solutions' → logprob: -5.957306385040283
    10. 'all' → logprob: -6.832306385040283

Token 539: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.14727738499641418
    2. 'for' → logprob: -2.897277355194092
    3. 'results' → logprob: -3.022277355194092
    4. '   ' → logprob: -4.522277355194092
    5. 'answers' → logprob: -5.022277355194092
    6. 'solutions' → logprob: -5.272277355194092
    7. 'nums' → logprob: -5.647277355194092
    8. 'result' → logprob: -5.897277355194092
    9. 'res' → logprob: -7.022277355194092
    10. 'all' → logprob: -7.397277355194092

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10024387389421463
    2. ' =' → logprob: -2.3502438068389893
    3. '=False' → logprob: -10.22524356842041
    4. '=
' → logprob: -14.97524356842041
    5. '_=' → logprob: -15.10024356842041
    6. '=True' → logprob: -15.22524356842041
    7. ' ' → logprob: -17.100244522094727
    8. '=

' → logprob: -17.350244522094727
    9. '_' → logprob: -17.600244522094727
    10. ' =
' → logprob: -17.975244522094727

Token 541: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.002476016292348504
    2. ' False' → logprob: -6.002476215362549
    3. 'set' → logprob: -14.87747573852539
    4. '[]' → logprob: -17.00247573852539
    5. '(False' → logprob: -18.12747573852539
    6. '   ' → logprob: -18.50247573852539
    7. '0' → logprob: -19.87747573852539
    8. 'True' → logprob: -19.87747573852539
    9. '=False' → logprob: -20.00247573852539
    10. 'None' → logprob: -20.12747573852539

Token 542: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1697932779788971
    2. '
' → logprob: -2.6697933673858643
    3. ' for' → logprob: -3.1697933673858643
    4. 'for' → logprob: -3.2947933673858643
    5. '    
' → logprob: -5.044793128967285
    6. '  
' → logprob: -7.794793128967285
    7. '<|end|>' → logprob: -8.544793128967285
    8. '   
' → logprob: -8.669793128967285
    9. '	for' → logprob: -8.919793128967285
    10. '```' → logprob: -9.169793128967285

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026163244619965553
    2. 'for' → logprob: -6.2526164054870605
    3. ' for' → logprob: -7.3776164054870605
    4. '    
' → logprob: -10.252615928649902
    5. '
' → logprob: -10.627615928649902
    6. '	for' → logprob: -14.127615928649902
    7. 'nums' → logprob: -14.502615928649902
    8. '   ' → logprob: -14.502615928649902
    9. '  
' → logprob: -15.627615928649902
    10. '        
' → logprob: -15.627615928649902

Token 544: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002268254989758134
    2. 'nums' → logprob: -6.252268314361572
    3. 'digits' → logprob: -9.127267837524414
    4. 'numbers' → logprob: -9.752267837524414
    5. ' for' → logprob: -9.877267837524414
    6. 'all' → logprob: -10.252267837524414
    7. 'results' → logprob: -10.877267837524414
    8. 'ops' → logprob: -10.877267837524414
    9. '   ' → logprob: -11.252267837524414
    10. 'seen' → logprob: -11.752267837524414

Token 545: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.03549537435173988
    2. 'num' → logprob: -3.4104952812194824
    3. 'perm' → logprob: -6.910495281219482
    4. 'ops' → logprob: -7.410495281219482
    5. ' nums' → logprob: -9.03549575805664
    6. 'p' → logprob: -10.16049575805664
    7. 'ns' → logprob: -10.53549575805664
    8. 'n' → logprob: -11.03549575805664
    9. 'op' → logprob: -11.41049575805664
    10. 'vals' → logprob: -11.66049575805664

Token 546: ' in' (ID: 306)
  Prédit: '_perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -0.7268685102462769
    2. ' in' → logprob: -1.2268685102462769
    3. 'perm' → logprob: -1.6018685102462769
    4. '_per' → logprob: -4.476868629455566
    5. 'per' → logprob: -4.851868629455566
    6. '_' → logprob: -6.851868629455566
    7. 'p' → logprob: -6.851868629455566
    8. '_seq' → logprob: -8.851868629455566
    9. 's' → logprob: -8.976868629455566
    10. '_tuple' → logprob: -9.976868629455566

Token 547: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00045712877181358635
    2. 'set' → logprob: -7.750457286834717
    3. ' permutations' → logprob: -10.625456809997559
    4. ' set' → logprob: -13.750456809997559
    5. '   ' → logprob: -14.500456809997559
    6. '	per' → logprob: -15.250456809997559
    7. 'perm' → logprob: -15.500456809997559
    8. '(per' → logprob: -16.000457763671875
    9. '{' → logprob: -16.875457763671875
    10. '.per' → logprob: -18.000457763671875

Token 548: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.029796313494443893
    2. '((' → logprob: -3.5297963619232178
    3. '(' → logprob: -10.029796600341797
    4. '   ' → logprob: -14.404796600341797
    5. '(([' → logprob: -15.029796600341797
    6. '[' → logprob: -15.154796600341797
    7. ' ([' → logprob: -15.404796600341797
    8. '(nums' → logprob: -15.904796600341797
    9. '(range' → logprob: -16.279796600341797
    10. '(parts' → logprob: -17.154796600341797

Token 549: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '	a' → logprob: -20.375003814697266
    5. '
' → logprob: -21.000003814697266
    6. ' ' → logprob: -21.250003814697266
    7. '(a' → logprob: -21.375003814697266
    8. ',a' → logprob: -21.750003814697266
    9. '[a' → logprob: -22.000003814697266
    10. '"a' → logprob: -22.000003814697266

Token 550: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.008634423837065697
    2. ',' → logprob: -4.758634567260742
    3. 'b' → logprob: -11.383634567260742
    4. ' ,' → logprob: -11.758634567260742
    5. ',c' → logprob: -15.383634567260742
    6. ',a' → logprob: -16.883634567260742
    7. ',d' → logprob: -17.008634567260742
    8. ',
' → logprob: -17.133634567260742
    9. ',n' → logprob: -17.258634567260742
    10. ' b' → logprob: -17.258634567260742

Token 551: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.00028016636497341096
    2. ',' → logprob: -8.500280380249023
    3. 'c' → logprob: -9.500280380249023
    4. ' ,' → logprob: -13.250280380249023
    5. ' c' → logprob: -17.000280380249023
    6. ',C' → logprob: -18.000280380249023
    7. '	c' → logprob: -18.750280380249023
    8. ',b' → logprob: -18.875280380249023
    9. '   ' → logprob: -19.375280380249023
    10. ',
' → logprob: -20.000280380249023

Token 552: ',d' (ID: 26159)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.001530812936834991
    2. 'c' → logprob: -6.501530647277832
    3. ',' → logprob: -10.501530647277832
    4. ' c' → logprob: -14.501530647277832
    5. ' ,' → logprob: -14.626530647277832
    6. '	c' → logprob: -17.87653160095215
    7. ',C' → logprob: -18.25153160095215
    8. '   ' → logprob: -18.25153160095215
    9. ' ' → logprob: -18.50153160095215
    10. ',a' → logprob: -19.37653160095215

Token 553: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.06023085489869118
    2. '],' → logprob: -3.1852309703826904
    3. ']' → logprob: -4.560230731964111
    4. ']):
' → logprob: -5.185230731964111
    5. ',' → logprob: -7.310230731964111
    6. ' ]' → logprob: -9.18523120880127
    7. ']:' → logprob: -9.81023120880127
    8. '):' → logprob: -9.93523120880127
    9. '   ' → logprob: -10.68523120880127
    10. '(' → logprob: -10.81023120880127

Token 554: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0314964056015015
    2. ' for' → logprob: -1.0314964056015015
    3. '       ' → logprob: -1.2814964056015015
    4. 'for' → logprob: -4.781496524810791
    5. '	for' → logprob: -7.031496524810791
    6. ' ' → logprob: -10.031496047973633
    7. ':
' → logprob: -10.406496047973633
    8. '    ' → logprob: -10.531496047973633
    9. '     ' → logprob: -11.281496047973633
    10. ',' → logprob: -11.656496047973633

Token 555: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.40331771969795227
    2. ' for' → logprob: -1.1533176898956299
    3. '           ' → logprob: -4.153317928314209
    4. '   ' → logprob: -8.15331745147705
    5. '       ' → logprob: -8.15331745147705
    6. '	for' → logprob: -11.40331745147705
    7. ' ' → logprob: -12.15331745147705
    8. '
' → logprob: -12.27831745147705
    9. '               ' → logprob: -14.02831745147705
    10. 'product' → logprob: -14.27831745147705

Token 556: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.005362179130315781
    2. 'op' → logprob: -5.630362033843994
    3. ' ops' → logprob: -6.380362033843994
    4. ' op' → logprob: -11.005362510681152
    5. 'opers' → logprob: -11.255362510681152
    6. '_ops' → logprob: -11.380362510681152
    7. 'operators' → logprob: -11.880362510681152
    8. 'opr' → logprob: -12.005362510681152
    9. '.ops' → logprob: -13.255362510681152
    10. '(op' → logprob: -13.505362510681152

Token 557: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.15419362485408783
    2. ' in' → logprob: -2.654193639755249
    3. 'seq' → logprob: -2.904193639755249
    4. 'in' → logprob: -4.27919340133667
    5. '_' → logprob: -6.40419340133667
    6. '_sequence' → logprob: -7.40419340133667
    7. 's' → logprob: -7.40419340133667
    8. 'combo' → logprob: -8.404193878173828
    9. '_combo' → logprob: -8.654193878173828
    10. 'Seq' → logprob: -8.904193878173828

Token 558: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4742929935455322
    2. 'in' → logprob: -0.9742929935455322
    3. 'product' → logprob: -9.349292755126953
    4. '   ' → logprob: -10.099292755126953
    5. 's' → logprob: -11.474292755126953
    6. 'ops' → logprob: -11.474292755126953
    7. 'prod' → logprob: -11.474292755126953
    8. ' ' → logprob: -11.849292755126953
    9. '```' → logprob: -12.224292755126953
    10. '    ' → logprob: -12.224292755126953

Token 559: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.0005234848940744996
    2. ' product' → logprob: -7.750523567199707
    3. 'per' → logprob: -9.375523567199707
    4. '(product' → logprob: -12.250523567199707
    5. 'products' → logprob: -14.125523567199707
    6. '[' → logprob: -14.250523567199707
    7. 'list' → logprob: -14.500523567199707
    8. '	product' → logprob: -14.750523567199707
    9. '.product' → logprob: -15.500523567199707
    10. 'ops' → logprob: -16.25052261352539

Token 560: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13510127365589142
    2. '([' → logprob: -2.385101318359375
    3. '[' → logprob: -4.010101318359375
    4. '(['' → logprob: -4.260101318359375
    5. 'ops' → logprob: -6.385101318359375
    6. '['' → logprob: -9.260101318359375
    7. '('' → logprob: -9.635101318359375
    8. '(*' → logprob: -9.760101318359375
    9. '(op' → logprob: -10.510101318359375
    10. '((' → logprob: -10.760101318359375

Token 561: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.16054651141166687
    2. '[' → logprob: -1.9105465412139893
    3. '['' → logprob: -8.53554630279541
    4. '(' → logprob: -10.28554630279541
    5. ' [' → logprob: -10.91054630279541
    6. ' ops' → logprob: -11.16054630279541
    7. '[*' → logprob: -11.28554630279541
    8. '.ops' → logprob: -11.78554630279541
    9. '([' → logprob: -12.03554630279541
    10. '   ' → logprob: -12.66054630279541

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6346789598464966
    2. 'repeat' → logprob: -0.7596789598464966
    3. '_repeat' → logprob: -7.509678840637207
    4. 'Repeat' → logprob: -7.884678840637207
    5. ',['' → logprob: -8.134678840637207
    6. ' repeat' → logprob: -8.259678840637207
    7. '.repeat' → logprob: -8.384678840637207
    8. '['' → logprob: -9.134678840637207
    9. ' ,' → logprob: -9.509678840637207
    10. 'ops' → logprob: -10.134678840637207

Token 563: ' repeat' (ID: 22962)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00862887967377901
    2. 'repeat' → logprob: -4.758628845214844
    3. ' ops' → logprob: -11.633628845214844
    4. ' repeat' → logprob: -12.258628845214844
    5. 'Repeat' → logprob: -15.508628845214844
    6. 'OPS' → logprob: -15.758628845214844
    7. '   ' → logprob: -15.883628845214844
    8. ' ' → logprob: -17.258628845214844
    9. '_repeat' → logprob: -17.383628845214844
    10. '.ops' → logprob: -17.508628845214844

Token 564: '=' (ID: 28)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00018577903392724693
    2. '=' → logprob: -8.7501859664917
    3. '(' → logprob: -10.6251859664917
    4. ' ' → logprob: -12.7501859664917
    5. '```' → logprob: -17.875185012817383
    6. '   ' → logprob: -20.125185012817383
    7. '³' → logprob: -20.375185012817383
    8. '{' → logprob: -20.500185012817383
    9. '۳' → logprob: -21.000185012817383
    10. '
' → logprob: -21.125185012817383

Token 565: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '```' → logprob: -19.375001907348633
    5. '۳' → logprob: -19.500001907348633
    6. '
' → logprob: -20.375001907348633
    7. '３' → logprob: -21.000001907348633
    8. '৩' → logprob: -21.250001907348633
    9. '  ' → logprob: -21.562501907348633
    10. '३' → logprob: -21.687501907348633

Token 566: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3880673050880432
    2. '):' → logprob: -1.1380672454833984
    3. '           ' → logprob: -7.263067245483398
    4. ':' → logprob: -8.263067245483398
    5. '       ' → logprob: -8.763067245483398
    6. '():
' → logprob: -10.638067245483398
    7. '):
' → logprob: -10.763067245483398
    8. ':
' → logprob: -11.138067245483398
    9. '   ' → logprob: -12.263067245483398
    10. '                   ' → logprob: -12.638067245483398

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023923002183437347
    2. '       ' → logprob: -3.898922920227051
    3. '
' → logprob: -5.773922920227051
    4. '        
' → logprob: -9.77392292022705
    5. ' if' → logprob: -10.02392292022705
    6. '```' → logprob: -10.02392292022705
    7. '            
' → logprob: -10.77392292022705
    8. 'if' → logprob: -10.89892292022705
    9. '<|end|>' → logprob: -11.14892292022705
    10. '   ' → logprob: -11.27392292022705

Token 568: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3572757244110107
    2. 'expr' → logprob: -1.3572757244110107
    3. 'result' → logprob: -2.1072757244110107
    4. ' if' → logprob: -2.3572757244110107
    5. ' result' → logprob: -2.4822757244110107
    6. ' expr' → logprob: -2.6072757244110107
    7. ' expression' → logprob: -3.6072757244110107
    8. 'if' → logprob: -3.7322757244110107
    9. ' for' → logprob: -3.9822757244110107
    10. 'expression' → logprob: -4.23227596282959

Token 569: ' expr' (ID: 30206)
  Prédit: ' expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.6364342570304871
    2. 'expr' → logprob: -0.7614342570304871
    3. '_,' → logprob: -6.136434078216553
    4. '_' → logprob: -7.261434078216553
    5. '_expr' → logprob: -8.136434555053711
    6. ' _' → logprob: -8.261434555053711
    7. '```' → logprob: -8.761434555053711
    8. ' _,' → logprob: -8.761434555053711
    9. 'exp' → logprob: -10.261434555053711
    10. '(expr' → logprob: -10.636434555053711

Token 570: '_s' (ID: 1278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063267904333770275
    2. '_str' → logprob: -5.756326675415039
    3. 'str' → logprob: -7.256326675415039
    4. 's' → logprob: -7.381326675415039
    5. '_string' → logprob: -7.381326675415039
    6. 'string' → logprob: -8.131326675415039
    7. 'expr' → logprob: -8.256326675415039
    8. '_text' → logprob: -8.381326675415039
    9. ' ,' → logprob: -9.631326675415039
    10. ',text' → logprob: -9.631326675415039

Token 571: ',' (ID: 11)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.033943045884370804
    2. 'tring' → logprob: -4.033943176269531
    3. ',' → logprob: -4.158943176269531
    4. ',tr' → logprob: -11.283943176269531
    5. 'ring' → logprob: -11.658943176269531
    6. 'trs' → logprob: -12.033943176269531
    7. 't' → logprob: -12.908943176269531
    8. 'str' → logprob: -13.033943176269531
    9. 'trin' → logprob: -13.033943176269531
    10. ' in' → logprob: -13.158943176269531

Token 572: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0557740926742554
    2. 'value' → logprob: -1.0557740926742554
    3. 'result' → logprob: -1.3057740926742554
    4. 'expr' → logprob: -3.680774211883545
    5. 'res' → logprob: -4.930774211883545
    6. ' val' → logprob: -7.805774211883545
    7. ' value' → logprob: -8.180773735046387
    8. ' result' → logprob: -10.305773735046387
    9. ' expr' → logprob: -10.430773735046387
    10. '_val' → logprob: -12.180773735046387

Token 573: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891688495874405
    2. 'in' → logprob: -2.5789167881011963
    3. '           ' → logprob: -11.578916549682617
    4. 'alue' → logprob: -12.078916549682617
    5. ',' → logprob: -12.453916549682617
    6. '   ' → logprob: -13.328916549682617
    7. 'ue' → logprob: -13.453916549682617
    8. '       ' → logprob: -13.953916549682617
    9. ' ' → logprob: -14.328916549682617
    10. 'ues' → logprob: -14.703916549682617

Token 574: ' expressions' (ID: 43578)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -1.3306015716807451e-05
    2. ' expressions' → logprob: -11.25001335144043
    3. '(express' → logprob: -15.25001335144043
    4. 'values' → logprob: -20.00001335144043
    5. 'expr' → logprob: -20.37501335144043
    6. 'expression' → logprob: -20.87501335144043
    7. ' express' → logprob: -21.25001335144043
    8. '```' → logprob: -21.87501335144043
    9. 'expl' → logprob: -22.12501335144043
    10. '   ' → logprob: -22.50001335144043

Token 575: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.0003478593716863543
    2. '(per' → logprob: -8.000348091125488
    3. '((' → logprob: -12.500348091125488
    4. '(' → logprob: -13.000348091125488
    5. '(numbers' → logprob: -13.125348091125488
    6. '(num' → logprob: -13.500348091125488
    7. 'nums' → logprob: -13.625348091125488
    8. ' (' → logprob: -13.750348091125488
    9. ' nums' → logprob: -15.625348091125488
    10. '   ' → logprob: -15.625348091125488

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014788919128477573
    2. '(' → logprob: -4.26478910446167
    3. ' ,' → logprob: -8.139788627624512
    4. '           ' → logprob: -8.514788627624512
    5. 'ops' → logprob: -9.889788627624512
    6. '               ' → logprob: -10.014788627624512
    7. '          ' → logprob: -11.889788627624512
    8. '                   ' → logprob: -12.514788627624512
    9. '       ' → logprob: -12.639788627624512
    10. '.ops' → logprob: -12.639788627624512

Token 577: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00010986098641296849
    2. ' ops' → logprob: -9.125109672546387
    3. '[' → logprob: -15.250109672546387
    4. '.ops' → logprob: -15.250109672546387
    5. '   ' → logprob: -16.250110626220703
    6. '_ops' → logprob: -16.375110626220703
    7. 'op' → logprob: -16.500110626220703
    8. '           ' → logprob: -16.750110626220703
    9. '       ' → logprob: -17.250110626220703
    10. '```' → logprob: -17.750110626220703

Token 578: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.00038145645521581173
    2. 'seq' → logprob: -7.8753814697265625
    3. 's' → logprob: -14.125381469726562
    4. 'Seq' → logprob: -15.375381469726562
    5. '_eq' → logprob: -15.750381469726562
    6. '-se' → logprob: -16.625381469726562
    7. '_SEQ' → logprob: -16.750381469726562
    8. 'q' → logprob: -17.375381469726562
    9. ')' → logprob: -17.500381469726562
    10. '(seq' → logprob: -17.625381469726562

Token 579: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.545506477355957
    2. '):
' → logprob: -1.670506477355957
    3. ':' → logprob: -2.045506477355957
    4. '           ' → logprob: -3.045506477355957
    5. ':
' → logprob: -3.295506477355957
    6. '):' → logprob: -4.420506477355957
    7. '():
' → logprob: -5.295506477355957
    8. '                       ' → logprob: -8.170506477355957
    9. '       ' → logprob: -8.420506477355957
    10. '                   ' → logprob: -8.670506477355957

Token 580: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011951648048125207
    2. ' if' → logprob: -9.25011920928955
    3. '           ' → logprob: -11.50011920928955
    4. '                   ' → logprob: -12.75011920928955
    5. '	           ' → logprob: -13.12511920928955
    6. '<|end|>' → logprob: -13.12511920928955
    7. '                               ' → logprob: -13.37511920928955
    8. 'if' → logprob: -13.62511920928955
    9. '```' → logprob: -14.12511920928955
    10. '                       ' → logprob: -14.37511920928955

Token 581: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.258605420589447
    2. '               ' → logprob: -1.6336054801940918
    3. '                   ' → logprob: -4.008605480194092
    4. 'if' (adapté à ' if') → logprob: -4.258605480194092
    5. '   ' → logprob: -8.133605003356934
    6. '                ' → logprob: -10.758605003356934
    7. '           ' → logprob: -11.758605003356934
    8. '       ' → logprob: -12.258605003356934
    9. ' ' → logprob: -12.633605003356934
    10. '	if' → logprob: -12.758605003356934

Token 582: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5963064432144165
    2. 'val' → logprob: -0.9713064432144165
    3. 'abs' → logprob: -3.346306324005127
    4. ' abs' → logprob: -3.346306324005127
    5. 'int' → logprob: -9.471306800842285
    6. ' int' → logprob: -10.096306800842285
    7. 'round' → logprob: -11.846306800842285
    8. ' round' → logprob: -12.346306800842285
    9. '(val' → logprob: -12.596306800842285
    10. '   ' → logprob: -13.471306800842285

Token 583: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693503499031067
    2. '==' → logprob: -2.1269350051879883
    3. ')==' → logprob: -13.001935005187988
    4. ' ===' → logprob: -13.876935005187988
    5. '===' → logprob: -13.876935005187988
    6. '()==' → logprob: -13.876935005187988
    7. ' ' → logprob: -14.001935005187988
    8. ']==' → logprob: -15.251935005187988
    9. '=' → logprob: -15.876935005187988
    10. ' ' → logprob: -16.001935958862305

Token 584: ' ' (ID: 220)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.004816953558474779
    2. '10' → logprob: -5.379817008972168
    3. '42' → logprob: -9.629817008972168
    4. 'target' → logprob: -9.879817008972168
    5. ' ' → logprob: -10.629817008972168
    6. '23' → logprob: -11.004817008972168
    7. '21' → logprob: -11.629817008972168
    8. '```' → logprob: -12.129817008972168
    9. '0' → logprob: -12.379817008972168
    10. '``' → logprob: -12.379817008972168

Token 585: '10' (ID: 702)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.0024138230364769697
    2. '10' → logprob: -6.127413749694824
    3. 'target' → logprob: -9.627413749694824
    4. '23' → logprob: -10.002413749694824
    5. '21' → logprob: -10.127413749694824
    6. '7' → logprob: -10.502413749694824
    7. '42' → logprob: -10.752413749694824
    8. '0' → logprob: -11.127413749694824
    9. 'int' → logprob: -13.127413749694824
    10. 'TARGET' → logprob: -13.252413749694824

Token 586: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39056822657585144
    2. ':' → logprob: -1.1405682563781738
    3. ' and' → logprob: -5.640568256378174
    4. 'and' → logprob: -9.640567779541016
    5. ' :
' → logprob: -10.890567779541016
    6. ':
' → logprob: -11.015567779541016
    7. '):
' → logprob: -11.390567779541016
    8. ' :' → logprob: -12.140567779541016
    9. ':return' → logprob: -12.140567779541016
    10. ':

' → logprob: -12.265567779541016

Token 587: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003265255654696375
    2. '                    
' → logprob: -9.500326156616211
    3. ':' → logprob: -9.625326156616211
    4. ':
' → logprob: -9.875326156616211
    5. '                       ' → logprob: -10.125326156616211
    6. '               ' → logprob: -10.500326156616211
    7. '
' → logprob: -11.125326156616211
    8. '                  ' → logprob: -11.875326156616211
    9. '                           ' → logprob: -11.875326156616211
    10. ' found' → logprob: -12.250326156616211

Token 588: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2057286500930786
    2. ' print' → logprob: -1.7057286500930786
    3. '                   ' → logprob: -5.455728530883789
    4. '   ' → logprob: -10.830728530883789
    5. '               ' → logprob: -12.080728530883789
    6. '                       ' → logprob: -12.455728530883789
    7. '	print' → logprob: -13.580728530883789
    8. '       ' → logprob: -13.955728530883789
    9. '           ' → logprob: -14.205728530883789
    10. ' ' → logprob: -14.455728530883789

Token 589: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22028784453868866
    2. 'not' → logprob: -1.720287799835205
    3. ' found' → logprob: -4.720287799835205
    4. 'found' → logprob: -4.720287799835205
    5. ' True' → logprob: -7.845287799835205
    6. 'True' → logprob: -8.095288276672363
    7. 'expr' → logprob: -9.720288276672363
    8. ' expr' → logprob: -10.720288276672363
    9. '(not' → logprob: -11.095288276672363
    10. 'print' → logprob: -11.345288276672363

Token 590: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.001368807745166123
    2. 'expr' → logprob: -6.876368999481201
    3. '(' → logprob: -9.001368522644043
    4. ' (' → logprob: -9.751368522644043
    5. '(found' → logprob: -10.001368522644043
    6. '(sys' → logprob: -10.376368522644043
    7. '(set' → logprob: -10.876368522644043
    8. ' expr' → logprob: -11.376368522644043
    9. 'found' → logprob: -11.501368522644043
    10. 's' → logprob: -12.001368522644043

Token 591: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00048656106810085475
    2. ')' → logprob: -8.125486373901367
    3. '(' → logprob: -9.125486373901367
    4. 's' → logprob: -10.375486373901367
    5. '(_' → logprob: -10.750486373901367
    6. '(expr' → logprob: -12.125486373901367
    7. ')==' → logprob: -12.500486373901367
    8. '[' → logprob: -13.000486373901367
    9. '==' → logprob: -13.125486373901367
    10. ')_' → logprob: -13.500486373901367

Token 592: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15409010648727417
    2. ' <=' → logprob: -2.654090166091919
    3. '<=' → logprob: -4.02908992767334
    4. ' ==' → logprob: -4.15408992767334
    5. ')<=' → logprob: -4.15408992767334
    6. ')==' → logprob: -4.40408992767334
    7. '==' → logprob: -4.90408992767334
    8. ' )' → logprob: -6.15408992767334
    9. '.strip' → logprob: -7.02908992767334
    10. ')>=' → logprob: -8.90408992767334

Token 593: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3814876973628998
    2. ' <=' → logprob: -1.6314877271652222
    3. '==' → logprob: -2.2564876079559326
    4. '<=' → logprob: -4.256487846374512
    5. ' >=' → logprob: -7.131487846374512
    6. ')' → logprob: -7.256487846374512
    7. ')==' → logprob: -8.006487846374512
    8. ' >' → logprob: -8.381487846374512
    9. '>' → logprob: -8.506487846374512
    10. '>=' → logprob: -8.631487846374512

Token 594: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -1.2004233598709106
    2. '50' → logprob: -1.2004233598709106
    3. '20' → logprob: -1.5754233598709106
    4. '29' → logprob: -2.200423240661621
    5. '40' → logprob: -3.700423240661621
    6. '18' → logprob: -4.450423240661621
    7. '100' → logprob: -4.450423240661621
    8. '25' → logprob: -5.075423240661621
    9. '27' → logprob: -5.325423240661621
    10. '28' → logprob: -5.450423240661621

Token 595: '102' (ID: 7672)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -0.8722824454307556
    2. '50' → logprob: -1.3722825050354004
    3. '29' → logprob: -2.2472825050354004
    4. '20' → logprob: -2.6222825050354004
    5. '40' → logprob: -2.8722825050354004
    6. '25' → logprob: -4.3722825050354
    7. '27' → logprob: -4.4972825050354
    8. '28' → logprob: -4.6222825050354
    9. '31' → logprob: -4.6222825050354
    10. '100' → logprob: -4.7472825050354

Token 596: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0014890312450006604
    2. ':' → logprob: -7.126489162445068
    3. '0' → logprob: -8.75148868560791
    4. '   ' → logprob: -8.87648868560791
    5. '```' → logprob: -9.50148868560791
    6. ' and' → logprob: -9.62648868560791
    7. 'print' → logprob: -9.87648868560791
    8. ' ' → logprob: -10.37648868560791
    9. '       ' → logprob: -10.50148868560791
    10. 'and' → logprob: -10.62648868560791

Token 597: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7636154294013977
    2. ':' → logprob: -1.388615369796753
    3. ':
' → logprob: -1.388615369796753
    4. 'and' → logprob: -3.513615369796753
    5. '                   ' → logprob: -5.763615608215332
    6. '                       ' → logprob: -6.263615608215332
    7. ' :
' → logprob: -9.638615608215332
    8. '               ' → logprob: -10.013615608215332
    9. '                           ' → logprob: -10.388615608215332
    10. ' :' → logprob: -10.638615608215332

Token 598: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09231218695640564
    2. '                       ' → logprob: -2.4673120975494385
    3. 'print' → logprob: -6.467312335968018
    4. ' print' → logprob: -6.592312335968018
    5. '               ' → logprob: -8.71731185913086
    6. '       ' → logprob: -8.96731185913086
    7. '           ' → logprob: -9.96731185913086
    8. '```' → logprob: -11.09231185913086
    9. '
' → logprob: -11.21731185913086
    10. '   ' → logprob: -11.46731185913086

Token 599: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08793123811483383
    2. ' print' → logprob: -2.5879311561584473
    3. '                   ' → logprob: -5.212931156158447
    4. '                       ' → logprob: -5.837931156158447
    5. '   ' → logprob: -7.837931156158447
    6. '                           ' → logprob: -8.587931632995605
    7. '               ' → logprob: -11.087931632995605
    8. '           ' → logprob: -11.087931632995605
    9. '       ' → logprob: -11.087931632995605
    10. '	print' → logprob: -12.587931632995605

Token 600: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -5.438573680294212e-06
    2. '(f' → logprob: -12.250005722045898
    3. 'expr' → logprob: -14.250005722045898
    4. '(express' → logprob: -18.0000057220459
    5. '(expression' → logprob: -18.1250057220459
    6. '(' → logprob: -18.3750057220459
    7. '(eval' → logprob: -18.8750057220459
    8. '("' → logprob: -19.7500057220459
    9. ' expr' → logprob: -20.0000057220459
    10. '("("' → logprob: -20.2500057220459

Token 601: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.625
    3. ')' → logprob: -17.0
    4. ' _' → logprob: -19.875
    5. '(_' → logprob: -20.25
    6. '(' → logprob: -20.375
    7. ')_' → logprob: -20.625
    8. '(s' → logprob: -21.125
    9. '_' → logprob: -21.625
    10. '   ' → logprob: -22.125

Token 602: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0028695426881313324
    2. ')' → logprob: -5.877869606018066
    3. '                   ' → logprob: -10.127869606018066
    4. '=' → logprob: -11.252869606018066
    5. ')
' → logprob: -12.502869606018066
    6. ' )
' → logprob: -12.877869606018066
    7. '"' → logprob: -13.877869606018066
    8. '.replace' → logprob: -14.127869606018066
    9. '                       ' → logprob: -14.252869606018066
    10. ')

' → logprob: -14.627869606018066

Token 603: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0013758298009634018
    2. '                   ' → logprob: -7.126375675201416
    3. 'exit' → logprob: -8.001376152038574
    4. 'import' → logprob: -9.876376152038574
    5. '                           ' → logprob: -10.251376152038574
    6. '                        
' → logprob: -10.626376152038574
    7. ' exit' → logprob: -10.751376152038574
    8. ',' → logprob: -11.126376152038574
    9. '           ' → logprob: -11.501376152038574
    10. '
' → logprob: -11.501376152038574

Token 604: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0003594184236135334
    2. '                       ' → logprob: -8.250359535217285
    3. ' found' → logprob: -9.250359535217285
    4. 'import' → logprob: -13.250359535217285
    5. '
' → logprob: -16.37535858154297
    6. 'Found' → logprob: -16.75035858154297
    7. '                   ' → logprob: -16.75035858154297
    8. '(found' → logprob: -16.87535858154297
    9. 'sys' → logprob: -17.00035858154297
    10. '	found' → logprob: -17.37535858154297

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049185849726200104
    2. ' =' → logprob: -3.0491857528686523
    3. '=True' → logprob: -7.424185752868652
    4. '=False' → logprob: -13.549185752868652
    5. '=
' → logprob: -15.299185752868652
    6. '   ' → logprob: -17.67418670654297
    7. '=true' → logprob: -18.29918670654297
    8. ' ' → logprob: -18.54918670654297
    9. ' =
' → logprob: -18.54918670654297
    10. '＝' → logprob: -19.17418670654297

Token 606: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.935296834039036e-06
    2. ' True' → logprob: -12.75000286102295
    3. '=True' → logprob: -20.125003814697266
    4. 'true' → logprob: -20.125003814697266
    5. '   ' → logprob: -21.375003814697266
    6. '(True' → logprob: -22.625003814697266
    7. '                   ' → logprob: -23.375003814697266
    8. '               ' → logprob: -24.375003814697266
    9. '                       ' → logprob: -24.500003814697266
    10. '           ' → logprob: -25.125003814697266

Token 607: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006186164449900389
    2. '                   ' → logprob: -5.256186008453369
    3. 'break' → logprob: -7.756186008453369
    4. '                        
' → logprob: -8.256186485290527
    5. '               ' → logprob: -9.506186485290527
    6. ' break' → logprob: -10.381186485290527
    7. '                           ' → logprob: -10.381186485290527
    8. '
' → logprob: -10.631186485290527
    9. '           ' → logprob: -10.756186485290527
    10. '       ' → logprob: -11.131186485290527

Token 608: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01268092542886734
    2. '                   ' → logprob: -4.762681007385254
    3. 'break' → logprob: -5.762681007385254
    4. ' break' → logprob: -8.137681007385254
    5. '               ' → logprob: -8.512681007385254
    6. '                        
' → logprob: -8.887681007385254
    7. '                           ' → logprob: -9.887681007385254
    8. '           ' → logprob: -10.012681007385254
    9. '<|end|>' → logprob: -10.012681007385254
    10. '   ' → logprob: -10.387681007385254

Token 609: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -9.996708104154095e-05
    2. ' break' → logprob: -9.250100135803223
    3. '                   ' → logprob: -13.250100135803223
    4. '                       ' → logprob: -13.250100135803223
    5. '	break' → logprob: -16.500099182128906
    6. '               ' → logprob: -17.375099182128906
    7. '   ' → logprob: -17.625099182128906
    8. '       ' → logprob: -18.875099182128906
    9. '                           ' → logprob: -18.875099182128906
    10. '           ' → logprob: -19.000099182128906

Token 610: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06501829624176025
    2. '               ' → logprob: -3.0650181770324707
    3. '                   ' → logprob: -4.815018177032471
    4. '
' → logprob: -6.190018177032471
    5. '       ' → logprob: -6.815018177032471
    6. '  
' → logprob: -6.940018177032471
    7. '          ' → logprob: -7.315018177032471
    8. '<|end|>' → logprob: -7.565018177032471
    9. '         ' → logprob: -7.940018177032471
    10. '             ' → logprob: -7.940018177032471

Token 611: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005738579202443361
    2. '               ' → logprob: -5.630738735198975
    3. '		' → logprob: -7.505738735198975
    4. '                   ' → logprob: -7.505738735198975
    5. '       ' → logprob: -8.130738258361816
    6. '
' → logprob: -8.755738258361816
    7. '         ' → logprob: -9.255738258361816
    8. '          ' → logprob: -9.505738258361816
    9. '   ' → logprob: -9.630738258361816
    10. '<|end|>' → logprob: -9.880738258361816

Token 612: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3660529851913452
    2. '       ' → logprob: -1.9910529851913452
    3. '               ' → logprob: -2.1160531044006348
    4. '         ' → logprob: -3.7410531044006348
    5. '                   ' → logprob: -4.241053104400635
    6. '             ' → logprob: -6.491053104400635
    7. '                       ' → logprob: -6.491053104400635
    8. '   ' → logprob: -6.741053104400635
    9. '          ' → logprob: -6.741053104400635
    10. '     ' → logprob: -7.241053104400635

Token 613: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.029750604182481766
    2. ' found' → logprob: -3.5297505855560303
    3. '(found' → logprob: -16.15475082397461
    4. '	found' → logprob: -17.52975082397461
    5. '_found' → logprob: -19.15475082397461
    6. 'Found' → logprob: -19.77975082397461
    7. ' ' → logprob: -21.27975082397461
    8. 'find' → logprob: -21.40475082397461
    9. '   ' → logprob: -22.65475082397461
    10. 'not' → logprob: -22.77975082397461

Token 614: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39517152309417725
    2. '                       ' → logprob: -1.2701715230941772
    3. ':
' → logprob: -4.145171642303467
    4. '                   ' → logprob: -4.520171642303467
    5. '                               ' → logprob: -5.020171642303467
    6. ':' → logprob: -5.395171642303467
    7. '                           ' → logprob: -6.145171642303467
    8. '           ' → logprob: -6.270171642303467
    9. '       ' → logprob: -6.770171642303467
    10. '                                       ' → logprob: -8.145171165466309

Token 615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000252160825766623
    2. '                   ' → logprob: -9.125251770019531
    3. '                       ' → logprob: -9.625251770019531
    4. 'break' → logprob: -9.750251770019531
    5. ' break' → logprob: -11.250251770019531
    6. '           ' → logprob: -12.500251770019531
    7. '       ' → logprob: -14.375251770019531
    8. '   ' → logprob: -14.750251770019531
    9. '	break' → logprob: -14.750251770019531
    10. '			' → logprob: -15.000251770019531

Token 616: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.018641255795955658
    2. '               ' → logprob: -4.018641471862793
    3. ' break' → logprob: -8.018641471862793
    4. '                   ' → logprob: -9.768641471862793
    5. '   ' → logprob: -9.768641471862793
    6. '           ' → logprob: -10.268641471862793
    7. '       ' → logprob: -11.518641471862793
    8. '	break' → logprob: -13.143641471862793
    9. '                       ' → logprob: -14.268641471862793
    10. '			' → logprob: -17.018640518188477

Token 617: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041947141289711
    2. '   ' → logprob: -7.875419616699219
    3. '               ' → logprob: -11.250419616699219
    4. '<|end|>' → logprob: -11.250419616699219
    5. '           ' → logprob: -11.500419616699219
    6. '```' → logprob: -14.250419616699219
    7. '      ' → logprob: -14.750419616699219
    8. '...' → logprob: -15.125419616699219
    9. '    ' → logprob: -15.375419616699219
    10. '     ' → logprob: -15.375419616699219

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005846070707775652
    2. '   ' → logprob: -7.750584602355957
    3. '<|end|>' → logprob: -9.125584602355957
    4. '           ' → logprob: -11.375584602355957
    5. '               ' → logprob: -11.875584602355957
    6. 'if' → logprob: -11.875584602355957
    7. '```' → logprob: -12.500584602355957
    8. ')' → logprob: -12.750584602355957
    9. 'break' → logprob: -13.125584602355957
    10. '      ' → logprob: -13.750584602355957

Token 619: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1608843356370926
    2. '   ' → logprob: -2.035884380340576
    3. 'if' (adapté à ' if') → logprob: -4.160884380340576
    4. ' if' → logprob: -6.160884380340576
    5. '           ' → logprob: -8.410883903503418
    6. '<|end|>' → logprob: -10.535883903503418
    7. 'break' → logprob: -10.785883903503418
    8. '               ' → logprob: -10.785883903503418
    9. '	if' → logprob: -11.035883903503418
    10. '```' → logprob: -11.910883903503418

Token 620: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.048587486147880554
    2. ' found' → logprob: -3.0485875606536865
    3. '(found' → logprob: -17.048587799072266
    4. '	found' → logprob: -17.798587799072266
    5. 'Found' → logprob: -18.548587799072266
    6. '_found' → logprob: -19.173587799072266
    7. '   ' → logprob: -21.173587799072266
    8. '    ' → logprob: -23.798587799072266
    9. ' ' → logprob: -24.548587799072266
    10. '  ' → logprob: -24.923587799072266

Token 621: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8644712567329407
    2. ':
' → logprob: -0.8644712567329407
    3. '           ' → logprob: -1.864471197128296
    4. '               ' → logprob: -6.364471435546875
    5. '=' → logprob: -7.739471435546875
    6. '=True' → logprob: -9.364471435546875
    7. '():
' → logprob: -9.739471435546875
    8. '       ' → logprob: -10.239471435546875
    9. '          ' → logprob: -10.239471435546875
    10. '                   ' → logprob: -10.489471435546875

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014370749704539776
    2. '               ' → logprob: -9.125144004821777
    3. ' break' → logprob: -11.000144004821777
    4. 'break' → logprob: -11.125144004821777
    5. '       ' → logprob: -12.750144004821777
    6. '          ' → logprob: -15.375144004821777
    7. '   ' → logprob: -16.00014305114746
    8. '		' → logprob: -17.12514305114746
    9. '         ' → logprob: -17.12514305114746
    10. '	break' → logprob: -17.75014305114746

Token 623: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08384393900632858
    2. '           ' → logprob: -2.833843946456909
    3. ' break' → logprob: -3.833843946456909
    4. '   ' → logprob: -12.083844184875488
    5. '       ' → logprob: -12.333844184875488
    6. '               ' → logprob: -13.333844184875488
    7. '	break' → logprob: -14.333844184875488
    8. '          ' → logprob: -15.833844184875488
    9. '         ' → logprob: -17.333843231201172
    10. ' ' → logprob: -17.458843231201172

Token 624: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32923245429992676
    2. '<|end|>' → logprob: -1.4542324542999268
    3. 'else' → logprob: -3.3292324542999268
    4. '   ' → logprob: -4.954232215881348
    5. ' if' → logprob: -5.829232215881348
    6. '```' → logprob: -7.079232215881348
    7. '...' → logprob: -9.954232215881348
    8. ' else' → logprob: -10.204232215881348
    9. 'None' → logprob: -10.454232215881348
    10. '0' → logprob: -10.704232215881348

Token 627: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10020958632230759
    2. ' not' → logprob: -2.3502094745635986
    3. 'found' → logprob: -12.97520923614502
    4. '   ' → logprob: -14.60020923614502
    5. ' found' → logprob: -16.100210189819336
    6. '!' → logprob: -18.225210189819336
    7. '(not' → logprob: -18.350210189819336
    8. '
' → logprob: -18.475210189819336
    9. '	not' → logprob: -18.725210189819336
    10. ' ' → logprob: -19.975210189819336

Token 628: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.31326204538345337
    2. ' found' → logprob: -1.3132619857788086
    3. '	found' → logprob: -15.438261985778809
    4. 'not' → logprob: -16.688262939453125
    5. 'Found' → logprob: -17.688262939453125
    6. ' not' → logprob: -17.688262939453125
    7. '(found' → logprob: -18.188262939453125
    8. '   ' → logprob: -18.563262939453125
    9. '_found' → logprob: -18.938262939453125
    10. ' ' → logprob: -20.313262939453125

Token 629: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.048719312995672226
    2. ':' → logprob: -3.0487194061279297
    3. '   ' → logprob: -9.54871940612793
    4. '():
' → logprob: -10.29871940612793
    5. ' :
' → logprob: -12.04871940612793
    6. '       ' → logprob: -12.04871940612793
    7. ':

' → logprob: -12.17371940612793
    8. '):
' → logprob: -12.67371940612793
    9. 'print' → logprob: -13.17371940612793
    10. '=' → logprob: -13.17371940612793

Token 630: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4589368402957916
    2. '       ' → logprob: -1.7089368104934692
    3. 'print' → logprob: -1.9589368104934692
    4. ' print' → logprob: -3.083936929702759
    5. '	print' → logprob: -8.95893669128418
    6. '<|end|>' → logprob: -11.58393669128418
    7. '           ' → logprob: -11.70893669128418
    8. ' ' → logprob: -11.83393669128418
    9. '.print' → logprob: -12.08393669128418
    10. '```' → logprob: -12.08393669128418

Token 631: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010578181827440858
    2. '   ' → logprob: -7.3760576248168945
    3. ' print' → logprob: -7.7510576248168945
    4. '	print' → logprob: -14.251057624816895
    5. ' ' → logprob: -16.62605857849121
    6. '       ' → logprob: -17.12605857849121
    7. '  ' → logprob: -17.62605857849121
    8. '```' → logprob: -17.75105857849121
    9. 'sys' → logprob: -17.87605857849121
    10. 'println' → logprob: -17.87605857849121

Token 632: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08671420067548752
    2. '0' → logprob: -3.711714267730713
    3. '"No' → logprob: -4.086714267730713
    4. 'No' → logprob: -4.586714267730713
    5. '(' → logprob: -5.211714267730713
    6. '('' → logprob: -5.336714267730713
    7. '(NO' → logprob: -5.461714267730713
    8. '"' → logprob: -5.586714267730713
    9. 'NO' → logprob: -5.586714267730713
    10. '(No' → logprob: -6.086714267730713

Token 633: '0' (ID: 15)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.3352144658565521
    2. '"' → logprob: -1.3352144956588745
    3. 'NO' → logprob: -5.460214614868164
    4. '"N' → logprob: -5.585214614868164
    5. 'no' → logprob: -5.710214614868164
    6. 'No' → logprob: -5.710214614868164
    7. '0' → logprob: -5.960214614868164
    8. ''' → logprob: -6.460214614868164
    9. 'NONE' → logprob: -7.210214614868164
    10. '"A' → logprob: -7.335214614868164

Token 634: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -15.000000953674316
    3. '())' → logprob: -15.250000953674316
    4. '))' → logprob: -15.375000953674316
    5. ' )' → logprob: -16.125001907348633
    6. '0' → logprob: -16.125001907348633
    7. '')' → logprob: -16.375001907348633
    8. '`)' → logprob: -16.750001907348633
    9. '")' → logprob: -17.125001907348633
    10. ')`' → logprob: -17.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 632
Tokens correctement prédits (1ère position, stricte): 331
Tokens correctement prédits (1ère position, avec adaptation): 348
Tokens correctement prédits (top 10): 575
Précision stricte (1ère position): 52.37%
Précision adaptée (1ère position): 55.06%
Précision (top 10): 90.98%
================================================================================
