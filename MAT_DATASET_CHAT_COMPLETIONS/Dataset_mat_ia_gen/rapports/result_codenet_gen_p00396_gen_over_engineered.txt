================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class StoneGameState:
    def __init__(self, white: int, black: int):
        if white < 1 or black < 1:
            raise ValueError("Each area must start with at least one white and one black stone")
        self.white = white
        self.black = black

    def grundy(self) -> int:
        # Computing mex of all reachable states:
        # moves:
        # (a) remove one white stone: (w-1, b) if w > 1
        # (b) remove 1 to white stones number of black stones <= w:
        #     for x in [1..b_min], remove x black stones if x <= w
        #     but number of removed black stones <= white stones currently there
        # (c) replace one white stone from pod with one black stone:
        #     (w, b) -> (w, b) but white decreases by 1 and black increases by 1? No,
        #     Problem states pick up a white stone from pod and replace it with black stone.
        #     So white stones does not decrease (pod is infinite), but white in area increases by 0? No,
        #     The "replace" means in the area, a white stone is replaced by a black stone:
        #     So (w,b)-> (w-1, b+1), w>=1
        #     Wait: Actually, it's picking white from *pod* and replace it in the area with black.
        #     So the operation adds one black stone and removes one white stone in the area.
        # Thus move (c) transforms (w,b) -> (w-1, b+1) if w>0
        #
        # Let's re-verify problem statement:
        # "(c) Pick up a white stone from the stone pod and replace it with a black stone."
        # The pod has infinite white stones.
        # The replacement is in the area.
        # So in the area: a white stone is converted to a black stone, number of white stones decreases by 1,
        # black stones increases by 1.
        #
        # Summary:
        # (a) (w,b) -> (w-1,b)  if w>1
        # (b) (w,b) -> (w,b - x) for 1 <= x <= min(b,w)
        # (c) (w,b) -> (w-1,b+1) if w > 0
        #
        # But from problem constraints: w >=1 etc.
        #
        # Now to implement grundy function with memoization to avoid recomputation.

        from functools import lru_cache

        @lru_cache(maxsize=None)
        def dfs(w: int, b: int):
            if w == 0:
                # no white stones: no moves possible (rules require at least one white stone)
                # So no moves, losing position
                return 0

            reachable = set()

            # (a)
            if w - 1 >= 1:
                reachable.add(dfs(w - 1, b))

            # (b)
            max_black_remove = min(b, w)
            for x in range(1, max_black_remove + 1):
                reachable.add(dfs(w, b - x))

            # (c)
            # can only do if at least 1 white stone to replace, which is guaranteed since w>=1
            if w - 1 >= 0:
                reachable.add(dfs(w - 1, b + 1))

            # mex calculation
            g = 0
            while g in reachable:
                g += 1
            return g

        return dfs(self.white, self.black)


class StoneGame:
    def __init__(self):
        self.areas = []

    def add_area(self, white: int, black: int):
        self.areas.append(StoneGameState(white, black))

    def winner(self) -> int:
        # XOR grundy numbers of all areas
        nim_sum = 0
        for area in self.areas:
            g = area.grundy()
            nim_sum ^= g
        # 0 means first player (Koshiro) has winning strategy
        # 1 means second player (Ukiko) wins
        return 0 if nim_sum != 0 else 1


def main():
    import sys

    game = StoneGame()
    input = sys.stdin.readline
    n = int(input())
    for _ in range(n):
        w, b = map(int, input().split())
        game.add_area(w, b)
    print(game.winner())


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Stone' (ID: 22850)
  → Token d'amorce (pas de prédiction)

Token 2: 'Game' (ID: 6627)
  → Token d'amorce (pas de prédiction)

Token 3: 'State' (ID: 1881)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8150389790534973
    2. ':' → logprob: -1.0650389194488525
    3. '(' → logprob: -1.5650389194488525
    4. '.' → logprob: -5.940039157867432
    5. '```' → logprob: -8.065038681030273
    6. '[' → logprob: -8.440038681030273
    7. ' {' → logprob: -8.690038681030273
    8. '():' → logprob: -9.940038681030273
    9. '(:' → logprob: -9.940038681030273
    10. ' ' → logprob: -10.315038681030273

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.366171270608902
    2. '(' → logprob: -1.3661712408065796
    3. '{' → logprob: -2.991171360015869
    4. '.' → logprob: -7.241171360015869
    5. '(:' → logprob: -7.741171360015869
    6. '```' → logprob: -9.616170883178711
    7. ' {' → logprob: -10.741170883178711
    8. '({' → logprob: -11.116170883178711
    9. ' :' → logprob: -11.741170883178711
    10. '():' → logprob: -11.866170883178711

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024824416264891624
    2. '(' → logprob: -3.774824380874634
    3. '   ' → logprob: -7.274824619293213
    4. '```' → logprob: -8.024824142456055
    5. ':
' → logprob: -8.399824142456055
    6. '():' → logprob: -8.649824142456055
    7. '(
' → logprob: -9.774824142456055
    8. '.' → logprob: -10.524824142456055
    9. ' :' → logprob: -11.524824142456055
    10. '(:' → logprob: -11.649824142456055

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3849841058254242
    2. ':' → logprob: -2.259984016418457
    3. '<|end|>' → logprob: -2.884984016418457
    4. ' ' → logprob: -3.009984016418457
    5. '```' → logprob: -3.509984016418457
    6. '    ' → logprob: -3.634984016418457
    7. '(' → logprob: -4.009984016418457
    8. '_' → logprob: -4.884984016418457
    9. '       ' → logprob: -5.634984016418457
    10. '    
' → logprob: -6.009984016418457

Token 7: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4172677993774414
    2. '__' → logprob: -1.1672677993774414
    3. ' ' → logprob: -4.542267799377441
    4. ' ' → logprob: -5.417267799377441
    5. '_' → logprob: -5.542267799377441
    6. ' init' → logprob: -6.167267799377441
    7. ' stone' → logprob: -7.042267799377441
    8. ' initialize' → logprob: -7.542267799377441
    9. ' process' → logprob: -7.667267799377441
    10. '_init' → logprob: -7.792267799377441

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. ' init' → logprob: -13.750000953674316
    3. 'ini' → logprob: -17.625001907348633
    4. '_init' → logprob: -19.000001907348633
    5. 'in' → logprob: -19.250001907348633
    6. '	init' → logprob: -19.500001907348633
    7. 'int' → logprob: -20.375001907348633
    8. 'inite' → logprob: -20.625001907348633
    9. 'i' → logprob: -21.375001907348633
    10. 'innit' → logprob: -21.375001907348633

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.21977366507053375
    2. '__' → logprob: -1.9697736501693726
    3. '(' → logprob: -2.969773769378662
    4. '__(
' → logprob: -5.469773769378662
    5. '__((' → logprob: -7.469773769378662
    6. '_' → logprob: -7.719773769378662
    7. '(self' → logprob: -8.094773292541504
    8. ' (' → logprob: -8.219773292541504
    9. '<|end|>' → logprob: -8.344773292541504
    10. '__('' → logprob: -9.219773292541504

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0059587834402918816
    2. ' self' → logprob: -5.130958557128906
    3. ')' → logprob: -11.005958557128906
    4. '(self' → logprob: -11.880958557128906
    5. '_self' → logprob: -13.755958557128906
    6. 'stone' → logprob: -14.005958557128906
    7. 'player' → logprob: -14.380958557128906
    8. '	self' → logprob: -14.505958557128906
    9. ' )' → logprob: -14.755958557128906
    10. ' stone' → logprob: -14.755958557128906

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05820123106241226
    2. 'self' → logprob: -3.183201313018799
    3. ')' → logprob: -5.308201313018799
    4. '<|end|>' → logprob: -6.183201313018799
    5. '):' → logprob: -6.433201313018799
    6. '_' → logprob: -6.558201313018799
    7. ' ,' → logprob: -6.558201313018799
    8. '(self' → logprob: -6.808201313018799
    9. ' self' → logprob: -7.433201313018799
    10. '(' → logprob: -7.933201313018799

Token 12: ' white' (ID: 6461)
  Prédit: ' stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stones' → logprob: -0.651562511920929
    2. ' player' → logprob: -1.6515624523162842
    3. 'stones' → logprob: -2.901562452316284
    4. ' self' → logprob: -3.276562452316284
    5. ' board' → logprob: -3.276562452316284
    6. ' stone' → logprob: -3.276562452316284
    7. 'player' → logprob: -3.526562452316284
    8. ' current' → logprob: -3.651562452316284
    9. 'self' → logprob: -3.651562452316284
    10. ' piles' → logprob: -4.401562690734863

Token 13: ':' (ID: 25)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.10247328132390976
    2. '_p' → logprob: -3.352473258972168
    3. '_' → logprob: -4.102473258972168
    4. '_positions' → logprob: -4.352473258972168
    5. '_count' → logprob: -4.477473258972168
    6. ',' → logprob: -5.977473258972168
    7. ' )' → logprob: -6.227473258972168
    8. 's' → logprob: -6.227473258972168
    9. '_player' → logprob: -6.352473258972168
    10. ')' → logprob: -6.352473258972168

Token 14: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0652332305908203
    2. '_' → logprob: -1.8152332305908203
    3. ' int' → logprob: -1.8152332305908203
    4. ')' → logprob: -2.1902332305908203
    5. '_list' → logprob: -3.1902332305908203
    6. ' )' → logprob: -3.3152332305908203
    7. 'int' → logprob: -3.5652332305908203
    8. 'List' → logprob: -3.8152332305908203
    9. '_count' → logprob: -4.44023323059082
    10. '_player' → logprob: -4.69023323059082

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015874464064836502
    2. '):' → logprob: -4.51587438583374
    3. ' ,' → logprob: -5.76587438583374
    4. ')' → logprob: -6.64087438583374
    5. '   ' → logprob: -9.265874862670898
    6. '=' → logprob: -9.265874862670898
    7. ':' → logprob: -10.265874862670898
    8. '):
' → logprob: -10.640874862670898
    9. ' stone' → logprob: -10.765874862670898
    10. '<|end|>' → logprob: -11.140874862670898

Token 16: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.012572753243148327
    2. 'black' → logprob: -4.387572765350342
    3. ' white' → logprob: -11.012572288513184
    4. ' ' → logprob: -11.262572288513184
    5. ' red' → logprob: -11.762572288513184
    6. ' blue' → logprob: -12.012572288513184
    7. ' brown' → logprob: -13.012572288513184
    8. '    ' → logprob: -13.262572288513184
    9. ' stone' → logprob: -13.262572288513184
    10. '_black' → logprob: -13.387572288513184

Token 17: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7585672736167908
    2. ':' → logprob: -0.8835672736167908
    3. ')' → logprob: -2.5085673332214355
    4. ',' → logprob: -3.3835673332214355
    5. '):
' → logprob: -6.3835673332214355
    6. ' ):' → logprob: -7.2585673332214355
    7. ' )' → logprob: -9.008566856384277
    8. '_' → logprob: -9.133566856384277
    9. '=' → logprob: -9.258566856384277
    10. '):
' → logprob: -9.883566856384277

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5232873558998108
    2. 'int' → logprob: -0.8982873558998108
    3. ')' → logprob: -9.398287773132324
    4. ':int' → logprob: -10.523287773132324
    5. ' ' → logprob: -11.148287773132324
    6. '[int' → logprob: -11.273287773132324
    7. '	int' → logprob: -11.773287773132324
    8. '=int' → logprob: -12.773287773132324
    9. '(int' → logprob: -13.085787773132324
    10. ' str' → logprob: -13.085787773132324

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002017024904489517
    2. ',' → logprob: -6.502017021179199
    3. ')' → logprob: -7.752017021179199
    4. '):
' → logprob: -9.6270170211792
    5. ':' → logprob: -11.2520170211792
    6. '   ' → logprob: -13.0020170211792
    7. '```' → logprob: -13.8770170211792
    8. '),' → logprob: -14.7520170211792
    9. ' ):' → logprob: -14.8770170211792
    10. ''):' → logprob: -15.1270170211792

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12281522154808044
    2. ')' → logprob: -2.8728151321411133
    3. '<|end|>' → logprob: -4.122815132141113
    4. '    ' → logprob: -4.247815132141113
    5. '   ' → logprob: -4.497815132141113
    6. ' ' → logprob: -5.372815132141113
    7. ':' → logprob: -5.747815132141113
    8. '):' → logprob: -5.997815132141113
    9. '        ' → logprob: -6.622815132141113
    10. ' )' → logprob: -7.247815132141113

Token 21: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1160496175289154
    2. '       ' → logprob: -2.6160495281219482
    3. ' self' → logprob: -3.3660495281219482
    4. '```' → logprob: -7.116049766540527
    5. '\' → logprob: -8.616049766540527
    6. '   ' → logprob: -8.741049766540527
    7. ' ' → logprob: -8.741049766540527
    8. 'super' → logprob: -8.866049766540527
    9. '           ' → logprob: -9.741049766540527
    10. '_self' → logprob: -9.741049766540527

Token 22: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.000374546303646639
    2. ' not' → logprob: -8.875374794006348
    3. 'white' → logprob: -9.000374794006348
    4. ' self' → logprob: -10.125374794006348
    5. ' ' → logprob: -10.625374794006348
    6. ' stone' → logprob: -11.000374794006348
    7. ' ' → logprob: -11.250374794006348
    8. ' black' → logprob: -11.750374794006348
    9. ' whitespace' → logprob: -12.750374794006348
    10. '_white' → logprob: -13.000374794006348

Token 23: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.30389389395713806
    2. ' <=' → logprob: -2.178893804550171
    3. ' >=' → logprob: -2.803893804550171
    4. ' <' → logprob: -2.928893804550171
    5. ' ==' → logprob: -3.803893804550171
    6. ' ' → logprob: -5.30389404296875
    7. '>' → logprob: -5.42889404296875
    8. ' !=' → logprob: -6.30389404296875
    9. '<' → logprob: -7.92889404296875
    10. ')' → logprob: -8.80389404296875

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6205177903175354
    2. ' ' → logprob: -1.1205177307128906
    3. '=' → logprob: -1.9955177307128906
    4. ' =' → logprob: -8.74551773071289
    5. '1' → logprob: -9.37051773071289
    6. '>' → logprob: -11.93301773071289
    7. '   ' → logprob: -12.05801773071289
    8. '```' → logprob: -12.74551773071289
    9. ' ' → logprob: -12.74551773071289
    10. '  ' → logprob: -12.87051773071289

Token 25: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003730249358341098
    2. '=' → logprob: -6.253730297088623
    3. ' ' → logprob: -6.503730297088623
    4. '1' → logprob: -8.253729820251465
    5. 'black' → logprob: -10.753729820251465
    6. '   ' → logprob: -12.378729820251465
    7. 'white' → logprob: -12.378729820251465
    8. '```' → logprob: -13.253729820251465
    9. '2' → logprob: -13.503729820251465
    10. ' =' → logprob: -13.503729820251465

Token 26: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002005483955144882
    2. ':' → logprob: -6.502005577087402
    3. 'or' → logprob: -8.002005577087402
    4. ' ' → logprob: -9.252005577087402
    5. ' :' → logprob: -11.002005577087402
    6. '        ' → logprob: -11.127005577087402
    7. '       ' → logprob: -11.252005577087402
    8. '           ' → logprob: -11.752005577087402
    9. ' and' → logprob: -12.002005577087402
    10. '    ' → logprob: -13.002005577087402

Token 27: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.003987573552876711
    2. 'black' → logprob: -5.628987789154053
    3. ' white' → logprob: -7.878987789154053
    4. ' ' → logprob: -12.753987312316895
    5. 'white' → logprob: -12.753987312316895
    6. '_black' → logprob: -14.003987312316895
    7. ':black' → logprob: -15.003987312316895
    8. '.black' → logprob: -15.128987312316895
    9. ' blacks' → logprob: -15.128987312316895
    10. ' ' → logprob: -15.128987312316895

Token 28: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016680538654327393
    2. '<' → logprob: -4.141680717468262
    3. ' <=' → logprob: -7.891680717468262
    4. ' >' → logprob: -8.516680717468262
    5. ' ' → logprob: -10.266680717468262
    6. '<=' → logprob: -11.016680717468262
    7. '>' → logprob: -11.516680717468262
    8. ' ==' → logprob: -12.641680717468262
    9. '   ' → logprob: -13.016680717468262
    10. ' >=' → logprob: -13.016680717468262

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2255438268184662
    2. '1' → logprob: -1.6005438566207886
    3. '0' → logprob: -9.100543975830078
    4. '=' → logprob: -11.725543975830078
    5. '   ' → logprob: -12.600543975830078
    6. '```' → logprob: -13.288043975830078
    7. ' ' → logprob: -13.663043975830078
    8. '  ' → logprob: -13.913043975830078
    9. ' =' → logprob: -14.163043975830078
    10. ':' → logprob: -15.288043975830078

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007716293912380934
    2. ' ' → logprob: -4.882716178894043
    3. '0' → logprob: -9.132716178894043
    4. '   ' → logprob: -14.132716178894043
    5. '```' → logprob: -14.507716178894043
    6. '=' → logprob: -15.195216178894043
    7. '  ' → logprob: -15.820216178894043
    8. '2' → logprob: -16.38271713256836
    9. ':' → logprob: -16.44521713256836
    10. '' → logprob: -17.00771713256836

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003032255917787552
    2. ':
' → logprob: -5.878032207489014
    3. ' or' → logprob: -9.753032684326172
    4. '       ' → logprob: -9.878032684326172
    5. '):' → logprob: -9.878032684326172
    6. ' :' → logprob: -10.503032684326172
    7. '           ' → logprob: -11.003032684326172
    8. ',' → logprob: -11.753032684326172
    9. ':return' → logprob: -11.753032684326172
    10. '):
' → logprob: -13.253032684326172

Token 32: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4480871260166168
    2. '           ' → logprob: -1.1980870962142944
    3. '       ' → logprob: -3.448087215423584
    4. ':
' → logprob: -3.948087215423584
    5. ':return' → logprob: -5.573087215423584
    6. ' :' → logprob: -6.698087215423584
    7. '):' → logprob: -7.198087215423584
    8. ')' → logprob: -7.823087215423584
    9. ' raise' → logprob: -8.198086738586426
    10. '\n' → logprob: -8.323086738586426

Token 33: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5446398854255676
    2. ' raise' → logprob: -0.9196398854255676
    3. 'raise' (adapté à ' raise') → logprob: -4.419640064239502
    4. '            ' → logprob: -5.419640064239502
    5. '               ' → logprob: -6.544640064239502
    6. '       ' → logprob: -6.544640064239502
    7. '        ' → logprob: -6.794640064239502
    8. ' ' → logprob: -8.919639587402344
    9. ' ' → logprob: -9.419639587402344
    10. '                ' → logprob: -9.419639587402344

Token 34: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0003218766360078007
    2. 'Value' → logprob: -8.125322341918945
    3. ' ' → logprob: -11.125322341918945
    4. ' Val' → logprob: -11.625322341918945
    5. ' value' → logprob: -13.625322341918945
    6. '	Value' → logprob: -15.125322341918945
    7. ' Va' → logprob: -15.500322341918945
    8. '_Value' → logprob: -16.000322341918945
    9. '<Value' → logprob: -16.250322341918945
    10. ' ' → logprob: -16.500322341918945

Token 35: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -9.93710636976175e-05
    2. 'rror' → logprob: -9.250099182128906
    3. 'r' → logprob: -13.125099182128906
    4. 'Value' → logprob: -13.875099182128906
    5. 'Er' → logprob: -15.875099182128906
    6. 'n' → logprob: -16.875099182128906
    7. 'ror' → logprob: -17.125099182128906
    8. 'E' → logprob: -18.000099182128906
    9. ' Error' → logprob: -18.125099182128906
    10. 'Erro' → logprob: -18.125099182128906

Token 36: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034446881618350744
    2. ':' → logprob: -6.628444671630859
    3. '(
' → logprob: -6.628444671630859
    4. ',' → logprob: -8.37844467163086
    5. '('' → logprob: -8.87844467163086
    6. '("' → logprob: -9.25344467163086
    7. ' ' → logprob: -9.37844467163086
    8. '"' → logprob: -9.50344467163086
    9. '()' → logprob: -10.00344467163086
    10. '   ' → logprob: -10.25344467163086

Token 37: 'Each' (ID: 7919)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.392468124628067
    2. 'Initial' → logprob: -2.142468214035034
    3. 'Both' → logprob: -2.142468214035034
    4. 'The' → logprob: -4.142467975616455
    5. 'Stone' → logprob: -4.267467975616455
    6. 'White' → logprob: -4.267467975616455
    7. 'Invalid' → logprob: -4.767467975616455
    8. 'white' → logprob: -4.767467975616455
    9. 'Starting' → logprob: -4.767467975616455
    10. 'St' → logprob: -5.767467975616455

Token 38: ' area' (ID: 3624)
  Prédit: ' player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.6739407777786255
    2. ' pile' → logprob: -1.0489407777786255
    3. ' color' → logprob: -2.298940658569336
    4. ' stone' → logprob: -3.798940658569336
    5. ' ' → logprob: -5.048940658569336
    6. ' number' → logprob: -6.173940658569336
    7. ' count' → logprob: -6.673940658569336
    8. ' pit' → logprob: -6.673940658569336
    9. ' stack' → logprob: -7.048940658569336
    10. ' side' → logprob: -7.673940658569336

Token 39: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0338740199804306
    2. ' ' → logprob: -4.283874034881592
    3. ' needs' → logprob: -4.783874034881592
    4. ' )' → logprob: -5.908874034881592
    5. ' >' → logprob: -6.033874034881592
    6. ' should' → logprob: -6.158874034881592
    7. ' cannot' → logprob: -7.408874034881592
    8. ')' → logprob: -7.783874034881592
    9. ' can' → logprob: -8.033873558044434
    10. ' size' → logprob: -8.283873558044434

Token 40: ' start' (ID: 1604)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.024071162566542625
    2. ' have' → logprob: -4.399071216583252
    3. ' contain' → logprob: -4.899071216583252
    4. ' ' → logprob: -5.524071216583252
    5. '<|end|>' → logprob: -11.399070739746094
    6. ' provide' → logprob: -11.899070739746094
    7. ' start' → logprob: -12.274070739746094
    8. ' not' → logprob: -12.774070739746094
    9. ' at' → logprob: -12.774070739746094
    10. ' a' → logprob: -12.774070739746094

Token 41: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.0007805614150129259
    2. ' at' → logprob: -7.2507805824279785
    3. ' as' → logprob: -10.50078010559082
    4. 'with' → logprob: -10.87578010559082
    5. ' from' → logprob: -12.12578010559082
    6. ' positive' → logprob: -12.37578010559082
    7. ' wit' → logprob: -12.50078010559082
    8. ' w' → logprob: -13.12578010559082
    9. ' on' → logprob: -13.37578010559082
    10. ' a' → logprob: -14.12578010559082

Token 42: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.09018317610025406
    2. ' ' → logprob: -2.8401832580566406
    3. ' a' → logprob: -3.5901832580566406
    4. 'at' → logprob: -9.71518325805664
    5. '1' → logprob: -9.96518325805664
    6. ' atleast' → logprob: -10.34018325805664
    7. ' one' → logprob: -10.59018325805664
    8. 'a' → logprob: -11.34018325805664
    9. ' an' → logprob: -11.34018325805664
    10. ' least' → logprob: -11.46518325805664

Token 43: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.3528383672237396
    2. 'least' → logprob: -1.227838397026062
    3. ' leas' → logprob: -6.477838516235352
    4. ' ' → logprob: -6.602838516235352
    5. '1' → logprob: -7.477838516235352
    6. 'l' → logprob: -8.227838516235352
    7. ' l' → logprob: -9.227838516235352
    8. ' lea' → logprob: -9.477838516235352
    9. 'lease' → logprob: -9.727838516235352
    10. 'le' → logprob: -9.977838516235352

Token 44: ' one' (ID: 1001)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030690548941493034
    2. ' one' → logprob: -3.7806904315948486
    3. '1' → logprob: -4.905690670013428
    4. 'one' → logprob: -12.03069019317627
    5. ' a' → logprob: -12.53069019317627
    6. '  ' → logprob: -14.03069019317627
    7. 'One' → logprob: -14.53069019317627
    8. ' on' → logprob: -14.65569019317627
    9. ' ' → logprob: -15.15569019317627
    10. '   ' → logprob: -15.40569019317627

Token 45: ' white' (ID: 6461)
  Prédit: ' stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.4613703787326813
    2. ' ' → logprob: -1.4613703489303589
    3. ' )' → logprob: -2.5863704681396484
    4. ' ")' → logprob: -3.5863704681396484
    5. ')' → logprob: -4.336370468139648
    6. ' s' → logprob: -5.086370468139648
    7. '_' → logprob: -5.461370468139648
    8. ' "' → logprob: -6.086370468139648
    9. 'stone' → logprob: -6.336370468139648
    10. '")' → logprob: -6.961370468139648

Token 46: ' and' (ID: 326)
  Prédit: ' stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.05066974461078644
    2. ' or' → logprob: -3.6756696701049805
    3. 'stone' → logprob: -4.5506696701049805
    4. ')' → logprob: -5.4256696701049805
    5. ' ' → logprob: -5.5506696701049805
    6. ' ")' → logprob: -6.1756696701049805
    7. ' )' → logprob: -6.9256696701049805
    8. ' and' → logprob: -7.6756696701049805
    9. ' space' → logprob: -7.8006696701049805
    10. ' s' → logprob: -8.67566967010498

Token 47: ' one' (ID: 1001)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.5082197189331055
    2. ' one' → logprob: -1.0082197189331055
    3. 'black' → logprob: -3.7582197189331055
    4. ' a' → logprob: -5.1332197189331055
    5. 'one' → logprob: -5.6332197189331055
    6. 'a' → logprob: -8.008219718933105
    7. ' ' → logprob: -8.133219718933105
    8. ' ' → logprob: -10.945719718933105
    9. '```' → logprob: -11.070719718933105
    10. ' at' → logprob: -11.195719718933105

Token 48: ' black' (ID: 5960)
  Prédit: ' stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.03448355942964554
    2. 'stone' → logprob: -4.409483432769775
    3. ')' → logprob: -4.784483432769775
    4. ' ' → logprob: -5.159483432769775
    5. ' )' → logprob: -5.784483432769775
    6. ' black' → logprob: -6.534483432769775
    7. ' token' → logprob: -7.034483432769775
    8. ' white' → logprob: -7.034483432769775
    9. ' space' → logprob: -7.909483432769775
    10. ' ")' → logprob: -8.159483909606934

Token 49: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.05171096324920654
    2. 'stone' → logprob: -3.676711082458496
    3. ' ' → logprob: -5.176711082458496
    4. ')' → logprob: -5.301711082458496
    5. '")' → logprob: -5.301711082458496
    6. '"' → logprob: -5.551711082458496
    7. ' ")' → logprob: -6.051711082458496
    8. ' "' → logprob: -7.551711082458496
    9. ' piece' → logprob: -7.801711082458496
    10. '   ' → logprob: -8.051711082458496

Token 50: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005696265492588282
    2. '"' → logprob: -5.3806962966918945
    3. ')' → logprob: -7.3806962966918945
    4. '")
' → logprob: -8.255696296691895
    5. ' ")' → logprob: -9.755696296691895
    6. '.")' → logprob: -9.880696296691895
    7. ')")' → logprob: -10.380696296691895
    8. '")
' → logprob: -10.505696296691895
    9. 's' → logprob: -11.755696296691895
    10. '!")' → logprob: -12.505696296691895

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5711759328842163
    2. '<|end|>' → logprob: -1.6961759328842163
    3. '
' → logprob: -1.8211759328842163
    4. '\n' → logprob: -2.071176052093506
    5. ')' → logprob: -2.196176052093506
    6. '\' → logprob: -2.696176052093506
    7. ' 
' → logprob: -3.446176052093506
    8. '    
' → logprob: -4.446176052093506
    9. '   ' → logprob: -4.571176052093506
    10. '        
' → logprob: -4.571176052093506

Token 52: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1551058441400528
    2. '\n' → logprob: -3.5301058292388916
    3. '\' → logprob: -3.7801058292388916
    4. '        
' → logprob: -3.9051058292388916
    5. ' ' → logprob: -4.280106067657471
    6. '<|end|>' → logprob: -4.905106067657471
    7. ')' → logprob: -5.030106067657471
    8. '   ' → logprob: -5.155106067657471
    9. '        ' → logprob: -5.280106067657471
    10. ' 
' → logprob: -5.530106067657471

Token 53: '.white' (ID: 28729)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001992397475987673
    2. '.white' → logprob: -6.251992225646973
    3. '._' → logprob: -10.376992225646973
    4. ' .' → logprob: -11.001992225646973
    5. '_' → logprob: -12.626992225646973
    6. '.w' → logprob: -12.751992225646973
    7. '.White' → logprob: -13.376992225646973
    8. 'white' → logprob: -13.626992225646973
    9. '.WHITE' → logprob: -13.626992225646973
    10. '_white' → logprob: -13.876992225646973

Token 54: ' =' (ID: 314)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.134975552558899
    2. ',' → logprob: -1.259975552558899
    3. ' >=' → logprob: -2.1349754333496094
    4. ')' → logprob: -2.8849754333496094
    5. '_' → logprob: -3.0099754333496094
    6. '>' → logprob: -3.1349754333496094
    7. '<|end|>' → logprob: -3.2599754333496094
    8. ' ==' → logprob: -4.134975433349609
    9. ' =' → logprob: -4.259975433349609
    10. ' +=' → logprob: -4.509975433349609

Token 55: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.0019294669618830085
    2. 'white' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.00192928314209
    4. ' ' → logprob: -15.12692928314209
    5. ' whites' → logprob: -16.626930236816406
    6. '.white' → logprob: -17.001930236816406
    7. ' whitespace' → logprob: -17.001930236816406
    8. ':white' → logprob: -17.251930236816406
    9. ' stone' → logprob: -17.376930236816406
    10. '_white' → logprob: -17.501930236816406

Token 56: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10571187734603882
    2. '<|end|>' → logprob: -2.6057119369506836
    3. '
' → logprob: -3.9807119369506836
    4. ',' → logprob: -5.355711936950684
    5. '        
' → logprob: -6.605711936950684
    6. '<|end|>' → logprob: -7.730711936950684
    7. '    
' → logprob: -8.480711936950684
    8. ',
' → logprob: -8.480711936950684
    9. ' 
' → logprob: -9.230711936950684
    10. '        ' → logprob: -9.355711936950684

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04411100223660469
    2. '
' → logprob: -3.5441110134124756
    3. '<|end|>' → logprob: -4.4191107749938965
    4. ',' → logprob: -6.6691107749938965
    5. '        
' → logprob: -7.9191107749938965
    6. ',
' → logprob: -8.919111251831055
    7. '    
' → logprob: -9.419111251831055
    8. '<|end|>' → logprob: -9.544111251831055
    9. ' 
' → logprob: -9.919111251831055
    10. '   ' → logprob: -10.169111251831055

Token 58: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1959906369447708
    2. '       ' → logprob: -2.320990562438965
    3. ' self' → logprob: -2.570990562438965
    4. ',' → logprob: -6.945990562438965
    5. '
' → logprob: -7.195990562438965
    6. '        
' → logprob: -7.445990562438965
    7. '        ' → logprob: -8.070990562438965
    8. ' and' → logprob: -8.445990562438965
    9. ' ' → logprob: -9.945990562438965
    10. '   ' → logprob: -10.195990562438965

Token 59: '.black' (ID: 38464)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7034373879432678
    2. '.black' → logprob: -0.7034373879432678
    3. '.white' → logprob: -4.703437328338623
    4. ' .' → logprob: -7.453437328338623
    5. 'black' → logprob: -7.703437328338623
    6. '_black' → logprob: -10.078437805175781
    7. ' black' → logprob: -10.578437805175781
    8. '.BLACK' → logprob: -11.578437805175781
    9. '.
' → logprob: -11.953437805175781
    10. '.Black' → logprob: -12.078437805175781

Token 60: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.03806019574403763
    2. 'black' → logprob: -3.288060188293457
    3. ' ' → logprob: -11.663060188293457
    4. '1' → logprob: -13.163060188293457
    5. ' white' → logprob: -13.163060188293457
    6. ':black' → logprob: -13.663060188293457
    7. '0' → logprob: -13.913060188293457
    8. '_black' → logprob: -14.288060188293457
    9. ' ' → logprob: -14.288060188293457
    10. 'bl' → logprob: -14.788060188293457

Token 62: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.493310809135437
    2. '<|end|>' → logprob: -1.243310809135437
    3. '   ' → logprob: -2.6183109283447266
    4. '    
' → logprob: -4.993310928344727
    5. '\n' → logprob: -5.368310928344727
    6. '<|end|>' → logprob: -5.743310928344727
    7. ' 
' → logprob: -5.868310928344727
    8. ' ' → logprob: -6.118310928344727
    9. '```' → logprob: -6.368310928344727
    10. '

' → logprob: -6.743310928344727

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15818092226982117
    2. '
' → logprob: -2.4081809520721436
    3. '<|end|>' → logprob: -3.2831809520721436
    4. '    
' → logprob: -5.1581807136535645
    5. ' ' → logprob: -5.6581807136535645
    6. ':' → logprob: -5.9081807136535645
    7. '```' → logprob: -6.6581807136535645
    8. '<|end|>' → logprob: -7.0331807136535645
    9. ')' → logprob: -7.2831807136535645
    10. ' 
' → logprob: -7.4081807136535645

Token 64: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2384534478187561
    2. 'def' (adapté à ' def') → logprob: -1.8634533882141113
    3. ' def' → logprob: -3.3634533882141113
    4. '    
' → logprob: -4.738453388214111
    5. '
' → logprob: -5.238453388214111
    6. ' ' → logprob: -6.238453388214111
    7. ' 
' → logprob: -6.488453388214111
    8. '<|end|>' → logprob: -6.488453388214111
    9. '```' → logprob: -6.863453388214111
    10. '\n' → logprob: -8.11345386505127

Token 65: ' grund' (ID: 34475)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19805912673473358
    2. ' space' → logprob: -2.32305908203125
    3. '_' → logprob: -2.82305908203125
    4. '_space' → logprob: -4.82305908203125
    5. ' _' → logprob: -5.44805908203125
    6. 'space' → logprob: -5.94805908203125
    7. ' a' → logprob: -6.44805908203125
    8. ' is' → logprob: -6.69805908203125
    9. ' get' → logprob: -7.07305908203125
    10. 's' → logprob: -7.44805908203125

Token 66: 'y' (ID: 88)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -1.1437742710113525
    2. 'y' → logprob: -1.2687742710113525
    3. 'l' → logprob: -1.7687742710113525
    4. 'iel' → logprob: -2.3937742710113525
    5. '_' → logprob: -2.8937742710113525
    6. '__' → logprob: -4.018774032592773
    7. 'ie' → logprob: -4.393774032592773
    8. '```' → logprob: -4.643774032592773
    9. 'elf' → logprob: -5.018774032592773
    10. 'ier' → logprob: -5.268774032592773

Token 67: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5342586040496826
    2. '_' → logprob: -0.9092586040496826
    3. '_value' → logprob: -5.159258842468262
    4. '()' → logprob: -6.159258842468262
    5. '(self' → logprob: -6.284258842468262
    6. '_(' → logprob: -7.659258842468262
    7. '_number' → logprob: -8.784258842468262
    8. '(
' → logprob: -9.409258842468262
    9. '_val' → logprob: -9.409258842468262
    10. 's' → logprob: -10.034258842468262

Token 68: ')' (ID: 8)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06807591766119003
    2. '()' → logprob: -3.3180758953094482
    3. '_' → logprob: -4.318076133728027
    4. '(self' → logprob: -5.068076133728027
    5. ')' → logprob: -5.443076133728027
    6. '_value' → logprob: -5.568076133728027
    7. '(
' → logprob: -7.443076133728027
    8. ' (' → logprob: -8.693076133728027
    9. '```' → logprob: -8.693076133728027
    10. '())' → logprob: -9.193076133728027

Token 69: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27214500308036804
    2. ':' → logprob: -1.5221450328826904
    3. '(self' → logprob: -4.147144794464111
    4. '():' → logprob: -5.772144794464111
    5. '(
' → logprob: -7.272144794464111
    6. '):' → logprob: -9.77214527130127
    7. '<|end|>' → logprob: -9.89714527130127
    8. '```' → logprob: -10.14714527130127
    9. '(s' → logprob: -10.39714527130127
    10. ')' → logprob: -10.64714527130127

Token 70: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06201350316405296
    2. 'int' → logprob: -2.8120133876800537
    3. ' ' → logprob: -10.312013626098633
    4. ' '' → logprob: -13.312013626098633
    5. ' ' → logprob: -13.437013626098633
    6. ' None' → logprob: -13.562013626098633
    7. ''' → logprob: -13.812013626098633
    8. '"' → logprob: -13.812013626098633
    9. ' "' → logprob: -14.062013626098633
    10. ' 
' → logprob: -14.062013626098633

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022999993234407157
    2. ':
' → logprob: -9.000229835510254
    3. '():' → logprob: -9.750229835510254
    4. '):' → logprob: -10.750229835510254
    5. '(' → logprob: -11.750229835510254
    6. ':return' → logprob: -12.125229835510254
    7. ':**' → logprob: -12.250229835510254
    8. '<|end|>' → logprob: -12.750229835510254
    9. ' :' → logprob: -13.375229835510254
    10. '   ' → logprob: -13.875229835510254

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5343306660652161
    2. ':' → logprob: -0.9093306660652161
    3. ' ' → logprob: -5.40933084487915
    4. '   ' → logprob: -6.15933084487915
    5. ':
' → logprob: -7.28433084487915
    6. '<|end|>' → logprob: -7.40933084487915
    7. '    ' → logprob: -7.78433084487915
    8. ' if' → logprob: -7.78433084487915
    9. ':return' → logprob: -8.159330368041992
    10. ' :' → logprob: -8.284330368041992

Token 73: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2650355100631714
    2. ' if' → logprob: -1.8900355100631714
    3. '0' → logprob: -3.390035629272461
    4. 'i' → logprob: -4.640035629272461
    5. '       ' → logprob: -4.640035629272461
    6. 'return' → logprob: -4.765035629272461
    7. '#' (adapté à ' #') → logprob: -4.890035629272461
    8. ' ' → logprob: -5.140035629272461
    9. ' #' → logprob: -6.515035629272461
    10. 'result' → logprob: -7.015035629272461

Token 74: ' Computing' (ID: 76688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2081395983695984
    2. 'i' → logprob: -2.208139657974243
    3. '#' → logprob: -2.833139657974243
    4. ' i' → logprob: -5.083139419555664
    5. ' #' → logprob: -6.083139419555664
    6. 'if' → logprob: -6.458139419555664
    7. '       ' → logprob: -6.583139419555664
    8. '_' → logprob: -6.833139419555664
    9. '        ' → logprob: -7.083139419555664
    10. ' if' → logprob: -7.333139419555664

Token 75: ' mex' (ID: 32410)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2181079387664795
    2. '_' → logprob: -1.8431079387664795
    3. '(' → logprob: -3.4681079387664795
    4. ' (' → logprob: -6.343108177185059
    5. ':' → logprob: -6.718108177185059
    6. '   ' → logprob: -7.843108177185059
    7. '<|end|>' → logprob: -7.843108177185059
    8. '  ' → logprob: -7.968108177185059
    9. 'space' → logprob: -7.968108177185059
    10. ')' → logprob: -8.343108177185059

Token 76: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07429210841655731
    2. ':' → logprob: -3.1992921829223633
    3. ' (' → logprob: -3.9492921829223633
    4. ' ' → logprob: -5.449292182922363
    5. ' =' → logprob: -6.074292182922363
    6. '{' → logprob: -6.324292182922363
    7. '(
' → logprob: -7.199292182922363
    8. '_' → logprob: -7.949292182922363
    9. ' :' → logprob: -8.074292182922363
    10. '=' → logprob: -8.199292182922363

Token 77: ' all' (ID: 722)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5543820261955261
    2. ' {' → logprob: -0.9293820261955261
    3. ' ' → logprob: -3.679382085800171
    4. 'set' → logprob: -6.554381847381592
    5. ' set' → logprob: -6.804381847381592
    6. '{s' → logprob: -7.304381847381592
    7. '0' → logprob: -7.679381847381592
    8. '   ' → logprob: -8.05438232421875
    9. 's' → logprob: -8.30438232421875
    10. '  ' → logprob: -9.05438232421875

Token 78: ' reachable' (ID: 143580)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.7028942108154297
    2. ' possible' → logprob: -1.7028942108154297
    3. '(' → logprob: -2.3278942108154297
    4. ' states' → logprob: -2.8278942108154297
    5. ' moves' → logprob: -2.8278942108154297
    6. ' {' → logprob: -3.0778942108154297
    7. '(self' → logprob: -3.0778942108154297
    8. 'moves' → logprob: -3.2028942108154297
    9. '[' → logprob: -3.3278942108154297
    10. 'self' → logprob: -3.5778942108154297

Token 79: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.04040848836302757
    2. ' moves' → logprob: -3.9154083728790283
    3. ' positions' → logprob: -5.040408611297607
    4. ' grund' → logprob: -5.290408611297607
    5. 'grund' → logprob: -6.415408611297607
    6. ' values' → logprob: -6.540408611297607
    7. '_states' → logprob: -6.665408611297607
    8. '{' → logprob: -7.165408611297607
    9. ' {' → logprob: -7.165408611297607
    10. 'states' → logprob: -7.415408611297607

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09463205933570862
    2. '
' → logprob: -2.719632148742676
    3. ':
' → logprob: -4.344632148742676
    4. '\n' → logprob: -6.094632148742676
    5. '\' → logprob: -6.594632148742676
    6. ' ' → logprob: -6.594632148742676
    7. '<|end|>' → logprob: -6.594632148742676
    8. '' → logprob: -7.094632148742676
    9. '       ' → logprob: -7.344632148742676
    10. ' 
' → logprob: -7.594632148742676

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8289958238601685
    2. ' ' → logprob: -1.9539958238601685
    3. '\n' → logprob: -2.328995704650879
    4. '\' → logprob: -2.328995704650879
    5. ' 
' → logprob: -3.078995704650879
    6. 'n' → logprob: -3.203995704650879
    7. '
' → logprob: -3.453995704650879
    8. '   ' → logprob: -3.953995704650879
    9. '    ' → logprob: -4.453995704650879
    10. '<|end|>' → logprob: -4.703995704650879

Token 82: ' #' (ID: 1069)
  Prédit: ' reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reachable' → logprob: -0.9805551767349243
    2. ' moves' → logprob: -1.1055551767349243
    3. ' states' → logprob: -2.7305550575256348
    4. '       ' → logprob: -2.9805550575256348
    5. 'moves' → logprob: -3.1055550575256348
    6. ' next' → logprob: -3.1055550575256348
    7. ' results' → logprob: -3.7305550575256348
    8. ' s' → logprob: -3.8555550575256348
    9. ' grund' → logprob: -5.355555057525635
    10. 'reachable' → logprob: -5.355555057525635

Token 83: ' moves' (ID: 19523)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17747211456298828
    2. 'm' → logprob: -2.4274721145629883
    3. 'r' → logprob: -4.177472114562988
    4. 's' → logprob: -4.302472114562988
    5. ' {' → logprob: -4.802472114562988
    6. ' s' → logprob: -5.302472114562988
    7. 'n' → logprob: -5.302472114562988
    8. '{' → logprob: -5.552472114562988
    9. ' ' → logprob: -5.677472114562988
    10. ' 
' → logprob: -5.802472114562988

Token 84: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24508321285247803
    2. ' =' → logprob: -2.3700833320617676
    3. ':' → logprob: -2.6200833320617676
    4. '<|end|>' → logprob: -3.8700833320617676
    5. ' :' → logprob: -3.9950833320617676
    6. '=' → logprob: -4.995083332061768
    7. '  ' → logprob: -6.120083332061768
    8. '<|end|>' → logprob: -6.495083332061768
    9. '  
' → logprob: -8.24508285522461
    10. ' ,' → logprob: -8.74508285522461

Token 85: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009863277897238731
    2. ' 
' → logprob: -5.134863376617432
    3. '  
' → logprob: -7.009863376617432
    4. '(' → logprob: -7.134863376617432
    5. '\' → logprob: -7.384863376617432
    6. '[' → logprob: -8.509862899780273
    7. '<|end|>' → logprob: -9.009862899780273
    8. ' \' → logprob: -9.134862899780273
    9. ':' → logprob: -9.259862899780273
    10. '_' → logprob: -9.384862899780273

Token 86: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02267518639564514
    2. ' 
' → logprob: -4.147675037384033
    3. '\' → logprob: -6.647675037384033
    4. '<|end|>' → logprob: -6.647675037384033
    5. '  
' → logprob: -6.772675037384033
    6. ' \' → logprob: -7.147675037384033
    7. '\n' → logprob: -7.522675037384033
    8. '
' → logprob: -8.022675514221191
    9. 'n' → logprob: -8.272675514221191
    10. 'r' → logprob: -9.022675514221191

Token 87: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01124634686857462
    2. 'n' → logprob: -6.261246204376221
    3. ' 
' → logprob: -6.386246204376221
    4. 'r' → logprob: -6.511246204376221
    5. ' \' → logprob: -7.011246204376221
    6. '    ' → logprob: -7.011246204376221
    7. '#' → logprob: -7.261246204376221
    8. '   ' → logprob: -8.011246681213379
    9. '     
' → logprob: -8.011246681213379
    10. '\' → logprob: -8.261246681213379

Token 88: 'a' (ID: 64)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9768651723861694
    2. '1' → logprob: -1.4768651723861694
    3. ')' → logprob: -1.8518651723861694
    4. 'self' → logprob: -2.976865291595459
    5. ' w' → logprob: -3.226865291595459
    6. 'white' → logprob: -3.476865291595459
    7. ' white' → logprob: -3.601865291595459
    8. ' ' → logprob: -4.101865291595459
    9. ' )' → logprob: -4.101865291595459
    10. '0' → logprob: -4.476865291595459

Token 89: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3041795790195465
    2. ' -' → logprob: -2.6791796684265137
    3. ' ,' → logprob: -2.9291796684265137
    4. '-' → logprob: -3.4291796684265137
    5. ' ' → logprob: -3.4291796684265137
    6. ')' → logprob: -4.429179668426514
    7. ' //' → logprob: -4.679179668426514
    8. 'b' → logprob: -4.804179668426514
    9. ' >' → logprob: -4.804179668426514
    10. ' >>' → logprob: -5.554179668426514

Token 90: ' remove' (ID: 6234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02562369406223297
    2. ')' → logprob: -5.525623798370361
    3. ':' → logprob: -6.150623798370361
    4. ' "' → logprob: -6.525623798370361
    5. ' \' → logprob: -6.900623798370361
    6. ' =' → logprob: -6.900623798370361
    7. '  ' → logprob: -6.900623798370361
    8. ' white' → logprob: -6.900623798370361
    9. ' (' → logprob: -7.025623798370361
    10. '"' → logprob: -7.025623798370361

Token 91: ' one' (ID: 1001)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022034015506505966
    2. '1' → logprob: -4.022034168243408
    3. '_' → logprob: -6.272034168243408
    4. ' one' → logprob: -7.022034168243408
    5. ' a' → logprob: -8.52203369140625
    6. ' `' → logprob: -9.02203369140625
    7. '  ' → logprob: -9.14703369140625
    8. ' whitespace' → logprob: -9.27203369140625
    9. '0' → logprob: -9.77203369140625
    10. ' white' → logprob: -10.02203369140625

Token 92: ' white' (ID: 6461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5841262340545654
    2. ' ' → logprob: -0.8341262340545654
    3. ')' → logprob: -6.0841264724731445
    4. ' _' → logprob: -6.8341264724731445
    5. '.' → logprob: -7.3341264724731445
    6. '<|end|>' → logprob: -7.7091264724731445
    7. '_white' → logprob: -7.7091264724731445
    8. 'space' → logprob: -7.8341264724731445
    9. ' )' → logprob: -7.9591264724731445
    10. ',' → logprob: -8.084126472473145

Token 93: ' stone' (ID: 14352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9889489412307739
    2. ',' → logprob: -1.363948941230774
    3. '_' → logprob: -1.613948941230774
    4. ' or' → logprob: -2.7389488220214844
    5. ')' → logprob: -3.1139488220214844
    6. '<|end|>' → logprob: -4.113948822021484
    7. '.' → logprob: -4.238948822021484
    8. 'or' → logprob: -5.238948822021484
    9. ' ,' → logprob: -5.613948822021484
    10. 'stone' → logprob: -5.738948822021484

Token 94: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8199766278266907
    2. ',' → logprob: -2.069976568222046
    3. '\n' → logprob: -2.069976568222046
    4. ' 
' → logprob: -2.944976568222046
    5. ' ' → logprob: -3.194976568222046
    6. '  
' → logprob: -3.194976568222046
    7. '<|end|>' → logprob: -3.194976568222046
    8. '\' → logprob: -3.319976568222046
    9. ':' → logprob: -3.319976568222046
    10. '    
' → logprob: -4.944976806640625

Token 95: ' (' (ID: 350)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.45073091983795166
    2. '
' → logprob: -1.8257309198379517
    3. '\' → logprob: -2.825730800628662
    4. ' ' → logprob: -2.950730800628662
    5. '  
' → logprob: -3.200730800628662
    6. '\n' → logprob: -3.700730800628662
    7. '' → logprob: -5.325730800628662
    8. ' \' → logprob: -6.075730800628662
    9. '\x' → logprob: -6.325730800628662
    10. ' 

' → logprob: -6.325730800628662

Token 96: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0022571911104023457
    2. ' self' → logprob: -6.502257347106934
    3. 'max' → logprob: -7.502257347106934
    4. 'white' → logprob: -9.252257347106934
    5. ' ' → logprob: -10.877257347106934
    6. ' max' → logprob: -11.002257347106934
    7. '   ' → logprob: -11.002257347106934
    8. '       ' → logprob: -11.252257347106934
    9. '(self' → logprob: -11.502257347106934
    10. ')' → logprob: -12.377257347106934

Token 97: '-' (ID: 12)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2218993902206421
    2. '-' → logprob: -1.971899390220642
    3. ' -' → logprob: -2.8468995094299316
    4. '   ' → logprob: -7.721899509429932
    5. ' ' → logprob: -8.096899032592773
    6. 'hit' → logprob: -8.596899032592773
    7. 'HITE' → logprob: -8.846899032592773
    8. 'hi' → logprob: -8.971899032592773
    9. ',' → logprob: -9.596899032592773
    10. '  ' → logprob: -9.846899032592773

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062292225658893585
    2. ' ' → logprob: -2.8122923374176025
    3. '    ' → logprob: -9.062292098999023
    4. '   ' → logprob: -9.562292098999023
    5. ' -' → logprob: -9.812292098999023
    6. '  ' → logprob: -11.062292098999023
    7. ' )' → logprob: -11.562292098999023
    8. ',' → logprob: -12.062292098999023
    9. ')' → logprob: -12.062292098999023
    10. ' >' → logprob: -12.187292098999023

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023587265983223915
    2. ')' → logprob: -3.773587226867676
    3. ',
' → logprob: -8.523587226867676
    4. ' ,' → logprob: -9.898587226867676
    5. ',)' → logprob: -10.273587226867676
    6. ' )' → logprob: -11.023587226867676
    7. ',

' → logprob: -11.273587226867676
    8. '-' → logprob: -11.648587226867676
    9. '),' → logprob: -12.023587226867676
    10. '       ' → logprob: -13.398587226867676

Token 100: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.39762207865715027
    2. ' b' → logprob: -1.1476221084594727
    3. 'self' → logprob: -5.147622108459473
    4. ' self' → logprob: -6.022622108459473
    5. ' black' → logprob: -6.397622108459473
    6. 'black' → logprob: -7.272622108459473
    7. ' ' → logprob: -10.022622108459473
    8. ')' → logprob: -12.022622108459473
    9. '   ' → logprob: -12.272622108459473
    10. 's' → logprob: -12.272622108459473

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009874134324491024
    2. ',' → logprob: -5.25987434387207
    3. '-' → logprob: -5.75987434387207
    4. '),' → logprob: -7.38487434387207
    5. ' -' → logprob: -7.75987434387207
    6. ' )' → logprob: -8.63487434387207
    7. ')
' → logprob: -8.88487434387207
    8. '       ' → logprob: -11.00987434387207
    9. ')

' → logprob: -11.13487434387207
    10. '   ' → logprob: -11.25987434387207

Token 102: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0170711278915405
    2. '
' → logprob: -1.1420711278915405
    3. '<|end|>' → logprob: -1.5170711278915405
    4. '\n' → logprob: -3.51707124710083
    5. '       ' → logprob: -3.76707124710083
    6. ',' → logprob: -4.01707124710083
    7. '\' → logprob: -4.89207124710083
    8. '<|end|>' → logprob: -5.76707124710083
    9. '' → logprob: -6.14207124710083
    10. '   ' → logprob: -6.26707124710083

Token 103: ' w' (ID: 286)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16039350628852844
    2. 'self' → logprob: -1.910393476486206
    3. ' white' → logprob: -9.535393714904785
    4. ' ' → logprob: -10.160393714904785
    5. ' ' → logprob: -10.535393714904785
    6. '0' → logprob: -12.035393714904785
    7. '<|end|>' → logprob: -12.160393714904785
    8. ' w' → logprob: -12.410393714904785
    9. 'white' → logprob: -12.535393714904785
    10. '(self' → logprob: -12.660393714904785

Token 104: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1429726779460907
    2. '>' → logprob: -2.017972707748413
    3. '-' → logprob: -9.392972946166992
    4. ' ' → logprob: -9.517972946166992
    5. '1' → logprob: -10.142972946166992
    6. '<|end|>' → logprob: -10.767972946166992
    7. '   ' → logprob: -11.392972946166992
    8. ' >=' → logprob: -11.517972946166992
    9. ' -' → logprob: -11.517972946166992
    10. '<|end|>' → logprob: -11.892972946166992

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603730209171772
    2. ' ' → logprob: -4.141037464141846
    3. '0' → logprob: -13.516036987304688
    4. '>' → logprob: -14.141036987304688
    5. '```' → logprob: -15.516036987304688
    6. '<|end|>' → logprob: -15.766036987304688
    7. '  ' → logprob: -16.141036987304688
    8. '   ' → logprob: -16.141036987304688
    9. '=' → logprob: -16.141036987304688
    10. ' ' → logprob: -16.703536987304688

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. ' ' → logprob: -10.750028610229492
    3. '0' → logprob: -11.875028610229492
    4. '>' → logprob: -14.875028610229492
    5. '```' → logprob: -17.500028610229492
    6. '   ' → logprob: -18.000028610229492
    7. '۱' → logprob: -18.312528610229492
    8. '

' → logprob: -18.312528610229492
    9. '１' → logprob: -18.812528610229492
    10. '  ' → logprob: -18.937528610229492

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22432257235050201
    2. '       ' → logprob: -2.599322557449341
    3. '<|end|>' → logprob: -2.724322557449341
    4. '\n' → logprob: -3.224322557449341
    5. ')' → logprob: -4.59932279586792
    6. '<|end|>' → logprob: -5.84932279586792
    7. '\' → logprob: -6.59932279586792
    8. ',' → logprob: -6.84932279586792
    9. '' → logprob: -7.09932279586792
    10. '   ' → logprob: -7.22432279586792

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35621413588523865
    2. '       ' → logprob: -1.731214165687561
    3. '<|end|>' → logprob: -2.9812140464782715
    4. '\n' → logprob: -3.1062140464782715
    5. ')' → logprob: -4.6062140464782715
    6. '   ' → logprob: -5.6062140464782715
    7. ':' → logprob: -5.6062140464782715
    8. '\' → logprob: -6.4812140464782715
    9. ',' → logprob: -6.8562140464782715
    10. '<|end|>' → logprob: -6.9812140464782715

Token 109: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3667077422142029
    2. '<|end|>' → logprob: -1.9917078018188477
    3. '       ' → logprob: -2.6167078018188477
    4. '\n' → logprob: -2.8667078018188477
    5. ')' → logprob: -4.491707801818848
    6. ' 
' → logprob: -4.991707801818848
    7. '\' → logprob: -5.241707801818848
    8. '  
' → logprob: -6.366707801818848
    9. ',' → logprob: -6.366707801818848
    10. '        
' → logprob: -6.491707801818848

Token 110: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02948940545320511
    2. ' ' → logprob: -4.279489517211914
    3. ')' → logprob: -4.779489517211914
    4. '<|end|>' → logprob: -5.654489517211914
    5. '   ' → logprob: -7.029489517211914
    6. '        ' → logprob: -8.154489517211914
    7. '    ' → logprob: -8.529489517211914
    8. ',' → logprob: -8.654489517211914
    9. ' )' → logprob: -8.654489517211914
    10. ' (' → logprob: -8.779489517211914

Token 111: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3757859468460083
    2. 'a' → logprob: -1.3757859468460083
    3. ' b' → logprob: -4.125785827636719
    4. 'w' → logprob: -4.625785827636719
    5. ' ' → logprob: -5.375785827636719
    6. ')' → logprob: -5.375785827636719
    7. '     ' → logprob: -5.500785827636719
    8. '   ' → logprob: -5.500785827636719
    9. ' a' → logprob: -5.750785827636719
    10. ' )' → logprob: -5.875785827636719

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012190054985694587
    2. ' )' → logprob: -9.3751220703125
    3. '   ' → logprob: -11.0001220703125
    4. ' ' → logprob: -12.0001220703125
    5. '    ' → logprob: -12.5001220703125
    6. ')
' → logprob: -12.8751220703125
    7. '     ' → logprob: -13.6251220703125
    8. '  ' → logprob: -13.7501220703125
    9. 'a' → logprob: -13.8751220703125
    10. ' if' → logprob: -14.0001220703125

Token 113: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.062027063220739365
    2. 'remove' → logprob: -2.8120269775390625
    3. ' ' → logprob: -11.312026977539062
    4. ' ' → logprob: -11.937026977539062
    5. ' if' → logprob: -12.187026977539062
    6. '
' → logprob: -12.187026977539062
    7. '.remove' → logprob: -12.687026977539062
    8. '    ' → logprob: -12.812026977539062
    9. '_remove' → logprob: -12.812026977539062
    10. '	remove' → logprob: -12.812026977539062

Token 114: ' ' (ID: 220)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.0027730243746191263
    2. 'one' → logprob: -6.127772808074951
    3. ' ' → logprob: -7.502772808074951
    4. ' ' → logprob: -10.75277328491211
    5. '_one' → logprob: -12.37777328491211
    6. '  ' → logprob: -12.50277328491211
    7. ' white' → logprob: -13.25277328491211
    8. ' a' → logprob: -14.12777328491211
    9. ' black' → logprob: -14.12777328491211
    10. '   ' → logprob: -14.75277328491211

Token 115: '1' (ID: 16)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.47429922223091125
    2. 'one' → logprob: -0.9742991924285889
    3. ' ' → logprob: -8.849299430847168
    4. ' black' → logprob: -10.724299430847168
    5. 'black' → logprob: -10.974299430847168
    6. 'white' → logprob: -11.224299430847168
    7. ' white' → logprob: -12.224299430847168
    8. '   ' → logprob: -12.474299430847168
    9. 'a' → logprob: -12.849299430847168
    10. ' a' → logprob: -13.099299430847168

Token 116: ' to' (ID: 316)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.2060113102197647
    2. ' ' → logprob: -1.8310112953186035
    3. ' black' → logprob: -3.8310112953186035
    4. 'white' → logprob: -5.7060112953186035
    5. ' ' → logprob: -8.206011772155762
    6. '_white' → logprob: -8.331011772155762
    7. ' whitespace' → logprob: -8.456011772155762
    8. '<|end|>' → logprob: -9.956011772155762
    9. 'black' → logprob: -10.331011772155762
    10. '  ' → logprob: -10.706011772155762

Token 117: ' white' (ID: 6461)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.57964688539505
    2. 'self' → logprob: -1.5796468257904053
    3. ' white' → logprob: -2.0796468257904053
    4. ' ' → logprob: -2.7046468257904053
    5. ' black' → logprob: -3.4546468257904053
    6. 'white' → logprob: -4.954647064208984
    7. '<|end|>' → logprob: -5.954647064208984
    8. 'black' → logprob: -8.079647064208984
    9. ' (' → logprob: -9.079647064208984
    10. ' ' → logprob: -9.454647064208984

Token 118: ' stones' (ID: 38940)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1055867075920105
    2. ' _' → logprob: -3.6055867671966553
    3. '_st' → logprob: -4.105586528778076
    4. ' ' → logprob: -4.355586528778076
    5. ' stones' → logprob: -4.355586528778076
    6. 's' → logprob: -4.980586528778076
    7. 'stones' → logprob: -5.230586528778076
    8. '_s' → logprob: -5.480586528778076
    9. ')' → logprob: -5.605586528778076
    10. '_white' → logprob: -5.605586528778076

Token 119: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.425379991531372
    2. '<|end|>' → logprob: -1.800379991531372
    3. '    ' → logprob: -2.425379991531372
    4. '   ' → logprob: -2.425379991531372
    5. 's' → logprob: -2.550379991531372
    6. '[' → logprob: -3.175379991531372
    7. ')' → logprob: -3.550379991531372
    8. '       ' → logprob: -3.550379991531372
    9. ' if' → logprob: -3.550379991531372
    10. '     ' → logprob: -3.675379991531372

Token 120: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.242065191268921
    2. '_' → logprob: -1.617065191268921
    3. '<|end|>' → logprob: -1.867065191268921
    4. 's' → logprob: -2.117065191268921
    5. ')' → logprob: -2.367065191268921
    6. '-' → logprob: -2.617065191268921
    7. '+' → logprob: -3.992065191268921
    8. '>' → logprob: -4.9920654296875
    9. ' -' → logprob: -4.9920654296875
    10. '<|end|>' → logprob: -5.2420654296875

Token 121: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.5539125800132751
    2. ' white' → logprob: -1.92891263961792
    3. 'black' → logprob: -2.42891263961792
    4. 'white' → logprob: -2.67891263961792
    5. '_black' → logprob: -2.92891263961792
    6. '_white' → logprob: -3.42891263961792
    7. 'self' → logprob: -4.05391263961792
    8. ' ' → logprob: -4.55391263961792
    9. '<|end|>' → logprob: -5.55391263961792
    10. ' self' → logprob: -6.05391263961792

Token 122: ' stones' (ID: 38940)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10866569727659225
    2. ' ' → logprob: -2.733665704727173
    3. '<|end|>' → logprob: -4.733665466308594
    4. ' _' → logprob: -5.108665466308594
    5. ')' → logprob: -5.108665466308594
    6. ' stones' → logprob: -5.358665466308594
    7. 'stones' → logprob: -5.358665466308594
    8. 's' → logprob: -5.983665466308594
    9. '>' → logprob: -6.858665466308594
    10. ' >' → logprob: -7.358665466308594

Token 123: ' <=' (ID: 5017)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5039955973625183
    2. ' if' → logprob: -1.628995656967163
    3. '       ' → logprob: -2.253995656967163
    4. '<|end|>' → logprob: -3.753995656967163
    5. ' ' → logprob: -4.253995418548584
    6. ')' → logprob: -4.253995418548584
    7. ',' → logprob: -4.628995418548584
    8. '   ' → logprob: -4.753995418548584
    9. '):' → logprob: -5.378995418548584
    10. '
' → logprob: -5.503995418548584

Token 124: ' w' (ID: 286)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4349634349346161
    2. ' self' → logprob: -1.0599634647369385
    3. ' black' → logprob: -5.934963226318359
    4. ' ' → logprob: -6.184963226318359
    5. '<|end|>' → logprob: -7.434963226318359
    6. 'black' → logprob: -8.18496322631836
    7. 'b' → logprob: -8.80996322631836
    8. ' b' → logprob: -8.93496322631836
    9. ' white' → logprob: -9.43496322631836
    10. ' ' → logprob: -9.43496322631836

Token 125: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2169697284698486
    2. ' ' → logprob: -1.4669697284698486
    3. '<|end|>' → logprob: -2.3419697284698486
    4. ' if' → logprob: -2.4669697284698486
    5. '   ' → logprob: -3.0919697284698486
    6. '       ' → logprob: -3.5919697284698486
    7. ':' → logprob: -3.5919697284698486
    8. ',' → logprob: -3.5919697284698486
    9. ')' → logprob: -3.8419697284698486
    10. '    ' → logprob: -3.9669697284698486

Token 126: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0885566994547844
    2. '1' → logprob: -3.4635567665100098
    3. ')' → logprob: -3.7135567665100098
    4. ' )' → logprob: -4.83855676651001
    5. '<|end|>' → logprob: -5.58855676651001
    6. '    ' → logprob: -5.83855676651001
    7. ' 
' → logprob: -6.08855676651001
    8. '       ' → logprob: -6.21355676651001
    9. '   ' → logprob: -6.71355676651001
    10. '  ' → logprob: -6.83855676651001

Token 127: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012985032051801682
    2. '<|end|>' → logprob: -4.5129852294921875
    3. ' 
' → logprob: -6.8879852294921875
    4. '  ' → logprob: -9.137985229492188
    5. ' )' → logprob: -9.137985229492188
    6. ')' → logprob: -9.137985229492188
    7. '        ' → logprob: -9.512985229492188
    8. '       ' → logprob: -9.887985229492188
    9. '    ' → logprob: -10.012985229492188
    10. '   ' → logprob: -10.262985229492188

Token 128: '    ' (ID: 257)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040440887212753296
    2. '<|end|>' → logprob: -3.540440797805786
    3. ')' → logprob: -5.540441036224365
    4. '[' → logprob: -7.040441036224365
    5. ' )' → logprob: -7.290441036224365
    6. ' (' → logprob: -7.415441036224365
    7. ' ' → logprob: -7.540441036224365
    8. '<|end|>' → logprob: -7.665441036224365
    9. 'b' → logprob: -7.790441036224365
    10. ' 
' → logprob: -8.040440559387207

Token 129: ' for' (ID: 395)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.34076058864593506
    2. ' self' → logprob: -1.715760588645935
    3. 'self' → logprob: -3.7157607078552246
    4. ' b' → logprob: -4.090760707855225
    5. ' for' → logprob: -4.340760707855225
    6. 'black' → logprob: -4.590760707855225
    7. 'b' → logprob: -4.840760707855225
    8. ' white' → logprob: -4.840760707855225
    9. ' range' → logprob: -5.090760707855225
    10. ' ' → logprob: -5.840760707855225

Token 130: ' x' (ID: 1215)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6848660707473755
    2. ' i' → logprob: -0.9348660707473755
    3. ' black' → logprob: -3.309865951538086
    4. 'b' → logprob: -4.059865951538086
    5. 'i' → logprob: -4.059865951538086
    6. ' k' → logprob: -5.059865951538086
    7. ' w' → logprob: -5.059865951538086
    8. ' stones' → logprob: -5.059865951538086
    9. ' j' → logprob: -5.809865951538086
    10. ' x' → logprob: -5.934865951538086

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004257427528500557
    2. 'in' → logprob: -5.5042572021484375
    3. ' ' → logprob: -9.879257202148438
    4. 'x' → logprob: -10.004257202148438
    5. 's' → logprob: -10.879257202148438
    6. ' i' → logprob: -11.004257202148438
    7. 'n' → logprob: -11.504257202148438
    8. 'range' → logprob: -12.004257202148438
    9. 'i' → logprob: -12.129257202148438
    10. ' x' → logprob: -12.254257202148438

Token 132: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03806157782673836
    2. 'range' → logprob: -3.2880616188049316
    3. ' ' → logprob: -11.538061141967773
    4. '   ' → logprob: -12.788061141967773
    5. '	range' → logprob: -13.413061141967773
    6. ' xrange' → logprob: -13.538061141967773
    7. 'self' → logprob: -14.038061141967773
    8. '(range' → logprob: -14.288061141967773
    9. ' self' → logprob: -14.413061141967773
    10. '  ' → logprob: -14.413061141967773

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032924942206591368
    2. '0' → logprob: -6.753292560577393
    3. ' ' → logprob: -7.003292560577393
    4. 'self' → logprob: -7.003292560577393
    5. 'range' → logprob: -9.128292083740234
    6. '   ' → logprob: -9.253292083740234
    7. ' self' → logprob: -10.878292083740234
    8. '       ' → logprob: -11.253292083740234
    9. ' range' → logprob: -11.378292083740234
    10. 'black' → logprob: -11.628292083740234

Token 134: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0792248547077179
    2. ' ,' → logprob: -2.7042248249053955
    3. '..' → logprob: -5.579225063323975
    4. 'self' → logprob: -5.954225063323975
    5. ',self' → logprob: -6.704225063323975
    6. '...' → logprob: -8.079224586486816
    7. ':self' → logprob: -8.079224586486816
    8. ' ..' → logprob: -8.329224586486816
    9. ' ' → logprob: -8.704224586486816
    10. '
' → logprob: -8.704224586486816

Token 135: 'b' (ID: 65)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22811593115329742
    2. ' self' → logprob: -1.6031159162521362
    3. ' white' → logprob: -6.853116035461426
    4. 'white' → logprob: -6.978116035461426
    5. 'w' → logprob: -8.353116035461426
    6. ' ' → logprob: -8.603116035461426
    7. ' w' → logprob: -9.103116035461426
    8. 's' → logprob: -10.728116035461426
    9. '	self' → logprob: -10.978116035461426
    10. '(self' → logprob: -11.353116035461426

Token 136: '_min' (ID: 15950)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22048217058181763
    2. ']:
' → logprob: -2.720482110977173
    3. ']:' → logprob: -2.845482110977173
    4. ' if' → logprob: -3.220482110977173
    5. '],' → logprob: -4.345482349395752
    6. 'if' → logprob: -4.595482349395752
    7. ' ]' → logprob: -5.470482349395752
    8. '   ' → logprob: -6.220482349395752
    9. '       ' → logprob: -6.845482349395752
    10. ' ' → logprob: -7.595482349395752

Token 137: '],' (ID: 2155)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04962971806526184
    2. '(' → logprob: -3.1746296882629395
    3. 'self' → logprob: -5.9246296882629395
    4. '(s' → logprob: -7.0496296882629395
    5. 'elf' → logprob: -7.2996296882629395
    6. '(w' → logprob: -7.4246296882629395
    7. ',' → logprob: -7.4246296882629395
    8. ']' → logprob: -7.6746296882629395
    9. ',self' → logprob: -9.049630165100098
    10. '](' → logprob: -9.299630165100098

Token 138: ' remove' (ID: 6234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6826381683349609
    2. ' x' → logprob: -1.807638168334961
    3. 'x' → logprob: -2.057638168334961
    4. ' b' → logprob: -2.807638168334961
    5. '1' → logprob: -3.307638168334961
    6. ' self' → logprob: -4.307638168334961
    7. 'b' → logprob: -4.307638168334961
    8. ')' → logprob: -4.557638168334961
    9. ' range' → logprob: -4.807638168334961
    10. ' w' → logprob: -4.807638168334961

Token 139: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3803372085094452
    2. 'x' → logprob: -2.1303372383117676
    3. ' black' → logprob: -2.2553372383117676
    4. ' ' → logprob: -3.0053372383117676
    5. ' white' → logprob: -4.005337238311768
    6. '1' → logprob: -4.880337238311768
    7. ' b' → logprob: -5.755337238311768
    8. ' min' → logprob: -6.005337238311768
    9. 'black' → logprob: -6.005337238311768
    10. ' _' → logprob: -6.255337238311768

Token 140: ' black' (ID: 5960)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055985063314437866
    2. ')' → logprob: -3.8059849739074707
    3. ' ' → logprob: -4.680984973907471
    4. ' _' → logprob: -4.930984973907471
    5. '_black' → logprob: -5.430984973907471
    6. '<|end|>' → logprob: -5.930984973907471
    7. ' black' → logprob: -6.680984973907471
    8. ' stones' → logprob: -6.680984973907471
    9. ' ' → logprob: -7.180984973907471
    10. 's' → logprob: -7.680984973907471

Token 141: ' stones' (ID: 38940)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5801218748092651
    2. ')' → logprob: -0.9551218748092651
    3. ' stones' → logprob: -3.7051219940185547
    4. 's' → logprob: -4.205121994018555
    5. 'stones' → logprob: -4.955121994018555
    6. ' ' → logprob: -6.580121994018555
    7. '<|end|>' → logprob: -6.955121994018555
    8. ' _' → logprob: -6.955121994018555
    9. '_s' → logprob: -7.205121994018555
    10. '[' → logprob: -7.580121994018555

Token 142: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9671523571014404
    2. ':' → logprob: -1.2171523571014404
    3. '
' → logprob: -2.0921523571014404
    4. '   ' → logprob: -3.2171523571014404
    5. ':
' → logprob: -3.2171523571014404
    6. ')' → logprob: -3.3421523571014404
    7. ' ' → logprob: -4.5921525955200195
    8. '[' → logprob: -4.7171525955200195
    9. ',' → logprob: -4.7171525955200195
    10. '_' → logprob: -5.2171525955200195

Token 143: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05353469029068947
    2. 'x' → logprob: -3.053534746170044
    3. ' self' → logprob: -6.178534507751465
    4. 'self' → logprob: -7.178534507751465
    5. ' w' → logprob: -7.303534507751465
    6. ' white' → logprob: -7.553534507751465
    7. 'w' → logprob: -8.428534507751465
    8. ' ' → logprob: -8.553534507751465
    9. ' black' → logprob: -8.678534507751465
    10. ' b' → logprob: -8.928534507751465

Token 144: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.028533371165394783
    2. '<=' → logprob: -3.653533458709717
    3. ' ' → logprob: -6.903533458709717
    4. '<|end|>' → logprob: -7.278533458709717
    5. ' <' → logprob: -9.153532981872559
    6. '=' → logprob: -9.403532981872559
    7. ' >' → logprob: -9.778532981872559
    8. '[' → logprob: -10.528532981872559
    9. 's' → logprob: -10.653532981872559
    10. ' ≤' → logprob: -10.653532981872559

Token 145: ' w' (ID: 286)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4321613907814026
    2. 'self' → logprob: -1.0571613311767578
    3. ' white' → logprob: -5.807161331176758
    4. 'white' → logprob: -8.182161331176758
    5. ' ' → logprob: -9.557161331176758
    6. ' w' → logprob: -10.557161331176758
    7. '	self' → logprob: -10.932161331176758
    8. 'w' → logprob: -11.432161331176758
    9. ' ' → logprob: -11.682161331176758
    10. '```' → logprob: -12.182161331176758

Token 146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4137556254863739
    2. '       ' → logprob: -1.2887556552886963
    3. ':' → logprob: -4.038755416870117
    4. '<|end|>' → logprob: -4.413755416870117
    5. '   ' → logprob: -4.913755416870117
    6. ')' → logprob: -5.163755416870117
    7. ':
' → logprob: -5.663755416870117
    8. ')
' → logprob: -6.288755416870117
    9. '\n' → logprob: -6.288755416870117
    10. '        
' → logprob: -6.538755416870117

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23366470634937286
    2. ' 
' → logprob: -2.6086647510528564
    3. '
' → logprob: -3.1086647510528564
    4. '   ' → logprob: -3.6086647510528564
    5. '        
' → logprob: -4.233664512634277
    6. ')' → logprob: -4.358664512634277
    7. '  
' → logprob: -5.233664512634277
    8. '    
' → logprob: -5.733664512634277
    9. ' ' → logprob: -5.733664512634277
    10. ')
' → logprob: -5.858664512634277

Token 148: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.477946400642395
    2. '       ' → logprob: -1.352946400642395
    3. '\n' → logprob: -3.6029462814331055
    4. ' 
' → logprob: -3.7279462814331055
    5. '<|end|>' → logprob: -3.7279462814331055
    6. '   ' → logprob: -4.6029462814331055
    7. '  
' → logprob: -5.1029462814331055
    8. ')' → logprob: -5.2279462814331055
    9. ' ' → logprob: -5.4779462814331055
    10. ':' → logprob: -5.6029462814331055

Token 149: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42064163088798523
    2. '
' → logprob: -1.5456416606903076
    3. '        
' → logprob: -3.4206416606903076
    4. ' 
' → logprob: -3.7956416606903076
    5. '  
' → logprob: -4.2956414222717285
    6. '   ' → logprob: -4.2956414222717285
    7. ' ' → logprob: -4.6706414222717285
    8. ' if' → logprob: -4.9206414222717285
    9. '\n' → logprob: -5.1706414222717285
    10. 'def' → logprob: -5.5456414222717285

Token 150: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36100807785987854
    2. '
' → logprob: -3.1110081672668457
    3. 'results' → logprob: -3.1110081672668457
    4. ' results' → logprob: -3.2360081672668457
    5. 'w' → logprob: -3.4860081672668457
    6. 'moves' → logprob: -3.9860081672668457
    7. 'm' → logprob: -3.9860081672668457
    8. 'result' → logprob: -4.111008167266846
    9. ' w' → logprob: -4.361008167266846
    10. '   ' → logprob: -4.486008167266846

Token 151: ' number' (ID: 2086)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3102361857891083
    2. 'self' → logprob: -1.9352362155914307
    3. ' x' → logprob: -2.8102362155914307
    4. ' w' → logprob: -3.9352362155914307
    5. ' b' → logprob: -4.560235977172852
    6. ' not' → logprob: -4.935235977172852
    7. 'x' → logprob: -4.935235977172852
    8. ' black' → logprob: -5.185235977172852
    9. 'b' → logprob: -5.560235977172852
    10. 'w' → logprob: -6.060235977172852

Token 152: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27417030930519104
    2. ' of' → logprob: -2.274170398712158
    3. ')' → logprob: -3.149170398712158
    4. ' ' → logprob: -3.274170398712158
    5. '_of' → logprob: -4.274170398712158
    6. '<|end|>' → logprob: -4.774170398712158
    7. 'of' → logprob: -5.024170398712158
    8. '=' → logprob: -5.649170398712158
    9. ' _' → logprob: -5.774170398712158
    10. 's' → logprob: -5.774170398712158

Token 153: ' removed' (ID: 11906)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.16226744651794434
    2. ' white' → logprob: -2.2872674465179443
    3. 'black' → logprob: -3.9122674465179443
    4. 'white' → logprob: -5.537267684936523
    5. ' x' → logprob: -5.537267684936523
    6. ' stones' → logprob: -5.787267684936523
    7. 'w' → logprob: -6.037267684936523
    8. ' ' → logprob: -6.287267684936523
    9. '_black' → logprob: -6.287267684936523
    10. 'b' → logprob: -6.412267684936523

Token 154: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.05660143867135048
    2. ' white' → logprob: -4.056601524353027
    3. ' stones' → logprob: -4.181601524353027
    4. '_black' → logprob: -4.806601524353027
    5. ' ' → logprob: -5.056601524353027
    6. '_' → logprob: -5.806601524353027
    7. 'black' → logprob: -5.931601524353027
    8. '_white' → logprob: -7.431601524353027
    9. ' ' → logprob: -7.931601524353027
    10. 'stones' → logprob: -8.806601524353027

Token 155: ' stones' (ID: 38940)
  Prédit: ' stones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stones' → logprob: -0.031652193516492844
    2. 'stones' → logprob: -3.6566522121429443
    3. '_' → logprob: -6.281651973724365
    4. ' ' → logprob: -6.406651973724365
    5. 's' → logprob: -7.406651973724365
    6. '<|end|>' → logprob: -8.031652450561523
    7. ' black' → logprob: -8.281652450561523
    8. ' s' → logprob: -8.781652450561523
    9. '_s' → logprob: -9.281652450561523
    10. ' stone' → logprob: -9.281652450561523

Token 156: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.86316978931427
    2. ' must' → logprob: -1.36316978931427
    3. '<|end|>' → logprob: -1.98816978931427
    4. ' is' → logprob: -2.2381696701049805
    5. ' can' → logprob: -4.2381696701049805
    6. ' ' → logprob: -4.3631696701049805
    7. 'must' → logprob: -4.6131696701049805
    8. ' cannot' → logprob: -5.2381696701049805
    9. '<=' → logprob: -5.3631696701049805
    10. ' >' → logprob: -5.3631696701049805

Token 157: ' white' (ID: 6461)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38834407925605774
    2. ' self' → logprob: -1.1383440494537354
    3. ' white' → logprob: -6.8883442878723145
    4. 'white' → logprob: -8.388343811035156
    5. ' w' → logprob: -9.263343811035156
    6. 'w' → logprob: -9.888343811035156
    7. ' ' → logprob: -10.013343811035156
    8. ' black' → logprob: -11.138343811035156
    9. ' ' → logprob: -12.763343811035156
    10. '1' → logprob: -13.138343811035156

Token 158: ' stones' (ID: 38940)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37698760628700256
    2. ')' → logprob: -2.3769876956939697
    3. ':' → logprob: -2.6269876956939697
    4. '_' → logprob: -3.0019876956939697
    5. ':
' → logprob: -4.126987457275391
    6. ' 
' → logprob: -4.251987457275391
    7. ')
' → logprob: -4.626987457275391
    8. ' ' → logprob: -4.626987457275391
    9. '<|end|>' → logprob: -5.001987457275391
    10. '\n' → logprob: -5.126987457275391

Token 159: ' currently' (ID: 6821)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3167886734008789
    2. '       ' → logprob: -1.441788673400879
    3. '<|end|>' → logprob: -4.566788673400879
    4. '\n' → logprob: -4.816788673400879
    5. '        
' → logprob: -5.941788673400879
    6. ':' → logprob: -5.941788673400879
    7. ':
' → logprob: -6.066788673400879
    8. '   ' → logprob: -6.566788673400879
    9. '\' → logprob: -6.816788673400879
    10. ' 
' → logprob: -7.066788673400879

Token 160: ' there' (ID: 1354)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33229851722717285
    2. '       ' → logprob: -2.082298517227173
    3. '\n' → logprob: -3.082298517227173
    4. ':' → logprob: -3.332298517227173
    5. '   ' → logprob: -3.957298517227173
    6. ')' → logprob: -4.207298278808594
    7. ')
' → logprob: -4.832298278808594
    8. '<|end|>' → logprob: -4.832298278808594
    9. ':
' → logprob: -4.957298278808594
    10. '\' → logprob: -5.332298278808594

Token 161: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43169429898262024
    2. '       ' → logprob: -1.9316942691802979
    3. ':' → logprob: -2.306694269180298
    4. ':
' → logprob: -3.681694269180298
    5. '\n' → logprob: -4.181694507598877
    6. '<|end|>' → logprob: -4.181694507598877
    7. '   ' → logprob: -4.306694507598877
    8. ')' → logprob: -4.681694507598877
    9. ')
' → logprob: -5.181694507598877
    10. '):
' → logprob: -5.306694507598877

Token 162: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9702967405319214
    2. '       ' → logprob: -1.3452967405319214
    3. ':' → logprob: -1.7202967405319214
    4. '\n' → logprob: -2.595296859741211
    5. '   ' → logprob: -3.720296859741211
    6. '<|end|>' → logprob: -3.845296859741211
    7. '\' → logprob: -4.220296859741211
    8. ':
' → logprob: -4.345296859741211
    9. ' 
' → logprob: -5.345296859741211
    10. '        
' → logprob: -5.345296859741211

Token 163: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5706399083137512
    2. '       ' → logprob: -0.9456399083137512
    3. '\n' → logprob: -4.5706400871276855
    4. '   ' → logprob: -5.0706400871276855
    5. '        
' → logprob: -5.0706400871276855
    6. '  
' → logprob: -5.0706400871276855
    7. ' 
' → logprob: -5.1956400871276855
    8. '\' → logprob: -5.5706400871276855
    9. '<|end|>' → logprob: -6.0706400871276855
    10. '    
' → logprob: -6.6956400871276855

Token 164: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017132731154561043
    2. 'moves' → logprob: -5.767132759094238
    3. ' if' → logprob: -6.017132759094238
    4. '   ' → logprob: -6.267132759094238
    5. 'results' → logprob: -6.642132759094238
    6. 'result' → logprob: -6.892132759094238
    7. ' w' → logprob: -7.017132759094238
    8. 'def' → logprob: -7.142132759094238
    9. ' moves' → logprob: -7.142132759094238
    10. 'if' → logprob: -7.517132759094238

Token 165: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08321385085582733
    2. ' )' → logprob: -2.5832138061523438
    3. '   ' → logprob: -6.583213806152344
    4. ' ' → logprob: -7.083213806152344
    5. ')
' → logprob: -7.458213806152344
    6. 'def' → logprob: -8.083213806152344
    7. 'w' → logprob: -8.333213806152344
    8. ' )
' → logprob: -8.583213806152344
    9. ':' → logprob: -9.083213806152344
    10. '       ' → logprob: -9.458213806152344

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004940562648698688
    2. ' )' → logprob: -7.750494003295898
    3. '):' → logprob: -10.125494003295898
    4. '   ' → logprob: -11.375494003295898
    5. ')
' → logprob: -12.125494003295898
    6. '):
' → logprob: -13.625494003295898
    7. ' ' → logprob: -13.750494003295898
    8. 'def' → logprob: -13.875494003295898
    9. '    ' → logprob: -14.750494003295898
    10. ':' → logprob: -14.875494003295898

Token 167: ' replace' (ID: 13284)
  Prédit: ' remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.28150784969329834
    2. 'remove' → logprob: -2.406507968902588
    3. ' def' → logprob: -2.406507968902588
    4. ' split' → logprob: -4.031507968902588
    5. 'def' → logprob: -4.156507968902588
    6. '#' → logprob: -4.781507968902588
    7. ' #' → logprob: -5.031507968902588
    8. ' for' → logprob: -5.906507968902588
    9. 'split' → logprob: -6.281507968902588
    10. ' if' → logprob: -6.281507968902588

Token 168: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.13275668025016785
    2. '_' → logprob: -2.8827567100524902
    3. 'one' → logprob: -4.00775671005249
    4. ' (' → logprob: -4.50775671005249
    5. ' ' → logprob: -4.75775671005249
    6. ' all' → logprob: -4.88275671005249
    7. ' self' → logprob: -5.63275671005249
    8. '(' → logprob: -5.63275671005249
    9. 'self' → logprob: -5.75775671005249
    10. ' white' → logprob: -5.75775671005249

Token 169: ' white' (ID: 6461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7203177809715271
    2. ' white' → logprob: -0.8453177809715271
    3. '_white' → logprob: -3.345317840576172
    4. 'white' → logprob: -3.970317840576172
    5. ' black' → logprob: -4.220317840576172
    6. ' ' → logprob: -4.970317840576172
    7. ' _' → logprob: -5.095317840576172
    8. '_black' → logprob: -7.345317840576172
    9. 'black' → logprob: -8.095317840576172
    10. ' whitespace' → logprob: -8.220317840576172

Token 170: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.05025184899568558
    2. 'stone' → logprob: -3.6752519607543945
    3. '_' → logprob: -4.1752519607543945
    4. ' ' → logprob: -5.5502519607543945
    5. ' _' → logprob: -6.4252519607543945
    6. '<|end|>' → logprob: -7.0502519607543945
    7. '_st' → logprob: -7.4252519607543945
    8. ')' → logprob: -8.425251960754395
    9. ' stones' → logprob: -8.800251960754395
    10. '   ' → logprob: -9.175251960754395

Token 171: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.107606053352356
    2. '<|end|>' → logprob: -1.232606053352356
    3. ' with' → logprob: -2.8576059341430664
    4. ' ' → logprob: -2.8576059341430664
    5. '):' → logprob: -3.1076059341430664
    6. ',' → logprob: -3.1076059341430664
    7. ' and' → logprob: -3.7326059341430664
    8. '_' → logprob: -3.7326059341430664
    9. ')' → logprob: -3.9826059341430664
    10. '   ' → logprob: -4.107605934143066

Token 172: ' pod' (ID: 3155)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.9721808433532715
    2. ' black' → logprob: -1.0971808433532715
    3. ' self' → logprob: -2.0971808433532715
    4. 'self' → logprob: -2.5971808433532715
    5. ' the' → logprob: -3.2221808433532715
    6. 'white' → logprob: -3.7221808433532715
    7. 'black' → logprob: -4.7221808433532715
    8. ' stone' → logprob: -5.3471808433532715
    9. 'the' → logprob: -5.8471808433532715
    10. ' ' → logprob: -6.0971808433532715

Token 173: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5312402248382568
    2. ' )' → logprob: -1.6562402248382568
    3. 'e' → logprob: -2.656240224838257
    4. ' ' → logprob: -3.281240224838257
    5. '_' → logprob: -3.906240224838257
    6. ',' → logprob: -4.031240463256836
    7. ' with' → logprob: -4.031240463256836
    8. ' _' → logprob: -4.406240463256836
    9. ':' → logprob: -4.781240463256836
    10. 's' → logprob: -5.031240463256836

Token 174: ' one' (ID: 1001)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.2733902931213379
    2. ' one' → logprob: -2.148390293121338
    3. ' white' → logprob: -3.648390293121338
    4. ' self' → logprob: -4.273390293121338
    5. ' a' → logprob: -4.398390293121338
    6. 'black' → logprob: -4.398390293121338
    7. 'one' → logprob: -4.523390293121338
    8. ' another' → logprob: -4.648390293121338
    9. ' the' → logprob: -4.773390293121338
    10. 'self' → logprob: -5.148390293121338

Token 175: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.5351738929748535
    2. ' white' → logprob: -1.9101738929748535
    3. ' ' → logprob: -2.2851738929748535
    4. '_' → logprob: -2.6601738929748535
    5. '_white' → logprob: -3.4101738929748535
    6. '_black' → logprob: -3.7851738929748535
    7. ' _' → logprob: -4.5351738929748535
    8. ' stone' → logprob: -4.6601738929748535
    9. 'black' → logprob: -4.9101738929748535
    10. 'white' → logprob: -5.0351738929748535

Token 176: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.22582092881202698
    2. 'stone' → logprob: -2.725821018218994
    3. ')' → logprob: -2.850821018218994
    4. '   ' → logprob: -3.850821018218994
    5. ' stones' → logprob: -3.975821018218994
    6. '_' → logprob: -4.725821018218994
    7. '<|end|>' → logprob: -4.725821018218994
    8. ' ' → logprob: -5.350821018218994
    9. '       ' → logprob: -6.225821018218994
    10. '_st' → logprob: -6.350821018218994

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8730651140213013
    2. '
' → logprob: -1.4980651140213013
    3. '   ' → logprob: -2.6230649948120117
    4. '       ' → logprob: -2.6230649948120117
    5. ':
' → logprob: -3.4980649948120117
    6. '\n' → logprob: -3.6230649948120117
    7. '    
' → logprob: -4.248064994812012
    8. '(
' → logprob: -4.248064994812012
    9. ' 
' → logprob: -4.248064994812012
    10. ')' → logprob: -4.373064994812012

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009446268901228905
    2. '   ' → logprob: -6.009446144104004
    3. ' ' → logprob: -6.259446144104004
    4. '\n' → logprob: -7.009446144104004
    5. '        ' → logprob: -7.134446144104004
    6. ' 
' → logprob: -7.134446144104004
    7. '        
' → logprob: -7.759446144104004
    8. '    ' → logprob: -7.884446144104004
    9. '<|end|>' → logprob: -8.259446144104004
    10. 'n' → logprob: -8.384446144104004

Token 179: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009069492109119892
    2. '   ' → logprob: -6.884069442749023
    3. ' if' → logprob: -6.884069442749023
    4. ' 
' → logprob: -7.009069442749023
    5. '\n' → logprob: -7.009069442749023
    6. '
' → logprob: -7.259069442749023
    7. ' ' → logprob: -7.259069442749023
    8. ' return' → logprob: -7.509069442749023
    9. '        
' → logprob: -8.009069442749023
    10. 'return' → logprob: -8.134069442749023

Token 180: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007984781637787819
    2. '   ' → logprob: -5.632984638214111
    3. '        ' → logprob: -6.757984638214111
    4. ' ' → logprob: -6.882984638214111
    5. '    ' → logprob: -7.882984638214111
    6. ' if' → logprob: -8.25798511505127
    7. ')' → logprob: -8.38298511505127
    8. '        
' → logprob: -8.38298511505127
    9. ' \' → logprob: -8.50798511505127
    10. ' ' → logprob: -8.63298511505127

Token 181: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5211746692657471
    2. ' if' → logprob: -1.021174669265747
    3. '       ' → logprob: -3.146174669265747
    4. 'def' → logprob: -7.021174430847168
    5. '   ' → logprob: -7.146174430847168
    6. 'w' → logprob: -8.021174430847168
    7. 'return' → logprob: -8.521174430847168
    8. ' w' → logprob: -9.146174430847168
    9. '    ' → logprob: -9.146174430847168
    10. '
' → logprob: -9.396174430847168

Token 182: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3864964544773102
    2. ')' → logprob: -2.0114965438842773
    3. ' self' → logprob: -2.1364965438842773
    4. 'w' → logprob: -3.0114965438842773
    5. ' w' → logprob: -5.386496543884277
    6. ' white' → logprob: -5.386496543884277
    7. 'white' → logprob: -5.636496543884277
    8. ' )' → logprob: -5.761496543884277
    9. ',' → logprob: -7.136496543884277
    10. '   ' → logprob: -7.261496543884277

Token 183: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06584837287664413
    2. '-' → logprob: -2.8158483505249023
    3. ')' → logprob: -5.815848350524902
    4. ' ' → logprob: -7.940848350524902
    5. '   ' → logprob: -9.065848350524902
    6. '+' → logprob: -9.315848350524902
    7. ' +' → logprob: -9.440848350524902
    8. ',' → logprob: -9.815848350524902
    9. ' )' → logprob: -9.815848350524902
    10. ')-' → logprob: -9.940848350524902

Token 184: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.43790945410728455
    2. 'b' → logprob: -1.062909483909607
    3. ' black' → logprob: -4.9379096031188965
    4. ' self' → logprob: -7.4379096031188965
    5. ' white' → logprob: -7.5629096031188965
    6. 'self' → logprob: -8.062909126281738
    7. 'black' → logprob: -8.437909126281738
    8. ' w' → logprob: -9.187909126281738
    9. 'w' → logprob: -9.687909126281738
    10. ' ' → logprob: -9.687909126281738

Token 185: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9853519201278687
    2. ')' → logprob: -1.1103519201278687
    3. ' -' → logprob: -1.4853519201278687
    4. '+' → logprob: -3.110352039337158
    5. ' +' → logprob: -3.735352039337158
    6. '   ' → logprob: -6.985352039337158
    7. ' )' → logprob: -7.860352039337158
    8. ')
' → logprob: -8.2353515625
    9. '       ' → logprob: -8.8603515625
    10. ')+' → logprob: -8.9853515625

Token 186: ' ->' (ID: 2747)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6370919346809387
    2. ':' → logprob: -1.637091875076294
    3. '       ' → logprob: -3.137091875076294
    4. ':
' → logprob: -3.387091875076294
    5. '   ' → logprob: -3.512091875076294
    6. ' +' → logprob: -3.637091875076294
    7. ')' → logprob: -3.637091875076294
    8. '[' → logprob: -4.137092113494873
    9. '+' → logprob: -4.387092113494873
    10. '<|end|>' → logprob: -4.387092113494873

Token 187: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15893369913101196
    2. '(w' → logprob: -2.033933639526367
    3. '(self' → logprob: -4.283933639526367
    4. 'self' → logprob: -6.908933639526367
    5. ' self' → logprob: -7.408933639526367
    6. '(' → logprob: -7.658933639526367
    7. ' ' → logprob: -8.783933639526367
    8. ' w' → logprob: -10.533933639526367
    9. '   ' → logprob: -10.658933639526367
    10. '    ' → logprob: -11.033933639526367

Token 188: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49699464440345764
    2. ' self' → logprob: -1.1219946146011353
    3. 'w' → logprob: -2.871994733810425
    4. ' w' → logprob: -4.746994495391846
    5. ' ' → logprob: -8.246994972229004
    6. '   ' → logprob: -8.871994972229004
    7. '(self' → logprob: -9.371994972229004
    8. ' white' → logprob: -9.746994972229004
    9. '    ' → logprob: -9.871994972229004
    10. ' (' → logprob: -10.371994972229004

Token 189: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7008653879165649
    2. ' -' → logprob: -0.7008653879165649
    3. ',' → logprob: -5.450865268707275
    4. '+' → logprob: -6.325865268707275
    5. ' +' → logprob: -6.575865268707275
    6. ' ' → logprob: -9.575865745544434
    7. ')' → logprob: -10.200865745544434
    8. '   ' → logprob: -10.325865745544434
    9. ' ,' → logprob: -10.325865745544434
    10. '  ' → logprob: -11.575865745544434

Token 190: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5235047936439514
    2. ' b' → logprob: -0.8985047936439514
    3. ' ' → logprob: -9.398505210876465
    4. '+' → logprob: -9.398505210876465
    5. '-' → logprob: -9.648505210876465
    6. 'w' → logprob: -10.148505210876465
    7. ' +' → logprob: -10.648505210876465
    8. '    ' → logprob: -11.023505210876465
    9. ' w' → logprob: -11.023505210876465
    10. ' black' → logprob: -11.648505210876465

Token 191: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4151022434234619
    2. '-' → logprob: -1.915102243423462
    3. ' +' → logprob: -1.915102243423462
    4. ' -' → logprob: -3.540102243423462
    5. ')' → logprob: -4.165102005004883
    6. ' )' → logprob: -8.665102005004883
    7. '   ' → logprob: -9.290102005004883
    8. ' ' → logprob: -9.665102005004883
    9. ',' → logprob: -10.665102005004883
    10. ')+' → logprob: -10.727602005004883

Token 192: ' but' (ID: 889)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42335498332977295
    2. '   ' → logprob: -2.2983551025390625
    3. ')' → logprob: -2.7983551025390625
    4. '       ' → logprob: -2.9233551025390625
    5. '):' → logprob: -3.0483551025390625
    6. '
' → logprob: -3.7983551025390625
    7. '<|end|>' → logprob: -4.5483551025390625
    8. '(' → logprob: -5.0483551025390625
    9. ',' → logprob: -5.1733551025390625
    10. '_' → logprob: -5.4233551025390625

Token 193: ' white' (ID: 6461)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2518775463104248
    2. ' w' → logprob: -1.5018775463104248
    3. ' self' → logprob: -2.251877546310425
    4. 'self' → logprob: -2.251877546310425
    5. ')' → logprob: -3.001877546310425
    6. ' not' → logprob: -3.001877546310425
    7. ' (' → logprob: -3.501877546310425
    8. ' white' → logprob: -3.626877546310425
    9. 'not' → logprob: -3.751877546310425
    10. ' b' → logprob: -3.876877546310425

Token 194: ' decreases' (ID: 70943)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48825204372406006
    2. ')' → logprob: -2.3632521629333496
    3. '<|end|>' → logprob: -2.7382521629333496
    4. ' ' → logprob: -2.9882521629333496
    5. ' +' → logprob: -3.4882521629333496
    6. ' )' → logprob: -3.4882521629333496
    7. ' stone' → logprob: -3.6132521629333496
    8. '_' → logprob: -4.23825216293335
    9. ' -=' → logprob: -4.48825216293335
    10. '-' → logprob: -4.61325216293335

Token 195: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002202593954280019
    2. ' ' → logprob: -6.12720251083374
    3. ' one' → logprob: -11.877202987670898
    4. 'one' → logprob: -12.627202987670898
    5. '   ' → logprob: -12.752202987670898
    6. '-' → logprob: -13.502202987670898
    7. '0' → logprob: -13.627202987670898
    8. '
' → logprob: -14.752202987670898
    9. '' → logprob: -15.252202987670898
    10. ' -' → logprob: -15.377202987670898

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.394135612528771e-05
    2. ' ' → logprob: -10.125043869018555
    3. '0' → logprob: -13.250043869018555
    4. 'one' → logprob: -13.750043869018555
    5. '
' → logprob: -15.000043869018555
    6. ' one' → logprob: -15.375043869018555
    7. '<|end|>' → logprob: -16.250043869018555
    8. '   ' → logprob: -16.500043869018555
    9. 'One' → logprob: -17.000043869018555
    10. '' → logprob: -17.125043869018555

Token 198: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0144833326339722
    2. ')' → logprob: -1.2644833326339722
    3. '<|end|>' → logprob: -1.8894833326339722
    4. '   ' → logprob: -3.0144834518432617
    5. ')
' → logprob: -3.8894834518432617
    6. ',' → logprob: -3.8894834518432617
    7. ' ' → logprob: -4.014483451843262
    8. ':' → logprob: -4.264483451843262
    9. '       ' → logprob: -4.389483451843262
    10. ' 
' → logprob: -4.889483451843262

Token 199: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.15058057010173798
    2. 'black' → logprob: -2.400580644607544
    3. ' white' → logprob: -3.400580644607544
    4. 'white' → logprob: -4.525580406188965
    5. 'b' → logprob: -6.275580406188965
    6. '1' → logprob: -6.525580406188965
    7. ' b' → logprob: -7.275580406188965
    8. ' replaces' → logprob: -8.400580406188965
    9. ' ' → logprob: -8.650580406188965
    10. 'w' → logprob: -8.775580406188965

Token 200: ' increases' (ID: 21073)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1309577226638794
    2. ' +' → logprob: -1.5059577226638794
    3. ' ' → logprob: -2.25595760345459
    4. ')' → logprob: -2.63095760345459
    5. ',' → logprob: -3.00595760345459
    6. '<|end|>' → logprob: -3.00595760345459
    7. '+' → logprob: -3.50595760345459
    8. '-' → logprob: -3.63095760345459
    9. ' -=' → logprob: -3.88095760345459
    10. ' stones' → logprob: -4.00595760345459

Token 201: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9413283467292786
    2. ':' → logprob: -1.8163282871246338
    3. '   ' → logprob: -1.9413282871246338
    4. '):' → logprob: -2.066328287124634
    5. '<|end|>' → logprob: -2.941328287124634
    6. ',' → logprob: -3.816328287124634
    7. '
' → logprob: -3.816328287124634
    8. '):
' → logprob: -4.191328525543213
    9. '       ' → logprob: -4.441328525543213
    10. '```' → logprob: -4.816328525543213

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0789182111620903
    2. ' ' → logprob: -2.578918218612671
    3. ' one' → logprob: -11.45391845703125
    4. '0' → logprob: -11.57891845703125
    5. 'one' → logprob: -13.20391845703125
    6. ' ' → logprob: -13.20391845703125
    7. '   ' → logprob: -13.82891845703125
    8. '<|end|>' → logprob: -14.39141845703125
    9. '```' → logprob: -14.51641845703125
    10. '
' → logprob: -15.01641845703125

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019030878320336342
    2. ' ' → logprob: -8.625190734863281
    3. '0' → logprob: -11.625190734863281
    4. '   ' → logprob: -13.875190734863281
    5. '-' → logprob: -15.500190734863281
    6. '2' → logprob: -15.625190734863281
    7. '
' → logprob: -15.937690734863281
    8. '```' → logprob: -16.56269073486328
    9. 'one' → logprob: -17.00019073486328
    10. '+' → logprob: -17.18769073486328

Token 204: '?' (ID: 30)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1285651922225952
    2. ':' → logprob: -1.3785651922225952
    3. '       ' → logprob: -1.3785651922225952
    4. ':
' → logprob: -2.8785653114318848
    5. '   ' → logprob: -3.5035653114318848
    6. '\n' → logprob: -4.503565311431885
    7. ',' → logprob: -4.753565311431885
    8. ')' → logprob: -4.753565311431885
    9. '):
' → logprob: -4.878565311431885
    10. '\' → logprob: -4.878565311431885

Token 205: ' No' (ID: 3004)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7717835307121277
    2. ')' → logprob: -0.8967835307121277
    3. '   ' → logprob: -3.3967835903167725
    4. ',' → logprob: -4.271783351898193
    5. '       ' → logprob: -4.521783351898193
    6. '):' → logprob: -4.896783351898193
    7. '(' → logprob: -5.021783351898193
    8. ' ' → logprob: -5.021783351898193
    9. ':
' → logprob: -5.146783351898193
    10. ' 
' → logprob: -5.271783351898193

Token 206: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2375479936599731
    2. '<|end|>' → logprob: -1.3625479936599731
    3. ':' → logprob: -1.8625479936599731
    4. '\n' → logprob: -2.3625478744506836
    5. '   ' → logprob: -2.7375478744506836
    6. ')' → logprob: -3.7375478744506836
    7. '```' → logprob: -3.8625478744506836
    8. ',' → logprob: -3.9875478744506836
    9. '       ' → logprob: -4.362547874450684
    10. '<|end|>' → logprob: -4.487547874450684

Token 207: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.495123952627182
    2. '       ' → logprob: -1.3701239824295044
    3. '<|end|>' → logprob: -2.870123863220215
    4. '        ' → logprob: -3.620123863220215
    5. ' )' → logprob: -3.870123863220215
    6. '    ' → logprob: -4.995123863220215
    7. ' ' → logprob: -4.995123863220215
    8. '#' (adapté à ' #') → logprob: -5.370123863220215
    9. '   ' → logprob: -6.370123863220215
    10. '<|end|>' → logprob: -6.495123863220215

Token 209: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.581003725528717
    2. '    ' → logprob: -1.5810036659240723
    3. '   ' → logprob: -2.5810036659240723
    4. ')' → logprob: -3.0810036659240723
    5. ' ' → logprob: -3.3310036659240723
    6. '        ' → logprob: -3.8310036659240723
    7. '#' → logprob: -4.331003665924072
    8. '<|end|>' → logprob: -5.456003665924072
    9. 'w' → logprob: -5.581003665924072
    10. ' not' → logprob: -5.956003665924072

Token 210: ' Problem' (ID: 26113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3922763764858246
    2. '<|end|>' → logprob: -2.2672762870788574
    3. ')' → logprob: -2.7672762870788574
    4. '    ' → logprob: -3.3922762870788574
    5. ' pass' → logprob: -3.7672762870788574
    6. '#' → logprob: -3.7672762870788574
    7. '   ' → logprob: -4.017276287078857
    8. '        ' → logprob: -5.017276287078857
    9. ' #' → logprob: -5.017276287078857
    10. '<|end|>' → logprob: -5.267276287078857

Token 211: ' states' (ID: 9407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' pick' (ID: 5230)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: ' up' (ID: 869)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0922882556915283
    2. '_' → logprob: -1.2172882556915283
    3. '<|end|>' → logprob: -1.9672882556915283
    4. ' ' → logprob: -2.0922882556915283
    5. ' stone' → logprob: -3.4672882556915283
    6. ' )' → logprob: -3.9672882556915283
    7. '   ' → logprob: -4.592288017272949
    8. '()' → logprob: -5.092288017272949
    9. '<|end|>' → logprob: -5.092288017272949
    10. '    ' → logprob: -5.217288017272949

Token 215: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.9755979776382446
    2. ' stone' → logprob: -0.9755979776382446
    3. '<|end|>' → logprob: -1.9755979776382446
    4. 'stone' → logprob: -2.975597858428955
    5. 'white' → logprob: -3.475597858428955
    6. ' ' → logprob: -4.725597858428955
    7. ' black' → logprob: -5.100597858428955
    8. '_white' → logprob: -6.225597858428955
    9. ')' → logprob: -6.475597858428955
    10. ' one' → logprob: -6.725597858428955

Token 216: ' stone' (ID: 14352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5889590382575989
    2. ' stone' → logprob: -0.9639590382575989
    3. '_' → logprob: -3.338958978652954
    4. ' ' → logprob: -4.963959217071533
    5. '<|end|>' → logprob: -5.338959217071533
    6. ' )' → logprob: -5.463959217071533
    7. '   ' → logprob: -5.588959217071533
    8. 'stone' → logprob: -5.713959217071533
    9. ')
' → logprob: -7.088959217071533
    10. ' _' → logprob: -7.338959217071533

Token 217: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36582520604133606
    2. '<|end|>' → logprob: -1.4908251762390137
    3. ' stone' → logprob: -4.115825176239014
    4. ' )' → logprob: -4.490825176239014
    5. ',' → logprob: -4.615825176239014
    6. ' ' → logprob: -4.740825176239014
    7. '   ' → logprob: -4.865825176239014
    8. '<|end|>' → logprob: -5.240825176239014
    9. '_' → logprob: -5.615825176239014
    10. 'from' → logprob: -5.615825176239014

Token 218: ' pod' (ID: 3155)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7580133676528931
    2. 'the' → logprob: -0.8830133676528931
    3. 'pod' → logprob: -2.6330132484436035
    4. ' pod' → logprob: -4.0080132484436035
    5. 'stone' → logprob: -5.6330132484436035
    6. ' one' → logprob: -5.6330132484436035
    7. 'self' → logprob: -6.0080132484436035
    8. ' a' → logprob: -6.1330132484436035
    9. 'board' → logprob: -6.3830132484436035
    10. ' stone' → logprob: -6.6330132484436035

Token 219: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' replace' (ID: 13284)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.9619492888450623
    2. 'place' → logprob: -1.461949348449707
    3. ' put' → logprob: -2.086949348449707
    4. ' place' → logprob: -2.086949348449707
    5. 'replace' → logprob: -2.586949348449707
    6. 'drop' → logprob: -4.211949348449707
    7. 'remove' → logprob: -4.711949348449707
    8. 'add' → logprob: -4.836949348449707
    9. ' drop' → logprob: -5.086949348449707
    10. ' add' → logprob: -5.086949348449707

Token 221: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6081720590591431
    2. ')' → logprob: -1.608172059059143
    3. ' stone' → logprob: -2.6081719398498535
    4. ' with' → logprob: -3.3581719398498535
    5. ' _' → logprob: -3.3581719398498535
    6. '<|end|>' → logprob: -3.7331719398498535
    7. ' ' → logprob: -3.9831719398498535
    8. ' one' → logprob: -3.9831719398498535
    9. 'stone' → logprob: -4.3581719398498535
    10. '    ' → logprob: -4.9831719398498535

Token 222: ' with' (ID: 483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6573326587677002
    2. '_' → logprob: -1.9073326587677002
    3. ')' → logprob: -2.1573326587677
    4. '<|end|>' → logprob: -2.4073326587677
    5. ' with' → logprob: -3.1573326587677
    6. ',' → logprob: -4.032332420349121
    7. '    ' → logprob: -4.157332420349121
    8. ' stone' → logprob: -4.907332420349121
    9. ' _' → logprob: -4.907332420349121
    10. ' )' → logprob: -5.032332420349121

Token 223: ' black' (ID: 5960)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.6821562647819519
    2. ' a' → logprob: -1.0571563243865967
    3. ' black' → logprob: -2.1821563243865967
    4. 'a' → logprob: -3.9321563243865967
    5. ' white' → logprob: -4.557156085968018
    6. 'one' → logprob: -6.057156085968018
    7. ' ' → logprob: -7.307156085968018
    8. ' another' → logprob: -7.932156085968018
    9. 'black' → logprob: -7.932156085968018
    10. 'white' → logprob: -8.682156562805176

Token 224: ' stone' (ID: 14352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.118847370147705
    2. ':' → logprob: -1.618847370147705
    3. '   ' → logprob: -2.243847370147705
    4. ')' → logprob: -2.368847370147705
    5. '       ' → logprob: -3.118847370147705
    6. '):' → logprob: -3.243847370147705
    7. ',' → logprob: -3.368847370147705
    8. '):
' → logprob: -3.618847370147705
    9. ')
' → logprob: -3.743847370147705
    10. '    
' → logprob: -3.993847370147705

Token 225: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35102683305740356
    2. '):' → logprob: -2.351026773452759
    3. ')' → logprob: -2.601026773452759
    4. ',' → logprob: -3.726026773452759
    5. '   ' → logprob: -4.101027011871338
    6. '       ' → logprob: -4.226027011871338
    7. '<|end|>' → logprob: -4.226027011871338
    8. '
' → logprob: -4.226027011871338
    9. '):
' → logprob: -4.601027011871338
    10. ':
' → logprob: -4.726027011871338

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5593984723091125
    2. '   ' → logprob: -1.0593984127044678
    3. ')' → logprob: -3.8093984127044678
    4. '<|end|>' → logprob: -4.309398651123047
    5. '\n' → logprob: -4.684398651123047
    6. ' ' → logprob: -5.559398651123047
    7. '    
' → logprob: -5.684398651123047
    8. ':' → logprob: -5.684398651123047
    9. ',' → logprob: -5.809398651123047
    10. '\' → logprob: -5.934398651123047

Token 227: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5852439999580383
    2. '\n' → logprob: -1.5852439403533936
    3. '\' → logprob: -2.2102439403533936
    4. '   ' → logprob: -2.9602439403533936
    5. ')' → logprob: -3.9602439403533936
    6. '<|end|>' → logprob: -4.085244178771973
    7. '        
' → logprob: -4.835244178771973
    8. '
' → logprob: -5.085244178771973
    9. '    
' → logprob: -5.210244178771973
    10. ' 
' → logprob: -5.460244178771973

Token 228: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020068906247615814
    2. '   ' → logprob: -4.395069122314453
    3. '
' → logprob: -6.520069122314453
    4. '        
' → logprob: -6.645069122314453
    5. ' if' → logprob: -7.020069122314453
    6. 'def' → logprob: -7.270069122314453
    7. ')' → logprob: -7.895069122314453
    8. '    
' → logprob: -8.020069122314453
    9. ' 
' → logprob: -8.145069122314453
    10. '\n' → logprob: -8.520069122314453

Token 229: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2356630563735962
    2. '   ' → logprob: -2.3606629371643066
    3. ' return' → logprob: -4.485662937164307
    4. ')' → logprob: -4.485662937164307
    5. ' if' → logprob: -4.485662937164307
    6. 'def' → logprob: -4.610662937164307
    7. ' w' → logprob: -4.610662937164307
    8. '#' → logprob: -4.735662937164307
    9. 'return' → logprob: -4.985662937164307
    10. 'w' → logprob: -5.235662937164307

Token 230: ' white' (ID: 6461)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.009821891784668
    2. 'self' → logprob: -1.259821891784668
    3. ' return' → logprob: -2.259821891784668
    4. ' w' → logprob: -2.884821891784668
    5. 'return' → logprob: -2.884821891784668
    6. ' if' → logprob: -3.259821891784668
    7. '       ' → logprob: -3.384821891784668
    8. 'def' → logprob: -4.259821891784668
    9. '   ' → logprob: -4.509821891784668
    10. 'w' → logprob: -4.509821891784668

Token 231: ' stones' (ID: 38940)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.17704175412654877
    2. ' -' → logprob: -2.42704176902771
    3. ' >' → logprob: -3.30204176902771
    4. ',' → logprob: -4.552041530609131
    5. '   ' → logprob: -5.177041530609131
    6. '-' → logprob: -5.302041530609131
    7. ' ' → logprob: -5.927041530609131
    8. '>' → logprob: -6.052041530609131
    9. ' ,' → logprob: -6.302041530609131
    10. ' stones' → logprob: -6.427041530609131

Token 232: ' does' (ID: 2226)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5044659376144409
    2. ' -' → logprob: -2.1294660568237305
    3. ',' → logprob: -2.6294660568237305
    4. '-' → logprob: -3.3794660568237305
    5. 'from' → logprob: -3.5044660568237305
    6. '   ' → logprob: -3.7544660568237305
    7. ' >' → logprob: -4.1294660568237305
    8. '>' → logprob: -4.1294660568237305
    9. ')' → logprob: -4.6294660568237305
    10. ' decrease' → logprob: -4.6294660568237305

Token 233: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023552225902676582
    2. 'not' → logprob: -3.773552179336548
    3. 'n't' → logprob: -8.648551940917969
    4. '<|end|>' → logprob: -10.023551940917969
    5. ')' → logprob: -10.148551940917969
    6. ' ' → logprob: -10.773551940917969
    7. '>' → logprob: -11.773551940917969
    8. ' decrease' → logprob: -12.648551940917969
    9. '_not' → logprob: -12.648551940917969
    10. '	not' → logprob: -13.023551940917969

Token 234: ' decrease' (ID: 25848)
  Prédit: ' decrease'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decrease' → logprob: -0.2143264263868332
    2. ')' → logprob: -2.2143263816833496
    3. ' )' → logprob: -4.08932638168335
    4. ' ' → logprob: -4.33932638168335
    5. 'de' → logprob: -4.96432638168335
    6. ' space' → logprob: -4.96432638168335
    7. '<|end|>' → logprob: -5.08932638168335
    8. 'space' → logprob: -5.21432638168335
    9. '>' → logprob: -5.46432638168335
    10. ',' → logprob: -5.58932638168335

Token 235: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.802160382270813
    2. '
' → logprob: -1.677160382270813
    3. '<|end|>' → logprob: -2.4271602630615234
    4. ')' → logprob: -2.9271602630615234
    5. '   ' → logprob: -2.9271602630615234
    6. '\n' → logprob: -3.3021602630615234
    7. ',' → logprob: -3.4271602630615234
    8. ' 
' → logprob: -4.177160263061523
    9. '       ' → logprob: -4.427160263061523
    10. '\' → logprob: -4.552160263061523

Token 236: 'pod' (ID: 40822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010098857805132866
    2. ' )' → logprob: -4.635098934173584
    3. ' but' → logprob: -9.635098457336426
    4. ',' → logprob: -9.760098457336426
    5. ')
' → logprob: -10.010098457336426
    6. 'def' → logprob: -10.135098457336426
    7. '),' → logprob: -10.635098457336426
    8. '   ' → logprob: -11.135098457336426
    9. '#' → logprob: -11.510098457336426
    10. ' ' → logprob: -11.635098457336426

Token 237: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10347446799278259
    2. '),' → logprob: -4.1034746170043945
    3. ' )' → logprob: -4.2284746170043945
    4. ',' → logprob: -4.3534746170043945
    5. '   ' → logprob: -4.3534746170043945
    6. ' -' → logprob: -4.8534746170043945
    7. '-' → logprob: -5.1034746170043945
    8. ' is' → logprob: -5.3534746170043945
    9. '):' → logprob: -5.4784746170043945
    10. ' remains' → logprob: -6.1034746170043945

Token 238: ' infinite' (ID: 48413)
  Prédit: 'external'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'external' → logprob: -1.6074440479278564
    2. 'not' → logprob: -1.9824440479278564
    3. 'a' → logprob: -2.1074440479278564
    4. 'outside' → logprob: -2.2324440479278564
    5. ' not' → logprob: -2.3574440479278564
    6. ' external' → logprob: -2.4824440479278564
    7. ' a' → logprob: -2.8574440479278564
    8. ' separate' → logprob: -2.9824440479278564
    9. ' outside' → logprob: -3.3574440479278564
    10. ' an' → logprob: -3.7324440479278564

Token 239: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000799980596639216
    2. ' )' → logprob: -8.125800132751465
    3. '<|end|>' → logprob: -8.625800132751465
    4. ',' → logprob: -8.875800132751465
    5. ')
' → logprob: -9.625800132751465
    6. '
' → logprob: -10.750800132751465
    7. '<|end|>' → logprob: -11.000800132751465
    8. '\n' → logprob: -11.375800132751465
    9. '_' → logprob: -11.500800132751465
    10. ' ' → logprob: -12.125800132751465

Token 240: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6570577621459961
    2. ' ' → logprob: -2.032057762145996
    3. '<|end|>' → logprob: -2.532057762145996
    4. '    ' → logprob: -2.657057762145996
    5. '       ' → logprob: -3.157057762145996
    6. ' 
' → logprob: -3.157057762145996
    7. ',' → logprob: -4.157057762145996
    8. ' )' → logprob: -4.157057762145996
    9. '   ' → logprob: -4.282057762145996
    10. '    
' → logprob: -4.532057762145996

Token 241: ' white' (ID: 6461)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.2830599248409271
    2. 'black' → logprob: -1.5330599546432495
    3. 'the' → logprob: -4.283060073852539
    4. ' the' → logprob: -4.908060073852539
    5. ' white' → logprob: -5.783060073852539
    6. 'self' → logprob: -5.908060073852539
    7. 'white' → logprob: -6.283060073852539
    8. ' self' → logprob: -7.408060073852539
    9. 'def' → logprob: -8.283060073852539
    10. 'b' → logprob: -8.533060073852539

Token 242: ' in' (ID: 306)
  Prédit: ' stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stones' → logprob: -1.0030125379562378
    2. '_' → logprob: -1.1280125379562378
    3. 'stones' → logprob: -2.0030126571655273
    4. ' _' → logprob: -2.7530126571655273
    5. ' ' → logprob: -3.0030126571655273
    6. ' stone' → logprob: -4.378012657165527
    7. ' )' → logprob: -4.378012657165527
    8. ')' → logprob: -4.378012657165527
    9. 'stone' → logprob: -4.628012657165527
    10. '<|end|>' → logprob: -5.253012657165527

Token 243: ' area' (ID: 3624)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1820083856582642
    2. 'self' → logprob: -1.6820083856582642
    3. ' pod' → logprob: -1.6820083856582642
    4. 'pod' → logprob: -2.0570082664489746
    5. 'the' → logprob: -2.6820082664489746
    6. ' self' → logprob: -2.6820082664489746
    7. ' black' → logprob: -4.432008266448975
    8. ' stones' → logprob: -4.557008266448975
    9. 'stone' → logprob: -5.182008266448975
    10. ' stone' → logprob: -5.557008266448975

Token 244: ' increases' (ID: 21073)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.624329686164856
    2. '<|end|>' → logprob: -1.749329686164856
    3. ' ' → logprob: -2.4993295669555664
    4. ' )' → logprob: -3.1243295669555664
    5. '_' → logprob: -3.2493295669555664
    6. ' >' → logprob: -3.7493295669555664
    7. ',' → logprob: -3.7493295669555664
    8. ' ,' → logprob: -4.249329566955566
    9. ' is' → logprob: -4.999329566955566
    10. '>' → logprob: -5.249329566955566

Token 245: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16107341647148132
    2. '1' → logprob: -1.9110734462738037
    3. '0' → logprob: -7.411073207855225
    4. ' one' → logprob: -8.536073684692383
    5. ' +' → logprob: -10.536073684692383
    6. 'one' → logprob: -12.411073684692383
    7. ')' → logprob: -12.536073684692383
    8. '+' → logprob: -13.036073684692383
    9. ' ' → logprob: -13.536073684692383
    10. '```' → logprob: -13.848573684692383

Token 247: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008202009834349155
    2. ' ' → logprob: -4.883202075958252
    3. '0' → logprob: -7.508202075958252
    4. ' one' → logprob: -11.008201599121094
    5. 'one' → logprob: -11.383201599121094
    6. '+' → logprob: -11.508201599121094
    7. ' +' → logprob: -12.883201599121094
    8. '-' → logprob: -13.508201599121094
    9. '   ' → logprob: -14.320701599121094
    10. ')' → logprob: -14.695701599121094

Token 248: '?' (ID: 30)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1316436529159546
    2. '<|end|>' → logprob: -1.3816436529159546
    3. '       ' → logprob: -1.6316436529159546
    4. '   ' → logprob: -2.631643772125244
    5. ':' → logprob: -3.006643772125244
    6. ')' → logprob: -3.131643772125244
    7. ',' → logprob: -4.131643772125244
    8. '\n' → logprob: -4.631643772125244
    9. ')
' → logprob: -4.631643772125244
    10. '<|end|>' → logprob: -5.006643772125244

Token 249: ' No' (ID: 3004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1264820098876953
    2. '<|end|>' → logprob: -1.3764820098876953
    3. '\n' → logprob: -2.2514820098876953
    4. '
' → logprob: -2.5014820098876953
    5. '   ' → logprob: -2.8764820098876953
    6. ':' → logprob: -2.8764820098876953
    7. ',' → logprob: -3.7514820098876953
    8. '<|end|>' → logprob: -4.126482009887695
    9. ' 
' → logprob: -4.251482009887695
    10. '```' → logprob: -4.376482009887695

Token 250: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3030470907688141
    2. '   ' → logprob: -2.4280471801757812
    3. '<|end|>' → logprob: -2.6780471801757812
    4. ' ' → logprob: -3.0530471801757812
    5. '       ' → logprob: -4.428047180175781
    6. ' )' → logprob: -4.803047180175781
    7. '    ' → logprob: -5.053047180175781
    8. '#' → logprob: -5.178047180175781
    9. '_' → logprob: -5.553047180175781
    10. '<|end|>' → logprob: -5.678047180175781

Token 252: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06810710579156876
    2. ' )' → logprob: -3.5681071281433105
    3. ' ' → logprob: -4.8181071281433105
    4. '       ' → logprob: -5.1931071281433105
    5. '\n' → logprob: -5.3181071281433105
    6. '    ' → logprob: -5.4431071281433105
    7. '<|end|>' → logprob: -5.5681071281433105
    8. '   ' → logprob: -5.6931071281433105
    9. ' 
' → logprob: -5.8181071281433105
    10. '#' (adapté à ' #') → logprob: -7.4431071281433105

Token 253: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7378978133201599
    2. '   ' → logprob: -1.8628978729248047
    3. ')' → logprob: -2.2378978729248047
    4. '\n' → logprob: -2.6128978729248047
    5. '<|end|>' → logprob: -2.9878978729248047
    6. '    ' → logprob: -3.1128978729248047
    7. ' ' → logprob: -3.7378978729248047
    8. '<|end|>' → logprob: -4.112897872924805
    9. ' \' → logprob: -4.862897872924805
    10. '        ' → logprob: -5.112897872924805

Token 254: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6467306613922119
    2. ')' → logprob: -1.271730661392212
    3. '   ' → logprob: -2.146730661392212
    4. '        
' → logprob: -4.771730422973633
    5. ' 
' → logprob: -4.896730422973633
    6. '    ' → logprob: -4.896730422973633
    7. '\n' → logprob: -4.896730422973633
    8. '    
' → logprob: -5.021730422973633
    9. '
' → logprob: -5.021730422973633
    10. '#' → logprob: -5.396730422973633

Token 255: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3159040212631226
    2. '_' → logprob: -1.5659040212631226
    3. ' def' → logprob: -2.190904140472412
    4. ' ' → logprob: -2.190904140472412
    5. ' ' → logprob: -3.065904140472412
    6. ')' → logprob: -3.315904140472412
    7. ' white' → logprob: -3.315904140472412
    8. ' rest' → logprob: -4.065904140472412
    9. 'w' → logprob: -4.065904140472412
    10. ' next' → logprob: -4.315904140472412

Token 256: 'replace' (ID: 15208)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42960307002067566
    2. 'white' → logprob: -2.804603099822998
    3. ' white' → logprob: -2.929603099822998
    4. ' ' → logprob: -3.054603099822998
    5. ' )' → logprob: -3.054603099822998
    6. '_' → logprob: -3.179603099822998
    7. ' ' → logprob: -4.179603099822998
    8. '"' → logprob: -4.179603099822998
    9. '#' → logprob: -4.429603099822998
    10. 'pod' → logprob: -4.929603099822998

Token 257: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4892686903476715
    2. ' ' → logprob: -1.7392686605453491
    3. ' stone' → logprob: -2.2392687797546387
    4. ')' → logprob: -2.9892687797546387
    5. '<|end|>' → logprob: -4.114268779754639
    6. '"' → logprob: -4.364268779754639
    7. 'stone' → logprob: -5.239268779754639
    8. ' one' → logprob: -5.739268779754639
    9. '_token' → logprob: -5.739268779754639
    10. ' )' → logprob: -5.864268779754639

Token 258: ' means' (ID: 4748)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.707506537437439
    2. ' stone' → logprob: -1.332506537437439
    3. '_' → logprob: -1.832506537437439
    4. ')' → logprob: -3.4575066566467285
    5. '<|end|>' → logprob: -3.5825066566467285
    6. ' )' → logprob: -4.0825066566467285
    7. ' _' → logprob: -6.3325066566467285
    8. ' stones' → logprob: -6.5825066566467285
    9. '<|end|>' → logprob: -6.9575066566467285
    10. '_token' → logprob: -7.5825066566467285

Token 259: ' in' (ID: 306)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.986731767654419
    2. ' the' → logprob: -1.486731767654419
    3. ' a' → logprob: -2.986731767654419
    4. ' ' → logprob: -2.986731767654419
    5. ')' → logprob: -3.111731767654419
    6. '<|end|>' → logprob: -3.111731767654419
    7. ' that' → logprob: -3.236731767654419
    8. ' ' → logprob: -3.486731767654419
    9. ' self' → logprob: -3.611731767654419
    10. ' w' → logprob: -4.36173152923584

Token 260: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7827363014221191
    2. ' area' → logprob: -1.2827363014221191
    3. 'the' → logprob: -2.282736301422119
    4. ' white' → logprob: -2.907736301422119
    5. ' stone' → logprob: -4.032736301422119
    6. 'stone' → logprob: -4.157736301422119
    7. 'self' → logprob: -4.282736301422119
    8. 'white' → logprob: -4.407736301422119
    9. 'area' → logprob: -4.532736301422119
    10. ' this' → logprob: -5.032736301422119

Token 261: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.39617919921875
    2. 'pod' → logprob: -2.39617919921875
    3. ' pod' → logprob: -2.52117919921875
    4. 'area' → logprob: -3.27117919921875
    5. 'stone' → logprob: -3.64617919921875
    6. ' stone' → logprob: -3.89617919921875
    7. ' game' → logprob: -4.77117919921875
    8. '_' → logprob: -4.89617919921875
    9. ' )' → logprob: -5.02117919921875
    10. ' white' → logprob: -5.14617919921875

Token 262: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21021483838558197
    2. ')' → logprob: -2.585214853286743
    3. ',' → logprob: -2.585214853286743
    4. '):' → logprob: -4.210214614868164
    5. '<|end|>' → logprob: -5.085214614868164
    6. ':
' → logprob: -5.210214614868164
    7. '   ' → logprob: -5.835214614868164
    8. '.' → logprob: -6.085214614868164
    9. '_' → logprob: -6.835214614868164
    10. '):
' → logprob: -6.960214614868164

Token 263: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6948447823524475
    2. ')' → logprob: -1.0698447227478027
    3. '<|end|>' → logprob: -2.6948447227478027
    4. ' 
' → logprob: -3.9448447227478027
    5. ' )' → logprob: -4.194844722747803
    6. '    ' → logprob: -4.194844722747803
    7. '       ' → logprob: -4.694844722747803
    8. ' \' → logprob: -4.944844722747803
    9. '\n' → logprob: -5.694844722747803
    10. '   ' → logprob: -5.944844722747803

Token 264: ' white' (ID: 6461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36851608753204346
    2. '_' → logprob: -1.4935160875320435
    3. ' stone' → logprob: -3.368515968322754
    4. 'n' → logprob: -3.993515968322754
    5. ')' → logprob: -4.868515968322754
    6. '<|end|>' → logprob: -4.993515968322754
    7. ' white' → logprob: -5.618515968322754
    8. 'stone' → logprob: -5.743515968322754
    9. ' _' → logprob: -6.868515968322754
    10. 'r' → logprob: -6.993515968322754

Token 265: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.19510085880756378
    2. '_' → logprob: -2.445100784301758
    3. ' ' → logprob: -2.820100784301758
    4. 'stone' → logprob: -3.945100784301758
    5. ' )' → logprob: -5.320100784301758
    6. ')' → logprob: -5.570100784301758
    7. ' _' → logprob: -6.570100784301758
    8. ' ' → logprob: -8.195100784301758
    9. ' space' → logprob: -8.195100784301758
    10. '<|end|>' → logprob: -8.320100784301758

Token 266: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7459676265716553
    2. ' ' → logprob: -1.1209676265716553
    3. ' )' → logprob: -2.7459676265716553
    4. '_' → logprob: -3.2459676265716553
    5. ' stone' → logprob: -3.7459676265716553
    6. ' is' → logprob: -3.8709676265716553
    7. '<|end|>' → logprob: -3.8709676265716553
    8. ',' → logprob: -4.245967864990234
    9. ' ,' → logprob: -5.620967864990234
    10. 's' → logprob: -6.120967864990234

Token 267: ' replaced' (ID: 21009)
  Prédit: ' replaced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replaced' → logprob: -0.6509402990341187
    2. ' removed' → logprob: -1.4009402990341187
    3. 'removed' → logprob: -1.5259402990341187
    4. 're' → logprob: -5.025940418243408
    5. ' taken' → logprob: -6.525940418243408
    6. ' converted' → logprob: -6.650940418243408
    7. ' changed' → logprob: -7.025940418243408
    8. 'converted' → logprob: -7.150940418243408
    9. 'picked' → logprob: -7.150940418243408
    10. 'taken' → logprob: -7.275940418243408

Token 268: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6919540762901306
    2. '_' → logprob: -0.9419540762901306
    3. ' ' → logprob: -3.0669541358947754
    4. ',' → logprob: -4.191954135894775
    5. ' _' → logprob: -4.566954135894775
    6. ' )' → logprob: -4.816954135894775
    7. '<|end|>' → logprob: -5.191954135894775
    8. ' stone' → logprob: -5.816954135894775
    9. ' ,' → logprob: -6.066954135894775
    10. ' 
' → logprob: -6.191954135894775

Token 269: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3123834431171417
    2. ' black' → logprob: -1.4373834133148193
    3. 'a' → logprob: -3.5623834133148193
    4. 'black' → logprob: -6.187383651733398
    5. ' one' → logprob: -9.187383651733398
    6. ' white' → logprob: -9.312383651733398
    7. ' ' → logprob: -9.812383651733398
    8. ' ' → logprob: -10.187383651733398
    9. ' an' → logprob: -11.437383651733398
    10. ' space' → logprob: -11.937383651733398

Token 270: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.38707008957862854
    2. 'black' → logprob: -1.1370700597763062
    3. 'white' → logprob: -9.512069702148438
    4. ' white' → logprob: -9.762069702148438
    5. 'space' → logprob: -10.512069702148438
    6. ' ' → logprob: -10.762069702148438
    7. ' ' → logprob: -12.137069702148438
    8. '_black' → logprob: -12.262069702148438
    9. ' 
' → logprob: -13.137069702148438
    10. ' space' → logprob: -13.387069702148438

Token 271: ' stone' (ID: 14352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05571257695555687
    2. '_' → logprob: -4.180712699890137
    3. ' )' → logprob: -4.180712699890137
    4. ' stone' → logprob: -4.305712699890137
    5. ')
' → logprob: -6.055712699890137
    6. ' stones' → logprob: -6.180712699890137
    7. ' ' → logprob: -6.305712699890137
    8. ' )
' → logprob: -7.305712699890137
    9. '
' → logprob: -7.555712699890137
    10. ' _' → logprob: -7.680712699890137

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30504679679870605
    2. '\n' → logprob: -2.805046796798706
    3. ')' → logprob: -3.305046796798706
    4. '
' → logprob: -3.430046796798706
    5. ':
' → logprob: -3.680046796798706
    6. ',' → logprob: -3.930046796798706
    7. '   ' → logprob: -4.055047035217285
    8. '       ' → logprob: -4.305047035217285
    9. '.' → logprob: -4.430047035217285
    10. '\' → logprob: -4.930047035217285

Token 273: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47111567854881287
    2. '       ' → logprob: -2.7211155891418457
    3. '\n' → logprob: -2.7211155891418457
    4. ' 
' → logprob: -3.0961155891418457
    5. '\' → logprob: -3.3461155891418457
    6. '   ' → logprob: -3.4711155891418457
    7. ':' → logprob: -3.5961155891418457
    8. ' ' → logprob: -4.096115589141846
    9. '(' → logprob: -4.346115589141846
    10. '(
' → logprob: -5.096115589141846

Token 274: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7900371551513672
    2. ')' → logprob: -1.0400371551513672
    3. '\n' → logprob: -2.415037155151367
    4. ' 
' → logprob: -4.040037155151367
    5. '   ' → logprob: -4.290037155151367
    6. ' )' → logprob: -4.665037155151367
    7. '\' → logprob: -4.915037155151367
    8. ' ' → logprob: -5.040037155151367
    9. '    ' → logprob: -5.290037155151367
    10. '        
' → logprob: -5.415037155151367

Token 275: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7525122165679932
    2. '\n' → logprob: -1.0025122165679932
    3. ' 
' → logprob: -2.877512216567993
    4. '   ' → logprob: -3.502512216567993
    5. ' \' → logprob: -4.002511978149414
    6. '\' → logprob: -4.127511978149414
    7. '        
' → logprob: -5.127511978149414
    8. ')' → logprob: -5.252511978149414
    9. ' ' → logprob: -5.377511978149414
    10. '    
' → logprob: -5.377511978149414

Token 276: ' So' (ID: 2632)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34268108010292053
    2. ' ' → logprob: -2.5926811695098877
    3. ' w' → logprob: -2.9676811695098877
    4. 'w' → logprob: -3.3426811695098877
    5. ' 
' → logprob: -3.8426811695098877
    6. ' )' → logprob: -3.9676811695098877
    7. '\n' → logprob: -4.092680931091309
    8. '   ' → logprob: -4.592680931091309
    9. '    ' → logprob: -4.592680931091309
    10. ' \' → logprob: -4.967680931091309

Token 277: ' (' (ID: 350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5117049813270569
    2. ' w' → logprob: -1.386704921722412
    3. 'self' → logprob: -2.511704921722412
    4. ' (' → logprob: -3.761704921722412
    5. ' white' → logprob: -3.886704921722412
    6. 'w' → logprob: -4.136704921722412
    7. '(w' → logprob: -6.386704921722412
    8. '(self' → logprob: -6.386704921722412
    9. ' the' → logprob: -6.636704921722412
    10. '    ' → logprob: -6.636704921722412

Token 278: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.130430668592453
    2. ' self' → logprob: -2.1304306983947754
    3. 'w' → logprob: -5.755430698394775
    4. ' w' → logprob: -8.755430221557617
    5. ')' → logprob: -9.130430221557617
    6. '   ' → logprob: -11.130430221557617
    7. '       ' → logprob: -11.755430221557617
    8. ' ' → logprob: -11.880430221557617
    9. 's' → logprob: -12.005430221557617
    10. '    ' → logprob: -12.005430221557617

Token 279: ',b' (ID: 17568)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06884260475635529
    2. '-' → logprob: -2.943842649459839
    3. ',' → logprob: -4.44384241104126
    4. ')' → logprob: -6.56884241104126
    5. ' ,' → logprob: -8.318842887878418
    6. ' ' → logprob: -8.943842887878418
    7. '[' → logprob: -9.318842887878418
    8. '   ' → logprob: -9.443842887878418
    9. ')-' → logprob: -10.568842887878418
    10. ' )' → logprob: -10.943842887878418

Token 280: ')->' (ID: 9079)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34192758798599243
    2. ' -' → logprob: -1.4669275283813477
    3. ')' → logprob: -2.8419275283813477
    4. ',' → logprob: -8.216927528381348
    5. ')-' → logprob: -9.091927528381348
    6. '[' → logprob: -9.466927528381348
    7. '   ' → logprob: -9.966927528381348
    8. ' ' → logprob: -10.466927528381348
    9. ' )' → logprob: -10.716927528381348
    10. '),' → logprob: -10.841927528381348

Token 281: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.42896586656570435
    2. ' (' → logprob: -1.0539658069610596
    3. '(self' → logprob: -8.42896556854248
    4. '   ' → logprob: -11.17896556854248
    5. '(' → logprob: -11.42896556854248
    6. '       ' → logprob: -11.55396556854248
    7. ' ' → logprob: -12.55396556854248
    8. '    ' → logprob: -13.17896556854248
    9. 'self' → logprob: -13.30396556854248
    10. '  ' → logprob: -13.67896556854248

Token 282: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0008237993461079895
    2. '(w' → logprob: -7.625823974609375
    3. ' w' → logprob: -8.375823974609375
    4. 'self' → logprob: -9.375823974609375
    5. '   ' → logprob: -11.250823974609375
    6. ' (' → logprob: -13.000823974609375
    7. '[w' → logprob: -13.500823974609375
    8. ' ' → logprob: -14.375823974609375
    9. '(self' → logprob: -14.375823974609375
    10. '       ' → logprob: -15.000823974609375

Token 283: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6934757232666016
    2. ' -' → logprob: -0.6934757232666016
    3. ',' → logprob: -8.068475723266602
    4. ' ' → logprob: -12.318475723266602
    5. ' ,' → logprob: -12.693475723266602
    6. ' -,' → logprob: -13.943475723266602
    7. 'minus' → logprob: -13.943475723266602
    8. ')' → logprob: -14.443475723266602
    9. '−' → logprob: -14.443475723266602
    10. '<|end|>' → logprob: -14.443475723266602

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014167269691824913
    2. ' ' → logprob: -4.264167308807373
    3. '    ' → logprob: -12.764166831970215
    4. '   ' → logprob: -15.389166831970215
    5. '<|end|>' → logprob: -15.764166831970215
    6. '  ' → logprob: -16.01416778564453
    7. '	' → logprob: -16.13916778564453
    8. ',' → logprob: -16.13916778564453
    9. ')' → logprob: -17.01416778564453
    10. '     ' → logprob: -17.13916778564453

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000431861262768507
    2. ',b' → logprob: -8.125432014465332
    3. ' ,' → logprob: -9.000432014465332
    4. ')' → logprob: -11.875432014465332
    5. ',
' → logprob: -12.750432014465332
    6. '-' → logprob: -13.625432014465332
    7. '```' → logprob: -15.625432014465332
    8. '<|end|>' → logprob: -15.750432014465332
    9. '+' → logprob: -15.875432014465332
    10. '),' → logprob: -15.875432014465332

Token 286: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759397745132446
    2. ' b' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.575940132141113
    4. '(b' → logprob: -16.950939178466797
    5. '	b' → logprob: -17.075939178466797
    6. '    ' → logprob: -17.200939178466797
    7. ' ' → logprob: -17.325939178466797
    8. ')b' → logprob: -17.575939178466797
    9. ' (' → logprob: -18.075939178466797
    10. ',' → logprob: -18.200939178466797

Token 287: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0076127792708575726
    2. ' +' → logprob: -4.882612705230713
    3. '+
' → logprob: -13.007613182067871
    4. '+)' → logprob: -13.382613182067871
    5. ')' → logprob: -14.007613182067871
    6. ',' → logprob: -14.507613182067871
    7. '+,' → logprob: -15.007613182067871
    8. ' plus' → logprob: -15.507613182067871
    9. '＋' → logprob: -15.757613182067871
    10. ')+' → logprob: -15.757613182067871

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -18.12500762939453
    4. '```' → logprob: -18.87500762939453
    5. '   ' → logprob: -19.62500762939453
    6. ')' → logprob: -19.75000762939453
    7. '۱' → logprob: -19.75000762939453
    8. '
' → logprob: -20.62500762939453
    9. '    ' → logprob: -21.37500762939453
    10. '0' → logprob: -21.50000762939453

Token 289: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. '       ' → logprob: -11.625024795532227
    3. ' )' → logprob: -12.000024795532227
    4. ')
' → logprob: -12.125024795532227
    5. '}' → logprob: -12.875024795532227
    6. '   ' → logprob: -13.750024795532227
    7. '),' → logprob: -15.625024795532227
    8. ')#' → logprob: -16.000024795532227
    9. ')}' → logprob: -16.375024795532227
    10. '           ' → logprob: -16.375024795532227

Token 290: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02704014629125595
    2. '
' → logprob: -4.652040004730225
    3. '\n' → logprob: -5.152040004730225
    4. '<|end|>' → logprob: -5.652040004730225
    5. '\' → logprob: -6.652040004730225
    6. '   ' → logprob: -7.027040004730225
    7. ')' → logprob: -7.152040004730225
    8. 'newline' → logprob: -7.277040004730225
    9. 'return' → logprob: -7.402040004730225
    10. '<|end|>' → logprob: -7.902040004730225

Token 291: '>=' (ID: 20974)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2021922618150711
    2. '-' → logprob: -1.7021923065185547
    3. '<|end|>' → logprob: -8.077192306518555
    4. ')' → logprob: -8.952192306518555
    5. ' -=' → logprob: -9.202192306518555
    6. ' ' → logprob: -9.202192306518555
    7. ',' → logprob: -10.202192306518555
    8. ' >' → logprob: -10.702192306518555
    9. '<|end|>' → logprob: -10.702192306518555
    10. '   ' → logprob: -11.202192306518555

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018854460213333368
    2. ' ' → logprob: -6.751885414123535
    3. '2' → logprob: -7.251885414123535
    4. '>' → logprob: -13.251885414123535
    5. '   ' → logprob: -13.251885414123535
    6. '
' → logprob: -14.376885414123535
    7. '```' → logprob: -14.501885414123535
    8. ')' → logprob: -14.876885414123535
    9. '0' → logprob: -15.376885414123535
    10. ' >' → logprob: -15.876885414123535

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6450185775756836
    2. ':' → logprob: -1.1450185775756836
    3. '
' → logprob: -2.6450185775756836
    4. '\n' → logprob: -4.020018577575684
    5. '   ' → logprob: -4.020018577575684
    6. ')' → logprob: -4.270018577575684
    7. '<|end|>' → logprob: -4.645018577575684
    8. '\' → logprob: -5.520018577575684
    9. ',' → logprob: -5.520018577575684
    10. '):' → logprob: -5.645018577575684

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056301526725292206
    2. ')' → logprob: -4.306301593780518
    3. '<|end|>' → logprob: -4.306301593780518
    4. '	' → logprob: -4.556301593780518
    5. '   ' → logprob: -5.306301593780518
    6. ':' → logprob: -5.306301593780518
    7. '.' → logprob: -6.806301593780518
    8. ',' → logprob: -7.181301593780518
    9. '<|end|>' → logprob: -7.431301593780518
    10. '#' → logprob: -7.806301593780518

Token 295: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4843766391277313
    2. '
' → logprob: -1.2343766689300537
    3. '\n' → logprob: -3.1093766689300537
    4. '\' → logprob: -4.234376430511475
    5. '        
' → logprob: -5.234376430511475
    6. ':' → logprob: -5.234376430511475
    7. '  
' → logprob: -5.609376430511475
    8. '    
' → logprob: -5.984376430511475
    9. ':
' → logprob: -6.109376430511475
    10. '   ' → logprob: -6.109376430511475

Token 296: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09129667282104492
    2. ' 
' → logprob: -3.841296672821045
    3. '   ' → logprob: -3.966296672821045
    4. '\n' → logprob: -4.091296672821045
    5. '
' → logprob: -4.966296672821045
    6. '        
' → logprob: -5.091296672821045
    7. '    
' → logprob: -5.716296672821045
    8. ')' → logprob: -5.716296672821045
    9. '  
' → logprob: -6.091296672821045
    10. '\' → logprob: -6.466296672821045

Token 297: ' Wait' (ID: 24305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8838103413581848
    2. 'if' → logprob: -1.25881028175354
    3. ' if' → logprob: -1.50881028175354
    4. 'moves' → logprob: -2.75881028175354
    5. ' moves' → logprob: -5.508810520172119
    6. '   ' → logprob: -5.508810520172119
    7. 'results' → logprob: -5.883810520172119
    8. '
' → logprob: -6.258810520172119
    9. 'mex' → logprob: -7.133810520172119
    10. 'w' → logprob: -7.633810520172119

Token 298: ':' (ID: 25)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0172830820083618
    2. ' ' → logprob: -1.2672830820083618
    3. '   ' → logprob: -1.8922830820083618
    4. '       ' → logprob: -2.5172829627990723
    5. ')' → logprob: -3.6422829627990723
    6. '<|end|>' → logprob: -3.6422829627990723
    7. ',' → logprob: -5.017282962799072
    8. '        ' → logprob: -5.017282962799072
    9. '     ' → logprob: -5.392282962799072
    10. ' (' → logprob: -5.517282962799072

Token 299: ' Actually' (ID: 50557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7606512308120728
    2. ' ' → logprob: -0.7606512308120728
    3. ' )' → logprob: -3.760651111602783
    4. 'w' → logprob: -4.135651111602783
    5. ' 
' → logprob: -5.010651111602783
    6. '<|end|>' → logprob: -5.010651111602783
    7. ' w' → logprob: -5.885651111602783
    8. ' ' → logprob: -7.010651111602783
    9. ' (' → logprob: -7.135651111602783
    10. '\' → logprob: -7.135651111602783

Token 300: ',' (ID: 11)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.1830310821533203
    2. '       ' → logprob: -1.1830310821533203
    3. '        ' → logprob: -2.5580310821533203
    4. 'w' → logprob: -2.9330310821533203
    5. ' if' → logprob: -3.0580310821533203
    6. ' self' → logprob: -3.4330310821533203
    7. '    ' → logprob: -3.4330310821533203
    8. ' (' → logprob: -3.6830310821533203
    9. ' return' → logprob: -3.8080310821533203
    10. ',' → logprob: -4.05803108215332

Token 301: ' it's' (ID: 4275)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7363309860229492
    2. ' w' → logprob: -0.9863309860229492
    3. '        ' → logprob: -3.361330986022949
    4. ' ' → logprob: -3.486330986022949
    5. '       ' → logprob: -3.736330986022949
    6. ' if' → logprob: -4.361330986022949
    7. 'w' → logprob: -4.986330986022949
    8. ' ' → logprob: -4.986330986022949
    9. ')' → logprob: -5.236330986022949
    10. 'self' → logprob: -5.486330986022949

Token 302: ' picking' (ID: 30859)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.4300285577774048
    2. ' not' → logprob: -1.4300285577774048
    3. ' w' → logprob: -1.6800285577774048
    4. 'w' → logprob: -2.1800284385681152
    5. 'not' → logprob: -2.6800284385681152
    6. '(w' → logprob: -3.3050284385681152
    7. ' a' → logprob: -3.4300284385681152
    8. ' the' → logprob: -4.555028438568115
    9. '(' → logprob: -4.805028438568115
    10. ' only' → logprob: -4.930028438568115

Token 303: ' white' (ID: 6461)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.11537185311317444
    2. '_' → logprob: -2.9903719425201416
    3. ' ' → logprob: -3.4903719425201416
    4. ')' → logprob: -4.3653717041015625
    5. 'up' → logprob: -5.2403717041015625
    6. ' )' → logprob: -5.2403717041015625
    7. ' a' → logprob: -6.8653717041015625
    8. ' one' → logprob: -6.8653717041015625
    9. ' _' → logprob: -7.6153717041015625
    10. '    ' → logprob: -7.7403717041015625

Token 304: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6120335459709167
    2. ' stone' → logprob: -1.9870336055755615
    3. ' _' → logprob: -2.2370336055755615
    4. ')' → logprob: -2.6120336055755615
    5. 'stone' → logprob: -2.7370336055755615
    6. ' )' → logprob: -3.2370336055755615
    7. ' ' → logprob: -3.7370336055755615
    8. ' stones' → logprob: -5.362033367156982
    9. '<|end|>' → logprob: -5.987033367156982
    10. ' ),' → logprob: -7.112033367156982

Token 305: ' *' (ID: 425)
  Prédit: ' pod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pod' → logprob: -0.4193875789642334
    2. 'pod' → logprob: -1.1693875789642334
    3. ' the' → logprob: -3.6693875789642334
    4. 'the' → logprob: -5.6693878173828125
    5. ' area' → logprob: -6.7943878173828125
    6. 'stone' → logprob: -7.1693878173828125
    7. ' stone' → logprob: -7.1693878173828125
    8. ' ' → logprob: -9.669387817382812
    9. ' a' → logprob: -9.669387817382812
    10. 'area' → logprob: -10.044387817382812

Token 306: 'pod' (ID: 40822)
  Prédit: 'pod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pod' → logprob: -0.22441399097442627
    2. ' pod' → logprob: -2.0994138717651367
    3. 'the' → logprob: -3.4744138717651367
    4. ' the' → logprob: -3.7244138717651367
    5. 'stone' → logprob: -4.099413871765137
    6. ' area' → logprob: -6.224413871765137
    7. ' stone' → logprob: -6.474413871765137
    8. 'area' → logprob: -6.724413871765137
    9. ' a' → logprob: -8.661913871765137
    10. 'a' → logprob: -8.724413871765137

Token 307: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22851459681987762
    2. ' )' → logprob: -1.728514552116394
    3. ' stone' → logprob: -4.853514671325684
    4. 'stone' → logprob: -5.228514671325684
    5. '_' → logprob: -5.728514671325684
    6. ',' → logprob: -6.228514671325684
    7. ' ' → logprob: -6.353514671325684
    8. '<|end|>' → logprob: -6.353514671325684
    9. ' and' → logprob: -6.603514671325684
    10. ' ,' → logprob: -7.478514671325684

Token 308: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' replace' (ID: 13284)
  Prédit: ' replacing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' replacing' → logprob: -1.1592901945114136
    2. ' adding' → logprob: -1.2842901945114136
    3. 'adding' → logprob: -1.6592901945114136
    4. 'placing' → logprob: -2.159290313720703
    5. ' placing' → logprob: -3.034290313720703
    6. 're' → logprob: -3.909290313720703
    7. ' putting' → logprob: -4.159290313720703
    8. 'put' → logprob: -4.909290313720703
    9. 'replace' → logprob: -6.409290313720703
    10. ' dropping' → logprob: -6.534290313720703

Token 310: ' it' (ID: 480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6176552176475525
    2. ' with' → logprob: -2.1176552772521973
    3. '<|end|>' → logprob: -2.1176552772521973
    4. ' )' → logprob: -3.1176552772521973
    5. ' ' → logprob: -3.6176552772521973
    6. '_' → logprob: -3.6176552772521973
    7. 'with' → logprob: -3.6176552772521973
    8. ' one' → logprob: -4.117655277252197
    9. ' by' → logprob: -4.242655277252197
    10. ' w' → logprob: -4.742655277252197

Token 311: ' in' (ID: 306)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5460936427116394
    2. ' by' → logprob: -1.7960937023162842
    3. ')' → logprob: -3.046093702316284
    4. 'with' → logprob: -3.296093702316284
    5. ' ' → logprob: -3.421093702316284
    6. '<|end|>' → logprob: -3.546093702316284
    7. ' stone' → logprob: -4.046093463897705
    8. '_' → logprob: -4.171093463897705
    9. '   ' → logprob: -4.296093463897705
    10. '    ' → logprob: -4.421093463897705

Token 312: ' the' (ID: 290)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.5513820052146912
    2. ' the' → logprob: -1.051382064819336
    3. 'the' → logprob: -3.301382064819336
    4. 'area' → logprob: -3.551382064819336
    5. ' stone' → logprob: -5.676382064819336
    6. 'stone' → logprob: -5.926382064819336
    7. 'pod' → logprob: -7.051382064819336
    8. ')' → logprob: -7.426382064819336
    9. '_area' → logprob: -7.926382064819336
    10. ' pod' → logprob: -7.926382064819336

Token 313: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.1662394255399704
    2. 'area' → logprob: -1.9162393808364868
    3. 'stone' → logprob: -6.666239261627197
    4. ' stone' → logprob: -7.041239261627197
    5. ' code' → logprob: -7.291239261627197
    6. 'pod' → logprob: -7.291239261627197
    7. ' game' → logprob: -7.541239261627197
    8. ' pod' → logprob: -7.666239261627197
    9. 'game' → logprob: -8.166239738464355
    10. '_area' → logprob: -8.666239738464355

Token 314: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.323895812034607
    2. '   ' → logprob: -1.573895812034607
    3. ')' → logprob: -1.698895812034607
    4. '       ' → logprob: -1.823895812034607
    5. ',' → logprob: -3.0738959312438965
    6. '\n' → logprob: -3.9488959312438965
    7. '(' → logprob: -4.1988959312438965
    8. '[' → logprob: -4.3238959312438965
    9. '
' → logprob: -4.4488959312438965
    10. ':
' → logprob: -4.9488959312438965

Token 315: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.2640686631202698
    2. ' a' → logprob: -1.889068603515625
    3. ' white' → logprob: -2.889068603515625
    4. ' one' → logprob: -4.514068603515625
    5. 'black' → logprob: -5.014068603515625
    6. 'a' → logprob: -6.014068603515625
    7. 'white' → logprob: -6.264068603515625
    8. '1' → logprob: -6.389068603515625
    9. ' ' → logprob: -7.514068603515625
    10. ')' → logprob: -8.389068603515625

Token 316: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9043451547622681
    2. '       ' → logprob: -0.9043451547622681
    3. '   ' → logprob: -2.0293450355529785
    4. '<|end|>' → logprob: -3.9043450355529785
    5. '
' → logprob: -4.7793450355529785
    6. ',' → logprob: -4.9043450355529785
    7. ':' → logprob: -5.4043450355529785
    8. '_' → logprob: -6.2793450355529785
    9. '<|end|>' → logprob: -6.2793450355529785
    10. '    
' → logprob: -6.4043450355529785

Token 317: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9157125949859619
    2. '       ' → logprob: -1.040712594985962
    3. ')' → logprob: -1.790712594985962
    4. '\n' → logprob: -2.915712594985962
    5. '<|end|>' → logprob: -4.915712356567383
    6. '\' → logprob: -4.915712356567383
    7. '```' → logprob: -6.290712356567383
    8. '    ' → logprob: -6.415712356567383
    9. '#' → logprob: -6.790712356567383
    10. '    
' → logprob: -7.165712356567383

Token 318: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04029376804828644
    2. ')' → logprob: -3.5402936935424805
    3. '   ' → logprob: -5.2902936935424805
    4. '\n' → logprob: -6.4152936935424805
    5. '\' → logprob: -7.0402936935424805
    6. '<|end|>' → logprob: -7.4152936935424805
    7. '        
' → logprob: -8.16529369354248
    8. '#' (adapté à ' #') → logprob: -8.41529369354248
    9. ',' → logprob: -8.79029369354248
    10. ':' → logprob: -8.91529369354248

Token 319: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03731628134846687
    2. '   ' → logprob: -4.03731632232666
    3. '\n' → logprob: -4.66231632232666
    4. ')' → logprob: -6.28731632232666
    5. '        
' → logprob: -6.28731632232666
    6. ' 
' → logprob: -6.41231632232666
    7. '    
' → logprob: -6.66231632232666
    8. '\' → logprob: -7.03731632232666
    9. '    ' → logprob: -8.53731632232666
    10. ' \' → logprob: -8.53731632232666

Token 320: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029657339677214622
    2. 'return' → logprob: -4.404657363891602
    3. ' if' → logprob: -5.279657363891602
    4. '   ' → logprob: -5.904657363891602
    5. ' return' → logprob: -5.904657363891602
    6. 'if' → logprob: -6.904657363891602
    7. '        ' → logprob: -7.029657363891602
    8. '        
' → logprob: -7.029657363891602
    9. 'def' → logprob: -7.779657363891602
    10. '
' → logprob: -8.154657363891602

Token 321: ' the' (ID: 290)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1593981981277466
    2. ' w' → logprob: -1.4093981981277466
    3. 'white' → logprob: -2.159398078918457
    4. ' white' → logprob: -2.409398078918457
    5. 'self' → logprob: -2.784398078918457
    6. ' the' → logprob: -3.284398078918457
    7. 'the' → logprob: -3.534398078918457
    8. 'return' → logprob: -3.784398078918457
    9. ' self' → logprob: -4.034398078918457
    10. ' return' → logprob: -4.284398078918457

Token 322: ' operation' (ID: 9506)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' white' → logprob: -1.3440141677856445
    2. 'w' → logprob: -1.4690141677856445
    3. ' ' → logprob: -1.7190141677856445
    4. ' w' → logprob: -1.8440141677856445
    5. ' area' → logprob: -3.5940141677856445
    6. '    ' → logprob: -3.7190141677856445
    7. 'white' → logprob: -4.2190141677856445
    8. ')' → logprob: -4.2190141677856445
    9. ' ' → logprob: -4.3440141677856445
    10. ' next' → logprob: -4.4690141677856445

Token 323: ' adds' (ID: 19282)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.88580721616745
    2. ')' → logprob: -1.7608072757720947
    3. ' ' → logprob: -2.2608072757720947
    4. '<|end|>' → logprob: -2.2608072757720947
    5. ',' → logprob: -3.2608072757720947
    6. '   ' → logprob: -3.5108072757720947
    7. ':' → logprob: -3.6358072757720947
    8. '<|end|>' → logprob: -4.260807037353516
    9. '    ' → logprob: -4.385807037353516
    10. ' ,' → logprob: -4.385807037353516

Token 324: ' one' (ID: 1001)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -1.1178371906280518
    2. ' one' → logprob: -1.2428371906280518
    3. ' ' → logprob: -1.3678371906280518
    4. '1' → logprob: -2.7428371906280518
    5. ' a' → logprob: -3.6178371906280518
    6. ' +' → logprob: -4.617836952209473
    7. 'black' → logprob: -4.617836952209473
    8. ' white' → logprob: -4.992836952209473
    9. '+' → logprob: -5.367836952209473
    10. 'one' → logprob: -6.367836952209473

Token 325: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.07230126112699509
    2. ' white' → logprob: -3.072301149368286
    3. 'black' → logprob: -4.947301387786865
    4. '_black' → logprob: -5.197301387786865
    5. ' ' → logprob: -5.572301387786865
    6. 'white' → logprob: -6.072301387786865
    7. '_white' → logprob: -6.322301387786865
    8. '_' → logprob: -6.572301387786865
    9. '    ' → logprob: -7.697301387786865
    10. ' _' → logprob: -8.072300910949707

Token 326: ' stone' (ID: 14352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.736397385597229
    2. ' stone' → logprob: -1.236397385597229
    3. ' )' → logprob: -1.986397385597229
    4. ' stones' → logprob: -3.6113972663879395
    5. ' ' → logprob: -3.7363972663879395
    6. 'stone' → logprob: -4.8613972663879395
    7. '<|end|>' → logprob: -4.8613972663879395
    8. '   ' → logprob: -5.1113972663879395
    9. '    ' → logprob: -5.4863972663879395
    10. '_' → logprob: -5.7363972663879395

Token 327: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49314484000205994
    2. ')' → logprob: -2.2431447505950928
    3. ',' → logprob: -2.3681447505950928
    4. '   ' → logprob: -2.7431447505950928
    5. ' and' → logprob: -3.2431447505950928
    6. '.' → logprob: -3.9931447505950928
    7. ' in' → logprob: -4.493144989013672
    8. ':' → logprob: -4.493144989013672
    9. '
' → logprob: -5.493144989013672
    10. '    ' → logprob: -5.868144989013672

Token 328: ' removes' (ID: 52683)
  Prédit: ' white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -1.174356460571289
    2. 'white' → logprob: -1.299356460571289
    3. ' decreases' → logprob: -2.174356460571289
    4. ')' → logprob: -3.049356460571289
    5. ' removes' → logprob: -3.049356460571289
    6. ' )' → logprob: -3.424356460571289
    7. ' leaves' → logprob: -4.049356460571289
    8. 'w' → logprob: -4.174356460571289
    9. ' ' → logprob: -4.174356460571289
    10. '<|end|>' → logprob: -4.174356460571289

Token 329: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.03020039200782776
    2. 'one' → logprob: -4.280200481414795
    3. ' ' → logprob: -4.905200481414795
    4. '1' → logprob: -5.280200481414795
    5. ' white' → logprob: -5.905200481414795
    6. 'white' → logprob: -7.655200481414795
    7. ' a' → logprob: -8.905200004577637
    8. '_one' → logprob: -10.030200004577637
    9. 'a' → logprob: -11.905200004577637
    10. '    ' → logprob: -12.030200004577637

Token 330: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.07411213964223862
    2. '_white' → logprob: -3.6991121768951416
    3. '_' → logprob: -3.9491121768951416
    4. ' ' → logprob: -4.4491119384765625
    5. 'white' → logprob: -4.5741119384765625
    6. ' stone' → logprob: -5.8241119384765625
    7. ' _' → logprob: -6.4491119384765625
    8. ' whitespace' → logprob: -7.9491119384765625
    9. ')' → logprob: -8.824111938476562
    10. ' )' → logprob: -9.324111938476562

Token 331: ' stone' (ID: 14352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07448697835206985
    2. ' stone' → logprob: -2.9494869709014893
    3. ' )' → logprob: -4.449487209320068
    4. ' stones' → logprob: -6.324487209320068
    5. '):' → logprob: -6.574487209320068
    6. '   ' → logprob: -6.949487209320068
    7. 'stone' → logprob: -6.949487209320068
    8. ',' → logprob: -7.074487209320068
    9. '_' → logprob: -8.19948673248291
    10. '.' → logprob: -8.44948673248291

Token 332: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40674135088920593
    2. ')' → logprob: -2.4067413806915283
    3. '   ' → logprob: -2.6567413806915283
    4. '):' → logprob: -2.7817413806915283
    5. '       ' → logprob: -3.0317413806915283
    6. ',' → logprob: -3.2817413806915283
    7. '.' → logprob: -4.781741142272949
    8. '<|end|>' → logprob: -5.156741142272949
    9. '
' → logprob: -5.781741142272949
    10. '\n' → logprob: -6.281741142272949

Token 333: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14665856957435608
    2. ' area' → logprob: -2.3966586589813232
    3. 'the' → logprob: -3.7716586589813232
    4. 'self' → logprob: -4.896658420562744
    5. ' self' → logprob: -5.021658420562744
    6. 'area' → logprob: -6.021658420562744
    7. ')' → logprob: -6.146658420562744
    8. ' stone' → logprob: -6.521658420562744
    9. '_area' → logprob: -7.146658420562744
    10. 'stone' → logprob: -7.396658420562744

Token 334: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.04404245689511299
    2. 'area' → logprob: -3.1690423488616943
    3. '_area' → logprob: -8.044042587280273
    4. ')' → logprob: -8.919042587280273
    5. ' current' → logprob: -8.919042587280273
    6. ' )' → logprob: -8.919042587280273
    7. ' stone' → logprob: -9.544042587280273
    8. 'self' → logprob: -9.794042587280273
    9. 'stone' → logprob: -10.294042587280273
    10. ' ' → logprob: -10.419042587280273

Token 335: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16468758881092072
    2. ':' → logprob: -2.5396876335144043
    3. '   ' → logprob: -3.5396876335144043
    4. '
' → logprob: -4.164687633514404
    5. '\n' → logprob: -5.039687633514404
    6. ':
' → logprob: -5.289687633514404
    7. ',' → logprob: -5.289687633514404
    8. '    
' → logprob: -6.289687633514404
    9. '        
' → logprob: -6.289687633514404
    10. ')' → logprob: -6.539687633514404

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.663408637046814
    2. '\n' → logprob: -1.788408637046814
    3. '   ' → logprob: -2.2884087562561035
    4. '\' → logprob: -2.7884087562561035
    5. ')' → logprob: -3.1634087562561035
    6. ':' → logprob: -3.9134087562561035
    7. '<|end|>' → logprob: -4.0384087562561035
    8. '	' → logprob: -4.1634087562561035
    9. ' ' → logprob: -4.5384087562561035
    10. ' 
' → logprob: -4.7884087562561035

Token 337: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08777379244565964
    2. '\n' → logprob: -2.9627737998962402
    3. '   ' → logprob: -4.71277379989624
    4. '\' → logprob: -5.08777379989624
    5. ' 
' → logprob: -5.08777379989624
    6. '        
' → logprob: -5.71277379989624
    7. ')' → logprob: -6.83777379989624
    8. '<|end|>' → logprob: -6.96277379989624
    9. '    
' → logprob: -7.08777379989624
    10. ':' → logprob: -7.21277379989624

Token 338: ' Thus' (ID: 23586)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006207128055393696
    2. ' if' → logprob: -6.38120698928833
    3. '   ' → logprob: -6.63120698928833
    4. '        
' → logprob: -6.88120698928833
    5. 'if' → logprob: -7.13120698928833
    6. '
' → logprob: -7.88120698928833
    7. ' 
' → logprob: -8.131207466125488
    8. 'w' → logprob: -8.631207466125488
    9. 'def' → logprob: -9.131207466125488
    10. '    
' → logprob: -9.256207466125488

Token 339: ' move' (ID: 5275)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5332532525062561
    2. ' if' → logprob: -1.7832531929016113
    3. '       ' → logprob: -1.9082531929016113
    4. '    ' → logprob: -2.9082531929016113
    5. 'w' → logprob: -4.658253192901611
    6. '   ' → logprob: -4.783253192901611
    7. ' return' → logprob: -5.033253192901611
    8. '        ' → logprob: -5.658253192901611
    9. 'return' → logprob: -5.783253192901611
    10. ' white' → logprob: -5.908253192901611

Token 340: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07894311100244522
    2. ' =' → logprob: -3.9539430141448975
    3. '   ' → logprob: -3.9539430141448975
    4. ' s' → logprob: -4.453943252563477
    5. '       ' → logprob: -4.453943252563477
    6. ' (' → logprob: -5.453943252563477
    7. ')' → logprob: -6.203943252563477
    8. ':
' → logprob: -6.828943252563477
    9. '           ' → logprob: -7.078943252563477
    10. ' is' → logprob: -7.328943252563477

Token 341: 'c' (ID: 66)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47065550088882446
    2. 'a' → logprob: -1.2206554412841797
    3. ')' → logprob: -3.0956554412841797
    4. ' (' → logprob: -4.72065544128418
    5. ' w' → logprob: -5.22065544128418
    6. ' a' → logprob: -5.59565544128418
    7. 'c' → logprob: -5.72065544128418
    8. '   ' → logprob: -5.97065544128418
    9. '1' → logprob: -6.09565544128418
    10. ' ' → logprob: -6.22065544128418

Token 342: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.254536896944046
    2. ')' → logprob: -2.2545368671417236
    3. '):
' → logprob: -2.2545368671417236
    4. '   ' → logprob: -4.754537105560303
    5. ':' → logprob: -6.254537105560303
    6. '):
' → logprob: -6.629537105560303
    7. '       ' → logprob: -6.879537105560303
    8. ')
' → logprob: -7.504537105560303
    9. '):

' → logprob: -8.504536628723145
    10. ' ):' → logprob: -8.504536628723145

Token 343: ' transforms' (ID: 55580)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9611268043518066
    2. ':
' → logprob: -0.9611268043518066
    3. '       ' → logprob: -1.7111268043518066
    4. '   ' → logprob: -3.8361268043518066
    5. ' if' → logprob: -4.086126804351807
    6. 'if' → logprob: -5.336126804351807
    7. ' is' → logprob: -5.711126804351807
    8. '):
' → logprob: -6.086126804351807
    9. ',' → logprob: -6.586126804351807
    10. '):' → logprob: -7.086126804351807

Token 344: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3018247187137604
    2. '(w' → logprob: -2.0518248081207275
    3. '(self' → logprob: -2.0518248081207275
    4. 'self' → logprob: -6.176824569702148
    5. ' self' → logprob: -6.926824569702148
    6. '   ' → logprob: -8.676824569702148
    7. '       ' → logprob: -8.676824569702148
    8. '(' → logprob: -9.176824569702148
    9. ' ' → logprob: -11.301824569702148
    10. ',' → logprob: -12.426824569702148

Token 345: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00379532715305686
    2. ' self' → logprob: -5.628795146942139
    3. 'w' → logprob: -9.253795623779297
    4. '(self' → logprob: -10.128795623779297
    5. '   ' → logprob: -10.503795623779297
    6. '       ' → logprob: -10.628795623779297
    7. ' ' → logprob: -13.503795623779297
    8. ')' → logprob: -13.753795623779297
    9. '	self' → logprob: -13.753795623779297
    10. '           ' → logprob: -14.003795623779297

Token 346: ',b' (ID: 17568)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05638456344604492
    2. ' -' → logprob: -2.931384563446045
    3. ',' → logprob: -6.556384563446045
    4. ')' → logprob: -10.806385040283203
    5. '   ' → logprob: -10.931385040283203
    6. '-,' → logprob: -11.681385040283203
    7. ' ' → logprob: -11.806385040283203
    8. '	' → logprob: -12.056385040283203
    9. ' ,' → logprob: -12.181385040283203
    10. '-)' → logprob: -12.681385040283203

Token 347: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030727658420801163
    2. ')' → logprob: -4.030727863311768
    3. ' -' → logprob: -4.405727863311768
    4. '   ' → logprob: -9.28072738647461
    5. ')->' → logprob: -10.03072738647461
    6. '       ' → logprob: -10.53072738647461
    7. ',' → logprob: -10.65572738647461
    8. ' ->' → logprob: -10.65572738647461
    9. '->' → logprob: -10.78072738647461
    10. ')-' → logprob: -11.15572738647461

Token 348: ' ->' (ID: 2747)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.6939346194267273
    2. ' to' → logprob: -1.068934679031372
    3. ' ->' → logprob: -3.193934679031372
    4. ' =' → logprob: -3.318934679031372
    5. '=' → logprob: -3.693934679031372
    6. '   ' → logprob: -4.318934440612793
    7. 'into' → logprob: -4.443934440612793
    8. ')' → logprob: -4.818934440612793
    9. '       ' → logprob: -5.193934440612793
    10. '->' → logprob: -5.693934440612793

Token 349: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31488487124443054
    2. '(w' → logprob: -1.314884901046753
    3. '(self' → logprob: -6.439884662628174
    4. '   ' → logprob: -11.314885139465332
    5. ' ' → logprob: -12.689885139465332
    6. '(' → logprob: -12.689885139465332
    7. 'self' → logprob: -12.814885139465332
    8. ' self' → logprob: -12.814885139465332
    9. '       ' → logprob: -14.564885139465332
    10. '  ' → logprob: -15.064885139465332

Token 350: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4417765736579895
    2. 'self' → logprob: -1.0667765140533447
    3. ' self' → logprob: -5.066776752471924
    4. ' w' → logprob: -5.691776752471924
    5. '(w' → logprob: -6.191776752471924
    6. '(self' → logprob: -6.941776752471924
    7. ' (' → logprob: -8.816776275634766
    8. '   ' → logprob: -9.441776275634766
    9. ' ' → logprob: -10.316776275634766
    10. 'max' → logprob: -11.066776275634766

Token 351: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008614926598966122
    2. ' -' → logprob: -4.758615016937256
    3. '-
' → logprob: -15.883614540100098
    4. ' ' → logprob: -17.133615493774414
    5. '   ' → logprob: -17.258615493774414
    6. ',' → logprob: -17.383615493774414
    7. '
' → logprob: -17.508615493774414
    8. '1' → logprob: -17.758615493774414
    9. '−' → logprob: -17.883615493774414
    10. '```' → logprob: -18.008615493774414

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.2501802444458
    4. '```' → logprob: -17.375179290771484
    5. '2' → logprob: -17.750179290771484
    6. '-' → logprob: -17.875179290771484
    7. '  ' → logprob: -17.875179290771484
    8. '    ' → logprob: -18.187679290771484
    9. '`' → logprob: -18.562679290771484
    10. ' ' → logprob: -18.875179290771484

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028624574770219624
    2. ',b' → logprob: -8.250286102294922
    3. ' ,' → logprob: -10.625286102294922
    4. ',
' → logprob: -15.375286102294922
    5. ',c' → logprob: -15.750286102294922
    6. ')' → logprob: -16.625286102294922
    7. '```' → logprob: -16.875286102294922
    8. '   ' → logprob: -17.000286102294922
    9. 'b' → logprob: -17.125286102294922
    10. '‌,' → logprob: -17.500286102294922

Token 354: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759400129318237
    2. 'b' → logprob: -0.8259400129318237
    3. ' ' → logprob: -14.950940132141113
    4. '	b' → logprob: -16.200939178466797
    5. ' ' → logprob: -16.325939178466797
    6. '(b' → logprob: -16.700939178466797
    7. ' (' → logprob: -17.950939178466797
    8. ')b' → logprob: -18.200939178466797
    9. '   ' → logprob: -18.700939178466797
    10. ' б' → logprob: -18.825939178466797

Token 355: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.810037742368877e-05
    2. ' +' → logprob: -10.500038146972656
    3. '+)' → logprob: -11.625038146972656
    4. '+
' → logprob: -13.625038146972656
    5. ')' → logprob: -16.250038146972656
    6. ')+' → logprob: -16.375038146972656
    7. '1' → logprob: -16.625038146972656
    8. '+

' → logprob: -16.875038146972656
    9. '+')' → logprob: -17.250038146972656
    10. '＋' → logprob: -17.625038146972656

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.750003814697266
    4. '   ' → logprob: -20.250003814697266
    5. ')' → logprob: -20.250003814697266
    6. '
' → logprob: -20.625003814697266
    7. '<|end|>' → logprob: -21.125003814697266
    8. '=' → logprob: -21.375003814697266
    9. '۱' → logprob: -21.500003814697266
    10. ' ' → logprob: -21.625003814697266

Token 357: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. '       ' → logprob: -12.125015258789062
    3. ')
' → logprob: -12.125015258789062
    4. ' )' → logprob: -13.375015258789062
    5. '   ' → logprob: -13.500015258789062
    6. '):' → logprob: -14.875015258789062
    7. '}' → logprob: -15.250015258789062
    8. '),' → logprob: -15.375015258789062
    9. ')#' → logprob: -16.250015258789062
    10. ')`' → logprob: -16.750015258789062

Token 358: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18271863460540771
    2. '
' → logprob: -1.9327186346054077
    3. ':' → logprob: -5.432718753814697
    4. ' if' → logprob: -5.432718753814697
    5. '   ' → logprob: -5.807718753814697
    6. ':
' → logprob: -6.432718753814697
    7. '\n' → logprob: -6.557718753814697
    8. '        
' → logprob: -6.557718753814697
    9. ',' → logprob: -6.807718753814697
    10. 'if' → logprob: -6.932718753814697

Token 359: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.10304583609104156
    2. 'w' → logprob: -2.35304594039917
    3. ' self' → logprob: -6.22804594039917
    4. 'self' → logprob: -7.10304594039917
    5. ' white' → logprob: -11.103045463562012
    6. ' ' → logprob: -11.478045463562012
    7. '	w' → logprob: -12.103045463562012
    8. ' ' → logprob: -13.103045463562012
    9. '   ' → logprob: -13.103045463562012
    10. '1' → logprob: -14.228045463562012

Token 360: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1426856815814972
    2. '>' → logprob: -2.017685651779175
    3. ' >=' → logprob: -12.017685890197754
    4. ' ' → logprob: -13.267685890197754
    5. '>=' → logprob: -13.892685890197754
    6. '   ' → logprob: -14.267685890197754
    7. ')' → logprob: -15.392685890197754
    8. '1' → logprob: -15.517685890197754
    9. ')>' → logprob: -15.517685890197754
    10. ' >
' → logprob: -15.767685890197754

Token 361: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003356420435011387
    2. ' ' → logprob: -6.128356456756592
    3. '0' → logprob: -6.753356456756592
    4. '=' → logprob: -12.753355979919434
    5. '>' → logprob: -14.253355979919434
    6. '   ' → logprob: -16.75335693359375
    7. '  ' → logprob: -18.12835693359375
    8. '	' → logprob: -18.25335693359375
    9. '' → logprob: -18.62835693359375
    10. '```' → logprob: -18.62835693359375

Token 362: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16768129169940948
    2. '
' → logprob: -2.4176812171936035
    3. '   ' → logprob: -3.7926812171936035
    4. ':' → logprob: -4.2926812171936035
    5. '<|end|>' → logprob: -4.4176812171936035
    6. '        
' → logprob: -5.5426812171936035
    7. ')' → logprob: -5.6676812171936035
    8. ',' → logprob: -6.1676812171936035
    9. '    
' → logprob: -6.6676812171936035
    10. ':
' → logprob: -7.4176812171936035

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7723448276519775
    2. '<|end|>' → logprob: -1.0223448276519775
    3. ':' → logprob: -2.2723448276519775
    4. '   ' → logprob: -3.2723448276519775
    5. ')' → logprob: -4.147344589233398
    6. '<|end|>' → logprob: -5.647344589233398
    7. '
' → logprob: -5.772344589233398
    8. '    ' → logprob: -6.272344589233398
    9. '	' → logprob: -6.397344589233398
    10. ',' → logprob: -6.397344589233398

Token 364: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08067519962787628
    2. '\n' → logprob: -3.3306751251220703
    3. '\' → logprob: -4.58067512512207
    4. '   ' → logprob: -4.70567512512207
    5. '
' → logprob: -5.45567512512207
    6. ')' → logprob: -5.70567512512207
    7. '        
' → logprob: -5.83067512512207
    8. ' 
' → logprob: -6.08067512512207
    9. ':' → logprob: -6.45567512512207
    10. '    
' → logprob: -6.83067512512207

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015680687502026558
    2. '   ' → logprob: -7.126567840576172
    3. 'w' → logprob: -8.626567840576172
    4. ' w' → logprob: -8.626567840576172
    5. 'moves' → logprob: -8.751567840576172
    6. 'if' → logprob: -9.876567840576172
    7. ' if' → logprob: -10.126567840576172
    8. '        
' → logprob: -10.751567840576172
    9. 'tokens' → logprob: -10.876567840576172
    10. 'n' → logprob: -11.251567840576172

Token 366: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2235085815191269
    2. 'w' → logprob: -2.723508596420288
    3. 'moves' → logprob: -3.098508596420288
    4. '   ' → logprob: -3.473508596420288
    5. ' w' → logprob: -3.973508596420288
    6. 'mex' → logprob: -4.473508358001709
    7. ' if' → logprob: -4.723508358001709
    8. 'if' → logprob: -5.223508358001709
    9. 'result' → logprob: -5.598508358001709
    10. 'n' → logprob: -5.973508358001709

Token 367: ' Let's' (ID: 41021)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.271187424659729
    2. ' if' → logprob: -1.271187424659729
    3. '       ' → logprob: -1.396187424659729
    4. 'moves' → logprob: -2.0211873054504395
    5. '   ' → logprob: -3.7711873054504395
    6. 'w' → logprob: -3.8961873054504395
    7. 'mex' → logprob: -5.6461873054504395
    8. ' moves' → logprob: -6.1461873054504395
    9. ' w' → logprob: -6.2711873054504395
    10. 'results' → logprob: -6.3961873054504395

Token 368: ' re' (ID: 322)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6583495140075684
    2. 'memo' → logprob: -1.2833495140075684
    3. 'if' → logprob: -2.4083495140075684
    4. '   ' → logprob: -3.1583495140075684
    5. ' memo' → logprob: -3.1583495140075684
    6. 'cache' → logprob: -4.533349514007568
    7. ' if' → logprob: -5.283349514007568
    8. 'def' → logprob: -5.533349514007568
    9. 'mem' → logprob: -6.158349514007568
    10. 'import' → logprob: -6.283349514007568

Token 369: '-' (ID: 12)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -3.91732100979425e-05
    2. 'move' → logprob: -11.375039100646973
    3. 'write' → logprob: -11.750039100646973
    4. 'urn' → logprob: -11.750039100646973
    5. 'trieve' → logprob: -12.750039100646973
    6. '       ' → logprob: -13.000039100646973
    7. ' turn' → logprob: -13.750039100646973
    8. 'main' → logprob: -14.125039100646973
    9. '   ' → logprob: -14.250039100646973
    10. 'solve' → logprob: -14.500039100646973

Token 370: 'verify' (ID: 21358)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -6.20603168499656e-05
    2. ' turn' → logprob: -10.500061988830566
    3. 'urn' → logprob: -11.250061988830566
    4. 'write' → logprob: -12.125061988830566
    5. 'return' → logprob: -12.375061988830566
    6. 'move' → logprob: -12.625061988830566
    7. '       ' → logprob: -12.625061988830566
    8. '   ' → logprob: -14.000061988830566
    9. 'eturn' → logprob: -14.125061988830566
    10. '
' → logprob: -14.625061988830566

Token 371: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2009488195180893
    2. '
' → logprob: -1.9509488344192505
    3. '\n' → logprob: -3.825948715209961
    4. '   ' → logprob: -5.450948715209961
    5. '        
' → logprob: -5.450948715209961
    6. '\' → logprob: -6.700948715209961
    7. '    
' → logprob: -6.825948715209961
    8. 'self' → logprob: -6.950948715209961
    9. ' if' → logprob: -7.200948715209961
    10. 'w' → logprob: -7.450948715209961

Token 372: ' statement' (ID: 9710)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11438904702663422
    2. '       ' → logprob: -3.114388942718506
    3. '   ' → logprob: -3.239388942718506
    4. '):' → logprob: -4.989388942718506
    5. ':
' → logprob: -5.114388942718506
    6. '\n' → logprob: -5.614388942718506
    7. ')' → logprob: -5.989388942718506
    8. '
' → logprob: -6.739388942718506
    9. '    
' → logprob: -7.364388942718506
    10. '        
' → logprob: -7.864388942718506

Token 373: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.599431037902832
    2. '
' → logprob: -1.974431037902832
    3. ':' → logprob: -2.099431037902832
    4. '\n' → logprob: -2.224431037902832
    5. '\' → logprob: -3.974431037902832
    6. '<|end|>' → logprob: -4.474431037902832
    7. '   ' → logprob: -4.599431037902832
    8. '        
' → logprob: -4.724431037902832
    9. ':
' → logprob: -5.224431037902832
    10. ')' → logprob: -5.224431037902832

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2683655619621277
    2. '   ' → logprob: -2.2683656215667725
    3. '    ' → logprob: -3.2683656215667725
    4. ')' → logprob: -3.5183656215667725
    5. '\n' → logprob: -4.143365383148193
    6. '<|end|>' → logprob: -4.143365383148193
    7. '\' → logprob: -4.268365383148193
    8. ' ' → logprob: -5.768365383148193
    9. ':' → logprob: -5.768365383148193
    10. '        ' → logprob: -6.018365383148193

Token 375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01947833225131035
    2. '\n' → logprob: -5.1444783210754395
    3. '   ' → logprob: -5.7694783210754395
    4. '        
' → logprob: -5.8944783210754395
    5. '\' → logprob: -6.5194783210754395
    6. ')' → logprob: -6.8944783210754395
    7. '        ' → logprob: -7.0194783210754395
    8. ' 
' → logprob: -7.2694783210754395
    9. 'return' → logprob: -7.8944783210754395
    10. '    ' → logprob: -7.8944783210754395

Token 376: ' "(' (ID: 29149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00236137886531651
    2. '   ' → logprob: -7.127361297607422
    3. '        ' → logprob: -8.627361297607422
    4. ' if' → logprob: -8.752361297607422
    5. ' ' → logprob: -8.752361297607422
    6. '```' → logprob: -8.752361297607422
    7. '
' → logprob: -8.877361297607422
    8. 'n' → logprob: -9.252361297607422
    9. '    ' → logprob: -9.377361297607422
    10. '        
' → logprob: -9.502361297607422

Token 377: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11060566455125809
    2. 'w' → logprob: -2.3606057167053223
    3. ' )' → logprob: -5.610605716705322
    4. '   ' → logprob: -6.235605716705322
    5. '
' → logprob: -6.735605716705322
    6. 'self' → logprob: -7.110605716705322
    7. ' ' → logprob: -7.735605716705322
    8. 'def' → logprob: -8.110605239868164
    9. '       ' → logprob: -8.110605239868164
    10. ')
' → logprob: -8.485605239868164

Token 378: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009264981374144554
    2. '):' → logprob: -5.134264945983887
    3. '   ' → logprob: -6.384264945983887
    4. ' )' → logprob: -7.884264945983887
    5. ')
' → logprob: -8.759264945983887
    6. ':' → logprob: -8.884264945983887
    7. ']' → logprob: -9.134264945983887
    8. ')"' → logprob: -9.259264945983887
    9. 'def' → logprob: -9.384264945983887
    10. '")' → logprob: -9.759264945983887

Token 379: ' Pick' (ID: 24284)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29360729455947876
    2. ' remove' → logprob: -2.168607234954834
    3. 'remove' → logprob: -2.793607234954834
    4. '   ' → logprob: -4.293607234954834
    5. 'replace' → logprob: -4.293607234954834
    6. ' replace' → logprob: -4.668607234954834
    7. ' if' → logprob: -4.918607234954834
    8. ' )' → logprob: -4.918607234954834
    9. ')"' → logprob: -4.918607234954834
    10. 'Remove' → logprob: -5.418607234954834

Token 380: ' up' (ID: 869)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2145511656999588
    2. ')' → logprob: -2.5895512104034424
    3. 'one' → logprob: -3.3395512104034424
    4. 'up' → logprob: -3.9645512104034424
    5. '    ' → logprob: -4.089550971984863
    6. '_one' → logprob: -4.589550971984863
    7. ' ' → logprob: -4.839550971984863
    8. ' up' → logprob: -5.339550971984863
    9. '_up' → logprob: -5.339550971984863
    10. ' )' → logprob: -5.839550971984863

Token 381: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7466716766357422
    2. ' a' → logprob: -1.2466716766357422
    3. ' one' → logprob: -2.121671676635742
    4. 'one' → logprob: -2.871671676635742
    5. ')' → logprob: -3.496671676635742
    6. 'white' → logprob: -4.746671676635742
    7. 'w' → logprob: -4.871671676635742
    8. ' ' → logprob: -5.621671676635742
    9. ' white' → logprob: -5.746671676635742
    10. ' )' → logprob: -5.871671676635742

Token 382: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.3989831507205963
    2. ' white' → logprob: -1.148983120918274
    3. 'stone' → logprob: -5.273983001708984
    4. '_white' → logprob: -5.898983001708984
    5. ' ' → logprob: -6.523983001708984
    6. ' stone' → logprob: -6.648983001708984
    7. 'w' → logprob: -8.523983001708984
    8. ' )' → logprob: -8.773983001708984
    9. ')' → logprob: -9.023983001708984
    10. '<|end|>' → logprob: -9.023983001708984

Token 383: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.5456100106239319
    2. '_' → logprob: -1.545609951019287
    3. 'stone' → logprob: -2.420609951019287
    4. ' ' → logprob: -2.545609951019287
    5. ' )' → logprob: -4.045609951019287
    6. ')' → logprob: -4.545609951019287
    7. ' _' → logprob: -4.670609951019287
    8. '_st' → logprob: -7.545609951019287
    9. ' ")' → logprob: -7.920609951019287
    10. ' ' → logprob: -8.170610427856445

Token 384: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6098364591598511
    2. ')' → logprob: -1.609836459159851
    3. 'from' → logprob: -2.3598365783691406
    4. ' and' → logprob: -3.1098365783691406
    5. ' )' → logprob: -3.3598365783691406
    6. '   ' → logprob: -3.7348365783691406
    7. ' if' → logprob: -3.7348365783691406
    8. ' ' → logprob: -4.234836578369141
    9. '    ' → logprob: -5.234836578369141
    10. ',' → logprob: -5.984836578369141

Token 385: ' the' (ID: 290)
  Prédit: ' pod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pod' → logprob: -0.7292353510856628
    2. 'pod' → logprob: -1.2292354106903076
    3. ' the' → logprob: -1.7292354106903076
    4. 'the' → logprob: -3.1042354106903076
    5. ' stone' → logprob: -6.6042351722717285
    6. 'stone' → logprob: -7.4792351722717285
    7. ' a' → logprob: -7.7292351722717285
    8. ' ' → logprob: -8.979235649108887
    9. ' white' → logprob: -9.979235649108887
    10. ' Pod' → logprob: -10.229235649108887

Token 386: ' stone' (ID: 14352)
  Prédit: 'pod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pod' → logprob: -0.31772080063819885
    2. ' pod' → logprob: -1.3177207708358765
    3. ' ' → logprob: -6.067720890045166
    4. ' area' → logprob: -7.817720890045166
    5. 'stone' → logprob: -7.817720890045166
    6. ' stone' → logprob: -8.317720413208008
    7. 'p' → logprob: -8.567720413208008
    8. ' p' → logprob: -8.817720413208008
    9. 'area' → logprob: -9.317720413208008
    10. ' ' → logprob: -9.567720413208008

Token 387: ' pod' (ID: 3155)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8586590886116028
    2. ' pod' → logprob: -1.358659029006958
    3. ' ' → logprob: -2.608659029006958
    4. ' )' → logprob: -2.858659029006958
    5. 'pod' → logprob: -2.858659029006958
    6. 'from' → logprob: -3.483659029006958
    7. ' pile' → logprob: -3.483659029006958
    8. ' stone' → logprob: -4.358659267425537
    9. 's' → logprob: -4.483659267425537
    10. 'stone' → logprob: -4.733659267425537

Token 388: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.142157793045044
    2. ' and' → logprob: -1.142157793045044
    3. ')' → logprob: -1.267157793045044
    4. ',' → logprob: -3.267157793045044
    5. '   ' → logprob: -3.767157793045044
    6. ' )' → logprob: -5.767157554626465
    7. '"' → logprob: -6.017157554626465
    8. ':' → logprob: -6.517157554626465
    9. ' ' → logprob: -6.642157554626465
    10. '           ' → logprob: -6.642157554626465

Token 389: ' replace' (ID: 13284)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.23288396000862122
    2. ' replace' → logprob: -1.6078839302062988
    3. 'remove' → logprob: -6.107883930206299
    4. ' add' → logprob: -6.357883930206299
    5. ' place' → logprob: -6.857883930206299
    6. ' remove' → logprob: -6.982883930206299
    7. 'add' → logprob: -7.482883930206299
    8. 'place' → logprob: -7.857883930206299
    9. ' put' → logprob: -8.857884407043457
    10. 'put' → logprob: -8.857884407043457

Token 390: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05006704106926918
    2. ')' → logprob: -3.1750669479370117
    3. ' one' → logprob: -6.300066947937012
    4. '_one' → logprob: -6.425066947937012
    5. ' )' → logprob: -6.425066947937012
    6. ' ' → logprob: -7.050066947937012
    7. ' _' → logprob: -8.300066947937012
    8. 'one' → logprob: -8.300066947937012
    9. ')_' → logprob: -9.300066947937012
    10. '<|end|>' → logprob: -9.800066947937012

Token 391: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5004937648773193
    2. ' in' → logprob: -1.1254937648773193
    3. '   ' → logprob: -4.250494003295898
    4. '_' → logprob: -4.500494003295898
    5. ' "' → logprob: -4.750494003295898
    6. ' ")' → logprob: -5.125494003295898
    7. 'in' → logprob: -5.500494003295898
    8. ')' → logprob: -5.625494003295898
    9. 'with' → logprob: -5.750494003295898
    10. ' ' → logprob: -5.875494003295898

Token 392: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31371739506721497
    2. ' one' → logprob: -1.5637173652648926
    3. 'a' → logprob: -3.0637173652648926
    4. ' black' → logprob: -4.563717365264893
    5. ' ' → logprob: -6.813717365264893
    6. 'one' → logprob: -6.813717365264893
    7. 'black' → logprob: -8.31371784210205
    8. ' white' → logprob: -8.56371784210205
    9. ' the' → logprob: -9.93871784210205
    10. 'white' → logprob: -10.68871784210205

Token 393: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.1304721087217331
    2. 'black' → logprob: -2.130472183227539
    3. ' white' → logprob: -6.130472183227539
    4. 'white' → logprob: -7.005472183227539
    5. 'space' → logprob: -9.005472183227539
    6. ' ' → logprob: -9.255472183227539
    7. ' ' → logprob: -9.255472183227539
    8. ' space' → logprob: -10.130472183227539
    9. ' 
' → logprob: -11.005472183227539
    10. ' Black' → logprob: -11.630472183227539

Token 394: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.1878114640712738
    2. 'stone' → logprob: -2.0628113746643066
    3. ' ' → logprob: -3.3128113746643066
    4. '_' → logprob: -5.187811374664307
    5. ' )' → logprob: -7.312811374664307
    6. ' space' → logprob: -7.687811374664307
    7. ')' → logprob: -7.937811374664307
    8. ' ' → logprob: -8.687811851501465
    9. 'space' → logprob: -9.062811851501465
    10. ' _' → logprob: -9.562811851501465

Token 395: '."
' (ID: 14396)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3940278887748718
    2. ')"' → logprob: -1.8940279483795166
    3. ')' → logprob: -2.6440279483795166
    4. ' "' → logprob: -2.7690279483795166
    5. '   ' → logprob: -4.0190277099609375
    6. '       ' → logprob: -4.6440277099609375
    7. '.' → logprob: -5.6440277099609375
    8. ':' → logprob: -6.3940277099609375
    9. '):' → logprob: -6.5190277099609375
    10. '."' → logprob: -6.5190277099609375

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30254000425338745
    2. ')' → logprob: -2.4275400638580322
    3. '   ' → logprob: -2.6775400638580322
    4. ':' → logprob: -3.1775400638580322
    5. '\n' → logprob: -4.052539825439453
    6. '\' → logprob: -4.677539825439453
    7. '.' → logprob: -5.552539825439453
    8. ' 
' → logprob: -5.802539825439453
    9. '    
' → logprob: -6.052539825439453
    10. '(' → logprob: -6.052539825439453

Token 397: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02943512424826622
    2. '   ' → logprob: -4.154435157775879
    3. '\n' → logprob: -4.529435157775879
    4. '\' → logprob: -7.279435157775879
    5. '        
' → logprob: -7.654435157775879
    6. ')' → logprob: -8.404435157775879
    7. '    
' → logprob: -8.779435157775879
    8. '           ' → logprob: -9.279435157775879
    9. '    ' → logprob: -9.404435157775879
    10. ':' → logprob: -9.654435157775879

Token 398: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03157354146242142
    2. ' if' → logprob: -4.53157377243042
    3. 'if' → logprob: -4.90657377243042
    4. 'moves' → logprob: -5.53157377243042
    5. '   ' → logprob: -5.90657377243042
    6. '\n' → logprob: -6.90657377243042
    7. '\' → logprob: -7.15657377243042
    8. 'memo' → logprob: -7.28157377243042
    9. ' w' → logprob: -7.90657377243042
    10. 'w' → logprob: -7.90657377243042

Token 399: ' pod' (ID: 3155)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6376785039901733
    2. ' ' → logprob: -1.7626785039901733
    3. 'n' → logprob: -2.137678623199463
    4. ')' → logprob: -2.637678623199463
    5. '   ' → logprob: -2.762678623199463
    6. ' return' → logprob: -3.012678623199463
    7. 'w' → logprob: -3.012678623199463
    8. 'return' → logprob: -3.137678623199463
    9. 'def' → logprob: -3.512678623199463
    10. ' w' → logprob: -3.637678623199463

Token 400: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6949700117111206
    2. ')' → logprob: -1.3199700117111206
    3. ' )' → logprob: -2.31997013092041
    4. ' ' → logprob: -3.19497013092041
    5. ' stone' → logprob: -3.69497013092041
    6. ' has' → logprob: -4.06997013092041
    7. ' stones' → logprob: -4.44497013092041
    8. '<|end|>' → logprob: -4.56997013092041
    9. '_' → logprob: -4.81997013092041
    10. ' can' → logprob: -5.94497013092041

Token 401: ' infinite' (ID: 48413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6265048384666443
    2. ' infinite' → logprob: -1.751504898071289
    3. ' an' → logprob: -1.876504898071289
    4. 'an' → logprob: -2.501504898071289
    5. ' unlimited' → logprob: -3.251504898071289
    6. ' white' → logprob: -5.126504898071289
    7. 'inf' → logprob: -6.126504898071289
    8. ' a' → logprob: -6.126504898071289
    9. 'a' → logprob: -6.501504898071289
    10. 'white' → logprob: -6.501504898071289

Token 402: ' white' (ID: 6461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24928408861160278
    2. '<|end|>' → logprob: -2.499284029006958
    3. ' stones' → logprob: -2.749284029006958
    4. 'stone' → logprob: -4.124284267425537
    5. 'stones' → logprob: -4.124284267425537
    6. ' stone' → logprob: -4.374284267425537
    7. ' )' → logprob: -4.624284267425537
    8. '<|end|>' → logprob: -5.249284267425537
    9. '_' → logprob: -5.624284267425537
    10. ' ' → logprob: -5.874284267425537

Token 403: ' stones' (ID: 38940)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3955571949481964
    2. ' stones' → logprob: -1.395557165145874
    3. 'stones' → logprob: -3.270557165145874
    4. '   ' → logprob: -4.520557403564453
    5. 'stone' → logprob: -4.895557403564453
    6. ' stone' → logprob: -5.145557403564453
    7. ' )' → logprob: -5.270557403564453
    8. '_' → logprob: -5.395557403564453
    9. '_st' → logprob: -6.020557403564453
    10. ')
' → logprob: -6.270557403564453

Token 404: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19669358432292938
    2. '
' → logprob: -2.9466936588287354
    3. '   ' → logprob: -2.9466936588287354
    4. ':' → logprob: -3.5716936588287354
    5. ')' → logprob: -4.321693420410156
    6. ',' → logprob: -5.071693420410156
    7. '        
' → logprob: -5.321693420410156
    8. '    
' → logprob: -5.946693420410156
    9. '\n' → logprob: -5.946693420410156
    10. ':
' → logprob: -6.446693420410156

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008347192779183388
    2. '   ' → logprob: -5.633347034454346
    3. '\n' → logprob: -5.883347034454346
    4. ')' → logprob: -6.883347034454346
    5. '\' → logprob: -8.383347511291504
    6. '        
' → logprob: -9.258347511291504
    7. '#' → logprob: -9.508347511291504
    8. 'return' → logprob: -9.633347511291504
    9. '<|end|>' → logprob: -9.633347511291504
    10. '           ' → logprob: -10.008347511291504

Token 406: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018549753352999687
    2. '   ' → logprob: -4.393549919128418
    3. '\n' → logprob: -6.268549919128418
    4. ')' → logprob: -6.393549919128418
    5. '\' → logprob: -7.643549919128418
    6. '<|end|>' → logprob: -8.143549919128418
    7. '#' (adapté à ' #') → logprob: -8.268549919128418
    8. 'w' → logprob: -8.393549919128418
    9. ',' → logprob: -9.143549919128418
    10. 'return' → logprob: -9.268549919128418

Token 407: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015969501808285713
    2. 'moves' → logprob: -5.015969276428223
    3. ' if' → logprob: -5.640969276428223
    4. 'if' → logprob: -6.140969276428223
    5. '   ' → logprob: -7.390969276428223
    6. ' moves' → logprob: -8.140969276428223
    7. 'memo' → logprob: -8.140969276428223
    8. 'w' → logprob: -8.515969276428223
    9. '\' → logprob: -8.640969276428223
    10. ' w' → logprob: -8.765969276428223

Token 408: ' replacement' (ID: 19207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.640066385269165
    2. ' area' → logprob: -1.640066385269165
    3. ' pod' → logprob: -1.640066385269165
    4. ' next' → logprob: -2.515066385269165
    5. ' white' → logprob: -2.640066385269165
    6. 'pod' → logprob: -2.640066385269165
    7. ' current' → logprob: -3.015066385269165
    8. ' )' → logprob: -3.265066385269165
    9. ' rest' → logprob: -4.015066146850586
    10. 'def' → logprob: -4.640066146850586

Token 409: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3879255950450897
    2. ' is' → logprob: -2.887925624847412
    3. '<|end|>' → logprob: -2.887925624847412
    4. ' )' → logprob: -3.012925624847412
    5. '   ' → logprob: -3.637925624847412
    6. ' stone' → logprob: -3.887925624847412
    7. 's' → logprob: -4.012925624847412
    8. ' ' → logprob: -4.512925624847412
    9. ' of' → logprob: -4.637925624847412
    10. ' in' → logprob: -4.887925624847412

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7440762519836426
    2. ' done' → logprob: -0.9940762519836426
    3. ' performed' → logprob: -3.3690762519836426
    4. 'in' → logprob: -3.3690762519836426
    5. ' to' → logprob: -4.369076251983643
    6. 'done' → logprob: -4.369076251983643
    7. ' applied' → logprob: -5.119076251983643
    8. ' exactly' → logprob: -5.244076251983643
    9. 'performed' → logprob: -5.369076251983643
    10. ' a' → logprob: -5.494076251983643

Token 411: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5885610580444336
    2. 'the' → logprob: -0.8385610580444336
    3. ' area' → logprob: -4.713561058044434
    4. ' stone' → logprob: -6.588561058044434
    5. 'area' → logprob: -6.838561058044434
    6. 'stone' → logprob: -7.338561058044434
    7. 'self' → logprob: -8.338561058044434
    8. ' self' → logprob: -9.963561058044434
    9. ')' → logprob: -10.088561058044434
    10. ' stones' → logprob: -10.213561058044434

Token 412: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.16144676506519318
    2. 'area' → logprob: -1.9114468097686768
    3. ' current' → logprob: -8.036446571350098
    4. 'stone' → logprob: -8.286446571350098
    5. 'current' → logprob: -9.036446571350098
    6. ' code' → logprob: -9.286446571350098
    7. ' stone' → logprob: -9.536446571350098
    8. '_area' → logprob: -9.536446571350098
    9. ' space' → logprob: -9.786446571350098
    10. 'space' → logprob: -10.036446571350098

Token 413: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.008764624595642
    2. '       ' → logprob: -1.383764624595642
    3. ')' → logprob: -2.1337647438049316
    4. '   ' → logprob: -2.2587647438049316
    5. '\n' → logprob: -2.3837647438049316
    6. ',' → logprob: -3.7587647438049316
    7. '):' → logprob: -4.508764743804932
    8. '.' → logprob: -4.758764743804932
    9. '
' → logprob: -5.008764743804932
    10. '\' → logprob: -5.383764743804932

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01156550645828247
    2. '\n' → logprob: -5.636565685272217
    3. '   ' → logprob: -5.636565685272217
    4. '\' → logprob: -5.886565685272217
    5. ')' → logprob: -8.386565208435059
    6. '        
' → logprob: -8.511565208435059
    7. '<|end|>' → logprob: -8.761565208435059
    8. '{' → logprob: -9.261565208435059
    9. ',' → logprob: -9.261565208435059
    10. '#' → logprob: -9.511565208435059

Token 415: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006344192195683718
    2. '   ' → logprob: -5.756344318389893
    3. '\n' → logprob: -6.881344318389893
    4. '\' → logprob: -7.506344318389893
    5. 'w' → logprob: -8.256343841552734
    6. '#' (adapté à ' #') → logprob: -8.506343841552734
    7. ')' → logprob: -8.506343841552734
    8. ',' → logprob: -9.506343841552734
    9. 'n' → logprob: -9.506343841552734
    10. '{' → logprob: -9.756343841552734

Token 416: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0201078113168478
    2. ' if' → logprob: -5.395107746124268
    3. 'if' → logprob: -5.645107746124268
    4. '   ' → logprob: -5.770107746124268
    5. '\n' → logprob: -5.895107746124268
    6. 'moves' → logprob: -6.895107746124268
    7. '\' → logprob: -7.020107746124268
    8. 'w' → logprob: -7.145107746124268
    9. ' w' → logprob: -7.520107746124268
    10. 'return' → logprob: -8.020108222961426

Token 417: ' in' (ID: 306)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.2001197338104248
    2. ' if' → logprob: -1.3251197338104248
    3. '       ' → logprob: -1.4501197338104248
    4. 'w' → logprob: -2.325119733810425
    5. 'if' → logprob: -3.075119733810425
    6. 'return' → logprob: -3.825119733810425
    7. ' return' → logprob: -4.325119972229004
    8. ' for' → logprob: -4.950119972229004
    9. 'moves' → logprob: -5.950119972229004
    10. ' white' → logprob: -6.450119972229004

Token 418: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1768075227737427
    2. ' area' → logprob: -1.1768075227737427
    3. ' the' → logprob: -1.6768075227737427
    4. 'self' → logprob: -2.426807403564453
    5. 'area' → logprob: -2.926807403564453
    6. 'this' → logprob: -4.426807403564453
    7. 'w' → logprob: -4.551807403564453
    8. ' self' → logprob: -4.676807403564453
    9. ' this' → logprob: -4.926807403564453
    10. ' code' → logprob: -5.426807403564453

Token 419: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.18238383531570435
    2. 'area' → logprob: -1.8073837757110596
    3. '_area' → logprob: -7.557384014129639
    4. 'def' → logprob: -8.05738353729248
    5. ' current' → logprob: -8.05738353729248
    6. ' code' → logprob: -8.30738353729248
    7. 'stone' → logprob: -8.43238353729248
    8. '   ' → logprob: -8.55738353729248
    9. ' stone' → logprob: -8.68238353729248
    10. ' def' → logprob: -9.80738353729248

Token 420: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4537106156349182
    2. '       ' → logprob: -1.8287105560302734
    3. ':' → logprob: -1.8287105560302734
    4. '   ' → logprob: -4.078710556030273
    5. ')' → logprob: -4.828710556030273
    6. ' if' → logprob: -5.703710556030273
    7. '):' → logprob: -5.703710556030273
    8. '           ' → logprob: -5.828710556030273
    9. ':
' → logprob: -5.953710556030273
    10. ' and' → logprob: -6.203710556030273

Token 421: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25832241773605347
    2. ' if' → logprob: -2.0083224773406982
    3. ' return' → logprob: -3.5083224773406982
    4. 'return' → logprob: -3.8833224773406982
    5. 'w' → logprob: -4.383322238922119
    6. ' w' → logprob: -4.883322238922119
    7. '        ' → logprob: -5.258322238922119
    8. ')' → logprob: -5.258322238922119
    9. 'if' → logprob: -5.758322238922119
    10. '           ' → logprob: -6.383322238922119

Token 422: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.373942106962204
    2. 'white' → logprob: -2.3739421367645264
    3. ' ' → logprob: -3.2489421367645264
    4. '   ' → logprob: -3.3739421367645264
    5. ' if' → logprob: -3.4989421367645264
    6. 'w' → logprob: -3.6239421367645264
    7. ' w' → logprob: -3.9989421367645264
    8. 'if' → logprob: -4.248941898345947
    9. '    ' → logprob: -5.123941898345947
    10. '-' → logprob: -5.123941898345947

Token 423: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.05977316573262215
    2. '_' → logprob: -3.8097732067108154
    3. ' ' → logprob: -3.8097732067108154
    4. 'stone' → logprob: -4.809772968292236
    5. ' space' → logprob: -6.559772968292236
    6. ' _' → logprob: -6.934772968292236
    7. ')' → logprob: -6.934772968292236
    8. ' )' → logprob: -6.934772968292236
    9. ',' → logprob: -7.559772968292236
    10. ' ,' → logprob: -7.934772968292236

Token 424: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8278691172599792
    2. ' ' → logprob: -1.202869176864624
    3. ' is' → logprob: -2.327869176864624
    4. ',' → logprob: -2.952869176864624
    5. ' )' → logprob: -3.077869176864624
    6. ' stone' → logprob: -4.327868938446045
    7. '-' → logprob: -4.702868938446045
    8. ' ,' → logprob: -4.702868938446045
    9. ' -' → logprob: -4.827868938446045
    10. ' -=' → logprob: -5.452868938446045

Token 425: ' converted' (ID: 28358)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.47071370482444763
    2. ' replaced' → logprob: -1.34571373462677
    3. ' removed' → logprob: -2.5957136154174805
    4. 're' → logprob: -3.2207136154174805
    5. '_removed' → logprob: -8.47071361541748
    6. 'converted' → logprob: -8.84571361541748
    7. 'taken' → logprob: -9.97071361541748
    8. 'replace' → logprob: -10.59571361541748
    9. '```' → logprob: -10.84571361541748
    10. ' converted' → logprob: -10.84571361541748

Token 426: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8983065485954285
    2. ' into' → logprob: -0.8983065485954285
    3. '_' → logprob: -1.8983066082000732
    4. ')' → logprob: -4.273306369781494
    5. ' by' → logprob: -4.773306369781494
    6. ' ' → logprob: -5.273306369781494
    7. 'to' → logprob: -6.023306369781494
    8. ' )' → logprob: -6.898306369781494
    9. ' _' → logprob: -7.023306369781494
    10. '   ' → logprob: -7.148306369781494

Token 427: ' a' (ID: 261)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.08283895254135132
    2. ' a' → logprob: -2.832839012145996
    3. 'black' → logprob: -4.207839012145996
    4. 'a' → logprob: -5.332839012145996
    5. ' ' → logprob: -7.957839012145996
    6. ' white' → logprob: -8.082839012145996
    7. ' one' → logprob: -8.957839012145996
    8. '"' → logprob: -9.957839012145996
    9. 'white' → logprob: -10.707839012145996
    10. 'b' → logprob: -11.457839012145996

Token 428: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.09667344391345978
    2. 'black' → logprob: -2.4716734886169434
    3. ' white' → logprob: -5.221673488616943
    4. 'white' → logprob: -6.721673488616943
    5. 'space' → logprob: -7.971673488616943
    6. ' ' → logprob: -8.221673011779785
    7. ' space' → logprob: -8.471673011779785
    8. 'b' → logprob: -8.971673011779785
    9. '"' → logprob: -10.721673011779785
    10. '_black' → logprob: -10.721673011779785

Token 429: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.19844737648963928
    2. '_' → logprob: -2.3234474658966064
    3. ')' → logprob: -3.1984474658966064
    4. 'stone' → logprob: -3.6984474658966064
    5. ' ' → logprob: -4.573447227478027
    6. ' _' → logprob: -5.698447227478027
    7. ' )' → logprob: -6.573447227478027
    8. '_token' → logprob: -7.323447227478027
    9. ' token' → logprob: -9.198447227478027
    10. '_st' → logprob: -9.448447227478027

Token 430: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19839389622211456
    2. '   ' → logprob: -2.8233938217163086
    3. '       ' → logprob: -2.9483938217163086
    4. ')' → logprob: -3.5733938217163086
    5. '):' → logprob: -4.198393821716309
    6. ',' → logprob: -5.198393821716309
    7. '.' → logprob: -5.198393821716309
    8. ':
' → logprob: -5.323393821716309
    9. '\n' → logprob: -6.073393821716309
    10. '
' → logprob: -6.198393821716309

Token 431: ' number' (ID: 2086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10954923927783966
    2. '\n' → logprob: -2.9845492839813232
    3. ' or' → logprob: -5.234549045562744
    4. '.' → logprob: -5.359549045562744
    5. ' 
' → logprob: -5.484549045562744
    6. '        
' → logprob: -5.609549045562744
    7. ' if' → logprob: -5.734549045562744
    8. '\' → logprob: -5.734549045562744
    9. ' so' → logprob: -5.734549045562744
    10. '   ' → logprob: -5.859549045562744

Token 432: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15678949654102325
    2. ')' → logprob: -2.781789541244507
    3. ' of' → logprob: -3.781789541244507
    4. '=' → logprob: -4.031789302825928
    5. 's' → logprob: -4.406789302825928
    6. ' _' → logprob: -4.531789302825928
    7. ' ' → logprob: -4.656789302825928
    8. 'of' → logprob: -6.156789302825928
    9. ',' → logprob: -6.406789302825928
    10. ' =' → logprob: -7.031789302825928

Token 433: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.3912716507911682
    2. '_' → logprob: -1.8912715911865234
    3. ' ' → logprob: -2.5162715911865234
    4. ' stones' → logprob: -3.1412715911865234
    5. '_white' → logprob: -3.6412715911865234
    6. 'white' → logprob: -4.516271591186523
    7. ' _' → logprob: -5.391271591186523
    8. ')' → logprob: -5.766271591186523
    9. 'stones' → logprob: -7.016271591186523
    10. ' whitespace' → logprob: -7.391271591186523

Token 434: ' stones' (ID: 38940)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8481829166412354
    2. ' stones' → logprob: -1.4731829166412354
    3. ' _' → logprob: -1.9731829166412354
    4. ' ' → logprob: -2.8481829166412354
    5. 'stones' → logprob: -2.8481829166412354
    6. ')' → logprob: -3.8481829166412354
    7. ' -' → logprob: -3.9731829166412354
    8. ' )' → logprob: -4.723182678222656
    9. 'stone' → logprob: -4.973182678222656
    10. ' >' → logprob: -5.098182678222656

Token 435: ' decreases' (ID: 70943)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5044897198677063
    2. ' -' → logprob: -1.8794896602630615
    3. '-' → logprob: -2.5044896602630615
    4. ' >' → logprob: -3.3794896602630615
    5. ' decreases' → logprob: -3.7544896602630615
    6. '>' → logprob: -4.004489898681641
    7. ' in' → logprob: -4.254489898681641
    8. ' decreased' → logprob: -4.379489898681641
    9. ' ' → logprob: -4.754489898681641
    10. '<|end|>' → logprob: -4.754489898681641

Token 436: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.01089654304087162
    2. 'by' → logprob: -5.260896682739258
    3. '       ' → logprob: -5.510896682739258
    4. ',' → logprob: -7.510896682739258
    5. ' and' → logprob: -7.635896682739258
    6. '   ' → logprob: -8.510896682739258
    7. ')' → logprob: -9.385896682739258
    8. ' if' → logprob: -10.135896682739258
    9. ' ' → logprob: -10.260896682739258
    10. 'and' → logprob: -10.260896682739258

Token 437: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889077812433243
    2. ' ' → logprob: -2.578890800476074
    3. ' one' → logprob: -13.828890800476074
    4. 'one' → logprob: -17.328889846801758
    5. '```' → logprob: -17.328889846801758
    6. ' ' → logprob: -17.453889846801758
    7. '`' → logprob: -18.203889846801758
    8. '   ' → logprob: -18.703889846801758
    9. '１' → logprob: -19.453889846801758
    10. '-' → logprob: -19.578889846801758

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -17.125804901123047
    4. ' one' → logprob: -17.250804901123047
    5. 'one' → logprob: -17.375804901123047
    6. '   ' → logprob: -17.750804901123047
    7. '`' → logprob: -17.750804901123047
    8. ' ' → logprob: -18.625804901123047
    9. '
' → logprob: -18.750804901123047
    10. '-' → logprob: -19.000804901123047

Token 439: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1134299784898758
    2. ',' → logprob: -2.7384300231933594
    3. ')' → logprob: -3.8634300231933594
    4. '   ' → logprob: -5.113430023193359
    5. '<|end|>' → logprob: -5.113430023193359
    6. ' and' → logprob: -5.738430023193359
    7. ' if' → logprob: -6.988430023193359
    8. '.' → logprob: -7.113430023193359
    9. '           ' → logprob: -7.363430023193359
    10. '    ' → logprob: -7.488430023193359

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0628264769911766
    2. ')' → logprob: -4.062826633453369
    3. '        ' → logprob: -4.187826633453369
    4. '           ' → logprob: -4.562826633453369
    5. ' and' → logprob: -5.562826633453369
    6. ' ' → logprob: -5.937826633453369
    7. ',' → logprob: -6.187826633453369
    8. '    ' → logprob: -6.437826633453369
    9. '               ' → logprob: -6.437826633453369
    10. '   ' → logprob: -7.062826633453369

Token 441: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04270465299487114
    2. ' and' → logprob: -3.5427045822143555
    3. '        ' → logprob: -5.2927045822143555
    4. '    ' → logprob: -6.2927045822143555
    5. ' ' → logprob: -6.9177045822143555
    6. '   ' → logprob: -7.2927045822143555
    7. '      ' → logprob: -7.4177045822143555
    8. ' while' → logprob: -7.6677045822143555
    9. '<|end|>' → logprob: -7.9177045822143555
    10. ' ' → logprob: -8.167704582214355

Token 442: ' black' (ID: 5960)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: ' stones' (ID: 38940)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.622208297252655
    2. ' stones' → logprob: -1.4972083568572998
    3. ' +=' → logprob: -2.4972083568573
    4. 'stones' → logprob: -2.6222083568573
    5. ' -' → logprob: -2.9972083568573
    6. '-' → logprob: -4.497208118438721
    7. ')' → logprob: -5.247208118438721
    8. '_' → logprob: -5.497208118438721
    9. ' ' → logprob: -6.247208118438721
    10. '-=' → logprob: -6.372208118438721

Token 444: ' increases' (ID: 21073)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7382150292396545
    2. '+=' → logprob: -0.9882150292396545
    3. '+' → logprob: -3.1132149696350098
    4. 'de' → logprob: -3.3632149696350098
    5. ' decreases' → logprob: -3.3632149696350098
    6. ' increases' → logprob: -4.11321496963501
    7. ' +' → logprob: -5.36321496963501
    8. '<|end|>' → logprob: -5.48821496963501
    9. 'increase' → logprob: -6.11321496963501
    10. 'in' → logprob: -6.73821496963501

Token 445: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.38899144530296326
    2. 'by' → logprob: -1.1389914751052856
    3. '       ' → logprob: -7.263991355895996
    4. '+' → logprob: -7.638991355895996
    5. ')' → logprob: -8.013991355895996
    6. '1' → logprob: -8.138991355895996
    7. '   ' → logprob: -8.513991355895996
    8. '           ' → logprob: -10.638991355895996
    9. ' +' → logprob: -11.138991355895996
    10. ' ' → logprob: -11.763991355895996

Token 446: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026301106438040733
    2. ' ' → logprob: -3.651301145553589
    3. ' one' → logprob: -14.776301383972168
    4. ' ' → logprob: -15.776301383972168
    5. '```' → logprob: -16.27630043029785
    6. 'one' → logprob: -16.52630043029785
    7. '   ' → logprob: -17.21380043029785
    8. 'space' → logprob: -17.46380043029785
    9. '  ' → logprob: -17.90130043029785
    10. '`' → logprob: -17.90130043029785

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '2' → logprob: -18.125045776367188
    4. '```' → logprob: -18.125045776367188
    5. '   ' → logprob: -18.250045776367188
    6. '
' → logprob: -18.750045776367188
    7. '+' → logprob: -19.000045776367188
    8. ' ' → logprob: -19.312545776367188
    9. '`' → logprob: -19.625045776367188
    10. '' → logprob: -19.687545776367188

Token 448: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029913280159235
    2. '
' → logprob: -4.154913425445557
    3. '\n' → logprob: -5.404913425445557
    4. '   ' → logprob: -5.654913425445557
    5. '        
' → logprob: -5.904913425445557
    6. '\' → logprob: -7.779913425445557
    7. '    
' → logprob: -7.779913425445557
    8. ',' → logprob: -8.529912948608398
    9. ' if' → logprob: -8.529912948608398
    10. 'if' → logprob: -8.654912948608398

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003730368334800005
    2. '	' → logprob: -6.003730297088623
    3. '   ' → logprob: -7.503730297088623
    4. '\' → logprob: -8.753730773925781
    5. '    ' → logprob: -9.378730773925781
    6. '        
' → logprob: -9.878730773925781
    7. ')' → logprob: -10.003730773925781
    8. '        ' → logprob: -10.128730773925781
    9. ',' → logprob: -10.128730773925781
    10. '#' → logprob: -10.753730773925781

Token 450: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014519675634801388
    2. '   ' → logprob: -5.139519691467285
    3. '\n' → logprob: -5.514519691467285
    4. '\' → logprob: -7.264519691467285
    5. '        
' → logprob: -7.264519691467285
    6. ' if' → logprob: -7.889519691467285
    7. ')' → logprob: -8.014519691467285
    8. '<|end|>' → logprob: -8.014519691467285
    9. '    ' → logprob: -8.389519691467285
    10. '#' → logprob: -8.514519691467285

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000763883872423321
    2. '   ' → logprob: -8.750763893127441
    3. ' if' → logprob: -8.750763893127441
    4. 'if' → logprob: -9.000763893127441
    5. 'moves' → logprob: -9.000763893127441
    6. 'states' → logprob: -10.875763893127441
    7. 'tokens' → logprob: -11.000763893127441
    8. '        
' → logprob: -11.250763893127441
    9. ' w' → logprob: -11.250763893127441
    10. 'from' → logprob: -11.250763893127441

Token 452: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2615607976913452
    2. 'if' → logprob: -1.6365607976913452
    3. ' if' → logprob: -3.5115609169006348
    4. 'memo' → logprob: -5.886560916900635
    5. '   ' → logprob: -7.011560916900635
    6. 'result' → logprob: -7.636560916900635
    7. 'def' → logprob: -8.511560440063477
    8. 'import' → logprob: -8.636560440063477
    9. '        
' → logprob: -8.886560440063477
    10. 'results' → logprob: -9.136560440063477

Token 453: ' Summary' (ID: 31653)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5062075257301331
    2. '       ' → logprob: -1.2562074661254883
    3. 'moves' → logprob: -2.8812074661254883
    4. ' if' → logprob: -3.6312074661254883
    5. 'results' → logprob: -4.881207466125488
    6. 'memo' → logprob: -5.006207466125488
    7. 'result' → logprob: -5.256207466125488
    8. 'states' → logprob: -5.881207466125488
    9. '   ' → logprob: -5.881207466125488
    10. 'next' → logprob: -7.006207466125488

Token 454: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009917576797306538
    2. 'moves' → logprob: -4.884917736053467
    3. ' moves' → logprob: -7.259917736053467
    4. ':' → logprob: -8.134917259216309
    5. 'results' → logprob: -8.759917259216309
    6. ' if' → logprob: -9.134917259216309
    7. ',' → logprob: -9.134917259216309
    8. 'result' → logprob: -9.259917259216309
    9. 'states' → logprob: -9.384917259216309
    10. '   ' → logprob: -9.384917259216309

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002724217774812132
    2. 'moves' → logprob: -8.750272750854492
    3. 'if' → logprob: -10.500272750854492
    4. ' if' → logprob: -10.500272750854492
    5. '   ' → logprob: -11.000272750854492
    6. ' moves' → logprob: -11.625272750854492
    7. 'result' → logprob: -12.625272750854492
    8. 'states' → logprob: -12.750272750854492
    9. '        
' → logprob: -13.125272750854492
    10. 'tokens' → logprob: -13.250272750854492

Token 456: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019144849851727486
    2. 'moves' → logprob: -4.1441450119018555
    3. '   ' → logprob: -7.6441450119018555
    4. 'w' → logprob: -7.6441450119018555
    5. ' moves' → logprob: -7.7691450119018555
    6. 'if' → logprob: -7.7691450119018555
    7. ' if' → logprob: -8.019145011901855
    8. 'mex' → logprob: -8.769145011901855
    9. 'results' → logprob: -9.519145011901855
    10. '        
' → logprob: -9.644145011901855

Token 457: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25393903255462646
    2. 'moves' → logprob: -2.003939151763916
    3. '   ' → logprob: -3.378939151763916
    4. 'w' → logprob: -3.878939151763916
    5. 'mex' → logprob: -4.503939151763916
    6. 'if' → logprob: -4.628939151763916
    7. ' if' → logprob: -5.628939151763916
    8. ' moves' → logprob: -6.003939151763916
    9. 'reachable' → logprob: -6.378939151763916
    10. ' w' → logprob: -6.878939151763916

Token 458: 'a' (ID: 64)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5366387963294983
    2. '       ' → logprob: -1.4116387367248535
    3. '   ' → logprob: -2.4116387367248535
    4. ' w' → logprob: -3.2866387367248535
    5. ')' → logprob: -3.6616387367248535
    6. ' ' → logprob: -5.5366387367248535
    7. 'moves' → logprob: -5.6616387367248535
    8. ' )' → logprob: -5.9116387367248535
    9. 'white' → logprob: -6.4116387367248535
    10. '    ' → logprob: -6.9116387367248535

Token 459: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7129544019699097
    2. '       ' → logprob: -1.0879544019699097
    3. '   ' → logprob: -2.337954521179199
    4. '):' → logprob: -3.462954521179199
    5. ' if' → logprob: -4.212954521179199
    6. ' )' → logprob: -4.462954521179199
    7. 'if' → logprob: -4.962954521179199
    8. ' -' → logprob: -5.587954521179199
    9. ',' → logprob: -6.337954521179199
    10. '    ' → logprob: -6.962954521179199

Token 460: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6240976452827454
    2. 'moves' → logprob: -1.4990975856781006
    3. 'if' → logprob: -2.2490975856781006
    4. '   ' → logprob: -3.1240975856781006
    5. 'mex' → logprob: -3.6240975856781006
    6. 'results' → logprob: -3.8740975856781006
    7. ' if' → logprob: -4.24909782409668
    8. 'result' → logprob: -4.87409782409668
    9. ' moves' → logprob: -5.74909782409668
    10. 'next' → logprob: -5.87409782409668

Token 461: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03210863098502159
    2. 'w' → logprob: -3.9071085453033447
    3. ' self' → logprob: -5.032108783721924
    4. '       ' → logprob: -6.407108783721924
    5. '   ' → logprob: -6.782108783721924
    6. ')' → logprob: -7.282108783721924
    7. '           ' → logprob: -8.032108306884766
    8. 'white' → logprob: -8.282108306884766
    9. 'if' → logprob: -8.407108306884766
    10. ' w' → logprob: -9.032108306884766

Token 462: ',b' (ID: 17568)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3514389395713806
    2. '-' → logprob: -1.2264389991760254
    3. ',' → logprob: -6.226438999176025
    4. '   ' → logprob: -7.851438999176025
    5. ' ' → logprob: -8.601438522338867
    6. ' >' → logprob: -8.601438522338867
    7. ' ,' → logprob: -9.476438522338867
    8. '>' → logprob: -9.851438522338867
    9. ')' → logprob: -10.101438522338867
    10. '       ' → logprob: -10.601438522338867

Token 463: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2089853584766388
    2. ' -' → logprob: -1.7089853286743164
    3. ')' → logprob: -4.958985328674316
    4. '   ' → logprob: -8.958985328674316
    5. '       ' → logprob: -8.958985328674316
    6. '):' → logprob: -9.208985328674316
    7. ',' → logprob: -10.208985328674316
    8. '):
' → logprob: -10.833985328674316
    9. '
' → logprob: -10.958985328674316
    10. ' )' → logprob: -11.458985328674316

Token 464: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5155633687973022
    2. '       ' → logprob: -2.015563488006592
    3. '-' → logprob: -2.140563488006592
    4. '   ' → logprob: -2.640563488006592
    5. ',' → logprob: -3.515563488006592
    6. ':
' → logprob: -4.640563488006592
    7. ' if' → logprob: -5.140563488006592
    8. '
' → logprob: -5.265563488006592
    9. '[' → logprob: -5.390563488006592
    10. ')' → logprob: -5.390563488006592

Token 465: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16022992134094238
    2. '(w' → logprob: -1.9102299213409424
    3. '(self' → logprob: -12.535229682922363
    4. '   ' → logprob: -14.035229682922363
    5. ' ' → logprob: -14.285229682922363
    6. '       ' → logprob: -14.785229682922363
    7. '(' → logprob: -16.28523063659668
    8. ' self' → logprob: -16.53523063659668
    9. 'self' → logprob: -16.78523063659668
    10. '    ' → logprob: -17.03523063659668

Token 466: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0032273868564516306
    2. ' w' → logprob: -6.253227233886719
    3. '(w' → logprob: -6.753227233886719
    4. 'self' → logprob: -9.628227233886719
    5. ' (' → logprob: -9.878227233886719
    6. '   ' → logprob: -11.753227233886719
    7. ' self' → logprob: -13.253227233886719
    8. '       ' → logprob: -13.753227233886719
    9. '	w' → logprob: -14.253227233886719
    10. '(self' → logprob: -14.378227233886719

Token 467: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.043006282299757004
    2. ' -' → logprob: -3.168006181716919
    3. ' ' → logprob: -13.41800594329834
    4. ',' → logprob: -13.54300594329834
    5. '   ' → logprob: -13.54300594329834
    6. '-
' → logprob: -14.29300594329834
    7. ')' → logprob: -14.79300594329834
    8. '
' → logprob: -15.29300594329834
    9. '  ' → logprob: -15.54300594329834
    10. '```' → logprob: -15.66800594329834

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. '```' → logprob: -16.250431060791016
    5. '    ' → logprob: -18.125431060791016
    6. '2' → logprob: -18.125431060791016
    7. '
' → logprob: -18.312931060791016
    8. '' → logprob: -18.500431060791016
    9. '`' → logprob: -18.562931060791016
    10. '  ' → logprob: -18.750431060791016

Token 469: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020735491125378758
    2. ',b' → logprob: -8.62520694732666
    3. ' ,' → logprob: -11.00020694732666
    4. ',
' → logprob: -12.62520694732666
    5. ',self' → logprob: -12.62520694732666
    6. '       ' → logprob: -13.37520694732666
    7. ',w' → logprob: -14.62520694732666
    8. '   ' → logprob: -14.62520694732666
    9. ')' → logprob: -15.37520694732666
    10. '           ' → logprob: -15.62520694732666

Token 470: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004281396511942148
    2. ')
' → logprob: -5.504281520843506
    3. '),' → logprob: -9.754281044006348
    4. ',' → logprob: -10.254281044006348
    5. ')
' → logprob: -10.629281044006348
    6. 'if' → logprob: -10.754281044006348
    7. '       ' → logprob: -11.004281044006348
    8. ' if' → logprob: -11.254281044006348
    9. ' )' → logprob: -11.254281044006348
    10. '   ' → logprob: -11.504281044006348

Token 471: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10661216080188751
    2. ' if' → logprob: -2.856612205505371
    3. '
' → logprob: -3.606612205505371
    4. ',' → logprob: -5.481612205505371
    5. 'if' → logprob: -5.481612205505371
    6. ')' → logprob: -6.606612205505371
    7. ':' → logprob: -6.731612205505371
    8. '        
' → logprob: -6.981612205505371
    9. '\n' → logprob: -6.981612205505371
    10. '<|end|>' → logprob: -7.481612205505371

Token 472: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5666300654411316
    2. ' if' → logprob: -0.9416300654411316
    3. 'if' → logprob: -4.441629886627197
    4. ')' → logprob: -4.941629886627197
    5. '
' → logprob: -4.941629886627197
    6. ',' → logprob: -5.316629886627197
    7. ':' → logprob: -5.441629886627197
    8. '   ' → logprob: -6.691629886627197
    9. ':
' → logprob: -7.066629886627197
    10. '        
' → logprob: -7.316629886627197

Token 473: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.09494205564260483
    2. 'w' → logprob: -2.594942092895508
    3. ' self' → logprob: -4.344942092895508
    4. 'self' → logprob: -5.844942092895508
    5. ' white' → logprob: -10.844942092895508
    6. '   ' → logprob: -11.219942092895508
    7. ' ' → logprob: -11.469942092895508
    8. '	w' → logprob: -12.219942092895508
    9. ' ' → logprob: -12.594942092895508
    10. '    ' → logprob: -13.844942092895508

Token 474: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34845227003097534
    2. '>' → logprob: -1.2234523296356201
    3. ' ' → logprob: -12.8484525680542
    4. ' >
' → logprob: -13.8484525680542
    5. ')>' → logprob: -14.0984525680542
    6. ' ' → logprob: -14.3484525680542
    7. ')' → logprob: -14.3484525680542
    8. '1' → logprob: -14.4734525680542
    9. '   ' → logprob: -14.4734525680542
    10. '[' → logprob: -15.5984525680542

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. '>' → logprob: -13.375017166137695
    4. '0' → logprob: -14.750017166137695
    5. '   ' → logprob: -16.125017166137695
    6. '=' → logprob: -17.250017166137695
    7. '```' → logprob: -17.375017166137695
    8. '[' → logprob: -18.250017166137695
    9. '۱' → logprob: -18.562517166137695
    10. '' → logprob: -18.750017166137695

Token 476: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002441646996885538
    2. ' if' → logprob: -7.502441883087158
    3. '   ' → logprob: -7.627441883087158
    4. 'if' → logprob: -7.752441883087158
    5. 'moves' → logprob: -8.25244140625
    6. '        
' → logprob: -9.25244140625
    7. ',' → logprob: -10.00244140625
    8. '\n' → logprob: -10.00244140625
    9. 'result' → logprob: -10.00244140625
    10. 's' → logprob: -10.00244140625

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022204378619790077
    2. '   ' → logprob: -7.502220630645752
    3. 'if' → logprob: -8.127220153808594
    4. ' if' → logprob: -8.502220153808594
    5. '        
' → logprob: -8.502220153808594
    6. ')' → logprob: -8.752220153808594
    7. 'tokens' → logprob: -9.502220153808594
    8. ',' → logprob: -9.627220153808594
    9. '\n' → logprob: -9.752220153808594
    10. 'w' → logprob: -9.877220153808594

Token 478: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026852399110794067
    2. ' if' → logprob: -4.901852607727051
    3. 'if' → logprob: -4.901852607727051
    4. '   ' → logprob: -5.151852607727051
    5. 'moves' → logprob: -6.526852607727051
    6. 'm' → logprob: -7.401852607727051
    7. 'results' → logprob: -7.901852607727051
    8. 's' → logprob: -8.02685260772705
    9. 'w' → logprob: -8.02685260772705
    10. ')' → logprob: -8.02685260772705

Token 479: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005408813012763858
    2. 'moves' → logprob: -9.000540733337402
    3. '   ' → logprob: -9.500540733337402
    4. ' if' → logprob: -10.125540733337402
    5. 'm' → logprob: -10.250540733337402
    6. ' (' → logprob: -10.375540733337402
    7. ' moves' → logprob: -10.375540733337402
    8. '        
' → logprob: -10.500540733337402
    9. '
' → logprob: -10.875540733337402
    10. ' w' → logprob: -11.125540733337402

Token 480: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.032705046236515045
    2. ' b' → logprob: -3.657705068588257
    3. '   ' → logprob: -6.032704830169678
    4. '       ' → logprob: -6.032704830169678
    5. ' if' → logprob: -8.282705307006836
    6. ' (' → logprob: -8.407705307006836
    7. 'w' → logprob: -8.532705307006836
    8. '    ' → logprob: -8.657705307006836
    9. 'if' → logprob: -8.657705307006836
    10. '(b' → logprob: -9.032705307006836

Token 481: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011252141557633877
    2. '   ' → logprob: -6.876125335693359
    3. ')
' → logprob: -10.00112533569336
    4. 'if' → logprob: -10.50112533569336
    5. ' )' → logprob: -11.87612533569336
    6. ' if' → logprob: -12.37612533569336
    7. 'def' → logprob: -13.25112533569336
    8. '       ' → logprob: -13.50112533569336
    9. '):' → logprob: -14.00112533569336
    10. ':' → logprob: -14.12612533569336

Token 482: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40210938453674316
    2. ' for' → logprob: -1.5271093845367432
    3. ' black' → logprob: -3.902109384536743
    4. ' b' → logprob: -4.027109146118164
    5. ' if' → logprob: -4.527109146118164
    6. 'for' → logprob: -4.527109146118164
    7. ' (' → logprob: -4.652109146118164
    8. ' results' → logprob: -4.777109146118164
    9. '   ' → logprob: -5.652109146118164
    10. 'results' → logprob: -5.777109146118164

Token 483: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.19873617589473724
    2. 'b' → logprob: -2.0737361907958984
    3. ',' → logprob: -3.9487361907958984
    4. ')' → logprob: -4.698736190795898
    5. ' w' → logprob: -4.698736190795898
    6. ' b' → logprob: -4.948736190795898
    7. ' ,' → logprob: -5.948736190795898
    8. ' ' → logprob: -6.573736190795898
    9. 'white' → logprob: -6.698736190795898
    10. ' )' → logprob: -7.073736190795898

Token 484: ',b' (ID: 17568)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9751373529434204
    2. ',' → logprob: -1.2251373529434204
    3. ',b' → logprob: -1.6001373529434204
    4. ' >' → logprob: -2.100137233734131
    5. ')' → logprob: -6.600137233734131
    6. '   ' → logprob: -6.975137233734131
    7. '>b' → logprob: -7.100137233734131
    8. ')>' → logprob: -7.350137233734131
    9. ' ,' → logprob: -8.100137710571289
    10. '-' → logprob: -8.725137710571289

Token 485: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024132427643053234
    2. '-' → logprob: -9.50024127960205
    3. '   ' → logprob: -10.00024127960205
    4. ')->' → logprob: -10.12524127960205
    5. ' )' → logprob: -10.75024127960205
    6. ')
' → logprob: -11.00024127960205
    7. ',' → logprob: -12.00024127960205
    8. ' -' → logprob: -12.25024127960205
    9. ')-' → logprob: -12.25024127960205
    10. '>' → logprob: -12.87524127960205

Token 486: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.05265677720308304
    2. '   ' → logprob: -4.177656650543213
    3. '       ' → logprob: -4.552656650543213
    4. ' =' → logprob: -5.177656650543213
    5. ' for' → logprob: -5.302656650543213
    6. ':' → logprob: -5.677656650543213
    7. ' ' → logprob: -5.802656650543213
    8. ')' → logprob: -6.302656650543213
    9. '->' → logprob: -6.427656650543213
    10. ' =>' → logprob: -6.802656650543213

Token 487: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07900358736515045
    2. '(w' → logprob: -2.5790035724639893
    3. ' [(' → logprob: -10.07900333404541
    4. ' ' → logprob: -10.57900333404541
    5. '[(' → logprob: -11.07900333404541
    6. ' {(' → logprob: -11.95400333404541
    7. '{' → logprob: -12.45400333404541
    8. '[w' → logprob: -12.45400333404541
    9. '   ' → logprob: -12.57900333404541
    10. '       ' → logprob: -13.45400333404541

Token 488: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.015380030497908592
    2. '(w' → logprob: -4.515379905700684
    3. ' w' → logprob: -5.515379905700684
    4. ' (' → logprob: -8.265379905700684
    5. '[w' → logprob: -10.890379905700684
    6. '   ' → logprob: -11.765379905700684
    7. '	w' → logprob: -12.515379905700684
    8. '<w' → logprob: -13.265379905700684
    9. ''w' → logprob: -13.890379905700684
    10. ' ' → logprob: -13.890379905700684

Token 489: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.475947767496109
    2. ',' → logprob: -0.9759477376937866
    3. ',self' → logprob: -7.725947856903076
    4. '-' → logprob: -7.975947856903076
    5. ',min' → logprob: -8.225947380065918
    6. ' ,' → logprob: -9.100947380065918
    7. ',x' → logprob: -9.600947380065918
    8. '   ' → logprob: -9.600947380065918
    9. ',int' → logprob: -9.975947380065918
    10. ',[' → logprob: -10.225947380065918

Token 490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6339274644851685
    2. ' -' → logprob: -1.0089274644851685
    3. '-x' → logprob: -2.258927345275879
    4. '-k' → logprob: -9.508927345275879
    5. ')' → logprob: -9.633927345275879
    6. ' ' → logprob: -10.383927345275879
    7. '-i' → logprob: -10.508927345275879
    8. '-self' → logprob: -10.508927345275879
    9. '-)' → logprob: -10.633927345275879
    10. '-t' → logprob: -11.008927345275879

Token 491: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04451880604028702
    2. ' x' → logprob: -3.2945187091827393
    3. '1' → logprob: -5.919518947601318
    4. 'min' → logprob: -5.919518947601318
    5. ' min' → logprob: -7.169518947601318
    6. 'k' → logprob: -8.79451847076416
    7. ' ' → logprob: -9.91951847076416
    8. '   ' → logprob: -10.16951847076416
    9. 'i' → logprob: -10.79451847076416
    10. ' k' → logprob: -11.66951847076416

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012622561771422625
    2. ' if' → logprob: -7.251262187957764
    3. ' )' → logprob: -8.001262664794922
    4. 'if' → logprob: -9.501262664794922
    5. '   ' → logprob: -9.626262664794922
    6. '       ' → logprob: -10.501262664794922
    7. ')
' → logprob: -11.376262664794922
    8. '           ' → logprob: -12.376262664794922
    9. 'x' → logprob: -12.376262664794922
    10. ' ' → logprob: -12.626262664794922

Token 493: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014068307355046272
    2. '       ' → logprob: -4.514068126678467
    3. ' for' → logprob: -6.389068126678467
    4. 'if' → logprob: -7.514068126678467
    5. '        ' → logprob: -8.639068603515625
    6. '   ' → logprob: -9.264068603515625
    7. '	if' → logprob: -9.514068603515625
    8. ' ' → logprob: -9.764068603515625
    9. ')' → logprob: -9.889068603515625
    10. ' where' → logprob: -10.014068603515625

Token 494: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31329622864723206
    2. 'x' → logprob: -1.3132961988449097
    3. ' ' → logprob: -11.1882963180542
    4. ' _' → logprob: -11.6882963180542
    5. '_' → logprob: -12.6882963180542
    6. '_x' → logprob: -12.6882963180542
    7. ' range' → logprob: -13.3132963180542
    8. '1' → logprob: -13.6882963180542
    9. ' ' → logprob: -13.8132963180542
    10. ' all' → logprob: -14.4382963180542

Token 495: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016041407361626625
    2. ' x' → logprob: -4.141041278839111
    3. 'range' → logprob: -13.26604175567627
    4. ' range' → logprob: -13.39104175567627
    5. ' ' → logprob: -13.51604175567627
    6. '1' → logprob: -13.89104175567627
    7. '	x' → logprob: -14.64104175567627
    8. '   ' → logprob: -15.64104175567627
    9. ' in' → logprob: -15.64104175567627
    10. '_x' → logprob: -16.016040802001953

Token 496: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.47479695081710815
    2. ' <=' → logprob: -0.9747969508171082
    3. '..' → logprob: -7.724796772003174
    4. ' if' → logprob: -9.224797248840332
    5. 'if' → logprob: -9.724797248840332
    6. '<x' → logprob: -10.349797248840332
    7. ' ' → logprob: -10.974797248840332
    8. ',' → logprob: -11.224797248840332
    9. 'x' → logprob: -11.474797248840332
    10. ' in' → logprob: -11.849797248840332

Token 497: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5233299732208252
    2. 'x' → logprob: -0.8983299732208252
    3. ' ' → logprob: -9.273329734802246
    4. '1' → logprob: -9.273329734802246
    5. ' white' → logprob: -12.273329734802246
    6. '   ' → logprob: -12.648329734802246
    7. ' black' → logprob: -13.148329734802246
    8. '    ' → logprob: -13.523329734802246
    9. 'b' → logprob: -13.773329734802246
    10. 'white' → logprob: -13.773329734802246

Token 498: ' <=' (ID: 5017)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6156657338142395
    2. ' <=' → logprob: -1.3656656742095947
    3. ' if' → logprob: -1.8656656742095947
    4. '<=' → logprob: -3.6156656742095947
    5. 'in' → logprob: -4.615665912628174
    6. ' x' → logprob: -4.990665912628174
    7. 'if' → logprob: -5.615665912628174
    8. ' ' → logprob: -7.365665912628174
    9. ',' → logprob: -7.990665912628174
    10. '=' → logprob: -8.615665435791016

Token 499: ' min' (ID: 1349)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23450292646884918
    2. 'min' → logprob: -1.984502911567688
    3. ' min' → logprob: -3.3595030307769775
    4. ' self' → logprob: -3.4845030307769775
    5. 'w' → logprob: -5.234502792358398
    6. ' w' → logprob: -7.859502792358398
    7. 'white' → logprob: -8.609502792358398
    8. 'max' → logprob: -9.484502792358398
    9. 'b' → logprob: -9.734502792358398
    10. ' ' → logprob: -10.609502792358398

Token 500: '(b' (ID: 3229)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06468033045530319
    2. '(w' → logprob: -2.814680337905884
    3. '(' → logprob: -5.939680099487305
    4. ' (' → logprob: -10.189680099487305
    5. 'self' → logprob: -10.314680099487305
    6. '((' → logprob: -12.814680099487305
    7. '(b' → logprob: -13.939680099487305
    8. '(
' → logprob: -14.314680099487305
    9. '(min' → logprob: -14.564680099487305
    10. ' self' → logprob: -15.689680099487305

Token 501: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22839820384979248
    2. ',w' → logprob: -1.6033982038497925
    3. ' ,' → logprob: -5.853398323059082
    4. 'w' → logprob: -10.103398323059082
    5. ',self' → logprob: -11.103398323059082
    6. ',b' → logprob: -11.103398323059082
    7. ')' → logprob: -11.603398323059082
    8. ',x' → logprob: -12.103398323059082
    9. ' and' → logprob: -12.478398323059082
    10. ' ' → logprob: -12.728398323059082

Token 502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004904027562588453
    2. ',' → logprob: -5.879903793334961
    3. '),' → logprob: -7.879903793334961
    4. '):' → logprob: -7.879903793334961
    5. ')
' → logprob: -8.129903793334961
    6. ' )' → logprob: -8.129903793334961
    7. '       ' → logprob: -8.254903793334961
    8. '   ' → logprob: -8.504903793334961
    9. '):
' → logprob: -9.004903793334961
    10. ' and' → logprob: -9.379903793334961

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035580198746174574
    2. '   ' → logprob: -7.128558158874512
    3. ')' → logprob: -7.378558158874512
    4. '<|end|>' → logprob: -7.378558158874512
    5. '        
' → logprob: -7.878558158874512
    6. ',' → logprob: -8.503558158874512
    7. '\n' → logprob: -8.628558158874512
    8. '{' → logprob: -9.128558158874512
    9. '
' → logprob: -9.128558158874512
    10. '           ' → logprob: -9.253558158874512

Token 504: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029337219893932343
    2. '<|end|>' → logprob: -7.252933502197266
    3. '
' → logprob: -7.752933502197266
    4. ')' → logprob: -7.877933502197266
    5. ',' → logprob: -8.002933502197266
    6. '        
' → logprob: -8.252933502197266
    7. '   ' → logprob: -8.377933502197266
    8. '#' (adapté à ' #') → logprob: -9.127933502197266
    9. '\n' → logprob: -9.502933502197266
    10. 'def' → logprob: -10.127933502197266

Token 505: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006320207612589002
    2. '   ' → logprob: -8.375632286071777
    3. ' (' → logprob: -9.125632286071777
    4. '#' → logprob: -10.000632286071777
    5. ')' → logprob: -10.125632286071777
    6. '        
' → logprob: -10.625632286071777
    7. '
' → logprob: -10.875632286071777
    8. 'tokens' → logprob: -11.125632286071777
    9. '(' → logprob: -11.250632286071777
    10. '           ' → logprob: -11.375632286071777

Token 506: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.268648624420166
    2. '   ' → logprob: -1.768648624420166
    3. '       ' → logprob: -3.018648624420166
    4. ' )' → logprob: -4.893648624420166
    5. 'def' → logprob: -5.768648624420166
    6. 'w' → logprob: -6.393648624420166
    7. ' ' → logprob: -7.018648624420166
    8. '):' → logprob: -7.143648624420166
    9. '    ' → logprob: -7.393648624420166
    10. '     ' → logprob: -7.893648624420166

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.24310302757658e-05
    2. '   ' → logprob: -10.500072479248047
    3. ' )' → logprob: -10.750072479248047
    4. ')(' → logprob: -11.625072479248047
    5. ')
' → logprob: -11.750072479248047
    6. 'if' → logprob: -13.875072479248047
    7. 'def' → logprob: -14.000072479248047
    8. ':' → logprob: -14.375072479248047
    9. '):' → logprob: -14.375072479248047
    10. '(w' → logprob: -14.375072479248047

Token 508: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02428736723959446
    2. ' if' → logprob: -4.399287223815918
    3. '(w' → logprob: -4.524287223815918
    4. 'if' → logprob: -7.524287223815918
    5. ' ' → logprob: -9.024287223815918
    6. ' return' → logprob: -9.274287223815918
    7. '       ' → logprob: -10.399287223815918
    8. ' for' → logprob: -10.899287223815918
    9. '   ' → logprob: -11.024287223815918
    10. ' w' → logprob: -11.649287223815918

Token 509: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001065559103153646
    2. ' w' → logprob: -7.251065731048584
    3. '(w' → logprob: -8.001065254211426
    4. ' (' → logprob: -12.001065254211426
    5. 'self' → logprob: -12.001065254211426
    6. '   ' → logprob: -12.501065254211426
    7. '       ' → logprob: -13.751065254211426
    8. ')' → logprob: -14.376065254211426
    9. '	w' → logprob: -14.501065254211426
    10. ' ' → logprob: -14.751065254211426

Token 510: ',b' (ID: 17568)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020558124408125877
    2. ',' → logprob: -4.2705583572387695
    3. ',b' → logprob: -5.5205583572387695
    4. ' -' → logprob: -6.7705583572387695
    5. ',c' → logprob: -7.0205583572387695
    6. '>' → logprob: -8.52055835723877
    7. ',w' → logprob: -10.39555835723877
    8. ' >' → logprob: -11.14555835723877
    9. ' ,' → logprob: -11.27055835723877
    10. '   ' → logprob: -11.39555835723877

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.399378566537052e-05
    2. ' )' → logprob: -10.125083923339844
    3. ')->' → logprob: -10.250083923339844
    4. '   ' → logprob: -12.875083923339844
    5. ')
' → logprob: -13.250083923339844
    6. ')=>' → logprob: -14.000083923339844
    7. '-' → logprob: -14.375083923339844
    8. ')=' → logprob: -14.625083923339844
    9. '")' → logprob: -15.375083923339844
    10. ' ' → logprob: -15.500083923339844

Token 512: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.007536114193499088
    2. '->' → logprob: -5.132535934448242
    3. ' ' → logprob: -6.882535934448242
    4. ')' → logprob: -8.507535934448242
    5. '   ' → logprob: -9.507535934448242
    6. ' =>' → logprob: -9.507535934448242
    7. ')->' → logprob: -9.507535934448242
    8. '>' → logprob: -10.382535934448242
    9. ' ->
' → logprob: -10.632535934448242
    10. ' =' → logprob: -10.632535934448242

Token 513: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04859782010316849
    2. '(w' → logprob: -3.048597812652588
    3. '(self' → logprob: -11.673598289489746
    4. ' ' → logprob: -13.548598289489746
    5. '(' → logprob: -14.923598289489746
    6. '   ' → logprob: -16.17359733581543
    7. ' self' → logprob: -16.54859733581543
    8. 'self' → logprob: -16.67359733581543
    9. ' ' → logprob: -16.79859733581543
    10. '  ' → logprob: -17.29859733581543

Token 514: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005104990559630096
    2. ' w' → logprob: -7.8755106925964355
    3. 'self' → logprob: -9.125510215759277
    4. '(w' → logprob: -10.875510215759277
    5. ' self' → logprob: -13.750510215759277
    6. '   ' → logprob: -14.500510215759277
    7. ' ' → logprob: -15.375510215759277
    8. 'max' → logprob: -15.750510215759277
    9. '(self' → logprob: -15.750510215759277
    10. ' (' → logprob: -15.875510215759277

Token 515: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000553151941858232
    2. ' -' → logprob: -7.500553131103516
    3. '-
' → logprob: -16.625553131103516
    4. ' ' → logprob: -18.250553131103516
    5. '   ' → logprob: -18.375553131103516
    6. '−' → logprob: -18.625553131103516
    7. ''-' → logprob: -19.375553131103516
    8. '
' → logprob: -19.500553131103516
    9. '()-' → logprob: -19.750553131103516
    10. '1' → logprob: -20.000553131103516

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.250059127807617
    4. '۱' → logprob: -18.625059127807617
    5. '  ' → logprob: -18.875059127807617
    6. '１' → logprob: -19.125059127807617
    7. '```' → logprob: -19.125059127807617
    8. '' → logprob: -19.250059127807617
    9. '2' → logprob: -19.312559127807617
    10. '    ' → logprob: -19.312559127807617

Token 517: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002913678181357682
    2. ',b' → logprob: -8.37529182434082
    3. ' ,' → logprob: -9.75029182434082
    4. ',c' → logprob: -14.25029182434082
    5. ',
' → logprob: -14.37529182434082
    6. ',w' → logprob: -14.87529182434082
    7. '```' → logprob: -15.75029182434082
    8. ')' → logprob: -15.87529182434082
    9. '`,' → logprob: -16.12529182434082
    10. 'b' → logprob: -16.12529182434082

Token 518: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040818434208631516
    2. ' +' → logprob: -5.504081726074219
    3. '+
' → logprob: -13.504081726074219
    4. '+)' → logprob: -14.004081726074219
    5. '+x' → logprob: -14.879081726074219
    6. ')' → logprob: -15.129081726074219
    7. '+c' → logprob: -15.379081726074219
    8. ')+' → logprob: -15.629081726074219
    9. ',' → logprob: -16.87908172607422
    10. '＋' → logprob: -16.87908172607422

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.625003814697266
    4. ')' → logprob: -19.000003814697266
    5. '=' → logprob: -19.000003814697266
    6. '<|end|>' → logprob: -19.375003814697266
    7. '```' → logprob: -19.625003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '۱' → logprob: -20.500003814697266
    10. '	' → logprob: -20.875003814697266

Token 520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -11.87501049041748
    3. ' )' → logprob: -13.12501049041748
    4. '   ' → logprob: -14.37501049041748
    5. 'if' → logprob: -15.12501049041748
    6. ')`' → logprob: -15.25001049041748
    7. ')

' → logprob: -15.87501049041748
    8. '),' → logprob: -16.625009536743164
    9. '))' → logprob: -17.500009536743164
    10. '       ' → logprob: -17.875009536743164

Token 521: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02442883886396885
    2. ':' → logprob: -5.149428844451904
    3. ' if' → logprob: -5.149428844451904
    4. '
' → logprob: -5.524428844451904
    5. 'if' → logprob: -5.899428844451904
    6. '   ' → logprob: -6.524428844451904
    7. ',' → logprob: -6.774428844451904
    8. '        
' → logprob: -7.399428844451904
    9. ')' → logprob: -7.524428844451904
    10. 'def' → logprob: -8.149428367614746

Token 522: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.16041696071624756
    2. 'w' → logprob: -2.660417079925537
    3. ' self' → logprob: -2.660417079925537
    4. 'self' → logprob: -4.785417079925537
    5. ' ' → logprob: -11.535416603088379
    6. '1' → logprob: -12.035416603088379
    7. '	w' → logprob: -13.160416603088379
    8. '   ' → logprob: -13.410416603088379
    9. ' ' → logprob: -13.660416603088379
    10. ' white' → logprob: -14.035416603088379

Token 523: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10128621757030487
    2. ' >' → logprob: -2.3512861728668213
    3. '1' → logprob: -6.8512864112854
    4. ' ' → logprob: -12.351285934448242
    5. ' >
' → logprob: -12.726285934448242
    6. '>
' → logprob: -12.851285934448242
    7. ')>' → logprob: -13.226285934448242
    8. ')' → logprob: -13.351285934448242
    9. '>=' → logprob: -13.601285934448242
    10. ' >=' → logprob: -13.726285934448242

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39001381397247314
    2. '0' → logprob: -1.1400138139724731
    3. ' ' → logprob: -5.765013694763184
    4. '=' → logprob: -14.015013694763184
    5. '>' → logprob: -14.265013694763184
    6. '<|end|>' → logprob: -14.640013694763184
    7. '```' → logprob: -16.0150146484375
    8. '   ' → logprob: -16.1400146484375
    9. '
' → logprob: -16.1400146484375
    10. '[' → logprob: -17.2650146484375

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0699845626950264
    2. '1' → logprob: -2.6949846744537354
    3. ' ' → logprob: -9.944984436035156
    4. '01' → logprob: -16.319984436035156
    5. '۰' → logprob: -16.569984436035156
    6. '>' → logprob: -16.694984436035156
    7. '   ' → logprob: -18.007484436035156
    8. '  ' → logprob: -18.757484436035156
    9. '<|end|>' → logprob: -18.882484436035156
    10. '' → logprob: -18.944984436035156

Token 526: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010894895531237125
    2. '
' → logprob: -5.135894775390625
    3. '   ' → logprob: -6.385894775390625
    4. ':' → logprob: -7.510894775390625
    5. ')' → logprob: -7.760894775390625
    6. '        
' → logprob: -8.010894775390625
    7. 'if' → logprob: -8.135894775390625
    8. ',' → logprob: -8.260894775390625
    9. 'return' → logprob: -8.510894775390625
    10. ' if' → logprob: -8.635894775390625

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005515842232853174
    2. '   ' → logprob: -6.380516052246094
    3. '<|end|>' → logprob: -6.755516052246094
    4. ')' → logprob: -7.880516052246094
    5. ':' → logprob: -8.130516052246094
    6. '#' → logprob: -8.255516052246094
    7. '        
' → logprob: -8.380516052246094
    8. ',' → logprob: -8.380516052246094
    9. '
' → logprob: -8.630516052246094
    10. '    ' → logprob: -9.255516052246094

Token 528: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013996131718158722
    2. 'if' → logprob: -4.888996124267578
    3. ' if' → logprob: -6.013996124267578
    4. '   ' → logprob: -6.763996124267578
    5. 'moves' → logprob: -7.513996124267578
    6. '        
' → logprob: -7.763996124267578
    7. 'w' → logprob: -8.388996124267578
    8. 'return' → logprob: -8.638996124267578
    9. '\n' → logprob: -8.888996124267578
    10. ')' → logprob: -8.888996124267578

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013996411580592394
    2. '   ' → logprob: -7.251399517059326
    3. '	' → logprob: -9.251399993896484
    4. '        
' → logprob: -9.251399993896484
    5. '
' → logprob: -9.501399993896484
    6. 'w' → logprob: -10.001399993896484
    7. 'import' → logprob: -10.001399993896484
    8. '    
' → logprob: -10.126399993896484
    9. ' if' → logprob: -10.251399993896484
    10. '```' → logprob: -10.626399993896484

Token 530: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11764349788427353
    2. 'if' → logprob: -2.8676435947418213
    3. 'moves' → logprob: -3.3676435947418213
    4. ' if' → logprob: -4.992643356323242
    5. 'memo' → logprob: -5.492643356323242
    6. '   ' → logprob: -6.867643356323242
    7. 'w' → logprob: -6.992643356323242
    8. 'import' → logprob: -6.992643356323242
    9. 'results' → logprob: -6.992643356323242
    10. 'states' → logprob: -6.992643356323242

Token 531: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5663774609565735
    2. 'if' → logprob: -1.0663774013519287
    3. 'moves' → logprob: -2.6913774013519287
    4. 'memo' → logprob: -4.816377639770508
    5. ' if' → logprob: -5.441377639770508
    6. 'states' → logprob: -6.191377639770508
    7. '   ' → logprob: -6.316377639770508
    8. 'from' → logprob: -7.191377639770508
    9. 'import' → logprob: -7.441377639770508
    10. 'results' → logprob: -7.816377639770508

Token 532: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7580369114875793
    2. ' if' → logprob: -0.8830369114875793
    3. '       ' → logprob: -2.2580368518829346
    4. 'import' → logprob: -5.008037090301514
    5. 'memo' → logprob: -6.508037090301514
    6. '   ' → logprob: -6.633037090301514
    7. 'def' → logprob: -6.758037090301514
    8. 'return' → logprob: -7.133037090301514
    9. 'self' → logprob: -7.508037090301514
    10. ' memo' → logprob: -8.008036613464355

Token 533: ' problem' (ID: 4792)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6023427844047546
    2. 'self' → logprob: -1.8523428440093994
    3. 'collections' → logprob: -2.8523428440093994
    4. '       ' → logprob: -2.9773428440093994
    5. 'fun' → logprob: -2.9773428440093994
    6. 'w' → logprob: -3.7273428440093994
    7. ' w' → logprob: -3.8523428440093994
    8. '   ' → logprob: -3.9773428440093994
    9. ' here' → logprob: -4.10234260559082
    10. 'here' → logprob: -4.60234260559082

Token 534: ' constraints' (ID: 31060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1613520085811615
    2. '   ' → logprob: -2.2863519191741943
    3. ':' → logprob: -4.036352157592773
    4. '_' → logprob: -4.786352157592773
    5. '    ' → logprob: -5.536352157592773
    6. '        
' → logprob: -5.911352157592773
    7. ' states' → logprob: -6.286352157592773
    8. 'def' → logprob: -6.411352157592773
    9. 'states' → logprob: -6.786352157592773
    10. '_states' → logprob: -6.911352157592773

Token 535: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3462126553058624
    2. '       ' → logprob: -1.34621262550354
    3. '   ' → logprob: -4.471212863922119
    4. ',' → logprob: -5.221212863922119
    5. '):' → logprob: -5.471212863922119
    6. '
' → logprob: -6.096212863922119
    7. ':
' → logprob: -6.221212863922119
    8. '        
' → logprob: -6.596212863922119
    9. 'def' → logprob: -7.096212863922119
    10. ')' → logprob: -7.096212863922119

Token 536: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22441723942756653
    2. ' if' → logprob: -1.9744172096252441
    3. 'if' → logprob: -3.224417209625244
    4. 'return' → logprob: -5.224417209625244
    5. 'memo' → logprob: -5.724417209625244
    6. 'import' → logprob: -5.849417209625244
    7. ' return' → logprob: -5.974417209625244
    8. ' w' → logprob: -6.349417209625244
    9. ' memo' → logprob: -6.599417209625244
    10. 'from' → logprob: -6.599417209625244

Token 537: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18757601082324982
    2. '>' → logprob: -1.9375760555267334
    3. ' <=' → logprob: -3.8125760555267334
    4. ' ==' → logprob: -6.562575817108154
    5. '<=' → logprob: -6.937575817108154
    6. ' >=' → logprob: -6.937575817108154
    7. ' <' → logprob: -7.312575817108154
    8. '==' → logprob: -8.312576293945312
    9. ')' → logprob: -8.812576293945312
    10. ' ' → logprob: -8.937576293945312

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027171596884727478
    2. ' ' → logprob: -3.9021716117858887
    3. '2' → logprob: -5.027171611785889
    4. '0' → logprob: -10.65217113494873
    5. '   ' → logprob: -10.65217113494873
    6. '  ' → logprob: -14.15217113494873
    7. '>' → logprob: -14.40217113494873
    8. '       ' → logprob: -14.65217113494873
    9. '```' → logprob: -14.77717113494873
    10. '
' → logprob: -15.77717113494873

Token 539: ' etc' (ID: 5178)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026502549648284912
    2. 'if' → logprob: -4.52650260925293
    3. ' if' → logprob: -4.52650260925293
    4. '   ' → logprob: -6.65150260925293
    5. ':' → logprob: -7.40150260925293
    6. 'self' → logprob: -7.77650260925293
    7. 'w' → logprob: -8.27650260925293
    8. 'def' → logprob: -8.27650260925293
    9. '        
' → logprob: -8.27650260925293
    10. ',' → logprob: -8.77650260925293

Token 540: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002546293195337057
    2. 'if' → logprob: -7.127546310424805
    3. '   ' → logprob: -7.502546310424805
    4. ' if' → logprob: -7.877546310424805
    5. '```' → logprob: -8.502546310424805
    6. ',' → logprob: -9.252546310424805
    7. 'self' → logprob: -9.252546310424805
    8. '
' → logprob: -9.752546310424805
    9. '        
' → logprob: -9.877546310424805
    10. ':' → logprob: -9.877546310424805

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005855550989508629
    2. '   ' → logprob: -5.505855560302734
    3. ')' → logprob: -7.880855560302734
    4. '    ' → logprob: -8.505855560302734
    5. '        
' → logprob: -8.505855560302734
    6. '```' → logprob: -8.755855560302734
    7. ',' → logprob: -9.255855560302734
    8. '<|end|>' → logprob: -9.380855560302734
    9. '\' → logprob: -9.880855560302734
    10. '    
' → logprob: -9.880855560302734

Token 542: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005251899361610413
    2. '   ' → logprob: -5.630251884460449
    3. 'if' → logprob: -8.25525188446045
    4. 'def' → logprob: -8.25525188446045
    5. 'import' → logprob: -8.63025188446045
    6. ' if' → logprob: -9.13025188446045
    7. 'w' → logprob: -9.50525188446045
    8. '        
' → logprob: -9.50525188446045
    9. ')' → logprob: -9.63025188446045
    10. '    ' → logprob: -9.75525188446045

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014920076355338097
    2. ' if' → logprob: -7.751492023468018
    3. 'if' → logprob: -7.751492023468018
    4. '   ' → logprob: -8.50149154663086
    5. 'return' → logprob: -9.87649154663086
    6. '        
' → logprob: -10.50149154663086
    7. 'm' → logprob: -10.62649154663086
    8. 'next' → logprob: -10.75149154663086
    9. 'result' → logprob: -10.87649154663086
    10. 'moves' → logprob: -10.87649154663086

Token 544: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004488392733037472
    2. ' if' → logprob: -6.379488468170166
    3. '   ' → logprob: -6.879488468170166
    4. 'if' → logprob: -7.379488468170166
    5. 'import' → logprob: -7.504488468170166
    6. 'def' → logprob: -9.254487991333008
    7. 'from' → logprob: -9.379487991333008
    8. ' from' → logprob: -9.629487991333008
    9. 'memo' → logprob: -10.004487991333008
    10. 'self' → logprob: -10.504487991333008

Token 545: ' Now' (ID: 6549)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01876106671988964
    2. 'if' → logprob: -4.893761157989502
    3. 'memo' → logprob: -5.768761157989502
    4. ' if' → logprob: -5.893761157989502
    5. 'import' → logprob: -6.143761157989502
    6. '   ' → logprob: -6.768761157989502
    7. 'moves' → logprob: -7.518761157989502
    8. 'from' → logprob: -7.893761157989502
    9. ' memo' → logprob: -8.768760681152344
    10. 'def' → logprob: -9.018760681152344

Token 546: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6735062003135681
    2. '       ' → logprob: -0.9235062003135681
    3. 'moves' → logprob: -3.548506259918213
    4. ' if' → logprob: -3.923506259918213
    5. 'memo' → logprob: -3.923506259918213
    6. '   ' → logprob: -4.048506259918213
    7. 'states' → logprob: -6.298506259918213
    8. 'next' → logprob: -7.173506259918213
    9. 'results' → logprob: -7.298506259918213
    10. 'result' → logprob: -7.548506259918213

Token 547: ' implement' (ID: 6365)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.56711345911026
    2. 'def' → logprob: -1.6921133995056152
    3. ' cache' → logprob: -3.4421133995056152
    4. '   ' → logprob: -3.4421133995056152
    5. 'return' → logprob: -3.5671133995056152
    6. 'compute' → logprob: -3.5671133995056152
    7. 'implement' → logprob: -4.067113399505615
    8. 'memo' → logprob: -4.192113399505615
    9. '       ' → logprob: -4.442113399505615
    10. ' implement' → logprob: -4.567113399505615

Token 548: ' grund' (ID: 34475)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011957239359617233
    2. ' if' → logprob: -5.261957168579102
    3. 'if' → logprob: -5.886957168579102
    4. 'moves' → logprob: -7.511957168579102
    5. 'state' → logprob: -7.886957168579102
    6. 'def' → logprob: -8.011957168579102
    7. '   ' → logprob: -8.011957168579102
    8. 'states' → logprob: -8.136957168579102
    9. ':' → logprob: -8.386957168579102
    10. 'self' → logprob: -8.511957168579102

Token 549: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.615255839889869e-05
    2. '   ' → logprob: -10.250096321105957
    3. '       ' → logprob: -10.250096321105957
    4. ')' → logprob: -11.625096321105957
    5. ' y' → logprob: -12.125096321105957
    6. '_y' → logprob: -12.625096321105957
    7. '_' → logprob: -12.625096321105957
    8. ' ' → logprob: -14.250096321105957
    9. 'у' → logprob: -14.500096321105957
    10. 'u' → logprob: -14.500096321105957

Token 550: ' function' (ID: 1114)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1755964308977127
    2. ':' → logprob: -2.3005964756011963
    3. ':
' → logprob: -3.1755964756011963
    4. '
' → logprob: -4.550596237182617
    5. ',' → logprob: -6.550596237182617
    6. '        
' → logprob: -6.800596237182617
    7. '   ' → logprob: -6.925596237182617
    8. '):
' → logprob: -7.175596237182617
    9. '():' → logprob: -7.300596237182617
    10. '():
' → logprob: -7.425596237182617

Token 551: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024535512551665306
    2. 'if' → logprob: -4.149535655975342
    3. ' if' → logprob: -4.899535655975342
    4. 'memo' → logprob: -8.649535179138184
    5. '        
' → logprob: -8.774535179138184
    6. '
' → logprob: -9.024535179138184
    7. '```' → logprob: -9.024535179138184
    8. '   ' → logprob: -9.774535179138184
    9. 'state' → logprob: -10.024535179138184
    10. 'import' → logprob: -10.149535179138184

Token 552: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.5654197931289673
    2. 'self' → logprob: -1.3154197931289673
    3. 'cache' → logprob: -2.5654196739196777
    4. 'import' → logprob: -3.5654196739196777
    5. '@' → logprob: -3.8154196739196777
    6. 'from' → logprob: -4.190419673919678
    7. ' memo' → logprob: -4.190419673919678
    8. 'l' → logprob: -5.940419673919678
    9. ' self' → logprob: -7.065419673919678
    10. 'mem' → logprob: -7.190419673919678

Token 553: 'ization' (ID: 2860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15734291076660156
    2. ':' → logprob: -2.0323429107666016
    3. 'if' → logprob: -5.657342910766602
    4. '   ' → logprob: -5.907342910766602
    5. ':
' → logprob: -6.407342910766602
    6. '_' → logprob: -6.782342910766602
    7. ',' → logprob: -6.907342910766602
    8. ' if' → logprob: -7.032342910766602
    9. '):' → logprob: -7.407342910766602
    10. ')' → logprob: -8.032342910766602

Token 554: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2432744801044464
    2. ':' → logprob: -1.618274450302124
    3. ',' → logprob: -5.493274688720703
    4. '   ' → logprob: -5.993274688720703
    5. ':
' → logprob: -6.618274688720703
    6. '_' → logprob: -6.743274688720703
    7. 'self' → logprob: -6.868274688720703
    8. '\' → logprob: -6.993274688720703
    9. '{' → logprob: -7.118274688720703
    10. '(' → logprob: -7.118274688720703

Token 555: ' avoid' (ID: 8397)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3617129921913147
    2. 'cache' → logprob: -2.61171293258667
    3. '       ' → logprob: -2.86171293258667
    4. '):' → logprob: -3.61171293258667
    5. '_cache' → logprob: -3.61171293258667
    6. ':' → logprob: -3.73671293258667
    7. 'def' → logprob: -3.73671293258667
    8. 'return' → logprob: -3.98671293258667
    9. '   ' → logprob: -4.23671293258667
    10. ')' → logprob: -4.36171293258667

Token 556: ' recom' (ID: 19119)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3650801479816437
    2. '       ' → logprob: -2.3650801181793213
    3. '_' → logprob: -2.4900801181793213
    4. '_cache' → logprob: -3.6150801181793213
    5. '   ' → logprob: -3.7400801181793213
    6. '{' → logprob: -3.8650801181793213
    7. '{}' → logprob: -3.9900801181793213
    8. '\n' → logprob: -4.6150803565979
    9. ' self' → logprob: -4.8650803565979
    10. '\' → logprob: -5.6150803565979

Token 557: 'putation' (ID: 47913)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4977479577064514
    2. '       ' → logprob: -1.7477478981018066
    3. '__' → logprob: -2.4977478981018066
    4. '_cache' → logprob: -3.2477478981018066
    5. '   ' → logprob: -4.247747898101807
    6. '        ' → logprob: -4.372747898101807
    7. '      ' → logprob: -4.872747898101807
    8. ')' → logprob: -4.997747898101807
    9. '    ' → logprob: -5.122747898101807
    10. '           ' → logprob: -5.372747898101807

Token 558: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014053496532142162
    2. ':' → logprob: -5.0140533447265625
    3. ',' → logprob: -6.1390533447265625
    4. '   ' → logprob: -6.6390533447265625
    5. '```' → logprob: -7.1390533447265625
    6. '
' → logprob: -7.2640533447265625
    7. ' if' → logprob: -7.5140533447265625
    8. 'if' → logprob: -8.014053344726562
    9. 'import' → logprob: -8.389053344726562
    10. '_' → logprob: -8.514053344726562

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011022298131138086
    2. '```' → logprob: -7.876102447509766
    3. ' if' → logprob: -8.001102447509766
    4. '   ' → logprob: -9.376102447509766
    5. ',' → logprob: -9.501102447509766
    6. 'if' → logprob: -10.126102447509766
    7. '        ' → logprob: -10.126102447509766
    8. ':' → logprob: -10.626102447509766
    9. '        
' → logprob: -10.751102447509766
    10. '    ' → logprob: -10.876102447509766

Token 560: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5880106091499329
    2. '       ' → logprob: -0.9630106091499329
    3. ' if' → logprob: -2.838010549545288
    4. 'import' → logprob: -6.213010787963867
    5. 'from' (adapté à ' from') → logprob: -7.088010787963867
    6. 'memo' → logprob: -7.088010787963867
    7. 'm' → logprob: -8.213010787963867
    8. 'self' → logprob: -9.463010787963867
    9. 'mem' → logprob: -9.838010787963867
    10. '   ' → logprob: -10.088010787963867

Token 561: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.6934310793876648
    2. ' functools' → logprob: -0.6934310793876648
    3. 'typing' → logprob: -8.56843090057373
    4. ' typing' → logprob: -9.31843090057373
    5. 'collections' → logprob: -13.06843090057373
    6. '_fun' → logprob: -14.31843090057373
    7. 'math' → logprob: -14.56843090057373
    8. 'sys' → logprob: -14.56843090057373
    9. ' fun' → logprob: -16.068431854248047
    10. 'func' → logprob: -16.443431854248047

Token 562: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.045770350843667984
    2. ' import' → logprob: -3.1707704067230225
    3. '_import' → logprob: -6.420770168304443
    4. '	import' → logprob: -7.670770168304443
    5. '_' → logprob: -8.170770645141602
    6. '   ' → logprob: -9.045770645141602
    7. ' ' → logprob: -9.920770645141602
    8. ' functools' → logprob: -9.920770645141602
    9. ' _' → logprob: -10.795770645141602
    10. '`' → logprob: -10.920770645141602

Token 563: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005323412362486124
    2. 'cache' → logprob: -5.25532341003418
    3. ' l' → logprob: -9.50532341003418
    4. 'cached' → logprob: -11.13032341003418
    5. 'import' → logprob: -15.38032341003418
    6. '	l' → logprob: -15.63032341003418
    7. '_cache' → logprob: -16.88032341003418
    8. 'reduce' → logprob: -17.50532341003418
    9. '_l' → logprob: -17.63032341003418
    10. 'wrap' → logprob: -17.75532341003418

Token 564: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.4259644558478612e-05
    2. 'RU' → logprob: -11.250014305114746
    3. 'fu' → logprob: -15.000014305114746
    4. 'r' → logprob: -15.375014305114746
    5. 'Ru' → logprob: -15.500014305114746
    6. 'ruz' → logprob: -15.875014305114746
    7. 'ruff' → logprob: -15.875014305114746
    8. '_ru' → logprob: -16.00001335144043
    9. 'import' → logprob: -17.25001335144043
    10. 'u' → logprob: -17.50001335144043

Token 565: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.023400383070111275
    2. 'cache' → logprob: -3.77340030670166
    3. 'c' → logprob: -9.64840030670166
    4. '@' → logprob: -11.14840030670166
    5. 'cached' → logprob: -11.27340030670166
    6. '```' → logprob: -11.27340030670166
    7. 'ru' → logprob: -11.39840030670166
    8. '_CACHE' → logprob: -11.89840030670166
    9. '_cached' → logprob: -12.02340030670166
    10. 'r' → logprob: -12.39840030670166

Token 566: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6258988380432129
    2. ',' → logprob: -2.000898838043213
    3. '
' → logprob: -2.125898838043213
    4. '       ' → logprob: -2.625898838043213
    5. ':' → logprob: -3.000898838043213
    6. '@
' → logprob: -3.375898838043213
    7. ')' → logprob: -4.500898838043213
    8. ',
' → logprob: -4.625898838043213
    9. '   ' → logprob: -5.000898838043213
    10. '```' → logprob: -5.250898838043213

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21536749601364136
    2. '@' → logprob: -1.7153675556182861
    3. '        
' → logprob: -5.090367317199707
    4. '   ' → logprob: -5.840367317199707
    5. '@
' → logprob: -6.340367317199707
    6. '    
' → logprob: -7.090367317199707
    7. '
' → logprob: -7.215367317199707
    8. ' @' → logprob: -7.590367317199707
    9. '```' → logprob: -8.465367317199707
    10. '\n' → logprob: -9.340367317199707

Token 568: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.006293614394962788
    2. '       ' → logprob: -5.256293773651123
    3. '@
' → logprob: -7.256293773651123
    4. ' @' → logprob: -9.381293296813965
    5. '```' → logprob: -9.881293296813965
    6. '        
' → logprob: -9.881293296813965
    7. '   ' → logprob: -10.006293296813965
    8. '
' → logprob: -10.131293296813965
    9. '@get' → logprob: -10.756293296813965
    10. '@return' → logprob: -11.131293296813965

Token 569: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. 'staticmethod' → logprob: -17.5
    3. ' l' → logprob: -20.625
    4. 'property' → logprob: -21.625
    5. 'cache' → logprob: -21.75
    6. 'classmethod' → logprob: -22.875
    7. 'fun' → logprob: -23.5
    8. 'lf' → logprob: -23.625
    9. 'cached' → logprob: -24.25
    10. 'lr' → logprob: -24.625

Token 570: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.006037696730345488
    2. 'r' → logprob: -5.131037712097168
    3. 'cache' → logprob: -9.506037712097168
    4. 'rl' → logprob: -11.131037712097168
    5. '```' → logprob: -12.506037712097168
    6. 'l' → logprob: -13.006037712097168
    7. '@' → logprob: -13.006037712097168
    8. 'rc' → logprob: -13.381037712097168
    9. '   ' → logprob: -13.756037712097168
    10. 'def' → logprob: -13.756037712097168

Token 571: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0007643607095815241
    2. 'cache' → logprob: -7.5007643699646
    3. '_cached' → logprob: -8.625763893127441
    4. '_' → logprob: -11.250763893127441
    5. 'cached' → logprob: -11.625763893127441
    6. '```' → logprob: -13.500763893127441
    7. '_CACHE' → logprob: -13.625763893127441
    8. 'Cache' → logprob: -14.000763893127441
    9. '.cache' → logprob: -14.250763893127441
    10. '_ca' → logprob: -14.250763893127441

Token 572: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.6143112778663635
    2. 'def' → logprob: -1.4893112182617188
    3. '(None' → logprob: -1.4893112182617188
    4. 'max' → logprob: -5.114311218261719
    5. '
' → logprob: -7.739311218261719
    6. '(def' → logprob: -8.114311218261719
    7. '[max' → logprob: -8.114311218261719
    8. '(int' → logprob: -8.614311218261719
    9. ' def' → logprob: -8.864311218261719
    10. '=max' → logprob: -9.489311218261719

Token 573: 'size' (ID: 4461)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.6394182443618774
    2. 'size' → logprob: -1.3894182443618774
    3. '=' → logprob: -1.5144182443618774
    4. '_size' → logprob: -6.639418125152588
    5. '_=' → logprob: -7.639418125152588
    6. '(None' → logprob: -7.889418125152588
    7. 'None' → logprob: -8.014418601989746
    8. '_None' → logprob: -8.639418601989746
    9. ')' → logprob: -9.389418601989746
    10. 'SIZE' → logprob: -9.389418601989746

Token 574: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.03804333135485649
    2. '=' → logprob: -3.288043260574341
    3. 'None' → logprob: -13.413043022155762
    4. '(None' → logprob: -15.663043022155762
    5. '=
' → logprob: -15.788043022155762
    6. '=N' → logprob: -16.913043975830078
    7. '=True' → logprob: -16.913043975830078
    8. ')=' → logprob: -17.663043975830078
    9. '=-' → logprob: -18.163043975830078
    10. '=max' → logprob: -18.288043975830078

Token 575: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2024303376674652
    2. ')' → logprob: -1.7024303674697876
    3. 'def' → logprob: -7.077430248260498
    4. ')
' → logprob: -8.952430725097656
    5. '   ' → logprob: -11.202430725097656
    6. '       ' → logprob: -12.077430725097656
    7. ')`
' → logprob: -12.077430725097656
    8. ' )
' → logprob: -12.327430725097656
    9. '):
' → logprob: -12.827430725097656
    10. ' def' → logprob: -12.827430725097656

Token 576: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033886346966028214
    2. '
' → logprob: -3.658886432647705
    3. '       ' → logprob: -5.908886432647705
    4. '   ' → logprob: -6.158886432647705
    5. ' def' → logprob: -6.533886432647705
    6. '	def' → logprob: -7.533886432647705
    7. '    
' → logprob: -8.658885955810547
    8. ':def' → logprob: -9.158885955810547
    9. '<|end|>' → logprob: -9.283885955810547
    10. '        
' → logprob: -9.408885955810547

Token 577: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47412168979644775
    2. '
' → logprob: -0.9741216897964478
    3. '    
' → logprob: -11.349122047424316
    4. ':def' → logprob: -11.599122047424316
    5. ' def' → logprob: -11.974122047424316
    6. '   ' → logprob: -12.349122047424316
    7. '        
' → logprob: -12.474122047424316
    8. '
' → logprob: -12.849122047424316
    9. '       ' → logprob: -13.099122047424316
    10. '\' → logprob: -13.724122047424316

Token 578: ' dfs' (ID: 51252)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.025394881144165993
    2. ' grund' → logprob: -4.275394916534424
    3. 'g' → logprob: -5.400394916534424
    4. 'compute' → logprob: -6.150394916534424
    5. 'dfs' → logprob: -6.275394916534424
    6. 'dp' → logprob: -7.275394916534424
    7. 'calc' → logprob: -7.400394916534424
    8. 'gr' → logprob: -8.650394439697266
    9. 'helper' → logprob: -8.775394439697266
    10. 'calculate' → logprob: -9.025394439697266

Token 579: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.4429682195186615
    2. '(' → logprob: -1.0679682493209839
    3. '((' → logprob: -5.067968368530273
    4. '(self' → logprob: -5.192968368530273
    5. ' (' → logprob: -6.942968368530273
    6. '(
' → logprob: -7.692968368530273
    7. ')' → logprob: -8.817968368530273
    8. '(state' → logprob: -8.942968368530273
    9. '(s' → logprob: -9.442968368530273
    10. '   ' → logprob: -9.567968368530273

Token 580: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005961624556221068
    2. ' ,' → logprob: -8.625596046447754
    3. ',w' → logprob: -8.750596046447754
    4. '<|end|>' → logprob: -9.250596046447754
    5. ',b' → logprob: -9.750596046447754
    6. ',
' → logprob: -10.625596046447754
    7. ',int' → logprob: -11.000596046447754
    8. '<|end|>' → logprob: -11.375596046447754
    9. ',p' → logprob: -11.750596046447754
    10. '‌,' → logprob: -11.875596046447754

Token 581: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6240566083070007e-06
    2. ' int' → logprob: -14.125001907348633
    3. ':int' → logprob: -14.625001907348633
    4. '
' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '=int' → logprob: -16.875001907348633
    7. '[int' → logprob: -17.500001907348633
    8. ',int' → logprob: -17.625001907348633
    9. ')' → logprob: -18.000001907348633
    10. ':' → logprob: -18.250001907348633

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006744496989995241
    2. ',b' → logprob: -5.006744384765625
    3. ' ,' → logprob: -10.631744384765625
    4. ',
' → logprob: -12.381744384765625
    5. 'b' → logprob: -15.131744384765625
    6. ',w' → logprob: -15.756744384765625
    7. ',B' → logprob: -16.131744384765625
    8. '‌,' → logprob: -16.506744384765625
    9. '   ' → logprob: -16.756744384765625
    10. ',p' → logprob: -16.881744384765625

Token 583: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006266565760597587
    2. ' b' → logprob: -7.375626564025879
    3. ' ' → logprob: -18.000627517700195
    4. '       ' → logprob: -18.750627517700195
    5. '    ' → logprob: -18.875627517700195
    6. '   ' → logprob: -19.000627517700195
    7. '        ' → logprob: -19.000627517700195
    8. '           ' → logprob: -20.125627517700195
    9. '     ' → logprob: -20.375627517700195
    10. '
' → logprob: -20.500627517700195

Token 584: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048583850264549255
    2. '):
' → logprob: -3.548583745956421
    3. ')' → logprob: -4.423583984375
    4. ':' → logprob: -5.048583984375
    5. ',' → logprob: -9.173583984375
    6. '):
' → logprob: -10.048583984375
    7. ' ):' → logprob: -10.423583984375
    8. '):

' → logprob: -10.923583984375
    9. '   ' → logprob: -11.173583984375
    10. ')>' → logprob: -11.798583984375

Token 585: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.2994620242971e-06
    2. ' int' → logprob: -11.750008583068848
    3. ')' → logprob: -15.500008583068848
    4. '[int' → logprob: -16.50000762939453
    5. '=int' → logprob: -17.12500762939453
    6. ':int' → logprob: -17.50000762939453
    7. '<int' → logprob: -18.25000762939453
    8. ' ' → logprob: -18.75000762939453
    9. '   ' → logprob: -18.75000762939453
    10. '(int' → logprob: -19.12500762939453

Token 586: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02991398051381111
    2. ')' → logprob: -3.529913902282715
    3. '):
' → logprob: -8.779913902282715
    4. ' ):' → logprob: -12.904913902282715
    5. ')->' → logprob: -13.029913902282715
    6. ':' → logprob: -13.029913902282715
    7. '   ' → logprob: -13.529913902282715
    8. '):
' → logprob: -13.779913902282715
    9. '       ' → logprob: -15.654913902282715
    10. '):

' → logprob: -16.52991485595703

Token 587: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18500082194805145
    2. '           ' → logprob: -1.8100007772445679
    3. '   ' → logprob: -6.185000896453857
    4. '<|end|>' → logprob: -6.560000896453857
    5. '        ' → logprob: -7.685000896453857
    6. ',' → logprob: -8.5600004196167
    7. ')' → logprob: -8.9350004196167
    8. '        
' → logprob: -9.1850004196167
    9. '{' → logprob: -9.1850004196167
    10. '#' → logprob: -9.4350004196167

Token 588: ' if' (ID: 538)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.7124350070953369
    2. 'if' (adapté à ' if') → logprob: -0.9624350070953369
    3. '           ' → logprob: -2.712435007095337
    4. ' if' → logprob: -2.962435007095337
    5. 'next' → logprob: -5.962434768676758
    6. ' moves' → logprob: -5.962434768676758
    7. '   ' → logprob: -6.962434768676758
    8. '       ' → logprob: -7.087434768676758
    9. 'reachable' → logprob: -7.087434768676758
    10. '               ' → logprob: -7.962434768676758

Token 589: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4743475019931793
    2. ' w' → logprob: -0.9743474721908569
    3. ' (' → logprob: -9.849347114562988
    4. 'b' → logprob: -9.849347114562988
    5. '(w' → logprob: -9.849347114562988
    6. '0' → logprob: -9.974347114562988
    7. ' b' → logprob: -11.099347114562988
    8. '   ' → logprob: -11.099347114562988
    9. '(' → logprob: -11.099347114562988
    10. ' ' → logprob: -11.974347114562988

Token 590: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35334959626197815
    2. '==' → logprob: -1.2283495664596558
    3. ' <=' → logprob: -5.853349685668945
    4. '<=' → logprob: -6.478349685668945
    5. ' ' → logprob: -8.478349685668945
    6. '1' → logprob: -9.353349685668945
    7. '=' → logprob: -9.353349685668945
    8. '0' → logprob: -10.228349685668945
    9. ')' → logprob: -11.228349685668945
    10. ')==' → logprob: -11.228349685668945

Token 591: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. '1' → logprob: -10.000051498413086
    3. ' ' → logprob: -12.000051498413086
    4. '۰' → logprob: -17.250051498413086
    5. '   ' → logprob: -17.812551498413086
    6. '  ' → logprob: -18.312551498413086
    7. '`' → logprob: -19.250051498413086
    8. '```' → logprob: -19.562551498413086
    9. '2' → logprob: -19.687551498413086
    10. ')' → logprob: -19.687551498413086

Token 592: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. '1' → logprob: -11.250016212463379
    3. ' ' → logprob: -12.750016212463379
    4. '   ' → logprob: -16.687517166137695
    5. '۰' → logprob: -16.875017166137695
    6. '  ' → logprob: -17.687517166137695
    7. '```' → logprob: -18.625017166137695
    8. '
' → logprob: -18.812517166137695
    9. ')' → logprob: -18.812517166137695
    10. '    ' → logprob: -18.937517166137695

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4364193081855774
    2. ':
' → logprob: -1.0614192485809326
    3. ':return' → logprob: -5.061419486999512
    4. '           ' → logprob: -7.311419486999512
    5. ' or' → logprob: -8.061419486999512
    6. '               ' → logprob: -8.686419486999512
    7. '):
' → logprob: -9.061419486999512
    8. '):' → logprob: -10.561419486999512
    9. ')' → logprob: -10.811419486999512
    10. ':
' → logprob: -11.686419486999512

Token 594: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21247775852680206
    2. '               ' → logprob: -2.212477684020996
    3. ':
' → logprob: -2.837477684020996
    4. '           ' → logprob: -4.337477684020996
    5. ':return' → logprob: -4.712477684020996
    6. ' return' → logprob: -8.337477684020996
    7. '.' → logprob: -8.462477684020996
    8. ',' → logprob: -8.462477684020996
    9. 'return' → logprob: -8.587477684020996
    10. '):
' → logprob: -8.962477684020996

Token 595: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003337969828862697
    2. '               ' → logprob: -8.500333786010742
    3. ' return' → logprob: -9.000333786010742
    4. '           ' → logprob: -12.000333786010742
    5. '   ' → logprob: -14.750333786010742
    6. '	return' → logprob: -15.750333786010742
    7. '                   ' → logprob: -15.875333786010742
    8. '{return' → logprob: -16.375333786010742
    9. '
' → logprob: -17.250333786010742
    10. '       ' → logprob: -17.625333786010742

Token 596: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008921671542339027
    2. '0' → logprob: -7.500892162322998
    3. ' return' → logprob: -8.000892639160156
    4. '           ' → logprob: -12.750892639160156
    5. '{return' → logprob: -15.125892639160156
    6. '	return' → logprob: -15.750892639160156
    7. '#' → logprob: -16.000892639160156
    8. ' ' → logprob: -16.000892639160156
    9. '               ' → logprob: -16.250892639160156
    10. ':return' → logprob: -16.375892639160156

Token 597: ' white' (ID: 6461)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.7596848011016846
    2. ' moves' → logprob: -1.2596848011016846
    3. 'stones' → logprob: -2.0096848011016846
    4. ' stones' → logprob: -2.6346848011016846
    5. ' return' → logprob: -3.6346848011016846
    6. 'return' → logprob: -5.5096845626831055
    7. ' valid' → logprob: -6.1346845626831055
    8. '   ' → logprob: -6.1346845626831055
    9. '_moves' → logprob: -6.2596845626831055
    10. ' ' → logprob: -6.3846845626831055

Token 598: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.4982176721096039
    2. ' stones' → logprob: -1.4982177019119263
    3. '           ' → logprob: -2.8732175827026367
    4. ' return' → logprob: -2.9982175827026367
    5. ')' → logprob: -4.123217582702637
    6. ' stone' → logprob: -4.373217582702637
    7. '               ' → logprob: -5.498217582702637
    8. ':' → logprob: -5.498217582702637
    9. 'return' → logprob: -5.623217582702637
    10. 'stone' → logprob: -5.748217582702637

Token 599: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.476202130317688
    2. ':
' → logprob: -1.351202130317688
    3. ':return' → logprob: -2.6012020111083984
    4. ',' → logprob: -4.226202011108398
    5. '               ' → logprob: -4.351202011108398
    6. '           ' → logprob: -4.351202011108398
    7. ' return' → logprob: -6.476202011108398
    8. 'return' → logprob: -6.976202011108398
    9. '):
' → logprob: -7.101202011108398
    10. ')' → logprob: -7.476202011108398

Token 600: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029668787494301796
    2. ' return' → logprob: -3.6546688079833984
    3. '               ' → logprob: -6.154668807983398
    4. '           ' → logprob: -6.779668807983398
    5. '0' → logprob: -9.904668807983398
    6. '   ' → logprob: -10.779668807983398
    7. '	return' → logprob: -11.279668807983398
    8. ' ' → logprob: -12.154668807983398
    9. '{return' → logprob: -12.654668807983398
    10. '                   ' → logprob: -13.029668807983398

Token 601: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.011692996136844158
    2. ' moves' → logprob: -4.511693000793457
    3. 'return' → logprob: -7.511693000793457
    4. ' return' → logprob: -10.261693000793457
    5. 'move' → logprob: -11.261693000793457
    6. '_moves' → logprob: -11.636693000793457
    7. '0' → logprob: -11.761693000793457
    8. 'valid' → logprob: -11.761693000793457
    9. 'stones' → logprob: -12.136693000793457
    10. '   ' → logprob: -12.261693000793457

Token 602: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5432319045066833
    2. ',' → logprob: -1.1682319641113281
    3. '               ' → logprob: -2.918231964111328
    4. '
' → logprob: -3.793231964111328
    5. ')' → logprob: -4.543231964111328
    6. 'return' → logprob: -4.918231964111328
    7. ' return' → logprob: -5.668231964111328
    8. '\n' → logprob: -6.043231964111328
    9. '       ' → logprob: -6.168231964111328
    10. ',
' → logprob: -6.543231964111328

Token 603: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45475631952285767
    2. '           ' → logprob: -1.329756259918213
    3. '
' → logprob: -3.204756259918213
    4. 'return' → logprob: -4.329756259918213
    5. ')' → logprob: -4.579756259918213
    6. '\n' → logprob: -4.579756259918213
    7. ',' → logprob: -5.079756259918213
    8. ':
' → logprob: -5.454756259918213
    9. ' return' → logprob: -5.579756259918213
    10. '):
' → logprob: -5.579756259918213

Token 604: 'rules' (ID: 50321)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18933585286140442
    2. ' return' → logprob: -1.939335823059082
    3. ')' → logprob: -3.689335823059082
    4. '               ' → logprob: -6.564335823059082
    5. '           ' → logprob: -7.189335823059082
    6. ')
' → logprob: -7.314335823059082
    7. ')return' → logprob: -8.439335823059082
    8. ' ' → logprob: -8.564335823059082
    9. '),' → logprob: -8.689335823059082
    10. '0' → logprob: -9.189335823059082

Token 605: ' require' (ID: 1841)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9112240076065063
    2. ')' → logprob: -1.2862240076065063
    3. ')
' → logprob: -1.7862240076065063
    4. '               ' → logprob: -2.411223888397217
    5. ',' → logprob: -4.286223888397217
    6. '),' → logprob: -4.536223888397217
    7. ' return' → logprob: -4.536223888397217
    8. ' yet' → logprob: -4.911223888397217
    9. ' or' → logprob: -5.036223888397217
    10. '):
' → logprob: -6.411223888397217

Token 606: ' at' (ID: 540)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9281994104385376
    2. ' at' → logprob: -1.1781994104385376
    3. 'white' → logprob: -2.053199291229248
    4. 'at' → logprob: -2.428199291229248
    5. ' w' → logprob: -3.178199291229248
    6. ' white' → logprob: -3.303199291229248
    7. '1' → logprob: -8.178199768066406
    8. 'a' → logprob: -8.428199768066406
    9. ' ' → logprob: -8.553199768066406
    10. '>' → logprob: -8.678199768066406

Token 607: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.1603928953409195
    2. ' least' → logprob: -1.9103928804397583
    3. 'lease' → logprob: -9.910392761230469
    4. 'le' → logprob: -10.410392761230469
    5. '   ' → logprob: -10.785392761230469
    6. 'lest' → logprob: -11.035392761230469
    7. '>' → logprob: -11.410392761230469
    8. 'east' → logprob: -11.660392761230469
    9. '1' → logprob: -11.785392761230469
    10. 'Least' → logprob: -12.285392761230469

Token 608: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1289915144443512
    2. ' one' → logprob: -2.3789916038513184
    3. 'one' → logprob: -3.8789916038513184
    4. ' ' → logprob: -5.003991603851318
    5. 'white' → logprob: -7.378991603851318
    6. ' white' → logprob: -8.87899112701416
    7. '   ' → logprob: -9.00399112701416
    8. 'w' → logprob: -10.50399112701416
    9. ' w' → logprob: -10.87899112701416
    10. ' a' → logprob: -11.37899112701416

Token 609: ' white' (ID: 6461)
  Prédit: ' white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' white' → logprob: -0.015330011956393719
    2. 'white' → logprob: -4.515329837799072
    3. ' stone' → logprob: -5.890329837799072
    4. ')' → logprob: -7.515329837799072
    5. ' ' → logprob: -7.765329837799072
    6. 'stone' → logprob: -9.01533031463623
    7. ' ' → logprob: -9.01533031463623
    8. ' )' → logprob: -9.64033031463623
    9. ' w' → logprob: -10.14033031463623
    10. ' space' → logprob: -10.51533031463623

Token 610: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.23301777243614197
    2. 'stone' → logprob: -1.6080178022384644
    3. ')' → logprob: -5.483017921447754
    4. '           ' → logprob: -7.233017921447754
    5. ' )' → logprob: -7.858017921447754
    6. '               ' → logprob: -7.983017921447754
    7. ' stones' → logprob: -8.108017921447754
    8. ' and' → logprob: -8.358017921447754
    9. ' or' → logprob: -8.608017921447754
    10. '   ' → logprob: -8.608017921447754

Token 611: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10889216512441635
    2. ')
' → logprob: -2.7338922023773193
    3. '           ' → logprob: -3.6088922023773193
    4. ' to' → logprob: -4.73389196395874
    5. ' stones' → logprob: -6.98389196395874
    6. ' for' → logprob: -7.35889196395874
    7. ' or' → logprob: -8.483892440795898
    8. '               ' → logprob: -8.608892440795898
    9. ')
' → logprob: -9.608892440795898
    10. ',' → logprob: -9.733892440795898

Token 612: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.580771803855896
    2. '               ' → logprob: -0.955771803855896
    3. ':' → logprob: -3.7057719230651855
    4. ':
' → logprob: -4.5807719230651855
    5. ')' → logprob: -4.9557719230651855
    6. '):
' → logprob: -5.7057719230651855
    7. '):' → logprob: -6.3307719230651855
    8. ':return' → logprob: -6.3307719230651855
    9. '\n' → logprob: -6.3307719230651855
    10. ',' → logprob: -6.5807719230651855

Token 613: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00010819212911883369
    2. ' return' → logprob: -9.625107765197754
    3. '               ' → logprob: -10.125107765197754
    4. '           ' → logprob: -13.375107765197754
    5. '	return' → logprob: -16.00010871887207
    6. '                   ' → logprob: -16.25010871887207
    7. '
' → logprob: -16.25010871887207
    8. '   ' → logprob: -17.00010871887207
    9. '{return' → logprob: -17.00010871887207
    10. ':return' → logprob: -17.75010871887207

Token 614: ' So' (ID: 2632)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00018947436183225363
    2. ' return' → logprob: -8.750189781188965
    3. '               ' → logprob: -10.750189781188965
    4. '           ' → logprob: -11.625189781188965
    5. '
' → logprob: -16.00018882751465
    6. '                   ' → logprob: -16.12518882751465
    7. ':return' → logprob: -16.12518882751465
    8. '	return' → logprob: -16.37518882751465
    9. '{return' → logprob: -16.50018882751465
    10. '   ' → logprob: -17.25018882751465

Token 615: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002157518407329917
    2. ' return' → logprob: -6.502157688140869
    3. '0' → logprob: -7.377157688140869
    4. '           ' → logprob: -10.502157211303711
    5. '               ' → logprob: -14.002157211303711
    6. ' ' → logprob: -14.377157211303711
    7. ':return' → logprob: -15.002157211303711
    8. '	return' → logprob: -15.752157211303711
    9. '{return' → logprob: -16.50215721130371
    10. '   ' → logprob: -16.50215721130371

Token 616: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.2693663537502289
    2. '0' → logprob: -2.1443662643432617
    3. 'return' → logprob: -2.8943662643432617
    4. ' moves' → logprob: -3.1443662643432617
    5. ' return' → logprob: -4.144366264343262
    6. 'stones' → logprob: -6.394366264343262
    7. ' ' → logprob: -6.519366264343262
    8. '_moves' → logprob: -8.019366264343262
    9. ' stones' → logprob: -8.269366264343262
    10. 'grund' → logprob: -8.644366264343262

Token 617: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5465390086174011
    2. 'return' → logprob: -1.671539068222046
    3. ',' → logprob: -2.671539068222046
    4. ')' → logprob: -2.796539068222046
    5. '               ' → logprob: -3.546539068222046
    6. '
' → logprob: -3.796539068222046
    7. '\n' → logprob: -4.546538829803467
    8. ' return' → logprob: -4.671538829803467
    9. ':return' → logprob: -5.046538829803467
    10. '.' → logprob: -5.296538829803467

Token 618: ' losing' (ID: 21159)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015733062755316496
    2. ' return' → logprob: -7.001573085784912
    3. '0' → logprob: -7.376573085784912
    4. '           ' → logprob: -10.50157356262207
    5. '               ' → logprob: -12.00157356262207
    6. ':return' → logprob: -14.25157356262207
    7. ' ' → logprob: -14.37657356262207
    8. '
' → logprob: -14.87657356262207
    9. '{return' → logprob: -15.37657356262207
    10. '	return' → logprob: -15.75157356262207

Token 619: ' position' (ID: 4010)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5174546837806702
    2. '0' → logprob: -1.1424546241760254
    3. 'position' → logprob: -2.6424546241760254
    4. ' state' → logprob: -4.767454624176025
    5. ' ' → logprob: -5.892454624176025
    6. ' position' → logprob: -7.142454624176025
    7. 'return' → logprob: -7.267454624176025
    8. ')' → logprob: -8.017455101013184
    9. 'set' → logprob: -9.017455101013184
    10. '
' → logprob: -9.017455101013184

Token 620: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.378217875957489
    2. '
' → logprob: -1.7532179355621338
    3. '               ' → logprob: -2.503217935562134
    4. 'return' → logprob: -3.503217935562134
    5. ',' → logprob: -3.878217935562134
    6. ' return' → logprob: -6.503217697143555
    7. '.' → logprob: -6.503217697143555
    8. ')' → logprob: -6.503217697143555
    9. '\n' → logprob: -6.503217697143555
    10. ',
' → logprob: -7.253217697143555

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0673290565609932
    2. '           ' → logprob: -2.817329168319702
    3. ' return' → logprob: -6.567328929901123
    4. 'return' → logprob: -6.692328929901123
    5. '\n' → logprob: -6.817328929901123
    6. '
' → logprob: -7.442328929901123
    7. '                   ' → logprob: -8.817329406738281
    8. '   ' → logprob: -8.817329406738281
    9. ':return' → logprob: -9.192329406738281
    10. ',' → logprob: -9.317329406738281

Token 622: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007305434555746615
    2. ' return' → logprob: -7.250730514526367
    3. '0' → logprob: -11.000730514526367
    4. '           ' → logprob: -13.125730514526367
    5. '
' → logprob: -14.000730514526367
    6. '               ' → logprob: -14.625730514526367
    7. '{return' → logprob: -15.250730514526367
    8. '	return' → logprob: -16.125730514526367
    9. ':return' → logprob: -16.375730514526367
    10. '                   ' → logprob: -16.750730514526367

Token 623: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -15.875019073486328
    4. '   ' → logprob: -18.500019073486328
    5. '۰' → logprob: -18.875019073486328
    6. '000' → logprob: -19.250019073486328
    7. ' ' → logprob: -19.625019073486328
    8. '  ' → logprob: -20.062519073486328
    9. ' -' → logprob: -20.437519073486328
    10. ' ' → logprob: -20.750019073486328

Token 624: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -14.875
    3. ' ' → logprob: -16.5
    4. '000' → logprob: -21.375
    5. ' -' → logprob: -21.5
    6. '۰' → logprob: -21.75
    7. '00' → logprob: -23.0
    8. '０' → logprob: -23.75
    9. '   ' → logprob: -23.75
    10. ' ' → logprob: -24.125

Token 625: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5489165186882019
    2. '
' → logprob: -1.0489165782928467
    3. ')' → logprob: -3.0489165782928467
    4. '<|end|>' → logprob: -5.048916339874268
    5. '       ' → logprob: -5.173916339874268
    6. '    
' → logprob: -5.673916339874268
    7. '\n' → logprob: -6.048916339874268
    8. '        
' → logprob: -6.048916339874268
    9. '            
' → logprob: -6.298916339874268
    10. ',' → logprob: -7.673916339874268

Token 626: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6191292405128479
    2. '
' → logprob: -1.1191291809082031
    3. '       ' → logprob: -3.119129180908203
    4. '\n' → logprob: -3.244129180908203
    5. '    
' → logprob: -3.869129180908203
    6. '        
' → logprob: -3.994129180908203
    7. '            
' → logprob: -4.869129180908203
    8. '   ' → logprob: -6.619129180908203
    9. '```' → logprob: -7.369129180908203
    10. '  
' → logprob: -7.619129180908203

Token 627: ' reachable' (ID: 143580)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.23683865368366241
    2. 'next' → logprob: -2.2368385791778564
    3. '   ' → logprob: -3.4868385791778564
    4. 'reachable' (adapté à ' reachable') → logprob: -3.8618385791778564
    5. 'grund' → logprob: -3.9868385791778564
    6. 'mex' → logprob: -4.3618388175964355
    7. '           ' → logprob: -5.6118388175964355
    8. 'res' → logprob: -5.6118388175964355
    9. '       ' → logprob: -5.8618388175964355
    10. 'results' → logprob: -5.9868388175964355

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06258631497621536
    2. ' =' → logprob: -2.8125863075256348
    3. '_states' → logprob: -7.562586307525635
    4. '=set' → logprob: -10.062586784362793
    5. 's' → logprob: -10.687586784362793
    6. '_' → logprob: -10.812586784362793
    7. '_moves' → logprob: -12.437586784362793
    8. '_positions' → logprob: -12.812586784362793
    9. 'states' → logprob: -13.437586784362793
    10. '   ' → logprob: -13.937586784362793

Token 629: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.052200112491846085
    2. '{' → logprob: -3.0522000789642334
    3. ' set' → logprob: -5.6772003173828125
    4. ' {' → logprob: -9.177200317382812
    5. '{
' → logprob: -10.302200317382812
    6. '{}' → logprob: -10.677200317382812
    7. '   ' → logprob: -11.677200317382812
    8. ' ' → logprob: -11.927200317382812
    9. '	set' → logprob: -12.802200317382812
    10. '  ' → logprob: -13.427200317382812

Token 630: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07078742235898972
    2. '()
' → logprob: -2.6957874298095703
    3. '(' → logprob: -7.82078742980957
    4. '()

' → logprob: -7.94578742980957
    5. '()\' → logprob: -10.07078742980957
    6. '(
' → logprob: -11.19578742980957
    7. '();' → logprob: -11.19578742980957
    8. '       ' → logprob: -12.57078742980957
    9. '{' → logprob: -12.57078742980957
    10. '()
' → logprob: -12.82078742980957

Token 631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02335798554122448
    2. ' for' → logprob: -4.14835786819458
    3. 'for' → logprob: -5.14835786819458
    4. '       ' → logprob: -7.02335786819458
    5. '	       ' → logprob: -8.523358345031738
    6. '   ' → logprob: -9.023358345031738
    7. '            
' → logprob: -9.898358345031738
    8. '		' → logprob: -10.523358345031738
    9. '	   ' → logprob: -10.523358345031738
    10. '
' → logprob: -10.648358345031738

Token 632: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03310323879122734
    2. '           ' → logprob: -3.7831032276153564
    3. '#' (adapté à ' #') → logprob: -5.1581034660339355
    4. 'for' → logprob: -5.5331034660339355
    5. '       ' → logprob: -9.658102989196777
    6. ' if' → logprob: -10.908102989196777
    7. '   ' → logprob: -11.033102989196777
    8. '               ' → logprob: -13.658102989196777
    9. 'reachable' → logprob: -13.658102989196777
    10. '
' → logprob: -14.408102989196777

Token 633: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0059811738319695
    2. 'for' → logprob: -5.880980968475342
    3. '           ' → logprob: -6.255980968475342
    4. '#' → logprob: -6.755980968475342
    5. ' if' → logprob: -9.5059814453125
    6. '       ' → logprob: -11.3809814453125
    7. '   ' → logprob: -13.6309814453125
    8. '```' → logprob: -15.0059814453125
    9. '               ' → logprob: -15.2559814453125
    10. ' for' → logprob: -15.5059814453125

Token 634: 'a' (ID: 64)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0020723482593894005
    2. 'a' → logprob: -7.002072334289551
    3. 'if' → logprob: -7.127072334289551
    4. '           ' → logprob: -8.75207233428955
    5. ')' → logprob: -9.25207233428955
    6. ' w' → logprob: -9.37707233428955
    7. '       ' → logprob: -12.12707233428955
    8. '   ' → logprob: -12.75207233428955
    9. ' if' → logprob: -13.12707233428955
    10. '#' → logprob: -13.12707233428955

Token 635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007908730767667294
    2. ')
' → logprob: -5.257908821105957
    3. '           ' → logprob: -6.882908821105957
    4. ' )' → logprob: -7.632908821105957
    5. '):' → logprob: -7.757908821105957
    6. '):
' → logprob: -8.382908821105957
    7. ' if' → logprob: -8.632908821105957
    8. 'if' → logprob: -9.007908821105957
    9. '   ' → logprob: -10.007908821105957
    10. '       ' → logprob: -10.382908821105957

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06796744465827942
    2. 'reachable' → logprob: -3.192967414855957
    3. 'if' → logprob: -4.442967414855957
    4. ' if' → logprob: -4.942967414855957
    5. ' reachable' → logprob: -5.692967414855957
    6. '               ' → logprob: -6.692967414855957
    7. '       ' → logprob: -8.192967414855957
    8. 'dfs' → logprob: -8.567967414855957
    9. 'for' → logprob: -8.567967414855957
    10. 'w' → logprob: -9.442967414855957

Token 637: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02971496991813183
    2. '           ' → logprob: -3.779715061187744
    3. 'reachable' → logprob: -5.529715061187744
    4. ' if' → logprob: -6.029715061187744
    5. 'for' → logprob: -10.404714584350586
    6. 'dfs' → logprob: -11.029714584350586
    7. '       ' → logprob: -11.529714584350586
    8. ' reachable' → logprob: -12.154714584350586
    9. '   ' → logprob: -12.279714584350586
    10. '               ' → logprob: -12.904714584350586

Token 638: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47407761216163635
    2. ' w' → logprob: -0.974077582359314
    3. '	w' → logprob: -14.724077224731445
    4. '    ' → logprob: -17.224077224731445
    5. '   ' → logprob: -17.349077224731445
    6. '           ' → logprob: -17.474077224731445
    7. '_w' → logprob: -17.724077224731445
    8. '(w' → logprob: -18.599077224731445
    9. ' ' → logprob: -18.724077224731445
    10. ' ' → logprob: -18.724077224731445

Token 639: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05488758534193039
    2. '>' → logprob: -2.929887533187866
    3. '1' → logprob: -13.304887771606445
    4. ' ' → logprob: -13.429887771606445
    5. '-' → logprob: -14.179887771606445
    6. ' >
' → logprob: -14.679887771606445
    7. ' -' → logprob: -15.179887771606445
    8. '   ' → logprob: -15.554887771606445
    9. '[' → logprob: -15.804887771606445
    10. ')>' → logprob: -15.929887771606445

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '>' → logprob: -15.500075340270996
    4. '   ' → logprob: -16.87507438659668
    5. '2' → logprob: -17.37507438659668
    6. '  ' → logprob: -19.62507438659668
    7. '```' → logprob: -19.87507438659668
    8. '[' → logprob: -20.87507438659668
    9. '<|end|>' → logprob: -20.87507438659668
    10. '    ' → logprob: -21.12507438659668

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '>' → logprob: -18.0
    4. '   ' → logprob: -18.25
    5. '[' → logprob: -19.25
    6. '۱' → logprob: -19.3125
    7. '{' → logprob: -19.6875
    8. 'from' → logprob: -19.6875
    9. '<|end|>' → logprob: -19.6875
    10. '১' → logprob: -19.875

Token 642: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07410228997468948
    2. ' >' → logprob: -2.9491024017333984
    3. '>=' → logprob: -4.199102401733398
    4. ' >=' → logprob: -5.574102401733398
    5. ')>' → logprob: -9.324102401733398
    6. ' not' → logprob: -9.949102401733398
    7. ')' → logprob: -10.074102401733398
    8. '   ' → logprob: -11.574102401733398
    9. '()>' → logprob: -11.949102401733398
    10. ')>=' → logprob: -12.324102401733398

Token 643: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.5
    4. '0' → logprob: -18.75
    5. '2' → logprob: -20.75
    6. '>' → logprob: -21.375
    7. '       ' → logprob: -21.5625
    8. '۱' → logprob: -21.625
    9. '           ' → logprob: -22.125
    10. '
' → logprob: -22.125

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '2' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '0' → logprob: -19.125001907348633
    6. 'a' → logprob: -20.750001907348633
    7. '۱' → logprob: -20.750001907348633
    8. '１' → logprob: -21.375001907348633
    9. '১' → logprob: -21.875001907348633
    10. '```' → logprob: -22.125001907348633

Token 645: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2280551940202713
    2. ':' → logprob: -1.8530552387237549
    3. '               ' → logprob: -3.103055238723755
    4. '):
' → logprob: -6.353055000305176
    5. '           ' → logprob: -8.103055000305176
    6. '):' → logprob: -9.728055000305176
    7. '<|end|>' → logprob: -9.978055000305176
    8. ',' → logprob: -10.353055000305176
    9. ')' → logprob: -10.853055000305176
    10. '():
' → logprob: -11.728055000305176

Token 646: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09010779857635498
    2. 'reachable' → logprob: -2.4651079177856445
    3. ' reachable' → logprob: -6.8401079177856445
    4. '           ' → logprob: -9.965107917785645
    5. 're' → logprob: -11.090107917785645
    6. '                   ' → logprob: -11.590107917785645
    7. '   ' → logprob: -12.465107917785645
    8. 'dfs' → logprob: -12.590107917785645
    9. '```' → logprob: -13.215107917785645
    10. '                
' → logprob: -13.215107917785645

Token 647: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.00022272850037552416
    2. ' reachable' → logprob: -8.875223159790039
    3. '               ' → logprob: -10.000223159790039
    4. '           ' → logprob: -10.875223159790039
    5. '   ' → logprob: -11.750223159790039
    6. '                   ' → logprob: -12.000223159790039
    7. 'reach' → logprob: -12.875223159790039
    8. '       ' → logprob: -14.625223159790039
    9. '
' → logprob: -15.000223159790039
    10. '                       ' → logprob: -15.125223159790039

Token 648: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004331725067459047
    2. '.' → logprob: -7.750432968139648
    3. 'add' → logprob: -13.250432968139648
    4. ' .' → logprob: -15.375432968139648
    5. '.update' → logprob: -15.750432968139648
    6. '           ' → logprob: -16.00043296813965
    7. '       ' → logprob: -17.75043296813965
    8. '   ' → logprob: -17.75043296813965
    9. ' |=' → logprob: -18.25043296813965
    10. '               ' → logprob: -18.50043296813965

Token 649: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00022046364028938115
    2. 'dfs' → logprob: -8.50022029876709
    3. '(' → logprob: -11.25022029876709
    4. 'd' → logprob: -12.75022029876709
    5. '(
' → logprob: -14.37522029876709
    6. ' dfs' → logprob: -15.87522029876709
    7. '   ' → logprob: -16.500221252441406
    8. ' (' → logprob: -16.500221252441406
    9. '(df' → logprob: -16.625221252441406
    10. '	d' → logprob: -17.000221252441406

Token 650: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.8670179997570813e-05
    2. '(fs' → logprob: -11.500019073486328
    3. 'dfs' → logprob: -12.625019073486328
    4. 's' → logprob: -13.250019073486328
    5. 'f' → logprob: -13.500019073486328
    6. '(' → logprob: -14.125019073486328
    7. '[' → logprob: -14.875019073486328
    8. '(f' → logprob: -15.125019073486328
    9. 'sf' → logprob: -15.125019073486328
    10. '{' → logprob: -16.250019073486328

Token 651: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.000133098365040496
    2. '(' → logprob: -9.125133514404297
    3. ' (' → logprob: -10.750133514404297
    4. ')' → logprob: -13.875133514404297
    5. '((' → logprob: -14.125133514404297
    6. '(
' → logprob: -14.125133514404297
    7. 'w' → logprob: -16.625133514404297
    8. ' )' → logprob: -16.750133514404297
    9. ')(' → logprob: -17.375133514404297
    10. '```' → logprob: -17.875133514404297

Token 652: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02977907471358776
    2. ' -' → logprob: -3.5297789573669434
    3. 'w' → logprob: -11.779779434204102
    4. ',' → logprob: -12.029779434204102
    5. '   ' → logprob: -12.029779434204102
    6. '1' → logprob: -13.279779434204102
    7. '       ' → logprob: -13.404779434204102
    8. '           ' → logprob: -13.404779434204102
    9. '(w' → logprob: -13.529779434204102
    10. ' ' → logprob: -13.779779434204102

Token 653: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -14.500004768371582
    4. '   ' → logprob: -16.7500057220459
    5. '```' → logprob: -18.3750057220459
    6. '           ' → logprob: -19.1250057220459
    7. '<|end|>' → logprob: -19.7500057220459
    8. '۱' → logprob: -20.5000057220459
    9. '[' → logprob: -20.5000057220459
    10. ')' → logprob: -20.7500057220459

Token 654: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.750001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '2' → logprob: -18.375001907348633
    6. '۱' → logprob: -19.125001907348633
    7. 'a' → logprob: -20.062501907348633
    8. '<|end|>' → logprob: -20.187501907348633
    9. '           ' → logprob: -20.375001907348633
    10. '১' → logprob: -20.437501907348633

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013709533959627151
    2. ',b' → logprob: -6.626370906829834
    3. ' ,' → logprob: -10.251371383666992
    4. 'b' → logprob: -12.126371383666992
    5. ',
' → logprob: -13.376371383666992
    6. '   ' → logprob: -13.626371383666992
    7. '       ' → logprob: -15.001371383666992
    8. '```' → logprob: -15.126371383666992
    9. '           ' → logprob: -15.626371383666992
    10. ')' → logprob: -16.126371383666992

Token 656: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.836499985889532e-05
    2. ' b' → logprob: -9.7500581741333
    3. '           ' → logprob: -18.250059127807617
    4. '   ' → logprob: -18.250059127807617
    5. '	b' → logprob: -18.500059127807617
    6. '       ' → logprob: -18.875059127807617
    7. '               ' → logprob: -19.500059127807617
    8. ')b' → logprob: -20.125059127807617
    9. '    ' → logprob: -20.250059127807617
    10. '        ' → logprob: -20.750059127807617

Token 657: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00031425125780515373
    2. '))
' → logprob: -8.875314712524414
    3. ')' → logprob: -9.000314712524414
    4. ' ))' → logprob: -10.375314712524414
    5. '           ' → logprob: -11.625314712524414
    6. '))

' → logprob: -12.500314712524414
    7. '               ' → logprob: -12.875314712524414
    8. ')))' → logprob: -13.625314712524414
    9. '   ' → logprob: -14.375314712524414
    10. '       ' → logprob: -14.375314712524414

Token 658: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006070063100196421
    2. '
' → logprob: -8.000606536865234
    3. '#' → logprob: -9.125606536865234
    4. '```' → logprob: -9.500606536865234
    5. '       ' → logprob: -10.375606536865234
    6. '   ' → logprob: -11.125606536865234
    7. '<|end|>' → logprob: -11.125606536865234
    8. '          ' → logprob: -12.125606536865234
    9. '            
' → logprob: -12.375606536865234
    10. '		' → logprob: -12.875606536865234

Token 659: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.029976094141602516
    2. '           ' → logprob: -3.5299761295318604
    3. 'for' → logprob: -9.029975891113281
    4. '       ' → logprob: -10.154975891113281
    5. ' #' → logprob: -10.154975891113281
    6. '   ' → logprob: -11.404975891113281
    7. '#a' → logprob: -11.904975891113281
    8. '```' → logprob: -12.279975891113281
    9. '
' → logprob: -13.279975891113281
    10. 'if' → logprob: -13.779975891113281

Token 660: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02452213689684868
    2. ' for' → logprob: -4.149522304534912
    3. '           ' → logprob: -5.399522304534912
    4. '#' → logprob: -6.024522304534912
    5. '(b' → logprob: -6.899522304534912
    6. 'b' → logprob: -8.649521827697754
    7. '       ' → logprob: -9.024521827697754
    8. ' (' → logprob: -9.024521827697754
    9. ' #' → logprob: -10.149521827697754
    10. '   ' → logprob: -11.649521827697754

Token 661: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004060050705447793
    2. 'w' → logprob: -8.750406265258789
    3. 'if' → logprob: -9.000406265258789
    4. ' b' → logprob: -10.000406265258789
    5. 'a' → logprob: -10.875406265258789
    6. '   ' → logprob: -11.000406265258789
    7. '           ' → logprob: -11.625406265258789
    8. 'for' → logprob: -12.250406265258789
    9. '       ' → logprob: -12.250406265258789
    10. ' ' → logprob: -12.375406265258789

Token 662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32450976967811584
    2. ')
' → logprob: -1.3245097398757935
    3. '           ' → logprob: -4.824509620666504
    4. ' )
' → logprob: -6.324509620666504
    5. ' )' → logprob: -6.824509620666504
    6. '       ' → logprob: -9.324509620666504
    7. '   ' → logprob: -9.574509620666504
    8. ' ' → logprob: -10.449509620666504
    9. '            ' → logprob: -10.574509620666504
    10. ' ' → logprob: -11.574509620666504

Token 663: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08085411787033081
    2. ' for' → logprob: -2.9558541774749756
    3. 'for' → logprob: -3.7058541774749756
    4. '       ' → logprob: -7.5808539390563965
    5. '
' → logprob: -7.8308539390563965
    6. '               ' → logprob: -10.080854415893555
    7. '            
' → logprob: -10.455854415893555
    8. '   ' → logprob: -10.830854415893555
    9. '<|end|>' → logprob: -11.705854415893555
    10. '	for' → logprob: -11.705854415893555

Token 664: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009172935388050973
    2. '           ' → logprob: -7.250917434692383
    3. ' for' → logprob: -8.500917434692383
    4. '       ' → logprob: -12.625917434692383
    5. '
' → logprob: -15.000917434692383
    6. '   ' → logprob: -15.875917434692383
    7. 'if' → logprob: -16.250917434692383
    8. '	for' → logprob: -16.625917434692383
    9. '               ' → logprob: -17.000917434692383
    10. 'from' → logprob: -17.250917434692383

Token 665: '_black' (ID: 92024)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3701764941215515
    2. '_x' → logprob: -1.4951765537261963
    3. '_black' → logprob: -3.7451765537261963
    4. '_remove' → logprob: -3.9951765537261963
    5. 'remove' → logprob: -4.120176315307617
    6. 'rem' → logprob: -4.870176315307617
    7. 'black' → logprob: -5.245176315307617
    8. 'stones' → logprob: -5.495176315307617
    9. '   ' → logprob: -5.495176315307617
    10. '_rem' → logprob: -6.245176315307617

Token 666: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.3487817049026489
    2. ' =' → logprob: -2.2237815856933594
    3. '_rem' → logprob: -2.2237815856933594
    4. '_to' → logprob: -2.9737815856933594
    5. '=' → logprob: -4.598781585693359
    6. '_move' → logprob: -5.598781585693359
    7. '_st' → logprob: -6.098781585693359
    8. 'remove' → logprob: -6.348781585693359
    9. 'rem' → logprob: -6.348781585693359
    10. '_take' → logprob: -6.598781585693359

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931533813476562
    2. ' =' → logprob: -0.6931533813476562
    3. '=int' → logprob: -13.318153381347656
    4. 's' → logprob: -13.943153381347656
    5. '=min' → logprob: -13.943153381347656
    6. '	' → logprob: -14.318153381347656
    7. '=max' → logprob: -14.568153381347656
    8. ' ' → logprob: -15.193153381347656
    9. 'x' → logprob: -15.568153381347656
    10. 'for' → logprob: -15.693153381347656

Token 668: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25157254934310913
    2. ' min' → logprob: -2.001572608947754
    3. 'w' → logprob: -2.501572608947754
    4. ' w' → logprob: -5.251572608947754
    5. '	min' → logprob: -10.376572608947754
    6. 'm' → logprob: -10.501572608947754
    7. 'max' → logprob: -11.126572608947754
    8. '   ' → logprob: -12.126572608947754
    9. '(min' → logprob: -12.501572608947754
    10. '	w' → logprob: -12.876572608947754

Token 669: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07891909033060074
    2. '(w' → logprob: -2.5789191722869873
    3. 'b' → logprob: -10.578919410705566
    4. '(' → logprob: -13.203919410705566
    5. 'w' → logprob: -13.703919410705566
    6. '	b' → logprob: -15.078919410705566
    7. ' (' → logprob: -15.453919410705566
    8. '(
' → logprob: -16.20391845703125
    9. '{' → logprob: -16.45391845703125
    10. '((' → logprob: -16.57891845703125

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013116813264787197
    2. ',w' → logprob: -4.388116836547852
    3. ' ,' → logprob: -7.638116836547852
    4. 'w' → logprob: -9.388116836547852
    5. ',
' → logprob: -10.263116836547852
    6. '   ' → logprob: -12.513116836547852
    7. '(w' → logprob: -14.013116836547852
    8. ' w' → logprob: -14.763116836547852
    9. ',W' → logprob: -15.263116836547852
    10. ')' → logprob: -15.388116836547852

Token 671: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019286326132714748
    2. ' w' → logprob: -6.251928806304932
    3. '       ' → logprob: -17.001928329467773
    4. '	w' → logprob: -17.626928329467773
    5. '   ' → logprob: -17.876928329467773
    6. '           ' → logprob: -18.251928329467773
    7. '    ' → logprob: -20.876928329467773
    8. '               ' → logprob: -20.876928329467773
    9. '
' → logprob: -21.376928329467773
    10. ' ' → logprob: -21.751928329467773

Token 672: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01617571897804737
    2. ')
' → logprob: -4.141175746917725
    3. '           ' → logprob: -9.516175270080566
    4. '):
' → logprob: -10.891175270080566
    5. ' )' → logprob: -11.141175270080566
    6. ')
' → logprob: -11.641175270080566
    7. '       ' → logprob: -12.141175270080566
    8. '   ' → logprob: -12.266175270080566
    9. ')

' → logprob: -12.391175270080566
    10. '               ' → logprob: -13.016175270080566

Token 673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024285749532282352
    2. 'for' → logprob: -6.3774285316467285
    3. ' for' → logprob: -7.2524285316467285
    4. '<|end|>' → logprob: -12.252429008483887
    5. '	       ' → logprob: -12.502429008483887
    6. '       ' → logprob: -13.002429008483887
    7. '
' → logprob: -13.502429008483887
    8. '   ' → logprob: -13.627429008483887
    9. '               ' → logprob: -13.752429008483887
    10. '            
' → logprob: -14.127429008483887

Token 674: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018408503383398056
    2. '           ' → logprob: -4.018408298492432
    3. ' for' → logprob: -8.26840877532959
    4. '	for' → logprob: -13.89340877532959
    5. '       ' → logprob: -14.01840877532959
    6. '   ' → logprob: -15.76840877532959
    7. '	       ' → logprob: -17.143407821655273
    8. '
' → logprob: -17.268407821655273
    9. '```' → logprob: -17.893407821655273
    10. '		' → logprob: -18.018407821655273

Token 675: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018160942941904068
    2. ' x' → logprob: -4.018160820007324
    3. 'black' → logprob: -12.143160820007324
    4. 'remove' → logprob: -13.268160820007324
    5. ' black' → logprob: -13.518160820007324
    6. '   ' → logprob: -13.768160820007324
    7. 'i' → logprob: -14.393160820007324
    8. '	x' → logprob: -15.518160820007324
    9. 'amount' → logprob: -15.643160820007324
    10. ' ' → logprob: -15.768160820007324

Token 676: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016044575721025467
    2. 'in' → logprob: -4.141044616699219
    3. '1' → logprob: -12.641044616699219
    4. ' ' → logprob: -12.766044616699219
    5. '=' → logprob: -14.016044616699219
    6. '	in' → logprob: -14.141044616699219
    7. 'import' → logprob: -14.766044616699219
    8. 'x' → logprob: -15.016044616699219
    9. 'n' → logprob: -15.266044616699219
    10. ')' → logprob: -15.391044616699219

Token 677: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023245595395565033
    2. ' range' → logprob: -3.7732455730438232
    3. '1' → logprob: -17.023244857788086
    4. ' ' → logprob: -17.273244857788086
    5. '(range' → logprob: -17.648244857788086
    6. '	range' → logprob: -17.898244857788086
    7. '   ' → logprob: -18.898244857788086
    8. '[' → logprob: -19.898244857788086
    9. '  ' → logprob: -20.523244857788086
    10. 'rang' → logprob: -21.523244857788086

Token 678: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00861468818038702
    2. '1' → logprob: -4.758614540100098
    3. '           ' → logprob: -16.633615493774414
    4. '   ' → logprob: -16.758615493774414
    5. ' (' → logprob: -17.133615493774414
    6. '(
' → logprob: -17.633615493774414
    7. ' ' → logprob: -17.883615493774414
    8. '[' → logprob: -18.508615493774414
    9. '
' → logprob: -19.133615493774414
    10. '               ' → logprob: -19.383615493774414

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -15.500001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '
' → logprob: -19.375001907348633
    6. '[' → logprob: -19.750001907348633
    7. '```' → logprob: -19.750001907348633
    8. '0' → logprob: -19.875001907348633
    9. '=' → logprob: -20.375001907348633
    10. '۱' → logprob: -20.437501907348633

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006185544189065695
    2. ' ,' → logprob: -7.7506184577941895
    3. ',max' → logprob: -8.875618934631348
    4. ',
' → logprob: -10.000618934631348
    5. '+' → logprob: -14.250618934631348
    6. 'max' → logprob: -14.375618934631348
    7. '(max' → logprob: -15.000618934631348
    8. '   ' → logprob: -15.750618934631348
    9. '+,' → logprob: -16.00061798095703
    10. ',x' → logprob: -16.50061798095703

Token 681: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.836499985889532e-05
    2. ' max' → logprob: -9.7500581741333
    3. '(max' → logprob: -18.750059127807617
    4. '[max' → logprob: -20.625059127807617
    5. '	max' → logprob: -20.625059127807617
    6. '_max' → logprob: -21.000059127807617
    7. '=max' → logprob: -22.000059127807617
    8. 'min' → logprob: -22.375059127807617
    9. '   ' → logprob: -22.625059127807617
    10. ' ' → logprob: -23.250059127807617

Token 682: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -2.816093228830141e-06
    2. '_max' → logprob: -13.62500286102295
    3. '_remove' → logprob: -14.37500286102295
    4. 'black' → logprob: -14.37500286102295
    5. '+' → logprob: -16.250001907348633
    6. 'Black' → logprob: -16.250001907348633
    7. '_white' → logprob: -17.000001907348633
    8. 'max' → logprob: -17.625001907348633
    9. 'remove' → logprob: -17.875001907348633
    10. '(' → logprob: -18.000001907348633

Token 683: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.000442351185483858
    2. 'remove' → logprob: -7.7504425048828125
    3. '+' → logprob: -12.125442504882812
    4. '_REMOVE' → logprob: -13.125442504882812
    5. 'Remove' → logprob: -13.375442504882812
    6. '_' → logprob: -14.750442504882812
    7. '\' → logprob: -15.125442504882812
    8. '_rem' → logprob: -15.125442504882812
    9. '_replace' → logprob: -15.250442504882812
    10. '_move' → logprob: -15.500442504882812

Token 684: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132643401622772
    2. ' +' → logprob: -1.3132643699645996
    3. '   ' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.563263893127441
    5. '):
' → logprob: -15.063263893127441
    6. '()+' → logprob: -15.188263893127441
    7. ')' → logprob: -15.438263893127441
    8. ')+' → logprob: -15.938263893127441
    9. '1' → logprob: -16.938264846801758
    10. '+
' → logprob: -17.188264846801758

Token 685: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.250009536743164
    4. '```' → logprob: -19.375009536743164
    5. ')' → logprob: -19.750009536743164
    6. '0' → logprob: -19.875009536743164
    7. '
' → logprob: -21.500009536743164
    8. '۱' → logprob: -22.000009536743164
    9. '{' → logprob: -22.062509536743164
    10. 'x' → logprob: -22.312509536743164

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -17.125001907348633
    4. '```' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '0' → logprob: -18.750001907348633
    7. '
' → logprob: -18.875001907348633
    8. '{
' → logprob: -19.750001907348633
    9. '{' → logprob: -19.937501907348633
    10. '):
' → logprob: -20.812501907348633

Token 687: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6944862604141235
    2. '):' → logprob: -0.6944862604141235
    3. ':' → logprob: -6.694486141204834
    4. ')' → logprob: -10.444486618041992
    5. ':
' → logprob: -10.944486618041992
    6. '):
' → logprob: -11.069486618041992
    7. ' ):' → logprob: -11.444486618041992
    8. ' ):
' → logprob: -11.444486618041992
    9. '():
' → logprob: -12.444486618041992
    10. '           ' → logprob: -12.694486618041992

Token 688: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009943901561200619
    2. 'reachable' → logprob: -4.634943962097168
    3. ' reachable' → logprob: -9.134943962097168
    4. '           ' → logprob: -10.259943962097168
    5. 're' → logprob: -10.509943962097168
    6. '                   ' → logprob: -11.384943962097168
    7. '   ' → logprob: -13.509943962097168
    8. '       ' → logprob: -13.759943962097168
    9. '                
' → logprob: -14.509943962097168
    10. '              ' → logprob: -14.509943962097168

Token 689: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.01971948891878128
    2. ' reachable' → logprob: -4.26971960067749
    3. '               ' → logprob: -5.26971960067749
    4. '                   ' → logprob: -8.894719123840332
    5. '           ' → logprob: -9.144719123840332
    6. '   ' → logprob: -9.644719123840332
    7. 'reach' → logprob: -9.894719123840332
    8. '       ' → logprob: -11.394719123840332
    9. '                       ' → logprob: -12.269719123840332
    10. '              ' → logprob: -13.144719123840332

Token 690: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.214019307051785e-05
    2. '.' → logprob: -10.375032424926758
    3. 'add' → logprob: -14.500032424926758
    4. '   ' → logprob: -16.125032424926758
    5. '           ' → logprob: -16.250032424926758
    6. '       ' → logprob: -16.750032424926758
    7. ' .' → logprob: -16.875032424926758
    8. '.Add' → logprob: -17.750032424926758
    9. '.append' → logprob: -18.500032424926758
    10. ').' → logprob: -19.000032424926758

Token 691: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.157039049663581e-05
    2. 'dfs' → logprob: -10.000051498413086
    3. 'd' → logprob: -12.375051498413086
    4. '(' → logprob: -13.750051498413086
    5. ' (' → logprob: -15.000051498413086
    6. '(
' → logprob: -15.250051498413086
    7. ' dfs' → logprob: -15.500051498413086
    8. '(df' → logprob: -17.125051498413086
    9. 'DFS' → logprob: -17.250051498413086
    10. '((' → logprob: -18.500051498413086

Token 692: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0006291598547250032
    2. 'dfs' → logprob: -7.75062894821167
    3. 's' → logprob: -9.375629425048828
    4. '(fs' → logprob: -9.500629425048828
    5. '(d' → logprob: -10.375629425048828
    6. 'f' → logprob: -12.500629425048828
    7. 'sf' → logprob: -13.625629425048828
    8. ' fs' → logprob: -14.500629425048828
    9. 'fsp' → logprob: -14.750629425048828
    10. 'fsm' → logprob: -15.250629425048828

Token 693: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -16.000003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '(
' → logprob: -19.625003814697266
    6. 'w' → logprob: -20.000003814697266
    7. '((' → logprob: -20.375003814697266
    8. ')' → logprob: -21.250003814697266
    9. '       ' → logprob: -21.250003814697266
    10. '<w' → logprob: -21.375003814697266

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011528400937095284
    2. ',b' → logprob: -7.251152992248535
    3. ' ,' → logprob: -7.751152992248535
    4. ',
' → logprob: -12.001152992248535
    5. 'b' → logprob: -12.626152992248535
    6. '   ' → logprob: -13.876152992248535
    7. ' ' → logprob: -14.376152992248535
    8. ' b' → logprob: -15.126152992248535
    9. '       ' → logprob: -15.501152992248535
    10. '
' → logprob: -15.626152992248535

Token 695: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024758970830589533
    2. ' b' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.75247573852539
    4. ' ' → logprob: -16.87747573852539
    5. '    ' → logprob: -18.75247573852539
    6. '	b' → logprob: -19.00247573852539
    7. '     ' → logprob: -19.12747573852539
    8. '  ' → logprob: -19.25247573852539
    9. '       ' → logprob: -19.62747573852539
    10. '           ' → logprob: -20.00247573852539

Token 696: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04873974621295929
    2. '-' → logprob: -3.0487396717071533
    3. '-x' → logprob: -9.548739433288574
    4. ' ' → logprob: -10.048739433288574
    5. 'x' → logprob: -11.423739433288574
    6. ' x' → logprob: -11.798739433288574
    7. ')' → logprob: -11.798739433288574
    8. '   ' → logprob: -12.423739433288574
    9. ' ' → logprob: -12.673739433288574
    10. '    ' → logprob: -13.548739433288574

Token 697: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '	x' → logprob: -19.750158309936523
    4. ')x' → logprob: -21.625158309936523
    5. '<|end|>' → logprob: -22.750158309936523
    6. '1' → logprob: -23.250158309936523
    7. '{x' → logprob: -23.750158309936523
    8. ' ' → logprob: -23.875158309936523
    9. '   ' → logprob: -24.375158309936523
    10. '"x' → logprob: -25.250158309936523

Token 698: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009238460334017873
    2. ')' → logprob: -7.0009236335754395
    3. '))
' → logprob: -11.750924110412598
    4. ' ))' → logprob: -12.875924110412598
    5. '           ' → logprob: -14.500924110412598
    6. '               ' → logprob: -14.500924110412598
    7. ')))' → logprob: -14.875924110412598
    8. '   ' → logprob: -15.375924110412598
    9. '       ' → logprob: -15.750924110412598
    10. '),' → logprob: -16.75092315673828

Token 699: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07950113713741302
    2. '#' → logprob: -2.579501152038574
    3. '       ' → logprob: -8.204501152038574
    4. '
' → logprob: -8.829501152038574
    5. '```' → logprob: -8.954501152038574
    6. '   ' → logprob: -10.454501152038574
    7. ' #' → logprob: -10.829501152038574
    8. '          ' → logprob: -11.954501152038574
    9. '               ' → logprob: -13.204501152038574
    10. '         ' → logprob: -13.204501152038574

Token 700: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1570284366607666
    2. '           ' → logprob: -2.0320284366607666
    3. 'if' → logprob: -4.5320281982421875
    4. '       ' → logprob: -7.1570281982421875
    5. 'for' → logprob: -7.2820281982421875
    6. 'reachable' → logprob: -7.5320281982421875
    7. '   ' → logprob: -7.6570281982421875
    8. ' #' → logprob: -7.7820281982421875
    9. '```' → logprob: -8.032028198242188
    10. '(' → logprob: -9.907028198242188

Token 701: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5258756875991821
    2. 'if' → logprob: -1.2758756875991821
    3. '#' → logprob: -2.6508755683898926
    4. 'reachable' → logprob: -2.9008755683898926
    5. 'c' → logprob: -6.275875568389893
    6. '   ' → logprob: -6.775875568389893
    7. '       ' → logprob: -8.02587604522705
    8. '(a' → logprob: -8.27587604522705
    9. ' (' → logprob: -9.15087604522705
    10. '           ' → logprob: -9.52587604522705

Token 702: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.885492621222511e-05
    2. '(c' → logprob: -9.625068664550781
    3. ' c' → logprob: -13.625068664550781
    4. ' (' → logprob: -14.375068664550781
    5. 'w' → logprob: -15.125068664550781
    6. 'dfs' → logprob: -15.625068664550781
    7. '
' → logprob: -15.750068664550781
    8. '[c' → logprob: -16.12506866455078
    9. '(' → logprob: -16.87506866455078
    10. '_c' → logprob: -17.12506866455078

Token 703: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42878249287605286
    2. ')' → logprob: -1.0537824630737305
    3. ' )
' → logprob: -10.55378246307373
    4. ')
' → logprob: -10.92878246307373
    5. '   ' → logprob: -11.30378246307373
    6. ' )' → logprob: -12.17878246307373
    7. ')

' → logprob: -12.30378246307373
    8. '           ' → logprob: -12.80378246307373
    9. ':' → logprob: -12.80378246307373
    10. '):
' → logprob: -12.92878246307373

Token 704: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30317431688308716
    2. 'reachable' → logprob: -1.4281742572784424
    3. ' reachable' → logprob: -4.8031744956970215
    4. '   ' → logprob: -5.3031744956970215
    5. 'if' → logprob: -5.6781744956970215
    6. '       ' → logprob: -5.9281744956970215
    7. ' if' → logprob: -6.0531744956970215
    8. '               ' → logprob: -9.928174018859863
    9. 'for' → logprob: -10.803174018859863
    10. ' for' → logprob: -11.303174018859863

Token 705: ' #' (ID: 1069)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.016762716695666313
    2. 'if' → logprob: -4.141762733459473
    3. ' reachable' → logprob: -7.766762733459473
    4. '   ' → logprob: -9.016762733459473
    5. '           ' → logprob: -9.516762733459473
    6. ' if' → logprob: -9.766762733459473
    7. 'reach' → logprob: -10.266762733459473
    8. '       ' → logprob: -11.391762733459473
    9. '               ' → logprob: -13.766762733459473
    10. '  ' → logprob: -13.891762733459473

Token 706: ' can' (ID: 665)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.05583006143569946
    2. 'if' → logprob: -3.0558300018310547
    3. ' reachable' → logprob: -5.180830001831055
    4. ' if' → logprob: -6.680830001831055
    5. '   ' → logprob: -8.555830001831055
    6. 'reach' → logprob: -9.430830001831055
    7. '           ' → logprob: -10.680830001831055
    8. '       ' → logprob: -11.305830001831055
    9. '
' → logprob: -12.305830001831055
    10. 'If' → logprob: -12.930830001831055

Token 707: ' only' (ID: 1606)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.02657185308635235
    2. 'w' → logprob: -3.651571750640869
    3. ' (' → logprob: -9.401572227478027
    4. '_w' → logprob: -9.776572227478027
    5. ' ' → logprob: -10.651572227478027
    6. ' if' → logprob: -11.151572227478027
    7. '(w' → logprob: -11.276572227478027
    8. '_' → logprob: -11.276572227478027
    9. '   ' → logprob: -11.401572227478027
    10. 'b' → logprob: -11.401572227478027

Token 708: ' do' (ID: 621)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.618108868598938
    2. 'if' → logprob: -1.118108868598938
    3. 'w' → logprob: -2.6181087493896484
    4. ' w' → logprob: -3.6181087493896484
    5. ' continue' → logprob: -5.243108749389648
    6. ' remove' → logprob: -5.368108749389648
    7. 'remove' → logprob: -5.618108749389648
    8. ' be' → logprob: -5.743108749389648
    9. ' add' → logprob: -5.868108749389648
    10. ' use' → logprob: -5.868108749389648

Token 709: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18199259042739868
    2. 'w' → logprob: -2.181992530822754
    3. ' if' → logprob: -3.556992530822754
    4. '(w' → logprob: -4.056992530822754
    5. 'it' → logprob: -5.931992530822754
    6. 'dfs' → logprob: -6.306992530822754
    7. '(c' → logprob: -7.056992530822754
    8. 'c' → logprob: -7.431992530822754
    9. ' w' → logprob: -7.681992530822754
    10. 'this' → logprob: -8.556992530822754

Token 710: ' at' (ID: 540)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.033646274358034134
    2. ' w' → logprob: -3.40864634513855
    3. '(w' → logprob: -15.533646583557129
    4. '   ' → logprob: -15.783646583557129
    5. '	w' → logprob: -16.408645629882812
    6. ' ' → logprob: -17.908645629882812
    7. '_w' → logprob: -17.908645629882812
    8. '1' → logprob: -18.033645629882812
    9. ' ' → logprob: -18.033645629882812
    10. '(' → logprob: -18.408645629882812

Token 711: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.16532942652702332
    2. ' least' → logprob: -2.1653294563293457
    3. 'w' → logprob: -3.2903294563293457
    4. ' w' → logprob: -8.415328979492188
    5. '>' → logprob: -10.415328979492188
    6. '   ' → logprob: -10.415328979492188
    7. 'Least' → logprob: -10.415328979492188
    8. 'le' → logprob: -11.040328979492188
    9. '_le' → logprob: -11.040328979492188
    10. ' ' → logprob: -11.415328979492188

Token 712: ' ' (ID: 220)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5987326502799988
    2. '1' → logprob: -0.8487326502799988
    3. ' w' → logprob: -4.0987324714660645
    4. ' ' → logprob: -5.3487324714660645
    5. ' one' → logprob: -7.3487324714660645
    6. 'one' → logprob: -8.098732948303223
    7. '2' → logprob: -8.598732948303223
    8. '   ' → logprob: -10.098732948303223
    9. 'white' → logprob: -12.098732948303223
    10. ' white' → logprob: -13.598732948303223

Token 713: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02551109716296196
    2. 'w' → logprob: -3.9005110263824463
    3. '2' → logprob: -5.400511264801025
    4. ' ' → logprob: -8.025510787963867
    5. ' w' → logprob: -9.275510787963867
    6. '   ' → logprob: -11.525510787963867
    7. 'white' → logprob: -12.775510787963867
    8. 'one' → logprob: -13.275510787963867
    9. '```' → logprob: -13.400510787963867
    10. '>' → logprob: -13.650510787963867

Token 714: ' white' (ID: 6461)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.21254771947860718
    2. 'w' → logprob: -2.087547779083252
    3. ' and' → logprob: -3.837547779083252
    4. ' >' → logprob: -4.087547779083252
    5. '>' → logprob: -4.712547779083252
    6. ' white' → logprob: -5.087547779083252
    7. ')' → logprob: -5.212547779083252
    8. ' if' → logprob: -6.212547779083252
    9. ' ' → logprob: -7.087547779083252
    10. ' (' → logprob: -7.212547779083252

Token 715: ' stone' (ID: 14352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2119364738464355
    2. ' and' → logprob: -1.5869364738464355
    3. ' -' → logprob: -2.2119364738464355
    4. ' stone' → logprob: -2.3369364738464355
    5. '>' → logprob: -2.4619364738464355
    6. ':' → logprob: -2.7119364738464355
    7. 'and' → logprob: -3.0869364738464355
    8. 'stone' → logprob: -3.7119364738464355
    9. ' >' → logprob: -4.2119364738464355
    10. ')' → logprob: -4.7119364738464355

Token 716: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004784561228007078
    2. 'reachable' → logprob: -6.00478458404541
    3. ' if' → logprob: -6.87978458404541
    4. 'if' → logprob: -7.75478458404541
    5. ' reachable' → logprob: -8.12978458404541
    6. ',' → logprob: -8.75478458404541
    7. '               ' → logprob: -8.87978458404541
    8. '       ' → logprob: -9.37978458404541
    9. '   ' → logprob: -9.50478458404541
    10. '{
' → logprob: -11.37978458404541

Token 717: ' replace' (ID: 13284)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.07556743174791336
    2. 'remove' → logprob: -2.7005674839019775
    3. ' replace' → logprob: -5.700567245483398
    4. 'pick' → logprob: -7.200567245483398
    5. ' remove' → logprob: -7.575567245483398
    6. 'w' → logprob: -7.575567245483398
    7. ' pick' → logprob: -9.200567245483398
    8. 'use' → logprob: -9.575567245483398
    9. 'consume' → logprob: -9.950567245483398
    10. 'convert' → logprob: -10.075567245483398

Token 718: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025280991103500128
    2. 'reachable' → logprob: -6.627528190612793
    3. '
' → logprob: -7.877528190612793
    4. ' if' → logprob: -8.627528190612793
    5. ' reachable' → logprob: -8.752528190612793
    6. '               ' → logprob: -8.877528190612793
    7. 'if' → logprob: -9.127528190612793
    8. '       ' → logprob: -9.752528190612793
    9. ',' → logprob: -9.877528190612793
    10. '   ' → logprob: -10.127528190612793

Token 719: ' which' (ID: 1118)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.11692769080400467
    2. ' reachable' → logprob: -2.7419276237487793
    3. '           ' → logprob: -3.3669276237487793
    4. '               ' → logprob: -4.491927623748779
    5. '                   ' → logprob: -9.991928100585938
    6. '   ' → logprob: -10.116928100585938
    7. '       ' → logprob: -10.116928100585938
    8. '                       ' → logprob: -11.366928100585938
    9. '            ' → logprob: -11.616928100585938
    10. ' ' → logprob: -11.616928100585938

Token 720: ' is' (ID: 382)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16301991045475006
    2. ' is' → logprob: -2.538019895553589
    3. ' w' → logprob: -3.413019895553589
    4. '>' → logprob: -3.913019895553589
    5. 'is' → logprob: -4.538020133972168
    6. '=' → logprob: -5.538020133972168
    7. ')' → logprob: -6.663020133972168
    8. ':' → logprob: -7.788020133972168
    9. '>=' → logprob: -8.038020133972168
    10. ' means' → logprob: -8.163020133972168

Token 721: ' guaranteed' (ID: 21862)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03740654140710831
    2. ' w' → logprob: -3.7874064445495605
    3. 'True' → logprob: -4.5374064445495605
    4. ' True' → logprob: -5.7874064445495605
    5. '   ' → logprob: -9.287406921386719
    6. '>' → logprob: -9.412406921386719
    7. '(w' → logprob: -10.037406921386719
    8. '1' → logprob: -10.662406921386719
    9. 'true' → logprob: -10.912406921386719
    10. '       ' → logprob: -12.037406921386719

Token 722: ' since' (ID: 3630)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029698312282562256
    2. 'reachable' → logprob: -3.654698371887207
    3. ' reachable' → logprob: -6.404698371887207
    4. '               ' → logprob: -6.654698371887207
    5. ' if' → logprob: -8.904698371887207
    6. '       ' → logprob: -9.154698371887207
    7. '   ' → logprob: -9.529698371887207
    8. ',' → logprob: -10.529698371887207
    9. '                   ' → logprob: -10.779698371887207
    10. 'if' → logprob: -10.904698371887207

Token 723: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0010329303331673145
    2. ' w' → logprob: -6.876032829284668
    3. '   ' → logprob: -15.876032829284668
    4. '	w' → logprob: -17.751033782958984
    5. '`' → logprob: -19.126033782958984
    6. '```' → logprob: -19.126033782958984
    7. ' ' → logprob: -19.251033782958984
    8. '       ' → logprob: -19.251033782958984
    9. ' ' → logprob: -19.626033782958984
    10. '(w' → logprob: -19.876033782958984

Token 724: '>=' (ID: 20974)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.523276150226593
    2. '>' → logprob: -0.898276150226593
    3. ' >=' → logprob: -9.773276329040527
    4. '-' → logprob: -10.148276329040527
    5. '>=' → logprob: -10.148276329040527
    6. ' -' → logprob: -11.523276329040527
    7. '   ' → logprob: -12.523276329040527
    8. ' ' → logprob: -13.773276329040527
    9. ')>' → logprob: -13.773276329040527
    10. ')' → logprob: -14.398276329040527

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.500011444091797
    4. '>' → logprob: -15.000011444091797
    5. '
' → logprob: -15.750011444091797
    6. '```' → logprob: -17.250011444091797
    7. '2' → logprob: -18.000011444091797
    8. '0' → logprob: -18.625011444091797
    9. ')' → logprob: -18.875011444091797
    10. '۱' → logprob: -19.500011444091797

Token 726: '
' (ID: 198)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.3245595693588257
    2. '           ' → logprob: -1.3245595693588257
    3. ' reachable' → logprob: -4.574559688568115
    4. '               ' → logprob: -7.324559688568115
    5. '   ' → logprob: -9.074559211730957
    6. '       ' → logprob: -9.574559211730957
    7. '                   ' → logprob: -10.699559211730957
    8. '            
' → logprob: -11.824559211730957
    9. '{
' → logprob: -12.074559211730957
    10. '            ' → logprob: -12.324559211730957

Token 727: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3567575216293335
    2. 'reachable' → logprob: -1.2317575216293335
    3. ' reachable' → logprob: -5.106757640838623
    4. '               ' → logprob: -6.231757640838623
    5. '       ' → logprob: -9.106757164001465
    6. '   ' → logprob: -9.606757164001465
    7. '                   ' → logprob: -10.606757164001465
    8. '```' → logprob: -11.356757164001465
    9. '             ' → logprob: -12.106757164001465
    10. '          ' → logprob: -12.356757164001465

Token 728: ' if' (ID: 538)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.006315293256193399
    2. '           ' → logprob: -5.131315231323242
    3. ' reachable' → logprob: -8.006315231323242
    4. '               ' → logprob: -10.506315231323242
    5. '   ' → logprob: -11.131315231323242
    6. '       ' → logprob: -12.131315231323242
    7. 'reach' → logprob: -12.881315231323242
    8. '                   ' → logprob: -14.006315231323242
    9. 'return' → logprob: -14.506315231323242
    10. '                       ' → logprob: -15.131315231323242

Token 729: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003603036515414715
    2. ' w' → logprob: -5.628602981567383
    3. '   ' → logprob: -13.128602981567383
    4. 'True' → logprob: -14.378602981567383
    5. '	w' → logprob: -16.128602981567383
    6. ' True' → logprob: -16.253602981567383
    7. '1' → logprob: -16.753602981567383
    8. ' ' → logprob: -17.253602981567383
    9. ' ' → logprob: -17.253602981567383
    10. '       ' → logprob: -17.378602981567383

Token 730: ' -' (ID: 533)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7052592635154724
    2. ' >' → logprob: -0.7052592635154724
    3. '-' → logprob: -4.705259323120117
    4. ' -' → logprob: -6.705259323120117
    5. ' >=' → logprob: -7.080259323120117
    6. '>=' → logprob: -7.080259323120117
    7. '1' → logprob: -10.830259323120117
    8. '   ' → logprob: -11.205259323120117
    9. ')>' → logprob: -11.330259323120117
    10. ' ' → logprob: -11.455259323120117

Token 731: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.000003814697266
    4. '
' → logprob: -17.625003814697266
    5. '```' → logprob: -17.750003814697266
    6. '2' → logprob: -18.937503814697266
    7. '0' → logprob: -19.187503814697266
    8. '  ' → logprob: -19.375003814697266
    9. '>' → logprob: -19.500003814697266
    10. '[' → logprob: -19.500003814697266

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۱' → logprob: -19.375001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '```' → logprob: -19.500001907348633
    6. '<|end|>' → logprob: -20.000001907348633
    7. '2' → logprob: -20.187501907348633
    8. '
' → logprob: -20.375001907348633
    9. '0' → logprob: -21.062501907348633
    10. '  ' → logprob: -21.375001907348633

Token 733: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11508683115243912
    2. ' >=' → logprob: -2.240086793899536
    3. ')' → logprob: -6.865087032318115
    4. '>' → logprob: -7.490087032318115
    5. ')>=' → logprob: -7.615087032318115
    6. ' not' → logprob: -10.240086555480957
    7. ' >' → logprob: -10.615086555480957
    8. '   ' → logprob: -10.865086555480957
    9. 'not' → logprob: -11.240086555480957
    10. ']>=' → logprob: -11.490086555480957

Token 734: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001239196863025427
    2. '1' → logprob: -9.000123977661133
    3. ' ' → logprob: -14.625123977661133
    4. '   ' → logprob: -17.125123977661133
    5. '۰' → logprob: -18.250123977661133
    6. '```' → logprob: -18.875123977661133
    7. '
' → logprob: -19.937623977661133
    8. '０' → logprob: -20.500123977661133
    9. ':' → logprob: -21.312623977661133
    10. ' ' → logprob: -21.625123977661133

Token 735: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756323881447315
    2. '1' → logprob: -4.634756088256836
    3. ' ' → logprob: -14.884756088256836
    4. '   ' → logprob: -18.509756088256836
    5. '۰' → logprob: -18.822256088256836
    6. '```' → logprob: -19.884756088256836
    7. '
' → logprob: -20.009756088256836
    8. '=' → logprob: -21.197256088256836
    9. '' → logprob: -21.384756088256836
    10. '01' → logprob: -21.509756088256836

Token 736: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9397078156471252
    2. ':' → logprob: -1.1897077560424805
    3. ':
' → logprob: -1.1897077560424805
    4. '           ' → logprob: -7.9397077560424805
    5. '):
' → logprob: -8.56470775604248
    6. ',' → logprob: -10.43970775604248
    7. ')' → logprob: -11.68970775604248
    8. '():
' → logprob: -11.93970775604248
    9. '):' → logprob: -11.93970775604248
    10. ':return' → logprob: -11.93970775604248

Token 737: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01827261783182621
    2. 'reachable' → logprob: -4.018272399902344
    3. ' reachable' → logprob: -9.268272399902344
    4. '           ' → logprob: -11.268272399902344
    5. '                   ' → logprob: -11.518272399902344
    6. '                       ' → logprob: -13.393272399902344
    7. 'return' → logprob: -13.643272399902344
    8. 're' → logprob: -13.768272399902344
    9. '              ' → logprob: -14.268272399902344
    10. '       ' → logprob: -14.768272399902344

Token 738: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' (adapté à ' reachable') → logprob: -0.0009118211455643177
    2. '               ' → logprob: -7.375911712646484
    3. ' reachable' → logprob: -8.250911712646484
    4. '           ' → logprob: -11.500911712646484
    5. '                   ' → logprob: -11.625911712646484
    6. '                       ' → logprob: -13.625911712646484
    7. '   ' → logprob: -13.750911712646484
    8. 'reach' → logprob: -13.875911712646484
    9. '       ' → logprob: -14.000911712646484
    10. 'return' → logprob: -14.875911712646484

Token 739: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0016614969354122877
    2. 'add' → logprob: -6.87666130065918
    3. '.' → logprob: -7.37666130065918
    4. ' .' → logprob: -13.87666130065918
    5. '.update' → logprob: -14.87666130065918
    6. 'Add' → logprob: -15.00166130065918
    7. '_add' → logprob: -15.50166130065918
    8. '.Add' → logprob: -15.75166130065918
    9. ':add' → logprob: -16.00166130065918
    10. ')add' → logprob: -16.00166130065918

Token 740: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0007238718098960817
    2. 'dfs' → logprob: -7.250723838806152
    3. 'd' → logprob: -11.500723838806152
    4. ' dfs' → logprob: -13.000723838806152
    5. '(' → logprob: -14.250723838806152
    6. ' (' → logprob: -14.875723838806152
    7. '(df' → logprob: -15.250723838806152
    8. '(
' → logprob: -15.875723838806152
    9. 'DFS' → logprob: -16.50072479248047
    10. '((' → logprob: -17.37572479248047

Token 741: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0030534081161022186
    2. 's' → logprob: -5.878053188323975
    3. 'dfs' → logprob: -9.003053665161133
    4. '(fs' → logprob: -9.503053665161133
    5. 'f' → logprob: -10.378053665161133
    6. 'sf' → logprob: -11.378053665161133
    7. '(d' → logprob: -12.753053665161133
    8. ' fs' → logprob: -14.003053665161133
    9. 'ds' → logprob: -14.503053665161133
    10. 'fds' → logprob: -14.628053665161133

Token 742: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.3915141355246305e-05
    2. '(' → logprob: -11.12502384185791
    3. ' (' → logprob: -11.62502384185791
    4. '(
' → logprob: -15.62502384185791
    5. ')' → logprob: -17.125024795532227
    6. 'w' → logprob: -17.250024795532227
    7. '((' → logprob: -17.750024795532227
    8. ' w' → logprob: -18.625024795532227
    9. '<w' → logprob: -20.000024795532227
    10. '	w' → logprob: -20.750024795532227

Token 743: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31328585743904114
    2. ' -' → logprob: -1.3132858276367188
    3. ',' → logprob: -11.063285827636719
    4. ' ' → logprob: -13.063285827636719
    5. 'w' → logprob: -13.813285827636719
    6. '(w' → logprob: -13.813285827636719
    7. ')' → logprob: -14.438285827636719
    8. '(' → logprob: -14.438285827636719
    9. '-
' → logprob: -14.563285827636719
    10. '[' → logprob: -14.563285827636719

Token 744: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -18.250001907348633
    5. '2' → logprob: -19.750001907348633
    6. '<|end|>' → logprob: -19.875001907348633
    7. '0' → logprob: -20.750001907348633
    8. '[' → logprob: -20.750001907348633
    9. '
' → logprob: -21.375001907348633
    10. '    ' → logprob: -21.375001907348633

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.25
    4. '<|end|>' → logprob: -18.375
    5. '   ' → logprob: -18.75
    6. '
' → logprob: -19.5
    7. '`' → logprob: -19.875
    8. ',' → logprob: -19.875
    9. 'from' → logprob: -20.0625
    10. '2' → logprob: -20.25

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008819266804493964
    2. ',b' → logprob: -7.125882148742676
    3. ' ,' → logprob: -9.625882148742676
    4. 'b' → logprob: -11.750882148742676
    5. ',
' → logprob: -13.125882148742676
    6. ' b' → logprob: -14.750882148742676
    7. '`,' → logprob: -15.000882148742676
    8. ',w' → logprob: -15.375882148742676
    9. '(b' → logprob: -16.37588119506836
    10. 'w' → logprob: -16.37588119506836

Token 747: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. '(b' → logprob: -18.625045776367188
    4. '   ' → logprob: -19.500045776367188
    5. ')b' → logprob: -20.375045776367188
    6. '[b' → logprob: -20.500045776367188
    7. '	b' → logprob: -20.625045776367188
    8. '$b' → logprob: -21.125045776367188
    9. '_b' → logprob: -22.125045776367188
    10. '       ' → logprob: -22.250045776367188

Token 748: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023251652717590332
    2. ' +' → logprob: -3.773251533508301
    3. '           ' → logprob: -13.5232515335083
    4. '   ' → logprob: -13.6482515335083
    5. '       ' → logprob: -14.0232515335083
    6. '+
' → logprob: -14.0232515335083
    7. '               ' → logprob: -14.3982515335083
    8. '+)' → logprob: -14.5232515335083
    9. ')' → logprob: -14.7732515335083
    10. '                   ' → logprob: -15.8982515335083

Token 749: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.375
    4. '0' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '+' → logprob: -21.375
    7. ')' → logprob: -21.75
    8. '[' → logprob: -21.875
    9. '       ' → logprob: -22.25
    10. '  ' → logprob: -22.5

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -20.125
    4. '0' → logprob: -20.875
    5. '```' → logprob: -20.875
    6. ')' → logprob: -22.375
    7. '+' → logprob: -22.625
    8. '<|end|>' → logprob: -23.75
    9. '[' → logprob: -23.875
    10. '
' → logprob: -24.3125

Token 751: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006379772676154971
    2. ')' → logprob: -7.500638008117676
    3. '               ' → logprob: -10.375638008117676
    4. '           ' → logprob: -10.500638008117676
    5. '))
' → logprob: -10.625638008117676
    6. '                   ' → logprob: -14.125638008117676
    7. '))

' → logprob: -14.875638008117676
    8. ')))' → logprob: -15.125638008117676
    9. ' ))' → logprob: -15.250638008117676
    10. '       ' → logprob: -15.875638008117676

Token 752: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44034209847450256
    2. '
' → logprob: -1.1903420686721802
    3. '       ' → logprob: -3.1903421878814697
    4. '   ' → logprob: -4.815341949462891
    5. '```' → logprob: -6.315341949462891
    6. '        
' → logprob: -8.56534194946289
    7. '    
' → logprob: -8.69034194946289
    8. '
' → logprob: -8.94034194946289
    9. '            
' → logprob: -8.94034194946289
    10. 'mex' → logprob: -9.06534194946289

Token 753: ' #' (ID: 1069)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.7859669923782349
    2. '       ' → logprob: -0.9109669923782349
    3. 'return' → logprob: -2.0359668731689453
    4. '           ' → logprob: -5.410966873168945
    5. '   ' → logprob: -5.410966873168945
    6. '```' → logprob: -7.035966873168945
    7. 'if' → logprob: -7.535966873168945
    8. 'grund' → logprob: -7.535966873168945
    9. 'm' → logprob: -8.660966873168945
    10. 'memo' → logprob: -9.035966873168945

Token 754: ' mex' (ID: 32410)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.0006684751133434474
    2. '   ' → logprob: -7.750668525695801
    3. 'def' → logprob: -9.1256685256958
    4. '       ' → logprob: -10.6256685256958
    5. 'm' → logprob: -10.7506685256958
    6. 'grund' → logprob: -10.8756685256958
    7. '#' → logprob: -11.5006685256958
    8. 'return' → logprob: -11.5006685256958
    9. 'mx' → logprob: -12.0006685256958
    10. 'for' → logprob: -12.0006685256958

Token 755: ' calculation' (ID: 40722)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22284099459648132
    2. '=' → logprob: -1.8478410243988037
    3. '(' → logprob: -3.8478410243988037
    4. '(
' → logprob: -4.597840785980225
    5. '   ' → logprob: -5.847840785980225
    6. '           ' → logprob: -6.472840785980225
    7. '_value' → logprob: -6.722840785980225
    8. '       ' → logprob: -6.847840785980225
    9. ' (' → logprob: -7.097840785980225
    10. '_val' → logprob: -7.597840785980225

Token 756: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4789237082004547
    2. '       ' → logprob: -1.1039236783981323
    3. '   ' → logprob: -3.353923797607422
    4. 'return' → logprob: -4.978923797607422
    5. 'mex' → logprob: -6.228923797607422
    6. '0' → logprob: -7.103923797607422
    7. '```' → logprob: -7.103923797607422
    8. '
' → logprob: -7.603923797607422
    9. 'result' → logprob: -8.103923797607422
    10. '``' → logprob: -8.228923797607422

Token 757: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5252928137779236
    2. '           ' → logprob: -1.0252928733825684
    3. '   ' → logprob: -3.0252928733825684
    4. '
' → logprob: -7.900292873382568
    5. '```' → logprob: -7.900292873382568
    6. 'return' → logprob: -8.90029239654541
    7. 'mex' → logprob: -9.15029239654541
    8. 'result' → logprob: -9.27529239654541
    9. '``' → logprob: -10.27529239654541
    10. 'i' → logprob: -10.40029239654541

Token 758: ' g' (ID: 329)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.40840938687324524
    2. '       ' → logprob: -1.6584093570709229
    3. '   ' → logprob: -2.408409357070923
    4. 'i' → logprob: -3.658409357070923
    5. 'm' → logprob: -3.783409357070923
    6. '0' → logprob: -5.908409595489502
    7. '           ' → logprob: -6.658409595489502
    8. 'next' → logprob: -7.533409595489502
    9. 'x' → logprob: -8.533409118652344
    10. 'result' → logprob: -8.658409118652344

Token 759: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31834733486175537
    2. ' =' → logprob: -1.3183473348617554
    3. '=g' → logprob: -5.443347454071045
    4. 'g' → logprob: -8.693346977233887
    5. '   ' → logprob: -8.943346977233887
    6. '=set' → logprob: -9.068346977233887
    7. '       ' → logprob: -9.318346977233887
    8. 'o' → logprob: -10.193346977233887
    9. '=
' → logprob: -10.693346977233887
    10. '=int' → logprob: -10.943346977233887

Token 760: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022006903309375048
    2. ' ' → logprob: -6.127200603485107
    3. '   ' → logprob: -11.252201080322266
    4. '  ' → logprob: -13.627201080322266
    5. '{' → logprob: -13.877201080322266
    6. 'min' → logprob: -15.877201080322266
    7. '1' → logprob: -16.877201080322266
    8. '    ' → logprob: -16.877201080322266
    9. '     ' → logprob: -17.252201080322266
    10. '```' → logprob: -17.252201080322266

Token 761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'min' → logprob: -15.62500286102295
    4. '{' → logprob: -15.75000286102295
    5. 'next' → logprob: -17.500003814697266
    6. '
' → logprob: -18.000003814697266
    7. '{}
' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '```' → logprob: -19.125003814697266
    10. '1' → logprob: -19.125003814697266

Token 762: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9084010720252991
    2. '           ' → logprob: -1.1584010124206543
    3. ' while' → logprob: -1.2834010124206543
    4. '
' → logprob: -5.783401012420654
    5. '       ' → logprob: -6.408401012420654
    6. '	while' → logprob: -7.533401012420654
    7. 'While' → logprob: -9.283401489257812
    8. '   ' → logprob: -9.658401489257812
    9. '		' → logprob: -10.033401489257812
    10. '               ' → logprob: -10.283401489257812

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20440857112407684
    2. ' while' → logprob: -2.329408645629883
    3. 'while' → logprob: -2.454408645629883
    4. '
' → logprob: -7.079408645629883
    5. '       ' → logprob: -7.954408645629883
    6. '	while' → logprob: -8.454408645629883
    7. '```' → logprob: -9.704408645629883
    8. 'While' → logprob: -10.204408645629883
    9. '   ' → logprob: -10.579408645629883
    10. '		' → logprob: -10.954408645629883

Token 764: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0660012811422348
    2. ' while' → logprob: -2.8160011768341064
    3. '           ' → logprob: -5.5660014152526855
    4. '	while' → logprob: -8.816000938415527
    5. '
' → logprob: -11.316000938415527
    6. '       ' → logprob: -11.441000938415527
    7. '            ' → logprob: -11.691000938415527
    8. 'While' → logprob: -11.816000938415527
    9. '            
' → logprob: -12.566000938415527
    10. '```' → logprob: -13.566000938415527

Token 765: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.002475777640938759
    2. ' g' → logprob: -6.002475738525391
    3. '	g' → logprob: -16.62747573852539
    4. 'True' → logprob: -16.87747573852539
    5. '   ' → logprob: -17.62747573852539
    6. '_g' → logprob: -18.75247573852539
    7. '(g' → logprob: -18.87747573852539
    8. ' ' → logprob: -18.87747573852539
    9. ' ' → logprob: -18.87747573852539
    10. ' True' → logprob: -19.12747573852539

Token 766: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34850290417671204
    2. 'in' → logprob: -1.2235028743743896
    3. 'g' → logprob: -10.223503112792969
    4. ' ' → logprob: -12.348503112792969
    5. ' g' → logprob: -12.473503112792969
    6. '0' → logprob: -12.723503112792969
    7. '
' → logprob: -13.223503112792969
    8. '	in' → logprob: -13.723503112792969
    9. ')' → logprob: -13.848503112792969
    10. 'i' → logprob: -13.973503112792969

Token 767: ' reachable' (ID: 143580)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -5.157039049663581e-05
    2. ' reachable' → logprob: -9.875051498413086
    3. 'reach' → logprob: -17.000051498413086
    4. 'read' → logprob: -19.000051498413086
    5. 'ready' → logprob: -19.125051498413086
    6. 'accessible' → logprob: -20.375051498413086
    7. '
' → logprob: -20.500051498413086
    8. '   ' → logprob: -20.750051498413086
    9. ' ' → logprob: -21.250051498413086
    10. 'visible' → logprob: -21.375051498413086

Token 768: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14410202205181122
    2. ':
' → logprob: -2.019102096557617
    3. 'g' → logprob: -6.894102096557617
    4. ':g' → logprob: -8.019102096557617
    5. '):
' → logprob: -11.519102096557617
    6. '   ' → logprob: -11.519102096557617
    7. '+' → logprob: -11.644102096557617
    8. '           ' → logprob: -12.019102096557617
    9. ' g' → logprob: -12.019102096557617
    10. ':return' → logprob: -12.144102096557617

Token 769: '               ' (ID: 506)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06060913950204849
    2. '               ' → logprob: -3.0606091022491455
    3. ' g' → logprob: -4.810609340667725
    4. '           ' → logprob: -6.060609340667725
    5. '   ' → logprob: -6.935609340667725
    6. '```' → logprob: -7.810609340667725
    7. '+' → logprob: -11.060608863830566
    8. '       ' → logprob: -11.185608863830566
    9. '``' → logprob: -11.310608863830566
    10. '                   ' → logprob: -11.685608863830566

Token 770: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0011858227662742138
    2. ' g' → logprob: -6.751185894012451
    3. '               ' → logprob: -11.501185417175293
    4. '           ' → logprob: -12.626185417175293
    5. '   ' → logprob: -13.251185417175293
    6. '	g' → logprob: -15.626185417175293
    7. '                   ' → logprob: -16.00118637084961
    8. '```' → logprob: -16.37618637084961
    9. '       ' → logprob: -17.75118637084961
    10. '_g' → logprob: -17.87618637084961

Token 771: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0040835049003362656
    2. ' +=' → logprob: -5.504083633422852
    3. '=' → logprob: -12.879083633422852
    4. '+' → logprob: -13.379083633422852
    5. 'g' → logprob: -14.379083633422852
    6. ']+=' → logprob: -14.879083633422852
    7. '+="' → logprob: -18.50408363342285
    8. '+='' → logprob: -19.00408363342285
    9. '	' → logprob: -19.12908363342285
    10. '   ' → logprob: -19.12908363342285

Token 772: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.87502670288086
    4. '```' → logprob: -21.12502670288086
    5. '0' → logprob: -22.37502670288086
    6. '  ' → logprob: -22.50002670288086
    7. ' ' → logprob: -23.18752670288086
    8. '۱' → logprob: -23.18752670288086
    9. '`' → logprob: -23.43752670288086
    10. '１' → logprob: -23.75002670288086

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -25.25
    4. '   ' → logprob: -25.375
    5. '
' → logprob: -26.375
    6. '۱' → logprob: -26.5
    7. '１' → logprob: -26.875
    8. '0' → logprob: -27.25
    9. '`' → logprob: -28.0
    10. '१' → logprob: -28.375

Token 774: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06469117105007172
    2. 'return' → logprob: -3.0646910667419434
    3. ' return' → logprob: -4.564691066741943
    4. '
' → logprob: -5.439691066741943
    5. '       ' → logprob: -8.189691543579102
    6. '<|end|>' → logprob: -8.439691543579102
    7. ':return' → logprob: -8.564691543579102
    8. '	return' → logprob: -8.814691543579102
    9. '		' → logprob: -8.939691543579102
    10. '@return' → logprob: -10.439691543579102

Token 775: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032544774003326893
    2. ' return' → logprob: -6.503254413604736
    3. 'return' → logprob: -6.503254413604736
    4. '       ' → logprob: -8.878254890441895
    5. '
' → logprob: -9.503254890441895
    6. '		' → logprob: -11.503254890441895
    7. '	return' → logprob: -11.878254890441895
    8. '               ' → logprob: -11.878254890441895
    9. '<|end|>' → logprob: -13.003254890441895
    10. '   ' → logprob: -13.253254890441895

Token 776: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5981925129890442
    2. '           ' → logprob: -0.8481925129890442
    3. ' return' → logprob: -3.8481924533843994
    4. '       ' → logprob: -7.3481926918029785
    5. '   ' → logprob: -10.22319221496582
    6. '               ' → logprob: -12.97319221496582
    7. '{return' → logprob: -13.09819221496582
    8. ':return' → logprob: -13.34819221496582
    9. '	return' → logprob: -13.72319221496582
    10. '
' → logprob: -14.34819221496582

Token 777: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00020354038861114532
    2. ' g' → logprob: -8.500203132629395
    3. '	g' → logprob: -21.00020408630371
    4. '_g' → logprob: -23.25020408630371
    5. ' ' → logprob: -23.75020408630371
    6. ''g' → logprob: -24.12520408630371
    7. '*g' → logprob: -25.50020408630371
    8. 'г' → logprob: -25.75020408630371
    9. ' г' → logprob: -25.87520408630371
    10. '.g' → logprob: -25.87520408630371

Token 778: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004911619704216719
    2. '<|end|>' → logprob: -6.129911422729492
    3. '
' → logprob: -6.254911422729492
    4. 'return' → logprob: -7.379911422729492
    5. '   ' → logprob: -9.879911422729492
    6. 'Stone' → logprob: -10.254911422729492
    7. '<|end|>' → logprob: -10.379911422729492
    8. '        
' → logprob: -10.504911422729492
    9. '           ' → logprob: -12.379911422729492
    10. ' Stone' → logprob: -12.379911422729492

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002833053469657898
    2. 'return' → logprob: -5.877832889556885
    3. '           ' → logprob: -11.377833366394043
    4. '   ' → logprob: -12.127833366394043
    5. '
' → logprob: -12.127833366394043
    6. '        
' → logprob: -12.627833366394043
    7. ' return' → logprob: -13.127833366394043
    8. '	return' → logprob: -15.377833366394043
    9. '    
' → logprob: -15.877833366394043
    10. '      ' → logprob: -16.377832412719727

Token 780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4742516577243805
    2. '       ' → logprob: -0.9742516279220581
    3. ' return' → logprob: -8.849251747131348
    4. '   ' → logprob: -10.599251747131348
    5. '
' → logprob: -12.224251747131348
    6. '	return' → logprob: -14.599251747131348
    7. '        
' → logprob: -14.849251747131348
    8. '           ' → logprob: -15.474251747131348
    9. '{return' → logprob: -15.974251747131348
    10. '```' → logprob: -16.97425079345703

Token 781: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0012067806674167514
    2. ' dfs' → logprob: -6.751206874847412
    3. 'self' → logprob: -10.876206398010254
    4. 'df' → logprob: -11.001206398010254
    5. 'dfa' → logprob: -15.126206398010254
    6. 'd' → logprob: -15.751206398010254
    7. ' self' → logprob: -15.876206398010254
    8. 'dsl' → logprob: -16.00120735168457
    9. 'ds' → logprob: -16.50120735168457
    10. 'DFS' → logprob: -16.62620735168457

Token 782: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6777756214141846
    2. '(w' → logprob: -1.0527756214141846
    3. '<|end|>' → logprob: -2.3027756214141846
    4. '.' → logprob: -3.6777756214141846
    5. ')' → logprob: -6.3027753829956055
    6. '(self' → logprob: -6.4277753829956055
    7. '<|end|>' → logprob: -6.5527753829956055
    8. '(None' → logprob: -6.5527753829956055
    9. ' Stone' → logprob: -6.6777753829956055
    10. ' (' → logprob: -6.8027753829956055

Token 783: '.white' (ID: 28729)
  Prédit: '.white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.white' → logprob: -6.749814019713085e-06
    2. 'white' → logprob: -12.000006675720215
    3. '.' → logprob: -14.875006675720215
    4. '.w' → logprob: -16.25000762939453
    5. '.wh' → logprob: -17.00000762939453
    6. '.White' → logprob: -17.37500762939453
    7. ' .' → logprob: -18.00000762939453
    8. ' white' → logprob: -18.75000762939453
    9. '白' → logprob: -18.75000762939453
    10. '.black' → logprob: -19.50000762939453

Token 784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ',self' → logprob: -12.125009536743164
    3. ' ,' → logprob: -12.500009536743164
    4. ',
' → logprob: -15.625009536743164
    5. 'self' → logprob: -16.375009536743164
    6. ')' → logprob: -18.750009536743164
    7. '‌,' → logprob: -19.875009536743164
    8. '   ' → logprob: -19.875009536743164
    9. '<|end|>' → logprob: -20.125009536743164
    10. '       ' → logprob: -20.375009536743164

Token 785: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '       ' → logprob: -18.500036239624023
    4. '(self' → logprob: -20.125036239624023
    5. '   ' → logprob: -20.375036239624023
    6. '[self' → logprob: -21.125036239624023
    7. '           ' → logprob: -21.875036239624023
    8. '	self' → logprob: -22.000036239624023
    9. '     ' → logprob: -22.375036239624023
    10. ' ' → logprob: -23.125036239624023

Token 786: '.black' (ID: 38464)
  Prédit: '.black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.black' → logprob: -1.1756367712223437e-05
    2. 'black' → logprob: -11.500011444091797
    3. '.' → logprob: -13.875011444091797
    4. '.white' → logprob: -14.375011444091797
    5. ':black' → logprob: -17.500011444091797
    6. '._' → logprob: -17.625011444091797
    7. '_black' → logprob: -18.375011444091797
    8. '黑' → logprob: -19.125011444091797
    9. '.BLACK' → logprob: -19.375011444091797
    10. '.Black' → logprob: -19.500011444091797

Token 787: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.250000953674316
    3. ' )' → logprob: -16.125
    4. '))' → logprob: -17.625
    5. ')return' → logprob: -18.0
    6. '   ' → logprob: -18.375
    7. '}' → logprob: -18.375
    8. ')}' → logprob: -18.625
    9. ')#' → logprob: -18.625
    10. '),' → logprob: -18.75

Token 788: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 789: ' Stone' (ID: 22850)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.14638109505176544
    2. 'Player' → logprob: -2.271381139755249
    3. 'Game' → logprob: -4.77138090133667
    4. 'Another' → logprob: -5.14638090133667
    5. ' Stone' → logprob: -5.27138090133667
    6. 'Solution' → logprob: -5.39638090133667
    7. 'St' → logprob: -6.52138090133667
    8. 'Two' → logprob: -6.52138090133667
    9. 'Perfect' → logprob: -7.14638090133667
    10. ' Player' → logprob: -7.27138090133667

Token 790: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -4.096126576769166e-05
    2. 'Player' → logprob: -10.875041007995605
    3. '<Game' → logprob: -11.500041007995605
    4. '(Game' → logprob: -12.500041007995605
    5. ' Game' → logprob: -13.500041007995605
    6. 'Move' → logprob: -14.000041007995605
    7. 'Removal' → logprob: -14.125041007995605
    8. 'Pile' → logprob: -14.125041007995605
    9. '	Game' → logprob: -14.250041007995605
    10. '_Game' → logprob: -14.250041007995605

Token 791: ':
' (ID: 734)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.011098635382950306
    2. ':' → logprob: -4.511098861694336
    3. 'States' → logprob: -11.261098861694336
    4. '():' → logprob: -11.761098861694336
    5. '(State' → logprob: -11.761098861694336
    6. '{' → logprob: -12.261098861694336
    7. '<State' → logprob: -12.261098861694336
    8. ':
' → logprob: -12.886098861694336
    9. '_state' → logprob: -13.636098861694336
    10. '(' → logprob: -13.886098861694336

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071465373039245605
    2. ':' → logprob: -5.25714635848999
    3. ' def' → logprob: -7.38214635848999
    4. 'def' → logprob: -7.63214635848999
    5. '    
' → logprob: -7.75714635848999
    6. ':
' → logprob: -8.632146835327148
    7. '```' → logprob: -9.632146835327148
    8. '<|end|>' → logprob: -9.882146835327148
    9. '
' → logprob: -10.632146835327148
    10. ':def' → logprob: -11.507146835327148

Token 793: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2526382505893707
    2. 'def' (adapté à ' def') → logprob: -1.5026382207870483
    3. '   ' → logprob: -7.252638339996338
    4. 'class' → logprob: -14.75263786315918
    5. ' __' → logprob: -16.62763786315918
    6. '```' → logprob: -17.00263786315918
    7. '	def' → logprob: -17.25263786315918
    8. ' ' → logprob: -17.25263786315918
    9. 'de' → logprob: -17.50263786315918
    10. ':def' → logprob: -18.00263786315918

Token 794: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009537667036056519
    2. ' init' → logprob: -4.759537696838379
    3. '__' → logprob: -7.134537696838379
    4. 'init' → logprob: -9.509537696838379
    5. '_init' → logprob: -10.009537696838379
    6. ' ' → logprob: -14.009537696838379
    7. ' def' → logprob: -14.134537696838379
    8. 'Init' → logprob: -14.134537696838379
    9. ' ___' → logprob: -14.134537696838379
    10. ' int' → logprob: -14.259537696838379

Token 795: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.676292231422849e-05
    2. 'def' → logprob: -11.750017166137695
    3. ' init' → logprob: -12.875017166137695
    4. '```' → logprob: -12.875017166137695
    5. 'class' → logprob: -13.875017166137695
    6. 'it' → logprob: -14.000017166137695
    7. '__' → logprob: -14.125017166137695
    8. 'int' → logprob: -14.500017166137695
    9. '_init' → logprob: -15.750017166137695
    10. '   ' → logprob: -15.875017166137695

Token 796: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06456857174634933
    2. '(self' → logprob: -2.814568519592285
    3. '__' → logprob: -6.189568519592285
    4. '(' → logprob: -8.314568519592285
    5. '__(
' → logprob: -8.314568519592285
    6. '__((' → logprob: -11.064568519592285
    7. '_(' → logprob: -11.189568519592285
    8. ' (' → logprob: -11.564568519592285
    9. 'self' → logprob: -11.689568519592285
    10. '   ' → logprob: -13.564568519592285

Token 797: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.512236498361744e-07
    2. ' self' → logprob: -14.500000953674316
    3. ',' → logprob: -18.5
    4. '   ' → logprob: -19.125
    5. '(self' → logprob: -19.5
    6. ')' → logprob: -20.125
    7. '       ' → logprob: -20.75
    8. 'def' → logprob: -21.0
    9. '
' → logprob: -21.625
    10. ' ' → logprob: -22.375

Token 798: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032930902671068907
    2. 'self' → logprob: -5.753293037414551
    3. '(self' → logprob: -9.75329303741455
    4. '):' → logprob: -11.00329303741455
    5. ')' → logprob: -11.12829303741455
    6. ' ,' → logprob: -11.25329303741455
    7. '   ' → logprob: -12.37829303741455
    8. ' self' → logprob: -13.00329303741455
    9. ' (' → logprob: -13.25329303741455
    10. '(' → logprob: -13.25329303741455

Token 799: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.191489642835222e-05
    2. ' self' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.875041961669922
    4. '       ' → logprob: -14.625041961669922
    5. '(self' → logprob: -14.750041961669922
    6. '	self' → logprob: -17.125041961669922
    7. ',' → logprob: -17.875041961669922
    8. 'def' → logprob: -19.000041961669922
    9. '```' → logprob: -19.500041961669922
    10. ' ' → logprob: -19.625041961669922

Token 800: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.45242926478385925
    2. '       ' → logprob: -1.3274292945861816
    3. 'pass' → logprob: -2.4524292945861816
    4. ' self' → logprob: -4.952429294586182
    5. ' pass' → logprob: -5.202429294586182
    6. '   ' → logprob: -9.327428817749023
    7. ' ' → logprob: -12.452428817749023
    8. 'def' → logprob: -12.702428817749023
    9. 'None' → logprob: -13.327428817749023
    10. '	pass' → logprob: -13.327428817749023

Token 801: '.' (ID: 13)
  Prédit: '.states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.states' → logprob: -0.023044200614094734
    2. '._' → logprob: -4.023044109344482
    3. '_states' → logprob: -6.648044109344482
    4. '.game' → logprob: -7.148044109344482
    5. '.st' → logprob: -7.148044109344482
    6. 'states' → logprob: -7.273044109344482
    7. '.state' → logprob: -7.273044109344482
    8. 'States' → logprob: -9.39804458618164
    9. '.positions' → logprob: -9.52304458618164
    10. '.history' → logprob: -9.52304458618164

Token 802: 'areas' (ID: 69250)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4660657048225403
    2. 'memo' → logprob: -1.4660656452178955
    3. 'cache' → logprob: -2.0910656452178955
    4. 'positions' → logprob: -4.841065883636475
    5. 'state' → logprob: -5.341065883636475
    6. 'dp' → logprob: -5.841065883636475
    7. 'history' → logprob: -7.466065883636475
    8. 'games' → logprob: -7.841065883636475
    9. 'memory' → logprob: -8.466065406799316
    10. 'mem' → logprob: -8.466065406799316

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520284056663513
    2. ' =' → logprob: -1.502028465270996
    3. ':' → logprob: -9.627028465270996
    4. '=[]' → logprob: -10.377028465270996
    5. '[]' → logprob: -14.127028465270996
    6. '[' → logprob: -14.752028465270996
    7. '   ' → logprob: -15.127028465270996
    8. ' ' → logprob: -15.502028465270996
    9. '_' → logprob: -15.627028465270996
    10. '	' → logprob: -16.12702751159668

Token 804: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000835716025903821
    2. '{}' → logprob: -7.25083589553833
    3. ' []' → logprob: -9.000835418701172
    4. '[' → logprob: -13.750835418701172
    5. '[]}' → logprob: -14.000835418701172
    6. '[]
' → logprob: -14.625835418701172
    7. '[]

' → logprob: -17.000835418701172
    8. ' {}' → logprob: -17.000835418701172
    9. '[])' → logprob: -17.875835418701172
    10. '   ' → logprob: -18.000835418701172

Token 805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4623299837112427
    2. '
' → logprob: -1.4623299837112427
    3. '<|end|>' → logprob: -2.712329864501953
    4. 'def' → logprob: -3.462329864501953
    5. ' def' → logprob: -3.712329864501953
    6. '    
' → logprob: -4.837329864501953
    7. '```' → logprob: -5.837329864501953
    8. ' 
' → logprob: -6.462329864501953
    9. ' ' → logprob: -6.712329864501953
    10. '<|end|>' → logprob: -7.212329864501953

Token 806: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06197071075439453
    2. ' def' → logprob: -2.8119707107543945
    3. '   ' → logprob: -12.936970710754395
    4. '
' → logprob: -14.561970710754395
    5. 'de' → logprob: -16.311969757080078
    6. '	def' → logprob: -17.561969757080078
    7. '    
' → logprob: -18.186969757080078
    8. ' ' → logprob: -18.436969757080078
    9. ' 
' → logprob: -18.561969757080078
    10. 'd' → logprob: -19.436969757080078

Token 807: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.016073083505034447
    2. ' add' → logprob: -4.141073226928711
    3. 'append' → logprob: -11.391073226928711
    4. 'reset' → logprob: -11.641073226928711
    5. 'get' → logprob: -12.766073226928711
    6. 'play' → logprob: -12.891073226928711
    7. 'initialize' → logprob: -12.891073226928711
    8. 'create' → logprob: -13.141073226928711
    9. 'start' → logprob: -13.891073226928711
    10. 'new' → logprob: -13.891073226928711

Token 808: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -3.7146746763028204e-05
    2. '_' → logprob: -10.50003719329834
    3. '(self' → logprob: -11.75003719329834
    4. 'area' → logprob: -14.00003719329834
    5. 'Area' → logprob: -14.37503719329834
    6. '(' → logprob: -16.750036239624023
    7. '(area' → logprob: -16.750036239624023
    8. '_AREA' → logprob: -18.125036239624023
    9. '_item' → logprob: -18.500036239624023
    10. ' area' → logprob: -18.625036239624023

Token 809: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018899753922596574
    2. '(' → logprob: -8.625188827514648
    3. ' (' → logprob: -11.750188827514648
    4. '(area' → logprob: -14.250188827514648
    5. 'self' → logprob: -15.125188827514648
    6. '(s' → logprob: -15.500188827514648
    7. '_area' → logprob: -16.12518882751465
    8. ' ' → logprob: -17.37518882751465
    9. ' self' → logprob: -17.62518882751465
    10. '(
' → logprob: -17.87518882751465

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.313314952421933e-05
    2. 'self' → logprob: -9.875062942504883
    3. ' ,' → logprob: -11.875062942504883
    4. '(self' → logprob: -12.875062942504883
    5. ',self' → logprob: -13.375062942504883
    6. ')' → logprob: -15.375062942504883
    7. 's' → logprob: -15.625062942504883
    8. '‌,' → logprob: -17.125062942504883
    9. ',s' → logprob: -17.875062942504883
    10. '(' → logprob: -17.875062942504883

Token 811: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.3885376751422882
    2. ' white' → logprob: -1.1385376453399658
    3. 'w' → logprob: -6.638537883758545
    4. ' w' → logprob: -8.763537406921387
    5. ' stones' → logprob: -9.138537406921387
    6. ' area' → logprob: -10.263537406921387
    7. 'area' → logprob: -10.763537406921387
    8. 'stones' → logprob: -11.263537406921387
    9. 'stone' → logprob: -11.638537406921387
    10. ' stone' → logprob: -12.138537406921387

Token 812: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003685936564579606
    2. ':' → logprob: -5.62868595123291
    3. ':int' → logprob: -9.62868595123291
    4. ' ,' → logprob: -11.12868595123291
    5. '=' → logprob: -12.50368595123291
    6. ',int' → logprob: -13.87868595123291
    7. 'int' → logprob: -15.37868595123291
    8. ')' → logprob: -16.253684997558594
    9. '   ' → logprob: -16.378684997558594
    10. ' :' → logprob: -16.628684997558594

Token 813: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07890069484710693
    2. ' int' → logprob: -2.5789008140563965
    3. ':int' → logprob: -12.328900337219238
    4. ',' → logprob: -12.703900337219238
    5. ',int' → logprob: -13.203900337219238
    6. '(int' → logprob: -14.328900337219238
    7. '=int' → logprob: -14.703900337219238
    8. ' ' → logprob: -14.828900337219238
    9. ' ,' → logprob: -16.203901290893555
    10. '[int' → logprob: -16.828901290893555

Token 814: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',b' → logprob: -16.375003814697266
    4. '‌,' → logprob: -16.625003814697266
    5. ',int' → logprob: -18.000003814697266
    6. ',
' → logprob: -18.125003814697266
    7. '‍,' → logprob: -19.250003814697266
    8. '،' → logprob: -20.000003814697266
    9. '   ' → logprob: -20.125003814697266
    10. ')' → logprob: -20.500003814697266

Token 815: ' black' (ID: 5960)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.07888978719711304
    2. ' black' → logprob: -2.578889846801758
    3. 'Black' → logprob: -16.828889846801758
    4. '_black' → logprob: -17.578889846801758
    5. '黑' → logprob: -17.703889846801758
    6. ' ' → logprob: -18.328889846801758
    7. '.black' → logprob: -18.578889846801758
    8. 'b' → logprob: -18.578889846801758
    9. '黒' → logprob: -18.578889846801758
    10. '   ' → logprob: -18.828889846801758

Token 816: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024013902992010117
    2. ':' → logprob: -3.8990139961242676
    3. ')' → logprob: -5.899013996124268
    4. '):
' → logprob: -7.274013996124268
    5. ' ):' → logprob: -11.39901351928711
    6. ':int' → logprob: -11.64901351928711
    7. 'int' → logprob: -12.77401351928711
    8. '):
' → logprob: -13.02401351928711
    9. '):

' → logprob: -13.14901351928711
    10. '   ' → logprob: -13.27401351928711

Token 817: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009117019944824278
    2. ' int' → logprob: -7.000911712646484
    3. ':int' → logprob: -16.625911712646484
    4. '=int' → logprob: -16.750911712646484
    5. ')' → logprob: -17.375911712646484
    6. '[int' → logprob: -17.625911712646484
    7. '	int' → logprob: -18.125911712646484
    8. '(int' → logprob: -18.375911712646484
    9. '<int' → logprob: -18.625911712646484
    10. ']int' → logprob: -19.750911712646484

Token 818: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01160062663257122
    2. '):
' → logprob: -4.511600494384766
    3. ')' → logprob: -7.511600494384766
    4. '):
' → logprob: -12.136600494384766
    5. '   ' → logprob: -15.761600494384766
    6. ' ):' → logprob: -15.761600494384766
    7. '):

' → logprob: -15.886600494384766
    8. ':' → logprob: -16.011600494384766
    9. ')->' → logprob: -17.761600494384766
    10. '       ' → logprob: -17.886600494384766

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010281658032909036
    2. ' self' → logprob: -7.126028060913086
    3. 'self' → logprob: -8.751028060913086
    4. '   ' → logprob: -10.376028060913086
    5. '        
' → logprob: -11.626028060913086
    6. '<|end|>' → logprob: -12.001028060913086
    7. '	self' → logprob: -12.626028060913086
    8. '```' → logprob: -12.876028060913086
    9. ',' → logprob: -13.126028060913086
    10. '
' → logprob: -13.501028060913086

Token 820: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0382162481546402
    2. '       ' → logprob: -3.5382163524627686
    3. ' self' → logprob: -4.7882161140441895
    4. 'state' → logprob: -9.288216590881348
    5. 'area' → logprob: -12.288216590881348
    6. 'if' → logprob: -13.038216590881348
    7. 'new' → logprob: -13.788216590881348
    8. '   ' → logprob: -13.913216590881348
    9. ' state' → logprob: -14.663216590881348
    10. 'assert' → logprob: -14.663216590881348

Token 821: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.696889623621246e-06
    2. '.Areas' → logprob: -13.62500286102295
    3. 'areas' → logprob: -14.25000286102295
    4. '.add' → logprob: -15.87500286102295
    5. '.are' → logprob: -16.125001907348633
    6. ').' → logprob: -16.500001907348633
    7. '`.' → logprob: -16.500001907348633
    8. '.append' → logprob: -16.500001907348633
    9. '.area' → logprob: -16.625001907348633
    10. '```' → logprob: -16.750001907348633

Token 822: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -5.512236498361744e-07
    2. 'add' → logprob: -15.125000953674316
    3. ' areas' → logprob: -16.0
    4. '   ' → logprob: -18.0
    5. 'reas' → logprob: -18.0
    6. '_' → logprob: -18.75
    7. 'ares' → logprob: -19.125
    8. 'a' → logprob: -19.25
    9. 'are' → logprob: -19.625
    10. 'append' → logprob: -19.75

Token 823: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007104054093360901
    2. '.' → logprob: -7.250710487365723
    3. 'append' → logprob: -15.000710487365723
    4. '.app' → logprob: -16.250709533691406
    5. '.extend' → logprob: -16.625709533691406
    6. '.insert' → logprob: -18.500709533691406
    7. '.Append' → logprob: -18.625709533691406
    8. '.add' → logprob: -19.000709533691406
    9. ' .' → logprob: -19.250709533691406
    10. '_append' → logprob: -19.250709533691406

Token 824: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.939851037808694e-05
    2. '(St' → logprob: -11.250029563903809
    3. 'Stone' → logprob: -11.750029563903809
    4. '((' → logprob: -11.750029563903809
    5. '(S' → logprob: -15.375029563903809
    6. ' Stone' → logprob: -16.000028610229492
    7. '(
' → logprob: -16.750028610229492
    8. '(ST' → logprob: -16.875028610229492
    9. '(State' → logprob: -17.125028610229492
    10. ' (' → logprob: -17.250028610229492

Token 825: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -6.704273118884885e-07
    2. ' Stone' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.0
    4. 'St' → logprob: -19.5
    5. ')' → logprob: -20.125
    6. 'Stan' → logprob: -22.25
    7. 'Sto' → logprob: -22.25
    8. '       ' → logprob: -22.625
    9. 'STONE' → logprob: -23.0
    10. 'stone' → logprob: -23.0

Token 826: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: 0.0
    2. ' Game' → logprob: -17.375
    3. 'Games' → logprob: -17.375
    4. 'game' → logprob: -18.0
    5. '<Game' → logprob: -18.25
    6. '(Game' → logprob: -18.875
    7. 'Stone' → logprob: -19.25
    8. 'Gam' → logprob: -19.75
    9. '_Game' → logprob: -19.875
    10. '	Game' → logprob: -20.0

Token 827: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.9361264946837764e-07
    2. 'Sta' → logprob: -17.0
    3. 'state' → logprob: -17.5
    4. 'St' → logprob: -18.0
    5. '_state' → logprob: -18.25
    6. 'Area' → logprob: -18.5
    7. '_State' → logprob: -18.625
    8. '(' → logprob: -19.0
    9. 'Stat' → logprob: -19.125
    10. '_STATE' → logprob: -19.625

Token 828: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. ')' → logprob: -10.000067710876465
    3. '(
' → logprob: -11.375067710876465
    4. ' (' → logprob: -11.625067710876465
    5. '((' → logprob: -14.375067710876465
    6. '(w' → logprob: -14.500067710876465
    7. ')(' → logprob: -14.500067710876465
    8. '(

' → logprob: -16.75006866455078
    9. '("("' → logprob: -17.37506866455078
    10. ').' → logprob: -17.62506866455078

Token 829: 'white' (ID: 9988)
  Prédit: 'white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -6.2729995988775045e-06
    2. ' white' → logprob: -12.000006675720215
    3. '白' → logprob: -19.6250057220459
    4. 'wh' → logprob: -19.6250057220459
    5. '   ' → logprob: -20.0000057220459
    6. ')' → logprob: -20.3750057220459
    7. '.white' → logprob: -20.8750057220459
    8. '       ' → logprob: -21.5000057220459
    9. '_white' → logprob: -21.6250057220459
    10. ':white' → logprob: -21.8750057220459

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',
' → logprob: -15.750017166137695
    4. '=' → logprob: -16.125017166137695
    5. ',b' → logprob: -17.625017166137695
    6. '‌,' → logprob: -18.000017166137695
    7. ')' → logprob: -18.375017166137695
    8. '<|end|>' → logprob: -18.500017166137695
    9. ',int' → logprob: -18.750017166137695
    10. '   ' → logprob: -19.500017166137695

Token 831: ' black' (ID: 5960)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.02975071594119072
    2. ' black' → logprob: -3.5297508239746094
    3. ' ' → logprob: -17.15475082397461
    4. '   ' → logprob: -17.40475082397461
    5. 'b' → logprob: -17.52975082397461
    6. '       ' → logprob: -17.90475082397461
    7. 'Black' → logprob: -18.02975082397461
    8. ':black' → logprob: -18.15475082397461
    9. '黑' → logprob: -18.77975082397461
    10. '     ' → logprob: -18.77975082397461

Token 832: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029752686619758606
    2. ')' → logprob: -3.529752731323242
    3. ')))' → logprob: -13.779752731323242
    4. '))
' → logprob: -14.154752731323242
    5. ')
' → logprob: -16.404752731323242
    6. ' ))' → logprob: -16.529752731323242
    7. '),' → logprob: -16.654752731323242
    8. '));' → logprob: -17.779752731323242
    9. '))

' → logprob: -18.279752731323242
    10. ').' → logprob: -18.404752731323242

Token 833: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5850235223770142
    2. '   ' → logprob: -1.0850235223770142
    3. 'def' → logprob: -2.5850234031677246
    4. '<|end|>' → logprob: -3.8350234031677246
    5. '    
' → logprob: -5.585023403167725
    6. ' def' → logprob: -6.210023403167725
    7. '<|end|>' → logprob: -6.960023403167725
    8. '	def' → logprob: -7.460023403167725
    9. '```' → logprob: -8.335023880004883
    10. '  
' → logprob: -8.460023880004883

Token 834: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. 'de' → logprob: -19.375001907348633
    4. 'from' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '
' → logprob: -20.875001907348633
    7. '	def' → logprob: -21.250001907348633
    8. '```' → logprob: -22.125001907348633
    9. 'd' → logprob: -22.375001907348633
    10. 'ndef' → logprob: -23.125001907348633

Token 835: ' winner' (ID: 19499)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -1.5203362703323364
    2. 'winner' → logprob: -1.7703362703323364
    3. 'can' → logprob: -2.270336151123047
    4. 'total' → logprob: -2.520336151123047
    5. 'is' → logprob: -2.645336151123047
    6. ' winner' → logprob: -3.020336151123047
    7. 'get' → logprob: -3.270336151123047
    8. ' can' → logprob: -3.270336151123047
    9. 'calculate' → logprob: -3.270336151123047
    10. ' grund' → logprob: -3.270336151123047

Token 836: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020210994989611208
    2. '(' → logprob: -8.625202178955078
    3. '_(' → logprob: -11.125202178955078
    4. ' (' → logprob: -12.375202178955078
    5. 'self' → logprob: -13.500202178955078
    6. '_' → logprob: -13.750202178955078
    7. '(s' → logprob: -14.625202178955078
    8. 's' → logprob: -16.125202178955078
    9. '__(' → logprob: -16.375202178955078
    10. '()(' → logprob: -16.500202178955078

Token 837: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026914136484265327
    2. 'self' → logprob: -4.276914119720459
    3. ')(' → logprob: -4.526914119720459
    4. '(' → logprob: -7.151914119720459
    5. ')' → logprob: -7.526914119720459
    6. '_(' → logprob: -8.776914596557617
    7. 'def' → logprob: -9.276914596557617
    8. 's' → logprob: -9.776914596557617
    9. '_' → logprob: -9.901914596557617
    10. ')(
' → logprob: -10.401914596557617

Token 838: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.360996485454962e-05
    2. ' ->' → logprob: -11.0000638961792
    3. 'self' → logprob: -11.1250638961792
    4. '->' → logprob: -11.3750638961792
    5. '(' → logprob: -11.5000638961792
    6. ':' → logprob: -12.6250638961792
    7. '       ' → logprob: -13.0000638961792
    8. '   ' → logprob: -13.0000638961792
    9. ' self' → logprob: -14.1250638961792
    10. ' (' → logprob: -14.7500638961792

Token 839: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20515166223049164
    2. 'int' → logprob: -1.7051516771316528
    3. ' str' → logprob: -5.705151557922363
    4. ' int' → logprob: -7.830151557922363
    5. '[str' → logprob: -13.455151557922363
    6. ' ' → logprob: -14.580151557922363
    7. '[int' → logprob: -14.580151557922363
    8. '(str' → logprob: -14.580151557922363
    9. '(int' → logprob: -14.705151557922363
    10. 'Str' → logprob: -15.205151557922363

Token 840: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1311771273612976
    2. '(' → logprob: -3.1311771869659424
    3. ':
' → logprob: -3.5061771869659424
    4. '(
' → logprob: -3.8811771869659424
    5. '(self' → logprob: -4.131176948547363
    6. '():' → logprob: -5.006176948547363
    7. '():
' → logprob: -5.506176948547363
    8. '       ' → logprob: -7.756176948547363
    9. '<|end|>' → logprob: -8.131176948547363
    10. '   ' → logprob: -8.256176948547363

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11479395627975464
    2. '
' → logprob: -2.2397940158843994
    3. '0' → logprob: -6.86479377746582
    4. '\' → logprob: -8.98979377746582
    5. '   ' → logprob: -9.11479377746582
    6. 'n' → logprob: -9.36479377746582
    7. '1' → logprob: -9.48979377746582
    8. '\n' → logprob: -9.48979377746582
    9. '    
' → logprob: -9.98979377746582
    10. 'result' → logprob: -9.98979377746582

Token 842: ' #' (ID: 1069)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2465403825044632
    2. 'result' → logprob: -1.7465404272079468
    3. 'res' → logprob: -3.9965403079986572
    4. '       ' → logprob: -4.121540546417236
    5. 'nim' → logprob: -5.621540546417236
    6. 'g' → logprob: -5.746540546417236
    7. '   ' → logprob: -6.996540546417236
    8. 'grund' → logprob: -7.371540546417236
    9. 'x' → logprob: -7.496540546417236
    10. 'from' → logprob: -8.496540069580078

Token 843: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4944033622741699
    2. 'result' → logprob: -1.86940336227417
    3. 'nim' → logprob: -2.24440336227417
    4. '       ' → logprob: -2.61940336227417
    5. 'res' → logprob: -4.11940336227417
    6. 'g' → logprob: -4.36940336227417
    7. 'grund' → logprob: -4.49440336227417
    8. 'x' → logprob: -5.36940336227417
    9. ' xor' → logprob: -5.86940336227417
    10. ' result' → logprob: -5.99440336227417

Token 844: ' grund' (ID: 34475)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08499003946781158
    2. 'xor' → logprob: -3.3349900245666504
    3. ' result' → logprob: -3.9599900245666504
    4. 'res' → logprob: -4.20999002456665
    5. '0' → logprob: -5.58499002456665
    6. 'grund' → logprob: -6.20999002456665
    7. '       ' → logprob: -6.45999002456665
    8. 'g' → logprob: -6.95999002456665
    9. 'value' → logprob: -7.58499002456665
    10. ' grund' → logprob: -7.58499002456665

Token 845: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0030597075819969177
    2. '       ' → logprob: -6.1280598640441895
    3. 'ying' → logprob: -9.003059387207031
    4. 'iy' → logprob: -9.128059387207031
    5. 'y's' → logprob: -9.128059387207031
    6. 'ie' → logprob: -9.253059387207031
    7. 'py' → logprob: -9.503059387207031
    8. 'ies' → logprob: -9.753059387207031
    9. '   ' → logprob: -9.753059387207031
    10. ' y' → logprob: -10.003059387207031

Token 846: ' numbers' (ID: 8663)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -1.5774914026260376
    2. 'value' → logprob: -1.7024914026260376
    3. '_value' → logprob: -2.077491283416748
    4. ' value' → logprob: -2.327491283416748
    5. ' =' → logprob: -2.452491283416748
    6. '       ' → logprob: -2.702491283416748
    7. '   ' → logprob: -3.202491283416748
    8. '=' → logprob: -3.452491283416748
    9. 's' → logprob: -3.452491283416748
    10. ':' → logprob: -3.827491283416748

Token 847: ' of' (ID: 328)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3092995285987854
    2. '       ' → logprob: -1.8092994689941406
    3. ' result' → logprob: -2.9342994689941406
    4. '(' → logprob: -4.059299468994141
    5. 'xor' → logprob: -5.059299468994141
    6. '(result' → logprob: -5.434299468994141
    7. 'g' → logprob: -5.934299468994141
    8. ' =' → logprob: -6.059299468994141
    9. '=' → logprob: -6.434299468994141
    10. ' of' → logprob: -6.684299468994141

Token 848: ' all' (ID: 722)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.008296353742480278
    2. 'state' → logprob: -5.383296489715576
    3. '(area' → logprob: -6.133296489715576
    4. '[' → logprob: -7.258296489715576
    5. '[state' → logprob: -7.758296489715576
    6. ' area' → logprob: -8.758296012878418
    7. 'a' → logprob: -9.383296012878418
    8. 'areas' → logprob: -10.383296012878418
    9. '(state' → logprob: -10.383296012878418
    10. 'all' → logprob: -11.133296012878418

Token 849: ' areas' (ID: 6723)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.19641278684139252
    2. 'areas' → logprob: -1.8214128017425537
    3. 'self' → logprob: -4.946412563323975
    4. 'state' → logprob: -5.446412563323975
    5. ' area' → logprob: -5.821412563323975
    6. ' areas' → logprob: -7.071412563323975
    7. '(area' → logprob: -7.196412563323975
    8. 'states' → logprob: -8.196413040161133
    9. '(self' → logprob: -8.821413040161133
    10. '(' → logprob: -10.446413040161133

Token 850: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07871175557374954
    2. 'result' → logprob: -2.828711748123169
    3. '
' → logprob: -5.453711986541748
    4. 'xor' → logprob: -5.828711986541748
    5. 'n' → logprob: -6.453711986541748
    6. ' result' → logprob: -6.578711986541748
    7. 'x' → logprob: -6.703711986541748
    8. '(' → logprob: -7.203711986541748
    9. '   ' → logprob: -7.328711986541748
    10. 's' → logprob: -7.328711986541748

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06076573207974434
    2. 'result' → logprob: -3.0607657432556152
    3. '
' → logprob: -5.310765743255615
    4. 'xor' → logprob: -5.685765743255615
    5. 'x' → logprob: -7.310765743255615
    6. ' result' → logprob: -7.685765743255615
    7. 'n' → logprob: -7.810765743255615
    8. 'gr' → logprob: -8.060765266418457
    9. '```' → logprob: -8.185765266418457
    10. 'res' → logprob: -8.185765266418457

Token 852: ' nim' (ID: 26845)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4047531187534332
    2. 'g' → logprob: -2.2797532081604004
    3. 'xor' → logprob: -2.2797532081604004
    4. 'res' → logprob: -2.5297532081604004
    5. '       ' → logprob: -3.1547532081604004
    6. 'grund' → logprob: -6.2797532081604
    7. 'x' → logprob: -6.4047532081604
    8. 'nim' (adapté à ' nim') → logprob: -7.0297532081604
    9. '   ' → logprob: -8.404752731323242
    10. 'r' → logprob: -8.404752731323242

Token 853: '_sum' (ID: 29859)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.20485536754131317
    2. ' =' → logprob: -2.954855442047119
    3. '=' → logprob: -3.204855442047119
    4. '_sum' → logprob: -3.454855442047119
    5. 'sum' → logprob: -3.704855442047119
    6. 'xor' → logprob: -4.079855442047119
    7. '_value' → logprob: -4.579855442047119
    8. 'value' → logprob: -6.079855442047119
    9. 'my' → logprob: -6.204855442047119
    10. 'bie' → logprob: -7.454855442047119

Token 854: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868744373321533
    2. '=' → logprob: -1.1368744373321533
    3. ' ' → logprob: -13.011874198913574
    4. ' ^=' → logprob: -14.136874198913574
    5. '   ' → logprob: -15.886874198913574
    6. ' ' → logprob: -16.88687515258789
    7. '(' → logprob: -17.13687515258789
    8. '_' → logprob: -17.63687515258789
    9. '  ' → logprob: -17.76187515258789
    10. '       ' → logprob: -17.88687515258789

Token 855: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476135268807411
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.62747573852539
    4. '       ' → logprob: -17.37747573852539
    5. ' ' → logprob: -17.50247573852539
    6. '  ' → logprob: -18.50247573852539
    7. 'self' → logprob: -18.75247573852539
    8. '۰' → logprob: -18.81497573852539
    9. '=' → logprob: -19.37747573852539
    10. '    ' → logprob: -19.50247573852539

Token 856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. 'self' → logprob: -20.125
    4. '   ' → logprob: -20.625
    5. '۰' → logprob: -20.875
    6. '=' → logprob: -22.0
    7. 'zero' → logprob: -22.5625
    8. '０' → logprob: -22.625
    9. '```' → logprob: -22.6875
    10. 'sum' → logprob: -23.3125

Token 857: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04615788534283638
    2. '       ' → logprob: -3.5461578369140625
    3. '<|end|>' → logprob: -4.1711578369140625
    4. '<|end|>' → logprob: -8.296157836914062
    5. '        
' → logprob: -8.421157836914062
    6. '
' → logprob: -9.421157836914062
    7. ' 
' → logprob: -9.421157836914062
    8. '  
' → logprob: -9.796157836914062
    9. ' for' → logprob: -10.296157836914062
    10. '    
' → logprob: -11.046157836914062

Token 858: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5293518900871277
    2. '       ' → logprob: -0.9043518900871277
    3. ' for' → logprob: -5.779351711273193
    4. '<|end|>' → logprob: -7.029351711273193
    5. 'for' → logprob: -7.404351711273193
    6. '        
' → logprob: -7.779351711273193
    7. '	' → logprob: -7.904351711273193
    8. '  
' → logprob: -8.279352188110352
    9. '
' → logprob: -8.779352188110352
    10. ' 
' → logprob: -9.029352188110352

Token 859: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7439126372337341
    2. 'for' (adapté à ' for') → logprob: -0.9939126372337341
    3. '       ' → logprob: -1.868912696838379
    4. '	for' → logprob: -8.368912696838379
    5. '	' → logprob: -10.368912696838379
    6. '   ' → logprob: -10.493912696838379
    7. ' 
' → logprob: -12.118912696838379
    8. '
' → logprob: -12.118912696838379
    9. '```' → logprob: -12.243912696838379
    10. ' ' → logprob: -12.368912696838379

Token 860: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.006989934481680393
    2. ' area' → logprob: -5.0069899559021
    3. 'state' → logprob: -8.256989479064941
    4. '   ' → logprob: -11.256989479064941
    5. ' state' → logprob: -13.256989479064941
    6. ' ' → logprob: -16.256990432739258
    7. 'stone' → logprob: -16.256990432739258
    8. 'a' → logprob: -16.506990432739258
    9. 'self' → logprob: -16.506990432739258
    10. '    ' → logprob: -16.631990432739258

Token 861: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00194565299898386
    2. 'in' → logprob: -6.251945495605469
    3. '   ' → logprob: -12.001945495605469
    4. '	in' → logprob: -12.126945495605469
    5. ' ' → logprob: -13.376945495605469
    6. '  ' → logprob: -14.251945495605469
    7. '       ' → logprob: -14.501945495605469
    8. ' ' → logprob: -14.876945495605469
    9. '_' → logprob: -15.001945495605469
    10. '    ' → logprob: -15.126945495605469

Token 862: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009119403548538685
    2. ' self' → logprob: -7.000911712646484
    3. '       ' → logprob: -15.375911712646484
    4. '(self' → logprob: -15.625911712646484
    5. '[self' → logprob: -16.875911712646484
    6. '   ' → logprob: -17.375911712646484
    7. '	self' → logprob: -18.375911712646484
    8. '           ' → logprob: -19.000911712646484
    9. '=self' → logprob: -19.125911712646484
    10. '    ' → logprob: -20.375911712646484

Token 863: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.619311974034645e-05
    2. 'areas' → logprob: -10.250036239624023
    3. 'Areas' → logprob: -15.375036239624023
    4. ' .' → logprob: -15.375036239624023
    5. '.Areas' → logprob: -16.000036239624023
    6. '.
' → logprob: -16.375036239624023
    7. 's' → logprob: -17.250036239624023
    8. '.area' → logprob: -18.000036239624023
    9. '.states' → logprob: -18.000036239624023
    10. '
' → logprob: -18.500036239624023

Token 864: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -1.9361264946837764e-07
    2. ' areas' → logprob: -16.75
    3. 'add' → logprob: -17.375
    4. 'ares' → logprob: -17.75
    5. 'a' → logprob: -18.625
    6. 'ages' → logprob: -18.75
    7. '
' → logprob: -19.125
    8. '   ' → logprob: -19.375
    9. 'aren' → logprob: -19.375
    10. 'aries' → logprob: -19.625

Token 865: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2914295792579651
    2. ':' → logprob: -1.5414295196533203
    3. '           ' → logprob: -3.2914295196533203
    4. ',' → logprob: -7.54142951965332
    5. '       ' → logprob: -8.16642951965332
    6. '.' → logprob: -8.41642951965332
    7. '<|end|>' → logprob: -9.41642951965332
    8. '):
' → logprob: -9.54142951965332
    9. 'nim' → logprob: -9.79142951965332
    10. '<|end|>' → logprob: -10.04142951965332

Token 866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15770168602466583
    2. 'nim' → logprob: -2.0327017307281494
    3. ' nim' → logprob: -4.28270149230957
    4. '       ' → logprob: -7.90770149230957
    5. 'n' → logprob: -8.15770149230957
    6. '
' → logprob: -8.78270149230957
    7. '(n' → logprob: -9.53270149230957
    8. '```' → logprob: -9.90770149230957
    9. '<|end|>' → logprob: -10.40770149230957
    10. '   ' → logprob: -10.78270149230957

Token 867: ' g' (ID: 329)
  Prédit: 'nim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nim' → logprob: -0.005266599822789431
    2. ' nim' → logprob: -5.2552666664123535
    3. '           ' → logprob: -10.380266189575195
    4. 'nym' → logprob: -14.880266189575195
    5. 'n' → logprob: -15.255266189575195
    6. '       ' → logprob: -15.255266189575195
    7. 'nimi' → logprob: -16.005266189575195
    8. 'nin' → logprob: -16.255266189575195
    9. '
' → logprob: -16.380266189575195
    10. 'grund' → logprob: -16.505266189575195

Token 868: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.13989555835723877
    2. 'r' → logprob: -3.764895439147949
    3. 'sum' → logprob: -4.014895439147949
    4. '=' → logprob: -4.014895439147949
    5. 'ry' → logprob: -4.389895439147949
    6. 'rey' → logprob: -4.389895439147949
    7. ' =' → logprob: -4.764895439147949
    8. 'nim' → logprob: -4.889895439147949
    9. 'grund' → logprob: -5.139895439147949
    10. 'y' → logprob: -5.514895439147949

Token 869: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.014163747429847717
    2. ' area' → logprob: -4.264163970947266
    3. 'g' → logprob: -15.764163970947266
    4. '(area' → logprob: -17.264163970947266
    5. '           ' → logprob: -17.764163970947266
    6. ' g' → logprob: -18.889163970947266
    7. '.area' → logprob: -19.014163970947266
    8. '   ' → logprob: -19.139163970947266
    9. '_area' → logprob: -20.014163970947266
    10. ' ' → logprob: -20.264163970947266

Token 870: '.gr' (ID: 24513)
  Prédit: '.gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.gr' → logprob: -0.005514415446668863
    2. '.' → logprob: -5.255514621734619
    3. '.g' → logprob: -8.880514144897461
    4. ' .' → logprob: -9.005514144897461
    5. 'grund' → logprob: -11.755514144897461
    6. '.grad' → logprob: -13.005514144897461
    7. '.grey' → logprob: -13.505514144897461
    8. '.
' → logprob: -13.755514144897461
    9. '.white' → logprob: -14.005514144897461
    10. '.Gr' → logprob: -14.255514144897461

Token 871: 'undy' (ID: 99170)
  Prédit: 'undy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'undy' → logprob: -3.03521392197581e-05
    2. 'und' → logprob: -10.625030517578125
    3. 'andy' → logprob: -12.250030517578125
    4. 'ug' → logprob: -14.875030517578125
    5. 'udy' → logprob: -15.500030517578125
    6. 'uny' → logprob: -15.875030517578125
    7. 'u' → logprob: -16.125030517578125
    8. 'ung' → logprob: -16.125030517578125
    9. 'ound' → logprob: -17.125030517578125
    10. 'undz' → logprob: -17.250030517578125

Token 872: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000206401280593127
    2. '()
' → logprob: -8.500205993652344
    3. '())' → logprob: -13.750205993652344
    4. ' ()' → logprob: -14.500205993652344
    5. '()
' → logprob: -14.750205993652344
    6. '()`' → logprob: -15.125205993652344
    7. '()]' → logprob: -15.250205993652344
    8. '(' → logprob: -16.125205993652344
    9. '()

' → logprob: -16.375205993652344
    10. '()+' → logprob: -17.250205993652344

Token 873: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07645151019096375
    2. '(n' → logprob: -3.826451539993286
    3. '       ' → logprob: -4.076451301574707
    4. ' nim' → logprob: -4.326451301574707
    5. '
' → logprob: -4.951451301574707
    6. 'nim' → logprob: -5.201451301574707
    7. '		' → logprob: -6.076451301574707
    8. '<|end|>' → logprob: -6.701451301574707
    9. '        
' → logprob: -7.076451301574707
    10. '	n' → logprob: -7.201451301574707

Token 874: ' nim' (ID: 26845)
  Prédit: 'nim'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nim' (adapté à ' nim') → logprob: -0.03807936608791351
    2. ' nim' → logprob: -3.288079261779785
    3. '           ' → logprob: -10.288079261779785
    4. '
' → logprob: -12.913079261779785
    5. 'n' → logprob: -14.288079261779785
    6. 'nym' → logprob: -15.538079261779785
    7. '               ' → logprob: -16.1630802154541
    8. '            
' → logprob: -16.2880802154541
    9. '       ' → logprob: -16.5380802154541
    10. 'ni' → logprob: -16.6630802154541

Token 875: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0007325552869588137
    2. '_' → logprob: -7.375732421875
    3. ' _' → logprob: -10.000732421875
    4. '_s' → logprob: -10.750732421875
    5. 'sum' → logprob: -11.125732421875
    6. 'xor' → logprob: -11.500732421875
    7. 'g' → logprob: -13.125732421875
    8. '=' → logprob: -13.625732421875
    9. 'y' → logprob: -13.875732421875
    10. 'i' → logprob: -14.250732421875

Token 876: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.2821834683418274
    2. '^' → logprob: -1.4071834087371826
    3. '=' → logprob: -6.907183647155762
    4. ' ' → logprob: -11.782183647155762
    5. ' ^' → logprob: -12.032183647155762
    6. 'xor' → logprob: -12.282183647155762
    7. '^{' → logprob: -12.407183647155762
    8. '_^' → logprob: -13.157183647155762
    9. 'ˆ' → logprob: -13.532183647155762
    10. ' ' → logprob: -13.657183647155762

Token 877: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0007099286303855479
    2. ' g' → logprob: -7.2507100105285645
    3. '	g' → logprob: -22.625709533691406
    4. '_g' → logprob: -23.500709533691406
    5. ''g' → logprob: -23.500709533691406
    6. ' г' → logprob: -25.375709533691406
    7. '=g' → logprob: -25.500709533691406
    8. '.g' → logprob: -25.500709533691406
    9. '(g' → logprob: -25.875709533691406
    10. '[g' → logprob: -26.125709533691406

Token 878: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0002810007717926055
    2. '
' → logprob: -8.87528133392334
    3. '       ' → logprob: -9.00028133392334
    4. '        
' → logprob: -12.25028133392334
    5. ' 
' → logprob: -12.50028133392334
    6. '  
' → logprob: -12.62528133392334
    7. '<|end|>' → logprob: -13.12528133392334
    8. 'return' → logprob: -13.25028133392334
    9. '    
' → logprob: -14.37528133392334
    10. '

' → logprob: -14.50028133392334

Token 879: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031740766018629074
    2. '       ' → logprob: -3.531740665435791
    3. '
' → logprob: -7.156740665435791
    4. 'return' → logprob: -7.406740665435791
    5. '        
' → logprob: -8.90674114227295
    6. '  
' → logprob: -9.28174114227295
    7. '	return' → logprob: -9.53174114227295
    8. '	' → logprob: -9.78174114227295
    9. ' return' → logprob: -10.03174114227295
    10. ' 
' → logprob: -10.03174114227295

Token 880: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1371898204088211
    2. '       ' → logprob: -2.1371898651123047
    3. ' return' → logprob: -4.637189865112305
    4. '
' → logprob: -7.762189865112305
    5. 'if' → logprob: -9.637189865112305
    6. '   ' → logprob: -11.137189865112305
    7. '	return' → logprob: -11.637189865112305
    8. ' if' → logprob: -11.887189865112305
    9. '```' → logprob: -13.387189865112305
    10. '        
' → logprob: -14.387189865112305

Token 881: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13233183324337006
    2. 'if' → logprob: -2.1323318481445312
    3. '       ' → logprob: -5.632331848144531
    4. ' return' → logprob: -6.632331848144531
    5. ' if' → logprob: -7.632331848144531
    6. '#' → logprob: -12.632331848144531
    7. '
' → logprob: -13.507331848144531
    8. 'If' → logprob: -14.257331848144531
    9. '```' → logprob: -14.507331848144531
    10. '   ' → logprob: -14.757331848144531

Token 882: '0' (ID: 15)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023405728861689568
    2. 'if' → logprob: -3.7734057903289795
    3. '       ' → logprob: -9.023406028747559
    4. ' return' → logprob: -10.398406028747559
    5. '1' → logprob: -12.023406028747559
    6. ' if' → logprob: -13.773406028747559
    7. '
' → logprob: -14.273406028747559
    8. '0' → logprob: -14.523406028747559
    9. '```' → logprob: -15.398406028747559
    10. '#' → logprob: -15.898406028747559

Token 883: ' means' (ID: 4748)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.028701115399599075
    2. ' return' → logprob: -4.278701305389404
    3. 'if' → logprob: -5.028701305389404
    4. 'return' → logprob: -5.653701305389404
    5. '
' → logprob: -6.028701305389404
    6. ':return' → logprob: -7.153701305389404
    7. ' ' → logprob: -7.903701305389404
    8. '<|end|>' → logprob: -8.028700828552246
    9. ':' → logprob: -9.528700828552246
    10. 'If' → logprob: -9.528700828552246

Token 884: ' first' (ID: 1577)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005043286830186844
    2. '1' → logprob: -5.3800435066223145
    3. ' ' → logprob: -7.8800435066223145
    4. '0' → logprob: -11.130043029785156
    5. '   ' → logprob: -11.130043029785156
    6. 'player' → logprob: -12.255043029785156
    7. 'Player' → logprob: -13.005043029785156
    8. ' player' → logprob: -13.130043029785156
    9. 'self' → logprob: -13.630043029785156
    10. ' Player' → logprob: -14.005043029785156

Token 885: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.30279919505119324
    2. 'player' → logprob: -1.5527992248535156
    3. '_player' → logprob: -3.0527992248535156
    4. '-player' → logprob: -6.302799224853516
    5. '_' → logprob: -8.802799224853516
    6. ' player's' → logprob: -8.927799224853516
    7. 'Player' → logprob: -9.052799224853516
    8. ' if' → logprob: -10.052799224853516
    9. ' Player' → logprob: -10.052799224853516
    10. '	player' → logprob: -11.427799224853516

Token 886: ' (' (ID: 350)
  Prédit: ' loses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.172122523188591
    2. '   ' → logprob: -3.1721224784851074
    3. 'wins' → logprob: -3.9221224784851074
    4. ' will' → logprob: -4.172122478485107
    5. ' wins' → logprob: -4.297122478485107
    6. '```' → logprob: -4.422122478485107
    7. 'lose' → logprob: -4.797122478485107
    8. 'los' → logprob: -4.797122478485107
    9. 'will' → logprob: -5.172122478485107
    10. ' has' → logprob: -5.422122478485107

Token 887: 'K' (ID: 42)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.3935509920120239
    2. ' second' → logprob: -1.268550992012024
    3. ' loses' → logprob: -3.7685508728027344
    4. 'los' → logprob: -4.143550872802734
    5. '   ' → logprob: -6.143550872802734
    6. 'lose' → logprob: -7.143550872802734
    7. ' losing' → logprob: -7.268550872802734
    8. '  ' → logprob: -8.393550872802734
    9. 'loss' → logprob: -8.518550872802734
    10. ')' → logprob: -8.768550872802734

Token 888: 'oshi' (ID: 76170)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -1.3923200368881226
    2. 'ira' → logprob: -1.7673200368881226
    3. 'er' → logprob: -2.517320156097412
    4. 'o' → logprob: -2.767320156097412
    5. 'im' → logprob: -2.767320156097412
    6. 'irst' → logprob: -2.892320156097412
    7. 'a' → logprob: -3.142320156097412
    8. 'ev' → logprob: -3.267320156097412
    9. '```' → logprob: -3.642320156097412
    10. 'ar' → logprob: -3.892320156097412

Token 889: 'ro' (ID: 298)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3147842586040497
    2. 'ro' → logprob: -2.189784288406372
    3. ' loses' → logprob: -2.814784288406372
    4. '   ' → logprob: -3.689784288406372
    5. 'ma' → logprob: -4.064784049987793
    6. 'm' → logprob: -4.564784049987793
    7. 'wins' → logprob: -5.314784049987793
    8. 'g' → logprob: -5.564784049987793
    9. '       ' → logprob: -5.939784049987793
    10. 'win' → logprob: -6.064784049987793

Token 890: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26471850275993347
    2. ' loses' → logprob: -1.5147185325622559
    3. ' wins' → logprob: -5.764718532562256
    4. 'wins' → logprob: -6.139718532562256
    5. 'los' → logprob: -6.389718532562256
    6. 'lose' → logprob: -7.264718532562256
    7. '   ' → logprob: -7.264718532562256
    8. ' is' → logprob: -7.264718532562256
    9. ' )' → logprob: -7.264718532562256
    10. ''s' → logprob: -7.514718532562256

Token 891: ' has' (ID: 853)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8052610754966736
    2. '   ' → logprob: -2.0552611351013184
    3. 'return' → logprob: -2.5552611351013184
    4. ' if' → logprob: -2.5552611351013184
    5. ' ==' → logprob: -3.0552611351013184
    6. '       ' → logprob: -3.0552611351013184
    7. '
' → logprob: -3.3052611351013184
    8. ' is' → logprob: -3.3052611351013184
    9. ' ' → logprob: -3.6802611351013184
    10. '==' → logprob: -4.055261135101318

Token 892: ' winning' (ID: 15212)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5842412114143372
    2. 'no' → logprob: -0.8342412114143372
    3. 'a' → logprob: -5.0842413902282715
    4. ' a' → logprob: -6.7092413902282715
    5. ' the' → logprob: -7.9592413902282715
    6. 'the' → logprob: -8.459240913391113
    7. 'los' → logprob: -9.334240913391113
    8. 'lost' → logprob: -9.459240913391113
    9. ' lost' → logprob: -10.459240913391113
    10. ' losing' → logprob: -10.709240913391113

Token 893: ' strategy' (ID: 10772)
  Prédit: ' chance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chance' → logprob: -1.96079683303833
    2. ' chances' → logprob: -1.96079683303833
    3. ' player' → logprob: -2.33579683303833
    4. 'chance' → logprob: -2.46079683303833
    5. 'player' → logprob: -2.71079683303833
    6. ' moves' → logprob: -2.96079683303833
    7. '_move' → logprob: -3.21079683303833
    8. 'moves' → logprob: -3.33579683303833
    9. 'move' → logprob: -3.46079683303833
    10. ' move' → logprob: -3.46079683303833

Token 894: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06566865742206573
    2. ' if' → logprob: -3.1906685829162598
    3. '       ' → logprob: -4.19066858291626
    4. ' return' → logprob: -5.69066858291626
    5. 'return' → logprob: -6.31566858291626
    6. 'if' → logprob: -7.06566858291626
    7. ' 
' → logprob: -7.44066858291626
    8. '        
' → logprob: -8.815669059753418
    9. '   ' → logprob: -9.315669059753418
    10. '
' → logprob: -9.440669059753418

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6753152012825012
    2. '
' → logprob: -1.0503151416778564
    3. ' if' → logprob: -2.0503151416778564
    4. ' return' → logprob: -5.5503153800964355
    5. 'return' → logprob: -6.0503153800964355
    6. 'if' → logprob: -6.5503153800964355
    7. '	' → logprob: -7.0503153800964355
    8. ' ' → logprob: -7.4253153800964355
    9. ',' → logprob: -7.5503153800964355
    10. '	return' → logprob: -7.6753153800964355

Token 896: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10748625546693802
    2. 'return' → logprob: -2.4824862480163574
    3. ' if' → logprob: -4.732486248016357
    4. '       ' → logprob: -4.857486248016357
    5. ' 
' → logprob: -6.607486248016357
    6. '
' → logprob: -8.732486724853516
    7. 'if' → logprob: -8.732486724853516
    8. '   ' → logprob: -10.107486724853516
    9. '	return' → logprob: -10.357486724853516
    10. ' ' → logprob: -11.107486724853516

Token 897: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22492675483226776
    2. 'return' → logprob: -1.7249267101287842
    3. '       ' → logprob: -4.474926948547363
    4. ' if' → logprob: -4.599926948547363
    5. 'if' → logprob: -6.349926948547363
    6. '
' → logprob: -10.474926948547363
    7. '   ' → logprob: -11.599926948547363
    8. '	return' → logprob: -12.724926948547363
    9. ' 
' → logprob: -13.349926948547363
    10. ' ' → logprob: -13.474926948547363

Token 898: '1' (ID: 16)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.038433320820331573
    2. 'if' → logprob: -3.288433313369751
    3. ' return' → logprob: -8.038433074951172
    4. '1' → logprob: -10.288433074951172
    5. ' if' → logprob: -11.038433074951172
    6. '   ' → logprob: -11.663433074951172
    7. '       ' → logprob: -12.413433074951172
    8. '
' → logprob: -12.538433074951172
    9. '#' → logprob: -13.663433074951172
    10. '	return' → logprob: -15.163433074951172

Token 899: ' means' (ID: 4748)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7807156443595886
    2. ' ' → logprob: -2.0307157039642334
    3. ' if' → logprob: -2.0307157039642334
    4. '0' → logprob: -2.2807157039642334
    5. 'return' → logprob: -2.7807157039642334
    6. '
' → logprob: -3.7807157039642334
    7. ' 
' → logprob: -4.030715465545654
    8. ':return' → logprob: -4.280715465545654
    9. '<|end|>' → logprob: -4.405715465545654
    10. '       ' → logprob: -4.405715465545654

Token 900: ' second' (ID: 3099)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007714516948908567
    2. ' second' → logprob: -6.257714748382568
    3. 'second' → logprob: -6.257714748382568
    4. '1' → logprob: -6.382714748382568
    5. ' ' → logprob: -6.507714748382568
    6. '0' → logprob: -7.632714748382568
    7. '   ' → logprob: -9.00771427154541
    8. 'Second' → logprob: -11.25771427154541
    9. 'def' → logprob: -11.88271427154541
    10. '       ' → logprob: -11.94521427154541

Token 901: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.2519383430480957
    2. 'player' → logprob: -2.6269383430480957
    3. ' ' → logprob: -2.7519383430480957
    4. '<|end|>' → logprob: -3.3769383430480957
    5. '_player' → logprob: -3.6269383430480957
    6. '-player' → logprob: -4.251938343048096
    7. '  ' → logprob: -5.376938343048096
    8. 'Player' → logprob: -6.751938343048096
    9. '-' → logprob: -7.251938343048096
    10. ' player's' → logprob: -7.501938343048096

Token 902: ' (' (ID: 350)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43119391798973083
    2. 'return' → logprob: -2.0561938285827637
    3. ' ' → logprob: -2.8061938285827637
    4. '       ' → logprob: -3.5561938285827637
    5. '
' → logprob: -3.9311938285827637
    6. ' player' → logprob: -4.431193828582764
    7. ' def' → logprob: -4.681193828582764
    8. ' if' → logprob: -4.806193828582764
    9. ' else' → logprob: -4.931193828582764
    10. 'def' → logprob: -5.056193828582764

Token 903: 'Uk' (ID: 39663)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.118118166923523
    2. 'Kos' → logprob: -1.868118166923523
    3. 'T' → logprob: -1.993118166923523
    4. 'Tak' → logprob: -2.4931182861328125
    5. 'A' → logprob: -3.3681182861328125
    6. 'Tom' → logprob: -3.6181182861328125
    7. 'N' → logprob: -3.8681182861328125
    8. 'Ko' → logprob: -3.9931182861328125
    9. 'Kod' → logprob: -4.6181182861328125
    10. 'M' → logprob: -4.6806182861328125

Token 904: 'iko' (ID: 7214)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.2892081141471863
    2. 'oshi' → logprob: -2.789208173751831
    3. 'e' → logprob: -2.914208173751831
    4. 'i' → logprob: -3.164208173751831
    5. 'a' → logprob: -3.289208173751831
    6. 'hiro' → logprob: -4.289207935333252
    7. '```' → logprob: -4.914207935333252
    8. 'u' → logprob: -5.164207935333252
    9. 'es' → logprob: -6.226707935333252
    10. 'im' → logprob: -6.351707935333252

Token 905: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012805217877030373
    2. ' has' → logprob: -5.512804985046387
    3. ' )' → logprob: -5.887804985046387
    4. ' ' → logprob: -6.887804985046387
    5. ''s' → logprob: -7.137804985046387
    6. 'has' → logprob: -7.762804985046387
    7. ' wins' → logprob: -8.012804985046387
    8. ' can' → logprob: -8.387804985046387
    9. ' will' → logprob: -8.512804985046387
    10. ' loses' → logprob: -8.512804985046387

Token 906: ' wins' (ID: 25327)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.776268482208252
    2. ' return' → logprob: -1.026268482208252
    3. 'return' → logprob: -2.276268482208252
    4. '
' → logprob: -3.526268482208252
    5. '       ' → logprob: -3.776268482208252
    6. 'if' → logprob: -4.276268482208252
    7. '   ' → logprob: -5.901268482208252
    8. ' ' → logprob: -6.026268482208252
    9. '	return' → logprob: -6.276268482208252
    10. ':return' → logprob: -6.401268482208252

Token 907: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012378967367112637
    2. '       ' → logprob: -4.637379169464111
    3. '
' → logprob: -7.512379169464111
    4. '        
' → logprob: -7.637379169464111
    5. ' 
' → logprob: -7.762379169464111
    6. '		
' → logprob: -8.387378692626953
    7. 'return' → logprob: -8.387378692626953
    8. '  
' → logprob: -8.762378692626953
    9. '	return' → logprob: -9.012378692626953
    10. '<|end|>' → logprob: -9.137378692626953

Token 908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1434606909751892
    2. '
' → logprob: -2.018460750579834
    3. '        
' → logprob: -8.143460273742676
    4. 'return' → logprob: -8.768460273742676
    5. '  
' → logprob: -9.143460273742676
    6. '   ' → logprob: -9.768460273742676
    7. '
' → logprob: -10.018460273742676
    8. '    
' → logprob: -10.643460273742676
    9. '	' → logprob: -10.768460273742676
    10. '<|end|>' → logprob: -10.893460273742676

Token 909: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04398609325289726
    2. 'return' (adapté à ' return') → logprob: -3.7939860820770264
    3. ' return' → logprob: -4.4189863204956055
    4. ' if' → logprob: -5.2939863204956055
    5. 'if' → logprob: -5.7939863204956055
    6. '
' → logprob: -7.9189863204956055
    7. '   ' → logprob: -10.668986320495605
    8. '```' → logprob: -11.043986320495605
    9. '	return' → logprob: -13.043986320495605
    10. ' ' → logprob: -13.293986320495605

Token 910: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24612078070640564
    2. '1' → logprob: -1.746120810508728
    3. ' ' → logprob: -3.2461206912994385
    4. 'nim' → logprob: -5.746120929718018
    5. ' nim' → logprob: -6.621120929718018
    6. 'int' → logprob: -8.74612045288086
    7. '(' → logprob: -10.49612045288086
    8. ' int' → logprob: -10.87112045288086
    9. '   ' → logprob: -11.18362045288086
    10. ' (' → logprob: -11.49612045288086

Token 911: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35069960355758667
    2. '0' → logprob: -1.2256996631622314
    3. 'nim' → logprob: -6.600699424743652
    4. 'int' → logprob: -7.225699424743652
    5. '(' → logprob: -9.350699424743652
    6. ' ' → logprob: -10.475699424743652
    7. '2' → logprob: -10.975699424743652
    8. '(n' → logprob: -11.975699424743652
    9. ' nim' → logprob: -11.975699424743652
    10. 'n' → logprob: -13.100699424743652

Token 912: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0067156096920371056
    2. 'if' → logprob: -5.006715774536133
    3. '	if' → logprob: -15.506715774536133
    4. ' ' → logprob: -16.631715774536133
    5. '
' → logprob: -18.756715774536133
    6. 'If' → logprob: -19.006715774536133
    7. ' ' → logprob: -19.256715774536133
    8. '0' → logprob: -20.131715774536133
    9. '   ' → logprob: -20.131715774536133
    10. '       ' → logprob: -20.381715774536133

Token 913: ' nim' (ID: 26845)
  Prédit: 'nim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nim' → logprob: -0.00861456897109747
    2. ' nim' → logprob: -4.758614540100098
    3. 'n' → logprob: -17.258615493774414
    4. 'nip' → logprob: -17.633615493774414
    5. 'nym' → logprob: -18.383615493774414
    6. 'nit' → logprob: -18.633615493774414
    7. 'nin' → logprob: -19.383615493774414
    8. '(n' → logprob: -19.758615493774414
    9. 'nut' → logprob: -19.883615493774414
    10. 'nir' → logprob: -19.883615493774414

Token 914: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: 0.0
    2. 'sum' → logprob: -18.625
    3. '_' → logprob: -19.75
    4. '_s' → logprob: -20.0
    5. '_sym' → logprob: -21.125
    6. 'um' → logprob: -21.125
    7. '_set' → logprob: -21.375
    8. '__' → logprob: -21.375
    9. '_SUM' → logprob: -21.625
    10. '	sum' → logprob: -21.625

Token 915: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0017261108150705695
    2. ' !=' → logprob: -6.751726150512695
    3. '==' → logprob: -7.501726150512695
    4. '()!=' → logprob: -13.876726150512695
    5. ')!=' → logprob: -14.501726150512695
    6. 'else' → logprob: -14.751726150512695
    7. '=' → logprob: -15.001726150512695
    8. '>' → logprob: -15.251726150512695
    9. ' ' → logprob: -15.501726150512695
    10. '!' → logprob: -15.501726150512695

Token 916: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.76104736328125
    4. '=' → logprob: -18.26104736328125
    5. '۰' → logprob: -20.26104736328125
    6. '```' → logprob: -20.26104736328125
    7. ' ' → logprob: -21.01104736328125
    8. '  ' → logprob: -21.32354736328125
    9. '   ' → logprob: -21.38604736328125
    10. '00' → logprob: -21.82354736328125

Token 917: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.81270408630371
    4. 'zero' → logprob: -18.87520408630371
    5. '۰' → logprob: -18.87520408630371
    6. '00' → logprob: -18.93770408630371
    7. '```' → logprob: -19.31270408630371
    8. '   ' → logprob: -19.43770408630371
    9. ' ' → logprob: -19.75020408630371
    10. '000' → logprob: -19.87520408630371

Token 918: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31326285004615784
    2. 'else' → logprob: -1.3132628202438354
    3. '	else' → logprob: -13.938262939453125
    4. '0' → logprob: -17.188262939453125
    5. '```' → logprob: -17.438262939453125
    6. '_else' → logprob: -17.688262939453125
    7. '   ' → logprob: -18.188262939453125
    8. ' ' → logprob: -18.438262939453125
    9. '
' → logprob: -18.563262939453125
    10. '[]' → logprob: -18.688262939453125

Token 919: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.125261306762695
    4. '  ' → logprob: -17.250261306762695
    5. ' ' → logprob: -18.687761306762695
    6. '```' → logprob: -18.687761306762695
    7. '１' → logprob: -19.312761306762695
    8. '0' → logprob: -19.500261306762695
    9. '    ' → logprob: -19.687761306762695
    10. '۱' → logprob: -19.750261306762695

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -20.250001907348633
    5. '0' → logprob: -20.375001907348633
    6. '１' → logprob: -20.562501907348633
    7. '  ' → logprob: -20.750001907348633
    8. '۱' → logprob: -21.000001907348633
    9. ' ' → logprob: -21.625001907348633
    10. '১' → logprob: -21.750001907348633

Token 921: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 922: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 923: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.027442464604973793
    2. ' play' → logprob: -4.277442455291748
    3. ' test' → logprob: -4.652442455291748
    4. ' solve' → logprob: -6.152442455291748
    5. ' run' → logprob: -7.402442455291748
    6. ' stone' → logprob: -7.777442455291748
    7. ' simulate' → logprob: -8.902442932128906
    8. ' example' → logprob: -9.027442932128906
    9. 'main' → logprob: -9.777442932128906
    10. ' analyze' → logprob: -9.902442932128906

Token 924: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00034940900513902307
    2. '():
' → logprob: -8.000349044799805
    3. ' ():' → logprob: -11.375349044799805
    4. '():
' → logprob: -13.750349044799805
    5. '()' → logprob: -14.125349044799805
    6. '()>' → logprob: -15.000349044799805
    7. '():

' → logprob: -16.125349044799805
    8. '(' → logprob: -16.250349044799805
    9. '()">' → logprob: -16.500349044799805
    10. '().' → logprob: -17.375349044799805

Token 925: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16647562384605408
    2. ' import' → logprob: -2.416475534439087
    3. 'import' → logprob: -3.666475534439087
    4. 'n' → logprob: -4.166475772857666
    5. ' n' → logprob: -4.541475772857666
    6. ' s' → logprob: -6.166475772857666
    7. 's' → logprob: -6.416475772857666
    8. ' lines' → logprob: -6.416475772857666
    9. '```' → logprob: -6.416475772857666
    10. ' areas' → logprob: -6.541475772857666

Token 926: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.057015560567379
    2. ' n' → logprob: -3.5570156574249268
    3. 'import' (adapté à ' import') → logprob: -3.8070156574249268
    4. 'n' → logprob: -5.807015419006348
    5. '   ' → logprob: -6.932015419006348
    6. ' t' → logprob: -7.557015419006348
    7. 't' → logprob: -8.682015419006348
    8. ' T' → logprob: -12.307015419006348
    9. '```' → logprob: -14.307015419006348
    10. 'T' → logprob: -14.432015419006348

Token 927: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.306760805164231e-05
    2. ' sys' → logprob: -11.25001335144043
    3. '=sys' → logprob: -18.75001335144043
    4. '	sys' → logprob: -20.87501335144043
    5. '(sys' → logprob: -21.00001335144043
    6. 'io' → logprob: -21.25001335144043
    7. 'stdin' → logprob: -21.50001335144043
    8. 'random' → logprob: -21.50001335144043
    9. 'math' → logprob: -21.87501335144043
    10. 'sy' → logprob: -22.25001335144043

Token 928: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35650572180747986
    2. 'input' → logprob: -1.7315057516098022
    3. '
' → logprob: -3.1065056324005127
    4. 'data' → logprob: -4.106505870819092
    5. 'for' → logprob: -4.481505870819092
    6. ' lines' → logprob: -4.606505870819092
    7. '<|end|>' → logprob: -4.606505870819092
    8. '    
' → logprob: -4.856505870819092
    9. 'def' → logprob: -5.606505870819092
    10. '(lines' → logprob: -6.106505870819092

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26882821321487427
    2. 'input' → logprob: -2.0188281536102295
    3. ' input' → logprob: -2.3938281536102295
    4. ' lines' → logprob: -5.143828392028809
    5. 'data' → logprob: -5.643828392028809
    6. 'lines' → logprob: -7.643828392028809
    7. 'n' → logprob: -7.643828392028809
    8. 'for' → logprob: -7.768828392028809
    9. ' data' → logprob: -8.018828392028809
    10. ' readline' → logprob: -8.393828392028809

Token 930: ' game' (ID: 2813)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.000111768240458332
    2. 'data' → logprob: -10.00011157989502
    3. ' input' → logprob: -10.00011157989502
    4. 'for' → logprob: -11.75011157989502
    5. 'n' → logprob: -12.00011157989502
    6. 'lines' → logprob: -12.25011157989502
    7. 't' → logprob: -13.87511157989502
    8. '   ' → logprob: -14.62511157989502
    9. 'read' → logprob: -15.12511157989502
    10. 'T' → logprob: -15.25011157989502

Token 931: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1411903202533722
    2. '=' → logprob: -2.51619029045105
    3. '   ' → logprob: -3.14119029045105
    4. '.' → logprob: -5.141190528869629
    5. '_states' → logprob: -7.766190528869629
    6. ' ' → logprob: -8.016190528869629
    7. '  ' → logprob: -8.391190528869629
    8. '    ' → logprob: -8.766190528869629
    9. '       ' → logprob: -9.391190528869629
    10. '_state' → logprob: -9.766190528869629

Token 932: ' Stone' (ID: 22850)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.01814994215965271
    2. ' Stone' → logprob: -4.0181498527526855
    3. ' stone' → logprob: -20.143150329589844
    4. 'St' → logprob: -21.018150329589844
    5. 'Rock' → logprob: -21.768150329589844
    6. 'Game' → logprob: -22.268150329589844
    7. 'Code' → logprob: -22.768150329589844
    8. ' ' → logprob: -22.768150329589844
    9. 'stone' → logprob: -23.018150329589844
    10. 'STONE' → logprob: -23.018150329589844

Token 933: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -3.128163257315464e-07
    2. '<Game' → logprob: -16.875
    3. 'game' → logprob: -17.25
    4. ' Game' → logprob: -17.625
    5. '	Game' → logprob: -17.75
    6. '_Game' → logprob: -18.25
    7. '_game' → logprob: -18.75
    8. '(Game' → logprob: -18.75
    9. '   ' → logprob: -19.125
    10. 'Games' → logprob: -19.5

Token 934: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08463378250598907
    2. '<|end|>' → logprob: -2.5846338272094727
    3. 'for' → logprob: -6.209633827209473
    4. '   ' → logprob: -7.459633827209473
    5. '<|end|>' → logprob: -7.709633827209473
    6. 'while' → logprob: -7.709633827209473
    7. '    
' → logprob: -7.959633827209473
    8. '
' → logprob: -8.084633827209473
    9. '[' → logprob: -8.209633827209473
    10. '.readline' → logprob: -8.834633827209473

Token 935: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046353306621313095
    2. 'for' → logprob: -3.546353340148926
    3. ' for' → logprob: -4.171353340148926
    4. '
' → logprob: -7.546353340148926
    5. ' lines' → logprob: -8.171353340148926
    6. '    
' → logprob: -9.296353340148926
    7. 'lines' → logprob: -10.421353340148926
    8. '```' → logprob: -10.671353340148926
    9. 'n' → logprob: -10.796353340148926
    10. 'line' → logprob: -11.171353340148926

Token 936: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5920125246047974
    2. ' for' → logprob: -1.0920125246047974
    3. '   ' → logprob: -2.592012405395508
    4. 'n' → logprob: -3.717012405395508
    5. ' n' → logprob: -4.592012405395508
    6. 'input' (adapté à ' input') → logprob: -7.342012405395508
    7. ' lines' → logprob: -7.592012405395508
    8. ' input' → logprob: -7.717012405395508
    9. 't' → logprob: -8.842012405395508
    10. 'lines' → logprob: -9.467012405395508

Token 937: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8903917670249939
    2. '_lines' → logprob: -1.0153918266296387
    3. '_data' → logprob: -1.8903918266296387
    4. '_' → logprob: -3.6403918266296387
    5. '()' → logprob: -3.7653918266296387
    6. '=' → logprob: -3.8903918266296387
    7. ' =' → logprob: -5.390391826629639
    8. 'data' → logprob: -7.265391826629639
    9. '_=' → logprob: -8.14039134979248
    10. '_text' → logprob: -8.39039134979248

Token 938: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889232039451599
    2. ' sys' → logprob: -2.578892230987549
    3. '=sys' → logprob: -13.828892707824707
    4. 'input' → logprob: -14.078892707824707
    5. '	sys' → logprob: -14.453892707824707
    6. '(sys' → logprob: -15.578892707824707
    7. ' input' → logprob: -17.95389175415039
    8. 'iter' → logprob: -18.20389175415039
    9. 'lambda' → logprob: -19.07889175415039
    10. '```' → logprob: -19.70389175415039

Token 939: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1882445067167282
    2. '.stdin' → logprob: -2.438244581222534
    3. '.' → logprob: -2.563244581222534
    4. '.stdout' → logprob: -5.063244342803955
    5. '.read' → logprob: -7.938244342803955
    6. '.readlines' → logprob: -8.688244819641113
    7. '.argv' → logprob: -9.688244819641113
    8. ' .' → logprob: -9.688244819641113
    9. '```' → logprob: -10.313244819641113
    10. '   ' → logprob: -10.563244819641113

Token 940: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00018387178715784103
    2. 'read' → logprob: -8.875184059143066
    3. '.readlines' → logprob: -11.000184059143066
    4. '.read' → logprob: -11.625184059143066
    5. '.stdin' → logprob: -12.250184059143066
    6. '_read' → logprob: -12.625184059143066
    7. '.' → logprob: -12.875184059143066
    8. 'buffer' → logprob: -13.125184059143066
    9. 'stdin' → logprob: -13.625184059143066
    10. ' readline' → logprob: -13.625184059143066

Token 941: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008236800786107779
    2. '()' → logprob: -7.500823497772217
    3. '    
' → logprob: -9.250823974609375
    4. 'while' → logprob: -9.625823974609375
    5. '()
' → logprob: -10.375823974609375
    6. '
' → logprob: -10.625823974609375
    7. ' while' → logprob: -11.125823974609375
    8. '().' → logprob: -11.250823974609375
    9. '(' → logprob: -11.875823974609375
    10. '<|end|>' → logprob: -12.000823974609375

Token 942: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011982052819803357
    2. '
' → logprob: -6.8761982917785645
    3. '    
' → logprob: -9.501197814941406
    4. 'while' → logprob: -10.001197814941406
    5. ' while' → logprob: -10.126197814941406
    6. 'n' → logprob: -13.251197814941406
    7. '```' → logprob: -14.126197814941406
    8. '  
' → logprob: -14.501197814941406
    9. '	while' → logprob: -14.751197814941406
    10. 'for' → logprob: -15.376197814941406

Token 943: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2685864567756653
    2. 't' → logprob: -2.0185863971710205
    3. '   ' → logprob: -2.5185863971710205
    4. 'T' → logprob: -4.8935866355896
    5. ' n' → logprob: -4.8935866355896
    6. 'for' → logprob: -5.6435866355896
    7. ' t' → logprob: -5.8935866355896
    8. ' T' → logprob: -8.268586158752441
    9. ' for' → logprob: -8.893586158752441
    10. 'while' → logprob: -9.018586158752441

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474174827337265
    2. '=' → logprob: -0.9741748571395874
    3. '=int' → logprob: -9.724174499511719
    4. ',' → logprob: -11.474174499511719
    5. '   ' → logprob: -11.599174499511719
    6. ' ' → logprob: -12.224174499511719
    7. '()' → logprob: -12.224174499511719
    8. '_' → logprob: -12.724174499511719
    9. '    ' → logprob: -13.974174499511719
    10. ' =
' → logprob: -13.974174499511719

Token 945: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740773141384125
    2. 'int' → logprob: -0.9740773439407349
    3. '=int' → logprob: -16.599077224731445
    4. '(int' → logprob: -16.724077224731445
    5. '[int' → logprob: -16.724077224731445
    6. ' ' → logprob: -17.099077224731445
    7. '<int' → logprob: -17.349077224731445
    8. '	int' → logprob: -18.349077224731445
    9. '   ' → logprob: -18.849077224731445
    10. 'input' → logprob: -20.224077224731445

Token 946: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011551049537956715
    2. 'input' → logprob: -7.001154899597168
    3. '(' → logprob: -8.376154899597168
    4. '()' → logprob: -11.501154899597168
    5. '(
' → logprob: -13.751154899597168
    6. '(sys' → logprob: -14.376154899597168
    7. ' (' → logprob: -14.501154899597168
    8. '=input' → logprob: -14.876154899597168
    9. ' input' → logprob: -16.001155853271484
    10. '('' → logprob: -16.626155853271484

Token 947: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.060474712401628494
    2. '()' → logprob: -3.3104746341705322
    3. '().' → logprob: -3.8104746341705322
    4. '(' → logprob: -11.310474395751953
    5. ' ())' → logprob: -11.310474395751953
    6. '())
' → logprob: -11.560474395751953
    7. '()[' → logprob: -12.560474395751953
    8. '();)' → logprob: -12.935474395751953
    9. ')' → logprob: -13.310474395751953
    10. '()]' → logprob: -13.810474395751953

Token 948: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033358655869960785
    2. ' for' → logprob: -3.533358573913574
    3. '   ' → logprob: -5.908358573913574
    4. '	for' → logprob: -7.908358573913574
    5. '<|end|>' → logprob: -8.033358573913574
    6. '
' → logprob: -8.783358573913574
    7. '    
' → logprob: -10.658358573913574
    8. '```' → logprob: -12.283358573913574
    9. ' 
' → logprob: -13.158358573913574
    10. '  
' → logprob: -13.408358573913574

Token 949: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00618402985855937
    2. ' for' → logprob: -5.131184101104736
    3. '	for' → logprob: -9.131183624267578
    4. '
' → logprob: -9.381183624267578
    5. '   ' → logprob: -9.756183624267578
    6. '    
' → logprob: -13.256183624267578
    7. ' 
' → logprob: -14.006183624267578
    8. '<|end|>' → logprob: -14.006183624267578
    9. '```' → logprob: -14.756183624267578
    10. '	
' → logprob: -14.881183624267578

Token 950: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012792840134352446
    2. ' _' → logprob: -6.876279354095459
    3. ' range' → logprob: -8.5012788772583
    4. 'range' → logprob: -11.2512788772583
    5. ' in' → logprob: -11.5012788772583
    6. '_range' → logprob: -11.8762788772583
    7. ' i' → logprob: -12.2512788772583
    8. '_i' → logprob: -12.8762788772583
    9. 'i' → logprob: -13.1262788772583
    10. '_n' → logprob: -13.3762788772583

Token 951: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005611348897218704
    2. ' range' → logprob: -7.500561237335205
    3. 'in' → logprob: -12.000560760498047
    4. ' in' → logprob: -13.625560760498047
    5. 'n' → logprob: -14.750560760498047
    6. '_' → logprob: -15.375560760498047
    7. ' ' → logprob: -17.250560760498047
    8. '(range' → logprob: -17.875560760498047
    9. '_range' → logprob: -18.000560760498047
    10. '   ' → logprob: -18.125560760498047

Token 952: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.339278580620885e-06
    2. ' range' → logprob: -13.000001907348633
    3. '(range' → logprob: -17.250001907348633
    4. 'input' → logprob: -17.375001907348633
    5. 'read' → logprob: -19.625001907348633
    6. '	range' → logprob: -20.000001907348633
    7. 'n' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '```' → logprob: -20.875001907348633
    10. 'r' → logprob: -21.000001907348633

Token 953: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010127831774298102
    2. '(' → logprob: -9.250101089477539
    3. 'n' → logprob: -12.375101089477539
    4. ' (' → logprob: -14.375101089477539
    5. '(int' → logprob: -15.500101089477539
    6. '(
' → logprob: -16.12510108947754
    7. ' n' → logprob: -16.50010108947754
    8. '   ' → logprob: -18.87510108947754
    9. '((' → logprob: -19.50010108947754
    10. '(num' → logprob: -20.37510108947754

Token 954: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38878321647644043
    2. '):
' → logprob: -1.1387832164764404
    3. ')' → logprob: -7.0137834548950195
    4. '   ' → logprob: -8.01378345489502
    5. ':' → logprob: -8.13878345489502
    6. ' ):' → logprob: -9.01378345489502
    7. '():
' → logprob: -9.38878345489502
    8. '):
' → logprob: -10.01378345489502
    9. ' ):
' → logprob: -10.13878345489502
    10. '():' → logprob: -10.26378345489502

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06277486681938171
    2. '   ' → logprob: -3.062774896621704
    3. ' w' → logprob: -5.062774658203125
    4. 'w' → logprob: -6.562774658203125
    5. 'tokens' → logprob: -6.812774658203125
    6. ' line' → logprob: -7.062774658203125
    7. '(w' → logprob: -7.062774658203125
    8. 'line' → logprob: -7.687774658203125
    9. ',' → logprob: -7.812774658203125
    10. '    ' → logprob: -7.937774658203125

Token 956: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7222142219543457
    2. 'w' (adapté à ' w') → logprob: -0.8472142219543457
    3. ' white' → logprob: -2.7222142219543457
    4. 'white' → logprob: -3.9722142219543457
    5. '       ' → logprob: -7.722214221954346
    6. ' whites' → logprob: -8.097213745117188
    7. ' line' → logprob: -9.097213745117188
    8. 'line' → logprob: -9.472213745117188
    9. '   ' → logprob: -9.597213745117188
    10. ' W' → logprob: -9.597213745117188

Token 957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576176106929779
    2. ',b' → logprob: -0.826176106929779
    3. 'b' → logprob: -8.576175689697266
    4. ' ,' → logprob: -9.951175689697266
    5. 's' → logprob: -16.326175689697266
    6. ' b' → logprob: -16.451175689697266
    7. ',s' → logprob: -16.576175689697266
    8. '_,' → logprob: -16.951175689697266
    9. ',int' → logprob: -17.701175689697266
    10. ',c' → logprob: -18.576175689697266

Token 958: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07888978719711304
    2. ' b' → logprob: -2.578889846801758
    3. ' ' → logprob: -18.453889846801758
    4. '_b' → logprob: -19.703889846801758
    5. '	b' → logprob: -20.828889846801758
    6. 'h' → logprob: -20.953889846801758
    7. 's' → logprob: -21.203889846801758
    8. '_' → logprob: -22.078889846801758
    9. ' ' → logprob: -22.078889846801758
    10. '*b' → logprob: -22.078889846801758

Token 959: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007606389466673136
    2. ' =' → logprob: -4.882606506347656
    3. ')' → logprob: -16.632606506347656
    4. ')=' → logprob: -17.132606506347656
    5. '＝' → logprob: -17.382606506347656
    6. '=input' → logprob: -17.632606506347656
    7. ',' → logprob: -17.882606506347656
    8. '=line' → logprob: -17.882606506347656
    9. '    ' → logprob: -18.007606506347656
    10. '=int' → logprob: -18.132606506347656

Token 960: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12693041563034058
    2. ' map' → logprob: -2.1269304752349854
    3. '	map' → logprob: -13.751930236816406
    4. '    ' → logprob: -14.751930236816406
    5. '(map' → logprob: -15.251930236816406
    6. '   ' → logprob: -15.376930236816406
    7. 'm' → logprob: -15.626930236816406
    8. 'tuple' → logprob: -16.501930236816406
    9. 'list' → logprob: -17.001930236816406
    10. '_map' → logprob: -17.376930236816406

Token 961: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023532774299383163
    2. '(input' → logprob: -3.7735328674316406
    3. 'int' → logprob: -8.89853286743164
    4. '(' → logprob: -9.52353286743164
    5. '(str' → logprob: -10.02353286743164
    6. 'input' → logprob: -10.52353286743164
    7. '(lambda' → logprob: -12.52353286743164
    8. '(list' → logprob: -14.64853286743164
    9. '(map' → logprob: -14.77353286743164
    10. '<int' → logprob: -14.89853286743164

Token 962: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.44428807497024536
    2. '(input' → logprob: -1.4442880153656006
    3. ',' → logprob: -2.3192880153656006
    4. 'input' → logprob: -3.8192880153656006
    5. ' input' → logprob: -6.19428825378418
    6. '   ' → logprob: -8.44428825378418
    7. '=input' → logprob: -8.69428825378418
    8. ')' → logprob: -9.94428825378418
    9. ' (' → logprob: -11.19428825378418
    10. ' ,' → logprob: -11.69428825378418

Token 963: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. 'int' → logprob: -19.376502990722656
    4. 'str' → logprob: -21.001502990722656
    5. '(input' → logprob: -22.001502990722656
    6. 'lambda' → logprob: -22.376502990722656
    7. '=input' → logprob: -22.626502990722656
    8. '<input' → logprob: -23.126502990722656
    9. ',input' → logprob: -23.376502990722656
    10. '	input' → logprob: -23.751502990722656

Token 964: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -18.000001907348633
    4. '()
' → logprob: -18.125001907348633
    5. '(' → logprob: -18.250001907348633
    6. '())' → logprob: -20.750001907348633
    7. '.strip' → logprob: -21.125001907348633
    8. ')' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '.split' → logprob: -21.750001907348633

Token 965: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008620012551546097
    2. 'strip' → logprob: -4.758619785308838
    3. '().' → logprob: -12.758620262145996
    4. 'rstrip' → logprob: -13.258620262145996
    5. 'read' → logprob: -14.383620262145996
    6. ' split' → logprob: -16.63361930847168
    7. '.split' → logprob: -16.75861930847168
    8. 'str' → logprob: -17.13361930847168
    9. '(split' → logprob: -18.50861930847168
    10. '.strip' → logprob: -19.13361930847168

Token 966: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.583867073059082
    2. '())' → logprob: -1.083867073059082
    3. '())
' → logprob: -2.583867073059082
    4. ')
' → logprob: -3.583867073059082
    5. '()' → logprob: -7.333867073059082
    6. '())
' → logprob: -11.083867073059082
    7. '))' → logprob: -11.208867073059082
    8. '(' → logprob: -11.958867073059082
    9. ')
' → logprob: -12.083867073059082
    10. '()
' → logprob: -12.083867073059082

Token 967: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013202552509028465
    2. '<|end|>' → logprob: -9.500131607055664
    3. '   ' → logprob: -10.125131607055664
    4. '```' → logprob: -11.500131607055664
    5. '	game' → logprob: -13.250131607055664
    6. '        
' → logprob: -14.250131607055664
    7. '[' → logprob: -14.250131607055664
    8. '           ' → logprob: -14.750131607055664
    9. '(game' → logprob: -14.750131607055664
    10. '<|end|>' → logprob: -15.000131607055664

Token 968: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.00015788905147928745
    2. ' game' → logprob: -9.375158309936523
    3. '       ' → logprob: -9.750158309936523
    4. '	game' → logprob: -11.375158309936523
    5. '   ' → logprob: -12.875158309936523
    6. '```' → logprob: -15.000158309936523
    7. '(game' → logprob: -15.250158309936523
    8. '_game' → logprob: -16.375158309936523
    9. '<|end|>' → logprob: -17.500158309936523
    10. '.game' → logprob: -17.625158309936523

Token 969: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00012356207298580557
    2. '.' → logprob: -9.000123977661133
    3. '.append' → logprob: -16.125123977661133
    4. 'add' → logprob: -17.750123977661133
    5. '.ad' → logprob: -17.875123977661133
    6. '.Add' → logprob: -18.000123977661133
    7. ' .' → logprob: -18.000123977661133
    8. '   ' → logprob: -18.250123977661133
    9. ')add' → logprob: -18.500123977661133
    10. '```' → logprob: -18.750123977661133

Token 970: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.875
    3. 'area' → logprob: -19.625
    4. '_a' → logprob: -20.375
    5. '(' → logprob: -20.625
    6. '_are' → logprob: -20.625
    7. '_AREA' → logprob: -21.125
    8. '   ' → logprob: -21.125
    9. '(_' → logprob: -21.375
    10. '_arm' → logprob: -21.75

Token 971: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. '(
' → logprob: -17.000019073486328
    4. ' (' → logprob: -18.625019073486328
    5. 'w' → logprob: -18.875019073486328
    6. '(u' → logprob: -19.500019073486328
    7. '((' → logprob: -19.625019073486328
    8. '(st' → logprob: -19.875019073486328
    9. '(v' → logprob: -20.250019073486328
    10. '(W' → logprob: -20.250019073486328

Token 972: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032240566797554493
    2. ',b' → logprob: -5.753223896026611
    3. ' ,' → logprob: -10.00322437286377
    4. ',
' → logprob: -14.00322437286377
    5. 'b' → logprob: -15.87822437286377
    6. '   ' → logprob: -16.878223419189453
    7. ')' → logprob: -17.128223419189453
    8. ' b' → logprob: -18.128223419189453
    9. '),' → logprob: -18.253223419189453
    10. '‌,' → logprob: -18.378223419189453

Token 973: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.125709533691406
    4. ')b' → logprob: -20.125709533691406
    5. ' ' → logprob: -20.250709533691406
    6. '       ' → logprob: -20.500709533691406
    7. '    ' → logprob: -21.250709533691406
    8. '	b' → logprob: -21.625709533691406
    9. '  ' → logprob: -21.750709533691406
    10. '<|end|>' → logprob: -22.125709533691406

Token 974: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.607391408877447e-05
    2. ')
' → logprob: -10.250036239624023
    3. '       ' → logprob: -15.250036239624023
    4. ' )' → logprob: -15.750036239624023
    5. '))' → logprob: -15.750036239624023
    6. '   ' → logprob: -16.750036239624023
    7. ')

' → logprob: -17.125036239624023
    8. '<|end|>' → logprob: -17.250036239624023
    9. ')
' → logprob: -17.750036239624023
    10. ')}' → logprob: -18.000036239624023

Token 975: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2894580662250519
    2. 'print' → logprob: -2.2894580364227295
    3. '   ' → logprob: -2.4144580364227295
    4. ' result' → logprob: -3.2894580364227295
    5. '
' → logprob: -4.664458274841309
    6. 'winner' → logprob: -4.664458274841309
    7. ' print' → logprob: -6.289458274841309
    8. ' winner' → logprob: -6.414458274841309
    9. '```' → logprob: -7.289458274841309
    10. 'res' → logprob: -9.289458274841309

Token 976: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008672364987432957
    2. 'result' → logprob: -4.75867223739624
    3. 'res' → logprob: -10.133672714233398
    4. '   ' → logprob: -11.633672714233398
    5. 'winner' → logprob: -12.133672714233398
    6. ' print' → logprob: -13.008672714233398
    7. 'r' → logprob: -13.883672714233398
    8. 'pr' → logprob: -15.508672714233398
    9. '```' → logprob: -15.758672714233398
    10. 'w' → logprob: -15.883672714233398

Token 977: '(game' (ID: 29509)
  Prédit: '(game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(game' → logprob: -0.011101705022156239
    2. '(' → logprob: -4.511101722717285
    3. 'game' → logprob: -9.886101722717285
    4. '((' → logprob: -13.261101722717285
    5. '0' → logprob: -14.761101722717285
    6. '()' → logprob: -15.011101722717285
    7. '('' → logprob: -15.011101722717285
    8. '(Game' → logprob: -16.51110076904297
    9. '("' → logprob: -16.76110076904297
    10. '(g' → logprob: -16.88610076904297

Token 978: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -6.988221684878226e-06
    2. ').' → logprob: -12.250006675720215
    3. ' .' → logprob: -13.625006675720215
    4. '.' → logprob: -15.000006675720215
    5. 'winner' → logprob: -15.125006675720215
    6. ')' → logprob: -15.500006675720215
    7. '`.' → logprob: -17.75000762939453
    8. ' winner' → logprob: -17.87500762939453
    9. '().' → logprob: -18.25000762939453
    10. '<w' → logprob: -18.50000762939453

Token 979: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -8.061054359131958e-06
    2. 'winner' → logprob: -11.750007629394531
    3. 'inne' → logprob: -16.75000762939453
    4. 'inn' → logprob: -17.25000762939453
    5. 'nner' → logprob: -18.00000762939453
    6. 'iner' → logprob: -18.50000762939453
    7. '_inner' → logprob: -19.12500762939453
    8. 'inners' → logprob: -19.37500762939453
    9. '.inner' → logprob: -19.62500762939453
    10. ' inner' → logprob: -19.62500762939453

Token 980: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007150543970055878
    2. '()' → logprob: -7.250715255737305
    3. '())
' → logprob: -12.250715255737305
    4. ')' → logprob: -16.125715255737305
    5. ' ())' → logprob: -16.125715255737305
    6. '()
' → logprob: -17.000715255737305
    7. '())

' → logprob: -17.750715255737305
    8. '(' → logprob: -18.750715255737305
    9. '();)' → logprob: -18.750715255737305
    10. '()))' → logprob: -18.875715255737305

Token 981: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9743012671824545e-05
    2. ' if' → logprob: -11.000020027160645
    3. '```' → logprob: -13.375020027160645
    4. '<|end|>' → logprob: -14.125020027160645
    5. 'main' → logprob: -15.125020027160645
    6. '__' → logprob: -15.500020027160645
    7. '
' → logprob: -16.000019073486328
    8. '#' → logprob: -16.375019073486328
    9. 'If' → logprob: -17.625019073486328
    10. '#if' → logprob: -17.875019073486328

Token 982: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016218038217630237
    2. ' __' → logprob: -8.750162124633789
    3. 'name' → logprob: -12.625162124633789
    4. ''' → logprob: -16.50016212463379
    5. 'True' → logprob: -16.62516212463379
    6. '_name' → logprob: -16.87516212463379
    7. '___' → logprob: -16.87516212463379
    8. '"' → logprob: -17.75016212463379
    9. '____' → logprob: -17.87516212463379
    10. 'Name' → logprob: -18.00016212463379

Token 983: 'name' (ID: 897)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6155010461807251
    2. '__' → logprob: -0.9905010461807251
    3. ' ==' → logprob: -2.7405009269714355
    4. '=="' → logprob: -4.2405009269714355
    5. '=='' → logprob: -4.7405009269714355
    6. '.__' → logprob: -8.490501403808594
    7. '__.__' → logprob: -9.615501403808594
    8. '```' → logprob: -9.615501403808594
    9. '[' → logprob: -9.990501403808594
    10. '"' → logprob: -10.740501403808594

Token 984: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.013994814362377e-05
    2. '==' → logprob: -10.25005054473877
    3. '__.__' → logprob: -11.62505054473877
    4. '=="' → logprob: -13.25005054473877
    5. ' ==' → logprob: -13.62505054473877
    6. '__["' → logprob: -14.12505054473877
    7. '__[' → logprob: -14.25005054473877
    8. '___' → logprob: -14.75005054473877
    9. '____' → logprob: -15.25005054473877
    10. '__('' → logprob: -15.62505054473877

Token 985: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2732597589492798
    2. ' ==' → logprob: -1.5232597589492798
    3. '=="' → logprob: -4.64825963973999
    4. '__' → logprob: -4.89825963973999
    5. '=='' → logprob: -5.52325963973999
    6. '==
' → logprob: -10.273260116577148
    7. '[' → logprob: -11.023260116577148
    8. '===' → logprob: -12.023260116577148
    9. '=' → logprob: -12.523260116577148
    10. '```' → logprob: -13.148260116577148

Token 986: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06197306513786316
    2. ''' → logprob: -2.8119730949401855
    3. '__' → logprob: -12.436972618103027
    4. ' "__' → logprob: -13.561972618103027
    5. ' '__' → logprob: -17.311973571777344
    6. '"class' → logprob: -18.186973571777344
    7. '"name' → logprob: -18.686973571777344
    8. ''"' → logprob: -19.061973571777344
    9. '"user' → logprob: -19.186973571777344
    10. '"<?' → logprob: -19.811973571777344

Token 987: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.007924345321953297
    2. '__' → logprob: -4.882924556732178
    3. 'name' → logprob: -8.13292407989502
    4. '"' → logprob: -11.00792407989502
    5. '__":
' → logprob: -13.13292407989502
    6. '_main' → logprob: -13.63292407989502
    7. 'built' → logprob: -13.75792407989502
    8. 'python' → logprob: -14.00792407989502
    9. ''' → logprob: -14.00792407989502
    10. ' main' → logprob: -14.25792407989502

Token 988: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01854799874126911
    2. '__' → logprob: -4.018548011779785
    3. '__':
' → logprob: -7.893548011779785
    4. '__.' → logprob: -11.518548011779785
    5. '__["' → logprob: -11.643548011779785
    6. '__.__' → logprob: -12.143548011779785
    7. '__
' → logprob: -15.018548011779785
    8. '__[' → logprob: -15.768548011779785
    9. '__",' → logprob: -16.39354705810547
    10. '__("' → logprob: -16.39354705810547

Token 989: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0032605347223579884
    2. ' main' → logprob: -5.753260612487793
    3. '	main' → logprob: -9.503260612487793
    4. '   ' → logprob: -12.128260612487793
    5. '(main' → logprob: -14.378260612487793
    6. '
' → logprob: -14.503260612487793
    7. '_main' → logprob: -14.503260612487793
    8. '    
' → logprob: -14.878260612487793
    9. '__' → logprob: -15.003260612487793
    10. ' ' → logprob: -16.128259658813477

Token 990: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -15.000000953674316
    3. '	main' → logprob: -16.375
    4. '   ' → logprob: -20.625
    5. '(main' → logprob: -21.5
    6. '.main' → logprob: -22.5
    7. '_main' → logprob: -22.875
    8. 'import' → logprob: -23.0
    9. '
' → logprob: -23.875
    10. '    
' → logprob: -25.0

Token 991: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 989
Tokens correctement prédits (1ère position, stricte): 341
Tokens correctement prédits (1ère position, avec adaptation): 366
Tokens correctement prédits (top 10): 711
Précision stricte (1ère position): 34.48%
Précision adaptée (1ère position): 37.01%
Précision (top 10): 71.89%
================================================================================
