================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def classify(v):
    if v >= 1.1:
        return 0
    elif v >= 0.6:
        return 1
    elif v >= 0.2:
        return 2
    else:
        return 3

left_counts = [0]*4
right_counts = [0]*4

for line in sys.stdin:
    if line.strip():
        l, r = map(float, line.split())
        left_counts[classify(l)] += 1
        right_counts[classify(r)] += 1

for i in range(4):
    print(left_counts[i], right_counts[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' classify' (ID: 92913)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16101029515266418
    2. '_' → logprob: -1.9110102653503418
    3. '_token' → logprob: -7.786010265350342
    4. ' (' → logprob: -9.1610107421875
    5. '_space' → logprob: -10.2860107421875
    6. '_user' → logprob: -10.2860107421875
    7. '_tokens' → logprob: -10.7860107421875
    8. '_classifier' → logprob: -11.0360107421875
    9. '_type' → logprob: -11.4110107421875
    10. '(token' → logprob: -11.4110107421875

Token 6: '):
' (ID: 1883)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24631910026073456
    2. 'alue' → logprob: -1.746319055557251
    3. 'al' → logprob: -3.746319055557251
    4. ')' → logprob: -4.74631929397583
    5. 'ariable' → logprob: -4.87131929397583
    6. '):' → logprob: -6.49631929397583
    7. '_' → logprob: -7.74631929397583
    8. 'ale' → logprob: -7.99631929397583
    9. ',' → logprob: -8.621318817138672
    10. 'e' → logprob: -8.746318817138672

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3304191529750824
    2. ':' → logprob: -1.3304191827774048
    3. '(' → logprob: -4.955419063568115
    4. ' ' → logprob: -5.455419063568115
    5. '_' → logprob: -6.580419063568115
    6. ''' → logprob: -7.330419063568115
    7. ' :' → logprob: -7.330419063568115
    8. ' if' → logprob: -7.330419063568115
    9. '    ' → logprob: -7.705419063568115
    10. 'if' → logprob: -8.080419540405273

Token 8: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3583320379257202
    2. ' if' → logprob: -1.3583320379257202
    3. 'if' (adapté à ' if') → logprob: -3.3583321571350098
    4. ' return' → logprob: -5.73333215713501
    5. ' ' → logprob: -6.35833215713501
    6. 'return' → logprob: -6.35833215713501
    7. '    ' → logprob: -7.23333215713501
    8. ':' → logprob: -7.48333215713501
    9. ' i' → logprob: -7.85833215713501
    10. '       ' → logprob: -8.858331680297852

Token 9: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0021765506826341152
    2. ' ' → logprob: -6.627176761627197
    3. 'v' → logprob: -7.627176761627197
    4. ' not' → logprob: -8.377176284790039
    5. ' isinstance' → logprob: -9.127176284790039
    6. ' len' → logprob: -11.252176284790039
    7. ' ' → logprob: -12.127176284790039
    8. ' a' → logprob: -13.752176284790039
    9. '  ' → logprob: -14.127176284790039
    10. 'not' → logprob: -14.752176284790039

Token 10: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4937319755554199
    2. ' ==' → logprob: -1.49373197555542
    3. ' >=' → logprob: -2.61873197555542
    4. ' <' → logprob: -2.99373197555542
    5. ' <=' → logprob: -4.49373197555542
    6. '==' → logprob: -4.61873197555542
    7. ' ' → logprob: -4.86873197555542
    8. '>' → logprob: -4.86873197555542
    9. ' .' → logprob: -7.11873197555542
    10. '.' → logprob: -7.11873197555542

Token 11: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6850307583808899
    2. ' ' → logprob: -0.8100307583808899
    3. '10' → logprob: -3.185030698776245
    4. '50' → logprob: -5.685030937194824
    5. '100' → logprob: -5.810030937194824
    6. '1' → logprob: -6.435030937194824
    7. '18' → logprob: -8.060030937194824
    8. '5' → logprob: -8.060030937194824
    9. '80' → logprob: -8.560030937194824
    10. '90' → logprob: -8.560030937194824

Token 12: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15004801750183105
    2. ' ' → logprob: -2.275048017501831
    3. '10' → logprob: -3.650048017501831
    4. '50' → logprob: -5.15004825592041
    5. '100' → logprob: -6.15004825592041
    6. '1' → logprob: -6.77504825592041
    7. '128' → logprob: -8.27504825592041
    8. '5' → logprob: -8.40004825592041
    9. '80' → logprob: -8.40004825592041
    10. '20' → logprob: -8.90004825592041

Token 13: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037297334522008896
    2. '0' → logprob: -3.787297248840332
    3. ' :' → logprob: -4.287297248840332
    4. '.' → logprob: -9.287297248840332
    5. ':
' → logprob: -10.287297248840332
    6. ' and' → logprob: -10.787297248840332
    7. '2' → logprob: -11.037297248840332
    8. ':return' → logprob: -11.037297248840332
    9. ' ' → logprob: -12.037297248840332
    10. '   ' → logprob: -12.662297248840332

Token 14: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003908735525328666
    2. ' ' → logprob: -7.875391006469727
    3. '5' → logprob: -11.625391006469727
    4. ':' → logprob: -14.250391006469727
    5. '.' → logprob: -14.625391006469727
    6. '```' → logprob: -15.375391006469727
    7. 'e' → logprob: -15.500391006469727
    8. '   ' → logprob: -15.875391006469727
    9. '  ' → logprob: -16.625391006469727
    10. ')' → logprob: -17.625391006469727

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027460309211164713
    2. ' :' → logprob: -6.002746105194092
    3. '0' → logprob: -9.002745628356934
    4. ':return' → logprob: -10.127745628356934
    5. '):' → logprob: -10.377745628356934
    6. ':
' → logprob: -10.877745628356934
    7. ' and' → logprob: -11.002745628356934
    8. '+:' → logprob: -11.877745628356934
    9. '>:' → logprob: -12.002745628356934
    10. '():' → logprob: -12.377745628356934

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004867499694228172
    2. ' return' → logprob: -6.3798675537109375
    3. ':' → logprob: -6.7548675537109375
    4. 'return' → logprob: -7.1298675537109375
    5. '   ' → logprob: -8.504867553710938
    6. ' :' → logprob: -8.629867553710938
    7. ':return' → logprob: -8.629867553710938
    8. '\n' → logprob: -8.754867553710938
    9. ':
' → logprob: -9.129867553710938
    10. '      ' → logprob: -10.129867553710938

Token 17: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6977596282958984
    2. 'return' (adapté à ' return') → logprob: -1.3227596282958984
    3. '       ' → logprob: -1.4477596282958984
    4. '   ' → logprob: -8.072759628295898
    5. '           ' → logprob: -8.197759628295898
    6. '```' → logprob: -9.822759628295898
    7. ' ' → logprob: -9.947759628295898
    8. ' ' → logprob: -10.947759628295898
    9. ':return' → logprob: -11.072759628295898
    10. '      ' → logprob: -11.572759628295898

Token 18: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5464596152305603
    2. ''' → logprob: -1.046459674835205
    3. ' "' → logprob: -3.171459674835205
    4. ' '' → logprob: -4.171459674835205
    5. ' ' → logprob: -5.296459674835205
    6. ' True' → logprob: -5.546459674835205
    7. '1' → logprob: -5.921459674835205
    8. 'True' → logprob: -8.046459197998047
    9. '">' → logprob: -9.546459197998047
    10. ''s' → logprob: -9.796459197998047

Token 19: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4240665137767792
    2. ''' → logprob: -1.1740665435791016
    3. '1' → logprob: -3.9240665435791016
    4. '">' → logprob: -4.799066543579102
    5. ''>' → logprob: -6.049066543579102
    6. ''A' → logprob: -6.424066543579102
    7. ''h' → logprob: -7.424066543579102
    8. '2' → logprob: -7.424066543579102
    9. '"A' → logprob: -7.424066543579102
    10. ''H' → logprob: -7.549066543579102

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6389116644859314
    2. '   ' → logprob: -0.7639116644859314
    3. '    
' → logprob: -5.888911724090576
    4. '\n' → logprob: -6.138911724090576
    5. '```' → logprob: -7.513911724090576
    6. '  
' → logprob: -8.513911247253418
    7. '
' → logprob: -8.638911247253418
    8. '   
' → logprob: -9.263911247253418
    9. 'elif' → logprob: -9.638911247253418
    10. ' elif' → logprob: -10.513911247253418

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18438397347927094
    2. '
' → logprob: -1.9343839883804321
    3. '\n' → logprob: -4.184383869171143
    4. '    
' → logprob: -5.809383869171143
    5. '```' → logprob: -6.184383869171143
    6. 'elif' → logprob: -6.309383869171143
    7. ' elif' → logprob: -7.309383869171143
    8. '
' → logprob: -8.4343843460083
    9. '  
' → logprob: -8.8093843460083
    10. ' else' → logprob: -9.4343843460083

Token 22: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2439900636672974
    2. '\n' → logprob: -1.2439900636672974
    3. '
' → logprob: -1.3689900636672974
    4. 'elif' (adapté à ' elif') → logprob: -2.118989944458008
    5. '```' → logprob: -4.243989944458008
    6. '    
' → logprob: -4.618989944458008
    7. ' elif' → logprob: -4.868989944458008
    8. 'else' → logprob: -5.368989944458008
    9. ':' → logprob: -6.368989944458008
    10. ' else' → logprob: -6.368989944458008

Token 23: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.01905900612473488
    2. 'v' → logprob: -4.644059181213379
    3. ' ' → logprob: -4.769059181213379
    4. '0' → logprob: -7.269059181213379
    5. '1' → logprob: -10.894059181213379
    6. '    ' → logprob: -11.269059181213379
    7. ' ' → logprob: -11.394059181213379
    8. '	v' → logprob: -11.644059181213379
    9. '  ' → logprob: -12.456559181213379
    10. '   ' → logprob: -12.519059181213379

Token 24: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2642635405063629
    2. ' >=' → logprob: -1.8892635107040405
    3. ' >' → logprob: -3.01426362991333
    4. ' ' → logprob: -4.01426362991333
    5. ' <=' → logprob: -4.76426362991333
    6. '<' → logprob: -5.51426362991333
    7. '>' → logprob: -7.88926362991333
    8. ' ==' → logprob: -8.014263153076172
    9. '>=' → logprob: -8.139263153076172
    10. '   ' → logprob: -9.264263153076172

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7353663444519043
    2. ' ' → logprob: -0.8603663444519043
    3. '1' → logprob: -2.3603663444519043
    4. '-' → logprob: -6.485366344451904
    5. ' -' → logprob: -6.485366344451904
    6. '2' → logprob: -9.672866821289062
    7. '.' → logprob: -10.547866821289062
    8. '9' → logprob: -10.672866821289062
    9. '5' → logprob: -10.860366821289062
    10. ' .' → logprob: -10.985366821289062

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19165365397930145
    2. '1' → logprob: -2.0666537284851074
    3. '-' → logprob: -3.3166537284851074
    4. ' ' → logprob: -4.691653728485107
    5. ' -' → logprob: -6.566653728485107
    6. '.' → logprob: -8.06665325164795
    7. '2' → logprob: -8.31665325164795
    8. '5' → logprob: -9.87915325164795
    9. '3' → logprob: -9.94165325164795
    10. '10' → logprob: -10.06665325164795

Token 27: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.758300438988954e-05
    2. ' .' → logprob: -9.500097274780273
    3. '`.' → logprob: -12.750097274780273
    4. '46' → logprob: -13.250097274780273
    5. '9' → logprob: -13.250097274780273
    6. '7' → logprob: -13.375097274780273
    7. '0' → logprob: -13.375097274780273
    8. '2' → logprob: -13.500097274780273
    9. '​.' → logprob: -13.500097274780273
    10. ' ' → logprob: -13.500097274780273

Token 28: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.9555583000183105
    2. '9' → logprob: -1.3305583000183105
    3. '7' → logprob: -2.4555583000183105
    4. '1' → logprob: -2.5805583000183105
    5. '6' → logprob: -2.5805583000183105
    6. '8' → logprob: -2.7055583000183105
    7. '3' → logprob: -4.3305583000183105
    8. '4' → logprob: -4.4555583000183105
    9. '2' → logprob: -4.8305583000183105
    10. '0' → logprob: -5.2055583000183105

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003148472751490772
    2. ':
' → logprob: -8.750314712524414
    3. '       ' → logprob: -9.125314712524414
    4. ' :' → logprob: -10.250314712524414
    5. '   ' → logprob: -12.250314712524414
    6. ' and' → logprob: -12.875314712524414
    7. '):' → logprob: -13.250314712524414
    8. ':return' → logprob: -13.250314712524414
    9. ':
' → logprob: -15.375314712524414
    10. ',' → logprob: -15.875314712524414

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038066147826611996
    2. ' return' → logprob: -6.7538065910339355
    3. 'return' → logprob: -7.0038065910339355
    4. '1' → logprob: -7.5038065910339355
    5. '4' → logprob: -7.5038065910339355
    6. '   ' → logprob: -8.503807067871094
    7. '2' → logprob: -9.003807067871094
    8. ' ' → logprob: -9.003807067871094
    9. '0' → logprob: -9.878807067871094
    10. '           ' → logprob: -10.878807067871094

Token 31: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23716481029987335
    2. '1' → logprob: -1.862164855003357
    3. 'return' (adapté à ' return') → logprob: -3.4871647357940674
    4. ' return' → logprob: -3.9871647357940674
    5. ' ' → logprob: -6.3621649742126465
    6. '2' → logprob: -6.3621649742126465
    7. '4' → logprob: -6.7371649742126465
    8. '0' → logprob: -7.3621649742126465
    9. '   ' → logprob: -7.4871649742126465
    10. '           ' → logprob: -7.6121649742126465

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1803462952375412
    2. ' ' → logprob: -1.8053462505340576
    3. '2' → logprob: -8.055346488952637
    4. '0' → logprob: -8.305346488952637
    5. '3' → logprob: -11.180346488952637
    6. '   ' → logprob: -11.305346488952637
    7. ' ' → logprob: -12.305346488952637
    8. '4' → logprob: -13.055346488952637
    9. '       ' → logprob: -13.805346488952637
    10. '  ' → logprob: -14.930346488952637

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007302287500351667
    2. '0' → logprob: -5.757302284240723
    3. ' ' → logprob: -6.132302284240723
    4. '2' → logprob: -6.257302284240723
    5. '3' → logprob: -10.882302284240723
    6. '   ' → logprob: -12.007302284240723
    7. '4' → logprob: -13.757302284240723
    8. ' ' → logprob: -15.007302284240723
    9. '  ' → logprob: -15.132302284240723
    10. '```' → logprob: -15.132302284240723

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5481051802635193
    2. '
' → logprob: -1.173105239868164
    3. '<|end|>' → logprob: -3.173105239868164
    4. ':' → logprob: -4.173105239868164
    5. '```' → logprob: -4.548105239868164
    6. 'elif' → logprob: -4.548105239868164
    7. '    
' → logprob: -5.048105239868164
    8. '0' → logprob: -5.173105239868164
    9. ')' → logprob: -5.923105239868164
    10. '\n' → logprob: -6.298105239868164

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022671823389828205
    2. 'elif' → logprob: -7.002267360687256
    3. '```' → logprob: -7.627267360687256
    4. ' else' → logprob: -8.377266883850098
    5. '    
' → logprob: -8.877266883850098
    6. 'else' → logprob: -9.002266883850098
    7. ' elif' → logprob: -9.252266883850098
    8. '	elif' → logprob: -9.502266883850098
    9. '
' → logprob: -10.377266883850098
    10. '       ' → logprob: -10.502266883850098

Token 36: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15106192231178284
    2. 'elif' (adapté à ' elif') → logprob: -2.27606201171875
    3. ':' → logprob: -4.27606201171875
    4. 'else' → logprob: -4.77606201171875
    5. ' elif' → logprob: -5.02606201171875
    6. ' else' → logprob: -5.40106201171875
    7. '       ' → logprob: -6.40106201171875
    8. ' ' → logprob: -8.15106201171875
    9. '	elif' → logprob: -8.15106201171875
    10. '```' → logprob: -8.15106201171875

Token 37: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.09191536903381348
    2. 'v' → logprob: -2.7169153690338135
    3. '0' → logprob: -4.466915130615234
    4. ' ' → logprob: -4.591915130615234
    5. ' ' → logprob: -9.216915130615234
    6. '	v' → logprob: -11.591915130615234
    7. '    ' → logprob: -12.966915130615234
    8. 's' → logprob: -13.466915130615234
    9. '1' → logprob: -13.716915130615234
    10. '<|end|>' → logprob: -13.841915130615234

Token 38: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.005192843731492758
    2. '>=' → logprob: -5.505192756652832
    3. ' ' → logprob: -6.880192756652832
    4. ' >' → logprob: -10.255192756652832
    5. ' <' → logprob: -10.505192756652832
    6. '>' → logprob: -12.255192756652832
    7. ' ' → logprob: -12.380192756652832
    8. '<|end|>' → logprob: -13.130192756652832
    9. ' ==' → logprob: -13.255192756652832
    10. '  ' → logprob: -13.255192756652832

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04305548593401909
    2. ' ' → logprob: -3.168055534362793
    3. '-' → logprob: -10.168055534362793
    4. ' -' → logprob: -11.418055534362793
    5. '4' → logprob: -13.293055534362793
    6. '3' → logprob: -13.418055534362793
    7. '1' → logprob: -13.855555534362793
    8. '2' → logprob: -13.980555534362793
    9. '   ' → logprob: -14.855555534362793
    10. '.' → logprob: -14.918055534362793

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004583326634019613
    2. ' ' → logprob: -5.629583358764648
    3. '-' → logprob: -7.004583358764648
    4. ' -' → logprob: -10.692083358764648
    5. '1' → logprob: -11.067083358764648
    6. '3' → logprob: -11.504583358764648
    7. '2' → logprob: -11.692083358764648
    8. '4' → logprob: -11.754583358764648
    9. '5' → logprob: -13.192083358764648
    10. '.' → logprob: -13.567083358764648

Token 41: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1398757123970427e-05
    2. ' .' → logprob: -12.000011444091797
    3. '<|end|>' → logprob: -14.125011444091797
    4. ' ' → logprob: -14.500011444091797
    5. '.

' → logprob: -14.500011444091797
    6. '0' → logprob: -14.500011444091797
    7. '`.' → logprob: -14.750011444091797
    8. '.
' → logprob: -14.875011444091797
    9. '4' → logprob: -15.000011444091797
    10. '3' → logprob: -15.250011444091797

Token 42: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3605039417743683
    2. '1' → logprob: -2.110503911972046
    3. '2' → logprob: -2.110503911972046
    4. '4' → logprob: -3.110503911972046
    5. '0' → logprob: -4.610504150390625
    6. '25' → logprob: -6.485504150390625
    7. '35' → logprob: -6.610504150390625
    8. '5' → logprob: -6.860504150390625
    9. '6' → logprob: -7.235504150390625
    10. '15' → logprob: -7.610504150390625

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4259644558478612e-05
    2. ' :' → logprob: -12.000014305114746
    3. ':
' → logprob: -12.250014305114746
    4. '):' → logprob: -13.500014305114746
    5. ':return' → logprob: -14.000014305114746
    6. '       ' → logprob: -14.250014305114746
    7. '   ' → logprob: -15.375014305114746
    8. ',' → logprob: -16.87501335144043
    9. ':**' → logprob: -17.62501335144043
    10. ')' → logprob: -18.00001335144043

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013290817849338055
    2. '2' → logprob: -4.888290882110596
    3. ' ' → logprob: -5.388290882110596
    4. '0' → logprob: -8.013290405273438
    5. '<|end|>' → logprob: -8.138290405273438
    6. '   ' → logprob: -8.388290405273438
    7. '4' → logprob: -9.263290405273438
    8. '1' → logprob: -9.888290405273438
    9. '    ' → logprob: -10.138290405273438
    10. ' return' → logprob: -11.138290405273438

Token 45: ' return' (ID: 622)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012845233082771301
    2. '       ' → logprob: -5.012845039367676
    3. ' ' → logprob: -5.387845039367676
    4. 'return' (adapté à ' return') → logprob: -7.012845039367676
    5. '0' → logprob: -7.637845039367676
    6. ' return' → logprob: -9.137845039367676
    7. '   ' → logprob: -10.512845039367676
    8. '1' → logprob: -11.012845039367676
    9. '3' → logprob: -13.387845039367676
    10. '```' → logprob: -13.637845039367676

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2811903953552246
    2. ' ' → logprob: -1.4061903953552246
    3. '0' → logprob: -11.031190872192383
    4. '1' → logprob: -11.281190872192383
    5. '3' → logprob: -12.031190872192383
    6. '   ' → logprob: -13.281190872192383
    7. ' ' → logprob: -13.968690872192383
    8. '  ' → logprob: -14.656190872192383
    9. '```' → logprob: -14.906190872192383
    10. '       ' → logprob: -15.468690872192383

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002692032721824944
    2. ' ' → logprob: -8.375268936157227
    3. '3' → logprob: -10.250268936157227
    4. '1' → logprob: -13.500268936157227
    5. '   ' → logprob: -14.250268936157227
    6. '0' → logprob: -15.312768936157227
    7. '       ' → logprob: -15.500268936157227
    8. '  ' → logprob: -15.687768936157227
    9. '4' → logprob: -16.250268936157227
    10. '```' → logprob: -16.437768936157227

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04970288276672363
    2. ' else' → logprob: -3.5497028827667236
    3. 'else' → logprob: -4.0497026443481445
    4. 'elif' → logprob: -7.2997026443481445
    5. '	else' → logprob: -7.5497026443481445
    6. '<|end|>' → logprob: -7.5497026443481445
    7. '       ' → logprob: -8.924702644348145
    8. ' elif' → logprob: -9.299702644348145
    9. '    
' → logprob: -9.674702644348145
    10. '  ' → logprob: -9.799702644348145

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02515031397342682
    2. 'else' → logprob: -4.150150299072266
    3. ' else' → logprob: -4.900150299072266
    4. '	else' → logprob: -7.275150299072266
    5. '```' → logprob: -7.900150299072266
    6. 'elif' → logprob: -8.775150299072266
    7. '    
' → logprob: -9.025150299072266
    8. '<|end|>' → logprob: -9.525150299072266
    9. '       ' → logprob: -9.650150299072266
    10. ' ' → logprob: -10.525150299072266

Token 50: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07828225940465927
    2. ' else' → logprob: -3.328282356262207
    3. '   ' → logprob: -3.828282356262207
    4. 'elif' → logprob: -4.078282356262207
    5. ':' → logprob: -7.703282356262207
    6. ' elif' → logprob: -9.078282356262207
    7. '	else' → logprob: -9.703282356262207
    8. 'return' → logprob: -9.703282356262207
    9. ':return' → logprob: -11.078282356262207
    10. '       ' → logprob: -11.578282356262207

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004014753212686628
    2. ':
' → logprob: -8.000401496887207
    3. ':return' → logprob: -9.750401496887207
    4. '   ' → logprob: -12.875401496887207
    5. '<|end|>' → logprob: -13.500401496887207
    6. '       ' → logprob: -13.625401496887207
    7. ' :' → logprob: -14.000401496887207
    8. '):' → logprob: -14.625401496887207
    9. ':

' → logprob: -15.000401496887207
    10. ':
' → logprob: -15.000401496887207

Token 52: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01827402412891388
    2. '       ' → logprob: -4.518273830413818
    3. ' ' → logprob: -5.143273830413818
    4. 'return' → logprob: -6.768273830413818
    5. '   ' → logprob: -8.768274307250977
    6. ' return' → logprob: -9.893274307250977
    7. '<|end|>' → logprob: -13.393274307250977
    8. '    ' → logprob: -14.018274307250977
    9. '  ' → logprob: -14.393274307250977
    10. '0' → logprob: -14.518274307250977

Token 53: ' return' (ID: 622)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3324485719203949
    2. 'return' (adapté à ' return') → logprob: -1.3324486017227173
    3. ' return' → logprob: -4.457448482513428
    4. ' ' → logprob: -5.082448482513428
    5. '0' → logprob: -7.457448482513428
    6. '       ' → logprob: -7.707448482513428
    7. '   ' → logprob: -8.957448959350586
    8. '1' → logprob: -10.207448959350586
    9. '    ' → logprob: -12.582448959350586
    10. '```' → logprob: -12.957448959350586

Token 54: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008615754544734955
    2. ' ' → logprob: -4.758615970611572
    3. '   ' → logprob: -14.758615493774414
    4. ' ' → logprob: -15.133615493774414
    5. 'None' → logprob: -15.383615493774414
    6. '  ' → logprob: -15.508615493774414
    7. '0' → logprob: -16.633615493774414
    8. '1' → logprob: -17.071115493774414
    9. '```' → logprob: -17.446115493774414
    10. '    ' → logprob: -17.946115493774414

Token 55: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.3125057220459
    4. '۳' → logprob: -18.4375057220459
    5. 'None' → logprob: -18.4375057220459
    6. '1' → logprob: -18.6875057220459
    7. '  ' → logprob: -18.8750057220459
    8. '３' → logprob: -19.2500057220459
    9. '```' → logprob: -19.3750057220459
    10. '-' → logprob: -19.5625057220459

Token 56: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8575596213340759
    2. '<|end|>' → logprob: -0.9825596213340759
    3. '\n' → logprob: -2.3575596809387207
    4. '```' → logprob: -3.2325596809387207
    5. 'def' → logprob: -4.107559680938721
    6. '#' → logprob: -4.107559680938721
    7. 'newline' → logprob: -4.357559680938721
    8. '

' → logprob: -5.482559680938721
    9. '\' → logprob: -5.732559680938721
    10. '<|end|>' → logprob: -5.857559680938721

Token 57: 'left' (ID: 4530)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.24424335360527039
    2. 'def' → logprob: -1.7442433834075928
    3. '```' → logprob: -4.619243144989014
    4. '\' → logprob: -4.869243144989014
    5. 'print' → logprob: -4.869243144989014
    6. '
' → logprob: -5.119243144989014
    7. 'import' → logprob: -5.244243144989014
    8. 'for' → logprob: -5.994243144989014
    9. 'n' → logprob: -6.994243144989014
    10. '#' → logprob: -7.619243144989014

Token 58: '_counts' (ID: 61971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7655985355377197
    2. ' =' → logprob: -1.3905985355377197
    3. 'over' → logprob: -2.6405985355377197
    4. ',' → logprob: -3.0155985355377197
    5. ')' → logprob: -3.2655985355377197
    6. '=' → logprob: -3.5155985355377197
    7. '(' → logprob: -3.7655985355377197
    8. '_space' → logprob: -3.8905985355377197
    9. '_margin' → logprob: -5.015598297119141
    10. '_parent' → logprob: -5.390598297119141

Token 59: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07995365560054779
    2. ' =' → logprob: -2.954953670501709
    3. '=' → logprob: -4.454953670501709
    4. '_' → logprob: -5.329953670501709
    5. '.' → logprob: -5.579953670501709
    6. ',' → logprob: -5.954953670501709
    7. '.setdefault' → logprob: -8.32995319366455
    8. '[]' → logprob: -8.45495319366455
    9. ')' → logprob: -8.57995319366455
    10. ' ' → logprob: -8.82995319366455

Token 60: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9948245882987976
    2. ' [' → logprob: -1.1198246479034424
    3. '[' → logprob: -1.2448246479034424
    4. ' {}' → logprob: -4.369824409484863
    5. '{' → logprob: -6.244824409484863
    6. '[]' → logprob: -7.369824409484863
    7. ' []' → logprob: -8.244824409484863
    8. ' {' → logprob: -8.869824409484863
    9. 'default' → logprob: -9.119824409484863
    10. ' defaultdict' → logprob: -9.744824409484863

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002753981971181929
    2. ' ' → logprob: -8.250275611877441
    3. ']' → logprob: -11.500275611877441
    4. '   ' → logprob: -13.250275611877441
    5. ')' → logprob: -14.250275611877441
    6. '1' → logprob: -14.625275611877441
    7. ' ]' → logprob: -14.750275611877441
    8. '10' → logprob: -15.625275611877441
    9. '  ' → logprob: -16.250274658203125
    10. ',' → logprob: -16.875274658203125

Token 62: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34935563802719116
    2. ']' → logprob: -1.224355697631836
    3. ' ]' → logprob: -7.849355697631836
    4. ' for' → logprob: -7.974355697631836
    5. ',
' → logprob: -9.724355697631836
    6. ']*' → logprob: -9.849355697631836
    7. ' ,' → logprob: -10.349355697631836
    8. ')' → logprob: -11.474355697631836
    9. 'for' → logprob: -11.849355697631836
    10. ']int' → logprob: -12.474355697631836

Token 63: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0007154120248742402
    2. '5' → logprob: -7.875715255737305
    3. '10' → logprob: -9.250715255737305
    4. ' ' → logprob: -9.875715255737305
    5. 'len' → logprob: -10.000715255737305
    6. '6' → logprob: -10.375715255737305
    7. '8' → logprob: -10.500715255737305
    8. '7' → logprob: -11.000715255737305
    9. '```' → logprob: -11.125715255737305
    10. '3' → logprob: -11.813215255737305

Token 64: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01438514981418848
    2. '
' → logprob: -4.514385223388672
    3. ' right' → logprob: -6.889385223388672
    4. '```' → logprob: -7.639385223388672
    5. 'for' → logprob: -8.264385223388672
    6. '[' → logprob: -8.264385223388672
    7. '<|end|>' → logprob: -8.389385223388672
    8. '[right' → logprob: -8.389385223388672
    9. 'left' → logprob: -8.639385223388672
    10. 'newline' → logprob: -8.764385223388672

Token 65: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0008251105318777263
    2. 'for' → logprob: -8.125824928283691
    3. ' right' → logprob: -8.500824928283691
    4. '
' → logprob: -8.875824928283691
    5. 'rig' → logprob: -10.125824928283691
    6. 'r' → logprob: -10.625824928283691
    7. 'middle' → logprob: -10.875824928283691
    8. 'left' → logprob: -11.125824928283691
    9. 'import' → logprob: -11.500824928283691
    10. '```' → logprob: -11.500824928283691

Token 66: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.0010766340419650078
    2. '_' → logprob: -6.876076698303223
    3. '_scores' → logprob: -12.001076698303223
    4. '_s' → logprob: -12.001076698303223
    5. '```' → logprob: -12.001076698303223
    6. '_c' → logprob: -12.376076698303223
    7. ' _' → logprob: -12.751076698303223
    8. ')_' → logprob: -12.751076698303223
    9. '_codes' → logprob: -13.501076698303223
    10. '_stats' → logprob: -13.876076698303223

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008624386973679066
    2. '=' → logprob: -4.75862455368042
    3. '[' → logprob: -12.383624076843262
    4. ' ' → logprob: -12.883624076843262
    5. ' =[' → logprob: -13.758624076843262
    6. ')' → logprob: -14.008624076843262
    7. ']' → logprob: -14.633624076843262
    8. '=[' → logprob: -15.258624076843262
    9. '<|end|>' → logprob: -15.508624076843262
    10. '```' → logprob: -16.508625030517578

Token 68: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4287048280239105
    2. ' [' → logprob: -1.053704857826233
    3. ' ' → logprob: -12.803705215454102
    4. ' ' → logprob: -14.803705215454102
    5. '([' → logprob: -15.928705215454102
    6. '   ' → logprob: -15.928705215454102
    7. 'left' → logprob: -16.1787052154541
    8. '[left' → logprob: -16.4287052154541
    9. ' `[' → logprob: -16.6787052154541
    10. '  ' → logprob: -16.6787052154541

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009693452157080173
    2. '4' → logprob: -7.125969409942627
    3. ' ' → logprob: -8.750968933105469
    4. '[' → logprob: -12.500968933105469
    5. ']' → logprob: -13.625968933105469
    6. '```' → logprob: -14.750968933105469
    7. ')' → logprob: -15.313468933105469
    8. '(' → logprob: -15.625968933105469
    9. ' [' → logprob: -15.750968933105469
    10. '  ' → logprob: -16.25096893310547

Token 70: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0005190743831917644
    2. '*' → logprob: -8.000518798828125
    3. ']' → logprob: -8.750518798828125
    4. '4' → logprob: -11.125518798828125
    5. ' ]' → logprob: -12.375518798828125
    6. '```' → logprob: -12.625518798828125
    7. ')*' → logprob: -13.000518798828125
    8. ' ' → logprob: -15.625518798828125
    9. ']+' → logprob: -16.125518798828125
    10. ']int' → logprob: -16.500518798828125

Token 71: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -11.125020027160645
    3. '```' → logprob: -12.750020027160645
    4. '<|end|>' → logprob: -13.500020027160645
    5. '3' → logprob: -15.437520027160645
    6. '(' → logprob: -16.18752098083496
    7. '' → logprob: -16.43752098083496
    8. '   ' → logprob: -16.56252098083496
    9. '  ' → logprob: -17.00002098083496
    10. '[' → logprob: -17.12502098083496

Token 72: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02552899345755577
    2. 'with' → logprob: -5.025528907775879
    3. '
' → logprob: -5.275528907775879
    4. 'def' → logprob: -5.775528907775879
    5. ' for' → logprob: -5.900528907775879
    6. 'n' → logprob: -6.025528907775879
    7. 'data' → logprob: -6.025528907775879
    8. 'import' → logprob: -7.525528907775879
    9. 'while' → logprob: -7.525528907775879
    10. 'left' → logprob: -8.025528907775879

Token 73: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01954602263867855
    2. 'with' → logprob: -5.019546031951904
    3. 'n' → logprob: -5.144546031951904
    4. 'def' → logprob: -5.894546031951904
    5. 'while' → logprob: -6.519546031951904
    6. 'data' → logprob: -6.644546031951904
    7. 'line' → logprob: -8.269545555114746
    8. 'import' → logprob: -8.394545555114746
    9. 'v' → logprob: -8.519545555114746
    10. ' for' → logprob: -8.519545555114746

Token 74: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12368107587099075
    2. ' i' → logprob: -3.24868106842041
    3. ' line' → logprob: -3.62368106842041
    4. ' v' → logprob: -3.99868106842041
    5. ' item' → logprob: -4.62368106842041
    6. ' value' → logprob: -4.62368106842041
    7. ' val' → logprob: -5.74868106842041
    8. ' sys' → logprob: -5.87368106842041
    9. ' word' → logprob: -6.74868106842041
    10. '  ' → logprob: -6.99868106842041

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012624543160200119
    2. 'in' → logprob: -4.387624740600586
    3. '<|end|>' → logprob: -9.887624740600586
    4. ' ' → logprob: -10.637624740600586
    5. ':' → logprob: -11.637624740600586
    6. 's' → logprob: -12.637624740600586
    7. ',' → logprob: -12.637624740600586
    8. ' =' → logprob: -12.762624740600586
    9. '[' → logprob: -12.762624740600586
    10. '<|end|>' → logprob: -13.012624740600586

Token 76: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759696960449219
    2. ' sys' → logprob: -0.8259696960449219
    3. '	sys' → logprob: -10.950969696044922
    4. '=sys' → logprob: -11.450969696044922
    5. '(sys' → logprob: -13.825969696044922
    6. 'stdin' → logprob: -15.075969696044922
    7. '```' → logprob: -15.325969696044922
    8. ' ' → logprob: -15.575969696044922
    9. 's' → logprob: -16.075969696044922
    10. ' ' → logprob: -16.200969696044922

Token 77: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0010835404973477125
    2. '.' → logprob: -6.8760833740234375
    3. ' .' → logprob: -10.751083374023438
    4. '.stdout' → logprob: -11.126083374023438
    5. '.argv' → logprob: -12.001083374023438
    6. 'stdin' → logprob: -12.751083374023438
    7. '.stderr' → logprob: -12.876083374023438
    8. '.readline' → logprob: -13.876083374023438
    9. ' stdin' → logprob: -14.501083374023438
    10. '(stdin' → logprob: -15.001083374023438

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0045898607932031155
    2. '.readline' → logprob: -5.629590034484863
    3. '.strip' → logprob: -7.379590034484863
    4. '.readlines' → logprob: -9.254590034484863
    5. '.split' → logprob: -9.504590034484863
    6. '.' → logprob: -9.754590034484863
    7. '.rstrip' → logprob: -9.754590034484863
    8. ':
' → logprob: -10.129590034484863
    9. ' :' → logprob: -11.004590034484863
    10. '():' → logprob: -12.379590034484863

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040064091444946826
    2. '    
' → logprob: -8.12540054321289
    3. ' line' → logprob: -10.12540054321289
    4. ' tokens' → logprob: -10.87540054321289
    5. ' if' → logprob: -11.75040054321289
    6. ' data' → logprob: -12.00040054321289
    7. ' token' → logprob: -12.12540054321289
    8. '```' → logprob: -12.25040054321289
    9. 'tokens' → logprob: -12.37540054321289
    10. '   ' → logprob: -12.62540054321289

Token 80: ' if' (ID: 538)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -1.1965107917785645
    2. '   ' → logprob: -1.3215107917785645
    3. ' parts' → logprob: -1.5715107917785645
    4. ' line' → logprob: -2.3215107917785645
    5. ' fields' → logprob: -3.0715107917785645
    6. ' tokens' → logprob: -4.3215107917785645
    7. ' vals' → logprob: -4.4465107917785645
    8. ' data' → logprob: -4.4465107917785645
    9. ' if' → logprob: -4.8215107917785645
    10. ' v' → logprob: -5.1965107917785645

Token 81: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.39461827278137207
    2. ' line' → logprob: -1.144618272781372
    3. 'line' → logprob: -5.519618034362793
    4. 'not' → logprob: -6.394618034362793
    5. ' ' → logprob: -6.894618034362793
    6. ''' → logprob: -7.644618034362793
    7. ' '' → logprob: -8.019618034362793
    8. ' len' → logprob: -8.894618034362793
    9. '"' → logprob: -11.269618034362793
    10. ' "' → logprob: -11.269618034362793

Token 82: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6366365551948547
    2. '.strip' → logprob: -1.38663649559021
    3. '.startswith' → logprob: -1.51163649559021
    4. '.rstrip' → logprob: -8.136636734008789
    5. ' .' → logprob: -9.136636734008789
    6. 'startswith' → logprob: -10.261636734008789
    7. '.endswith' → logprob: -10.636636734008789
    8. '.split' → logprob: -13.386636734008789
    9. ' ' → logprob: -13.386636734008789
    10. 'strip' → logprob: -13.636636734008789

Token 83: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.025194834917783737
    2. '()' → logprob: -3.7751948833465576
    3. '()==' → logprob: -6.4001946449279785
    4. ':' → logprob: -9.025195121765137
    5. '():
' → logprob: -9.900195121765137
    6. ' ():' → logprob: -10.025195121765137
    7. '==' → logprob: -10.775195121765137
    8. ' ==' → logprob: -10.900195121765137
    9. '()>' → logprob: -11.900195121765137
    10. '(' → logprob: -12.025195121765137

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009214656893163919
    2. ' ' → logprob: -8.375921249389648
    3. '    ' → logprob: -8.625921249389648
    4. '        
' → logprob: -9.125921249389648
    5. '   ' → logprob: -9.375921249389648
    6. ' tokens' → logprob: -9.875921249389648
    7. '	   ' → logprob: -10.375921249389648
    8. '      ' → logprob: -10.500921249389648
    9. ' parts' → logprob: -10.625921249389648
    10. ',' → logprob: -10.625921249389648

Token 85: ' l' (ID: 305)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.3481396436691284
    2. ' parts' → logprob: -1.7231396436691284
    3. ' values' → logprob: -1.7231396436691284
    4. ' v' → logprob: -1.9731396436691284
    5. 'v' → logprob: -2.723139762878418
    6. 'value' → logprob: -2.723139762878418
    7. ' val' → logprob: -3.598139762878418
    8. 'values' → logprob: -4.223139762878418
    9. ' left' → logprob: -4.723139762878418
    10. ' fields' → logprob: -4.848139762878418

Token 86: ',' (ID: 11)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.005492722149938345
    2. 'e' → logprob: -6.005492687225342
    3. 'ine' → logprob: -7.755492687225342
    4. ',' → logprob: -7.755492687225342
    5. '_' → logprob: -7.880492687225342
    6. 'v' → logprob: -8.2554931640625
    7. '_value' → logprob: -8.2554931640625
    8. '_val' → logprob: -8.6304931640625
    9. 'ef' → logprob: -8.7554931640625
    10. ' =' → logprob: -9.1304931640625

Token 87: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28116366267204285
    2. ' r' → logprob: -1.4061636924743652
    3. '_r' → logprob: -12.281163215637207
    4. ' ' → logprob: -12.531163215637207
    5. '	r' → logprob: -14.156163215637207
    6. ' =' → logprob: -14.281163215637207
    7. 'rstrip' → logprob: -14.281163215637207
    8. 'w' → logprob: -14.531163215637207
    9. 's' → logprob: -14.531163215637207
    10. 'v' → logprob: -14.906163215637207

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022828221321106
    2. '=' → logprob: -1.9102282524108887
    3. ',' → logprob: -12.910228729248047
    4. ' ' → logprob: -14.785228729248047
    5. ')' → logprob: -15.160228729248047
    6. '=line' → logprob: -15.410228729248047
    7. '=int' → logprob: -15.910228729248047
    8. ' =
' → logprob: -16.285228729248047
    9. '.' → logprob: -16.410228729248047
    10. '<|end|>' → logprob: -16.910228729248047

Token 89: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.38062262535095215
    2. ' line' → logprob: -1.2556226253509521
    3. 'map' → logprob: -3.630622625350952
    4. 'line' → logprob: -5.505622863769531
    5. ' [' → logprob: -7.255622863769531
    6. '[' → logprob: -8.630622863769531
    7. ' ' → logprob: -9.380622863769531
    8. '[line' → logprob: -9.755622863769531
    9. ' list' → logprob: -10.380622863769531
    10. '   ' → logprob: -11.380622863769531

Token 90: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.02057528868317604
    2. '(' → logprob: -4.520575523376465
    3. '(str' → logprob: -4.895575523376465
    4. '(int' → logprob: -6.270575523376465
    5. '(lambda' → logprob: -10.020575523376465
    6. 'float' → logprob: -10.145575523376465
    7. '(eval' → logprob: -11.020575523376465
    8. '<float' → logprob: -13.020575523376465
    9. 'str' → logprob: -13.270575523376465
    10. '```' → logprob: -13.645575523376465

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1805141121149063
    2. ',line' → logprob: -2.055514097213745
    3. '(line' → logprob: -3.305514097213745
    4. ' ,' → logprob: -8.055514335632324
    5. ')' → logprob: -10.305514335632324
    6. '(' → logprob: -10.305514335632324
    7. ' line' → logprob: -10.555514335632324
    8. '=line' → logprob: -11.180514335632324
    9. '#line' → logprob: -12.055514335632324
    10. '[line' → logprob: -12.430514335632324

Token 92: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14271101355552673
    2. 'line' → logprob: -2.0177109241485596
    3. '	line' → logprob: -11.39271068572998
    4. '(line' → logprob: -11.64271068572998
    5. '[line' → logprob: -12.01771068572998
    6. ')' → logprob: -12.64271068572998
    7. ' ' → logprob: -13.14271068572998
    8. '   ' → logprob: -13.26771068572998
    9. '#line' → logprob: -13.76771068572998
    10. '=line' → logprob: -13.89271068572998

Token 93: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0061699324287474155
    2. '.split' → logprob: -5.25616979598999
    3. '().' → logprob: -7.13116979598999
    4. '.' → logprob: -9.006170272827148
    5. '.rstrip' → logprob: -12.006170272827148
    6. ' .' → logprob: -12.631170272827148
    7. 'strip' → logprob: -12.881170272827148
    8. '.readline' → logprob: -14.631170272827148
    9. '(strip' → logprob: -15.131170272827148
    10. 'split' → logprob: -15.506170272827148

Token 94: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004243773873895407
    2. '()' → logprob: -5.504243850708008
    3. '())
' → logprob: -10.004243850708008
    4. '()))' → logprob: -10.004243850708008
    5. '(' → logprob: -10.379243850708008
    6. ')' → logprob: -10.879243850708008
    7. ' ())' → logprob: -11.379243850708008
    8. '('' → logprob: -12.129243850708008
    9. '()]' → logprob: -12.879243850708008
    10. '())

' → logprob: -13.129243850708008

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20809070765972137
    2. '<|end|>' → logprob: -2.4580907821655273
    3. '        
' → logprob: -2.7080907821655273
    4. '
' → logprob: -3.4580907821655273
    5. '<|end|>' → logprob: -7.083090782165527
    6. '  
' → logprob: -7.458090782165527
    7. ' 
' → logprob: -7.833090782165527
    8. '        ' → logprob: -7.958090782165527
    9. ',' → logprob: -8.208090782165527
    10. ' ' → logprob: -8.333090782165527

Token 96: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.15590156614780426
    2. 'left' (adapté à ' left') → logprob: -2.0309016704559326
    3. '       ' → logprob: -4.9059014320373535
    4. '
' → logprob: -6.7809014320373535
    5. ' cls' → logprob: -6.9059014320373535
    6. 'l' → logprob: -7.1559014320373535
    7. ' lc' → logprob: -7.1559014320373535
    8. ' l' → logprob: -8.155901908874512
    9. 'lc' → logprob: -8.405901908874512
    10. ' cl' → logprob: -8.780901908874512

Token 97: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.053464073687791824
    2. '_class' → logprob: -3.05346417427063
    3. '_category' → logprob: -6.303463935852051
    4. '_index' → logprob: -6.803463935852051
    5. '_idx' → logprob: -7.053463935852051
    6. '_type' → logprob: -8.05346393585205
    7. '_cat' → logprob: -8.55346393585205
    8. '_' → logprob: -9.42846393585205
    9. '_label' → logprob: -9.55346393585205
    10. '_val' → logprob: -9.80346393585205

Token 98: '[class' (ID: 132691)
  Prédit: '[class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[class' → logprob: -0.0006359508261084557
    2. '[' → logprob: -7.375636100769043
    3. ' [' → logprob: -13.125636100769043
    4. '[left' → logprob: -13.625636100769043
    5. 'class' → logprob: -13.750636100769043
    6. '\[' → logprob: -13.875636100769043
    7. '<class' → logprob: -14.125636100769043
    8. '```' → logprob: -14.375636100769043
    9. '[
' → logprob: -14.500636100769043
    10. '[count' → logprob: -14.625636100769043

Token 99: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -3.128163257315464e-07
    2. 'if' → logprob: -16.125
    3. 'fy' → logprob: -16.5
    4. '```' → logprob: -17.0
    5. 'IFY' → logprob: -17.875
    6. 'y' → logprob: -18.0
    7. 'ize' → logprob: -19.125
    8. '(left' → logprob: -19.125
    9. 'left' → logprob: -19.75
    10. '

' → logprob: -20.0

Token 100: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0046977149322628975
    2. '(r' → logprob: -5.879697799682617
    3. '(' → logprob: -6.379697799682617
    4. '](' → logprob: -9.254697799682617
    5. '(left' → logprob: -9.379697799682617
    6. ' (' → logprob: -11.379697799682617
    7. '(int' → logprob: -13.254697799682617
    8. '(L' → logprob: -14.629697799682617
    9. ']' → logprob: -14.879697799682617
    10. '(i' → logprob: -15.004697799682617

Token 101: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009333750349469483
    2. ')' → logprob: -7.0009331703186035
    3. ']' → logprob: -11.000933647155762
    4. ' )' → logprob: -12.500933647155762
    5. '')]' → logprob: -15.625933647155762
    6. ']+=' → logprob: -15.625933647155762
    7. '```' → logprob: -15.750933647155762
    8. '")]' → logprob: -16.000932693481445
    9. '   ' → logprob: -16.125932693481445
    10. ')+' → logprob: -16.125932693481445

Token 102: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20149607956409454
    2. ' +=' → logprob: -1.7014961242675781
    3. ']+=' → logprob: -9.451496124267578
    4. '+' → logprob: -12.951496124267578
    5. '```' → logprob: -14.826496124267578
    6. ')' → logprob: -15.076496124267578
    7. '[' → logprob: -15.201496124267578
    8. '+='' → logprob: -15.326496124267578
    9. '=' → logprob: -15.451496124267578
    10. '   ' → logprob: -15.576496124267578

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.75247573852539
    4. '  ' → logprob: -18.25247573852539
    5. '```' → logprob: -18.25247573852539
    6. '0' → logprob: -18.68997573852539
    7. '+' → logprob: -19.43997573852539
    8. ' ' → logprob: -19.43997573852539
    9. 'left' → logprob: -19.62747573852539
    10. 'int' → logprob: -19.87747573852539

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'right' → logprob: -16.375036239624023
    4. '   ' → logprob: -16.750036239624023
    5. 'left' → logprob: -17.750036239624023
    6. '```' → logprob: -17.750036239624023
    7. '  ' → logprob: -18.687536239624023
    8. '+' → logprob: -19.500036239624023
    9. '0' → logprob: -19.500036239624023
    10. '>' → logprob: -19.625036239624023

Token 105: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011641870252788067
    2. '
' → logprob: -4.511641979217529
    3. '        
' → logprob: -8.386641502380371
    4. '<|end|>' → logprob: -8.886641502380371
    5. '  
' → logprob: -9.886641502380371
    6. 'right' → logprob: -10.136641502380371
    7. ' 
' → logprob: -10.511641502380371
    8. '```' → logprob: -10.761641502380371
    9. ' ' → logprob: -11.136641502380371
    10. ' right' → logprob: -11.261641502380371

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055263735353946686
    2. 'right' → logprob: -3.0552637577056885
    3. ' right' → logprob: -5.305263519287109
    4. '
' → logprob: -6.680263519287109
    5. '        
' → logprob: -8.68026351928711
    6. '	right' → logprob: -9.55526351928711
    7. '[right' → logprob: -10.05526351928711
    8. '   ' → logprob: -10.68026351928711
    9. '```' → logprob: -11.05526351928711
    10. ' ' → logprob: -11.43026351928711

Token 107: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.006718690041452646
    2. ' right' → logprob: -5.006718635559082
    3. '       ' → logprob: -12.756718635559082
    4. '	right' → logprob: -15.381718635559082
    5. 'r' → logprob: -16.6317195892334
    6. '   ' → logprob: -16.8817195892334
    7. '           ' → logprob: -17.5067195892334
    8. 'Right' → logprob: -17.7567195892334
    9. ' ' → logprob: -17.8817195892334
    10. 'left' → logprob: -18.1317195892334

Token 108: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -13.62500286102295
    3. ')_' → logprob: -14.75000286102295
    4. '_' → logprob: -15.62500286102295
    5. ']_' → logprob: -15.62500286102295
    6. ''_' → logprob: -16.500001907348633
    7. ' _' → logprob: -16.750001907348633
    8. '_c' → logprob: -16.875001907348633
    9. '_scores' → logprob: -17.000001907348633
    10. '\' → logprob: -17.125001907348633

Token 109: '[class' (ID: 132691)
  Prédit: '[class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[class' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. '<class' → logprob: -15.25000286102295
    4. ' [' → logprob: -15.62500286102295
    5. '[c' → logprob: -18.750003814697266
    6. '```' → logprob: -19.125003814697266
    7. '(class' → logprob: -19.250003814697266
    8. '[count' → logprob: -19.875003814697266
    9. '@class' → logprob: -19.875003814697266
    10. '[
' → logprob: -20.250003814697266

Token 110: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -1.0564331205387134e-05
    2. 'fy' → logprob: -11.62501049041748
    3. 'class' → logprob: -13.75001049041748
    4. '(class' → logprob: -15.62501049041748
    5. '```' → logprob: -16.125011444091797
    6. '(r' → logprob: -16.625011444091797
    7. '(' → logprob: -17.125011444091797
    8. 'f' → logprob: -17.500011444091797
    9. 'ifye' → logprob: -17.500011444091797
    10. 'IFY' → logprob: -17.625011444091797

Token 111: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.000017166137695
    3. ')(' → logprob: -15.750017166137695
    4. ' (' → logprob: -15.750017166137695
    5. ')' → logprob: -16.250017166137695
    6. 'r' → logprob: -17.500017166137695
    7. '(
' → logprob: -17.625017166137695
    8. '(right' → logprob: -19.000017166137695
    9. '```' → logprob: -19.750017166137695
    10. '(rhs' → logprob: -19.875017166137695

Token 112: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.968312951968983e-06
    2. ')' → logprob: -12.500009536743164
    3. ' )' → logprob: -12.625009536743164
    4. ']' → logprob: -13.250009536743164
    5. '   ' → logprob: -14.500009536743164
    6. '       ' → logprob: -16.250009536743164
    7. '])' → logprob: -16.250009536743164
    8. '')]' → logprob: -16.250009536743164
    9. ' ' → logprob: -16.625009536743164
    10. '    ' → logprob: -16.875009536743164

Token 113: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.043371498584747314
    2. ' +=' → logprob: -3.1683714389801025
    3. ']+=' → logprob: -8.418371200561523
    4. '+' → logprob: -9.293371200561523
    5. ' ' → logprob: -11.168371200561523
    6. '   ' → logprob: -11.543371200561523
    7. '[' → logprob: -11.668371200561523
    8. '```' → logprob: -11.793371200561523
    9. ')' → logprob: -12.043371200561523
    10. '  ' → logprob: -12.293371200561523

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488273501396179
    2. ' ' → logprob: -2.929882764816284
    3. '   ' → logprob: -14.929883003234863
    4. '  ' → logprob: -16.554882049560547
    5. '```' → logprob: -17.429882049560547
    6. '0' → logprob: -17.679882049560547
    7. ' ' → logprob: -18.117382049560547
    8. ')' → logprob: -18.304882049560547
    9. '(' → logprob: -18.304882049560547
    10. '１' → logprob: -18.429882049560547

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -16.812545776367188
    4. '   ' → logprob: -16.875045776367188
    5. ')' → logprob: -18.312545776367188
    6. '  ' → logprob: -18.437545776367188
    7. '0' → logprob: -18.625045776367188
    8. '１' → logprob: -18.875045776367188
    9. '(' → logprob: -19.062545776367188
    10. '<|end|>' → logprob: -19.062545776367188

Token 116: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08769769966602325
    2. '<|end|>' → logprob: -2.712697744369507
    3. 'for' → logprob: -4.837697505950928
    4. '
' → logprob: -4.962697505950928
    5. '```' → logprob: -7.212697505950928
    6. 'total' → logprob: -7.837697505950928
    7. '\n' → logprob: -8.587697982788086
    8. 'continue' → logprob: -8.712697982788086
    9. ' for' → logprob: -8.712697982788086
    10. 'sum' → logprob: -8.837697982788086

Token 117: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25344860553741455
    2. 'for' → logprob: -1.6284486055374146
    3. 'total' → logprob: -3.753448486328125
    4. 'import' → logprob: -5.878448486328125
    5. 'left' → logprob: -7.628448486328125
    6. '```' → logprob: -8.628448486328125
    7. '#' → logprob: -9.003448486328125
    8. 'sum' → logprob: -9.503448486328125
    9. 'output' → logprob: -9.753448486328125
    10. 'result' → logprob: -9.753448486328125

Token 118: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07926571369171143
    2. 'i' → logprob: -2.579265594482422
    3. ' c' → logprob: -8.829265594482422
    4. '_' → logprob: -9.704265594482422
    5. ' ' → logprob: -9.954265594482422
    6. 'c' → logprob: -10.204265594482422
    7. ' _' → logprob: -10.579265594482422
    8. ' cls' → logprob: -11.454265594482422
    9. ' category' → logprob: -11.579265594482422
    10. ' range' → logprob: -12.079265594482422

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032134840730577707
    2. 'in' → logprob: -5.753213405609131
    3. ' ' → logprob: -10.378213882446289
    4. ',' → logprob: -12.753213882446289
    5. 'range' → logprob: -13.878213882446289
    6. '	in' → logprob: -15.003213882446289
    7. ' range' → logprob: -15.628213882446289
    8. ' i' → logprob: -17.00321388244629
    9. ' ,' → logprob: -17.00321388244629
    10. '  ' → logprob: -17.12821388244629

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000805341056548059
    2. ' range' → logprob: -7.125805377960205
    3. ' ' → logprob: -15.250804901123047
    4. '	range' → logprob: -15.250804901123047
    5. '   ' → logprob: -15.750804901123047
    6. '```' → logprob: -16.125804901123047
    7. '(range' → logprob: -16.875804901123047
    8. '  ' → logprob: -17.375804901123047
    9. '[' → logprob: -17.875804901123047
    10. ' xrange' → logprob: -17.875804901123047

Token 121: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1888679839321412e-05
    2. '(len' → logprob: -10.750021934509277
    3. '(
' → logprob: -15.875021934509277
    4. '4' → logprob: -16.00002098083496
    5. ' (' → logprob: -16.50002098083496
    6. '<|end|>' → logprob: -17.62502098083496
    7. 'len' → logprob: -18.62502098083496
    8. '```' → logprob: -20.62502098083496
    9. '(-' → logprob: -21.00002098083496
    10. '("' → logprob: -21.25002098083496

Token 122: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.554343366995454e-05
    2. 'len' → logprob: -9.625085830688477
    3. ' ' → logprob: -10.875085830688477
    4. ' len' → logprob: -15.125085830688477
    5. '   ' → logprob: -16.125085830688477
    6. '```' → logprob: -16.500085830688477
    7. ')' → logprob: -16.750085830688477
    8. '
' → logprob: -18.000085830688477
    9. '(' → logprob: -18.062585830688477
    10. '0' → logprob: -18.500085830688477

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026460483204573393
    2. '):
' → logprob: -6.127645969390869
    3. ':' → logprob: -7.877645969390869
    4. ')' → logprob: -9.752646446228027
    5. ' ):' → logprob: -10.752646446228027
    6. ']:' → logprob: -14.377646446228027
    7. '):
' → logprob: -14.627646446228027
    8. '}:' → logprob: -15.127646446228027
    9. ':
' → logprob: -16.12764549255371
    10. '+' → logprob: -16.12764549255371

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004844154173042625
    2. 'print' → logprob: -7.750484466552734
    3. ' print' → logprob: -10.000484466552734
    4. '	print' → logprob: -13.000484466552734
    5. '    
' → logprob: -13.125484466552734
    6. '<|end|>' → logprob: -13.250484466552734
    7. '```' → logprob: -13.625484466552734
    8. '       ' → logprob: -14.250484466552734
    9. '   ' → logprob: -15.500484466552734
    10. '    ' → logprob: -17.000484466552734

Token 125: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.35075345635414124
    2. ' print' → logprob: -1.8507534265518188
    3. '   ' → logprob: -1.9757534265518188
    4. '```' → logprob: -10.350753784179688
    5. '	print' → logprob: -10.725753784179688
    6. '    
' → logprob: -12.475753784179688
    7. '
' → logprob: -12.850753784179688
    8. ' if' → logprob: -14.100753784179688
    9. ' sys' → logprob: -14.100753784179688
    10. '       ' → logprob: -14.225753784179688

Token 126: '(left' (ID: 32958)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4430920481681824
    2. '(left' → logprob: -1.4430921077728271
    3. '(' → logprob: -2.193092107772827
    4. 'left' → logprob: -5.318091869354248
    5. '(i' → logprob: -5.693091869354248
    6. '('' → logprob: -6.818091869354248
    7. 'f' → logprob: -7.443091869354248
    8. '("' → logprob: -8.818092346191406
    9. '(
' → logprob: -10.443092346191406
    10. '()' → logprob: -11.318092346191406

Token 127: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -9.233804303221405e-05
    2. ''_' → logprob: -9.750092506408691
    3. 'f' → logprob: -11.500092506408691
    4. '"_' → logprob: -11.625092506408691
    5. 'counts' → logprob: -12.750092506408691
    6. '```' → logprob: -12.750092506408691
    7. ')_' → logprob: -13.500092506408691
    8. '_scores' → logprob: -13.875092506408691
    9. 'i' → logprob: -14.500092506408691
    10. ')' → logprob: -14.500092506408691

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.875000953674316
    3. ' [' → logprob: -15.125000953674316
    4. ')' → logprob: -15.625000953674316
    5. ',i' → logprob: -16.000001907348633
    6. ',' → logprob: -16.625001907348633
    7. ')[' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '[
' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 129: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015395984053611755
    2. ' ,' → logprob: -4.6403961181640625
    3. ',right' → logprob: -5.2653961181640625
    4. ',end' → logprob: -8.015396118164062
    5. ',left' → logprob: -9.515396118164062
    6. ')' → logprob: -10.640396118164062
    7. '   ' → logprob: -11.890396118164062
    8. ',r' → logprob: -11.890396118164062
    9. ',",' → logprob: -12.015396118164062
    10. ' ' → logprob: -12.890396118164062

Token 130: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0009152670972980559
    2. ' right' → logprob: -7.000915050506592
    3. ',right' → logprob: -12.75091552734375
    4. 'end' → logprob: -14.75091552734375
    5. '	right' → logprob: -15.87591552734375
    6. '   ' → logprob: -16.50091552734375
    7. '(right' → logprob: -16.75091552734375
    8. 'r' → logprob: -17.37591552734375
    9. ' ' → logprob: -17.37591552734375
    10. ')' → logprob: -17.50091552734375

Token 131: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.3856492842023727e-06
    2. 'counts' → logprob: -14.250000953674316
    3. ')_' → logprob: -16.125001907348633
    4. 't' → logprob: -16.250001907348633
    5. 'right' → logprob: -16.375001907348633
    6. ')' → logprob: -16.625001907348633
    7. ''_' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. '_right' → logprob: -17.250001907348633
    10. 'Counts' → logprob: -17.375001907348633

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. ' [' → logprob: -16.0
    4. '```' → logprob: -17.0
    5. ')[' → logprob: -17.75
    6. '[
' → logprob: -18.25
    7. '[I' → logprob: -18.375
    8. 'i' → logprob: -19.5
    9. ')' → logprob: -20.75
    10. '[int' → logprob: -20.875

Token 133: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -13.375003814697266
    3. '))' → logprob: -13.625003814697266
    4. ',' → logprob: -14.875003814697266
    5. '')' → logprob: -15.750003814697266
    6. ')`' → logprob: -15.750003814697266
    7. ')")' → logprob: -15.875003814697266
    8. ')
' → logprob: -16.000003814697266
    9. ',)' → logprob: -16.625003814697266
    10. '),' → logprob: -16.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 117
Précision stricte (1ère position): 47.33%
Précision adaptée (1ère position): 49.62%
Précision (top 10): 89.31%
================================================================================
